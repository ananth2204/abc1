{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011650000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE292.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE292.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x03'", "DS1TRBAL": "b'\\xc0\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xfc\\x00\\x00\\x01\\xfc\\x00\\x04\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x973/\\x00\\x973/\\x15C\\x00\\r\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1997-11-28T00:00:00", "modifydate": "1997-11-28T15:43:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": " This file - File 292 - is from David Fahey of the SAS Institute,\n and contains a SAS program to convert the CBT Documentation File,\n which is File 001 of the CBT Tape, to HTML format, so it can be\n viewed under Netscape, etc.\n\n      David Fahey       email:  sasddf@unx.sas.com\n\n\n\n\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBT2HTML": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x973/\\x00\\x973/\\x15@\\x05\\x01\\x05\\x01\\x00\\x00\\xc4`\\xc6\\xc1\\xc8\\xc5\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1997-11-28T00:00:00", "modifydate": "1997-11-28T15:40:00", "lines": 1281, "newlines": 1281, "modlines": 0, "user": "D-FAHEY"}, "text": "/*-----------------------------------------------------------------*/\n/* Program:  CBT2HTML                                              */\n/* Author:   David Fahey                                           */\n/* Date:     12/20/95                                              */\n/* Purpose:  Converts the CBT tape file 1 text into a series       */\n/*           of HTML files that can be accessed with a browser     */\n/*           like Mosaic or Netscape.                              */\n/* Notes: 1. This is probably only of any use for those people     */\n/*           who have UNIX of PC Mosaic or Netscape.               */\n/*        2. The text is converted to lower case as well as I      */\n/*           could be bothered to do. This unfortunately causes    */\n/*           some text that should have remained upper case        */\n/*           to look bad, in particular names that are not in the  */\n/*           name list below. This is simple to fix - just add the */\n/*           name to the list, however it is a burden to maintain. */\n/*-----------------------------------------------------------------*/\n\n/*-----------------------------------------------------------------*/\n/* Store a list of words to keep upper case.                       */\n/*-----------------------------------------------------------------*/\n data uwords ;\n   infile cards ;\n   length start label $ 20 ;\n   fmtname = '$UWORD' ;\n   if _n_ = 1 then\n     do ;\n       start = 'OTHER' ;\n       label = ' ' ;\n       output ;\n     end ;\n   input @1 start $char20. ;\n   label = start ;\n   output ;\n   cards ;\nAIM\nAMS\nAOF\nAPF\nASM\nALGOL\nAPAR\nAPPL\nASCII\nASID\nBLDL\nBPI\nCBT\nCICS\nCLIST\nCLISTS\nCLPA\nCMD\nCOBOL\nCPU\nCRAY\nCRT\nCSA\nCSI\nCVAF\nDASD\nDCB\nDD\nDEC\nDFHSM\nDFP\nDFSORT\nDITTO\nDOC\nDOS\nDSCB\nDSN\nDSNAME\nDSORG\nDSS\nDYN\nECT\nEDS\nESA\nETPS\nEXEC\nFACOM\nF4\nFB\nFDR\nFDRDSF\nFMID\nFRR\nGDG\nGMT\nGRS\nGTE\nGTSIZE\nHSM\nI\nIBM\nICF\nIDMS\nIDRC\nIEAIPS\nIEAVMXIT\nIEBASAP\nIEBCOPY\nIEBUPDTE\nIECTDEBX\nIEECVXIT\nIEF\nIEFACTRT\nIEFUTL\nIEFVPP\nIEHMAP\nIEHPROGM\nIEV\nIEZCTGFL\nIEZDEB\nIFOX\nIGGPRE\nIGGPREOO\nIHADCB\nIHASTOW\nIKJEFT00\nIKJEFTSR\nIKJTABLS\nIMS\nINMRZ\nINTEL\nIODF\nIPL\nIPO\nISN\nISP\nISR\nISPCALL\nISPEXEC\nISPF\nISPFPRIM\nISPLLIB\nISPMODE\nISPOPTA\nISPPLIB\nISPPUP\nISPSTART\nISRALTK\nISRCTBL\nISREDIT\nISRUOL\nISRUOLJH\nISRYDTBL\nISRYXD\nJCL\nJCT\nJES\nJES2\nJES3\nLCMA\nLISTA\nLISTALC\nLISTC\nLISTCAT\nLISTDD\nLISTFILE\nLISTGDGC\nLISTGDGP\nLISTICAT\nLISTPDS\nLISTPTF\nLISTS\nLISTSPC\nLISTV\nLISTVOL\nLLA\nLPA\nLPALIB\nLRECL\nMACLIB\nMCI\nMCS\nMCRB\nMPF\nMPL\nMVS\nMVSCP\nNAS\nNASA\nNASPA\nNJE\nOS\nOZ\nPDF\nPDS\nPDSE\nPDSLOAD\nPDSXREF\nPGM\nPGMS\nPLI\nPROC\nPROCLIB\nPTF\nPUTXREF\nQDOC\nQISP\nQSTART\nRACF\nRACFUSER\nRECFM\nREXX\nRMF\nSAF\nSAS\nSDSF\nSHOWMVS\nSL\nSLAC\nSLSS\nSMF\nSMP\nSMPE\nSMPETOOL\nSMPINST\nSMPSCAN\nSPF\nSPLA\nSQA\nSRB\nSRM\nSTC\nSVC\nSWA\nSYSEVENT\nSYSIN\nSYSLOG\nSYSMOD\nSYSOUT\nSYSPRINT\nTAPEMAP\nTAPECOPY\nTAPESCAN\nTCAM\nTLMS\nTMP\nTSO\nTSOE\nTSSO\nUADS\nUCB\nUCLA\nUK\nUSA\nUSAF\nVB\nVIO\nVIP\nVM\nVPS\nVS\nVSE\nVSAM\nVSMDUMP\nVTAM\nVTOC\nVTOCFORM\nVTOCS\nWTO\nXA\nXEQ\nXREF\nXREFASM\nXWTR\nZAP\nZAPS\n ;\n run ;\n proc sort data=uwords ;\n   by start ;\n run ;\n proc format cntlin=uwords ;\n run ;\n\n/*-----------------------------------------------------------------*/\n/* Store a list of names.                                          */\n/*-----------------------------------------------------------------*/\n data names ;\n   infile cards ;\n   length start label $ 20 ;\n   fmtname = '$NAME' ;\n   if _n_ = 1 then\n     do ;\n       start = 'OTHER' ;\n       label = ' ' ;\n       output ;\n     end ;\n   input @1 start $char20. ;\n   label = start ;\n   output ;\n   cards ;\nAKRON\nALAN\nALASKA\nALBERTELLI\nALLEGANY\nALLEGRAN\nAMARILLO\nAMDHAL\nAMES\nANDERSON\nANDREWS\nANGELES\nANTONIO\nARIZONA\nARNIE\nARNOLD\nARON\nARTHUR\nATLANTA\nAUSTRALIA\nBALMER\nBELLCORE\nBERGEN\nBILL\nBLALOCK\nBOB\nBOSTON\nBRIAN\nBRIDGESTONE\nBROIDO\nBROOKLYN\nBROOKS\nBRUCE\nBRUNSWIG\nBRYANT\nBURBANK\nBURLINGAME\nCALGARY\nCALIFORNIA\nCAMERON\nCANADA\nCANNATELLO\nCARMINE\nCAROLINA\nCARTWRIGHT\nCASINGHINO\nCHARLES\nCHENG\nCHICAGO\nCHRIST\nCHRYSLER\nCHUCK\nCITIBANK\nCLARA\nCLARK\nCLEARY\nCLEMSON\nCLEVELAND\nCOCA\nCOLA\nCOLDFIELD\nCOLE\nCOLORADO\nCOLUMBIA\nCOLUMBUS\nCOMMONWEALTH\nCOMNET\nCOMPUSOURCE\nCOMPUWARE\nCONFREY\nCONNECTICUT\nCONRAIL\nCRAIG\nCRUZAN\nCUNY\nDALLAS\nDAN\nDARS\nDAVID\nDAVIS\nDAYCO\nDAYTON\nDEAN\nDENNIS\nDENVER\nDIANE\nDICK\nDIEGO\nDIEHL\nDON\nDUNN\nDUTTMAN\nDYCK\nELI\nENGLAND\nENRON\nERIC\nERWIN\nEUGENE\nFAHEY\nFARGO\nFARINEAU\nFLORIDA\nFOCHTMAN\nFOLKS\nFRANCISCO\nFRANK\nFRANKLIN\nFRED\nFRITO\nGAINESVILLE\nGENE\nGEOFFREY\nGEORGE\nGEORGIA\nGILBERT\nGIVNER\nGLOUCESTERSHIRE\nGODDARD\nGODFREY\nGOLOB\nGOODRICH\nGREG\nGRUM\nGUY\nHANCOCK\nHARMON\nHAROLD\nHARRIS\nHARRISON\nHARTFORD\nHAWTHORNE\nHCPRIO\nHECOX\nHENRY\nHENTRY\nHITACHI\nHOFFMAN\nHOLLYHURST\nHOLLYWOOD\nHOOPER\nHORTON\nHOSKINS\nHOUSTON\nHOWARD\nHOWE\nHOWELL\nHUGH\nHUNTER\nHYATTSVILLE\nIAPPINI\nILLINOIS\nINDIANAPOLIS\nIRVINE\nJESUS\nJIM\nJOHN\nKALINICH\nKARL\nKARLIN\nKEITH\nKEN\nKERMIT\nKEVIN\nKIM\nKINGSPORT\nKISER\nKLEEVES\nKLINGON\nKOSTANSKI\nKRAFT\nKVAERNER\nKWASHA\nLAKEWOOD\nLARRY\nLAURELWOOD\nLELAND\nLEONARD\nLEW\nLEWIS\nLINDA\nLION\nLIONEL\nLIPTON\nLISLE\nLOS\nLOUIS\nLOUISIANA\nLUTHERAN\nLYSAKER\nMACDONALD\nMAHWAH\nMAKITA\nMANDS\nMANITOBA\nMARQUARDT\nMARSHALL\nMARVIN\nMARX\nMARY\nMARYLAND\nMASSACHUSETTS\nMATAO\nMCINTYRE\nMCLEAN\nMEIJER\nMELBOURNE\nMELLON\nMESQUITE\nMEXICO\nMIA\nMIAMI\nMICHAEL\nMICHIGAN\nMIDLANDS\nMILTON\nMILWAUKEE\nMINNESOTA\nMISSOURI\nMITCHELL\nMOE\nMORRIS\nMORTON\nMURPHY\nMURRAY\nNEAL\nNEBRASKA\nNEWSWEEK\nNORTHROP\nNORWAY\nNOVA\nOHIO\nOKALAHOMA\nOLSON\nOLYMPIA\nOMAHA\nONTARIO\nOREGON\nORLEANS\nOSDEBE\nOVIEDO\nPACFIC\nPACIFIC\nPAJERSKI\nPALADIN\nPALO\nPAT\nPAUL\nPEGGY\nPENELOPE\nPENN\nPENNSYLVANIA\nPETRILLO\nPHILADELPHIA\nPHILIPS\nPHOENIX\nPLANO\nPORTLAND\nRAMAS\nRANDALL\nREVLON\nRICK\nROB\nROBERT\nROBINSON\nROCKVILLE\nROCKWELL\nROCKY\nROMANO\nRON\nROSS\nSABEL\nSACRAMENTO\nSAINT\nSAINTS\nSALISBURY\nSAM\nSAN\nSANTA\nSCHUDEL\nSCHUDELL\nSCHWAB\nSCOTT\nSEATTLE\nSHMUEL\nSIRKIS\nSMITH\nSQUILLACE\nSUNGARD\nSUNNYVALE\nSUNOCO\nSYNECTICS\nSYNTELLIGENCE\nSYNTEX\nTANSKY\nTEXACO\nTEXAS\nTHIOKOL\nTOMIAK\nTORONTO\nTREASURY\nTREXLERTOWN\nUNGER\nVANCOUVER\nVANDERWALL\nVICTORIA\nVIRGINIA\nWASHINGTON\nWATERLOO\nYASUNA\nYORK\nZBIEGIEN\nZEROX\n ;\n run ;\n proc sort data=names ;\n   by start ;\n run ;\n proc format cntlin=names ;\n run ;\n\n/*-----------------------------------------------------------------*/\n/* Store a list of words to omit from the index.                   */\n/* Note: \"OTHER\" is a special word, dont put it in the list.       */\n/*-----------------------------------------------------------------*/\n data notidxwd ;    /* store a list of words not to index */\n   infile cards ;\n   length start label $ 20 ;\n   fmtname = '$NOTIDX' ;\n   if _n_ = 1 then\n     do ;\n       start = 'OTHER' ;\n       label = ' ' ;\n       output ;\n     end ;\n   input @1 start $char20. ;\n   label = start ;\n   output ;\n   cards ;\nABLE\nABOUT\nABOVE\nADD\nADDED\nADDITION\nADDITIONAL\nADDRESS\nADDRESSES\nADVANCE\nADVANCED\nADVANTAGE\nAFTER\nAGAIN\nALL\nALLOW\nALLOWS\nALMOST\nALONE\nALONG\nALREADY\nALRIGHT\nALSO\nALWAYS\nAM\nAMONG\nAMOUNT\nAN\nAND\nANOTHER\nANY\nANYONE\nANYBODY\nANYWAY\nAPPEAR\nAPPEARS\nAPPLIED\nAPPLY\nARE\nAROUND\nAS\nASSOCIATED\nASSOCIATION\nASSUME\nASSUMED\nAT\nATTEMPT\nAUTO\nAUTOMATIC\nAUTOMATE\nAVAILABLE\nAVENUE\nBASE\nBASED\nBE\nBEACH\nBEEN\nBEFORE\nBELOW\nBETTER\nBETWEEN\nBOTH\nBRING\nBUT\nBY\nCALL\nCALLED\nCAME\nCAN\nCENTER\nCHANGE\nCHANGED\nCHANGES\nCHARACTER\nCHARACTERS\nCLEAR\nCOME\nCOMES\nFOR\nFROM\nGET\nGIVE\nGO\nHAD\nHAS\nHAVE\nHERE\nHIS\nHOLD\nHOPE\nHOW\nHOWEVER\nIF\nIN\nINFO\nINFORMATION\nINSTEAD\nINTO\nIS\nIT\nITS\nKEEP\nKNOW\nLARGE\nLAST\nLIKE\nLINE\nMADE\nMAKE\nMANY\nME\nMINOR\nMOD\nMODIFICATION\nMODIFICATIONS\nMODIFIED\nMODS\nMORE\nMOST\nMR\nMUCH\nMUST\nMY\nNAME\nNAMED\nNAMES\nNEAR\nNEED\nNEEDED\nNEW\nNICE\nNO\nNON\nNOT\nNOTE\nNOW\nNUMBER\nOBTAIN\nOF\nOLD\nON\nONE\nONLY\nOR\nOTHERS\nOTHERWISE\nOUR\nOUT\nOWN\nPART\nPEOPLE\nPERSON\nPERSONS\nPERTAIN\nPLEASE\nPOSSIBLE\nPRE\nPREVIOUS\nPREVIOUSLY\nPROBABLY\nPROBLEM\nPROBLEMS\nPUT\nQUICK\nQUIZ\nRE\nREFLECT\nREGIONAL\nRELATED\nRELEASE\nRELEASES\nREMOVAL\nREMOVE\nREMOVED\nREPLACE\nREPLACEMENT\nREST\nRUN\nRUNNING\nSAME\nSAMPLE\nSAMPLES\nSAVE\nSECTION\nSEE\nSERIES\nSET\nSEVERAL\nSHORT\nSHOULD\nSINCE\nSO\nSOME\nSOMEBODY\nSOMEONE\nSOMETHING\nSOMETIMES\nSOMEWHERE\nSTILL\nSTUFF\nSUCH\nSUPPORT\nSUPPORTED\nSUPPORTING\nSUPPORTS\nTAKE\nTHAN\nTHANK\nTHANKS\nTHAT\nTHE\nTHEIR\nTHEM\nTHEMSELVES\nTHEN\nTHERE\nTHEREFORE\nTHEREIN\nTHESE\nTHEY\nTHING\nTHINGS\nTHINK\nTHIS\nTHOSE\nTHOUGH\nTHROUGH\nTHRU\nTO\nTOO\nTRY\nTRYING\nUNDER\nUNTIL\nUP\nUPDATE\nUPDATED\nUS\nUSE\nUSED\nUSEFUL\nUSES\nUSING\nVERY\nWAS\nWANT\nWAY\nWE\nWELL\nWELLS\nWENT\nWERE\nWHAT\nWHEN\nWHERE\nWHICH\nWHILE\nWHO\nWHOSE\nWHY\nWILL\nWISH\nWITH\nWITHIN\nWITHOUT\nWOULD\nYOU\nYOUR\n ;\n run ;\n proc sort data=notidxwd ;\n   by start ;\n run ;\n proc format cntlin=notidxwd ;\n run ;\n\n/*-----------------------------------------------------------------*/\n/* Process the CBT file 1 data.                                    */\n/*-----------------------------------------------------------------*/\n filename in '/u/sasddf/cbt.data' ;\n data cbtcont (keep= sectname longname lineno )\n      cbtindex(keep= sectname word )\n      cbtdata (keep= sectname text )\n      ;\n   length sectname $ 20 ;   /* current section */\n   length word $ 20 ;       /* current word */\n   length tempword $ 20 ;   /* scratch var for word */\n   length text $ 65 ;       /* output text string */\n   length line $ 80 ;       /* input line string */\n   length longname $ 60 ;   /* long section name */\n\n   retain olx 0 ;           /* ordered list index/flag */\n   retain para 0 ;          /* new para seen flag */\n   retain sentence 0 ;      /* new sentence flag */\n   retain rule 0 ;          /* horiz. rule flag */\n   retain pre 0 ;           /* preformatted flag */\n   retain valid 0 ;         /* seen start of data */\n   retain sectname ' ' ;    /* current section */\n   retain secttype ' ' ;    /* current section type */\n   infile in ;\n\n   input @1 sect $char9. @ ;\n\n * if _n_ > 9060 then stop ;  /* debugging statement only */\n\n   if valid = 0 then\n     if sect = '//***CBT ' then\n       valid = 1 ;\n\n   if valid = 1 then   /* found start of good data */\n     do ;\n       lineno = _n_ ;\n       input @4 line $char65. @ ;\n       select(sect) ;\n         when('//***CBT ')\n           do ;\n             link esect ;\n             secttype = 'C' ;\n             sectname = 'CBT_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n         when('//***TAPE')\n           do ;\n             link esect ;\n             secttype = 'T' ;\n             sectname = 'TAPE_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n\n         when('//***USIN')\n           do ;\n             link esect ;\n             secttype = 'U' ;\n             sectname = 'USING_'||scan(line,3,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n\n         when('//***REGU')\n           do ;\n             link esect ;\n             secttype = 'R' ;\n             sectname = 'REGULAR_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n\n         when('//***NEWS')\n           do ;\n             link esect ;\n             secttype = 'N' ;\n             sectname = 'NEWS_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n\n         when('//***SECT')\n           do ;\n             link esect ;\n             secttype = 'S' ;\n             sectname = scan(line,2,'* ') ;\n             if substr(sectname,1,2) = 'V-' then\n               sectname = 'SECTION_VER_'||scan(line,3,'-* ') ;\n             else\n               sectname = 'SECTION_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> '||trim(longname)||' </H1>' ;\n             output cbtdata ;\n           end ;\n\n         when('//***FILE')\n           do ;\n             link esect ;\n             secttype = 'F' ;\n             sectname = 'FILE_'||scan(line,2,'* ') ;\n             input @6 longname $char60. @ ;\n             output cbtcont ;\n             link title ;\n             text = '<H1> File '||scan(line,2,'* ')||' </H1>' ;\n             output cbtdata ;\n             para = 1 ;         /* indicate new para */\n             sentence = 1 ;     /* indicate new sentence */\n             line = longname ;  /* remove ** */\n             link makelow ;\n             output cbtdata ;\n           end ;\n\n         otherwise  /* not a section header */\n           do ;     /* process section body text */\n             input @5  dd1 $char2.\n                   @66 dd2 $char2.\n                   @9  hr  $char54. @ ;\n             if dd1 = ' -' and dd2 = '- ' then\n               input @10 line $char52. @ ;\n             if dd1 = '--' and dd2 = '--' then\n               input @7 line $char58. @ ;\n\n             if hr = repeat(' ',54) then  /* found blank line */\n               do ;  /* emit html <P> paragraph */\n                 if para = 0 then    /* indicate new para seen */\n                   do ;\n                     text = '<P>' ;\n                     output cbtdata ;\n                     para = 1 ;     /* indicate new para seen */\n                     sentence = 1 ;   /* indicate new sentence ahead */\n                   end ;\n               end ;\n             else if verify(hr,' -*=+)(&\u00ac%#!') = 0 then\n               do ;  /* emit html <HR> horiz.rule */\n                 if rule = 0 then\n                   do ;\n                     text = '<HR>' ;\n                     output cbtdata ;\n                     rule = 1 ;     /* indicate first horiz rule */\n                     sentence = 1 ;   /* indicate new sentence ahead */\n                   end ;\n               end ;\n             else    /* process a line of text from section */\n               do ;\n                 /* check line for E X P A N D E D text - then dont reformat */\n                 i = 1 ;\n                 exp = 1 ;\n                 word = scan(line,i,' ');\n                 do while(word\u00ac=' ') ;\n                   if length(word) > 1 then\n                     exp = 0 ;\n                   i = i + 1 ;\n                   word = scan(line,i,' ');\n                 end ;\n                 if exp = 1 then /* keep this lines format + make bold */\n                   do ;\n                     text = '<HR> <PRE> <B>' ;\n                     output cbtdata ;\n                     text = line ;\n                     output cbtdata ;\n                     text = '</B> </PRE> <HR> <P>' ;\n                     output cbtdata ;\n                     return ;\n                   end ;\n\n                 para = 0 ;     /* indicate paragraph begun */\n                 rule = 0 ;     /* indicate no horiz rule seen */\n                 /* examine the first word */\n                 word = scan(line,1,' ') ;\n\n                 /* check for an ordered list that begins with */\n                 /* a number                                   */\n                 if verify(word,' 0123456789.')=0 then\n                   do ;   /* first word is a number */\n                     q = input(word,9.) ;\n                     if pre = 1 then   /* turn of PRE */\n                       do ;\n                         text = '</PRE>' ;\n                         output cbtdata ;\n                         pre = 0 ;     /* stop pre formatted */\n                       end ;\n\n                     if olx = 0 and q = 1 then   /* turn on OL */\n                       do ;\n                         text = '<OL>' ;\n                         output cbtdata ;\n                         olx = 1 ;\n                       end ;\n                     if olx > 0 and q = olx then   /* add list entry LI */\n                       do ;\n                         text = '<LI>' ;\n                         output cbtdata ;\n                         olx = olx + 1 ;\n                         sentence = 1 ;     /* indicate new sentence ahead */\n\n                         /* remove first number in line */\n                         p = index(line,word)+length(word)+1 ;\n                         line = substr(left(line),p) ;\n                       end ;\n                   end ;\n\n                 /* check for pre formatted text that begins with */\n                 /* a special character                           */\n                 else if verify(word,' ><?/!@#$%\u00ac&*()_-+={}\u00dd\u00a8\\|')=0 then\n                   do ;   /* first word is special */\n                     /* assume pre formatted text */\n                     if pre = 0 then\n                       do ;\n                         text = '<PRE>' ;\n                         output cbtdata ;\n                         pre = 1 ;     /* indicate PRE formatted */\n                       end ;\n                   end ;\n                 else\n                   do ;\n                     if pre = 1 then   /* turn of PRE */\n                       do ;\n                         text = '</PRE>' ;\n                         output cbtdata ;\n                         pre = 0 ;     /* stop PRE formatted */\n                       end ;\n                   end ;\n\n                 /* index all words with length greater than 2 */\n                 i = 1 ;\n                 chr = ' !@#$%\u00ac&*()_+=-{}\u00dd\u00a8|\\;:?/.>,\"<0123456789'||\"'\" ;\n                 word = scan(line,i,chr);\n                 do while(word\u00ac=' ') ;\n                   if length(word) > 2 then\n                     do ;\n                       tempword = put(scan(word,1),$notidx.) ;\n                       if tempword = ' ' then   /* not found */\n                         output cbtindex ;\n                     end ;\n                   i = i + 1 ;\n                   word = scan(line,i,chr);\n                 end ;\n\n                 /* convert to lower and write out the text */\n                 if pre = 0 then\n                   link makelow ;\n                 else\n                   text = line ;\n                 output cbtdata ;\n               end ;\n           end ;\n       end ;\n     end ;\n return ;\n\n makelow:  /* var line is converted to lower case in var text */\n   text = ' ' ;\n   i = 1 ;\n   word = left(trim(scan(line,i,' '))) ;\n   do while(word\u00ac=' ') ;\n     sc = ' !@#$%\u00ac&*()_+=-{}\u00dd\u00a8|\\;:?/.>,\"<'||\"'\" ;\n     tempword = put(scan(word,1,sc),$uword.) ;   /* look up word */\n     if tempword = ' ' then           /* is it upper case only word */\n       do ;                           /* no - lower case the word */\n         tempword = put(scan(word,1,sc),$name.) ;\n         if tempword = ' ' then   /* not found - not a name */\n           do ;\n             if sentence = 1 then  /* upcase first letter of word */\n               do ;\n                 word = substr(word,1,1)||substr(lowcase(word),2) ;\n                 text = left(trim(text)||' '||left(trim(word))) ;\n                 sentence = 0 ;\n               end ;\n             else\n               text = left(trim(text)||' '||left(trim(lowcase(word)))) ;\n           end ;\n         else  /* word is a name - upcase its first char */\n           do ;\n             word = substr(word,1,1)||substr(lowcase(word),2) ;\n             text = left(trim(text)||' '||left(trim(word))) ;\n           end ;\n       end ;\n     else  /* upper case only word - just append it to text as is */\n       text = left(trim(text)||' '||left(trim(word))) ;\n     if substr(reverse(trim(word)),1,1) = '.' then /* new sentence ? */\n       sentence = 1 ;  /* yes, make next word 1st letter upper case */\n     i = i + 1 ;\n     word = scan(line,i,' ') ;\n   end ;   /* of while */\n return ;\n\n esect:  /* do at section end */\n   if pre = 1 then   /* turn of PRE */\n     do ;\n       text = '</PRE>' ;\n       output cbtdata ;\n       pre = 0 ;     /* stop pre formatted */\n     end ;\n   if olx > 0 then   /* turn off OL */\n     do ;\n       text = '</OL>' ;\n       output cbtdata ;\n       olx = 0 ;\n     end ;\n return ;\n\n title:  /* do common stuff for new section title */\n   text = '<TITLE> '||trim(sectname)||' </TITLE>' ;\n   output cbtdata ;\n return ;\n\n run ;\n filename in clear ;\n\n proc sort data=cbtdata ;\n   by sectname ;\n run ;\n\n proc sort data=cbtindex nodup ;\n   by word ;\n run ;\n\n filename out '/u/sasddf/cbtdoc/contents.html' ;\n data _null_ ;\n   set cbtcont end=eof;\n   length fname $ 80 ;\n   length lname $ 80 ;\n   file out ;\n   if _n_ = 1 then\n     do ;\n       put '<TITLE> CBT MVS Utilities Tape </TITLE>' ;\n       put '<H1> CBT MVS Utilities Tape </H1> <P>' ;\n       put '<H2> Table of Contents </H2> <P>' ;\n       put '<OL>' ;\n     end ;\n   fname = 'HREF=\"file:/u/sasddf/cbtdoc/'||\n     trim(left(lowcase(sectname)))||'.html\"';\n   lname = substr(longname,1,1)||lowcase(substr(longname,2))||' ...' ;\n   put '<LI> <A ' fname ' > ' sectname ' </A> - ' lname ;\n   if eof then\n     do ;\n       put '</OL>' ;\n     end ;\n run ;\n filename out clear ;\n\n filename out '/u/sasddf/cbtdoc/tempname.html' ;\n data _null_ ;\n   length fv $ 80 ;\n   retain fv '/u/sasddf/cbtdoc/tempname.html' ;\n   set cbtdata end=eof;\n   by sectname ;\n   if first.sectname then\n     fv = '/u/sasddf/cbtdoc/'||trim(left(lowcase(sectname)))||'.html' ;\n   file out filevar=fv ;\n   put text ;\n run ;\n filename out clear ;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT292/FILE292.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT292", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}