{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011326000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 3233230, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 20, "INMDSNAM": "CBT.V500.FILE137.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 3233230, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 3233230, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE137.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x003\\x0b'", "DS1TRBAL": "b'\\x0f$'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x03\\x00\\x00\\x01\\x06\\x00\\x06\\x004'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$READ": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00%\\x01 \\x14O\\x01 \\x14\\x9f\\x01\\x00\\x00\\x1c\\x00\\x10\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-05-23T00:00:00", "modifydate": "2020-05-28T01:00:25", "lines": 28, "newlines": 16, "modlines": 0, "user": "IBMUSER"}, "text": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n$                            Billy Fenwick                                   $\n$                          cell 601-940-1443                                 $\n$                       email whfenwick01@gmail.com                          $\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n$                 You may use this system in whole or in part.               $\n$         You may not sale this system or any program in this system.        $\n$                    You may not use this system for profit.                 $\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n$               (C) Copyright Billy Fenwick 1991, 2020                       $\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\nThese five members are MS WORD members.  They will need to be move to your PC\nand sent \"BINARY\".  The file type is Microsoft Word \"DOCX\".\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n$$$           This is the recommended reading order                        $$$\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\nMem Name Description\n-------- --------------------------------------------------------------\n$$BATCH  General information about the system and how it works.\n$$REPORT Report TITLE records.  This is a description of how the batch\n         extract process works. This is where the Detail, Index and History\n         records are built.\n$$RFILE  Describes the \"REPORT FILE\" name feature. This feature is designed to\n         help speed up your batch process.  It may help to seperate reports\n         into different file sets for available.\n$$REPT   Documentation for all three CICS transactions.\n$$INSTAL Installation process.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$#DATE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x004\\x01 \\x14\\x9f\\x01 \\x14\\x9f\\x11!\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-05-28T00:00:00", "modifydate": "2020-05-28T11:21:34", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-500"}, "text": "REGULAR CBT TAPE - VERSION 500    FILE:  137\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT500.FILE137\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 85 MEMBERS COUNTED; CUMULATIVE SIZE IS 30,044 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/28/20    11:21:34    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$DESC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00A\\x01 \\x14O\\x01 \\x14\\x9f\\x01\\x01\\x00\\x15\\x00\\x11\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-05-23T00:00:00", "modifydate": "2020-05-28T01:01:41", "lines": 21, "newlines": 17, "modlines": 0, "user": "IBMUSER"}, "text": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\nThis is a COBOL/CICS/VSAM based report viewing system.  While most z/OS shops\ntoday have several ways to view reports.  I believe this system is unique in the\nway it allows users to view reports.  There is an internal security system in\nplace that allows users to see only the reports or parts of a report they have\naccess to.  Multiple reports for multiple dates are normally stored in the VSAM\nfiles.  Also, users are only allowed to view reports for the Bank and Branch\nthey have access to.  While this system was written for a Bank and Branch\nenvironment it can be made to fit other formats.  Division and Department,\nRegion and Division,, etc.\n\nThis system has a batch process that scans (JES2) report data and builds data\nrecords, index records and history records.  The CICS access process uses the\nHistory and Index records to access the Report data.  Security records are used\nto verify exactly what a user is allowed to view.\n\nThis system was originally written to view the printed version of a checking\naccount statement online thru CICS.  The code to do this is still in this system\nand could be used to do something similar like display a customer statement as\nit was created.\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$$MEMBS": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x10\\x01 \\x13O\\x01 \\x14\\x7f\\x14\\x01\\x00\\x9d\\x00d\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2020-05-13T00:00:00", "modifydate": "2020-05-26T14:01:10", "lines": 157, "newlines": 100, "modlines": 0, "user": "IBMUSER"}, "text": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\nThis member contains a list of the members in this directory.\n Some member in this directory are Microsoft Word \"DOCX\" files.  Don't change\n these members.\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\nMem Name Description\n-------- --------------------------------------------------------------\n$$BATCH  Description of the batch process.                    MS WORD file\n$$DESCRP General description of this system.                  MS WORD file\n$$INSTAL Intallation process.                                 MS WORD file\n$$FILE   Description of how the \"Report File\" works.          MS WORD file\n         Read this before you try use this feature\n$$REPT   Documentation for the three                          MS WORD file\n          CICS Transactions.\nASMJCL   Batch Assembler Compile\nCICSCOM  CICS COBOL compile JCL\nCICSCSDD CICS CSD defintions.\nCICSRP01 CICS Cobol program to display/add/change/list/delete report id\n         records in the report system report id file.\n\nCICSRP02 CICS Cobol program to display/add/change/list/delete user id\n         records in the report system user id file.\n\nCICSRP03 CICS Cobol program to view the reports that are stored in the\n         online report system files.\n\nCOMPJCL  Batch COBOL Compile\nCOMPMAP  CICS MAP Compile\nHELPLOAD Sort help records and load online help file.\nHELPREPR Online help for CICS REPR transaction\nHELPREPS Online help for CICS REPS transaction\nHELPREPT Online help for CICS REPT transaction\nHELPREPU Online help for CICS REPU transaction.\nHELPREXX Rexx code to build help records\nHELPRXJ  JCL to run HELP REXX\nRENAME   IDCAMS JCL to rename VSAM files.\nREPROJ2  IDCAMS JCL to do repro into Index and Detail files from a seq file.\n         It also does a delete and a define of the Index and Detail VSAM files.\nREPROJ3  IDCAMS JCL to do repro into History file from a seq file.\n         It also does a delete and a define of the History VSAM file.\nREPTB**  Batch compile copybooks\nREPTC**  CICS online copybooks\n\nREPT015  Batch Assembler program to do the extracting of the report data\n         needed to build the online index and detail files.\n          RPTIN is input report dataset.  Input only.\n          TITLES is the report titles file. Input only.\n          INDEX is the report Index file. Input only.\n          IDXOUT - output Index records.  Type \"K\" records Output file.\n          RPTOUT - output Detail records.  Output file.\n          WORK1  - output TITLE bank records. Type \"T\" records Output file.\n          WORK2  - output TITLE branch records. Type \"T\" records Output file.\n          WORK3  - output file that can be used to report on what\n            the extract program did.\n          SYSIN this is for input control cards.\n          Control cards\n          12345678901234567890\n          Date=mmddyy  -  this is to specify a date to used (if needed)\n          T  - report-id to be extracted (8 values)\n          TREPORT1 ,REPORT2 ,REPORT3\n          A  - Applications to be extracted (19 values)\n          ADDA,CDS,SAV,ILD,CLD,GLD\n\nREPT015J MVS JCL used to run this program.\nREPT015x MVS JCL that will sort the extracted records and loaad into the\n         three online files.\n\nREPT020  Batch COBOL program that create index, history and detail records.\n         The program is designed to take the place of REPT015.\n\n  RPTIN   - input Report file\n  TITLE   - input Title records file\n  IDXADD  - output new index records\n  HSTADD  - output new hisory records\n  DTLADD  - output new detail records\n  REPTLST - output report\n  CNTLCRD - input control cards (see rept015 for control format)\n\nREPT020J  - JCL\nREPT020X  - JCL to delete and define the History, Index and Detail VSAM file.\n            It also sorts and load index, history and detail records.\nREPT020Y  - JCL to sort and load index, history and detail records.\n\nREPT025  Batch Cobol program used to figure out which reports should\n         be purged from the online files.\n           TRECS   - Sorted input of all \"T\" (history) records.\n           PURGED  - Output file create that has REPORT-ID and Date\n           PURGEDI - Output file create that has Report-id,,,\n\nREPT025J - JCL used to run this program\n\nREPT026  Batch Cobol program used to purge the report detail records\n         that need deleting from the current online detail file and also\n         rebuild the online detail file adding new records.\n           PURGED input - file created by REPT025\n           DTLADD input - files created by batch extract (REPT015 or REPT020)\n           DTLIN  input - Current online VSAM detail file\n           DTLNEW output- output is the NEW online VSAM Detail file\n\nREPT026J MVS JCL used to run this program\n\nREPT027  Batch Cobol program used to purge the report index records\n         that need deleting from the current online index file and also\n         rebuild the online index file adding new records.\n           PURGED input - file created by REPT025\n           IDXADD input - files created by batch extract (REPT015 or REPT020)\n           IDXIN  input - Current online Index VSAM detail file\n           IDXNEW output- output is the NEW online VSAM Index file\n\nREPT027J JCL used to run this program\n\nREPT028  Batch Cobol program used to purge the report history records\n         that need deleting from the current online history file and also\n         rebuild the online history file adding new records.\n           PURGED input - file created by REPT025\n           HSTADD input - files created by batch extract (REPT015 or REPT020)\n           HSTIN  input - Current online VSAM History file\n           HSTNEW output- output is the NEW online VSAM Index file\n\nREPT028J JCL used to run this program\n\nREPT126  BATCH COBOL program to delete detail records\nREPT126J JCL used to run this program\n\nREPT127  BATCH COBOL program to delete index records\nREPT127J JCL used to run this program\n\nREPT128  BATCH COBOL program to delete history records\nREPT128J JCL used to run this program\n\nREPTDEFD VSAM IDCAMS statements to define the online detail file.\n\nREPTDEFI VSAM IDCAMS statements to define the online index file.\n\nREPTDEFT VSAM IDCAMS statements to define the online title file.\n\nREPTDEFU VSAM IDCAMS statements to define the online user id file.\n\nREPTDEFH VSAM IDCAMS statements to define the online help file.\n\nREPTDEFX VSAM IDCAMS statements to define the online History file.\n\nREPTS10  Assembler subroutine used by CICSRP03 program to do a search for\n         a character string within the detail report record.\n\nRPMP001  CICS map set that is used by CICSRP01 program.\n\nRPMP002  CICS map set that is used by CICSRP02 program.\n\nRPMP003  CICS map set that is used by CICSRP03 program.\n\nREXXDLST  REXX code to list the \"detail records\".\nREXXILST  REXX code to list the \"index records\".\nREXXJCL   JCL to run REXX\nREXXJCLL  JCL to repro VSAM file to flat file then run rexx to list records.\nREXXTLST  REXX code to list the \"history records\"\nUSERIDJC  IDCAM JCL to add a record to empty VSAM files.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$BATCH": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01 \\x14\\x7f\\x01 \\x14\\x7f\\x15\\x01\\x00\\xdc\\x00\\xdc\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-26T00:00:00", "modifydate": "2020-05-26T15:01:12", "lines": 220, "newlines": 220, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$$INSTAL": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01 \\x14\\x7f\\x01 \\x14\\x7f\\x15\\x03\\x01\\x00\\x01\\x00\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-26T00:00:00", "modifydate": "2020-05-26T15:03:18", "lines": 256, "newlines": 256, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$$NOTE01": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01 \\x14\\x9f\\x01 \\x14\\x9f\\x11\\x16\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-28T00:00:00", "modifydate": "2020-05-28T11:16:29", "lines": 29, "newlines": 29, "modlines": 0, "user": "README"}, "text": "This a general description of the package.\n\nThis is a COBOL/CICS/VSAM based report viewing system.  While\nmost z/OS shops today have several ways to view reports.  I\nbelieve this system is unique in the way it allows users to view\nreports.  There is an internal security system in place that\nallows users to see only the reports they have access to or parts\nof a report.  Multiple reports for multiple dates are normally\nstored in the VSAM files.  Also, users are only allowed to view\nreports for the Bank and Branch they have access to.  While this\nsystem was written for a Bank and Branch environment it can be\nmade to fit other formats.  Division and Department, Region and\nDivision,, etc.\n\nThis system has a batch process that scans (JES2) report data and\nbuilds data records, index records and history records.  The CICS\naccess process uses the History and Index records to access the\nReport data.  Security records are used to verify exactly what a\nuser is allowed to view.\n\nSam my intent in the general copyright stuff was to say you can\nyou this system freely.  However I don't want someone to install\nand use the system then charge their customers for using it.\nAlso I don't want someone to sell this system or at least not\nsell it without including me.\n\nHaving said that we don't really have a good way to manage that\neither.  In the end you have to trust folks.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$REPORT": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01 \\x14\\x7f\\x01 \\x14\\x7f\\x15\\x01\\n\\xda\\n\\xda\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-26T00:00:00", "modifydate": "2020-05-26T15:01:52", "lines": 2778, "newlines": 2778, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$$REPT": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01 \\x14\\x8f\\x01 \\x14\\x8f\\x13H\\x14\\xb7\\x14\\xb7\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-27T00:00:00", "modifydate": "2020-05-27T13:48:05", "lines": 5303, "newlines": 5303, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$$RFILE": {"ttr": 4101, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01 \\x14\\x7f\\x01 \\x14\\x7f\\x15\\x03\\x00\\xc4\\x00\\xc4\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-26T00:00:00", "modifydate": "2020-05-26T15:03:49", "lines": 196, "newlines": 196, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$LOADLIB": {"ttr": 4105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01 \\x14\\x9f\\x01 \\x14\\x9f\\x01\\x06\\ru\\ru\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-28T00:00:00", "modifydate": "2020-05-28T01:06:27", "lines": 3445, "newlines": 3445, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE137": {"ttr": 5636, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00&\\x01 \\x14\\x9f\\x01 \\x14\\x9f\\x11!\\x00/\\x00/\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-05-28T00:00:00", "modifydate": "2020-05-28T11:21:26", "lines": 47, "newlines": 47, "modlines": 0, "user": "CBT-500"}, "text": "//***FILE 137 is from Billy Fenwick and contains a detailed report  *   FILE 137\n//*           system, to carefully and accurately control the       *   FILE 137\n//*           distribution of reports, to only those people who are *   FILE 137\n//*           allowed to see them.                                  *   FILE 137\n//*                                                                 *   FILE 137\n//*           email:  whfenwick01@gmail.com                         *   FILE 137\n//*                                                                 *   FILE 137\n//*       Copyright (c) 1991-2020 William H. Fenwick                *   FILE 137\n//*                                                                 *   FILE 137\n//*       Permission is granted for this software product to be     *   FILE 137\n//*       distributed on the CBT Tape, and it may be used by        *   FILE 137\n//*       anyone, but it may not be sold.  All CBT Tape disclaimers *   FILE 137\n//*       apply.                                                    *   FILE 137\n//*                                                                 *   FILE 137\n//*       This a general description of the package.                *   FILE 137\n//*                                                                 *   FILE 137\n//*       This is a COBOL/CICS/VSAM based report viewing system.    *   FILE 137\n//*       While most z/OS shops today have several ways to view     *   FILE 137\n//*       reports.  I believe this system is unique in the way it   *   FILE 137\n//*       allows users to view reports.  There is an internal       *   FILE 137\n//*       security system in place that allows users to see only    *   FILE 137\n//*       the reports they have access to or parts of a report.     *   FILE 137\n//*       Multiple reports for multiple dates are normally stored   *   FILE 137\n//*       in the VSAM files.  Also, users are only allowed to       *   FILE 137\n//*       view reports for the Bank and Branch they have access     *   FILE 137\n//*       to.  While this system was written for a Bank and         *   FILE 137\n//*       Branch environment it can be made to fit other formats.   *   FILE 137\n//*       Division and Department, Region and Division,, etc.       *   FILE 137\n//*                                                                 *   FILE 137\n//*       This system has a batch process that scans (JES2)         *   FILE 137\n//*       report data and builds data records, index records and    *   FILE 137\n//*       history records.  The CICS access process uses the        *   FILE 137\n//*       History and Index records to access the Report data.      *   FILE 137\n//*       Security records are used to verify exactly what a user   *   FILE 137\n//*       is allowed to view.                                       *   FILE 137\n//*                                                                 *   FILE 137\n//*       My intent in the general copyright stuff was to say       *   FILE 137\n//*       you can you this system freely.  However I don't want     *   FILE 137\n//*       someone to install and use the system then charge their   *   FILE 137\n//*       customers for using it.  Also I don't want someone to     *   FILE 137\n//*       sell this system or at least not sell it without          *   FILE 137\n//*       including me.                                             *   FILE 137\n//*                                                                 *   FILE 137\n//*       Having said that we don't really have a good way to       *   FILE 137\n//*       manage that either.  In the end you have to trust         *   FILE 137\n//*       folks.                                                    *   FILE 137\n//*                                                                 *   FILE 137\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMJCL": {"ttr": 5638, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00C\\x01 \\x08/\\x01 \\x14/\\x11\\x02\\x00\\t\\x00\\t\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-21T11:02:43", "lines": 9, "newlines": 9, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT015C JOB '1',CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//         NOTIFY=&SYSUID,REGION=0M\n//*\n//*  ASSEMBLER ROUTINE\n//ASMB   EXEC   HLASMCL\n//C.SYSIN   DD DSN=OPT.REPT.PDS(REPT015),DISP=SHR\n//L.SYSIN   DD *\n   NAME REPT015(R)\n//L.SYSLMOD DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CICSCOM": {"ttr": 5640, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x06\\x01 \\x08/\\x01 \\x14\\x8f\\x16&\\x00\\n\\x00\\n\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:26:06", "lines": 10, "newlines": 10, "modlines": 0, "user": "IBMUSER"}, "text": "//CICSRP03 JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//APPLPROG EXEC DFHZITCL,PROGLIB=OPT.WORK.LOADLIB,OUTC=*\n//COBOL.SYSIN  DD DSN=OPT.REPT.PDS(CICSRP03),DISP=SHR\n/*\n//LKED.SYSLIB DD DSN=CICSTS51.CICS.SDFHLOAD,DISP=SHR\n//            DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//            DD DSN=CEE.SCEELKED,DISP=SHR\n//LKED.SYSIN DD *\n   NAME CICSRP03(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CICSCSDD": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00E\\x01 \\x13?\\x01 \\x14\\x8f\\x16T\\x00\\x97\\x00\\xaf\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-05-12T00:00:00", "modifydate": "2020-05-27T16:54:45", "lines": 151, "newlines": 175, "modlines": 0, "user": "IBMUSER"}, "text": " DEFINE FILE(REPORTDT) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.DETAIL.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(NO)\n        BROWSE(YES) DELETE(NO) READ(YES) UPDATE(NO) JOURNAL(NO)\n        JNLREAD(NONE) JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE)\n        JNLSYNCWRITE(YES) RECOVERY(NONE) FWDRECOVLOG(NO)\n        BACKUPTYPE(STATIC) DEFINETIME(20/03/22 19:56:25)\n        CHANGETIME(20/03/24 19:23:23) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE FILE(REPORTHP) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.HELP.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(NO) BROWSE(NO)\n        DELETE(NO) READ(YES) UPDATE(NO) JOURNAL(NO) JNLREAD(NONE)\n        JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE) JNLSYNCWRITE(YES)\n        RECOVERY(NONE) FWDRECOVLOG(NO) BACKUPTYPE(STATIC)\n        DEFINETIME(20/03/24 19:37:07) CHANGETIME(20/03/24 19:37:07)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE FILE(REPORTHS) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.HISTORY.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(NO)\n        BROWSE(YES) DELETE(NO) READ(YES) UPDATE(NO) JOURNAL(NO)\n        JNLREAD(NONE) JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE)\n        JNLSYNCWRITE(YES) RECOVERY(NONE) FWDRECOVLOG(NO)\n        BACKUPTYPE(STATIC) DEFINETIME(20/03/24 19:55:09)\n        CHANGETIME(20/03/24 19:55:09) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE FILE(REPORTIX) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.INDEX.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(NO)\n        BROWSE(YES) DELETE(NO) READ(YES) UPDATE(NO) JOURNAL(NO)\n        JNLREAD(NONE) JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE)\n        JNLSYNCWRITE(YES) RECOVERY(NONE) FWDRECOVLOG(NO)\n        BACKUPTYPE(STATIC) DEFINETIME(20/03/22 19:56:49)\n        CHANGETIME(20/03/24 19:23:33) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE FILE(REPORTTL) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.TITLE.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(YES)\n        BROWSE(YES) DELETE(YES) READ(YES) UPDATE(YES) JOURNAL(NO)\n        JNLREAD(NONE) JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE)\n        JNLSYNCWRITE(YES) RECOVERY(NONE) FWDRECOVLOG(NO)\n        BACKUPTYPE(STATIC) DEFINETIME(20/03/22 19:53:33)\n        CHANGETIME(20/03/24 19:24:01) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE FILE(REPORTUI) GROUP(REPT)\n        DSNAME(OPT.CICS.REPORT.USERID.FILE) RLSACCESS(NO) LSRPOOLNUM(1)\n        READINTEG(UNCOMMITTED) DSNSHARING(ALLREQS) STRINGS(1)\n        STATUS(ENABLED) OPENTIME(FIRSTREF) DISPOSITION(SHARE)\n        DATABUFFERS(2) INDEXBUFFERS(1) TABLE(NO) MAXNUMRECS(NOLIMIT)\n        UPDATEMODEL(LOCKING) LOAD(NO) RECORDFORMAT(V) ADD(YES)\n        BROWSE(YES) DELETE(YES) READ(YES) UPDATE(YES) JOURNAL(NO)\n        JNLREAD(NONE) JNLSYNCREAD(NO) JNLUPDATE(NO) JNLADD(NONE)\n        JNLSYNCWRITE(YES) RECOVERY(NONE) FWDRECOVLOG(NO)\n        BACKUPTYPE(STATIC) DEFINETIME(20/03/22 19:54:31)\n        CHANGETIME(20/03/24 19:24:08) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE MAPSET(RPMP001) GROUP(REPT)\n        RESIDENT(NO) USAGE(NORMAL) USELPACOPY(NO) STATUS(ENABLED)\n        DEFINETIME(20/03/22 20:50:51) CHANGETIME(20/03/22 20:50:51)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE MAPSET(RPMP002) GROUP(REPT)\n        RESIDENT(NO) USAGE(NORMAL) USELPACOPY(NO) STATUS(ENABLED)\n        DEFINETIME(20/03/22 20:50:28) CHANGETIME(20/03/22 20:50:28)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE MAPSET(RPMP003) GROUP(REPT)\n        RESIDENT(NO) USAGE(NORMAL) USELPACOPY(NO) STATUS(ENABLED)\n        DEFINETIME(20/03/22 20:50:57) CHANGETIME(20/03/22 20:50:57)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE PROFILE(REPTCICS) GROUP(REPT)\n        SCRNSIZE(ALTERNATE) UCTRAN(NO) PRINTERCOMP(NO) JOURNAL(NO)\n        MSGJRNL(NO) MSGINTEG(NO) ONEWTE(NO) CHAINCONTROL(NO)\n        DVSUPRT(ALL) INBFMH(NO) RAQ(NO) LOGREC(NO) NEPCLASS(0)\n        RTIMOUT(NO) DEFINETIME(20/05/01 20:40:12)\n        CHANGETIME(20/05/01 20:40:48) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE PROGRAM(CICSRP01) GROUP(REPT)\n        LANGUAGE(COBOL) RELOAD(NO) RESIDENT(NO) USAGE(NORMAL)\n        USELPACOPY(NO) STATUS(ENABLED) CEDF(YES) DATALOCATION(BELOW)\n        EXECKEY(USER) CONCURRENCY(QUASIRENT) API(CICSAPI) DYNAMIC(NO)\n        EXECUTIONSET(FULLAPI) JVM(NO) DEFINETIME(20/03/22 19:48:24)\n        CHANGETIME(20/03/22 19:48:24) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE PROGRAM(CICSRP02) GROUP(REPT)\n        LANGUAGE(COBOL) RELOAD(NO) RESIDENT(NO) USAGE(NORMAL)\n        USELPACOPY(NO) STATUS(ENABLED) CEDF(YES) DATALOCATION(BELOW)\n        EXECKEY(USER) CONCURRENCY(QUASIRENT) API(CICSAPI) DYNAMIC(NO)\n        EXECUTIONSET(FULLAPI) JVM(NO) DEFINETIME(20/03/22 19:48:30)\n        CHANGETIME(20/03/22 19:48:30) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE PROGRAM(CICSRP03) GROUP(REPT)\n        LANGUAGE(COBOL) RELOAD(NO) RESIDENT(NO) USAGE(NORMAL)\n        USELPACOPY(NO) STATUS(ENABLED) CEDF(YES) DATALOCATION(BELOW)\n        EXECKEY(USER) CONCURRENCY(QUASIRENT) API(CICSAPI) DYNAMIC(NO)\n        EXECUTIONSET(FULLAPI) JVM(NO) DEFINETIME(20/03/22 19:48:06)\n        CHANGETIME(20/03/22 19:48:12) CHANGEUSRID(CICSUSER)\n        CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE TRANSACTION(REPR) GROUP(REPT)\n        PROGRAM(CICSRP01) TWASIZE(0) PROFILE(DFHCICST) STATUS(ENABLED)\n        TASKDATALOC(BELOW) TASKDATAKEY(USER) STORAGECLEAR(NO)\n        RUNAWAY(SYSTEM) SHUTDOWN(DISABLED) ISOLATE(YES) DYNAMIC(NO)\n        ROUTABLE(NO) PRIORITY(1) TRANCLASS(DFHTCL00) DTIMOUT(NO)\n        RESTART(NO) SPURGE(NO) TPURGE(NO) DUMP(YES) TRACE(YES)\n        CONFDATA(NO) OTSTIMEOUT(NO) ACTION(BACKOUT) WAIT(YES)\n        WAITTIME(0,0,0) RESSEC(NO) CMDSEC(NO)\n        DEFINETIME(20/03/22 19:47:55) CHANGETIME(20/03/22 19:50:16)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE TRANSACTION(REPS) GROUP(REPT)\n        PROGRAM(CICSRP03) TWASIZE(0) PROFILE(DFHCICST) STATUS(ENABLED)\n        TASKDATALOC(BELOW) TASKDATAKEY(USER) STORAGECLEAR(NO)\n        RUNAWAY(SYSTEM) SHUTDOWN(DISABLED) ISOLATE(YES) DYNAMIC(NO)\n        ROUTABLE(NO) PRIORITY(1) TRANCLASS(DFHTCL00) DTIMOUT(NO)\n        RESTART(NO) SPURGE(NO) TPURGE(NO) DUMP(YES) TRACE(YES)\n        CONFDATA(NO) OTSTIMEOUT(NO) ACTION(BACKOUT) WAIT(YES)\n        WAITTIME(0,0,0) RESSEC(NO) CMDSEC(NO)\n        DEFINETIME(20/05/03 11:49:10) CHANGETIME(20/05/03 11:49:25)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE TRANSACTION(REPT) GROUP(REPT)\n        PROGRAM(CICSRP03) TWASIZE(0) PROFILE(REPTCICS) STATUS(ENABLED)\n        TASKDATALOC(BELOW) TASKDATAKEY(USER) STORAGECLEAR(NO)\n        RUNAWAY(SYSTEM) SHUTDOWN(DISABLED) ISOLATE(YES) DYNAMIC(NO)\n        ROUTABLE(NO) PRIORITY(1) TRANCLASS(DFHTCL00) DTIMOUT(NO)\n        RESTART(NO) SPURGE(NO) TPURGE(NO) DUMP(YES) TRACE(YES)\n        CONFDATA(NO) OTSTIMEOUT(NO) ACTION(BACKOUT) WAIT(YES)\n        WAITTIME(0,0,0) RESSEC(NO) CMDSEC(NO)\n        DEFINETIME(20/03/22 19:47:43) CHANGETIME(20/05/01 20:41:10)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n DEFINE TRANSACTION(REPU) GROUP(REPT)\n        PROGRAM(CICSRP02) TWASIZE(0) PROFILE(DFHCICST) STATUS(ENABLED)\n        TASKDATALOC(BELOW) TASKDATAKEY(USER) STORAGECLEAR(NO)\n        RUNAWAY(SYSTEM) SHUTDOWN(DISABLED) ISOLATE(YES) DYNAMIC(NO)\n        ROUTABLE(NO) PRIORITY(1) TRANCLASS(DFHTCL00) DTIMOUT(NO)\n        RESTART(NO) SPURGE(NO) TPURGE(NO) DUMP(YES) TRACE(YES)\n        CONFDATA(NO) OTSTIMEOUT(NO) ACTION(BACKOUT) WAIT(YES)\n        WAITTIME(0,0,0) RESSEC(NO) CMDSEC(NO)\n        DEFINETIME(20/03/22 19:47:28) CHANGETIME(20/03/22 19:47:28)\n        CHANGEUSRID(CICSUSER) CHANGEAGENT(CSDAPI) CHANGEAGREL(0680)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CICSRP01": {"ttr": 5646, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00\\x12\\x01 \\x08/\\x01 \\x14\\x8f\\x16\\x07\\x05\\x8e\\x06\\x19\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:07:12", "lines": 1422, "newlines": 1561, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CICSRP02": {"ttr": 6401, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00F\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x01\\x03\\xbc\\x03\\xcc\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:01:46", "lines": 956, "newlines": 972, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CICSRP03": {"ttr": 6663, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01=\\x00B\\x01 \\x08/\\x01 \\x14\\x8f\\x16 \\x08\\x8a\\x08j\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.61", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:20:42", "lines": 2186, "newlines": 2154, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "COMPJCL": {"ttr": 7683, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01!\\x00\\x04\\x01 \\x08/\\x01 \\x14\\x8f\\x16(\\x00\\x1c\\x00\\x1b\\x00\\x06\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.33", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:28:04", "lines": 28, "newlines": 27, "modlines": 6, "user": "IBMUSER"}, "text": "//REPT128C JOB ,MSGCLASS=X,NOTIFY=&SYSUID,MSGLEVEL=(1,1),CLASS=A\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M,\n//       PARM=('NODYNAM,LIB,RENT,LIST,MAP')  COMPILER OPTIONS\n//STEPLIB  DD DSN=IGY.SIGYCOMP,DISP=SHR\n//SYSIN    DD DSN=OPT.REPT.PDS(REPT128),DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=OPT.REPT.PDS,DISP=SHR\n//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),\n//            UNIT=SYSDA,SPACE=(TRK,(3,3))\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LKED     EXEC PGM=IEWL,\n//             REGION=4M\n//*            COND=(7,LT,ASM),\n//*            PARM=&LNKPARM\n//SYSLIB      DD DSN=CEE.SCEELKED,DISP=SHR\n//SYSLMOD   DD  DISP=SHR,DSN=OPT.WORK.LOADLIB\n//SYSUT1    DD  UNIT=SYSDA,DCB=BLKSIZE=1024,\n//             SPACE=(1024,(200,20))\n//SYSPRINT  DD  SYSOUT=*\n//SYSLIN    DD  DISP=(OLD,DELETE),DSN=&&LOADSET\n//          DD  *\n   NAME REPT128(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMPMAP": {"ttr": 7685, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x08\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x06\\x00\\x07\\x00\\x08\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:06:08", "lines": 7, "newlines": 8, "modlines": 0, "user": "IBMUSER"}, "text": "//RPMP001C JOB (0),CLASS=A,MSGCLASS=X,\n//         NOTIFY=&SYSUID,REGION=0M\n//*\n//MAPASM   EXEC DFHMAPS,MAPNAME='RPMP001',OUTC=*,\n//   MAPLIB=OPT.WORK.LOADLIB\n//COPY.SYSUT1 DD DISP=SHR,DSN=OPT.REPT.PDS(RPMP001)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELPLOAD": {"ttr": 7687, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x02\\x01 \\x08/\\x01 \\x13\\x1f\\x15$\\x00\\x1b\\x00\\x18\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-10T15:24:02", "lines": 27, "newlines": 24, "modlines": 0, "user": "IBMUSER"}, "text": "//HELPLOAD JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID,REGION=4M\n//STEP1    EXEC PGM=IEFBR14\n//DD1      DD DSN=OPT.REPT.SORTED.HELP,\n//            DISP=(MOD,DELETE,DELETE),\n//            UNIT=SYSDA,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(LRECL=1615,RECFM=FB)\n//SORTIT   EXEC PGM=SORT,COND=(8,LT)\n//SYSUDUMP DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.REPT.HELP,DISP=SHR\n//SORTOUT  DD DSN=OPT.REPT.SORTED.HELP,\n//            DISP=(NEW,CATLG,CATLG),\n//            UNIT=SYSDA,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(LRECL=1615,RECFM=FB)\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,14,A),FORMAT=BI\n//****************************************************************\n//*   LOAD THE ONLINE HELP FILE                                  *\n//****************************************************************\n//LOADHELP EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n     REPRO   IDS('OPT.REPT.SORTED.HELP')          -\n             ODS('OPT.CICS.REPORT.HELP.FILE')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELPREPR": {"ttr": 7689, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01 \\x08/\\x01 \\x14\\x8f\\x18\"\\x01R\\x01Q\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T18:22:36", "lines": 338, "newlines": 337, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "HELPREPS": {"ttr": 7695, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00C\\x01 \\x12_\\x01 \\x14\\x8f\\x164\\x00\\xe8\\x01\\x12\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-05-04T00:00:00", "modifydate": "2020-05-27T16:34:43", "lines": 232, "newlines": 274, "modlines": 0, "user": "IBMUSER"}, "text": "This screen is used to view a printout.  You can move around in the printout by\nusing the PF keys.  See the explanation below on how to use these keys.\n\nCommand==> \"n\" - A number that you enter to be used with PF4 ,PF5, PF7, PF8,\n            PF11 & PF12.\nReport date ---- is the processing date from the printout itself.\nReport ID ------ This is the name (main ID) that is used to access this report.\nSecondary ID --- This is or can be used as a way to access a subset of the main\n                 report.\n\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\n\n\n$$$REPS,F,VIEWDTL\n\nPF4 - Will move you up \"N\" LINES within the page you are currently on.  Put in a\n      number, say \"10\" on the command line and press the PF4 key.  This will\n      move you up 10 lines from where you are.  But only within the same page.\n      If no number is put on the command line 20 is assumed.  You can not go\n      beyond the start or end of a page.  To get to the bottom lines on a page\n      just put a number larger than the number lines on the page (99).  This\n      will take you to the bottom of the page.\n\nPF5 - Will move you down \"N\" LINES within the page you are currently on.  This\n      PF key works just like PF4 except that it will move you down.\n\nPF7 - Will go backwards \"N\" PAGES.  Put a number in the command line, say 5 and\n      press the PF7 key.  This will move you backwards 5 pages from where you\n      are.  If no number is entered.  One will be assumed.\n\nPF8 - Moves you forward \"N\" PAGES.  It works just like the PF7 key except it\n      moves forward.\n\n\n$$$REPS,M,VIEWDTL\n\nPF11- Moves you right \"N\" positions.  Put a number, say 20 on the command line\n      and press the PF11 key.  This will move you 20 characters to the right\n      from where you are.  It will not move right of position number 133.  It\n      will not rap around.  If no number is put on the command line then 20 is\n      assumed.\n\nPF12- Moves left \"N\" positions.  It functions just like PF11 except it moves to\n      the left.\n\n\n**NOTE**  PF keys 4, 5, 11 & 12, are used to move around on a page.  They do not\n          change pages.  They either move up, down, left or right but always on\n          the page you were on when you pressed the key.\n\n**NOTE**  The PF7 & PF8 keys are used to change pages.  Where you are on the\n          page does not change.  Only what page you are viewing.\n          EX: You are on page 5.  By pressing the PF8 key(default 1 page) you\n              will move to page 6.\n\n$$$REPS,L,VIEWDTL\n  This is a system to view printed reports from your terminal.  This screen has\nfour options.  Just enter the number of the option you want to use and press the\nenter key.  Listed below is an explanation of the options and the other fields\nthat appear on the screen.\n  There is a fast path method that can be used that will skip the menu panels.\nIt will take you directly to the screen you want.  The syntax for using this is:\n  REPS/X/12345678   where X - Can be \"V\" for view screen, \"I\" for index screen,\n                              and \"D\" for date list screen.\n                    where 12345678 - Is the report ID of the report you want to\n                                     see.\n ex:  REPS/V/DEPART   -  This will take you directly to the view screen and\ndisplay the most current version of the DEPART report.\n\nOption  ------ Enter into this field the number of the option you wish to use.\nReport ID ---- This is the primary name use to access a given report.  There\n               should only be one of these per report.\nSecondary ID - This field is used primarily to access a subset of a report.\n               EX: Would be a report that has bank and branch total pages\n               You might want a secondary ID to just view the branch\n               level total pages.\n$$$REPS,F,VIEWSTL\n\nReport Date -- This is the processing date of the report. The date that is on\n               the report.\n\nOption 1 - This option will list all of the dates that are available to this\n           system for the report ID and secondary report ID that you have\n           entered.  You may select which date you would like to use from the\n           screen that is produced by this option.  The report ID is the only\n           required field for this option.\n\nOption 2 - This option will display the report keys (in numerical order) that\n           are available to you for the report ID, secondary report ID and date\n           that you put in on this screen.  You may select the page you want to\n           look at from the screen that is produced by this option.  The report\n           ID is the only required field that you must enter to use this option.\n\n\n\n\n\n$$$REPS,M,VIEWSTL\n\nOption 3 - All of the report ID's and there secondary ID's, that you have access\n           to are listed on the screen that is produced by use of this option.\n           You may select a report from that screen.  This option has no\n           required fields.  However, you may enter a report ID or a generic\n           report ID.  That will be used as a starting point for the display\n           that will be produced by using this option.\n\nOption 4 - This option will take you straight into view mode.  It will display\n           the first page that you have access to.  The report ID is the only\n           required field that MUST be entered to use this option.\n\n\n\n\n**NOTE**  On all options if no date is entered in the date field.  The default\n          date will be used.  The default date is the most current date on file.\n\n\n\n$$$REPS,L,VIEWSTL\nThis screen will display a list of all the report dates available for a specific\nreport ID.  You may select a report date to view from this screen.  There are\ntwo selection options that are available from this screen.  They are listed\nbelow.  Just enter the letter of the option you wish to use in the field next to\nthe report date you want.  This screen is know as the \"Date mode\" screen.\n\n\nOptions\n\n  V - Place a \"V\" in the field next to the report date you want to see.  This\n      will select the report for viewing and will return the \"view mode\" screen.\n\n  I - Place an \"I\" in the field next to the report date you want to see.  This\n      will bring up the \"index mode\" screen.  The index screen is a list of\n      index values that are pulled off each page of the report.\n\nPF Keys\n\nPF3 - Will return you to the previous screen you were on.\n\n$$$REPS,O,VIEWBRD\nThis screen will display all of the reports that you have access to.  You may\nselect a report by entering a letter in the field next to the report ID field.\nThe options that can be entered in this field are listed below.  This screen is\nknow as the \"Titles mode\" screen.\n\nOptions\n\n  V - Place a \"V\" in the field next to the report ID you want to see.  This will\n      select the report for viewing and will return the \"view mode\" screen.  The\n      report date that is used is the most current one on file.\n\n  I - Place an \"I\" in the field next to the report ID you want to see.  This\n      will bring up the \"index mode\" screen.  The index screen is a list of\n      index values that are pulled off each page of the report.  The report date\n      that is used is the most current one on file.\n\n  D - Place a \"D\" in the field next to the report ID you want to see.  This will\n      bring up the \"date mode\" screen.  The date screen is a list of report\n      dates that are available for the report you selected.\n\n$$$REPS,F,VIEWBRS\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\nPF7 - Will go backwards in the list.  It will only go one page at a time.\n\nPF8 - Moves you forward.  It works just like the PF7 key except it moves\n      forward.\n\n\n\n\n\n\n\n\n$$$REPS,L,VIEWBRS\nThis screen will display all of the index/key values that you have access to.\nThis list will be in numerical order.  This key value can be anything.  However\nnormally this will be the bank/branch and/or account.  This value (index/key) is\npulled off of each page of the report.  Each page may or may not have a unique\nindex/key value.  If each page does not have a unique index value the order will\nbe the same as it would have been had you printed it.  From this screen you may\nselect the specific page you want to look at.  This screen is know as the \"Index\nscreen\".\n\nOptions\n\n  V - Place a \"V\" in the field next to the page key value you want to see.  This\n      will select the report for viewing and will return the \"view mode\" screen.\n\n\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\n\n$$$REPS,F,VIEWBRI\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\nPF7 - Will go backwards in the list.  It will only go one page at a time.\n\nPF8 - Moves you forward.  It works just like the PF7 key except it moves\n      forward.\n\n\n\n\n\n\n\n\n\n\n\n\n$$$REPS,L,VIEWBRI\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPREPT": {"ttr": 7940, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x008\\x01 \\x08/\\x01 \\x14\\x8f\\x167\\x00\\xe8\\x01\\x12\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:37:38", "lines": 232, "newlines": 274, "modlines": 0, "user": "IBMUSER"}, "text": "This screen is used to view a printout.  You can move around in the printout by\nusing the PF keys.  See the explanation below on how to use these keys.\n\nCommand==> \"n\" - A number that you enter to be used with PF4 ,PF5, PF7, PF8,\n            PF11 & PF12.\nReport date ---- is the processing date from the printout itself.\nReport ID ------ This is the name (main ID) that is used to access this report.\nSecondary ID --- This is or can be used as a way to access a subset of the main\n                 report.\n\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\n\n\n$$$REPT,F,VIEWDTL\n\nPF4 - Will move you up \"N\" LINES within the page you are currently on.  Put in a\n      number, say \"10\" on the command line and press the PF4 key.  This will\n      move you up 10 lines from where you are.  But only within the same page.\n      If no number is put on the command line 20 is assumed.  You can not go\n      beyond the start or end of a page.  To get to the bottom lines on a page\n      just put a number larger than the number lines on the page (99).  This\n      will take you to the bottom of the page.\n\nPF5 - Will move you down \"N\" LINES within the page you are currently on.  This\n      PF key works just like PF4 except that it will move you down.\n\nPF7 - Will go backwards \"N\" PAGES.  Put a number in the command line, say 5 and\n      press the PF7 key.  This will move you backwards 5 pages from where you\n      are.  If no number is entered.  One will be assumed.\n\nPF8 - Moves you forward \"N\" PAGES.  It works just like the PF7 key except it\n      moves forward.\n\n\n$$$REPT,M,VIEWDTL\n\nPF11- Moves you right \"N\" positions.  Put a number, say 20 on the command line\n      and press the PF11 key.  This will move you 20 characters to the right\n      from where you are.  It will not move right of position number 133.  It\n      will not rap around.  If no number is put on the command line then 20 is\n      assumed.\n\nPF12- Moves left \"N\" positions.  It functions just like PF11 except it moves to\n      the left.\n\n\n**NOTE**  PF keys 4, 5, 11 & 12, are used to move around on a page.  They do not\n          change pages.  They either move up, down, left or right but always on\n          the page you were on when you pressed the key.\n\n**NOTE**  The PF7 & PF8 keys are used to change pages.  Where you are on the\n          page does not change.  Only what page you are viewing.\n          EX: You are on page 5.  By pressing the PF8 key(default 1 page) you\n              will move to page 6.\n\n$$$REPT,L,VIEWDTL\n  This is a system to view printed reports from your terminal.  This screen has\nfour options.  Just enter the number of the option you want to use and press the\nenter key.  Listed below is an explanation of the options and the other fields\nthat appear on the screen.\n  There is a fast path method that can be used that will skip the menu panels.\nIt will take you directly to the screen you want.  The syntax for using this is:\n  REPT/X/12345678   where X - Can be \"V\" for view screen, \"I\" for index screen,\n                              and \"D\" for date list screen.\n                    where 12345678 - Is the report ID of the report you want to\n                                     see.\n ex:  REPT/V/DEPART   -  This will take you directly to the view screen and\ndisplay the most current version of the DEPART report.\n\nOption  ------ Enter into this field the number of the option you wish to use.\nReport ID ---- This is the primary name use to access a given report.  There\n               should only be one of these per report.\nSecondary ID - This field is used primarily to access a subset of a report.\n               EX: Would be a report that has bank and branch total pages\n               You might want a secondary ID to just view the branch\n               level total pages.\n$$$REPT,F,VIEWSTL\n\nReport Date -- This is the processing date of the report. The date that is on\n               the report.\n\nOption 1 - This option will list all of the dates that are available to this\n           system for the report ID and secondary report ID that you have\n           entered.  You may select which date you would like to use from the\n           screen that is produced by this option.  The report ID is the only\n           required field for this option.\n\nOption 2 - This option will display the report keys (in numerical order) that\n           are available to you for the report ID, secondary report ID and date\n           that you put in on this screen.  You may select the page you want to\n           look at from the screen that is produced by this option.  The report\n           ID is the only required field that you must enter to use this option.\n\n\n\n\n\n$$$REPT,M,VIEWSTL\n\nOption 3 - All of the report ID's and there secondary ID's, that you have access\n           to are listed on the screen that is produced by use of this option.\n           You may select a report from that screen.  This option has no\n           required fields.  However, you may enter a report ID or a generic\n           report ID.  That will be used as a starting point for the display\n           that will be produced by using this option.\n\nOption 4 - This option will take you straight into view mode.  It will display\n           the first page that you have access to.  The report ID is the only\n           required field that MUST be entered to use this option.\n\n\n\n\n**NOTE**  On all options if no date is entered in the date field.  The default\n          date will be used.  The default date is the most current date on file.\n\n\n\n$$$REPT,L,VIEWSTL\nThis screen will display a list of all the report dates available for a specific\nreport ID.  You may select a report date to view from this screen.  There are\ntwo selection options that are available from this screen.  They are listed\nbelow.  Just enter the letter of the option you wish to use in the field next to\nthe report date you want.  This screen is know as the \"Date mode\" screen.\n\n\nOptions\n\n  V - Place a \"V\" in the field next to the report date you want to see.  This\n      will select the report for viewing and will return the \"view mode\" screen.\n\n  I - Place an \"I\" in the field next to the report date you want to see.  This\n      will bring up the \"index mode\" screen.  The index screen is a list of\n      index values that are pulled off each page of the report.\n\nPF Keys\n\nPF3 - Will return you to the previous screen you were on.\n\n$$$REPT,O,VIEWBRD\nThis screen will display all of the reports that you have access to.  You may\nselect a report by entering a letter in the field next to the report ID field.\nThe options that can be entered in this field are listed below.  This screen is\nknow as the \"Titles mode\" screen.\n\nOptions\n\n  V - Place a \"V\" in the field next to the report ID you want to see.  This will\n      select the report for viewing and will return the \"view mode\" screen.  The\n      report date that is used is the most current one on file.\n\n  I - Place an \"I\" in the field next to the report ID you want to see.  This\n      will bring up the \"index mode\" screen.  The index screen is a list of\n      index values that are pulled off each page of the report.  The report date\n      that is used is the most current one on file.\n\n  D - Place a \"D\" in the field next to the report ID you want to see.  This will\n      bring up the \"date mode\" screen.  The date screen is a list of report\n      dates that are available for the report you selected.\n\n$$$REPT,F,VIEWBRS\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\nPF7 - Will go backwards in the list.  It will only go one page at a time.\n\nPF8 - Moves you forward.  It works just like the PF7 key except it moves\n      forward.\n\n\n\n\n\n\n\n\n$$$REPT,L,VIEWBRS\nThis screen will display all of the index/key values that you have access to.\nThis list will be in numerical order.  This key value can be anything.  However\nnormally this will be the bank/branch and/or account.  This value (index/key) is\npulled off of each page of the report.  Each page may or may not have a unique\nindex/key value.  If each page does not have a unique index value the order will\nbe the same as it would have been had you printed it.  From this screen you may\nselect the specific page you want to look at.  This screen is know as the \"Index\nscreen\".\n\nOptions\n\n  V - Place a \"V\" in the field next to the page key value you want to see.  This\n      will select the report for viewing and will return the \"view mode\" screen.\n\n\n**PF Keys**\nPF1 - This PF key will always take you to a help screen.  That is how you got\n      here.\n\n\n$$$REPT,F,VIEWBRI\nPF3 - Will take to back one level from where you are.  Ex: If you are in view\n      mode (viewing a report) by pressing the PF3 key you will go back to the\n      key index selection screen.\n\nPF7 - Will go backwards in the list.  It will only go one page at a time.\n\nPF8 - Moves you forward.  It works just like the PF7 key except it moves\n      forward.\n\n\n\n\n\n\n\n\n\n\n\n\n$$$REPT,L,VIEWBRI\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPREPU": {"ttr": 7945, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01 \\x08/\\x01 \\x08/\\x18T\\x00\\x7f\\x00\\x7f\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-03-22T18:54:25", "lines": 127, "newlines": 127, "modlines": 0, "user": "IBMUSER"}, "text": "This screen is used to display the USER ID record for any given user.\n\nRACF ID - This is the user's ID that they use to sign on CICS with.  Using the\n          CESN transaction.\n\nBANK ---- This is the default bank number to be used by the report viewing\n          program to help determine what reports this user has access to.\n\nBRANCH -- This is the default branch number to be used by the report viewing\n          program to help determine what reports this user has access to.\n\nREPORT IDS - These fields are used to control what reports a user has access to\n          when using the \"REPT\" transaction. These report ids are used\n          in conjunction with the access to reports field.  See the access to\n          reports field for an explanation of the values of that field.\n\n\n\n\n\n$$$REPU,F,USERDTL\nTYPE OF ACCESS TO REPORTS - The value of this field will determine what reports\n          a user can view with the \"REPT\" transaction.  The valid values for\n          this field are listed below.\n\n  \"N\" - No access at all to the report viewing system.\n  \"A\" - Access to all reports and all banks and branches.\n  \"B\" - Access to one bank and any branch.  This option does not restrict access\n        by report ID only bank number.  You may view any report for the bank\n        number in the user's ID record.\n  \"R\" - Access to one bank and one branch.  This option does not restrict access\n        by report ID only bank and branch number.  You may view any report for\n        the bank number and branch number in the user's ID record.\n  \"C\" - Access to one bank and any branch and the report ids listed.  This\n        option restricts access by report ID and bank number.  You may view only\n        the reports listed in the user's ID record for the bank number in the\n        user's ID record.\n  \"D\" - Access to one bank and one branch and the report ids listed.  This\n        option restricts access by report ID, bank number and branch number.\n        You may view only the reports listed in the user's ID record for the\n        bank number and branch number in the user's ID record.\n$$$REPU,M,USERDTL\n\nUPDATE ACCESS TO SECURITY RECORDS - The value of this field will determine the\n          type of access a user has to this transaction or the USERID (security)\n          file.  The valid values for this are listed below.\n\n  \"N\" - No access at all to the report viewing system USERID records.\n  \"A\" - Access to all USER ID records for all banks and branches\n  \"B\" - Access to all USER ID records for one bank and any branch.  This option\n        will restrict access to only one bank number.\n  \"R\" - Access to all USER ID records for one bank and one branch.  This option\n        will restrict access to only one bank and one branch number.\n\n\n\n\n\n\n\n\n\n$$$REPU,L,USERDTL\n  This is a transaction to display, list, add, or change a USER ID record.\nThere are six options.  Just enter the number of the option you want to use and\npress the enter key.  Listed below is an explanation of the options and the\nother fields that appear on the screen.\n\nOption  -------- Enter into this field the number of the option you wish to use.\nUSER ID or LIST- This is the USER ID you which to deal with.   Or a prefix to be\n               used as a starting point for a search or list(option 2).\n\nOption 1 - This option will add a new USER ID record to the file.  The USER ID\n           must be entered into the USER ID field for this option.\n\nOption 2 - This option will display a list of the user ids on file.  You may put\n           in a starting prefix with this option.  You may select the user id\n           you want to look at from the screen that is produced by this option.\n\nOption 3 - This option will copy an existing user id record and create a new\n           user id record.  The user id (existing user id) must be entered into\n           the USER ID field for this option.\n\n$$$REPU,F,USERSTL\n\nOption 4 - Display a USER ID record.  The USER ID must be entered into the USER\n           ID field for this option.\n\nOption 5 - Update a USER ID record.  The USER ID must be entered into the USER\n           ID field for this option.\n\nOption 6 - Delete a USER ID record.  The USER ID must be entered into the USER\n           ID field for this option.\n\n\n\n\n\n\n\n\n\n\n\n$$$REPU,L,USERSTL\nThis screen will display a list of all the user ids available for your RACF ID.\nYou may select a user id from this screen.  There are four selection options\nthat are available from this screen.  They are listed below.  Just enter the\nletter of the option you wish to use in the field next to the user id you want.\n\nOptions\n  C - Place a \"C\" in the field next to the user id you want to copy.  This will\n      select the user id as the record to be copied and will start up the copy\n      function.  It will return the COPY FUNCTION screen.\n\n  D - Place a \"D\" in the field next to the user id you want to see.  This will\n      select the user id record to be displayed.  It will return DISPLAY screen.\n\n  U - Place a \"U\" in the field next to the user id you want to update.  This\n      will select the user id as the record to be updated and will start up the\n      update function. It will return the UPDATE FUNCTION screen.\n\n  Z - Place a \"Z\" in the field next to the user id you want to delete.  This\n      will select the user id as the record to be deleted and will start up the\n      delete function. It will return the DELETE FUNCTION screen.\n$$$REPU,O,USERBRS\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPREXX": {"ttr": 7948, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x16\\x01 \\x08/\\x01 \\x08/\\x19\\x03\\x00&\\x00'\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-03-22T19:03:16", "lines": 38, "newlines": 39, "modlines": 0, "user": "IBMUSER"}, "text": "/* REXX EXEC TO CREATE RECORDS TO BE LOADED INTO REPT HELP FILE  */\n\"EXECIO * DISKR INPUT (FINI STEM INREC.\"\nREC_COUNT = 0\nLN_CNT = 0\nO_DATA = '                       '\nII = 1\nDO I=1 TO INREC.0\n  IF SUBSTR(INREC.I,1,3) = '$$$' THEN\n    DO\n      O_TYPE    = SUBSTR(INREC.I,1,3)\n      O_TRAN_ID = SUBSTR(INREC.I,4,4)\n      O_STATUS  = SUBSTR(INREC.I,9,1)\n      O_MAP     = SUBSTR(INREC.I,11,8)\n      IF O_STATUS = 'F' THEN\n         W_PAGE = 1\n       ELSE\n         W_PAGE = W_PAGE + 1\n      IF O_STATUS = 'O' THEN\n         W_PAGE = 1\n      SAY 'HELP-RECORD=' O_TRAN_ID LEFT(O_MAP,8,' ') W_PAGE O_STATUS\n    OUTREC1 = O_TRAN_ID || LEFT(O_MAP,8,' ') || ,\n       RIGHT(W_PAGE,2,0) || O_STATUS || ,\n       W_DATA.1 || W_DATA.2 || ,\n       W_DATA.3 || W_DATA.4 || W_DATA.5 || W_DATA.6 || W_DATA.7 || ,\n       W_DATA.8 || W_DATA.9 || W_DATA.10 || W_DATA.11 || W_DATA.12 || ,\n     W_DATA.13 || W_DATA.14 || W_DATA.15 || W_DATA.16 || W_DATA.17 || ,\n       W_DATA.18 || W_DATA.19 || W_DATA.20\n      QUEUE LEFT(OUTREC1,1615)\n      \"EXECIO * DISKW OUT1\"\n      REC_COUNT = REC_COUNT + 1\n      II = 1\n      ITERATE\n    END\n  W_DATA.II = INREC.I\n  II = II + 1\nEND\n SAY 'RECORD COUNT = ' REC_COUNT\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPRXJ": {"ttr": 7950, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x11\\x01 \\x08/\\x01 \\x13\\x1f\\x15%\\x00\\x11\\x00\\x10\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-10T15:25:11", "lines": 17, "newlines": 16, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "RENAME": {"ttr": 7952, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x00\\x10\\x01 \\x10O\\x01 \\x14\\x7f\\x14'\\x00?\\x00\\x0b\\x00?\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.14", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-26T14:27:10", "lines": 63, "newlines": 11, "modlines": 63, "user": "IBMUSER"}, "text": "//TSSRENA  JOB (NAME),\n//         NOTIFY=&SYSUID,\n//         CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//******************************************************************\n//*       THIS HAS THREE BASE STEPS                                *\n//*   1)  DELETE THE OLD VERSIONS OF THESE FILES                   *\n//*   2)  RENAME THE CURRENT VERSIONS TO BE \"OLD\"                  *\n//*   3)  RENAME THE \"NEW\" FILES TO BE THE CURRENT FILES  *\n//******************************************************************\n//STEP1   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n\n     DELETE    (OPT.CICS.OLD.REPORT.DETAIL.FILE)      -\n               CLUSTER PURGE\n     DELETE    (OPT.CICS.OLD.REPORT.INDEX.FILE)        -\n               CLUSTER PURGE\n     DELETE    (OPT.CICS.OLD.REPORT.HISTORY.FILE)      -\n               CLUSTER PURGE\n\n   ALTER OPT.CICS.REPORT.DETAIL.FILE    -\n     NEWNAME(OPT.CICS.OLD.REPORT.DETAIL.FILE)\n   ALTER OPT.CICS.REPORT.DETAIL.FILE.*  -\n     NEWNAME(OPT.CICS.OLD.REPORT.DETAIL.FILE.*)\n\n   ALTER OPT.CICS.REPORT.INDEX.FILE    -\n     NEWNAME(OPT.CICS.OLD.REPORT.INDEX.FILE)\n   ALTER OPT.CICS.REPORT.INDEX.FILE.*  -\n     NEWNAME(OPT.CICS.OLD.REPORT.INDEX.FILE.*)\n\n   ALTER OPT.CICS.REPORT.HISTORY.FILE    -\n     NEWNAME(OPT.CICS.OLD.REPORT.HISTORY.FILE)\n   ALTER OPT.CICS.REPORT.HISTORY.FILE.*  -\n     NEWNAME(OPT.CICS.OLD.REPORT.HISTORY.FILE.*)\n\n   ALTER OPT.CICS.NEW.REPORT.DETAIL.FILE    -\n     NEWNAME(OPT.CICS.REPORT.DETAIL.FILE)\n   ALTER OPT.CICS.NEW.REPORT.DETAIL.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.DETAIL.FILE.*)\n\n   ALTER OPT.CICS.NEW.REPORT.INDEX.FILE    -\n     NEWNAME(OPT.CICS.REPORT.INDEX.FILE)\n   ALTER OPT.CICS.NEW.REPORT.INDEX.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.INDEX.FILE.*)\n\n   ALTER OPT.CICS.NEW.REPORT.HISTORY.FILE    -\n     NEWNAME(OPT.CICS.REPORT.HISTORY.FILE)\n   ALTER OPT.CICS.NEW.REPORT.HISTORY.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.HISTORY.FILE.*)\n//\n   ALTER OPT.CICS.OLD.REPORT.DETAIL.FILE    -\n     NEWNAME(OPT.CICS.REPORT.DETAIL.FILE)\n   ALTER OPT.CICS.OLD.REPORT.DETAIL.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.DETAIL.FILE.*)\n   ALTER OPT.CICS.OLD.REPORT.INDEX.FILE    -\n     NEWNAME(OPT.CICS.REPORT.INDEX.FILE)\n   ALTER OPT.CICS.OLD.REPORT.INDEX.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.INDEX.FILE.*)\n   ALTER OPT.CICS.OLD.REPORT.HISTORY.FILE    -\n     NEWNAME(OPT.CICS.REPORT.HISTORY.FILE)\n   ALTER OPT.CICS.OLD.REPORT.HISTORY.FILE.*  -\n     NEWNAME(OPT.CICS.REPORT.HISTORY.FILE.*)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPROJ2": {"ttr": 8193, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x07\\x01 \\x13/\\x01 \\x14\\x7f\\x140\\x00h\\x00D\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-05-11T00:00:00", "modifydate": "2020-05-26T14:30:07", "lines": 104, "newlines": 68, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREP2  JOB (NAME),\n//            NOTIFY=&SYSUID,\n//            CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//STEP1   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     DELETE    (OPT.CICS.REPORT.DETAIL.FILE)           -\n               CLUSTER PURGE\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.DETAIL.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(18,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.DETAIL.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(7334,11728)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.DETAIL.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n     DELETE    (OPT.CICS.REPORT.INDEX.FILE)            -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.INDEX.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.INDEX.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.INDEX.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n//****************************************************************\n//*   SORT THE INDEX RECORDS                                     *\n//****************************************************************\n//STEPIDX  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=51,BLKSIZE=20400,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE HISTORY RECORDS                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=100,BLKSIZE=23000,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE DETAIL RECORD                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=100,BLKSIZE=26000,RECFM=VB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//STEP2   EXEC PGM=IDCAMS\n//IN1      DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//OUT1     DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//IN2      DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//OUT2     DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1) OUTFILE(OUT1)\n     REPRO  INFILE(IN2) OUTFILE(OUT2)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPROJ3": {"ttr": 8196, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00#\\x01 \\x13/\\x01 \\x14\\x7f\\x14'\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-05-11T00:00:00", "modifydate": "2020-05-26T14:27:23", "lines": 29, "newlines": 29, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREPR  JOB (NAME),\n//            NOTIFY=&SYSUID,\n//            CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//STEP1   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     DELETE    (OPT.CICS.REPORT.HISTORY.FILE)          -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.HISTORY.FILE) -\n               VOLUMES(XXXX01)                        -\n               INDEXED                              -\n               KEYS(31,0)                            -\n               SPEED                                  -\n               CYL(1 1)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.HISTORY.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)  -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.HISTORY.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n//STEP2   EXEC PGM=IDCAMS\n//IN3      DD DSN=OPT.PRINT.CICS.HISTORY.DPT,DISP=SHR\n//OUT3     DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN3) OUTFILE(OUT3)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTB01": {"ttr": 8198, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x14\\x01 \\x10O\\x01 \\x10\\x8f\\x11 \\x00\\x0e\\x00\\r\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-17T11:20:14", "lines": 14, "newlines": 13, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"T\" INDEX RECORDS FROM THE ONLINE HISTORY FILE\n000110*    THESE ARE THE PRIMARY HISTORY RECORDS\n000200     03 :Z:-TYPE               PIC X(1).\n000300     03 :Z:-BANK               PIC S9(3)  COMP-3.\n000400     03 :Z:-BRANCH             PIC S9(3)  COMP-3.\n000500     03 :Z:-REPORT-ID          PIC X(8).\n000600     03 :Z:-REPORT-SID         PIC X(8).\n000700     03 :Z:-REPORT-DATE        PIC 9(6).\n000800     03 :Z:-KEY-FILLER         PIC X(4).\n000900     03 :Z:-TITLE-NAME         PIC X(50).\n001000     03 :Z:-TOTAL-PAGES        PIC S9(7)  COMP-3.\n001100     03 :Z:-TOTAL-LINES        PIC S9(9)  COMP-3.\n001200     03 :Z:-REPORT-FILE        PIC X(6).\n001300     03 :Z:-FILLER             PIC X(4).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTB02": {"ttr": 8200, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x17\\x01 \\x10O\\x01 \\x10\\x7f\\x18F\\x00\\x0c\\x00\\x0b\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-16T18:46:17", "lines": 12, "newlines": 11, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"K\" INDEX RECORDS FROM THE ONLINE INDEX FILE\n000110*    THESE ARE THE PRIMARY INDEX RECORDS\n000200     03 :Z:-TYPE             PIC X(1).                                  00\n000300     03 :Z:-REPORT-ID         PIC X(8).                                 00\n000400     03 :Z:-REPORT-SID        PIC X(8).                                 00\n000500     03 :Z:-REPORT-DATE       PIC 9(6).                                 00\n000600     03 :Z:-BANK              PIC S9(3)  COMP-3.                        00\n000700     03 :Z:-BRANCH            PIC S9(3)  COMP-3.                        00\n000800     03 :Z:-SEQ               PIC S9(7)  COMP-3.                        00\n000900     03 :Z:-PAGE              PIC S9(7)  COMP-3.                        00\n001000     03 :Z:-KEY-LENGTH        PIC S9(3)  COMP-3.                        00\n001100     03 :Z:-REPORT-KEY        PIC X(20).                                00\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTB03": {"ttr": 8202, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00 \\x01 \\x10O\\x01 \\x10\\x7f F\\x00/\\x00-\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-16T20:46:20", "lines": 47, "newlines": 45, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"T\" REPORDS FROM THE TITLE (EXTRACT) FILE\n000200*    THESE ARE THE PRIMARY TITLE RECORDS (BATCH ONLY)\n000300     03 :Z:-KEY.\n000400     05 :Z:-TYPE                PIC X.\n000500     05 :Z:-REPORT-ID           PIC X(8).\n000600     05 :Z:-REPORT-SID          PIC X(8).\n000700     03  FILLER.\n000800     05 :Z:-APPLICATION         PIC X(3).\n000900     05 :Z:-CYCLES              PIC S9(3) COMP-3.\n001000     05 :Z:-KEEP-DAYS           PIC S9(3) COMP-3.\n001100     05 :Z:-CYCLE-TYPE          PIC X.\n001200     05 :Z:-EXTRACT             PIC X(1).\n001300     05 :Z:-FORCE-BANK          PIC S9(3) COMP-3.\n001400     05 :Z:-BANK                PIC S9(3) COMP-3  OCCURS 10 TIMES.\n001500     05 :Z:-NAME                PIC X(50).\n001600     05 :Z:-TID-DATA-1          PIC X(50).\n001700     05 :Z:-TID-LINE-1          PIC S9(3) COMP-3.\n001800     05 :Z:-TID-POSITION-1      PIC S9(3) COMP-3.\n001900     05 :Z:-TID-LENGTH-1        PIC S9(3) COMP-3.\n002000     05 :Z:-TID-DATA-2          PIC X(50).\n002100     05 :Z:-TID-LINE-2          PIC S9(3) COMP-3.\n002200     05 :Z:-TID-POSITION-2      PIC S9(3) COMP-3.\n002300     05 :Z:-TID-LENGTH-2        PIC S9(3) COMP-3.\n002400     05 :Z:-TID-DATA-3          PIC X(50).\n002500     05 :Z:-TID-LINE-3          PIC S9(3) COMP-3.\n002600     05 :Z:-TID-POSITION-3      PIC S9(3) COMP-3.\n002700     05 :Z:-TID-LENGTH-3        PIC S9(3) COMP-3.\n002800     05 :Z:-RDT-LINE            PIC S9(3) COMP-3.\n002900     05 :Z:-RDT-POSITION        PIC S9(3) COMP-3.\n003000     05 :Z:-RDT-TYPE            PIC X.\n003100     05 :Z:-KY1-LINE            PIC S9(3) COMP-3.\n003200     05 :Z:-KY1-POSITION        PIC S9(3) COMP-3.\n003300     05 :Z:-KY1-LENGTH          PIC S9(3) COMP-3.\n003400     05 :Z:-KY2-LINE            PIC S9(3) COMP-3.\n003500     05 :Z:-KY2-POSITION        PIC S9(3) COMP-3.\n003600     05 :Z:-KY2-LENGTH          PIC S9(3) COMP-3.\n003700     05 :Z:-KY3-LINE            PIC S9(3) COMP-3.\n003800     05 :Z:-KY3-POSITION        PIC S9(3) COMP-3.\n003900     05 :Z:-KY3-LENGTH          PIC S9(3) COMP-3.\n004000     05 :Z:-BANK-LINE           PIC S9(3) COMP-3.\n004100     05 :Z:-BANK-POSITION       PIC S9(3) COMP-3.\n004200     05 :Z:-BANK-LENGTH         PIC S9(3) COMP-3.\n004300     05 :Z:-BRANCH-LINE         PIC S9(3) COMP-3.\n004400     05 :Z:-BRANCH-POSITION     PIC S9(3) COMP-3.\n004500     05 :Z:-BRANCH-LENGTH       PIC S9(3) COMP-3.\n004600     05 :Z:-REPORT-FILE         PIC X(6).\n004700     05  FILLER                 PIC X(3).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTB04": {"ttr": 8204, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00C\\x01 \\x10O\\x01 \\x10\\x8f\\x10R\\x00!\\x00\\x1f\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-17T10:52:43", "lines": 33, "newlines": 31, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"R\" RECORDS FROM THE TITLE (EXTRACT) FILE\n000200*    THESE ARE THE SECONDARY TITLE RECORDS (BATCH ONLY)\n000210     03 :Z:-KEY.\n000300     05 :Z:-TYPE               PIC X.\n000400     05 :Z:-REPORT-ID          PIC X(8).\n000500     05 :Z:-REPORT-SID         PIC X(8).\n000510     03 FILLER.\n000600     05 :Z:-APPLICATION        PIC X(3).\n000700     05 :Z:-EXTRACT            PIC X(1).\n000800     05 :Z:-BANKS              PIC S9(3) COMP-3  OCCURS 10 TIMES.\n000900     05 :Z:-NAME               PIC X(50).\n001000     05 :Z:-TID-DATA-1         PIC X(30).\n001100     05 :Z:-TID-LINE-1         PIC S9(3) COMP-3.\n001200     05 :Z:-TID-POSITION-1     PIC S9(3) COMP-3.\n001300     05 :Z:-TID-LENGTH-1       PIC S9(3) COMP-3.\n001400     05 :Z:-TID-DATA-2         PIC X(30).\n001500     05 :Z:-TID-LINE-2         PIC S9(3) COMP-3.\n001600     05 :Z:-TID-POSITION-2     PIC S9(3) COMP-3.\n001700     05 :Z:-TID-LENGTH-2       PIC S9(3) COMP-3.\n001800     05 :Z:-TID-DATA-3         PIC X(30).\n001900     05 :Z:-TID-LINE-3         PIC S9(3) COMP-3.\n002000     05 :Z:-TID-POSITION-3     PIC S9(3) COMP-3.\n002100     05 :Z:-TID-LENGTH-3       PIC S9(3) COMP-3.\n002200     05 :Z:-KY1-LINE           PIC S9(3) COMP-3.\n002300     05 :Z:-KY1-POSITION       PIC S9(3) COMP-3.\n002400     05 :Z:-KY1-LENGTH         PIC S9(3) COMP-3.\n002500     05 :Z:-KY2-LINE           PIC S9(3) COMP-3.\n002600     05 :Z:-KY2-POSITION       PIC S9(3) COMP-3.\n002700     05 :Z:-KY2-LENGTH         PIC S9(3) COMP-3.\n002800     05 :Z:-KY3-LINE           PIC S9(3) COMP-3.\n002900     05 :Z:-KY3-POSITION       PIC S9(3) COMP-3.\n003000     05 :Z:-KY3-LENGTH         PIC S9(3) COMP-3.\n003100     05 FILLER                 PIC X(23).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTB05": {"ttr": 8206, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00I\\x01 \\x10\\x7f\\x01 \\x11?\\x19\\x13\\x00\\n\\x00\\t\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-04-16T00:00:00", "modifydate": "2020-04-22T19:13:49", "lines": 10, "newlines": 9, "modlines": 0, "user": "IBMUSER"}, "text": "000010*    REPORT REPORDS FROM THE ONLINE REPORT DETAIL FILE\n000100 01 :Z:-RECORD.\n000200     02 :Z:-KEY.\n000300     03 :Z:-REPORT-ID            PIC X(8).\n000400     03 :Z:-REPORT-DATE          PIC 9(6).\n000500     03 :Z:-SEQ                  PIC S9(7)  COMP-3.\n000600     02 FILLER.\n000700     03 :Z:-NUMBER-OF-LINES      PIC S9(3)  COMP-3.\n000800     03 :Z:-LINES                PIC X(133)\n000900         OCCURS 88 TIMES DEPENDING ON :Z:I-COUNT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTB06": {"ttr": 8208, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x002\\x01 \\x10\\x7f\\x01 \\x11?\\x11\\x07\\x00\\r\\x00\\r\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-04-16T00:00:00", "modifydate": "2020-04-22T11:07:32", "lines": 13, "newlines": 13, "modlines": 0, "user": "IBMUSER"}, "text": "000100 01  :Z:-INDEX-RECORD.\n000200     02 :Z:-KEY.\n000300       03 :Z:-TYPE                PIC X(1).\n000400       03 :Z:-REPORT-ID           PIC X(8).\n000500       03 :Z:-REPORT-SID          PIC X(8).\n000600       03 :Z:-REPORT-DATE         PIC 9(6).\n000700       03 :Z:-BANK                PIC S9(3)  COMP-3.\n000800       03 :Z:-BRANCH              PIC S9(3)  COMP-3.\n000900       03 :Z:-SEQ                 PIC S9(7)  COMP-3.\n001000     02 FILLER.\n001100       03 :Z:-DSEQ                PIC S9(7)  COMP-3.\n001200       03 :Z:-KEY-LENGTH          PIC S9(3)  COMP-3.\n001300       03 :Z:-KEY-VALUE           PIC X(20).\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTB07": {"ttr": 8210, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x002\\x01 \\x10\\x7f\\x01 \\x11\\x1f\\x168\\x00\\x0f\\x00\\x0e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-04-16T00:00:00", "modifydate": "2020-04-20T16:38:32", "lines": 15, "newlines": 14, "modlines": 0, "user": "IBMUSER"}, "text": "000100 01  :Z:-HISTORY-RECORD.\n000200     02 :Z:-KEY.\n000300       03 :Z:-TYPE                PIC X(1).\n000400       03 :Z:-BANK                PIC S9(3)  COMP-3.\n000500       03 :Z:-BRANCH              PIC S9(3)  COMP-3.\n000600       03 :Z:-REPORT-ID           PIC X(8).\n000700       03 :Z:-REPORT-SID          PIC X(8).\n000800       03 :Z:-REPORT-DATE         PIC 9(6).\n000900       03 FILLER                  PIC X(4).\n001000     02 FILLER.\n001100       03 :Z:-TITLE-NAME          PIC X(50).\n001200       03 :Z:-PAGES               PIC S9(7)  COMP-3.\n001300       03 :Z:-LINES               PIC S9(9)  COMP-3.\n001310       03 :Z:-REPORT-FILE         PIC X(6).\n001400       03 FILLER                  PIC X(4).\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTB08": {"ttr": 8212, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00F\\x01 \\x10\\x7f\\x01 \\x10\\x7f I\\x000\\x000\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-04-16T00:00:00", "modifydate": "2020-04-16T20:49:46", "lines": 48, "newlines": 48, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"T\" REPORDS FROM THE TITLE (EXTRACT) FILE\n000200*    THESE ARE THE PRIMARY TITLE RECORDS (BATCH ONLY)\n000210 01 :Z:-RECORD.\n000310     03 :Z:-KEY.\n000400     05 :Z:-TYPE                PIC X.\n000500     05 :Z:-REPORT-ID           PIC X(8).\n000600     05 :Z:-REPORT-SID          PIC X(8).\n000700     03  FILLER.\n000800     05 :Z:-APPLICATION         PIC X(3).\n000900     05 :Z:-CYCLES              PIC S9(3) COMP-3.\n001000     05 :Z:-KEEP-DAYS           PIC S9(3) COMP-3.\n001100     05 :Z:-CYCLE-TYPE          PIC X.\n001200     05 :Z:-EXTRACT             PIC X(1).\n001300     05 :Z:-FORCE-BANK          PIC S9(3) COMP-3.\n001400     05 :Z:-BANK                PIC S9(3) COMP-3  OCCURS 10 TIMES.\n001500     05 :Z:-NAME                PIC X(50).\n001600     05 :Z:-TID-DATA-1          PIC X(50).\n001700     05 :Z:-TID-LINE-1          PIC S9(3) COMP-3.\n001800     05 :Z:-TID-POSITION-1      PIC S9(3) COMP-3.\n001900     05 :Z:-TID-LENGTH-1        PIC S9(3) COMP-3.\n002000     05 :Z:-TID-DATA-2          PIC X(50).\n002100     05 :Z:-TID-LINE-2          PIC S9(3) COMP-3.\n002200     05 :Z:-TID-POSITION-2      PIC S9(3) COMP-3.\n002300     05 :Z:-TID-LENGTH-2        PIC S9(3) COMP-3.\n002400     05 :Z:-TID-DATA-3          PIC X(50).\n002500     05 :Z:-TID-LINE-3          PIC S9(3) COMP-3.\n002600     05 :Z:-TID-POSITION-3      PIC S9(3) COMP-3.\n002700     05 :Z:-TID-LENGTH-3        PIC S9(3) COMP-3.\n002800     05 :Z:-RDT-LINE            PIC S9(3) COMP-3.\n002900     05 :Z:-RDT-POSITION        PIC S9(3) COMP-3.\n003000     05 :Z:-RDT-TYPE            PIC X.\n003100     05 :Z:-KY1-LINE            PIC S9(3) COMP-3.\n003200     05 :Z:-KY1-POSITION        PIC S9(3) COMP-3.\n003300     05 :Z:-KY1-LENGTH          PIC S9(3) COMP-3.\n003400     05 :Z:-KY2-LINE            PIC S9(3) COMP-3.\n003500     05 :Z:-KY2-POSITION        PIC S9(3) COMP-3.\n003600     05 :Z:-KY2-LENGTH          PIC S9(3) COMP-3.\n003700     05 :Z:-KY3-LINE            PIC S9(3) COMP-3.\n003800     05 :Z:-KY3-POSITION        PIC S9(3) COMP-3.\n003900     05 :Z:-KY3-LENGTH          PIC S9(3) COMP-3.\n004000     05 :Z:-BANK-LINE           PIC S9(3) COMP-3.\n004100     05 :Z:-BANK-POSITION       PIC S9(3) COMP-3.\n004200     05 :Z:-BANK-LENGTH         PIC S9(3) COMP-3.\n004300     05 :Z:-BRANCH-LINE         PIC S9(3) COMP-3.\n004400     05 :Z:-BRANCH-POSITION     PIC S9(3) COMP-3.\n004500     05 :Z:-BRANCH-LENGTH       PIC S9(3) COMP-3.\n004600     05 :Z:-REPORT-FILE         PIC X(6).\n004700     05  FILLER                 PIC X(3).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTB09": {"ttr": 8214, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01 \\x10\\x7f\\x01 \\x10\\x7f Q\\x00 \\x00\\x1f\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-04-16T00:00:00", "modifydate": "2020-04-16T20:51:14", "lines": 32, "newlines": 31, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"R\" RECORDS FROM THE TITLE (EXTRACT) FILE\n000200*    THESE ARE THE SECONDARY TITLE RECORDS (BATCH ONLY)\n000210 01 :Z:-RECORD.\n000300     03 :Z:-TYPE               PIC X.\n000400     03 :Z:-REPORT-ID          PIC X(8).\n000500     03 :Z:-REPORT-SID         PIC X(8).\n000600     03 :Z:-APPLICATION        PIC X(3).\n000700     03 :Z:-EXTRACT            PIC X(1).\n000800     03 :Z:-BANKS              PIC S9(3) COMP-3  OCCURS 10 TIMES.\n000900     03 :Z:-NAME               PIC X(50).\n001000     03 :Z:-TID-DATA-1         PIC X(30).\n001100     03 :Z:-TID-LINE-1         PIC S9(3) COMP-3.\n001200     03 :Z:-TID-POSITION-1     PIC S9(3) COMP-3.\n001300     03 :Z:-TID-LENGTH-1       PIC S9(3) COMP-3.\n001400     03 :Z:-TID-DATA-2         PIC X(30).\n001500     03 :Z:-TID-LINE-2         PIC S9(3) COMP-3.\n001600     03 :Z:-TID-POSITION-2     PIC S9(3) COMP-3.\n001700     03 :Z:-TID-LENGTH-2       PIC S9(3) COMP-3.\n001800     03 :Z:-TID-DATA-3         PIC X(30).\n001900     03 :Z:-TID-LINE-3         PIC S9(3) COMP-3.\n002000     03 :Z:-TID-POSITION-3     PIC S9(3) COMP-3.\n002100     03 :Z:-TID-LENGTH-3       PIC S9(3) COMP-3.\n002200     03 :Z:-KY1-LINE           PIC S9(3) COMP-3.\n002300     03 :Z:-KY1-POSITION       PIC S9(3) COMP-3.\n002400     03 :Z:-KY1-LENGTH         PIC S9(3) COMP-3.\n002500     03 :Z:-KY2-LINE           PIC S9(3) COMP-3.\n002600     03 :Z:-KY2-POSITION       PIC S9(3) COMP-3.\n002700     03 :Z:-KY2-LENGTH         PIC S9(3) COMP-3.\n002800     03 :Z:-KY3-LINE           PIC S9(3) COMP-3.\n002900     03 :Z:-KY3-POSITION       PIC S9(3) COMP-3.\n003000     03 :Z:-KY3-LENGTH         PIC S9(3) COMP-3.\n003100     03 FILLER                 PIC X(23).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTC01": {"ttr": 8216, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00H\\x01 \\x10O\\x01 \\x13\\x1f\\x16B\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-10T16:42:48", "lines": 14, "newlines": 14, "modlines": 0, "user": "IBMUSER"}, "text": "000200*    \"T\" INDEX RECORDS FROM THE ONLINE HISTORY FILE\n000300 01  :Z:-AREA-INDEX.\n000400     03 :Z:-TYPE               PIC X(1).\n000500     03 :Z:-BANK               PIC S9(3)  COMP-3.\n000600     03 :Z:-BRANCH             PIC S9(3)  COMP-3.\n000700     03 :Z:-REPORT-ID          PIC X(8).\n000800     03 :Z:-REPORT-SID         PIC X(8).\n000900     03 :Z:-REPORT-DATE        PIC X(6).\n001000     03 :Z:-KEY-FILLER         PIC X(4).\n001100     03 :Z:-TITLE-NAME         PIC X(50).\n001200     03 :Z:-TOTAL-PAGES        PIC S9(7)  COMP-3.\n001300     03 :Z:-TOTAL-LINES        PIC S9(9)  COMP-3.\n001400     03 :Z:-REPORT-FILE        PIC X(6).\n001500     03 :Z:-FILLER             PIC X(4).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTC02": {"ttr": 8218, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00W\\x01 \\x10O\\x01 \\x13\\x1f\\x16B\\x00\\r\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-10T16:42:57", "lines": 13, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "000100*    \"K\" INDEX RECORDS FROM THE ONLINE INDEX FILE\n000200* ONLINE INDEX RECORD LAYOUT.\n000300 01  :Z:-AREA-INDEX.\n000400     03 :Z:-TYPE               PIC X(1).\n000500     03 :Z:-REPORT-ID          PIC X(8).\n000600     03 :Z:-REPORT-SID         PIC X(8).\n000700     03 :Z:-REPORT-DATE        PIC 9(6).\n000800     03 :Z:-BANK               PIC S9(3)  COMP-3.\n000900     03 :Z:-BRANCH             PIC S9(3)  COMP-3.\n001000     03 :Z:-SEQ                PIC S9(7)  COMP-3.\n001100     03 :Z:-PAGE               PIC S9(7)  COMP-3.\n001200     03 :Z:-KEY-LENGTH         PIC S9(3)  COMP-3.\n001300     03 :Z:-REPORT-KEY         PIC X(20).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTC03": {"ttr": 8220, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x03\\x01 \\x10O\\x01 \\x11\\x8f\\x11$\\x00.\\x00-\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-27T11:24:03", "lines": 46, "newlines": 45, "modlines": 0, "user": "IBMUSER"}, "text": "000010*    \"T\" REPORDS FROM THE TITLE (EXTRACT) FILE\n000020*    THESE ARE THE PRIMARY REPORT-ID RECORDS\n000100 01  :Z:-AREA-REPORT-ID.\n000200     03 :Z:-TYPE               PIC X.\n000300     03 :Z:-REPORT-ID          PIC X(8).\n000400     03 :Z:-REPORT-SID         PIC X(8).\n000500     03 :Z:-APPLICATION        PIC X(3).\n000600     03 :Z:-CYCLES             PIC S9(3) COMP-3.\n000700     03 :Z:-KEEP-DAYS          PIC S9(3) COMP-3.\n000800     03 :Z:-CYCLE-TYPE         PIC X.\n000900     03 :Z:-EXTRACT            PIC X(1).\n001000     03 :Z:-FORCE-BANK         PIC S9(3) COMP-3.\n001100     03 :Z:-BANK               PIC S9(3) COMP-3  OCCURS 10 TIMES.\n001200     03 :Z:-NAME               PIC X(50).\n001300     03 :Z:-TID-DATA-1         PIC X(50).\n001400     03 :Z:-TID-LINE-1         PIC S9(3) COMP-3.\n001500     03 :Z:-TID-POSITION-1     PIC S9(3) COMP-3.\n001600     03 :Z:-TID-LENGTH-1       PIC S9(3) COMP-3.\n001700     03 :Z:-TID-DATA-2         PIC X(50).\n001800     03 :Z:-TID-LINE-2         PIC S9(3) COMP-3.\n001900     03 :Z:-TID-POSITION-2     PIC S9(3) COMP-3.\n002000     03 :Z:-TID-LENGTH-2       PIC S9(3) COMP-3.\n002100     03 :Z:-TID-DATA-3         PIC X(50).\n002200     03 :Z:-TID-LINE-3         PIC S9(3) COMP-3.\n002300     03 :Z:-TID-POSITION-3     PIC S9(3) COMP-3.\n002400     03 :Z:-TID-LENGTH-3       PIC S9(3) COMP-3.\n002500     03 :Z:-RDT-LINE           PIC S9(3) COMP-3.\n002600     03 :Z:-RDT-POSITION       PIC S9(3) COMP-3.\n002700     03 :Z:-RDT-TYPE           PIC X.\n002800     03 :Z:-KY1-LINE           PIC S9(3) COMP-3.\n002900     03 :Z:-KY1-POSITION       PIC S9(3) COMP-3.\n003000     03 :Z:-KY1-LENGTH         PIC S9(3) COMP-3.\n003100     03 :Z:-KY2-LINE           PIC S9(3) COMP-3.\n003200     03 :Z:-KY2-POSITION       PIC S9(3) COMP-3.\n003300     03 :Z:-KY2-LENGTH         PIC S9(3) COMP-3.\n003400     03 :Z:-KY3-LINE           PIC S9(3) COMP-3.\n003500     03 :Z:-KY3-POSITION       PIC S9(3) COMP-3.\n003600     03 :Z:-KY3-LENGTH         PIC S9(3) COMP-3.\n003700     03 :Z:-BANK-LINE          PIC S9(3) COMP-3.\n003800     03 :Z:-BANK-POSITION      PIC S9(3) COMP-3.\n003900     03 :Z:-BANK-LENGTH        PIC S9(3) COMP-3.\n004000     03 :Z:-BRANCH-LINE        PIC S9(3) COMP-3.\n004100     03 :Z:-BRANCH-POSITION    PIC S9(3) COMP-3.\n004200     03 :Z:-BRANCH-LENGTH      PIC S9(3) COMP-3.\n004300     03 :Z:-REPORT-FILE        PIC X(6).\n004400     03 FILLER                 PIC X(3).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTC04": {"ttr": 8222, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x19\\x01 \\x10O\\x01 \\x11\\x8f\\x11$\\x00 \\x00 \\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-04-27T11:24:19", "lines": 32, "newlines": 32, "modlines": 0, "user": "IBMUSER"}, "text": "000010*    \"R\" RECORDS FORM THE TITLE (EXTRACT) FILE\n000020*    THESE ARE THE SECONDARY REPORT-SID RECORDS\n000100 01  :Z:-AREA-REPORT-SID.\n000200     03 :Z:-TYPE               PIC X.\n000300     03 :Z:-REPORT-ID          PIC X(8).\n000400     03 :Z:-REPORT-SID         PIC X(8).\n000500     03 :Z:-APPLICATION        PIC X(3).\n000600     03 :Z:-EXTRACT            PIC X(1).\n000700     03 :Z:-BANKS              PIC S9(3) COMP-3  OCCURS 10 TIMES.\n000800     03 :Z:-NAME               PIC X(50).\n000900     03 :Z:-TID-DATA-1         PIC X(30).\n001000     03 :Z:-TID-LINE-1         PIC S9(3) COMP-3.\n001100     03 :Z:-TID-POSITION-1     PIC S9(3) COMP-3.\n001200     03 :Z:-TID-LENGTH-1       PIC S9(3) COMP-3.\n001300     03 :Z:-TID-DATA-2         PIC X(30).\n001400     03 :Z:-TID-LINE-2         PIC S9(3) COMP-3.\n001500     03 :Z:-TID-POSITION-2     PIC S9(3) COMP-3.\n001600     03 :Z:-TID-LENGTH-2       PIC S9(3) COMP-3.\n001700     03 :Z:-TID-DATA-3         PIC X(30).\n001800     03 :Z:-TID-LINE-3         PIC S9(3) COMP-3.\n001900     03 :Z:-TID-POSITION-3     PIC S9(3) COMP-3.\n002000     03 :Z:-TID-LENGTH-3       PIC S9(3) COMP-3.\n002100     03 :Z:-KY1-LINE           PIC S9(3) COMP-3.\n002200     03 :Z:-KY1-POSITION       PIC S9(3) COMP-3.\n002300     03 :Z:-KY1-LENGTH         PIC S9(3) COMP-3.\n002400     03 :Z:-KY2-LINE           PIC S9(3) COMP-3.\n002500     03 :Z:-KY2-POSITION       PIC S9(3) COMP-3.\n002600     03 :Z:-KY2-LENGTH         PIC S9(3) COMP-3.\n002700     03 :Z:-KY3-LINE           PIC S9(3) COMP-3.\n002800     03 :Z:-KY3-POSITION       PIC S9(3) COMP-3.\n002900     03 :Z:-KY3-LENGTH         PIC S9(3) COMP-3.\n003000     03 FILLER                 PIC X(24).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPTC05": {"ttr": 8450, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x10\\x01 \\x10\\x8f\\x01 \\x10\\x8f\\x12A\\x00\\x0b\\x00\\x0b\\x00\\n\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-04-17T00:00:00", "modifydate": "2020-04-17T12:41:10", "lines": 11, "newlines": 11, "modlines": 10, "user": "IBMUSER"}, "text": "000100 01  :Z:-AREA-USER-ID.\n000200     03 :Z:-USER-ID            PIC X(8).\n000300     03 :Z:-TYPE               PIC X(1).\n000400        88 :Z:-TYPE-CODES VALUES 'N', 'A', 'B', 'R', 'C', 'D'.\n000500     03 :Z:-ACCESS             PIC X(1).\n000600        88 :Z:-ACCESS-CODES VALUES 'N', 'A', 'B', 'R'.\n000700     03 :Z:-BANK               PIC S9(3) COMP-3.\n000800     03 :Z:-BRANCH             PIC S9(3) COMP-3.\n000900     03 FILLER                 PIC X(10).\n001000     03 :Z:-NUM-REPORTS        PIC S9(3) COMP-3.\n001100     03 :Z:-REPORT-ID          PIC X(8) OCCURS 98 TIMES.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTC06": {"ttr": 8452, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01 \\x10\\x8f\\x01 \\x10\\x8f\\x12#\\x00\\x06\\x00\\x06\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-04-17T00:00:00", "modifydate": "2020-04-17T12:23:26", "lines": 6, "newlines": 6, "modlines": 0, "user": "IBMUSER"}, "text": "000100 01  :Z:-AREA-HELP.\n000200     03 :Z:-TRAN-ID            PIC X(4).\n000300     03 :Z:-MAP-NAME           PIC X(8).\n000400     03 :Z:-PAGE               PIC 9(2).\n000500     03 :Z:-STATUS             PIC X(1).\n000600     03 :Z:-MAP-DATA           PIC X(1600).\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTDEFD": {"ttr": 8454, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00I\\x01 \\x08/\\x01 \\x13\\x8f\\x176\\x00\\x1a\\x00\\x1e\\x00\\x18\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-17T17:36:49", "lines": 26, "newlines": 30, "modlines": 24, "user": "IBMUSER"}, "text": "//TSSRDEF  JOB CLASS=A,MSGCLASS=X,REGION=1M,\n//    NOTIFY=&SYSUID\n//****************************************************************\n//*   DEFINE THE ONLINE DETAIL FILE                              *\n//****************************************************************\n//STEP001  EXEC PGM=IDCAMS,REGION=750K\n//SYSPRINT DD  SYSOUT=*\n//AMSDUMP  DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.REPORT.DETAIL.FILE)       -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.DETAIL.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(18,0)                            -\n               CYL(100 50)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.DETAIL.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(7334,11728)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.DETAIL.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTDEFH": {"ttr": 8456, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\n\\x00'\\x01 \\x08/\\x01 \\x14\\x7f\\x140\\x00\\x19\\x00\\x1e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.10", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-26T14:30:27", "lines": 25, "newlines": 30, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSVSAM JOB 1,CLASS=A,MSGCLASS=X,\n//    NOTIFY=&SYSUID\n//****************************************************************\n//*   DEFINE THE ONLINE HELP  FILE                               *\n//****************************************************************\n//DEFHELP  EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.REPORT.HELP.FILE)         -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.HELP.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(14,0)                            -\n               CYL(1 1)                               -\n               FREESPACE(00,00)                       -\n               REUSE )                                -\n      DATA    ( NAME(OPT.CICS.REPORT.HELP.FILE.DATA) -\n               SHAREOPTIONS(2)                        -\n               RECORDSIZE(1615,1615)                  -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.HELP.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTDEFI": {"ttr": 8458, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00(\\x01 \\x08/\\x01 \\x13\\x8f\\x177\\x00\\x1c\\x00\\x1e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-17T17:37:28", "lines": 28, "newlines": 30, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "REPTDEFT": {"ttr": 8460, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x006\\x01 \\x08/\\x01 \\x14\\x7f\\x140\\x00\\x15\\x00\\x17\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-26T14:30:36", "lines": 21, "newlines": 23, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSVSAM JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*  DEFINE THE TITLE FILE\n//****************************************************************\n//AUTODEF EXEC PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n         DEL OPT.CICS.REPORT.TITLE.FILE\n         DEF CL (  NAME( OPT.CICS.REPORT.TITLE.FILE ) -\n                   RECSZ(305 310) -\n                   INDEXED -\n                   KEYS(17 0) -\n                   SHR(2 3) -\n                   VOLUMES( XXXXXX ) ) -\n           DATA (  NAME( OPT.CICS.REPORT.TITLE.FILE.DATA ) -\n                   CYL(1 1) -\n                   CISZ(2048) ) -\n          INDEX (  NAME( OPT.CICS.REPORT.TITLE.FILE.INDEX ) -\n                   TRK(1 1) -\n                   CISZ(1024) )\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTDEFU": {"ttr": 8462, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00A\\x01 \\x08/\\x01 \\x14\\x7f\\x140\\x00\\x16\\x00\\x17\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-26T14:30:41", "lines": 22, "newlines": 23, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSVSAM JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//*****************************************************************\n//*  DEFINE USER ID FILE\n//*****************************************************************\n//AUTODEF EXEC PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n         DEL OPT.CICS.REPORT.USERID.FILE\n         SET LASTCC=0\n         DEF CL (  NAME( OPT.CICS.REPORT.USERID.FILE ) -\n                   RECSZ(26 840) -\n                   INDEXED -\n                   KEYS(8 0) -\n                   SHR(2 3) -\n                   VOLUMES( XXXXXX ) ) -\n           DATA (  NAME( OPT.CICS.REPORT.USERID.FILE.DATA ) -\n                   CYL(1 1) -\n                   CISZ(2048) ) -\n          INDEX (  NAME( OPT.CICS.REPORT.USERID.FILE.INDEX ) -\n                   TRK(1 1) -\n                   CISZ(1024) )\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTDEFX": {"ttr": 8464, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00%\\x01 \\x08/\\x01 \\x13\\x8f\\x179\\x00\\x1a\\x00\\x1e\\x00\\x18\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-17T17:39:25", "lines": 26, "newlines": 30, "modlines": 24, "user": "IBMUSER"}, "text": "//TSSRDEF  JOB CLASS=A,MSGCLASS=X,REGION=1M,\n//    NOTIFY=&SYSUID\n//****************************************************************\n//*   DEFINE THE ONLINE HISTORY     FILE                         *\n//****************************************************************\n//STEP001  EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//AMSDUMP  DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.REPORT.HISTORY.FILE) -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.HISTORY.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(4 2)                               -\n               FREESPACE(00,00)                       -\n               REUSE )                                -\n      DATA    ( NAME(OPT.CICS.REPORT.HISTORY.FILE.DATA) -\n               SHAREOPTIONS(2)                    -\n               RECORDSIZE(100,120)                    -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.HISTORY.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPTS10": {"ttr": 8466, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Q\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x02\\x00\\xe5\\x00\\xe3\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:02:51", "lines": 229, "newlines": 227, "modlines": 0, "user": "IBMUSER"}, "text": "S10      TITLE 'ONLINE SUBROUTINE TO SEARCH FOR A CHARACTER STRING'\n*        PRINT NOGEN\n*----------------------------------------------------------------------\n* THIS IS A SUBROUTINE USED BY THE ONLINE PROGRAM CICSRP03 TO SEARCH\n* THE DETAIL RECORD PASSED TO THIS ROUTINE FOR A CHARACTER STRING.\n* THE LOCATION OF THE HIT WILL BE PASSED BACK AND AN INDICATION OF\n* WETHER THERE WAS A HIT OR NOT.  ALSO THERE CAN BE A STARTING POINT\n* WITHIN THE RECORD OF WHERE TO START THE SEARCH.  ALL CHARACTER\n* STRINGS \"MUST\" BE IN QUOTES.   EITHER SINGLE(') OR DOUBLE(\")\n*----------------------------------------------------------------------\n****************************************\n*     (C) COPYRIGHT BILLY FENWICK\n****************************************\n* THIS PROGRAM USES THE FOLLOWING REGISTERS\n*  R1   AVAILABLE\n*  R2   AVAILABLE\n*  R3   DSECT FOR COBOL PROGRAM\n*  R4   DSECT OF DETAIL RECORD\n*  R5   AVAILABLE\n*  R6   AVAILABLE\n*  R7   AVAILABLE\n*  R8   AVAILABLE\n*  R9   AVAILABLE\n*  R10  AVAILABLE\n*  R11  SAVE STARTING POINT OF DETAIL RECORD\n*  R12  BASE\n*  R13  BASE\n*  R14  LINKAGE\n*  R15  AVAILABLE\n         SPACE\n*----------------------------------------------------------------------\n* LINKAGE SECTION -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nREPTS10  CSECT\n         SAVE  (14,12)\n         BALR   R12,0                   ESTABLISH BASE REGISTER\n         USING  *,R12\n         B     MAIN\n         SPACE\n*----------------------------------------------------------------------\n* MAIN PROCESSING -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n         USING PARM1,R3\n         USING PARM2,R4\nMAIN     L     R3,0(R1)           LOAD ADDRESS WK-TOTAL-LINES\n         L     R4,4(R1)           LOAD ADDRESS D-LINES (1) FILE\n         LR    R11,R4             SAVE REG 4\n         SR    R5,R5\n         SR    R6,R6\n         CLI   WKUPDOW,C'U'       DO WE SEARCH BACKWARDS\n         BE    SEARUP             YES, WE DO\n         CP    WKSTALN,ZERO       DO WE HAVE A STARTING LINE NUMBER\n         BE    CHECKCOL           NO, THEN ALL IS OK\n         SP    WKSTALN,ONE        MAKE IT 1 LESS FOR MATH REASONS\nCHECKCOL CP    WKSTACO,ZERO       DO WE HAVE A STARTING COLUMN\n         BNE   FINDQT             BRANCH IF YES\n         ZAP   WKSTACO,ONE        MAKE IT 1\n         B     FINDQT             JUMP\nSEARUP   CP    WKSTALN,ZERO       DO WE HAVE A STARTING LINE NUMBER\n         BNE   DOLASTLN           YES, THEN USE IT\n         ZAP   WKSTALN,WKTOTLN    MAKE IT THE LAST LINE ON PAGE\nDOLASTLN SP    WKSTALN,ONE        MAKE IT 1 LESS FOR MATH REASONS\n         CP    WKSTACO,ZERO       DO WE HAVE A STARTING COLUMN\n         BNE   FINDQT             BRANCH IF YES\nZAPUP    ZAP   WKSTACO,N133       MAKE IT 133\nFINDQT   LA    R5,SEARARG         GET ADDRESS OF SEARCH ARGUMENT\n         LA    R6,55              LOAD FIELD LENGTH\nCHKQT    CLI   0(R5),X'7D'        DO WE HAVE A SINGLE QUOTE\n         BE    GOTQS              YES, WE GOT ONE\n         CLI   0(R5),X'7F'        DO WE HAVE A DOUBLE QUOTE\n         BE    GOTQD              YES, WE GOT ONE\n         CLI   0(R5),X'4D'        DO WE HAVE A LEFT PARENTHESIS\n         BE    GOTQP              YES, WE GOT ONE\n         LA    R5,1(R5)           BUMP TO NEXT POSITION\n         BCT   R6,CHKQT           SUBTRACT 1 FROM R6 AND BRANCH\n         MVI   WKGOTIT,C'S'       NO QUOTE FOUND BAD SEARCH ARGUMENT\n         B     EXIT               THEN GET OUT NO CAN SEARCH IT\nGOTQS    MVI   QUOTE,X'7D'        USE SINGLE QUOTE\n         LR    R7,R5              SAVE STARTING POSTION OF QUOTE\n         B     CHECKLQ\nGOTQP    MVI   QUOTE,X'5D'        USE RIGHT PARENTHESIS\n         LR    R7,R5              SAVE STARTING POSTION\n         B     CHECKLQ\nGOTQD    MVI   QUOTE,X'7F'        USE DOUBLE QUOTE\n         LR    R7,R5              SAVE STARTING POSTION OF QUOTE\nCHECKLQ  LA    R5,1(R5)           BUMP TO NEXT POSITION\n         CLC   0(1,R5),QUOTE      DO WE HAVE OUR NEXT QUOTE\n         BE    GOTLQ              YES, WE GOT ONE\n         BCT   R6,CHECKLQ         SUBTRACT 1 FROM R6 AND BRANCH\n         MVI   WKGOTIT,C'E'       NO QUOTE FOUND BAD SEARCH ARGUMENT\n         B     EXIT               THEN GET OUT NO CAN SEARCH IT\nGOTLQ    LA    R7,1(R7)           BUMP PAST QUOTE\n         SR    R5,R7              SUBTRACT STARTING AND ENDING\n         CVD   R5,DB              CONVERT TO PACKED\n         ZAP   LENGTH,DB          SAVE THIS LENGTH\n         BCTR  R5,0               SUBTRACT 1 FROM RESULT\n         CLI   WKUPDOW,C'U'       DO WE SEARCH BACKWARDS\n         BE    SEARUP1            YES, WE DO\nGETADDR  ZAP   STARTCO,N133       GET REMAINING LENGTH OF LINE\n         SP    STARTCO,WKSTACO\n         CP    STARTCO,LENGTH     LENGTH STR LONGER-REMAINING LENGTH\n         BL    NEXTLINE           MOVE TO NEXT LINE\n         SR    R8,R8              CLEAR R8\n         L     R9,=F'133'         LOAD LENGTH OF LINE\n         ZAP   DB,WKSTALN         CONVERT       LINE NUMBER\n         CVB   R6,DB                 TO HEX\n         MR    R8,R6              GET DIPLACEMENT\n         LR    R4,R11             RELOAD REG 4 WITH START OF RECORD\n         AR    R4,R9              ADD TO ADDRESS OF SYSOUT LINE\n         ZAP   DB,WKSTACO         CONVERT      COLUMN NUMBER\n         CVB   R6,DB                 TO HEX\n         AR    R4,R6              ADD TO ADDRESS OF SYSOUT LINE\n         EX    R5,EXCLC1\n*        LR    R6,R7              LOAD ADDRESS OF SEARCH ARG\n*        LR    R7,R5              MAKE COMPARE LONGS THE SAME LENGTH\n*        CLCL  R6,R4              COMPARE DETAIL RECORD WITH STRING\n         BE    GOTIT              WE GOT A HIT\n         AP    WKSTACO,ONE        ADD 1 TO COLUMN NUMBER\n         B     GETADDR            LOOK AGAIN\nNEXTLINE AP    WKSTALN,ONE        THEN GET OUT\n         ZAP   WKSTACO,ONE        START COLUMN OVER AT ONE\n         CP    WKTOTLN,WKSTALN    IS THIS THE LAST LINE\n         BL    NOGOTIT            BUMP TO NEXT SYSOUT LINE\n         B     GETADDR            TRY AGAIN\nSEARUP1  ZAP   STARTCO,LENGTH     GET REMAINING LENGTH OF LINE\n         AP    STARTCO,WKSTACO    ADD STARTING COLUMN NUMBER\n         CP    STARTCO,N133       PAST THE STARTING POINT FOR THIS LINE\n         BNH   LOOKUP             JUMP IF NO NEED TO RESET COLUMN\n         ZAP   WKSTACO,N133       SET COLUMN NUMBER TO END\n         SP    WKSTACO,LENGTH     SET TO LAST POSSIBLE HIT\nLOOKUP   SR    R8,R8              CLEAR R8\n         L     R9,=F'133'         LOAD LENGTH OF LINE\n         ZAP   DB,WKSTALN         CONVERT       LINE NUMBER\n         CVB   R6,DB                 TO HEX\n         MR    R8,R6              GET DIPLACEMENT\n         LR    R4,R11             RELOAD REG 4 WITH START OF RECORD\n         AR    R4,R9              ADD TO ADDRESS OF SYSOUT LINE\n         ZAP   DB,WKSTACO         CONVERT      COLUMN NUMBER\n         CVB   R6,DB                 TO HEX\n         AR    R4,R6              ADD TO ADDRESS OF SYSOUT LINE\n         EX    R5,EXCLC1\n*        LR    R6,R7              LOAD ADDRESS OF SEARCH ARG\n*        LR    R7,R5              MAKE COMPARE LENGTHS THE SAME\n*        CLCL  R6,R4              COMPARE DETAIL RECORD WITH STRING\n         BE    GOTIT              WE GOT A HIT\n         SP    WKSTACO,ONE        SUBTRACT 1 FROM COLUMN NUMBER\n         CP    WKSTACO,ZERO       ARE WE AT THE FRONT OF THE LINE\n         BE    NEXTUP             YES, GO TO NEXT LINE\n         B     SEARUP1            LOOK AGAIN\nNEXTUP   SP    WKSTALN,ONE        THEN GET OUT\n         BM    NOGOTIT            BRANCH IF NEGATIVE,  NO HIT\n         ZAP   WKSTACO,N133       SET COLUMN NUMBER TO END\n         SP    WKSTACO,LENGTH     SET TO LAST POSSIBLE HIT\n         B     SEARUP1            TRY AGAIN\nNOGOTIT  MVI   WKGOTIT,C'N'       NO HIT ON THIS PAGE\n         B     EXIT               THEN GET OUT NO CAN SEARCH IT\nGOTIT    MVI   WKGOTIT,C'Y'       TELL COBOL PROGRAM WE GOT A HIT\n         EJECT\n         SPACE\nEXIT     DS    0H\n         XR    R15,R15\n         RETURN (14,12)\nEXCLC1   CLC   0(0,R7),0(R4)      COMPARE DETAIL RECORD WITH STRING\n         EJECT\n*----------------------------------------------------------------------\n* LITERALS FOR BASE1 AND BASE2 ----------------------------------------\n*----------------------------------------------------------------------\nONE      DC    PL1'1'\nZERO     DC    PL1'0'\nN133     DC    PL2'133'\n         SPACE\n         LTORG\n         EJECT\n*----------------------------------------------------------------------\n* EQUATES FOR PROGRAM -------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*----------------------------------------------------------------------\n* PARAMETERS FROM COBOL PROGRAMS  -------------------------------------\n* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n* $$NOTE$$  DO NOT CHANGE THE ORDER OF THIS DSECT.    $$NOTE$$\n* $$NOTE$$  ANY CHANGE OF ANY KIND TO THIS DSECT      $$NOTE$$\n* $$NOTE$$  MUST ALSO BE MADE TO THE CICS COBOL       $$NOTE$$\n* $$NOTE$$  PROGRAM.  THE FIELDS IN THE COBOL PROGRAM $$NOTE$$\n* $$NOTE$$  SHOULD BE THE SAME SIZE AS THESE AND      $$NOTE$$\n* $$NOTE$$  ALSO THE SAME ORDER.                      $$NOTE$$\n* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n*----------------------------------------------------------------------\nPARM1    DSECT\nWKSTALN  DS    PL2      STARTING LINE NUMBER\nWKSTACO  DS    PL2      STARTING COLUMN NUMBER\nWKUPDOW  DS    CL1      WHICH DIRECTION UP OR DOWN\nWKGOTIT  DS    CL1      HIT/ERROR FLAG\nSEARARG  DS    CL55     SEARCH FIELD FROM MAP\nWKTOTLN  DS    PL2      TOTAL LINES IN DETAIL RECORD\nWKMAXLN  DS    PL2      MAX LINES TO DISPLAY\nWKCOLNM  DS    PL2      STARTING COLUMN TO DISPLAY\nWKLNENM  DS    PL2      STARTING LINE NUMBER TO DISPLAY\nWKLNELG  DS    PL2      LINE LENGTH TO DISPLAY\nWKSCREN  DS    PL2      SCREEN SIZE MODEL 2 OR 5\nWKAREA   DS    0CL40    WORK AREA USED BY THIS PROGRAM\nDB       DS    D\nQUOTE    DS    CL1\nLENGTH   DS    PL2\nSTARTCO  DS    PL2\n*----------------------------------------------------------------------\n*- DETAIL RECORD ------------------------------------------------------\n*----------------------------------------------------------------------\nPARM2    DSECT\nWKRECLN  DS    CL133\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT015": {"ttr": 8471, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x13\\x01 \\x10o\\x01 \\x14\\x8f\\x14\\x03\\x08\\xd6\\x08\\xd3\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-04-15T00:00:00", "modifydate": "2020-05-27T14:03:13", "lines": 2262, "newlines": 2259, "modlines": 0, "user": "IBMUSER"}, "text": "R015     TITLE 'BATCH EXTRACT OF SYSOUT FOR REPORT SYSTEM'\n         PRINT NOGEN\n*----------------------------------------------------------------------\n* THIS PROGRAM WILL READ A SYSOUT FILE THAT HAS A PRINTOUT IN IT\n* AND PRODUCE AN INDEX FILE AND A DETAIL FILE THAT CONTAINS THE SYSOUT\n* DATA.  EITHER SYSOUT FORMAT MAY BE USED.  THAT IS ASA OR\n* CARRIAGE CONTROL CHARATERS EITHER MAY BE USED.\n*----------------------------------------------------------------------\n****************************************\n*     (C) COPYRIGHT BILLY FENWICK\n****************************************\n*  R1   AVAILABLE\n*  R2   TITLE TABLE\n*  R3   INPUT RECORD\n*  R4   AVAILABLE\n*  R5   AVAILABLE\n*  R6   AVAILABLE\n*  R7   AVAILABLE\n*  R8   AVAILABLE\n*  R9   DETAIL OUTPUT RECORD\n*  R10  AVAILABLE\n*  R11  AVAILABLE\n*  R12  BASE\n*  R13  BASE\n*  R14  LINKAGE\n*  R15  AVAILABLE\n         SPACE\n*----------------------------------------------------------------------\n* LINKAGE SECTION -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nREPRT015 CSECT\n         B     72(0,R15)\n         DC    17F'0'\n         STM   R14,R12,12(R13)\n         ST    R13,4(0,R15)\n         ST    R15,8(0,R13)\n         LR    R13,R15\n         LA    R12,4095(0,R13)\n         LA    R12,1(0,R12)\n         LR    R9,R12\n         LA    R9,4095(0,R9)\n         LA    R9,1(0,R9)\n         USING REPRT015,R13\n         USING REPRT015+4096,R12\n         USING REPRT015+4096+4096,R9\n         B     MAIN\n         SPACE\n*----------------------------------------------------------------------\n* MAIN PROCESSING -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nMAIN     BAL   R14,BEGIN                         INITIALIZATION\n         BAL   R14,GETSYSIN                      BUILD EXTRACT LIST\n         BAL   R14,GETITLES                      BUILD TITLES TABLE\nMAINLUP  BAL   R14,GETREC                        GET A RECORD\n         BAL   R14,ANALYZE                       BUILD OUPUT RECORD\n         B     MAINLUP                           LOOP REPORT FILE\nRPTEOF   EQU   *\n         CLI   WRTBRCH,C'Y'           DID WE UPDATE THE LAST RECORD\n         BNE   CHKWRT                 BRANCH IF NOT\n         PUT   RPL=GETWRK             UPDATE RECORD\n         LTR   R15,R15\n         BNZ   ERROR06\nCHKWRT   CLI   WRTBNK,C'Y'            DID WE UPDATE THE LAST RECORD\n         BNE   CHKWRT1                BRANCH IF NOT\n         PUT   RPL=GETWRK2             UPDATE RECORD\n         LTR   R15,R15\n         BNZ   ERROR06\nCHKWRT1  CLI   WRTOVR,C'Y'            DID WE UPDATE THE LAST RECORD\n         BNE   CHKDDA                 BRANCH IF NOT\n         PUT   RPL=GETWRK3             UPDATE RECORD\n         LTR   R15,R15\n         BNZ   ERROR06\nCHKDDA   CLI   DDASTMT,C'Y'              ARE WE DOING DDA STATEMENTS\n         BNE   RPTEOF1                   BRANCH IF NOT\n         BAL   R14,WTRRECS            WRITE OUT LAST INDEX RECORDS\nRPTEOF1  EQU   *\n         B     EOJ                               END OF JOB\n         EJECT\n*----------------------------------------------------------------------\n* INITIALIZATION PROCESSING -------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nBEGIN    ST    R14,BEGIN14\n         SPACE\n         TIME\n         SPACE\n         BAL   R14,GETDATE                       CONVERT DATE ROUTINE\n         SPACE\n         MVC   TODAY,HLDDATE\n         MVC   SCDATE(2),YEAR\n         MVC   SCDATE+2(2),MTH\n         MVC   SCDATE+4(2),DAY\n         GETMAIN R,LV=81920\n         SPACE\n         LTR   R15,R15\n         BZ    GOTSP1\n         ST    R15,RETCD\n         SPACE\n         B     EARLYOUT\n         USING RDSECT,R2\nGOTSP1   LR    R2,R1               LOAD ADRESS OF TITLE TABLE\n         MVC   0(4,R1),ZEROS                     INITIALIZE RDW\n         ST    R2,SAVETIT          SAVE ADRESS OF TITLE TABLE\n         A     R2,=F'40960'        GET ADDRESS OF REPORT TABLE\n         ST    R2,SAVERID          SAVE ADRESS OF REPORT TABLE\n         SPACE\n         OPEN  (RPTIN)\n         LTR   R15,R15\n         BZ    NXTOPEN\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON RPTIN FILE'\n         B     EARLYOUT\nNXTOPEN  OPEN  (RPTOUT,(OUTPUT))\n         LTR   R15,R15\n         BZ    NXTOPEN1\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON RPTOUT FILE'\n         B     EARLYOUT\nNXTOPEN1 OPEN  (WORK1)\n         LTR   R15,R15\n         BZ    NXTOPEN2\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON WORK1 FILE'\n         B     EARLYOUT\nNXTOPEN2 OPEN  (WORK2)\n         LTR   R15,R15\n         BZ    NXTOPEN3\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON WORK2 FILE'\n         B     EARLYOUT\nNXTOPEN3 OPEN  (WORK3)\n         LTR   R15,R15\n         BZ    NXTOPEN4\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON WORK3 FILE'\n         B     EARLYOUT\nNXTOPEN4 OPEN  (INDEX)\n         LTR   R15,R15\n         BZ    NXTOPEN5\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON INDEX FILE'\n         B     EARLYOUT\nNXTOPEN5 OPEN  (IDXOUT,(OUTPUT))\n         LTR   R15,R15\n         BZ    GETOUT\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON IDXOUT FILE'\n         B     EARLYOUT\nGETOUT   EQU   *\n         L     R14,BEGIN14\n         BR    R14\n         SPACE\nBEGIN14  DS    F\n         EJECT\n*----------------------------------------------------------------------\n* INPUT RECORD PROCESSING ---------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nGETREC   ST    R14,GETREC14\nGETRPT   GET   RPTIN\n         SPACE\n         LR    R3,R1\n         ST    R3,SAVEREC      SAVE ADDRESS OF SYSOUT RECORD\n         AP    TOTLINES,=P'1'  ADD 1 TO TOTAL NUMBER OF LINES\n         CLI   0(R3),C'1'        NEW PAGE ASA CODE\n         BE    CHECKTB           YES\n         CLI   0(R3),X'89'       NEW PAGE CCW CODE\n         BE    CHECKTB           YES\n         CLI   0(R3),X'8B'       NEW PAGE CCW CODE\n         BE    CHECKTB           YES\n         B     GETEXIT\nCHECKTB  L     R2,SAVETIT          LOAD ADRESS OF FIRST TITLE ENTRY\n         CLI   FIRST,C'X'          IS THIS FIRST SKIP\n         BE    GETEXIT             YES, GET OUT\n         AP    TOTPAGES,=P'1'      ADD 1 TO TOTAL NUMBER OF PAGES\n         CLI   DDASTMT,C'Y'              ARE WE DOING DDA STATEMENTS\n         BE    TITHIT                    BRANCH IF YES\nCHECKNX  LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         CLI   0(R2),X'FF'         END OF TABLE?\n         BE    NOHIT               YES, THEN NO HIT\n*  CHECK FOR FIRST PART OF TITLE DATA\n         ZAP   DWD,RPTTL1          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPTRP1          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,RPTRL1            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCT1                      IS THIS OUR TITLE?\n         BE    TIT1HIT                       YES,  WE HAVE A HIT\n         LA    R2,REPT2(R2)                  NO, THEN TRY NEXT TITLE\n         B     CHECKNX\nTIT1HIT  LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n*  CHECK FOR SECOND PART OF TITLE DATA\n         CP    RPTRP2,=P'0'        DO WE HAVE A SECOND LINE TO CHECK\n         BE    TIT2HIT             BRANCH IF NO,  AND CHECK NEXT ONE\n         ZAP   DWD,RPTTL2          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPTRP2          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,RPTRL2            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCT2                      IS THIS OUR TITLE?\n         BE    TIT2HIT                       YES,  WE HAVE A HIT\n         LA    R2,REPT2(R2)                  NO, THEN TRY NEXT TITLE\n         B     CHECKNX\nTIT2HIT  LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n*  CHECK FOR THIRD PART OF TITLE DATA\n         CP    RPTRP3,=P'0'        DO WE HAVE A SECOND LINE TO CHECK\n         BE    TITHIT              BRANCH IF NO,  AND CHECK NEXT ONE\n         ZAP   DWD,RPTTL3          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPTRP3          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,RPTRL3            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCT3                      IS THIS OUR TITLE?\n         BE    TITHIT                        YES,  WE HAVE A HIT\n         LA    R2,REPT2(R2)                  NO, THEN TRY NEXT TITLE\n         B     CHECKNX\nTITHIT   CLI   WRTPAGE,C' '      DID PAGE HAVE ANYTHING ON IT\n         BE    NOHIT             BRANCH IF NOT\n         ST    R2,R2SAVE         SAVE TITLE RECORD ADDRESS\n         BAL   R14,GETIDTE           GET THE REPORT DATE\n         CLI   BADDATE,C'X'      IS THIS A BAD DATE RECORD\n         BE    NOHIT             YES, THEN NO APPLICATION INDEX RECORD\n         BAL   R14,BLDBNK            GET THE BANK NUMBER\n         BAL   R14,BLDBRCH           GET THE BRANCH NUMBER\n         MVI   PGNOT,C'R'            MAIN REPORT ID RECORD\n         BAL   R14,CHECKOLD          CHECK CURRENT INDEX FILE\n         CLI   IDXHIT,C'Y'           IS THEIR ALREADY AN INDEX RECORD\n         BE    NOHIT                 YES,  THEN DO NOT EXTRACT\n         BAL   R14,CHECKBNK          CHECK FOR EXTRACT BY BANK\n         CLI   BNKHIT,C'Y'           DO WE EXTRACT THIS ONE\n         BE    DOREPT                YES\n         CLI   SBNKHIT,C'Y'          DO WE EXTRACT THIS ONE\n         BE    DOREPT                YES\n         B     NOHIT                 DO NOT EXTRACT THIS ONE\nDOREPT   BAL   R14,GETREPT           ADD/UPDATE/GET REPT RECORD\n         CLI   BNKHIT,C'Y'           MAIN ID HIT\n         BNE   DOREPT1               NO,  THEN DO ADD TO MAIN ID RECS\n         BAL   R14,ADDBRCH           ADD TO THE BRANCH WORK FILE\n         BAL   R14,ADDBANK           ADD TO THE BANK WORK FILE\nDOREPT1  BAL   R14,PUTDETAL          WRITE OUT DETAL RECORD\n         BAL   R14,BLDKREC           BUILD THE 'K' RECORD\n         BAL   R14,BLDIREC           BUILD THE 'I' RECORD\n         CLI   DDASTMT,C'Y'              ARE WE DOING DDA STATEMENTS\n         BNE   NOHIT                     BRANCH IF NOT\n         BAL   R14,BLDSREC           BUILD THE 'S' RECORD\nNOHIT    BAL   R14,CLEARDTL          CLEAR THE DETAIL RECORD\n         SPACE\nGETEXIT  L     R14,GETREC14\n         BR    R14\n         SPACE\nGETREC14 DS    F\nCLCT1    CLC   0(0,R8),RPTTITD1\nCLCT2    CLC   0(0,R8),RPTTITD2\nCLCT3    CLC   0(0,R8),RPTTITD3\n         EJECT\n*----------------------------------------------------------------------\n* INPUT SYSIN RECORDS FOR PROCESSING  ---------------------------------\n*----------------------------------------------------------------------\n         SPACE\nGETSYSIN ST    R14,GETREC14\n         OPEN  (CNTLFILE)          OPEN SYSIN FILE\n         LTR   R15,R15\n         BZ    GETSIN\n         WTO   'OPEN ERROR ON SYSIN FILE'\n         ST    R15,RETCD\n         B     EARLYOUT\nGETSIN   GET   CNTLFILE             GET SYSIN CONTROL CARD\n         SPACE\n         CLC   0(5,R1),=C'DATE='    DO WE HAVE A RUN DATE\n         BE    GETRDATE             YES,  THEN SAVE IT\nDOSYSIN  MVC   SYSINREC,0(R1)       MOVE NEW SYSIN RECORD INTO TABLE\n         CLC   SYSINREC(8),=C'DDASTMTS'  ARE WEE DOING DDA STATEMENTS\n         BNE   CLOSEIN                   BRANCH IF NOT\n         MVI   DDASTMT,C'Y'         GET DDA STATEMENT PROCESSING FLAG\nCLOSEIN  EQU   *\n         CLOSE (CNTLFILE)           CLOSE SYSIN FILE\n         L     R14,GETREC14\n         BR    R14\nGETRDATE MVC   RCDATE(2),11(R1)         MOVE YY\n         MVC   RCDATE+2(2),5(R1)        MOVE MM\n         MVC   RCDATE+4(2),8(R1)        MOVE DD\n         GET   CNTLFILE             GET SYSIN CONTROL CARD\n         B     DOSYSIN\nCNTLEOF  EQU   *\n         B     ERROR15\n         EJECT\n*----------------------------------------------------------------------\n* INPUT TITLE RECORDS FOR PROCESSING  ---------------------------------\n*----------------------------------------------------------------------\n         SPACE\n*      NUMBER OF TITLE AND REPORT ID RECORDS THE BUFFERS WILL HOLD\nNMTITREC EQU   40960/REPT2         TITLE ID RECORDS\nNMRPTREC EQU   40960/REPT3         REPORT ID RECORDS\n         USING RDSECT,R4\n         USING RTDSECT,R5\nGETITLES ST    R14,GETREC14\n         CLI   DDASTMT,C'Y'              ARE WE DOING DDA STATEMENTS\n         BE    GETDDAST                  BRANCH IF YES\n         OPEN  (TITLES)\n         LTR   R15,R15\n         BZ    TITLEOK\n         WTO   'OPEN ERROR ON TITLES FILE'\n         ST    R15,RETCD\n         B     EARLYOUT\nTITLEOK  L     R2,SAVETIT     LOAD STARTING ADDRESS OF TITLE TABLE\n         L     R3,SAVERID     LOAD STARTING ADDRESS OF REPORT TABLE\n         SR    R6,R6\n         SR    R7,R7\n         LA    R8,NMTITREC           LOAD MAX # OF TITLE RECORDS\n         LA    R10,NMRPTREC          LOAD MAX # REPORT RECORDS\nGETTIT   GET   RPL=GETRPL\n         SPACE\n         LTR   R15,R15\n         BNZ   ERROR02\n         L     R4,RECADDR       LOAD ADDRESS OF RECORD\n         L     R5,RECADDR       LOAD ADDRESS OF RECORD\n         CLI   RPTYPE,C'T'      IS THIS A TITLE RECORD\n         BE    MVTIT            YES\n         CLI   TPTYPE,C'R'      IS THIS A REPORT RECORD\n         BE    MVRPT            YES\n         B     GETTIT           GET NEXT RECORD\nMVTIT    LA    R11,APPLID       START OF APPLICATION LIST\n         CLI   SYSINREC,C'T'   ARE WE USING TITLE IDS\n         BE    CHKTITL         YES, THEN BRANCH\nCHKTAPL  CLC   0(L'RPTAPL,R11),BLANKS    END OF APPLICATIONS LIST\n         BE    GETTIT           YES, THEN FORGET IT\n         CLC   RPTAPL,0(R11)    DOES THE APPLICATION MATCH\n         BE    GOTTAPL          YES THEN MOVE IT\n         LA    R11,4(R11)       BUMP TO NEXT APLLICATION ID\n         B     CHKTAPL          TRY AGAIN\nCHKTITL  CLC   0(L'RTID,R11),BLANKS    END OF TITLES LIST\n         BE    GETTIT           YES, THEN FORGET IT\n         CLC   RTID,0(R11)      DOES THE TITLE ID MATCH\n         BE    GOTTAPL          YES THEN MOVE IT\n         LA    R11,9(R11)       BUMP TO NEXT TITLE ID\n         B     CHKTITL          TRY AGAIN\nGOTTAPL  EQU   *\n         CLI   RPTEXT,C'Y'      DO WE EXTRACT THIS TITLE\n         BE    GOTTID           YES, THEN PUT IT TABLE\n         CLI   RPTEXT,C'P'      DO WE EXTRACT THIS TITLE\n         BE    GOTTID           YES, THEN PUT IT TABLE\n         B     GETTIT           NO, THEN DON'T PUT IT IN TABLE\nGOTTID   MVC   0(255,R2),0(R4)   MOVE NEW TITLE RECORD INTO TABLE\n         MVC   255(REPT2-255,R2),255(R4)\n         LA    R6,1(R6)         COUNT NUMBER OF RECORDS STORED\n         CR    R6,R8            IS TABLE FULL\n         BE    ERROR03          YES, THEN QUIT\n         LA    R2,REPT2(R2)       BUMP TO NEXT SLOT\n         B     GETTIT           GET NEXT RECORD\nMVRPT    LA    R11,APPLID       START OF APPLICATION LIST\n         CLI   SYSINREC,C'T'   ARE WE USING TITLE IDS\n         BE    CHKRITL         YES, THEN BRANCH\nCHKRAPL  CLC   0(L'TPTAPL,R11),BLANKS    END OF APPLICATIONS LIST\n         BE    GETTIT           YES, THEN FORGET IT\n         CLC   TPTAPL,0(R11)    DOES THE APPLICATION MATCH\n         BE    GOTRAPL          YES THEN MOVE IT\n         LA    R11,4(R11)       BUMP TO NEXT APLLICATION ID\n         B     CHKRAPL          TRY AGAIN\nCHKRITL  CLC   0(L'TTID,R11),BLANKS    END OF TITLES LIST\n         BE    GETTIT           YES, THEN FORGET IT\n         CLC   TTID,0(R11)      DOES THE TITLE ID MATCH\n         BE    GOTRAPL          YES THEN MOVE IT\n         LA    R11,9(R11)       BUMP TO NEXT TITLE ID\n         B     CHKRITL          TRY AGAIN\nGOTRAPL  EQU   *\n         CLI   TPTEXT,C'Y'      DO WE EXTRACT THIS SECONDARY TITLE\n         BE    GOTTIR           YES, THEN PUT IT IN TABLE\n         CLI   TPTEXT,C'P'      DO WE EXTRACT THIS SECONDARY TITLE\n         BE    GOTTIR           YES, THEN PUT IT IN TABLE\n         B     GETTIT           NO, THEN DON'T PUT IT IN TABLE\nGOTTIR   MVC   0(REPT3,R3),0(R5)  MOVE NEW REPORT RECORD INTO TABLE\n         LA    R7,1(R7)         COUNT NUMBER OF RECORDS STORED\n         CR    R7,R10           IS TABLE FULL\n         BE    ERROR04          YES, THEN QUIT\n         LA    R3,REPT3(R3)       BUMP TO NEXT SLOT\n         B     GETTIT           GET NEXT RECORD\nGETDDAST L     R2,SAVETIT     LOAD STARTING ADDRESS OF TITLE TABLE\n         L     R3,SAVERID     LOAD STARTING ADDRESS OF REPORT TABLE\n         MVC   0(255,R2),DDATITLE    MOVE DDA REPORT RECORD\n         MVC   255(REPT2-255,R2),DDATITLE+255\n         LA    R2,REPT2(R2)       BUMP TO NEXT SLOT\n         MVI   0(R2),X'FF'      SET END OF TABLE\n         MVI   0(R3),X'FF'      SET END OF TABLE\n         B     NOMTITL\nTITEOF   MVI   0(R2),X'FF'      SET END OF TABLE\n         MVI   0(R3),X'FF'      SET END OF TABLE\n         CLOSE TITLES\n         LTR   R15,R15\n         BZ    NOMTITL\n         B     ERROR01\nNOMTITL  L     R14,GETREC14\n         BR    R14\n         DROP  R4\n         DROP  R5\n         EJECT\n*----------------------------------------------------------------------\n* FIND REPORT DATE  ---------------------------------------------------\n*    VALID DATE FORMAT TYPE ARE LISTED BELOW.\n*        'N'           NORMAL DATE FORMAT MM-DD-YY\n*        'C'           DATE FORMAT MM-DD-YYYY\n*        'Y'           DATE FORMAT YY-MM-DD\n*        'R'           USE THE RUN DATE FROM THE CONTROL CARD\n*        'S'           USE THE SYSTEM DATE\n*----------------------------------------------------------------------\n         SPACE\nGETIDTE  ST    R14,GETDTE14\n         SPACE\n         MVI   BADDATE,C' '        CLEAR BAD DATE INDICATOR\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPDTL           SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPDTP           SETUP TO ADD\n         CVB   R4,DWD                DATE POSITION\n         BCTR  R4,0                 SUBTRTACT ONE FOR COMPARE\n         AR    R8,R4                POINT TO WHERE DATE SHOULD BE\n         CLI   RPDTT,C'N'           NORMAL DATE FORMAT MM-DD-YY\n         BE    DATENORM             YES\n         CLI   RPDTT,C'C'           DATE FORMAT MM-DD-YYYY\n         BE    DATECENY             YES\n         CLI   RPDTT,C'Y'           DATE FORMAT YY-MM-DD\n         BE    DATEBACK             YES\n         CLI   RPDTT,C'R'           USE RUN DATE FROM CONTROL CARD\n         BE    DATERUN              YES\n         CLI   RPDTT,C'S'           USE SYSTEM DATE\n         BE    DATESYS              YES\n         MVC   XDATE(6),=C'000000'\n         B     DTEEXIT\nDATERUN  MVC   XDATE(6),RCDATE           MOVE IN RUN DATE\n         B     SETDATE\nDATESYS  MVC   XDATE(6),SCDATE           MOVE IN SYSTEM DATE\n         B     SETDATE\nDATEBACK MVC   XDATE(2),0(R8)            GET YEAR\n         MVC   XDATE+2(2),3(R8)          GET MONTH\n         MVC   XDATE+4(2),6(R8)          GET DAY\n         B     SETDATE\nDATECENY MVC   XDATE(2),8(R8)            GET YEAR\n         MVC   XDATE+2(2),0(R8)          GET MONTH\n         MVC   XDATE+4(2),3(R8)          GET DAY\n         B     SETDATE\nDATENORM MVC   XDATE(2),6(R8)            GET YEAR\n         MVC   XDATE+2(2),0(R8)          GET MONTH\n         MVC   XDATE+4(2),3(R8)          GET DAY\nSETDATE  LA    R4,6\n         LA    R5,XDATE\nCKDATE   CLI   0(R5),C'0'         IS DATE NUMERIC\n         BL    NODATE             YES, THEN GET OUT\n         CLI   0(R5),C'9'         IS DATE NUMERIC\n         BH    NODATE             YES, THEN GET OUT\nCKOK     LA    R5,1(R5)           BUMP TO NEXT DIGIT\n         BCT   R4,CKDATE\n         B     DTEEXIT            DATE IS OK, THEN GET OUT\nNODATE   EQU   *\n         CLI   0(R5),C' '         IS THIS POSITION A BLANK\n         BNE   NOBLANK            BRANCH IF NOT BLANK\n         MVI   0(R5),C'0'         OK THEN MAKE IT A ZERO\n         B     CKOK               NOW GET NEXT DIGIT\nNOBLANK  MVC   XDATE,OLDDATE      RESTORE OLD DATE\n         MVI   BADDATE,C'X'        SET BAD DATE INDICATOR\n         SPACE\nDTEEXIT  EQU   *\n         CLC   XDATE,=C'000000'   IS OUR ZERO\n         BNE   DTEOUT\n         MVI   BADDATE,C'X'        SET BAD DATE INDICATOR\n         MVC   XDATE,OLDDATE      RESTORE OLD DATE\nDTEOUT   MVC   OLDDATE,XDATE      SAVE PREVIOUS DATE\n         L     R14,GETDTE14\n         BR    R14\n         SPACE\nGETDTE14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* DIFFERENT COMMON ROUTINES   -----------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n*   ROUTINE TO CONVERT A PACKED NUMBER TO HEX AND ADD THE RESULT TO\n*   A REGISTER\nCNVHEX   CVB   R6,DWD\n         BCTR  R6,0\n         L     R5,=F'133'\n         SR    R4,R4\n         MR    R4,R6\n         AR    R8,R5\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* WRITE DETAIL RECORD OUT ---------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nPUTDETAL ST    R14,PUTDET14\n         SPACE\n         L     R2,R2SAVE\n         CLI   BNKHIT,C'Y'         DO WE EXTRACT THIS ONE\n         BE    OKDETAIL            YES\n         CLI   SBNKHIT,C'Y'        DO WE EXTRACT THIS ONE\n         BE    OKDETAIL            YES\n         B     DETALEXT            THEN GET OUT\nOKDETAIL MVC   DRECID,RTID         MOVE TITLE ID\n         ZAP   DPAGE,APPAGES       MOVE PAGE NUMBER\n         MVC   DDATE,XDATE         MOVE REPORT DATE\n         ZAP   DNLINES,LINES       NUMBER OF LINES ON THIS PAGE\n         AP    TOTPGS,=P'1'        NUMBER OF PAGES OUTPUT\n         AP    TOTLNS,DNLINES      TOTAL NUMBER OF LINES OUTPUT\n         ZAP   DWD,DNLINES         COMPUTE THE\n         CVB   R6,DWD               RECORD LENGTH\n         L     R5,=F'133'           OF THE\n         SR    R4,R4                DETAIL RECORD\n         MR    R4,R6               NOW WE HAVE THE VARIABLE PART\n         AH    R5,DLENGTH           LET'S THE FIX PART\n         STH   R5,DRECLNG          STORE RECORD LENGTH\n* PUT RECORD LENGTH HERE\n         PUT   RPTOUT,DRECORD      WRITE OUT DETAIL RECORD\n         SPACE\nDETALEXT L     R14,PUTDET14\n         BR    R14\n         SPACE\nPUTDET14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* FIND THE BANK NUMBER FOR THIS PAGE   -------------------------------\n*----------------------------------------------------------------------\n         SPACE\nBLDBNK   ST    R14,BLDKRC14\n         SPACE\n         CP    RPTFRC,=P'0'        DO WE FORCE A BANK NUMBER\n         BE    BNKOK               BRANCH ZERO,  NO FORCE BANK #\n         ZAP   BANKNUM,RPTFRC      FORCE BANK NUMBER\n         B     BNKRTN              GET OUT\nBNKOK    LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         CP    RPBRL,=P'0'         IS BANK LENGTH ZERO?\n         BE    BNKERR                YES\n         ZAP   DWD,RPBTL           NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPBRP           SETUP TO ADD\n         CVB   R4,DWD                BANK POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE BANK SHOULD BE\n         ZAP   DWD,RPBRL             CONVERT BANK NUMBER\n         CVB   R4,DWD                    LENGTH TO HEX\n         LR    R6,R8\n         LR    R5,R4\n         BCTR  R4,0                      FOR EX OF PACK INSTRUCTION\nBNK1     CLI   0(R6),C'0'        IS DIGIT NUMERIC\n         BL    BNK2              NO,  CHECK FOR BLANK\n         CLI   0(R6),C'9'        IS DIGIT NUMBERIC\n         BH    BNKERR            NO, BAD DIGIT GET OUT\nBNKTRY   LA    R6,1(R6)          BUMP TO NEXT DIGIT\n         BCT   R5,BNK1           TRY AGAIN\n         EX    R4,BNKPACK                FOR THE BANK NUMBER\n         SPACE\nBNKRTN   L     R14,BLDKRC14\n         BR    R14\nBNKPACK  PACK  BANKNUM,0(0,R8)\nBNKERR   ZAP   BANKNUM,=P'0'   CLEAR OUT BANK NUMBER\n         B     BNKRTN\nBNK2     CH    R5,=H'1'      IS THIS THE LAST DIGIT\n         BE    BNKERR        YES THEN NOT OK,  GET OUT\n         CLI   0(R6),C' '    IS THIS DIGIT BLANK\n         BE    BNKTRY\n         B     BNKERR\n         EJECT\n*----------------------------------------------------------------------\n* FIND THE BRANCH NUMBER FOR THIS PAGE   ------------------------------\n*----------------------------------------------------------------------\n         SPACE\nBLDBRCH  ST    R14,BLDKRC14\n         SPACE\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         CP    RPRRL,=P'0'         IS BANK LENGTH ZERO?\n         BE    BRCHERR               YES\n         ZAP   DWD,RPRTL           NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPRRP           SETUP TO ADD\n         CVB   R4,DWD                BRANCH POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE BRANCH SHOULD BE\n         ZAP   DWD,RPRRL             CONVERT BRANCH NUMBER\n         CVB   R4,DWD                    LENGTH TO HEX\n         LR    R6,R8\n         LR    R5,R4\n         BCTR  R4,0                      FOR EX OF PACK INSTRUCTION\nBRCH1    CLI   0(R6),C'0'        IS DIGIT NUMERIC\n         BL    BRCH2             NO,  CHECK FOR BLANK\n         CLI   0(R6),C'9'        IS DIGIT NUMBERIC\n         BH    BRCHERR           NO, BAD DIGIT GET OUT\nBRCHTRY  LA    R6,1(R6)          BUMP TO NEXT DIGIT\n         BCT   R5,BRCH1          TRY AGAIN\n         EX    R4,BRCHPACK               FOR THE BRANCH NUMBER\n         SPACE\nBRCHRTN  L     R14,BLDKRC14\n         BR    R14\nBRCHPACK PACK  BRCHNUM,0(0,R8)\nBRCHERR  ZAP   BRCHNUM,=P'0'   CLEAR OUT BRANCH NUMBER\n         B     BRCHRTN\nBRCH2    CH    R5,=H'1'      IS THIS THE LAST DIGIT\n         BE    BRCHERR       YES THEN NOT OK,  GET OUT\n         CLI   0(R6),C' '    IS THIS DIGIT BLANK\n         BE    BRCHTRY\n         B     BRCHERR\n         EJECT\n*----------------------------------------------------------------------\n* CLEAR THE DETAIL RECORD ---------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nCLEARDTL ST    R14,CLEAR14\n         SPACE\n         MVC   DRECID(30),BLANKS\n         LA    R5,DLINE\n         L     R4,=F'87'           MAX NUMBER OF LINES ON A PAGE\nCLEARLP  MVC   0(L'DLINE,R5),BLANKS  BLANK ONE LINE\n         LA    R5,133(R5)          DUMP TO NEXT LINE\n         BCT   R4,CLEARLP\n         ZAP   LINES,=P'0'         CLEAR LINES ON THIS PAGE\n         MVI   WRTPAGE,C' '\n         SPACE\n         L     R14,CLEAR14\n         BR    R14\n         SPACE\nCLEAR14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* BUILD THE KEY/INDEX REPORT RECORD TYPE 'K' --------------------------\n*----------------------------------------------------------------------\n         SPACE\nBLDKREC  ST    R14,BLDKRC14\n         SPACE\n         L     R2,R2SAVE\n         CLI   BNKHIT,C'Y'         DO WE EXTRACT THIS ONE\n         BNE   BLDK5               BRANCH IF NOT TO EXTRACT\n         MVC   KTITID,RTID         MOVE TITLE ID\n         MVC   KRIDID,RRID         MOVE REPORT ID\n         ZAP   KPAGE,APPAGES       MOVE PAGE NUMBER\n         MVC   KDATE,XDATE         MOVE REPORT DATE\n         MVI   KTYPE,C'K'          MOVE RECORD TYPE\n         ZAP   KBANK,BANKNUM       MOVE BANK NUMBER\n         MVC   KKEYV,BLANKS        CLEAR KEY VALUE\n         LA    R7,KKEYV               SET ADDRES OF KEY VALUE FIELD\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         CP    RPKRL1,=P'0'        IS KEY 1 LENGTH ZERO?\n         BE    BLDK2               YES\n         ZAP   DWD,RPKTL1          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKRP1          SETUP TO ADD\n         CVB   R4,DWD                KEY 1 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 1 SHOULD BE\n         ZAP   DWD,RPKRL1            CONVERT KEY 1 LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 1 VALUE\n         AR    R7,R4                     BUMP TO NEXT AVAILABLE BYTE\n         LA    R7,1(R7)                  BUMP BY ONE\nBLDK2    CP    RPKRL2,=P'0'        IS KEY 2 LENGTH ZERO?\n         BE    BLDK3               YES\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKTL2          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKRP2          SETUP TO ADD\n         CVB   R4,DWD                KEY 2 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 2 SHOULD BE\n         ZAP   DWD,RPKRL2            CONVERT KEY 2 LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 2 VALUE\n         AR    R7,R4                     BUMP TO NEXT AVAILABLE BYTE\n         LA    R7,1(R7)                  BUMP BY ONE\nBLDK3    CP    RPKRL3,=P'0'        IS KEY 3 LENGTH ZERO?\n         BE    BLDK4               YES\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKTL3          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKRP3          SETUP TO ADD\n         CVB   R4,DWD                KEY 3 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 3 SHOULD BE\n         ZAP   DWD,RPKRL3            CONVERT KEY 3 LENGTH\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 3 VALUE\nBLDK4    EQU   *\n         ZAP   KIDXL,RPKRL1          ADD THE LENGTH OF 1ST KEY\n         AP    KIDXL,RPKRL2          ADD THE LENGTH OF 2ND KEY\n         AP    KIDXL,RPKRL3          ADD THE LENGTH OF 3RD KEY\n         CP    KIDXL,=P'0'         IS THEIR A KEY TO WRITE OUT\n         BE    BLDK5               NO\n         MVC   KRECLNG,KLENGTH       MOVE IN RECORD LENGTH\n         ZAP   KSEQ,BPPAGES        MOVE BANK PAGE NUMBER\n         ZAP   KBRANCH,=P'0'       THEN MAKE A ZERO BRANCH RECORD\n         PUT   IDXOUT,KRECORD      WRITE OUT K INDEX RECORD\n         SPACE\n         CP    BRCHNUM,=P'0'       IS BRANCH NUMBER ZERO\n         BE    BLDK5               BRANCH IF YES\n         ZAP   KSEQ,PPPAGES        MOVE BRANCH PAGE NUMBER\n         ZAP   KBRANCH,BRCHNUM     MOVE BRANCH NUMBER\n         PUT   IDXOUT,KRECORD      WRITE OUT K INDEX RECORD\n         SPACE\nBLDK5    L     R14,BLDKRC14\n         BR    R14\n         SPACE\nBLDMVC5  MVC   0(0,R7),0(R8)\nBLDKRC14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* BUILD THE KEY/INDEX REPORT RECORD TYPE 'I' --------------------------\n*----------------------------------------------------------------------\n         SPACE\nBLDIREC  ST    R14,BLDIRC14\n         SPACE\n         L     R2,R2SAVE\n         L     R3,SAVERID       LOAD ADDRESS OF REPORT TABLE\n         CLI   SBNKHIT,C'Y'        DO WE EXTRACT THIS ONE\n         BNE   NORTBL              BRANCH IF NOT TO EXTRACT\n         USING RTDSECT,R3\nCHKRTBL  CLC   TTID,RTID           DO TITLE ID'S MATCH\n         BE    RTBLHIT             YES\nTRYAGN   CLI   0(R3),X'FF'         IS THIS END OF TABLE\n         BE    NORTBL              YES, THEN GET OUT\n         LA    R3,REPT3(R3)        BUMP TO NEXT RECORD\n         B     CHKRTBL             GET NEXT TABLE\nRTBLHIT  LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL1          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP1          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL1            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT1                     IS THIS OUR TITLE?\n         BE    RIDHIT1                       YES,  WE HAVE A HIT\n         B     TRYAGN              NO THEN TRY AGAIN\nRIDHIT1  CP    TPTRL2,=P'0'        DO WE HAV A LENGTH\n         BE    RIDHIT2                       YES,  WE HAVE A HIT\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL2          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP2          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL2            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT2                     IS THIS OUR TITLE?\n         BE    RIDHIT2                       YES,  WE HAVE A HIT\n         B     TRYAGN              NO THEN TRY AGAIN\nRIDHIT2  CP    TPTRL3,=P'0'        DO WE HAV A LENGTH\n         BE    RIDHIT                        YES,  WE HAVE A HIT\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL3          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP3          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL3            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT3                     IS THIS OUR TITLE?\n         BE    RIDHIT                        YES,  WE HAVE A HIT\n         B     TRYAGN              NO THEN TRY AGAIN\nRIDHIT   MVC   ITITID,TTID         MOVE TITLE ID\n         MVC   IRIDID,TRID         MOVE REPORT ID\n         ZAP   IPAGE,APPAGES       MOVE DETAIL PAGE NUMBER\n         MVC   IDATE,XDATE         MOVE REPORT DATE\n         MVI   ITYPE,C'K'          MOVE RECORD TYPE\n         MVC   IKEYV,BLANKS        CLEAR KEY VALUE\n         ZAP   IBANK,BANKNUM       MOVE BANK NUMBER\n         LA    R7,IKEYV               SET ADDRES OF KEY VALUE FIELD\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         CP    TPKRL1,=P'0'        IS KEY 1 LENGTH ZERO?\n         BE    BLDT2               YES\n         ZAP   DWD,TPKTL1          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPKRP1          SETUP TO ADD\n         CVB   R4,DWD                KEY 1 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 1 SHOULD BE\n         ZAP   DWD,TPKRL1            CONVERT KEY 1 LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 1 VALUE\n         AR    R7,R4                     BUMP TO NEXT AVAILABLE BYTE\n         LA    R7,1(R7)                  BUMP BY ONE\nBLDT2    CP    TPKRL2,=P'0'        IS KEY 2 LENGTH ZERO?\n         BE    BLDT3               YES\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPKTL2          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPKRP2          SETUP TO ADD\n         CVB   R4,DWD                KEY 2 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 2 SHOULD BE\n         ZAP   DWD,TPKRL2            CONVERT KEY 2 LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 2 VALUE\n         AR    R7,R4                     BUMP TO NEXT AVAILABLE BYTE\n         LA    R7,1(R7)                  BUMP BY ONE\nBLDT3    CP    TPKRL3,=P'0'        IS KEY 3 LENGTH ZERO?\n         BE    BLDT4               YES\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPKTL3          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPKRP3          SETUP TO ADD\n         CVB   R4,DWD                KEY 3 POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE KEY 3 SHOULD BE\n         ZAP   DWD,TPKRL3            CONVERT KEY 3 LENGTH\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLDMVC5                    OF THE KEY 3 VALUE\nBLDT4    EQU   *\n         ZAP   IIDXL,TPKRL1          ADD THE LENGTH OF 1ST KEY\n         AP    IIDXL,TPKRL2          ADD THE LENGTH OF 2ND KEY\n         AP    IIDXL,TPKRL3          ADD THE LENGTH OF 3RD KEY\n         MVC   IRECLNG,ILENGTH       MOVE IN RECORD LENGTH\n         SPACE\n         MVI   PGNOT,C'S'\n         BAL   R14,ADDBRCH     ADD SECONDRARY ID TO BRANCH WORK1 FILE\n         BAL   R14,ADDBANK     ADD SECONDRARY ID TO  BANK WORK2 FILE\n         BAL   R14,GETREPT     ADD SECONDRARY ID TO OVERALL WORK3 FILE\n         ZAP   ISEQ,BPPAGES        MOVE THE SID PAGE NUMBER\n         ZAP   IBRANCH,=P'0'       MAKE ZERO BRANCH\n         PUT   IDXOUT,IRECORD      WRITE OUT I INDEX RECORD\n         SPACE\n         CP    BRCHNUM,=P'0'       IS BRANCH NUMBER ZERO\n         BE    BLDT5               BRANCH IF YES\n         ZAP   IBRANCH,BRCHNUM     THEN MAKE A ZERO BRANCH RECORD\n         ZAP   ISEQ,PPPAGES        MOVE THE SID PAGE NUMBER\n         PUT   IDXOUT,IRECORD      WRITE OUT K INDEX RECORD\n         SPACE\nBLDT5    LA    R3,REPT3(R3)        BUMP TO NEXT RECORD\n         CLI   0(R3),X'FF'         IS THIS END OF TABLE\n         BE    NORTBL              YES, THEN GET OUT\n         B     CHKRTBL             GET NEXT TABLE\n         SPACE\nNORTBL   L     R14,BLDIRC14\n         BR    R14\nCLCRT1   CLC   0(0,R8),TPTTITD1\nCLCRT2   CLC   0(0,R8),TPTTITD2\nCLCRT3   CLC   0(0,R8),TPTTITD3\n         SPACE\nBLDIRC14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* BUILD THE APPLICATION INDEX RECORD TYPE 'S'   ---------------------\n*----------------------------------------------------------------------\n         SPACE\nBLDSREC  ST    R14,BLDSRC14\n         SPACE\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKBL1          SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKBP1          SETUP TO ADD\n         CVB   R4,DWD                BANK POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE INDEX WOULD BE\n         ZAP   DWD,RPKBK1            CONVERT BANK LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLSCLC1            IS BANK NUMBER THERE\n         BL    BLDSNX                BRANCH IF LOW\n         EX    R4,BLSCLC2            IS BANK NUMBER THERE\n         BH    BLDSNX                BRANCH IF HIGH\n         EX    R4,BLSMVC1                    MOVE THE BANK NUMBER\n         NI    SCBANK+L'SCBANK-1,X'FC'\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKAL1          SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKAP1          SETUP TO ADD\n         CVB   R4,DWD                ACCT POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE INDEX WOULD BE\n         ZAP   DWD,RPKAK1            CONVERT ACCT LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         LR    R6,R8\n         LR    R5,R4\n         SR    R7,R7\n         LA    R1,WORKARE\nBLDS2T   CLI   0(R6),C'0'        CHECK FOR NUMERIC\n         BL    BLDSA1            BRANCH IF LOW\n         CLI   0(R6),C'9'        CHECK FOR NUMERIC\n         BH    BLDSA1            BRANCH IF HIGH\n         MVC   0(1,R1),0(R6)\n         LA    R7,1(R7)\n         LA    R1,1(R1)\nBLDSA1   LA    R6,1(R6)\n         BCT   R5,BLDS2T\n         C     R7,=F'0'             DID WE HAVE ANY DIGITS\n         BE    BLDSNX               NO, BRANCH\n         BCTR  R7,0\n         EX    R7,BLSMVC2                    MOVE THE ACCT NUMBER\n         NI    SCACCT+L'SCACCT-1,X'FC'\n         CP    SVBANKL,SCBANK      IS BANK NUMBER THE SAME\n         BNE   BLDSB1              YES\n         CP    SVACCTL,SCACCT      IS ACCOUNT NUMBER THE SAME\n         BNE   BLDSB1              YES\n         AP    SVCOUNTL,=P'1'      NUMBER OF STATEMENTS\n         B     BLDSNX\nBLDSB1   EQU   *\n         CP    SVCOUNTL,=P'0'      IS THIS FIRST TIME THRU\n         BE    BLDSF1              YES\n         MVC   SRECLNG,SLENGTH     MOVE IN RECORD LENGTH\n         ZAP   SPAGE,SVPAGESL      MOVE PAGE NUMBER\n         MVC   SDATE,SVDATEL       MOVE REPORT DATE\n         MVI   STYPE,C'S'          MOVE RECORD TYPE\n         MVI   SSIDE,C'L'          LEFT SIDE\n         MVC   SFILLER,BLANKS      CLEAR REMAINDER OF KEY\n         MVC   SFIRST,SVFIRSTL\n         ZAP   SBANK,SVBANKL\n         ZAP   SACCOUNT,SVACCTL\n         ZAP   SCOUNT,SVCOUNTL\n         PUT   IDXOUT,SRECORD\nBLDSF1   ZAP   SVBANKL,SCBANK\n         ZAP   SVACCTL,SCACCT\n         ZAP   SVCOUNTL,=P'1'\n         MVC   SVPAGESL,APPAGES\n         MVC   SVDATEL,XDATE\n         MVI   SVFIRSTL,C'Y'\n         CLC   DLINE+133+58(4),=C'COPY'\n         BE    BLDSF11\n         CLC   DLINE+133+133+58(4),=C'PAGE'\n         BNE   BLDSNX\nBLDSF11  MVI   SVFIRSTL,C'N'\nBLDSNX   EQU   *\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKBL2          SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKBP2          SETUP TO ADD\n         CVB   R4,DWD                BANK POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE INDEX WOULD BE\n         ZAP   DWD,RPKBK2            CONVERT BANK LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR MOVE\n         EX    R4,BLSCLC1            IS BANK NUMBER THERE\n         BL    BLDS1                 BRANCH IF LOW\n         EX    R4,BLSCLC2            IS BANK NUMBER THERE\n         BH    BLDS1                 BRANCH IF HIGH\n         EX    R4,BLSMVC1                    MOVE THE BANK NUMBER\n         NI    SCBANK+L'SCBANK-1,X'FC'\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,RPKAL2          SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,RPKAP2          SETUP TO ADD\n         CVB   R4,DWD                ACCT POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE INDEX WOULD BE\n         ZAP   DWD,RPKAK2            CONVERT ACCT LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         LR    R6,R8\n         LR    R5,R4\n         SR    R7,R7\n         LA    R1,WORKARE\nBLDS3T   CLI   0(R6),C'0'        CHECK FOR NUMERIC\n         BL    BLDSA2            BRANCH IF LOW\n         CLI   0(R6),C'9'        CHECK FOR NUMERIC\n         BH    BLDSA2            BRANCH IF HIGH\n         MVC   0(1,R1),0(R6)\n         LA    R7,1(R7)\n         LA    R1,1(R1)\nBLDSA2   LA    R6,1(R6)\n         BCT   R5,BLDS3T\n         C     R7,=F'0'             DID WE HAVE ANY DIGITS\n         BE    BLDS1                NO, BRANCH\n         BCTR  R7,0\n         EX    R7,BLSMVC2                    MOVE THE ACCT NUMBER\n         NI    SCACCT+L'SCACCT-1,X'FC'\n         CP    SVBANKR,SCBANK      IS BANK NUMBER THE SAME\n         BNE   BLDSB2              YES\n         CP    SVACCTR,SCACCT      IS ACCOUNT NUMBER THE SAME\n         BNE   BLDSB2              YES\n         AP    SVCOUNTR,=P'1'      NUMBER OF STATEMENTS\n         B     BLDS1\nBLDSB2   EQU   *\n         CP    SVCOUNTR,=P'0'      IS THIS FIRST TIME THRU\n         BE    BLDSF2              YES\n         MVC   SRECLNG,SLENGTH     MOVE IN RECORD LENGTH\n         ZAP   SPAGE,SVPAGESR      MOVE PAGE NUMBER\n         MVC   SDATE,SVDATER       MOVE REPORT DATE\n         MVI   STYPE,C'S'          MOVE RECORD TYPE\n         MVI   SSIDE,C'R'          LEFT SIDE\n         MVC   SFILLER,BLANKS      CLEAR REMAINDER OF KEY\n         MVC   SFIRST,SVFIRSTR\n         ZAP   SBANK,SVBANKR\n         ZAP   SACCOUNT,SVACCTR\n         ZAP   SCOUNT,SVCOUNTR\n         PUT   IDXOUT,SRECORD\nBLDSF2   ZAP   SVBANKR,SCBANK\n         ZAP   SVACCTR,SCACCT\n         ZAP   SVCOUNTR,=P'1'\n         MVC   SVPAGESR,APPAGES\n         MVC   SVDATER,XDATE\n         MVI   SVFIRSTR,C'Y'\n         CLC   DLINE+133+125(4),=C'COPY'      IS THIS A COPY\n         BE    BLDSF22\n         CLC   DLINE+133+133+125(4),=C'PAGE'  IS THIS FIRST PAGE\n         BNE   BLDS1\nBLDSF22  MVI   SVFIRSTR,C'N'\nBLDS1    EQU   *\n         SPACE\n         L     R14,BLDSRC14\n         BR    R14\n         SPACE\nBLSMVC1  PACK  SCBANK,0(0,R8)\nBLSMVC2  PACK  SCACCT,WORKARE\nBLSCLC1  CLC   0(0,R8),ZERO\nBLSCLC2  CLC   0(0,R8),NINES\nBLDSRC14 DS    F\n         EJECT\n*----------------------------------------------------------------------\n* ROUTINE TO WRITE THE LAST TWO TYPE 'S' INDEX RECORDS ----------------\n*----------------------------------------------------------------------\nWTRRECS  ST    R14,BLDSRC14\n         SPACE\n         MVC   SRECLNG,SLENGTH     MOVE IN RECORD LENGTH\n         ZAP   SPAGE,SVPAGESL      MOVE PAGE NUMBER\n         MVC   SDATE,SVDATEL       MOVE REPORT DATE\n         MVI   STYPE,C'S'          MOVE RECORD TYPE\n         MVI   SSIDE,C'L'          LEFT SIDE\n         MVC   SFILLER,BLANKS      CLEAR REMAINDER OF KEY\n         MVC   SFIRST,SVFIRSTL\n         ZAP   SBANK,SVBANKL\n         ZAP   SACCOUNT,SVACCTL\n         ZAP   SCOUNT,SVCOUNTL\n         PUT   IDXOUT,SRECORD\n         SPACE\n         MVC   SRECLNG,SLENGTH     MOVE IN RECORD LENGTH\n         ZAP   SPAGE,SVPAGESR      MOVE PAGE NUMBER\n         MVC   SDATE,SVDATER       MOVE REPORT DATE\n         MVI   STYPE,C'S'          MOVE RECORD TYPE\n         MVI   SSIDE,C'R'          LEFT SIDE\n         MVC   SFILLER,BLANKS      CLEAR REMAINDER OF KEY\n         MVC   SFIRST,SVFIRSTR\n         ZAP   SBANK,SVBANKR\n         ZAP   SACCOUNT,SVACCTR\n         ZAP   SCOUNT,SVCOUNTR\n         PUT   IDXOUT,SRECORD\n         SPACE\n         L     R14,BLDSRC14\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* ANALYZE ROUTINE -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nANALYZE  ST    R14,ANALZ14\n         SPACE\n         L     R3,SAVEREC         RESTORE SYSOUT RECORD ADDRESS\n         CP    LINES,=P'88'       HAVE WE REACHED OUR MAX LINE COUNT\n         BE    FINISH             YES, THEN GET OUT\n         ZAP   DWD,LINES            NUMBER OF LINES THIS PAGE SO FAR\n         CVB   R6,DWD\n         L     R5,=F'133'          COMPUTE THE DISPLACMENT INTO\n         SR    R4,R4                    RECORD FOR NEXT LINES RECORD\n         MR    R4,R6\n         LA    R7,DLINE              LOAD ADDRESS OF FIRST LINE\n         AR    R7,R5\n         MVC   0(133,R7),0(R3)    MOVE SYSOUT LINE\n         AP    LINES,=P'1'\n         MVI   FIRST,C' '\n         CLC   1(132,R7),BLANKS    DID LINE HAVE ANY THING ON IT\n         BE    FINISH              BRANCH IF NOT\n         MVI   WRTPAGE,C'X'        SET PAGE TO BE WRITTEN OUT\n         SPACE\nFINISH   L     R14,ANALZ14\n         BR    R14\n         SPACE\nANALZ14  DS    F\n         EJECT\n*----------------------------------------------------------------------\n* GETDATE ROUTINE -----------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nGETDATE  ST    R14,DATE14\n         SPACE\n         LR    R4,R1\n         ZAP   PJDAY,=P'0'\n         ZAP   PYEAR,=P'0'\n         ZAP   TJD,=P'0'\n         STCM  R4,R3,PJDAY+6\n         STCM  R4,R4,BYTE\n         MVO   PYEAR,BYTE\n         SR    R4,R4\n         CVB   R5,PYEAR\n         D     R4,=F'4'\n         LTR   R4,R4\n         BNZ   NOLEAP\n         MVC   DTABLE+6(2),=PL2'29'\n         MVI   RESET+1,X'00'\nNOLEAP   LA    R4,DTABLE\n         LA    R5,12\nDLOOP    AP    TJD,2(2,R4)\n         CP    TJD,PJDAY+6(2)\n         BNL   COMPDATE\n         LA    R4,4(R0,R4)\n         BCT   R5,DLOOP\nDATERR   MVC   DAY,=C'??'\n         MVC   MTH,=C'??'\n         MVC   YEAR,=C'??'\n         B     RESET\n         SPACE\nCOMPDATE SP    TJD,2(2,R4)\n         SP    PJDAY,TJD\n         UNPK  DAY,PJDAY+6(2)\n         OI    DAY+1,X'F0'\n         MVC   MTH,0(R4)\n         UNPK  YEAR(2),PYEAR+6(2)\n         OI    YEAR+1,X'F0'\n         SPACE\nRESET    B     DATEXIT\n         MVI   *-3,X'F0'\n         MVC   DTABLE+6(2),=PL2'28'\n         SPACE\nDATEXIT  L     R14,DATE14\n         BR    R14\n         SPACE\nDATE14   DS    F\n         EJECT\n*----------------------------------------------------------------------\n* ADD/UPDATE  WORK1 FILE WITH BRANCH LEVEL TITLE ID RECORDS\n*----------------------------------------------------------------------\n         SPACE\nADDBRCH  ST    R14,TIT14\n         SPACE\n         CP    BRCHNUM,=P'0'       IS THERE A BRANCH NUMBER\n         BE    ADDEXIT             BRANCH IF NOT\n         L     R2,R2SAVE           RESTORE TITLE RECORD ADDRESS\n         CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    ADDSECD\n         CLC   PTID,RTID           TITLE ID MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         CLC   PRID,RRID           REPORT ID MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         B     ADDNEXT             TRY OTHER'S\nADDSECD  CLC   PTID,TTID           TITLE ID MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         CLC   PRID,TRID           REPORT ID MATCH\n         BNE   NOGOT               NO, THEN READ IT\nADDNEXT  CLC   PPDATE,XDATE        DOES DATE MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         CP    PBANK,BANKNUM       BANK MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         CP    PBRANCH,BRCHNUM     DOES BRANCH MATCH\n         BNE   NOGOT               NO, THEN READ IT\n         AP    PPPAGES,=P'1'       BUMP PAGE COUNT\n         AP    PPLINES,LINES       ADD NUMBER OF LINES\n         MVI   WRTBRCH,C'Y'        SET UPDATE NEEDED FLAG ON\n         B     ADDEXIT             GOT IT THEN GET OUT\nNOGOT    CLI   FRWRT,C'F'          IS THIS FIRST RECORD\n         BNE   NOPUT               YES,  THEN DO NO PUT\n         PUT   RPL=GETWRK          UPDATE OLD RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR06             NO, THEN ERROR\n         MVI   WRTBRCH,C' '        SET UPDATE NEEDED FLAG OFF\nNOPUT    CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    ADDSEC1\n         MVC   PTID,RTID           MOVE TITLE ID\n         MVC   PRID,RRID           MOVE REPORT ID\n         MVC   PPTTIT,RPTTIT       MOVE TITLE NAME\n         B     ADDNXT\nADDSEC1  MVC   PTID,TTID           MOVE TITLE ID\n         MVC   PRID,TRID           MOVE REPORT ID\n         MVC   PPTTIT,TPTTIT       MOVE TITLE NAME\nADDNXT   MVC   PPDATE,XDATE        MOVE REPORT DATE\n         MVI   PTYPE,C'T'          MOVE INDEX TITLE TYPE\n         MVI   FRWRT,C'F'          MOVE INDEX TITLE TYPE\n         ZAP   PBANK,BANKNUM       MOVE BANK NUMBER\n         ZAP   PBRANCH,BRCHNUM     MOVE BRANCH NUMBER\n         MVC   PFILLER,BLANKS\n         GET   RPL=GETWRK          READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   CHKERR              NO, CHECK FOR NO RECORD FOUND\n         AP    PPPAGES,=P'1'       BUMP PAGE COUNT\n         AP    PPLINES,LINES       ADD NUMBER OF LINES\n         MVC   PFILL1,BLANKS\n         MVI   WRTBRCH,C'Y'        SET UPDATE NEEDED FLAG ON\n         B     ADDEXIT             GET OUT\nCHKERR   C     R15,=F'08'          NO RECORD FOUND RETURN CODE\n         BE    CHKNOR              BRANCH IF 8\n         B     ERROR10\nNOREC    ZAP   PPPAGES,=P'1'       BUMP PAGE COUNT\n         ZAP   PPLINES,LINES       ADD NUMBER OF LINES\n         MVC   PFILL1,BLANKS\n         MODCB RPL=GETWRK,OPTCD=NUP\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         PUT   RPL=GETWRK          ADD NEW RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR07             NO, THEN ERROR\n         MODCB RPL=GETWRK,OPTCD=UPD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         GET   RPL=GETWRK          READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   ERROR10             NO, CHECK FOR NO RECORD FOUND\n         B     ADDEXIT\nCHKNOR   EQU   *\n         SHOWCB RPL=GETWRK,AREA=FEEDBK,FIELDS=FDBK,LENGTH=4\n         LTR   R15,R15             DID SHOW WORK\n         BNZ   ERROR09             NO, THENGET OUT\n         CLI   ERRCD,16            DID WE GET A NO RECORD FOUND\n         BE    NOREC               YES, THEN OK ADD IT\n         B     ERROR05\n         SPACE\nADDEXIT  L     R14,TIT14\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* ADD/UPDATE  WORK2 FILE WITH BANK LEVEL TITLE ID RECORDS\n*----------------------------------------------------------------------\n         SPACE\nADDBANK  ST    R14,TIT14\n         SPACE\n         L     R2,R2SAVE           RESTORE TITLE RECORD ADDRESS\n         CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    ADDSECD1\n         CLC   BTID,RTID           TITLE ID MATCH\n         BNE   NOGOT1              NO, THEN READ IT\n         CLC   BRID,RRID           REPORT ID MATCH\n         BNE   NOGOT1              NO, THEN READ IT\n         B     ADDNEXT1            TRY OTHER'S\nADDSECD1 CLC   BTID,TTID           TITLE ID MATCH\n         BNE   NOGOT1              NO, THEN READ IT\n         CLC   BRID,TRID           REPORT ID MATCH\n         BNE   NOGOT1              NO, THEN READ IT\nADDNEXT1 CLC   BPDATE,XDATE        DOES DATE MATCH\n         BNE   NOGOT1              NO, THEN READ IT\n         CP    BBANK,BANKNUM       BANK MATCH\n         BNE   NOGOT1              NO, THEN READ IT\n         AP    BPPAGES,=P'1'       BUMP PAGE COUNT\n         AP    BPLINES,LINES       ADD NUMBER OF LINES\n         MVI   WRTBNK,C'Y'         SET UPDATE NEEDED FLAG ON\n         B     ADDEXIT1            GOT IT THEN GET OUT\nNOGOT1   CLI   BRWRT,C'F'          IS THIS FIRST RECORD\n         BNE   NOPUT1              YES,  THEN DO NO PUT\n         PUT   RPL=GETWRK2         UPDATE OLD RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR06             NO, THEN ERROR\n         MVI   WRTBNK,C' '         SET UPDATE NEEDED FLAG OFF\nNOPUT1   CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    ADDSEC11\n         MVC   BTID,RTID           MOVE TITLE ID\n         MVC   BRID,RRID           MOVE REPORT ID\n         MVC   BPTTIT,RPTTIT       MOVE TITLE NAME\n         B     ADDNXT1\nADDSEC11 MVC   BTID,TTID           MOVE TITLE ID\n         MVC   BRID,TRID           MOVE REPORT ID\n         MVC   BPTTIT,TPTTIT       MOVE TITLE NAME\nADDNXT1  MVC   BPDATE,XDATE        MOVE REPORT DATE\n         MVI   BTYPE,C'T'          MOVE INDEX TITLE TYPE\n         MVI   BRWRT,C'F'          MOVE INDEX TITLE TYPE\n         ZAP   BBANK,BANKNUM       MOVE BANK NUMBER\n         ZAP   BBRANCH,=P'0'       MOVE 0 BRANCH NUMBER\n         MVC   BFILLER,BLANKS\n         GET   RPL=GETWRK2         READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   CHKERR1             NO, CHECK FOR NO RECORD FOUND\n         AP    BPPAGES,=P'1'       BUMP PAGE COUNT\n         AP    BPLINES,LINES       ADD NUMBER OF LINES\n         MVC   BFILL1,BLANKS\n         MVI   WRTBNK,C'Y'         SET UPDATE NEEDED FLAG ON\n         B     ADDEXIT1            GET OUT\nCHKERR1  C     R15,=F'08'          NO RECORD FOUND RETURN CODE\n         BE    CHKNOR1             BRANCH IF 8\n         B     ERROR10\nNOREC1   ZAP   BPPAGES,=P'1'       BUMP PAGE COUNT\n         ZAP   BPLINES,LINES       ADD NUMBER OF LINES\n         MVC   BFILL1,BLANKS\n         MODCB RPL=GETWRK2,OPTCD=NUP\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         PUT   RPL=GETWRK2         ADD NEW RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR07             NO, THEN ERROR\n         MODCB RPL=GETWRK2,OPTCD=UPD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         GET   RPL=GETWRK2         READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   ERROR10             NO, CHECK FOR NO RECORD FOUND\n         B     ADDEXIT1\nCHKNOR1  EQU   *\n         SHOWCB RPL=GETWRK2,AREA=FEEDBK,FIELDS=FDBK,LENGTH=4\n         LTR   R15,R15             DID SHOW WORK\n         BNZ   ERROR09             NO, THEN GET OUT\n         CLI   ERRCD,16            DID WE GET A NO RECORD FOUND\n         BE    NOREC1              YES, THEN OK ADD IT\n         B     ERROR05\n         SPACE\nADDEXIT1 L     R14,TIT14\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* CHECK CURRENT INDEX FILE FOR DUPLICATE REPORT ID & DATE\n*----------------------------------------------------------------------\n         SPACE\nCHECKOLD ST    R14,TIT14\n         SPACE\n         L     R2,R2SAVE           RESTORE TITLE RECORD ADDRESS\n         CLC   XTID,RTID           TITLE ID MATCH\n         BNE   NOXGET              NO, THEN READ IT\n         CLC   XIDATE,OLDDATE      DOES DATE MATCH\n         BNE   NOXGET              NO, THEN READ IT\n         CP    XBANK,BANKNUM       DO BANK NUMBERS MATCH\n         BNE   NOXGET              NO, THEN READ IT\n         B     CHECKEXT            GOT IT THEN GET OUT\nNOXGET   MVC   XIDATE,XDATE        MOVE REPORT DATE\n         MVC   XTID,RTID           MOVE REPORT ID\n         MVI   XTYPE,C'T'          MOVE INDEX RECORD TYPE\n         ZAP   XBANK,BANKNUM       MOVE BANK NUMBER\n         ZAP   XBRANCH,=P'0'       MAKE BRANCH NUMBER ZERO\n         MVC   XFILLER,BLANKS\n         MVC   XRID,BLANKS         MAKE SECONDRARY ID SPACES\n         GET   RPL=GETIDX          READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   CHKERR4             NO, CHECK FOR NO RECORD FOUND\n         MVI   IDXHIT,C'Y'         WE GOT A HIT, DO NOT EXTRACT\n         B     CHECKEXT            GET OUT\nCHKERR4  C     R15,=F'08'          NO RECORD FOUND RETURN CODE\n         BE    CHKNOR4             BRANCH IF 8\n         B     ERROR11\nNOREC4   MVI   IDXHIT,C'N'         NO HIT, EXTRACT IT\n         B     CHECKEXT            GET OUT\nCHKNOR4  EQU   *\n         SHOWCB RPL=GETIDX,AREA=FEEDBK,FIELDS=FDBK,LENGTH=4\n         LTR   R15,R15             DID SHOW WORK\n         BNZ   ERROR12             NO, THEN GET OUT\n         CLI   ERRCD,16            DID WE GET A NO RECORD FOUND\n         BE    NOREC4              YES, THEN OK ADD IT\n         B     ERROR14\n         SPACE\nCHECKEXT L     R14,TIT14\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* CHECK FOR A PARTIAL EXTRACT BY BANK\n*----------------------------------------------------------------------\n         SPACE\nCHECKBNK ST    R14,TIT14\n         SPACE\n         L     R2,R2SAVE           RESTORE TITLE RECORD ADDRESS\n         MVI   BNKHIT,C'N'         DO NOT EXTRACT DEFAULT\n         MVI   SBNKHIT,C'N'        DO NOT EXTRACT\n         CLI   RPTEXT,C'Y'         DO A FULL EXTRACT\n         BE    OKDOIT              YES, THEN DO THIS ONE\n         CLI   RPTEXT,C'P'         DO A PARTIAL EXTRACT\n         BE    BANKCHK             YES, THEN CHECK BANK TO EXTRACT\n         B     BANKEXT             GET OUT\nBANKCHK  CP    BANKNUM,RPTBNK      DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+2    DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+4    DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+6    DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+8    DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+10   DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+12   DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+14   DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+16   DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         CP    BANKNUM,RPTBNK+18   DOES BANK NUMBER MATCH\n         BE    OKDOIT              YES, THEN EXTRACT IT\n         B     BANKSCHK            GET OUT\nOKDOIT   MVI   BNKHIT,C'Y'         HIT, EXTRACT IT\n         B     BANKSCHK            GET OUT\nBANKSCHK L     R2,R2SAVE\n         L     R3,SAVERID       LOAD ADDRESS OF REPORT TABLE\nCHKRBNK  CLC   TTID,RTID           DO TITLE ID'S MATCH\n         BE    BNKRHIT             YES\nTRYAGNB  CLI   0(R3),X'FF'         IS THIS END OF TABLE\n         BE    BANKEXT             YES, THEN GET OUT\n         LA    R3,REPT3(R3)        BUMP TO NEXT RECORD\n         B     CHKRBNK             GET NEXT TABLE\nBNKRHIT  LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL1          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP1          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL1            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT1                     IS THIS OUR TITLE?\n         BE    BNKRHIT1                      YES,  WE HAVE A HIT\n         B     TRYAGNB             NO THEN TRY AGAIN\nBNKRHIT1 CP    TPTRL2,=P'0'        IS THERE A LENGTH\n         BE    BNKRHIT2            YES,  WE HAVE ONE\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL2          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP2          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL2            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT2                     IS THIS OUR TITLE?\n         BE    BNKRHIT2                      YES,  WE HAVE A HIT\n         B     TRYAGNB             NO THEN TRY AGAIN\nBNKRHIT2 CP    TPTRL3,=P'0'        IS THERE A LENGTH\n         BE    OKHITBNK            NO,  WE DON'T HAVE ONE\n         LA    R8,DLINE            FIRST SYSOUT LINE ON THIS PAGE\n         ZAP   DWD,TPTTL3          NO, SETUP TO ADD\n         BAL   R14,CNVHEX         CONVERT TO HEX AND ADD\n         ZAP   DWD,TPTRP3          SETUP TO ADD\n         CVB   R4,DWD                TITLE POSITION\n         BCTR  R4,0\n         AR    R8,R4                POINT TO WHERE TITLE WOULD BE\n         ZAP   DWD,TPTRL3            CONVERT TITLE LINE\n         CVB   R4,DWD                        LENGTH TO HEX\n         BCTR  R4,0                          FOR COMPARE\n         EX    R4,CLCRT3                     IS THIS OUR TITLE?\n         BE    OKHITBNK                      YES,  WE HAVE A HIT\n         B     TRYAGNB             NO THEN TRY AGAIN\nOKHITBNK CLI   TPTEXT,C'Y'         FULL EXTRACT\n         BE    OKDOITS             YES, EXTRACT IT\n         CLI   TPTEXT,C'P'         PARTIAL  EXTRACT\n         BE    BRCHHIT             YES, EXTRACT IT\n         B     TRYAGNB             NO THEN TRY AGAIN\nBRCHHIT  CP    BANKNUM,TPTBNK      DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+2    DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+4    DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+6    DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+8    DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+10   DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+12   DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+14   DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+16   DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         CP    BANKNUM,TPTBNK+18   DOES BANK NUMBER MATCH\n         BE    OKDOITS             YES, THEN EXTRACT IT\n         B     TRYAGNB             NO THEN TRY AGAIN\nOKDOITS  MVI   SBNKHIT,C'Y'        YES WE HAVE A SECONDARY HIT\n         B     BANKEXT\nBANKEXT  L     R14,TIT14\n         BR    R14\n         EJECT\n*----------------------------------------------------------------------\n* ADD/UPDATE/GET WORK3 FILE WITH OVERALL REPORT ID DATA\n*----------------------------------------------------------------------\n         SPACE\nGETREPT  ST    R14,TIT14\n         SPACE\n         L     R2,R2SAVE           RESTORE TITLE RECORD ADDRESS\n         CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    GETSECD\n         CLC   ATID,RTID           TITLE ID MATCH\n         BNE   NOAGET              NO, THEN READ IT\n         CLC   ARID,RRID           REPORT ID MATCH\n         BNE   NOAGET              NO, THEN READ IT\n         B     GETNEXT             TRY OTHER'S\nGETSECD  CLC   ATID,TTID           TITLE ID MATCH\n         BNE   NOAGET              NO, THEN READ IT\n         CLC   ARID,TRID           REPORT ID MATCH\n         BNE   NOAGET              NO, THEN READ IT\nGETNEXT  CLC   APDATE,XDATE        DOES DATE MATCH\n         BNE   NOAGET              NO, THEN READ IT\n         AP    APPAGES,=P'1'       BUMP PAGE COUNT\n         MVI   WRTOVR,C'Y'         SET UPDATE NEEDED FLAG ON\n         B     REPTEXT             GOT IT THEN GET OUT\nNOAGET   CLI   ARWRT,C'F'          IS THIS FIRST RECORD\n         BNE   NOGET1              YES,  THEN DO NO PUT\n         PUT   RPL=GETWRK3         UPDATE OLD RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR06             NO, THEN ERROR\n         MVI   WRTOVR,C' '         SET UPDATE NEEDED FLAG OFF\nNOGET1   CLI   PGNOT,C'S'          IS THIS SECONDARY REPORT ID\n         BE    GETSEC1\n         MVC   ATID,RTID           MOVE TITLE ID\n         MVC   ARID,RRID           MOVE REPORT ID\n         B     GETNXT\nGETSEC1  MVC   ATID,TTID           MOVE TITLE ID\n         MVC   ARID,TRID           MOVE REPORT ID\nGETNXT   MVC   APDATE,XDATE        MOVE REPORT DATE\n         MVI   ARWRT,C'F'          MOVE INDEX TITLE TYPE\n         GET   RPL=GETWRK3         READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   CHKERR3             NO, CHECK FOR NO RECORD FOUND\n         AP    APPAGES,=P'1'       BUMP PAGE COUNT\n         MVI   WRTOVR,C'Y'         SET UPDATE NEEDED FLAG ON\n         B     REPTEXT             GET OUT\nCHKERR3  C     R15,=F'08'          NO RECORD FOUND RETURN CODE\n         BE    CHKNOR3             BRANCH IF 8\n         B     ERROR10\nNOREC3   ZAP   APPAGES,=P'1'       BUMP PAGE COUNT\n         MODCB RPL=GETWRK3,OPTCD=NUP\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         PUT   RPL=GETWRK3         ADD NEW RECORD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR07             NO, THEN ERROR\n         MODCB RPL=GETWRK3,OPTCD=UPD\n         LTR   R15,R15             DID IT WORK\n         BNZ   ERROR09             NO, THEN ERROR\n         GET   RPL=GETWRK3         READ RECORD\n         LTR   R15,R15             DID WE GET A RECORD\n         BNZ   ERROR10             NO, CHECK FOR NO RECORD FOUND\n         B     REPTEXT\nCHKNOR3  EQU   *\n         SHOWCB RPL=GETWRK3,AREA=FEEDBK,FIELDS=FDBK,LENGTH=4\n         LTR   R15,R15             DID SHOW WORK\n         BNZ   ERROR09             NO, THEN GET OUT\n         CLI   ERRCD,16            DID WE GET A NO RECORD FOUND\n         BE    NOREC3              YES, THEN OK ADD IT\n         B     ERROR05\n         SPACE\nREPTEXT  L     R14,TIT14\n         BR    R14\n         SPACE\nRPT14    DS    F\nTIT14    DS    F\n         EJECT\n*----------------------------------------------------------------------\n* EOJ ROUTINE ---------------------------------------------------------\n*----------------------------------------------------------------------\nERROR01  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         MVC   HCARD+1(L'EMSG01),EMSG01\n         B     ERRORPT\nERROR02  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         MVC   HCARD+1(L'EMSG02),EMSG02\n         B     ERRORPT\nERROR03  EQU   *\n         LA    R15,16\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         MVC   HCARD+1(L'EMSG03),EMSG03\n         B     ERRORPT\nERROR04  EQU   *\n         LA    R15,16\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         MVC   HCARD+1(L'EMSG04),EMSG04\n         B     ERRORPT\nERROR05  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG05),EMSG05\n         B     ERRORPT\nERROR06  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG06),EMSG06\n         B     ERRORPT\nERROR07  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG07),EMSG07\n         B     ERRORPT\nERROR08  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG08),EMSG08\n         B     ERRORPT\nERROR09  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG09),EMSG09\n         B     ERRORPT\nERROR10  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG10),EMSG10\n         B     ERRORPT\nERROR11  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG11),EMSG11\n         B     ERRORPT\nERROR12  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG12),EMSG12\n         B     ERRORPT\nERROR14  EQU   *\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         BAL   R7,GETFEED\n         MVC   HCARD+1(L'EMSG14),EMSG14\n         B     ERRORPT\nERROR15  EQU   *\n         LA    R15,16\n         ST    R15,RETCD\n         BAL   R7,LINECLR\n         MVC   HCARD+1(L'EMSG15),EMSG15\n         B     ERRORPT\nERRORPT  OPEN  (SYSOUT,(OUTPUT))\n         LTR   R15,R15\n         BZ    ERRPRT\n         ST    R15,RETCD\n         WTO   'OPEN ERROR ON SYSOUT FILE'\n         B     EOJ\nERRPRT   MVI   CARD,C'*'\n         MVC   CARD+1(132),CARD\n         PUT   SYSOUT,CARD\n         PUT   SYSOUT,CARD\n         MVC   HCARD+70(L'PAGEPAT),PAGEPAT\n         ED    HCARD+70(L'PAGEPAT),DWD+5\n         PUT   SYSOUT,HCARD\n         PUT   SYSOUT,CARD\n         PUT   SYSOUT,CARD\n         CLOSE SYSOUT\n         B     EOJ\nGETFEED  EQU   *\n         SHOWCB RPL=GETWRK,AREA=FEEDBK,FIELDS=FDBK,LENGTH=4\n         LTR   R15,R15             DID SHOW WORK\n         BNZ   ERROR09             NO, THENGET OUT\n         SR    R6,R6\n         IC    R6,ERRCD\n         CVD   R6,DWD\n         BR    R7\n         SPACE\nEOJ      EQU   *\n         SPACE\nEARLYOUT EQU   *\n         CLOSE (RPTIN)\n         CLOSE (RPTOUT)\n         CLOSE (IDXOUT)\n         CLOSE (WORK1)\n         CLOSE (WORK2)\n         CLOSE (WORK3)\n         CLOSE (INDEX)\n         SPACE\nEXIT     DS    0H\n         L     R15,RETCD\n         L     13,4(13)\n         RETURN (14,12),RC=(15)\n         EJECT\n*----------------------------------------------------------------------\n* SUB ROUTINES --------------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n         SPACE\n*----------------------------------------------------------------------\nLINECLR  MVI   HCARD,C' '\n         MVC   HCARD+1(132),HCARD\n         BR    R7\n         SPACE\n         EJECT\n*----------------------------------------------------------------------\n* PROGRAM VARS CONSTANTS AND TABLES -----------------------------------\n*----------------------------------------------------------------------\n         SPACE\nEMSG01   DC    C'ERROR CLOSING TITLES FILE'\nEMSG02   DC    C'ERROR READING TITLES FILE'\nEMSG03   DC    C'ERROR TITLE ID RECORD TABLE FULL'\nEMSG04   DC    C'ERROR REPORT ID RECORD TABLE FULL'\nEMSG05   DC    C'ERROR READING WORK1 FILE'\nEMSG06   DC    C'ERROR UPDATING WORK1 FILE'\nEMSG07   DC    C'ERROR ADDING TO WORK1 FILE'\nEMSG08   DC    C'ERROR READING WORK1 FILE SEQUENTIALLY'\nEMSG09   DC    C'ERROR DOING SHOWCB ON WORK1 FILE'\nEMSG10   DC    C'ERROR READING WORK1 FILE KEY ACCESS'\nEMSG11   DC    C'ERROR READING INDEX FILE KEY ACCESS'\nEMSG12   DC    C'ERROR DOING SHOWCB ON INDEX FILE'\nEMSG14   DC    C'ERROR READING INDEX FILE'\nEMSG15   DC    C'ERROR NOT ENOUGH SYSIN DATA CARDS'\nSAVEREC  DS    F\nSAVETIT  DS    F\nSAVERID  DS    F\nR2SAVE   DS    F\nR3SAVE   DS    F\nR5SAVE   DS    F\nDRECMAX  DC    F'12000'\nDWD      DS    D\nFWD      DS    F\nHWD      DS    H\n         SPACE\n         DS    0D\nEORADD   DC    F'0'\nWKAREA   DC    F'0'\nRETCD    DC    F'0'\n         SPACE\nBANKNUM  DC    PL2'0'\nBRCHNUM  DC    PL2'0'\nRCDATE   DC    CL6'   '\nSCDATE   DC    CL6'   '\nXDATE    DC    CL6'   '\nIDXHIT   DC    CL1' '\nBNKHIT   DC    CL1' '\nSBNKHIT  DC    CL1' '\nBYTE     DC    CL1' '\nZEROS    DC    4X'0'\nSYSINREC DS    0CL80         SYSIN CARD\n         DS    CL1          TYPE OF EXTRACT\nAPPLID   DS    CL3\n         DS    CL77      DO NOT PUT ANY OTHER THING BETWEEN THESE 2\nBLANKS   DC    133C' '   ------\nZERO     DC    20C'0'\nNINES    DC    20C'9'\nWORKARE  DC    40C' '\n         SPACE\n         DS    0D\nPJDAY    DC    PL8'0'\nPYEAR    DC    PL8'0'\nTJD      DC    PL4'0'\nTODAY    DC    CL8' '\n         SPACE\nHLDDATE  DS    0CL8\nMTH      DC    CL2' '\n         DC    CL1'/'\nDAY      DC    CL2' '\n         DC    CL1'/'\nYEAR     DC    CL2' '\n         SPACE\nRPTDATE  DS    0CL8\nMTHRPT   DC    CL2' '\n         DC    CL1'/'\nDAYRPT   DC    CL2' '\n         DC    CL1'/'\nYEARRPT  DC    CL2' '\n         SPACE\n         DS    0F\nCARD     DS    0CL133\n         DS    CL1\nPREPORT  DS    CL8\n         DS    CL4\nPSID     DS    CL8\n         DS    CL5\nPDTE     DS    CL8\n         DS    CL8\nPNAME    DS    CL50\n         DS    CL1\nPPAGES   DS    CL11\n         DS    CL4\nPLINES   DS    CL12\n         DS    CL20\n         SPACE\nTOTTBL   DS    0F\nTOTPAGES DC    PL5'0'       TOTAL PAGES READ\nTOTPGS   DC    PL5'0'       TOTAL PAGES OUTPUT\nTOTLNS   DC    PL5'0'       TOTAL LINES OUTPUT\nTOTLINES DC    PL5'0'       TOTAL LINES READ\nLINES    DC    PL2'0'       TOTAL LINES ON THIS PAGE\n         SPACE\n         DS    0D\nWRTPAGE  DC    C' '\nOLDDATE  DC    CL6' '\nBADDATE  DC    C' '\nFIRST    DC    C'X'\nPGNOT    DC    C'X'\nFRWRT    DC    C'X'\nARWRT    DC    C'X'\nBRWRT    DC    C'X'\nWRTBRCH  DC    C' '\nWRTBNK   DC    C' '\nWRTOVR   DC    C' '\nFEEDBK   DS    0F\n         DS    1C\nTYPECD   DS    1C\nCMPCD    DS    1C\nERRCD    DS    1C\nDDASTMT  DC    C'N'\nSCBANK   DC    PL4'0'\nSCACCT   DC    PL6'0'\nSVBANKL  DC    PL4'0'\nSVACCTL  DC    PL6'0'\nSVCOUNTL DC    PL3'0'\nSVPAGESL DC    PL4'0'\nSVDATEL  DC    CL6'0'\nSVFIRSTL DC    C' '\nSVFIRSTR DC    C' '\nSVPAGESR DC    PL4'0'\nSVDATER  DC    CL6'0'\nSVBANKR  DC    PL4'0'\nSVACCTR  DC    PL6'0'\nSVCOUNTR DC    PL3'0'\n         DS    0D\nLINECNT  DC    PL3'50'\nPAGECNT  DC    PL3'0'\nSLENGTH  DC    H'39'         RECORD LENGTH FOR TYPE 'S' INDEX RECORD\nTLENGTH  DC    H'100'        RECORD LENGTH FOR TYPE 'T' INDEX RECORD\nILENGTH  DC    H'61'         RECORD LENGTH FOR TYPE 'I' INDEX RECORD\nKLENGTH  DC    H'61'         RECORD LENGTH FOR TYPE 'K' INDEX RECORD\nDLENGTH  DC    H'24'    FIXED PART OF RECORD LENGTH FOR DETAIL RECORD\n         SPACE\nPAGEPAT  DC    X'402020202020'\nEDWRD1   DC    X'40206B2020206B202020'\nEDWRD2   DC    X'402020206B2020206B202020'\nSAVE14   DC    F'0'\nKSAVE    DC    F'0'\nTSAVE    DC    F'0'\nSSAVE    DC    F'0'\nRPTSAVE  DC    F'0'\nRPTSAVE1 DC    F'0'\nRECADDR  DC    F'0'\n         SPACE\nDTABLE   DC    CL2'01',PL2'31',CL2'02',PL2'28',CL2'03',PL2'31'\n         DC    CL2'04',PL2'30',CL2'05',PL2'31',CL2'06',PL2'30'\n         DC    CL2'07',PL2'31',CL2'08',PL2'31',CL2'09',PL2'30'\n         DC    CL2'10',PL2'31',CL2'11',PL2'30',CL2'12',PL2'31'\n         SPACE\n         DS    0F\nHCARD    DS    CL133\n         EJECT\n*----------------------------------------------------------------------\n* FILE DCB, ACB AND RPL'S  --------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nCNTLFILE DCB   DDNAME=SYSIN,                                           X\n               DSORG=PS,                                               X\n               RECFM=FB,                                               X\n               LRECL=80,                                               X\n               BLKSIZE=80,                                             X\n               MACRF=(GL),                                             X\n               EODAD=CNTLEOF\n         SPACE\nRPTIN    DCB   DDNAME=RPTIN,                                           X\n               DSORG=PS,                                               X\n               RECFM=FB,                                               X\n               LRECL=133,                                              X\n               MACRF=(GL),                                             X\n               EODAD=RPTEOF\n         SPACE\nRPTOUT   DCB   DDNAME=RPTOUT,                                          X\n               DSORG=PS,                                               X\n               RECFM=VB,                                               X\n               MACRF=(PM)\n         SPACE\nIDXOUT   DCB   DDNAME=IDXOUT,                                          X\n               DSORG=PS,                                               X\n               RECFM=VB,                                               X\n               MACRF=(PM)\n         SPACE\nSYSOUT   DCB   DDNAME=SYSOUT,                                          X\n               DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               LRECL=133,                                              X\n               BLKSIZE=133,                                            X\n               MACRF=(PM)\n         SPACE\n****************************\n* TITLE FILE ACB'S AND RPL'S\n****************************\n         SPACE\nTITLES   ACB   DDNAME=TITLES,                                          X\n               AM=VSAM,CATALOG=NO,EXLST=ERROR,                         X\n               MACRF=(KEY,NFX,NDF,SEQ,NCI,IN,NIS,NRM,NRS,NUB)\n         SPACE\nERROR    EXLST AM=VSAM,EODAD=TITEOF\n         SPACE\nGETRPL   RPL   ACB=TITLES,AM=VSAM,AREA=RECADDR,AREALEN=4,              X\n               OPTCD=(KEY,SEQ,ARD,FWD,SYN,NUP,LOC)\n         SPACE\n**********************************************************************\n* WORK1 FILE ACB'S AND RPL'S  FOR INDEX FILE TITLE RECORDS\n**********************************************************************\n         SPACE\n*  OPEN VSAM FILE WITH BOTH DIRECT AND SEQUENTIAL PROCESS\n*  TO READ, UPDATE, DELETE AND ADD RECORDS\nWORK1    ACB   DDNAME=WORK1,                                           X\n               AM=VSAM,CATALOG=NO,EXLST=ERROR1,                        X\n               MACRF=(KEY,NFX,NDF,DIR,SEQ,NCI,IN,OUT,NIS,NRM,NRS,NUB)\n         SPACE\nERROR1   EXLST AM=VSAM,EODAD=NOREC\n         SPACE\n*  DIRECT READ FOR UPDATE   KEYED FROM RECKEY FIELD\nGETWRK   RPL   ACB=WORK1,AM=VSAM,AREA=WORKREC,AREALEN=100,ARG=RECKEY,  X\n               OPTCD=(KEY,DIR,KEQ,UPD,FKS,SYN,MVE),                    X\n               KEYLEN=31,RECLEN=100\n**********************************************************************\n* WORK2 FILE ACB'S AND RPL'S  FOR INDEX FILE TITLE RECORDS\n**********************************************************************\n         SPACE\n*  OPEN VSAM FILE WITH BOTH DIRECT AND SEQUENTIAL PROCESS\n*  TO READ, UPDATE, DELETE AND ADD RECORDS\nWORK2    ACB   DDNAME=WORK2,                                           X\n               AM=VSAM,CATALOG=NO,EXLST=ERROR2,                        X\n               MACRF=(KEY,NFX,NDF,DIR,SEQ,NCI,IN,OUT,NIS,NRM,NRS,NUB)\n         SPACE\nERROR2   EXLST AM=VSAM,EODAD=NOREC1\n         SPACE\n*  DIRECT READ FOR UPDATE   KEYED FROM RECKEY FIELD\nGETWRK2  RPL   ACB=WORK2,AM=VSAM,AREA=BORKREC,AREALEN=100,ARG=BECKEY,  X\n               OPTCD=(KEY,DIR,KEQ,UPD,FKS,SYN,MVE),                    X\n               KEYLEN=31,RECLEN=100\n**********************************************************************\n* WORK3 FILE ACB'S AND RPL'S  FOR INDEX FILE TITLE RECORDS\n**********************************************************************\n         SPACE\n*  OPEN VSAM FILE WITH BOTH DIRECT AND SEQUENTIAL PROCESS\n*  TO READ, UPDATE, DELETE AND ADD RECORDS\nWORK3    ACB   DDNAME=WORK3,                                           X\n               AM=VSAM,CATALOG=NO,EXLST=ERROR3,                        X\n               MACRF=(KEY,NFX,NDF,DIR,SEQ,NCI,IN,OUT,NIS,NRM,NRS,NUB)\n         SPACE\nERROR3   EXLST AM=VSAM,EODAD=NOREC3\n         SPACE\n*  DIRECT READ FOR UPDATE   KEYED FROM RECKEY FIELD\nGETWRK3  RPL   ACB=WORK3,AM=VSAM,AREA=REPTREC,AREALEN=26,ARG=REPTKEY,  X\n               OPTCD=(KEY,DIR,KEQ,UPD,FKS,SYN,MVE),                    X\n               KEYLEN=22,RECLEN=26\n**********************************************************************\n* INDEX FILE ACB'S AND RPL'S  FOR CURRENT INDEX FILE RECORDS\n**********************************************************************\n         SPACE\n*  OPEN VSAM FILE WITH DIRECT PROCESS\n*  TO READ RECORDS\nINDEX    ACB   DDNAME=INDEX,                                           X\n               AM=VSAM,CATALOG=NO,EXLST=ERROR4,                        X\n               MACRF=(KEY,NFX,NDF,DIR,NCI,IN,NIS,NRM,NRS,NUB)\n         SPACE\nERROR4   EXLST AM=VSAM,EODAD=NOREC4\n         SPACE\n*  DIRECT READ FOR KEYED FROM XIXKEY FIELD\nGETIDX   RPL   ACB=INDEX,AM=VSAM,AREA=INDEXREC,AREALEN=100,ARG=XIXKEY, X\n               OPTCD=(KEY,DIR,KEQ,FKS,SYN,MVE),                        X\n               KEYLEN=31,RECLEN=100\n         EJECT\n*----------------------------------------------------------------------\n* LITERALS FOR BASE1 AND BASE2 ----------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n         LTORG\n         EJECT\n*----------------------------------------------------------------------\n* EQUATES FOR PROGRAM -------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n*----------------------------------------------------------------------\n* REPORT INDEX TYPE 'I' RECORD LAYOUT  --------------------------------\n*----------------------------------------------------------------------\n         SPACE\n         DS    0H\nIRECORD  DS    0CL61  TYPE 'I' RECORD  LENGTH 61\nIRECLNG  DS    H\nIRECLNG1 DS    H\nITYPE    DS    CL1\nITITID   DS    CL8\nIRIDID   DS    CL8\nIDATE    DS    CL6\nIBANK    DS    PL2\nIBRANCH  DS    PL2\nISEQ     DS    PL4\nIPAGE    DS    PL4\nIIDXL    DS    PL2\nIKEYV    DS    XL20\n         SPACE\n         DS    0H\nKRECORD  DS    0CL61 TYPE 'K' RECORD LENGTH 61\nKRECLNG  DS    H\nKRECLNG1 DS    H\nKTYPE    DS    CL1\nKTITID   DS    CL8\nKRIDID   DS    CL8  ALWAYS BLANKS\nKDATE    DS    CL6\nKBANK    DS    PL2\nKBRANCH  DS    PL2\nKSEQ     DS    PL4\nKPAGE    DS    PL4\nKIDXL    DS    PL2\nKKEYV    DS    CL20\n         SPACE\n         DS    0H\nSRECORD  DS    0CL39     TYPE 'S' RECORD LENGTH 39\nSRECLNG  DS    H\nSRECLNG1 DS    H\nSTYPE    DS    CL1\nSBANK    DS    PL4\nSACCOUNT DS    PL6\nSDATE    DS    CL6\nSPAGE    DS    PL4\nSFIRST   DS    CL1\nSFILLER  DS    CL9\nSCOUNT   DS    PL3\nSSIDE    DS    CL1\n         EJECT\n*----------------------------------------------------------------------\n* REPORT WORK FILES    ------------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n* WORK1 BRANCH TITLE RECORD LAYOUT\nWORKREC  DS    0CL100\nRECKEY   DS    0CL31          VSAM RECORD KEY\nPTYPE    DC    CL1'T'        TYPE OF INDEX RECORD\nPBANK    DC    PL2'0'        BANK\nPBRANCH  DC    PL2'0'        BRANCH\nPTID     DC    CL8'  '       TITLE ID\nPRID     DC    CL8'  '       REPORT ID\nPPDATE   DC    CL6'000000'   REPORT DATE\nPFILLER  DC    CL4' '        FILLER OF VSAM KEY\nPPTTIT   DC    CL50' '       REPORT TITLE NAME\nPPPAGES  DC    PL4'0'        PAGES\nPPLINES  DC    PL5'0'        LINES\nPFILL1   DC    CL10' '       AVALIABLE SPACES\n         SPACE\n* WORK2 BANK TITLE RECORD LAYOUT\nBORKREC  DS    0CL100\nBECKEY   DS    0CL31          VSAM RECORD KEY\nBTYPE    DC    CL1'T'        TYPE OF INDEX RECORD\nBBANK    DC    PL2'0'        BANK\nBBRANCH  DC    PL2'0'        BRANCH\nBTID     DC    CL8'  '       TITLE ID\nBRID     DC    CL8'  '       REPORT ID\nBPDATE   DC    CL6'000000'   REPORT DATE\nBFILLER  DC    CL4' '        FILLER OF VSAM KEY\nBPTTIT   DC    CL50' '       REPORT TITLE NAME\nBPPAGES  DC    PL4'0'        PAGES\nBPLINES  DC    PL5'0'        LINES\nBFILL1   DC    CL10' '       AVALIABLE SPACES\n         SPACE\n* WORK3 REPORT ID RECORD\nREPTREC  DS    0CL26\nREPTKEY  DS    0CL22          VSAM RECORD KEY\nATID     DC    CL8'  '       TITLE ID\nARID     DC    CL8'  '       REPORT ID\nAPDATE   DC    CL6'000000'   REPORT DATE\nAPPAGES  DC    PL4'0'        PAGES\n         SPACE\n* CURRENT INDEX FILE RECORD\nINDEXREC DS    0CL100\nXIXKEY   DS    0CL31          VSAM RECORD KEY\nXTYPE    DC    CL1'T'        TYPE OF INDEX RECORD\nXBANK    DC    PL2'0'        BANK\nXBRANCH  DC    PL2'0'        BRANCH\nXTID     DC    CL8'  '       TITLE ID\nXRID     DC    CL8'  '       REPORT ID\nXIDATE   DC    CL6'000000'   REPORT DATE\nXFILLER  DC    CL4' '        FILLER OF VSAM KEY\nXPTTIT   DC    CL50' '       REPORT TITLE NAME\nXPPAGES  DC    PL4'0'        PAGES\nXPLINES  DC    PL5'0'        LINES\nXFILL1   DC    CL10' '       AVALIABLE SPACES\n         EJECT\n*----------------------------------------------------------------------\n* DDA STATEMENT TITLE RECORD DATA  ------------------------------------\n*----------------------------------------------------------------------\n         SPACE\nDDATITLE DS    0CL170\n         DC    CL1'T'                 RECORD TYPE\n         DC    CL8'DDASTMTS'          REPORT ID\n         DC    CL8' '                 SECONDARY REPORT ID\n         DC    CL3'DDS'               APPLICATION CODE\n         DC    PL2'0'                 NUMBER OF CYCLES\n         DC    PL2'0'                 KEEP DAYS\n         DC    CL1'N'                 TYPE CYCLE\n         DC    CL1'Y'                 EXTRACT\n         DC    PL2'0'                 FORCE BANK NUMBER\n         DC    10PL2'0'               EXTRACT BANK NUMBERS\n         DC    CL50'DDA STATEMENTS'   REPORT TITLE NAME\n         DC    0CL50'DDA STATEMENTS'    TITLE DATA\n* REDEFINE OF TITLE DATA FIELD USED BY DDA STATEMENTS\n* TO FIND THE BANK/BRANCH/ACCOUNT ON BOTH SIDES OF STATEMENTS\n         DC    PL2'10'                BANK/BRANCH1 LINE\n         DC    PL2'53'                BANK/BRANCH1 POSITION\n         DC    PL2'6'                 BANK/BRANCH1 LENGTH\n         DC    PL2'12'                ACCOUNT1 LINE\n         DC    PL2'51'                ACCOUNT1 POSITION\n         DC    PL2'13'                ACCOUNT1 LENGTH\n         DC    PL2'10'                BANK/BRANCH2 LINE\n         DC    PL2'120'               BANK/BRANCH2 POSITION\n         DC    PL2'6'                 BANK/BRANCH2 LENGTH\n         DC    PL2'12'                ACCOUNT2 LINE\n         DC    PL2'118'               ACCOUNT2 POSITION\n         DC    PL2'13'                ACCOUNT2 LENGTH\n         DC    CL26' '                AVAILABLE FILLER\n*  END OF REDEFINED DDA STATEMENT DATA\n*  START OF NORMAL DATA\n         DC    PL2'0'                 TITLE LINE 1\n         DC    PL2'0'                 TITLE POSITION 1\n         DC    PL2'0'                 TITLE LENGTH 1\n         DC    CL50' '                REPORT TITLE NAME 2\n         DC    PL2'0'                 TITLE LINE 2\n         DC    PL2'0'                 TITLE POSITION 2\n         DC    PL2'0'                 TITLE LENGTH 2\n         DC    CL50' '                REPORT TITLE NAME 3\n         DC    PL2'0'                 TITLE LINE 3\n         DC    PL2'0'                 TITLE POSITION 3\n         DC    PL2'0'                 TITLE LENGTH 3\n         DC    PL2'8'                 DATE LINE\n         DC    PL2'57'                DATE POSITION\n         DC    CL1'N'                 DATE TYPE\n         DC    PL2'10'                KEY 1 LINE\n         DC    PL2'53'                KEY 1 POSITION\n         DC    PL2'6'                 KEY 1 LENGTH\n         DC    PL2'12'                KEY 2 LINE\n         DC    PL2'51'                KEY 2 POSITION\n         DC    PL2'13'                KEY 2 LENGTH\n         DC    PL2'0'                 KEY 3 LINE\n         DC    PL2'0'                 KEY 3 POSITION\n         DC    PL2'0'                 KEY 3 LENGTH\n         DC    PL2'10'                BANK  LINE\n         DC    PL2'53'                BANK  POSITION\n         DC    PL2'3'                 BANK  LENGTH\n         DC    PL2'10'                BRANCH LINE\n         DC    PL2'56'                BRANCH POSITION\n         DC    PL2'3'                 BRANCH LENGTH\n         DC    CL9' '                 AVAILABLE FILLER\n       EJECT\n*----------------------------------------------------------------------\n* REPORT OUTPUT DETAIL RECORD LAYOUT ----------------------------------\n*----------------------------------------------------------------------\n         SPACE\nDRECORD  DS    0F\nDRECLNG  DS    H\nDRECLNG1 DS    H\nDRECID   DS    CL8\nDDATE    DS    CL6\nDPAGE    DS    PL4\nDNLINES  DS    PL2\nDLINE    DS    88CL133\n       EJECT\n*----------------------------------------------------------------------\n* TITLE TABLE RECORD LAYOUT -------------------------------------------\n*----------------------------------------------------------------------\n         SPACE\n* REPORT ID RECORD LAYOUT\nRDSECT   DSECT\nREPT1    EQU   *\nRPTYPE   DS    CL1           TYPE RECORD\nRTID     DS    CL8           TITLE ID\nRRID     DS    CL8           REPORT ID\nRPTAPL   DS    CL3           APPLICATION\nRPTCYL   DS    PL2           CYCLES\nRPTKEEP  DS    PL2           KEEP DAYS\nRPTCTYP  DS    CL1           CYCLE TYPE\nRPTEXT   DS    CL1           EXTRACT STATUS\nRPTFRC   DS    PL2           FORCED BANK NUMBER\nRPTBNK   DS    10PL2         BANK NUMBERS TO EXTRACT\nRPTTIT   DS    CL50          REPORT TITLE\nRPTTITD1 DS    0CL50         REPORT TITLE DATA 1\nRPKBL1   DS    PL2           DDA STMT BANK/BRANCH1 LINE NUMBER\nRPKBP1   DS    PL2           DDA STMT BANK/BRANCH1 POSIITION\nRPKBK1   DS    PL2           DDA STMT BANK/BRANCH1 LENGTH\nRPKAL1   DS    PL2           DDA STMT ACCOUNT1 LINE NUMBER\nRPKAP1   DS    PL2           DDA STMT ACCOUNT1 POSIITION\nRPKAK1   DS    PL2           DDA STMT ACCOUNT1 LENGTH\nRPKBL2   DS    PL2           DDA STMT BANK/BRANCH2 LINE NUMBER\nRPKBP2   DS    PL2           DDA STMT BANK/BRANCH2 POSIITION\nRPKBK2   DS    PL2           DDA STMT BANK/BRANCH2 LENGTH\nRPKAL2   DS    PL2           DDA STMT ACCOUNT2 LINE NUMBER\nRPKAP2   DS    PL2           DDA STMT ACCOUNT2 POSIITION\nRPKAK2   DS    PL2           DDA STMT ACCOUNT2 LENGTH\n         DS    CL26\nRPTTL1   DS    PL2           REPORT TITLE LINE NUMBER 1\nRPTRP1   DS    PL2           REPORT TITLE POSITION 1\nRPTRL1   DS    PL2           REPORT TITLE LENGTH 1\nRPTTITD2 DS    CL50          REPORT TITLE DATA 2\nRPTTL2   DS    PL2           REPORT TITLE LINE NUMBER 2\nRPTRP2   DS    PL2           REPORT TITLE POSITION 2\nRPTRL2   DS    PL2           REPORT TITLE LENGTH 2\nRPTTITD3 DS    CL50          REPORT TITLE DATA 3\nRPTTL3   DS    PL2           REPORT TITLE LINE NUMBER 3\nRPTRP3   DS    PL2           REPORT TITLE POSITION 3\nRPTRL3   DS    PL2           REPORT TITLE LENGTH 3\nRPDTL    DS    PL2           REPORT DATE LINE NUMBER\nRPDTP    DS    PL2           REPORT DATE POSIITION\nRPDTT    DS    CL1           REPORT DATE TYPE\nRPKTL1   DS    PL2           REPORT KEY 1 LINE NUMBER\nRPKRP1   DS    PL2           REPORT KEY 1 POSIITION\nRPKRL1   DS    PL2           REPORT KEY 1 LENGTH\nRPKTL2   DS    PL2           REPORT KEY 2 LINE NUMBER\nRPKRP2   DS    PL2           REPORT KEY 2 POSIITION\nRPKRL2   DS    PL2           REPORT KEY 2 LENGTH\nRPKTL3   DS    PL2           REPORT KEY 3 LINE NUMBER\nRPKRP3   DS    PL2           REPORT KEY 3 POSIITION\nRPKRL3   DS    PL2           REPORT KEY 3 LENGTH\nRPBTL    DS    PL2           BANK NUMBER LINE NUMBER\nRPBRP    DS    PL2           BANK NUMBER POSIITION\nRPBRL    DS    PL2           BANK NUMBER LENGTH\nRPRTL    DS    PL2           BRANCH NUMBER LINE NUMBER\nRPRRP    DS    PL2           BRANCH NUMBER POSIITION\nRPRRL    DS    PL2           BRANCH NUMBER LENGTH\n         DS    CL9\nREPT2    EQU   *-REPT1\n         SPACE\n* REPORT RECORD LAYOUT\nRTDSECT  DSECT\nREPTR1   EQU   *\nTPTYPE   DS    CL1           TYPE RECORD\nTTID     DS    CL8           TITLE ID\nTRID     DS    CL8           REPORT ID\nTPTAPL   DS    CL3           APPLICATION ID\nTPTEXT   DS    CL1           SECONDARY EXTRACT STATUS\nTPTBNK   DS    10PL2         BANKS NUMBERS TO EXTRACT\nTPTTIT   DS    CL50          REPORT TITLE\nTPTTITD1 DS    CL30          REPORT TITLE DATA 1\nTPTTL1   DS    PL2           REPORT TITLE LINE NUMBER 1\nTPTRP1   DS    PL2           REPORT TITLE POSITION 1\nTPTRL1   DS    PL2           REPORT TITLE LENGTH 1\nTPTTITD2 DS    CL30          REPORT TITLE DATA 2\nTPTTL2   DS    PL2           REPORT TITLE LINE NUMBER 2\nTPTRP2   DS    PL2           REPORT TITLE POSITION 2\nTPTRL2   DS    PL2           REPORT TITLE LENGTH 2\nTPTTITD3 DS    CL30          REPORT TITLE DATA 3\nTPTTL3   DS    PL2           REPORT TITLE LINE NUMBER 3\nTPTRP3   DS    PL2           REPORT TITLE POSITION 3\nTPTRL3   DS    PL2           REPORT TITLE LENGTH 3\nTPKTL1   DS    PL2           REPORT KEY 1 LINE NUMBER\nTPKRP1   DS    PL2           REPORT KEY 1 POSIITION\nTPKRL1   DS    PL2           REPORT KEY 1 LENGTH\nTPKTL2   DS    PL2           REPORT KEY 2 LINE NUMBER\nTPKRP2   DS    PL2           REPORT KEY 2 POSIITION\nTPKRL2   DS    PL2           REPORT KEY 2 LENGTH\nTPKTL3   DS    PL2           REPORT KEY 3 LINE NUMBER\nTPKRP3   DS    PL2           REPORT KEY 3 POSIITION\nTPKRL3   DS    PL2           REPORT KEY 3 LENGTH\n         DS    CL24\nREPT3    EQU   *-REPTR1\n         EJECT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT015J": {"ttr": 9479, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x01 \\x10o\\x01 \\x14\\x7f\\x143\\x00\\x81\\x00\\xa3\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2020-04-15T00:00:00", "modifydate": "2020-05-26T14:33:00", "lines": 129, "newlines": 163, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "REPT015X": {"ttr": 9482, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00Y\\x01 \\x13o\\x01 \\x14\\x7f\\x140\\x00\\xab\\x00\\x8a\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-26T14:30:59", "lines": 171, "newlines": 138, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT015X JOB (NAME),\n//            NOTIFY=&SYSUID,\n//            CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//*****************************************************************************\n//*  $$$$ YOU CAN USE THIS JOB IF YOU ARE USING THE REPT015 EXTRACT JOB $$$$  *\n//*****************************************************************************\n//* USE THIS JOB TO LOAD THE THREE MAIN CICS FILES FOR THE FIRST TIME         *\n//* AFTER USING THIS JOB YOU WILL NEED TO FOLLOW THE NORMAL BATCH JOB         *\n//* PROCESS                                                                   *\n//*   DON'T FORGET ABOUT THE \"REPORT FILE DD NAME\"                            *\n//*****************************************************************************\n//*   DELETE FILES CREATED BY THIS JOB                                        *\n//*****************************************************************************\n//DEFINE  EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     DELETE OPT.PRINT.CICS.SORTED.INDEX.SEQ  PURGE\n     DELETE OPT.PRINT.CICS.SORTED.HISTORY.SEQ PURGE\n     DELETE OPT.PRINT.CICS.HISTORY.SEQX1 PURGE\n     DELETE OPT.PRINT.CICS.HISTORY.SEQX2 PURGE\n     DELETE OPT.PRINT.CICS.SORTED.DETAIL.SEQ PURGE\n     DELETE    (OPT.CICS.REPORT.DETAIL.FILE)           -\n               CLUSTER PURGE\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.DETAIL.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(18,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.DETAIL.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(7334,11728)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.DETAIL.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n     DELETE    (OPT.CICS.REPORT.INDEX.FILE)            -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.INDEX.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.INDEX.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.INDEX.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n     DELETE    (OPT.CICS.REPORT.HISTORY.FILE)            -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.HISTORY.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.HISTORY.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.HISTORY.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n//****************************************************************\n//*   SORT THE INDEX RECORDS                                     *\n//****************************************************************\n//STEPIDX  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=61,BLKSIZE=23460,RECFM=VB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(5,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   COPY THE WORK1 HISTORY RECORDS TO A SEQ FILE               *\n//****************************************************************\n//CREATE1 EXEC PGM=IDCAMS,COND=(8,LT)\n//IN1      DD DSN=OPT.PRINT.CICS.WORK1.FILE,DISP=SHR\n//OUT1     DD DSN=OPT.PRINT.CICS.HISTORY.SEQX1,DISP=(,CATLG,DELETE),\n//         UNIT=SYSDA,VOL=SER=XXXXXX,\n//             DCB=(LRECL=100,BLKSIZE=0,RECFM=FB),SPACE=(TRK,(1,1))\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1)  -\n            FROMKEY('T') -\n            TOKEY('T') -\n            OUTFILE(OUT1)\n/*\n//****************************************************************\n//*   COPY THE WORK2 HISTORY RECORDS TO A SEQ FILE               *\n//****************************************************************\n//CREATE2 EXEC PGM=IDCAMS,COND=(8,LT)\n//IN1      DD DSN=OPT.PRINT.CICS.WORK2.FILE,DISP=SHR\n//OUT1     DD DSN=OPT.PRINT.CICS.HISTORY.SEQX2,DISP=(,CATLG,DELETE),\n//         UNIT=SYSDA,VOL=SER=XXXXXX,\n//             DCB=(LRECL=100,BLKSIZE=0,RECFM=FB),SPACE=(TRK,(1,1))\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1)  -\n            FROMKEY('T') -\n            TOKEY('T') -\n            OUTFILE(OUT1)\n/*\n//****************************************************************\n//*   SORT THE HISTORY RECORDS                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.HISTORY.SEQX1,DISP=SHR\n//         DD DSN=OPT.PRINT.CICS.HISTORY.SEQX2,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=100,BLKSIZE=23000,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE DETAIL RECORD                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=11728,BLKSIZE=23000,RECFM=VB,BUFNO=10),\n//            SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//SYSIN    DD *\n  RECORD TYPE=V\n  SORT FIELDS=(5,18,A),FORMAT=BI\n/*\n//****************************************************************\n//*   LOAD THE SORTED FILES INTO THEIR RESPECTIVE VSAM FILE      *\n//****************************************************************\n//REPRO   EXEC PGM=IDCAMS,COND=(8,LT)\n//IN1      DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=SHR\n//OUT1     DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//IN2      DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,DISP=SHR\n//OUT2     DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//IN3      DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,DISP=SHR\n//OUT3     DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1) OUTFILE(OUT1)\n     REPRO  INFILE(IN2) OUTFILE(OUT2)\n     REPRO  INFILE(IN3) OUTFILE(OUT3)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT020": {"ttr": 9729, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00$\\x01 \\x10\\x1f\\x01 \\x14\\x8f\\x14\\x03\\x04\\xd6\\x04U\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2020-04-10T00:00:00", "modifydate": "2020-05-27T14:03:24", "lines": 1238, "newlines": 1109, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.                                                R\n000200 PROGRAM-ID.        REPT020.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000600*\n000700*\n000800 ENVIRONMENT DIVISION.\n000900 CONFIGURATION SECTION.\n001000 INPUT-OUTPUT SECTION.\n001100 FILE-CONTROL.\n001200     SELECT TITLE-FILE   ASSIGN TO DA-TITLE\n001300                         ORGANIZATION IS INDEXED\n001400                         ACCESS IS SEQUENTIAL\n001500                         FILE STATUS IS TIT-STATUS\n001600                         RECORD KEY IS TI-KEY.\n001700     SELECT GET-DETAIL         ASSIGN TO UT-S-RPTIN.\n001800     SELECT ADD-INDEX-FILE     ASSIGN TO UT-S-IDXADD.\n001900     SELECT ADD-HISTORY-FILE   ASSIGN TO UT-S-HSTADD.\n002000     SELECT ADD-DETAIL-FILE    ASSIGN TO UT-S-DTLADD.\n002100     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002200     SELECT CONTROL-CARD       ASSIGN TO UT-S-CNTLCRD.\n002300 DATA DIVISION.\n002400 FILE SECTION.\n002500\n002600 FD  TITLE-FILE\n002700     RECORD CONTAINS 240 TO 310.\n002800     COPY REPTB08 REPLACING ==:Z:== BY ==TI==.\n002900     COPY REPTB09 REPLACING ==:Z:== BY ==RI==.\n003000\n003100 FD  GET-DETAIL\n003200     RECORDING MODE IS F\n003300     RECORD CONTAINS 133.\n003400 01  G-RECORD.\n003500     03 G-CONTROL              PIC X(1).\n003600        88 PAGE-CONTROL VALUE '1' 'I' '\u00bb'.\n003700     03 G-LINE-REC             PIC X(132).\n003800\n003900 FD  ADD-INDEX-FILE\n004000     BLOCK CONTAINS 0 RECORDS\n004100     RECORDING MODE IS F\n004200     LABEL RECORDS ARE STANDARD\n004300     RECORD CONTAINS 57.\n004400     COPY REPTB06 REPLACING ==:Z:== BY ==AI==.\n004500\n004600 FD  ADD-HISTORY-FILE\n004700     RECORDING MODE IS F\n004800     RECORD CONTAINS 100.\n004900     COPY REPTB07 REPLACING ==:Z:== BY ==AT==.\n005000\n005100 FD  REPORT-LIST-FILE\n005200     RECORDING MODE IS F\n005300     RECORD CONTAINS 107.\n005400 01  ADD-INDEX-H-RECORD.\n005500     03 HS-REPORT-ID            PIC X(8).\n005600     03 FILLER                  PIC X.\n005700     03 HS-REPORT-SID           PIC X(8).\n005800     03 FILLER                  PIC X.\n005900     03 HS-REPORT-DATE          PIC 9(6).\n006000     03 FILLER                  PIC X.\n006100     03 HS-TITLE-NAME           PIC X(50).\n006200     03 FILLER                  PIC X.\n006300     03 HS-PAGES                PIC 9(7).\n006400     03 FILLER                  PIC X.\n006500     03 HS-LINES                PIC 9(9).\n006600     03 FILLER                  PIC X.\n006700     03 HS-REPORT-FILE          PIC X(06).\n006800     03 FILLER                  PIC X.\n006900     03 HS-STATUS               PIC X(01).\n007000     03 FILLER                  PIC X(05).\n007100\n007200 FD  ADD-DETAIL-FILE\n007300     RECORDING MODE IS V\n007400     RECORD IS VARYING FROM 153 TO 11724\n007500       DEPENDING ON DTL-LENGTH.\n007600     COPY REPTB05 REPLACING ==:Z:== BY ==D==.\n007700\n007800 FD  CONTROL-CARD\n007900     RECORDING MODE IS F\n008000     RECORD CONTAINS 80.\n008100 01  CARD-RECORD.\n008200     03 FILLER                 PIC X(80).\n008300\n008400 WORKING-STORAGE SECTION.\n008500 77  DTL-LENGTH    PIC 9(9)  COMP    VALUE ZERO.\n008600 77  SUB-I         PIC 9(5)  COMP-3  VALUE ZERO.\n008700 77  DI-COUNT      PIC 9(5)  COMP-3  VALUE ZERO.\n008800 77  DO-LINE-COUNT PIC 9(5)  COMP-3  VALUE ZERO.\n008900 77  D-COUNT       PIC 9(7)  COMP-3  VALUE ZERO.\n009000 77  T-COUNT       PIC 9(7)  COMP-3  VALUE ZERO.\n009100 77  K-COUNT       PIC 9(7)  COMP-3  VALUE ZERO.\n009200 77  TI            PIC 9(5)  COMP-3  VALUE ZERO.\n009300 77  TX            PIC 9(5)  COMP-3  VALUE ZERO.\n009400 77  II            PIC 9(5)  COMP-3  VALUE ZERO.\n009500 77  I             PIC 9(5)  COMP-3  VALUE ZEROS.\n009600 77  N             PIC 9(5)  COMP-3  VALUE ZEROS.\n009700 77  CHECK-I       PIC 9(5)  COMP-3  VALUE 200.\n009800 77  CHECK-II      PIC 9(5)  COMP-3  VALUE 2000.\n009900 77  SAVE-II       PIC 9(5)  COMP-3  VALUE ZERO.\n010000 77  SAVE-III      PIC 9(5)  COMP-3  VALUE ZERO.\n010100 77  SAVEZ-III     PIC 9(5)  COMP-3  VALUE ZERO.\n010200 77  SAVEZ-II      PIC 9(5)  COMP-3  VALUE ZERO.\n010300 77  FIRST-REC     PIC X(1)          VALUE 'Y'.\n010400 77  FIRST-TIME    PIC X(1)          VALUE 'Y'.\n010500 77  GOT-LINE1     PIC X(1)          VALUE 'N'.\n010600 77  GOT-LINE2     PIC X(1)          VALUE 'N'.\n010700 77  GOT-LINE3     PIC X(1)          VALUE 'N'.\n010800 77  TITLE-POS1    PIC 9(5)  COMP-3  VALUE ZERO.\n010900 77  TITLE-POS2    PIC 9(5)  COMP-3  VALUE ZERO.\n011000 77  TITLE-POS3    PIC 9(5)  COMP-3  VALUE ZERO.\n011100 77  TITLE-DATE-POS PIC 9(5)  COMP-3  VALUE ZERO.\n011200 77  KEY-POS1      PIC 9(5)  COMP-3  VALUE ZERO.\n011300 77  KEY-POS2      PIC 9(5)  COMP-3  VALUE ZERO.\n011400 77  KEY-POS3      PIC 9(5)  COMP-3  VALUE ZERO.\n011500 77  EOF-STATUS    PIC X(1)          VALUE 'N'.\n011600 77  GOT-DTL       PIC X(1)          VALUE 'N'.\n011700 77  IDX-LENGTH    PIC 9(5)  COMP-3  VALUE ZERO.\n011800 77  TIT-STATUS    PIC X(2)          VALUE 'ZZ'.\n011900 77  IDX-STATUS    PIC X(2)          VALUE 'ZZ'.\n012000 77  GET-OUT-X     PIC X(1)          VALUE 'N'.\n012100     88 GET-OUT VALUE 'Y'.\n012200 77  DATE-USED     PIC X(1)          VALUE 'N'.\n012300 77  SAVE-FILE-NAME PIC X(6)         VALUE SPACES.\n012400 77  WORK-TEST     PIC X(50)         VALUE SPACES.\n012500     88 FORCE-DATE VALUE 'Y'.\n012600\n012700 01  CARD-AREA.\n012800     03  CARD-TYPE          PIC  X(1).\n012900         88  CARD-APPL   VALUE 'A'.\n013000         88  CARD-TITLE  VALUE 'T'.\n013100     03  CARD-AREA-1.\n013200         05  FILLER     OCCURS 19 TIMES.\n013300             07  CARD-APPLICATION   PIC  X(3).\n013400             07  FILLER             PIC  X(1).\n013500         05  FILLER                 PIC  X(3).\n013600     03  CARD-AREA-2 REDEFINES CARD-AREA-1.\n013700         05  FILLER      OCCURS 8 TIMES.\n013800             07  CARD-REPORT-ID     PIC  X(8).\n013900             07  FILLER             PIC  X(1).\n014000         05  FILLER             PIC  X(7).\n014100     03  CARD-AREA-3 REDEFINES CARD-AREA-1.\n014200         05  CARD-DATE          PIC  X(5).\n014300             88  DATE-CARD VALUES 'DATE='.\n014400         05  CARD-MM            PIC  9(2).\n014500         05  CARD-DD            PIC  9(2).\n014600         05  CARD-YY            PIC  9(2).\n014700         05  FILLER             PIC  X(68).\n014800\n014900 01  TITLE-RECORD-ARRAY.\n015000     02 T-RECORD-ARRAY  PIC X(310) OCCURS 200 TIMES.\n015100 01  TITLE-RECORDS REDEFINES TITLE-RECORD-ARRAY.\n015200     02 FILLER OCCURS 200 TIMES.\n015300     COPY REPTB03 REPLACING ==:Z:== BY ==T==.\n015400 01  REPORT-RECORDS-ARRAY REDEFINES TITLE-RECORD-ARRAY.\n015500     02 FILLER OCCURS 200 TIMES.\n015600     COPY REPTB04 REPLACING ==:Z:== BY ==R==.\n015700        05 FILLER                 PIC X(70).\n015800\n015900 01  DO-SYSOUT.\n016000     03 DO-REPORT-ID            PIC X(8).\n016100     03 DO-REPORT-DATE          PIC 9(6).\n016200     03 DO-PAGE-NUMBER          PIC S9(7)  COMP-3.\n016300     03 DO-NUMBER-OF-LINES      PIC S9(3)  COMP-3.\n016400     03 DO-LINES                PIC X(11704).\n016500     03 FILLER  REDEFINES DO-LINES OCCURS 88 TIMES.\n016600        05 DO-LINE                 PIC X(133).\n016700\n016800 01  INDEX-T-RECORD-ARRAY.\n016900     02 TX-RECORD    OCCURS 2000 TIMES.\n017000     COPY REPTB01 REPLACING ==:Z:== BY ==TX==.\n017100\n017200 01  INDEX-TZ-RECORD-ARRAY.\n017300     02 TZ-RECORD    OCCURS 2000 TIMES.\n017400     COPY REPTB01 REPLACING ==:Z:== BY ==TZ==.\n017500\n017600     COPY REPTB06 REPLACING ==:Z:== BY ==AO==.\n017700\n017800 01  WORK-AREA.\n017900     03  D-PRT.\n018000         05 FILLER PIC X(30) VALUE 'DETAIL RECORD COUNT = '.\n018100         05 D-PRT-COUNT PIC  ZZZ,999.\n018200     03  K-PRT.\n018300         05 FILLER PIC X(30) VALUE 'INDEX RECORD COUNT = '.\n018400         05 K-PRT-COUNT PIC  ZZZ,999.\n018500     03  T-PRT.\n018600         05 FILLER PIC X(30) VALUE 'HISTORY RECORD COUNT = '.\n018700         05 T-PRT-COUNT PIC  ZZZ,999.\n018800     03  WK-BANK            PIC  S9(3) COMP-3 VALUE ZEROS.\n018900     03  WK-BRANCH          PIC  S9(3) COMP-3 VALUE ZEROS.\n019000     03  WK-PAGE-COUNT      PIC  S9(7) COMP-3 VALUE ZEROS.\n019100     03  WK-PAGE-COUNT-BRCH PIC  S9(7) COMP-3 VALUE ZEROS.\n019200     03  WK-LINE-COUNT      PIC  S9(3) COMP-3 VALUE ZEROS.\n019300     03  OLD-REPORT-ID      PIC  X(8) VALUE SPACES.\n019400     03  OLD-REPORT-SID     PIC  X(8) VALUE SPACES.\n019500     03  OLD-REPORT-DATE    PIC  9(6) VALUE ZEROS.\n019600     03  OLD-BANK           PIC  S9(3) COMP-3 VALUE ZEROS.\n019700     03  OLD-BRANCH         PIC  S9(3) COMP-3 VALUE ZEROS.\n019800     03  SYSTEM-DAYS        PIC  S9(7) VALUE ZEROS COMP-3.\n019900     03  TOTAL-DAYS         PIC  S9(7) VALUE ZEROS COMP-3.\n020000     03  MONTH-DAYS         PIC  S9(7) VALUE ZEROS COMP-3.\n020100     03  YEAR-CHECK         PIC   9(2) VALUE ZEROS.\n020200     03  DAYS-IN-MONTH.\n020300         05  FILLER PIC 9(2) VALUE 31.\n020400         05  FILLER PIC 9(2) VALUE 28.\n020500         05  FILLER PIC 9(2) VALUE 31.\n020600         05  FILLER PIC 9(2) VALUE 30.\n020700         05  FILLER PIC 9(2) VALUE 31.\n020800         05  FILLER PIC 9(2) VALUE 30.\n020900         05  FILLER PIC 9(2) VALUE 31.\n021000         05  FILLER PIC 9(2) VALUE 31.\n021100         05  FILLER PIC 9(2) VALUE 30.\n021200         05  FILLER PIC 9(2) VALUE 31.\n021300         05  FILLER PIC 9(2) VALUE 30.\n021400         05  FILLER PIC 9(2) VALUE 31.\n021500     03  DAYS REDEFINES DAYS-IN-MONTH PIC 9(2) OCCURS 12 TIMES.\n021600     03  DATE-G PIC 9(8).\n021700     03  FILLER REDEFINES DATE-G.\n021800         05  DATE-YY  PIC 9(4).\n021900         05  DATE-MM  PIC 9(2).\n022000         05  DATE-DD  PIC 9(2).\n022100     03  SYSTEM-DATE.\n022200         05  SS-YY  PIC 9(4).\n022300         05  SS-MM  PIC 9(2).\n022400         05  SS-DD  PIC 9(2).\n022500     03  REPORT-DATE   PIC 9(6).\n022600     03  FILLER REDEFINES REPORT-DATE.\n022700         05  RP-YY  PIC 9(2).\n022800         05  RP-MM  PIC 9(2).\n022900         05  RP-DD  PIC 9(2).\n023000     03  IDX-KEY1      PIC X(20).\n023100     03  IDX-KEY2      PIC X(20).\n023200     03  IDX-KEY3      PIC X(20).\n023300     03  FILLER        PIC X(50).\n023400     EJECT\n023500 LINKAGE SECTION.\n023600 01  LINK-WORK-AREA.\n023700     03  PARM-LENGTH   PIC S9(4) COMP.\n023800     03  JOB-PARM      PIC X(5).\n023900        88 DEBUG-ON  VALUE 'DEBUG'.\n024000\n024100 EJECT\n024200 PROCEDURE DIVISION USING LINK-WORK-AREA.\n024300\n024400 0000-MAIN-ROUTINE.\n024500*********************************************************\n024600*     MAIN PROCESSING ROUTINE        ********************\n024700*********************************************************\n024800     IF PARM-LENGTH GREATER THAN 0\n024900        DISPLAY 'JOB-PARM=' JOB-PARM.\n025000     INITIALIZE INDEX-T-RECORD-ARRAY.\n025100     INITIALIZE INDEX-TZ-RECORD-ARRAY.\n025200     PERFORM 0100-PROCESS-CONTROL-CARD THRU\n025300             0101-EXIT.\n025400     PERFORM 0200-LOAD-TITLE-RECORDS THRU\n025500             0299-EXIT.\n025600     PERFORM 1000-PROCESS-INPUT-RECORDS THRU\n025700             2999-EXIT.\n025800     CLOSE GET-DETAIL.\n025900     CLOSE ADD-INDEX-FILE ADD-DETAIL-FILE.\n026000     PERFORM 3000-CREATE-TITLE-RECORDS THRU\n026100             3999-EXIT.\n026200     GO TO 9999-END-OF-PROGRAM.\n026300\n026400*********************************************************\n026500*     READ ONE CONTROL CARD          ********************\n026600*********************************************************\n026700 0100-PROCESS-CONTROL-CARD.\n026800     IF DEBUG-ON\n026900        DISPLAY '0100-PRCESS-CONTROL-CARD'.\n027000     OPEN INPUT CONTROL-CARD.\n027100     READ CONTROL-CARD AT END GO TO 9900-NO-INPUT-CARD.\n027200     MOVE CARD-RECORD TO CARD-AREA.\n027300     IF DATE-CARD\n027400        MOVE CARD-MM TO RP-MM\n027500        MOVE CARD-DD TO RP-DD\n027600        MOVE CARD-YY TO RP-YY\n027700        MOVE 'Y' TO DATE-USED\n027800      ELSE\n027900        MOVE FUNCTION CURRENT-DATE (1:8) TO SYSTEM-DATE\n028000        MOVE SS-YY TO RP-YY\n028100        MOVE SS-MM TO RP-MM\n028200        MOVE SS-DD TO RP-DD.\n028300     IF DATE-CARD\n028400        READ CONTROL-CARD AT END GO TO 9900-NO-INPUT-CARD.\n028500     MOVE CARD-RECORD TO CARD-AREA.\n028600     CLOSE CONTROL-CARD.\n028700     IF DEBUG-ON\n028800        DISPLAY 'REPORT-DATE=' REPORT-DATE.\n028900\n029000 0101-EXIT.  EXIT.\n029100\n029200*********************************************************\n029300*     LOAD TITLE RECORDS INTO ARRAY  ********************\n029400*********************************************************\n029500 0200-LOAD-TITLE-RECORDS.\n029600     IF DEBUG-ON\n029700        DISPLAY '0200-LOAD-TITLE-RECORDS'.\n029800     OPEN INPUT TITLE-FILE.\n029900\n030000 0210-GET-TITLE-RECORDS.\n030100     IF CARD-APPL\n030200        PERFORM 0220-CHECK-APPLICATIONS.\n030300     IF CARD-TITLE\n030400        PERFORM 0230-CHECK-TITLE-IDS.\n030500     GO TO 0290-END-TITLE-RECORDS.\n030600\n030700 0220-CHECK-APPLICATIONS.\n030800     READ TITLE-FILE  AT END GO TO 0290-END-TITLE-RECORDS.\n030900     IF (TI-TYPE = 'T') AND (TI-EXTRACT = 'N')\n031000         GO TO 0220-CHECK-APPLICATIONS.\n031100     IF (RI-TYPE = 'R') AND (RI-EXTRACT = 'N')\n031200         GO TO 0220-CHECK-APPLICATIONS.\n031300     PERFORM 0222-CHECK-APPLS\n031400            VARYING I FROM 1 BY 1\n031500            UNTIL I EQUAL 19.\n031600     GO TO 0220-CHECK-APPLICATIONS.\n031700\n031800 0222-CHECK-APPLS.\n031900     IF DEBUG-ON\n032000        DISPLAY 'CARD-APPL=' CARD-APPLICATION (I)\n032100        DISPLAY 'TI-APPL=' TI-APPLICATION.\n032200     IF CARD-APPLICATION (I) EQUAL SPACES\n032300        GO TO 0220-CHECK-APPLICATIONS.\n032400     IF TI-APPLICATION EQUAL CARD-APPLICATION (I)\n032500        ADD +1 TO TI\n032600        MOVE +19 TO I\n032700        MOVE TI-RECORD TO T-RECORD-ARRAY (TI)\n032800        IF DEBUG-ON\n032900           DISPLAY 'TI-MOVE-RECORD-' T-RECORD-ARRAY (TI)\n033000        END-IF\n033100        GO TO 0220-CHECK-APPLICATIONS.\n033200     IF I EQUAL CHECK-I\n033300        CLOSE TITLE-FILE\n033400        GO TO 9902-TITLE-ARRAY-ERROR.\n033500\n033600 0230-CHECK-TITLE-IDS.\n033700     READ TITLE-FILE  AT END GO TO 0290-END-TITLE-RECORDS.\n033800     IF (TI-TYPE = 'T') AND (TI-EXTRACT = 'N')\n033900         GO TO 0230-CHECK-TITLE-IDS.\n034000     IF (RI-TYPE = 'R') AND (RI-EXTRACT = 'N')\n034100         GO TO 0230-CHECK-TITLE-IDS.\n034200     PERFORM 0232-CHECK-IDS\n034300            VARYING I FROM 1 BY 1\n034400            UNTIL I EQUAL 8.\n034500     GO TO 0230-CHECK-TITLE-IDS.\n034600\n034700 0232-CHECK-IDS.\n034800     IF CARD-REPORT-ID (I) EQUAL SPACES\n034900        GO TO 0230-CHECK-TITLE-IDS.\n035000     IF TI-REPORT-ID EQUAL CARD-REPORT-ID (I)\n035100        ADD +1 TO TI\n035200        MOVE +8 TO I\n035300        IF DEBUG-ON\n035400           DISPLAY 'TI-MOVE-RECORD'\n035500        END-IF\n035600        MOVE TI-RECORD TO T-RECORD-ARRAY (TI)\n035700        GO TO 0230-CHECK-TITLE-IDS.\n035800     IF SUB-I EQUAL 200\n035900        CLOSE TITLE-FILE\n036000        GO TO 9902-TITLE-ARRAY-ERROR.\n036100\n036200 0290-END-TITLE-RECORDS.\n036300     CLOSE TITLE-FILE.\n036400     IF DEBUG-ON\n036500        DISPLAY 'T-RECORDS LOADED=' TI.\n036600\n036700 0299-EXIT.  EXIT.\n036800\n036900*********************************************************\n037000*     PROCESS SYSOUT RECORDS         ********************\n037100*********************************************************\n037200 1000-PROCESS-INPUT-RECORDS.\n037300     IF DEBUG-ON\n037400        DISPLAY '1000-PROCESS-INPUT-RECORDS'.\n037500     OPEN INPUT GET-DETAIL.\n037600     OPEN OUTPUT ADD-INDEX-FILE\n037700                 ADD-DETAIL-FILE.\n037800\n037900 1020-READ-SYSOUT.\n038000     READ GET-DETAIL AT END GO TO 2980-NO-MORE-SYSOUT.\n038100     IF FIRST-REC EQUAL 'Y'\n038200        MOVE 'N' TO FIRST-REC\n038300        GO TO 1022-READ-SYSOUT.\n038400     IF PAGE-CONTROL\n038500        PERFORM 1200-PROCESS-SYSOUT THRU 1499-PROCESS-EXIT\n038600        PERFORM 1450-START-NEW-PAGE.\n038700\n038800 1022-READ-SYSOUT.\n038900     ADD +1 TO DI-COUNT.\n039000     IF DI-COUNT GREATER THAN +88\n039100        IF DEBUG-ON\n039200           DISPLAY '**LINES DROPPED**'\n039300        END-IF\n039400*       PERFORM 1035-DROP-LINES\n039500        GO TO 1020-READ-SYSOUT.\n039600     MOVE G-RECORD TO DO-LINE (DI-COUNT).\n039700     IF DEBUG-ON\n039800        DISPLAY '#LINES=' DI-COUNT.\n039900     GO TO 1020-READ-SYSOUT.\n040000\n040100 1200-PROCESS-SYSOUT.\n040200     IF DEBUG-ON\n040300        DISPLAY '1200-PROCESS-SYSOUT'.\n040400     MOVE 'N' TO GOT-LINE1, GOT-LINE2, GOT-LINE3, GOT-DTL.\n040500     PERFORM 1201-PROCESS-SYSOUT THRU 1279-EXIT\n040600            VARYING I FROM 1 BY 1\n040700            UNTIL I GREATER THAN TI.\n040800     IF GOT-DTL = 'Y'\n040900        PERFORM 2200-PROCESS-SYSOUT.\n041000     PERFORM 1450-START-NEW-PAGE.\n041100     IF EOF-STATUS EQUAL 'Y'\n041200        GO TO 1499-PROCESS-EXIT.\n041300     GO TO 1022-READ-SYSOUT.\n041400\n041500 1201-PROCESS-SYSOUT.\n041600     IF DEBUG-ON\n041700        DISPLAY '1201-PROCESS-SYSOUT ' I.\n041800     IF T-TYPE (I) EQUAL 'R'\n041900        GO TO 1279-EXIT.\n042000     IF T-TID-LINE-1 (I) EQUAL ZERO\n042100        GO TO 1203-PROCESS-NEXT.\n042200     COMPUTE TITLE-POS1 =\n042300      ((T-TID-LINE-1 (I) - 1) * 133) + T-TID-POSITION-1 (I).\n042400     IF DEBUG-ON\n042500        DISPLAY 'TITLE-POS1=' TITLE-POS1.\n042600     MOVE DO-LINES (TITLE-POS1 :T-TID-LENGTH-1 (I)) TO WORK-TEST.\n042700     IF DEBUG-ON\n042800        DISPLAY 'DLINE=' WORK-TEST\n042900        DISPLAY 'TID  =' T-TID-DATA-1 (I).\n043000     IF DO-LINES (TITLE-POS1 :T-TID-LENGTH-1 (I)) EQUAL\n043100         T-TID-DATA-1 (I)\n043200        MOVE 'Y' TO GOT-LINE1\n043300        GO TO 1203-PROCESS-NEXT\n043400      ELSE\n043500        GO TO 1279-EXIT.\n043600\n043700 1203-PROCESS-NEXT.\n043800     IF DEBUG-ON\n043900        DISPLAY '1203-PROCESS-NEXT '  I.\n044000     IF T-TID-LINE-2 (I) EQUAL ZERO\n044100        GO TO 1205-PROCESS-NEXT.\n044200     COMPUTE TITLE-POS2 =\n044300      ((T-TID-LINE-2 (I) - 1) * 133) + T-TID-POSITION-2 (I).\n044400     IF DO-LINES (TITLE-POS2 :T-TID-LENGTH-2 (I)) EQUAL\n044500         T-TID-DATA-2 (I)\n044600        MOVE 'Y' TO GOT-LINE2\n044700        GO TO 1205-PROCESS-NEXT\n044800      ELSE\n044900        GO TO 1279-EXIT.\n045000\n045100 1205-PROCESS-NEXT.\n045200     IF DEBUG-ON\n045300        DISPLAY '1205-PROCESS-NEXT ' I.\n045400     IF T-TID-LINE-3 (I) EQUAL ZERO\n045500        GO TO 1210-PROCESS-DATE.\n045600     COMPUTE TITLE-POS2 =\n045700      ((T-TID-LINE-3 (I) - 1) * 133) + T-TID-POSITION-3 (I).\n045800      IF DO-LINES (TITLE-POS3:T-TID-LENGTH-3 (I)) EQUAL\n045900         T-TID-DATA-3 (I)\n046000        MOVE 'Y' TO GOT-LINE3\n046100        GO TO 1210-PROCESS-DATE\n046200      ELSE\n046300        GO TO 1279-EXIT.\n046400\n046500 1210-PROCESS-DATE.\n046600     IF DEBUG-ON\n046700        DISPLAY '1210-PROCESS-DATE ' I.\n046800     IF T-REPORT-ID (I) EQUAL OLD-REPORT-ID\n046900        ADD +1 TO WK-PAGE-COUNT, WK-PAGE-COUNT-BRCH\n047000      ELSE\n047100        MOVE ZERO TO AO-SEQ\n047200        MOVE +1 TO WK-PAGE-COUNT, WK-PAGE-COUNT-BRCH\n047300      END-IF.\n047400     MOVE T-REPORT-ID (I) TO OLD-REPORT-ID.\n047500     MOVE T-REPORT-SID (I) TO OLD-REPORT-SID.\n047600     MOVE 'Y' TO GOT-DTL.\n047700     IF T-RDT-TYPE (I) EQUAL 'N'\n047800        MOVE SS-MM TO RP-MM\n047900        MOVE SS-DD TO RP-DD\n048000        MOVE SS-YY TO RP-YY.\n048100     COMPUTE TITLE-DATE-POS =\n048200      ((T-RDT-LINE (I) - 1) * 133) + T-RDT-POSITION (I).\n048300     IF T-RDT-TYPE (I) EQUAL 'R'\n048400        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-MM\n048500        ADD +3 TO TITLE-DATE-POS\n048600        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-DD\n048700        ADD +3 TO TITLE-DATE-POS\n048800        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-YY.\n048900     IF T-RDT-TYPE (I) EQUAL 'C'\n049000        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-MM\n049100        ADD +3 TO TITLE-DATE-POS\n049200        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-DD\n049300        ADD +5 TO TITLE-DATE-POS\n049400        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-YY.\n049500     IF T-RDT-TYPE (I) EQUAL 'Y'\n049600        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-YY\n049700        ADD +3 TO TITLE-DATE-POS\n049800        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-MM\n049900        ADD +3 TO TITLE-DATE-POS\n050000        MOVE DO-LINES (TITLE-DATE-POS:2) TO RP-DD.\n050100*  CHANGED TO FIX MULITPLE SAME REPORT-ID BUT DIFFERENT DATE\n050200     IF REPORT-DATE EQUAL OLD-REPORT-DATE\n050300        NEXT SENTENCE\n050400       ELSE\n050500        MOVE REPORT-DATE TO OLD-REPORT-DATE\n050600        MOVE +1 TO WK-PAGE-COUNT, WK-PAGE-COUNT-BRCH.\n050700     IF DEBUG-ON\n050800        DISPLAY '1210- REPORT-DATE=' REPORT-DATE.\n050900\n051000 1220-BUILD-KEY.\n051100     IF DEBUG-ON\n051200        DISPLAY '1220-BUILD-KEY '    I.\n051300     MOVE SPACES TO IDX-KEY1, IDX-KEY2, IDX-KEY3.\n051400     IF T-KY1-LINE (I) EQUAL ZERO\n051500        GO TO 1230-PROCESS-BANK-NUMBER.\n051600     COMPUTE KEY-POS1 =\n051700      ((T-KY1-LINE (I) - 1) * 133) + T-KY1-POSITION (I).\n051800*    MOVE DO-LINES (KEY-POS1:T-KY1-LENGTH (I)) TO IDX-KEY1.\n051900     MOVE DO-LINES (KEY-POS1:T-KY1-LENGTH (I))\n052000                   TO IDX-KEY1 (1 :T-KY1-LENGTH (I)).\n052100     IF DEBUG-ON\n052200        DISPLAY 'KEY1=' IDX-KEY1.\n052300     MOVE T-KY1-LENGTH (I) TO IDX-LENGTH.\n052400     IF T-KY2-LINE (I) EQUAL ZERO\n052500        GO TO 1230-PROCESS-BANK-NUMBER.\n052600     COMPUTE KEY-POS2 =\n052700      ((T-KY2-LINE (I) - 1) * 133) + T-KY2-POSITION (I).\n052800     ADD T-KY2-LENGTH (I) TO IDX-LENGTH.\n052900*    MOVE DO-LINES (KEY-POS2:T-KY2-LENGTH (I)) TO IDX-KEY2.\n053000     MOVE DO-LINES (KEY-POS2:T-KY2-LENGTH (I))\n053100                 TO IDX-KEY1 (IDX-LENGTH : T-KY2-LENGTH (I)).\n053200     IF DEBUG-ON\n053300        DISPLAY 'KEY2=' IDX-KEY1.\n053400     IF T-KY3-LINE (I) EQUAL ZERO\n053500        GO TO 1230-PROCESS-BANK-NUMBER.\n053600     COMPUTE KEY-POS3 =\n053700      ((T-KY3-LINE (I) - 1) * 133) + T-KY3-POSITION (I).\n053800     ADD T-KY3-LENGTH (I) TO IDX-LENGTH.\n053900*    MOVE DO-LINES (KEY-POS3:T-KY3-LENGTH (I)) TO IDX-KEY3.\n054000     MOVE DO-LINES (KEY-POS3:T-KY3-LENGTH (I))\n054100                 TO IDX-KEY1 (IDX-LENGTH : T-KY3-LENGTH (I)).\n054200     IF DEBUG-ON\n054300        DISPLAY 'KEY3=' IDX-KEY1.\n054400\n054500 1230-PROCESS-BANK-NUMBER.\n054600     IF DEBUG-ON\n054700        DISPLAY '1230-PROCESS-BANK'.\n054800     IF T-FORCE-BANK (I) NOT EQUAL ZERO\n054900        MOVE T-FORCE-BANK (I) TO WK-BANK\n055000        MOVE ZERO TO WK-BRANCH\n055100        GO TO 1250-WRITE-DETAIL.\n055200     IF T-BANK-LINE (I) EQUAL ZERO\n055300        MOVE T-FORCE-BANK (I) TO WK-BANK\n055400        MOVE ZERO TO WK-BRANCH\n055500        GO TO 1250-WRITE-DETAIL.\n055600     COMPUTE KEY-POS1 =\n055700      ((T-BANK-LINE (I) - 1) * 133) + T-BANK-POSITION (I).\n055800     MOVE DO-LINES (KEY-POS1:T-BANK-LENGTH (I)) TO WK-BANK.\n055900     IF (WK-BANK NOT NUMERIC)\n056000        MOVE ZERO TO WK-BANK\n056100        MOVE ZERO TO WK-BRANCH.\n056200     IF DEBUG-ON\n056300        DISPLAY '1230-BANK=' WK-BANK.\n056400\n056500 1240-PROCESS-BRANCH-NUMBER.\n056600     IF DEBUG-ON\n056700        DISPLAY '1240-PROCESS-BRANCH'.\n056800     IF T-BRANCH-LINE (I) EQUAL ZERO\n056900        MOVE ZERO TO WK-BRANCH\n057000        GO TO 1250-WRITE-DETAIL.\n057100     COMPUTE KEY-POS1 =\n057200      ((T-BRANCH-LINE (I) - 1) * 133) + T-BRANCH-POSITION (I).\n057300     MOVE DO-LINES (KEY-POS1:T-BRANCH-LENGTH (I)) TO WK-BRANCH.\n057400     IF WK-BRANCH NOT NUMERIC\n057500        MOVE ZERO TO WK-BRANCH.\n057600     IF DEBUG-ON\n057700        DISPLAY '1240-BRANCH=' WK-BRANCH.\n057800     IF WK-BRANCH EQUAL OLD-BRANCH\n057900        NEXT SENTENCE\n058000        ELSE MOVE +1 TO WK-PAGE-COUNT-BRCH.\n058100\n058200 1250-WRITE-DETAIL.\n058300     IF DEBUG-ON\n058400        DISPLAY '1250-WRITE-DETAIL'\n058500        DISPLAY 'DI-COUNT=' DI-COUNT.\n058600     MOVE WK-BANK TO OLD-BANK,\n058700     MOVE WK-BRANCH TO OLD-BRANCH.\n058800     COMPUTE DTL-LENGTH = (DI-COUNT * 133) + 20.\n058900     IF DEBUG-ON\n059000        DISPLAY 'DTL-LENGTH=' DTL-LENGTH.\n059100     MOVE T-REPORT-ID (I) TO D-REPORT-ID, DO-REPORT-ID.\n059200     MOVE REPORT-DATE TO D-REPORT-DATE, DO-REPORT-DATE.\n059300     MOVE WK-PAGE-COUNT TO D-SEQ, DO-PAGE-NUMBER.\n059400     MOVE DI-COUNT TO D-NUMBER-OF-LINES, DO-NUMBER-OF-LINES.\n059500     PERFORM 1251-COPY-DATA\n059600             VARYING N FROM 1 BY 1\n059700             UNTIL N > DI-COUNT.\n059800     IF DEBUG-ON\n059900        DISPLAY 'D-LRECL=' LENGTH OF D-RECORD.\n060000     ADD +1 TO D-COUNT.\n060100     WRITE D-RECORD INVALID KEY GO TO 9800-ERROR-WRITE-DETAIL.\n060200     GO TO 1265-UPDATE-INDEX-ARRAY.\n060300*    GO TO 1260-WRITE-INDEX-RECORD.\n060400\n060500 1251-COPY-DATA.\n060600     MOVE DO-LINE(N) TO D-LINES(N).\n060700     IF DEBUG-ON\n060800        DISPLAY 'D-LINES=' D-LINES(N)\n060900        DISPLAY '    N=  ' N.\n061000\n061100 1260-WRITE-INDEX-RECORD.\n061200     IF DEBUG-ON\n061300        DISPLAY '1260-WRITE-INDEX-RECORD'.\n061400     MOVE 'K' TO AO-TYPE.\n061500     MOVE T-REPORT-ID (I) TO AO-REPORT-ID.\n061600     MOVE SPACES TO AO-REPORT-SID.\n061700     MOVE REPORT-DATE TO AO-REPORT-DATE.\n061800     MOVE WK-BANK TO AO-BANK.\n061900     MOVE WK-BRANCH TO AO-BRANCH.\n062000     MOVE WK-PAGE-COUNT TO AO-DSEQ.\n062100     IF WK-BRANCH EQUAL ZERO\n062200        MOVE TX-TOTAL-PAGES (SAVE-II) TO AO-SEQ\n062300      ELSE\n062400        MOVE TZ-TOTAL-PAGES (SAVE-III) TO AO-SEQ.\n062500*    MOVE WK-PAGE-COUNT-BRCH TO AO-SEQ.\n062600*    MOVE WK-PAGE-COUNT TO AO-DSEQ, AO-SEQ.\n062700*    MOVE D-PAGE-NUMBER TO AO-SEQ.\n062800     MOVE IDX-LENGTH TO AO-KEY-LENGTH.\n062900     MOVE IDX-KEY1 TO AO-KEY-VALUE.\n063000     MOVE AO-INDEX-RECORD TO AI-INDEX-RECORD.\n063100     ADD +1 TO K-COUNT.\n063200     WRITE AI-INDEX-RECORD\n063300              INVALID KEY GO TO 9802-ERROR-INDEX-RECORD.\n063400     IF WK-BRANCH EQUAL ZERO\n063500       GO TO 1262-WRITE-EXIT.\n063600     MOVE ZERO TO AO-BRANCH.\n063700     MOVE TX-TOTAL-PAGES (SAVE-II) TO AO-SEQ.\n063800     MOVE AO-INDEX-RECORD TO AI-INDEX-RECORD.\n063900     ADD +1 TO K-COUNT.\n064000     WRITE AI-INDEX-RECORD\n064100              INVALID KEY GO TO 9802-ERROR-INDEX-RECORD.\n064200\n064300 1262-WRITE-EXIT. EXIT.\n064400\n064500 1265-UPDATE-INDEX-ARRAY.\n064600     IF DEBUG-ON\n064700        DISPLAY '1265-UPDATE-INDEX-ARRAY'.\n064800     MOVE 'N' TO GET-OUT-X.\n064900     PERFORM 1266-UPDATE-ENTRY THRU\n065000             1269-UPDATE-EXIT\n065100             VARYING II FROM 1 BY 1\n065200        UNTIL GET-OUT.\n065300     MOVE 'N' TO GET-OUT-X.\n065400     PERFORM 1270-UPDATE-ENTRY THRU\n065500                1275-UPDATE-EXIT\n065600               VARYING II FROM 1 BY 1\n065700             UNTIL GET-OUT.\n065800     PERFORM 1260-WRITE-INDEX-RECORD THRU\n065900             1262-WRITE-EXIT.\n066000     GO TO 1279-EXIT.\n066100\n066200 1266-UPDATE-ENTRY.\n066300     IF DEBUG-ON\n066400        DISPLAY '1266-UPDATE-ENTRY-II=' II\n066500        DISPLAY '1266-UPDATE-ENTRY-I=' I.\n066600     IF II EQUAL CHECK-II\n066700        GO TO 9903-TITLE-INDEX-ARRAY-ERROR.\n066800     IF (TX-REPORT-ID (II) EQUAL SPACES) AND\n066900           (TX-REPORT-SID (II) EQUAL SPACES) AND\n067000*  FIX MORE THAN ONE DATE FOR SAME REPORT ID\n067100              (TX-REPORT-DATE (II) EQUAL ZERO) AND\n067200                 (TX-BANK (II) EQUAL ZERO) AND\n067300                    (TX-BRANCH (II) EQUAL ZERO)\n067400                      PERFORM 1267-ADD-ENTRY\n067500                      MOVE II TO SAVE-II\n067600                      GO TO 1269-UPDATE-EXIT\n067700     END-IF.\n067800     IF (TX-REPORT-ID (II) EQUAL R-REPORT-ID (I)) AND\n067900          (TX-REPORT-SID (II) EQUAL SPACES) AND\n068000*  FIX DUPLICATE DATE ON SAME REPORT ID\n068100             (TX-REPORT-DATE (II) EQUAL REPORT-DATE) AND\n068200                (TX-BANK (II) EQUAL WK-BANK) AND\n068300                   (TX-BRANCH(II) EQUAL ZERO)\n068400                      ADD +1 TO TX-TOTAL-PAGES (II)\n068500                    ADD DO-NUMBER-OF-LINES TO TX-TOTAL-LINES (II)\n068600                      MOVE II TO SAVE-II\n068700                      MOVE 'Y' TO GET-OUT-X\n068800                     IF DEBUG-ON\n068900                      DISPLAY '1266-UPDATE-ENTRY-HIT=' II\n069000                     END-IF\n069100     END-IF.\n069200     IF DEBUG-ON\n069300        DISPLAY 'TX-REPORT-ID=' TX-REPORT-ID (II)\n069400        DISPLAY 'TX-REPORT-SID=' TX-REPORT-SID (II)\n069500        DISPLAY 'TX-REPORT-DATE=' TX-REPORT-DATE (II)\n069600        DISPLAY 'TX-BANK=' TX-BANK (II)\n069700        DISPLAY 'TX-BRANCH=' TX-BRANCH (II)\n069800     END-IF.\n069900     GO TO 1269-UPDATE-EXIT.\n070000\n070100 1267-ADD-ENTRY.\n070200     IF DEBUG-ON\n070300        DISPLAY '1267-ADD-ENTRY=' II.\n070400     MOVE WK-BANK TO TX-BANK (II).\n070500     MOVE ZERO TO TX-BRANCH (II).\n070600     MOVE T-REPORT-ID (I) TO TX-REPORT-ID (II).\n070700     MOVE SPACES TO TX-REPORT-SID (II).\n070800     MOVE REPORT-DATE TO TX-REPORT-DATE (II).\n070900     MOVE T-NAME (I) TO TX-TITLE-NAME (II).\n071000     MOVE +1 TO TX-TOTAL-PAGES (II).\n071100     MOVE DO-NUMBER-OF-LINES TO TX-TOTAL-LINES (II).\n071200     MOVE T-REPORT-FILE (I) TO TX-REPORT-FILE (II),\n071300      SAVE-FILE-NAME.\n071400     MOVE 'Y' TO GET-OUT-X.\n071500\n071600 1269-UPDATE-EXIT. EXIT.\n071700\n071800 1270-UPDATE-ENTRY.\n071900     IF DEBUG-ON\n072000        DISPLAY '1270-UPDATE-ENTRY=' II.\n072100     IF II EQUAL CHECK-II\n072200        GO TO 9903-TITLE-INDEX-ARRAY-ERROR.\n072300     IF (TZ-REPORT-ID (II) EQUAL SPACES) AND\n072400           (TZ-REPORT-SID (II) EQUAL SPACES) AND\n072500              (TZ-REPORT-DATE (II) EQUAL ZERO) AND\n072600                 (TZ-BANK (II) EQUAL ZERO) AND\n072700                    (TZ-BRANCH (II) EQUAL ZERO)\n072800                      PERFORM 1274-ADD-ZERO\n072900                      MOVE II TO SAVE-III\n073000                      GO TO 1275-UPDATE-EXIT\n073100     END-IF.\n073200     IF (TZ-REPORT-ID (II) EQUAL R-REPORT-ID (I)) AND\n073300          (TZ-REPORT-SID (II) EQUAL SPACES)  AND\n073400             (TZ-REPORT-DATE (II) EQUAL REPORT-DATE) AND\n073500                (TZ-BANK (II) EQUAL WK-BANK) AND\n073600                    (TZ-BRANCH (II) EQUAL WK-BRANCH)\n073700                      ADD +1 TO TZ-TOTAL-PAGES (II)\n073800                    ADD DO-NUMBER-OF-LINES TO TZ-TOTAL-LINES (II)\n073900                      MOVE II TO SAVE-III\n074000                      MOVE 'Y' TO GET-OUT-X\n074100                     IF DEBUG-ON\n074200                      DISPLAY '1270-UPDATE-ENTRY HIT=' II\n074300                     END-IF\n074400     END-IF.\n074500     IF DEBUG-ON\n074600        DISPLAY 'TZ-REPORT-ID=' TZ-REPORT-ID (II)\n074700        DISPLAY 'TZ-REPORT-SID=' TZ-REPORT-SID (II)\n074800        DISPLAY 'TZ-REPORT-DATE=' TZ-REPORT-DATE (II)\n074900        DISPLAY 'TZ-BANK=' TZ-BANK (II)\n075000        DISPLAY 'TZ-BRANCH=' TZ-BRANCH (II).\n075100     GO TO 1275-UPDATE-EXIT.\n075200\n075300 1274-ADD-ZERO.\n075400     IF DEBUG-ON\n075500        DISPLAY '1274-ADD-ZERO=' II.\n075600     MOVE WK-BANK TO TZ-BANK (II).\n075700     MOVE WK-BRANCH TO TZ-BRANCH (II).\n075800     MOVE T-REPORT-ID (I) TO TZ-REPORT-ID (II).\n075900     MOVE SPACES TO TZ-REPORT-SID (II).\n076000     MOVE REPORT-DATE TO TZ-REPORT-DATE (II).\n076100     MOVE T-NAME (I) TO TZ-TITLE-NAME (II).\n076200     MOVE +1 TO TZ-TOTAL-PAGES (II).\n076300     MOVE DO-NUMBER-OF-LINES TO TZ-TOTAL-LINES (II).\n076400     MOVE T-REPORT-FILE (I) TO TZ-REPORT-FILE (II),\n076500      SAVE-FILE-NAME.\n076600     MOVE 'Y' TO GET-OUT-X.\n076700     IF DEBUG-ON\n076800        DISPLAY 'TZ-REPORT-ID=' TZ-REPORT-ID (II)\n076900        DISPLAY 'TZ-REPORT-SID=' TZ-REPORT-SID (II)\n077000        DISPLAY 'TZ-REPORT-DATE=' TZ-REPORT-DATE (II)\n077100        DISPLAY 'TZ-BANK=' TZ-BANK (II)\n077200        DISPLAY 'TZ-BRANCH=' TZ-BRANCH (II).\n077300\n077400 1275-UPDATE-EXIT.  EXIT.\n077500\n077600 1279-EXIT.  EXIT.\n077700\n077800 1450-START-NEW-PAGE.\n077900     MOVE SPACES TO DO-REPORT-ID, DO-LINES.\n078000     MOVE ZEROS TO DO-REPORT-DATE, DO-PAGE-NUMBER.\n078100     MOVE ZEROS TO DO-NUMBER-OF-LINES.\n078200     MOVE ZERO TO DI-COUNT.\n078300\n078400 1499-PROCESS-EXIT.  EXIT.\n078500\n078600 2200-PROCESS-SYSOUT.\n078700     IF DEBUG-ON\n078800        DISPLAY '2200-PROCESS-SYSOUT'.\n078900     MOVE 'N' TO GOT-LINE1, GOT-LINE2, GOT-LINE3.\n079000     PERFORM 2401-PROCESS-SYSOUT THRU 2479-EXIT\n079100            VARYING I FROM 1 BY 1\n079200            UNTIL I GREATER THAN TI.\n079300\n079400 2401-PROCESS-SYSOUT.\n079500     IF DEBUG-ON\n079600        DISPLAY '2401-PROCESS-SYSOUT ' I.\n079700     IF R-TYPE (I) EQUAL 'T'\n079800        GO TO 2479-EXIT.\n079900     IF R-TID-LINE-1 (I) EQUAL ZERO\n080000        GO TO 2403-PROCESS-NEXT.\n080100     COMPUTE TITLE-POS1 =\n080200      ((R-TID-LINE-1 (I) - 1) * 133) + R-TID-POSITION-1 (I).\n080300     IF DEBUG-ON\n080400        DISPLAY 'TITLE-POS1=' TITLE-POS1.\n080500     MOVE DO-LINES (TITLE-POS1 :R-TID-LENGTH-1 (I)) TO WORK-TEST.\n080600     IF DEBUG-ON\n080700        DISPLAY 'DLINE=' WORK-TEST\n080800        DISPLAY 'RID  =' R-TID-DATA-1 (I).\n080900     IF DO-LINES (TITLE-POS1 :R-TID-LENGTH-1 (I)) EQUAL\n081000         R-TID-DATA-1 (I)\n081100        MOVE 'Y' TO GOT-LINE1\n081200        GO TO 2403-PROCESS-NEXT\n081300      ELSE\n081400        GO TO 2479-EXIT.\n081500\n081600 2403-PROCESS-NEXT.\n081700     IF DEBUG-ON\n081800        DISPLAY '2403-PROCESS-NEXT '  I.\n081900     IF R-TID-LINE-2 (I) EQUAL ZERO\n082000        GO TO 2405-PROCESS-NEXT.\n082100     COMPUTE TITLE-POS2 =\n082200      ((R-TID-LINE-2 (I) - 1) * 133) + R-TID-POSITION-2 (I).\n082300     IF DO-LINES (TITLE-POS2 :R-TID-LENGTH-2 (I)) EQUAL\n082400         R-TID-DATA-2 (I)\n082500        MOVE 'Y' TO GOT-LINE2\n082600        GO TO 2405-PROCESS-NEXT\n082700      ELSE\n082800        GO TO 2479-EXIT.\n082900\n083000 2405-PROCESS-NEXT.\n083100     IF DEBUG-ON\n083200        DISPLAY '2405-PROCESS-NEXT ' I.\n083300     IF R-TID-LINE-3 (I) EQUAL ZERO\n083400        GO TO 2420-BUILD-KEY.\n083500     COMPUTE TITLE-POS2 =\n083600      ((R-TID-LINE-3 (I) - 1) * 133) + R-TID-POSITION-3 (I).\n083700      IF DO-LINES (TITLE-POS3:R-TID-LENGTH-3 (I)) EQUAL\n083800         R-TID-DATA-3 (I)\n083900        MOVE 'Y' TO GOT-LINE3\n084000        GO TO 2420-BUILD-KEY\n084100      ELSE\n084200        GO TO 2479-EXIT.\n084300\n084400 2420-BUILD-KEY.\n084500     IF DEBUG-ON\n084600        DISPLAY '2420-BUILD-KEY '    I.\n084700     MOVE SPACES TO IDX-KEY1, IDX-KEY2, IDX-KEY3.\n084800     IF R-KY1-LINE (I) EQUAL ZERO\n084900        GO TO 2450-UPDATE-INDEX-ARRAY.\n085000     COMPUTE KEY-POS1 =\n085100      ((R-KY1-LINE (I) - 1) * 133) + R-KY1-POSITION (I).\n085200*    MOVE DO-LINES (KEY-POS1:R-KY1-LENGTH (I)) TO IDX-KEY1.\n085300     MOVE DO-LINES (KEY-POS1:R-KY1-LENGTH (I))\n085400                 TO IDX-KEY1 (1 : R-KY1-LENGTH (I)).\n085500     IF DEBUG-ON\n085600        DISPLAY 'KEY1=' IDX-KEY1.\n085700     MOVE R-KY1-LENGTH (I) TO IDX-LENGTH.\n085800     IF R-KY2-LINE (I) EQUAL ZERO\n085900        GO TO 2450-UPDATE-INDEX-ARRAY.\n086000     COMPUTE KEY-POS2 =\n086100      ((R-KY2-LINE (I) - 1) * 133) + R-KY2-POSITION (I).\n086200     ADD R-KY2-LENGTH (I) TO IDX-LENGTH.\n086300*    MOVE DO-LINES (KEY-POS2:R-KY2-LENGTH (I)) TO IDX-KEY2.\n086400     MOVE DO-LINES (KEY-POS2:R-KY2-LENGTH (I))\n086500                 TO IDX-KEY1 (IDX-LENGTH : R-KY2-LENGTH (I)).\n086600     IF DEBUG-ON\n086700        DISPLAY 'KEY2=' IDX-KEY1.\n086800     IF R-KY3-LINE (I) EQUAL ZERO\n086900        GO TO 2450-UPDATE-INDEX-ARRAY.\n087000     COMPUTE KEY-POS3 =\n087100      ((R-KY3-LINE (I) - 1) * 133) + R-KY3-POSITION (I).\n087200     ADD R-KY3-LENGTH (I) TO IDX-LENGTH.\n087300*    MOVE DO-LINES (KEY-POS3:R-KY3-LENGTH (I)) TO IDX-KEY3.\n087400     MOVE DO-LINES (KEY-POS3:R-KY3-LENGTH (I))\n087500                 TO IDX-KEY1 (IDX-LENGTH : R-KY3-LENGTH (I)).\n087600     IF DEBUG-ON\n087700        DISPLAY 'KEY3=' IDX-KEY1.\n087800\n087900 2450-UPDATE-INDEX-ARRAY.\n088000     IF DEBUG-ON\n088100        DISPLAY '2450-UPDATE-INDEX-ARRAY'.\n088200     MOVE 'N' TO GET-OUT-X.\n088300     PERFORM 2452-UPDATE-ENTRY THRU\n088400             2459-UPDATE-EXIT\n088500             VARYING II FROM 1 BY 1\n088600        UNTIL GET-OUT.\n088700     MOVE 'N' TO GET-OUT-X.\n088800     PERFORM 2552-UPDATE-ENTRY THRU\n088900             2559-UPDATE-EXIT\n089000             VARYING II FROM 1 BY 1\n089100        UNTIL GET-OUT.\n089200     GO TO 2660-WRITE-INDEX-RECORD.\n089300\n089400 2452-UPDATE-ENTRY.\n089500     IF DEBUG-ON\n089600        DISPLAY '2452-UPDATE-ENTRY=' II.\n089700     IF II EQUAL CHECK-II\n089800        GO TO 9903-TITLE-INDEX-ARRAY-ERROR.\n089900     IF (TX-REPORT-ID (II) EQUAL SPACES) AND\n090000           (TX-REPORT-SID (II) EQUAL SPACES) AND\n090100*  FIX DUPLICATE DATE ON SAME REPORT ID\n090200              (TX-REPORT-DATE (II) EQUAL ZERO) AND\n090300                 (TX-BANK (II) EQUAL ZERO) AND\n090400                    (TX-BRANCH (II) EQUAL ZERO)\n090500                       PERFORM 2453-ADD-ENTRY\n090600                       MOVE II TO SAVEZ-III\n090700                       GO TO 2459-UPDATE-EXIT\n090800     END-IF.\n090900     IF (TX-REPORT-ID (II) EQUAL R-REPORT-ID (I)) AND\n091000          (TX-REPORT-SID (II) EQUAL R-REPORT-SID (I)) AND\n091100*  FIX DUPLICATE DATE ON SAME REPORT ID\n091200             (TX-REPORT-DATE (II) EQUAL REPORT-DATE) AND\n091300                (TX-BANK (II) EQUAL WK-BANK) AND\n091400                   (TX-BRANCH(II) EQUAL ZERO)\n091500                      ADD +1 TO TX-TOTAL-PAGES (II)\n091600                    ADD DO-NUMBER-OF-LINES TO TX-TOTAL-LINES (II)\n091700                      MOVE II TO SAVEZ-III\n091800                      MOVE 'Y' TO GET-OUT-X\n091900                    IF DEBUG-ON\n092000                      DISPLAY '2452-UPDATE-ENTRY-HIT=' II\n092100                     END-IF\n092200     END-IF.\n092300     IF DEBUG-ON\n092400        DISPLAY 'TX-REPORT-ID=' TX-REPORT-ID (II)\n092500        DISPLAY 'TX-REPORT-SID=' TX-REPORT-SID (II)\n092600        DISPLAY 'TX-REPORT-DATE=' TX-REPORT-DATE (II)\n092700        DISPLAY 'TX-BANK=' TX-BANK (II)\n092800        DISPLAY 'TX-BRANCH=' TX-BRANCH (II).\n092900     GO TO 2459-UPDATE-EXIT.\n093000\n093100 2453-ADD-ENTRY.\n093200     IF DEBUG-ON\n093300        DISPLAY '2453-ADD-ENTRY=' II.\n093400     MOVE WK-BANK TO TX-BANK (II).\n093500     MOVE ZERO TO TX-BRANCH (II).\n093600     MOVE R-REPORT-ID (I) TO TX-REPORT-ID (II).\n093700     MOVE R-REPORT-SID (I) TO TX-REPORT-SID (II).\n093800     MOVE R-NAME (I) TO TX-TITLE-NAME (II).\n093900     MOVE REPORT-DATE TO TX-REPORT-DATE (II).\n094000     MOVE SAVE-FILE-NAME TO TX-REPORT-FILE (II).\n094100     MOVE +1 TO TX-TOTAL-PAGES (II).\n094200     MOVE II TO SAVEZ-III.\n094300     MOVE DO-NUMBER-OF-LINES TO TX-TOTAL-LINES (II).\n094400     MOVE 'Y' TO GET-OUT-X.\n094500     IF DEBUG-ON\n094600        DISPLAY 'TX-REPORT-ID=' TX-REPORT-ID (II)\n094700        DISPLAY 'TX-REPORT-SID=' TX-REPORT-SID (II)\n094800        DISPLAY 'TX-REPORT-DATE=' TX-REPORT-DATE (II)\n094900        DISPLAY 'TX-BANK=' TX-BANK (II)\n095000        DISPLAY 'TX-BRANCH=' TX-BRANCH (II).\n095100     GO TO 2459-UPDATE-EXIT.\n095200\n095300 2459-UPDATE-EXIT. EXIT.\n095400\n095500\n095600 2552-UPDATE-ENTRY.\n095700     IF DEBUG-ON\n095800        DISPLAY '2552-UPDATE-ENTRY=' II.\n095900     IF II EQUAL CHECK-II\n096000        GO TO 9903-TITLE-INDEX-ARRAY-ERROR.\n096100     IF (TZ-REPORT-ID (II) EQUAL SPACES) AND\n096200           (TZ-REPORT-SID (II) EQUAL SPACES) AND\n096300              (TZ-REPORT-DATE (II) EQUAL ZERO) AND\n096400                 (TZ-BANK (II) EQUAL ZERO) AND\n096500                    (TZ-BRANCH (II) EQUAL ZERO)\n096600                       PERFORM 2553-ADD-ENTRY\n096700                       MOVE II TO SAVEZ-II\n096800                       GO TO 2559-UPDATE-EXIT\n096900     END-IF.\n097000     IF (TZ-REPORT-ID (II) EQUAL R-REPORT-ID (I)) AND\n097100          (TZ-REPORT-SID (II) EQUAL R-REPORT-SID (I)) AND\n097200             (TZ-REPORT-DATE (II) EQUAL REPORT-DATE) AND\n097300                (TZ-BANK (II) EQUAL WK-BANK) AND\n097400                   (TZ-BRANCH (II) EQUAL WK-BRANCH)\n097500                      ADD +1 TO TZ-TOTAL-PAGES (II)\n097600                    ADD DO-NUMBER-OF-LINES TO TZ-TOTAL-LINES (II)\n097700                      MOVE II TO SAVEZ-II\n097800                      MOVE 'Y' TO GET-OUT-X\n097900                    IF DEBUG-ON\n098000                      DISPLAY '2552-UPDATE-ENTRY-HIT=' II\n098100                     END-IF\n098200     END-IF.\n098300     IF DEBUG-ON\n098400        DISPLAY 'TZ-REPORT-ID=' TZ-REPORT-ID (II)\n098500        DISPLAY 'TZ-REPORT-SID=' TZ-REPORT-SID (II)\n098600        DISPLAY 'TZ-REPORT-DATE=' TZ-REPORT-DATE (II)\n098700        DISPLAY 'TZ-BANK=' TZ-BANK (II)\n098800        DISPLAY 'TZ-BRANCH=' TZ-BRANCH (II).\n098900     GO TO 2559-UPDATE-EXIT.\n099000\n099100 2553-ADD-ENTRY.\n099200     IF DEBUG-ON\n099300        DISPLAY '2553-ADD-ENTRY=' II.\n099400     MOVE WK-BANK TO TZ-BANK (II).\n099500     MOVE WK-BRANCH TO TZ-BRANCH (II).\n099600     MOVE R-REPORT-ID (I) TO TZ-REPORT-ID (II).\n099700     MOVE R-REPORT-SID (I) TO TZ-REPORT-SID (II).\n099800     MOVE REPORT-DATE TO TZ-REPORT-DATE (II).\n099900     MOVE SAVE-FILE-NAME TO TZ-REPORT-FILE (II).\n100000     MOVE +1 TO TZ-TOTAL-PAGES (II).\n100100     MOVE II TO SAVEZ-II.\n100200     MOVE DO-NUMBER-OF-LINES TO TZ-TOTAL-LINES (II).\n100300     MOVE 'Y' TO GET-OUT-X.\n100400     IF DEBUG-ON\n100500        DISPLAY 'TZ-REPORT-ID=' TZ-REPORT-ID (II)\n100600        DISPLAY 'TZ-REPORT-SID=' TZ-REPORT-SID (II)\n100700        DISPLAY 'TZ-REPORT-DATE=' TZ-REPORT-DATE (II)\n100800        DISPLAY 'TZ-BANK=' TZ-BANK (II)\n100900        DISPLAY 'TZ-BRANCH=' TZ-BRANCH (II).\n101000\n101100 2559-UPDATE-EXIT. EXIT.\n101200\n101300 2660-WRITE-INDEX-RECORD.\n101400     IF DEBUG-ON\n101500        DISPLAY '2660-WRITE-INDEX-RECORD'\n101600        DISPLAY 'II=' SAVE-II.\n101700     MOVE 'K' TO AO-TYPE.\n101800     MOVE R-REPORT-ID (I) TO AO-REPORT-ID.\n101900     MOVE R-REPORT-SID (I) TO AO-REPORT-SID.\n102000     MOVE REPORT-DATE TO AO-REPORT-DATE.\n102100     MOVE WK-BANK TO AO-BANK.\n102200     MOVE WK-BRANCH TO AO-BRANCH.\n102300     IF WK-BRANCH EQUAL ZERO\n102400        MOVE TX-TOTAL-PAGES (SAVEZ-III) TO AO-SEQ\n102500      ELSE\n102600        MOVE TZ-TOTAL-PAGES (SAVEZ-II) TO AO-SEQ.\n102700     MOVE DO-PAGE-NUMBER TO AO-DSEQ.\n102800     MOVE IDX-LENGTH TO AO-KEY-LENGTH.\n102900     MOVE IDX-KEY1 TO AO-KEY-VALUE.\n103000     MOVE AO-INDEX-RECORD TO AI-INDEX-RECORD.\n103100     ADD +1 TO K-COUNT.\n103200     WRITE AI-INDEX-RECORD INVALID KEY\n103300              GO TO 9802-ERROR-INDEX-RECORD.\n103400     IF WK-BRANCH EQUAL ZERO\n103500        GO TO 2479-EXIT.\n103600     MOVE ZERO TO AO-BRANCH.\n103700     MOVE TX-TOTAL-PAGES (SAVEZ-III) TO AO-SEQ.\n103800     MOVE AO-INDEX-RECORD TO AI-INDEX-RECORD.\n103900     ADD +1 TO K-COUNT.\n104000     WRITE AI-INDEX-RECORD INVALID KEY\n104100              GO TO 9802-ERROR-INDEX-RECORD.\n104200\n104300 2479-EXIT.  EXIT.\n104400\n104500 2980-NO-MORE-SYSOUT.\n104600     IF DEBUG-ON\n104700        DISPLAY '2980-NO-MORE-SYSOUT'.\n104800     MOVE 'Y' TO EOF-STATUS.\n104900     PERFORM 1200-PROCESS-SYSOUT THRU 1499-PROCESS-EXIT.\n105000     PERFORM 2200-PROCESS-SYSOUT.\n105100\n105200 2999-EXIT.  EXIT.\n105300\n105400 3000-CREATE-TITLE-RECORDS.\n105500     MOVE 'N' TO GET-OUT-X.\n105600     OPEN OUTPUT ADD-HISTORY-FILE\n105700                 REPORT-LIST-FILE.\n105800     PERFORM 3600-WRITE-TITLE-DATA THRU\n105900             3699-BUILD-EXIT\n106000             VARYING I FROM 1 BY 1\n106100        UNTIL GET-OUT.\n106200     MOVE 'N' TO GET-OUT-X.\n106300     PERFORM 3700-WRITE-TITLE-DATA THRU\n106400             3799-BUILD-EXIT\n106500             VARYING I FROM 1 BY 1\n106600        UNTIL GET-OUT.\n106700     MOVE ALL '-' TO ADD-INDEX-H-RECORD.\n106800     WRITE ADD-INDEX-H-RECORD\n106900              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n107000     MOVE K-COUNT TO K-PRT-COUNT.\n107100     MOVE K-PRT TO ADD-INDEX-H-RECORD.\n107200     WRITE ADD-INDEX-H-RECORD\n107300              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n107400     MOVE D-COUNT TO D-PRT-COUNT.\n107500     MOVE D-PRT TO ADD-INDEX-H-RECORD.\n107600     WRITE ADD-INDEX-H-RECORD\n107700              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n107800     MOVE T-COUNT TO T-PRT-COUNT.\n107900     MOVE T-PRT TO ADD-INDEX-H-RECORD.\n108000     WRITE ADD-INDEX-H-RECORD\n108100              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n108200     MOVE ALL '-' TO ADD-INDEX-H-RECORD.\n108300     WRITE ADD-INDEX-H-RECORD\n108400              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n108500     CLOSE ADD-HISTORY-FILE\n108600           REPORT-LIST-FILE.\n108700     GO TO 3999-EXIT.\n108800\n108900 3600-WRITE-TITLE-DATA.\n109000     IF DEBUG-ON\n109100        DISPLAY '3600-WRITE-TITLE-DATA'.\n109200     IF (TX-REPORT-ID (I) EQUAL SPACES) AND\n109300           (TX-REPORT-SID (I) EQUAL SPACES) AND\n109400              (TX-BANK (I) EQUAL ZERO) AND\n109500               (TX-BRANCH (I) EQUAL ZERO) AND\n109600                 (TX-REPORT-DATE (I) EQUAL ZERO)\n109700                 MOVE 'Y' TO GET-OUT-X\n109800                 GO TO 3699-BUILD-EXIT\n109900     END-IF.\n110000     IF DEBUG-ON\n110100        DISPLAY ' TX-REPORT-ID=' TX-REPORT-ID (I)\n110200        DISPLAY ' TX-REPORT-SID=' TX-REPORT-SID (I)\n110300        DISPLAY ' TX-BANK=' TX-BANK (I)\n110400        DISPLAY ' TX-BRANCH=' TX-BRANCH (I)\n110500        DISPLAY ' TX-REPORT-DATE=' TX-REPORT-DATE (I).\n110600     IF TX-BRANCH (I) EQUAL ZERO\n110700        NEXT SENTENCE\n110800       ELSE\n110900        GO TO 3699-BUILD-EXIT.\n111000     MOVE SPACES TO AT-HISTORY-RECORD.\n111100     MOVE 'T' TO AT-TYPE.\n111200     MOVE TX-BANK (I) TO AT-BANK.\n111300     MOVE TX-BRANCH (I) TO AT-BRANCH.\n111400     MOVE TX-REPORT-ID (I) TO AT-REPORT-ID.\n111500     MOVE TX-REPORT-SID (I) TO AT-REPORT-SID.\n111600     MOVE TX-REPORT-DATE (I) TO AT-REPORT-DATE.\n111700     MOVE TX-TITLE-NAME (I) TO AT-TITLE-NAME.\n111800     MOVE TX-TOTAL-PAGES (I) TO AT-PAGES.\n111900     MOVE TX-TOTAL-LINES (I) TO AT-LINES.\n112000     MOVE TX-REPORT-FILE (I) TO AT-REPORT-FILE.\n112100     ADD +1 TO T-COUNT.\n112200     WRITE AT-HISTORY-RECORD\n112300              INVALID KEY GO TO 9803-ERROR-TINDEX-RECORD.\n112400*    IF TX-REPORT-SID (I) NOT EQUAL SPACES\n112500*                GO TO 3699-BUILD-EXIT\n112600*    END-IF.\n112700     INITIALIZE ADD-INDEX-H-RECORD.\n112800     MOVE TX-REPORT-ID (I) TO HS-REPORT-ID.\n112900     MOVE TX-REPORT-SID (I) TO HS-REPORT-SID.\n113000     MOVE TX-REPORT-DATE (I) TO HS-REPORT-DATE.\n113100     MOVE TX-TITLE-NAME (I) TO HS-TITLE-NAME.\n113200     MOVE TX-TOTAL-PAGES (I) TO HS-PAGES.\n113300     MOVE TX-TOTAL-LINES (I) TO HS-LINES.\n113400     MOVE 'O' TO HS-STATUS.\n113500     MOVE TX-REPORT-FILE (I) TO HS-REPORT-FILE.\n113600     WRITE ADD-INDEX-H-RECORD\n113700              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n113800\n113900 3699-BUILD-EXIT.  EXIT.\n114000\n114100 3700-WRITE-TITLE-DATA.\n114200     IF DEBUG-ON\n114300        DISPLAY '3700-WRITE-TITLE-DATA'.\n114400     IF (TZ-REPORT-ID (I) EQUAL SPACES) AND\n114500           (TZ-REPORT-SID (I) EQUAL SPACES) AND\n114600              (TZ-BANK (I) EQUAL ZERO) AND\n114700                 (TZ-BRANCH (I) EQUAL ZERO) AND\n114800                   (TZ-REPORT-DATE (I) EQUAL ZERO)\n114900                 MOVE 'Y' TO GET-OUT-X\n115000                 GO TO 3799-BUILD-EXIT\n115100     END-IF.\n115200     IF DEBUG-ON\n115300        DISPLAY ' TZ-REPORT-ID=' TZ-REPORT-ID (I)\n115400        DISPLAY ' TZ-REPORT-SID=' TZ-REPORT-SID (I)\n115500        DISPLAY ' TZ-BANK=' TZ-BANK (I)\n115600        DISPLAY ' TZ-BRANCH=' TZ-BRANCH (I)\n115700        DISPLAY ' TZ-REPORT-DATE=' TZ-REPORT-DATE (I).\n115800     IF TZ-BRANCH (I) EQUAL ZERO\n115900        GO TO 3799-BUILD-EXIT.\n116000     MOVE SPACES TO AT-HISTORY-RECORD.\n116100     MOVE 'T' TO AT-TYPE.\n116200     MOVE TZ-BANK (I) TO AT-BANK.\n116300     MOVE TZ-BRANCH (I) TO AT-BRANCH.\n116400     MOVE TZ-REPORT-ID (I) TO AT-REPORT-ID.\n116500     MOVE TZ-REPORT-SID (I) TO AT-REPORT-SID.\n116600     MOVE TZ-REPORT-DATE (I) TO AT-REPORT-DATE.\n116700     MOVE TZ-TITLE-NAME (I) TO AT-TITLE-NAME.\n116800     MOVE TZ-TOTAL-PAGES (I) TO AT-PAGES.\n116900     MOVE TZ-TOTAL-LINES (I) TO AT-LINES.\n117000     MOVE TZ-REPORT-FILE (I) TO AT-REPORT-FILE.\n117100     ADD +1 TO T-COUNT.\n117200     WRITE AT-HISTORY-RECORD\n117300              INVALID KEY GO TO 9803-ERROR-TINDEX-RECORD.\n117400*    IF TZ-REPORT-SID (I) NOT EQUAL SPACES\n117500*                GO TO 3799-BUILD-EXIT\n117600*    END-IF.\n117700     INITIALIZE ADD-INDEX-H-RECORD.\n117800     MOVE TZ-REPORT-ID (I) TO HS-REPORT-ID.\n117900     MOVE TZ-REPORT-SID (I) TO HS-REPORT-SID.\n118000     MOVE TZ-REPORT-DATE (I) TO HS-REPORT-DATE.\n118100     MOVE TZ-TITLE-NAME (I) TO HS-TITLE-NAME.\n118200     MOVE TZ-TOTAL-PAGES (I) TO HS-PAGES.\n118300     MOVE TZ-TOTAL-LINES (I) TO HS-LINES.\n118400     MOVE 'O' TO HS-STATUS.\n118500     MOVE TZ-REPORT-FILE (I) TO HS-REPORT-FILE.\n118600     WRITE ADD-INDEX-H-RECORD\n118700              INVALID KEY GO TO 9804-ERROR-HISTORY-RECORD.\n118800\n118900 3799-BUILD-EXIT.  EXIT.\n119000\n119100 3999-EXIT.  EXIT.\n119200\n119300*********************************************************\n119400*     ERROR ROUTINES AND EOJ         ********************\n119500*********************************************************\n119600\n119700 9800-ERROR-WRITE-DETAIL.\n119800     DISPLAY '*** ERROR WRITING DETAIL RECORD **'.\n119900     MOVE 18 TO RETURN-CODE.\n120000     GO TO 9999-END-OF-PROGRAM.\n120100\n120200 9802-ERROR-INDEX-RECORD.\n120300     DISPLAY '*** ERROR WRITING INDEX RECORD ***'.\n120400     MOVE 16 TO RETURN-CODE.\n120500     GO TO 9999-END-OF-PROGRAM.\n120600\n120700 9803-ERROR-TINDEX-RECORD.\n120800     DISPLAY '*** ERROR WRITING TITLE INDEX RECORD ***'.\n120900     MOVE 26 TO RETURN-CODE.\n121000     GO TO 9999-END-OF-PROGRAM.\n121100\n121200 9804-ERROR-HISTORY-RECORD.\n121300     DISPLAY '*** ERROR WRITING HISTORY RECORD ***'.\n121400     MOVE 28 TO RETURN-CODE.\n121500     GO TO 9999-END-OF-PROGRAM.\n121600\n121700 9900-NO-INPUT-CARD.\n121800     DISPLAY '*** NO CONTROL CARD ***'.\n121900     MOVE 20 TO RETURN-CODE.\n122000     GO TO 9999-END-OF-PROGRAM.\n122100\n122200 9902-TITLE-ARRAY-ERROR.\n122300     DISPLAY '*** TITLE ARRAY IS FULL ***'.\n122400     DISPLAY '*** INCREASE ARRAY IN PROGRAM ***'.\n122500     MOVE 22 TO RETURN-CODE.\n122600     GO TO 9999-END-OF-PROGRAM.\n122700\n122800 9903-TITLE-INDEX-ARRAY-ERROR.\n122900     DISPLAY '*** TITLE INDEX ARRAY IS FULL ***'.\n123000     DISPLAY '*** INCREASE ARRAY IN PROGRAM ***'.\n123100     MOVE 24 TO RETURN-CODE.\n123200     GO TO 9999-END-OF-PROGRAM.\n123300\n123400 9999-END-OF-PROGRAM.\n123500     STOP RUN.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REPT020J": {"ttr": 10241, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00$\\x01 \\x13O\\x01 \\x14\\x7f\\x143\\x00*\\x00.\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2020-05-13T00:00:00", "modifydate": "2020-05-26T14:33:24", "lines": 42, "newlines": 46, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSR020J JOB CLASS=A,MSGCLASS=X,REGION=1M,\n//    NOTIFY=&SYSUID\n//****************************************************************\n//* THIS IS THE NORMAL JCL TO RUN IF YOU WANT TO USE THE         *\n//*   THE COBOL EXTRACT PROGRAM                                  *\n//****************************************************************\n//*   DELETE THE SEQUENTIAL FILES                                *\n//****************************************************************\n//DELETE   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n        DELETE OPT.PRINT.CICS.INDEX.SEQ PURGE\n        SET LASTCC=0\n        DELETE OPT.PRINT.CICS.DETAIL.SEQ PURGE\n        SET LASTCC=0\n        DELETE OPT.PRINT.CICS.HISTORY.SEQ PURGE\n        SET LASTCC=0\n//****************************************************************\n//*   EXTRACT THE SYSOUT DATA                                    *\n//****************************************************************\n//EXTRACT  EXEC PGM=REPT020,REGION=4M PARM='DEBUG'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//RPTIN    DD DSN=input jes2 sysout file\n//         DD DSN=input another jes2 sysout file\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//TITLE    DD DSN=OPT.CICS.REPORT.TITLE.FILE,DISP=SHR\n//IDXADD   DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=57,BLKSIZE=5700,RECFM=FB,BUFNO=10),\n//            SPACE=(CYL,(3,3),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//HSTADD   DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=100,BLKSIZE=23000,RECFM=FB,BUFNO=10),\n//            SPACE=(CYL,(3,3),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//DTLADD   DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=11728,BLKSIZE=23000,RECFM=VB,BUFNO=10),\n//            SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//REPTLST  DD SYSOUT=*\n//CNTLCRD DD *\nADPT\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REPT020X": {"ttr": 10243, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00$\\x01 \\x13o\\x01 \\x14\\x7f\\x141\\x00\\x8a\\x00\\x8a\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-26T14:31:24", "lines": 138, "newlines": 138, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT020X JOB (NAME),\n//            NOTIFY=&SYSUID,\n//            CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//*****************************************************************************\n//*  $$$$ YOU CAN USE THIS JOB IF YOU ARE USING THE REPT020 EXTRACT JOB $$$$  *\n//*****************************************************************************\n//* USE THIS JOB TO LOAD THE THREE MAIN CICS FILES FOR THE FIRST TIME         *\n//* AFTER USING THIS JOB YOU WILL NEED TO FOLLOW THE NORMAL BATCH JOB         *\n//* PROCESS                                                                   *\n//*   DON'T FORGET ABOUT THE \"REPORT FILE DD NAME\"                            *\n//*****************************************************************************\n//*   DELETE FILES CREATE BY THIS JOB                                         *\n//*****************************************************************************\n//DEFINE  EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     DELETE OPT.PRINT.CICS.SORTED.INDEX.SEQ  PURGE\n     DELETE OPT.PRINT.CICS.SORTED.HISTORY.SEQ PURGE\n     DELETE OPT.PRINT.CICS.SORTED.DETAIL.SEQ PURGE\n     DELETE    (OPT.CICS.REPORT.DETAIL.FILE)           -\n               CLUSTER PURGE\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.DETAIL.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(18,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.DETAIL.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(7334,11728)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.DETAIL.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n     DELETE    (OPT.CICS.REPORT.INDEX.FILE)            -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.INDEX.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.INDEX.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.INDEX.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n     DELETE    (OPT.CICS.REPORT.HISTORY.FILE)            -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.REPORT.HISTORY.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               CYL(5 5)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.REPORT.HISTORY.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.REPORT.HISTORY.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n//****************************************************************\n//*   SORT THE INDEX RECORDS                                     *\n//****************************************************************\n//STEPIDX  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=51,BLKSIZE=20400,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE HISTORY RECORDS                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=100,BLKSIZE=23000,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE DETAIL RECORD                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=11728,BLKSIZE=23000,RECFM=VB,BUFNO=10),\n//            SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//SYSIN    DD *\n  RECORD TYPE=V\n  SORT FIELDS=(5,18,A),FORMAT=BI\n/*\n//****************************************************************\n//*   LOAD THE SORTED FILES INTO THEIR RESPECTIVE VSAM FILE      *\n//****************************************************************\n//REPRO   EXEC PGM=IDCAMS,COND=(8,LT)\n//IN1      DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=SHR\n//OUT1     DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//IN2      DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,DISP=SHR\n//OUT2     DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//IN3      DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,DISP=SHR\n//OUT3     DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1) OUTFILE(OUT1)\n     REPRO  INFILE(IN2) OUTFILE(OUT2)\n     REPRO  INFILE(IN3) OUTFILE(OUT3)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT020Y": {"ttr": 10246, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01 \\x14o\\x01 \\x14\\x7f\\x143\\x00[\\x00[\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-05-25T00:00:00", "modifydate": "2020-05-26T14:33:44", "lines": 91, "newlines": 91, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT020Y JOB (NAME),\n//            NOTIFY=&SYSUID,\n//            CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//*****************************************************************************\n//*  $$$$ YOU CAN USE THIS JOB IF YOU ARE USING THE REPT020 EXTRACT JOB $$$$  *\n//*****************************************************************************\n//* USE THIS JOB TO ADD RECORDS TO THE THREE MAIN CICS FILES\n//* AFTER YOU HAVE RUN REPT020X.\n//* THE ONLY REAL ISSUE WITH RUNNING THINGS THIS WAY IS YOUR VSAM FILES\n//* CAN GET FRAGMENTED PRETTY BADLY.\n//*   DON'T FORGET ABOUT THE \"REPORT FILE DD NAME\"\n//*****************************************************************************\n//*   DELETE FILES CREATE BY THIS JOB                                         *\n//*****************************************************************************\n//DEFINE  EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     DELETE OPT.PRINT.CICS.SORTED.INDEX.SEQ  PURGE\n     DELETE OPT.PRINT.CICS.SORTED.HISTORY.SEQ PURGE\n     DELETE OPT.PRINT.CICS.SORTED.DETAIL.SEQ PURGE\n//****************************************************************\n//*   SORT THE INDEX RECORDS                                     *\n//****************************************************************\n//STEPIDX  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.INDEX.CIC,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=51,BLKSIZE=20400,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE HISTORY RECORDS                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.HISTORY.CIC,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,\n//         DISP=(NEW,CATLG,DELETE),\n//         DCB=(LRECL=100,BLKSIZE=23000,RECFM=FB),\n//         SPACE=(CYL,(10,10),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE DETAIL RECORD                                     *\n//****************************************************************\n//STEPHST  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.CICS.DETAIL.CIC,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=(,CATLG,CATLG),\n//            DCB=(LRECL=11728,BLKSIZE=23000,RECFM=VB,BUFNO=10),\n//            SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA,VOL=SER=XXXXXX\n//SYSIN    DD *\n  RECORD TYPE=V\n  SORT FIELDS=(5,18,A),FORMAT=BI\n/*\n//****************************************************************\n//*   LOAD THE SORTED FILES INTO THEIR RESPECTIVE VSAM FILE      *\n//****************************************************************\n//REPRO   EXEC PGM=IDCAMS,COND=(8,LT)\n//IN1      DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=SHR\n//OUT1     DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//IN2      DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,DISP=SHR\n//OUT2     DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//IN3      DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,DISP=SHR\n//OUT3     DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1) OUTFILE(OUT1)\n     REPRO  INFILE(IN2) OUTFILE(OUT2)\n     REPRO  INFILE(IN3) OUTFILE(OUT3)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT025": {"ttr": 10249, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x003\\x01 \\x13\\x7f\\x01 \\x14\\x8f\\x14\\x03\\x01=\\x00\\xe7\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "2020-05-16T00:00:00", "modifydate": "2020-05-27T14:03:33", "lines": 317, "newlines": 231, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT025.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600*   READS THE LIST OF TITLE RECORDS.  WRITES OUT A LIST\n000700*   OF THE REPORTS TO BE DROPPED.\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000800\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT REPORT-TITLE-FILE  ASSIGN TO DA-TITLE\n001400                         ORGANIZATION IS INDEXED\n001500                         ACCESS IS RANDOM\n001600                         FILE STATUS IS TIT-STATUS\n001700                         RECORD KEY IS T-KEY.\n001800     SELECT TITLES-PURGED-FILE  ASSIGN TO UT-S-PURGED.\n001900     SELECT INDEX-PURGED-FILE   ASSIGN TO UT-S-PURGEDI.\n002000     SELECT T-RECORDS-FILE      ASSIGN TO UT-S-TRECS.\n002100\n002200 DATA DIVISION.\n002300 FILE SECTION.\n002400\n002500 FD  REPORT-TITLE-FILE\n002600     RECORD CONTAINS 240 TO 310.\n002700 01  TITLE-RECORD.\n002800     COPY REPTB03 REPLACING ==:Z:== BY ==T==.\n002900\n003000 01  REPORT-RECORD.\n003100     COPY REPTB04 REPLACING ==:Z:== BY ==R==.\n003200\n003300 FD  T-RECORDS-FILE\n003400     BLOCK CONTAINS 0 RECORDS\n003500     RECORDING MODE IS F\n003600     RECORD CONTAINS 100.\n003700 01  X-RECORD.\n003800     COPY REPTB01 REPLACING ==:Z:== BY ==X==.\n003900\n004000 FD  TITLES-PURGED-FILE\n004100     LABEL RECORDS ARE STANDARD\n004200     RECORDING MODE IS F\n004300     BLOCK CONTAINS 0 RECORDS\n004400     RECORD CONTAINS 14.\n004500 01  PURGE-RECORD.\n004600     03 P-REPORT-ID            PIC X(8).\n004700     03 P-REPORT-DATE          PIC 9(6).\n004800\n004900 FD  INDEX-PURGED-FILE\n005000     LABEL RECORDS ARE STANDARD\n005100     RECORDING MODE IS F\n005200     BLOCK CONTAINS 0 RECORDS\n005300     RECORD CONTAINS 22.\n005400 01  PURGE-I-RECORD.\n005500     03 O-REPORT-ID            PIC X(8).\n005600     03 O-REPORT-SID           PIC X(8).\n005700     03 O-REPORT-DATE          PIC 9(6).\n005800\n005900 WORKING-STORAGE SECTION.\n006000 77  T-COUNT       PIC 9(5)  COMP-3  VALUE ZERO.\n006100 77  TIT-STATUS    PIC X(2)          VALUE 'ZZ'.\n006200 77  WRK-COUNT     PIC 9(5)  COMP-3  VALUE ZERO.\n006300 77  GET-OUT-1     PIC X(1)          VALUE 'N'.\n006400 88  GET-OUT               VALUE 'Y'.\n006500\n006600 01  WORK-ARRAY.\n006700     03 WRK-REPORT-ARRAY  PIC X(800).\n006710     03 FILLER REDEFINES WRK-REPORT-ARRAY.\n006720        05 WRK-REPORT-SID  PIC X(8)  OCCURS 100 TIMES.\n006800\n006900 01  WORK-AREA.\n007000     03  OLD-REPORT-ID      PIC  X(8) VALUE SPACES.\n007100     03  OLD-REPORT-SID     PIC  X(8) VALUE SPACES.\n007200     03  OLD-REPORT-DATE    PIC  9(6) VALUE ZEROS.\n007300     03  SYSTEM-DAYS        PIC  S9(7) VALUE ZEROS COMP-3.\n007400     03  TOTAL-DAYS         PIC  S9(7) VALUE ZEROS COMP-3.\n007500     03  MONTH-DAYS         PIC  S9(7) VALUE ZEROS COMP-3.\n007600     03  YEAR-CHECK         PIC   9(2) VALUE ZEROS.\n007700     03  I                  PIC   9(2) VALUE ZEROS.\n007800     03  DAYS-IN-MONTH.\n007900         05  FILLER PIC 9(2) VALUE 31.\n008000         05  FILLER PIC 9(2) VALUE 28.\n008100         05  FILLER PIC 9(2) VALUE 31.\n008200         05  FILLER PIC 9(2) VALUE 30.\n008300         05  FILLER PIC 9(2) VALUE 31.\n008400         05  FILLER PIC 9(2) VALUE 30.\n008500         05  FILLER PIC 9(2) VALUE 31.\n008600         05  FILLER PIC 9(2) VALUE 31.\n008700         05  FILLER PIC 9(2) VALUE 30.\n008800         05  FILLER PIC 9(2) VALUE 31.\n008900         05  FILLER PIC 9(2) VALUE 30.\n009000         05  FILLER PIC 9(2) VALUE 31.\n009100     03  DAYS REDEFINES DAYS-IN-MONTH PIC 9(2) OCCURS 12 TIMES.\n009200     03  DATE-G PIC 9(8).\n009300     03  FILLER REDEFINES DATE-G.\n009400         05  DATE-YY  PIC 9(4).\n009500         05  DATE-MM  PIC 9(2).\n009600         05  DATE-DD  PIC 9(2).\n009700     03  SYSTEM-DATE     PIC X(8).\n009800     03  FILLER REDEFINES SYSTEM-DATE.\n009900         05  SS-YY  PIC 9(4).\n010000         05  SS-MM  PIC 9(2).\n010100         05  SS-DD  PIC 9(2).\n010200\n010300 EJECT\n010400 LINKAGE SECTION.\n010500 01  LINK-WORK-AREA.\n010600     03  PARM-LENGTH   PIC S9(4) COMP.\n010700     03  JOB-PARM      PIC X(5).\n010800        88 DEBUG-ON  VALUE 'DEBUG'.\n010900        88 REPORT-ON VALUE 'REPRT'.\n011000\n011100 EJECT\n011200 PROCEDURE DIVISION USING LINK-WORK-AREA.\n011300\n011400 0000-OPEN-FILES.\n011500     OPEN INPUT REPORT-TITLE-FILE\n011600                T-RECORDS-FILE\n011700          OUTPUT TITLES-PURGED-FILE\n011800                 INDEX-PURGED-FILE.\n011900     MOVE FUNCTION CURRENT-DATE (1:8) TO SYSTEM-DATE.\n012000     IF DEBUG-ON\n012100        DISPLAY '  SYSTEM DATE=' SYSTEM-DATE.\n012200     MOVE SS-YY TO DATE-YY.\n012300     MOVE SS-MM TO DATE-MM.\n012400     MOVE SS-DD TO DATE-DD.\n012500     PERFORM 1700-CONVERT-DATE.\n012600     MOVE TOTAL-DAYS TO SYSTEM-DAYS.\n012700     MOVE SPACES TO WORK-ARRAY.\n012800\n012900 1000-T-INDEX-FILE.\n013000     READ T-RECORDS-FILE AT END\n013100        GO TO 9000-CLOSE-FILES.\n013200     IF DEBUG-ON\n013300       DISPLAY '1000-T-INDEX-FILE'\n013400       DISPLAY '  X-REPORT-ID=' X-REPORT-ID\n013500       DISPLAY '  X-REPORT-SID=' X-REPORT-SID\n013600       DISPLAY '  X-REPORT-DATE=' X-REPORT-DATE.\n013700     IF X-TYPE EQUAL 'T'\n013800        NEXT SENTENCE  ELSE\n013900        GO TO 9306-BAD-T-RECORDS.\n014000     IF OLD-REPORT-ID NOT EQUAL X-REPORT-ID\n014010        MOVE LOW-VALUES TO WRK-REPORT-ARRAY\n014100        PERFORM 1100-READ-T-INDEX-RECORDS\n014200        PERFORM 1200-CHECK-REPORT-ID\n014300        GO TO 1000-T-INDEX-FILE.\n014400     IF OLD-REPORT-DATE NOT EQUAL X-REPORT-DATE\n014500        PERFORM 1500-CHECK-FOR-PURGE\n014600        PERFORM 1200-CHECK-REPORT-ID.\n014700     IF OLD-REPORT-SID NOT EQUAL X-REPORT-SID\n014800        PERFORM 1200-CHECK-REPORT-ID\n014900        GO TO 1000-T-INDEX-FILE.\n015000     GO TO 1000-T-INDEX-FILE.\n015100\n015200 1100-READ-T-INDEX-RECORDS.\n015300     MOVE LOW-VALUES TO TITLE-RECORD.\n015400     MOVE 'T' TO T-TYPE.\n015500     MOVE 1 TO T-COUNT.\n015600     MOVE X-REPORT-ID TO T-REPORT-ID, OLD-REPORT-ID.\n015700     MOVE X-REPORT-SID TO OLD-REPORT-SID.\n015800     MOVE X-REPORT-DATE TO OLD-REPORT-DATE.\n015900     MOVE SPACES TO T-REPORT-SID.\n016000     READ REPORT-TITLE-FILE KEY IS T-KEY\n016100        INVALID KEY\n016200              PERFORM 2000-WRITE-RECORD\n016300              GO TO 9300-BAD-START.\n016400     IF DEBUG-ON\n016500       DISPLAY '1100-READ-T-INDEX-FILE'\n016600       DISPLAY '  T-REPORT-ID=' T-REPORT-ID\n016700       DISPLAY '  T-REPORT-SID=' T-REPORT-SID\n016800       DISPLAY '  T-CYLES=' T-CYCLES\n016900       DISPLAY '  T-CYCLE-TYPE=' T-CYCLE-TYPE\n017000       DISPLAY '  T-COUNT=' T-COUNT.\n017100     IF T-CYCLE-TYPE EQUAL 'C' AND\n017200        T-COUNT GREATER THAN T-CYCLES\n017300        PERFORM 2000-WRITE-RECORD.\n017400     IF T-CYCLE-TYPE EQUAL 'D'\n017500        PERFORM 1600-CHECK-DAYS.\n017600\n017700 1200-CHECK-REPORT-ID.\n017800     IF DEBUG-ON\n017900        DISPLAY '1200-CHECK-REPORT-ID'\n018000        DISPLAY '  X-REPORT-ID=' X-REPORT-ID\n018100        DISPLAY '  X-REPORT-SID=' X-REPORT-SID\n018200        DISPLAY '  X-REPORT-DATE=' X-REPORT-DATE.\n018300     MOVE 'N' TO GET-OUT-1.\n018400     PERFORM 1210-ADD-TO-ARRAY THRU 1215-ADD-EXIT\n018500        VARYING I FROM 1 BY 1 UNTIL GET-OUT.\n018600\n018700 1210-ADD-TO-ARRAY.\n018800     IF DEBUG-ON\n018900        DISPLAY '1210-ADD-TO-ARRAY'\n019000        DISPLAY '              I=' I\n019010        DISPLAY '   X-REPORT-SID=' X-REPORT-SID\n019020        DISPLAY ' WRK-REPORT-SID=' WRK-REPORT-SID (I).\n019300     IF WRK-REPORT-SID (I) EQUAL X-REPORT-SID\n019400        MOVE 'Y' TO GET-OUT-1\n019410        GO TO 1215-ADD-EXIT.\n019500     IF WRK-REPORT-SID (I) EQUAL LOW-VALUES\n019600        MOVE X-REPORT-SID TO WRK-REPORT-SID (I)\n019700        MOVE 'Y' TO GET-OUT-1\n019701        GO TO 1215-ADD-EXIT.\n019705     IF WRK-REPORT-SID (I) EQUAL LOW-VALUES\n019706        MOVE 'Y' TO GET-OUT-1\n019707        GO TO 1215-ADD-EXIT.\n019760\n019770 1215-ADD-EXIT.  EXIT.\n019800\n019900 1500-CHECK-FOR-PURGE.\n020000     MOVE X-REPORT-DATE TO OLD-REPORT-DATE.\n020100     ADD 1 TO T-COUNT.\n020200     IF DEBUG-ON\n020300        DISPLAY '1500-CHECK-FOR-PURGE'\n020400        DISPLAY ' T-COUNT=' T-COUNT\n020500        DISPLAY ' T-CYCLE-TYPE=' T-CYCLE-TYPE\n020600        DISPLAY ' T-CYCLES=' T-CYCLES.\n020700     IF T-CYCLE-TYPE EQUAL 'C' AND\n020800        T-COUNT GREATER THAN T-CYCLES\n020900        PERFORM 2000-WRITE-RECORD.\n021000     IF T-CYCLE-TYPE EQUAL 'D'\n021100        PERFORM 1600-CHECK-DAYS.\n021200\n021300 1600-CHECK-DAYS.\n021400     MOVE X-REPORT-DATE TO DATE-G.\n021500     PERFORM 1700-CONVERT-DATE.\n021600     SUBTRACT TOTAL-DAYS FROM SYSTEM-DAYS GIVING TOTAL-DAYS.\n021700     IF DEBUG-ON\n021800       DISPLAY '1600-CHECK-DAYS'\n021900       DISPLAY '  TOTAL-DAYS=' TOTAL-DAYS\n022000       DISPLAY ' T-KEEP-DAYS=' T-KEEP-DAYS.\n022100     IF TOTAL-DAYS GREATER THAN T-KEEP-DAYS OR\n022200        TOTAL-DAYS EQUAL T-KEEP-DAYS\n022300        PERFORM 2000-WRITE-RECORD.\n022400\n022500\n022600 1700-CONVERT-DATE.\n022700     IF DEBUG-ON\n022800       DISPLAY '1700-CONVERT-DATE'.\n022900     MOVE 0 TO TOTAL-DAYS, MONTH-DAYS.\n023000     COMPUTE TOTAL-DAYS = (DATE-YY - 2015) * 365.\n023100     PERFORM 1710-GET-MONTH\n023200        VARYING I FROM 1 BY 1 UNTIL I = DATE-MM.\n023300     ADD MONTH-DAYS, DATE-DD TO TOTAL-DAYS.\n023400     COMPUTE YEAR-CHECK = (DATE-YY / 4) * 4.\n023500     IF YEAR-CHECK = DATE-YY AND DATE-MM = 02 AND DATE-DD = 29\n023600        ADD  1 TO TOTAL-DAYS.\n023700     IF YEAR-CHECK = DATE-YY AND DATE-MM GREATER THAN 02\n023800        ADD  1 TO TOTAL-DAYS.\n023900\n024000 1710-GET-MONTH.\n024100     IF I = DATE-MM\n024200       NEXT SENTENCE ELSE\n024300         ADD DAYS (I) TO MONTH-DAYS.\n024400\n024500 2000-WRITE-RECORD.\n024600     IF DEBUG-ON\n024700          DISPLAY '2000-WRITE-RECORD'\n024800          DISPLAY '   X-REPORT-ID=' X-REPORT-ID\n024900          DISPLAY '   X-REPORT-SID=' X-REPORT-SID\n025000          DISPLAY '   X-REPORT-DATE=' X-REPORT-DATE.\n025100     MOVE X-REPORT-ID TO P-REPORT-ID.\n025200     MOVE X-REPORT-DATE TO P-REPORT-DATE.\n025300     WRITE PURGE-RECORD  INVALID KEY\n025400        GO TO 9920-WRITE-ERROR.\n025500     MOVE 'N' TO GET-OUT-1.\n025600     PERFORM 2100-WRITE-SID-RECORD THRU\n025610             2110-WRITE-EXIT\n025700        VARYING I FROM 1 BY 1 UNTIL GET-OUT.\n025800\n025900 2100-WRITE-SID-RECORD.\n026000     IF DEBUG-ON\n026100          DISPLAY '2100-WRITE-SID-RECORD'\n026200          DISPLAY '     X-REPORT-ID=' X-REPORT-ID\n026300          DISPLAY '  WRK-REPORT-SID=' WRK-REPORT-SID (I)\n026400          DISPLAY '   X-REPORT-DATE=' X-REPORT-DATE.\n026500     IF WRK-REPORT-SID (I) EQUAL LOW-VALUES\n026600        MOVE 'Y' TO GET-OUT-1\n026610        GO TO 2110-WRITE-EXIT.\n026700     MOVE X-REPORT-ID TO O-REPORT-ID.\n026800     MOVE WRK-REPORT-SID (I) TO O-REPORT-SID.\n026900     MOVE X-REPORT-DATE TO O-REPORT-DATE.\n027000     WRITE PURGE-I-RECORD  INVALID KEY\n027100         GO TO 9920-WRITE-ERROR.\n027101\n027102 2110-WRITE-EXIT.   EXIT.\n027103\n027300 9000-CLOSE-FILES.\n027400     CLOSE T-RECORDS-FILE\n027500           TITLES-PURGED-FILE\n027600           INDEX-PURGED-FILE\n027700           REPORT-TITLE-FILE.\n027800     GO TO 9999-END-OF-PROGRAM.\n027900\n028000 9300-BAD-START.\n028100     DISPLAY '*-------------------------------*'.\n028200     DISPLAY '*** INVALID READ ON FILE TITLES**'.\n028300     DISPLAY T-KEY.\n028400     DISPLAY '*-------------------------------*'.\n028500     MOVE 4 TO RETURN-CODE.\n028600     MOVE SPACES TO OLD-REPORT-ID.\n028700     GO TO 1000-T-INDEX-FILE.\n028800\n028900 9306-BAD-T-RECORDS.\n029000     DISPLAY '*** INVALID TYPE RECORDS ON FILE TITIN**'.\n029100     MOVE 22 TO RETURN-CODE\n029200     GO TO 9000-CLOSE-FILES.\n029300\n029400 9920-WRITE-ERROR.\n029500     DISPLAY '*** WRITE ERROR ON TRECS  FILE ***'.\n029600     MOVE 14 TO RETURN-CODE\n029700     GO TO 9000-CLOSE-FILES.\n029800\n029900 9999-END-OF-PROGRAM.\n030000     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT025J": {"ttr": 10497, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x003\\x01 \\x10O\\x01 \\x14\\x7f\\x13D\\x00@\\x00^\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-26T13:44:33", "lines": 64, "newlines": 94, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT025J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//* $$$$  THIS JOB IS USED WITH THE REPT020 JOBS  $$$$           *\n//****************************************************************\n//*   THIS JOB WILL CREATE A FILE THAT HAS THE REPORT_IDS BY     *\n//*   DATE THAT SHOULD BE DELETED                                *\n//*   CREATE PURGE RECORDS FOR DETAIL, INDEX AND HISTORY FILES   *\n//****************************************************************\n//STEP032  EXEC PGM=IDCAMS,COND=(8,LT)\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n   DELETE OPT.PRINT.PURGED.SEQ\n   DELETE OPT.PRINT.PURGEDI.SEQ\n   DELETE OPT.PRINT.SORTEDT.SEQ\n//****************************************************************\n//*   CREATE SEQUENTAIL 'T' INDEX RECORDS                        *\n//****************************************************************\n//STEP034  EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//AMSDUMP  DD  SYSOUT=*\n//OUT1     DD DSN=&&TRECS,DISP=(,PASS,DELETE),\n//            DCB=(LRECL=100,BLKSIZE=26000,RECFM=FB),\n//            SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA\n//IN1      DD  DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SYSIN    DD  *\n   REPRO IFILE(IN1) -\n         FROMKEY('T') -\n         TOKEY('T') -\n         OFILE(OUT1)\n//****************************************************************\n//*   SORT THE T RECORDS FILE                                    *\n//* NOTICE ALL INPUT FILES IN THIS STEP ARE SEQ FILES            *\n//****************************************************************\n//STEP035  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=&&TRECS,DISP=(OLD,PASS,DELETE)\n//         DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.SORTEDT.SEQ,DISP=(NEW,CATLG,DELETE),\n//            DCB=(LRECL=100,BLKSIZE=26000,RECFM=FB),\n//            SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(06,8,A,22,6,D),FORMAT=BI\n/*\n//****************************************************************\n//*   BUILD THE REPORTS TO BE PURGED                             *\n//****************************************************************\n//STEP036  EXEC PGM=REPT025,COND=(8,LT) PARM='DEBUG'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//TRECS    DD DSN=OPT.PRINT.SORTEDT.SEQ,DISP=SHR,DCB=BUFNO=10\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=(,CATLG,CATLG),UNIT=SYSDA,\n//     DCB=(LRECL=14,BLKSIZE=2800,RECFM=FB,BUFNO=10),SPACE=(TRK,(1,1))\n//PURGEDI  DD DSN=OPT.PRINT.PURGEDI.SEQ,DISP=(,CATLG,CATLG),UNIT=SYSDA,\n//     DCB=(LRECL=22,BLKSIZE=4400,RECFM=FB,BUFNO=10),SPACE=(TRK,(1,1))\n//TITLE    DD DSN=OPT.CICS.REPORT.TITLE.FILE,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT025X": {"ttr": 10499, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00A\\x01 \\x13o\\x01 \\x13o\\x17\\x13\\x00I\\x00B\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-15T17:13:41", "lines": 73, "newlines": 66, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT025X JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//* $$$$  THIS JOB IS USED WITH THE REPT015 JOBS  $$$$           *\n//*   THE MAIN DIFFERNCE IS THE REPT015 PROGRAM USES VSAM WORKS  *\n//*   TO CREATE THE \"T\" HISTORY RECORDS                          *\n//****************************************************************\n//*   THIS JOB WILL CREATE A FILE THAT HAS THE REPORT_IDS BY     *\n//*   DATE THAT SHOULD BE DELETED                                *\n//****************************************************************\n//STEP032  EXEC PGM=IDCAMS,COND=(8,LT)\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n   DELETE OPT.PRINT.PURGED.SEQ\n   DELETE OPT.PRINT.PURGEDI.SEQ\n   DELETE OPT.PRINT.MERGEDT.SEQ\n   DELETE OPT.PRINT.SORTEDT.SEQ\n//****************************************************************\n//*   MERGE THE T RECORDS  INTO ONE FILE                         *\n//****************************************************************\n//*    PUT ALL OF THE NEW \"T\" RECORD FILES IN THIS MERGE STEP    *\n//****************************************************************\n//STEP033  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN01 DD DSN=OPT.PRINT.CICS.WORK1.FILE,DISP=SHR\n//SORTIN02 DD DSN=OPT.PRINT.CICS.WORK2.FILE,DISP=SHR\n//SORTIN03 DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//SORTOUT  DD DSN=OPT.PRINT.MERGEDT.SEQ,DISP=(NEW,CATLG,DELETE),\n//            DCB=(LRECL=100,BLKSIZE=8000,RECFM=FB,BUFNO=10),\n//            SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  OMIT COND=(1,1,CH,NE,C'T')\n  MERGE FIELDS=(1,31,A),FORMAT=BI\n/*\n//****************************************************************\n//*   SORT THE T RECORDS BY REPORT-ID AND DATE                   *\n//****************************************************************\n//STEP035  EXEC PGM=SORT,COND=(8,LT),REGION=4M,\n//      PARM=('MSGDDN=SORTMSG,MSGPRT=ALL')\n//SYSUDUMP DD SYSOUT=*\n//SORTMSG  DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SORTIN   DD DSN=OPT.PRINT.MERGEDT.SEQ,DISP=SHR,DCB=BUFNO=10\n//SORTOUT  DD DSN=OPT.PRINT.SORTEDT.SEQ,DISP=(NEW,CATLG,DELETE),\n//            DCB=(LRECL=100,BLKSIZE=8000,RECFM=FB,BUFNO=10),\n//            SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA\n//SYSIN    DD *\n  RECORD TYPE=F\n  SORT FIELDS=(06,8,A,22,6,D),FORMAT=BI\n/*\n//****************************************************************\n//*   BUILD THE REPORTS TO BE PURGED                             *\n//****************************************************************\n//STEP036  EXEC PGM=REPT025,COND=(8,LT)\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//TRECS    DD DSN=OPT.PRINT.SORTEDT.SEQ,DISP=SHR\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=(,CATLG,CATLG),UNIT=SYSDA,\n//     DCB=(LRECL=14,BLKSIZE=2800,RECFM=FB,BUFNO=10),SPACE=(TRK,(1,1))\n//PURGEDI  DD DSN=OPT.PRINT.PURGEDI.SEQ,DISP=(,CATLG,CATLG),UNIT=SYSDA,\n//     DCB=(LRECL=22,BLKSIZE=4400,RECFM=FB,BUFNO=10),SPACE=(TRK,(1,1))\n//TITLE    DD DSN=OPT.CICS.REPORT.TITLE.FILE,DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT026": {"ttr": 10502, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01b\\x00D\\x01 \\x10O\\x01 \\x14\\x8f\\x14\\x03\\x01\\xb2\\x0f\\xe6\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.98", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-27T14:03:44", "lines": 434, "newlines": 4070, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT026.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600*  READS THE ONLINE REPORT DETAIL FILE, THE NEW DETAIL\n000700*  RECORDS FILE AND DELETES ALL RECORDS THAT SHOULD BE\n000800*  DELETED AND CREATES A NEW DETAIL FILE.\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT REPORT-DETAIL-FILE  ASSIGN TO DA-DTLIN\n001400                         ORGANIZATION IS INDEXED\n001500                         ACCESS IS SEQUENTIAL\n001600                         FILE STATUS IS DTL-STATUS\n001700                         RECORD KEY IS D-KEY.\n001800     SELECT NEW-REPORT-DETAIL-FILE  ASSIGN TO DA-DTLNEW\n001900                         ORGANIZATION IS INDEXED\n002000                         ACCESS IS SEQUENTIAL\n002100                         FILE STATUS IS NEW-STATUS\n002200                         RECORD KEY IS N-KEY.\n002300     SELECT ADD-DETAIL-FILE    ASSIGN TO UT-S-DTLADD.\n002400     SELECT PURGE-RECORDS      ASSIGN TO UT-S-PURGED.\n002500     SELECT SORT-FILE          ASSIGN TO UT-S-SORTWK1.\n002600     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002700\n002800 DATA DIVISION.\n002900 FILE SECTION.\n003000\n003100 FD  NEW-REPORT-DETAIL-FILE\n003200     RECORD IS VARYING FROM 153 TO 11724                                08\n003300       DEPENDING ON N-LENGTH.                                           08\n003400     COPY REPTB05 REPLACING ==:Z:== BY ==N==.\n003500\n003600 SD  SORT-FILE\n003700     RECORD IS VARYING FROM 153 TO 11724                                08\n003800       DEPENDING ON S-LENGTH.                                           08\n003900     COPY REPTB05 REPLACING ==:Z:== BY ==S==.\n004000\n004100 FD  PURGE-RECORDS\n004200     BLOCK CONTAINS 0 RECORDS\n004300     RECORDING MODE F\n004400     LABEL RECORDS ARE STANDARD\n004500     RECORD CONTAINS 14.\n004600 01  PURGE-RECORD.\n004700     03 P-REPORT-ID            PIC X(8).\n004800     03 P-REPORT-DATE          PIC 9(6).\n004900\n005000 FD  REPORT-DETAIL-FILE\n005100     RECORD IS VARYING FROM 153 TO 11724                                08\n005200       DEPENDING ON D-LENGTH.                                           08\n005300     COPY REPTB05 REPLACING ==:Z:== BY ==D==.\n005400\n005500 FD  ADD-DETAIL-FILE\n005600     RECORDING MODE IS V\n005700     RECORD IS VARYING FROM 153 TO 11724                                08\n005800       DEPENDING ON A-LENGTH.                                           08\n005900     COPY REPTB05 REPLACING ==:Z:== BY ==A==.\n006000\n006100 FD  REPORT-LIST-FILE\n006200     RECORDING MODE IS F\n006300     RECORD CONTAINS 132.\n006400 01  ADD-PRINT-RECORD.\n006500     03 PRT-ONE                 PIC X(50).\n006600     03 PRT-XYZ                 PIC X(82).\n006700     03 X-FIL REDEFINES PRT-XYZ.\n006800        05 PRT-ID                  PIC X(8).\n006900        05 FILLER                  PIC X(1).\n007000        05 PRT-DATE                PIC 9(6).\n007100        05 FILLER                  PIC X(1).\n007200        05 PRT-SEQ                 PIC 9(7).\n007300        05 FILLER                  PIC X(59).\n007400     03 X-FILL REDEFINES PRT-XYZ.\n007500        05 PRT-NUMBER              PIC ZZZ,Z99.\n007600        05 FILLER                  PIC X(75).\n007700\n007800 WORKING-STORAGE SECTION.\n007900 77  PURGE-ARRAY-COUNT PIC S9(8) COMP    VALUE 3000.\n008000 77  D-LENGTH          PIC 9(4)  COMP    VALUE ZERO.\n008100 77  D-LEN             PIC 9(4)  COMP    VALUE ZERO.\n008200 77  A-LENGTH          PIC 9(4)  COMP    VALUE ZERO.\n008300 77  A-LEN             PIC 9(4)  COMP    VALUE ZERO.\n008400 77  S-LENGTH          PIC 9(4)  COMP    VALUE ZERO.\n008500 77  S-LEN             PIC 9(4)  COMP    VALUE ZERO.\n008600 77  N-LENGTH          PIC 9(4)  COMP    VALUE ZERO.\n008700 77  N-LEN             PIC 9(4)  COMP    VALUE ZERO.\n008800 77  W-LENGTH          PIC 9(4)  COMP    VALUE ZERO.\n008900 77  W-LEN             PIC 9(4)  COMP    VALUE ZERO.\n009000 77  DD-DEL-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n009100 77  DD-ADD-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n009200 77  DD-TOT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n009300 77  DD-VSM-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n009400 77  DD-WRT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n009500 77  DD-SEQ            PIC S9(7)         VALUE ZERO.\n009600 77  AI-COUNT          PIC 9(5)  COMP-3  VALUE ZERO.                    00\n009700 77  DI-COUNT          PIC 9(5)  COMP-3  VALUE ZERO.                    00\n009800 77  NI-COUNT          PIC 9(5)  COMP-3  VALUE ZERO.                    00\n009900 77  SI-COUNT          PIC 9(5)  COMP-3  VALUE ZERO.                    00\n010000 77  WI-COUNT          PIC 9(5)  COMP-3  VALUE ZERO.                    00\n010100 77  I                 PIC S9(8) COMP    VALUE ZERO.\n010200 77  DTL-STATUS        PIC X(2)          VALUE 'ZZ'.\n010300 77  NEW-STATUS        PIC X(2)          VALUE 'ZZ'.\n010400 77  DEL-IT            PIC X(1)          VALUE ' '.\n010500 77  OK-OUT            PIC X(1)          VALUE ' '.\n010600 77  OLD-REPORT-ID     PIC X(8)          VALUE SPACES.\n010700 77  OLD-REPORT-DATE   PIC 9(6)          VALUE ZERO.\n010800\n010900 01  WORK-AREAS.\n011000     03  PURGE-ARRAY OCCURS 3000 TIMES.\n011100         05 WRK-REPORT-ID        PIC X(8).\n011200         05 WRK-REPORT-DATE      PIC 9(6).\n011300\n011400     COPY REPTB05 REPLACING ==:Z:== BY ==W==.\n011500\n011600 LINKAGE SECTION.\n011700 01  LINK-WORK-AREA.\n011800     03  PARM-LENGTH   PIC S9(4) COMP.\n011900     03  JOB-PARM      PIC X(5).\n012000        88 DEBUG-ON  VALUE 'DEBUG'.\n012100        88 REPORT-ON VALUE 'REPRT'.\n012200\n012300 EJECT\n012400 PROCEDURE DIVISION USING LINK-WORK-AREA.\n012500 0000-MAIN-ROUTINE SECTION.\n012600\n012700 0100-OPEN-FILES.\n012800     OPEN INPUT PURGE-RECORDS, REPORT-DETAIL-FILE,\n012900          ADD-DETAIL-FILE.\n013000     OPEN OUTPUT NEW-REPORT-DETAIL-FILE.\n013100     OPEN OUTPUT REPORT-LIST-FILE.\n013200     IF PARM-LENGTH GREATER THAN 0\n013300        DISPLAY 'JOB-PARM=' JOB-PARM.\n013400\n013500 0200-READ-PURGE-RECORDS.\n013600     IF DEBUG-ON\n013700        DISPLAY '0200-READ-PURGE-RECORDS'.\n013800     ADD 1 TO I.\n013900     IF I = PURGE-ARRAY-COUNT\n014000        GO TO 9300-OUT-SPACE.\n014100     READ PURGE-RECORDS AT END GO TO 0900-CLOSE-PURGE-FILE.\n014200     IF REPORT-ON\n014300        MOVE ALL '-' TO ADD-PRINT-RECORD\n014400        WRITE ADD-PRINT-RECORD\n014500              INVALID KEY GO TO 9400-PRINT-ERR\n014600     END-IF.\n014700     IF REPORT-ON\n014800        MOVE SPACES TO ADD-PRINT-RECORD\n014900        MOVE '--- TO BE DELETED=' TO PRT-ONE\n015000        MOVE P-REPORT-ID TO PRT-ID\n015100        MOVE P-REPORT-DATE TO PRT-DATE\n015200        WRITE ADD-PRINT-RECORD\n015300              INVALID KEY GO TO 9400-PRINT-ERR\n015400     END-IF.\n015500     MOVE P-REPORT-ID TO  WRK-REPORT-ID (I).\n015600     MOVE P-REPORT-DATE TO WRK-REPORT-DATE (I).\n015700     GO TO 0200-READ-PURGE-RECORDS.\n015800\n015900 0900-CLOSE-PURGE-FILE.\n016000     IF DEBUG-ON\n016100       DISPLAY '0900-CLOSE-PURGE-FILE'.\n016200     ADD 1 TO I.\n016300     MOVE 'ZZZZZZZZ' TO WRK-REPORT-ID (I).\n016400     MOVE 999999 TO WRK-REPORT-DATE (I).\n016500     CLOSE PURGE-RECORDS.\n016600     MOVE 1 TO I.\n016700\n016800 1000-SORT-DETAIL-FILE SECTION.\n016900     IF DEBUG-ON\n017000       DISPLAY '1000-SORT-DETAIL-FILE'.\n017100     SORT SORT-FILE\n017200        ON ASCENDING KEY S-KEY IN S-RECORD\n017300        INPUT PROCEDURE\n017400          3000-START-SORT THRU 4000-END-SORT\n017500        OUTPUT PROCEDURE\n017600          5000-START-LOAD THRU 7000-END-LOAD.\n017700\n017800     IF SORT-RETURN NOT EQUAL 0\n017900        DISPLAY 'REPT026 - SORT ERROR, JOB ABENDED'\n018000        MOVE 16 TO RETURN-CODE.\n018100     GO TO 9000-CLOSE-FILES.\n018200\n018300 3000-START-SORT SECTION.\n018400     IF DEBUG-ON\n018500       DISPLAY '3000-START-SORT SECTION'.\n018600     READ REPORT-DETAIL-FILE AT END\n018700        GO TO 3400-DO-SEQ-FILE.\n018800     ADD 1 TO DD-VSM-COUNT.\n018900     PERFORM 3300-FIND-REPORT-ID.\n019000     IF DEL-IT EQUAL 'Y'\n019100        ADD 1 TO DD-DEL-COUNT\n019200        IF DEBUG-ON\n019300          DISPLAY '--DELETING =' D-REPORT-ID '/' D-REPORT-DATE '/' D-SEQ\n019400        END-IF\n019500        IF REPORT-ON\n019600           MOVE SPACES TO PRT-ONE\n019700           MOVE '--- DELETING =' TO PRT-ONE\n019800           MOVE D-REPORT-ID TO PRT-ID\n019900           MOVE D-REPORT-DATE TO PRT-DATE\n020000           MOVE D-SEQ TO PRT-SEQ\n020100           WRITE ADD-PRINT-RECORD\n020200              INVALID KEY GO TO 9400-PRINT-ERR\n020300        END-IF\n020400        GO TO 3000-START-SORT.\n020500\n020600 3100-RELEASE-IT.\n020700     IF DEBUG-ON\n020800       DISPLAY '3100-RELEASE-IT'.\n020900     ADD 1 TO DD-TOT-COUNT.\n021000     COMPUTE S-LENGTH = (D-NUMBER-OF-LINES * 133) + 20.\n021100     MOVE D-REPORT-ID TO S-REPORT-ID.\n021200     MOVE D-REPORT-DATE TO S-REPORT-DATE.\n021300     MOVE D-SEQ TO S-SEQ.\n021400     MOVE D-NUMBER-OF-LINES TO S-NUMBER-OF-LINES, SI-COUNT.\n021500     MOVE D-NUMBER-OF-LINES TO DI-COUNT.\n021600     PERFORM 3210-MOVE-DATA\n021700             VARYING I FROM 1 BY 1\n021800             UNTIL I > DI-COUNT.\n021900     PERFORM 3200-RELEASE THRU 3299-EXIT.\n022000     GO TO 3000-START-SORT.\n022100\n022200 3210-MOVE-DATA.\n022300     MOVE D-LINES(I) TO S-LINES(I).\n022400\n022500 3200-RELEASE.\n022600     IF DEBUG-ON\n022700       DISPLAY '3200-RELEASE'\n022800       DISPLAY 'D-RECL=' LENGTH OF D-RECORD\n022900       DISPLAY 'D-LENGTH=' D-LENGTH\n023000       DISPLAY 'S-RECL=' LENGTH OF S-RECORD\n023100       DISPLAY 'S-LENGTH=' S-LENGTH\n023200       DISPLAY 'D-NUMBER-OF-LINES=' D-NUMBER-OF-LINES\n023300       DISPLAY 'S-NUMBER-OF-LINES=' S-NUMBER-OF-LINES\n023400       DISPLAY 'D-RECORD=' D-RECORD\n023500       DISPLAY 'S-RECORD=' S-RECORD.\n023600     RELEASE S-RECORD.\n023700\n023800 3299-EXIT. EXIT.\n023900\n024000 3300-FIND-REPORT-ID.\n024100     IF DEBUG-ON\n024200       DISPLAY '3300-FIND-REPORT-ID'.\n024300     MOVE 'N' TO OK-OUT, DEL-IT.\n024400     PERFORM 3310-CHECK-IT VARYING I FROM 1 BY 1\n024500       UNTIL OK-OUT = 'Y'.\n024600     SUBTRACT 1 FROM I.\n024700\n024800 3310-CHECK-IT.\n024900     IF DEBUG-ON\n025000       DISPLAY '3310-CHECK-IT'.\n025100     IF WRK-REPORT-ID (I) EQUAL D-REPORT-ID AND\n025200        WRK-REPORT-DATE (I) EQUAL D-REPORT-DATE\n025300        MOVE 'Y' TO OK-OUT, DEL-IT.\n025400     IF WRK-REPORT-ID (I) EQUAL 'ZZZZZZZZ' AND\n025500        WRK-REPORT-DATE (I) EQUAL 999999\n025600        MOVE 'N' TO DEL-IT\n025700        MOVE 'Y' TO OK-OUT.\n025800     IF I EQUAL PURGE-ARRAY-COUNT\n025900        MOVE 'N' TO DEL-IT\n026000        MOVE 'Y' TO OK-OUT.\n026100\n026200 3400-DO-SEQ-FILE.\n026300     IF DEBUG-ON\n026400       DISPLAY '3400-DO-SEQ-FILE'.\n026500     CLOSE REPORT-DETAIL-FILE.\n026600\n026700 3500-READ-SEQ-FILE.\n026800     IF DEBUG-ON\n026900        DISPLAY '3500-READ-SEQ-FILE'.\n027000     READ ADD-DETAIL-FILE AT END\n027100        GO TO 3900-CLOSE-ADD-FILE.\n027200     ADD 1 TO DD-ADD-COUNT.\n027300     ADD 1 TO DD-TOT-COUNT.\n027400     MOVE A-LENGTH TO S-LENGTH.\n027500     MOVE A-REPORT-ID TO S-REPORT-ID.\n027600     MOVE A-REPORT-DATE TO S-REPORT-DATE.\n027700     MOVE A-SEQ TO S-SEQ.\n027800     MOVE A-NUMBER-OF-LINES TO SI-COUNT, AI-COUNT.\n027900     MOVE A-NUMBER-OF-LINES TO S-NUMBER-OF-LINES.\n028000     PERFORM 3510-MOVE-DATA\n028100             VARYING I FROM 1 BY 1\n028200             UNTIL I > AI-COUNT.\n028300     PERFORM 3600-RELEASE THRU 3699-EXIT.\n028400     GO TO 3500-READ-SEQ-FILE.\n028500\n028600 3510-MOVE-DATA.\n028700     MOVE A-LINES(I) TO S-LINES(I).\n028800\n028900 3600-RELEASE.\n029000     IF DEBUG-ON\n029100       DISPLAY '3600-RELEASE'\n029200       DISPLAY 'A-RECL=' LENGTH OF A-RECORD\n029300       DISPLAY 'A-LENGTH=' A-LENGTH\n029400       DISPLAY 'S-RECL=' LENGTH OF S-RECORD\n029500       DISPLAY 'S-LENGTH=' S-LENGTH\n029600       DISPLAY 'A-NUMBER-OF-LINES=' A-NUMBER-OF-LINES\n029700       DISPLAY 'S-NUMBER-OF-LINES=' S-NUMBER-OF-LINES\n029800       DISPLAY 'A-RECORD=' A-RECORD\n029900       DISPLAY 'S-RECORD=' S-RECORD.\n030000*    RELEASE S-RECORD FROM A-RECORD.\n030100     RELEASE S-RECORD.\n030200     GO TO 3699-EXIT.\n030300\n030400 3699-EXIT. EXIT.\n030500\n030600 3900-CLOSE-ADD-FILE.\n030700     IF DEBUG-ON\n030800       DISPLAY '3900-CLOSE-ADD-FILE'.\n030900     CLOSE ADD-DETAIL-FILE.\n031000\n031100 4000-END-SORT. EXIT.\n031200\n031300 5000-START-LOAD SECTION.\n031400     IF DEBUG-ON\n031500       DISPLAY '5000-START-LOAD'.\n031600     RETURN SORT-FILE RECORD\n031700         AT END GO TO 6900-CLOSE-FILE.\n031800     MOVE S-LENGTH TO S-LEN.\n031900     MOVE S-RECORD(1:S-LEN) TO N-RECORD(1:S-LEN).\n031910     ADD 1 TO DD-WRT-COUNT.\n032000     IF DEBUG-ON\n032100       DISPLAY '  DD-WRT-COUNT=' DD-WRT-COUNT\n032110       DISPLAY 'S-LENGTH=' S-LENGTH\n032200       DISPLAY 'S-LEN=' S-LEN\n032210       DISPLAY 'S-KEY=' S-REPORT-ID, S-REPORT-DATE, S-SEQ\n032220       DISPLAY 'N-KEY=' N-REPORT-ID, N-REPORT-DATE, N-SEQ.\n032600     PERFORM 5200-LOAD-FILE THRU 5299-EXIT.\n032700     GO TO 5000-START-LOAD.\n032800\n032900 5200-LOAD-FILE.\n033000     IF DEBUG-ON\n033100        DISPLAY '5200-LOAD-FILE'.\n033200     COMPUTE N-LENGTH = (S-NUMBER-OF-LINES * 133) + 20.\n033300     MOVE S-NUMBER-OF-LINES TO NI-COUNT.\n033400*    DISPLAY 'DD-WRT-COUNT=' DD-WRT-COUNT.\n033500     IF DEBUG-ON\n033600       DISPLAY 'DD-WRT-COUNT=' DD-WRT-COUNT\n033700       DISPLAY 'S-RECL=' LENGTH OF W-RECORD\n033800       DISPLAY 'N-RECL=' LENGTH OF N-RECORD\n033900       DISPLAY 'N-LENGTH=' N-LENGTH\n034000       DISPLAY 'S-NUMBER-OF-LINES=' S-NUMBER-OF-LINES\n034100       DISPLAY 'N-NUMBER-OF-LINES=' N-NUMBER-OF-LINES\n034200       DISPLAY 'S-KEY=' S-REPORT-ID, S-REPORT-DATE, S-SEQ\n034300       DISPLAY 'N-KEY=' N-REPORT-ID, N-REPORT-DATE, N-SEQ.\n034400     WRITE N-RECORD INVALID KEY GO TO 5298-ERROR.\n034500     IF NEW-STATUS NOT EQUAL ZERO\n034600       GO TO 5298-ERROR.\n034700     GO TO 5299-EXIT.\n034800\n034900 5298-ERROR.\n035000     IF DEBUG-ON\n035100       DISPLAY '5298-ERROR'.\n035200     DISPLAY '---ERROR WRITING TO OUTPUT VSAM FILE-----------'.\n035300     DISPLAY '*****START OF RECORD*********'.\n035400     DISPLAY W-RECORD.\n035500     DISPLAY 'VSAM STATUS=' NEW-STATUS.\n035600     DISPLAY '*****END OF RECORD*********'.\n035700     MOVE 16 TO RETURN-CODE.\n035800     GO TO 6900-CLOSE-FILE.\n035900\n036000 5299-EXIT. EXIT.\n036100\n036200 6900-CLOSE-FILE.\n036300     IF DEBUG-ON\n036400       DISPLAY '6900-CLOSE-FILE'.\n036500     CLOSE NEW-REPORT-DETAIL-FILE.\n036600\n036700 7000-END-LOAD. EXIT.\n036800\n036900 9000-CLOSE-FILES SECTION.\n037000     MOVE ALL '-' TO ADD-PRINT-RECORD.\n037100     WRITE ADD-PRINT-RECORD\n037200              INVALID KEY GO TO 9400-PRINT-ERR.\n037300     MOVE SPACES TO ADD-PRINT-RECORD.\n037400     MOVE   ' TOTAL VSAM DETAIL RECORDS READ IN - ' TO PRT-ONE.\n037500     MOVE   DD-VSM-COUNT TO PRT-NUMBER.\n037600     WRITE ADD-PRINT-RECORD\n037700              INVALID KEY GO TO 9400-PRINT-ERR.\n037800     MOVE ALL '-' TO ADD-PRINT-RECORD.\n037900     WRITE ADD-PRINT-RECORD\n038000              INVALID KEY GO TO 9400-PRINT-ERR.\n038100     MOVE SPACES TO ADD-PRINT-RECORD.\n038200     MOVE ' TOTAL DETAIL RECORDS IN OUT FILE.' TO PRT-ONE.\n038300     MOVE DD-TOT-COUNT TO PRT-NUMBER.\n038400     WRITE ADD-PRINT-RECORD\n038500              INVALID KEY GO TO 9400-PRINT-ERR.\n038600     MOVE SPACES TO ADD-PRINT-RECORD.\n038700     MOVE ALL '-' TO ADD-PRINT-RECORD.\n038800     WRITE ADD-PRINT-RECORD\n038900              INVALID KEY GO TO 9400-PRINT-ERR.\n039000     MOVE SPACES TO ADD-PRINT-RECORD.\n039100     MOVE  ' TOTAL DETAIL RECORDS DELETED.' TO PRT-ONE.\n039200     MOVE  DD-DEL-COUNT TO PRT-NUMBER.\n039300     WRITE ADD-PRINT-RECORD\n039400              INVALID KEY GO TO 9400-PRINT-ERR.\n039500     MOVE SPACES TO ADD-PRINT-RECORD.\n039600     MOVE ALL '-' TO ADD-PRINT-RECORD.\n039700     WRITE ADD-PRINT-RECORD\n039800              INVALID KEY GO TO 9400-PRINT-ERR.\n039900     MOVE SPACES TO ADD-PRINT-RECORD.\n040000     MOVE ' TOTAL DETAIL RECORDS ADDED.' TO PRT-ONE.\n040100     MOVE DD-ADD-COUNT TO PRT-NUMBER.\n040200     WRITE ADD-PRINT-RECORD\n040300              INVALID KEY GO TO 9400-PRINT-ERR.\n040400     MOVE SPACES TO ADD-PRINT-RECORD.\n040500     MOVE ALL '-' TO ADD-PRINT-RECORD.\n040600     WRITE ADD-PRINT-RECORD\n040700              INVALID KEY GO TO 9400-PRINT-ERR.\n040800     MOVE SPACES TO ADD-PRINT-RECORD.\n040900     MOVE  ' VSAM DETAIL RECORDS WRITTEN OUT.' TO PRT-ONE.\n041000     MOVE DD-WRT-COUNT TO PRT-NUMBER.\n041100     WRITE ADD-PRINT-RECORD\n041200              INVALID KEY GO TO 9400-PRINT-ERR.\n041300     MOVE ALL '-' TO ADD-PRINT-RECORD.\n041400     WRITE ADD-PRINT-RECORD\n041500              INVALID KEY GO TO 9400-PRINT-ERR.\n041600     CLOSE REPORT-LIST-FILE.\n041700     GO TO 9999-END-OF-PROGRAM.\n041800\n041900 9300-OUT-SPACE.\n042000     DISPLAY '*** OUT OF SPACE IN PURGE ARRAY**'.\n042100     MOVE 16 TO RETURN-CODE\n042200     GO TO 9000-CLOSE-FILES.\n042300\n042400 9400-PRINT-ERR.\n042500     DISPLAY '*** ERROR WRITING TO RPTLIST  '.\n042600     MOVE 16 TO RETURN-CODE\n042700     GO TO 9000-CLOSE-FILES.\n042800\n042900 9999-END-OF-PROGRAM.\n043000     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT026J": {"ttr": 10753, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00G\\x01 \\x10O\\x01 \\x14\\x7f\\x141\\x00+\\x00:\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-26T14:31:47", "lines": 43, "newlines": 58, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT026J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*   REBUILD THE REPORT DETAIL FILE.  SORT RECORDS AND DELETE   *\n//*   OLD RECORDS.                                               *\n//****************************************************************\n//****************************************************************\n//*   DEFINE THE ONLINE DETAIL FILE                              *\n//****************************************************************\n//DEFIDX   EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//AMSDUMP  DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.NEW.REPORT.DETAIL.FILE)       -\n               CLUSTER PURGE\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.NEW.REPORT.DETAIL.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(18,0)                            -\n               CYL(50 50)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.NEW.REPORT.DETAIL.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(7334,11728)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.NEW.REPORT.DETAIL.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n//STEP1    EXEC PGM=REPT026,REGION=4M,PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=SHR\n//DTLADD   DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//DTLIN    DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//DTLNEW   DD DSN=OPT.CICS.NEW.REPORT.DETAIL.FILE,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(30,20))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(30,20))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(30,20))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(30,20))\n//SORTWK05 DD UNIT=SYSDA,SPACE=(CYL,(30,20))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT027": {"ttr": 10755, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00R\\x01 \\x10O\\x01 \\x14\\x8f\\x14\\x03\\x01A\\x02\\x10\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-27T14:03:52", "lines": 321, "newlines": 528, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT027.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600*  READS THE ONLINE REPORT UNDEX FILE, THE NEW INDEX\n000700*  RECORDS FILE AND DELETES ALL RECORDS THAT SHOULD BE\n000800*  DELETED AND CREATES A NEW INDEX FILE.\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT REPORT-INDEX-FILE   ASSIGN TO DA-IDXIN\n001400                         ORGANIZATION IS INDEXED\n001500                         ACCESS IS SEQUENTIAL\n001600                         FILE STATUS IS IDX-STATUS\n001700                         RECORD KEY IS OI-KEY.\n001800     SELECT NEW-REPORT-INDEX-FILE   ASSIGN TO DA-IDXNEW\n001900                         ORGANIZATION IS INDEXED\n002000                         ACCESS IS SEQUENTIAL\n002100                         FILE STATUS IS NEW-STATUS\n002200                     RECORD KEY IS NI-KEY IN NI-INDEX-RECORD.\n002300     SELECT ADD-INDEX-FILE     ASSIGN TO UT-S-IDXADD.\n002400     SELECT PURGE-RECORDS      ASSIGN TO UT-S-PURGED.\n002500     SELECT SORT-FILE          ASSIGN TO UT-S-SORTWK1.\n002600     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002700\n002800 DATA DIVISION.\n002900 FILE SECTION.\n003000\n003100 FD  NEW-REPORT-INDEX-FILE\n003200     RECORD CONTAINS 57.\n003300     COPY REPTB06 REPLACING ==:Z:== BY ==NI==.\n003400\n003500\n003600 FD  PURGE-RECORDS\n003700     RECORDING MODE F\n003800     RECORD CONTAINS 14.\n003900 01  PURGE-RECORD.\n004000     03 P-REPORT-ID            PIC X(8).\n004100     03 P-REPORT-DATE          PIC 9(6).\n004200\n004300 FD  REPORT-INDEX-FILE\n004400     RECORD CONTAINS 57.\n004500     COPY REPTB06 REPLACING ==:Z:== BY ==OI==.\n004600\n004700 FD  ADD-INDEX-FILE\n004800     RECORDING MODE F\n004900     RECORD CONTAINS 57.\n005000     COPY REPTB06 REPLACING ==:Z:== BY ==AI==.\n005100\n005200 SD  SORT-FILE\n005300     RECORD CONTAINS 57.\n005400     COPY REPTB06 REPLACING ==:Z:== BY ==SI==.\n005500\n005600 FD  REPORT-LIST-FILE\n005700     RECORDING MODE IS F\n005800     RECORD CONTAINS 132.\n005900 01  ADD-PRINT-RECORD.\n006000     03 PRT-ONE                 PIC X(50).\n006100     03 PRT-XYZ                 PIC X(82).\n006200     03 FILLER REDEFINES PRT-XYZ.\n006300        05 PRT-ID                  PIC X(8).\n006400        05 FILLER                  PIC X(1).\n006500        05 PRT-SID                 PIC X(8).\n006600        05 FILLER                  PIC X(1).\n006700        05 PRT-DATE                PIC 9(6).\n006800        05 FILLER                  PIC X(1).\n006900        05 PRT-BANK                PIC 9(3).\n007000        05 FILLER                  PIC X(1).\n007100        05 PRT-BRANCH              PIC 9(3).\n007200        05 FILLER                  PIC X(1).\n007300        05 PRT-SEQ                 PIC 9(7).\n007400        05 FILLER                  PIC X(42).\n007500      03 FILLER REDEFINES PRT-XYZ.\n007600         05 PRT-NUMBER              PIC ZZZ,Z99.\n007700         05 FILLER                  PIC X(75).\n007800\n007900 WORKING-STORAGE SECTION.\n008000 77  DD-DEL-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n008100 77  DD-DEL-I-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n008200 77  DD-ADD-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n008300 77  DD-TOT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n008400 77  DD-VSM-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n008500 77  DD-WRT-I-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n008600 77  DD-WRT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n008700 77  DD-ADD-I-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n008800 77  DD-OLD-I-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n008900 77  DD-SEQ            PIC S9(7)         VALUE ZERO.\n009000 77  I                 PIC S9(8) COMP    VALUE ZERO.\n009100 77  IDX-STATUS        PIC X(2)          VALUE 'ZZ'.\n009200 77  NEW-STATUS        PIC X(2)          VALUE 'ZZ'.\n009300 77  GOT-IT            PIC X(1)          VALUE ' '.\n009400 77  OK-OUT            PIC X(1)          VALUE ' '.\n009500 77  OLD-REPORT-ID     PIC X(8)          VALUE SPACES.\n009600 77  OLD-REPORT-DATE   PIC 9(6)          VALUE ZERO.\n009700\n009800 01  WORK-AREAS.\n009900     03  PURGE-ARRAY OCCURS 3000 TIMES.\n010000         05 WRK-REPORT-ID        PIC X(8).\n010100         05 WRK-REPORT-DATE      PIC 9(6).\n010200     COPY REPTB06 REPLACING ==:Z:== BY ==WK==.\n010300\n010400 LINKAGE SECTION.\n010500 01  LINK-WORK-AREA.\n010600     03  PARM-LENGTH   PIC S9(4) COMP.\n010700     03  JOB-PARM      PIC X(5).\n010800        88 DEBUG-ON  VALUE 'DEBUG'.\n010900        88 REPORT-ON VALUE 'REPRT'.\n011000\n011100 EJECT\n011200 PROCEDURE DIVISION USING LINK-WORK-AREA.\n011300 0000-MAIN-ROUTINE SECTION.\n011400\n011500 0100-OPEN-FILES.\n011600     OPEN INPUT PURGE-RECORDS, REPORT-INDEX-FILE,\n011700          ADD-INDEX-FILE.\n011800     OPEN OUTPUT NEW-REPORT-INDEX-FILE, REPORT-LIST-FILE.\n011900\n012000 0200-READ-PURGE-RECORDS.\n012100     ADD 1 TO I.\n012200     IF I = 3001\n012300        GO TO 9300-OUT-SPACE.\n012400     READ PURGE-RECORDS AT END GO TO 0900-CLOSE-PURGE-FILE.\n012500     MOVE P-REPORT-ID TO  WRK-REPORT-ID (I).\n012600     MOVE P-REPORT-DATE TO WRK-REPORT-DATE (I).\n012700     IF REPORT-ON\n012800        MOVE ALL '-' TO ADD-PRINT-RECORD\n012900        WRITE ADD-PRINT-RECORD\n013000              INVALID KEY GO TO 9400-PRINT-ERR\n013100     END-IF.\n013200     IF REPORT-ON\n013300        MOVE SPACES TO ADD-PRINT-RECORD\n013400        MOVE '--- TO BE DELETED=' TO PRT-ONE\n013500        MOVE P-REPORT-ID TO PRT-ID\n013600        MOVE P-REPORT-DATE TO PRT-DATE\n013700        WRITE ADD-PRINT-RECORD\n013800              INVALID KEY GO TO 9400-PRINT-ERR\n013900     END-IF.\n014000     GO TO 0200-READ-PURGE-RECORDS.\n014100\n014200 0900-CLOSE-PURGE-FILE.\n014300     MOVE 'ZZZZZZZZ' TO WRK-REPORT-ID (I).\n014400     MOVE 999999 TO WRK-REPORT-DATE (I).\n014500     CLOSE PURGE-RECORDS.\n014600     MOVE 1 TO I.\n014700\n014800 1000-SORT-INDEX-FILE SECTION.\n014900     SORT SORT-FILE\n015000        ON ASCENDING KEY SI-KEY\n015100        INPUT PROCEDURE\n015200          3000-START-SORT THRU 4000-END-SORT\n015300        OUTPUT PROCEDURE\n015400          5000-START-LOAD THRU 7000-END-LOAD.\n015500\n015600     IF SORT-RETURN NOT EQUAL 0\n015700        DISPLAY 'REPT026 - SORT ERROR, JOB ABENDED'\n015800        MOVE 16 TO RETURN-CODE.\n015900     GO TO 9000-CLOSE-FILES.\n016000\n016100 3000-START-SORT SECTION.\n016200     READ REPORT-INDEX-FILE AT END\n016300        GO TO 3400-DO-SEQ-FILE.\n016400     ADD 1 TO DD-VSM-COUNT.\n016500     IF OI-TYPE = 'K' AND\n016600        OI-REPORT-ID EQUAL WRK-REPORT-ID (I) AND\n016700        OI-REPORT-DATE EQUAL WRK-REPORT-DATE (I)\n016800        ADD 1 TO DD-DEL-COUNT, DD-DEL-I-COUNT\n016810        PERFORM 3350-PRINT-DELETE\n016900        GO TO 3000-START-SORT.\n017000     IF OI-TYPE = 'K' AND\n017100        (OI-REPORT-ID EQUAL OLD-REPORT-ID ) AND\n017200        (OI-REPORT-DATE EQUAL OLD-REPORT-DATE )\n017300        GO TO 3100-RELEASE-IT.\n017400     IF OI-TYPE = 'K'\n017500        GO TO 3130-CHECK-I-TYPE.\n017600     GO TO 3000-START-SORT.\n017700\n017800 3100-RELEASE-IT.\n017900     ADD 1 TO DD-TOT-COUNT.\n018000     ADD 1 TO DD-OLD-I-COUNT\n018100     RELEASE SI-INDEX-RECORD FROM OI-INDEX-RECORD.\n018200     GO TO 3000-START-SORT.\n018300\n018400 3130-CHECK-I-TYPE.\n018500     PERFORM 3300-FIND-I-REPORT-ID.\n018600     IF GOT-IT EQUAL 'Y'\n018700        ADD 1 TO DD-DEL-COUNT, DD-DEL-I-COUNT\n018710        PERFORM 3350-PRINT-DELETE\n018800        GO TO 3000-START-SORT.\n018900     GO TO 3100-RELEASE-IT.\n019000\n019100 3300-FIND-I-REPORT-ID.\n019200     MOVE 'N' TO OK-OUT.\n019300     MOVE OI-REPORT-ID TO OLD-REPORT-ID.\n019400     MOVE OI-REPORT-DATE TO OLD-REPORT-DATE.\n019500     PERFORM 3310-CHECK-IT VARYING I FROM 1 BY 1\n019600       UNTIL OK-OUT = 'Y'.\n019700     SUBTRACT 1 FROM I.\n019800\n019900 3310-CHECK-IT.\n020000     IF WRK-REPORT-ID (I) EQUAL OI-REPORT-ID AND\n020100        WRK-REPORT-DATE (I) EQUAL OI-REPORT-DATE\n020200        MOVE 'Y' TO OK-OUT, GOT-IT.\n020300     IF WRK-REPORT-ID (I) EQUAL 'ZZZZZZZZ' AND\n020400        WRK-REPORT-DATE (I) EQUAL 999999\n020500        MOVE 'N' TO GOT-IT\n020600        MOVE 'Y' TO OK-OUT.\n020700     IF I EQUAL 3000\n020800        MOVE 'N' TO GOT-IT\n020900        MOVE 'Y' TO OK-OUT.\n021000\n021002 3350-PRINT-DELETE.\n021010     IF REPORT-ON\n021020        MOVE SPACES TO ADD-PRINT-RECORD\n021030        MOVE '-  RECORD DELETED=' TO PRT-ONE\n021040        MOVE OI-REPORT-ID TO PRT-ID\n021041        MOVE OI-REPORT-SID TO PRT-SID\n021050        MOVE OI-REPORT-DATE TO PRT-DATE\n021060        WRITE ADD-PRINT-RECORD\n021080     END-IF.\n021090\n021100 3400-DO-SEQ-FILE.\n021200     CLOSE REPORT-INDEX-FILE.\n021300\n021400 3500-READ-SEQ-FILE.\n021500     READ ADD-INDEX-FILE AT END\n021600        GO TO 3900-CLOSE-ADD-FILE.\n021700     ADD 1 TO DD-ADD-COUNT.\n021800     ADD 1 TO DD-TOT-COUNT.\n021900     PERFORM 3600-RELEASE.\n022000     GO TO 3500-READ-SEQ-FILE.\n022100\n022200 3600-RELEASE.\n022300     ADD 1 TO DD-ADD-I-COUNT.\n022400     RELEASE SI-INDEX-RECORD FROM AI-INDEX-RECORD.\n022500\n022600 3900-CLOSE-ADD-FILE.\n022700     CLOSE ADD-INDEX-FILE.\n022800\n022900 4000-END-SORT. EXIT.\n023000\n023100 5000-START-LOAD SECTION.\n023200     RETURN SORT-FILE RECORD INTO WK-INDEX-RECORD\n023300         AT END GO TO 6900-CLOSE-FILE.\n023400     ADD 1 TO DD-WRT-COUNT.\n023500     PERFORM 5200-LOAD-FILE.\n023600     GO TO 5000-START-LOAD.\n023700\n023800 5200-LOAD-FILE.\n023900     ADD 1 TO DD-WRT-I-COUNT\n024000     MOVE WK-INDEX-RECORD TO NI-INDEX-RECORD\n024100     WRITE NI-INDEX-RECORD INVALID KEY GO TO 5298-ERROR.\n024200     IF NEW-STATUS NOT EQUAL ZERO\n024300        GO TO 5298-ERROR.\n024400\n024500 5298-ERROR.\n024600     DISPLAY '---ERROR WRITING TO OUTPUT VSAM FILE-----------'.\n024700     DISPLAY '*****START OF RECORD*********'.\n024800     DISPLAY WK-INDEX-RECORD.\n024900     DISPLAY 'VSAM STATUS=' NEW-STATUS.\n025000     DISPLAY '*****END OF RECORD*********'.\n025100     MOVE 16 TO RETURN-CODE.\n025200\n025300 6900-CLOSE-FILE.\n025400     CLOSE NEW-REPORT-INDEX-FILE.\n025500\n025600 7000-END-LOAD. EXIT.\n025700\n025800 9000-CLOSE-FILES SECTION.\n025900     MOVE ALL '-' TO ADD-PRINT-RECORD.\n026000     WRITE ADD-PRINT-RECORD.\n026100     MOVE SPACES TO ADD-PRINT-RECORD.\n026200     MOVE ' TOTAL VSAM INDEX RECORDS READ IN  ' TO PRT-ONE.\n026300     MOVE DD-VSM-COUNT TO PRT-NUMBER.\n026400     WRITE ADD-PRINT-RECORD.\n026500     MOVE ALL '-' TO ADD-PRINT-RECORD.\n026600     WRITE ADD-PRINT-RECORD.\n026610     MOVE SPACES TO ADD-PRINT-RECORD.\n026700     MOVE '   INDEX RECORDS KEPT FROM INPUT FILE ' TO PRT-ONE.\n026800     MOVE DD-OLD-I-COUNT TO PRT-NUMBER.\n026900     WRITE ADD-PRINT-RECORD.\n027000     MOVE ALL '-' TO ADD-PRINT-RECORD.\n027100     WRITE ADD-PRINT-RECORD.\n027110     MOVE SPACES TO ADD-PRINT-RECORD.\n027200     MOVE '   INDEX RECORDS DELETED.' TO PRT-ONE.\n027300     MOVE DD-DEL-I-COUNT TO PRT-NUMBER.\n027400     WRITE ADD-PRINT-RECORD.\n027500     MOVE ALL '-' TO ADD-PRINT-RECORD.\n027600     WRITE ADD-PRINT-RECORD.\n027610     MOVE SPACES TO ADD-PRINT-RECORD.\n027700     MOVE '   INDEX RECORDS ADDED.' TO PRT-ONE.\n027800     MOVE DD-ADD-I-COUNT TO PRT-NUMBER.\n027900     WRITE ADD-PRINT-RECORD.\n028000     MOVE ALL '-' TO ADD-PRINT-RECORD.\n028100     WRITE ADD-PRINT-RECORD.\n028110     MOVE SPACES TO ADD-PRINT-RECORD.\n028200     MOVE ' TOTAL INDEX RECORDS WRITTEN OUT.' TO PRT-ONE.\n028300     MOVE DD-WRT-I-COUNT TO PRT-NUMBER.\n028400     WRITE ADD-PRINT-RECORD.\n028500     MOVE ALL '-' TO ADD-PRINT-RECORD.\n028600     WRITE ADD-PRINT-RECORD.\n028700     CLOSE REPORT-LIST-FILE.\n028800     GO TO 9999-END-OF-PROGRAM.\n028900\n029000 9300-OUT-SPACE.\n029100     DISPLAY '*** OUT OF SPACE IN PURGE ARRAY**'.\n029200     MOVE 16 TO RETURN-CODE .\n029300     GO TO 9000-CLOSE-FILES.\n029400\n029500 9400-PRINT-ERR.\n029600     DISPLAY '*** ERROR WRITING TO PRINT-LIST-FILE  ***'.\n029700     MOVE 16 TO RETURN-CODE.\n029800     GO TO 9999-END-OF-PROGRAM.\n029900\n030000 9999-END-OF-PROGRAM.\n030100     STOP RUN.\n030200\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT027J": {"ttr": 10761, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00Q\\x01 \\x10O\\x01 \\x14\\x7f\\x141\\x00,\\x00;\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-26T14:31:51", "lines": 44, "newlines": 59, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT027J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*   REBUILD THE REPORT INDEX FILE.   SORT RECORDS AND DELETE   *\n//*   OLD RECORDS.                                               *\n//****************************************************************\n//****************************************************************\n//*   DEFINE THE ONLINE INDEX FILE                               *\n//****************************************************************\n//DEFIDX   EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//AMSDUMP  DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.NEW.REPORT.INDEX.FILE)        -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.NEW.REPORT.INDEX.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                                -\n               KEYS(31,0)                            -\n               SPEED                                  -\n               CYL(50 50)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.NEW.REPORT.INDEX.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)   -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.NEW.REPORT.INDEX.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n//STEP1    EXEC PGM=REPT027,REGION=4M,PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=SHR\n//IDXADD   DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//IDXIN    DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//IDXNEW   DD DSN=OPT.CICS.NEW.REPORT.INDEX.FILE,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT028": {"ttr": 10763, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x10\\x01 \\x10O\\x01 \\x14\\x8f\\x14\\x04\\x01H\\x02\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-27T14:04:10", "lines": 328, "newlines": 524, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT028.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600*  READS THE ONLINE REPORT HISTORY FILE, THE NEW HISTORY\n000700*  RECORDS FILE AND DELETES ALL RECORDS THAT SHOULD BE\n000800*  DELETED AND CREATES A NEW HISTORY FILE.\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT REPORT-HISTORY-FILE   ASSIGN TO DA-HSTIN\n001400                         ORGANIZATION IS INDEXED\n001500                         ACCESS IS SEQUENTIAL\n001600                         FILE STATUS IS HST-STATUS\n001700                         RECORD KEY IS OT-KEY.\n001800     SELECT NEW-REPORT-HISTORY-FILE   ASSIGN TO DA-HSTNEW\n001900                         ORGANIZATION IS INDEXED\n002000                         ACCESS IS SEQUENTIAL\n002100                         FILE STATUS IS NEW-STATUS\n002200                  RECORD KEY IS NT-KEY IN NT-HISTORY-RECORD.\n002300     SELECT ADD-HISTORY-FILE   ASSIGN TO UT-S-HSTADD.\n002400     SELECT PURGE-RECORDS      ASSIGN TO UT-S-PURGEH.\n002500     SELECT SORT-FILE          ASSIGN TO UT-S-SORTWK1.\n002510     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002600\n002700 DATA DIVISION.\n002800 FILE SECTION.\n002900\n003000 FD  NEW-REPORT-HISTORY-FILE\n003100     RECORD CONTAINS 100.\n003200     COPY REPTB07 REPLACING ==:Z:== BY ==NT==.\n003300\n003400 FD  PURGE-RECORDS\n003500     RECORDING MODE F\n003600     RECORD CONTAINS 14.\n003700 01  PURGE-RECORD.\n003800     03 P-REPORT-ID            PIC X(8).\n003900     03 P-REPORT-DATE          PIC 9(6).\n004000\n004100 FD  REPORT-HISTORY-FILE\n004200     RECORD CONTAINS 100.\n004300     COPY REPTB07 REPLACING ==:Z:== BY ==OT==.\n004400\n004500 FD  ADD-HISTORY-FILE\n004600     RECORDING MODE F\n004700     RECORD CONTAINS 100.\n004800     COPY REPTB07 REPLACING ==:Z:== BY ==AT==.\n004900\n005000 SD  SORT-FILE\n005100     RECORD CONTAINS 100.\n005200     COPY REPTB07 REPLACING ==:Z:== BY ==ST==.\n005210\n005220 FD  REPORT-LIST-FILE\n005230     RECORDING MODE IS F\n005240     RECORD CONTAINS 132.\n005250 01  ADD-PRINT-RECORD.\n005260     03 PRT-ONE                 PIC X(50).\n005270     03 PRT-XYZ                 PIC X(82).\n005280     03 FILLER REDEFINES PRT-XYZ.\n005290        05 PRT-ID                  PIC X(8).\n005291        05 FILLER                  PIC X(1).\n005292        05 PRT-SID                 PIC X(8).\n005293        05 FILLER                  PIC X(1).\n005294        05 PRT-DATE                PIC 9(6).\n005295        05 FILLER                  PIC X(1).\n005296        05 PRT-BANK                PIC 9(3).\n005297        05 FILLER                  PIC X(1).\n005298        05 PRT-BRANCH              PIC 9(3).\n005299        05 FILLER                  PIC X(1).\n005300        05 PRT-SEQ                 PIC 9(7).\n005301        05 FILLER                  PIC X(42).\n005302      03 FILLER REDEFINES PRT-XYZ.\n005303         05 PRT-NUMBER              PIC ZZZ,Z99.\n005304         05 FILLER                  PIC X(75).\n005310\n005400 WORKING-STORAGE SECTION.\n005500 77  WK-ARRAY-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n005600 77  DD-DEL-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n005700 77  DD-DEL-T-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n005800 77  DD-ADD-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n005900 77  DD-TOT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n006000 77  DD-VSM-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n006100 77  DD-WRT-T-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n006200 77  DD-WRT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n006300 77  DD-ADD-T-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n006400 77  DD-OLD-T-COUNT    PIC S9(7) COMP-3  VALUE ZERO.\n006500 77  DD-SEQ            PIC S9(7)         VALUE ZERO.\n006600 77  I                 PIC S9(8) COMP    VALUE ZERO.\n006700 77  HST-STATUS        PIC X(2)          VALUE 'ZZ'.\n006800 77  NEW-STATUS        PIC X(2)          VALUE 'ZZ'.\n006900 77  GOT-IT            PIC X(1)          VALUE ' '.\n007000 77  OK-OUT            PIC X(1)          VALUE ' '.\n007100 77  OLD-REPORT-ID     PIC X(8)          VALUE SPACES.\n007200 77  OLD-REPORT-DATE   PIC 9(6)          VALUE ZERO.\n007300\n007400 01  WORK-AREAS.\n007500     03  PURGE-ARRAY OCCURS 3000 TIMES.\n007600         05 WRK-REPORT-ID        PIC X(8).\n007700         05 WRK-REPORT-DATE      PIC 9(6).\n007800     COPY REPTB07 REPLACING ==:Z:== BY ==WK==.\n007900\n007910 LINKAGE SECTION.\n007920 01  LINK-WORK-AREA.\n007930     03  PARM-LENGTH   PIC S9(4) COMP.\n007940     03  JOB-PARM      PIC X(5).\n007950        88 DEBUG-ON  VALUE 'DEBUG'.\n007960        88 REPORT-ON VALUE 'REPRT'.\n007970\n007980 EJECT\n007990 PROCEDURE DIVISION USING LINK-WORK-AREA.\n008200 0000-MAIN-ROUTINE SECTION.\n008300\n008400 0100-OPEN-FILES.\n008500     OPEN INPUT PURGE-RECORDS, REPORT-HISTORY-FILE,\n008600          ADD-HISTORY-FILE.\n008700     OPEN OUTPUT NEW-REPORT-HISTORY-FILE, REPORT-LIST-FILE.\n008800\n008900 0200-READ-PURGE-RECORDS.\n009000     ADD 1 TO I.\n009100     IF I = WK-ARRAY-COUNT\n009200        GO TO 9300-OUT-SPACE.\n009300     READ PURGE-RECORDS AT END GO TO 0900-CLOSE-PURGE-FILE.\n009400     MOVE P-REPORT-ID TO  WRK-REPORT-ID (I).\n009500     MOVE P-REPORT-DATE TO WRK-REPORT-DATE (I).\n009510     IF REPORT-ON\n009520        MOVE ALL '-' TO ADD-PRINT-RECORD\n009530        WRITE ADD-PRINT-RECORD\n009550     END-IF.\n009560     IF REPORT-ON\n009570        MOVE SPACES TO ADD-PRINT-RECORD\n009580        MOVE '--- TO BE DELETED=' TO PRT-ONE\n009590        MOVE P-REPORT-ID TO PRT-ID\n009591        MOVE P-REPORT-DATE TO PRT-DATE\n009592        WRITE ADD-PRINT-RECORD\n009594     END-IF.\n009600     GO TO 0200-READ-PURGE-RECORDS.\n009700\n009800 0900-CLOSE-PURGE-FILE.\n009900     MOVE 'ZZZZZZZZ' TO WRK-REPORT-ID (I).\n010000     MOVE 999999 TO WRK-REPORT-DATE (I).\n010100     CLOSE PURGE-RECORDS.\n010200     MOVE 1 TO I.\n010300\n010400 1000-SORT-HISTORY-FILE SECTION.\n010500     SORT SORT-FILE\n010600        ON ASCENDING KEY ST-KEY\n010700        INPUT PROCEDURE\n010800          3000-START-SORT THRU 4000-END-SORT\n010900        OUTPUT PROCEDURE\n011000          5000-START-LOAD THRU 7000-END-LOAD.\n011100\n011200     IF SORT-RETURN NOT EQUAL 0\n011300        DISPLAY 'REPT027 - SORT ERROR, JOB ABENDED'\n011400        MOVE 16 TO RETURN-CODE.\n011500     GO TO 9000-CLOSE-FILES.\n011600\n011700 3000-START-SORT SECTION.\n011800     READ REPORT-HISTORY-FILE AT END\n011900        GO TO 3400-DO-SEQ-FILE.\n012000     ADD 1 TO DD-VSM-COUNT.\n012100     IF OT-TYPE = 'T' AND\n012200        OT-REPORT-ID EQUAL WRK-REPORT-ID (I) AND\n012300        OT-REPORT-DATE EQUAL WRK-REPORT-DATE (I)\n012400        ADD 1 TO DD-DEL-COUNT, DD-DEL-T-COUNT\n012410        PERFORM 3350-PRINT-DELETE\n012500        GO TO 3000-START-SORT.\n012600     IF OT-TYPE = 'T' AND\n012700        (OT-REPORT-ID EQUAL OLD-REPORT-ID ) AND\n012800        (OT-REPORT-DATE EQUAL OLD-REPORT-DATE )\n012900        GO TO 3100-RELEASE-IT.\n013000     IF OT-TYPE = 'T'\n013100        GO TO 3130-CHECK-T-TYPE.\n013200     GO TO 3000-START-SORT.\n013300\n013400 3100-RELEASE-IT.\n013500     ADD 1 TO DD-TOT-COUNT.\n013600     ADD 1 TO DD-OLD-T-COUNT\n013700     RELEASE ST-HISTORY-RECORD FROM OT-HISTORY-RECORD.\n013800     GO TO 3000-START-SORT.\n013900\n014000 3130-CHECK-T-TYPE.\n014100     PERFORM 3300-FIND-T-REPORT-ID.\n014200     IF GOT-IT EQUAL 'Y'\n014300        ADD 1 TO DD-DEL-COUNT, DD-DEL-T-COUNT\n014310        PERFORM 3350-PRINT-DELETE\n014400        GO TO 3000-START-SORT.\n014500     GO TO 3100-RELEASE-IT.\n014600\n014700 3300-FIND-T-REPORT-ID.\n014800     MOVE 'N' TO OK-OUT.\n014900     MOVE OT-REPORT-ID TO OLD-REPORT-ID.\n015000     MOVE OT-REPORT-DATE TO OLD-REPORT-DATE.\n015100     PERFORM 3310-CHECK-IT VARYING I FROM 1 BY 1\n015200       UNTIL OK-OUT = 'Y'.\n015300     SUBTRACT 1 FROM I.\n015400\n015500 3310-CHECK-IT.\n015600     IF WRK-REPORT-ID (I) EQUAL OT-REPORT-ID AND\n015700        WRK-REPORT-DATE (I) EQUAL OT-REPORT-DATE\n015800        MOVE 'Y' TO OK-OUT, GOT-IT.\n015900     IF WRK-REPORT-ID (I) EQUAL 'ZZZZZZZZ' AND\n016000        WRK-REPORT-DATE (I) EQUAL 999999\n016100        MOVE 'N' TO GOT-IT\n016200        MOVE 'Y' TO OK-OUT.\n016300     IF I EQUAL 3000\n016400        MOVE 'N' TO GOT-IT\n016500        MOVE 'Y' TO OK-OUT.\n016510\n016520 3350-PRINT-DELETE.\n016530     IF REPORT-ON\n016540        MOVE SPACES TO ADD-PRINT-RECORD\n016550        MOVE '-  RECORD DELETED=' TO PRT-ONE\n016560        MOVE OT-REPORT-ID TO PRT-ID\n016570        MOVE OT-REPORT-SID TO PRT-SID\n016580        MOVE OT-REPORT-DATE TO PRT-DATE\n016590        WRITE ADD-PRINT-RECORD\n016591     END-IF.\n016600\n016700 3400-DO-SEQ-FILE.\n016800     CLOSE REPORT-HISTORY-FILE.\n016900\n017000 3500-READ-SEQ-FILE.\n017100     READ ADD-HISTORY-FILE AT END\n017200        GO TO 3900-CLOSE-ADD-FILE.\n017300     ADD 1 TO DD-ADD-COUNT.\n017400     ADD 1 TO DD-TOT-COUNT.\n017500     PERFORM 3600-RELEASE.\n017600     GO TO 3500-READ-SEQ-FILE.\n017700\n017800 3600-RELEASE.\n017900     ADD 1 TO DD-ADD-T-COUNT.\n018000     RELEASE ST-HISTORY-RECORD FROM AT-HISTORY-RECORD.\n018100\n018200 3900-CLOSE-ADD-FILE.\n018300     CLOSE ADD-HISTORY-FILE.\n018400\n018500 4000-END-SORT. EXIT.\n018600\n018700 5000-START-LOAD SECTION.\n018800     RETURN SORT-FILE RECORD INTO WK-HISTORY-RECORD\n018900         AT END GO TO 6900-CLOSE-FILE.\n019000     ADD 1 TO DD-WRT-COUNT.\n019100     PERFORM 5200-LOAD-FILE.\n019200     GO TO 5000-START-LOAD.\n019300\n019400 5200-LOAD-FILE.\n019500     ADD 1 TO DD-WRT-T-COUNT\n019600     MOVE WK-HISTORY-RECORD TO NT-HISTORY-RECORD\n019700     WRITE NT-HISTORY-RECORD INVALID KEY GO TO 5298-ERROR.\n019800     IF NEW-STATUS NOT EQUAL ZERO\n019900        GO TO 5298-ERROR.\n020000\n020100 5298-ERROR.\n020200     DISPLAY '---ERROR WRITING TO OUTPUT VSAM FILE-----------'.\n020300     DISPLAY '*****START OF RECORD*********'.\n020400     DISPLAY WK-HISTORY-RECORD.\n020500     DISPLAY 'VSAM FILE STATUS=' NEW-STATUS.\n020600     DISPLAY '*****END OF RECORD*********'.\n020700     MOVE 16 TO RETURN-CODE.\n020800\n020900 6900-CLOSE-FILE.\n021000     CLOSE NEW-REPORT-HISTORY-FILE.\n021100\n021200 7000-END-LOAD. EXIT.\n021300\n021400 9000-CLOSE-FILES SECTION.\n021500*    DISPLAY '-----------------------------------------------'.\n021600*    DISPLAY DD-VSM-COUNT ' TOTAL VSAM HISTORY RECORDS READ IN'.\n021700*    DISPLAY '-----------------------------------------------'.\n021800*    DISPLAY DD-OLD-T-COUNT ' T HISTORY KEPT FROM INPUT FILE.'.\n021900*    DISPLAY '-----------------------------------------------'.\n022200*    DISPLAY DD-DEL-COUNT ' TOTAL HISTORY RECORDS DELETED.'.\n022300*    DISPLAY DD-DEL-T-COUNT '     T HISTORY RECORDS DELETED.'.\n022400*    DISPLAY '-----------------------------------------------'.\n022500*    DISPLAY DD-ADD-COUNT ' TOTAL HISTORY RECORDS ADDED.'.\n022600*    DISPLAY DD-ADD-T-COUNT '     T HISTORY RECORDS ADDED.'.\n022700*    DISPLAY '------------------------------------------------'.\n022800*    DISPLAY DD-WRT-COUNT ' VSAM HISTORY RECORDS WRITTEN OUT.'\n022900*    DISPLAY DD-WRT-T-COUNT '     T HISTORY RECORDS WRITTEN OUT.'\n023000*    DISPLAY '------------------------------------------------'.\n023010     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023020     WRITE ADD-PRINT-RECORD.\n023030     MOVE SPACES TO ADD-PRINT-RECORD.\n023040     MOVE ' TOTAL VSAM HISTORY RECORDS READ IN  ' TO PRT-ONE.\n023050     MOVE DD-VSM-COUNT TO PRT-NUMBER.\n023060     WRITE ADD-PRINT-RECORD.\n023070     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023080     WRITE ADD-PRINT-RECORD.\n023090     MOVE SPACES TO ADD-PRINT-RECORD.\n023091     MOVE '   HISTORY RECORDS KEPT FROM INPUT FILE ' TO PRT-ONE.\n023092     MOVE DD-OLD-T-COUNT TO PRT-NUMBER.\n023093     WRITE ADD-PRINT-RECORD.\n023094     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023095     WRITE ADD-PRINT-RECORD.\n023096     MOVE SPACES TO ADD-PRINT-RECORD.\n023097     MOVE '   HISTORY RECORDS DELETED.' TO PRT-ONE.\n023098     MOVE DD-DEL-T-COUNT TO PRT-NUMBER.\n023099     WRITE ADD-PRINT-RECORD.\n023100     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023101     WRITE ADD-PRINT-RECORD.\n023102     MOVE SPACES TO ADD-PRINT-RECORD.\n023103     MOVE '   HISTORY RECORDS ADDED.' TO PRT-ONE.\n023104     MOVE DD-ADD-T-COUNT TO PRT-NUMBER.\n023105     WRITE ADD-PRINT-RECORD.\n023106     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023107     WRITE ADD-PRINT-RECORD.\n023108     MOVE SPACES TO ADD-PRINT-RECORD.\n023109     MOVE ' TOTAL HISTORY RECORDS WRITTEN OUT.' TO PRT-ONE.\n023110     MOVE DD-WRT-T-COUNT TO PRT-NUMBER.\n023111     WRITE ADD-PRINT-RECORD.\n023112     MOVE ALL '-' TO ADD-PRINT-RECORD.\n023113     WRITE ADD-PRINT-RECORD.\n023114     CLOSE REPORT-LIST-FILE.\n023120     GO TO 9999-END-OF-PROGRAM.\n023200\n023300 9300-OUT-SPACE.\n023400     DISPLAY '*** OUT OF SPACE IN PURGE ARRAY**'.\n023500     MOVE 16 TO RETURN-CODE\n023600     GO TO 9000-CLOSE-FILES.\n023700\n023800 9999-END-OF-PROGRAM.\n023900     STOP RUN.\n024000\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT028J": {"ttr": 11013, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00V\\x01 \\x10O\\x01 \\x14\\x7f\\x141\\x00+\\x002\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-26T14:31:56", "lines": 43, "newlines": 50, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT028J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*   REBUILD THE REPORT HISTORY FILE.   SORT RECORDS AND DELETE   *\n//*   OLD RECORDS.                                               *\n//****************************************************************\n//****************************************************************\n//*   DEFINE THE ONLINE HISTORY FILE                             *\n//****************************************************************\n//DEFIDX   EXEC PGM=IDCAMS,REGION=750K,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n     DELETE    (OPT.CICS.NEW.REPORT.HISTORY.FILE)      -\n               CLUSTER\n     DEFINE    CLUSTER                                -\n              ( NAME(OPT.CICS.NEW.REPORT.HISTORY.FILE) -\n               VOLUMES(XXXXXX)                        -\n               INDEXED                              -\n               KEYS(31,0)                            -\n               SPEED                                  -\n               CYL(1 1)                          -\n               FREESPACE(00,00)                       -\n               REUSE )                              -\n      DATA    ( NAME(OPT.CICS.NEW.REPORT.HISTORY.FILE.DATA) -\n               SHAREOPTIONS(2)                      -\n               RECORDSIZE(100,120)  -\n               CONTROLINTERVALSIZE(16384) )           -\n      INDEX   ( NAME(OPT.CICS.NEW.REPORT.HISTORY.FILE.INDEX) -\n               SHAREOPTIONS(2) )\n/*\n//STEP1    EXEC PGM=REPT028,REGION=4M,PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//PURGEH   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=SHR\n//HSTADD   DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=SHR\n//HSTIN    DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//HSTNEW   DD DSN=OPT.CICS.NEW.REPORT.HISTORY.FILE,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(10,10))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT126": {"ttr": 11015, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x18\\x01 \\x10O\\x01 \\x14\\x8f\\x14\\x04\\x00\\x96\\x00k\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-27T14:04:18", "lines": 150, "newlines": 107, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT126.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500\n000600*  READS THE PURGE-RECORDS FILE AND DELETES RECORDS\n000700*  THE MATCHING RECORDS FROM THE ONLINE REPORT DETAIL FILE.\n000800*\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT REPORT-DETAIL-FILE  ASSIGN TO DA-DTLIN\n001400                         ORGANIZATION IS INDEXED\n001500                         ACCESS IS DYNAMIC\n001600                         FILE STATUS IS DTL-STATUS\n001700                         RECORD KEY IS D-KEY.\n001800     SELECT PURGE-RECORDS      ASSIGN TO UT-S-PURGED.\n001900     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002000\n002100 DATA DIVISION.\n002200 FILE SECTION.\n002300\n002400 FD  PURGE-RECORDS\n002500     RECORDING MODE IS F\n002600     RECORD CONTAINS 14.\n002700 01  PURGE-RECORD.\n002800     03 P-REPORT-ID            PIC X(8).\n002900     03 P-REPORT-DATE          PIC 9(6).\n003000\n003100 FD  REPORT-DETAIL-FILE\n003200     RECORD CONTAINS 153 TO 11724.\n003300     COPY REPTB05 REPLACING ==:Z:== BY ==D==.\n003400\n003500 FD  REPORT-LIST-FILE\n003600     RECORDING MODE IS F\n003700     RECORD CONTAINS 132.\n003800 01  ADD-PRINT-RECORD.\n003900     03 PRT-ONE                 PIC X(50).\n004000     03 PRT-XYZ                 PIC X(82).\n004100     03 X-FIL REDEFINES PRT-XYZ.\n004200        05 PRT-ID                  PIC X(8).\n004300        05 FILLER                  PIC X(1).\n004400        05 PRT-DATE                PIC 9(6).\n004500        05 FILLER                  PIC X(1).\n004600        05 PRT-SEQ                 PIC 9(7).\n004700        05 FILLER                  PIC X(59).\n004800     03 X-FILL REDEFINES PRT-XYZ.\n004900        05 PRT-NUMBER              PIC ZZZ,Z99.\n005000        05 FILLER                  PIC X(75).\n005100\n005200 WORKING-STORAGE SECTION.\n005300 77  DD-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n005400 77  DI-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n005500 77  DD-SEQ        PIC S9(7)         VALUE ZERO.\n005600 77  DTL-STATUS    PIC X(2)          VALUE 'ZZ'.\n005700\n005800 EJECT\n005900\n006000 LINKAGE SECTION.\n006100 01  LINK-WORK-AREA.\n006200     03  PARM-LENGTH   PIC S9(4) COMP.\n006300     03  JOB-PARM      PIC X(5).\n006400        88 DEBUG-ON  VALUE 'DEBUG'.\n006500        88 REPORT-ON VALUE 'REPRT'.\n006600\n006700 EJECT\n006800 PROCEDURE DIVISION USING LINK-WORK-AREA.\n006900 0000-MAIN-ROUTINE.\n007000\n007100     OPEN OUTPUT REPORT-LIST-FILE.\n007200     OPEN INPUT PURGE-RECORDS\n007300          I-O REPORT-DETAIL-FILE.\n007310     IF REPORT-ON\n007320        MOVE ALL '-' TO ADD-PRINT-RECORD\n007330        WRITE ADD-PRINT-RECORD\n007340     END-IF.\n007400\n007500 2000-READ-PURGE-RECORD.\n007600     READ PURGE-RECORDS AT END GO TO 9000-CLOSE-FILES.\n007700\n007800 3100-PURGE-DETAIL-RECORDS.\n007900     MOVE LOW-VALUES TO D-RECORD.\n008000     MOVE P-REPORT-DATE TO D-REPORT-DATE.\n008100     MOVE P-REPORT-ID TO D-REPORT-ID.\n008200     START REPORT-DETAIL-FILE KEY IS GREATER THAN D-KEY\n008300        INVALID KEY GO TO 9300-BAD-START.\n008400     IF DTL-STATUS NOT EQUAL ZERO\n008500        GO TO 9300-BAD-START.\n008600\n008700 3150-READ-DETAIL-FILE.\n008800     READ REPORT-DETAIL-FILE NEXT RECORD AT END\n008900        GO TO 2000-READ-PURGE-RECORD.\n009000     IF (D-REPORT-ID EQUAL P-REPORT-ID) AND\n009100        (D-REPORT-DATE EQUAL P-REPORT-DATE )\n009200        GO TO 3200-DELETE-RECORD.\n009300     GO TO 2000-READ-PURGE-RECORD.\n009400\n009500 3200-DELETE-RECORD.\n009600     MOVE D-SEQ TO DD-SEQ.\n009700     IF REPORT-ON\n010000        MOVE SPACES TO ADD-PRINT-RECORD\n010100        MOVE '  RECORD DELETED ---' TO PRT-ONE\n010110        MOVE D-REPORT-ID TO PRT-ID\n010200        MOVE D-REPORT-DATE TO PRT-DATE\n010300        MOVE D-SEQ TO PRT-SEQ\n010400        WRITE ADD-PRINT-RECORD\n010500     END-IF.\n010600     IF DEBUG-ON\n010700       DISPLAY D-REPORT-DATE ' ' D-REPORT-ID ' ' DD-SEQ.\n010800     ADD 1 TO DD-COUNT.\n010900     DELETE REPORT-DETAIL-FILE RECORD  INVALID KEY\n011000        GO TO 9920-DETAIL-FILE.\n011100     IF DTL-STATUS NOT EQUAL ZERO\n011200        GO TO 9920-DETAIL-FILE.\n011300     GO TO 3150-READ-DETAIL-FILE.\n011400\n011500\n011600 9000-CLOSE-FILES.\n011700     IF REPORT-ON\n011800        MOVE ALL '-' TO ADD-PRINT-RECORD\n011900        WRITE ADD-PRINT-RECORD\n012000        MOVE SPACES TO ADD-PRINT-RECORD\n012100        MOVE ' TOTAL DETAIL RECORDS DELETED.' TO PRT-ONE\n012200        MOVE DD-COUNT TO PRT-NUMBER\n012300        WRITE ADD-PRINT-RECORD\n012400        MOVE ALL '-' TO ADD-PRINT-RECORD\n012500        WRITE ADD-PRINT-RECORD\n012600     END-IF.\n012700     CLOSE PURGE-RECORDS\n012800           REPORT-DETAIL-FILE.\n012900     GO TO 9999-END-OF-PROGRAM.\n013000\n013100 9300-BAD-START.\n013200     DISPLAY '*** INVALID START BROWSE ON FILE DTLIN**'.\n013300     DISPLAY 'VSAM STATUS CODE=' DTL-STATUS.\n013400     MOVE 16 TO RETURN-CODE\n013500     GO TO 9000-CLOSE-FILES.\n013600\n013700 9920-DETAIL-FILE.\n013800     DISPLAY '*** WRITE ERROR ON DETAIL-FILE ***'.\n013900     DISPLAY 'VSAM STATUS CODE=' DTL-STATUS.\n014000     MOVE 14 TO RETURN-CODE\n014100     GO TO 9000-CLOSE-FILES.\n014200\n014300 9999-END-OF-PROGRAM.\n014400     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT126J": {"ttr": 11019, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\"\\x01 \\x13o\\x01 \\x13\\x7f\\x107\\x00\\x0b\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-16T10:37:22", "lines": 11, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT126J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*   DELETE RECORDS IN THE CICS ONLINE DETAIL FILE              *\n//****************************************************************\n//STEP126  EXEC PGM=REPT126,COND=(8,LT),PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//DTLIN    DD DSN=OPT.CICS.REPORT.DETAIL.FILE,DISP=SHR\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT127": {"ttr": 11021, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x16\\x00'\\x01 \\x10O\\x01 \\x14\\x8f\\x14\\x04\\x00\\xb3\\x01\\x0e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.22", "flags": 0, "createdate": "2020-04-13T00:00:00", "modifydate": "2020-05-27T14:04:27", "lines": 179, "newlines": 270, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT127.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500*\n000600*  THIS PROGRAMS READS THE PURGED RECORDS FILE AND DELETES\n000700*  ALL OF THE MATCHING 'K' INDEX RECORDS\n000800*  FROM THE ONLINE INDEX FILE.\n000900*\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n001000 ENVIRONMENT DIVISION.\n001100 CONFIGURATION SECTION.\n001200 INPUT-OUTPUT SECTION.\n001300 FILE-CONTROL.\n001400     SELECT REPORT-INDEX-FILE   ASSIGN TO DA-IDXIN\n001500                         ORGANIZATION IS INDEXED\n001600                         ACCESS IS DYNAMIC\n001700                         FILE STATUS IS IDX-STATUS\n001800                         RECORD KEY IS K-KEY.\n001900     SELECT PURGE-RECORDS    ASSIGN TO UT-S-PURGEDI.\n001910     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002000\n002100 DATA DIVISION.\n002200 FILE SECTION.\n002300\n002400 FD  PURGE-RECORDS\n002500     RECORDING MODE F\n002600     BLOCK CONTAINS 0 RECORDS\n002700     LABEL RECORDS ARE STANDARD\n002800     RECORD CONTAINS 22.\n002900 01  PURGE-RECORD.\n003000     03 PI-REPORT-ID           PIC X(8).\n003100     03 PI-REPORT-SID          PIC X(8).\n003200     03 PI-REPORT-DATE         PIC 9(6).\n003300\n003400 FD  REPORT-INDEX-FILE\n003500     RECORD CONTAINS 57.\n003600     COPY REPTB06 REPLACING ==:Z:== BY ==K==.\n003700\n003701 FD  REPORT-LIST-FILE\n003702     RECORDING MODE IS F\n003703     RECORD CONTAINS 132.\n003704 01  ADD-PRINT-RECORD.\n003705     03 PRT-ONE                 PIC X(50).\n003706     03 PRT-XYZ                 PIC X(82).\n003707     03 X-FIL REDEFINES PRT-XYZ.\n003708        05 PRT-ID                  PIC X(8).\n003709        05 FILLER                  PIC X(1).\n003710        05 PRT-SID                 PIC X(8).\n003711        05 FILLER                  PIC X(1).\n003712        05 PRT-DATE                PIC 9(6).\n003713        05 FILLER                  PIC X(1).\n003714        05 PRT-BANK                PIC 9(3).\n003715        05 FILLER                  PIC X(1).\n003716        05 PRT-BRANCH              PIC 9(3).\n003717        05 FILLER                  PIC X(1).\n003718        05 PRT-SEQ                 PIC 9(7).\n003719        05 FILLER                  PIC X(42).\n003720     03 X-FILL REDEFINES PRT-XYZ.\n003721        05 PRT-NUMBER              PIC ZZZ,Z99.\n003722        05 FILLER                  PIC X(75).\n003730\n003800 WORKING-STORAGE SECTION.\n003900 77  KK-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n004000 77  SUB           PIC S9(4) COMP    VALUE ZERO.\n004100 77  II-SEQ        PIC S9(7)         VALUE ZERO.\n004200 77  IDX-STATUS    PIC X(2)          VALUE 'ZZ'.\n004300\n004400 EJECT\n004410 LINKAGE SECTION.\n004420 01  LINK-WORK-AREA.\n004430     03  PARM-LENGTH   PIC S9(4) COMP.\n004440     03  JOB-PARM      PIC X(5).\n004450        88 DEBUG-ON  VALUE 'DEBUG'.\n004460        88 REPORT-ON VALUE 'REPRT'.\n004470\n004480 EJECT\n004490 PROCEDURE DIVISION USING LINK-WORK-AREA.\n004600 0000-MAIN-ROUTINE.\n004700\n004710     OPEN OUTPUT REPORT-LIST-FILE.\n004800     OPEN INPUT PURGE-RECORDS\n004900          I-O REPORT-INDEX-FILE.\n004910     IF REPORT-ON\n004920        MOVE ALL '-' TO ADD-PRINT-RECORD\n004930        WRITE ADD-PRINT-RECORD\n004940     END-IF.\n005000\n005100 2000-READ-PURGE-RECORD.\n005200     READ PURGE-RECORDS AT END GO TO 9000-CLOSE-FILES.\n005210     IF DEBUG-ON\n005220        DISPLAY '2000-READ-PURGE-RECORD'\n005230        DISPLAY '   PI-REPORT-ID=' PI-REPORT-ID\n005240        DISPLAY '  PI-REPORT-SID=' PI-REPORT-SID\n005250        DISPLAY ' PI-REPORT-DATE=' PI-REPORT-DATE.\n005300\n005400 3100-PURGE-INDEX-RECORDS.\n005500     MOVE LOW-VALUES TO K-INDEX-RECORD.\n005510     MOVE PI-REPORT-ID TO K-REPORT-ID.\n005520     MOVE PI-REPORT-SID TO K-REPORT-SID.\n005600     MOVE PI-REPORT-DATE TO K-REPORT-DATE.\n005900     MOVE 'K' TO K-TYPE.\n006000     START REPORT-INDEX-FILE KEY IS GREATER THAN K-KEY\n006100        INVALID KEY GO TO 9300-BAD-START.\n006200     IF IDX-STATUS NOT EQUAL ZERO\n006300        GO TO 9300-BAD-START.\n006400\n006500 3150-READ-INDEX-FILE.\n006600     READ REPORT-INDEX-FILE NEXT RECORD AT END\n006700        GO TO 2000-READ-PURGE-RECORD.\n006710     IF DEBUG-ON\n006720        DISPLAY '3150-READ-INDEX-FILE'\n006730        DISPLAY '  K-REPORT-ID= ' K-REPORT-ID\n006740        DISPLAY '  K-REPORT-SID= ' K-REPORT-SID\n006750        DISPLAY '  K-REPORT-DATE= ' K-REPORT-DATE\n006760        DISPLAY '  K-BANK= ' K-BANK\n006770        DISPLAY '  K-BRANCH= ' K-BRANCH\n006780        DISPLAY '  K-SEQ= ' K-SEQ\n006790     END-IF.\n006800     IF (K-REPORT-ID EQUAL PI-REPORT-ID) AND\n006810        (K-REPORT-SID EQUAL PI-REPORT-SID) AND\n006900        (K-REPORT-DATE EQUAL PI-REPORT-DATE )\n007000        GO TO 3200-DELETE-RECORD.\n007100     GO TO 2000-READ-PURGE-RECORD.\n007200\n007300 3200-DELETE-RECORD.\n007400     MOVE K-SEQ TO II-SEQ.\n007410     IF DEBUG-ON\n007500        DISPLAY ' TYPE -K- INDEX RECORD = '\n007600             K-REPORT-DATE ' ' K-REPORT-ID ' '\n007700             K-REPORT-SID ' ' II-SEQ.\n007800     ADD 1 TO KK-COUNT.\n007810     IF REPORT-ON\n007820        MOVE SPACES TO ADD-PRINT-RECORD\n007830        MOVE '  RECORD DELETED ---' TO PRT-ONE\n007840        MOVE K-REPORT-ID TO PRT-ID\n007841        MOVE K-REPORT-SID TO PRT-SID\n007850        MOVE K-REPORT-DATE TO PRT-DATE\n007860        MOVE K-BANK TO PRT-BANK\n007861        MOVE K-BRANCH TO PRT-BRANCH\n007862        MOVE K-SEQ TO PRT-SEQ\n007870        WRITE ADD-PRINT-RECORD\n007880     END-IF.\n007900     DELETE REPORT-INDEX-FILE RECORD   INVALID KEY\n008000        GO TO 9920-INDEX-FILE.\n008100     IF IDX-STATUS NOT EQUAL ZERO\n008200        GO TO 9920-INDEX-FILE.\n008300     GO TO 3150-READ-INDEX-FILE.\n008400\n008500 9000-CLOSE-FILES.\n008510     IF REPORT-ON\n008520        MOVE ALL '-' TO ADD-PRINT-RECORD\n008530        WRITE ADD-PRINT-RECORD\n008540        MOVE SPACES TO ADD-PRINT-RECORD\n008550        MOVE ' TOTAL INDEX TYPE \"K\" RECORDS DELETED -' TO PRT-ONE\n008560        MOVE KK-COUNT TO PRT-NUMBER\n008570        WRITE ADD-PRINT-RECORD\n008580        MOVE ALL '-' TO ADD-PRINT-RECORD\n008590        WRITE ADD-PRINT-RECORD\n008591     END-IF.\n008900     CLOSE PURGE-RECORDS\n009000           REPORT-INDEX-FILE\n009010           REPORT-LIST-FILE.\n009100     GO TO 9999-END-OF-PROGRAM.\n009200\n009300 9300-BAD-START.\n009400     DISPLAY '*** INVALID START BROWSE ON FILE IDXIN**'.\n009500     MOVE 16 TO RETURN-CODE\n009600     GO TO 9000-CLOSE-FILES.\n009700\n009800 9920-INDEX-FILE.\n009900     DISPLAY '*** DELETE ERROR ON INDEX-FILE ***'.\n010000     MOVE 14 TO RETURN-CODE\n010100     GO TO 9000-CLOSE-FILES.\n010200\n010300 9999-END-OF-PROGRAM.\n010400     STOP RUN.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT127J": {"ttr": 11265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x003\\x01 \\x13o\\x01 \\x14o!\\t\\x00\\x0b\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-25T21:09:33", "lines": 11, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT127J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//***************************************************************\n//*   DELETE RECORDS IN THE CICS ONLINE INDEX FILE              *\n//***************************************************************\n//STEP127  EXEC PGM=REPT127,COND=(8,LT),PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//IDXIN    DD DSN=OPT.CICS.REPORT.INDEX.FILE,DISP=SHR\n//PURGEDI   DD DSN=OPT.PRINT.PURGEDI.SEQ,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPT128": {"ttr": 11267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x006\\x01 \\x11\\x1f\\x01 \\x14\\x8f\\x14\\x04\\x00\\xc3\\x00{\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2020-04-20T00:00:00", "modifydate": "2020-05-27T14:04:36", "lines": 195, "newlines": 123, "modlines": 0, "user": "IBMUSER"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.        REPT128.\n000300\n000400 AUTHOR.            BILLY FENWICK\n000500*\n000600*  THIS PROGRAMS READS THE PURGED RECORDS FILE AND DELETES\n000700*  ALL OF THE MATCHING TYPE \"T\" HISTORY RECORDS\n000800*  FROM THE ONLINE HISTORY FILE.\n000900*\n000600****************************************\n000610*     (C) COPYRIGHT BILLY FENWICK\n000620****************************************\n001000 ENVIRONMENT DIVISION.\n001100 CONFIGURATION SECTION.\n001200 INPUT-OUTPUT SECTION.\n001300 FILE-CONTROL.\n001400     SELECT REPORT-HISTORY-FILE   ASSIGN TO DA-HSTIN\n001500                         ORGANIZATION IS INDEXED\n001600                         ACCESS IS DYNAMIC\n001700                         FILE STATUS IS HST-STATUS\n001800                         RECORD KEY IS T-KEY.\n001900     SELECT PURGE-RECORDS    ASSIGN TO UT-S-PURGED.\n002000     SELECT REPORT-LIST-FILE   ASSIGN TO UT-S-REPTLST.\n002100\n002200 DATA DIVISION.\n002300 FILE SECTION.\n002400\n002500 FD  PURGE-RECORDS\n002600     BLOCK CONTAINS 0 RECORDS\n002700     RECORDING MODE F\n002800     RECORD CONTAINS 14.\n002900 01  PURGE-D-RECORD.\n003000     03 PT-REPORT-ID            PIC X(8).\n003200     03 PT-REPORT-DATE          PIC 9(6).\n003300\n003400 FD  REPORT-HISTORY-FILE\n003500     RECORD CONTAINS 100.\n003600     COPY REPTB07 REPLACING ==:Z:== BY ==T==.\n003700\n003800 FD  REPORT-LIST-FILE\n003900     RECORDING MODE IS F\n004000     RECORD CONTAINS 132.\n004100 01  ADD-PRINT-RECORD.\n004200     03 PRT-ONE                 PIC X(50).\n004300     03 PRT-XYZ                 PIC X(82).\n004400     03 X-FIL REDEFINES PRT-XYZ.\n004500        05 PRT-ID                  PIC X(8).\n004600        05 FILLER                  PIC X(1).\n004700        05 PRT-SID                 PIC X(8).\n004800        05 FILLER                  PIC X(1).\n004900        05 PRT-DATE                PIC 9(6).\n005000        05 FILLER                  PIC X(1).\n005100        05 PRT-BANK                PIC 9(3).\n005200        05 FILLER                  PIC X(1).\n005300        05 PRT-BRANCH              PIC 9(3).\n005400        05 FILLER                  PIC X(1).\n005500        05 PRT-SEQ                 PIC 9(7).\n005600        05 FILLER                  PIC X(42).\n005700     03 X-FILL REDEFINES PRT-XYZ.\n005800        05 PRT-NUMBER              PIC ZZZ,Z99.\n005900        05 FILLER                  PIC X(75).\n006000\n006100 WORKING-STORAGE SECTION.\n006200 77  TT-COUNT      PIC S9(7) COMP-3  VALUE ZERO.\n006300 77  SUB           PIC S9(4) COMP    VALUE ZERO.\n006400 77  II-SEQ        PIC S9(7)         VALUE ZERO.\n006410 77  ARRAY-VALUE   PIC S9(7)         VALUE +300.\n006500 77  HST-STATUS    PIC X(2)          VALUE 'ZZ'.\n006600\n006620 01  PURGE-WORK-AREA.\n006630     03  PURGE-KEY  OCCURS 300 TIMES.\n006640         05  PURGE-ID    PIC  X(8).\n006650         05  PURGE-DATE  PIC  S9(6).\n006700 EJECT\n006800 LINKAGE SECTION.\n006900 01  LINK-WORK-AREA.\n007000     03  PARM-LENGTH   PIC S9(4) COMP.\n007100     03  JOB-PARM      PIC X(5).\n007200        88 DEBUG-ON  VALUE 'DEBUG'.\n007300        88 REPORT-ON VALUE 'REPRT'.\n007400\n007500 EJECT\n007600 PROCEDURE DIVISION USING LINK-WORK-AREA.\n007700 0000-MAIN-ROUTINE.\n007800\n007900     OPEN INPUT PURGE-RECORDS\n008000          I-O REPORT-HISTORY-FILE.\n008100     OPEN OUTPUT REPORT-LIST-FILE.\n008200\n008300 4100-READ-PURGE-FILES.\n008400     READ PURGE-RECORDS AT END GO TO 5000-FIND-T-RECORDS.\n008500     IF DEBUG-ON\n008600        DISPLAY '4000-READ-PURGE-RECORD'\n008700        DISPLAY '   PT-REPORT-ID=' PT-REPORT-ID\n008900        DISPLAY ' PT-REPORT-DATE=' PT-REPORT-DATE.\n008910     ADD 1 TO SUB.\n008920     IF SUB = ARRAY-VALUE\n008930       GO TO 9307-BAD-SUB.\n008990     MOVE PT-REPORT-ID TO PURGE-ID (SUB).\n008991     MOVE PT-REPORT-DATE TO PURGE-DATE (SUB).\n008992     GO TO 4100-READ-PURGE-FILES.\n009000\n009100 5000-FIND-T-RECORDS.\n009200     MOVE LOW-VALUES TO T-HISTORY-RECORD.\n009300     MOVE 'T' TO T-TYPE.\n009800     START REPORT-HISTORY-FILE KEY IS GREATER THAN T-KEY\n009900        INVALID KEY GO TO 9300-BAD-START.\n010000     IF HST-STATUS NOT EQUAL ZERO\n010100         GO TO 9300-BAD-START.\n010200\n010300 5050-READ-HISTORY-FILE.\n010400     READ REPORT-HISTORY-FILE NEXT RECORD AT END\n010500        GO TO 9000-CLOSE-FILES.\n010510     MOVE ZERO TO SUB.\n010600     IF DEBUG-ON\n010700        DISPLAY '3150-READ-INDEX-FILE'\n010800        DISPLAY '  T-REPORT-ID= ' T-REPORT-ID\n010900        DISPLAY '  T-REPORT-SID= ' T-REPORT-SID\n011000        DISPLAY '  T-REPORT-DATE= ' T-REPORT-DATE\n011100        DISPLAY '  T-BANK= ' T-BANK\n011200        DISPLAY '  T-BRANCH= ' T-BRANCH\n011300     END-IF.\n011700\n011800 5150-CHECK-DATE.\n011900     ADD 1 TO SUB.\n012000     IF PURGE-ID (SUB) = LOW-VALUES\n012100       GO TO 5050-READ-HISTORY-FILE.\n012200     IF (T-REPORT-ID EQUAL PURGE-ID (SUB)) AND\n012210        (T-REPORT-DATE EQUAL PURGE-DATE (SUB) )\n012211        IF DEBUG-ON\n012212           DISPLAY '5150-CHECK-DATE'\n012213           DISPLAY '  HIT T-REPORT-ID=' T-REPORT-ID\n012214           DISPLAY '  HIT T-REPORT-DATE=' T-REPORT-DATE\n012215        END-IF\n012220        GO TO 5200-DELETE-RECORD.\n012230     GO TO 5150-CHECK-DATE.\n012400\n012500 5200-DELETE-RECORD.\n012600     IF DEBUG-ON\n012700        DISPLAY ' TYPE -T- HISTORY RECORD = '\n012800               T-REPORT-DATE ' ' T-REPORT-ID ' '\n012900               T-REPORT-SID.\n013000     ADD 1 TO TT-COUNT.\n013100     IF REPORT-ON\n013200        MOVE SPACES TO ADD-PRINT-RECORD\n013300        MOVE '  RECORD DELETED ---' TO PRT-ONE\n013400        MOVE T-REPORT-ID TO PRT-ID\n013500        MOVE T-REPORT-SID TO PRT-SID\n013600        MOVE T-REPORT-DATE TO PRT-DATE\n013700        MOVE T-BANK TO PRT-BANK\n013800        MOVE T-BRANCH TO PRT-BRANCH\n013900        WRITE ADD-PRINT-RECORD\n014000     END-IF.\n014100     DELETE REPORT-HISTORY-FILE RECORD   INVALID KEY\n014200        GO TO 9920-HISTORY-FILE.\n014300     IF HST-STATUS NOT EQUAL ZERO\n014400       GO TO 9920-HISTORY-FILE.\n014500     GO TO 5050-READ-HISTORY-FILE.\n014600\n014700 9000-CLOSE-FILES.\n014800     IF REPORT-ON\n014900        MOVE ALL '-' TO ADD-PRINT-RECORD\n015000        WRITE ADD-PRINT-RECORD\n015100        MOVE SPACES TO ADD-PRINT-RECORD\n015200      MOVE ' TOTAL HISTORY TYPE \"T\" RECORDS DELETED -' TO PRT-ONE\n015300        MOVE TT-COUNT TO PRT-NUMBER\n015400        WRITE ADD-PRINT-RECORD\n015500        MOVE ALL '-' TO ADD-PRINT-RECORD\n015600        WRITE ADD-PRINT-RECORD\n015700     END-IF.\n015800     CLOSE PURGE-RECORDS\n015900           REPORT-HISTORY-FILE\n016000           REPORT-LIST-FILE.\n016100     GO TO 9999-END-OF-PROGRAM.\n016200\n016300 9300-BAD-START.\n016400     DISPLAY '*** INVALID START BROWSE ON REPORT-HISTRORY-FILE**'.\n016500     MOVE 16 TO RETURN-CODE\n016600     DISPLAY 'VSAM STATUS CODE=' HST-STATUS.\n016700     GO TO 9000-CLOSE-FILES.\n016710\n016720 9307-BAD-SUB.\n016730     DISPLAY '*** OUT OF ARRAY SPACE**'.\n016740     DISPLAY '*** CHANGE ARRAY SIZE IN PROGRAM **'.\n016750     MOVE 16 TO RETURN-CODE\n016760     GO TO 9000-CLOSE-FILES.\n016800\n016900 9920-HISTORY-FILE.\n017000     DISPLAY '*** WRITE ERROR ON REPORT-HISTORY-FILE ***'.\n017100     MOVE 14 TO RETURN-CODE.\n017200     DISPLAY 'VSAM STATUS CODE=' HST-STATUS.\n017300     GO TO 9000-CLOSE-FILES.\n017400\n017500 9999-END-OF-PROGRAM.\n017600     STOP RUN.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPT128J": {"ttr": 11271, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00X\\x01 \\x13o\\x01 \\x14o!\\x10\\x00\\x0b\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-25T21:10:58", "lines": 11, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "//REPT128J JOB CLASS=A,MSGCLASS=X,REGION=1M,NOTIFY=&SYSUID\n//****************************************************************\n//*   DELETE RECORDS IN THE CICS ONLINE HISTORY FILE             *\n//****************************************************************\n//STEP128  EXEC PGM=REPT128,COND=(8,LT),PARM='REPRT'\n//STEPLIB  DD DSN=OPT.WORK.LOADLIB,DISP=SHR\n//REPTLST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//HSTIN    DD DSN=OPT.CICS.REPORT.HISTORY.FILE,DISP=SHR\n//PURGED   DD DSN=OPT.PRINT.PURGED.SEQ,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXDLST": {"ttr": 11273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x003\\x01 \\x11?\\x01 \\x11?\\tG\\x00'\\x00'\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-04-22T00:00:00", "modifydate": "2020-04-22T09:47:33", "lines": 39, "newlines": 39, "modlines": 0, "user": "IBMUSER"}, "text": "/* REXX EXEC TO list the \"D\" Detail Records  */\n\n\"EXECIO * DISKR INPUT (FINI STEM inrec.\"\n  header1 = 'Report-id Date        Seq  Number-of-lines'\n  rec_count = 0\n  say '------------Detail RECORDS------------'\n  say header1\ndo i=1 to inrec.0\n   rec_count = rec_count + 1\n   drid  = (substr(inrec.i,1,8))\n   ddate  = (substr(inrec.i,9,6))\n   dseqp = (substr(inrec.i,15,4))\n   dseq = unpack(dseqp)\n   dlinesp = (substr(inrec.i,19,2))\n   dlines = unpack(dlinesp)\n   line1 = drid ||' ' || ddate || '   '\n   line1 = line1 || dseq || '   ' || dlines\n   say line1\nend\n say '------------TOTAL Detail Record Count------'\n say '  Total Detail Records=' rec_count\nexit\nunpack: procedure\n    parse arg pack\n    /* Convert packed data to hex and split */\n    char = c2x(pack)\n    numb = left( char, length(char)-1 )\n    sign = right( char, 1 )\n    /* Check sign and numeric sections */\n    if  verify(sign, \"ABCDEF\" ) > 0 then ,\n        return \"\"\n    if  verify( numb, \"0123456789\" ) > 0 then ,\n        return \"\"\n\n    /* Check negative sign */\n    if  pos(sign, \"BD\" ) > 0 then,\n        return -numb\n    else ,\n    return numb\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXXILST": {"ttr": 11275, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x001\\x01 \\x11/\\x01 \\x13\\x1f\\x146\\x004\\x00\\r\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2020-04-21T00:00:00", "modifydate": "2020-05-10T14:36:31", "lines": 52, "newlines": 13, "modlines": 0, "user": "IBMUSER"}, "text": "/* REXX EXEC TO list the \"I\" Index records  */\n\n\"EXECIO * DISKR INPUT (FINI STEM inrec.\"\n  header1 = 'Type Report-id Report-sid   Date   Bank Branch   Seq'\n  header1 = header1 || '    Page  Key-length  Key'\n  rec_count = 0\n  say '------------K RECORDS------------'\n  say header1\ndo i=1 to inrec.0\n   rec_count = rec_count + 1\n   ttype = (substr(inrec.i,1,1))\n   tbankp = (substr(inrec.i,24,2))\n   tbank = unpack(tbankp)\n   tbranchp = (substr(inrec.i,26,2))\n   tbranch = unpack(tbranchp)\n   trid  = (substr(inrec.i,2,8))\n   trids  = (substr(inrec.i,10,8))\n   tdate  = (substr(inrec.i,18,6))\n   key_value = (substr(inrec.i,39,20))\n   tseqp = (substr(inrec.i,28,4))\n   tseq = unpack(tseqp)\n   tpagep = (substr(inrec.i,32,4))\n   tpage = unpack(tpagep)\n   tkeyp = (substr(inrec.i,36,2))\n   tkey  = unpack(tkeyp)\n   line1 = ' ' || ttype || '   ' || trid || '   '|| trids || '   '\n   line1 = line1 || tdate || '   '\n   line1 = line1 || tbank || '   ' || tbranch || ' '\n   line1 = line1 || tseq || ' ' || tpage || '      ' || tkey\n   line1 = line1 || '   ' || key_value\n   say line1\nend\n say '------------TOTAL K Record Count------'\n say '  Total K Records=' rec_count\nexit\nunpack: procedure\n    parse arg pack\n    /* Convert packed data to hex and split */\n    char = c2x(pack)\n    numb = left( char, length(char)-1 )\n    sign = right( char, 1 )\n    /* Check sign and numeric sections */\n    if  verify(sign, \"ABCDEF\" ) > 0 then ,\n        return \"\"\n    if  verify( numb, \"0123456789\" ) > 0 then ,\n        return \"\"\n\n    /* Check negative sign */\n    if  pos(sign, \"BD\" ) > 0 then,\n        return -numb\n    else ,\n    return numb\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXXJCL": {"ttr": 11277, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x10\\x01 \\x13O\\x01 \\x14\\x7f\\x13\\x13\\x00\\x1c\\x00\\x0b\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2020-05-13T00:00:00", "modifydate": "2020-05-26T13:13:10", "lines": 28, "newlines": 11, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREXXL JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//********************************************************************\n//*       LIST THE DETAIL RECORDS\n//********************************************************************\n//DTLLST  EXEC PGM=IRXJCL,PARM='REXXDLST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.DETAIL.SEQ,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//********************************************************************\n//*       LIST THE INDEX RECORDS\n//********************************************************************\n//IDXLST  EXEC PGM=IRXJCL,PARM='REXXILST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.INDEX.SEQ,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//********************************************************************\n//*       LIST THE HISTORY RECORDS\n//********************************************************************\n//HSTLST  EXEC PGM=IRXJCL,PARM='REXXTLST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.HISTORY.SEQ,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXJCLL": {"ttr": 11279, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x10\\x01 \\x11/\\x01 \\x14\\x7f\\x142\\x00\\x1a\\x00\\x07\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2020-04-21T00:00:00", "modifydate": "2020-05-26T14:32:10", "lines": 26, "newlines": 7, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREXOT JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//DELETE   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n        DELETE OPT.PRINT.CICS.HISTORY.SEQXX PURGE\n/*\n//STEP1   EXEC PGM=IDCAMS\n//IN1      DD DSN=OPT.PRINT.CICS.WORK1.FILE,DISP=SHR\n//*N1      DD DSN=OPT.PRINT.CICS.WORK2.FILE,DISP=SHR\n//OUT1     DD DSN=OPT.PRINT.CICS.HISTORY.SEQXX,DISP=(,CATLG,DELETE),\n//         UNIT=SYSDA,VOL=SER=XXXXXX,\n//             DCB=(LRECL=100,BLKSIZE=0,RECFM=FB),SPACE=(TRK,(1,1))\n//SYSPRINT DD SYSOUT=*\n//SYSIN  DD *\n     REPRO  INFILE(IN1)  -\n            FROMKEY('T') -\n            TOKEY('T') -\n            OUTFILE(OUT1)\n/*\n//STEP1   EXEC PGM=IRXJCL,PARM='REXXTLST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.HISTORY.SEQXX,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXJCLX": {"ttr": 11281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01 \\x14/\\x01 \\x14/\\x13\\x11\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-21T00:00:00", "modifydate": "2020-05-21T13:11:23", "lines": 28, "newlines": 28, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREXXX JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//********************************************************************\n//*       LIST THE DETAIL RECORDS\n//********************************************************************\n//DTLLST  EXEC PGM=IRXJCL,PARM='REXXDLST'\n//INPUT    DD DSN=OPT.PRINT.CICS.SORTED.DETAIL.SEQ,DISP=SHR\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//********************************************************************\n//*       LIST THE INDEX RECORDS\n//********************************************************************\n//IDXLST  EXEC PGM=IRXJCL,PARM='REXXILST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.SORTED.INDEX.SEQ,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//********************************************************************\n//*       LIST THE HISTORY RECORDS\n//********************************************************************\n//HSTLST  EXEC PGM=IRXJCL,PARM='REXXTLST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.SORTED.HISTORY.SEQ,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXJCL1": {"ttr": 11283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01 \\x13o\\x01 \\x13o\\x15\\x17\\x00\\x13\\x00\\x13\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-15T00:00:00", "modifydate": "2020-05-15T15:17:26", "lines": 19, "newlines": 19, "modlines": 0, "user": "IBMUSER"}, "text": "//TSSREXX1 JOB CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//********************************************************************\n//*       LIST THE DETAIL RECORDS\n//********************************************************************\n//DTLLST  EXEC PGM=IRXJCL,PARM='REXXDLST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.DETAIL.SEQ1,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//********************************************************************\n//*       LIST THE INDEX RECORDS\n//********************************************************************\n//IDXLST  EXEC PGM=IRXJCL,PARM='REXXILST'\n//SYSEXEC  DD DSN=OPT.REPT.PDS,DISP=SHR\n//INPUT    DD DSN=OPT.PRINT.CICS.INDEX.SEQ1,DISP=SHR\n//OUTPUT   DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXTLST": {"ttr": 11285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x1a\\x00'\\x01 \\x11/\\x01 \\x13/\\x156\\x006\\x00\\x01\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.26", "flags": 0, "createdate": "2020-04-21T00:00:00", "modifydate": "2020-05-11T15:36:27", "lines": 54, "newlines": 1, "modlines": 0, "user": "IBMUSER"}, "text": "/* REXX EXEC TO list the \"T\" History records  */\n\n\"EXECIO * DISKR INPUT (FINI STEM inrec.\"\n  header1 = 'Type Bank Branch Report-id Report-sid  Date'\n  header1 = header1 || '    Pages     Lines DD-Name Report-Name'\n  rec_count = 0\n  k_count = 0\n  say '------------T RECORDS------------'\n  say header1\ndo i=1 to inrec.0\n   rec_count = rec_count + 1\n   ttype = (substr(inrec.i,1,1))\n   tbankp = (substr(inrec.i,2,2))\n   tbank = unpack(tbankp)\n   tbranchp = (substr(inrec.i,4,2))\n   tbranch = unpack(tbranchp)\n   trid  = (substr(inrec.i,6,8))\n   trids  = (substr(inrec.i,14,8))\n   tdate  = (substr(inrec.i,22,6))\n   report_name = (substr(inrec.i,32,50))\n   tnumpagesp = (substr(inrec.i,82,4))\n   tnumpages = unpack(tnumpagesp)\n   tnumlinesp = (substr(inrec.i,86,5))\n   tnumlines = unpack(tnumlinesp)\n   tfilename = (substr(inrec.i,91,6))\n   line1 = ' ' || ttype || '   ' || tbank || '   '|| tbranch || '   '\n   line1 = line1 || trid || '   ' || trids ' ' || tdate || ' '\n   line1 = line1 || tnumpages || ' ' || tnumlines\n   line1 = line1 || '  ' || tfilename || ' ' || report_name\n   say line1\n   k_count = k_count + tnumpages\nend\n say '------------TOTAL T Record Count------'\n say '  Total T Records=' rec_count\n say '------------TOTAL K Record Count------'\n say '  Total K Records=' k_count\nexit\nunpack: procedure\n    parse arg pack\n    /* Convert packed data to hex and split */\n    char = c2x(pack)\n    numb = left( char, length(char)-1 )\n    sign = right( char, 1 )\n    /* Check sign and numeric sections */\n    if  verify(sign, \"ABCDEF\" ) > 0 then ,\n        return \"\"\n    if  verify( numb, \"0123456789\" ) > 0 then ,\n        return \"\"\n\n    /* Check negative sign */\n    if  pos(sign, \"BD\" ) > 0 then,\n        return -numb\n    else ,\n    return numb\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RPMP001": {"ttr": 11521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x008\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x05\\x06@\\x06>\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:05:38", "lines": 1600, "newlines": 1598, "modlines": 0, "user": "IBMUSER"}, "text": "****************************************\n*     (C) COPYRIGHT BILLY FENWICK\n****************************************\nRPMP001  DFHMSD TYPE=MAP,CTRL=(FREEKB,FRSET),                          X\n               MODE=INOUT,TIOAPFX=YES,                                 X\n               LANG=COBOL\nTITLBRT  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nBRTTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,025),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,032),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,039),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,045),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\nBRTDATE  DFHMDF POS=(001,061),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,067),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTTIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,003),LENGTH=008,                              X\n               INITIAL='TITLE-ID',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,017),LENGTH=016,                              X\n               INITIAL='..........REPORT',                             X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,034),LENGTH=033,                              X\n               INITIAL='NAME.............................',            X\n               ATTRB=(ASKIP,NORM)\nBRTIN1   DFHMDF POS=(004,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI1   DFHMDF POS=(004,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID1   DFHMDF POS=(004,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN2   DFHMDF POS=(005,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI2   DFHMDF POS=(005,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID2   DFHMDF POS=(005,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN3   DFHMDF POS=(006,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI3   DFHMDF POS=(006,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID3   DFHMDF POS=(006,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN4   DFHMDF POS=(007,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI4   DFHMDF POS=(007,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID4   DFHMDF POS=(007,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN5   DFHMDF POS=(008,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI5   DFHMDF POS=(008,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID5   DFHMDF POS=(008,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN6   DFHMDF POS=(009,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI6   DFHMDF POS=(009,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID6   DFHMDF POS=(009,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN7   DFHMDF POS=(010,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI7   DFHMDF POS=(010,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID7   DFHMDF POS=(010,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN8   DFHMDF POS=(011,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI8   DFHMDF POS=(011,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID8   DFHMDF POS=(011,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN9   DFHMDF POS=(012,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI9   DFHMDF POS=(012,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID9   DFHMDF POS=(012,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN10  DFHMDF POS=(013,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI10  DFHMDF POS=(013,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID10  DFHMDF POS=(013,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN11  DFHMDF POS=(014,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI11  DFHMDF POS=(014,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID11  DFHMDF POS=(014,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN12  DFHMDF POS=(015,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI12  DFHMDF POS=(015,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID12  DFHMDF POS=(015,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN13  DFHMDF POS=(016,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI13  DFHMDF POS=(016,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID13  DFHMDF POS=(016,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN14  DFHMDF POS=(017,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI14  DFHMDF POS=(017,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID14  DFHMDF POS=(017,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN15  DFHMDF POS=(018,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI15  DFHMDF POS=(018,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID15  DFHMDF POS=(018,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN16  DFHMDF POS=(019,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI16  DFHMDF POS=(019,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID16  DFHMDF POS=(019,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN17  DFHMDF POS=(020,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI17  DFHMDF POS=(020,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID17  DFHMDF POS=(020,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN18  DFHMDF POS=(021,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI18  DFHMDF POS=(021,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID18  DFHMDF POS=(021,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN19  DFHMDF POS=(022,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI19  DFHMDF POS=(022,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID19  DFHMDF POS=(022,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN20  DFHMDF POS=(023,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI20  DFHMDF POS=(023,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID20  DFHMDF POS=(023,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTIN21  DFHMDF POS=(024,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRTRI21  DFHMDF POS=(024,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRTID21  DFHMDF POS=(024,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nTITLBRS  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nBRSTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,025),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,032),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,039),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,045),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,064),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nBRSDATE  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,064),LENGTH=005,                              X\n               INITIAL='TIME:',                                        X\n               ATTRB=(ASKIP,NORM)\nBRSTIME  DFHMDF POS=(002,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,001),LENGTH=009,                              X\n               INITIAL='TITLE-ID:',                                    X\n               ATTRB=(ASKIP,NORM)\nBRSTID   DFHMDF POS=(003,011),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,020),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,062),LENGTH=007,                              X\n               INITIAL='USERID:',                                      X\n               ATTRB=(ASKIP,NORM)\nBRSUID   DFHMDF POS=(003,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,008),LENGTH=005,                              X\n               INITIAL='NAME:',                                        X\n               ATTRB=(ASKIP,NORM)\nBRSTNM   DFHMDF POS=(004,014),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,001),LENGTH=010,                              X\n               INITIAL='.REPORT-ID',                                   X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,017),LENGTH=020,                              X\n               INITIAL='...........SECONDARY',                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,038),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,045),LENGTH=005,                              X\n               INITIAL='INDEX',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,051),LENGTH=016,                              X\n               INITIAL='NAME............',                             X\n               ATTRB=(ASKIP,NORM)\nBRSIN1   DFHMDF POS=(007,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI1   DFHMDF POS=(007,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL1   DFHMDF POS=(007,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN2   DFHMDF POS=(008,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI2   DFHMDF POS=(008,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL2   DFHMDF POS=(008,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN3   DFHMDF POS=(009,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI3   DFHMDF POS=(009,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL3   DFHMDF POS=(009,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN4   DFHMDF POS=(010,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI4   DFHMDF POS=(010,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL4   DFHMDF POS=(010,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN5   DFHMDF POS=(011,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI5   DFHMDF POS=(011,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL5   DFHMDF POS=(011,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN6   DFHMDF POS=(012,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI6   DFHMDF POS=(012,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL6   DFHMDF POS=(012,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN7   DFHMDF POS=(013,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI7   DFHMDF POS=(013,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL7   DFHMDF POS=(013,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN8   DFHMDF POS=(014,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI8   DFHMDF POS=(014,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL8   DFHMDF POS=(014,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN9   DFHMDF POS=(015,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI9   DFHMDF POS=(015,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL9   DFHMDF POS=(015,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN10  DFHMDF POS=(016,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI10  DFHMDF POS=(016,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL10  DFHMDF POS=(016,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN11  DFHMDF POS=(017,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI11  DFHMDF POS=(017,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL11  DFHMDF POS=(017,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN12  DFHMDF POS=(018,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI12  DFHMDF POS=(018,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL12  DFHMDF POS=(018,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN13  DFHMDF POS=(019,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI13  DFHMDF POS=(019,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL13  DFHMDF POS=(019,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN14  DFHMDF POS=(020,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI14  DFHMDF POS=(020,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL14  DFHMDF POS=(020,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN15  DFHMDF POS=(021,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI15  DFHMDF POS=(021,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL15  DFHMDF POS=(021,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN16  DFHMDF POS=(022,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI16  DFHMDF POS=(022,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL16  DFHMDF POS=(022,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN17  DFHMDF POS=(023,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI17  DFHMDF POS=(023,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL17  DFHMDF POS=(023,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN18  DFHMDF POS=(024,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSRI18  DFHMDF POS=(024,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL18  DFHMDF POS=(024,017),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,068),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nTITLSTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nSTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,016),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,023),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,030),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,036),LENGTH=006,                              X\n               INITIAL='RECORD',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,043),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,063),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nSTLDATE  DFHMDF POS=(001,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nSTLMSG   DFHMDF POS=(002,012),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,053),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,063),LENGTH=005,                              X\n               INITIAL='TIME:',                                        X\n               ATTRB=(ASKIP,NORM)\nSTLTIME  DFHMDF POS=(002,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,061),LENGTH=007,                              X\n               INITIAL='USERID:',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLUSER  DFHMDF POS=(003,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=006,                              X\n               INITIAL='OPTION',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,008),LENGTH=003,                              X\n               INITIAL='==>',                                          X\n               ATTRB=(ASKIP,NORM)\nSTLOPT   DFHMDF POS=(004,013),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,015),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,061),LENGTH=007,                              X\n               INITIAL='TERMID:',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLTRM   DFHMDF POS=(004,069),LENGTH=004,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,074),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,004),LENGTH=001,                              X\n               INITIAL='1',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(006,006),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(006,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,016),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,020),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,022),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,026),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,033),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,004),LENGTH=001,                              X\n               INITIAL='2',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(007,006),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(007,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,016),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,021),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,025),LENGTH=003,                              X\n               INITIAL='ALL',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,029),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,036),LENGTH=003,                              X\n               INITIAL='IDS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,004),LENGTH=001,                              X\n               INITIAL='3',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(008,006),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(008,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,016),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,021),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,023),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,030),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,033),LENGTH=001,                              X\n               INITIAL='&&',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,035),LENGTH=004,                              X\n               INITIAL='MAKE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,040),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,042),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,046),LENGTH=003,                              X\n               INITIAL='ONE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,004),LENGTH=001,                              X\n               INITIAL='4',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(009,006),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(009,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,016),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,024),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,026),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,033),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,004),LENGTH=001,                              X\n               INITIAL='5',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(010,006),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(010,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,016),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,025),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,032),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,004),LENGTH=001,                              X\n               INITIAL='6',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(011,006),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(011,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,016),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,025),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,032),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,004),LENGTH=001,                              X\n               INITIAL='7',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(013,006),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(013,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,016),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,020),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,022),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,026),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,036),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,043),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,004),LENGTH=001,                              X\n               INITIAL='8',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(014,006),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(014,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,016),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,021),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,025),LENGTH=003,                              X\n               INITIAL='ALL',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,029),LENGTH=046,                              X\n               INITIAL='SECONDRARY REPORT IDS CONNECTED TO A REPORT ID'X\n               ,ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,004),LENGTH=001,                              X\n               INITIAL='9',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(015,006),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(015,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,016),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,021),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,023),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,033),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,040),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,043),LENGTH=001,                              X\n               INITIAL='&&',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,045),LENGTH=004,                              X\n               INITIAL='MAKE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,050),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,052),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,056),LENGTH=003,                              X\n               INITIAL='ONE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,004),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(016,006),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(016,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,016),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,024),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,026),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,036),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,043),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,004),LENGTH=001,                              X\n               INITIAL='B',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(017,006),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(017,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,016),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,025),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,035),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,042),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,004),LENGTH=001,                              X\n               INITIAL='C',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(018,006),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(018,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,016),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,025),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,035),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,042),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,001),LENGTH=005,                              X\n               INITIAL='ENTER',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,007),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,014),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,017),LENGTH=002,                              X\n               INITIAL='OR',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,020),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,025),LENGTH=008,                              X\n               INITIAL='CRITERIA',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(021,034),LENGTH=002,                              X\n               INITIAL='=>',                                           X\n               ATTRB=(ASKIP,NORM)\nSTLTID   DFHMDF POS=(021,037),LENGTH=008,                              X\n               ATTRB=(UNPROT,FSET)\n         DFHMDF POS=(021,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(022,001),LENGTH=005,                              X\n               INITIAL='ENTER',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,007),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,017),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,024),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,033),LENGTH=002,                              X\n               INITIAL='=>',                                           X\n               ATTRB=(ASKIP,NORM)\nSTLRID   DFHMDF POS=(022,037),LENGTH=008,                              X\n               ATTRB=(UNPROT,FSET)\n         DFHMDF POS=(022,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nTITLDTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nDTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,023),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,030),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,037),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,043),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\nDTLDATE  DFHMDF POS=(001,058),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLTIME  DFHMDF POS=(001,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLMSG   DFHMDF POS=(002,019),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLCMG   DFHMDF POS=(003,005),LENGTH=037,                              X\n               ATTRB=(ASKIP)\nDTLCPY   DFHMDF POS=(003,044),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,053),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=027,                              X\n               INITIAL='---------------------------',                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,029),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,035),LENGTH=043,                              X\n               INITIAL='INFORMATION--------------------------------',  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,001),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,007),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,010),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLTID   DFHMDF POS=(005,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,023),LENGTH=011,                              X\n               INITIAL='APPLICATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,035),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLAPL   DFHMDF POS=(005,037),LENGTH=003,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,041),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,043),LENGTH=007,                              X\n               INITIAL='EXTRACT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,051),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLEXT   DFHMDF POS=(005,053),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,056),LENGTH=005,                              X\n               INITIAL='FORCE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,062),LENGTH=004,                              X\n               INITIAL='BANK',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,067),LENGTH=007,                              X\n               INITIAL='NUMBER-',                                      X\n               ATTRB=(ASKIP,NORM)\nDTLFBK   DFHMDF POS=(005,075),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(005,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,001),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,008),LENGTH=004,                              X\n               INITIAL='NAME',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,013),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLRNM   DFHMDF POS=(006,015),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(007,011),LENGTH=012,                              X\n               INITIAL='......REPORT',                                 X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,024),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,030),LENGTH=031,                              X\n               INITIAL='DATA...........................',              X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,062),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,067),LENGTH=008,                              X\n               INITIAL='POSITION',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,076),LENGTH=003,                              X\n               INITIAL='LEN',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,007),LENGTH=001,                              X\n               INITIAL='1',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLRDA1  DFHMDF POS=(008,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTLRTL1  DFHMDF POS=(008,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTP1  DFHMDF POS=(008,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTE1  DFHMDF POS=(008,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(009,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,007),LENGTH=001,                              X\n               INITIAL='2',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLRDA2  DFHMDF POS=(009,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTLRTL2  DFHMDF POS=(009,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTP2  DFHMDF POS=(009,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTE2  DFHMDF POS=(009,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(010,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,007),LENGTH=001,                              X\n               INITIAL='3',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLRDA3  DFHMDF POS=(010,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTLRTL3  DFHMDF POS=(010,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTP3  DFHMDF POS=(010,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRTE3  DFHMDF POS=(010,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(012,001),LENGTH=027,                              X\n               INITIAL='---------------------------',                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,029),LENGTH=013,                              X\n               INITIAL='MISCELLANEOUS',                                X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,043),LENGTH=011,                              X\n               INITIAL='INFORMATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,055),LENGTH=022,                              X\n               INITIAL='----------------------',                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,001),LENGTH=014,                              X\n               INITIAL='***BANK/BRANCH',                               X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,016),LENGTH=006,                              X\n               INITIAL='INFO**',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,027),LENGTH=006,                              X\n               INITIAL='***KEY',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,034),LENGTH=014,                              X\n               INITIAL='INFORMATION***',                               X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,055),LENGTH=008,                              X\n               INITIAL='**REPORT',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,064),LENGTH=006,                              X\n               INITIAL='DATE**',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,008),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,014),LENGTH=003,                              X\n               INITIAL='POS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,019),LENGTH=003,                              X\n               INITIAL='LEN',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,034),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,040),LENGTH=003,                              X\n               INITIAL='POS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,045),LENGTH=003,                              X\n               INITIAL='LEN',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,055),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,062),LENGTH=003,                              X\n               INITIAL='POS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,066),LENGTH=004,                              X\n               INITIAL='TYPE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,001),LENGTH=007,                              X\n               INITIAL='BANK---',                                      X\n               ATTRB=(ASKIP,NORM)\nDTLBKL   DFHMDF POS=(015,009),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBKP   DFHMDF POS=(015,014),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBKE   DFHMDF POS=(015,019),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,023),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(015,027),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,032),LENGTH=002,                              X\n               INITIAL='1-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTLKL1   DFHMDF POS=(015,035),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKP1   DFHMDF POS=(015,040),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKE1   DFHMDF POS=(015,045),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,049),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRDL   DFHMDF POS=(015,056),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRDP   DFHMDF POS=(015,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLRDT   DFHMDF POS=(015,068),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,070),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(016,001),LENGTH=007,                              X\n               INITIAL='BRANCH-',                                      X\n               ATTRB=(ASKIP,NORM)\nDTLBRL   DFHMDF POS=(016,009),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBRP   DFHMDF POS=(016,014),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBRE   DFHMDF POS=(016,019),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(016,023),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(016,027),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,032),LENGTH=002,                              X\n               INITIAL='2-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTLKL2   DFHMDF POS=(016,035),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKP2   DFHMDF POS=(016,040),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKE2   DFHMDF POS=(016,045),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(016,049),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(016,055),LENGTH=008,                              X\n               INITIAL='**REPORT',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,064),LENGTH=006,                              X\n               INITIAL='FILE**',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,027),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,032),LENGTH=002,                              X\n               INITIAL='3-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTLKL3   DFHMDF POS=(017,035),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKP3   DFHMDF POS=(017,040),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLKE3   DFHMDF POS=(017,045),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(017,049),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLFLE   DFHMDF POS=(017,058),LENGTH=006,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(019,001),LENGTH=035,                              X\n               INITIAL='------------------------------BANKS',          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(019,037),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(019,040),LENGTH=037,                              X\n               INITIAL='EXTRACT------------------------------',        X\n               ATTRB=(ASKIP,NORM)\nDTLBNK1  DFHMDF POS=(020,002),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK2  DFHMDF POS=(020,007),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK3  DFHMDF POS=(020,012),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK4  DFHMDF POS=(020,017),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK5  DFHMDF POS=(020,022),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK6  DFHMDF POS=(020,027),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK7  DFHMDF POS=(020,032),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK8  DFHMDF POS=(020,037),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNK9  DFHMDF POS=(020,042),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLBNKA  DFHMDF POS=(020,047),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(020,051),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(022,001),LENGTH=034,                              X\n               INITIAL='------------------------------KEEP',           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,036),LENGTH=005,                              X\n               INITIAL='CYCLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,042),LENGTH=035,                              X\n               INITIAL='INFORMATION------------------------',          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,001),LENGTH=006,                              X\n               INITIAL='CYCLES',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,008),LENGTH=002,                              X\n               INITIAL='OR',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,011),LENGTH=004,                              X\n               INITIAL='DAYS',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,016),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLKNC   DFHMDF POS=(023,018),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(023,022),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(023,024),LENGTH=004,                              X\n               INITIAL='TYPE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,029),LENGTH=002,                              X\n               INITIAL='OF',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,032),LENGTH=005,                              X\n               INITIAL='CYCLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(023,038),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLKCT   DFHMDF POS=(023,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,042),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nTITLDTS  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nDTSTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,012),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,019),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,026),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,036),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,043),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\nDTSDATE  DFHMDF POS=(001,058),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSTIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSMSG   DFHMDF POS=(002,019),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSCMG   DFHMDF POS=(003,005),LENGTH=037,                              X\n               ATTRB=(ASKIP)\nDTSCPT   DFHMDF POS=(003,044),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nDTSCPR   DFHMDF POS=(003,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=027,                              X\n               INITIAL='-----------------------MAIN',                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,029),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,035),LENGTH=011,                              X\n               INITIAL='INFORMATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,047),LENGTH=030,                              X\n               INITIAL='------------------------------',               X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,001),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,007),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,010),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSTID   DFHMDF POS=(005,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,024),LENGTH=011,                              X\n               INITIAL='APPLICATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,036),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSAPL   DFHMDF POS=(005,038),LENGTH=003,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,042),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,046),LENGTH=007,                              X\n               INITIAL='EXTRACT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,054),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSTXT   DFHMDF POS=(005,056),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,058),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,001),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,008),LENGTH=004,                              X\n               INITIAL='NAME',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,013),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSRNM   DFHMDF POS=(006,015),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(008,001),LENGTH=019,                              X\n               INITIAL='----------SECONDARY',                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,021),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,028),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,031),LENGTH=011,                              X\n               INITIAL='INFORMATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,043),LENGTH=036,                              X\n               INITIAL='------------------------------------',         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,001),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,011),LENGTH=009,                              X\n               INITIAL='REPORT-ID',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,021),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSRID   DFHMDF POS=(009,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(009,038),LENGTH=008,                              X\n               INITIAL='EXTRACT-',                                     X\n               ATTRB=(ASKIP,NORM)\nDTSRXT   DFHMDF POS=(009,047),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,049),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(010,001),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,011),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,018),LENGTH=004,                              X\n               INITIAL='NAME',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,023),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSSNM   DFHMDF POS=(010,025),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(011,011),LENGTH=015,                              X\n               INITIAL='......SECONDARY',                              X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,027),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,034),LENGTH=005,                              X\n               INITIAL='TITLE',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,040),LENGTH=021,                              X\n               INITIAL='DATA.................',                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,062),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,067),LENGTH=008,                              X\n               INITIAL='POSITION',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,076),LENGTH=003,                              X\n               INITIAL='LEN',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,007),LENGTH=001,                              X\n               INITIAL='1',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(012,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSSDA1  DFHMDF POS=(012,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTSSTL1  DFHMDF POS=(012,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(012,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTP1  DFHMDF POS=(012,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(012,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTE1  DFHMDF POS=(012,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(012,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(013,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,007),LENGTH=001,                              X\n               INITIAL='2',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(013,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSSDA2  DFHMDF POS=(013,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTSSTL2  DFHMDF POS=(013,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(013,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTP2  DFHMDF POS=(013,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(013,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTE2  DFHMDF POS=(013,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(013,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(014,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,007),LENGTH=001,                              X\n               INITIAL='3',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(014,009),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTSSDA3  DFHMDF POS=(014,011),LENGTH=050,                              X\n               ATTRB=(ASKIP)\nDTSSTL3  DFHMDF POS=(014,062),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(014,066),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTP3  DFHMDF POS=(014,069),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(014,073),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTSSTE3  DFHMDF POS=(014,076),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(014,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(016,001),LENGTH=011,                              X\n               INITIAL='--SECONDARY',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,013),LENGTH=003,                              X\n               INITIAL='KEY',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,017),LENGTH=011,                              X\n               INITIAL='INFORMATION',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,029),LENGTH=002,                              X\n               INITIAL='--',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,009),LENGTH=004,                              X\n               INITIAL='LINE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,015),LENGTH=003,                              X\n               INITIAL='POS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,020),LENGTH=003,                              X\n               INITIAL='LEN',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(018,007),LENGTH=002,                              X\n               INITIAL='1-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTSKL1   DFHMDF POS=(018,010),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKP1   DFHMDF POS=(018,015),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKE1   DFHMDF POS=(018,020),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(018,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(019,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(019,007),LENGTH=002,                              X\n               INITIAL='2-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTSKL2   DFHMDF POS=(019,010),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKP2   DFHMDF POS=(019,015),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKE2   DFHMDF POS=(019,020),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(019,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(020,002),LENGTH=004,                              X\n               INITIAL='PART',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(020,007),LENGTH=002,                              X\n               INITIAL='3-',                                           X\n               ATTRB=(ASKIP,NORM)\nDTSKL3   DFHMDF POS=(020,010),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKP3   DFHMDF POS=(020,015),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSKE3   DFHMDF POS=(020,020),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(020,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(022,001),LENGTH=035,                              X\n               INITIAL='------------------------------BANKS',          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,037),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(022,040),LENGTH=037,                              X\n               INITIAL='EXTRACT------------------------------',        X\n               ATTRB=(ASKIP,NORM)\nDTSBNK1  DFHMDF POS=(023,002),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK2  DFHMDF POS=(023,007),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK3  DFHMDF POS=(023,012),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK4  DFHMDF POS=(023,017),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK5  DFHMDF POS=(023,022),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK6  DFHMDF POS=(023,027),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK7  DFHMDF POS=(023,032),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK8  DFHMDF POS=(023,037),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNK9  DFHMDF POS=(023,042),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTSBNKA  DFHMDF POS=(023,047),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(023,051),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nTITLHLP  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nHLPTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,020),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,027),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,034),LENGTH=004,                              X\n               INITIAL='HELP',                                         X\n               ATTRB=(ASKIP,NORM)\nHLPMORE  DFHMDF POS=(001,043),LENGTH=004,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,048),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPPAGE  DFHMDF POS=(001,051),LENGTH=003,                              X\n               PICOUT='999',PICIN='999',                               X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(001,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPDATE  DFHMDF POS=(001,060),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,069),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPTIME  DFHMDF POS=(001,072),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,001),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,006),LENGTH=011,                              X\n               INITIAL='RETURN(PF3)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,022),LENGTH=007,                              X\n               INITIAL='UP(PF7)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,034),LENGTH=009,                              X\n               INITIAL='DOWN(PF8)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMSD TYPE=FINAL\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPMP002": {"ttr": 12039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x17\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x06\\x04\\xc8\\x04\\xc6\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:06:17", "lines": 1224, "newlines": 1222, "modlines": 0, "user": "IBMUSER"}, "text": "****************************************\n*     (C) COPYRIGHT BILLY FENWICK\n****************************************\nRPMP002  DFHMSD TYPE=MAP,CTRL=(FREEKB,FRSET),                          X\n               MODE=INOUT,TIOAPFX=YES,                                 X\n               LANG=COBOL\nUSERDTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nDTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,021),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,028),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,035),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,040),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,043),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\nDTLDATE  DFHMDF POS=(001,058),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLTIME  DFHMDF POS=(001,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLMSG   DFHMDF POS=(002,019),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLCMG   DFHMDF POS=(003,005),LENGTH=037,                              X\n               ATTRB=(ASKIP)\nDTLCPY   DFHMDF POS=(003,044),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,053),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,002),LENGTH=035,                              X\n               INITIAL='.............................ACCESS',          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,038),LENGTH=034,                              X\n               INITIAL='INFORMATION.......................',           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,002),LENGTH=004,                              X\n               INITIAL='RACF',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,007),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,010),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLRCF   DFHMDF POS=(005,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,029),LENGTH=004,                              X\n               INITIAL='BANK',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,034),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLBNK   DFHMDF POS=(005,036),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(005,040),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,051),LENGTH=006,                              X\n               INITIAL='BRANCH',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,058),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLBRH   DFHMDF POS=(005,060),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(005,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,002),LENGTH=004,                              X\n               INITIAL='TYPE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,007),LENGTH=002,                              X\n               INITIAL='OF',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,010),LENGTH=006,                              X\n               INITIAL='ACCESS',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,017),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,020),LENGTH=007,                              X\n               INITIAL='REPORTS',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,028),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLTAR   DFHMDF POS=(006,030),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(007,002),LENGTH=004,                              X\n               INITIAL='TYPE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,007),LENGTH=002,                              X\n               INITIAL='OF',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,010),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,017),LENGTH=006,                              X\n               INITIAL='ACCESS',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,024),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,027),LENGTH=008,                              X\n               INITIAL='SECURITY',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,036),LENGTH=007,                              X\n               INITIAL='RECORDS',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,044),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLTAS   DFHMDF POS=(007,046),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,048),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(010,001),LENGTH=036,                              X\n               INITIAL='..............................REPORT',         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,038),LENGTH=003,                              X\n               INITIAL='IDS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,042),LENGTH=033,                              X\n               INITIAL='.................................',            X\n               ATTRB=(ASKIP,NORM)\nDTLR00   DFHMDF POS=(011,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR01   DFHMDF POS=(011,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR02   DFHMDF POS=(011,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR03   DFHMDF POS=(011,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR04   DFHMDF POS=(011,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR05   DFHMDF POS=(011,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR06   DFHMDF POS=(011,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR07   DFHMDF POS=(012,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR08   DFHMDF POS=(012,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR09   DFHMDF POS=(012,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR10   DFHMDF POS=(012,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR11   DFHMDF POS=(012,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR12   DFHMDF POS=(012,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR13   DFHMDF POS=(012,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR14   DFHMDF POS=(013,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR15   DFHMDF POS=(013,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR16   DFHMDF POS=(013,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR17   DFHMDF POS=(013,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR18   DFHMDF POS=(013,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR19   DFHMDF POS=(013,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR20   DFHMDF POS=(013,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR21   DFHMDF POS=(014,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR22   DFHMDF POS=(014,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR23   DFHMDF POS=(014,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR24   DFHMDF POS=(014,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR25   DFHMDF POS=(014,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR26   DFHMDF POS=(014,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR27   DFHMDF POS=(014,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR28   DFHMDF POS=(015,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR29   DFHMDF POS=(015,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR30   DFHMDF POS=(015,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR31   DFHMDF POS=(015,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR32   DFHMDF POS=(015,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR33   DFHMDF POS=(015,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR34   DFHMDF POS=(015,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR35   DFHMDF POS=(016,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR36   DFHMDF POS=(016,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR37   DFHMDF POS=(016,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR38   DFHMDF POS=(016,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR39   DFHMDF POS=(016,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR40   DFHMDF POS=(016,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR41   DFHMDF POS=(016,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR42   DFHMDF POS=(017,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR43   DFHMDF POS=(017,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR44   DFHMDF POS=(017,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR45   DFHMDF POS=(017,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR46   DFHMDF POS=(017,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR47   DFHMDF POS=(017,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR48   DFHMDF POS=(017,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR49   DFHMDF POS=(018,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR50   DFHMDF POS=(018,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR51   DFHMDF POS=(018,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR52   DFHMDF POS=(018,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR53   DFHMDF POS=(018,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR54   DFHMDF POS=(018,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR55   DFHMDF POS=(018,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR56   DFHMDF POS=(019,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR57   DFHMDF POS=(019,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR58   DFHMDF POS=(019,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR59   DFHMDF POS=(019,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR60   DFHMDF POS=(019,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR61   DFHMDF POS=(019,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR62   DFHMDF POS=(019,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR63   DFHMDF POS=(020,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR64   DFHMDF POS=(020,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR65   DFHMDF POS=(020,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR66   DFHMDF POS=(020,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR67   DFHMDF POS=(020,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR68   DFHMDF POS=(020,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR69   DFHMDF POS=(020,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR70   DFHMDF POS=(021,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR71   DFHMDF POS=(021,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR72   DFHMDF POS=(021,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR73   DFHMDF POS=(021,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR74   DFHMDF POS=(021,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR75   DFHMDF POS=(021,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR76   DFHMDF POS=(021,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR77   DFHMDF POS=(022,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR78   DFHMDF POS=(022,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR79   DFHMDF POS=(022,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR80   DFHMDF POS=(022,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR81   DFHMDF POS=(022,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR82   DFHMDF POS=(022,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR83   DFHMDF POS=(022,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR84   DFHMDF POS=(023,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR85   DFHMDF POS=(023,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR86   DFHMDF POS=(023,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR87   DFHMDF POS=(023,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR88   DFHMDF POS=(023,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR89   DFHMDF POS=(023,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR90   DFHMDF POS=(023,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR91   DFHMDF POS=(024,001),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,010),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR92   DFHMDF POS=(024,012),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,021),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR93   DFHMDF POS=(024,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR94   DFHMDF POS=(024,034),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,043),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR95   DFHMDF POS=(024,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR96   DFHMDF POS=(024,056),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,065),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDTLR97   DFHMDF POS=(024,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(024,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nUSERBRS  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nBRSTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,023),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,030),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,037),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,042),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,045),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\nBRSDATE  DFHMDF POS=(001,061),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,067),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,001),LENGTH=010,                              X\n               INITIAL='..USER-ID.',                                   X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,018),LENGTH=010,                              X\n               INITIAL='..USER-ID.',                                   X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,035),LENGTH=010,                              X\n               INITIAL='..USER-ID.',                                   X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,052),LENGTH=010,                              X\n               INITIAL='..USER-ID.',                                   X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,069),LENGTH=010,                              X\n               INITIAL='..USER-ID.',                                   X\n               ATTRB=(ASKIP,NORM)\nBRSU01   DFHMDF POS=(004,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU02   DFHMDF POS=(004,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU03   DFHMDF POS=(004,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU04   DFHMDF POS=(004,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU05   DFHMDF POS=(004,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU06   DFHMDF POS=(004,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU07   DFHMDF POS=(004,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU08   DFHMDF POS=(004,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU09   DFHMDF POS=(004,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU10   DFHMDF POS=(004,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU11   DFHMDF POS=(005,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU12   DFHMDF POS=(005,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU13   DFHMDF POS=(005,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU14   DFHMDF POS=(005,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU15   DFHMDF POS=(005,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU16   DFHMDF POS=(005,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU17   DFHMDF POS=(005,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU18   DFHMDF POS=(005,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU19   DFHMDF POS=(005,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU20   DFHMDF POS=(005,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU21   DFHMDF POS=(006,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU22   DFHMDF POS=(006,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU23   DFHMDF POS=(006,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU24   DFHMDF POS=(006,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU25   DFHMDF POS=(006,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU26   DFHMDF POS=(006,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU27   DFHMDF POS=(006,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU28   DFHMDF POS=(006,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU29   DFHMDF POS=(006,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU30   DFHMDF POS=(006,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU31   DFHMDF POS=(007,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU32   DFHMDF POS=(007,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU33   DFHMDF POS=(007,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU34   DFHMDF POS=(007,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU35   DFHMDF POS=(007,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU36   DFHMDF POS=(007,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU37   DFHMDF POS=(007,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU38   DFHMDF POS=(007,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU39   DFHMDF POS=(007,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU40   DFHMDF POS=(007,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU41   DFHMDF POS=(008,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU42   DFHMDF POS=(008,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU43   DFHMDF POS=(008,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU44   DFHMDF POS=(008,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU45   DFHMDF POS=(008,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU46   DFHMDF POS=(008,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU47   DFHMDF POS=(008,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU48   DFHMDF POS=(008,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU49   DFHMDF POS=(008,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU50   DFHMDF POS=(008,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU51   DFHMDF POS=(009,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU52   DFHMDF POS=(009,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU53   DFHMDF POS=(009,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU54   DFHMDF POS=(009,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU55   DFHMDF POS=(009,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU56   DFHMDF POS=(009,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU57   DFHMDF POS=(009,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU58   DFHMDF POS=(009,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU59   DFHMDF POS=(009,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU60   DFHMDF POS=(009,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU61   DFHMDF POS=(010,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU62   DFHMDF POS=(010,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU63   DFHMDF POS=(010,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU64   DFHMDF POS=(010,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU65   DFHMDF POS=(010,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU66   DFHMDF POS=(010,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU67   DFHMDF POS=(010,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU68   DFHMDF POS=(010,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU69   DFHMDF POS=(010,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU70   DFHMDF POS=(010,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU71   DFHMDF POS=(011,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU72   DFHMDF POS=(011,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU73   DFHMDF POS=(011,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU74   DFHMDF POS=(011,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU75   DFHMDF POS=(011,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU76   DFHMDF POS=(011,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU77   DFHMDF POS=(011,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU78   DFHMDF POS=(011,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU79   DFHMDF POS=(011,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU80   DFHMDF POS=(011,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU81   DFHMDF POS=(012,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU82   DFHMDF POS=(012,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU83   DFHMDF POS=(012,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU84   DFHMDF POS=(012,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU85   DFHMDF POS=(012,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU86   DFHMDF POS=(012,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU87   DFHMDF POS=(012,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU88   DFHMDF POS=(012,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU89   DFHMDF POS=(012,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU90   DFHMDF POS=(012,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSU91   DFHMDF POS=(013,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU92   DFHMDF POS=(013,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU93   DFHMDF POS=(013,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSU94   DFHMDF POS=(013,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSU95   DFHMDF POS=(013,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS01   DFHMDF POS=(013,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS02   DFHMDF POS=(013,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS03   DFHMDF POS=(013,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS04   DFHMDF POS=(013,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS05   DFHMDF POS=(013,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS06   DFHMDF POS=(014,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS07   DFHMDF POS=(014,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS08   DFHMDF POS=(014,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS09   DFHMDF POS=(014,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS10   DFHMDF POS=(014,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS11   DFHMDF POS=(014,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS12   DFHMDF POS=(014,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS13   DFHMDF POS=(014,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS14   DFHMDF POS=(014,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS15   DFHMDF POS=(014,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS16   DFHMDF POS=(015,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS17   DFHMDF POS=(015,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS18   DFHMDF POS=(015,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS19   DFHMDF POS=(015,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS20   DFHMDF POS=(015,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS21   DFHMDF POS=(015,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS22   DFHMDF POS=(015,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS23   DFHMDF POS=(015,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS24   DFHMDF POS=(015,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS25   DFHMDF POS=(015,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS26   DFHMDF POS=(016,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS27   DFHMDF POS=(016,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS28   DFHMDF POS=(016,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS29   DFHMDF POS=(016,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS30   DFHMDF POS=(016,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS31   DFHMDF POS=(016,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS32   DFHMDF POS=(016,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS33   DFHMDF POS=(016,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS34   DFHMDF POS=(016,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS35   DFHMDF POS=(016,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS36   DFHMDF POS=(017,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS37   DFHMDF POS=(017,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS38   DFHMDF POS=(017,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS39   DFHMDF POS=(017,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS40   DFHMDF POS=(017,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS41   DFHMDF POS=(017,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS42   DFHMDF POS=(017,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS43   DFHMDF POS=(017,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS44   DFHMDF POS=(017,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS45   DFHMDF POS=(017,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS46   DFHMDF POS=(018,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS47   DFHMDF POS=(018,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS48   DFHMDF POS=(018,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS49   DFHMDF POS=(018,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS50   DFHMDF POS=(018,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS51   DFHMDF POS=(018,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS52   DFHMDF POS=(018,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS53   DFHMDF POS=(018,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS54   DFHMDF POS=(018,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS55   DFHMDF POS=(018,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS56   DFHMDF POS=(019,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS57   DFHMDF POS=(019,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS58   DFHMDF POS=(019,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS59   DFHMDF POS=(019,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS60   DFHMDF POS=(019,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS61   DFHMDF POS=(019,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS62   DFHMDF POS=(019,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS63   DFHMDF POS=(019,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS64   DFHMDF POS=(019,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS65   DFHMDF POS=(019,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS66   DFHMDF POS=(020,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS67   DFHMDF POS=(020,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS68   DFHMDF POS=(020,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS69   DFHMDF POS=(020,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS70   DFHMDF POS=(020,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS71   DFHMDF POS=(020,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS72   DFHMDF POS=(020,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS73   DFHMDF POS=(020,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS74   DFHMDF POS=(020,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS75   DFHMDF POS=(020,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS76   DFHMDF POS=(021,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS77   DFHMDF POS=(021,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS78   DFHMDF POS=(021,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS79   DFHMDF POS=(021,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS80   DFHMDF POS=(021,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS81   DFHMDF POS=(021,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS82   DFHMDF POS=(021,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS83   DFHMDF POS=(021,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS84   DFHMDF POS=(021,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS85   DFHMDF POS=(021,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\nBRSS86   DFHMDF POS=(022,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS87   DFHMDF POS=(022,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS88   DFHMDF POS=(022,018),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS89   DFHMDF POS=(022,020),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS90   DFHMDF POS=(022,035),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS91   DFHMDF POS=(022,037),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,046),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS92   DFHMDF POS=(022,052),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS93   DFHMDF POS=(022,054),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,063),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSS94   DFHMDF POS=(022,069),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSS95   DFHMDF POS=(022,071),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,080),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,004),LENGTH=008,                              X\n               INITIAL='PF1-HELP',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,016),LENGTH=003,                              X\n               INITIAL='USE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,020),LENGTH=006,                              X\n               INITIAL='LETTER',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,027),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,030),LENGTH=006,                              X\n               INITIAL='SELECT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,037),LENGTH=007,                              X\n               INITIAL='USER-ID',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,045),LENGTH=002,                              X\n               INITIAL='--',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,049),LENGTH=009,                              X\n               INITIAL='D-DISPLAY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,060),LENGTH=008,                              X\n               INITIAL='U-UPDATE',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,070),LENGTH=008,                              X\n               INITIAL='Z-DELETE',                                     X\n               ATTRB=(ASKIP,NORM)\nUSERSTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nSTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,015),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,022),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,029),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,034),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,037),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,063),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nSTLDATE  DFHMDF POS=(001,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nSTLMSG   DFHMDF POS=(002,012),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,053),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,063),LENGTH=005,                              X\n               INITIAL='TIME:',                                        X\n               ATTRB=(ASKIP,NORM)\nSTLTIME  DFHMDF POS=(002,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,061),LENGTH=007,                              X\n               INITIAL='USERID:',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLUSER  DFHMDF POS=(003,069),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,078),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=006,                              X\n               INITIAL='OPTION',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,008),LENGTH=003,                              X\n               INITIAL='==>',                                          X\n               ATTRB=(ASKIP,NORM)\nSTLOPT   DFHMDF POS=(004,013),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,015),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,061),LENGTH=007,                              X\n               INITIAL='TERMID:',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLTRM   DFHMDF POS=(004,069),LENGTH=004,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,074),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(006,004),LENGTH=001,                              X\n               INITIAL='1',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(006,006),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(006,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,016),LENGTH=003,                              X\n               INITIAL='ADD',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,020),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,022),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,026),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,031),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,004),LENGTH=001,                              X\n               INITIAL='2',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(007,006),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(007,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,016),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,021),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,025),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,030),LENGTH=003,                              X\n               INITIAL='IDS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,004),LENGTH=001,                              X\n               INITIAL='3',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(008,006),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(008,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,016),LENGTH=004,                              X\n               INITIAL='COPY',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,021),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,023),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,028),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,031),LENGTH=006,                              X\n               INITIAL='RECORD',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,038),LENGTH=001,                              X\n               INITIAL='&&',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,040),LENGTH=004,                              X\n               INITIAL='MAKE',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,045),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,047),LENGTH=003,                              X\n               INITIAL='NEW',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,051),LENGTH=003,                              X\n               INITIAL='ONE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,004),LENGTH=001,                              X\n               INITIAL='4',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(009,006),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(009,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,016),LENGTH=007,                              X\n               INITIAL='DISPLAY',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,024),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,026),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,031),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,034),LENGTH=006,                              X\n               INITIAL='RECORD',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,004),LENGTH=001,                              X\n               INITIAL='5',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(010,006),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(010,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,016),LENGTH=006,                              X\n               INITIAL='UPDATE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,025),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,030),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,033),LENGTH=006,                              X\n               INITIAL='RECORD',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,004),LENGTH=001,                              X\n               INITIAL='6',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(011,006),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(011,014),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,016),LENGTH=006,                              X\n               INITIAL='DELETE',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,023),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,025),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,030),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,033),LENGTH=006,                              X\n               INITIAL='RECORD',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,001),LENGTH=005,                              X\n               INITIAL='ENTER',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,007),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,012),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,015),LENGTH=002,                              X\n               INITIAL='OR',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,018),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,023),LENGTH=011,                              X\n               INITIAL='CRITERIA==>',                                  X\n               ATTRB=(ASKIP,NORM)\nSTLID    DFHMDF POS=(015,036),LENGTH=008,                              X\n               ATTRB=(UNPROT,FSET)\n         DFHMDF POS=(015,045),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nUSERHLP  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nHLPTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,020),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,027),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,034),LENGTH=004,                              X\n               INITIAL='HELP',                                         X\n               ATTRB=(ASKIP,NORM)\nHLPMORE  DFHMDF POS=(001,043),LENGTH=004,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,048),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPPAGE  DFHMDF POS=(001,051),LENGTH=003,                              X\n               PICOUT='999',PICIN='999',                               X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(001,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPDATE  DFHMDF POS=(001,060),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,069),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPTIME  DFHMDF POS=(001,072),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,001),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,006),LENGTH=011,                              X\n               INITIAL='RETURN(PF3)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,022),LENGTH=007,                              X\n               INITIAL='UP(PF7)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,034),LENGTH=009,                              X\n               INITIAL='DOWN(PF8)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMSD TYPE=FINAL\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPMP003": {"ttr": 12551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00(\\x01 \\x08/\\x01 \\x14\\x8f\\x14\\x06\\x05\\xba\\x05\\xb8\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T14:06:28", "lines": 1466, "newlines": 1464, "modlines": 0, "user": "IBMUSER"}, "text": "****************************************\n*     (C) COPYRIGHT BILLY FENWICK\n****************************************\n         TITLE 'M A P S E T  ---  RPMP003 '\n         PRINT NOGEN\nRPMP003  DFHMSD TYPE=&SYSPARM,TIOAPFX=YES,                             X\n               MODE=INOUT,                                             X\n               LANG=COBOL\nVIEWBRS  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1,CTRL=(FREEKB,FRSET)\nBRSTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,021),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,028),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,035),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,045),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\nBRSDATE  DFHMDF POS=(001,061),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,067),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,004),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(002,015),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,003),LENGTH=008,                              X\n               INITIAL='...ID...',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,014),LENGTH=008,                              X\n               INITIAL='...ID...',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,028),LENGTH=013,                              X\n               INITIAL='.......REPORT',                                X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,042),LENGTH=036,                              X\n               INITIAL='TITLE...............................',         X\n               ATTRB=(ASKIP,NORM)\nBRSIN1   DFHMDF POS=(004,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID1   DFHMDF POS=(004,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI1   DFHMDF POS=(004,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL1   DFHMDF POS=(004,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSDT1   DFHMDF POS=(004,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(004,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN2   DFHMDF POS=(005,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID2   DFHMDF POS=(005,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI2   DFHMDF POS=(005,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(005,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL2   DFHMDF POS=(005,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSDT2   DFHMDF POS=(005,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(005,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSXX3   DFHMDF POS=(006,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSIN3   DFHMDF POS=(006,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID3   DFHMDF POS=(006,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI3   DFHMDF POS=(006,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL3   DFHMDF POS=(006,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(006,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN4   DFHMDF POS=(007,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID4   DFHMDF POS=(007,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI4   DFHMDF POS=(007,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL4   DFHMDF POS=(007,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSIN5   DFHMDF POS=(007,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(007,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID5   DFHMDF POS=(008,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSSI5   DFHMDF POS=(008,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL5   DFHMDF POS=(008,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN6   DFHMDF POS=(008,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSID6   DFHMDF POS=(008,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(008,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI6   DFHMDF POS=(009,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL6   DFHMDF POS=(009,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN7   DFHMDF POS=(009,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID7   DFHMDF POS=(009,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSSI7   DFHMDF POS=(009,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(009,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL7   DFHMDF POS=(010,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSIN8   DFHMDF POS=(010,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID8   DFHMDF POS=(010,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI8   DFHMDF POS=(010,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL8   DFHMDF POS=(010,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(010,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN9   DFHMDF POS=(011,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID9   DFHMDF POS=(011,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI9   DFHMDF POS=(011,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL9   DFHMDF POS=(011,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSIN10  DFHMDF POS=(011,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(011,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID10  DFHMDF POS=(012,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSSI10  DFHMDF POS=(012,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL10  DFHMDF POS=(012,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN11  DFHMDF POS=(012,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSID11  DFHMDF POS=(012,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(012,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI11  DFHMDF POS=(013,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL11  DFHMDF POS=(013,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN12  DFHMDF POS=(013,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID12  DFHMDF POS=(013,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSSI12  DFHMDF POS=(013,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(013,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL12  DFHMDF POS=(014,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSIN13  DFHMDF POS=(014,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID13  DFHMDF POS=(014,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI13  DFHMDF POS=(014,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL13  DFHMDF POS=(014,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(014,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN14  DFHMDF POS=(015,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID14  DFHMDF POS=(015,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI14  DFHMDF POS=(015,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL14  DFHMDF POS=(015,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSIN15  DFHMDF POS=(015,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(015,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID15  DFHMDF POS=(016,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSSI15  DFHMDF POS=(016,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL15  DFHMDF POS=(016,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN16  DFHMDF POS=(016,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSID16  DFHMDF POS=(016,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(016,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI16  DFHMDF POS=(017,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL16  DFHMDF POS=(017,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN17  DFHMDF POS=(017,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID17  DFHMDF POS=(017,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSSI17  DFHMDF POS=(017,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(017,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL17  DFHMDF POS=(018,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSIN18  DFHMDF POS=(018,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID18  DFHMDF POS=(018,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI18  DFHMDF POS=(018,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL18  DFHMDF POS=(018,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(018,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSIN19  DFHMDF POS=(019,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSID19  DFHMDF POS=(019,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSSI19  DFHMDF POS=(019,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL19  DFHMDF POS=(019,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSIN20  DFHMDF POS=(019,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(019,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSID20  DFHMDF POS=(020,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSSI20  DFHMDF POS=(020,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL20  DFHMDF POS=(020,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL21  DFHMDF POS=(020,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL22  DFHMDF POS=(020,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(020,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL23  DFHMDF POS=(021,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL24  DFHMDF POS=(021,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL25  DFHMDF POS=(021,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL26  DFHMDF POS=(021,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL27  DFHMDF POS=(021,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(021,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL28  DFHMDF POS=(022,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL29  DFHMDF POS=(022,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL30  DFHMDF POS=(022,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL31  DFHMDF POS=(022,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL32  DFHMDF POS=(022,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(022,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL33  DFHMDF POS=(023,001),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRSTL34  DFHMDF POS=(023,003),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,012),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL35  DFHMDF POS=(023,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(023,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRSTL36  DFHMDF POS=(023,028),LENGTH=043,                              X\n               ATTRB=(ASKIP)\nBRSTL37  DFHMDF POS=(023,072),LENGTH=006,                              X\n               ATTRB=(PROT,DRK,FSET)\n         DFHMDF POS=(024,001),LENGTH=007,                              X\n               INITIAL='VIEW(V)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,009),LENGTH=013,                              X\n               INITIAL='INDEX-LIST(I)',                                X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,023),LENGTH=012,                              X\n               INITIAL='DATE-LIST(D)',                                 X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,038),LENGTH=007,                              X\n               INITIAL='HELP(1)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,046),LENGTH=009,                              X\n               INITIAL='RETURN(3)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,056),LENGTH=011,                              X\n               INITIAL='BACKWARD(7)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,068),LENGTH=010,                              X\n               INITIAL='FORWARD(8)',                                   X\n               ATTRB=(ASKIP,NORM)\nVIEWBRI  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nBRITX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,017),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,024),LENGTH=007,                              X\n               INITIAL='VIEWING',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,032),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,042),LENGTH=002,                              X\n               INITIAL='BY',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,045),LENGTH=003,                              X\n               INITIAL='KEY',                                          X\n               ATTRB=(ASKIP,NORM)\nBRIDATE  DFHMDF POS=(001,061),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,067),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRITIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,001),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nBRIID    DFHMDF POS=(002,005),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,021),LENGTH=006,                              X\n               INITIAL='TITLE:',                                       X\n               ATTRB=(ASKIP,NORM)\nBRITIT   DFHMDF POS=(002,028),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,002),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,012),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,019),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nBRISID   DFHMDF POS=(003,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,037),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,044),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nBRIDAT   DFHMDF POS=(003,050),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,059),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,004),LENGTH=007,                              X\n               INITIAL='...PAGE',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,012),LENGTH=003,                              X\n               INITIAL='KEY',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,016),LENGTH=008,                              X\n               INITIAL='VALUE...',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,042),LENGTH=007,                              X\n               INITIAL='...PAGE',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,050),LENGTH=003,                              X\n               INITIAL='KEY',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,054),LENGTH=008,                              X\n               INITIAL='VALUE...',                                     X\n               ATTRB=(ASKIP,NORM)\nBRIIN1   DFHMDF POS=(005,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK1   DFHMDF POS=(005,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN2   DFHMDF POS=(005,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(005,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK2   DFHMDF POS=(005,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN3   DFHMDF POS=(005,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK3   DFHMDF POS=(005,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(005,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN4   DFHMDF POS=(006,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK4   DFHMDF POS=(006,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN5   DFHMDF POS=(006,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(006,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK5   DFHMDF POS=(006,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN6   DFHMDF POS=(006,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK6   DFHMDF POS=(006,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(006,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN7   DFHMDF POS=(007,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK7   DFHMDF POS=(007,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN8   DFHMDF POS=(007,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(007,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK8   DFHMDF POS=(007,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN9   DFHMDF POS=(007,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK9   DFHMDF POS=(007,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(007,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN10  DFHMDF POS=(008,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK10  DFHMDF POS=(008,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN11  DFHMDF POS=(008,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(008,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK11  DFHMDF POS=(008,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN12  DFHMDF POS=(008,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK12  DFHMDF POS=(008,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(008,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN13  DFHMDF POS=(009,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK13  DFHMDF POS=(009,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN14  DFHMDF POS=(009,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(009,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK14  DFHMDF POS=(009,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN15  DFHMDF POS=(009,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK15  DFHMDF POS=(009,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(009,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN16  DFHMDF POS=(010,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK16  DFHMDF POS=(010,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN17  DFHMDF POS=(010,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(010,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK17  DFHMDF POS=(010,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN18  DFHMDF POS=(010,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK18  DFHMDF POS=(010,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(010,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN19  DFHMDF POS=(011,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK19  DFHMDF POS=(011,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN20  DFHMDF POS=(011,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(011,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK20  DFHMDF POS=(011,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN21  DFHMDF POS=(011,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK21  DFHMDF POS=(011,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(011,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN22  DFHMDF POS=(012,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK22  DFHMDF POS=(012,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN23  DFHMDF POS=(012,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(012,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK23  DFHMDF POS=(012,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN24  DFHMDF POS=(012,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK24  DFHMDF POS=(012,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(012,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN25  DFHMDF POS=(013,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK25  DFHMDF POS=(013,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN26  DFHMDF POS=(013,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(013,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK26  DFHMDF POS=(013,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN27  DFHMDF POS=(013,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK27  DFHMDF POS=(013,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(013,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN28  DFHMDF POS=(014,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK28  DFHMDF POS=(014,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN29  DFHMDF POS=(014,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(014,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK29  DFHMDF POS=(014,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN30  DFHMDF POS=(014,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK30  DFHMDF POS=(014,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(014,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN31  DFHMDF POS=(015,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK31  DFHMDF POS=(015,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN32  DFHMDF POS=(015,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(015,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK32  DFHMDF POS=(015,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN33  DFHMDF POS=(015,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK33  DFHMDF POS=(015,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(015,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN34  DFHMDF POS=(016,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK34  DFHMDF POS=(016,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN35  DFHMDF POS=(016,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(016,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK35  DFHMDF POS=(016,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN36  DFHMDF POS=(016,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK36  DFHMDF POS=(016,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(016,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN37  DFHMDF POS=(017,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK37  DFHMDF POS=(017,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN38  DFHMDF POS=(017,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(017,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK38  DFHMDF POS=(017,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN39  DFHMDF POS=(017,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK39  DFHMDF POS=(017,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(017,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN40  DFHMDF POS=(018,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK40  DFHMDF POS=(018,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN41  DFHMDF POS=(018,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(018,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK41  DFHMDF POS=(018,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN42  DFHMDF POS=(018,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK42  DFHMDF POS=(018,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(018,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN43  DFHMDF POS=(019,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK43  DFHMDF POS=(019,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN44  DFHMDF POS=(019,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(019,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK44  DFHMDF POS=(019,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN45  DFHMDF POS=(019,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK45  DFHMDF POS=(019,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(019,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN46  DFHMDF POS=(020,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK46  DFHMDF POS=(020,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN47  DFHMDF POS=(020,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(020,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK47  DFHMDF POS=(020,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN48  DFHMDF POS=(020,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK48  DFHMDF POS=(020,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(020,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN49  DFHMDF POS=(021,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK49  DFHMDF POS=(021,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN50  DFHMDF POS=(021,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(021,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK50  DFHMDF POS=(021,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN51  DFHMDF POS=(021,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK51  DFHMDF POS=(021,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(021,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIIN52  DFHMDF POS=(022,002),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIRK52  DFHMDF POS=(022,004),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIIN53  DFHMDF POS=(022,025),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(022,033),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRIRK53  DFHMDF POS=(022,040),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRIIN54  DFHMDF POS=(022,042),LENGTH=020,                              X\n               ATTRB=(ASKIP)\nBRIRK54  DFHMDF POS=(022,063),LENGTH=007,                              X\n               PICOUT='9999999',                                       X\n               ATTRB=(PROT,NUM,DRK,FSET)\n         DFHMDF POS=(022,071),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,001),LENGTH=007,                              X\n               INITIAL='VIEW(V)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,018),LENGTH=009,                              X\n               INITIAL='HELP(PF1)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,028),LENGTH=011,                              X\n               INITIAL='RETURN(PF3)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,040),LENGTH=013,                              X\n               INITIAL='BACKWARD(PF7)',                                X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,054),LENGTH=012,                              X\n               INITIAL='FORWARD(PF8)',                                 X\n               ATTRB=(ASKIP,NORM)\nVIEWSTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1,CTRL=(FREEKB,FRSET)\nSTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,027),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,034),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,037),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\nSTLDATE  DFHMDF POS=(001,058),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nSTLTIME  DFHMDF POS=(001,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nSTLMSG   DFHMDF POS=(002,019),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,001),LENGTH=006,                              X\n               INITIAL='OPTION',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(003,008),LENGTH=003,                              X\n               INITIAL='==>',                                          X\n               ATTRB=(ASKIP,NORM)\nSTLOPT   DFHMDF POS=(003,013),LENGTH=001,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,015),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,001),LENGTH=001,                              X\n               INITIAL='1',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(005,004),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,009),LENGTH=005,                              X\n               INITIAL='DATES',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,015),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,017),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,022),LENGTH=003,                              X\n               INITIAL='ALL',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,026),LENGTH=005,                              X\n               INITIAL='DATES',                                        X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,032),LENGTH=009,                              X\n               INITIAL='AVAILABLE',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,042),LENGTH=003,                              X\n               INITIAL='FOR',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,046),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,048),LENGTH=008,                              X\n               INITIAL='SPECIFIC',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,057),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,023),LENGTH=007,                              X\n               INITIAL='(REPORT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,031),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,034),LENGTH=002,                              X\n               INITIAL='IS',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(006,037),LENGTH=009,                              X\n               INITIAL='REQUIRED)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,001),LENGTH=001,                              X\n               INITIAL='2',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(007,004),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,009),LENGTH=004,                              X\n               INITIAL='KEYS',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,015),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,017),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,022),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,026),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,033),LENGTH=003,                              X\n               INITIAL='KEY',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,037),LENGTH=006,                              X\n               INITIAL='VALUES',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,044),LENGTH=003,                              X\n               INITIAL='FOR',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,048),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(007,050),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,023),LENGTH=007,                              X\n               INITIAL='(REPORT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,031),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,034),LENGTH=002,                              X\n               INITIAL='IS',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,037),LENGTH=009,                              X\n               INITIAL='REQUIRED)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,001),LENGTH=001,                              X\n               INITIAL='3',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(009,004),LENGTH=007,                              X\n               INITIAL='REPORTS',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,015),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,017),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,022),LENGTH=003,                              X\n               INITIAL='ALL',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,026),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,030),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,037),LENGTH=003,                              X\n               INITIAL='IDS',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,041),LENGTH=003,                              X\n               INITIAL='FOR',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,045),LENGTH=003,                              X\n               INITIAL='THE',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,049),LENGTH=004,                              X\n               INITIAL='USER',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,054),LENGTH=003,                              X\n               INITIAL='WHO',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,058),LENGTH=002,                              X\n               INITIAL='IS',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,061),LENGTH=006,                              X\n               INITIAL='SIGNED',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,068),LENGTH=002,                              X\n               INITIAL='ON',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,001),LENGTH=001,                              X\n               INITIAL='4',                                            X\n               ATTRB=(ASKIP,BRT)\n         DFHMDF POS=(010,004),LENGTH=004,                              X\n               INITIAL='VIEW',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,015),LENGTH=001,                              X\n               INITIAL='-',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,017),LENGTH=004,                              X\n               INITIAL='PULL',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,022),LENGTH=002,                              X\n               INITIAL='UP',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,025),LENGTH=001,                              X\n               INITIAL='A',                                            X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,027),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,034),LENGTH=002,                              X\n               INITIAL='TO',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,037),LENGTH=006,                              X\n               INITIAL='REVIEW',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,023),LENGTH=007,                              X\n               INITIAL='(REPORT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,031),LENGTH=002,                              X\n               INITIAL='ID',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,034),LENGTH=002,                              X\n               INITIAL='IS',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(011,037),LENGTH=009,                              X\n               INITIAL='REQUIRED)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(015,014),LENGTH=007,                              X\n               INITIAL='BANK==>',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLBNK   DFHMDF POS=(015,023),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,032),LENGTH=009,                              X\n               INITIAL='BRANCH==>',                                    X\n               ATTRB=(ASKIP,NORM)\nSTLBRCH  DFHMDF POS=(015,044),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(016,007),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(016,014),LENGTH=007,                              X\n               INITIAL='ID====>',                                      X\n               ATTRB=(ASKIP,NORM)\nSTLRID   DFHMDF POS=(016,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(017,007),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(017,017),LENGTH=004,                              X\n               INITIAL='ID=>',                                         X\n               ATTRB=(ASKIP,NORM)\nSTLSID   DFHMDF POS=(017,023),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(018,007),LENGTH=014,                              X\n               INITIAL='DATE=========>',                               X\n               ATTRB=(ASKIP,NORM)\nSTLDTE   DFHMDF POS=(018,023),LENGTH=006,                              X\n               PICOUT='999999',                                        X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(018,030),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nVIEWBRD  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1,CTRL=(FREEKB,FRSET)\nBRDTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,017),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,024),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,031),LENGTH=009,                              X\n               INITIAL='SELECTION',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,041),LENGTH=004,                              X\n               INITIAL='LIST',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,046),LENGTH=002,                              X\n               INITIAL='BY',                                           X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,049),LENGTH=004,                              X\n               INITIAL='DATE',                                         X\n               ATTRB=(ASKIP,NORM)\nBRDDATE  DFHMDF POS=(001,061),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,067),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDTIME  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,001),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nBRDID1   DFHMDF POS=(003,005),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,014),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(003,016),LENGTH=007,                              X\n               INITIAL='REPORT:',                                      X\n               ATTRB=(ASKIP,NORM)\nBRDTIT   DFHMDF POS=(003,024),LENGTH=050,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(003,075),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(004,001),LENGTH=009,                              X\n               INITIAL='SECONDARY',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(004,011),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nBRDSID   DFHMDF POS=(004,015),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(004,024),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(005,007),LENGTH=008,                              X\n               INITIAL='..DATE..',                                     X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,024),LENGTH=009,                              X\n               INITIAL='..PAGES..',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(005,043),LENGTH=011,                              X\n               INITIAL='...LINES...',                                  X\n               ATTRB=(ASKIP,NORM)\nBRDIN1   DFHMDF POS=(006,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT1   DFHMDF POS=(006,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(006,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG1   DFHMDF POS=(006,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(006,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN1   DFHMDF POS=(006,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(006,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN2   DFHMDF POS=(007,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT2   DFHMDF POS=(007,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(007,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG2   DFHMDF POS=(007,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(007,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN2   DFHMDF POS=(007,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(007,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN3   DFHMDF POS=(008,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT3   DFHMDF POS=(008,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(008,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG3   DFHMDF POS=(008,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN3   DFHMDF POS=(008,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN4   DFHMDF POS=(009,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT4   DFHMDF POS=(009,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(009,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG4   DFHMDF POS=(009,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN4   DFHMDF POS=(009,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN5   DFHMDF POS=(010,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT5   DFHMDF POS=(010,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(010,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG5   DFHMDF POS=(010,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN5   DFHMDF POS=(010,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN6   DFHMDF POS=(011,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT6   DFHMDF POS=(011,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(011,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG6   DFHMDF POS=(011,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(011,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN6   DFHMDF POS=(011,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(011,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN7   DFHMDF POS=(012,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT7   DFHMDF POS=(012,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(012,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG7   DFHMDF POS=(012,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(012,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN7   DFHMDF POS=(012,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(012,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN8   DFHMDF POS=(013,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT8   DFHMDF POS=(013,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(013,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG8   DFHMDF POS=(013,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(013,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN8   DFHMDF POS=(013,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(013,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN9   DFHMDF POS=(014,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT9   DFHMDF POS=(014,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(014,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG9   DFHMDF POS=(014,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(014,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN9   DFHMDF POS=(014,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(014,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN10  DFHMDF POS=(015,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT10  DFHMDF POS=(015,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(015,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG10  DFHMDF POS=(015,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN10  DFHMDF POS=(015,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(015,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN11  DFHMDF POS=(016,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT11  DFHMDF POS=(016,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(016,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG11  DFHMDF POS=(016,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(016,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN11  DFHMDF POS=(016,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(016,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN12  DFHMDF POS=(017,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT12  DFHMDF POS=(017,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(017,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG12  DFHMDF POS=(017,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(017,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN12  DFHMDF POS=(017,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(017,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN13  DFHMDF POS=(018,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT13  DFHMDF POS=(018,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(018,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG13  DFHMDF POS=(018,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(018,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN13  DFHMDF POS=(018,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(018,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN14  DFHMDF POS=(019,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT14  DFHMDF POS=(019,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(019,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG14  DFHMDF POS=(019,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(019,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN14  DFHMDF POS=(019,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(019,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN15  DFHMDF POS=(020,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT15  DFHMDF POS=(020,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(020,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG15  DFHMDF POS=(020,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(020,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN15  DFHMDF POS=(020,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(020,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN16  DFHMDF POS=(021,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT16  DFHMDF POS=(021,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(021,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG16  DFHMDF POS=(021,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(021,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN16  DFHMDF POS=(021,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(021,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDIN17  DFHMDF POS=(022,005),LENGTH=001,                              X\n               ATTRB=(ASKIP)\nBRDDT17  DFHMDF POS=(022,007),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(022,016),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDPG17  DFHMDF POS=(022,024),LENGTH=009,                              X\n               PICOUT='9,999,999',                                     X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(022,034),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nBRDLN17  DFHMDF POS=(022,043),LENGTH=011,                              X\n               PICOUT='999,999,999',                                   X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(022,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,001),LENGTH=007,                              X\n               INITIAL='VIEW(V)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,012),LENGTH=013,                              X\n               INITIAL='INDEX-LIST(I)',                                X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,038),LENGTH=007,                              X\n               INITIAL='HELP(1)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,046),LENGTH=009,                              X\n               INITIAL='RETURN(3)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,056),LENGTH=011,                              X\n               INITIAL='BACKWARD(7)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,068),LENGTH=010,                              X\n               INITIAL='FORWARD(8)',                                   X\n               ATTRB=(ASKIP,NORM)\nVIEWDTL  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1,CTRL=(FRSET)\nDTLTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=006,                              X\n               INITIAL='SKIP=>',                                       X\n               ATTRB=(ASKIP,NORM)\nDTLCMD   DFHMDF POS=(001,014),LENGTH=004,                              X\n               PICIN='9999',                                           X\n               PICOUT='9999',                                          X\n               ATTRB=(NUM,IC)\n         DFHMDF POS=(001,019),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,022),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nDTLID    DFHMDF POS=(001,026),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,035),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,040),LENGTH=004,                              X\n               INITIAL='SID:',                                         X\n               ATTRB=(ASKIP,NORM)\nDTLSID   DFHMDF POS=(001,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,057),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,064),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nDTLDATE  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,001),LENGTH=001,                              X\n               INITIAL='L',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLLN    DFHMDF POS=(002,003),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(002,007),LENGTH=001,                              X\n               INITIAL='C',                                            X\n               ATTRB=(ASKIP,NORM)\nDTLCLM   DFHMDF POS=(002,009),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDTLSRCD  DFHMDF POS=(002,014),LENGTH=008,                              X\n               INITIAL='SEARCH=>',                                     X\n               ATTRB=(ASKIP,NORM)\nDTLSRC   DFHMDF POS=(002,023),LENGTH=055,                              X\n               ATTRB=(ASKIP)\nDTLCNT   DFHMDF POS=(003,001),LENGTH=025,                              X\n               ATTRB=(ASKIP)\nDTLMSG   DFHMDF POS=(003,035),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n* DTLLNE   DFHMDF POS=(002,080),LENGTH=079,OCCURS=21,                 X\n*                ATTRB=(ASKIP)\nDTLPFS   DFHMDF POS=(024,001),LENGTH=079,                              X\n               ATTRB=(ASKIP)\nVIEWDT5  DFHMDI SIZE=(027,132),COLUMN=1,LINE=1,CTRL=(FRSET)\nDT5TX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=006,                              X\n               INITIAL='SKIP=>',                                       X\n               ATTRB=(ASKIP,NORM)\nDT5CMD   DFHMDF POS=(001,014),LENGTH=004,                              X\n               PICIN='9999',                                           X\n               PICOUT='9999',                                          X\n               ATTRB=(NUM,IC)\n         DFHMDF POS=(001,019),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,022),LENGTH=003,                              X\n               INITIAL='ID:',                                          X\n               ATTRB=(ASKIP,NORM)\nDT5ID    DFHMDF POS=(001,026),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,035),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,040),LENGTH=004,                              X\n               INITIAL='SID:',                                         X\n               ATTRB=(ASKIP,NORM)\nDT5SID   DFHMDF POS=(001,045),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,054),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,057),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,064),LENGTH=005,                              X\n               INITIAL='DATE:',                                        X\n               ATTRB=(ASKIP,NORM)\nDT5DATE  DFHMDF POS=(001,070),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,079),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(002,001),LENGTH=001,                              X\n               INITIAL='L',                                            X\n               ATTRB=(ASKIP,NORM)\nDT5LN    DFHMDF POS=(002,003),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(002,007),LENGTH=001,                              X\n               INITIAL='C',                                            X\n               ATTRB=(ASKIP,NORM)\nDT5CLM   DFHMDF POS=(002,009),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\nDT5SRCD  DFHMDF POS=(002,014),LENGTH=008,                              X\n               INITIAL='SEARCH=>',                                     X\n               ATTRB=(ASKIP,NORM)\nDT5SRC   DFHMDF POS=(002,023),LENGTH=055,                              X\n               ATTRB=(ASKIP)\nDT5CNT   DFHMDF POS=(003,001),LENGTH=025,                              X\n               ATTRB=(ASKIP)\nDT5MSG   DFHMDF POS=(003,035),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n* DTLLNE   DFHMDF POS=(002,080),LENGTH=079,OCCURS=21,                 X\n*                ATTRB=(ASKIP)\nDT5PFS   DFHMDF POS=(027,020),LENGTH=079,                              X\n               ATTRB=(ASKIP)\nVIEWDDA  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1\nDDATX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,026),LENGTH=003,                              X\n               INITIAL='DDA',                                          X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,030),LENGTH=009,                              X\n               INITIAL='STATEMENT',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,040),LENGTH=007,                              X\n               INITIAL='VIEWING',                                      X\n               ATTRB=(ASKIP,NORM)\nDDADATE  DFHMDF POS=(001,058),LENGTH=005,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,064),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDDATIME  DFHMDF POS=(001,067),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,076),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDDAMSG   DFHMDF POS=(002,019),LENGTH=040,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,060),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(008,007),LENGTH=004,                              X\n               INITIAL='BANK',                                         X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,012),LENGTH=006,                              X\n               INITIAL='NUMBER',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(008,021),LENGTH=002,                              X\n               INITIAL='=>',                                           X\n               ATTRB=(ASKIP,NORM)\nDDABNK   DFHMDF POS=(008,025),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(008,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(009,007),LENGTH=006,                              X\n               INITIAL='BRANCH',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,014),LENGTH=006,                              X\n               INITIAL='NUMBER',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(009,021),LENGTH=002,                              X\n               INITIAL='=>',                                           X\n               ATTRB=(ASKIP,NORM)\nDDABCH   DFHMDF POS=(009,025),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(009,029),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(010,007),LENGTH=007,                              X\n               INITIAL='ACCOUNT',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(010,015),LENGTH=008,                              X\n               INITIAL='NUMBER=>',                                     X\n               ATTRB=(ASKIP,NORM)\nDDAACT   DFHMDF POS=(010,025),LENGTH=010,                              X\n               PICOUT='9999999999',                                    X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(010,036),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nDDADTEC  DFHMDF POS=(011,007),LENGTH=016,                              X\n               INITIAL='STATEMENT DATE=>',                             X\n               ATTRB=(ASKIP,NORM)\nDDADTE   DFHMDF POS=(011,025),LENGTH=006,                              X\n               PICOUT='999999',                                        X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(011,032),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nVIEWHLP  DFHMDI SIZE=(024,080),COLUMN=1,LINE=1,CTRL=(FRSET)\nHLPTX    DFHMDF POS=(001,001),LENGTH=004,                              X\n               ATTRB=(ASKIP,FSET)\n         DFHMDF POS=(001,006),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(001,020),LENGTH=006,                              X\n               INITIAL='REPORT',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,027),LENGTH=006,                              X\n               INITIAL='SYSTEM',                                       X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(001,034),LENGTH=004,                              X\n               INITIAL='HELP',                                         X\n               ATTRB=(ASKIP,NORM)\nHLPMORE  DFHMDF POS=(001,043),LENGTH=004,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,048),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPPAGE  DFHMDF POS=(001,051),LENGTH=003,                              X\n               PICOUT='999',                                           X\n               ATTRB=(ASKIP,NUM)\n         DFHMDF POS=(001,055),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPDATE  DFHMDF POS=(001,060),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(001,069),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\nHLPTIME  DFHMDF POS=(001,072),LENGTH=008,                              X\n               ATTRB=(ASKIP)\n         DFHMDF POS=(002,001),LENGTH=001,ATTRB=ASKIP  *INPUT STOPPER*\n         DFHMDF POS=(024,006),LENGTH=011,                              X\n               INITIAL='RETURN(PF3)',                                  X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,022),LENGTH=007,                              X\n               INITIAL='UP(PF7)',                                      X\n               ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(024,034),LENGTH=009,                              X\n               INITIAL='DOWN(PF8)',                                    X\n               ATTRB=(ASKIP,NORM)\n         DFHMSD TYPE=FINAL\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERIDJC": {"ttr": 13066, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x10\\x01 \\x08/\\x01 \\x14\\x8f\\x16Q\\x00\\x16\\x00\\x11\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-03-22T00:00:00", "modifydate": "2020-05-27T16:51:10", "lines": 22, "newlines": 17, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT137/FILE137.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT137", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}