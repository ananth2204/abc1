{"INMR01": {"INMLRECL": 80, "INMFNODE": "MON2", "INMFUID": "WSBG", "INMTNODE": "N1", "INMTUID": "WSBG", "INMFTIME": "20010706142628000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6160, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "WSBG.VINHVU.ISPF", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"WSBG.VINHVU.ISPF": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6160, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3294, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "010187", "DS1SCEXT": "b'\\x80\\x18\\x10'", "DS1SCALO": "b'P\\x00\\x00\\x06'", "DS1LSTAR": "b'\\x00\\x04\\x08'", "DS1TRBAL": "b'-('"}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f+P\\x00\\x04\\x8a\\xd0('", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f+P\\x00\\x04\\x8a\\xd0('", "b'X\\xf3\\x17\\xc0\\x00\\x00\\x00W\\x00\\x03\\x00W\\x00\\x05\\x00\\x03'", "b'X\\xf3\\x17\\xc0\\x00\\x00\\x00&\\x00\\x03\\x00&\\x00\\x03\\x00\\x01'", "b'X\\xf3\\x17\\xc0\\x00\\x00\\x000\\x00\\x0e\\x000\\x00\\x0e\\x00\\x01'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"BCMPNL1": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00W\\x00\\x83\\x13\\x9f\\x01\\x01\\x18\\x7f\\x07R\\x00A\\x00\\x13\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1983-05-19T00:00:00", "modifydate": "2001-07-06T07:52:57", "lines": 65, "newlines": 19, "modlines": 0, "user": "NMVV1"}, "text": ")ATTR\n % TYPE(TEXT)   CAPS(OFF)\n # TYPE(INPUT)  CAPS(ON)   COLOR(RED) HILITE(USCORE)\n | TYPE(INPUT)  CAPS(ON)   COLOR(RED)\n + TYPE(TEXT)   INTENS(LOW)   CAPS(OFF)  COLOR(WHITE) SKIP(ON)\n \u00a6 TYPE(OUTPUT) CAPS(OFF)  COLOR(WHITE)\n ! TYPE(TEXT)   CAPS(OFF)  COLOR(YELLOW)\n @ TYPE(OUTPUT) INTENS(LOW) CAPS(OFF)  COLOR(TURQ) JUST(RIGHT)\n } TYPE(OUTPUT) JUST(LEFT)  CAPS(OFF)  COLOR(TURQ)\n \u00a2 TYPE(OUTPUT) JUST(LEFT)  CAPS(OFF)  COLOR(GREEN) JUST(RIGHT)\n \u00ac TYPE(TEXT)   JUST(RIGHT)                        COLOR(TURQ)\n \" TYPE(TEXT)   CAPS(OFF)  HILITE(REVERSE) COLOR(YELLOW)\n ~ TYPE(OUTPUT) CAPS(OFF)                  COLOR(GREEN) JUST(RIGHT)\n { TYPE(OUTPUT) CAPS(OFF) JUST(LEFT)       COLOR(YELLOW)\n \\ TYPE(AB)\n < TYPE(ABSL)\n)ABC Desc(Sort) MNEM(1)\n  PDC DESC('SORT By ID')             MNEM(9) ACTION RUN(SORTID)\n  PDC DESC('SORT By Total Messages') MNEM(9) ACTION RUN(SORTTOT)\n)ABCINIT\n  .ZVARS='SORTX'\n)ABC Desc(Exit) MNEM(2)\n  PDC DESC('Exit') ACTION RUN(END)\n)ABCINIT\n  .ZVARS='ENDX'\n  .RESP = ENTER\n)BODY EXPAND(``)\n!\\ Sort  \\ Exit +\n!`-`\n@ZDATESTD   %-`-` \"SYS1.BRODCAST Utility% `-`@ZTIMEL      +\n+Cmd input%===> _ZCMD                                         +Scroll%===>_AMT +\n\u00ac (SORTID, SORTTOT)\n+\n+   !CPU Type: @MACH! CPs:@CP! SU/Sec:@SUSEC ! Real:@RSTORE! Exp:@ESTORE+\n+    Active SMF id:~Z   +              Number of Active TSUs:~NUMTSU  +\n+    Broadcast DSN:{$DSNAME                                           +\n+    Volume:{Z     +    Unit: {Z   +    Creation Date:{$CRDATE +\n+    Dsorg:@Z  +   Recfm:@Z   +  Keyl:@Z   + Lrecl:@Z    +  Blksize:@Z    +\n+\n!Action    SKIP    MSGS   ID        Number Of  TSO ID\n!(S/D/P)   (nn)    (nn)             Messages   Status\n%-`-`\n)MODEL\n   |Z+   #SKAMT +#MSAMT +\u00a6UID     +\u00a2UTOTAL   +}USTAT                           +\n)INIT\n   .ZVARS = '(SMFID $VOLUME $UNIT $DSORG $RECFM $KEYL $LRECL $BLKSIZE $SEL)'\n   &$SEL = '_'\n   &SKAMT = ' '\n   &MSAMT = ' '\n   &AMT = PAGE\n   &ZCMD = ''\n)REINIT\n   .ZVARS = '(SMFID $VOLUME $UNIT $DSORG $RECFM $KEYL $LRECL $BLKSIZE $SEL)'\n   &$SEL = '_'\n   &SKAMT = ' '\n   &MSAMT = ' '\n   &AMT = PAGE\n   &ZCMD = ''\n)PROC\n   VER (&$SEL,LIST,S,D,P,'_',' ')\n   VER (&SKAMT,RANGE,0,999999)\n   VER (&MSAMT,RANGE,1,999999)\n   &MYCMD = &ZCMD\n   &MYSEL = &$SEL\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCMPNL2": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x08\\x00\\x83\\x13\\x9f\\x01\\x01\\x00_\\tP\\x00 \\x00\\x13\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1983-05-19T00:00:00", "modifydate": "2001-01-05T09:50:08", "lines": 32, "newlines": 19, "modlines": 0, "user": "NMVV1"}, "text": ")ATTR\n { TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(RED)\n ~ TYPE(OUTPUT) CAPS(OFF) HILITE(REVERSE) COLOR(YELLOW)\n # TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(GREEN)\n } TYPE(CHAR)  CAPS(OFF)                  COLOR(GREEN)\n % TYPE(TEXT)  CAPS(OFF)\n + TYPE(TEXT)  CAPS(OFF)                  COLOR(WHITE)\n \u00a6 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n ! TYPE(TEXT)   CAPS(OFF)                 COLOR(YELLOW)\n03 TYPE(TEXT)  CAPS(OFF)                  COLOR(BLUE)\n04 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n05 TYPE(TEXT)  CAPS(OFF)                  COLOR(YELLOW)\n06 TYPE(TEXT)  CAPS(OFF)                  COLOR(RED)\n @ TYPE(OUTPUT) JUST(ASIS)  INTENS(LOW) CAPS(OFF)  COLOR(TURQ)\n \u00ac TYPE(OUTPUT) JUST(ASIS)  INTENS(LOW) CAPS(OFF)  COLOR(GREEN)\n \" TYPE(OUTPUT) JUST(ASIS)                         COLOR(GREEN)\n01 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(RED)\n02 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(BLUE)\n11 TYPE(OUTPUT) JUST(RIGHT) INTENS(LOW) CAPS(OFF)  COLOR(WHITE)\n)BODY WINDOW(76,19) EXPAND(``)\n~UID     +`-`@ZTIMEL      +\n+Cmd input%===> _ZCMD                                     +Scr%===>_AMT    +\n@ACTCMD    +\n+   \u00acACTION                                                                +\n+\n)MODEL\n!>@UMSG1                                                                   +\n  @UMSG2                                                                   +\n)INIT\n)PROC\n   &MYCMD = &ZCMD\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCMPNL3": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00U\\x00\\x83\\x13\\x9f\\x01\\x006O\\x11\\t\\x00\\x17\\x00\\x13\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1983-05-19T00:00:00", "modifydate": "2000-12-29T11:09:55", "lines": 23, "newlines": 19, "modlines": 0, "user": "NMVV1"}, "text": ")ATTR\n { TYPE(TEXT)  CAPS(OFF)                  COLOR(TURQ)\n ~ TYPE(OUTPUT) CAPS(OFF) HILITE(REVERSE) COLOR(YELLOW)\n # TYPE(TEXT)  CAPS(OFF)  HILITE(REVERSE) COLOR(GREEN)\n } TYPE(CHAR)  CAPS(OFF)                  COLOR(GREEN)\n % TYPE(TEXT)  CAPS(OFF)\n + TYPE(TEXT)  CAPS(OFF)                  COLOR(WHITE)\n \u00a6 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n ! TYPE(TEXT)  CAPS(OFF)                  COLOR(YELLOW)\n03 TYPE(TEXT)  CAPS(OFF)                  COLOR(BLUE)\n04 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n05 TYPE(TEXT)  CAPS(OFF)                  COLOR(YELLOW)\n06 TYPE(TEXT)  CAPS(OFF)                  COLOR(RED)\n @ TYPE(OUTPUT) JUST(ASIS)  INTENS(LOW) CAPS(OFF)  COLOR(TURQ)\n \u00ac TYPE(OUTPUT) JUST(ASIS)  HILITE(REVERSE)        COLOR(RED)\n \" TYPE(OUTPUT) JUST(ASIS)                         COLOR(GREEN)\n01 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(RED)\n02 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(BLUE)\n11 TYPE(OUTPUT) JUST(RIGHT) INTENS(LOW) CAPS(OFF)  COLOR(WHITE)\n)BODY WINDOW(41,2) EXPAND(``)\n+     Deleting msgs for~UID     +?+\n!Press#Enter!To Proceed or#END!to Cancel+\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCMPNL4": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00'\\x01\\x01\\t?\\x01\\x01\\t?\\x15\\x18\\x00$\\x00$\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-04-03T00:00:00", "modifydate": "2001-04-03T15:18:27", "lines": 36, "newlines": 36, "modlines": 0, "user": "NMVV1"}, "text": ")ATTR\n { TYPE(TEXT)  CAPS(OFF)                  COLOR(TURQ)\n ~ TYPE(OUTPUT) CAPS(OFF) HILITE(REVERSE) COLOR(YELLOW)\n | TYPE(INPUT)                            COLOR(TURQ)\n # TYPE(TEXT)  CAPS(OFF)  HILITE(REVERSE) COLOR(GREEN)\n } TYPE(CHAR)  CAPS(OFF)                  COLOR(GREEN)\n % TYPE(TEXT)  CAPS(OFF)\n + TYPE(TEXT)  CAPS(OFF)                  COLOR(WHITE)\n \u00a6 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n ! TYPE(TEXT)  CAPS(OFF)                  COLOR(YELLOW)\n03 TYPE(TEXT)  CAPS(OFF)                  COLOR(BLUE)\n04 TYPE(TEXT)  CAPS(OFF)                  COLOR(GREEN)\n05 TYPE(TEXT)  CAPS(OFF)                  COLOR(YELLOW)\n06 TYPE(TEXT)  CAPS(OFF)                  COLOR(RED)\n @ TYPE(OUTPUT) JUST(ASIS)  INTENS(LOW) CAPS(OFF)  COLOR(TURQ)\n \u00ac TYPE(OUTPUT) JUST(ASIS)  HILITE(REVERSE)        COLOR(RED)\n \" TYPE(OUTPUT) JUST(ASIS)                         COLOR(GREEN)\n01 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(RED)\n02 TYPE(OUTPUT) JUST(RIGHT) HILITE(REVERSE)        COLOR(BLUE)\n11 TYPE(OUTPUT) JUST(RIGHT) INTENS(LOW) CAPS(OFF)  COLOR(WHITE)\n)BODY WINDOW(44,8) EXPAND(``)\n+       Print Messages for~UID     +\n+\n+ SYSOUT Allocation Attributes+\n!       Class ==> |Z+\n! Destination ==> |ODEST            +(opt)\n!      Writer ==> |OWRITER +         (opt)\n+\n+ Press#Enter+To Proceed or#END+to Cancel+\n)INIT\n   .ZVARS = '(OCLASS)'\n)PROC\n   VER (&OCLASS,NB,INCLUDE,ALPHAB,NUM)\n   VER (&ODEST,EBCDIC)\n   VER (&OWRITER,INCLUDE,ALPHAB,NUM)\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCMUTIL": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00$\\x01\\x01\\x18\\x0f\\x01\\x01\\x18\\x7f\\x08\\x02\\x02J\\x023\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-06-29T00:00:00", "modifydate": "2001-07-06T08:02:24", "lines": 586, "newlines": 563, "modlines": 0, "user": "NMVV1"}, "text": "/********************** BCMUTIL  REXX/CLIST      *********************/\n/*  BCMUTIL                                                          */\n/*                                                                   */\n/*     This exec provides an ISPF interface to the following pgms:   */\n/*     BCMUSERS, BCMLIST and BCMDEL2 from file 247 on the CBT tape.  */\n/*     The exec makes certain assumption about the output from these */\n/*     commands, therefore, may need to be revised when these cmds   */\n/*     change.                                                       */\n/*                                                                   */\n/*  SYNTAX: BCMUTIL DSN                                              */\n/*     DSN - Optional - used for testing against a copy of the       */\n/*         system BRODCAST data set.  Use the same syntax for any    */\n/*         TSO dataset, i.e. either use quotes or Data set will be   */\n/*         prefixed with your Userid Profile Prefix.  If not         */\n/*         provided, then use the default from BC_DSN variable.      */\n/*                                                                   */\n/*  Date-written:  12/28/2000 - Vinh Vu                              */\n/*                                                                   */\n/*  Customization:                                                   */\n/*     Change default setting in the \"CUSTOMIZATION BLOCK\" to        */\n/*     to reflect Panel names (if you decide to change them) and     */\n/*     BCMxx command names, BRODCAST data set name.                  */\n/*                                                                   */\n/*********************************************************************/\n/*                                                                   */\n/*  Change History:                                                  */\n/*                                                                   */\n/*     01/03/2001 - V_Vu - Change to move 'NUMERIC DIGITS 256' to    */\n/*         the body of main exec so that all 'C2D' calls will work   */\n/*         (thanks to Sam Golob and Bob Lamerand of StorageTek).     */\n/*                                                                   */\n/*     01/05/2001 - V_Vu - Change to add PRINT function.             */\n/*                                                                   */\n/*     01/08/2001 - V_Vu - Change to make PRINT function work better.*/\n/*         Also, add change to display the BRODCAST dsn plus data    */\n/*         set info...                                               */\n/*                                                                   */\n/*     01/09/2001 - V_Vu - Change to fix the row positioning after   */\n/*         a row is selected.                                        */\n/*                                                                   */\n/*     06/28/2001 - V_Vu - Change to allow for SKIP(nn) and MSGS(nn) */\n/*         in BCMLIST and BCMDEL2.  Also add CPU information display */\n/*         on the Primary Panel as well.                             */\n/*                                                                   */\n/*********************************************************************/\n\n/********************* CUSTOMIZATION BLOCK ***************************/\n\nTABLENM    = 'BCMTABL'         /* Main table name                    */\nTABLEMSG   = 'BCMMSGS'         /* Table used to display msgs         */\nTABPANEL   = 'BCMPNL1'         /* Panel name for main display        */\nMSGPANEL   = 'BCMPNL2'         /* Panel used to display msgs         */\nALERTPANEL = 'BCMPNL3'         /* Panel used to alert for DEL action */\nPRINTPANEL = 'BCMPNL4'         /* Panel used to print messages       */\nPROGRBAR   = 'PROGRBAR'        /* Progree Bar Panel                  */\n\nOCLASS     = 'A'               /* Default SYSOUT for printing        */\nODEST      = '  '              /* Default DEST for printing          */\nOWRITER    = ' '               /* Default WRITER for printing        */\nMAX_LINES  = 50                /* Line/Count per page for printing   */\nEXTRA_LINES_AT_THE_END = 2\nLAST_LINE              = 1\n\nLST_USER_CMD = 'BCMUSERS'      /* TSO cmd to list userid w/msgs      */\nLST_USER_MSG = 'BCMLIST'       /* TSO cmd to list a specicic id msgs */\nDEL_USER_MSG = 'BCMDEL2'       /* TSO cmd to delete msgs             */\n\nBC_DSN = \"'SYS1.BRODCAST'\"     /* Default DSN for the BROADCAST data */\n                               /* set. Overriden by PARM.            */\n\n/***************************** END ***********************************/\n\nIf Sysvar(SYSISPF) \u00ac='ACTIVE' Then Do\n   Parse Source . . EXEC_NAME .\n   Say '***' EXEC_NAME 'can only run under ISPF...'\n   Exit\n   End\n\nAddress ISPEXEC\n\nNUMERIC DIGITS 256\n\nMSG_X_AXIS  = 20                               /* 20 units on X-axis */\n                                               /* for the progr bar  */\n\nCOLOR.         = '\u00ac'           /* Default color = White              */\nCOLOR.RED      = '{'           /* These colors should match with     */\nCOLOR.BLUE     = '~'           /* what's being defined in the progr  */\nCOLOR.YELLOW   = '_'           /* bar panel.                         */\nCOLOR.TURQ     = '`'           /*                                    */\nCOLOR.WHITE    = '\u00ac'           /*                                    */\nCOLOR.PINK     = '!'           /*                                    */\nCOLOR.GREEN    = '#'           /*                                    */\n\nTEXT_COLOR     = '}'           /*                                    */\n\nZTDMARK = Center(' End Of List ',80,'-')\n\nCall DISPLAY_IN_PROGRESS_BAR 5 RED\n\nDELETED_TOTAL = 0\nDELETED_MSG   = 'Msgs have been deleted for id(s):'\n\nSORT_BY_ID    = 'TBSORT '||TABLENM||' FIELDS(UID,C,A)'\nSORT_BY_TOTAL = 'TBSORT '||TABLENM||' FIELDS(UTOTAL,N,A,UID,C,A)'\n\nSORT_STMT = SORT_BY_ID\nACTCMD = ''\n\nMSG_FOR_DELETE  = 'Following Broadcast Messages Have Been Deleted:'\nMSG_FOR_DISPLAY = 'Outstanding Broadcast Messages:'\n\nArg DSN .\nIf DSN = '' Then DSN = BC_DSN\n\nX = Listdsi(DSN 'DIRECTORY NORECALL')\nIf X=16 Then Do\n   If SYSREASON = 9 Then Do\n      Say '** Data set has been migrated .. Abort'\n      Exit\n      End\n   If SYSREASON = 5 Then Do\n      Say '** Data set not cataloged .. Abort'\n      Exit\n      End\n   Else Do\n      Say '** Servere error in LISTDSI...Rc=16 - SYSREASON=' SYSREASON\n      Exit\n      End\n   End\n\nAddress TSO 'ALLOC F(BRODCAST) DA('||DSN') SHR REU'\nIf RC > 0 Then Do\n   Say '** Error Allocating '||DSN||'. Abort...'\n   Exit\n   End\n\n$DSNAME  =  SYSDSNAME\n$VOLUME  =  SYSVOLUME\n$DSORG   =  SYSDSORG\n$RECFM   =  SYSRECFM\n$LRECL   =  SYSLRECL\n$KEYL    =  SYSKEYLEN\n$BLKSIZE =  SYSBLKSIZE\n$UNIT    =  SYSUNIT\n$CRDATE  =  SYSCREATE\n\nMYCRP = 0\n\nCVT     = Get_Stor('10'x)\nASVT    = Get_Stor(CVT,'22C'x)\nMAXUSER = C2D(Get_Stor(ASVT,'204'x))\n\nSMCA    = Get_Stor(CVT,'C4'x)\nSMFID   = Get_Stor(SMCA,'10'x)\n\nCSD     = Get_Stor(CVT,'294'x)\nRCE     = Get_Stor(CVT,'490'x)\nRMCT    = Get_Stor(CVT,'25C'x)\nMACH    = C2X(Get_Stor(CVT,-6,2))\nNUM_CPU = C2D(Get_Stor(CSD,'A'x,2))\nCP      = NUM_CPU\nSU      = C2D(Get_Stor(RMCT,64))\nSUSEC   = Strip(Format((16000000/SU),8,2))\nRSTORE  = (C2D(Get_Stor(CVT,'358'x))/1024)||'M'\nESTORE  = (C2D(Get_Stor(RCE,'A0'x))*4)/1024||'M'\n\nPROCESS_ALL_IDS:\n\nCall DISPLAY_IN_PROGRESS_BAR 10 YELLOW\n\n'TBCREATE' TABLENM 'NAMES(UID UTOTAL USTAT) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_CMD 'X'\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLENM\n   Exit\n   End\nElse Do\n   Call DISPLAY_IN_PROGRESS_BAR 80 TURQ\n   Call SCAN_ASVT\n   Call DISPLAY_IN_PROGRESS_BAR 90 GREEN\n   Do I=1 To CMD.0\n      Parse Var CMD.I FIELD_01 FIELD_02 . FIELD_04 .\n      If FIELD_01 = 'USER' Then Do\n         UID = FIELD_02\n         UTOTAL = FIELD_04\n         CKID = Strip(UID)\n         If JOBNAME.CKID Then Do\n            USTAT = Strip(CKID)||'('||,\n                    Strip(JOBID.CKID)||') A('||,\n                    Strip(JOBASID.CKID)||') Active'\n            End\n         Else USTAT = ''\n         'TBADD' TABLENM\n         End             /* If FIELD_01     */\n      End                /* Do I=1          */\n   End\n\n'TBTOP' TABLENM\n\nSORT_TABLE:\n\nSORT_STMT\n\nDISPL_TABLE_AFTER_SORT:\n\nMYCMD = ''\nMYSEL = ''\n'TBDISPL' TABLENM  'PANEL('TABPANEL') POSITION(MYCRP)'\nTEMPRC = RC\nIf TEMPRC = 8 Then Signal IAMDONE\nElse If Temprc = 0 | Temprc = 4 Then Nop\nElse Do\n   ZEDSMSG = 'Err TBDISPL Rc:' TEMPRC\n   ZEDLMSG = 'Error occurs during TBDISPL - Check ISPF environment'\n   'SETMSG MSG(ISRZ001)'\n   'TBCLOSE' TABLENM\n   Exit\n   End\n\nParse Var MYCMD CMD1 .\nLIMITED_STRING = ' '\nSelect\n   When CMD1  = '' Then Do\n      Select\n         When MYSEL = 'S' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DISPLAY_A_SPECIFIC_ID\n            End\n         When MYSEL = 'P' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal PRINT_MESSAGES\n            End\n         When MYSEL = 'D' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DELETE_MESSAGES\n            End\n         Otherwise Nop\n         End                /*  Select */\n      End\n   When CMD1  = 'SORTID' Then Do\n      SORT_STMT = SORT_BY_ID\n      Signal SORT_TABLE\n      End\n   When CMD1  = 'SORTTOT' Then Do\n      SORT_STMT = SORT_BY_TOTAL\n      Signal SORT_TABLE\n      End\n   Otherwise Nop\nEnd    /* Select  */\n\nSignal PROCESS_ALL_IDS\n\n\nCHECK_PARM:\nNUMBER_OF_EXTRA_LINES = 0\nSKIP_STRING    = ' '\nMSGS_STRING    = ' '\nIf SKAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   SKIP_STRING = ' SKIP('||Strip(SKAMT)||')'\n   End\nIf MSAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   MSGS_STRING = ' MSGS('||Strip(MSAMT)||')'\n   End\nReturn SKIP_STRING||MSGS_STRING\n\n\nDISPLAY_A_SPECIFIC_ID:\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   Do I=1 To (CMD.0-EXTRA_LINES_AT_THE_END)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End              /* Do I=1   */\n   ACTION = MSG_FOR_DISPLAY\n   ACTCMD = '(DEL/PRT)'\n   MYCMD = ''\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   TEMPRC = RC\n   'TBCLOSE' TABLEMSG\n   'REMPOP'\n   If TEMPRC = 0 Then Do\n      If Strip(MYCMD) = 'DEL' Then Signal DELETE_MESSAGES\n      If Strip(MYCMD) = 'PRT' Then Signal PRINT_MESSAGES\n      End\n   End\nSignal DISPL_TABLE_AFTER_SORT\n\n\n\nDELETE_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('ALERTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nDEL_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   Do I=1 To (CMD.0-LAST_LINE)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   ACTION = MSG_FOR_DELETE\n   ACTCMD = ''\n   TMP_UID = Strip(UID)\n   ZEDSMSG = 'Msgs sucessfully deleted'\n   ZEDLMSG = 'Outstanding Msgs for '||TMP_UID||' have been deleted...'\n   'SETMSG MSG(ISRZ001)'\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   'REMPOP'\n   'TBCLOSE' TABLEMSG\n   If DELETED_TOTAL = 0 Then DELETED_MSG = DELETED_MSG||' '||TMP_UID\n   Else Do\n      If Index(DELETED_MSG,TMP_UID) = 0 Then Do\n         DELETED_MSG = DELETED_MSG||', '||TMP_UID\n         End                 /*  If Index   */\n      End\n   DELETED_TOTAL = DELETED_TOTAL +,\n      (CMD.0-EXTRA_LINES_AT_THE_END-NUMBER_OF_EXTRA_LINES)\n   End\nSignal PROCESS_ALL_IDS\n\n\nPRINT_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('PRINTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Call PRINT_ALL_LINES\n\nSignal DISPL_TABLE_AFTER_SORT\n\n\nPRINT_ALL_LINES:\n\nAddress TSO\nFILENAME = '$$'||Random(1000,9999)||'$$'\n'NEWSTACK'\nX = OUTTRAP('JUNK.')\n'FREE F('FILENAME')'\n'DELSTACK'\n\nIf ODEST   \u00ac= '' Then DEST_STRING    = 'DEST('||Strip(ODEST)||')'\nElse DEST_STRING = ''\nIf OWRITER \u00ac= '' Then WRITER_STRING  = 'WRITER('||Strip(OWRITER)||')'\nElse WRITER_STRING = ''\n'ALLOC FILE('||FILENAME||') '||,\n      'SYSOUT('OCLASS') LRECL(131) '||,\n      'RECFM(F B A) SPIN(UNALLOC) '||DEST_STRING||' '||WRITER_STRING\nTEMPRC = RC\nAddress ISPEXEC\nIf TEMPRC > 0 Then Do\n   ZEDSMSG = 'Error allocating SYSOUT'\n   ZEDLMSG = 'Cannot allocate SYSOUT data set for print. RC:' TEMPRC\n   'SETMSG MSG(ISRZ001)'\n   End\nElse Call PRINT_ROUTINE\n\nReturn\n\n\n\nPRINT_ROUTINE:\n\nPAGE_COUNT = 0\nCOUNTER = 0\nLINE_COUNT = 99\nHEAD1 =\nHEAD1 = '1'||'  SMF id: '||SMFID||,\n        Center('* Broadcast Msgs For '||Strip(UID)||' *',80)||,\n        'Page: '\nHEAD2 = '   Printed on '||Date(W)||', '||Date(U)||' - '||Time()\nHEAD3 = '   Broadcast Data Set Name: '||$DSNAME\nHEAD4 = '                 On Volume: '||$VOLUME\n\nAddress TSO\n'NEWSTACK'\nDo I=1 to CMD.0\n   If LINE_COUNT > MAX_LINES  Then Do\n      PAGE_COUNT = PAGE_COUNT + 1\n      Queue HEAD1||Format(PAGE_COUNT,2)\n      Queue\n      Queue HEAD2\n      Queue HEAD3\n      Queue HEAD4\n      Queue\n      COUNTER = COUNTER + 6\n      LINE_COUNT = 1\n      End                        /* If LINE_COUNT  */\n   Queue '   => ' CMD.I\n   COUNTER = COUNTER + 1\n   LINE_COUNT = LINE_COUNT + 1\n   End\n\n'EXECIO' COUNTER  'DISKW' FILENAME '(FINIS'\n'DELSTACK'\n'FREE F('FILENAME')'\nAddress ISPEXEC\nZEDSMSG = 'Msgs sucessfully printed'\nZEDLMSG = 'Outstanding msgs for '||Strip(UID)||' printed.'\n'SETMSG MSG(ISRZ000)'\nReturn\n\nIAMDONE:\n'TBCLOSE' TABLENM\nAddress TSO 'FREE F(BRODCAST)'\nIf DELETED_TOTAL > 0 Then Do\n   ZEDSMSG = ''\n   ZEDLMSG = Strip(Left(DELETED_MSG,500))\n   'SETMSG MSG(ISRZ000)'\n   End\n\nExit\n\n\nDISPLAY_IN_PROGRESS_BAR:\n\nArg P_PCT P_COLOR .\n\nTMP1     = (P_PCT*MSG_X_AXIS)%100\nTMP2     = MSG_X_AXIS-TMP1\nPGRBAR   = Copies(' ',TMP1)||Copies('.',TMP2)\nPGRMASK  = Copies(COLOR.P_COLOR,TMP1)||Copies(TEXT_COLOR,TMP2)\n'CONTROL DISPLAY LOCK'\n'ADDPOP COLUMN(62) ROW(-1)'\n'DISPLAY PANEL('PROGRBAR')'\n'REMPOP'\nReturn\n\n\n\nSCAN_ASVT:\n\nNUMTSU  = 0\nOFFSET  = 0+C2D('20C'x)\n\nJOBNAME.  = 0\nJOBID.    = ''\nJOBASID.  = ''\n\nDo MAXUSER\n   ASCB   = Get_Stor(ASVT,OFFSET)\n   OFFSET = OFFSET+4\n   If Bitand(Substr(ASCB,1,1),'80'X) = '80'X Then Iterate\n   If C2D(ASCB) = 0 Then Iterate\n   If Get_Stor(ASCB,0,4) \u00ac= 'ASCB' Then Iterate\n   If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then Iterate      /* TSU only */\n\n   JOBNI = Get_Stor(ASCB,172)\n   JOBNS = Get_Stor(ASCB,176)\n\n   If C2D(JOBNS) = 0 and C2D(JOBNI) = 0 Then Do\n      JOBN = 'INIT'                     /* 'Starting' */\n      End\n\n   If C2D(JOBNI) = 0 Then Do\n      If C2D(JOBNS) \u00ac=0 Then JOBN  = Get_Stor(JOBNS,,8)\n         Else JOBN = 'INIT'             /* '**Init**' */\n      If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then JTYPE = 'STC'\n         Else JTYPE = 'TSU'\n      End\n   Else Do\n      JOBN  = Get_Stor(JOBNI,,8)\n      JTYPE = 'BAT'\n      End\n   OUCB        = Get_Stor(ASCB,'90'x)\n   ASSB        = Get_Stor(ASCB,'150'x)\n   JSAB        = Get_Stor(ASSB,'A8'x)\n   JOBN        = Strip(JOBN)\n   JOBNAME.JOBN  = 1\n   JOBASID.JOBN  = C2X(Get_Stor(ASCB,'24'x,2))\n   If C2D(JSAB) \u00ac= 0 Then JOBID.JOBN = Get_Stor(JSAB,'14'x,8)\n   Else                   JOBID.JOBN = ''\n   NUMTSU = NUMTSU + 1\n   /* Say JOBN '-->' JOBNAME.JOBN JOBID.JOBN JOBASID.JOBN */\n   End   /* Do MAXUSER */\n\nReturn\n\nGet_Stor: PROCEDURE\n\n/*------------------------------------------------------------------*/\n/*                                                                  */\n/*      This procedure will extract data using the MVS Storage      */\n/*      function. Input arguments will be:                          */\n/*                                                                  */\n/*      1) Storage_Pointer or Literal, i.e. CVTPTR or '10'x, or     */\n/*         16 (like '10'x)                                          */\n/*      2) Offset in hex or dec (numnbe), i.e. 'FF'x or 256 or      */\n/*         D2C(256)                                                 */\n/*      3) Length of returned data in decimal, i.e. 256             */\n/*                                                                  */\n/*      NOTE - To make sure that this procedure will work all the   */\n/*      times, just include 'NUMERIC DIGITS 256' at the beginning   */\n/*      of the calling REXX exec.                                   */\n/*                                                                  */\n/*------------------------------------------------------------------*/\n\n\nParse Arg AREA,OFFSET,LENG\n\nIf Arg(2,'O') Then OFFSET=0\n\nIf Arg(3,'O') Then LENG=4\n\nIf DataType(AREA) = 'CHAR' Then Do\n   AREA =  C2D(AREA)\n   End\n\nIf DataType(OFFSET) = 'CHAR' Then Do\n   OFFSET =  C2D(OFFSET)\n   End\n\nReturn  Storage((D2X(AREA+OFFSET)),LENG)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PROGRBAR": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01_\\x00&\\x00\\x83\\x13\\x9f\\x01\\x01\\x00/\\x08\\x12\\x00\\x12\\x00\\x13\\x00\\x00\\xd5\\xd4\\xe5\\xe5\\xf1@@@@@'", "ispf": {"version": "01.95", "flags": 0, "createdate": "1983-05-19T00:00:00", "modifydate": "2001-01-02T08:12:26", "lines": 18, "newlines": 19, "modlines": 0, "user": "NMVV1"}, "text": ")ATTR\n \\ AREA(DYNAMIC)\n { TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(RED)\n ~ TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(BLUE)\n # TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(GREEN)\n _ TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(YELLOW)\n ` TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(TURQ)\n \u00ac TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(WHITE)\n ! TYPE(CHAR)  CAPS(OFF)  HILITE(REVERSE) COLOR(PINK)\n } TYPE(CHAR)  CAPS(OFF)                  COLOR(YELLOW)\n % TYPE(TEXT)  CAPS(OFF)\n + TYPE(TEXT)  INTENS(LOW)   CAPS(OFF)  COLOR(WHITE)\n \u00a6 TYPE(TEXT)  CAPS(OFF)  COLOR(GREEN)\n @ TYPE(OUTPUT) INTENS(LOW) CAPS(OFF)  COLOR(TURQ) JUST(RIGHT)\n \" TYPE(OUTPUT) JUST(ASIS) HILITE(REVERSE) COLOR(GREEN)\n)BODY WINDOW(21,1)\n\u00a6\\PGRBAR,PGRMASK    \\\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT247/CBT.V500.FILE247.PDS/BCMISPF.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT247/CBT.V500.FILE247.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}