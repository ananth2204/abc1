*      M Y I D   P R O G R A M    -    A   T S O   C O M M A N D
*
*      TSO COMMAND PROCESSOR TO DISPLAY THE USERID OF THE INVOKER.
*
*        This version uses the TSO PUTLINE interface and will
*        show the userid when run under TSO-in-batch or TSSO.
*
*        REGISTER EQUATES
         YREGS                ,    IBM'S REGISTER EQUATE MACRO
SP000    EQU   0                   DEFINE SUBPOOL TO BE 0
*
MYID     CSECT
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS R14 THRU R12
         LR    R12,R15             LOAD ENTRY POINT INTO BASE REGISTER
         USING MYID,R12            TELL THE ASSEMBLER, R12 IS THE BASE
         LR    R5,R1               SAVE CPPL POINTER
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
*  The address of the obtained storage is placed into Register 1.
         ST    R13,4(,R1)          SAVE CALLER'S SAVEAREA ADDRESS
         ST    R1,8(,R13)          STORE OUR SAVEAREA ADDRESS IN HIS
         LR    R13,R1              POINT REGISTER 13 TO OUR SAVE AREA
         USING SAVEAREA,R13        TELL ASSEMBLER
         LR    R1,R5               RESTORE CPPL POINTER
         LR    R11,R5              POINT TO CPPL.
RUNCHAIN L     R3,16               POINT TO CVT. ADDR IS IN LOW STORAGE
         USING CVT,R3
         L     R3,CVTTCBP          POINT TO TCB/ASCB WORDS, "0" OFF CVT
         L     R3,4(,R3)           POINT TO TCB, "4" OFF TCB/ASCB WORDS
         DROP  R3
         USING TCB,R3
         L     R3,TCBJSCB          POINT TO JSCB. X'B4' OFF CURRENT TCB
         DROP  R3
         USING IEZJSCB,R3
         L     R3,JSCBPSCB         POINT TO PSCB. X'108' OFF THE JSCB
         DROP  R3
         USING PSCB,R3
         MVC   MESSAGE(23),MSGLINE        MOVE TEXT TO VARIABLE AREA
         CLI   PSCBUSER,C'>'
         BE    BIGID
         MVC   MESSAGE+15(7),PSCBUSER     MOVE MY USERID INTO MESSAGE
         B     RUNCHANS
BIGID    DS    0H
         MVC   MESSAGE+15(8),PSCB+X'54'   MOVE MY USERID INTO MESSAGE
         DROP  R3
* ---- >
RUNCHANS L     R5,X'10'             CVT
         L     R5,X'C4'(,R5)        POINT TO SMCA
         LA    R5,X'10'(,R5)        POINT TO SYSID
         MVC   MESSAGS(23),MSGLINS        MOVE TEXT TO VARIABLE AREA
         MVC   MESSAGS+15(4),0(R5)    MOVE SYSID INTO MESSAGE
* ---- >
RUNCHANL L     R5,X'10'             CVT
         S     R5,=F'32'            POINT TO SYSTEM LEVEL
         MVC   MESSAGL(23),MSGLINL        MOVE TEXT TO VARIABLE AREA
         MVC   MESSAGL+15(7),0(R5)    MOVE SYSTEM LEVEL INTO MESSAGE
* ---- >
         BAL   R9,CPPLPTRS
         BAL   R9,SETIOPL
         MVI   LINEB,C' '          INITIALIZE BLANK
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BAL   R9,PGMTITLE
*        TPUT  MESSAGE,L'MESSAGE  DISPLAY THE WHOLE MESSAGE ON THE TUBE
         MVC   LINE(137),LINE-1
         MVC   LINET(L'MESSAGE),MESSAGE
         LA    R0,L'MESSAGE+7
         BAL   R4,MSG
         MVC   LINE(137),LINE-1
         MVC   LINET(L'MESSAGS),MESSAGS
         LA    R0,L'MESSAGS+7
         BAL   R4,MSG
         MVC   LINE(137),LINE-1
         MVC   LINET(L'MESSAGL),MESSAGL
         LA    R0,L'MESSAGL+7
         BAL   R4,MSG
         MVC   LINE(137),LINE-1
         LA    R0,23
         BAL   R4,MSG
         B     EOJ0
EOJ0     DS    0H
         SR    R15,R15
         B     RETURN
EOJ4     DS    0H
         LA    R15,4
         B     RETURN
EOJ8     DS    0H
         LA    R15,8
         B     RETURN
RETURN   DS    0H
         LR    R1,R13              SET UP FOR SAVEAREA FREEMAIN
         L     R13,4(,R13)         POINT TO CALLER'S SAVEAREA
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         LM    R14,R12,12(R13)     RELOAD THE CALLER'S REGISTERS
         BR    R14                 RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - *
*            S U B R O U T I N E S                *
* - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
         USING CPPL,R11
CPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         BR    R9
         DROP  R11
************************************************************
PGMTITLE DS    0H
         MVC   LINE(137),LINE-1
         MVC   LINET(L'MESSAGET),MESSAGET
         LA    R0,L'MESSAGET+7
         BAL   R4,MSG
         MVC   LINE(137),LINE-1
         MVC   LINET(L'MESSAGEU),MESSAGEU
         LA    R0,L'MESSAGEU+7
         BAL   R4,MSG
         BR    R9
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R11
SETIOPL  LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R11
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE(137),LINE-1
         BR    R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FULLZERO DC    F'0'
MSGLINE  DC    CL23'My Userid is:         '    CONSTANT PART OF MESSAGE
MSGLINS  DC    CL23'System id is:         '    CONSTANT PART OF MESSAGE
MSGLINL  DC    CL23'System level:         '    CONSTANT PART OF MESSAGE
MESSAGET DC    C'MYID - Ver. 1.8 - &SYSDATE '
MESSAGEU DC    C'---- - -------- - -------- '
*
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
*
         SPACE 1
SAVEAREA DSECT
         DS    18F                 DEFINE MY SAVEAREA - 18 FULLWORDS
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
MESSAGE  DS    CL23                VARIABLE MESSAGE AREA
MESSAGS  DS    CL23                VARIABLE MESSAGE AREA
MESSAGL  DS    CL23                VARIABLE MESSAGE AREA
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
         DS    0D                  ALIGN ON DOUBLEWORD
DATALEN  EQU   *-SAVEAREA          DEFINE LENGTH OF VARIABLE STORAGE
*
         CVT   DSECT=YES           CVT mapping macro
         IKJTCB                    TCB mapping macro
         IKJCPPL                   CPPL
         IKJIOPL                   IOPL
         IKJUPT                    UPT
         IKJECT                    ECT
         IEZJSCB                   JSCB mapping macro
         IKJPSCB                   PSCB mapping macro
         END
