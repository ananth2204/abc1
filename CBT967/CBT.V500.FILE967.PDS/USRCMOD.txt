/* rexx */
/*********************************************************************/
/*                                                                   */
/* This exec will run the CUCI dialog to set ISPF defaults that are  */
/* not included in ISPCCONF.  This is a heavily modified version of  */
/* the ISPF ISPCMOD exec.  Modifying the existing execs allows us to */
/* to reuse common code, such as setting defaults, generating the    */
/* keyword file, etc.                                                */
/*                                                                   */
/*********************************************************************/
address ispexec "CONTROL ERRORS RETURN"
exec_rc = 0
call set_defaults      /* initialize panel variables to defaults  */
call read_keyword_file /* set panel variables with data from file */
not_keyword = 0
if total_count = bad_count & total_count > 0 then
  do
    not_keyword = 1
    address ispexec "ADDPOP"
    address ispexec "DISPLAY PANEL(USRPMODQ)"
    qrc = rc
    address ispexec "REMPOP"
    if qrc > 0 then
      exec_rc = 4
  end
display_rc = 0
c = 'ZCMD'
address ispexec "VGET (UCNVOPT USRVKWD USRVKWDM) PROFILE"
usrvkwd2 = usrvkwd
usrvkwm2 = usrvkwdm
if notfound = 1 | not_keyword = 1 then
  address ispexec "SETMSG MSG(ISPC276)"
else
  address ispexec "SETMSG MSG(ISPC277)"
if exec_rc = 0 then
  do while display_rc = 0
    address ispexec "DISPLAY PANEL(USRPMOD) CURSOR("c")"
    display_rc = rc
    c = 'ZCMD'
    address ispexec "VPUT (USRVKWD,USRVKWDM) PROFILE"
    if display_rc = 0 then
      do
        if usrvkwd2 = '' then
          usrvkwd2 = usrvkwd
        if usrvkwm2 = '' then
          usrvkwm2 = usrvkwdm
        dsrc = 0
        call verify_keyword_file_exists
        if dsrc = 0 then
          do
            usrvout = usrvkwd2
            usrvoutm = usrvkwm2
          end
        if dsrc = 0 then
          do
            c = 'ZCMD'
            select
               when (zcmd >= 1 & zcmd <= 4) then
                  do
                    usrvsel = zcmd
                    panel_id = 'USRPMOD'||zcmd
                    display_rc2 = 0
                      do while display_rc2 = 0
                        zcmd = ''
                        address ispexec "DISPLAY PANEL("panel_id")"
                        display_rc2 = rc
                        call reset_defaults
                        if display_rc2 > 12 then
                          address ispexec "SETMSG MSG("zerrmsg")"
                      end
                  end
               when (zcmd = 5) then
                  do
                     call column_table('UULARR')
                  end
               when (zcmd = 6) then
                  do
                     call column_table('UMTFARR')
                  end
               when (zcmd = 7) then
                  do
                     call column_table('UMTMARR')
                  end
               otherwise
                  address ispexec "SETMSG MSG(ISPD241)"
            end
          end
      end
    else
      if display_rc = 8 then
        do
          address ispexec "VGET (ZVERB) SHARED"
          if zverb ¬= 'CANCEL' then
            do
              dsrc = 0
              if usrvkwd2 = '' then
                usrvkwd2 = usrvkwd
              if usrvkwm2 = '' then
                usrvkwm2 = usrvkwdm
              dsrc = 0
              call verify_keyword_file_exists
              if dsrc = 0 then
                do
                  usrvout = usrvkwd2
                  usrvoutm = usrvkwm2
                end
              if dsrc = 0 then
                do
                  c = 'ZCMD'
                  outlines = 0
                  outlines2 = 0
                  call create_header
                  call create_output
                  call write_output
                end
            end
          else
            exec_rc = 4
        end
  end
Exit exec_rc
/* */
verify_keyword_file_exists:
/* Check target data set to see if it exists and is partitioned */
c = 'USRVKWD2'
if pos('(',usrvkwd) > 0 then
  do
    address ispexec "SETMSG MSG(ISPC282)"
    dsrc=4
  end
address ispexec "CONTROL REFLIST NOUPDATE"
address ispexec "LMINIT DATAID(BB) ENQ(SHR) DATASET("usrvkwd2")"
dsrc=rc
address ispexec "CONTROL REFLIST UPDATE"
if dsrc=0 then
  do
    address ispexec "LMOPEN DATAID("bb") OPTION(INPUT) ORG(ORG) LRECL(LRECL)"
    dsrc = rc
    if dsrc = 0 then
      if org ¬= 'PO' | lrecl < 251 then
        do
          address ispexec "SETMSG MSG(ISPC268)"
          dsrc=4
        end
      else
        if usrvkwm2 = '' then
          do
            address ispexec "SETMSG MSG(ISRU007)"
            dsrc=4
          end
  end
if dsrc>7 then
  address ispexec "SETMSG MSG(ISRZ002)"
address ispexec "LMFREE DATAID("bb")"
return
/* */
set_defaults:
/* PFKeys and force variables */
upf01    = 'HELP    '
upf02    = 'SPLIT   '
upf03    = 'END     '
upf04    = 'RETURN  '
upf05    = 'RFIND   '
upf06    = 'RCHANGE '
upf07    = 'UP      '
upf08    = 'DOWN    '
upf09    = 'SWAP    '
upf10    = 'LEFT    '
upf11    = 'RIGHT   '
upf12    = 'RETRIEVE'
upf13    = 'HELP    '
upf14    = 'SPLIT   '
upf15    = 'END     '
upf16    = 'RETURN  '
upf17    = 'RFIND   '
upf18    = 'RCHANGE '
upf19    = 'UP      '
upf20    = 'DOWN    '
upf21    = 'SWAP    '
upf22    = 'LEFT    '
upf23    = 'RIGHT   '
upf24    = 'RETRIEVE'
fupf01   = ' '
fupf02   = ' '
fupf03   = ' '
fupf04   = ' '
fupf05   = ' '
fupf06   = ' '
fupf07   = ' '
fupf08   = ' '
fupf09   = ' '
fupf10   = ' '
fupf11   = ' '
fupf12   = ' '
fupf13   = ' '
fupf14   = ' '
fupf15   = ' '
fupf16   = ' '
fupf17   = ' '
fupf18   = ' '
fupf19   = ' '
fupf20   = ' '
fupf21   = ' '
fupf22   = ' '
fupf23   = ' '
fupf24   = ' '
/* PFKey Labels and Force variables */
upfl01   = '        '
upfl02   = '        '
upfl03   = '        '
upfl04   = '        '
upfl05   = '        '
upfl06   = '        '
upfl07   = '        '
upfl08   = '        '
upfl09   = '        '
upfl10   = '        '
upfl11   = '        '
upfl12   = '        '
upfl13   = '        '
upfl14   = '        '
upfl15   = '        '
upfl16   = '        '
upfl17   = '        '
upfl18   = '        '
upfl19   = '        '
upfl20   = '        '
upfl21   = '        '
upfl22   = '        '
upfl23   = '        '
upfl24   = '        '
fupfl01  = ' '
fupfl02  = ' '
fupfl03  = ' '
fupfl04  = ' '
fupfl05  = ' '
fupfl06  = ' '
fupfl07  = ' '
fupfl08  = ' '
fupfl09  = ' '
fupfl10  = ' '
fupfl11  = ' '
fupfl12  = ' '
fupfl13  = ' '
fupfl14  = ' '
fupfl15  = ' '
fupfl16  = ' '
fupfl17  = ' '
fupfl18  = ' '
fupfl19  = ' '
fupfl20  = ' '
fupfl21  = ' '
fupfl22  = ' '
fupfl23  = ' '
fupfl24  = ' '
/* Calendar options and Force variables */
ualdctsb = '8'
ualdcthd = '8'
ualdctht = '8'
ualdctwd = '8'
ualdctwe = '8'
ualdcttd = '8'
newsd    = '1'
newtm    = '1'
faldctsb = ' '
faldcthd = ' '
faldctht = ' '
faldctwd = ' '
faldctwe = ' '
faldcttd = ' '
newsdf   = ' '
newtmf   = ' '
/* MEMLIST SRCHFOR options and Force variables */
umsfmixv = ' '
umsfanyc = ' '
umsfasci = ' '
umsfedtf = ' '
umsfbrof = ' '
umsffilt = ' '
umsfview = ' '
umsfsave = ' '
fmsfmixv = ' '
fmsfanyc = ' '
fmsfasci = ' '
fmsfedtf = ' '
fmsfbrof = ' '
fmsffilt = ' '
fmsfview = ' '
fmsfsave = ' '
/* DSLIST SRCHFOR options and Force variables */
uus4mixv = ' '
uus4anyc = ' '
uus4asci = ' '
uus4tots = ' '
uus4stop = ' '
uus4view = ' '
uus4xnf  = ' '
uus4migr = '1'
uus4xcld = '3'
fus4mixv = ' '
fus4anyc = ' '
fus4asci = ' '
fus4tots = ' '
fus4stop = ' '
fus4view = ' '
fus4xnf  = ' '
fus4migr = ' '
fus4xcld = ' '
/* UDLIST SRCHFOR options and Force variables */
uudfmixv = ' '
uudfanyc = ' '
uudfasci = ' '
uudfedtf = ' '
uudfbrof = ' '
uudfview = ' '
uudfsave = ' '
fudfmixv = ' '
fudfanyc = ' '
fudfasci = ' '
fudfedtf = ' '
fudfbrof = ' '
fudfview = ' '
fudfsave = ' '
/* UDLIST Directory List and Mount Table Options and Force variables */
usrwfnmc = '15'
usrfsubc = '!'
usrshctm = ' '
usrfconv = '/'
usrdconv = '/'
usrbyedv = ' '
usrdpmov = ' '
usruxpcv = ' '
usrcmdom = '2'
usrdldir = 'L'
usrdlreg = 'B'
usrdlchs = 'I'
usrdlfif = 'I'
usrdlsym = 'I'
usrwmtpc = '35'
usrwfsyc = '35'
fsrwfnmc = ' '
fsrfsubc = ' '
fsrshctm = ' '
fsrfconv = ' '
fsrdconv = ' '
fsrbyedv = ' '
fsrdpmov = ' '
fsruxpcv = ' '
fsrcmdom = ' '
fsrdldir = ' '
fsrdlreg = ' '
fsrdlchs = ' '
fsrdlfif = ' '
fsrdlsym = ' '
fsrwmtpc = ' '
fsrwfsyc = ' '
/* UDLIST column arrangements and Force variables */
uularr    = 'UDLCOLS ' || '010D010101040202020A0303050604040604'x
uularr    = uularr || '050507040606040807070808'x
uularr    = uularr || '0808090609090A0A0A0A0B130B0B0C130C0C0D130D0D0E13'x
umtfarr   = 'MTBFCOLS' || '0108000002230101012302020304'x
umtfarr   = umtfarr || '0303050404040608050507030606040A0707080A'x
umtmarr   = 'MTBMCOLS' || '0108000001230101022302020304'x
umtmarr   = umtmarr || '0303050404040608050507030606040A0707080A'x
uularrdf  = uularr
umtfarrdf = umtfarr
umtmarrdf = umtmarr
fularr    = ' '
fmtfarr   = ' '
fmtmarr   = ' '
return
/* */
reset_defaults:
if upf01 = ' ' then upf01 = 'HELP    '
if upf02 = ' ' then upf02 = 'SPLIT   '
if upf03 = ' ' then upf03 = 'END     '
if upf04 = ' ' then upf04 = 'RETURN  '
if upf05 = ' ' then upf05 = 'RFIND   '
if upf06 = ' ' then upf06 = 'RCHANGE '
if upf07 = ' ' then upf07 = 'UP      '
if upf08 = ' ' then upf08 = 'DOWN    '
if upf09 = ' ' then upf09 = 'SWAP    '
if upf10 = ' ' then upf10 = 'LEFT    '
if upf11 = ' ' then upf11 = 'RIGHT   '
if upf12 = ' ' then upf12 = 'RETRIEVE'
if upf13 = ' ' then upf13 = 'HELP    '
if upf14 = ' ' then upf14 = 'SPLIT   '
if upf15 = ' ' then upf15 = 'END     '
if upf16 = ' ' then upf16 = 'RETURN  '
if upf17 = ' ' then upf17 = 'RFIND   '
if upf18 = ' ' then upf18 = 'RCHANGE '
if upf19 = ' ' then upf19 = 'UP      '
if upf20 = ' ' then upf20 = 'DOWN    '
if upf21 = ' ' then upf21 = 'SWAP    '
if upf22 = ' ' then upf22 = 'LEFT    '
if upf23 = ' ' then upf23 = 'RIGHT   '
if upf24 = ' ' then upf24 = 'RETRIEVE'
if ualdctsb = ' ' then ualdctsb = '8'
if ualdcthd = ' ' then ualdcthd = '8'
if ualdctht = ' ' then ualdctht = '8'
if ualdctwd = ' ' then ualdctwd = '8'
if ualdctwe = ' ' then ualdctwe = '8'
if ualdcttd = ' ' then ualdctsb = '8'
if newsd    = ' ' then newsd    = '1'
if newtm    = ' ' then newtm    = '1'
if uus4migr = ' ' then uus4migr = '1'
if uus4xcld = ' ' then uus4xcld = '3'
if usrwfnmc = ' ' then usrwfnmc = '15'
if usrfsubc = ' ' then usrfsubc = '!'
if usrfconv = ' ' then usrfconv = '/'
if usrdconv = ' ' then usrdconv = '/'
if usrcmdom = ' ' then usrcmdom = '2'
if usrdldir = ' ' then usrdldir = 'L'
if usrdlreg = ' ' then usrdlreg = 'B'
if usrdlchs = ' ' then usrdlchs = 'I'
if usrdlfif = ' ' then usrdlfif = 'I'
if usrdlsym = ' ' then usrdlsym = 'I'
if usrwmtpc = ' ' then usrwmtpc = '35'
if usrwfsyc = ' ' then usrwfsyc = '35'
return
/* */
read_keyword_file:
address ispexec "VGET (USRVKWD,USRVKWDM) PROFILE"
address ispexec "VGET (NOTFOUND) SHARED"
if substr(usrvkwd,1,1) = "'" then
  kwdname = "'"strip(usrvkwd,'B',"'")"("usrvkwdm")'"
else
  kwdname = strip(usrvkwd,'B',"'")"("usrvkwdm")"
zkwd = kwdname                         /* msg ISPC276 needs   @015a */
address ispexec "VPUT (ZKWD) SHARED"   /* ZKWD to be set      @015a */
address tso "ALLOC F(INFILE) DA("kwdname") SHR REU"
if rc > 0 then
  do
    exec_rc = 8
    address ispexec address ispexec "SETMSG MSG(ISPC261)"
  end
if exec_rc = 0 & notfound = 0 then
  do
    address tso "EXECIO * DISKR INFILE (FINIS STEM CONFIG."
    if rc > 0 then
      do
        exec_rc = 8
        address ispexec "SETMSG MSG(ISPC262)"
      end
  end
total_count = 0
bad_count = 0
if exec_rc = 0 & notfound = 0 then
  do i = 1 to config.0
    Parse Var config.i first rest
    first = strip(first)
    if substr(first,1,1) ¬= '*' &,
       substr(first,1,2) ¬= '/*' then
      call process_keyword
  end
address tso "FREE FI(INFILE)"
return
/* */
process_keyword:
total_count = total_count + 1
parse value config.i with keyword '=' Valu ',' force
Upper keyword
valu = strip(valu)
if valu = 'NONE' then
  valu = ''
select
   when keyword = 'PF01' then
      do
         upf01  = valu
         fupf01 = force
      end
   when keyword = 'PF02' then
      do
         upf02  = valu
         fupf02 = force
      end
   when keyword = 'PF03' then
      do
         upf03  = valu
         fupf03 = force
      end
   when keyword = 'PF04' then
      do
         upf04  = valu
         fupf04 = force
      end
   when keyword = 'PF05' then
      do
         upf05  = valu
         fupf05 = force
      end
   when keyword = 'PF06' then
      do
         upf06  = valu
         fupf06 = force
      end
   when keyword = 'PF07' then
      do
         upf07  = valu
         fupf07 = force
      end
   when keyword = 'PF08' then
      do
         upf08  = valu
         fupf08 = force
      end
   when keyword = 'PF09' then
      do
         upf09  = valu
         fupf09 = force
      end
   when keyword = 'PF10' then
      do
         upf10  = valu
         fupf10 = force
      end
   when keyword = 'PF11' then
      do
         upf11  = valu
         fupf11 = force
      end
   when keyword = 'PF12' then
      do
         upf12  = valu
         fupf12 = force
      end
   when keyword = 'PF13' then
      do
         upf13  = valu
         fupf13 = force
      end
   when keyword = 'PF14' then
      do
         upf14  = valu
         fupf14 = force
      end
   when keyword = 'PF15' then
      do
         upf15  = valu
         fupf15 = force
      end
   when keyword = 'PF16' then
      do
         upf16  = valu
         fupf16 = force
      end
   when keyword = 'PF17' then
      do
         upf17  = valu
         fupf17 = force
      end
   when keyword = 'PF18' then
      do
         upf18  = valu
         fupf18 = force
      end
   when keyword = 'PF19' then
      do
         upf19  = valu
         fupf19 = force
      end
   when keyword = 'PF20' then
      do
         upf20  = valu
         fupf20 = force
      end
   when keyword = 'PF21' then
      do
         upf21  = valu
         fupf21 = force
      end
   when keyword = 'PF22' then
      do
         upf22  = valu
         fupf22 = force
      end
   when keyword = 'PF23' then
      do
         upf23  = valu
         fupf23 = force
      end
   when keyword = 'PF24' then
      do
         upf24  = valu
         fupf24 = force
      end
   when keyword = 'PF01_LABEL' then
      do
         upfl01  = valu
         fupfl01 = force
      end
   when keyword = 'PF02_LABEL' then
      do
         upfl02  = valu
         fupfl02 = force
      end
   when keyword = 'PF03_LABEL' then
      do
         upfl03  = valu
         fupfl03 = force
      end
   when keyword = 'PF04_LABEL' then
      do
         upfl04  = valu
         fupfl04 = force
      end
   when keyword = 'PF05_LABEL' then
      do
         upfl05  = valu
         fupfl05 = force
      end
   when keyword = 'PF06_LABEL' then
      do
         upfl06  = valu
         fupfl06 = force
      end
   when keyword = 'PF07_LABEL' then
      do
         upfl07  = valu
         fupfl07 = force
      end
   when keyword = 'PF08_LABEL' then
      do
         upfl08  = valu
         fupfl08 = force
      end
   when keyword = 'PF09_LABEL' then
      do
         upfl09  = valu
         fupfl09 = force
      end
   when keyword = 'PF10_LABEL' then
      do
         upfl10  = valu
         fupfl10 = force
      end
   when keyword = 'PF11_LABEL' then
      do
         upfl11  = valu
         fupfl11 = force
      end
   when keyword = 'PF12_LABEL' then
      do
         upfl12  = valu
         fupfl12 = force
      end
   when keyword = 'PF13_LABEL' then
      do
         upfl13  = valu
         fupfl13 = force
      end
   when keyword = 'PF14_LABEL' then
      do
         upfl14  = valu
         fupfl14 = force
      end
   when keyword = 'PF15_LABEL' then
      do
         upfl15  = valu
         fupfl15 = force
      end
   when keyword = 'PF16_LABEL' then
      do
         upfl16  = valu
         fupfl16 = force
      end
   when keyword = 'PF17_LABEL' then
      do
         upfl17  = valu
         fupfl17 = force
      end
   when keyword = 'PF18_LABEL' then
      do
         upfl18  = valu
         fupfl18 = force
      end
   when keyword = 'PF19_LABEL' then
      do
         upfl19  = valu
         fupfl19 = force
      end
   when keyword = 'PF20_LABEL' then
      do
         upfl20  = valu
         fupfl20 = force
      end
   when keyword = 'PF21_LABEL' then
      do
         upfl21  = valu
         fupfl21 = force
      end
   when keyword = 'PF22_LABEL' then
      do
         upfl22  = valu
         fupfl22 = force
      end
   when keyword = 'PF23_LABEL' then
      do
         upfl23  = valu
         fupfl23 = force
      end
   when keyword = 'PF24_LABEL' then
      do
         upfl24  = valu
         fupfl24 = force
      end
   when keyword = 'CALENDAR_SCROLL_BUTTON_COLOR' then
      do
         ualdctsb = valu
         faldctsb = force
      end
   when keyword = 'CALENDAR_HEADING_DATE_COLOR' then
      do
         ualdcthd = valu
         faldcthd = force
      end
   when keyword = 'CALENDAR_HEADING_TEXT_COLOR' then
      do
         ualdctht = valu
         faldctht = force
      end
   when keyword = 'CALENDAR_WEEKDAY_COLOR' then
      do
         ualdctwd = valu
         faldctwd = force
      end
   when keyword = 'CALENDAR_SATURDAY_SUNDAY_COLOR' then
      do
         ualdctwe = valu
         faldctwe = force
      end
   when keyword = 'CALENDAR_CURRENT_DAY_COLOR' then
      do
         ualdcttd = valu
         faldcttd = force
      end
   when keyword = 'CALENDAR_START_DATE' then
      do
         newsd  = valu
         newsdf = force
      end
   when keyword = 'CALENDAR_TIME_FORMAT' then
      do
         newtm  = valu
         newtmf = force
      end
   when keyword = 'MEMLIST_SRCHFOR_MIXED_MODE' then
      do
         umsfmixv = valu
         fmsfmixv = force
      end
   when keyword = 'MEMLIST_SRCHFOR_ANY_CASE' then
      do
         umsfanyc = valu
         fmsfanyc = force
      end
   when keyword = 'MEMLIST_SRCHFOR_ASCII' then
      do
         umsfasci = valu
         fmsfasci = force
      end
   when keyword = 'MEMLIST_SRCHFOR_SET_EDIT_FIND_STRING' then
      do
         umsfedtf = valu
         fmsfedtf = force
      end
   when keyword = 'MEMLIST_SRCHFOR_SET_BROWSE_FIND_STRING' then
      do
         umsfbrof = valu
         fmsfbrof = force
      end
   when keyword = 'MEMLIST_SRCHFOR_VIEW_OUTPUT' then
      do
         umsfview = valu
         fmsfview = force
      end
   when keyword = 'MEMLIST_SRCHFOR_SAVE_OUTPUT' then
      do
         umsfsave = valu
         fmsfsave = force
      end
   when keyword = 'MEMLIST_SRCHFOR_FILTER_LIST' then
      do
         umsffilt = valu
         fmsffilt = force
      end
   when keyword = 'DSLIST_SRCHFOR_MIXED_MODE' then
      do
         uus4mixv = valu
         fus4mixv = force
      end
   when keyword = 'DSLIST_SRCHFOR_ANY_CASE' then
      do
         uus4anyc = valu
         fus4anyc = force
      end
   when keyword = 'DSLIST_SRCHFOR_ASCII' then
      do
         uus4asci = valu
         fus4asci = force
      end
   when keyword = 'DSLIST_SRCHFOR_TOTALS_ONLY' then
      do
         uus4tots = valu
         fus4tots = force
      end
   when keyword = 'DSLIST_SRCHFOR_FIRST_FOUND' then
      do
         uus4stop = valu
         fus4stop = force
      end
   when keyword = 'DSLIST_SRCHFOR_VIEW_OUTPUT' then
      do
         uus4view = valu
         fus4view = force
      end
   when keyword = 'DSLIST_SRCHFOR_EXCLUDE_NOT_FOUND' then
      do
         uus4xnf = valu
         fus4xnf = force
      end
   when keyword = 'DSLIST_SRCHFOR_SEARCH_MIGRATED' then
      do
         uus4migr = valu
         fus4migr = force
      end
   when keyword = 'DSLIST_SRCHFOR_SEARCH_EXCLUDED' then
      do
         uus4xcld = valu
         fus4xcld = force
      end
   when keyword = 'UDLIST_SRCHFOR_MIXED_MODE' then
      do
         uudfmixv = valu
         fudfmixv = force
      end
   when keyword = 'UDLIST_SRCHFOR_ANY_CASE' then
      do
         uudfanyc = valu
         fudfanyc = force
      end
   when keyword = 'UDLIST_SRCHFOR_ASCII' then
      do
         uudfasci = valu
         fudfasci = force
      end
   when keyword = 'UDLIST_SRCHFOR_SET_EDIT_FIND_STRING' then
      do
         uudfedtf = valu
         fudfedtf = force
      end
   when keyword = 'UDLIST_SRCHFOR_SET_BROWSE_FIND_STRING' then
      do
         uudfbrof = valu
         fudfbrof = force
      end
   when keyword = 'UDLIST_SRCHFOR_VIEW_OUTPUT' then
      do
         uudfview = valu
         fudfview = force
      end
   when keyword = 'UDLIST_SRCHFOR_SAVE_OUTPUT' then
      do
         uudfsave = valu
         fudfsave = force
      end
   when keyword = 'UDLIST_WIDTH_OF_FILENAME_COLUMN' then
      do
         usrwfnmc = valu
         fsrwfnmc = force
      end
   when keyword = 'UDLIST_PATHNAME_SUBSTITUTION_CHARACTER' then
      do
         usrfsubc = valu
         fsrfsubc = force
      end
   when keyword = 'UDLIST_ZOS_UNIX_COMMAND_TIME_LIMIT' then
      do
         usrshctm = valu
         fsrshctm = force
      end
   when keyword = 'UDLIST_CONFIRM_FILE_DELETE' then
      do
         usrfconv = valu
         fsrfconv = force
      end
   when keyword = 'UDLIST_CONFIRM_NON-EMPTY_DIRECTORY_DELETE' then
      do
         usrdconv = valu
         fsrdconv = force
      end
   when keyword =,
        'UDLIST_BYPASS_ZOS_UNIX_FILE_EDIT_OPTIONS_PANEL' then
      do
         usrbyedv = valu
         fsrbyedv = force
      end
   when keyword = 'UDLIST_DISPLAY_PERMISSIONS_IN_OCTAL_FORMAT' then
      do
         usrdpmov = valu
         fsrdpmov = force
      end
   when keyword =,
        'UDLIST_ENTER_ZOS_UNIX_COMMANDS_IN_COMMAND_FIELD' then
      do
         usruxpcv = valu
         fsruxpcv = force
      end
   when keyword = 'UDLIST_OUTPUT_MODE' then
      do
         usrcmdom = valu
         fsrcmdom = force
      end
   when keyword = 'UDLIST_DIRECTORY_DEFAULT_LINE_COMMAND' then
      do
         usrdldir = valu
         fsrdldir = force
      end
   when keyword = 'UDLIST_REGULAR_FILE_DEFAULT_LINE_COMMAND' then
      do
         usrdlreg = valu
         fsrdlreg = force
      end
   when keyword = 'UDLIST_CHARACTER_SPECIAL_DEFAULT_LINE_COMMAND' then
      do
         usrdlchs = valu
         fsrdlchs = force
      end
   when keyword = 'UDLIST_FIFO_DEFAULT_LINE_COMMAND' then
      do
         usrdlfif = valu
         fsrdlfif = force
      end
   when keyword = 'UDLIST_SYMBOLIC_LINK_LINE_COMMAND' then
      do
         usrdlsym = valu
         fsrdlsym = force
      end
   when keyword =,
        'UDLIST_WIDTH_OF_MOUNT_POINT_COLUMN_IN_MOUNT_POINT_LIST' then
      do
         usrwmtpc = valu
         fsrwmtpc = force
      end
   when keyword =,
        'UDLIST_WIDTH_OF_FILE_SYSTEM_COLUMN_IN_FILE_SYSTEM_LIST' then
      do
         usrwfsyc = valu
         fsrwfsyc = force
      end
   when keyword = 'UDLIST_COLUMN_ARRANGEMENT' then
      do
        uularr = valu
        fularr = force
      end
   when keyword = 'MOUNT_TABLE_FILE_SYSTEM_COLUMN_ARRANGEMENT' then
      do
        umtfarr = valu
        fmtfarr = force
      end
   when keyword = 'MOUNT_TABLE_MOUNT_POINT_COLUMN_ARRANGEMENT' then
      do
        umtmarr = valu
        fmtmarr = force
      end
   otherwise
      bad_count = bad_count + 1
end
return
/* */
create_header:
stuff = '/* ISPF CUCI Configuration for settings not in ISPCCONF'
call addline stuff
stuff = '/*   Generated by Rexx USRCMOD'
call addline stuff
stuff = ''
call addline '/*   Created 'time()' on 'date()
call addline '/*   by user 'userid()'.'
if ucnvopt = 'CHG' then
  call addline '/*   Defaults were included as comments.'
else if ucnvopt = 'ALL' then
  call addline '/*   All values were included.'
else
  call addline '/*   Only values which differ from the defaults were',
               ||' included.'
call addline '/*'
return
/* */
addline:
Parse Arg line
line = strip(line,'T')
outlines = outlines + 1
if substr(line,1,2)='/*' & substr(line,length(line)-1,2)¬='*/' then
 line=left(line,max(length(line),70))||'*/'
output.outlines = line
return
/* */
addline2:
Parse Arg line
line = strip(line,'T')
outlines2 = outlines2 + 1
if substr(line,1,2)='/*' & substr(line,length(line)-1,2)¬='*/' then
 line=left(line,max(length(line),70))||'*/'
output2.outlines2 = line
return
/* */
create_output:
/*------------------------------------------------------------------*/
call header 'PFKeys'
/*------------------------------------------------------------------*/

call chkvalue 'PF01'                              ,'HELP    ',upf01,,
               fupf01
call chkvalue 'PF02'                              ,'SPLIT   ',upf02,,
               fupf02
call chkvalue 'PF03'                              ,'END     ',upf03,,
               fupf03
call chkvalue 'PF04'                              ,'RETURN  ',upf04,,
               fupf04
call chkvalue 'PF05'                              ,'RFIND   ',upf05,,
               fupf05
call chkvalue 'PF06'                              ,'RCHANGE ',upf06,,
               fupf06
call chkvalue 'PF07'                              ,'UP      ',upf07,,
               fupf07
call chkvalue 'PF08'                              ,'DOWN    ',upf08,,
               fupf08
call chkvalue 'PF09'                              ,'SWAP    ',upf09,,
               fupf09
call chkvalue 'PF10'                              ,'LEFT    ',upf10,,
               fupf10
call chkvalue 'PF11'                              ,'RIGHT   ',upf11,,
               fupf11
call chkvalue 'PF12'                              ,'RETRIEVE',upf12,,
               fupf12
call chkvalue 'PF13'                              ,'HELP    ',upf13,,
               fupf13
call chkvalue 'PF14'                              ,'SPLIT   ',upf14,,
               fupf14
call chkvalue 'PF15'                              ,'END     ',upf15,,
               fupf15
call chkvalue 'PF16'                              ,'RETURN  ',upf16,,
               fupf16
call chkvalue 'PF17'                              ,'RFIND   ',upf17,,
               fupf17
call chkvalue 'PF18'                              ,'RCHANGE ',upf18,,
               fupf18
call chkvalue 'PF19'                              ,'UP      ',upf19,,
               fupf19
call chkvalue 'PF20'                              ,'DOWN    ',upf20,,
               fupf20
call chkvalue 'PF21'                              ,'SWAP    ',upf21,,
               fupf21
call chkvalue 'PF22'                              ,'LEFT    ',upf22,,
               fupf22
call chkvalue 'PF23'                              ,'RIGHT   ',upf23,,
               fupf23
call chkvalue 'PF24'                              ,'RETRIEVE',upf24,,
               fupf24
call chkvalue 'PF01_LABEL'                        ,'        ',upfl01,,
               fupfl01
call chkvalue 'PF02_LABEL'                        ,'        ',upfl02,,
               fupfl02
call chkvalue 'PF03_LABEL'                        ,'        ',upfl03,,
               fupfl03
call chkvalue 'PF04_LABEL'                        ,'        ',upfl04,,
               fupfl04
call chkvalue 'PF05_LABEL'                        ,'        ',upfl05,,
               fupfl05
call chkvalue 'PF06_LABEL'                        ,'        ',upfl06,,
               fupfl06
call chkvalue 'PF07_LABEL'                        ,'        ',upfl07,,
               fupfl07
call chkvalue 'PF08_LABEL'                        ,'        ',upfl08,,
               fupfl08
call chkvalue 'PF09_LABEL'                        ,'        ',upfl09,,
               fupfl09
call chkvalue 'PF10_LABEL'                        ,'        ',upfl10,,
               fupfl10
call chkvalue 'PF11_LABEL'                        ,'        ',upfl11,,
               fupfl11
call chkvalue 'PF12_LABEL'                        ,'        ',upfl12,,
               fupfl12
call chkvalue 'PF13_LABEL'                        ,'        ',upfl13,,
               fupfl13
call chkvalue 'PF14_LABEL'                        ,'        ',upfl14,,
               fupfl14
call chkvalue 'PF15_LABEL'                        ,'        ',upfl15,,
               fupfl15
call chkvalue 'PF16_LABEL'                        ,'        ',upfl16,,
               fupfl16
call chkvalue 'PF17_LABEL'                        ,'        ',upfl17,,
               fupfl17
call chkvalue 'PF18_LABEL'                        ,'        ',upfl18,,
               fupfl18
call chkvalue 'PF19_LABEL'                        ,'        ',upfl19,,
               fupfl19
call chkvalue 'PF20_LABEL'                        ,'        ',upfl20,,
               fupfl20
call chkvalue 'PF21_LABEL'                        ,'        ',upfl21,,
               fupfl21
call chkvalue 'PF22_LABEL'                        ,'        ',upfl22,,
               fupfl22
call chkvalue 'PF23_LABEL'                        ,'        ',upfl23,,
               fupfl23
call chkvalue 'PF24_LABEL'                        ,'        ',upfl24,,
               fupfl24
/*------------------------------------------------------------------*/
call header 'Calendar Options'
/*------------------------------------------------------------------*/
call chkvalue 'CALENDAR_SCROLL_BUTTON_COLOR'           ,'8',ualdctsb,,
               faldctsb
call chkvalue 'CALENDAR_HEADING_DATE_COLOR'            ,'8',ualdcthd,,
               faldcthd
call chkvalue 'CALENDAR_HEADING_TEXT_COLOR'            ,'8',ualdctht,,
               faldctht
call chkvalue 'CALENDAR_WEEKDAY_COLOR'                 ,'8',ualdctwd,,
               faldctwd
call chkvalue 'CALENDAR_SATURDAY_SUNDAY_COLOR'         ,'8',ualdctwe,,
               faldctwe
call chkvalue 'CALENDAR_CURRENT_DAY_COLOR'             ,'8',ualdcttd,,
               faldcttd
call chkvalue 'CALENDAR_START_DATE'                    ,'1',newsd,,
               newsdf
call chkvalue 'CALENDAR_TIME_FORMAT'                   ,'1',newtm,,
               newtmf
/*------------------------------------------------------------------*/
call header 'MEMLIST SRCHFOR Options'
/*------------------------------------------------------------------*/

call chkvalue 'MEMLIST_SRCHFOR_MIXED_MODE'             ,' '  ,umsfmixv,,
               fmsfmixv
call chkvalue 'MEMLIST_SRCHFOR_ANY_CASE'               ,' '  ,umsfanyc,,
               fmsfanyc
call chkvalue 'MEMLIST_SRCHFOR_ASCII'                  ,' '  ,umsfasci,,
               fmsfasci
call chkvalue 'MEMLIST_SRCHFOR_SET_EDIT_FIND_STRING'   ,' '  ,umsfedtf,,
               fmsfedtf
call chkvalue 'MEMLIST_SRCHFOR_SET_BROWSE_FIND_STRING' ,' '  ,umsfbrof,,
               fmsfbrof
call chkvalue 'MEMLIST_SRCHFOR_VIEW_OUTPUT'            ,' '  ,umsfview,,
               fmsfview
call chkvalue 'MEMLIST_SRCHFOR_SAVE_OUTPUT'            ,' '  ,umsfsave,,
               fmsfsave
call chkvalue 'MEMLIST_SRCHFOR_FILTER_LIST'            ,' '  ,umsffilt,,
               fmsffilt
/*------------------------------------------------------------------*/
call header 'DSLIST SRCHFOR Options'
/*------------------------------------------------------------------*/

call chkvalue 'DSLIST_SRCHFOR_MIXED_MODE'              ,' '  ,uus4mixv,,
               fus4mixv
call chkvalue 'DSLIST_SRCHFOR_ANY_CASE'                ,' '  ,uus4anyc,,
               fus4anyc
call chkvalue 'DSLIST_SRCHFOR_ASCII'                   ,' '  ,uus4asci,,
               fus4asci
call chkvalue 'DSLIST_SRCHFOR_TOTALS_ONLY'             ,' '  ,uus4tots,,
               fus4tots
call chkvalue 'DSLIST_SRCHFOR_FIRST_FOUND'             ,' '  ,uus4stop,,
               fus4stop
call chkvalue 'DSLIST_SRCHFOR_VIEW_OUTPUT'             ,' '  ,uus4view,,
               fus4view
call chkvalue 'DSLIST_SRCHFOR_EXCLUDE_NOT_FOUND'       ,' '  ,uus4xnf,,
               fus4xnf
call chkvalue 'DSLIST_SRCHFOR_SEARCH_MIGRATED'         ,'1'  ,uus4migr,,
               fus4migr
call chkvalue 'DSLIST_SRCHFOR_SEARCH_EXCLUDED'         ,'3'  ,uus4xcld,,
               fus4xcld
/*------------------------------------------------------------------*/
call header 'UDLIST SRCHFOR Options'
/*------------------------------------------------------------------*/

call chkvalue 'UDLIST_SRCHFOR_MIXED_MODE'              ,' '  ,uudfmixv,,
               fudfmixv
call chkvalue 'UDLIST_SRCHFOR_ANY_CASE'                ,' '  ,uudfanyc,,
               fudfanyc
call chkvalue 'UDLIST_SRCHFOR_ASCII'                   ,' '  ,uudfasci,,
               fudfasci
call chkvalue 'UDLIST_SRCHFOR_SET_EDIT_FIND_STRING'    ,' '  ,uudfedtf,,
               fudfedtf
call chkvalue 'UDLIST_SRCHFOR_SET_BROWSE_FIND_STRING'  ,' '  ,uudfbrof,,
               fudfbrof
call chkvalue 'UDLIST_SRCHFOR_VIEW_OUTPUT'             ,' '  ,uudfview,,
               fudfview
call chkvalue 'UDLIST_SRCHFOR_SAVE_OUTPUT'             ,' '  ,uudfsave,,
               fudfsave
/*------------------------------------------------------------------*/
call header 'UDLIST Directory List Options'
/*------------------------------------------------------------------*/
call chkvalue 'UDLIST_WIDTH_OF_FILENAME_COLUMN'        ,'15' ,usrwfnmc,,
               fsrwfnmc
call chkvalue 'UDLIST_PATHNAME_SUBSTITUTION_CHARACTER' ,'!'  ,usrfsubc,,
               fsrfsubc
call chkvalue 'UDLIST_ZOS_UNIX_COMMAND_TIME_LIMIT'     ,' '  ,usrshctm,,
               fsrshctm
call chkvalue 'UDLIST_CONFIRM_FILE_DELETE'             ,'/'  ,usrfconv,,
               fsrfconv
deftitle = 'UDLIST_CONFIRM_NON-EMPTY_DIRECTORY_DELETE'
call chkvalue deftitle,'/',usrdconv,fsrdconv
deftitle = 'UDLIST_BYPASS_ZOS_UNIX_FILE_EDIT_OPTIONS_PANEL'
call chkvalue deftitle,' ',usrbyedv,fsrbyedv
deftitle = 'UDLIST_DISPLAY_PERMISSIONS_IN_OCTAL_FORMAT'
call chkvalue deftitle,' ',usrdpmov,fsrdpmov
deftitle = 'UDLIST_ENTER_ZOS_UNIX_COMMANDS_IN_COMMAND_FIELD'
call chkvalue deftitle,' ',usruxpcv,fsruxpcv
call chkvalue 'UDLIST_OUTPUT_MODE'                     ,'2'  ,usrcmdom,,
               fsrcmdom
call chkvalue 'UDLIST_DIRECTORY_DEFAULT_LINE_COMMAND'  ,'L'  ,usrdldir,,
               fsrdldir
deftitle = 'UDLIST_REGULAR_FILE_DEFAULT_LINE_COMMAND'
call chkvalue deftitle,'B',usrdlreg,fsrdlreg
deftitle = 'UDLIST_CHARACTER_SPECIAL_DEFAULT_LINE_COMMAND'
call chkvalue deftitle,'I',usrdlchs,fsrdlchs
call chkvalue 'UDLIST_FIFO_DEFAULT_LINE_COMMAND'       ,'I'  ,usrdlfif,,
               fsrdlfif
call chkvalue 'UDLIST_SYMBOLIC_LINK_LINE_COMMAND'      ,'I'  ,usrdlsym,,
               fsrdlsym
deftitle = 'UDLIST_WIDTH_OF_MOUNT_POINT_COLUMN_IN_MOUNT_POINT_LIST'
call chkvalue deftitle,'35',usrwmtpc,fsrwmtpc
deftitle = 'UDLIST_WIDTH_OF_FILE_SYSTEM_COLUMN_IN_FILE_SYSTEM_LIST'
call chkvalue deftitle,'35',usrwfsyc,fsrwfsyc
/*------------------------------------------------------------------*/
call header 'UDLIST Column Arrangement'
/*------------------------------------------------------------------*/
deftitle = 'UDLIST_COLUMN_ARRANGEMENT'
call chkvalue deftitle,uularrdf,uularr,fularr
/*------------------------------------------------------------------*/
call header 'Mount Table by File System Column Arrangement'
/*------------------------------------------------------------------*/
deftitle = 'MOUNT_TABLE_FILE_SYSTEM_COLUMN_ARRANGEMENT'
call chkvalue deftitle,umtfarrdf,umtfarr,fmtfarr
/*------------------------------------------------------------------*/
call header 'Mount Table by Mount Point Column Arrangement'
/*------------------------------------------------------------------*/
deftitle = 'MOUNT_TABLE_MOUNT_POINT_COLUMN_ARRANGEMENT'
call chkvalue deftitle,umtmarrdf,umtmarr,fmtmarr
/*------------------------------------------------------------------*/
return
/* */
/* chkvalue: starts the process of writing a line to the keyword table*/
chkvalue:
tag = arg(1)
def = arg(2)
val = arg(3)
frc = arg(4)
if def = ' ' then
  def = 'NONE'
if val = ' ' then
  val = 'NONE'
call chkdefault tag,def,val,frc
return
/* */
/* */
chkdefault:
tag=arg(1)
def=arg(2)
val=arg(3)
frc=arg(4)
if frc = '/' then
   frc2 = ',/'
else
   frc2 = ''
Upper val
if stuff ¬= '' then
  do
    val2 = strip(val) '/*'||stuff
    val2 = left(val2,24)||'*/'
  end
else
  val2 = val
  select
   when (tag = 'CALENDAR_SCROLL_BUTTON_COLOR') then
      val2 = calendar_color(val2)
   when (tag = 'CALENDAR_HEADING_DATE_COLOR') then
      val2 = calendar_color(val2)
   when (tag = 'CALENDAR_HEADING_TEXT_COLOR') then
      val2 = calendar_color(val2)
   when (tag = 'CALENDAR_WEEKDAY_COLOR') then
      val2 = calendar_color(val2)
   when (tag = 'CALENDAR_SATURDAY_SUNDAY_COLOR') then
      val2 = calendar_color(val2)
   when (tag = 'CALENDAR_CURRENT_DAY_COLOR') then
      val2 = calendar_color(val2)
   otherwise
      nop
end
if def ¬= val | frc = '/' then
  call addline left(tag,56) '=' val2 || frc2
else
  if ucnvopt = 'ALL' then
    call addline left(tag,56) '=' val2 || frc
  else
    if ucnvopt = 'NEW' then
      Nop
    else
      call addline2 '/*'left(tag,55)'=' val2 || frc
return
/* */
/*********************************************************************/
/* header: write out header info for keyword list section            */
/*********************************************************************/
header:
Parse Arg in
header1 = '/*'copies('-',68)
header2 = '/*'center(in,68)'*/'
if ucnvopt = 'ALL' then
  do
    call addline header1
    call addline header2
    call addline header1
  end
else
  if ucnvopt = 'NEW' then
    Nop
  else
    do
      call addline2 header1
      call addline2 header2
      call addline2 header1
    end
return

/*********************************************************************/
/* write_output:                                                     */
/*********************************************************************/
write_output:
if ucnvopt = 'ALL' | ucnvopt = 'NEW' then
  do i = 1 to outlines
    final.i = output.i
    final.0 = outlines
  end
else
  do
    do i = 1 to outlines
      final.i = output.i
    end
    num = outlines
    in = 'The following values match the ISPF Defaults'
    header1 = '/*'copies('-',68)'*/'
    header2 = '/*'center(in,68)'*/'
    num = num + 1
    final.num = header1
    num = num + 1
    final.num = header2
    num = num + 1
    final.num = header1
    do i = 1 to outlines2
      num = num + 1
      final.num = output2.i
    end
    final.0 = num
  end
if substr(usrvout,1,1) = "'" then
  outname = "'"strip(usrvout,'B',"'")"("usrvoutm")'"
else
  outname = strip(usrvout,'B',"'")"("usrvoutm")"
usrvoutn = outname
address ispexec "VPUT (USRVOUTN) SHARED"
address tso "ALLOC F(OUTFILE) REUSE SHR DA("outname")"
address tso "EXECIO" final.0 "DISKW OUTFILE (FINIS STEM FINAL."
execio_rc = rc
if execio_rc = 0 then
  do
    address tso "ALLOC REU F(OUTFILE) DA("usrvout") SHR"
    member = 'MEMBER('usrvoutm')'
    address ispexec "LMINIT DATAID(CNVRT) DDNAME(OUTFILE) ENQ(SHRW)"
    address ispexec "VIEW DATAID("cnvrt")" member
    if member ¬= '' then
      address ispexec "LMMSTATS DATAID("cnvrt")" member
    address ispexec "LMFREE DATAID("cnvrt")"
    address tso "FREE F(OUTFILE)"
  end
else
  do
    address ISPEXEC address ispexec "SETMSG MSG(ISPC289)"
    exec_rc = 4
  end
address ispexec
return
/*********************************************************************/
/* Create and display column table.                                  */
/*********************************************************************/
column_table:
parse arg columvar
call column_defaults(columvar)
if columvar = 'UULARR' then
   panelnm = 'USRUULO2'
else
   panelnm = 'USRUMNO2'
disprc = 0
do until (disprc = 8)
   address ispexec "TBDISPL COLUMTAB PANEL("panelnm") AUTOSEL(NO)"
   disprc = rc
   if disprc = 8 then
      leave
   select
      when (columvar = 'UULARR' & uularstd = '/') then
         do
            address ispexec "TBEND COLUMTAB"
            call column_defaults(columvar)
         end
      when ((columvar = 'UMTFARR' | columvar = 'UMTMARR') &,
             umtarstd = '/') then
         do
            address ispexec "TBEND COLUMTAB"
            call column_defaults(columvar)
         end
      otherwise
         do while (ztdsels > 0)
            disprc = rc
            j = 1
            if columvar = 'UULARR' then
               if uulacord < uulacori then
                  uula2srt = uula2srt - j
               else
                  uula2srt = uula2srt + j
            else
               if umtacord < umtacori then
                  umta2srt = umta2srt - j
               else
                  umta2srt = umta2srt + j
            address ispexec "TBPUT COLUMTAB"
            if ztdsels > 1 then
               do
                  address ispexec "TBDISPL COLUMTAB"
                  disprc = rc
                  j = j + 1
               end
            else
               ztdsels = 0
         end
   end
   if columvar = 'UULARR' then
      do
         address ispexec "TBSORT COLUMTAB FIELDS(UULACORD,N,A,UULA2SRT,N,A)"
         address ispexec "TBTOP COLUMTAB"
         do i = 1 to 13
            address ispexec "TBSKIP COLUMTAB"
            uulacord = i
            uula2srt = 9999
            address ispexec "TBPUT COLUMTAB"
         end
      end
   else
      do
         address ispexec "TBSORT COLUMTAB FIELDS(UMTACORD,N,A,UMTA2SRT,N,A)"
         address ispexec "TBTOP COLUMTAB"
         do i = 1 to 7
            address ispexec "TBSKIP COLUMTAB"
            umtacord = i
            umta2srt = 9999
            address ispexec "TBPUT COLUMTAB"
         end
      end
   address ispexec "TBTOP COLUMTAB"
end
call create_column_string(columvar)
address ispexec "TBEND COLUMTAB"
return
/* */
column_defaults:
parse arg columvar
if columvar = 'UULARR' then
   do
      address ispexec "TBCREATE COLUMTAB NAMES(UULACORD UULA2SRT",
                      "UULACORI UULACVIX UULACWID UULACMAX UULACHDG)"
      if uularr <> uularrdf & uularstd <> '/' then
         call column_custom(columvar)
      else
         do
            address ispexec "TBTOP COLUMTAB"
            uulacord = 1
            uula2srt = 9999
            uulacori = 1
            uulacvix = 1
            uulacwid = 4
            uulacmax = 4
            uulachdg = 'Type'
            address ispexec "TBADD COLUMTAB"
            uulacord = 2
            uula2srt = 9999
            uulacori = 2
            uulacvix = 2
            uulacwid = 10
            uulacmax = 10
            uulachdg = 'Permission'
            address ispexec "TBADD COLUMTAB"
            uulacord = 3
            uula2srt = 9999
            uulacori = 3
            uulacvix = 5
            uulacwid = 6
            uulacmax = 6
            uulachdg = 'Audit'
            address ispexec "TBADD COLUMTAB"
            uulacord = 4
            uula2srt = 9999
            uulacori = 4
            uulacvix = 6
            uulacwid = 4
            uulacmax = 4
            uulachdg = 'Ext'
            address ispexec "TBADD COLUMTAB"
            uulacord = 5
            uula2srt = 9999
            uulacori = 5
            uulacvix = 7
            uulacwid = 4
            uulacmax = 4
            uulachdg = 'Fmat'
            address ispexec "TBADD COLUMTAB"
            uulacord = 6
            uula2srt = 9999
            uulacori = 6
            uulacvix = 4
            uulacwid = 8
            uulacmax = 8
            uulachdg = 'Owner'
            address ispexec "TBADD COLUMTAB"
            uulacord = 7
            uula2srt = 9999
            uulacori = 7
            uulacvix = 8
            uulacwid = 8
            uulacmax = 8
            uulachdg = 'Group'
            address ispexec "TBADD COLUMTAB"
            uulacord = 8
            uula2srt = 9999
            uulacori = 8
            uulacvix = 9
            uulacwid = 6
            uulacmax = 14
            uulachdg = 'Links'
            address ispexec "TBADD COLUMTAB"
            uulacord = 9
            uula2srt = 9999
            uulacori = 9
            uulacvix = 10
            uulacwid = 10
            uulacmax = 20
            uulachdg = 'Size'
            address ispexec "TBADD COLUMTAB"
            uulacord = 10
            uula2srt = 9999
            uulacori = 10
            uulacvix = 11
            uulacwid = 19
            uulacmax = 19
            uulachdg = 'Modified'
            address ispexec "TBADD COLUMTAB"
            uulacord = 11
            uula2srt = 9999
            uulacori = 11
            uulacvix = 12
            uulacwid = 19
            uulacmax = 19
            uulachdg = 'Changed'
            address ispexec "TBADD COLUMTAB"
            uulacord = 12
            uula2srt = 9999
            uulacori = 12
            uulacvix = 13
            uulacwid = 19
            uulacmax = 19
            uulachdg = 'Accessed'
            address ispexec "TBADD COLUMTAB"
            uulacord = 13
            uula2srt = 9999
            uulacori = 13
            uulacvix = 14
            uulacwid = 19
            uulacmax = 19
            uulachdg = 'Created'
            address ispexec "TBADD COLUMTAB"
         end
   end
else
   do
      address ispexec "TBCREATE COLUMTAB NAMES(UMTACORD UMTA2SRT",
                      "UMTACORI UMTACVIX UMTACWID UMTACMAX UMTACHDG)"
      address ispexec "TBTOP COLUMTAB"
      select
         when (columvar = 'UMTMARR' & umtmarr <> umtmarrdf &,
               umtarstd <> '/') then
            call column_custom(columvar)
         when (columvar = 'UMTFARR' & umtfarr <> umtfarrdf &,
               umtarstd <> '/') then
            call column_custom(columvar)
         otherwise
            do
               if columvar = 'UMTMARR' then
                  do
                     umtacord = 1
                     umta2srt = 9999
                     umtacori = 1
                     umtacvix = 2
                     umtacwid = 35
                     umtacmax = 70
                     umtachdg = 'File System Name'
                  end
               else
                  do
                     umtacord = 1
                     umta2srt = 9999
                     umtacori = 1
                     umtacvix = 1
                     umtacwid = 35
                     umtacmax = 150
                     umtachdg = 'Mount Point'
                  end
               address ispexec "TBADD COLUMTAB"
               umtacord = 2
               umta2srt = 9999
               umtacori = 2
               umtacvix = 3
               umtacwid = 4
               umtacmax = 8
               umtachdg = 'Type'
               address ispexec "TBADD COLUMTAB"
               umtacord = 3
               umta2srt = 9999
               umtacori = 3
               umtacvix = 5
               umtacwid = 4
               umtacmax = 8
               umtachdg = 'Mode'
               address ispexec "TBADD COLUMTAB"
               umtacord = 4
               umta2srt = 9999
               umtacori = 4
               umtacvix = 6
               umtacwid = 8
               umtacmax = 8
               umtachdg = 'Owner'
               address ispexec "TBADD COLUMTAB"
               umtacord = 5
               umta2srt = 9999
               umtacori = 5
               umtacvix = 7
               umtacwid = 3
               umtacmax = 3
               umtachdg = 'A/M'
               address ispexec "TBADD COLUMTAB"
               umtacord = 6
               umta2srt = 9999
               umtacori = 6
               umtacvix = 4
               umtacwid = 10
               umtacmax = 40
               umtachdg = 'Status'
               address ispexec "TBADD COLUMTAB"
               umtacord = 7
               umta2srt = 9999
               umtacori = 7
               umtacvix = 8
               umtacwid = 10
               umtacmax = 16
               umtachdg = 'I/O Counts'
               address ispexec "TBADD COLUMTAB"
            end
      end
   end
address ispexec "TBTOP COLUMTAB"
return
column_custom:
parse arg columvar
select
   when (columvar = 'UULARR') then
      do
         parse var uularr 11 uularrst .
         do l = 1 to 13
            parse var uularrst 1 uulacord 2 uulacori 3 uulacvix 4 uulacwid,
                               5 uularrst . 2 titleix 4 .
            uula2srt = 9999
            uulacord = c2d(uulacord)
            uulacori = c2d(uulacori)
            uulacvix = c2d(uulacvix)
            uulacwid = c2d(uulacwid)
            select
               when (titleix = '0101'x) then
                  do
                     uulachdg = 'Type'
                     uulacmax = 4
                  end
               when (titleix = '0202'x) then
                  do
                     uulachdg = 'Permission'
                     uulacmax = 10
                  end
               when (titleix = '0305'x) then
                  do
                     uulachdg = 'Audit'
                     uulacmax = 6
                  end
               when (titleix = '0406'x) then
                  do
                     uulachdg = 'Ext'
                     uulacmax = 4
                  end
               when (titleix = '0507'x) then
                  do
                     uulachdg = 'Fmat'
                     uulacmax = 4
                  end
               when (titleix = '0604'x) then
                  do
                     uulachdg = 'Owner'
                     uulacmax = 8
                  end
               when (titleix = '0708'x) then
                  do
                     uulachdg = 'Group'
                     uulacmax = 8
                  end
               when (titleix = '0809'x) then
                  do
                     uulachdg = 'Links'
                     uulacmax = 14
                  end
               when (titleix = '090A'x) then
                  do
                     uulachdg = 'Size'
                     uulacmax = 20
                  end
               when (titleix = '0A0B'x) then
                  do
                     uulachdg = 'Modified'
                     uulacmax = 19
                  end
               when (titleix = '0B0C'x) then
                  do
                     uulachdg = 'Changed'
                     uulacmax = 19
                  end
               when (titleix = '0C0D'x) then
                  do
                     uulachdg = 'Accessed'
                     uulacmax = 19
                  end
               when (titleix = '0D0E'x) then
                  do
                     uulachdg = 'Created'
                     uulacmax = 19
                  end
               otherwise
            end
            address ispexec "TBADD COLUMTAB"
         end
      end
   when (columvar = 'UMTMARR') then
      do
         parse var umtmarr 15 umtmarrst .
         do l = 1 to 7
            parse var umtmarrst 1 umtacord 2 umtacori 3 umtacvix 4 umtacwid,
                               5 umtmarrst . 2 titleix 4 .
            umta2srt = 9999
            umtacord = c2d(umtacord)
            umtacori = c2d(umtacori)
            umtacvix = c2d(umtacvix)
            umtacwid = c2d(umtacwid)
            select
               when (titleix = '0102'x) then
                  do
                     umtachdg = 'File System Name'
                     umtacmax = 70
                  end
               when (titleix = '0203'x) then
                  do
                     umtachdg = 'Type'
                     umtacmax = 8
                  end
               when (titleix = '0305'x) then
                  do
                     umtachdg = 'Mode'
                     umtacmax = 8
                  end
               when (titleix = '0406'x) then
                  do
                     umtachdg = 'Owner'
                     umtacmax = 8
                  end
               when (titleix = '0507'x) then
                  do
                     umtachdg = 'A/M'
                     umtacmax = 3
                  end
               when (titleix = '0604'x) then
                  do
                     umtachdg = 'Status'
                     umtacmax = 40
                  end
               when (titleix = '0708'x) then
                  do
                     umtachdg = 'I/O Counts'
                     umtacmax = 16
                  end
               otherwise
            end
            address ispexec "TBADD COLUMTAB"
         end
      end
   when (columvar = 'UMTFARR') then
      do
         parse var umtfarr 15 umtfarrst .
         do l = 1 to 7
            parse var umtfarrst 1 umtacord 2 umtacori 3 umtacvix 4 umtacwid,
                               5 umtfarrst . 2 titleix 4 .
            umta2srt = 9999
            umtacord = c2d(umtacord)
            umtacori = c2d(umtacori)
            umtacvix = c2d(umtacvix)
            umtacwid = c2d(umtacwid)
            select
               when (titleix = '0101'x) then
                  do
                     umtachdg = 'Mount Point'
                     umtacmax = 150
                  end
               when (titleix = '0203'x) then
                  do
                     umtachdg = 'Type'
                     umtacmax = 8
                  end
               when (titleix = '0305'x) then
                  do
                     umtachdg = 'Mode'
                     umtacmax = 8
                  end
               when (titleix = '0406'x) then
                  do
                     umtachdg = 'Owner'
                     umtacmax = 8
                  end
               when (titleix = '0507'x) then
                  do
                     umtachdg = 'A/M'
                     umtacmax = 3
                  end
               when (titleix = '0604'x) then
                  do
                     umtachdg = 'Status'
                     umtacmax = 40
                  end
               when (titleix = '0708'x) then
                  do
                     umtachdg = 'I/O Counts'
                     umtacmax = 16
                  end
               otherwise
            end
            address ispexec "TBADD COLUMTAB"
         end
     end
end
return
create_column_string:
parse arg columvar
select
   when (columvar = 'UULARR') then
      do
         uularr = 'UDLCOLS ' || '010D'x
         address ispexec "TBTOP COLUMTAB"
         do k = 1 to 13
            address ispexec "TBSKIP COLUMTAB"
            uularr = uularr || d2c(uulacord) || d2c(uulacori)
            uularr = uularr || d2c(uulacvix) || d2c(uulacwid)
         end
      end
   when (columvar = 'UMTFARR') then
      do
         umtfarr = 'MTBFCOLS' || '010800000223'x
         address ispexec "TBTOP COLUMTAB"
         do k = 1 to 7
            address ispexec "TBSKIP COLUMTAB"
            umtfarr = umtfarr || d2c(umtacord) || d2c(umtacori)
            umtfarr = umtfarr || d2c(umtacvix) || d2c(umtacwid)
         end
      end
   when (columvar = 'UMTMARR') then
      do
         umtmarr = 'MTBMCOLS' || '010800000123'x
         address ispexec "TBTOP COLUMTAB"
         do k = 1 to 7
            address ispexec "TBSKIP COLUMTAB"
            umtmarr = umtmarr || d2c(umtacord) || d2c(umtacori)
            umtmarr = umtmarr || d2c(umtacvix) || d2c(umtacwid)
         end
      end
   otherwise
      nop
end
return
calendar_color:
parse arg color
select
   when (color = 1) then
      color = '31'x
   when (color = 2) then
      color = '32'x
   when (color = 3) then
      color = '33'x
   when (color = 4) then
      color = '34'x
   when (color = 5) then
      color = '35'x
   when (color = 6) then
      color = '36'x
   when (color = 7) then
      color = '37'x
   when (color = 8) then
      color = '38'x
   when (color = '31'x) then
      color = '1'
   when (color = '32'x) then
      color = '2'
   when (color = '33'x) then
      color = '3'
   when (color = '34'x) then
      color = '4'
   when (color = '35'x) then
      color = '5'
   when (color = '36'x) then
      color = '6'
   when (color = '37'x) then
      color = '7'
   when (color = '38'x) then
      color = '8'
   otherwise
      nop
end
return(color)
