/* rexx */
signal on halt
signal on failure
call on error

blkname='';lookforme='';acblib=''

parse upper arg lookforme acblib
do while lookforme=''
  say 'Enter the ACBLIB member to get info for.'
  say 'Enter "e" to leave.'
  parse upper pull lookforme
  if lookforme='E' then signal done
end
do while acblib=''
  say 'Enter the ACBLIB dataset name to run with.'
  say 'Fully qualified - no quotes.'
  say 'Enter "e" to leave.'
  parse upper pull acblib
  if acblib='E' then signal done
end

me=userid()
"alloc fi(sysprint) da('"me".acblist.sysprint')",
  "blksize(1334) lrecl(133) unit(vio) space(1,1) tracks ",
  "recfm(v b a) dsorg(ps) new delete reus"
"alloc fi(sysudump) dummy shr reuse"
acblib=strip(acblib,,"'")
"alloc fi(acblib) da('"acblib"') shr reuse"

"call 'your load lib dsn(acblist)'"      <<<<<<<<<<<<<<<<<<<

"execio * diskr sysprint 3 (stem acblist. finis"
do i=1 to acblist.0 until blkname=lookforme
  parse var acblist.i blkname . blktype .
  if blkname=lookforme then call parse_for_psb_or_dmb
end
if blkname=lookforme then
  do
    say 'ACB NAME='lookforme
    say 'ACB-TYPE='blktype dmbtype'; Date='date'; Time='time,
    '; Size='size'; Release='rlse
  end
else say lookforme 'Not Found in' acblib

done:
x=msg('off')
"free fi(sysudump,sysprint,acblib)"
exit

parse_for_psb_or_dmb:
if blktype='DMB' then
  parse var acblist.i blkname . blktype dmbtype date time size rlse .
else if blktype='PSB' then
  do
    parse var acblist.i blkname . blktype date time size rlse .
    dmbtype=''
  end
else
  do
    say 'Uncoded condition in BLKTYPE selection.'
    say 'blktype='blktype
    signal done
  end
return
