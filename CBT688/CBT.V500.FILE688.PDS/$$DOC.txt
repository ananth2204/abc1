All,

There are 2 sets of product included here.
1. a. Rexx exec 'reconrx0' is the original version of rcnintgn.
1. b. Rexx exec 'rcnintgn'(recon INIT generator) and associated members.
   Changes 8/8,9,10,11/2006
   - fix bug in initdb= statement for imstype to 'TYPE'imstype
     in procedure process_typeims_dbrcn_recs(thankyou Wesley Atkinson)
   - fixed write of fbff & fspf for PHDAM
   - corrected bugs in HALDB keystrng processing
   - changed obtaining haldb char keystrng with obtaining the he
     key value instead. this made handling blanks and potential
     blanks which were part of the key easier.
   - replaced execio 1 diskr;pull inrecord stmts with a call to
     a single procedure, passing the number of reads/pulls to be
     performed.
   Changes 2/10/2006
   - fix bug in haldb KEYSTRNG processing.
   Changes 9/2005
   - run against IMS V9.1 recons to produce command output.
   Changes 3/2005
   - made ALL code conform to my liking:
     - aka lower case chars except for literals
     - removed space surrounding operators, e.g. =, >, \=.
     - changed all use of the INDEX function to the POS function
   - for each init.db/dbds & if 'i' passed to the program
     - generate NOTIFY.IC stmts with keyword values
       collected from the recon
   - removed all code for FP Areas/ADS
   - added code to support registered HALDBs.
     - generate INIT.DB,INIT.PART, and NOTIFY.IC when 'I' passed
       to the program.
   - changed all use of '.' in variable names to '_' to prevent
     variable substitution.
   - renamed to be rcnintgn(DBRC INIT statement generator)
   - replaced the me() func with standard rexx func: userid()
2. Assembler program 'ACBLIST' and associated members,

The 'reconrx0' rexx program was obtained from an old XEPHON article
dated 1996, by Larry Prestosa.  As far as I know, he is the original
author of this program.  I have made some small additions to the
program, which are in my usual lowercase characters.  I have made no
changes to the input record processing, except for:
line 52: /* PARSE VAR INRECORD 3 INRECORD.TYPE 11 */
line 53:    inrecord.type=word(inrecord,1)

I have made some additions to the output processing of the program as
indicated at the end of the comments section in rcnintgn.

By following the instructions provided in the program documentation,
I created an IMS DBRC List output dataset from the commands
indicated, running against V6 recons.

I then ran the Rexx program against that file.  It generated an
output dataset of INIT.xx statments which I have successfully run
into a set of V7 RECONS, which Recons we use in production.

The program has been successfully run with data from IMS V6,7, and 9
RECONs.

The members provided include:
1. $$DOC             this file
2. reconrx0/rcnintgn the rexx program
3. ME                the 'me' exec(no longer used in rcnintgn)
4. REGSTRDB          sample jcl to register the db using '.initcmd'
5. RUNBATCH          sample jcl to run program in batch
6. INITTODO          general readme; instructions for implementation.
7. RCNLSTNG          sample input to the exec, produced with list.xx
8. INITNOIC (updated)output init.db, etc. statements generated.
9. INITWIC  (updated)output init.db, etc. + notify.ic generated.

Note: Notify.ic statements are ONLY generated by exec rcnintgn, and
      then ONLY using the 'I' parameter(see member RUNBATCH).

The assembler program ACBLIST is the work of Dougie Lawson of IBM who
has been kind enough to allow me to place this program on the CBT tape.

The members provided include:
1. ACBLIST           the assembler program
2. ACBSYSPR          sample sysprint output from the program
3. ACB               rexx exec to get data for 1 member w/o the JCL
4. ACBLINK           sample JCL to assemble and link the program
5. ACBLSTRU          sample JCL to run the program
6. PUBDOMAI          permission to be in the public domain
7. ACBLTODO          what to do for the ACBLIST utility

Larry Altman
larrytheotter@patmedia.net

