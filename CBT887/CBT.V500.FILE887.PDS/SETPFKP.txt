//SCOTTP JOB  'SETPFKP',CLASS=A,MSGCLASS=X,NOTIFY=SCOTT
//*
//*
//* ***************************************************************** *
//* INSTALL SETPFKEY: SETS CONSOLE PFKEYS AT IPL TIME                 *
//* ***************************************************************** *
//*
//*
//ASML    EXEC ASMFCL,PARM.ASM='LIST,NODECK,OBJ,TERM'
//ASM.SYSLIB DD  DSN=SYS1.AMODGEN,DISP=SHR
//        DD  DSN=SYS1.AMACLIB,DISP=SHR
//        DD  DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSIN DD *
*          DATA SET CBT1115    AT LEVEL 005 AS OF 10/23/80
         PRINT OFF
         MACRO
&NAME    INIT  &RG=1,&PC=,&REQ=,&PATCH=,&SAVE=,&PARM=,&PGM=,&ENTRY
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         LCLA  &A1,&A2,&A3,&A4
         SPACE 2
***********************************************************************
*        INIT MACRO - PROGRAM ENTRY AND HOUSEKEEPING                  *
***********************************************************************
         SPACE 2
         AIF   (T'&REQ EQ 'O').REGS
         AIF   ('&REQ' EQ 'NO').EREGS
         MNOTE 0,'INVALID ''REQ'' PARAM, NO ASSUMED'
         AGO   .EREGS
.REGS    ANOP
.* ISSUE EQUR MACRO FOR REGISTER EQUATED SYMBOLS
         EQUATE
.EREGS   ANOP
.* CHECK PC AND SET APPROPRIATE SWITCH
         AIF   (T'&PC EQ 'O').NOPCX
         AIF   ('&PC' NE 'ARM' AND '&PC' NE 'YES').NOPC
&ACSC1(1) SETB 1
         AGO   .NOPCX
.NOPC    ANOP
         MNOTE 0,'INVALID PC, IGNORED'
.NOPCX   AIF   (T'&ENTRY EQ 'O').NOENTRY
         AIF   ('&ENTRY' EQ 'ENTRY').ENTOK
         MNOTE 4,'INVALID POSITIONAL OPERAND, NO ENTRY GENERATED'
         AGO   .NOENTRY
.ENTOK   ANOP
         ENTRY &NAME
.NOENTRY ANOP
&NAME    DS    0H
*---------------------------------------------------------------------*
*        ISSUE SAVE MACRO                                             *
*---------------------------------------------------------------------*
         SAVE  (14,12),,&SYSECT-&SYSDATE-&SYSTIME
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM, GET SAVE AREA, SET UP BASE REGS                   *
*---------------------------------------------------------------------*
         SPACE 2
         LR    2,1                      SAVE PASSED PARAMS
.NPARM1  AIF   (T'&SAVE EQ 'O').NOSAVE
         USING &NAME,15                 SET UP BASE
&ACSC3(1) SETC '&SAVE'                  SAVE LENGTH
         LA    0,&SAVE+72+&ACSC1(1)*4   SET GETMAIN LENGTH
* ISSUE GETMAIN FOR SAVE AREA AND WORK SPACE
         GETMAIN R,LV=(0)
.CHAIN   ST    13,4(1)                  SAVE BACKWARD POINTER
         ST    1,8(13)                  SAVE FORWARD POINTER
         LR    13,1                     SET SAVE AREA
         DROP  15
         AGO   .ADDRS
.NOSAVE  USING &NAME,15                 SET UP BASE
         CNOP  0,4                      SET ON BOUNDRY
         BAL   1,*+76+&ACSC1(1)*4       SET REG SAVE PLUS WORK AREA
         USING *,13
         DS    18F                      SAVE AREA
         AIF   (NOT &ACSC1(1)).CHAIN
         DS    F                        SPIE SAVE AREA
         AGO   .CHAIN
.ADDRS   AIF   (T'&SAVE EQ 'O').NSAV1
         AIF   (T'&RG NE 'O').OKBASE
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE
.OKBASE  ANOP
&A1      SETA  &RG
.NOBASE  ANOP
&A2      SETA  11
&A3      SETA  1
&A4      SETA  0
         BALR  12,0                     SET BASE REG
         USING *,12
.ADRLP   ANOP
&A1      SETA  &A1-1
         AIF   (&A1 EQ 0).EADDR
         LA    &A2,4095(&A2+1)          SET MORE BASES
         USING *+4095*&A3-&A4-4*&A3-&ACSC1(1)*4,&A2
&A3      SETA  &A3+1
&A2      SETA  &A2-1
         AGO   .ADRLP
.NSAV1   ANOP
         AIF   (T'&RG EQ 'O').OKBASE1
         AIF   (T'&RG NE 'O').OKBASE1
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE1
.OKBASE1 ANOP
&A1      SETA  &RG
.NOBASE1 ANOP
&A2      SETA  12
&A3      SETA  1
&A4      SETA  82
         AGO   .ADRLP
.EADDR   AIF   (T'&PARM EQ 'O').PATCHS
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM ADDRESS OR INFO                                    *
*---------------------------------------------------------------------*
         SPACE 2
         AIF   ('&PARM(2)' NE 'ADDR').NPARM2
         ST    2,&PARM(1)               SAVE PARM ADDRESS POINTER
         AGO   .PATCHS
.NPARM2  AIF   ('&PARM(2)' NE 'DATA').NPARM3
         L     1,0(0,2)                 GET PARM ADDRESS
         LH    3,0(0,1)                 GET LENGTH
         LA    3,1(0,3)                 SET FOR MVC
         EX    3,*+8                    DO THE MOVE
         B     *+10                     GO AROUND
         MVC   &PARM(1).(0),0(1)        EXECUTED MOVE
         AGO   .PATCHS
.NPARM3  MNOTE 4,'INVALID ''PARM'' PARAM, NO INFO SAVED'
.PATCHS  AIF   ('&PATCH' EQ 'NO').LEAVE
         AIF   ('&PATCH' NE 'YES').LEAVE
         SPACE 2
*---------------------------------------------------------------------*
*        PATCH AREA                                                   *
*---------------------------------------------------------------------*
         B     *+104                    GO AROUND
         NOP   *                        SET UP ADDRESS INDICATOR
         DC    96X'00'                  CLEAR PATCH AREA
.LEAVE   AIF   ('&PC' NE 'YES').NPCYES
         SPACE 2
*---------------------------------------------------------------------*
*        ISSUE SPIEPC MACRO                                           *
*---------------------------------------------------------------------*
         SPACE 2
         SPIEPC
.NPCYES ANOP
         SPACE 2
         AIF   (T'&PGM EQ 'O').OUT
*        ISSUE WTO FOR PROGRAM NAME
         SPACE
         WTO   '&PGM EXECUTING',ROUTCDE=2
         SPACE
.OUT     ANOP
         LR 1,2                         RESTORE PARM INFO
         SPACE 2
         MEND
         MACRO
&NAME    LEAVE &SAVE=,&RC=0,&RECREG=
*        COPY  ACSCGBLS
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         SPACE 2
***********************************************************************
*        LEAVE MACRO                                                  *
***********************************************************************
         SPACE 2
&NAME    DS    0H
         AIF   (NOT &ACSC1(2)).NOSP1
*---------------------------------------------------------------------*
*        RESET SPIE ROUTINE                                           *
*---------------------------------------------------------------------*
         SPACE 2
         L     1,&ACSC3(1)+72(13)       GET SAVED ADDRESS
* ISSUE SPIE MACRO
         SPIE  MF=(E,(1))
         SPACE 2
.NOSP1   ANOP
*---------------------------------------------------------------------*
*        RESET SAVE AREA AND EXIT                                     *
*---------------------------------------------------------------------*
         SPACE 2
         AIF   (T'&SAVE EQ 'O').NSAV
         LR    1,13                     SET FOR RELEASE
.NSAV    L     13,4(13)                 UNCHAIN SAVE AREA
         AIF   (T'&SAVE EQ 'O').NSAV1
* ISSUE FREEMAIN MACRO
         LA    0,&SAVE+72+&ACSC1(1)*4   GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(1)
.NSAV1   AIF   (T'&RECREG EQ 'O').RET
         AIF   ('&RECREG'(1,1) EQ '(').RECOK
         MNOTE 4,'INVALID RECREG, NOT REGISTER NOTATION, IGNORED'
         AGO   .RET
.RECOK   ST    &RECREG(1),24(13)        SAVE RECREG IN R1 AREA
.RET     RETURN (14,12),T,RC=&RC
         SPACE 2
         MEND
         MACRO
         EQUATE
**                           EQUATES FOR SYMBOLIC REG USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         MEND
         PRINT ON
PFK      TITLE 'PFK CREATION - MODIFICATION PROGRAM'
****DATE - 10/24/78****************************************************
*  PROGRAMMER NAME -                                                  *
*                                                                     *
*         BARRY GOLDBERG                                              *
*         SYSTEMS PROG.                                               *
*         TECHNICAL SUPPORT                                           *
*         213-741-4875                                                *
*         AUTO CLUB OF SOUTHERN CALIFORNIA                            *
*         2601 S. FIGUEROA                                            *
*         LOS ANGELES, CA. 90007                                      *
*  REQUESTED BY -                                                     *
*                                                                     *
*         BARRY GOLDBERG                                              *
*  EFFECTIVE DATE -                                                   *
*                                                                     *
*        SOON                                                         *
*  PARM USAGE -                                                       *
*                                                                     *
*        NA                                                           *
*  REGISTER USAGE -                                                   *
*                                                                     *
*        SEE TEXT                                                     *
*  SWITCHES -                                                         *
*                                                                     *
*        NA                                                           *
*  INPUT FILES -                                                      *
*                                                                     *
*        SYSIN - PFK CONTROL                                          *
*  OUTPUT FILES -                                                     *
*                                                                     *
*        NEW PFK AREA IN STORAGE                                      *
*  MODULES USED -                                                     *
*                                                                     *
*        NA                                                           *
*  ENVIROMENTS  -                                                     *
*                                                                     *
*        MVS                                                          *
*        VS1                                                          *
*  DESCRIPTION -                                                      *
*                                                                     *
*        THIS ROUTINE WILL MODIFY THE PFK AREAS IN MAIN               *
*        STORAGE.  IN ORDER TO MAKE THEM PERMANENT,                   *
*        THE OPERATOR WILL HAVE TO MAKE A                             *
*        REAL PFK DEFINITION.                                         *
*        NOTE -- THIS PROGRAM MUST RUN AUTHORIZED OR KEY ZERO.        *
*                                                                     *
*   PROGRAM DESCRIPTION -                                             *
*         SSP79PFK WILL LOAD THE RESIDENT PFK AREA FROM CARD IMAGE    *
*         INPUT.                                                      *
*         THE OPERATORS MAY MAKE THE CHANGES PERMANENT AND UPDATE     *
*         SYS1.DCMLIB BY MEARLY UPDATING ANY PFK.                     *
*         IT IS SUGGESTED THAT THE SIMPLEST ONE BE UPDATED.  THIS WILL*
*         CAUSE THE IEEPFKEY MEMBER TO BE REWRITTEN WITH ALL PFK'S.   *
*                                                                     *
*INPUT RECORD FORMAT:                                                 *
*                                                                     *
*   COL               FUNCTION                                        *
*                                                                     *
*  1 - 2             CONSOLE ID FOR PFK                               *
*  3 - 4             PFK #                                            *
*    5               PFK CONTROL                                      *
*                    BLANK  =  NULL PFK ENTRY                         *
*                       N   =  NON CONVERSATIONAL                     *
*                       Y   =  CONVERSATIONAL                         *
*  7 - 71            THE COMMAND AS IT WOULD BE ISSUED AND IF         *
*                     MULTIPLE, SEPARATED WITH A SEMICOLON. ALSO      *
*                     UNDERSCORE ALLOWED (TAKES A POSITION).          *
*   72               CONTINUATION COLUMN IF COMMAND(S) REQUIRE        *
*                     ADDITIONAL SPACE ON ANOTHER CARD.               *
*   CARD # 2 -                                                        *
*   16-55            CONTINUATION OF COMMAND IF PREVIOUS CARD         *
*                     IS NONBLANK IN COL 72.                          *
*                                                                     *
*NOTE :                                                               *
*         1) MAXIMUM LENGTH OF ALL COMMANDS INCLUDING SPECIAL         *
*               CHARACTERS AND BLANKS IS 105 CHARACTERS.              *
*         2) THIS PROGRAM MUST RUN AUTHORIZED OR AS A SYSTEM TASK.    *
*                                                                     *
*EXAMPLE:                                                             *
*                                                                     *
*  //TSGBLGAC JOB 269,GOLDBERG,CLASS=X
*  //PFK   EXEC  PGM=SSP79PFK
*  //SYSIN DD    *
*  0101N K E,1
*  0102Y V 020,CONSOLE,ROUT=(1,2,3,4,5,6,8,9,10,11,12,14,15)
*  0103Y S SSP98LBL.P3;S SSP97LBL.P3
*  0104Y V 520,CONSOLE,ROUT=(1,2,3,4,5)
*  0105Y S LBLREADC.P3;S LBLREAD.P3,ID=_X
*  0106Y V 301,CONSOLE,ROUT=7,AUTH=ALL;V 300,CONSOLE,ROUT=3,AUTH=INFO
*  0107
*  0108Y S MSC1010P.P3,RUN=_X
*  0109Y CENOUT C=A,J=_
*  0110Y S MSC9010P.P3,RUN=_
*  0111Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N
*  0112Y S SSP93CPY.P3,NEWVOL='SER=_CAPS'
*  0201N K E,1
*  0202
*  0203
*  0204Y V 020,MSTCONS
*  0205
*  0206
*  0207Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE
*  0208N D A
*  0209N D N=SOUT
*  0210N D R
*  0211N D N
*  0212N K
*  0301N K E,1
*  0302Y S DUMWTR.P
*  0303Y S IRPT.P3;S IRPTJ.P3
*  0304Y V 002,ONLINE;V 00E,ONLINE;V 011,ONLINE;V 010,ONLINE
*  0305Y SF PRINT,002,,_;SF PRINT,00E;SF PUNCH,011
*  0306Y SF RDR,010
*  0307Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE
*  0308N D A
*  0309N D N
*  0310Y D Q;D R
*  0311N D N=SOUT
*  0312N K
*  0401N K E,1
*  0402Y V 017,CONSOLE,ROUT=(1,2,3,4,5,6,8,9,10,11,12,14,15)
*  0403Y S SSP98LBL.P3;S SSP97LBL.P3
*  0404
*  0405Y S LBLREADC.P3;S LBLREAD.P3,ID=_X
*  0406Y V 301,CONSOLE,ROUT=7,AUTH=ALL;V 300,CONSOLE,ROUT=3,AUTH=INFO
*  0407
*  0408Y S MSC1010P.P3,RUN=_X
*  0409Y CENOUT C=A,J=_
*  0410Y S MSC9010P.P3,RUN=_
*  0411Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE
*  0412Y S SSP93CPY.P3,NEWVOL='SER=_CAPS'
*  0501N K E,1
*  0502
*  0503
*  0504
*  0505
*  0506
*  0507Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE
*  0508
*  0509
*  0510
*  0511
*  0512
*
****DATE - 10/24/78****************************************************
         EJECT
SETPFKEY START 0                                                  *JLM*
XX       INIT  PGM=SETPFKEY                                       *JLM*
         SPACE
         OPEN  SYSIN
         SPACE 2
         MODESET KEY=ZERO
         SPACE
G1       EQU   *
         SPACE
**********************************************************************
*        THIS IS THE LOOP START                                       *
*        INITIALIZE THE PFK AREA AND READ/FILL WITH DATA              *
**********************************************************************
         SPACE
         MVI   CTLLINE,C' '             BLANK OUT IMAGE
         MVC   CTLLINE+1(L'CTLLINE-1),CTLLINE
         XC    CTLIND,CTLIND            AND INDICATORS
G1A      EQU   *                                                  *JLM*
         GET   SYSIN                    GET A RECORD
         CLI   0(R1),C'*'               IS THIS A COMMENT         *JLM*
         BE    G1A                        YES, IGNORE             *JLM*
         LR    R3,R1                    POINT TO IT
         PACK  DBL,0(2,R3)              GET CONSOLE ID
         CVB   R1,DBL
         STH   R1,CONID                 AND SAVE IT
         PACK  DBL,2(2,R3)              GET PFK NUMBER
         CVB   R1,DBL
         STH   R1,PFKNO                 SAVE IT FOR LATER
         CLI   4(R3),C' '               NULL ENTRY?
         BE    SETX                     YES, WE ARE FINISHED
         OI    CTLIND,ACTIVE            INDICATE ACTIVE ENTRY
         CLI   4(R3),C'N'               IS IT NON CONVERSATIONAL
         BE    SET1                     YES
         CLI   4(R3),C'Y'               COONVERSATIONAL
         BNE   SET1                     TOO BAD, IGNORE
         OI    CTLIND,CONY              SET CONVERSATIONAL BIT
         SPACE 2
SET1     EQU   *
         MVC   CTLLINE1,6(R3)           SET COMMAND
         CLI   71(R3),C' '              ANY CONTINUATION?
         BE    SETX                     NO
G2A      EQU   *                                                  *JLM*
         GET   SYSIN
         CLI   0(R1),C'*'               IS THIS A COMMENT         *JLM*
         BE    G2A                        YES, IGNORE             *JLM*
         MVC   CTLLINE2,15(R1)          GET REST OF THE COMMAND
         SPACE 2
**********************************************************************
*        DATA AREA NOW COMPLETE, CHECK AND SET PFK                    *
**********************************************************************
         SPACE
SETX     EQU   *
         L     R15,CVTPTR               POINT TO CVT
         USING CVT,R15
         L     R15,CVTCUCB
         USING UCM,R15
         LM    R3,R5,UCMVDATA           SET TO SEARCH
         DROP  R15
         LH    R6,CONID                 GET CON NUMBER
SRCH1    EQU   *
         BCT   R6,SRCH2                 NEXT ONE?
         B     SRCH3                    CONTINUE TO LOOK
SRCH2    EQU   *
         BXLE  R3,R4,SRCH1              GO GET MORE
         B     G1                       NOT HERE, IGNORE
         SPACE 2
SRCH3    EQU   *
**********************************************************************
*        HAVE FOUND THE ENTRY, NOW MUST GO TO                         *
*        GET THE PFK AREA                                             *
**********************************************************************
         SPACE 2
         USING UCMLIST,R3
         ICM   R15,B'1111',UCMXB        DCM ADDRESS
         BZ    G1                       NOT HERE
         DROP  R3
         USING DCM,R15
         ICM   R15,B'1111',DCMADPFK
         BZ    G1                       NOT HERE, IGNORE
         SPACE 2
**********************************************************************
*        WE ARE NOW POINTING TO THE PFK AREA                          *
**********************************************************************
         SPACE
         LH    R4,PFKNO                 GET PFK NUMBER
PFK1     EQU   *
         BCT   R4,NXTPFK                GET ANOTHER
         CLC   0(1,R15),PFKNO+1         IS IT THE SAME?
         BNE   G1                       NO, ERROR
         MVC   1(PFKLEN-1,R15),CTLIND   SET UP THE PFK
         B     G1
         SPACE
NXTPFK   EQU   *
         LA    R15,PFKLEN(R15)          POINT TO NEXT ONE
         CLI   0(R15),100               END?
         BE    G1                       YES, NOT HERE
         B     PFK1                     GO LOOK AGAIN
         SPACE 2
EOFIN    EQU   *
         MODESET KEY=NZERO                                        *JLM*
         CLOSE SYSIN
         LEAVE
         SPACE 2
         LTORG
         SPACE
DBL      DS    D                        A WORK AREA
CONID    DS    H                        REQUESTED CONSOLE
PFKNO    DS    H                        REQUESTED PFK NUMBER
         DS    0D
CTLIND   DS    X                        CONTROL BYTE
ACTIVE   EQU   X'80'
CONY     EQU   X'20'                    PFK IS CONVERSATIONAL
CTLLINE  DS    0CL108                   LENGTH OF DATA
CTLLINE1 DS    CL65                     FIRST CARD IMAGE AMOUNT
CTLLINE2 DS    CL40                     NEXT AMOUNT (ALLOW ONLY 105)
         DS    CL3                      THE REST
         SPACE 2
PFKLEN   EQU   110                      LENGTH OF A PFK ANTRY
         SPACE 2
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,EODAD=EOFIN,DSORG=PS
         SPACE 2
         CVT   SYS=AOS1,DSECT=YES
         IEECUCM SYS=AOS1,FORMAT=NEW
DCM      DSECT
         IEECRDCM DSECT=YES
         SPACE 2
         END
//ASM.SYSTERM DD SYSOUT=*
//LKED.SYSLMOD DD DSN=SYS2.LINKLIB,DISP=SHR
//LKED.SYSIN DD *
  SETCODE AC(1)
  NAME SETPFKEY(R)
/*
