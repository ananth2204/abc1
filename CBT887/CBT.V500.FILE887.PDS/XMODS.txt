//SCOTTZ   JOB 'TSV0024 UMOD',NOTIFY=SCOTT,
//   CLASS=S,MSGCLASS=X,MSGLEVEL=(1,1)
//*
//*   NAME:    SYS2.USERMODS(TSV0024 )
//*   PURPOSE: TO INSTALL USERMOD TSV0024 WHICH UPDATES THE SMF
//*            CONTROL TABLE (IEESMCA) AND THE SMF INITILIZATION ROUTER
//*            (IEEMB820) SO THAT THE CONTOL TABLE NOW HAVE THE IPL
//*            DATE AND TIME CONTAINED WITHIN IT.
//*
//*   NOTE(S): A IPL WITH A CLPA IS REQUIRED.
//*
//*
//*
//*
//RR     EXEC SMPAPP
//SMPCNTL  DD *
  RESTORE G(TSV0024) .
   RESETRC .
  REJECT  S(TSV0024) .
/*
//RECV   EXEC SMPREC
//SMPPTFIN DD  DATA,DLM='$$'
++USERMOD(TSV0024) .
++VER(Z038) FMID(EBB1102) .
++MAC(IEESMCA)  DISTLIB(AMODGEN) SYSLIB(MODGEN) .
*
*        %GOTO SMCAL1;      /*
         MACRO
         IEESMCA  ,   */
*%SMCAL1 : ;
*
*/*           SYSTEM MANAGEMENT FACILITIES CONTROL TABLE             */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3 PTF UZ10430 , 4/5/77, LEVEL=2          @ZA18120*/
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - A DSECT IS PRODUCED AND A USING ON SMCABASE GIVES    */
*/*             ADDRESSABILITY FOR ALL SYMBOLS.                      */
*/*      PL/S - %INCLUDE SYSLIB(CVT) TO DEFINE CVTSMCA               */
*/*                                                                  */
*/*  NOTE                                                            */
*/*      THIS TABLE IS LOCATED IN SQS-SUBPOOL 255                    */
*/*      AND IS POINTED TO BY CVTSMCA                                */
*
*%GOTO SMCAL2;  /*
.* 138000,210000,798000,936000                                    20011
.* 144000-150000,552000-606000,630000-654000,696000-714000,       M0435
.* 732000,858000-876000                                           M0435
.*                                                                 *SKV
.* SKV 07/26/2008  ADDED ADDITIONAL FIELDS: SMCAITME AND SMCAIDTE  *SKV
.*                                                                 *SKV
.* (C) SMCAJWT - RE-DEFINE FIELD CONTENTS                      @ZA18120
         SPACE 1
SMCABASE DSECT
         SPACE 1
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
         SPACE 1
SMCAOPT  DS    B -            SMFDEFLT OPTIONS SELECTED AT
*                             INITIALIZATION TIME.  THE OPTIONS APPLY
*                             TO BACKGROUND PROCESSING.  SMCAFOPT
*                             (OFFSET 82) CONTAINS THE FOREGROUND
*                             OPTIONS.
SMCAOPT1 EQU   BIT0 -         JOB ACCOUNTING (OPT=1)
SMCAOPT2 EQU   BIT1 -         STEP ACCOUNTING (OPT=2)
SMCAEXT  EQU   BIT2 -         USER EXITS WILL BE TAKEN (EXT=YES)
SMCADSA  EQU   BIT3 -         DATA SET ACCOUNTING (DSV=2 OR 3)    19028
SMCAVOL  EQU   BIT4 -         VOLUME ACCOUNTING (DSV=1 OR 3)      19028
SMCARS01 EQU   BIT5,,C'X' -   RESERVED
SMCATDS  EQU   BIT6 -         TYPE 17 RECORDS MAINTAINED FOR TEMPORARY
*                             DATA SETS (REC=2 OR 3)              19028
SMCAFGND EQU   BIT7 -         SMF FOREGROUND OPTIONS BIT.  IF 0, ABOVE
*                             BITS DESCRIBE BACKGROUND OPTIONS.  IF 1,
*                             ABOVE BITS DESCRIBE FOREGROUND OPTIONS.
*                                                                 20011
SMCAMISC DS    B -            MISCELLANEOUS INDICATORS
SMCAUSER EQU   BIT0 -         SMF RECORDING REQUESTED
SMCAMAN  EQU   BIT1 -         SYS1.MAN DATA SET IS/IS NOT PRESENT
*                             BITS 0 AND 1 MEAN
*                             00 - NO SMF RECORDING REQUESTED
*                                  (MAN=NONE)
*                             01 - ONLY USER RECORDS TO BE RECORDED
*                                  (MAN=USER)
*                             10 - INVALID COMBINATION
*                             11 - SMF AND USER RECORDING REQUESTED
*                                  (MAN=ALL)
SMCAOPI  EQU   BIT2 -         IF 0, OPERATOR MAY CHANGE SMF FOREGROUND
*                             OPTIONS WHEN HE ISSUES A TSO START
*                             COMMAND OR TSO MODIFY COMMAND (OPI=YES).
*                             IF 1, OPERATOR MAY NOT CHANGE SMF
*                             FOREGROUND OPTIONS (OPI=NO).        20011
SMCAFIRT EQU   BIT3 -         SMF DATA SET TO BE OPENED
SMCAPSDP EQU   BIT4 -         PSEUDO-DUMP SWITCH
*                             (DEVICE SWITCHING ONLY)
SMCADBSY EQU   BIT5 -         DUMP IS BUSY (SMF WRITER)
SMCABSW  EQU   BIT6 -         BUFFER SWITCH.  IF 0, LEFT HALF OF BUFFER
*                             IN USE.  IF 1, RIGHT HALF OF BUFFER IN
*                             USE.
SMCADUMP EQU   BIT7 -         DUMP BUSY
SMCATOFF DS    H -            OFFSET OF THE FIRST SMF TIOT ENTRY FROM
*                             THE BEGINNING OF THE MASTER SCHEDULER
*                             TIOT
SMCATIOT DS    A -            ADDRESS OF THE MASTER SCHEDULER TIOT
*
* THE FOLLOWING FIELDS ARE SET UP BY IPL INITIALIZATION
*
SMCAJWT  DS    F -            JOB WAIT TIME LIMIT IN MICROSEC. @ZA18120
*                             TIMER UNITS. DERIVED FROM JWT IN @ZA18120
*                             SMFDEFLT.                        @ZA18120
SMCABUF  DS    0F -           SMF BUFFER SIZE IN BYTES.  AT
*                             INITIALIZATION, IT CONTAINS BUF=VALUE.
SMCABSIZ DS    F -            AFTER IPL, IT CONTAINS THE BUFFER WORKING
*                             SIZE
SMCASID  DS    CL4 -          SYSTEM IDENTIFICATION (SID)        MDC002
SMCABUFP DS    A -            ADDRESS OF THE SMF BUFFER
*
* SMF DEVICE CHARACTERISTICS
*
*  CURRENT RECORDING DATA SET
*
*        WHEN THE SMF RECORDING DEVICE IS A DIRECT ACCESS DEVICE,
*        THE FOLLOWING FIELDS MAY DESCRIBE EITHER THE PRIMARY OR
*        ALTERNATE DATA SET, WHICHEVER IS CURRENTLY BEING WRITTEN.
*
SMCAPDEV DS    CL6 -          VOLUME SERIAL NUMBER OF THE CURRENTLY
*                             USED SMF DATA SET
SMCAPSTA DS    B -            CURRENTLY USED SMF DATA SET DEVICE STATUS
SMCAPNAV EQU   BIT0 -         DATA SET IS NOT AVAILABLE FOR RECORDING
SMCAPTAP EQU   BIT1 -         THE SMF RECORDING DEVICE IS A MAGNETIC
*                             TAPE DEVICE
SMCAPDA  EQU   BIT2 -         THE SMF RECORDING DEVICE IS A DIRECT
*                             ACCESS DEVICE
SMCAPMTY EQU   BIT3 -         THE DATA SET IS READY TO USE
SMCAMOD  EQU   BIT4 -         OPEN MODULE
SMCARS02 EQU   BIT5,,C'X' -   RESERVED
SMCAPUNT EQU   BIT6 -         A DEVICE ADDRESS WAS SPECIFIED FOR THE
*                             SMF DATA SET AT SYSTEM INITIALIZATION
SMCAPVOL EQU   BIT7 -         A VOLUME SERIAL NUMBER WAS SPECIFIED FOR
*                             THE SMF DATA SET AT SYSTEM INITIALIZATION
SMCAPDAR DS    CL3 -          CURRENTLY USED SMF DATA SET DEVICE
*                             ADDRESS (EBCDIC)
SMCAPLBL DS    B -            LABEL STATUS OF THE CURRENTLY USED SMF
*                             DATA SET
SMCARS03 EQU   BIT0,,C'X' -   RESERVED
SMCARS04 EQU   BIT1,,C'X' -   RESERVED
SMCARS05 EQU   BIT2,,C'X' -   RESERVED
SMCARS06 EQU   BIT3,,C'X' -   RESERVED
SMCARS07 EQU   BIT4,,C'X' -   RESERVED
SMCAPNSL EQU   BIT5 -         NON-STANDARD LABEL (NSL)
SMCAPSL  EQU   BIT6 -         STANDARD LABEL (SL)
SMCAPNL  EQU   BIT7 -         NO LABEL (NL)
SMCAXORY DS    C -            AN EBCDIC X OR Y CORRESPONDING TO THE
*                             DATA SET THAT IS TO RECEIVE THIS ENTRY
SMCAPDCB DS    A -            ADDRESS OF THE CURRENTLY USED SMF DATA
*                             SET DCB
*
* DATA SET NOT CURRENTLY IN USE
*
*        WHEN THE SMF RECORDING DEVICE IS A DIRECT ACCESS DEVICE,
*        THE FOLLOWING FIELDS MAY DESCRIBE EITHER THE PRIMARY OR
*        ALTERNATE DATA SET, WHICHEVER IS CURRENTLY NOT IN USE.
*
SMCAADEV DS    CL6 -          VOLUME SERIAL NUMBER OF THE NON-CURRENT
*                             SMF DATA SET
SMCASTA  DS    B -            NON-CURRENT SMF DATA SET DEVICE STATUS.
*                             BIT SETTINGS ARE SAME AS FOR SMCAPSTA.
SMCAADAR DS    CL3 -          NON-CURRENT SMF DATA SET DEVICE ADDRESS
SMCAALBL DS    B -            LABEL STATUS OF THE NON-CURRENT SMF DATA
*                             SET.  BIT SETTINGS ARE SAME AS FOR
*                             SMCAPLBL.
SMCAYORX DS    C -            AN EBCDIC X OR Y CORRESPONDING TO THE
*                             DATA SET THAT IS TO RECEIVE THIS ENTRY
SMCAADCB DS    A -            ADDRESS OF THE NON-CURRENT SMF DATA
*                             SET DCB
*
* SMF ECB'S
*
SMCAWECB DS    CL4 -          WRITE REQUEST ECB WAITED UPON BY THE SMF
*                             WRITER.  POSTED BY IGC0008C WHEN A WRITE
*                             IS REQUESTED.
SMCABECB DS    CL4 -          ECB FOR THE SMF BUFFER
SMCASGWR DS    F -            IF THE LOGICAL RECORD EXCEEDS 1/2 THE
*                             BUFFER SIZE, THIS FIELD INDICATES THE
*                             NUMBER OF BUFFER LOADS REQUIRED TO
*                             ACCOMMODATE THE RECORD
SMCASGFT DS    F -            THE NUMBER OF RECORD SEGMENTS (BUFFER
*                             LOADS) THAT WILL FIT IN THE DATA SET
*
* MISCELLANEOUS POINTERS AND COMMUNICATION AREAS
*
SMCAWAIT DS    2F -           THE ACCUMULATED WAIT TIME, EXPRESSED IN
*                             26 USEC TIMER UNITS.  FIRST WORD IS
*                             OVERFLOW FROM SECOND WORD.
SMCAENTY DS    0CL2 -         THESE SWITCHES GOVERN ENTRY CONDITIONS
*                             FOR DEVICE SWITCHING/ALLOCATION/
*                             OPENING ROUTINES
SMCAENDI DS    B -            A COMMUNICATION FIELD
SMCARS14 EQU   BIT0,,C'X' -   RESERVED
SMCARS15 EQU   BIT1,,C'X' -   RESERVED
SMCARS16 EQU   BIT2,,C'X' -   RESERVED
SMCARS17 EQU   BIT3,,C'X' -   RESERVED
SMCARS18 EQU   BIT4,,C'X' -   RESERVED
SMCARS19 EQU   BIT5,,C'X' -   RESERVED
SMCARS20 EQU   BIT6,,C'X' -   RESERVED
SMCADSNF EQU   BIT7 -         IF ZERO, DATA SET (X OR Y) WAS FOUND.
*                             IF ONE, DATA SET (X OR Y) WAS NOT FOUND.
SMCAENOP DS    C -            ENTRY CODE THAT INDICATES WHICH LOAD OF
*                             SVC 83 HAS PASSED CONTROL TO CURRENT LOAD
SMCAFOPT DS    B -            SMF FOREGROUND OPTIONS.
*                             BIT SETTINGS ARE SAME AS SMCAOPT.   20011
SMCAENAL DS    X -            RESERVED
SMCAWRTP DS    F -            AN OPTIMUM BUFFER LOAD DISPLACEMENT
*                             FIGURE.  WHEN THE BUFFER IS LOADED TO OR
*                             BEYOND THIS POINT, IT WILL BE WRITTEN TO
*                             THE SMF DATA SET.
*
* XCTL REMOTE LIST USED BY SVC 83
*
SMCAXCTL DS    A -            ADDRESS OF THE NAME OF THE ROUTINE TO
*                             WHICH XCTL IS TO PASS CONTROL
         DS    A -            DCB POINTER.  ALWAYS ZERO ACCORDING TO
*                             THE XCTL MACRO INSTRUCTION FORMAT.
SMCAXNAM DS    CL8 -          NAME OF THE ROUTINE TO WHICH XCTL IS TO
*                             PASS CONTROL
SMCASWA  DS    B -            INDICATOR BITS
SMCASWAR EQU   BIT0 -         RESERVED                            19028
SMCADSTR EQU   BIT1 -         DISASTER BIT.  BOTH DATA SETS ARE FULL.
*                             SMF IS NOT RECORDING.               19028
SMCAOPFL EQU   BIT2 -         OPEN FAILURE ON SMF DATA SET.  SMF IS
*                             NOT RECORDING.                      19028
SMCANADA EQU   BIT3 -         NEXT ALLOCATION MUST BE FOR A DIRECT
*                             ACCESS DEVICE                       19028
SMCANAVL EQU   BIT4 -         ALLOCATION SEARCH IS BY VOLUME SERIAL
*                             NUMBER                              19028
SMCAZEOD EQU   BIT5 -         SMF HALT END-OF-DAY IS PROCESSING   19028
SMCADSSP EQU   BIT6 -         ENTRY TO THE WRITER IS FOR A SPACE CHECK
*                             OF THE DATA SET                     19028
SMCADSSW EQU   BIT7 -         ENTRY TO THE WRITER IS FOR DATA SET
*                             SWITCHING ONLY                      19028
SMCASWB  DS    B -            RESERVED
SMCASWC  DS    B -            RESERVED
SMCASWD  DS    B -            RESERVED
SMCADSTM DS    CL8 -          START TIME AND DATE AT WHICH NO DATA SET
*                             WAS AVAILABLE TO RECORD ON.  APPEARS IN
*                             PACKED DECIMAL IN THE FORM 00YYDDDF
*                             WHERE 00 = ZEROS, YY = LAST 2 DIGITS OF
*                             THE YEAR, DDD = DAY OF THE YEAR AND F IS
*                             A SIGN.
SMCADSCT DS    F -            THE NUMBER OF SMF RECORDS THAT HAVE BEEN
*                             OMITTED FROM THE SMF DATA SET DUE TO THE
*                             UNAVAILABILITY OF A DATA SET TO RECORD ON
SMCAASCB DS    0A -           CURRENT TASK ASCB ADDRESS (OS/VS2) MDC005
SMCAPOST DS    H -            RESERVED (OS/VS1)                  MDC003
SMCATJID DS    CL2 -          CURRENT TASK TJID (OS/VS1)         MDC004
SMCARS21 DS    F -            RESERVED
SMCASAVE DS    A -            USER EXIT ADDRESS SAVE FIELD (OS/VS2)
*                             (MDC300)                         @ZA02385
SMCATEXP DS    F -            TIME OF MOST RECENT EXPIRATION OF A
*                             TEN-MINUTE TIMER QUEUE ELEMENT (TQE)
*                                                                ICB310
SMCAPGIN DS    0F -           NUMBER OF PAGE-INS PERFORMED (OS/VS1)
*                             (MDC371)                         @ZA07764
SMCADOMX DS    F -            MANX DOM WTO ID (OS/VS2)
*                             (MDC373)                         @ZA07764
SMCAPGOT DS    0F -           NUMBER OF PAGE-OUTS PERFORMED (OS/VS1)
*                             (MDC372)                         @ZA07764
SMCADOMY DS    F -            MANY DOM WTO ID (OS/VS2)
*                             (MDC374)                         @ZA07764
SMCAPGRL DS    F -            NUMBER OF PAGES RECLAIMED.  RECLAMATION
*                             RESULTS WHEN A PAGE IS NEEDED TO SATISFY
*                             A PAGE FAULT BUT DOES NOT HAVE TO BE
*                             RETRIEVED FROM AUXILIARY STORAGE BECAUSE
*                             IT IS RESIDENT IN REAL MAIN STORAGE
*                             AWAITING PAGE-OUT.                 ICB310
SMCARGNS DS    F -            NUMBER OF REGIONS SWAPPED IN AND
*                             OUT                                ICB310
SMCASPIN DS    F -            NUMBER OF SWAP PAGE-INS            ICB310
SMCASPOT DS    F -            NUMBER OF SWAP PAGE-OUTS           ICB310
SMCARGNM DS    F -            NUMBER OF REGIONS MIGRATED         ICB310
SMCAPGM  DS    F -            NUMBER OF PAGES MIGRATED           ICB310
SMCAU83  DS    A -            ADDRESS OF SMF OUTPUT EXIT (IEFU83)
*                             TAKEN WHEN RECORDS ARE TO BE WRITTEN TO
*                             AN SMF DATA SET                    ICB407
SMCAWTCB DS    A -            ADDRESS OF SMF WRITER'S TCB - USED BY
*                             XMPOST ERROR PROCESSOR (IEEMB827)
*                             (OS/VS2)                           MDC006
SMCASTCB DS    A -            ADDRESS OF SMF SVC CURRENTLY WAITING FOR
*                             WRITER - USED BY XMPOST ERROR PROCESSOR
*                             (IEEMB827)  (OS/VS2)               MDC007
SMCAITME DS    CL4 -          IPL TIME IN BINARY IN HUNDREDTHS OF  *SKV
*                             A SECOND.  REFERENCE ONLY.           *SKV
SMCAIDTE DS    CL4 -          IPL DATE (0CYYDDDF)                  *SKV
*                             REFERENCE ONLY.                      *SKV
SMCAEND  EQU   *
SMCASIZE EQU   SMCAEND-SMCABASE - SIZE OF SMCA TABLE
TDEVSIZE EQU   SMCAADEV-SMCAPDEV - SIZE OF DEVICE ENTRY
         MEND  , */
*   %SMCAL2 :  ;
*
*   DECLARE
*     1 SMCABASE BASED(CVTSMCA) BDY(WORD),
*      2 SMCAOPT     CHAR(1),            /* SMFDEFLT OPTIONS SELECTED
*                                           AT INITIALIZATION TIME.
*                                           THE OPTIONS APPLY TO
*                                           BACKGROUND PROCESSING.
*                                           SMCAFOPT (OFFSET 82)
*                                           CONTAINS THE FOREGROUND
*                                           OPTIONS.                 */
*       3 SMCAOPT1 BIT(1),               /* JOB ACCOUNTING (OPT=1)   */
*       3 SMCAOPT2 BIT(1),               /* STEP ACCOUNTING (OPT=2)  */
*       3 SMCAEXT  BIT(1),               /* USER EXITS WILL BE TAKEN
*                                           (EXT=YES)                */
*       3 SMCADSA  BIT(1),               /* DATA SET ACCOUNTING
*                                           (DSV=2 OR 3)        19028*/
*       3 SMCAVOL  BIT(1),               /* VOLUME ACCOUNTING
*                                           (DSV=1 OR 3)        19028*/
*       3 SMCARS01 BIT(1),               /* RESERVED           ICB441*/
*       3 SMCATDS  BIT(1),               /* TYPE 17 RECORDS
*                                           MAINTAINED FOR TEMPORARY
*                                           DATA SETS (REC=2 OR 3)
*                                                               19028*/
*       3 SMCAFGND BIT(1),               /* SMF FOREGROUND OPTIONS
*                                           BIT.  IF 0, ABOVE BITS
*                                           DESCRIBE BACKGROUND
*                                           OPTIONS.  IF 1, ABOVE
*                                           BITS DESCRIBE FOREGROUND
*                                           OPTIONS             20011*/
*      2 SMCAMISC    CHAR(1),            /* MISCELLANEOUS INDICATORS */
*       3 SMCAUSER BIT(1),               /* SMF RECORDING REQUESTED  */
*       3 SMCAMAN  BIT(1),               /* SYS1.MAN DATA SET
*                                           IS/IS NOT PRESENT.
*                                           BITS 0 AND 1 MEAN
*                                           00 - NO SMF RECORDING
*                                                REQUESTED (MAN=NONE)
*                                           01 - ONLY USER RECORDS TO
*                                                BE RECORDED (MAN=USER)
*                                           10 - INVALID COMBINATION
*                                           11 - SMF AND USER
*                                                RECORDING REQUESTED
*                                                (MAN=ALL)           */
*       3 SMCAOPI  BIT(1),               /* IF 0, OPERATOR MAY CHANGE
*                                           SMF FOREGROUND OPTIONS
*                                           WHEN HE ISSUES A TSO
*                                           START COMMAND OR TSO
*                                           MODIFY COMMAND (OPI=YES).
*                                           IF 1, OPERATOR MAY NOT
*                                           CHANGE SMF FOREGROUND
*                                           OPTIONS (OPI=NO).   20011*/
*       3 SMCAFIRT BIT(1),               /* SMF DATA SET TO BE
*                                           OPENED                   */
*       3 SMCAPSDP BIT(1),               /* PSEUDO-DUMP SWITCH
*                                           (DEVICE SWITCHING ONLY)  */
*       3 SMCADBSY BIT(1),               /* DUMP IS BUSY (SMF WRITER)*/
*       3 SMCABSW  BIT(1),               /* BUFFER SWITCH.  IF 0,
*                                           LEFT HALF OF BUFFER IN
*                                           USE.  IF 1, RIGHT HALF OF
*                                           BUFFER IN USE.           */
*       3 SMCADUMP BIT(1),               /* DUMP BUSY                */
*      2 SMCATOFF    FIXED(15),          /* OFFSET OF THE FIRST SMF
*                                           TIOT ENTRY FROM THE
*                                           BEGINNING OF THE MASTER
*                                           SCHEDULER TIOT           */
*      2 SMCATIOT    PTR(31),            /* ADDRESS OF THE MASTER
*                                           SCHEDULER TIOT           */
*   /*                                                               */
*   /* THE FOLLOWING FIELDS ARE SET UP BY IPL INITIALIZATION         */
*   /*                                                               */
*      2 SMCAJWT     FIXED(31),          /* JOB WAIT TIME LIMIT IN
*                                           MICROSECOND TIMER UNITS.
*                                           DERIVED FROM JWT IN
*                                           SMFDEFLT.        @ZA18120*/
*      2 SMCABUF     FIXED(31),          /* SMF BUFFER SIZE IN BYTES.
*                                           AT INITIALIZATION, IT
*                                           CONTAINS BUF=VALUE.      */
*       3 SMCABSIZ    FIXED(31),         /* AFTER IPL, IT CONTAINS
*                                           THE BUFFER WORKING SIZE  */
*      2 SMCASID     CHAR(4),            /* SYSTEM IDENTIFICATION
*                                           (SID)              MDC002*/
*      2 SMCABUFP    PTR(31),            /* ADDRESS OF THE SMF BUFFER*/
*   /*                                                               */
*   /* SMF DEVICE CHARACTERISTICS                                    */
*   /*                                                               */
*   /* CURRENT RECORDING DATA SET                                    */
*   /*                                                               */
*   /*   WHEN THE SMF RECORDING DEVICE IS A DIRECT ACCESS DEVICE,    */
*   /*   THE FOLLOWING FIELDS MAY DESCRIBE EITHER THE PRIMARY OR     */
*   /*   ALTERNATE DATA SET, WHICHEVER IS CURRENTLY BEING WRITTEN.   */
*   /*                                                               */
*      2 SMCAPDEV    CHAR(6) BDY(WORD),  /* VOLUME SERIAL NUMBER OF
*                                           THE CURRENTLY USED SMF
*                                           DATA SET                 */
*      2 SMCAPSTA    CHAR(1),            /* CURRENTLY USED SMF DATA
*                                           SET DEVICE STATUS        */
*       3 SMCAPNAV BIT(1),               /* DATA SET IS NOT AVAILABLE
*                                           FOR RECORDING            */
*       3 SMCAPTAP BIT(1),               /* THE SMF RECORDING DEVICE
*                                           IS A MAGNETIC TAPE DEVICE*/
*       3 SMCAPDA  BIT(1),               /* THE SMF RECORDING DEVICE
*                                           IS A DIRECT ACCESS DEVICE*/
*       3 SMCAPMTY BIT(1),               /* THE DATA SET IS READY TO
*                                           USE                      */
*       3 SMCAMOD  BIT(1),               /* OPEN MODULE              */
*       3 SMCARS02 BIT(1),               /* RESERVED                 */
*       3 SMCAPUNT BIT(1),               /* A DEVICE ADDRESS WAS
*                                           SPECIFIED FOR THE SMF
*                                           DATA SET AT SYSTEM
*                                           INITIALIZATION           */
*       3 SMCAPVOL BIT(1),               /* A VOLUME SERIAL NUMBER
*                                           WAS SPECIFIED FOR THE SMF
*                                           DATA SET AT SYSTEM
*                                           INITIALIZATION           */
*      2 SMCAPDAR    CHAR(3),            /* CURRENTLY USED SMF DATA
*                                           SET DEVICE ADDRESS
*                                           (EBCDIC)                 */
*      2 SMCAPLBL    CHAR(1),            /* LABEL STATUS OF THE
*                                           CURRENTLY USED SMF DATA
*                                           SET                      */
*       3 SMCARS03 BIT(1),               /* RESERVED                 */
*       3 SMCARS04 BIT(1),               /* RESERVED                 */
*       3 SMCARS05 BIT(1),               /* RESERVED                 */
*       3 SMCARS06 BIT(1),               /* RESERVED                 */
*       3 SMCARS07 BIT(1),               /* RESERVED                 */
*       3 SMCAPNSL BIT(1),               /* NON-STANDARD LABEL (NSL) */
*       3 SMCAPSL  BIT(1),               /* STANDARD LABEL (SL)      */
*       3 SMCAPNL  BIT(1),               /* NO LABEL (NL)            */
*      2 SMCAXORY    CHAR(1),            /* AN EBCDIC X OR Y
*                                           CORRESPONDING TO THE
*                                           DATA SET THAT IS TO
*                                           RECEIVE THIS ENTRY       */
*      2 SMCAPDCB    PTR(31),            /* ADDRESS OF THE CURRENTLY
*                                           USED SMF DATA SET DCB    */
*   /*                                                               */
*   /* DATA SET NOT CURRENTLY IN USE                                 */
*   /*                                                               */
*   /*   WHEN THE SMF RECORDING DEVICE IS A DIRECT ACCESS DEVICE,    */
*   /*   THE FOLLOWING FIELDS MAY DESCRIBE EITHER THE PRIMARY OR     */
*   /*   ALTERNATE DATA SET, WHICHEVER IS CURRENTLY NOT IN USE.      */
*   /*                                                               */
*      2 SMCAADEV    CHAR(6) BDY(WORD),  /* VOLUME SERIAL NUMBER OF
*                                           THE NON-CURRENT SMF DATA
*                                           SET                      */
*      2 SMCASTA     CHAR(1),            /* NON-CURRENT SMF DATA SET
*                                           DEVICE STATUS            */
*       3 SMCAANAV BIT(1),               /* DATA SET IS NOT AVAILABLE
*                                           FOR RECORDING            */
*       3 SMCAATAP BIT(1),               /* THE SMF RECORDING DEVICE
*                                           IS A MAGNETIC TAPE DEVICE*/
*       3 SMCAADA  BIT(1),               /* THE SMF RECORDING DEVICE
*                                           IS A DIRECT ACCESS DEVICE*/
*       3 SMCAAMTY BIT(1),               /* THE DATA SET IS READY TO
*                                           USE                      */
*       3 SMCAAMOD BIT(1),               /* OPEN MODULE              */
*       3 SMCARS08 BIT(1),               /* RESERVED                 */
*       3 SMCAAUNT BIT(1),               /* A DEVICE ADDRESS WAS
*                                           SPECIFIED FOR THE SMF
*                                           DATA SET AT SYSTEM
*                                           INITIALIZATION           */
*       3 SMCAAVOL BIT(1),               /* A VOLUME SERIAL NUMBER
*                                           WAS SPECIFIED FOR THE SMF
*                                           DATA SET AT SYSTEM
*                                           INITIALIZATION           */
*      2 SMCAADAR    CHAR(3),            /* NON-CURRENT SMF DATA SET
*                                           DEVICE ADDRESS (EBCDIC)  */
*      2 SMCAALBL    CHAR(1),            /* LABEL STATUS OF THE
*                                           NON-CURRENT SMF DATA SET */
*       3 SMCARS09 BIT(1),               /* RESERVED                 */
*       3 SMCARS10 BIT(1),               /* RESERVED                 */
*       3 SMCARS11 BIT(1),               /* RESERVED                 */
*       3 SMCARS12 BIT(1),               /* RESERVED                 */
*       3 SMCARS13 BIT(1),               /* RESERVED                 */
*       3 SMCAANSL BIT(1),               /* NON-STANDARD LABEL (NSL) */
*       3 SMCAASL  BIT(1),               /* STANDARD LABEL (SL)      */
*       3 SMCAANL  BIT(1),               /* NO LABEL (NL)            */
*      2 SMCAYORX    CHAR(1),            /* AN EBCDIC X OR Y
*                                           CORRESPONDING TO THE
*                                           DATA SET THAT IS TO
*                                           RECEIVE THIS ENTRY       */
*      2 SMCAADCB    PTR(31),            /* ADDRESS OF THE NON-CURRENT
*                                           SMF DATA SET DCB         */
*   /*                                                               */
*   /* SMF ECB'S                                                     */
*   /*                                                               */
*      2 SMCAWECB    CHAR(4) BDY(WORD),  /* WRITE REQUEST ECB
*                                           WAITED UPON BY THE SMF
*                                           WRITER.  POSTED BY
*                                           IGC0008C WHEN A WRITE
*                                           IS REQUESTED.            */
*      2 SMCABECB    CHAR(4) BDY(WORD),  /* ECB FOR THE SMF BUFFER   */
*      2 SMCASGWR    FIXED(31),          /* IF THE LOGICAL RECORD
*                                           EXCEEDS 1/2 THE BUFFER
*                                           SIZE, THIS FIELD
*                                           INDICATES THE NUMBER OF
*                                           BUFFER LOADS REQUIRED TO
*                                           ACCOMMODATE THE RECORD   */
*      2 SMCASGFT    FIXED(31),          /* THE NUMBER OF RECORD
*                                           SEGMENTS (BUFFER LOADS)
*                                           THAT WILL FIT IN THE DATA
*                                           SET                      */
*   /*                                                               */
*   /* MISCELLANEOUS POINTERS AND COMMUNICATION AREAS                */
*   /*                                                               */
*      2 SMCAWAIT (2) FIXED(31),         /* THE ACCUMULATED WAIT
*                                           TIME, EXPRESSED IN 26
*                                           USEC TIMER UNITS.  FIRST
*                                           WORD IS OVERFLOW FROM
*                                           SECOND WORD.             */
*      2 SMCAENTY    CHAR(2),            /* THESE SWITCHES GOVERN
*                                           ENTRY CONDITIONS FOR
*                                           DEVICE SWITCHING/
*                                           ALLOCATION/OPENING
*                                           ROUTINES                 */
*       3 SMCAENDI    CHAR(1),           /* A COMMUNICATION FIELD    */
*        4 SMCARS14 BIT(1),              /* RESERVED                 */
*        4 SMCARS15 BIT(1),              /* RESERVED                 */
*        4 SMCARS16 BIT(1),              /* RESERVED                 */
*        4 SMCARS17 BIT(1),              /* RESERVED                 */
*        4 SMCARS18 BIT(1),              /* RESERVED                 */
*        4 SMCARS19 BIT(1),              /* RESERVED                 */
*        4 SMCARS20 BIT(1),              /* RESERVED                 */
*        4 SMCADSNF BIT(1),              /* IF ZERO, DATA SET (X OR
*                                           Y) WAS FOUND.  IF ONE,
*                                           DATA SET (X OR Y) WAS
*                                           NOT FOUND.               */
*       3 SMCAENOP    CHAR(1),           /* ENTRY CODE THAT INDICATES
*                                           WHICH LOAD OF SVC 83 HAS
*                                           PASSED CONTROL TO CURRENT
*                                           LOAD                     */
*      2 SMCAFOPT    CHAR(1),            /* SMF FOREGROUND OPTIONS   */
*       3 SMCAFOP1 BIT(1),               /* JOB ACCOUNTING (OPT=1)   */
*       3 SMCAFOP2 BIT(1),               /* STEP ACCOUNTING (OPT=2)  */
*       3 SMCAFEXT BIT(1),               /* USER EXITS WILL BE TAKEN
*                                           (EXT=YES)                */
*       3 SMCAFDSA BIT(1),               /* DATA SET ACCOUNTING
*                                           (DSV=2 OR 3)        19028*/
*       3 SMCAFVOL BIT(1),               /* VOLUME ACCOUNTING
*                                           (DSV=1 OR 3)        19028*/
*       3 SMCAFR01 BIT(1),               /* RESERVED           ICB441*/
*       3 SMCAFTDS BIT(1),               /* TYPE 17 RECORDS
*                                           MAINTAINED FOR TEMPORARY
*                                           DATA SETS (REC=2 OR 3)
*                                                               19028*/
*       3 SMCAFGN  BIT(1),               /* SMF FOREGROUND OPTIONS
*                                           BIT.  IF 0, ABOVE BITS
*                                           DESCRIBE BACKGROUND
*                                           OPTIONS.  IF 1, ABOVE
*                                           BITS DESCRIBE
*                                           FOREGROUND OPTIONS  20011*/
*      2 SMCAENAL    CHAR(1),            /* RESERVED                 */
*      2 SMCAWRTP    FIXED(31),          /* AN OPTIMUM BUFFER LOAD
*                                           DISPLACEMENT FIGURE.
*                                           WHEN THE BUFFER IS LOADED
*                                           TO OR BEYOND THIS POINT,
*                                           IT WILL BE WRITTEN TO THE
*                                           SMF DATA SET             */
*   /*                                                               */
*   /* XCTL REMOTE LIST USED BY SVC 83                               */
*   /*                                                               */
*      2 SMCAXCTL    PTR(31),            /* ADDRESS OF THE NAME OF
*                                           THE ROUTINE TO WHICH XCTL
*                                           IS TO PASS CONTROL       */
*      2 *           PTR(31),            /* DCB POINTER.  ALWAYS
*                                           ZERO ACCORDING TO THE
*                                           XCTL MACRO INSTRUCTION
*                                           FORMAT.                  */
*      2 SMCAXNAM    CHAR(8) BDY(WORD),  /* NAME OF THE ROUTINE TO
*                                           WHICH XCTL IS TO PASS
*                                           CONTROL                  */
*      2 SMCASWA     CHAR(1),            /* INDICATOR BITS           */
*       3 SMCASWAR BIT(1),               /* RESERVED            19028*/
*       3 SMCADSTR BIT(1),               /* DISASTER BIT.  BOTH DATA
*                                           SETS ARE FULL.  SMF IS
*                                           NOT RECORDING.      19028*/
*       3 SMCAOPFL BIT(1),               /* OPEN FAILURE ON SMF DATA
*                                           SET.  SMF IS NOT
*                                           RECORDING.          19028*/
*       3 SMCANADA BIT(1),               /* NEXT ALLOCATION MUST BE
*                                           FOR A DIRECT ACCESS
*                                           DEVICE              19028*/
*       3 SMCANAVL BIT(1),               /* ALLOCATION SEARCH IS BY
*                                           VOLUME SERIAL NUMBER
*                                                               19028*/
*       3 SMCAZEOD BIT(1),               /* SMF HALT END-OF-DAY IS
*                                           PROCESSING          19028*/
*       3 SMCADSSP BIT(1),               /* ENTRY TO THE WRITER IS
*                                           FOR A SPACE CHECK OF THE
*                                           DATA SET            19028*/
*       3 SMCADSSW BIT(1),               /* ENTRY TO THE WRITER IS
*                                           FOR DATA SET SWITCHING
*                                           ONLY                19028*/
*      2 SMCASWB     CHAR(1),            /* RESERVED                 */
*      2 SMCASWC     CHAR(1),            /* RESERVED                 */
*      2 SMCASWD     CHAR(1),            /* RESERVED                 */
*      2 SMCADSTM    CHAR(8) BDY(WORD),  /* START TIME AND DATE AT
*                                           WHICH NO DATA SET WAS
*                                           AVAILABLE TO RECORD ON.
*                                           APPEARS IN PACKED DECIMAL
*                                           IN THE FORM 00YYDDDF
*                                           WHERE 00 = ZEROS, YY =
*                                           LAST 2 DIGITS OF THE YEAR,
*                                           DDD = DAY OF THE YEAR AND
*                                           F IS A SIGN.             */
*      2 SMCADSCT    FIXED(31),          /* THE NUMBER OF SMF RECORDS
*                                           THAT HAVE BEEN OMITTED
*                                           FROM THE SMF DATA SET DUE
*                                           TO THE UNAVAILABILITY OF
*                                           A DATA SET TO RECORD ON  */
*      2 SMCAASCB    PTR(31),            /* CURRENT TASK ASCB ADDRESS
*                                           (OS/VS2)           MDC005*/
*       3 SMCAPOST    FIXED(15),         /* RESERVED (OS/VS1)  MDC003*/
*       3 SMCATJID    CHAR(2),           /* CURRENT TASK TJID
*                                           (OS/VS1)           MDC004*/
*      2 SMCARS21    FIXED(31),          /* RESERVED                 */
*      2 SMCASAVE    PTR(31),            /* USER EXIT ADDRESS SAVE
*                                           FIELD (OS/VS2)
*                                           (MDC300)        @ZA02385*/
*      2 SMCATEXP    FIXED(31),          /* TIME OF MOST RECENT
*                                           EXPIRATION OF A TEN-
*                                           MINUTE TIMER QUEUE
*                                           ELEMENT (TQE)      ICB310*/
*      2 SMCAPGIN    FIXED(31),          /* NUMBER OF PAGE-INS
*                                           PERFORMED (OS/VS1)
*                                           (MDC371)         @ZA07764*/
*       3 SMCADOMX    FIXED(31),         /* MANX DOM WTO ID (OS/VS2)
*                                           (MDC373)         @ZA07764*/
*      2 SMCAPGOT    FIXED(31),          /* NUMBER OF PAGE-OUTS
*                                           PERFORMED (OS/VS1)
*                                           (MDC372)         @ZA07764*/
*       3 SMCADOMY    FIXED(31),         /* MANY DOM WTO ID (OS/VS2)
*                                           (MDC374)         @ZA07764*/
*      2 SMCAPGRL    FIXED(31),          /* NUMBER OF PAGES RECLAIMED.
*                                           RECLAMATION RESULTS WHEN
*                                           A PAGE IS NEEDED TO
*                                           SATISFY A PAGE FAULT BUT
*                                           DOES NOT HAVE TO BE
*                                           RETREIVED FROM AUXILIARY
*                                           STORAGE BECAUSE IT IS
*                                           RESIDENT IN REAL MAIN
*                                           STORAGE AWAITING
*                                           PAGE-OUT.          ICB310*/
*      2 SMCARGNS    FIXED(31),          /* NUMBER OF REGIONS SWAPPED
*                                           IN AND OUT         ICB310*/
*      2 SMCASPIN    FIXED(31),          /* NUMBER OF SWAP PAGE-INS
*                                                              ICB310*/
*      2 SMCASPOT    FIXED(31),          /* NUMBER OF SWAP PAGE-OUTS
*                                                              ICB310*/
*      2 SMCARGNM    FIXED(31),          /* NUMBER OF REGIONS
*                                           MIGRATED           ICB310*/
*      2 SMCAPGM     FIXED(31),          /* NUMBER OF PAGES MIGRATED
*                                                              ICB310*/
*      2 SMCAU83     PTR(31),            /* ADDRESS OF SMF OUTPUT EXIT
*                                           (IEFU83) TAKEN WHEN
*                                           RECORDS ARE TO BE WRITTEN
*                                           TO AN SMF DATA SET ICB407*/
*      2 SMCAWTCB    PTR(31),            /* ADDRESS OF SMF WRITER'S
*                                           TCB - USED BY XMPOST
*                                           ERROR PROCESSOR (IEEMB827)
*                                           (OS/VS2)           MDC006*/
*      2 SMCASTCB    PTR(31);            /* ADDRESS OF SMF SVC
*                                           CURRENTLY WAITING FOR
*                                           WRITER - USED BY XMPOST
*                                           ERROR PROCESSOR (IEEMB827)
*                                           (OS/VS2)           MDC007*/
++SRC(IEEMB820) DISTLIB(AOS00) SYSLIB(SAMPLIB) .
         TITLE 'IEEMB820 - SMF INITIALIZATION ROUTER                 '
IEEMB820 CSECT ,                                                01.0001
* *********************************************************************
*
*
*    CHANGE LOG:
*      SKV  07/26/2008   CHANGES ARE NOTED BY *SKV WHERE POSSIBLE.
*            CHANGED THE EYECATCHER.
*            MADE VARIOUS CHANGES SO IT WOULD COMPILE CLEANLY.
*            REMOVED THE DSECT=YES AND LIST=YES FROM THE IEESMCA
*              MACRO CALL AS THIS MACRO DOES NOT HAVE SUCH PARAMETERS.
*            STARTED SETTING UP SOME "NORMAL" REGISTER EQUATES.
*
*
* *********************************************************************
@MAINENT DS    0H                                               01.0001
         USING *,@15                                            01.0001
         B     @PROLOG                                          01.0001
         DC    AL1(16)                                          01.0001
         DC    C'IEEMB820  73.079'                                 *SKV
         DC    C'&SYSDATE &SYSTIME '                               *SKV
         DC    C'TSV000XX'                                         *SKV
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01.0001
         BALR  @12,0                                            01.0001
@PSTART  DS    0H                                               01.0001
         USING @PSTART,@12                                      01.0001
         L     @00,@SIZDATD                                     01.0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                          01.0001
         USING @DATD,@11                                        01.0001
         ST    @13,@SA00001+4                                   01.0001
         LM    @00,@01,20(@13)                                  01.0001
         ST    @11,8(,@13)                                      01.0001
         LR    @13,@11                                          01.0001
         MVC   @PC00001(4),0(@01)                               01.0001
*PARMP=R1;                             /* GET PARMLIST POINTER       */
         LR    PARMP,R1                                         01.0025
*RFY R1 UNRSTD;                        /* RELEASE REGISTER CONTROL   */
*STAE='0'B;                            /* ASSUME STAE SET UP OK      */
         NI    STAE,B'01111111'                                 01.0027
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= INITPREP                                            */
*/*                                                                  */
*/*DESCRIPTIVE NAME= SMCA/STAE CREATION PROCESSING                   */
*/*                                                                  */
*/*FUNCTION=                                                         */
*/*  GENERALLY, THIS SEGMENT PERFORMS INITIALIZATION FUNCTIONS FOR   */
*/*  SMF INITIALIZATION.                                             */
*/*                                                                  */
*/*  INITPREP PEFFORMS THE FOLLOWING FUNCTIONS:                      */
*/*                                                                  */
*/*  .  SMCA INITIALIZATION                                          */
*/*     CORE FOR SMCA IS OBTAINED IN SQA - SUBPOOL 245, ALL          */
*/*     FIELDS IN SMCA ARE INITIALIZED TO ZERO AND                   */
*/*     THE CVT IS INITIALIZED TO POINT TO SMCA.                     */
*/*                                                                  */
*/*  .  STAE ENVIRONMENT INITIALIZATION                              */
*/*     A STAE PARAMETER AREA IS INITIALIZED, INDICATING             */
*/*     THAT STAE IS SET UP FOR INITIALIZATION. THE ESTAE MACRO      */
*/*     IS ISSUED TO CREATE A STAE ENVIRONMENT. IF A NON ZERO RETURN */
*/*     CODE IS RETURNED BY STAE, AN ERROR MESSAGE WILL BE ISSUED    */
*/*     AND SMF INITIALIZATION TERMINATED.                           */
*/*                                                                  */
*/*  OPERATION= NO SPECIAL ALGORITHMS ARE USED.                      */
*/*                                                                  */
*/*ENTRY= IN-LINE SEGMENT                                            */
*/*  PURPOSE= SEE FUNCTION                                           */
*/*  INPUT= CVT                                                      */
*/*                                                                  */
*/*EXITS=                                                            */
*/*  CONDITION= STAE SUCCESSFULLY CREATED                            */
*/*  OUTPUT=                                                         */
*/*    SMCA WITH ALL FIELDS ZEROED                                   */
*/*    CVT INITIALIZED TO POINT TO SMCA                              */
*/*    STAE ENVIRONMENT CREATED                                      */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/*  CONDITION= STAE NOT SUCCESSFULLY CREATED                        */
*/*  OUPUT=                                                          */
*/*    SMCA WITH ALL FIELDS INITIALIZED TO ZERO                      */
*/*    CVT POINTING TO SMCA                                          */
*/*    STAE BIT SET ON INDICATING STAE FAILURE                       */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/********************************************************************/
*RFY (R1) RSTD;                        /* RESERVE REGISTER           */
*R1 = LENGTH(SMCABASE);                /* GET LENGTH OF SMCA BLOCK   */
         LA    R1,SMCASIZE              * SET THE SIZE OF THE SMCA *SKV
*GEN(GETMAIN R,SP=245,LV=(R1));        /* GET CORE FOR SMCA          */
         GETMAIN R,SP=245,LV=(R1)
*R1->SMCABASE=R1->SMCABASE&&R1->SMCABASE;/* SET ALL OF SMCA TO ZEROS */
         USING SMCABASE,R1                                         *SKV
         XC    SMCABASE(SMCASIZE),SMCABASE                         *SKV
*R1->SMCAJWT=DEFLTJWT;                 /* SET DEFAULT JOB WAIT TIME  */
         MVC   SMCAJWT(4),DEFLTJWT                                 *SKV
*CVTSMCA=R1;                           /* POINT CVT TO SMCA          */
         L     @10,CVTPTR                                       02.0033
         USING CVTMAP,@10                                          *SKV
         ST    R1,CVTSMCA                                       02.0033
         DROP  R1                                                  *SKV
         DROP  @10                                                 *SKV
         USING SMCABASE,@10                                        *SKV
         LR    @10,R1                  COPY SMCABASE REG           *SKV
         TIME  BIN                     GET DATE AND TIME           *SKV
         ST    R0,SMCAITME             STORE THE TIME              *SKV
         ST    R1,SMCAIDTE             STORE THE DATE              *SKV
         DROP  @10                                                 *SKV
*STAEFOR='1'B;                         /* INDICATE STAE IS FOR SMF
*                                         INITIALIZATION             */
         OI    STAEFOR,B'10000000'                              02.0034
*STAELST(1:STAELEN)=DYMSTAE(1:STAELEN);     /* INIT STAE LIST FORM   */
         LH    @10,STAELEN                                      02.0035
         BCTR  @10,0                                            02.0035
         EX    @10,@SM01099                                     02.0035
*RFY (R2,R3) RSTD;                     /* GET REGISTER CONTROL       */
*R2=ADDR(IEEMB825);                    /* ADDR OF STAE EXIT ROUTINE  */
         L     R2,@CV00061                                      02.0037
*R3=ADDR(STAEPARM);                    /* PARAM LIST FOR STAE EXIT   */
         LA    R3,STAEPARM                                      02.0038
*GEN(ESTAE (R2),,PARAM=(R3),PURGE=NONE,ASYNCH=YES,MF=(E,STAELST));
         ESTAE (R2),,PARAM=(R3),PURGE=NONE,ASYNCH=YES,MF=(E,STAELST)
*RFY (R2,R3) UNRSTD;                   /* RELEASE REGISTER CONTROL   */
*RFY STAERTCD RSTD;                    /* GET REGISTER CONTROL       */
*IF STAERTCD¬=0 THEN                   /* STAE SET UP SUCCESSFULLY   */
         LTR   STAERTCD,STAERTCD                                02.0042
         BZ    @RF00042                                         02.0042
*  DO;                                 /* NO, ISSUE ERROR MESSAGE    */
*    STAE='1'B;                        /* INDICATE STAE FAILURE      */
         OI    STAE,B'10000000'                                 02.0044
*    R1=ADDR(I480I);                   /* GET ADDR OF ERROR MESSAGE  */
         L     R1,@CV00063                                      02.0045
*    GEN(WTO   MF=(E,(R1)));           /* ISSUE ERROR MESSAGE        */
         WTO   MF=(E,(R1))
*  END;                                                         02.0047
*RFY STAERTCD UNRSTD;                  /* RELEASE REGISTER CONTROL   */
@RF00042 DS    0H                                               02.0049
*SMCAFIRT='1'B;                        /* INDICATE INIT IN PROGRESS  */
         USING CVTMAP,@10                                          *SKV
         USING SMCABASE,@05                                        *SKV
         L     @10,CVTPTR                                       02.0049
         L     @05,CVTSMCA                                         *SKV
         OI    SMCAFIRT,B'00010000'                                *SKV
*RFY (R1) UNRSTD;                      /* RELEASE REGISTER CONTROL   */
*IF STAE='0'B THEN                     /* IS STAE SET UP SUCCESSFUL  */
         TM    STAE,B'10000000'                                 01.0051
         BNZ   @RF00051                                         01.0051
*  DO;                                 /* YES, CONTINUE WITH INIT    */
*    IF MSSMFPRM=0 THEN                /* PARMLIB NAME SPEC AT IPL   */
         L     @10,CVTMSER                                         *SKV
         ICM   @05,15,MSSMFPRM                                     *SKV
         BNZ   @RF00053                                         01.0053
*      PARMMEM='SMFPRM00';             /* NO, USE DEFALUT NAME       */
         MVC   PARMMEM(8),@CC01092                              01.0054
*    ELSE                              /* PARMLIB NAME SPEC AT IPL   */
*      DO;                                                      01.0055
         B     @RC00053                                         01.0055
         DROP  @05                                                 *SKV
         DROP  @10                                                 *SKV
@RF00053 DS    0H                                               01.0056
*        PARMMEM=SMFPRMXX;             /* GET MEMBER NAME FOR SMF    */
         USING CVTMAP,@10                                          *SKV
         L     @10,CVTPTR                                       01.0056
         L     @10,CVTMSER                                      01.0056
         L     @10,MSSMFPRM(,@10)                               01.0056
         DROP  @10                                                 *SKV
         USING SMCABASE,@10                                        *SKV
         MVC   PARMMEM(8),SMFPRMXX                                 *SKV
*        RFY (R2,R3) RSTD;             /* GET RGISTER CONTROL        */
*        R3=MSSMFPRM;                  /* ADDRESS OF PARM AREA       */
         LR    R3,@10                                           01.0058
*        R2=SMFPRMLN;                  /* LENGTH OF AREA             */
         LH    R2,SMFPRMLN                                      01.0059
         DROP  @10                                                 *SKV
*        GEN(FREEMAIN R,SP=245,A=(R3),LV=(R2)); /* FREE AREA         */
         FREEMAIN R,SP=245,A=(R3),LV=(R2)
*        RFY (R2,R3) UNRSTD;           /* RELEASE REGISTER CONTROL   */
*      END;                                                     01.0062
*    CALL IEEMB821(PARMMEM,JWTMIN,ADDR(SMCABASE)); /* PROCESS PARMS  */
@RC00053 LA    @10,PARMMEM                                      01.0063
         ST    @10,@AL00001                                     01.0063
         LA    @10,JWTMIN                                       01.0063
         ST    @10,@AL00001+4                                   01.0063
         L     @10,CVTPTR                                       01.0063
         USING CVTMAP,@10                                          *SKV
         LA    @10,CVTSMCA                                         *SKV
         ST    @10,@AL00001+8                                   01.0063
         DROP  @10                                                 *SKV
         L     @15,@CV01093                                     01.0063
         LA    @01,@AL00001                                     01.0063
         BALR  @14,@15                                          01.0063
*    IF SMCAMAN='1'B THEN              /* RECORDING TO BE PERFORMED  */
         USING CVTMAP,@10                                          *SKV
         USING SMCABASE,@05                                        *SKV
         L     @10,CVTPTR                                       01.0064
         L     @05,CVTSMCA                                         *SKV
         TM    SMCAMAN,B'01000000'                                 *SKV
         BNO   @RF00064                                         01.0064
*      DO;                             /* YES,PREPARE FOR OPENS      */
*        CALL IEEMB822(ADDR(SMCABASE),WTRTCBPT,WTRECBPT);       01.0066
         LA    @10,CVTSMCA                                      01.0066
         ST    @10,@AL00001                                     01.0066
         ST    PARMP,@AL00001+4                                 01.0066
         LA    @10,WTRECBPT(,PARMP)                             01.0066
         ST    @10,@AL00001+8                                   01.0066
         L     @15,@CV01094                                     01.0066
         LA    @01,@AL00001                                     01.0066
         BALR  @14,@15                                          01.0066
         DROP  @10                                                 *SKV
         DROP  @05                                                 *SKV
*        IF SMCAMAN='1'B THEN          /* ANY ERRORS IN OPEN INIT    */
         USING CVTMAP,@10                                          *SKV
         L     @10,CVTPTR                                       01.0067
         L     @10,CVTSMCA                                         *SKV
         DROP  @10                                                 *SKV
         USING SMCABASE,@10                                        *SKV
         TM    SMCAMAN,B'01000000'                                 *SKV
         BNO   @RF00067                                         01.0067
*          DO;                         /* NO, WRITE SMF IPL RECORDS  */
*            SMCAFIRT='0'B;            /* INIT CAN RECORD NOW        */
         NI    SMCAFIRT,B'11101111'                                *SKV
*            CALL IEEMB823(JWTMIN,CVTPTR);                      01.0070
         LA    @10,JWTMIN                                       01.0070
         ST    @10,@AL00001                                     01.0070
         LA    @10,CVTPTR                                       01.0070
         ST    @10,@AL00001+4                                   01.0070
         L     @15,@CV01095                                     01.0070
         LA    @01,@AL00001                                     01.0070
         BALR  @14,@15                                          01.0070
*          END;                                                 01.0071
*      END;                                                     01.0072
@RF00067 DS    0H                                               01.0073
*  END;                                                         01.0073
@RF00064 DS    0H                                               01.0074
*IF SMCAMAN='0'B THEN                  /* RECORDING TO BE PERFORMED  */
@RF00051 L     @10,CVTPTR                                       01.0074
         USING CVTMAP,@10                                          *SKV
         L     @10,CVTSMCA                                         *SKV
         DROP  @10                                                 *SKV
         USING SMCABASE,@10                                        *SKV
         TM    SMCAMAN,B'01000000'                                 *SKV
         BNZ   @RF00074                                         01.0074
         DROP  @10                                                 *SKV
*  DO;                                 /* NO, WRITE ¬RECORDING MSG   */
*    RFY (R1) RSTD;                    /* GET REGISTER CONTROL       */
*    R1=ADDR(I351I);                   /* ADDR OF MESSAGE            */
         L     R1,@CV00062                                      01.0077
*    GEN(WTO   MF=(E,(R1)));           /* WRITE MESSAGE              */
         WTO   MF=(E,(R1))
*    RFY (R1) UNRSTD;                  /* RELEASE REGISTER CONTROL   */
*  END;                                                         01.0080
*SMCAFIRT='0'B;                        /* INIT COMPLETE PROCESSING   */
@RF00074 L     @10,CVTPTR                                       01.0081
         USING CVTMAP,@10                                          *SKV
         L     @10,CVTSMCA                                      01.0081
         DROP  @10                                                 *SKV
         USING SMCABASE,@10                                        *SKV
         NI    SMCAFIRT,B'11101111'                                *SKV
         DROP  @10                                                 *SKV
*RETURN;                                                        01.0082
@EL00001 L     @13,4(,@13)                                      01.0082
@EF00001 L     @00,@SIZDATD                                     01.0082
         LR    @01,@11                                          01.0082
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01.0082
         BR    @14                                              01.0082
*END IEEMB820                                                   01.0083
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (B820SPEC)                                        *
*/*%INCLUDE SYSLIB  (B820DATA)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEEBASEA)                                        *
*/*%INCLUDE SYSLIB  (IEESMCA )                                        *
*/*%INCLUDE SYSLIB  (INITPREP)                                        *
*/*%INCLUDE SYSLIB  (INITPRES)                                        *
*;                                                              01.0083
         B     @EL00001                                         01.0083
@DATA    DS    0H
@SM01099 MVC   STAELST(0),DYMSTAE
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@AL00001 DS    3A
IEEMB820 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
JWTMIN   DS    F
DMYPARM  DS    A
PARMMEM  DS    CL8
STAEPARM DS    CL124
         ORG   STAEPARM
STAESWCS DS    BL1
         ORG   STAESWCS
STAEFOR  DS    BL1
@NM00003 EQU   STAESWCS+0
         ORG   STAEPARM+1
@NM00004 DS    CL3
STAEWKAR DS    CL120
         ORG   STAEPARM+124
STAE     DS    BL1
IEEMB820 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00061 DC    V(IEEMB825)
@CV00062 DC    V(IEE351I)
@CV00063 DC    V(IEE480I)
@CV01093 DC    V(IEEMB821)
@CV01094 DC    V(IEEMB822)
@CV01095 DC    V(IEEMB823)
         DS    0D
@CC01092 DC    C'SMFPRM00'
DEFLTJWT DC    X'7FFFFFFF'
@DATD    DSECT
STAELST  ESTAE ,CT,PURGE=NONE,ASYNCH=YES,RECORD=YES,MF=L
IEEMB820 CSECT
DYMSTAE  ESTAE ,CT,PURGE=NONE,ASYNCH=YES,RECORD=YES,MF=L
STAELEN  DC    AL2(*-DYMSTAE)          LENTH OF STAE LIST FORM
@DATD    DSECT
@ENDDATD EQU   *
IEEMB820 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PARMP    EQU   @04
R0       EQU   @00                                                 *SKV
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04                                                 *SKV
R5       EQU   @05                                                 *SKV
R6       EQU   @06                                                 *SKV
R7       EQU   @07                                                 *SKV
R8       EQU   @08                                                 *SKV
R9       EQU   @09                                                 *SKV
R10      EQU   @10                                                 *SKV
R11      EQU   @11                                                 *SKV
R12      EQU   @12                                                 *SKV
R13      EQU   @13                                                 *SKV
R14      EQU   @14                                                 *SKV
R15      EQU   @15                                                 *SKV
STAERTCD EQU   @15
*CVTPTR   EQU   16                                                 *SKV
PARMLIST EQU   0
WTRTCBPT EQU   PARMLIST
WTRECBPT EQU   PARMLIST+4
@NM00001 EQU   0
SMFPRMLN EQU   @NM00001
SMFPRMXX EQU   @NM00001+4
I351I    EQU   0
I480I    EQU   0
*   EQUATES BYPASSED AS WE WILL USE THE APPROPRIATE CONTROL BLOCK  *SKV
*   MAPPING MACROS.                                                *SKV
*   FOR THE CVT MAPPING MACTO                                      *SKV
BASE     EQU   0
@NM00007 EQU   BASE+13
BALGSTAT EQU   BASE+24
BALOG    EQU   BALGSTAT+4
BASFL    EQU   BASE+36
BARSW    EQU   BASFL
MSLOGST  EQU   BASE+46
BASPBYTE EQU   BASE+47
BAMONITR EQU   BASE+56
MSSMFPRM EQU   BASE+96
@NM00031 EQU   BASE+104
MSLGCLOZ EQU   BASE+108
MSCLOSSW EQU   MSLGCLOZ
MSLGWLOG EQU   BASE+112
MSWLOGSW EQU   MSLGWLOG
MSLGWTR  EQU   BASE+116
MSWTRSW  EQU   MSLGWTR
MSLGSTRT EQU   BASE+120
MSSTRTSW EQU   MSLGSTRT
MS1BASEX EQU   BASE+136
BASES01  EQU   0
MSNTAL   EQU   BASES01
MSSSB    EQU   BASES01+1
MSBTN    EQU   MSSSB
MSPFG    EQU   BASES01+2
MSECBFL  EQU   BASES01+3
MSTUS    EQU   BASES01+4
MSSSA    EQU   MSTUS
MSINLSW  EQU   MSSSA
MSREOF   EQU   MSSSA
MSNWP    EQU   MSSSA
MSFHF    EQU   BASES01+5
DYMPARM  EQU   0
MSSPARE  EQU   BASES01+52
MSABL    EQU   BASES01+48
MSUCBAL  EQU   BASES01+44
MSUCBPR  EQU   BASES01+40
MSBOBECB EQU   BASES01+36
MSSJQ    EQU   BASES01+32
MSECB    EQU   BASES01+28
MSPBP    EQU   BASES01+24
MSERM    EQU   BASES01+22
MSPASS   EQU   BASES01+14
MSVRB    EQU   BASES01+6
MSQHR    EQU   MSFHF
@NM00047 EQU   MSFHF
MSPSDT   EQU   MSFHF
MSREPLYB EQU   MSFHF
MSFAX    EQU   MSFHF
MSTTT    EQU   MSFHF
MSCSD    EQU   MSFHF
MSNMF    EQU   MSFHF
MSJNF    EQU   MSSSA
MSYOUT   EQU   MSNWP
MSNRP    EQU   MSSSA
MSSRDR   EQU   MSREOF
MSWRLOG  EQU   MSSSA
MSNUPSW  EQU   MSSSA
MSWRPEN  EQU   MSSSA
MSSSSIPL EQU   MSINLSW
MSSUM    EQU   MSECBFL
MSMCR    EQU   MSECBFL
MSYSOUT  EQU   MSECBFL
MSYSIN   EQU   MSECBFL
MSATTN   EQU   MSECBFL
MSWTL    EQU   MSECBFL
MSWTO    EQU   MSECBFL
MSEXT    EQU   MSECBFL
MSCCS    EQU   MSPFG
MSBSP    EQU   MSPFG
MSSYT    EQU   MSPFG
MSSYN    EQU   MSPFG
MSICR    EQU   MSPFG
MSCMC    EQU   MSPFG
MSPNB    EQU   MSPFG
MSDATE   EQU   MSPFG
@NM00046 EQU   MSBTN
MSTN     EQU   MSBTN
@NM00045 EQU   MSBTN
@NM00044 EQU   MSBTN
MSSO     EQU   MSBTN
MSROLFLG EQU   MSBTN
MSCANFLG EQU   MSBTN
MSCONFLG EQU   MSBTN
MSPNIP   EQU   MSNTAL
MSQNIP   EQU   MSNTAL
MSCURE34 EQU   MSNTAL
@NM00043 EQU   MSNTAL
@NM00042 EQU   MSNTAL
@NM00041 EQU   MSNTAL
@NM00040 EQU   MSNTAL
MSNIP    EQU   MSNTAL
@NM00039 EQU   MS1BASEX+40
@NM00038 EQU   MS1BASEX+20
@NM00037 EQU   MS1BASEX
@NM00036 EQU   BASE+128
MSLGJSCB EQU   BASE+124
@NM00035 EQU   MSSTRTSW
MSSTRTP  EQU   MSSTRTSW
MSSTRTW  EQU   MSSTRTSW
@NM00034 EQU   MSWTRSW
MSWTRP   EQU   MSWTRSW
MSWTRW   EQU   MSWTRSW
@NM00033 EQU   MSWLOGSW
MSWLOGP  EQU   MSWLOGSW
MSWLOGW  EQU   MSWLOGSW
@NM00032 EQU   MSCLOSSW
MSCLOSP  EQU   MSCLOSSW
MSCLOSW  EQU   MSCLOSSW
MSLOGLMT EQU   @NM00031+1
MSLOGCLS EQU   @NM00031
BAASCB   EQU   BASE+100
MSCOMMND EQU   BASE+92
BASP12   EQU   BASE+90
BASTCNT  EQU   BASE+88
BASESCT  EQU   BASE+86
BAJNCNT  EQU   BASE+84
BASUBECB EQU   BASE+80
BALOGCOM EQU   BASE+76
BADACNT  EQU   BASE+74
BATACNT  EQU   BASE+72
BAJBNR   EQU   BASE+64
BASP11   EQU   BASE+62
BALCCNT  EQU   BASE+61
BADUMPID EQU   BASE+60
BABCMAX  EQU   BASE+58
BAMONTR2 EQU   BASE+57
@NM00030 EQU   BAMONITR
BAMACTVE EQU   BAMONITR
@NM00029 EQU   BAMONITR
@NM00028 EQU   BAMONITR
@NM00027 EQU   BAMONITR
@NM00026 EQU   BAMONITR
BASPACE  EQU   BAMONITR
BADSN    EQU   BAMONITR
BADSO    EQU   BASE+52
BALOGECB EQU   BASE+48
@NM00025 EQU   BASPBYTE
@NM00024 EQU   BASPBYTE
@NM00023 EQU   BASPBYTE
@NM00022 EQU   BASPBYTE
@NM00021 EQU   BASPBYTE
@NM00020 EQU   BASPBYTE
@NM00019 EQU   BASPBYTE
BAMSSTAR EQU   BASPBYTE
@NM00018 EQU   MSLOGST
@NM00017 EQU   MSLOGST
MSLOGSTA EQU   MSLOGST
MSLOGIPL EQU   MSLOGST
MSLOGDAR EQU   MSLOGST
MSLOGCOM EQU   MSLOGST
MSLOGTHD EQU   MSLOGST
MSLOGENQ EQU   MSLOGST
BAMIPAR2 EQU   BASE+44
BAMINPAR EQU   BASE+42
BAPKES   EQU   BASE+40
BAICTR   EQU   BASE+38
@NM00016 EQU   BASE+37
BADSET   EQU   BARSW
BANOSET  EQU   BARSW
BAMIDNT  EQU   BARSW
BAHR     EQU   BARSW
BAVU     EQU   BARSW
BAINTSET EQU   BARSW
MSTODWTO EQU   BARSW
BAIN     EQU   BARSW
BACV     EQU   BASE+32
@NM00015 EQU   BALOG
@NM00014 EQU   BALOG
@NM00013 EQU   BALOG
@NM00012 EQU   BALOG
@NM00011 EQU   BALOG
@NM00010 EQU   BALOG
@NM00009 EQU   BALOG
BALOGINT EQU   BALOG
MSLOGSVC EQU   BALGSTAT
BAPRC    EQU   BASE+20
BAQ      EQU   BASE+16
BAIPLCC  EQU   @NM00007+2
@NM00008 EQU   @NM00007
BAIPL    EQU   BASE+12
BALAD    EQU   BASE+8
BATRM    EQU   BASE+4
BACHN    EQU   BASE
*@NM00006 EQU   CVTFIX+248                                         *SKV
*@NM00005 EQU   CVTFIX                                             *SKV
@NM00002 EQU   @NM00001+2
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         CVT   DSECT=YES,LIST=YES
         IEESMCA                                                   *SKV
         END   IEEMB820
++JCLIN .
//TSM0021 JOB 'TSV0024',CLASS=A
//ASMSTEP   EXEC  ASMS,OBJ=AOS00,MOD=IEEMB820,CLASS='*'
//SYSLIB    DD  DSN=SYS1.MODGEN,DISP=SHR
//          DD  DSN=SYS1.AMACLIB,DISP=SHR
//SYSIN     DD  DSN=SYS1.SAMPLIB(IEEMB820),DISP=SHR
$$
/*
//SMPCNTL  DD *
  RECEIVE S(TSV0024) .
/*
//APP    EXEC SMP
//SMPCNTL  DD *
  APPLY S(TSV0024)
       ASSEM
       CHECK .
  APPLY S(TSV0024)
       ASSEM .
/*
