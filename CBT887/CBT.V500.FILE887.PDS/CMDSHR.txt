//SCOTTC  JOB 'CMDSHR ',CLASS=A,MSGCLASS=X,NOTIFY=SCOTT,
//         MSGLEVEL=(1,1),REGION=2048K,
//         USER=SCOTT,PASSWORD=SCOTTY
//STEP1   EXEC  ASMFCL,
//             PARM.LKED='LIST,LET,NCAL,MAP,AC=1'
//ASM.SYSLIB DD  DSN=SYS1.MACLIB,DISP=SHR
//        DD  DSN=SYS1.AMODGEN,DISP=SHR
//ASM.SYSIN  DD  *
CMDSHR   START 0
         TITLE 'CMDSHR -                                             '
         SPACE 3
* ********************************************************************
*
*     NAME:    CMDSHR
*
*     PURPOSE: ALLOWS ONE SYSTEM TO SEND COMMANDS TO ANOTHER WHERE
*              THEY ARE EXECUTED.
*
*     AUTHOR:  S. VETTER  15 MAY 2011
*              EMAIL: SVETTER@AMERITECH.NET
*              PHONE: YOUR KIDDING, RIGHT?
*
*     ASSEM REQ:  NORMAL
*
*     ASSEM SYSLIB:  MACLIB, AMODGEN
*
*     LINK REQ:   NORMAL AND AC=1
*
*     INPUT:   A) CONFIGURATION DEFINITION FROM JCL CSIN DD.
*              B) FROM CONSOLE INPUT.
*
*     OUTPUT:  A) LOG DATASET.
*              B) OUTPUT ON THE ORIGINATING CONSOLE.
*              C) COMMAND ON THE DESTINATION SYSTEM AND THE RESPONSE
*                 GIVEN ON THE MASTER CONSOLE.
*
*     MESSAGE PREFIX:  CMSH___
*              ANY MESSAHES ON THE CONSOLE WILL BE PREFIXED WITH THIS.
*
*     COMMAND PREFIX:  NONE
*              RESPONSES ON CONSOLE
*
*     I/O:     THE SHARED FILE
*
*     MACROS:  STIMER, WTO, EXTRACT, QEDIT, DCB, OPEN, CLOSE, TIME,
*              MODESET, ABEND (AS MUCH AS I HATE USING IT), MGCR,
*              AND TESTAUTH.
*
*     DSECTS:  CVT, IEESMCA, CSR (INTERNAL)
*
*     CONTROL BLOCKS:  TIOT, CSCL(IEZCOM), CIB (IEZCIB)
*
*     INTERNAL TABLE:  A MAX OF 12 ENTRIES.
*                        MORE?  WHAT A MAS YOU GOT!
*
*     RETURN CODES: 0 - NORMAL
*
*     ABENDS:       (WE DO TRY TO AVOID THEM)
*                   001 - WE FOUND THAT THE RECORD IS NOT OUT OWN
*                         - MARK WHEN WE STATE WE ARE ACTIVE
*                   002 - WE FOUND THAT THE RECORD IS NOT OUT OWN
*                         - MARK WHEN WE STATE WE ARE IN-ACTIVE
*                   050 - UNKNOWN FILE ERROR PROCESS (SYNAD) FOR THE
*                         DS FILE.
*                   500 - USER ENTERED COMMAND TO TERMINATE WITH DUMP
*
*                   991 - ISSUED WHEN WE FIND WE ARE NOT RUNNING
*                         AS AN STC
*                   992 - ISSUED WHEN WE FIND THAT A STOP OR MODIFY
*                         WAS NOT ISSUED
*
*     ERROR MSGS:   YES THERE ARE.  SEE CODE BELOW.
*                     (I'M TOO LAZY TO LIST THEM HERE)
*
*     CREDITS:      YOU THINK THIS IS A MOVIE?
*
*     LICENSE:      THIS IS FREEWARE (RELATIVELY)
*                   YOU USE AT YOUR OWN RISK.
*                   (YOUR SYSTEM BREAKS BECAUSE OF THIS PGM - STBY)
*                   IF YOU MODIFY THIS, PLEASE LET ME KNOW WHAT YOU DID
*                   HOWEVER, YOU CAN'T CLAIM THIS AS YOUR OWN.
*                   (I.O.W., YOU LEAVE MY NAME INTACT ABOVE)
*
*     NOTES:        IF A COMMAND IS FOLLOWED BY X'00'S JES2 COMMANDS
*                   WILL WORK BUT MVS COMMANDS WILL NOT.  FOLLOW THE
*                   MVS COMMAND WITH X'40'S AND BOTH WILL WORK.
*
*     CHANGE LOG:
*           SKV  06/06/2011   ADDED SUPPORT FOR SD COMMAND
*                             - SHOW DEFINED
*           SKV  12/22/2011   ADDED SUPPORT FOR HELP COMMAND.
*                             - SHOW COMMANDS THAT ARE AVAILABLE.
*           SKV  04/22/2012   ADDED CODE TO PERIODICALLY SET THE FILE
*                             TO SHOW THAT THE CMDSHR IS STILL ACTIVE.
*                             INCREASED RECORD SIZE OF CSDS TO 100
*                             CHARACTERS.
*                             ENHANCED THE SHOW ACTIVE COMMAND.
*                             ADDED MORE DOCUMENTATION.
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  CONTROL CARDS:
*    COLUMN 1 - A */# (FOR YOU LINUX FOLKS) DESIGNATE A COMMENT LINE.
*
*    POLLTIME=MMSSTH   MINUTES, SECONDS, THOUSANDS
*    SID=1234X         SYSTEM SMF ID, COMMAND CHARACTER (SHORTHAND)
*
*   * ANYTHING AFTER THE KEYWORD / VALUE IS IGNORED (COMMENT)
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  COMMANDS:
*    ENTERED THROUGH THE MODIFY COMMAND:
*
*      EXIT -   END THE PROGRAM (AN ALTERNATIVE OF THE PCMDSHR COMMAND)
*      H/HEMP/? SHOW COMMANDS AVAILABLE.
*      SA   -   SHOW ACTIVE SYSTEMS THAT CMDSHR KNOWS ABOUT
*      SD   -   SHOW DEFINED SYSTEMS THAT CMDSHR KNOWS ABOUT
*      DUMP -   TERMINATE THIS PROGRAM WITH A USER 500 ABEND WITH DUMP
*      RO   -   ROUTE COMMAND, WHICH IS THE PURPOSE OF THIS PROGRAM.
*               FORM: RO DEST CMD
*                   DEST - DESTINATION SYSTEM WHO THE COMMAND IS FOR.
*                   CMD  - THE COMMAND TO BE ISSUED ON THE DESTINATION
*               EX:   RO MVS1 $DA
*                     ISSUES THE $DA COMMAND ON MVS1
*
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  DATASETS:
*    DDNAME   -  COMMENTS
*    --------    ---------------------------------------------
*    CSLOG    -  MAYBE SYSOUT=*  (PS, FB, 121, 121)
*              ** MUST BE UNIQUE FOR EACH INSTANCE **
*    SYSUDUMP    MAYBE SYSOUT=*
*    CSDS     -  DISK BASED ONLY (PS, DA, 100, 100)
*              ** MUST BE ON A SHARRED DISK  **
*    CSIN     -  PDS  OR  DD *   (PS, FB, 80, 80 (OR MULTIPLE))
*
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  OPERATION:
*
*     ***  THIS IS A STARTED TASK ONLY!  SO YOU MUST ISSUE THE
*
*     ***  TO START:
*     ***  COMMAND:  S CMDSHR
*
*     ***  TO SHUTDOWN:
*     ***     ISSUE THE COMMAND: P CMDSHR
*     ***     ISSUE THE COMMAND: F CMDSHR,EXIT
*
*     ***  TO ISSUE A COMMAND:
*     ***     ISSUE A MODIFY COMMAND: F CMDSHR,<YOUR COMMAND>
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  EXECUTION JCL:
*
*
*      //CMDSHR   PROC  PRM='WARM'
*      //*
*      //*   NAME:  CMDSHR
*      //*   PURPOSE:  TO SHARE COMMANDS FROM ONE SYSTEM TO ANOTHER
*      //*   NOTE:     PARM MAY BE EITHER COLD OR WARM.
*      //*
*      //*
*      //WAITTING EXEC  PGM=CMDSHR,PARM='&PRM'
*      //STEPLIB   DD  DISP=SHR,DSN=SYSS.LINKLIB
*      //CSLOG     DD  DISP=SHR,DSN=SYSS.CMDSHR.MVSR.LOG
*      //SYSUDUMP  DD  DISP=SHR,DSN=SYSS.CMDSHR.DUMP
*      //CSDS      DD  DISP=SHR,DSN=SYSS.CMDSHR.DS
*      //CSIN      DD  DISP=SHR,DSN=SYS1.PARMLIB(CMDSHR)
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  SAMPLE PARAMETERS:
*    *
*    *   CMDSHR
*    *
*    POLLTIME=000400    FOUR SECONDS
*    SID=MVS1!    SYSTEM ID OF MVS1  COMMAND CHAR OF: !
*    SID=MVS2@
*    SID=MVS3+
*    SID=MVSR-
*
*
* *********************************************************************
         EJECT
* *********************************************************************
*
*  FAQ:  (FREQUENTLY ASKED QUESTIONS:
*
*   1)  WHAT IS THE PURPOSE OF THE COMMAND CHARACTER?
*       FOR FUTURE EXPANSION.
*
*   2)  WHY HAVE CMDSHR?
*       I GOT TIRED OF HAVING MULTIPLE CONSOLES FOR EACH SYSTEM AND
*       SWITCHING BETWEEN THEM.
*       OK, I HAD TO LEARN HOW TO USE BDAM FILES. ARE YOU OK WITH THAT?
*
*   3)  WHAT'S IN THE FUTURE FOR THIS PROGRAM?
*       (I KNOW YOU HAVE SOMETHING ELSE IN MIND)
*       I DO!  YOU WILL JUST HAVE TO WAIT AND SEE!
*
*
*
*
*
* *********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         USING CSR,R7               AND MAP IT
         EJECT
         USING *,R15
         B     AROUNDID
         DC    CL8'CMDSHR  '
         DC    C'.'
         DC    CL8'&SYSDATE'
         DC    C'.'
         DC    CL8'&SYSTIME'
         DC    C'.'
         DC    CL8'R1M0V0  '
         DC    C'.'
AROUNDID DS    0H
         DROP  R15
         STM   R14,R12,12(R13)      SAVE CALLERS REGISTERS
         BALR  R3,0                 COPY BASE REGISTER
         USING *,R3,R4
START    L     R4,BASEADDR          LOAD SECOND BASE ADDRESS
         ST    R13,SAVEAREA+4       SAVE CALLERS SAP
         LR    R2,R13               COPY CALLERS SAP
         LA    R13,SAVEAREA         POINT TO OUR SAVE AREA
         ST    R13,8(R13)           SAVE OUR SAP IN PREV SA
         LR    R5,R1                SAVE PARM POINTER
         B     BYP00                GO AROUND
BASEADDR DC    A(START+4096)        FOR ADDITIONAL BASE REGISTER
BYP00    DS    0H
         OPEN  (CSLOG,(OUTPUT))     OPEN THE LOGFILE
         LTR   R15,R15              DID OPEN WORK?
         BZ    BYP01                 YES - CONTINUE
OPENFAL1 WTO   'CMSH001E: CSLOG OPEN FAILURE. '
         B     RETURN               GO END PROGRAM
BYP01    DS    0H
         TM    CSLOG+48,X'10'       ANOTHER OPEN CHECK
         BNO   OPENFAL1              YES - IT FAILED - GO ISSUE MSG
         BAL   R8,PROCPARM          GO PROCESS THE PARM
         L     R14,CVTPTR
         USING CVT,R14
         L     R15,CVTSMCA
         USING SMCABASE,R15
         MVC   SYSID+26(4),SMCASID
         MVC   OURSYSID(4),SMCASID
*
SYSID    WTO   'RUNNING ON SMFID: ****  '
         SPACE 3
*
         BAL   R8,INPUT             PROCESS INPUT
         BAL   R8,DOCOLDST          GO DO COLD START IF NEEDED
*
         OPEN  (CSDS,UPDAT)         OPEN THE DS FILE
         LTR   R15,R15              DID OPEN WORK?
         BZ    BYP03                 YES - CONTINUE
OPENFAL3 WTO   'CMSH002E: CSDS OPEN FAILURE. '
         B     RETURN               GO END PROGRAM
BYP03    DS    0H
         TM    CSDS+48,X'10'        ANOTHER OPEN CHECK
         BNO   OPENFAL3              YES - IT FAILED - GO ISSUE MSG
         SPACE 3
         BAL   R8,FINDOURS          GO FIND OUR SID IN THE FILE
         SPACE 1
         USING TIOT1,R10            ESTAB. ADDRESSABILITY FOR TIOT
*
         EXTRACT TIOTADDR,FIELDS=(TIOT)  GET PTR TO TIOT AREA
         L     R10,TIOTADDR         LOAD TIOT ADDRESS
         MVC   PROCNAME(8),TIOCNJOB    STORE JOB NAME
         MVC   STEPNAME(8),TIOCSTEP    STORE STEP NAME
         MVC   WTOMSG1+24(8),TIOCNJOB  STORE JOB NAME
         MVC   WTOMSG1+44(8),TIOCSTEP  STORE STEP NAME
WTOMSG1  WTO   ' JOB/PROC NAME: 12345678  STEPNAME: 12345678   '
         SPACE 3
         USING CSCL,R10             ESTAB. ADDRESSABILITY FOR CSCL
         USING CIB,R11              ESTAB. ADDRESSABILITY FOR CIB
         EXTRACT CSCLADDR,FIELDS=COMM  GET ADDRESS OF CSCL
         L     R10,CSCLADDR         LOAD ADDR OF CSCL
         CLC   COMCIBPT,=XL4'00000000' IF CIB PRESENT?
         BNE   NEXT1                    YES - GO CONTINUE
         WTO   'CMSH003E *** NOT AN STC.  TERMINATING.'
         ABEND 991,DUMP                 NO -  TERMINATE
NEXT1    DS    0H
         SPACE 3
*
         BAL   R8,MARKACT           GO MARK THIS SYSTEM ACTIVE IN DS
*
         MVC   CSLB1+1(31),=C' *** CMDSHR COMMAND JOURNAL ***'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'          PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1     AND CLEAR THE REST
*
         BAL   R8,DELPCIB          GO DELETE PROCESSED CIB
         L     R10,CSCLADDR         LOAD ADDR OF CSCL
         LA    R11,COMCIBPT         LOAD ADDR OF PTR OF CIB CHAIN
         QEDIT ORIGIN=(R11),CIBCTR=1 SET CIB CHAIN COUNT
         WTO   'CMSH004I READY FOR COMMANDS.'
PROCESS  DS    0H
         BAL   R8,CHKCC             GO CHECK IF OTHER SYS HAS COMPLETED
         BAL   R8,POLL4CMD          GO CHECK IF OTHER SYS HAS CMDS 4 US
         STIMER WAIT,DINTVL=WAITTIME   WAIT A BIT
         SPACE 3
         L     R10,CSCLADDR         LOAD ADDR OF CSCL
         L     R11,COMECBPT         LOAD ADDR OF PTR OF CIB CHAIN
         TM    0(R11),X'40'         TEST IF ECB POSTED
         BNO   PROCESS               YES -  GO BACK AND WAIT
*
*   RECEIVED A STOP OR MODIFY COMMAND.  SO FIGURE OUT WHAT TO DO.
*
CMDCHECK EQU   *
         L     R10,CSCLADDR         LOAD ADDR OF CSCL
         L     R11,COMCIBPT         LOAD ADDR OF CIB
         CLI   CIBVERB,CIBMODFY     A MODIFY COMMAND?
         BE    MODIFY                YES - THEN GO PROCESS
         CLI   CIBVERB,CIBSTOP      A STOP COMMAND?
         BE    STOP                  YES - GO PROCESS
         WTO   'CMSH005E: ***  NOT STOP OR MODIFY CMD. TERMINATING. '
         ABEND 992,DUMP             NOT THAT EITHER - TERMINATE
*
*   RECEIVED A MODIFY COMMAND.
*
MODIFY   DS    0H
         LH    R15,CIBDATLN         LOAD LEN OF MOFIFY DATA
         BCTR  R15,0                DECR DATA LEN FOR EX INSTRUCTION
         LA    R12,CIBDATA          LOAD ADDR OF MODIFY DATA
         MVI   MDFYDATA,X'40'       PREP TO CLEAR COMMAND AREA
         MVC   MDFYDATA+1(79),MDFYDATA  AND CLEAR THE REST OF IT
         EX    R15,MVCBDATA         COPY COMMAND TO USER AREA
*        MVC   RECMSG+28(30),=33X'40'  CLEAR VARIABLE AREA IN MSG
         C     R15,=F'29'           IS INPUT LENGTH > 29 CHARS?
         BL    DOMSGL                NO - JUST SET CMD LEN TO 30
         L     R15,=F'30'           SET MAX MSG LENGTH TO 30
DOMSGL   DS    0H
DOMSG    DS    0H
         MVC   CSLB1+26(09),=C'RECIEVED='
         MVC   CSLB1+36(30),MDFYDATA
         MVC   MSGIDSA(8),=CL8'CMSH006I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
*
         CLC   MDFYDATA(4),=C'EXIT' DID USER ASK TO EXIT?
         BE    STOP                  YES - THEN DO IT
         CLC   MDFYDATA(4),=C'EXIT' DID USER ASK TO EXIT?
         BE    STOP                  YES - THEN DO IT
***  IS THIS THE ROUTE (RO) COMMAND?
         CLC   MDFYDATA(2),=C'RO'    DID THE USER ISSUE A ROUTE CMD?
         BNE   DMBYP1                 NO - TRY NEXT COMMAND
         BAL   R8,PROCRO             GO PROCESS ROUTE COMMAND
         B     DMBYPX                GO RESET AND WAIT FOR NEXT CMD
DMBYP1   DS    0H
***  IS THE A SHOW ACTIVE (SA) COMMAND?
         CLC   MDFYDATA(2),=C'SA'    DID THE USER ISSUE A SA CMD?
         BNE   DMBYP2                 NO - TRY NEXT COMMAND
         BAL   R8,CMDSA              GO DO SHOW ACTIVE SYSTEMS
         B     DMBYPX                GO RESET AND WAIT FOR NEXT CMD
DMBYP2   DS    0H
***  IS THE A SHOW ACTIVE (SD) COMMAND?
         CLC   MDFYDATA(2),=C'SD'    DID THE USER ISSUE A SD CMD?
         BNE   DMBYP2A                NO - TRY NEXT COMMAND
         BAL   R8,CMDSD              GO DO SHOW ACTIVE SYSTEMS
         B     DMBYPX                GO RESET AND WAIT FOR NEXT CMD
DMBYP2A  DS    0H
***  IS THE A TERMINATE AND DUMP COMMAND?
         CLC   MDFYDATA(4),=C'DUMP'  DID THE USER ISSUE A DUMP CMD?
         BNE   DMBYP3                 NO - TRY NEXT COMMAND
         ABEND 500,DUMP              TERMINATE THE PROGRAM WITH MALACE
         B     DMBYPX                GO RESET AND WAIT FOR NEXT CMD
DMBYP3   DS    0H
***  IS THE A TERMINATE AND DUMP COMMAND?
         CLC   MDFYDATA(4),=C'HELP'  DID THE USER ISSUE A HELP CMD?
         BE    DMBYP3A                YES - DO IT
         CLC   MDFYDATA(1),=C'H'     DID THE USER ISSUE A HELP CMD?
         BE    DMBYP3A                YES - DO IT
         CLC   MDFYDATA(1),=C'?'     DID THE USER ISSUE A HELP CMD?
         BE    DMBYP3A                YES - DO IT
         B     DMBYP4                 OTHERWISE, DO NEXT
DMBYP3A  DS    0H
         BAL   R8,CMDH               GO DO SHOW HELP
         B     DMBYPX                GO RESET AND WAIT FOR NEXT CMD
DMBYP4   DS    0H
         MVC   CSLB1+26(16),=C'UNKNOWN COMMAND.'
         MVC   MSGIDSA(8),=CL8'CMSH007E'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
***  & WRITE TO LOG
DMBYPX   DS    0H
*        BAL   R8,DOCMD             GO PROCESS THE COMMAND
         XC    MDFYDATA,MDFYDATA    CLEAR USER AREA
         BAL   R8,DELPCIB           GO DELETE PROCESSED CIB
         B     PROCESS              GO BACK AND CONTINUE PROCESSING
         SPACE 3
MVCBDATA MVC   MDFYDATA(0),0(R12)   MVC INSTR FOR EX INSTRUCTION
*VCMDATA MVC   RECMSG+28(0),0(R12)  MVC INSTR FOR EX INSTRUCTION
         SPACE 3
DELPCIB  EQU   *
         L     R10,CSCLADDR         LOAD ADDR OF CSCL
         LA    R11,COMCIBPT         LOAD ADDR OF PTR TO CIB CHAIN
         L     R12,0(0,R11)         LOAD ADDR OF CIB TO BE FREED
         QEDIT ORIGIN=(R11),BLOCK=(R12) FREE PROCESSED CIB
         BR    R8                   RETURN TO CALLER
         SPACE 3
*
*   RECEIVED A STOP COMMAND, SO WE END.
*
STOP     DS    0H
         BAL   R8,MARKINA           GO MARK THAT WE ARE IN-ACTIVE
*
         WTO   'CMSH008I: * STOP COMMAND RECEIVED - ENDING.'
*
         MVC   CSLB1+01(35),=C' *** CMDSHR COMMAND JOURNAL END ***'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'          PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1     AND CLEAR THE REST
*
         CLOSE CSLOG
*
RETURN   DS    0H
         L     R13,SAVEAREA+4       RELOAD CALLERS SAP
         LM    R14,R12,12(R13)      RELOAD CALLERS REGISTERS
         BR    R14                  RETURN TO CALLER
         SPACE 3
PROCPARM DS    0H
         L     R14,0(R5)            POINT TO THE PARM LENGTH
*        LA    R6,20(R14)
         LH    R14,0(R14)             GET LENGTH OF PARM
         CH    R14,=H'0'             ZERO LENGTH?
         BE    PRPA0                 YES - IGNORE PARM
         CH    R14,=H'4'             PARM LESS THAN 4?
         BL    PRPA0                 YES - IGNORE PARM
         L     R14,0(R5)             POINT TO THE PARM LENGTH
         LA    R14,2(R14)             POINT TO THE PARM
         CLC   0(4,R14),=C'WARM'     WARM START (DEFAAULT)?
         BE    PRPAW                 YES - CONTINUE
         CLC   0(4,R14),=C'COLD'     WARM START?
         BE    PRPAC                 YES - CONTINUE
         WTO   'CMSH009E - STARTUP PARM INVALID.  ENDING.'
         B     RETURN               GO END PROGRAM
PRPAC    DS    0H                   GO RETURN TO CALLER
         WTO   'CMSH010W - COLD START WILL BE DONE.'
         MVI   COLDSW,C'C'          SET COLD START WILL BE DONE
         B     PRPAX                 YES - CONTINUE
PRPA0    DS    0H                   GO RETURN TO CALLER
         WTO   'CMSH011W - NO PARM. DEFAULTING TO WARM START.'
         B     PRPAX
PRPAW    DS    0H
PRPAX    DS    0H
         BR    R8                   GO RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*  PROCESS INPUT FROM CSIN DATASET
*
* *********************************************************************
INPUT    DS    0H
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         TIME  DEC                  GET CURRENT DATE AND TIME
         ST    R0,TIME              STORE THE TIME
         ST    R1,DATE              STORE THE DATE
         MVC   CSLB1+4(21),=C'* CMDSHR STARTED ON '
         MVC   DBLFLD+4(4),TIME          STORE TIME
         OI    DBLFLD+4+3,X'0F'          MAKE PD FORMMAT
         UNPK  UNPKFLD(8),DBLFLD+4(4)    CONVERT TO READABLE FORMAT
         MVC   CSLB1+35(2),UNPKFLD+1   MOVE HOURS
         MVI   CSLB1+37,C':'
         MVC   CSLB1+38(2),UNPKFLD+3   MOVE MINUTES
         MVI   CSLB1+40,C':'
         MVC   CSLB1+41(2),UNPKFLD+5   MOVE SECONDS
*
*        MVI   CSLB1+33,C'-'
*
         UNPK  UNPKFLD(8),DATE           UNPACK THE DATE
         MVC   CSLB1+29(3),UNPKFLD+5   MOVE DAY OF YEAR TO MESSAGE
         MVI   CSLB1+28,C'.'
         MVC   CSLB1+26(2),UNPKFLD+4   MOVE YEAR TO MESSAGE
         MVC   CSLB1+24(2),=C'19'      MOVE YEAR TO MESSAGE
         CLI   UNPKFLD+3,C'1'            CHECK CENTURY
         BNE   BYPINA                    NOT NEXT THEN SKIP SETTING
         MVC   CSLB1+24(2),=C'20'      MOVE YEAR TO MESSAGE
BYPINA   DS    0H
*
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
*
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         MVC   CSLB1+1(21),=C' RUNNING ON SYSTEM: '
         MVC   CSLB1+21(4),OURSYSID
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
*
         MVC   CSLB1+1(30),=C'******  START OF INPUT  ******'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         OPEN  CSIN                 OPEN THE INPUT FILE
         LTR   R15,R15              DID OPEN WORK?
         BZ    BYP02                 YES - CONTINUE
OPENFAL2 WTO   'CMSH012E: CSIN OPEN FAILURE. '
         B     RETURN               GO END PROGRAM
BYP02    DS    0H
         TM    CSLOG+48,X'10'       ANOTHER OPEN CHECK
         BNO   OPENFAL2              YES - IT FAILED - GO ISSUE MSG
*
INPUTL   DS    0H
         MVI   IERRORSW,C' '        SET INPUT ERROR SWITCH TO NO
         GET   CSIN                 READ AN INPUT RECORD
         LR    R2,R1                COPY INPUT BUFFER LOCATION
         CLI   0(R2),C'*'           THIS A COMMENT RECORD?
         BE    INPUTC                YES - JUST PRINT IT
         CLI   0(R2),C'#'           THIS A COMMENT RECORD?
         BE    INPUTC                YES - JUST PRINT IT
*
*    PROCESS INPUT
         CLC   0(4,R2),=C'SID='      GOT THE SID PARAMETER?
         BNE   INPUT1                 NO - TRY NEXT
         BAL   R9,KYSID               NO - TRY NEXT
         B     INPUTC                GO END SCAN
INPUT1   DS    0H
         CLC   0(4,R2),=C'POLLTIME=' GOT THE POLLTIME PARAMETER?
         BNE   INPUT2                 NO - TRY NEXT
         BAL   R9,KYPOLL             GO END SCAN
         B     INPUTC                GO WRITE OUT MESSAGE
INPUT2   DS    0H
INPUTE   DS    0H
         MVC   CSLB1+34(38),=C'<-ERROR, INVALID KEYWORD. SKIPPING. '
*
INPUTC   DS    0H
         CLI   IERRORSW,C' '        INPUT ERROR SWITCH SET?
         BNE   INPUTL                YES - ALREADY PRINTED - GO CONT.
         MVC   CSLB1+4(29),0(R2)    MOVE COMMENT TO OUTPUT BUFFER
INPUTP   DS    0H
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         B     INPUTL               GO READ MORE INPUT
INPUTX   DS    0H
         MVC   CSLB1+1(27),=C' *****  END OF INPUT  *****'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         BAL   R9,SIDLIST           GO LIST THE SIDS
         CLOSE CSIN                 CLOSE THE INPUT FILE
         BR    R8                   RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*   PRINT THE LIST OF SYSTEM ID'S THAT WILL BE USED ALONG WITH THE
*   COMMAND CHARACTER.
*
* *********************************************************************
SIDLIST  DS    0H
         MVC   CSLB1+1(28),=C' --- SYS ID''S TO PROCESS ---'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1  AND CLEAR THE REST
         LA    R5,SYSIDTBL        POINT TO BEGINNING OF SID TABLE
SIDLISTL DS    0H
         CLC   0(4,R5),=4XL1'40'    A EMPTY SID?
         BE    SIDLISTX              YEP - GO GIVE THE ERROR
         CLC   0(4,R5),SYSIDTBE     ARE WE AT END OF TABLE?
         BE    SIDLISTX              YEP - GO GIVE THE ERROR
         MVC   CSLB1+1(4),0(R5)     LIST THE SYSTEM ID'S
         MVC   CSLB1+7(1),4(R5)     LIST THE SYSTEM ID'S COMMAND CHAR.
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'          PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1     AND CLEAR THE REST
         LA    R5,L'SYSIDTBE(R5)    POINT TO NEXT SID TABLE ENTRY
         B     SIDLISTL             GO LIST ANOTHER
SIDLISTX DS    0H
         MVC   CSLB1+1(26),=C' --- SYS ID''S LIST END ---'
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'          PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1     AND CLEAR THE REST
         BR    R8                   RETURN TO CALLER
         SPACE 3
DOCMD    DS    0H
         TIME  DEC                  GET CURRENT DATE AND TIME
         ST    R0,TIME              STORE THE TIME
         ST    R1,DATE              STORE THE DATE
         MVC   DBLFLD+4(4),TIME          STORE TIME
         OI    DBLFLD+4+3,X'0F'          MAKE PD FORMMAT
         UNPK  UNPKFLD(8),DBLFLD+4(4)    CONVERT TO READABLE FORMAT
         MVC   CSLBTIME+0(2),UNPKFLD+1   MOVE HOURS
         MVC   CSLBTIME+3(2),UNPKFLD+3   MOVE MINUTES
         MVC   CSLBTIME+6(2),UNPKFLD+5   MOVE SECONDS
*
         UNPK  UNPKFLD(8),DATE           UNPACK THE DATE
         MVC   CSLBDATE+5(3),UNPKFLD+5   MOVE DAY OF YEAR TO MESSAGE
         MVC   CSLBDATE+2(2),UNPKFLD+4   MOVE YEAR TO MESSAGE
         MVC   CSLBDATE+0(2),=C'19'      MOVE YEAR TO MESSAGE
         CLI   UNPKFLD+3,C'1'            CHECK CENTURY
         BNE   BYPDCA                    NOT NEXT THEN SKIP SETTING
         MVC   CSLBDATE+0(2),=C'20'      MOVE YEAR TO MESSAGE
BYPDCA   DS    0H
         MVC   CSLBMSG+00(22),=C'SENDING TO XXXX  CMD: '
         MVC   CSLBMSG+23(99),MDFYDATA
*
         PUT   CSLOG,CSLB           WRITE TO THE LOG
         MVI   CSLBMSG,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLBMSG+1(103),CSLBMSG  AND CLEAR THE REST
         BR    R8                   RETURN TO CALLER
         SPACE 3
* ********************************************************************
*
*    PROCESS SYSID= PARAMETER, VALUE, COMMAND CHARACTER
*
* ********************************************************************
KYSID    DS    0H
         LA    R5,SYSIDTBL        POINT TO BEGINNING OF SID TABLE
         CLC   4(4,R2),=4XL1'40'  A BLANK SID ENTRY?
         BNE   KYSIDL              NO - GO PUT ENTRY INTO TABLE
         MVI   IERRORSW,C'E'        SET INPUT ERROR SWITCH
         MVC   CSLB1+34(37),=C'<-ERROR, NO SID ENTRY. SKIPPING. '
         MVC   CSLB1+04(29),0(R2) SHOW BEG. OF INPUT
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLBMSG  AND CLEAR THE REST
         B     KSIDX                GO EXIT THE RTN
KYSIDL   DS    0H
         CLC   0(4,R5),SYSIDTBE     ARE WE AT END OF TABLE?
         BE    KSIDETE               YEP - GO GIVE THE ERROR
         CLC   0(4,R5),=4XL1'40'    A EMPTY SID?
         BE    KYSIDLX               YEP - GO GIVE THE ERROR
         LA    R5,L'SYSIDTBE(R5)    POINT TO NEXT SID ENTRY
         B     KYSIDL               GO CHECK NEXT ENTRY
KYSIDLX  DS    0H
         MVC   0(4,R5),4(R2)        PUT SID ENTRY INTO TABLE
         MVC   4(1,R5),8(R2)        PUT SID'S CMD CHAR INTO TABLE
         LA    R5,L'SYSIDTBE(R5)    POINT TO NEXT SID TABLE ENTRY
         B     KSIDX                GO EXIT THE RTN
KSIDETE  DS    0H
         MVC   CSLB1+34(38),=C'<-ERROR, TOO MANY SIDS. SKIPPING. '
         MVC   CSLB1+04(29),0(R2)
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(103),CSLBMSG  AND CLEAR THE REST
         B     KSIDX                GO EXIT RTN
KSIDE    DS    0H
         MVC   CSLB1+34(38),=C'<-ERROR, INVALID SID. SKIPPING. '
         MVC   CSLB1+04(29),0(R2)
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(103),CSLBMSG  AND CLEAR THE REST
         B     KSIDX                GO EXIT RTN
KSIDX    DS    0H
         BR    R9                   RETURN TO CALLER
         SPACE 3
* ********************************************************************
*
*    PROCESS POLLTIME= PARAMETER NEED MMSSTH
*                      (MINUTES, SECONDS, THOUSANDS)
*
* ********************************************************************
KYPOLL   DS    0H
         CLC   09(1,R2),=C'0'       MINUTES < 0X?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   09(1,R2),=C'5'       MINUTES > 5X?
         BH    KYPOLLE               YES - GO GIVE ERROR
         CLC   10(1,R2),=C'0'       MINUTES < X0?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   10(1,R2),=C'9'       MINUTES > X9?
         BH    KYPOLLE               YES - GO GIVE ERROR
*
         CLC   11(1,R2),=C'0'       SECONDS < X0?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   11(1,R2),=C'5'       SECONDS > X5?
         BH    KYPOLLE               YES - GO GIVE ERROR
         CLC   12(1,R2),=C'0'       SECONDS < X0?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   12(1,R2),=C'9'       SECONDS > X9?
         BH    KYPOLLE               YES - GO GIVE ERROR
*
         CLC   13(1,R2),=C'0'       THOUSANDS < 0X?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   13(1,R2),=C'9'       THOUSANDS > 9X?
         BH    KYPOLLE               YES - GO GIVE ERROR
         CLC   14(1,R2),=C'0'       THOUSANDS < X0?
         BL    KYPOLLE               YES - GO GIVE ERROR
         CLC   14(1,R2),=C'9'       THOUSANDS > X9?
         BH    KYPOLLE               YES - GO GIVE ERROR
*
         MVC   WAITTIME+2(6),9(R2)  STORE THE TIME
         B     KYPOLLX              GO EXIT CHECK
KYPOLLE  DS    0H
         MVI   IERRORSW,C'E'        SET INPUT ERROR SWITCH
         MVC   CSLB1+34(38),=C'<-ERROR, INVALID TIME. SKIPPING. '
         MVC   CSLB1+04(29),0(R2)
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'        PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(103),CSLBMSG  AND CLEAR THE REST
KYPOLLX  DS    0H
         BR    R9                   RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*  DO COLD START - WHICH CONSISTS OF OPENING THE DS FILE AND LOADING
*                  THE FILE.
*
* *********************************************************************
         SPACE 1
DOCOLDST DS    0H
         LA    R7,RECORD            POINT TO RECORD AREA
         MVI   CSRSTART,X'40'       PREP TO CLEAR RECORD
         MVC   CSRSTART+1(99),CSRSTART  AND THE REMAINDER
         MVI   CSRFLAG,X'00'        SET THE FLAG FIELD
         CLI   COLDSW,C'C'          IS A COLD START REQUESTED?
         BNE   DOCOLDSX              NO - SKIP IT
         OPEN  (CSDSF,OUTPUT)        OPEN THE FILE
         LA    R5,SYSIDTBL        POINT TO BEGINNING OF SID TABLE
DOCOLDSL DS    0H
         CLC   0(4,R5),SYSIDTBE      ARE WE AT END OF TABLE?
         BE    DOCOLDSX               YEP - GO GIVE THE ERROR
         MVC   CSRORSID(4),0(R5)     STORE THE SYSTEM ID
         MVC   CSRSYSCC(1),4(R5)     STORE SYSTEM'S CMD CHARACTER
         WRITE DECB,SF,CSDSF,RECORD
         CHECK DECB
         LA    R5,L'SYSIDTBE(R5)    POINT TO NEXT SID TABLE ENTRY
         B     DOCOLDSL
DOCOLDSX DS    0H
         CLOSE CSDSF                CLOSE THE FILE
         BR    R8                   RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*    FIND OUR SID IN THE DS FILE AND RECORD THE RECORD NUMBER
*
* *********************************************************************
         SPACE 1
FINDOURS DS    0H
         MVC   REC1(L'REC1),=3XL1'00'
         L     R5,=F'0'                 SET COUNTER/REC # TO ZERO
FINDOURL DS    0H
         CLI   REC1+2,X'0C'             ARE WE AT THE EOF (12 REC MAX)?
         BNL   FINDOURE                  YES - ABEND!
         MVC   DECBR2,=F'0'             CLEAR THE READ ECB
         READ  DECBR2,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBR2                   WAIT TILL READ IS DONE
         CLC   RECORD(4),OURSYSID       IS THIS OUR RECORD?
         BE    FINDOURX                  YES - GO SAVE AND EXIT
         LA    R5,1(R5)                 INCREMENT RECORD COUNTER
         ST    R5,RECX                  SAVE IT
         MVC   REC1(L'REC1),RECX+1      AND SAVE IT IN RECORD COUNTER
         B     FINDOURL                 GO BACK AND READ ANOTHER
FINDOURX DS    0H
         MVC   OURREC(L'OURREC),REC1    SAVE RECORD NUMBER
         BR    R8                       RETURN TO CALLER
FINDOURE DS    0H
         ABEND 001,DUMP             GO END PROGRAM (SHOULD NOT HAPPEN)
         SPACE 3
* *********************************************************************
*
*    FIND DETRINATION SYSTEM RECORD
*
* *********************************************************************
         SPACE 1
FINDESTS DS    0H
         MVC   REC1(L'REC1),=3XL1'00'
         L     R5,=F'0'                 SET COUNTER/REC # TO ZERO
FINDESTL DS    0H
         CLI   REC1+2,X'0C'             ARE WE AT THE EOF (12 REC MAX)?
         BNL   FINDESTE                  YES - ABEND!
         MVC   DECBR2,=F'0'             CLEAR THE READ ECB
         READ  DECBRD1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBRD1                   WAIT TILL READ IS DONE
         CLC   RECORD(4),SAVEDESI       IS THIS THE DESTINATION RECORD?
         BE    FINDESTX                  YES - GO SAVE AND EXIT
         LA    R5,1(R5)                 INCREMENT RECORD COUNTER
         ST    R5,RECX                  SAVE IT
         MVC   REC1(L'REC1),RECX+1      AND SAVE IT IN RECORD COUNTER
         B     FINDESTL                 GO BACK AND READ ANOTHER
FINDESTX DS    0H
         MVC   SAVEDESR(L'OURREC),REC1  SAVE RECORD NUMBER OF DEST
         SR    R15,R15                  ZERO RETURN CODE - DEST FOUND
         BR    R9                       RETURN TO CALLER
FINDESTE DS    0H
         L     R15,=F'8'                SET BAD RETURN CODE - DEST N/F
         BR    R9                       RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*    PROCESS THE ROUTE (RO) COMMAND
*
* *********************************************************************
         SPACE 1
PROCRO   DS    0H
         MVC   SAVEDESI(4),MDFYDATA+3  MOVE DEST SYSID TO SEARCH FLD
         BAL   R9,FINDESTS           GO FIND DESTINATION RECORD #
         CLI   MDFYDATA+3,C'A'       HAVE A GOOD START OF A SYSID?
         BL    PROCROM0               NO = GIVE ERROR AND EXIT
         CLI   MDFYDATA+3,C'Z'       HAVE A GOOD START OF A SYSID?
         BH    PROCROM0               NO = GIVE ERROR AND EXIT
         C     R15,=F'0'             DID WE FIND THE SYSID IN FILE?
         BE    PROCROC1               YES - GO CONTINUE
PROCROM0 DS    0H
         MVC   CSLB1+26(37),=C'DESTINATON XXXX INVALID. CMD IGNORED.'
         MVC   CSLB1+37(4),MDFYDATA+3  MOVE DEST SYSID TO SEARCH FLD
         MVC   MSGIDSA(8),=CL8'CMSH013E'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         BR    R8                    GO RETURN TO CALLER
PROCROC1 DS    0H
         CLI   MDFYDATA+8,X'40'      DO WE HAVE A COMMAND?
         BNE   PROCROC2               YES - GO CONTINUE
         MVC   CSLB1+26(35),=C'NO COMMAND RECEIVED. CMD IGNORED.'
         MVC   MSGIDSA(8),=CL8'CMSH014E'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         BR    R8                    GO RETURN TO CALLER
PROCROC2 DS    0H
         SR    R5,R5                 CLEAR LOOP COUNTER
PROCROC3 DS    0H
         C     R5,=F'5'               HAVE WE REACHED THE LOOP COUNTER
         BNL   PROCROWE                YES - GO GIVE MSG AND END
         MVC   REC1(L'REC1),SAVEDESR  MOVE THE REC # OF THE DEST
         MVC   DECBRR1,=F'0'          CLEAR THE READ ECB
         READ  DECBRR1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBRR1                 WAIT TILL READ IS DONE
         TM    CSRFLAG,CSRFSA          IS THE DESTINATION ACTIVE?
         BNO   PROCRONA                 NO - GO GIVE WARNING AND EXIT
*
         TM    CSRFLAG,CSRFSW2S        IS SOMEONE ELSE WANTING TO SEND?
         BO    PROCROW                   YES - GO WAIT AND TRY AGAIN
         TM    CSRFLAG,CSRFSCCR        IS SOMEONE ELSE WANTING TO SEND?
         BO    PROCROW                   YES - GO WAIT AND TRY AGAIN
         TM    CSRFLAG,CSRFRCMR        HAS RECEIVER RECEIVED COMMAND?
         BO    PROCROW                   YES - GO WAIT AND TRY AGAIN
         TM    CSRFLAG,CSRFRCMI        HAS RECEIVER FINISHED ISSING CMD
         BO    PROCROW                   YES - GO WAIT AND TRY AGAIN
         B     PROCROC4                NO FLAGS SET - CONTINUE
PROCROW  DS    0H
         STIMER WAIT,DINTVL=WAIT4STA   WAIT FOR STATUS TO CHANGE
         LA    R5,1(R5)                ADD 1 TO LOOP COUNTER
         B     PROCROC3                GO BACK AND TEST AGAIN
*  AT THIS POINT ALL FLAGS ARE CLEARED AND WE CAN PROCEED
PROCROC4 DS    0H
         MVC   DECBRR2,=F'0'           CLEAR THE READ ECB
         READ  DECBRR2,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBRR2                 WAIT TILL READ IS DONE
         OI    CSRFLAG,CSRFSW2S        SET FLAG THAT WE ARE ABOUT 2 SET
         MVC   DECBWR1,=F'0'           CLEAR THE READ ECB
         WRITE DECBWR1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWR1
         STIMER WAIT,DINTVL=WAIT4STA   WAIT FOR STATUS TO CHANGE
         TIME  DEC                     GET THE CURRENT DATE AND TIME
         ST    R0,CSRLUTIM             SET THE CURRENT TIME IN RECORD
         ST    R1,CSRLUDTE             SET THE CURRENT DATE IN RECORD
         OI    CSRFLAG,CSRFSCCR        SET FLAG THAT CMD IS READY
         MVC   CSRCMD(80),MDFYDATA+8   MOVE THE COMMAND TO RECORD
         MVC   CSRDESID(4),OURSYSID    MOVE OUR SYSID TO RECORD
         MVC   DECBWR2,=F'0'           CLEAR THE READ ECB
         WRITE DECBWR2,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWR2
         MVC   CSLB1+26(23),=C'COMMAND POSTED TO XXXX '
         MVC   CSLB1+44(4),SAVEDESI
         MVC   MSGIDSA(8),=CL8'CMSH015I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         BR    R8                      GO BACK TO CALLER
PROCRONA DS    0H        NO - GO GIVE WARNING AND EXIT
         MVC   CSLB1+26(40),=C'DESTINATON XXXX NOT ACTIVE. CMD IGNORED.X
               '
         MVC   CSLB1+37(4),SAVEDESI
         MVC   MSGIDSA(8),=CL8'CMSH016E'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         BR    R8                      RETURN TO CALLER
PROCROWE DS    0H
         MVC   CSLB1+26(36),=C'CMD SENT TO XXXX NOT DONE.  TIMEOUT.'
         MVC   CSLB1+38(4),SAVEDESI
         MVC   MSGIDSA(8),=CL8'CMSH017W'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         BR    R8                      RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*    SHOW ACTIVE (SA) COMMAND PROCESS
*
* *********************************************************************
         SPACE 1
CMDSA    DS    0H
         MVC   REC1(L'REC1),=3XL1'00'
         LA    R7,RECORD                SET COUNTER/REC # TO ZERO
         L     R5,=F'0'                 SET COUNTER/REC # TO ZERO
         MVC   CSLB1+26(18),=C'- ACTIVE SYSTEMS -'
         MVC   MSGIDSA(8),=CL8'CMSH018I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
CMDSAL   DS    0H
         CLI   REC1+2,X'0C'             ARE WE AT THE EOF (12 REC MAX)?
         BNL   CMDSAX                    YES - WE ARE ALL DONE THEN
         MVC   DECBS1,=F'0'             CLEAR THE READ ECB
         READ  DECBS1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBS1                    WAIT TILL READ DONE
         TM    CSRFLAG,CSRFSA            IS THIS AN ACTIVE SYSTEM?
         BNO   CMDSALCX                   NO - THEN SKIP LISTING IT
         TM    CSRFLAG,CSRFSW2S          IS A SYSTEM WANT TO SEND?
         BO    CMDSALC2                   YES- THEN GO LISTING IT
         TM    CSRFLAG,CSRFSCCR          IS A SYSTEM CONSTRUCTING CMD?
         BO    CMDSALC2                   YES- THEN GO LISTING IT
         TM    CSRFLAG,CSRFRCMR          IS A SYSTEM COMMAND READY?
         BO    CMDSALC2                   YES- THEN GO LISTING IT
         B     CMDSALC1                  OTHER THEN SKIP LISTING IT
CMDSALC2 DS    0H
         MVC   CSLB1+33(08),=C'- PEND: '
         MVC   CSLB1+41(18),CSRCMD
CMDSALC1 DS    0H
         MVC   CSLB1+27(04),CSRORSID   MOVE SYSTEM ID TO MSG
         L     R0,CSRLUTIM             GET TIME FROM RECORD
         ST    R0,PACK8+4              PROCESS TIME ON RECORD
         OI    PACK8+7,X'0F'
         UNPK  STIME(8),PACK8+4(4)
         MVC   CSLB1+33(2),STIME+01
         MVI   CSLB1+35,C':'
         MVC   CSLB1+36(2),STIME+03
         MVI   CSLB1+38,C'.'
         MVC   CSLB1+39(2),STIME+05
         L     R0,CSRLUDTE             GET DATE FROM RECORD
         ST    R0,PACK8+4              PROCESS DATE ON RECORD
         OI    PACK8+7,X'0F'
         UNPK  SDATE(8),PACK8+4(4)
         MVC   CSLB1+43(2),=C'20'
*        MVC   CSLB1+45(7),SDATE+01
         MVC   CSLB1+45(2),SDATE+03
         MVI   CSLB1+47,C'.'
         MVC   CSLB1+48(3),SDATE+05
         CLC   CSRORSID(4),OURSYSID    IS THIS OUR RECORD?
         BNE   CMDSALC3
         MVI   CSLB1+26,C'>'           MARK AS IT IS OUR SYSTEM
CMDSALC3 DS    0H
         MVC   MSGIDSA(8),=CL8'CMSH019I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
CMDSALCX DS    0H
         LA    R5,1(R5)                 INCREMENT RECORD COUNTER
         ST    R5,RECX                  SAVE IT
         MVC   REC1(L'REC1),RECX+1      AND SAVE IT IN RECORD COUNTER
         B     CMDSAL                   GO BACK AND READ ANOTHER
CMDSAX   DS    0H
         BR    R8                       RETURN TO CALLER
CMDSAE   DS    0H
         BR    R8                       RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*    SHOW DEFINEDD (SD) COMMAND PROCESS
*
* *********************************************************************
         SPACE 1
CMDSD    DS    0H
         MVC   REC1(L'REC1),=3XL1'00'
         LA    R7,RECORD                SET COUNTER/REC # TO ZERO
         L     R5,=F'0'                 SET COUNTER/REC # TO ZERO
         MVC   CSLB1+26(18),=C'- DEFINED SYSTEMS -'
         MVC   MSGIDSA(8),=CL8'CMSH022I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
CMDSDL   DS    0H
         CLI   REC1+2,X'0C'             ARE WE AT THE EOF (12 REC MAX)?
         BNL   CMDSDX                    YES - WE ARE ALL DONE THEN
         MVC   DECBS1,=F'0'             CLEAR THE READ ECB
         READ  DECBS2,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBS2                    WAIT TILL READ DONE
CMDSDLC1 DS    0H
         CLC   CSRORSID(4),=4CL1' '    IS SID EMPTY?
         BE    CMDSDLCX                 YES - SKIP IT
         MVC   CSLB1+26(04),CSRORSID   MOVE SYSTEM ID TO MSG
         MVC   MSGIDSA(8),=CL8'CMSH022I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
CMDSDLCX DS    0H
         LA    R5,1(R5)                 INCREMENT RECORD COUNTER
         ST    R5,RECX                  SAVE IT
         MVC   REC1(L'REC1),RECX+1      AND SAVE IT IN RECORD COUNTER
         B     CMDSDL                   GO BACK AND READ ANOTHER
CMDSDX   DS    0H
         BR    R8                       RETURN TO CALLER
CMDSDE   DS    0H
         BR    R8                       RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*    SHOW HELP
*
* *********************************************************************
         SPACE 1
CMDH     DS    0H
*        MVC   REC1(L'REC1),=3XL1'00'
         MVC   CSLB1+26(15),=C'- CMDSHR HELP -'
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>EXIT - END PROGRAM.                   '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>H/HELP/? - YOU ARE SEEING IT.         '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>SA - SHOW ACTIVE SYSTEMS.             '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>SD - SHOW DEFINED SYSTEMS.            '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>RO - ROUTE A COMMAND TO ANOTHER SYSTEM'
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>   - RO DEST CMD                      '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>   - EX: RO MVS1 $DA                  '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVC   CSLB1+26(39),=C'>DUMP - TERMINATE PROGRAM W/PREJUDICE. '
         MVC   MSGIDSA(8),=CL8'CMSH023I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
CMDHX    DS    0H
         BR    R8                       RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*   SET ENTRY IN THIS SYSTEM'S RECORD IN THE DS THAT WE ARE ACTIVE
*
* *********************************************************************
         SPACE 1
MARKACT  DS    0H
         MVC   DECBR1(4),=F'0'       CLEAR READ ECB
         READ  DECBR1,DI,CSDS,RECORD,'S',0,OURREC
         CHECK DECBR1
         CLC   CSRORSID,OURSYSID     THIS IS THE RECORD FOR US, RIGHT?
         BNE   MARKACTX               NO - HUSTON, WE HAVE A PROBLEM...
         TIME  DEC                     GET THE CURRENT DATE AND TIME
         ST    R0,CSRLUTIM             SET THE CURRENT TIME IN RECORD
         ST    R1,CSRLUDTE             SET THE CURRENT DATE IN RECORD
         OI    CSRFLAG,CSRFSA        MARK THAT WE ARE ACTIVE
WTE1     WRITE DECBW1,DI,CSDS,RECORD,'S',0,OURREC
WTE1E    EQU   *
         CHECK DECBW1
         BR    R8                       RETURN TO CALLER
MARKACTX DS    0H
         WTO   'CMDSHR - OUR RECORD IS NOT OUT OWN.  TERMINATING.'
         ABEND 002,DUMP
         SPACE 3
* *********************************************************************
*
*   SET ENTRY IN THIS SYSTEM'S RECORD IN THE DS THAT WE ARE IN-ACTIVE
*
* *********************************************************************
         SPACE 1
MARKINA  DS    0H
         MVC   DECBRI1(4),=F'0'       CLEAR READ ECB
         READ  DECBRI1,DI,CSDS,RECORD,'S',0,OURREC
         CHECK DECBRI1
         CLC   CSRORSID,OURSYSID     THIS IS THE RECORD FOR US, RIGHT?
         BNE   MARKINAX               NO - HUSTON, WE HAVE A PROBLEM...
         TIME  DEC                     GET THE CURRENT DATE AND TIME
         ST    R0,CSRLUTIM             SET THE CURRENT TIME IN RECORD
         ST    R1,CSRLUDTE             SET THE CURRENT DATE IN RECORD
         MVI   CSRFLAG,X'00'         MARK THAT WE ARE IN-ACTIVE 01
         WRITE DECBW2,DI,CSDS,RECORD,'S',0,OURREC
         CHECK DECBW2
         BR    R8                       RETURN TO CALLER
MARKINAX DS    0H
         WTO   'CMDSHR - OUR RECORD IS NOT OUT OWN.  TERMINATING.'
         ABEND 003,DUMP
         SPACE 3
* *********************************************************************
*
*   CHECK IF OTHERS HAVE COMPLETED THEIR COMMAND THAT WE ISSUED
*
* *********************************************************************
         SPACE 1
CHKCC    DS    0H GO CHECK IF OTHER SYS HAS COMPLETED
         LA    R7,RECORD              POINT TO RECORD AREA
         L     R5,=F'0'               SET THE RECORD COUNT
         MVC   REC1(3),=3XL1'00'      SET TO START OF FILE
CHKCCL   DS    0H
         CLI   REC1+2,X'0C'           ARE WE AT EOF?
         BE    CHKCCZ                  YES - GO EXIT
         MVC   DECBC(4),=F'0'         CLEAR READ ECB
         READ  DECBC,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBC
         CLC   CSRDESID(4),OURSYSID   IS THIS FOR US IN THIS RECORD?
         BE    CHKCCF                  YES - THEN DO FURTHER CHECK
CHKCCC   DS    0H
         LA    R5,1(R5)               INCREMENT RECORD COUNTER
         ST    R5,RECX                SAVE IT
         MVC   REC1(L'REC1),RECX+1    AND SAVE IT IN RECORD COUNTER
         B     CHKCCL                 GOBACK AND READ ANOTHER
CHKCCF   DS    0H
         TM    CSRFLAG,CSRFRCMI       HAS A COMMAND BEEN COMPLETED?
         BO    CHKCCCMY                YES - GO CLEAR CMD & FLAGS
         B     CHKCCC                 GO BACK AND SCAN 4 MORE CMDS 4 US
CHKCCZ   DS    0H
         BR    R8                   RETURN TO CALLER
CHKCCCMY DS    0H
         MVC   CSLB1+26(30),=C'COMMAND COMPLETED ON XXXX CMD:'
         MVC   CSLB1+47(4),CSRORSID
         MVC   CSLB1+57(16),CSRCMD
         MVC   MSGIDSA(8),=CL8'CMSH020I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
         MVI   CSRFLAG,X'08'                  CLEAR COMMAND FLAGS
         MVC   CSRDESID(4),=4XL1'40'          CLEAR DEST ID
         MVI   CSRCMD,X'00'                   PREP TO CLEAR CMD      12
         MVC   CSRCMD+1(79),CSRCMD             AND CLEAR THE REST
         MVC   DECBWK1(4),=F'0'               CLEAR ECB
         WRITE DECBWK1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWK1
         B     CHKCCC                 GO BACK AND SCAN 4 CMD COMPLETES
         SPACE 3
* *********************************************************************
*
*   CHECK IF WE GOT A COMMAND FROM ANOTHER SYSTEM
*
* *********************************************************************
         SPACE 1
POLL4CMD DS    0H
         LA    R7,RECORD              POINT TO RECORD AREA
         L     R5,=F'0'               SET THE RECORD COUNT
         MVC   REC1(3),=3XL1'00'      SET TO START OF FILE
POLL4CML DS    0H
         CLI   REC1+2,X'0C'           ARE WE AT EOF?
         BE    POLL4CMX                YES - GO EXIT
         MVC   DECBR(4),=F'0'         CLEAR READ ECB
         READ  DECBR,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBR
         CLC   CSRORSID(4),OURSYSID   IS THIS FOR US IN THIS RECORD?
         BE    POLL4CMF                YES - GO DO IT
POLL4CMC DS    0H
         LA    R5,1(R5)               INCREMENT RECORD COUNTER
         ST    R5,RECX                SAVE IT
         MVC   REC1(L'REC1),RECX+1    AND SAVE IT IN RECORD COUNTER
         B     POLL4CML               GOBACK AND READ ANOTHER
POLL4CMF DS    0H
         TM    CSRFLAG,CSRFRCMI       HAS A COMMAND BEEN COMPLETED?
         BO    POLL4CMY                YES - GO CLEAR CMD & FLAGS
         TM    CSRFLAG,CSRFSCCR       IS THERE A READY COMMAND FOR US?
         BNO   POLL4CMZ                NO - OK, GO EXIT DOING NOTHING
         OI    CSRFLAG,CSRFRCMR       SET AS COMMAND INITIATED
         MVC   DECBWP1(4),=F'0'       CLEAR ECB
         WRITE DECBWP1,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWP1
*        MVI   CMDAREAA,X'40'                PREP TO CLEAR CMD AREA
*        MVC   CMDAREAA+1(79),CMDAREAA        AND CLEAR THE REST
         MVC   CMDAREAA(L'CSRCMD),CSRCMD   STORE COMMAND TO BE ISSUED
         MVC   CSLB1+26(16),=C'FROM XXXX CMD: '
         MVC   CSLB1+31(04),CSRDESID       STORE ORIG.SYSID IN MSG
         MVC   CSLB1+41(25),CSRCMD         STORE COMMAND IN MSG
         MVC   MSGIDSA(8),=CL8'CMSH021I'   SET MSGID
         BAL   R6,WRTJRNL           MAKE JOURNAL ENTRY
*
         BAL   R9,ISSUECMD                   GO ISSUE COMMAND
         TIME  DEC                     GET THE CURRENT DATE AND TIME
         ST    R0,CSRLUTIM             SET THE CURRENT TIME IN RECORD
         ST    R1,CSRLUDTE             SET THE CURRENT DATE IN RECORD
         OI    CSRFLAG,CSRFRCMI              SET AS COMMAND COMPLETE
         MVC   DECBWP2(4),=F'0'              CLEAR ECB
         WRITE DECBWP2,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWP2
         B     POLL4CMC               GO BACK AND SCAN 4 MORE CMDS 4 US
*  SET RECORD OF OUR SYSTEM THAT WE ARE STILL ACTIVE
POLL4CMZ DS    0H
         TIME  DEC                     GET THE CURRENT DATE AND TIME
         ST    R0,CSRLUTIM             SET THE CURRENT TIME IN RECORD
         ST    R1,CSRLUDTE             SET THE CURRENT DATE IN RECORD
         MVC   DECBWP3(4),=F'0'              CLEAR ECB
         WRITE DECBWP3,DI,CSDS,RECORD,'S',0,REC1
         CHECK DECBWP3
         BR    R8                   RETURN TO CALLER
POLL4CMX DS    0H
         BR    R8                   RETURN TO CALLER
POLL4CMY DS    0H
QUES     BR    R8  THE CODE BELOW NOT NEEDED SO EXIT
         SPACE 3
* *********************************************************************
*
*   ISSUE COMMAND FOR OUR SYSTEM
*
* *********************************************************************
         SPACE 1
ISSUECMD DS    0H
         LA    R14,CMDAREAA         POINT TO START OF COMMAND AREA
         LA    R15,79(R14)          AND POINT TO THE END
ISSUECM1 DS    0H
         CR    R14,R15              ARE WE AT THE END?
         BNL   ISSUECM2              YES - THEN GO DO COMMAND
         CLI   0(R14),X'00'         IS THIS A NULL?
         BNE   ISSUECM3              NO - SKIP TRANSLATION
         MVI   0(R14),X'40'         CHANGE NULL TO SPACE
ISSUECM3 DS    0H
         LA    R14,1(R14)           POINT TO THE NEXT POSITION
         B     ISSUECM1              YES - THEN GO DO COMMAND
ISSUECM2 DS    0H
         MODESET MODE=SUP,KEY=ZERO  GET INTO SUP STATE & KEY ZERO
         SR    R0,R0
         LA    R1,CMDAREA           POINT TO THE COMMAND TO BE ISSUED
         SVC   34                   ISSUE COMMAND
         MODESET MODE=PROB,KEY=NZERO GET BACK TO THE STATE WE WERE IN
         BR    R9                   RETURN TO CALLER
         SPACE 3
* *********************************************************************
*
*   DS FILE'S SYNAD EXIT.
*   HAVEN'T NEEDED IT, BUT IT'S HERE JUST IN CASE
*
* *********************************************************************
         SPACE 1
DFERROR  DS    0H
         ABEND 50,DUMP
         SPACE 3
* *********************************************************************
*
*   WRITE THE JOURNAL ENTRY
*
* *********************************************************************
         SPACE 1
WRTJRNL  DS    0H
         TIME  DEC                  GET CURRENT DATE AND TIME
         ST    R0,TIME              STORE THE TIME
         ST    R1,DATE              STORE THE DATE
         MVC   DBLFLD+4(4),TIME          STORE TIME
         OI    DBLFLD+4+3,X'0F'          MAKE PD FORMMAT
         UNPK  UNPKFLD(8),DBLFLD+4(4)    CONVERT TO READABLE FORMAT
         MVC   CSLB1+16(2),UNPKFLD+1   MOVE HOURS
         MVI   CSLB1+18,C':'
         MVC   CSLB1+19(2),UNPKFLD+3   MOVE MINUTES
         MVI   CSLB1+21,C':'
         MVC   CSLB1+22(2),UNPKFLD+5   MOVE SECONDS
*
*        MVI   CSLB1+31,C'-'
*
         UNPK  UNPKFLD(8),DATE           UNPACK THE DATE
         MVC   CSLB1+11(3),UNPKFLD+5   MOVE DAY OF YEAR TO MESSAGE
         MVI   CSLB1+10,C'.'
         MVC   CSLB1+08(2),UNPKFLD+4   MOVE YEAR TO MESSAGE
         MVC   CSLB1+06(2),=C'19'      MOVE YEAR TO MESSAGE
         CLI   UNPKFLD+3,C'1'            CHECK CENTURY
         BNE   WRTJRNL1                  NOT NEXT THEN SKIP SETTING
         MVC   CSLB1+06(2),=C'20'      MOVE YEAR TO MESSAGE
WRTJRNL1 DS    0H
*
         MVI   WTOMSG+08,X'40'         PREP TO CLEAR WTO MSG LINE
         MVC   WTOMSG+09(45),WTOMSG+08    AND THE REMAINDER
         MVC   WTOMSG+08(8),MSGIDSA    MOVE THE MESSAGE ID TO WTO
         MVC   WTOMSG+17(45),CSLB1+26  MOVE JOURNAL LINE TO WTO
WTOMSG   WTO   'CMSH000I 123456789012345678901234567890123456789012345'
*
         PUT   CSLOG,CSLB1          WRITE TO THE LOG
         MVI   CSLB1,X'40'          PREP TO CLEAR MESSAGE AREA
         MVC   CSLB1+1(120),CSLB1     AND CLEAR THE REST
         BR    R6                   RETURN TO CALLER
         EJECT                      RETURN TO CALLER
SAVEAREA DS    18F
MSGIDSA  DC    CL8'ABCDEFGH'
IERRORSW DC    C' '           INPUT ERROR SWITCH
RECDSS   EQU   *
COLDSW   DC    C'W'           COLD START? WARM IS DEFAULT
OURSYSID DC    CL4'    '      OUR SMFID
OURREC   DC    XL3'000000'   THIS SYSTEM'S RECORD NUMBER
REC1     DC    XL3'000000'    FILE RECORD NUMBER
RECX     DC    F'0'           WORK FILE RECORD NUMBER
RECDSE   EQU   *
DATE     DC    F'0'
TIME     DC    F'0'
DBLFLD   DC    D'0'
UNPKFLD  DC    XL4'00'
TIOTADDR DS    F
PROCNAME DS    CL8
STEPNAME DS    CL8
SAVEDESR DC    XL3'00'               DESTINATION RECORD NUMBER
SAVEDESI DC    CL4'    '             DESTINATION SYSID
CSCLADDR DS    F
MDFYDATA DC    XL80'40'
         DS    0D
WAITTIME DC    C'00000800'         WAIT 0 MINUTES 8 SECONDS
*                HHMMSSTH          THE ABOVE TIME FORMAT
WAIT4STA DC    C'00000100'         WAIT 0 MINUTES 1 SECONDS
*                HHMMSSTH          THE ABOVE TIME FORMAT
FILLER   DS    D
CMDAREA  DS    0CL(4+80)           LENGTH OF ATTRIBUTES + LEN OF CMD
         DC    AL1(0)              FLAG BYTE
         DC    AL1(80+4)           LENGTH OF COMMAND + ATTRIBUTES
         DC    AL2(0)              NO TOKEN PRESENT
CMDAREAA DC    CL80' '             CMD TO BE SENT TO DESTINATION
FILLER1  DC    CL4' '
CMDAREAX EQU   *
         PRINT NOGEN
CSIN     DCB   DDNAME=CSIN,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=INPUTX,    X
               LRECL=80
CSLOG    DCB   DDNAME=CSLOG,DSORG=PS,MACRF=PM,RECFM=FB,                X
               LRECL=121,BLKSIZE=121
CSDSF    DCB   DDNAME=CSDS,DSORG=PS,MACRF=W,DEVD=DA,                   X
               RECFM=F,LRECL=100,BLKSIZE=100
CSDS     DCB   DDNAME=CSDS,DSORG=DA,MACRF=(RISC,WIC),OPTCD=RF,         X
               RECFM=F,BUFNO=1,BUFL=100,SYNAD=DFERROR
         PRINT GEN
SYSIDTBL DS    0CL5
         DC    12CL5'    '
SYSIDTBE DC    CL5'****Z'         END OF TABLE
CSLB1    DS    CL121
CSLB     DS    0CL121
         DC    4CL1' '
CSLBDATE DC    CL8'YYYY.DDD'
         DC    CL1' '
CSLBTIME DC    CL8'HH:MM:SS'
         DC    CL1' '
CSLBMSG  DC    104CL1' '
PACK8    DC    D'0'
RECORD   DS    CL100
STIME    DC    8CL1' '
SDATE    DC    8CL1' '
         LTORG
         SPACE 3
         CNOP  0,4
         SPACE 3
*        PRINT NOGEN
CSCL     DSECT
         IEZCOM
         SPACE 3
CIB      DSECT
         IEZCIB                    CIB DSECT
         SPACE 3
         DSECT
         IEFTIOT1                  TIOT DSECT
         CVT   DSECT=YES,LIST=YES
         IEESMCA
CSR      DSECT
CSRSTART EQU   *
CSRORSID DS    CL4             ORIGINATING SYSID
CSRFLAG  DS    XL1             FLAG FIELD
CSRFSW2S EQU   80              +SENDER/ORIGINATOR: WANT TO SEND
CSRFSCCR EQU   40              +SENDER: COMMAND CONSTRUCTED AND READY
CSRFRCMR EQU   20              +RECEIVER/DESTINATION: COMMAND RECEIVED
CSRFRCMI EQU   10              +RECEIVER: COMMAND ISSUED
CSRFSA   EQU   08              -ORIGINATING SYSTEM IS ACTIVE
CSRFL3   EQU   04              -
CSRFL4   EQU   02              -
CSRFL5   EQU   01              -
CSRSYSCC DS    CL1             A PARTICULAR SYSTEM'S COMMAND CHARACTER
CSRESRV1 DS    CL2             UNUSED - RESERVED
CSRLUDTE DS    F               LAST UPDATE DATE
CSRLUTIM DS    F               LAST UPDATE TIME
CSRDESID DS    CL4             DESTINATION SYSID
CSRCMD   DS    CL80            CMD TO BE SENT TO DESTINATION
CSRLEN   EQU   *-CSRSTART      LENGTH OF DSECT
         END
//LKED.SYSLMOD DD  DSN=SYSS.LINKLIB(CMDSHR),DISP=SHR
/*
