//SCOTTC  JOB 'DAPFC    ',CLASS=A,MSGCLASS=X,NOTIFY=SCOTT,
//         MSGLEVEL=(1,1),REGION=2048K,COND=(0,NE)
//STEP1    EXEC  ASMFCL
//*            PARM.LKED='LIST,LET,NCAL,XREF,AC=1'
//ASM.SYSLIB  DD  DISP=SHR,DSN=SYS1.AMODGEN
//          DD  DISP=SHR,DSN=SYS1.AMACLIB
//          DD  DISP=SHR,DSN=SYS1.MACLIB
//ASM.SYSIN  DD  *
DAPFC    START 0
         TITLE 'DAPFC   -  DOCUMENTATION                              '
         SPACE 3
* *********************************************************************
*
*     NAME:       DAPFC
*     PURPOSE:    TO DISPLAY THE APF TABLE ENTRIES
*                    UPON THE OPERATOR'S CONSOLE.
*                 (A VARIATION OF THE DAPF TSO COMMAND)
*     WRITTEN BY: SCOTT VETTER
*     DATE:       26 APRIL 2012
*     WHY:        I LIKE MUCKING AROUND IN MVS!
*     INPUT:      NONE
*     PARM INPUT: NONE
*     OUTPUT:     ON THE OPERATOR'S CONSOLE.
*                 THOSE DATASETS, WITH THE VOLSER, THAT ARE IN THE
*                 APF LIST.
*     RETURN CODE(S):         ALWAYS ZERO.
*     ABEND CODE(S):          NONE.
*     ASSEMBLY REQUIREMENTS:  REQUIRES ACCESS TO THE MACRO LIBRARY
*                             FOR THE CVT MAPPING.
*     LINKAGE REQUIREMENTS:   AC=1
*     NON-EXECUTABLE MACROS:  CVT, WTO
*     EXECUTABLE MACROS:      WTO
*
*     CVT (CVTAUTHL) -> APF D.S. TABLE
*        AL(2) NUMBER OF ENTRIES
*        ENTRIES:  XL(1)  LENGTH OF ENTRY
*                  CL(6)  VOL/SER
*                  XL(1)  LENGTH OF DSNAME
*                  XL(??) THE DSNAME
*
*     JCL:   // JOB CARD
*            //STEPNAME EXEC  PGM=DAPFC
*
*     NOTE(S):  YOU COULD SET THIS UP AS A STARTED TASK.
*               (BUT I DO HAVE OTHER NOTORIOUS PLANS...)
*
* ---------------------------------------------------------------------
*
*     CHANGE LOG:
*
*
* *********************************************************************
         TITLE 'DAPFC   -  REGISTER USAGE                             '
         SPACE 3
R0       EQU   0       WORK REGISTER
R1       EQU   1       WORK REGISTER
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12      BASE REGISTER
R13      EQU   13      SAVE AREA POINTER
R14      EQU   14      WORK REGISTER
R15      EQU   15      WORK REGISTER
         TITLE 'DAPFC   -  ENTRY / EXIT CODE                          '
         SPACE 3
         USING *,R15
         B     AROUNDID
         DC    CL8'DAPFC   '
         DC    CL1'-'
         DC    CL8'&SYSDATE'
         DC    CL1'-'
         DC    CL8'&SYSTIME'
         DC    CL1'-'
         DC    CL8'V1.R1.M0'
         DC    CL1'-'
         SPACE 2
AROUNDID DS    0H
         DROP  R15
         STM   R14,R12,12(R13)      SAVE CALLERS REGISTERS
         BALR  R12,0                COPY BASE REGISTER
         USING *,R12
         ST    R13,SAVEAREA+4       SAVE CALLERS SAP
         LA    R13,SAVEAREA         POINT TO OUR SAVE AREA
         LR    R4,R1                SAVE PARM POINTER
         B     DOMAIN               GO DO THE PURPOSE OF THHIS PGM
         SPACE 3
EXITPGM  DS    0H
         L     R13,SAVEAREA+4       RELOAD CALLERS SAP
         LM    R14,R12,12(R13)      RELOAD CALLERS REGISTERS
         SR    R15,R15              ZERO RETURN CODE
         BR    R14                  RETURN TO CALLER
         TITLE 'DAPFC   -  MAIN CODE                                  '
         SPACE 3
* *********************************************************************
*
*    DO INITILIZATION
*       GET THE POINTER TO THE TABLE FROM THE CVT,
*       GET THE NUMBER OF ENTRIES,
*       AND WRITE THE HEADING.
*
* *********************************************************************
         SPACE 3
STRGAREA DC    F'0'
DOMAIN   DS    0H
         SPACE 3
         GETMAIN RU,LV=2048         GET STRG FOR MESSAGE AREA
         ST    R1,STRGAREA          AND SAVE THE POINTER TO IT
         LR    R10,R1               COPY MSG AREA POINTER
         SPACE 3
         L     R2,CVTPTR            POINT TO THE CVT
         USING CVT,R2                AND MAP IT
         L     R3,CVTAUTHL          POINT TO THE START OF THE APF TABLE
         SR    R5,R5
         LH    R5,0(R3)             GET COUNT OF NUMBER OF ENTRIES
         LA    R3,2(R3)             POINT PAST NMBR OF ENTRIES FEILD
         MVC   0(59,R10),WTOMSG     MOVE INITIAL WTO MSG HEADER TO STRG
         LA    R10,8(R10)           ADJUST POSITION
         SR    R8,R8                CLEAR LINE COUNTER
         SPACE 3
* *********************************************************************
*
*    PROCESS EACH ENTRY
*       CLEAR THE OUTPUT LINE,
*       GET ENTRY LENGTH
*       WRITE OUT THE VOLSER
*       WRITE OUT THE VARIABLE LENGTH DSNAME,
*       ADJUST TO GET THE NEXT ENTRY,
*       WRITE THE RESULTS,
*       AND DO OVER AGIN IF NEED BE.
*
* *********************************************************************
         SPACE 3
LISTNTRY DS    0H
         LA    R8,1(R8)             ADD 1 TO LINE COUNTER
         LA    R10,52(R10)          POINT TO NEXT AREA
         MVC   0(52,R10),WTOMSG+60  MOVE SUBSEQUENT WTO MSG TO STRG
         MVI   MSGLNE1,X'40'
         MVC   MSGLNE1+1(51),MSGLNE1
         SR    R6,R6                CLEAR ENTRY LENGTH REG
         ICM   R6,X'0001',0(R3)     ST ENTRY LENGTH IN REG
         LR    R7,R6                SAVE LENGTH
         MVC   MSGLNE1V(6),1(R3)    MOVE VOLSER TO BUFFER
         MVC   15(6,R10),1(R3)      MOVE VOLSER TO BUFFER
         S     R6,=F'6'             SUBTRACT VOLSER LENGTH
         S     R6,=F'1'             SUBTRACT 1 FOR EX INSTRUCTION
         EX    R6,MOVEDSN           MOVE DATASET NAME IN BUFFER
         EX    R6,MOVEDSN1          MOVE DATASET NAME IN WTO STRG BUFR
         SPACE 3
         AR    R3,R7                POINT PAST DSNAME
         LA    R3,1(R3)             ADD 1 TO ACCOUNT FOR LENGTH FIELD
*        LA    R4,20(R3)            POINT TO A POSSIBLE END
         SPACE 3
         BCT   R5,LISTNTRY          GO PROCESS THE ENTRY
         SPACE 3
*   END OF LIST ROUTINE
         SPACE 1
         LR    R9,R10               SAVE NEXT RECORD POINTER
         MVI   2(R9),X'30'          SET LAST LINE IN WTO MSG
         L     R10,STRGAREA         GET WTO MESSAGE STRG AREA
         LA    R8,1(R8)             ADD 1 IN LINE COUNT TO INCL HEADER
         STC   R8,59(R10)           SET NUMBER OF LINES IN WTO MSG AREA
         LA    R11,1000(R10)         AND SET THE END
         L     R10,STRGAREA         GET WTO MESSAGE STRG AREA
         WTO   MF=(E,(R10))         ISSUE WTO
         FREEMAIN RU,LV=2048,A=((R10))
         SPACE 3
         B     EXITPGM              GO AROUND THE MOVE
         SPACE 3
MOVEDSN  MVC   MSGLNE1D(0),7(R3)    MOVE DSNAME TO BUFFER
MOVEDSN1 MVC   23(0,R10),7(R3)      MOVE DSNAME TO BUFFER
         TITLE 'DAPFC   -  DATA AREAS                                 '
         SPACE 3
SAVEAREA DS    18F
         SPACE 3
MSGLNEH  DS    0C
         DC    C'SVAP001 DATASETS IN THE APFLIST'
MSGLNEHL EQU   *-MSGLNEH
         SPACE 3
MSGLNE1  DS    0C
         DS    CL1
MSGLNE1V DS    CL6
         DS    CL1
MSGLNE1D DS    CL44
MSGLNE1L EQU   *-MSGLNE1
WTOMSG   WTO   ('SKVAPF01I CURRENT APF ENTRIES                   ',C), X
               ('           VOLSER  DSNAME                       ',D), X
               ('                                                ',DE),X
               DESC=(5),MCSFLAG=(REG0,RESP),MF=L
WTOMSGL  EQU   *
         SPACE 3
         LTORG
         TITLE 'DAPFC   -  DSECTS                                     '
         CVT   LIST=NO,DSECT=YES
         EJECT
* *********************************************************************
*
*    THE END...
*
* *********************************************************************
         END
/*
//LKED.SYSLMOD DD  DSN=SYS2.LINKLIB(DAPFC),DISP=SHR
/*
//STEP1   EXEC  PGM=DAPFC
//SNAPDUMP  DD  SYSOUT=*
/*
