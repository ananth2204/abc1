{"INMR01": {"INMLRECL": 80, "INMFNODE": "CSDLMVS", "INMFUID": "SEB1525", "INMTNODE": "MVS", "INMTUID": "CSDL", "INMFTIME": "20000926092857000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6160, "INMRECFM": "FB", "INMDIR": 13, "INMDSNAM": "PROGLIB.ZILCBT.PANEL", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"PROGLIB.ZILCBT.PANEL": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6160, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "000269", "DS1SCEXT": "b'\\x80\\x18\\x10'", "DS1SCALO": "b'P\\x00\\x002'", "DS1LSTAR": "b'\\x00\\x04\\r'", "DS1TRBAL": "b'[`'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x04\\x10\\x00\\x04\\xa9-p'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x04\\x10\\x00\\x04\\xa9-p'", "b'X\\xf33\\xb0\\x00\\x00\\x00f\\x00\\x00\\x00g\\x00\\x01\\x00\\x11'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"FSZIL": {"ttr": 34, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00X\\x00\\x880\\x7f\\x01\\x00&?\\x08H\\x00\\x19\\x00\\x18\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "2000-09-19T08:48:58", "lines": 25, "newlines": 24, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR DEFAULT(%@_)\n #  TYPE(INPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)\n !  TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) JUST(ASIS)\n |  AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n \\  TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n 05 TYPE(DATAOUT) INTENS(LOW) COLOR(GREEN)\n 0D TYPE(DATAOUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%------------------------- Full screen ZIL -------------------!FSMSG\n%ISPF COMMAND ===>#ZCMD                                       %SCROLL ===>_AMT @\n!MOREMSG\n%===>#IN\n\n\n%----+----1----+----2----+----3----+----4----+----5----+----6----+----7----+---\\\n|FSDATA                                                                        |\n)INIT\n .HELP = TFSZIL\n)REINIT\n REFRESH(FSMSG,ZCMD,AMT,MOREMSG,IN,FSDATA)\n)PROC\n &XCURSOR = .CURSOR\n &XCSRPOS = .CSRPOS\n &FSLVLIN = LVLINE(FSDATA)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TFSZIL": {"ttr": 36, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x00&?\\x01\\x00&?\\x08I\\x00%\\x00%\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-09-19T00:00:00", "modifydate": "2000-09-19T08:49:11", "lines": 37, "newlines": 37, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- Full Screen ZIL -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+This is an ISPF-based full-screen interface for the ZIL interpreter.\n\n To enter Lisp expressions, simply type them in the@second+input field\n next to the arrow.  The expressions will be evaluated and the results\n from them will be displayed in a scrollable format.\n\n To terminate this full-screen dialog, press the!&END+key, or type!END+on\n the%ISPF COMMAND+line (the@first+input field with an arrow).\n\n+The following topics will be presented in sequence or may be selected by\n entering the appropriate number in the%SELECTION ===>+field above:\n\n \\1%-?ISPF command line commands\n \\2%-?Scrolling\n)INIT\n &END = PFK(END)\n IF (&END = &Z)\n  &END = END\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,TZFSEX1\n                    2,TZFSEX2\n                    *,?\n              )\n)END\n A modified version of TZFSEXEC.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZIL": {"ttr": 38, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00R\\x00\\x87'\\x1f\\x01\\x00$?\\x14T\\x00&\\x00$\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:54:52", "lines": 38, "newlines": 36, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL PRIMARY OPTION MENU -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n#The following topics are presented in sequence, or may be selected by number:\n\n   %1\\ NEWS       $- Display latest ZIL news\n   %2\\ EDIT       $- Edit a ZIL source program or function\n   %3\\ LISP       $- Invoke the ZIL interpreter\n   %4\\ FOREGROUND $- Compile/assemble/link ZIL program/function online\n   %5\\ BATCH      $- Submit JCL to compile/assemble/link ZIL program/function\n   %6\\ TSO        $- Invoke compiled ZIL program\n   %7\\ TEST       $- Test the ZIL compiler\n   %8\\ RELINK     $- Link new copy of function into existing program\n   %9\\ ASSEMBLE   $- Assemble ZIL machine language function\n)INIT\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,TXZIL1\n                2,TXZIL2\n                3,TXZIL3\n                4,TXZIL4\n                5,TXZIL5\n                6,TXZIL6\n                7,TXZIL7\n                8,TXZIL8\n                9,TXZIL9\n                *,'?'\n                )\n &UP=ISR00003\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILB": {"ttr": 40, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00U\\x00\\x87'\\x1f\\x01\\x00$?\\x14T\\x00\\x16\\x00\\x15\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:54:55", "lines": 22, "newlines": 21, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILER OPTIONS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n%Show compiler transforms? Y or N\n+\n!Y+specifies that you wish to see the output of the source transformation phase\n of the ZIL compiler.  !N+specifies that you do not.  (The compiler invokes the\n transformations regardless of what you specify here.)\n\n\\                                   (continued)\n)INIT\n &ZCONT = TXZILD\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILC": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00Y\\x00\\x87'\\x1f\\x01\\x00$?\\x14T\\x00#\\x00#\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:54:59", "lines": 35, "newlines": 35, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILER OPTIONS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n%Show TRNLIST? Y or N\n!Y+specifies that you wish to see the output of the source transformation phase\n of the ZIL compiler.  !N+specifies that you do not.  (The compiler invokes the\n transformations regardless of what you specify here.)\n\n%Show ZILLIST? Y or N\n!Y+specifies that you wish to browse the ZIL compiler listing. !N+specifies\n that you do not.  If the compilation fails, the listing will be browsed\n regardless.\n\n%Show ASMLIST? Y or N\n!Y+specifies that you wish to browse the listing produced by the assembler when\n the output of the ZIL compiler is assembled.  !N+specifies that you do not.\n If the assembly fails, the listing will be browsed regardless.\n\n%Show LNKLIST? Y or N\n!Y+specifies that you wish to browse the linkage editor listing.  !N+specifies\n that you do not. If the linkedit fails, the listing will be browsed regardless.\n\n\\                                   (continued)\n)INIT\n &ZCONT = TXZILD\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILD": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x00\\x03\\x00\\x87'\\x1f\\x01\\x00$?\\x14U\\x00\\x1d\\x00\\x1b\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.06", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:55:03", "lines": 29, "newlines": 27, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILER OPTIONS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n%Overriding name\n\n+You may specify a name for the ZIL function, program or module being compiled\n that differs from the name of the PDS member you are compiling.  If you leave\n this field blank, the PDS member name becomes the name of the entity being\n compiled.  The name of the load module created by the compilation process is\n the value of this field (or the PDS member name if this field is left blank).\n+\n%Debug? Y or N\n\n!Y+requests that the compiler run in#\"debug mode\". +The output from the\n compiler will be the same, but a great deal of internal information will be\n dumped to the compilation listing.\n\n\\                             (End of compiler options)\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZILF": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x06\\x00\\x86\\x15o\\x01\\x00$?\\x14U\\x00\\x13\\x00\\x1f\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1986-06-05T00:00:00", "modifydate": "2000-08-30T14:55:06", "lines": 19, "newlines": 31, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - FUNCTION LOADING -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n\n Files containing interpretive Lisp function definitions may be accessed\n under the interpreter by loading them via the ZIL (LOAD) function.\n You can include this in your INIT file, or you can put your function\n definitions into your INIT file directly.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILJ": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00H\\x00\\x87\\'/\\x01\\x00$?\\x15\\x00\\x00\\x1f\\x00\"\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1987-09-29T00:00:00", "modifydate": "2000-08-30T15:00:48", "lines": 31, "newlines": 34, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n @ TYPE(TEXT) INTENS(LOW)  COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - RUN THE INTERPRETER IN BATCH -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n#To run the ZIL interpreter in batch, you can use the following JCL:\n\n\\   // ------- JOB statement ---\n%   //PROCLIB  DD   DISP=SHR,DSN=PROGLIB.ZIL.CNTL\n%   //MYRUN    EXEC XZIL       @(see optional parameters below)\n%   //SYSIN    DD *\n\\    (include your Lisp input here)\n%   /*\n\n    You can specify the following optional parameters on the EXEC statement:\n\n%   INIT=       $ (name of INIT file)\n%   CSSIZE=     $ (nnnM, nnnK or nnn)\n%   PDSIZE=     $ (nnnM, nnnK or nnn)\n%   VSSIZE=     $ (nnnM, nnnK or nnn)\n%   SUBRLIB=    $ (load library containing compiled user functions)\n%   SYS=        $ (SYS=N for new system, SYS=O for old system)\n#\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILL": {"ttr": 265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x00\\x88\\x14\\x7f\\x01\\x00$?\\x14U\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-05-26T00:00:00", "modifydate": "2000-08-30T14:55:13", "lines": 29, "newlines": 29, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - MEMBER SELECTION LIST -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n\n If the@OPTION+field is left blank, a member selection list is displayed for\n the specified source library name.  You may select members for compilation or\n editing by entering the appropriate code in the selection field:\n\n  !F$to compile a function\n  !M$to compile a module\n  !P$to compile a program\n  !E$to edit the source member\n+\n You may specify a different name for the resulting load module by\n entering the alternate name in the \"LOADMOD\" field next to the member name.\n Any value that was present in the@OVERRIDING NAME+field on the XZIL option 4\n panel is ignored when the member list is used.\n\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZILM": {"ttr": 267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x17\\x00\\x87'\\x1f\\x01\\x00$?\\x14U\\x00\\x18\\x00\\x1c\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:55:17", "lines": 24, "newlines": 28, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILATION MACROS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n You may specify up to four@compile-time macro files+(or none at all)\n if you wish to make your own macro definitions available when\n compiling a ZIL\\function+or\\program#(options 4, 5).\n\n+Macro files must be sequential data sets or PDS members of\n interpretive LISP source code.\n\n Macro definitions may be accessed under the interpreter by loading them\n via the ZIL (LOAD) function.  You can include this in your INIT file,\n or you can put your macro definitions into your INIT file directly.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILO": {"ttr": 269, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\'\\x00\\x87\\'\\x1f\\x01\\x00$?\\x15P\\x00!\\x00\"\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T15:50:27", "lines": 33, "newlines": 34, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - \"DRIBBLE\" FEATURE -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n\n The \"dribble\" facility, or session output recording, is a means of\n recording all terminal input and output during a ZIL session.\n\n You may select this function by entering the name of a sequential dataset or\n a SYSOUT class to hold the \"dribble\" output.  If &SYSTCLSH is specified,\n+the output will be placed on the held queue.\n\n If neither is specified, no \"dribbling\" will take place.  This is the default.\n\n If a data set is specified, it may or may not currently exist; but if it\n does, it must be sequential with fixed-length 80-byte records.  The \"dribble\"\n file is allocated as MOD; this means that session output will be written at\n the end of any existing data.  If you wish to start a fresh \"dribble\" file,\n you may delete the data set beforehand, or you may use EDIT to empty it.\n\n+You must NOT specify a partitioned data set for this function.\n)INIT\n&MSGCLASS=H\n&SYSTCLSH = 'sysout class &MSGCLASS'\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZILP": {"ttr": 271, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x00\\x88\\x07\\x8f\\x01\\x00$?\\x14U\\x00 \\x00 \\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-03-18T00:00:00", "modifydate": "2000-08-30T14:55:25", "lines": 32, "newlines": 32, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILATION OPTIONS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n When you compile, you must specify whether you are compiling a\n%function,%program+or%module.+\n\n A%function+is a single LISP function definition, which may be brought into a\n ZIL session via the autoloading process automatically when the function is\n referenced by name, or may be linkedited with a ZIL%program.+ The input source\n to be compiled must contain a definition for the function of that name.\n\n A%module+is a compiled LISP load module which is \"loaded\" by executing it by\n name as a function of no arguments (it will be automatically loaded via the\n autoloading process).  When this is done, all of the code in the module,\n including function definitions, variable definitions and executable\n expressions, gets loaded into the ZIL system in compiled format.  There cannot\n be a function of the same name as the name you are giving the input source as\n a module.\n\n\\ ` ` -- continued -- ` `\n)INIT\n)PROC\n &ZCONT = TXZILP1\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZILP1": {"ttr": 273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00'\\x00\\x88\\x07\\x8f\\x01\\x00$?\\x15S\\x00\\x1f\\x00#\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1988-03-18T00:00:00", "modifydate": "2000-08-30T15:53:27", "lines": 31, "newlines": 35, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - COMPILATION OPTIONS (CONTINUED) -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n A%program+is a completely linked load module which does\\not+get brought\n in under the ZIL interpreter.  Rather, it is executed as a program at\n the operating system level (e.g. in JCL via the@// EXEC+statement, or\n under TSO via the@CALL+or@EXECPGM+command).\n\n In order to execute a%program,+the ZIL system library must be present\n as a STEPLIB, TASKLIB or equivalent.  This library is normally\n 'PROGLIB.ZIL.LOAD'.\n\n The ZIL interpreter and compiler are examples of ZIL%programs.+\n\n There cannot be a function definition with the same name as the name you are\n giving the input source program you are compiling.\n\n%Note:+It is\\not+recommended that you create ZIL%programs,+since you will not\n       benefit from maintenance to ZIL system functions, and you may even end\n       up with incompatible code.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILR": {"ttr": 275, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00)\\x00\\x87\\'\\x1f\\x01\\x00$?\\x15U\\x00\"\\x00!\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T15:55:29", "lines": 34, "newlines": 33, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ~ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - RUN-TIME OPTIONS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD\n+\n The following options affect the execution of ZIL-based programs with respect\n to virtual storage usage.  All default to values selected by the current ZIL\n implementation.  For more information, see member#$PARM+of the documentation\n dataset, 'PROGLIB.ZIL.TEXT'.\n+\n The values may be specified as!nnnM, nnnK,+or!nnn,+or you may leave them blank\n (DEFAULT is equivalent to blank).\n\n%ACSIZE+-~Size of initially active CONS space in bytes.\n%CSSIZE+-~Total allocated CONS space in bytes.  Limits expansion of ACSIZE.\n%PDSIZE+-~Size of the control stack in bytes.\n%VSSIZE+-~Size of one area of vector/string space in bytes.\n\n+The following additional option may appear on the panel:\n\n%SYSTEM#(NEW, OLD or blank)\n\n\\SYSTEM+should be left blank@unless+you are running an alternate (test) version\n of ZIL, for which you would specify!NEW,+or a backup version, for which you\n would specify!OLD.+\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILS": {"ttr": 277, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x006\\x00\\x86\\x15o\\x01\\x00$?\\x14U\\x00\\x1e\\x00\\x1d\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1986-06-05T00:00:00", "modifydate": "2000-08-30T14:55:36", "lines": 30, "newlines": 29, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - SUBROUTINE LIBRARIES -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n\n You may specify up to four@subroutine library names+(or none at all)\n if you wish to:\n\n$  Access your own compiled functions/modules under the\\interpreter#(option 3).\n$  Access your own compiled functions/modules at\\compile time#(options 4, 5).\n$  Include your own compiled functions/modules in a ZIL\\program#(options 4, 5).\n$  Run programs that load, execute or evaluate compiled functions/modules.\n\n+Subroutine libraries are not used to resolve external references when you\n compile a ZIL%function+or%module.+ Functions and modules are always linkedited\n with the NCAL parameter, so that the interpreter can resolve@all+function\n references completely dynamically.\n\n\\ ` ` -- continued -- ` `\n)INIT\n &ZCONT = TXZILS1\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZILS1": {"ttr": 279, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x001\\x00\\x88\\x19\\x7f\\x01\\x00$?\\x15X\\x00\"\\x00\\x1f\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1988-07-15T00:00:00", "modifydate": "2000-08-30T15:58:31", "lines": 34, "newlines": 31, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - SUBROUTINE LIBRARIES (continued) -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n` ` %Notes: ` `\n\n  #ZIL option 3 will search your subroutine libraries for the ZIL\n   interpreter, program name ZILIN.  Thus, you can run an alternate\n   version of the interpreter using this facility.\n\n  #ZIL options 4 and 5 will search your subroutine libraries at ZIL\n   compilation time for any compiled functions or modules which may be\n   called out by compile-time entities (macro expanders, stuff in\n   (EVAL-WHEN (COMPILE) ...) forms, etc.).  It will also search there\n   for the compiler, program name ZILCO.  Thus, you can run an alternate\n   version of the compiler using this facility.\n\n  #When a PROGRAM is being linkedited, the\\target load library#is always\n   specified as the FIRST library in the search sequence for resolving\n   external references,@AHEAD#of all subroutine libraries specified.\n\n  #The ZIL foreground options (3, 4 and 7) support the specification of\n   additional subroutine libraries only if you have the!EXECPGM+TSO command\n   (or an equivalent utility) available at your site.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZIL1": {"ttr": 281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x04\\x00\\x87'\\x1f\\x01\\x00$?\\x16\\x00\\x00\\x14\\x00\\x15\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T16:00:04", "lines": 20, "newlines": 21, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - DISPLAY NEWS -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n   This option browses member#$NEWS+of the ZIL documentation.\n\n   This member will be periodically updated with information about\n   updates, additions and changes to the ZIL system.  The entries will be\n   in chronological order, the latest first.\n\n  %Note:\\You can also access ZIL news via the (NEWS) function under ZIL.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZIL2": {"ttr": 283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\"\\x00\\x87\\'\\x1f\\x01\\x00$?\\x16\\x15\\x00\\x1d\\x00\\x1e\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T16:15:22", "lines": 29, "newlines": 30, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - EDIT LISP SOURCE -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n   Use this option to@EDIT+a ZIL source program or function.\n\n   Your source#must+reside in a partitioned data set.\n\n  @Do not+enter a member name on the \"source library name\" line; enter\n   it where it says\\MEMBER NAME.+ You may create a program, a module or\n   a function; the member name will become the program, module or\n   function name (see options 4 and 5).\n\n   The source library may contain fixed-length or varying-length records,\n   numbered or unnumbered.  However, unnumbered varying-length records\n   are recommended (NUMBER and CAPS mode should be set OFF).\n\n   To create a source library, use TSO ALLOCATE or ISPF option 3.2.\n\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZIL3": {"ttr": 285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00U\\x00\\x85)O\\x01\\x00$?\\x14U\\x00(\\x00$\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1985-10-21T00:00:00", "modifydate": "2000-08-30T14:55:55", "lines": 40, "newlines": 36, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - RUN THE INTERPRETER -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n This option runs the ZIL@interpreter. +The interpreter is the part of a LISP\n system with which most users are familiar.  You can run functions without\n compiling them, and enter LISP expressions to be evaluated, to see whether\n they work in the manner that you intended.  If you desire the increased speed\n and efficiency of compiled code, you may compile your functions and run them\n under the interpreter as well.\n\n You may specify the name of an@INIT file+which you have created to start up\n your interpretive LISP environment;  this must be a sequential data set or a\n member of a PDS containing LISP source code, which is run interpretively.\n\n#The following topics will be presented only if selected by number:\n\n \\1%-$Loading compiled code from subroutine libraries\n \\2%-$Loading interpretive function and macro definitions\n \\3%-$Specifying session output recording (\"dribble\" feature)\n \\4%-$Run-time options\n \\5%-$How to run the ZIL interpreter in batch\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,*TXZILS\n                    2,*TXZILF\n                    3,*TXZILO\n                    4,*TXZILR\n                    5,*TXZILJ\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZIL4": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\t\\x00\\x88\\x14\\x7f\\x01\\x00$?\\x16\\x07\\x00.\\x00.\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1988-05-26T00:00:00", "modifydate": "2000-08-30T16:07:09", "lines": 46, "newlines": 46, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n ~ TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - FOREGROUND COMPILE -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n This option compiles, assembles and links a ZIL function, program or module.\n+\n Your source@must+reside in a partitioned data set. @Do not+enter a member name\n on the \"source library name\" line; enter it where it says\\MEMBER NAME.+\n You may compile the source as a function, a program or a module;\n for more information, see member#$COMPILE+of 'PROGLIB.ZIL.TEXT'.\n\n The\\LOAD LIBRARY NAME+field contains the name of the load library into which\n the function/program/module will be linked; it will have the same name as the\n member name being compiled (unless you have specified a name in the\n\\Overriding name+field, in which case that becomes the load module name).\n To create a load library, use the TSO ALLOCATE command or ISPF option 3.2.\n\n~The following topics will be presented only if selected by number:\n   \\1%-?FUNCTION, PROGRAM, or MODULE option\n   \\2%-?Specifying subroutine library names\n   \\3%-?Specifying compile-time macro file names\n   \\4%-?Compiler options\n   \\5%-?ZIL run-time options\n   \\6%-?Member selection list\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,*TXZILP\n                    2,*TXZILS\n                    3,*TXZILM\n                    4,*TXZILC\n                    5,*TXZILR\n                    6,*TXZILL\n                    *,?\n              )\n)END\n Change activity:\n 05/26/88 - SEB1525 - Member list support.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZIL5": {"ttr": 515, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\t\\x00\\x17\\x00\\x86\\x15o\\x01\\x00$?\\x16\\t\\x00,\\x00'\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.09", "flags": 0, "createdate": "1986-06-05T00:00:00", "modifydate": "2000-08-30T16:09:17", "lines": 44, "newlines": 39, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n ~ TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - BATCH COMPILE -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n This option creates JCL to compile, assemble and link ZIL source code.\n It places you in EDIT on the JCL.  Enter!SUBMIT+to submit the job.\n\n Your source@must+reside in a partitioned data set. @Do not+enter a member name\n on the \"source library name\" line; enter it where it says\\MEMBER NAME.+\n You may compile the source as a function, a program or a module;\n see member#$COMPILE+of 'PROGLIB.ZIL.TEXT' for more information.\n\n The\\LOAD LIBRARY NAME+field contains the name of the load library into which\n the function/program/module will be linked; it will have the same name as the\n member name being compiled (unless you have specified a name in the\n\\Overriding name+field, in which case that becomes the load module name).\n\n To create a load library, use the TSO ALLOCATE command or ISPF option 3.2.\n\n~The following topics will be presented only if selected by number:\n   \\1%-?FUNCTION, PROGRAM, or MODULE option\n   \\2%-?Specifying subroutine library names\n   \\3%-?Specifying compile-time macro file names\n   \\4%-?Compiler options\n   \\5%-?ZIL run-time options\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,*TXZILP\n                    2,*TXZILS\n                    3,*TXZILM\n                    4,*TXZILB\n                    5,*TXZILR\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZIL6": {"ttr": 517, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00!\\x00\\x87'\\x1f\\x01\\x00$?\\x16\\x11\\x00 \\x00\\x1e\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T16:11:21", "lines": 32, "newlines": 30, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - RUN COMPILED PROGRAM -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n     This option runs a compiled LISP@program.+\n\n     It will allocate DD names ZILI and ZILO to your terminal, and execute the\n     program from the run library which you have specified, while including\n     that library and the ZIL load library in the library setup for the\n     duration of that call.\n\n     If you need additional run libraries, you should preallocate them via\n     the TSO@ALLOCATE+command to ddname#ZILLIB.+  However, this works only\n     if the!EXECPGM+TSO command (or an equivalent utility) is available.\n\n The following topics will be presented only if selected by number:\n\n \\1%-$Run-time options\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,*TXZILR\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZIL7": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x13\\x00\\x86\\x15o\\x01\\x00$?\\x16\\x12\\x00+\\x00(\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1986-06-05T00:00:00", "modifydate": "2000-08-30T16:12:13", "lines": 43, "newlines": 40, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n ~ TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - TEST COMPILER -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n This option runs the ZIL compiler in foreground, without performing an\n assembly or link.  The generated source code, rather than being saved in a\n dataset, is sent to your TSO terminal.\n\n Your source@must+reside in a partitioned data set. @Do not+enter a member name\n on the \"source library name\" line; enter it where it says\\MEMBER NAME.+\n You may compile the source as a function, a program or a module;\n for more information, see member#$COMPILE+of 'PROGLIB.ZIL.TEXT'.\n\n The source member name is required, but you need not specify a source library\n name.  If you omit the source library and the macro library names, the\n compiler will obtain its input from your TSO terminal.\n\n The Lisp form@(END)+will signal end of input to the compiler.\n\n~The following topics will be presented only if selected by number:\n\n   \\1%-?Specifying subroutine library names\n   \\2%-?Specifying macro library names\n   \\3%-?Compiler options\n   \\4%-?ZIL run-time options\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,*TXZILS\n                    2,*TXZILM\n                    3,*TXZILD\n                    4,*TXZILR\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TXZIL8": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x12\\x00\\x87'\\x1f\\x01\\x00$?\\x14V\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1987-09-28T00:00:00", "modifydate": "2000-08-30T14:56:12", "lines": 30, "newlines": 30, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - RELINK FUNCTION INTO PROGRAM -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n     Use this option to relink a recompiled ZIL function into a compiled\n     ZIL program, without having to recompile the entire program.\n\n     The compiled@function+load module specified by\\FUNCTION NAME+will be\n     included from the library specified by\\INCLUDED FROM LIBRARY+when\n     the compiled@program+load module specified by\\MAIN PROGRAM NAME+is\n     relinked in the load library specified by\\LOAD MODULE LIBRARY.+\n\n    @Do not+specify a function name as the main program name.  Doing it\n     would prevent you from being able to access the correct versions of\n     functions under the interpreter.\n\n     The load library must already contain the program which is to be\n     relinked using the new version of the function.  If it does not,\n     you may copy in the program via ISPF option#3.3.\n\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TXZIL9": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00W\\x00\\x88\\x14_\\x01\\x00$?\\x16\\t\\x00%\\x00%\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1988-05-24T00:00:00", "modifydate": "2000-08-30T16:09:57", "lines": 37, "newlines": 37, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n ~ TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZIL - FOREGROUND ASSEMBLY `-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n+\n This option assembles and links a ZIL function written in assembler language.\n+\n Your source@must+reside in a partitioned data set. @Do not+enter a member name\n on the \"source library name\" line; enter it where it says\\MEMBER NAME.+\n\n The\\LOAD LIBRARY NAME+field contains the name of the load library into which\n the assembler function will be linked; it will have the same name as the\n member name being assembled (unless you have specified a name in the\n\\Overriding name+field, in which case that becomes the load module name).\n\n To create a load library, use the TSO ALLOCATE command or ISPF option 3.2.\n\n You may leave the member name field blank or specify a pattern containing an\n asterisk (*), in which case a member list will be displayed.  You can select\n members for assembly (A) or edit (E) from this member list.  Overriding names\n for the load modules can be specified by entering them in the \"LOADMOD\" field\n on the member list; the value in the\\Overriding name+panel field is ignored.\n)INIT\n)PROC\n)END\n\n Change activity:\n\n 05/24/88 - SEB1525 - Added member list support.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TZFSEXEC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x081\\x00$\\x00$\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:31:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- Full Screen ZFSEXEC -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+This is an ISPF-based full-screen interface for ZFSEXEC.\n\n To enter ZFSEXEC expressions, simply type them in the@second+input field\n next to the arrow.  The expressions will be processed and the output\n from them will be displayed in a scrollable format.\n\n To terminate this full-screen dialog, press the!&END+key, or type!END+on\n the%ISPF COMMAND+line (the@first+input field with an arrow).\n\n+The following topics will be presented in sequence or may be selected by\n entering the appropriate number in the%SELECTION ===>+field above:\n\n \\1%-?ISPF command line commands\n \\2%-?Scrolling\n)INIT\n &END = PFK(END)\n IF (&END = &Z)\n  &END = END\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    1,TZFSEX1\n                    2,TZFSEX2\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TZFSEXF": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00A\\x00\\x880\\x7f\\x01\\x00$?\\x16\\x12\\x00'\\x00'\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "2000-08-30T16:12:41", "lines": 39, "newlines": 39, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZFSEXEC - FIND Command -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+The%FIND+command (or%F+) is used to locate a%text string+in the\n displayed full-screen scrollable output.\n\n+You may use the%RFIND+command (&OR%&RFIN+) to repeat a FIND operation.\n\n#Syntax: !FIND string/* NEXT/PREV/FIRST/LAST\n\n@string+is optional and defaults to@*+(meaning last-used string).\n@NEXT/PREV/FIRST/LAST+defaults to@NEXT+.  Case is ignored.\n\n If string contains embedded blanks or double quotes, enclose it in\n double quotes and place backslashes before \"s and \\', just as you\n would type a Lisp string.\n\n?Examples:\n\n!       F X             +finds the string X in the output display.\n!       FIND * PREV     +finds X again, but the previous occurrence.\n!       FIND \"sqrt 2\"   +scrolls to the bottom of the output display.\n!       FIND \"\\\"foo\\\"\"  +finds the characters \"foo\" or \"FOO\"\n)INIT\n &RFIN = PFK(RFIND)\n IF (&RFIN \u00ac= &Z)\n  &OR = 'or'\n ELSE\n  &RFIN = &Z\n  &OR = '(no PFK defined)'\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TZFSEXL": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x085\\x00\\x16\\x00\\x16\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:35:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZFSEXEC - LOCATE Command -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+The%LOCATE+command (or%LOC+or%L+) scrolls the output display to the\n specified relative line number.\n\n?Examples:\n\n!       L 0             +scrolls to the top of the output display.\n!       LOC 12          +scrolls to line 12 of the output display.\n!       LOCATE 99999    +scrolls to the bottom of the output display.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TZFSEXS": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x086\\x00!\\x00!\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:36:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZFSEXEC - SAVE Command -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+The%SAVE+command is used to copy the entire scrollable display stream\n into a data set.\n\n#Syntax: !SAVE dsname OLD/MOD\n\n@dsname+is required and must be a TSO-format data set name\n(no double quotes - TSO prefix assumed unless single quotes are used).\n\n@OLD/MOD+defaults to@OLD.\n   #OLD - +write over the data set if it already exists.\n   #MOD - +add data to the end of the data set if it exists.\n\n   #MOD+may not be specified for members of partitioned data sets (PDS).\n\n?Examples:\n\n!    SAVE foo.bar\n+    saves entire output stream into '&ZPREFIX..FOO.BAR'.\n!    SAVE 'SYS1.MY.DATA' MOD\n+    writes entire output stream at the end of 'SYS1.MY.DATA'.\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TZFSEX1": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x082\\x00'\\x00'\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:32:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZFSEXEC - ISPF Command Line Commands -`-`- TUTORIAL\n%SELECTION ===>_ZCMD                                                           +\n%\n+The line marked%ISPF COMMAND ===>+near the top of your display screen\n is\\not+used to enter input expressions.  Instead, you enter commands\n that process the ISPF full screen interface.\n\n+If you are familiar with ISPF, all the \"ISPF commands\" are valid from\n this command line.  In addition, there are commands that you use that\n are unique to this full screen interface.\n\n+The following topics will be presented in sequence or may be selected by\n entering a one-letter code in the%SELECTION ===>+field above:\n\n \\F%-?The FIND command\n \\L%-?The LOCATE command\n \\S%-?The SAVE command\n\n+The following topics will be presented only if selected by letter:\n\n \\C%-?ISPF commands\n)INIT\n)PROC\n &ZSEL = TRANS(&ZCMD\n                    F,TZFSEXF\n                    L,TZFSEXL\n                    S,TZFSEXS\n                    C,*ISP01305\n                    *,?\n              )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TZFSEX2": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x084\\x00;\\x00;\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:34:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n ? TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%TUTORIAL -`-`- ZFSEXEC - Scrolling -`-`- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+Scrolling in ZFSEXEC is similar to scrolling in ISPF edit or browse.\n You may enter scrolling commands -%UP, DOWN, LEFT, RIGHT+- on the ISPF command\n line, or you may press one of the following PF keys:\n\n%           &UPX  &DOX  &LEX  &RIX\n+\n The scroll amount is displayed in the upper right hand corner of the ZFSEXEC\n screen.  It applies to the%UP+and%DOWN+scrolling commands only.\n\n The%LEFT+and%RIGHT+scroll commands have a special meaning in ZFSEXEC.\n Pressing the%&LEF+key retrieves the previous input expression and places it on\n the input line (it also scrolls the output display to that expression).\n Each time you press the%&LEF+key, ZFSEXEC backs up one remembered input line.\n\n Pressing the%&RIG+key returns to the input line following the one last\n retrieved by the%&LEF+key and scrolls the output display accordingly.  If you\n haven't pressed the%&LEF+key, the%&RIG+key just positions you to the latest\n input line - a convenient way to reorient yourself after scrolling up or down.\n\n\\-`-`-continued-`-`-\n)INIT\n &UPP = PFK(UP)\n &DOW = PFK(DOWN)\n &LEF = PFK(LEFT)\n &RIG = PFK(RIGHT)\n &UPX = &Z\n &DOX = &Z\n &LEX = &Z\n &RIX = &Z\n IF (&UPP = &Z)\n  &UPP = UP\n ELSE\n  &UPX = '&UPP.(UP)'\n IF (&DOW = &Z)\n  &DOW = DOWN\n ELSE\n  &DOX = '&DOW.(DOWN)'\n IF (&LEF = &Z)\n  &LEF = LEFT\n ELSE\n  &LEX = '&LEF.(LEFT)'\n IF (&RIG = &Z)\n  &RIG = RIGHT\n ELSE\n  &RIX = '&RIG.(RIGHT)'\n)PROC\n &ZCONT = ISP01420\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZCHMIG": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00F\\x01\\x00$O\\x01\\x00$O\\t)\\x00\\x19\\x00\\x19\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-08-31T00:00:00", "modifydate": "2000-08-31T09:29:46", "lines": 25, "newlines": 25, "modlines": 0, "user": "SEB1525"}, "text": ")BODY EXPAND(//)\n%-/-/- HSM-MIGRATED DATASET -/-/-\n%COMMAND ===>_ZCMD\n+\n+\n+  Dataset%&MIGDSN\n+  has been%migrated+by HSM, and is currently not online.\n+\n+\n+    Press%ENTER+to%recall+the dataset and resume processing.\n+\n+    Press%END+to return to the previous panel without recalling\n+              or otherwise accessing the dataset.\n+\n+\n+%Note:+If you wish to recall the dataset without waiting for it,\n+       type\n+\n+         %TSO HRECALL &MIGDSN\n+\n+       on the COMMAND line and press ENTER.\n)INIT\n)PROC\n  IF  (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x005\\x00\\x86\\x06?\\x01\\x00$?\\x14V\\x009\\x006\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1986-03-04T00:00:00", "modifydate": "2000-08-30T14:56:35", "lines": 57, "newlines": 54, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(BLUE) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL PRIMARY OPTION MENU  -`-`-\n%OPTION ===>_OPT\n+\n%         \u00ac ------------------------------------------------- %\n%         \u00ac|                                                 |%\n%         \u00ac| %ZIL - LISP on MVS - (c) 1987 C. S. Draper Lab.\u00ac|%\n%         \u00ac|                                                 |%\n%         \u00ac ------------------------------------------------- %\n+\n   %1\\ NEWS       $- Display latest ZIL news\n   %2\\ EDIT       $- Edit a ZIL source program or function\n   %3\\ LISP       $- Invoke the ZIL interpreter\n   %4\\ FOREGROUND $- Compile/assemble/link ZIL program/function online\n   %5\\ BATCH      $- Submit JCL to compile/assemble/link ZIL program/function\n   %6\\ TSO        $- Invoke compiled ZIL program\n   %7\\ TEST       $- Test the ZIL compiler\n   %8\\ RELINK     $- Link new copy of function into existing program\n   %9\\ ASSEMBLE   $- Assemble ZIL machine language function\n   %T\\ TUTORIAL   $- Display information about ZIL\n   %X\\ EXIT       $- Terminate this option.\n\n+Press!END+key to terminate ZIL option.\n)INIT\n   .HELP = TXZIL\n)PROC\n   &SEL = TRANS( TRUNC (&OPT,'.')\n                1 ,'CMD(XZIL1)        MODE(FSCR)'\n                1T,'CMD(XZIL1 XTRACE) MODE(LINE)'\n                2 ,'CMD(XZIL2)        MODE(FSCR)'\n                2T,'CMD(XZIL2 XTRACE) MODE(LINE)'\n                3 ,'CMD(XZIL3)        MODE(FSCR)'\n                3T,'CMD(XZIL3 XTRACE) MODE(LINE)'\n                4 ,'CMD(XZIL4)        MODE(FSCR)'\n                4T,'CMD(XZIL4 XTRACE) MODE(LINE)'\n                5 ,'CMD(XZIL5)        MODE(FSCR)'\n                5T,'CMD(XZIL5 XTRACE) MODE(LINE)'\n                6 ,'CMD(XZIL6)        MODE(FSCR)'\n                6T,'CMD(XZIL6 XTRACE) MODE(LINE)'\n                7 ,'CMD(XZIL7)        MODE(FSCR)'\n                7T,'CMD(XZIL7 XTRACE) MODE(LINE)'\n                8 ,'CMD(XZIL8)        MODE(FSCR)'\n                8T,'CMD(XZIL8 XTRACE) MODE(LINE)'\n                9 ,'CMD(XZIL9)        MODE(FSCR)'\n                9T,'CMD(XZIL9 XTRACE) MODE(LINE)'\n                T ,'PGM(ISPTUTOR) PARM(TXZIL)'\n                X ,'EXIT'\n                * ,'?'\n                )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL2": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00D\\x00\\x87&\\x8f\\x01\\x00$?\\x16\\x13\\x00!\\x00!\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1987-09-25T00:00:00", "modifydate": "2000-08-30T16:13:44", "lines": 33, "newlines": 33, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - EDIT LISP SOURCE  -`-`-\n%COMMAND ===>_ZCMD\n+\n\\  MEMBER NAME          %===>_XZILMEM # (Blank for member selection list)\n\n\\  SOURCE LIBRARY NAME  %===>_XZILSRC                              +\n\n\n+  Your source@must+reside in a partitioned data set.\n\n   Do@not+enter a member name on the \"source library name\" line; enter it\n   on the line provided.  You may create a@program,+a@module+or a@function.\n\n\n  +Press!END+key to return to the previous option menu.\n)INIT\n   .HELP = TXZIL2\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n VER(&XZILSRC NB DSNAME)\n VER(&XZILMEM    NAME)\n &TEMP = TRUNC(&XZILSRC,'(')\n IF (&TEMP \u00ac= '&XZILSRC')  .MSG = XZIL001\n VPUT (XZILMEM XZILSRC) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XZIL3": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00G\\x00\\x85)O\\x01\\x00$?\\x16\\x16\\x00g\\x00q\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1985-10-21T00:00:00", "modifydate": "2000-08-30T16:16:47", "lines": 103, "newlines": 113, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - RUN THE INTERPRETER  -`-`-\n%COMMAND ===>_ZCMD\n+\n@To edit a data set, type!EDIT@on the command line and move cursor to data set.\n+\n\\  \"INIT FILE\"#(optional)    %===>_XZILINIT\n+\n\\  COMPILED CODE LIBRARIES   %===>_XZILSUB1                             +\n#  (Must be load module      %===>_XZILSUB2                             +\n#   PDS libraries - don't    %===>_XZILSUB3                             +\n#   specify member names)    %===>_XZILSUB4                             +\n\n\\  SESSION OUTPUT RECORDING (\"Dribble\" file - leave both blank if not desired)\n\n$  Sequential dataset name   %===>_XZILSODS                             +\n$  Sysout class (&HELDIFSC)  %===>_Z+\n\n\\  Options: #ACSIZE_XZILACSZ#CSSIZE_XZILCSSZ#PDSIZE_XZILPDSZ#VSSIZE_XZILVSSZ+\n\\  SYSTEM#(NEW, OLD or blank)%===>_Z  +                                 +\n+\n+Press!END+key to return to the previous option menu.\n)INIT\n .ZVARS = '(XZILSOSC XZILSYS)'\n .HELP = TXZIL3\n &MSGCLASS=H\n &HELDIFSC = 'held if &MSGCLASS'\n IF (&XZILACSZ = &Z) &XZILACSZ = DEFAULT\n IF (&XZILCSSZ = &Z) &XZILCSSZ = DEFAULT\n IF (&XZILPDSZ = &Z) &XZILPDSZ = DEFAULT\n IF (&XZILVSSZ = &Z) &XZILVSSZ = DEFAULT\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n VER(&ZCMD LIST E,ED,EDI,EDIT,MSG = ISPZ001)\n IF (&ZCMD \u00ac= '')\n  IF (.CURSOR \u00ac= XZILINIT,XZILSODS)\n   &ZEDSMSG = 'Invalid cursor position'\n   &ZEDLMSG = 'The cursor was not at a valid data set name for editing.'\n   .CURSOR = .CURSOR /* I can't believe I have to include this line!!!\n   .MSG = ISRZ001\n  &XZILCUR = .CURSOR\n VER(&XZILINIT DSNAME)\n VER(&XZILSUB1 DSNAME)\n VER(&XZILSUB2 DSNAME)\n VER(&XZILSUB3 DSNAME)\n VER(&XZILSUB4 DSNAME)\n VER(&XZILSODS DSNAME)\n VER(&XZILSOSC ALPHA)\n IF (&XZILSODS \u00ac= &Z)\n  IF (&XZILSOSC \u00ac= &Z)\n   .CURSOR = XZILSODS\n   &ZEDSMSG = 'Conflicting parameters'\n   &ZEDLMSG = 'Both sequential dsname and sysout class may not be selected.'\n   .MSG = ISRZ001\n &TEMP = TRUNC(&XZILSUB1,'(')\n IF (&TEMP \u00ac= '&XZILSUB1')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB2,'(')\n IF (&TEMP \u00ac= '&XZILSUB2')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB3,'(')\n IF (&TEMP \u00ac= '&XZILSUB3')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB4,'(')\n IF (&TEMP \u00ac= '&XZILSUB4')  .MSG = XZIL001\n IF (&XZILINIT \u00ac= &Z)\n  &TEMP = TRUNC(&XZILINIT,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILINIT = '''&ZPREFIX..&XZILINIT'''\n IF (&XZILSUB1 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB1,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB1 = '''&ZPREFIX..&XZILSUB1'''\n IF (&XZILSUB2 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB2,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB2 = '''&ZPREFIX..&XZILSUB2'''\n IF (&XZILSUB3 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB3,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB3 = '''&ZPREFIX..&XZILSUB3'''\n IF (&XZILSUB4 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB4,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB4 = '''&ZPREFIX..&XZILSUB4'''\n IF (&XZILSODS \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSODS,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSODS = '''&ZPREFIX..&XZILSODS'''\n IF (&XZILACSZ = DEFAULT) &XZILACSZ = &Z\n IF (&XZILCSSZ = DEFAULT) &XZILCSSZ = &Z\n IF (&XZILPDSZ = DEFAULT) &XZILPDSZ = &Z\n IF (&XZILVSSZ = DEFAULT) &XZILVSSZ = &Z\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n VPUT (XZILINIT XZILSODS XZILSYS\n       XZILSUB1 XZILSUB2 XZILSUB3 XZILSUB4\n       XZILACSZ XZILCSSZ XZILPDSZ XZILVSSZ) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XZIL4": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x05\\x00\\x88\\x14\\x7f\\x01\\x00$?\\x14W\\x00c\\x00c\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1988-05-26T00:00:00", "modifydate": "2000-08-30T14:57:05", "lines": 99, "newlines": 99, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - FOREGROUND COMPILE  -`-`-\n%OPTION ===>_XZILSEL\n+\n+Option: @F+function,@P+program,@M+module,@E+edit,@blank+member selection list\n+\n\\  LISP SOURCE MEMBER NAME   %===>_XZILMEM %Overriding name%===>_XZILNAM +\n\\  LISP SOURCE LIBRARY (PDS) %===>_XZILSRC                              +\n\\  TARGET LOAD LIBRARY       %===>_XZILLNK                              +\n\n\\  SUBROUTINE LIBRARY NAMES  %===>_XZILSUB1                             +\n                             %===>_XZILSUB2                             +\n#  (Must be load libraries   %===>_XZILSUB3                             +\n#   without member names)    %===>_XZILSUB4                             +\n\n\\  COMPILE-TIME MACRO FILES  %===>_XZILMAC1                             +\n                             %===>_XZILMAC2                             +\n#  (Must be sequential       %===>_XZILMAC3                             +\n#   datasets or PDS members) %===>_XZILMAC4                             +\n+\n\\  Options: #ACSIZE_XZILACSZ#CSSIZE_XZILCSSZ#PDSIZE_XZILPDSZ#VSSIZE_XZILVSSZ+\n$  Debug?_Z$Show TRNLIST?_Z$Show ZILLIST?_Z$Show ASMLIST?_Z$Show LNKLIST?_Z\\\n\n\\  SYSTEM#(NEW, OLD or blank)%===>_Z  #                                 #\n)INIT\n .ZVARS = '(XZILDBG XZILTRN XZILBZL XZILBAL XZILBLL XZILSYS)'\n .HELP = TXZIL4\n IF (&XZILSEL = ' ')\n  .CURSOR = XZILSEL\n IF (&XZILACSZ = &Z) &XZILACSZ = DEFAULT\n IF (&XZILCSSZ = &Z) &XZILCSSZ = DEFAULT\n IF (&XZILPDSZ = &Z) &XZILPDSZ = DEFAULT\n IF (&XZILVSSZ = &Z) &XZILVSSZ = DEFAULT\n IF (&XZILDBG = &Z) &XZILDBG = N\n IF (&XZILTRN = &Z) &XZILTRN = N\n IF (&XZILBZL = &Z) &XZILBZL = Y\n IF (&XZILBAL = &Z) &XZILBAL = Y\n IF (&XZILBLL = &Z) &XZILBLL = Y\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n VER(&XZILSEL LIST P,F,M,E)\n IF (&XZILSEL \u00ac= &Z)\n  VER(&XZILMEM NB NAME)\n ELSE\n  &TEMP = TRUNC(&XZILMEM,'*')\n  IF (&TEMP = '&XZILMEM')\n   VER(&XZILMEM NAME)\n VER(&XZILNAM NAME)\n VER(&XZILSRC NB DSNAME)\n VER(&XZILLNK NB DSNAME)\n VER(&XZILSUB1 DSNAME)\n VER(&XZILSUB2 DSNAME)\n VER(&XZILSUB3 DSNAME)\n VER(&XZILSUB4 DSNAME)\n VER(&XZILMAC1 DSNAME)\n VER(&XZILMAC2 DSNAME)\n VER(&XZILMAC3 DSNAME)\n VER(&XZILMAC4 DSNAME)\n &TEMP = TRUNC(&XZILSRC,'(')\n IF (&TEMP \u00ac= '&XZILSRC')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILLNK,'(')\n IF (&TEMP \u00ac= '&XZILLNK')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB1,'(')\n IF (&TEMP \u00ac= '&XZILSUB1')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB2,'(')\n IF (&TEMP \u00ac= '&XZILSUB2')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB3,'(')\n IF (&TEMP \u00ac= '&XZILSUB3')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB4,'(')\n IF (&TEMP \u00ac= '&XZILSUB4')  .MSG = XZIL001\n IF (&XZILACSZ = DEFAULT) &XZILACSZ = &Z\n IF (&XZILCSSZ = DEFAULT) &XZILCSSZ = &Z\n IF (&XZILPDSZ = DEFAULT) &XZILPDSZ = &Z\n IF (&XZILVSSZ = DEFAULT) &XZILVSSZ = &Z\n VER(&XZILDBG NB LIST Y,N)\n VER(&XZILBZL NB LIST Y,N)\n VER(&XZILTRN NB LIST Y,N)\n VER(&XZILBAL NB LIST Y,N)\n VER(&XZILBLL NB LIST Y,N)\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n VPUT (XZILSEL XZILMEM XZILNAM XZILSRC XZILLNK XZILSYS\n       XZILSUB1 XZILSUB2 XZILSUB3 XZILSUB4\n       XZILMAC1 XZILMAC2 XZILMAC3 XZILMAC4\n       XZILACSZ XZILCSSZ XZILPDSZ XZILVSSZ\n       XZILTRN XZILBZL XZILBAL XZILBLL) PROFILE\n)END\n\n Change activity:\n\n 05/26/88 - SEB1525 - Support for member list.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL4M": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x004\\x00\\x88\\x14\\x7f\\x01\\x00$?\\x16!\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-05-26T00:00:00", "modifydate": "2000-08-30T16:21:34", "lines": 31, "newlines": 31, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  ` TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)\n 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)\n 02 TYPE(DATAOUT) INTENS(LOW)\n 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)\n 04 TYPE(DATAOUT)  INTENS(LOW)\n 05 TYPE(DATAOUT)  INTENS(HIGH)\n 06 TYPE(DATAOUT)  INTENS(LOW)\n)BODY WIDTH(80)\n%COMPILE --- &XZZZSRC TO &XZZZLNK --------------------------%ROW`ZMLCR%OF`ZMLTR+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n&XNAME    LOADMOD &XREST\n|ZDATA ------------------------------------------------------------------------|\n|                                                                              |\n| -----------------------------------------------------------------------------|\n)INIT\n  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */\n  .HELP = ISR01130\n  &TEMP = '&ZMLCOLS'\n  &XNAME = TRUNC(&ZMLCOLS,8)\n  &TEMP  = TRUNC(&ZMLCOLS,20)\n  &XREST = .TRAIL\n)PROC\n  VPUT (ZSCML) PROFILE\n)END\n\n Note: To make a panel like this, just copy ISRML000 and modify.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL5": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x00\\x88\\x17?\\x01\\x00$?\\x14X\\x00}\\x00\\x85\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1988-06-21T00:00:00", "modifydate": "2000-08-30T14:58:31", "lines": 125, "newlines": 133, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - BATCH COMPILE  -`-`-\n%OPTION ===>_XZILSEL\n+\n+Option: @F+function,@P+program,@M+module,@E+edit,@blank+member selection list\n+\n\\  LISP SOURCE MEMBER NAME   %===>_XZILMEM %Overriding name%===>_XZILNAM +\n\\  LISP SOURCE LIBRARY (PDS) %===>_XZILSRC                              +\n\\  TARGET LOAD LIBRARY       %===>_XZILLNK                              +\n\n\\  SUBROUTINE LIBRARY NAMES  %===>_XZILSUB1                             +\n                             %===>_XZILSUB2                             +\n#  (Must be load libraries   %===>_XZILSUB3                             +\n#   without member names)    %===>_XZILSUB4                             +\n\n\\  COMPILE-TIME MACRO FILES  %===>_XZILMAC1                             +\n                             %===>_XZILMAC2                             +\n#  (Must be sequential       %===>_XZILMAC3                             +\n#   datasets or PDS members) %===>_XZILMAC4                             +\n+\n\\  Options: #ACSIZE_XZILACSZ#CSSIZE_XZILCSSZ#PDSIZE_XZILPDSZ#VSSIZE_XZILVSSZ+\n$  Debug?_Z$Print compiler transforms?_Z+\n\n\\ SYSTEM#(NEW, OLD or blank) %===>_Z  +\n)INIT\n .ZVARS = '(XZILDBG XZILCTRN XZILSYS)'\n .HELP = TXZIL5\n IF (&XZILSEL = ' ')\n  .CURSOR = XZILSEL\n IF (&XZILACSZ = &Z) &XZILACSZ = DEFAULT\n IF (&XZILCSSZ = &Z) &XZILCSSZ = DEFAULT\n IF (&XZILPDSZ = &Z) &XZILPDSZ = DEFAULT\n IF (&XZILVSSZ = &Z) &XZILVSSZ = DEFAULT\n IF (&XZILDBG = &Z) &XZILDBG = N\n IF (&XZILCTRN = &Z) &XZILCTRN = N\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n VER(&XZILSEL LIST P,F,M,E)\n IF (&XZILSEL \u00ac= &Z)\n  VER(&XZILMEM NB NAME)\n ELSE\n  &TEMP = TRUNC(&XZILMEM,'*')\n  IF (&TEMP = '&XZILMEM')\n   VER(&XZILMEM NAME)\n VER(&XZILNAM NAME)\n VER(&XZILSRC NB DSNAME)\n VER(&XZILLNK NB DSNAME)\n VER(&XZILSUB1 DSNAME)\n VER(&XZILSUB2 DSNAME)\n VER(&XZILSUB3 DSNAME)\n VER(&XZILSUB4 DSNAME)\n VER(&XZILMAC1 DSNAME)\n VER(&XZILMAC2 DSNAME)\n VER(&XZILMAC3 DSNAME)\n VER(&XZILMAC4 DSNAME)\n &TEMP = TRUNC(&XZILSRC,'(')\n IF (&TEMP \u00ac= '&XZILSRC')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILLNK,'(')\n IF (&TEMP \u00ac= '&XZILLNK')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB1,'(')\n IF (&TEMP \u00ac= '&XZILSUB1')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB2,'(')\n IF (&TEMP \u00ac= '&XZILSUB2')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB3,'(')\n IF (&TEMP \u00ac= '&XZILSUB3')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILSUB4,'(')\n IF (&TEMP \u00ac= '&XZILSUB4')  .MSG = XZIL001\n IF (&XZILSUB1 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB1,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB1 = '''&ZPREFIX..&XZILSUB1'''\n IF (&XZILSUB2 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB2,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB2 = '''&ZPREFIX..&XZILSUB2'''\n IF (&XZILSUB3 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB3,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB3 = '''&ZPREFIX..&XZILSUB3'''\n IF (&XZILSUB4 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILSUB4,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILSUB4 = '''&ZPREFIX..&XZILSUB4'''\n IF (&XZILMAC1 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILMAC1,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILMAC1 = '''&ZPREFIX..&XZILMAC1'''\n IF (&XZILMAC2 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILMAC2,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILMAC2 = '''&ZPREFIX..&XZILMAC2'''\n IF (&XZILMAC3 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILMAC3,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILMAC3 = '''&ZPREFIX..&XZILMAC3'''\n IF (&XZILMAC4 \u00ac= &Z)\n  &TEMP = TRUNC(&XZILMAC4,1)\n  IF (&TEMP \u00ac= '''')\n    &XZILMAC4 = '''&ZPREFIX..&XZILMAC4'''\n IF (&XZILACSZ = DEFAULT) &XZILACSZ = &Z\n IF (&XZILCSSZ = DEFAULT) &XZILCSSZ = &Z\n IF (&XZILPDSZ = DEFAULT) &XZILPDSZ = &Z\n IF (&XZILVSSZ = DEFAULT) &XZILVSSZ = &Z\n VER(&XZILDBG NB LIST Y,N)\n VER(&XZILCTRN NB LIST Y,N)\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n VPUT (XZILSEL XZILMEM XZILNAM XZILSRC XZILLNK XZILSYS\n       XZILSUB1 XZILSUB2 XZILSUB3 XZILSUB4\n       XZILMAC1 XZILMAC2 XZILMAC3 XZILMAC4\n       XZILACSZ XZILCSSZ XZILPDSZ XZILVSSZ\n       XZILCTRN) PROFILE\n)END\n\n Change activity:\n\n 06/21/88 - SEB1525 - Support for member list.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL5M": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Q\\x00\\x88\\x17?\\x01\\x00$?\\x16!\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-06-21T00:00:00", "modifydate": "2000-08-30T16:21:51", "lines": 31, "newlines": 31, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  ` TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)\n 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)\n 02 TYPE(DATAOUT) INTENS(LOW)\n 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)\n 04 TYPE(DATAOUT)  INTENS(LOW)\n 05 TYPE(DATAOUT)  INTENS(HIGH)\n 06 TYPE(DATAOUT)  INTENS(LOW)\n)BODY WIDTH(80)\n%COMPILE --- &XZZZSRC TO &XZZZLNK --------------------------%ROW`ZMLCR%OF`ZMLTR+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n&XNAME    LOADMOD &XREST\n|ZDATA ------------------------------------------------------------------------|\n|                                                                              |\n| -----------------------------------------------------------------------------|\n)INIT\n  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */\n  .HELP = ISR01130\n  &TEMP = '&ZMLCOLS'\n  &XNAME = TRUNC(&ZMLCOLS,8)\n  &TEMP  = TRUNC(&ZMLCOLS,20)\n  &XREST = .TRAIL\n)PROC\n  VPUT (ZSCML) PROFILE\n)END\n\n Note: To make a panel like this, just copy ISRML000 and modify.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL6": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x006\\x00\\x87&\\x8f\\x01\\x00$?\\x14X\\x000\\x00)\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1987-09-25T00:00:00", "modifydate": "2000-08-30T14:58:36", "lines": 48, "newlines": 41, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - RUN COMPILED PROGRAM  -`-`-\n%COMMAND ===>_ZCMD\n+\n\\  PROGRAM NAME     %===>_XZILMEM +\n\n\\  RUN LIBRARY NAME %===>_XZILLNK                              +\n\n$  If the program takes a parameter string, enter the string below.\n$  Quotes must be included if there are any special characters.\n\n%  ===>_XZILPRM\n                            +\n\n\\  Options: #ACSIZE_XZILACSZ#CSSIZE_XZILCSSZ#PDSIZE_XZILPDSZ#VSSIZE_XZILVSSZ+\n\n\\ SYSTEM#(NEW, OLD or blank)%===>_Z  +                                  +\n)INIT\n .ZVARS = '(XZILSYS)'\n .HELP = TXZIL6\n IF (&XZILACSZ = &Z) &XZILACSZ = DEFAULT\n IF (&XZILCSSZ = &Z) &XZILCSSZ = DEFAULT\n IF (&XZILPDSZ = &Z) &XZILPDSZ = DEFAULT\n IF (&XZILVSSZ = &Z) &XZILVSSZ = DEFAULT\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n VER(&XZILLNK NB DSNAME)\n VER(&XZILMEM NB NAME)\n &TEMP = TRUNC(&XZILLNK,'(')\n IF (&TEMP \u00ac= '&XZILLNK')  .MSG = XZIL001\n &TEMP = TRUNC(&XZILLNK,1)\n IF (&TEMP \u00ac= '''')\n   &XZILLNK = '''&ZPREFIX..&XZILLNK'''\n IF (&XZILACSZ = DEFAULT) &XZILACSZ = &Z\n IF (&XZILCSSZ = DEFAULT) &XZILCSSZ = &Z\n IF (&XZILPDSZ = DEFAULT) &XZILPDSZ = &Z\n IF (&XZILVSSZ = DEFAULT) &XZILVSSZ = &Z\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL7": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x009\\x00\\x86\\x15o\\x01\\x00$?\\x14X\\x00^\\x00R\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1986-06-05T00:00:00", "modifydate": "2000-08-30T14:58:39", "lines": 94, "newlines": 82, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - TEST THE COMPILER  -`-`-\n%OPTION ===>_XZILSEL\n+\n Option :@F+- function,@P+- program,@M+- module;  or@E+- edit source member\n+\n\\  LISP SOURCE MEMBER NAME   %===>_XZILMEM %Overriding name%===>_XZILNAM +\n%*\\LISP SOURCE LIBRARY (PDS) %===>_XZILSRC                              +\n\n%*\\MACRO LIBRARY NAMES       %===>_XZILMAC1\n%*                           %===>_XZILMAC2\n%*#(Must be sequential       %===>_XZILMAC3\n%*# card-image datasets)     %===>_XZILMAC4\n+\n%Note:$If all the fields marked%*$are left blank, you may enter your\n       source program from the terminal.\n\n\\  SUBROUTINE LIBRARY NAMES  %===>_XZILSUB1                             +\n                             %===>_XZILSUB2                             +\n#  (Must be load libraries   %===>_XZILSUB3                             +\n#   without member names)    %===>_XZILSUB4                             +\n\n\\  Options: #ACSIZE_XZILACSZ#CSSIZE_XZILCSSZ#PDSIZE_XZILPDSZ#VSSIZE_XZILVSSZ+\n$  Debug?_Z+\n\\ SYSTEM#(NEW, OLD or blank) %===>_Z  +\n)INIT\n .ZVARS = '(XZILDBG XZILSYS)'\n .HELP = TXZIL7\n IF (&XZILSEL = ' ')\n  .CURSOR = XZILSEL\n IF (&XZILACSZ = &Z) &XZILACSZ = DEFAULT\n IF (&XZILCSSZ = &Z) &XZILCSSZ = DEFAULT\n IF (&XZILPDSZ = &Z) &XZILPDSZ = DEFAULT\n IF (&XZILVSSZ = &Z) &XZILVSSZ = DEFAULT\n IF (&XZILDBG = &Z) &XZILDBG = N\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n VER(&XZILSEL NB LIST P,F,M,E)\n VER(&XZILMEM NB NAME)\n VER(&XZILNAM NAME)\n &XZILALL = '&XZILSRC&XZILMAC1&XZILMAC2&XZILMAC3&XZILMAC4'\n IF (&XZILALL \u00ac= '')\n  VER(&XZILSRC DSNAME)\n  VER(&XZILMAC1 DSNAME)\n  VER(&XZILMAC2 DSNAME)\n  VER(&XZILMAC3 DSNAME)\n  VER(&XZILMAC4 DSNAME)\n  &TEMP = TRUNC(&XZILSRC,'(')\n  IF (&TEMP \u00ac= '&XZILSRC')  .MSG = XZIL001\n  &TEMP = TRUNC(&XZILRUN,'(')\n  IF (&TEMP \u00ac= '&XZILRUN')  .MSG = XZIL001\n  &TEMP = TRUNC(&XZILSUB1,'(')\n  IF (&TEMP \u00ac= '&XZILSUB1')  .MSG = XZIL001\n  &TEMP = TRUNC(&XZILSUB2,'(')\n  IF (&TEMP \u00ac= '&XZILSUB2')  .MSG = XZIL001\n  &TEMP = TRUNC(&XZILSUB3,'(')\n  IF (&TEMP \u00ac= '&XZILSUB3')  .MSG = XZIL001\n  &TEMP = TRUNC(&XZILSUB4,'(')\n  IF (&TEMP \u00ac= '&XZILSUB4')  .MSG = XZIL001\n  IF (&XZILSRC \u00ac= &Z)\n   &TEMP = TRUNC(&XZILSRC,1)\n   IF (&TEMP \u00ac= '''')\n     &XZILSRC = '''&ZPREFIX..&XZILSRC'''\n  IF (&XZILMAC1 \u00ac= &Z)\n   &TEMP = TRUNC(&XZILMAC1,1)\n   IF (&TEMP \u00ac= '''')\n     &XZILMAC1 = '''&ZPREFIX..&XZILMAC1'''\n  IF (&XZILMAC2 \u00ac= &Z)\n   &TEMP = TRUNC(&XZILMAC2,1)\n   IF (&TEMP \u00ac= '''')\n     &XZILMAC2 = '''&ZPREFIX..&XZILMAC2'''\n  IF (&XZILMAC3 \u00ac= &Z)\n   &TEMP = TRUNC(&XZILMAC3,1)\n   IF (&TEMP \u00ac= '''')\n     &XZILMAC3 = '''&ZPREFIX..&XZILMAC3'''\n  IF (&XZILMAC4 \u00ac= &Z)\n   &TEMP = TRUNC(&XZILMAC4,1)\n   IF (&TEMP \u00ac= '''')\n     &XZILMAC4 = '''&ZPREFIX..&XZILMAC4'''\n IF (&XZILACSZ = DEFAULT) &XZILACSZ = &Z\n IF (&XZILCSSZ = DEFAULT) &XZILCSSZ = &Z\n IF (&XZILPDSZ = DEFAULT) &XZILPDSZ = &Z\n IF (&XZILVSSZ = DEFAULT) &XZILVSSZ = &Z\n VER(&XZILDBG NB LIST Y,N)\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL8": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00C\\x00\\x85\\x16/\\x01\\x00$?\\x14X\\x00.\\x00-\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1985-06-11T00:00:00", "modifydate": "2000-08-30T14:58:43", "lines": 46, "newlines": 45, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - RELINK FUNCTION INTO PROGRAM  -`-`-\n%COMMAND ===>_ZCMD\n+\n\\  FUNCTION NAME        %===>_XZIL8FN +\n\n\\  INCLUDED FROM LIBRARY%===>_XZIL8FL                              +\n\n\n\\  MAIN PROGRAM NAME    %===>_XZIL8PN +\n\n\\  LOAD MODULE LIBRARY  %===>_XZIL8PL                              +\n\n\n+Press!END+key to return to the previous option menu.\n)INIT\n .HELP = TXZIL8\n IF (&XZIL8FN = '') &XZIL8FN = &XZILMEM\n IF (&XZIL8FL = '') &XZIL8FL = &XZILLNK\n)PROC\n IF (&ZCMD \u00ac= '') .MSG = ISPZ001\n VER(&XZIL8FN NB NAME)\n VER(&XZIL8FL NB DSNAME)\n VER(&XZIL8PN NB NAME)\n VER(&XZIL8PL NB DSNAME)\n &TEMP = TRUNC(&XZIL8FL,'(')\n IF (&TEMP \u00ac= '&XZIL8FL')  .MSG = XZIL001\n &TEMP = TRUNC(&XZIL8PL,'(')\n IF (&TEMP \u00ac= '&XZIL8PL')  .MSG = XZIL001\n IF (&XZIL8FL \u00ac= &Z)\n  &TEMP = TRUNC(&XZIL8FL,1)\n  IF (&TEMP \u00ac= '''')\n    &XZIL8FL = '''&ZPREFIX..&XZIL8FL'''\n IF (&XZIL8PL \u00ac= &Z)\n  &TEMP = TRUNC(&XZIL8PL,1)\n  IF (&TEMP \u00ac= '''')\n    &XZIL8PL = '''&ZPREFIX..&XZIL8PL'''\n VPUT (XZIL8FN XZIL8FL XZIL8PN XZIL8PL) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL9": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00#\\x00\\x88\\x14O\\x01\\x00$?\\x165\\x00G\\x00C\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1988-05-23T00:00:00", "modifydate": "2000-08-30T16:35:23", "lines": 71, "newlines": 67, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)\n # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)\n \\ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)\n $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)\n)BODY EXPAND(``)\n%-`-`-  ZIL - FOREGROUND ASSEMBLY -`-`-\n%OPTION ===>_XZASSEL\n+\n%Option:%A+- assemble, %E+- edit source member,%blank+- member selection list\n+\n\\  ASM SOURCE MEMBER NAME    %===>_XZASMEM %Overriding name%===>_XZASNAM +\n\\  ASM SOURCE LIBRARY (PDS)  %===>_XZASSRC                              +\n\\  TARGET LOAD LIBRARY       %===>_XZASLNK                              +\n\n+Assembler options:\n\n\\  TEST#(YES or NO)          %===>_Z  +\n\\  XREF#(FULL, SHORT, NO)    %===>_Z    +\n\\  SYSPARM#(optional)        %===>_XZASPRM +\n\n$Show ASMLIST?               %===>_Z+  (Gets created only if Y)\n$Show LNKLIST?               %===>_Z+  (Gets created only if Y)\n$Member name in ASMLIST name?%===>_Z+  (Overriding name applies)\n\n\\SYSTEM#(NEW, OLD or blank)  %===>_Z  #                                 #\n)INIT\n .ZVARS = '(XZASTST XZASXRF XZASBAL XZASBLL XZASMAL XZILSYS)'\n .HELP = TXZIL9\n &XZASTST = TRANS(&XZASTST Y,YES *,NO)\n &XZASXRF = TRANS(&XZASXRF F,FULL S,SHORT *,NO)\n IF (&XZASBAL = &Z) &XZASBAL = Y\n IF (&XZASBLL = &Z) &XZASBLL = Y\n IF (&XZASMAL = &Z) &XZASMAL = N\n &XZILSYS = TRANS(&XZILSYS N,NEW O,OLD)\n)PROC\n VER(&XZASSEL LIST A,E)\n IF (&XZASSEL = A,E)\n  VER(&XZASMEM NB NAME)\n ELSE\n  &TEMP = TRUNC(&XZASMEM,'*')\n  IF (&TEMP = '&XZASMEM')\n   VER(&XZASMEM NAME)\n VER(&XZASNAM NAME)\n VER(&XZASSRC NB DSNAME)\n VER(&XZASLNK NB DSNAME)\n IF (&XZASPRM = &Z)           &XZASPRM = XA\n &TEMP = TRUNC(&XZASSRC,'(')\n IF (&TEMP \u00ac= '&XZASSRC')     .MSG = XZIL001\n &TEMP = TRUNC(&XZASLNK,'(')\n IF (&TEMP \u00ac= '&XZASLNK')     .MSG = XZIL001\n &XZASTST = TRUNC(&XZASTST,1)\n VER(&XZASTST NB LIST Y,N)\n &XZASXRF = TRUNC(&XZASXRF,1)\n VER(&XZASXRF NB LIST F,S,N)\n VER(&XZASBAL NB LIST Y,N)\n VER(&XZASBLL NB LIST Y,N)\n VER(&XZASMAL NB LIST Y,N)\n &XZILSYS = TRUNC(&XZILSYS,1)\n VER (&XZILSYS LIST N,O)\n VPUT (XZASMEM XZASNAM XZASSRC XZASLNK XZASPRM\n       XZILSYS XZASTST XZASXRF XZASBAL XZASBLL XZASMAL) PROFILE\n)END\n\n Change activity:\n\n 05/23/88 - SEB1525 - Support for member list.\n 12/16/88 - SEB1525 - Blank means member list, not assemble.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XZIL9M": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00V\\x00\\x88\\x14O\\x01\\x00$?\\x16!\\x00\\x1f\\x00 \\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1988-05-23T00:00:00", "modifydate": "2000-08-30T16:21:56", "lines": 31, "newlines": 32, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  ` TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)\n 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)\n 02 TYPE(DATAOUT) INTENS(LOW)\n 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)\n 04 TYPE(DATAOUT)  INTENS(LOW)\n 05 TYPE(DATAOUT)  INTENS(HIGH)\n 06 TYPE(DATAOUT)  INTENS(LOW)\n)BODY WIDTH(80)\n%ASSEMBLE -- &XZZZSRC TO &XZZZLNK --------------------------%ROW`ZMLCR%OF`ZMLTR+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n&XNAME    LOADMOD &XREST\n|ZDATA ------------------------------------------------------------------------|\n|                                                                              |\n| -----------------------------------------------------------------------------|\n)INIT\n  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */\n  .HELP = ISR01130\n  &TEMP = '&ZMLCOLS'\n  &XNAME = TRUNC(&ZMLCOLS,8)\n  &TEMP  = TRUNC(&ZMLCOLS,20)\n  &XREST = .TRAIL\n)PROC\n  VPUT (ZSCML) PROFILE\n)END\n\n Note: To make a panel like this, just copy ISRML000 and modify.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZFSEXEC": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x880\\x7f\\x00\\x880\\x7f\\x08'\\x00\\x19\\x00\\x19\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-11-02T00:00:00", "modifydate": "1988-11-02T08:27:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR DEFAULT(%+_)\n #  TYPE(INPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)\n !  TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) JUST(ASIS)\n |  AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n \\  TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n 05 TYPE(DATAOUT) INTENS(LOW) COLOR(GREEN)\n 0D TYPE(DATAOUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%-------------------- ZFSEXEC default panel ------------------!FSMSG\n%ISPF COMMAND ===>#ZCMD                                       %SCROLL ===>_AMT +\n!MOREMSG\n%===>#IN\n\n\n%------------------------------------------------------------------------------\\\n|FSDATA                                                                        |\n)INIT\n .HELP = TZFSEXEC\n)REINIT\n REFRESH(FSMSG,ZCMD,AMT,MOREMSG,IN,FSDATA)\n)PROC\n &XCURSOR = .CURSOR\n &XCSRPOS = .CSRPOS\n &FSLVLIN = LVLINE(FSDATA)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZILTERM": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x14\\x01\\x00$?\\x01\\x00$?\\x166\\x009\\x00L\\x00\\x00\\xe2\\xc5\\xc2\\xf1\\xf5\\xf2\\xf5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-08-30T00:00:00", "modifydate": "2000-08-30T16:36:14", "lines": 57, "newlines": 76, "modlines": 0, "user": "SEB1525"}, "text": ")ATTR\n  % TYPE(TEXT) COLOR(BLUE)\n  @ TYPE(NEF) PAD(USER) CAPS(ON)\n  ! TYPE(PT)\n  { TYPE(NT)\n  \u00ac TYPE(ET)\n  # TYPE(FP)\n  ? TYPE(DT)\n  $ TYPE(SAC)\n  } TYPE(PIN)\n  | AREA(SCRL) EXTEND(ON)\n)BODY\n+                             !ZIL Dialog Error+                               +\n#Command ===>@ZCMD                                                             +\n|S1                                                                            |\n)AREA S1\n%*****************************************************************************\n%*\u00ac&ZERRMSG                                                                 %*\n%*%                                                                         %*\n%*\u00ac&ZERRSM                 %                                                %*\n%*?&ZERRLM1                                                                 %*\n%*?&ZERRLM2                                                                 %*\n%*?&ZERRLM3                                                                 %*\n%*?&ZERRLM4                                                                 %*\n%*?&ZERRLM5                                                                 %*\n%*?&ZERRLM6                                                                 %*\n%*?&ZERRLM7                                                                 %*\n%*?&ZDESCR                                                                  %*\n%*\u00ac&CSELINE                                                                 %*\n%*%                                                                         %*\n%* }Press\u00acENTER}key to continue processing.                                 %*\n%*%                                                                         %*\n%*%                                                                         %*\n%*****************************************************************************\n)INIT\n  IF (&ZERRLM1 = &Z) &ZERRLM1 = &ZERRLM\n  &ZCMD = ' '\n  &ZDESCR = TRANS(&CSEDSC ' ',' '\n           P,'Panel line where error was detected:'\n           C,'Current dialog statement:'\n           S,'File tailoring input line:')\n  &ZF2 = ' '  &ZF3V = ' '\n  &ZF3MORE = ' '\n)PROC\n  &ZERRLM1 = &Z\n  IF (.RESP = ENTER)\n    IF (&ZCMD \u00ac= ' ')\n      .MSG = ISPZ001                      /* INVALID COMMAND            */\n  IF (&ZF3V = ' ')\n    &ZF3 = N\n  ELSE &ZF3 = 'Y'\n  VPUT (ZF3) PROFILE\n  IF (&ZF3 \u00ac= Y) .RESP = ENTER\n  IF (&ZF3  = Y) .RESP = END\n)END\n /* 5655-042 (C) COPYRIGHT IBM CORP 1982, 1995 */\n Copied from ISPTERM.  Line to set ZERRLM1 added. seb1525\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT476/CBT.V500.FILE476.PDS/PANEL.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT476/CBT.V500.FILE476.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}