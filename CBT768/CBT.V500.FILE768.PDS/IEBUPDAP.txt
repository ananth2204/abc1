/*-----------------------------------------------------------*/
/* Add the contents of a file to an append file separating   */
/* the contents with "./ ADD NAME=filename filetype".        */
/*                                                           */
/* Information folowing the filetype in the ./ ADD card      */
/* includes the original RECFM, LRECL and the date and time  */
/* the original file was last updated.                       */
/*                                                           */
/* The append file can be VMARC packed for transmission to   */
/* another location or downloaded and zipped for transmission*/
/*                                                           */
/* The files in the append file created by IEBUPDAP can be   */
/* extracted to a CMS mdisk using the IEBUPDEX exec or can   */
/* be loaded to a z/OS PDS file using IEBUPDTE.              */
/*                                                           */
/* If yoy have any problems with this exec contact;          */
/* Rick Bourgeois at rick@vsoftsys.com                       */
/*                                                           */
/* Syntax: i_fname i_ftype i_fmode o_fname o_ftype o_fmode   */
/*-----------------------------------------------------------*/

address command
signal on novalue
signal on syntax

arg newfn newft newfm outfn outft outfm . '(' width

if outfm = '' then signal missing /* Make sure all are given.*/
if width = '' then width = 80     /* Default width to 80.    */

if newfm = 'A' then do
   say 'Input filemode is A, continue Y|N'
   pull ans
   if ans \= 'Y' then exit 4
   end

'MAKEBUF'                         /* Get recfm and lrecl.    */
'LISTFILE' newfn newft newfm '(FIFO DATE NOHEADER'
if rc \= 0 then signal ifile_notfnd
pull . . . recfm wid2 . . fdate ftime .
orgfm = newfm                     /* Save original filemode. */
pack = 'NO'                       /* Default not packed      */
if wid2 >= 1024 then call unpack
if wid2 > width then signal trunc_err /* Check new width.    */
'DROPBUF'

'EXECIO 1 DISKW' outfn outft outfm,   /* Write the separator.*/
   '0 F' width '(FINIS STRING ./ ADD NAME='newfn ,
      newft recfm wid2 fdate ftime

'COPYFILE' newfn newft newfm,     /* And write the file data.*/
   outfn outft outfm '(APPEND'

'FINIS' outfn outft outfm         /* Close the file.         */
if pack = 'YES' then call repack
exit

unpack:

pack = 'YES'                      /* Unpack file to A-disk.  */
'COPY' newfn newft newfm '= = A (UNPACK OLDDATE REPLACE'
if rc \= 0 then signal unp_failed /* Error if unpack failed  */
newfm = 'A'                       /* Append from here now.   */
'LISTFILE' newfn newft newfm '(FIFO FORMAT NOHEADER'
pull . . . recfm wid2 .           /* Get new width.          */
recfm = recfm'P'                  /* Show it's packed.       */

return

repack:
if orgfm = 'A' then do            /* Repack or erase pkd file*/
   'COPY' newfn newft newfm '= = = (PACK OLDDATE REPLACE'
   if rc \= 0 then signal rep_failed /* Error if repack fails*/
   end
   else 'ERASE' newfn newft 'A'
return

missing:
say 'Arg: input-filename type mode, output-filename type mode'
exit 16

trunc_err:
say 'File' newfn newft newfm 'lrecl is',
     wid2'; file not appended.'
exit 24

ifile_notfnd:
say 'Requested file' newfn newft newfm 'was not found'
exit 28

rep_failed:
say 'Error repacking' newfn newft newfm 'on A-disk.'
exit 32

unp_failed:
say 'Error unpacking' newfn newft newfm 'to A-disk.'
exit 34

novalue:
say 'NOVALUE error on line' ,
 sigl 'of IEBUPDAP EXEC'
exit 50

syntax:
say 'SYNTAX error on line' ,
 sigl 'of IEBUPDAP EXEC'
exit 60
