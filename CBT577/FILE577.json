{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012408000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "CBT.V500.FILE577.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE577.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x0e'", "DS1TRBAL": "b'\\x89\\xfe'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04K\\x00\\x07\\x04K\\x00\\x0b\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x14\\x7f\\x01\\x02\\x14\\x7f\\x10\\x02\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-27T00:00:00", "modifydate": "2002-05-27T10:02:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 447    FILE:  577\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT447.FILE577\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 32 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,109 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/27/02    10:02:12    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00U\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16W\\x00x\\x00r\\x00\\x00\\xe2\\xc9\\xe2\\xe3\\xf1\\xf9@@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:57:55", "lines": 120, "newlines": 114, "modlines": 0, "user": "SIST19"}, "text": " HI, MY NAME IS PERGENTINO ARIAS\n pergen@mixmail.com\n\n HERE I SEND SOME PROGRAMS i hope you like it\n\n\nCASIO : THIS IS A CALCULATOR\n-----\n\nCASIO :    THIS IS THE REXX WE MUST INVOKE\nPCASIO:    IS THE PRINCIPAL PANEL\nPCASIOH:   IS A HELP PANEL\nCASI01:    ARE THE ISPF MESSAGES\n\n=======================================================================\nSPACE : WITH THE LRECL AND THE NUMBERS OF REGISTERS, IT GIVES THE TRKS\n-----\n\nSPACE  :  THIS IS THE REXX WE MUST INVOKE\nPSPACE1:  PANEL\nPSPACE2:  PANEL\nINF10:    ARE THE ISPF MESSAGES\n\n=======================================================================\nEUCLIDES:\n--------\n\nEUCLIDES : THIS IS A REXX THAT USE THE EUCLIDES ALGORITHM\n\n=======================================================================\nLISTA:\n------\n\nLISTA : THIS IS A REXX THAT GIVES A FORMATED \"TSO LISTA\"\n\n=======================================================================\nEASTER:\n-------\n\nEASTER :  THIS IS A REXX THAT BY THE GAUSS FORMULA, GIVES US\n          THE EASTER\n=======================================================================\nEXPCLEAN:\n--------\n\nEXPCLEAN: IS AN ASSEMBLER PROGRAM THAT ALLOCATE FILES WHOSE\n          DDNAME IN THE JCL BEGIN BY @@\n          AT DIFFERENCE THAN THE IEFBR14, IT OPENS AND CLOSE THE FILE\n          (USEFULL IF AFTER THAT IT WILL BE USE BY A COBOL PROGRAM)\n          IF THE FILE EXIST, IT CLEANS THE CONTENT.\nJEXPCL : JCL IN WHICH WE USE THE EXPCLEAN\n=======================================================================\nWAITING :  PROGRAM THAT WAITS THE TIME WE GIVE BY PARAMETER\n-------\n\nWAITING : IS AN ASSEMBLER PROGRAM THAT WAITS\nJWAIT  :  JCL THAT CALL WAITING PROGRAM\nRWAIT  :  REXX THAT CALL WAITING PROGRAM\n=======================================================================\nEMPTY :\n------\n\nEMPTY   : IS AN ASSEMBLER PROGRAM THAT GIVES US A RC =00  IF THE\n          SECUENTIAL FILE ALLOCATED AS DDINPUT  IS EMPTY;\n          OTHERWISE, IT GIVES RC=12 OR THE RETURN CODE WE PASS\n          IN HEX. BY PARM\n          WE CAN CONCATENATE FILES\n\nJEMPTY : JCL THAT INVOKE THE EMPTY PROGRAM\n=======================================================================\nMNF:\n----\n\nMNF  : IS AN EDIT MACRO THAT GIVES US THE NUMBER OF REGISTERS IN A FILE\n       IT COULD BE INVOKED IN EDIT, OR IN 3.4 OPTION\n       AS EDIT MACRO WE MUST PUT THE CURSOR IN THE FIRST LEETER OF\n       THE FILE\nFFF  : SUBROUTINE REXX\nFGF  : SUBROUTINE REXX\nIRXNREG: PROGRAM IN ASSEMBLER THAT IS THE ONE THAT COUNT THE REGISTERS\n       YOU MUST CHANGE THE LINE IN THE MNF PROGRAM :\n       \"CALL LOAD.LIBRARIE(IRXNREG) \"\n       PUTTING YOUR LIBRARIE\n\nEJ EN EDIT:\n-----------\n    EDIT       SISSHR.SIST19.JCL(LIBSEDIT) - 01.17\n    COMMAND ===>MNF\n    ******  ***************************** TOP OF DATA ********\n    000001  //SIST19A   JOB MSGCLASS=C,CLASS=C,NOTIFY=&SYSUID\n    000002  //*-----------------------------------------------\n    000003  //PASO01   EXEC PGM=IDCAMS,COND=(0,NE)\n    000004  //SYSPRINT DD SYSOUT=*\n    000005//SYSIN    DD *\n    000006  DELETE   SISTSO.SIST19.PRUEBA\n    ==MSG> SISTSO.SIST19.PRUEBA\n    ==MSG> NUMBER OF REGISTERS:               52\n    000007  SET MAXCC  = 0\n\nEJ EN 3.4 :\n-----------\n\n    DSLIST - DATA SETS MATCHING SIS*.SIST19\n    COMMAND ===>\n\n\n    COMMAND - ENTER \"/\" TO SELECT ACTION               VOLUME\n    ------------------------------------------  ...   --------------\n             SISTSO.SIST19.MORRAYA                     TST71B\n    MNF      SISTSO.SIST19.PRUEBA                      EXP104\n             SISTSO.SIST19.RF                          SIST17\n             SISTSO.SIST19.SHA1.L64                    238928\n    ***************************** END OF DATA **********************\n\n\n'SISTSO.SIST19.PRUEBA'\nNUMBER OF REGISTERS:               52\n\n    ***\n=======================================================================\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE1": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x02\\x14?\\x01\\x02\\x14?\\tH\\x00 \\x00 \\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-23T00:00:00", "modifydate": "2002-05-23T09:48:44", "lines": 32, "newlines": 32, "modlines": 0, "user": "SBGOLOB"}, "text": "Subj: Programs for the CBT tape\nDate: 05/22/2002 11:11:16 AM Eastern Daylight Time\nFrom:    pergen@mixmail.com (Pergentino Arias)\nReply-to:    pergen@mixmail.com\nTo:    sbgolob@aol.com (sbgolob@aol.com)\n\nFile: Execs.xmi (61760 bytes) DL Time (TCP/IP): < 1 minute\n\n\nHi Sam\n\nFirst of all, sorry if my English is not very good.\n\nOK, here I send to you some programs in REXX and ASM, that if you\nthink could be useful, I would like you to put them it in the CBT\ntape\n\nMy name is Pergentino Arias, and my e-mail is\npergen@mixmail.com\n\nI'm from Spain ( Europe ), and here I am for any questions you\nhave about the programs I send.\n\nThank you.\n\n----------------------- Headers --------------------------------\nReturn-Path: <pergen@mixmail.com>\n    for sbgolob@aol.com; Wed, 22 May 2002 17:11:06 +0200\nFrom: \"Pergentino Arias\" <pergen@mixmail.com>\nReply-To: pergen@mixmail.com\nTo: \"sbgolob@aol.com\" <sbgolob@aol.com>\nSubject: programs for the cbt  tape\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE2": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x02\\x14?\\x01\\x02\\x14?\\x145\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-23T00:00:00", "modifydate": "2002-05-23T14:35:57", "lines": 15, "newlines": 15, "modlines": 0, "user": "SBGOLOB"}, "text": "A load library, in TSO XMIT format, has been included in this pds\nas member $LOADLIB.  To expand this into a real load library, execute\nthe TSO command:\n\n     RECEIVE INDS(USERID.FILE577.PDS($LOADLIB))\n\nand answer the prompt with DSN(   ) VOL(   ) if you wish to change\nthese aspects of the load library that will be produced.\n\nThese are assembled and linked versions of the assembler programs\nfrom this pds.\n\nSam Golob      sbgolob@attglobal.net\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE3": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x02\\x14O\\x01\\x02\\x14O\\t2\\x00\\x18\\x00\\x18\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-24T00:00:00", "modifydate": "2002-05-24T09:32:59", "lines": 24, "newlines": 24, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: mnf\nDate: Fri, 24 May 2002 08:28:52 +0100\nFrom: \"Pergentino Arias\" <pergen@mixmail.com>\nTo: \"sbgolob@attglobal.net\" <sbgolob@attglobal.net>\n\n-----------------------------------------------------------------\nNote from Sam Golob:  I think the point here, is that MNF only\n     works for sequential datasets, not for entire pds'es.  I\n     had misunderstood that, and therefore I got an error when\n     I tried to execute it against a pds.\n-----------------------------------------------------------------\n\nI'm sorry. IRXNREG is the program I send, and than I see you just\ncompiled.  I see you put \"CALL 'SBGOLOB.LOAD(IRXNREG)' \" in the\nREXX MNF I see you put the YREGS, ok, I forget it. I send to you\nthe jcl which i use to compile the program, for you to see the\nparameters i'm using in the compilation. The arcchieve is on\nascii. I see the message IEC020I 001-4: If the return code is 4,\nfor QSAM, ABE or an incorrect value for EROPT parameter in the\nDCB and/or no error handling (SYNAD) exit was specified. This\nprogram works with sequential files ( or members of a librarie),\nbut not with libraries, or VSAM I assembled your version and\nprove it in my installation and it works.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LOADLIB": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x14?\\x01\\x02\\x14?\\x147\\x005\\x005\\x00\\x00\\xe3\\xe2\\xd6\\xe7\\xd4\\xc9\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-23T00:00:00", "modifydate": "2002-05-23T14:37:00", "lines": 53, "newlines": 53, "modlines": 0, "user": "TSOXMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE577": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x08\\x01\\x01\\x02_\\x01\\x02\\x14\\x7f\\x10\\x01\\x00y\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-05-27T10:01:08", "lines": 121, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 577 is from Pergentino Arias, and contains REXX execs,    *   FILE 577\n//*           panels, and Assembler programs that may be of use.    *   FILE 577\n//*           Some programs are commented in Spanish.               *   FILE 577\n//*                                                                 *   FILE 577\n//*           I find these programs to be very interesting, and     *   FILE 577\n//*           nicely done (SG - 05/02)                              *   FILE 577\n//*                                                                 *   FILE 577\n//*           email:  pergen@mixmail.com                            *   FILE 577\n//*                                                                 *   FILE 577\n//*   To make installation easier, I have included a load library   *   FILE 577\n//*   in TSO XMIT format, as member $LOADLIB in this pds (SG-05/02) *   FILE 577\n//*                                                                 *   FILE 577\n//*   Short description of this file's contents:                    *   FILE 577\n//*                                                                 *   FILE 577\n//*     CASIO :    THIS IS A CALCULATOR                             *   FILE 577\n//*                                                                 *   FILE 577\n//*     CASIO :    THIS IS THE REXX WE MUST INVOKE                  *   FILE 577\n//*     PCASIO:    IS THE PRINCIPAL PANEL                           *   FILE 577\n//*     PCASIOH:   IS A HELP PANEL                                  *   FILE 577\n//*     CASI01:    ARE THE ISPF MESSAGES                            *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     SPACE :    WITH THE LRECL AND THE NUMBERS OF REGISTERS,     *   FILE 577\n//*                IT GIVES THE TRKS                                *   FILE 577\n//*                                                                 *   FILE 577\n//*     SPACE  :  THIS IS THE REXX WE MUST INVOKE                   *   FILE 577\n//*     PSPACE1:  PANEL                                             *   FILE 577\n//*     PSPACE2:  PANEL                                             *   FILE 577\n//*     INF10:    ARE THE ISPF MESSAGES                             *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     EUCLIDES : THIS IS A REXX THAT USE THE EUCLID'S             *   FILE 577\n//*                ALGORITHM - Calculate Greatest Common            *   FILE 577\n//*                Denominator and Least Common Multiple of         *   FILE 577\n//*                two given integers.                              *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     LISTA :    THIS IS A REXX THAT GIVES A FORMATTED \"TSO       *   FILE 577\n//*                LISTA\"                                           *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     EASTER :   THIS IS A REXX THAT BY THE GAUSS FORMULA,        *   FILE 577\n//*                GIVES US THE EASTER                              *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     EXPCLEAN:                                                   *   FILE 577\n//*                                                                 *   FILE 577\n//*     EXPCLEAN:  IS AN ASSEMBLER PROGRAM THAT ALLOCATE FILES      *   FILE 577\n//*                WHOSE DDNAME IN THE JCL BEGIN BY @@ AT           *   FILE 577\n//*                DIFFERENCE THAN THE IEFBR14, IT OPENS AND        *   FILE 577\n//*                CLOSE THE FILE (USEFUL IF AFTER THAT IT WILL     *   FILE 577\n//*                BE USE BY A COBOL PROGRAM) IF THE FILE EXIST,    *   FILE 577\n//*                IT CLEANS THE CONTENT.                           *   FILE 577\n//*     JEXPCL :   JCL IN WHICH WE USE THE EXPCLEAN                 *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     WAITING :  PROGRAM THAT WAITS THE TIME WE GIVE BY           *   FILE 577\n//*                PARAMETER                                        *   FILE 577\n//*                                                                 *   FILE 577\n//*     WAITING :  IS AN ASSEMBLER PROGRAM THAT WAITS               *   FILE 577\n//*     JWAIT  :   JCL THAT CALL WAITING PROGRAM                    *   FILE 577\n//*     RWAIT  :   REXX THAT CALL WAITING PROGRAM                   *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     EMPTY :                                                     *   FILE 577\n//*                                                                 *   FILE 577\n//*     EMPTY :    IS AN ASSEMBLER PROGRAM THAT GIVES US A RC=00    *   FILE 577\n//*                IF THE SEQUENTIAL FILE ALLOCATED AS DDINPUT      *   FILE 577\n//*                IS EMPTY; OTHERWISE, IT GIVES RC=12 OR THE       *   FILE 577\n//*                RETURN CODE WE PASS IN HEX. BY PARM WE CAN       *   FILE 577\n//*                CONCATENATE FILES                                *   FILE 577\n//*     JEMPTY :   JCL TO INVOKE THE EMPTY PROGRAM                  *   FILE 577\n//*     =======================================================     *   FILE 577\n//*     MNF:                                                        *   FILE 577\n//*                                                                 *   FILE 577\n//*     MNF  :     IS AN EDIT MACRO THAT GIVES US THE NUMBER OF     *   FILE 577\n//*                RECORDS IN A FILE.  IT COULD BE INVOKED IN       *   FILE 577\n//*                EDIT, AS AN EDIT MACRO, OR IN THE 3.4 OPTION,    *   FILE 577\n//*                BEING RUN AGAINST A SEQUENTIAL FILE-NOT A PDS.   *   FILE 577\n//*                IF MNF IS INVOKED AS AN EDIT MACRO, WE MUST      *   FILE 577\n//*                PUT THE CURSOR ON THE FIRST LETTER OF THE        *   FILE 577\n//*                FILE NAME.                                       *   FILE 577\n//*                                                                 *   FILE 577\n//*     MN   :     AN ENGLISH-LANGUAGE VERSION OF MNF.              *   FILE 577\n//*                                                                 *   FILE 577\n//*     FFF  :     SUBROUTINE REXX                                  *   FILE 577\n//*     FGF  :     SUBROUTINE REXX                                  *   FILE 577\n//*     IRXNREG:   PROGRAM IN ASSEMBLER THAT IS THE ONE THAT        *   FILE 577\n//*                COUNTS THE RECORDS                               *   FILE 577\n//*                                                                 *   FILE 577\n//*                YOU MUST CHANGE THE LINE IN THE MNF PROGRAM :    *   FILE 577\n//*                \"CALL LOAD.LIBRARIE(IRXNREG) \"                   *   FILE 577\n//*                PUTTING YOUR LIBRARIE                            *   FILE 577\n//*                                                                 *   FILE 577\n//*     EXAMPLE IN EDIT:                                            *   FILE 577\n//*     ---------------                                             *   FILE 577\n//*      EDIT       SISSHR.SIST19.JCL(LIBSEDIT) - 01.17             *   FILE 577\n//*      COMMAND ===>MN                                             *   FILE 577\n//*      ******  ***************************** TOP OF DATA ******** *   FILE 577\n//*      000001  //SIST19A   JOB MSGCLASS=C,CLASS=C,NOTIFY=&SYSUID  *   FILE 577\n//*      000002  //*----------------------------------------------- *   FILE 577\n//*      000003  //PASO01   EXEC PGM=IDCAMS,COND=(0,NE)             *   FILE 577\n//*      000004  //SYSPRINT DD SYSOUT=*                             *   FILE 577\n//*      000005//SYSIN    DD *                                      *   FILE 577\n//*      000006  DELETE   SISTSO.SIST19.PRUEBA                      *   FILE 577\n//*      ==MSG> SISTSO.SIST19.PRUEBA                                *   FILE 577\n//*      ==MSG> NUMBER OF RECORDS:                 52               *   FILE 577\n//*      000007  SET MAXCC  = 0                                     *   FILE 577\n//*                                                                 *   FILE 577\n//*     EXAMPLE IN 3.4:                                             *   FILE 577\n//*     --------------                                              *   FILE 577\n//*                                                                 *   FILE 577\n//*      DSLIST - DATA SETS MATCHING SIS*.SIST19                    *   FILE 577\n//*      COMMAND ===>                                               *   FILE 577\n//*                                                                 *   FILE 577\n//*      COMMAND - ENTER \"/\" TO SELECT ACTION           VOLUME      *   FILE 577\n//*      ------------------------------------------ ... ------      *   FILE 577\n//*               SISTSO.SIST19.MORRAYA                 TST71B      *   FILE 577\n//*      MN       SISTSO.SIST19.PRUEBA                  EXP104      *   FILE 577\n//*               SISTSO.SIST19.RF                      SIST17      *   FILE 577\n//*               SISTSO.SIST19.SHA1.L64                238928      *   FILE 577\n//*      ******************* END OF DATA **********************     *   FILE 577\n//*                                                                 *   FILE 577\n//*     'SISTSO.SIST19.PRUEBA'                                      *   FILE 577\n//*     NUMBER OF RECORDS:                 52                       *   FILE 577\n//*                                                                 *   FILE 577\n//*         ***                                                     *   FILE 577\n//*                                                                 *   FILE 577\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMLKSG": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x06\\x01\\x02\\x14?\\x01\\x02\\x14?\\x14%\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-05-23T00:00:00", "modifydate": "2002-05-23T14:25:06", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R10.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R10.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT447.FILE577(WAITING)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB447577\n SETCODE AC(0)\n NAME    WAITING(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CASIO": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x008\\x008\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 56, "newlines": 56, "modlines": 0, "user": "PERGEN"}, "text": "/*----------------- REXX ---------- PERGEN --------------*/\nR1='';S1='';R2='';S2='';R3='';S3='';R4='';S4='';R5='';S5=''\nR6='';S6='';R7='';S7='';R8='';S8='';R9='';S9='';R0='';S0=''\nA=0 ; B=0 ; C=0 ; D=0 ; E=0 ; F=0 ; G=0 ; H=0 ; I=0 ; J=0\nK=0 ; L=0 ; M=0 ; N=0 ; O=0 ; P=0 ; Q=0 ; R=0 ; S=0 ; T=0\nRESUL='' ; RANT=0\nVALORES='ABCDEFGHIJKLMNOPQRST0123456789 +-*/%().,'\nADDRESS ISPEXEC\nCASIOW:\nNUMERIC DIGITS 20\nSIGNAL ON SYNTAX\nDO FOREVER\n   'ADDPOP'\n   'DISPLAY PANEL(PCASIO)'\n   IF RC=8 THEN EXIT\n   PUSH RISTRA\n   PULL RISTRA .\n   D1=SUBSTR(RISTRA,1,1)\n   D2=VERIFY(D1,'ABCDEFGHIJKLMNOPQRST')\n   IF D2>0 THEN IF \u00acDATATYPE(D1,'N') & D1\u00ac='(' THEN RISTRA2=RANT||RISTRA\n                ELSE RISTRA2=RISTRA\n   ELSE RISTRA2=RISTRA\n   IF VERIFY(RISTRA2,VALORES)\u00ac=0 THEN SIGNAL SYNTAX\n   IF INDEX(RISTRA2,',')\u00ac=0 THEN SIGNAL COMAPUNTO\n   ELSE DO\n      INTERPRET 'RESUL='RISTRA2\n      CALL CAMBIO\n   END\nEND\nEXIT\n\nSYNTAX:\n  ERR='THE ENTER VALUE 'RISTRA' IS NOT CORRECT'\n  'SETMSG MSG(CASI010)'\nSIGNAL CASIOW\n\nCOMAPUNTO:\n  ERR='DEBE UTILIZAR ''.'' PARA LOS DECIMALES EN VEZ DE '','' '\n  /* THIS IS FOR SPANISH NUMBERS */\n  'SETMSG MSG(CASI010)'\nSIGNAL CASIOW\n\nCAMBIO:\n  S0=S9;S9=S8;S8=S7;S7=S6;S6=S5;S5=S4;S4=S3;S3=S2;S2=S1;S1=R9\n  R0=R9;R9=R8;R8=R7;R7=R6;R6=R5;R5=R4;R4=R3;R3=R2;R2=R1;R1=RESUL\n  A=R1;B=R2;C=R3;D=R4;E=R5;F=R6;G=R7;H=R8;I=R9;J=R0\n  K=S1;L=S2;M=S3;N=S4;O=S5;P=S6;Q=S7;R=S8;S=S9;T=S0\n  IF A='' THEN A=0 ; IF B='' THEN B=0 ; IF C='' THEN C=0\n  IF D='' THEN D=0 ; IF E='' THEN E=0 ; IF F='' THEN F=0\n  IF G='' THEN G=0 ; IF H='' THEN H=0 ; IF I='' THEN I=0\n  IF J='' THEN J=0 ; IF K='' THEN K=0 ; IF L='' THEN L=0\n  IF M='' THEN M=0 ; IF N='' THEN N=0 ; IF O='' THEN O=0\n  IF P='' THEN P=0 ; IF Q='' THEN Q=0 ; IF R='' THEN R=0\n  IF S='' THEN S=0 ; IF T='' THEN T=0\n  RANT=RESUL\nRETURN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CASI01": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x02\\x00\\x02\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 2, "newlines": 2, "modlines": 0, "user": "PERGEN"}, "text": "CASI010 .ALARM=YES .WINDOW=RESP\n'&ERR'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EASTER": {"ttr": 538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\n\\x00\\n\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 10, "newlines": 10, "modlines": 0, "user": "PERGEN"}, "text": "/* REXX  --   GAUSS */\nDO N=1980 TO 2020\n    A=N//19 ; B=N//4 ; C=N//7\n    D=(24+19*A)//30 ; E=(5+2*B+4*C+6*D)//7\n    D1=D+E+22 ; D2=D+E-9\n    IF D1<32 THEN SAY D1'  MARCH 'N\n    ELSE SAY D2'  APRIL 'N\n    SAY '--------------------'\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EMPTY": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00#\\x00#\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 35, "newlines": 35, "modlines": 0, "user": "PERGEN"}, "text": "EMPTY    CSECT\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10,11,12\n         CNOP  0,4\n         B     *+8\n         DC    A(SAVEAR)\n         L     15,*-4\n         ST    13,4(15)\n         ST    15,8(13)\n         LR    13,15\n*----------------------------------------------------------------------\n         L     1,0(1)\n         CLC   0(2,1),=XL2'0'\n         BE    SIG\n         MVC   PARM,2(1)\n         MVI   PARM+4,C'0'\n         PACK  PARM,PARM\n         MVC   RC+2(2),PARM\n*--------------------------------\nSIG      OPEN  (DDINPUT)\n         GET   DDINPUT\n         MVC   RC+2(2),=X'0000'\nP2       CLOSE (DDINPUT)\nRC       LA    15,12\n         L     13,4(13)\n         L     14,12(0,13)\n         LM    0,12,20(13)\n         BR    14\n*-------------------------------------------------------------------\nDDINPUT  DCB   DDNAME=DDINPUT,RECFM=U,EODAD=P2,MACRF=GL,DSORG=PS,      X\n               BLKSIZE=27998\nSAVEAR   DS    18F            SAVEAREA\nPARM     DS    CL3\n         END   EMPTY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EUCLIDES": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00B\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16X\\x00\\x17\\x00\\x17\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:58:42", "lines": 23, "newlines": 23, "modlines": 0, "user": "PERGEN"}, "text": "/*>-- REXX --> ALGORITMO DE EUCLIDES --<*/\n   SAY 'GIVE ME TWO NUMBERS SEPARATE BY A BLANK'\n   PULL ANTA ANTB .\n   DO WHILE ANTA>0 & ANTB>0\n      SAY  ' '\n      SAY 'N2: 'LEFT(ANTB,13)' | N1: 'LEFT(ANTA,13)\n      SAY '---------------------------------------------------------'\n      N1=ANTA ; N2=ANTB ; R=N2//N1\n      DO WHILE R>0\n         N2=N1 ; N1=R ; R=N2//N1\n         SAY 'N1: 'LEFT(N1,13)' | N2: 'LEFT(N2,13)' | R: 'LEFT(R,13)\n      END\n      SAY '---------------------------------------------------------'\n      SAY 'GCD = 'N1\n      NUMERIC DIGITS 20\n      MCM=ANTA*ANTB/N1\n      SAY 'LCM = 'MCM\n      SAY  ' '\n      SAY 'GIVE ME TWO NUMBERS SEPARATE BY A BLANK'\n      SAY 'OR INTRO TO QUIT'\n      PULL ANTA ANTB .\n  END\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXPCLEAN": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14?\\x14#\\x00,\\x00,\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-23T14:23:07", "lines": 44, "newlines": 44, "modlines": 0, "user": "PERGEN"}, "text": "EXPCLEAN CSECT\n         STM    R14,R12,12(R13)     SALVAR REGISTROS\n         LR     R3,R15\n         USING  EXPCLEAN,R3         R3 COMO BASE\n         LA     R12,SAVE            EN R12 SAVEARAEA\n         ST     R13,4(R12)          ENCADENAR\n         ST     R12,8(R13)          SAVEAREAS\n         LR     R13,R12             DIRECCIONAR MI SAVEAREA\n         LA     R11,DCBCOMUN        DIRECCIONAR DCB\n         USING  IHADCB,R11          Y DSECT\n         L      R4,16               EN R4 DIR. CVT\n         L      R4,0(R4)            EN R4 DIR. TCB,S\n         L      R4,0(R4)            EN R4 DIR. TCB ACTUAL\n         L      R4,12(R4)           EN R4 TIOT\n         LA     R4,24(R4)           A PRIMERA DD\n         SR     R6,R6               LIMPIAR R6\nLOOPOPEN DS     0H\n         CLI    0(R4),X'00'         LONG. CERO\n         BE     FINLOOP             SI A FIN\n         IC     R6,0(R4)            EN R6 LONG. A DESPLAZARSE\n         CLC    =C'@',4(R4)         ES DD A LIMPIAR\n         BNE    SLOOPEX             NO,EXCLUIR\n         MVC    DCBDDNAM,4(R4)      MOVER DDNAME A DCB\n         OPEN   (DCBCOMUN,(OUTPUT))\n         CLOSE  (DCBCOMUN)          CERRAR\n         SPACE  2\nSLOOPEX  DS     0H\n         AR     R4,R6               INDEXAR TIOT\n         B      LOOPOPEN            A LOOP OPEN\n         SPACE  3\nFINLOOP  DS     0H\n         LA     R15,0\n         L      R13,4(R13)          DIRECCIONAR SAVEREA ANTERIOR\n         RETURN (14,12),RC=(15)     DEVOLVER CONTROL\n         SPACE  3\n*-------------------------***------------------------------------\n         PRINT  NOGEN\nSAVE     DC     18F'0'\nDCBCOMUN DCB    DDNAME=SYSUT1,DSORG=PS,MACRF=(PM),BUFL=32760,BUFNO=1\n         DC     CL8' PERGEN '\n         LTORG\n         DCBD   DSORG=PS\n         YREGS\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FFF": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 26, "newlines": 26, "modlines": 0, "user": "PERGEN"}, "text": "/*---< REXX >---*/\nARG LINEA\nFICH='';MIEMB=''\nDO I=1 TO LENGTH(LINEA)\n   LT=SUBSTR(LINEA,I,1)\n   IF LETRA(LT,'0') THEN FICH=FICH||LT\n   ELSE IF LT='.' THEN FICH=FICH||LT\n        ELSE IF LT='(' THEN CALL MIEMBRO\n             ELSE LEAVE\nEND\nADDRESS ISPEXEC\n'VPUT (FICH,MIEMB)'\nRETURN 0\nMIEMBRO:\n   DO UNTIL I=LENGTH(LINEA)\n      I=I+1\n      LT=SUBSTR(LINEA,I,1)\n      IF LETRA(LT,'1') THEN MIEMB=MIEMB||LT\n      ELSE LEAVE\n   END\nRETURN\nLETRA:\n  ARG LT,AST\n  IF DATATYPE(LT,'A') | LT='-' | LT='+' THEN RETURN 1\n  ELSE IF AST THEN RETURN LT='@'|LT='%'|LT='$'|LT='*'\n       ELSE RETURN LT='@'|LT='%'|LT='$'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FGF": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 27, "newlines": 27, "modlines": 0, "user": "PERGEN"}, "text": "/*REXX*/\nARG FICH,MIEMB .\n\nIF MIEMB>0 THEN DO\n   SAY 'GENERACION NO EXISTENTE, \u00bf QUIERE VER LA ULTIMA ? (S/N)'\n   PULL AW\n   IF TRANSLATE(AW)='S' THEN GEN=1 ; ELSE RETURN 8\nEND\nELSE GEN=ABS(MIEMB)+1\n\nDROP GEN.\nX=OUTTRAP(GEN.)\n\"LISTC ENTRIES(\"FICH\") NAME\"\nADDRESS ISPEXEC\nDO I=GEN.0 TO 1 BY -1\n   PUSH GEN.I\n   PULL P1 . FF .\n   IF P1='NONVSAM' THEN DO\n      GEN=GEN-1\n      IF GEN=0 THEN DO\n         IF INDEX(FF,FICH'.G') THEN DO\n            FICH=FF ; 'VPUT (FICH)' ; RETURN 0\n         END\n      END\n   END\nEND\nRETURN 12\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INF10": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x0e\\x00\\x0e\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 14, "newlines": 14, "modlines": 0, "user": "PERGEN"}, "text": "INF101       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'DEBE TECLEAR ALGUNA OPCION'\nINF102       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'ESTA OPCION ES INEXISTENTE'\nINF103       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'DEBE TECLEAR UN NUMERO HEXADECIMAL'\nINF104       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'EL CAMPO DEBE SER NUMERICO'\nINF105       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'DEBE INTRODUCIR           UN  1  O UN  2'\nINF106       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'DEBE TECLEAR 12 DIGITOS'\nINF107       .WINDOW=RESP .ALARM=YES .TYPE=NOTIFY\n'MAX. LENGHT IS 27998'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IRXNREG": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x008\\x01\\x02\\x14/\\x01\\x02\\x14?\\x14\\x00\\x00@\\x00?\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-23T14:00:38", "lines": 64, "newlines": 63, "modlines": 0, "user": "PERGEN"}, "text": "         TITLE 'OBTENCION DEL NUMERO DE REGISTROS DEL FICHERO ENTRADA'\nIRXNREG  START 0\n         YREGS\n         DS    0H\n         STM   14,12,12(13)\n         BALR  12,0\n         USING *,12\n         LA    14,SAVE\n         ST    13,4(14)\n         ST    14,8(13)\n         LR    13,14\n*---------------------------------------------------------------------*\n         LA    R5,IRX_SHVBLOCK\n         USING SHVBLOCK,R5\n         OPEN  (ENTRADA)\n*\nLEER     GET    ENTRADA\n         AP     CONTADOR,=P'1'\n         B      LEER\n*\nFIN      CLOSE  (ENTRADA)\n         MVC    NREGS,MASK\n         ED     NREGS,CONTADOR\n*\n         MVI   SHVCODE,C'S'\n         MVC   SHVVALL,=F'16'\n         MVC   SHVBUFL,=A(L'NREGS)\n         MVC   SHVVALA,=A(NREGS)\n         MVC   VN,=C'NREGS '\n         BAL   R14,SUBVNL\n         ST    R0,SHVNAML\n         MVC   SHVNAMA,=A(VN)\n         LINK  EP=IRXEXCOM,PARAM=(IRX_IRXEXCOM,0,0,IRX_SHVBLOCK),VL=1\n*\n         L     13,4(13)\n         RETURN (14,12),RC=0\n*\nENTRADA  DCB   DSORG=PS,MACRF=GL,DDNAME=ENTRADA,EODAD=FIN\n*\nSAVE     DS    18F\nCONTADOR DC    PL8'0'\nNREGS    DC    CL16' '\nMASK     DC    X'40202020202020202020202020202020'\n*\nSUBVNL   DS    0H\n         LA    R1,L'VN\n         SR    R0,R0\n         LA    R15,VN\nSUBVNL1  CLI   0(R15),C' '\n         BER   R14\n         AH    R0,=H'1'\n         LA    R15,1(R15)\n         BCT   R1,SUBVNL1\n         BR    R14\n*-----------------------------------------------------------\nVN       DS   2CL18\nVL       DS   F\n*\n         DC   C'PERGEN'\n         LTORG\nIRX_IRXEXCOM DC CL8'IRXEXCOM'\nIRX_SHVBLOCK DC (SHVBLEN)X'0'\n         IRXSHVB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IRXNREG$": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x02\\x14O\\x01\\x02\\x14O\\t)\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-24T00:00:00", "modifydate": "2002-05-24T09:29:10", "lines": 29, "newlines": 29, "modlines": 0, "user": "PERGEN"}, "text": "//PERGEN@  JOB (0),' ',CLASS=C,MSGCLASS=C,NOTIFY=&SYSUID\n//*---------------------------------------------------------------------\n//ASMLINK  PROC PROG='IRXNREG',              -> PROGRAMA\n//         LIB1='SISSHR.SIST19.EXEC',        -> PROGRAM\n//         LIB2='SISSHR.SIST19.LOAD'         -> MODULE\n//*--------------------------------------------------------------------\n//C        EXEC PGM=ASMA90,PARM=(OBJ,LIST)\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//         DD  DSN=&LIB1,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,5))\n//SYSPUNCH DD  SYSOUT=B,DCB=(BLKSIZE=800),SPACE=(CYL,(1,1,0))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//             DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSIN    DD  DSN=&LIB1(&PROG),DISP=SHR\n//*--------------------------------------------------------------\n//L        EXEC PGM=IEWL,REGION=1M,COND=(8,LT,C),\n//             PARM='XREF,LET,LIST,MAP,CALL'\n//*            PARM='MAP,LET,LIST,NCAL,AC=1,RENT,REUS,REFR'\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=&LIB2(&PROG),DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))\n//SYSLIB DD  DSN=CSF.SCSFMOD0,DISP=SHR         PARA CRIPTOGRAFIA\n//SYSPRINT DD  SYSOUT=*\n//         PEND\n//*--------------------------------------------------------------\n//ASMLIN0  EXEC ASMLINK\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JEMPTY": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 27, "newlines": 27, "modlines": 0, "user": "PERGEN"}, "text": "//PERGEN01 JOB CLASS=C,MSGCLASS=C,MSGLEVEL=(1,1),\n//         NOTIFY=&SYSUID\n//JOBLIB   DD  DSN=XXXXXXXXXXXXXXXXXX,DISP=SHR  -> YOUR LOAD LIBRARIE\n//*--------------------------------------------------------------------\n//E01      EXEC PGM=EMPTY\n//SYSPRINT DD  SYSOUT=*\n//DDINPUT  DD  *\n  1\n  2\n  3\n/*\n//*--------------------------------------------------------------------\n//E02      EXEC PGM=EMPTY\n//SYSPRINT DD  SYSOUT=*\n//DDINPUT  DD  *\n/*\n//*--------------------------------------------------------------------\n//E03      EXEC PGM=EMPTY,PARM='10'\n//SYSPRINT DD  SYSOUT=*\n//DDINPUT  DD  *\n/*\n//*--------------------------------------------------------------------\n//E04      EXEC PGM=EMPTY,PARM='08'\n//SYSPRINT DD  SYSOUT=*\n//DDINPUT  DD  DSN=AAAAAA.AAAAAAA.AAAAAAA.AAAAAA,DISP=SHR\n//         DD  DSN=BB.BBBBB.BBBBBBBB.BBBBBBBBBBB,DISP=SHR\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JEXPCL": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x13\\x00\\x13\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 19, "newlines": 19, "modlines": 0, "user": "PERGEN"}, "text": "//PERGEN01 JOB CLASS=C,MSGCLASS=C,MSGLEVEL=(1,1),\n//         NOTIFY=&SYSUID\n//JOBLIB   DD  DSN=XXXXXXXXXXXXXXXXXX,DISP=SHR  -> YOUR LOAD LIBRARIE\n//*--------------------------------------------------------------------\n//E01      EXEC PGM=EXPCLEAN\n//SYSPRINT DD  SYSOUT=*\n//@@DD1    DD  DSN=SISTSO.SIST19.RESPAL.DCOLLECT.SALIDA,\n//             SPACE=(CYL,(10,10)),\n//             DISP=(,CATLG,DELETE),UNIT=3390,\n//             DCB=(LRECL=70,RECFM=FB,BLKSIZE=0,DSORG=PS)\n//@@A152   DD  DSN=EX0PAP.PSTAT03.SIST19,\n//             SPACE=(TRK,(30,15)),\n//             DISP=(,CATLG,DELETE),UNIT=SYSDA,\n//             DCB=(LRECL=133,RECFM=FBA,BLKSIZE=0,DSORG=PS)\n//@@YUHU   DD  DSN=EX0PAP.PLANIF.SIST,DISP=SHR\n//*--------------------------------------------------------------------\n//* NOTE:\n//*  @@YUHU MUST EXIST, EXPCLEAN WILL CLEAR THE DATA IT HAS\n//*--------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JWAIT": {"ttr": 789, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x05\\x00\\x05\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 5, "newlines": 5, "modlines": 0, "user": "PERGEN"}, "text": "//PERGEN01 JOB (0),' ',CLASS=C,MSGCLASS=C,NOTIFY=&SYSUID\n//*-------------------------------HHMMSSTH------------------------------\n//W01      EXEC PGM=WAITING,PARM='00003000'\n//STEPLIB  DD  DSN=XXXXXXXXXXXXXXXXXX,DISP=SHR  -> YOUR LOAD LIBRARIE\n//*---------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTA": {"ttr": 791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00&\\x00&\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 38, "newlines": 38, "modlines": 0, "user": "PERGEN"}, "text": "/*REXX*/\nSAY 'WHICH DDNAME DO YOU WANT ?'\nSAY '   INTRO GIVES ALL   '\nPULL DDNAME\nIF DDNAME='' THEN DDNAME='TODAS'\nX=OUTTRAP(\"LIN.\")\n\"LISTA ST\"\nSAY ' DDNAMES       DSNAMES                                    '\nSAY '----------    --------------------------------------------'\nIF TRANSLATE(DDNAME)='TODAS' THEN DO\n  DO I=2 TO LIN.0\n     IF SUBSTR(LIN.I,1,2)='  ' &  SUBSTR(LIN.I,3,1)\u00ac=' ' THEN DO\n        DDNAME=WORD(LIN.I,1)\n        CALL PROGTOT\n     END\n  END\nEND\nELSE DO\n   DO I=2 TO LIN.0\n      IF WORD(LIN.I,1)=DDNAME THEN LEAVE\n   END\n   CALL PROGTOT\nEND\nEXIT\n\nPROGTOT:\nIF I>LIN.0 THEN EXIT\nK=I-1 ; NUM=1\nSAY ' 'LEFT(DDNAME,13)RIGHT(NUM,2)'.- 'STRIP(LIN.K)\nDO K=I+1 TO LIN.0 BY 2\n    J=K+1\n    PARSE VAR LIN.J UNO 12 .\n    IF STRIP(UNO)\u00ac='' THEN LEAVE\n    NUM=NUM+1\n    SAY '              'RIGHT(NUM,2)'.- 'STRIP(LIN.K)\nEND\nSAY ' ' ; SAY ' '\nRETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MN": {"ttr": 793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x003\\x01\\x02\\x14\\x7f\\x01\\x02\\x14\\x7f\\tQ\\x009\\x009\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2002-05-27T00:00:00", "modifydate": "2002-05-27T09:51:33", "lines": 57, "newlines": 57, "modlines": 0, "user": "SBGOLOB"}, "text": "/*REXX   -   ENGLISH MESSAGES VERSION OF MNF  */\nPARSE ARG FICHE .\nIF FICHE='' THEN FICHE='FICHE'\nPARSE SOURCE ENT .\nIF ENT\u00ac='TSO' THEN SIGNAL BATCH\nIF FICHE='FICHE' THEN DO\n     ADDRESS ISREDIT;\n     \"MACRO\"\n     \"(LIN,COL) = CURSOR\"\n     \"(LINEA) = LINE .ZCSR\"\n     LINEA=SUBSTR(LINEA,COL)\n     X=FFF(LINEA)\n     ADDRESS ISPEXEC\n     'VGET (FICH,MIEMB)'\n   IF MIEMB\u00ac='' & DATATYPE(MIEMB,'N') THEN DO\n      X=FGF(FICH,MIEMB)\n      IF X=8 THEN EXIT 0\n      IF X=12 THEN DO\n         ADDRESS ISREDIT\n         'LINE_AFTER 'LIN' = MSGLINE \"NONEXISTENT 'FICH\"(\"MIEMB\")\"'\"'\n         EXIT 4\n      END\n      ADDRESS ISPEXEC  'VGET (FICH)' ; MIEMB=''\n   END\n   IF MIEMB\u00ac='' THEN FICH=\"'\"FICH'('STRIP(MIEMB)')'\"'\"\n   ELSE FICH=\"'\"FICH\"'\"\nEND\nELSE FICH=FICHE\nADDRESS TSO\nMSG=MSG('OFF')\n'FREE FI(ENTRADA)'\nMSG=MSG('ON')\n'ALLOC DA('FICH') FI(ENTRADA) SHR REUSE'\nIF RC>4 THEN DO\n   SAY 'ERROR IN ALLOCATION OF   'FICH\n   EXIT\nEND\nBATCH:\n\"CALL 'SBGOLOB.W$$.LINKLIB(IRXNREG)' \"    /* CHANGE TO YOUR LIBRARY */\nIF RC\u00ac=0 THEN EXIT\nIF ENT='TSO' THEN 'FREE FI(ENTRADA)'\nIF ENT\u00ac='TSO' | (ENT='TSO' & FICHE\u00ac='FICHE') THEN DO\n    SAY FICH\n    SAY '   NUMBER OF RECORDS:   'NREGS\n/*  SAY '________________________________________________________' */\n    EXIT 0\nEND\nADDRESS ISREDIT;\n\"(LINEA) = CURSOR\"\n\"LINE_AFTER \"LIN\" = MSGLINE 'NUMBER OF RECORDS:   \"NREGS\"'\"\n\"LINE_AFTER \"LIN\" = MSGLINE '\"FICH\"'\"\nIF MIEMB\u00ac=FICH&MIEMB\u00ac='' THEN DO\n\"LINE_AFTER \"LIN\" = MSGLINE '--------------------------------------'\"\n\"LINE_AFTER \"LIN\" = MSGLINE '# CHARS IN MEMBER NAME: \"LENGTH(MIEMB)\"'\"\n\"LINE_AFTER \"LIN\" = MSGLINE '\"MIEMB\"'\"\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MNF": {"ttr": 795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00#\\x01\\x02\\x14\\x7f\\x01\\x02\\x14\\x7f\\tG\\x009\\x009\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2002-05-27T00:00:00", "modifydate": "2002-05-27T09:47:23", "lines": 57, "newlines": 57, "modlines": 0, "user": "PERGEN"}, "text": "/*REXX*/\nPARSE ARG FICHE .\nIF FICHE='' THEN FICHE='FICHE'\nPARSE SOURCE ENT .\nIF ENT\u00ac='TSO' THEN SIGNAL BATCH\nIF FICHE='FICHE' THEN DO\n     ADDRESS ISREDIT;\n     \"MACRO\"\n     \"(LIN,COL) = CURSOR\"\n     \"(LINEA) = LINE .ZCSR\"\n     LINEA=SUBSTR(LINEA,COL)\n     X=FFF(LINEA)\n     ADDRESS ISPEXEC\n     'VGET (FICH,MIEMB)'\n   IF MIEMB\u00ac='' & DATATYPE(MIEMB,'N') THEN DO\n      X=FGF(FICH,MIEMB)\n      IF X=8 THEN EXIT 0\n      IF X=12 THEN DO\n         ADDRESS ISREDIT\n         'LINE_AFTER 'LIN' = MSGLINE \"NO EXISTE 'FICH\"(\"MIEMB\")\"'\"'\n         EXIT 4\n      END\n      ADDRESS ISPEXEC  'VGET (FICH)' ; MIEMB=''\n   END\n   IF MIEMB\u00ac='' THEN FICH=\"'\"FICH'('STRIP(MIEMB)')'\"'\"\n   ELSE FICH=\"'\"FICH\"'\"\nEND\nELSE FICH=FICHE\nADDRESS TSO\nMSG=MSG('OFF')\n'FREE FI(ENTRADA)'\nMSG=MSG('ON')\n'ALLOC DA('FICH') FI(ENTRADA) SHR REUSE'\nIF RC>4 THEN DO\n   SAY 'ERROR EN LA ALOCACION DE 'FICH\n   EXIT\nEND\nBATCH:\n\"CALL 'SISSHR.SIST19.LOAD(IRXNREG)' \"      /* CHANGE TO YOUR LIBRARY */\nIF RC\u00ac=0 THEN EXIT\nIF ENT='TSO' THEN 'FREE FI(ENTRADA)'\nIF ENT\u00ac='TSO' | (ENT='TSO' & FICHE\u00ac='FICHE') THEN DO\n    SAY FICH\n    SAY '   NUMERO DE REGISTROS: 'NREGS\n/*  SAY '________________________________________________________' */\n    EXIT 0\nEND\nADDRESS ISREDIT;\n\"(LINEA) = CURSOR\"\n\"LINE_AFTER \"LIN\" = MSGLINE 'NUMERO DE REGISTROS: \"NREGS\"'\"\n\"LINE_AFTER \"LIN\" = MSGLINE '\"FICH\"'\"\nIF MIEMB\u00ac=FICH&MIEMB\u00ac='' THEN DO\n\"LINE_AFTER \"LIN\" = MSGLINE '--------------------------------------'\"\n\"LINE_AFTER \"LIN\" = MSGLINE 'LONGITUD: \"LENGTH(MIEMB)\"'\"\n\"LINE_AFTER \"LIN\" = MSGLINE '\"MIEMB\"'\"\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCASIO": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00#\\x00#\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 35, "newlines": 35, "modlines": 0, "user": "PERGEN"}, "text": ")ATTR DEFAULT(%+_)\n  $ TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(RIGHT) SKIP(ON)\n  ! COLOR(RED) HILITE(REVERSE) PAD(' ') JUST(RIGHT)\n  \u00a2 TYPE(OUTPUT) INTENS(LOW) PAD(' ')\n  } TYPE(TEXT) COLOR(GREEN)\n)BODY EXPAND (//)\n%\n+                                                            TIME :%&ZTIME\n+                                                            DATE :%&ZDATE\n% OPERATION  %===>_RISTRA                                           +\n+\n+-----------------------------% MEMORIES+------------------------------\n}A\u00a2R1                              }K\u00a2S1\n}B\u00a2R2                              }L\u00a2S2\n}C\u00a2R3                              }M\u00a2S3\n}D\u00a2R4                              }N\u00a2S4\n}E\u00a2R5                              }O\u00a2S5\n}F\u00a2R6                              }P\u00a2S6\n}G\u00a2R7                              }Q\u00a2S7\n}H\u00a2R8                              }R\u00a2S8\n}I\u00a2R9                              }S\u00a2S9\n}J\u00a2R0                              }T\u00a2S0\n+---------------------------------%OUTPUTS+-----------------------------\n+ OUTPUT     %===>!RESUL                                  +\n+               %PFK-END+END           %PFK-HELP+HELP\n%\n+                                                                @PERGEN\n)INIT\n   &ZWINTTL='< C A L C U L A D O R A >'\n  .CURSOR = RISTRA\n  .ATTR(.CURSOR) = 'HILITE(REVERSE)'\n  .HELP=PCASIOH\n)PROC\n    VER (&RISTRA,NB)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PCASIOH": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x19\\x00\\x19\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:02", "lines": 25, "newlines": 25, "modlines": 0, "user": "PERGEN"}, "text": ")ATTR DEFAULT(\u00a2|_)\n)BODY\n\u00a2---------------------------< C A L C U L A D O R A >-------------------\n\u00a2------------------------------- INSTRUCTIONS --------------------------\n\u00a2\n\u00a2\n\u00a2\n\u00a2            -|ONE BLANK INDICATE END OF OPERATION\n\u00a2\n\u00a2            -|NEGATIVE NUMBERS MUST BE IN PARENTHESIS\n\u00a2\n\u00a2            -|THE LETTERS IN THE BOTTOM PART ARE MEMORIES\n\u00a2\n\u00a2            -|** POTENTITIOMN\n\u00a2            -|% INTEGER DIVISION\n\u00a2            -|// REMAINDER OF THE DIVISION\n\u00a2\n\u00a2             EXAMPLES ==> 7/2  =  3.5       3**2  =  9\n\u00a2                          7%2  =  3\n\u00a2                          7//2 =  1\n\u00a2\n\u00a2                          IF B = 345.6 => 23+B-0.6 = 322\n\u00a2\n)INIT\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PSPACE1": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x16\\x00\\x16\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:07", "lines": 22, "newlines": 22, "modlines": 0, "user": "PERGEN"}, "text": ")ATTR\n   \u00ac TYPE(TEXT)  SKIP(ON)\n   ? TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n   @ TYPE(INPUT) INTENS(HIGH) COLOR(RED) PAD(_)\n)BODY WINDOW(41,4)\n      ?  CALCULO DE ESPACIO  +\n\n?REGISTER LRECL       +====>   @LREC    \u00ac\n?NUMBER OF REGISTERS +=====>   @NUMREG  \u00ac\n)INIT\n     &NUMREG = ' '\n     &LREC = ' '\n)PROC\n  VER (&LREC,NB,NUM)\n  IF (&LREC = '0')\n    VER (&LREC,LIST,1,2)\n  IF (&LREC > 27998)\n     .MSG=INF107\n  VER (&NUMREG,NB,NUM)\n  IF (&NUMREG = '0')\n    VER (&NUMREG,LIST,1,2)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PSPACE2": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x0b\\x00\\x0b\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:07", "lines": 11, "newlines": 11, "modlines": 0, "user": "PERGEN"}, "text": ")ATTR\n? TYPE(TEXT) COLOR(WHITE) INTENS(HIGH)\n| TYPE(TEXT) COLOR(YELLOW) INTENS(HIGH)\n% TYPE(OUTPUT) COLOR(YELLOW) INTENS(HIGH)\n\" TYPE(OUTPUT) COLOR(YELLOW) INTENS(HIGH) JUST(RIGHT)\n)BODY WINDOW(42,4)\n?FOR A FILE  OF %NUMREG  ?REGISTERS  OF\n   ? LENGTH   %LREC    ?  YOU NEED\n      \"NUMTRK     ? TRACKS    OR\n      \"NUMCYL     ? CYLINDERS\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RWAIT": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x06\\x00\\x06\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:07", "lines": 6, "newlines": 6, "modlines": 0, "user": "PERGEN"}, "text": "/*REXX*/\nPARAM = '00010000'  /* HHMMSSTH */\n\n\"CALL LOAD.LIBRARIE(WAITING) '\"PARAM\"'\"\n\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SPACE": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x00\\x15\\x00\\x15\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:07", "lines": 21, "newlines": 21, "modlines": 0, "user": "PERGEN"}, "text": "/*---  REXX  ---*/\nADDRESS ISPEXEC;\nDO FOREVER\n    ZWINTTL=\" SPACE - DISK 3390 \"\n    \"ADDPOP\"\n    'DISPLAY PANEL(PSPACE1)'\n    IF RC = 8 THEN DO\n       'REMPOP ALL'\n       EXIT\n    END\n    REGBL=27998%LREC\n    NUMCYL = NUMREG%(REGBL*30)\n    IF NUMREG//(REGBL*30)\u00ac=0 THEN NUMCYL=NUMCYL+1\n    NUMTRK = NUMREG%(REGBL*2)\n    IF NUMREG//(REGBL*2)\u00ac=0 THEN NUMTRK=NUMTRK+1\n    ZWINTTL=\" SPACE - DISK 3390 \"\n    \"ADDPOP ROW(9) COLUMN(10)\"\n    'DISPLAY PANEL(PSPACE2)'\n    \"REMPOP\";\"REMPOP\"\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WAITING": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\x02\\x14/\\x01\\x02\\x14/\\x16E\\x003\\x003\\x00\\x00\\xd7\\xc5\\xd9\\xc7\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T16:45:07", "lines": 51, "newlines": 51, "modlines": 0, "user": "PERGEN"}, "text": "         TITLE 'WAITING'\n***********************************************************************\n* PARM = 'HHMMSSTH'                                                   *\n* WHERE ... HH = HOURS            ESTE PROGRAMA ESPERA EL TIEMPO      *\n*           MM = MINUTES          INDICADO EN EL PARM SIN CONSUMO     *\n*           SS = SECONDS          DE CPU.                             *\n*           TH = THOUSANDS                                            *\n***********************************************************************\nWAITING  CSECT\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10,11,12\n         CNOP  0,4\n         B     *+8\n         DC    A(SAVEAR)\n         L     15,*-4\n         ST    13,4(15)\n         ST    15,8(13)\n         LR    13,15\n*----------------------------------------------------------------------\n         L      R1,0(R1)\n         MVC    PARM,2(R1)          OBTIENE TIEMPO DE ESPERA DEL PARM\n*----------------------------------------------------------------------\n         PACK   TIEMPO(5),PARM(9)\n         STIMER WAIT,DINTVL=PARM    LLAMADA A UNA MACRO DE IBM\nFIN      L     13,4(13)\n         RETURN (14,12),RC=0\n*\n         DS     0D\nSAVEAR   DS     18F            SAVEAREA\nPARM     DC     CL8' '              PARM DE ENTRADA HHMMSSTH\n         DS     0F\nTIEMPO   DC     XL4'0',X'0'         TIEMPO DE ESPERA PARA MACRO\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n         LTORG\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT577/FILE577.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT577", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}