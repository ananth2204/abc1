{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012120000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE465.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE465.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\x07'", "DS1TRBAL": "b'\\xa8\\xf0'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03l\\x00\\x0b\\x03m\\x00\\x05\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"#CONTENT": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "************************************************************************\n************************************************************************\n************************************************************************\n\n\nThere is no implied support for any dialogs on this tape.\n\nDialogs submitted as contributions are subject to review for conformity\nto the standards presented by the GUIDE ISPF Project at Guide 60; a copy\nof this document may be found on the DOCS file of this tape.  Any\nmodifications to a submitted dialog will be reviewed with the author.\nThe author always has the right to withdraw a dialog because he does not\nwant the modifications made to his code.\n\nThe above policy has been established by the GUIDE ISPF Project to make\navailable to its users a reliable tape. The tape should be easily\ninstalled and hopefully maintainable for future versions of the ISPF\nproduct.\n\nIf multiple users submit a common dialog (their dialogs perform similar\nfunctions), an attempt will be made to produce one dialog containing the\nbest features of all. The new dialog would be sent to the original\nsubmitters.  When appropriate, the original dialogs will also be\navailable on the tape (conforming to standards).\n\n\n************************************************************************\n************************************************************************\n************************************************************************\n\n\n*********************************************\nThis PDS members are in the following format:\n*********************************************\n\n\nAll members ending with non-special characters are Dialog description\nand install instructions.\n\nAll members ending with @ are installation JCL members for the dialog.\n\nMember #UPDATE contains a list of all Dialogs and their last\nmodification date. This allows you only to unload or test the new\nversions of a dialog (instead of reinstalling all of them).\n\nMember #MOD is similar to #UPDATE. It is maintained in date order\nand contains a brief description of the update.\n\n\n\n*******************************************************\nIn this PDS, the following naming conventions are used:\n*******************************************************\n\n     Tape Files:   DSN=GUIDE.xyz    where xyz is the tape dsname.\n                                    For example, all references to\n                                    the ISPF MACROS on the tape are\n                                    coded as DSN=GUIDE.ISPFMACS\n\n     Installation Files:\n                   DSN=INSTALL.xyz  where xyz is your installation lib-\n                                    rary ddname.  For example, all\n                                    references to an installation ISPF\n                                    panel library are coded as\n                                    DSN=INSTALL.ISPPLIB\n\n\n*********************************************************************\nThe following is a list of all current TAPE. and INSTALL. references:\n*********************************************************************\n\nINSTALL.SYSPROC. . . . . Installation CLIST Library\nINSTALL.SYSHELP. . . . . Installation HELP  Library\nINSTALL.ISPPLIB. . . . . Installation ISPF Panel Library\nINSTALL.ISPSLIB. . . . . Installation ISPF Skeleton Library\nINSTALL.ISPMLIB. . . . . Installation ISPF Message Library\nINSTALL.ISPTLIB. . . . . Installation ISPF Table Library\nINSTALL.ISPLLIB. . . . . Installation ISPF Task Library\nINSTALL.ISPLINK. . . . . Installation Load Lib containing ISPLINK module\nINSTALL.STEPLIB. . . . . Installation Steplib (or Linklist Library)\nINSTALL.LINKLIB. . . . . Installation Steplib (or Linklist Library)\n\n\n********************************************************\nEdit Macro to Support modifying JCL values listed above:\n********************************************************\n\nMember #EDITMAC in this PDS is an Edit Macro.                           Its\n\nFunction is to change all INSTALL. and TAPE. values to your personall\ninstallation values. To use this macro you first edit the edit macro to make\nsure the edit CHANGE commands change INSTALL. to your installation values. Then\nmove the edit macro to your SYSPROC PDS, finally you may issue the edit macro\nwhen editing any of the JCL.\n\n\n***********************\nDirect any questions to\n***********************\n\nBob Zimmerman\nCNA Insurance\nCNA Plaza - 8CS\nChicago, Il 60685\n(312) 822-5719\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#EDITMAC": {"ttr": 519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ISREDIT CHANGE ALL 'INSTALL.SYSPROC' +\n                   'INSTALL.SYSPROC'\n\nISREDIT CHANGE ALL 'INSTALL.SYSHELP' +\n                   'INSTALL.SYSHELP'\n\nISREDIT CHANGE ALL 'INSTALL.ISPPLIB' +\n                   'INSTALL.ISPPLIB'\n\nISREDIT CHANGE ALL 'INSTALL.ISPSLIB' +\n                   'INSTALL.ISPSLIB'\n\nISREDIT CHANGE ALL 'INSTALL.ISPTLIB' +\n                   'INSTALL.ISPTLIB'\n\nISREDIT CHANGE ALL 'INSTALL.ISPMLIB' +\n                   'INSTALL.ISPMLIB'\n\n\nISREDIT CHANGE ALL 'INSTALL.ISPLLIB' +\n                   'INSTALL.ISPLLIB'\n\n\nISREDIT CHANGE ALL 'INSTALL.ISPLINK' +\n                   'INSTALL.ISPLINK'\n\n\nISREDIT CHANGE ALL 'INSTALL.STEPLIB' +\n                   'INSTALL.STEPLIB'\n\nISREDIT CHANGE ALL 'INSTALL.DICT' +\n                   'INSTALL.DICT'\n\nISREDIT  CHANGE ALL P'\u00ac' 72 ''\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#MODS": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "************************************************************************\nTHIS LIST IS IN MODIFICATION ORDER AND INCLUDES A DESCRIPTION OF THE\nCHANGE THAT OCCURRED\n************************************************************************\n\nDIALOG NAME BELOW IS THE DIALOG NAME LISTED IN DIRECTORY OF THIS PDS\n\nDIALOG   LAST\nNAME     MODIFIED  DESCRIPTION\n-------- --------  -----------\nTUTPRINT 8603      CHRIS GERKEN OF EXXON\n                   NEW DIALOG (PRINTS TUTORIAL PANELS)\n\nNEWMSGS  8603      CAROLINE WILLIAMS OF EXXON\n                   EDIT MACRO (DOCUMENTED IN EDIT MACRO LIBRARY ON TAPE)\n\nBREAKSET 8603      CHRIS GERGEN OF EXXON\n                   NEW DIALOG (AIDS IN SETTING BREAK POINTS)\n\nEDLAST   8603      BOB ZIMMERMAN\n                   NEW DIALOG\n                   REQUIRES DIALOG ED TO BE INSTALLED.\n\nED       8603      BOB ZIMMERMAN\n                   ADDED ERROR RECOVERY SO IF USER ENTERS INVALID DSNAME\n                   HE IS NOW ABLE TO CORRECT IT.\n                   SUPPORT FOR DIALOG EDLAST IS ADDED.\n\nBRLAST   8603      BOB ZIMMERMAN\n                   NEW DIALOG\n                   REQUIRES DIALOG BR TO BE INSTALLED.\n\nBR       8603      BOB ZIMMERMAN\n                   ADDED ERROR RECOVERY SO IF USER ENTERS INVALID DSNAME\n                   HE IS NOW ABLE TO CORRECT IT.\n                   SUPPORT FOR DIALOG BRLAST IS ADDED.\n\nDSNINFO  8603      BOB ZIMMERMAN\n                   FIXED VPUT AND VGET TO ACCESS SHARED POOL (NOT ASIS)\n\nLISTA    8603      BOB ZIMMERMAN\n                   ADDED NEW COMMAND SETPROF\n                   CORRECTED THE LOCATE COMMAND TO WORK LIKE PDF\n                   ALLOWS THE LIST OF ONLY CERTAIN DDNAMES\n\nDSINDEX  8512      DAVID ALCOCK\n                   ADDED NEW DIALOG\n\nRECALL   8508.3    BOB ZIMMERMAN\n                   ADDED NEW DIALOG\n                   RECALLS LAST EDIT COMMAND WHILE IN EDIT\n\nCOMMANDS 8508.3    BOB ZIMMERMAN\n                   CONVERTED TO ASSEMBLER PROGRAM TO IMPROVE RESPONSE\n                   TUTORIALS FOR ALL COMMANDS GENERATED IN LIST\n\nDSM      8508.3    BOB ZIMMERMAN\n                   ADDED MULTIPLE LIST FEATURE  (REPLACE,COPY)\n                   NOW INVOKES EDREC UTILITY\n\nLISTA    8508.2    BOB ZIMMERMAN\n                   NOW HAS A LOCATE PRIMARY COMMAND\n\nPDSXREF  8508.2    BOB ZIMMERMAN\n                   FIXED BUG WITH DISPLAY OF MEMBER SIZE\n\nKED      8508      BOB ZIMMERMAN\n                   MODIFIED TO SUPPORT EDIT RECOVERY IN VERSION II.\n                   REQUIRES EDREC TO BE ASSEMBLED AND LINKED (IN SRC)\n\nED       8508      BOB ZIMMERMAN\n                   MODIFIED TO SUPPORT EDIT RECOVERY IN VERSION II.\n\nEDRECD   8508      BOB ZIMMERMAN\n                   NEW DIALOG\n\nEDREC    8508      BOB ZIMMERMAN\n                   NEW DIALOG\n\nDSM      8508      BOB ZIMMERMAN\n                   NEW DIALOG\n\nMENU     8506      (EVERYONE CONTRIBUTES - SEE MEMBER MENU)\n                   NEW DIALOG\n\nLISTA    8506      BOB ZIMMERMAN\n                   NEW DIALOG\n\nKSUBS    8506      BOB ZIMMERMAN\n                   WHEN SUBROUTINES RETURNS TERMFILE, JESFILE OR\n                   NULLFILE, IT WILL NOW RETURN VOLSER AS SPACES\n\nJOBLIST  8506      BOB ZIMMERMAN\n                   FIXED BUG ON PANEL (LIST PROC AND STEP CORRECTLY)\n\nTSOJCL   8506      BOB ZIMMERMAN\n                   UPDATED COMMENTS TO INCLUDE INFO ON\n                   EDIT MACRO TSOTOJCL ON THIS TAPE.\n\nTRMLOCK  8506      MIKE BOTOS OF HOUSE INFORMATION SYSTEMS\n                   NEW DIALOG ADDED\n\nGETTABL  8506      BOB ZIMMERMAN OF CNA INSURANCE\n                   NEW DIALOG ADDED\n\nRETTABL  8506      BOB ZIMMERMAN OF CNA INSURANCE\n                   NEW DIALOG ADDED\n\nCOMMANDS 8506      BOB ZIMMERMAN\n                   FIXED BUG WITH ORDER OF TABLE\n                   ADDED ORDER KEYWORD TO TBPUT FOR DUPLICATES\n\nDSNINFO  8506      LIONEL DYCK (ROCKWELL INTERNATIONAL)\n                   NEW DIALOG ADDED\n\nEDITLIST 8506      LAURI DEMOTTS\n                   NEW DIALOG ADDED\n\nJOBLIST  8506      BOB ZIMMERMAN\n                   FIXED BUG ON PANEL JOBBLIST\n\nJOBLIST  8505      BOB ZIMMERMAN\n                   NEW DIALOG ADDED\n\nKSUBS    8505      BOB ZIMMERMAN\n                   THIS IS NOT A DIALOG BUT IS USED BY KED, KBR, KDSN,\n                   KDDN AND KLIB.\n                   THIS SUBROUTINE HAD 2 MINOR BUGS FIXED\n\nCOMMANDS 8505      MIKE SHAW OF MORINO ASSOC\n                   UPDATED BY BOB ZIMMERMAN OF CNA INSURANCE\n                   DOES NOT REQUIRES SYSCMDS MEMBER AND NOW SUPPORTS\n                   NEWAPPL COMMAND TABLES.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#UPDATES": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "************************************************************************\nTHIS LIST IS IN DIALOG NAME ORDER AND LISTS ALL DIALOGS AND LAST DATE\nTHEY WERE MODIFIED\n************************************************************************\n\nTHE DIALOG NAME BELOW IS THE DIALOG NAME LISTED IN THE DIRECTORY OF THIS\nPDS.\n\nDIALOG   LAST      MODIFIED/MAINTAINED\nNAME     MODIFIED  BY\n-------- --------  --------\nBR       8603      BOB ZIMMERMAN\nBREAKSET 8603      CHRIS GERKEN OF EXXON\nBRLAST   8603      BOB ZIMMERMAN\nCOMMANDS 8508.3    (CBT TAPE) BEING MAINTAINED BY BOB ZIMMERMAN\nDSM      8508.3    BOB ZIMMERMAN\nDSINDEX  8512      DAVID ALCOCK\nDSNINFO  8603      LIONEL DYCK OF ROCKWELL INTERNATIONAL\nED       8603      BOB ZIMMERMAN\nEDITLIST 8506      R. CORNELL STERNBERG OF IBM\nEDLAST   8603      BOB ZIMMERMAN\nEDREC    8508      BOB ZIMMERMAN\nEDRECD   8508      BOB ZIMMERMAN\nGETTABL  8506      BOB ZIMMERMAN\nHOLD     8503      BOB ZIMMERMAN\nJOBLIST  8506      BOB ZIMMERMAN (MODIFIED DA TSO CP FROM CBT TAPE)\nKBR      8504      BOB ZIMMERMAN\nKDDN     8504      BOB ZIMMERMAN\nKDSN     8504      BOB ZIMMERMAN\nKED      8508      BOB ZIMMERMAN\nLISTA    8603      BOB ZIMMERMAN\nLOGMSG   8504      BOB ZIMMERMAN\nLSPACE   8504      MIKE SHAW OF MORINO ASSOC\nMENU     8506      (EVERYONE CONTRIBUTES)\nNETTRAK  8504      DENNIS BUSWELL OF STATE OF MONTANA\nNEWMSGS  8603      CAROLINE WILLIAMS OF EXXON\nPDSXREF  8508.2    BOB ZIMMERMAN\nRECALL   8508.3    BOB ZIMMERMAN\nRETTABL  8506      BOB ZIMMERMAN\nTRMLOCK  8506      MIKE BOTOS OF HOUSE INFORMATION SYSTEMS\nTSO      8504      BOB ZIMMERMAN\nTSOCMD   8504      BOB ZIMMERMAN\nTSOHELP  8504      BOB ZIMMERMAN\nTSOJCL   8506      BOB ZIMMERMAN\nTUTPRINT 8603      CHRIS GERKEN OF EXXON\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BR": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the BR command table command.\n\n          It will allow a user to browse a dataset from any screen.\n          It will allow the user to type the dataset name at command\n          invokation time. For example:\n\n          COMMAND ===> BR MY.DATA(X)\n\n          will put the user directly into browse on MY.DATA(X). When\n          the user finishes the browse, he returns to the currently\n          running function.\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          BR      0    SELECT NEWAPPL(ISR) CMD(%CNAEBROW &ZPARM)\n\n\n2.        The member in this PDS called BR@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n\nModifications ----------------------------------------------------------\n\n1.        Modified ACTION field in Command Table entry so that your\n          default PFKeys and that are used when invoking browse with\n          this command.\n\n          This would be a problem if you install a package using a\n          new Application Command Table. HSM 3.2 and JESMASTER are\n          some examples.\n\n2. 86/03  Added Panel and modified CLIST. If user enters an invalid\n          dsname or one that is not allocated, he will now be prompted\n          for a correct dsname - the old dsname is displayed so he\n          may correct it.\n\n3. 86/03  Now supports dialog BRLAST found on this tape.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BR@": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPONENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1. COMMAND TABLE UPDATE (SEE MEMBER BR)                          *\n//*  2. CLIST MOVED TO A LIB ALLOCATED TO SYSPROC - MEMBER=CNAEBROW   *\n//*  3. HELP MEMBER FOR SYSHELP LIBRARY - MEMBER=BR                   *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE CLIST FOR THE BR        *\n//*  COMMAND TABLE COMMAND. FOR MORE INFORMATION, SEE MEMBER BR IN    *\n//*  THIS PDS.                                                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.CLIB                   <==MODIFY==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSPROC              <==MODIFY==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.HELP                   <==MODIFY==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.SYSHELP              <==MODIFY==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.PLIB                   <==MODIFY==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.ISPPLIB              <==MODIFY==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(CNAEBROW)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(BR)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(BRDDSN)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BREAKSE@": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(BRKPE010)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//PLI    EXEC  PGM=IEL0AA,\n// PARM='MACRO,OBJECT,SOURCE,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(BREAKSET)      <== MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIB   DD  DSN=NULLFILE,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK   EXEC  PGM=IEWL,PARM='XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.ISPLINK (ISPLINK LOAD) <== MODIFY\n//         DD  DSN=SYS1.PLIBASE,DISP=SHR\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB              <==MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DISP=NEW\n//SYSLIN   DD  DSN=&&LOAD,DISP=(OLD,DELETE)\n//         DD  *\n NAME BREAKSET(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BREAKSET": {"ttr": 532, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog is a nifty dialog that help programmers set\n          breakpoints while they are using Dialog Test. Nomrally,\n          a programmer has to type every service he wants a breakpoint\n          for in option 7.8 of PDF TEST. The only problem with that\n          is if you want a breakpoint for all Table services, you will\n          be doing alot of typing.\n\n          This Dialog allows a user, when in option 7.8, to type\n          a new command, Breakset, and a panel will be displayed.\n          The user can then specify a category of services to be\n          used for breakpoints.\n\n          The next scroll the user issues from option 7.8 will fill\n          the screen with all services of that category.\n\n          The author has documented that because this is playing\n          with internals, its integrity is not guaranteed to work\n          through all versions of all put-levels of ISPF.\n\n          If you prefer not to install as a Command Table Command,\n          you may invoke from option 8 screen using a TSO CALL\n          statement (under version 2 of ISPF).\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          BREAKSET 0    &BREAKSET\n\n\n2.        If you are installing this command in the command table (as\n          above), modify IBM panel (ISRYBP1) to include in the INIT\n          section:\n          &BREAKSET = 'SELECT PGM(BREAKSET)'\n\n          and in the REINIT section:\n          &BREAKSET = 'SELECT PGM(BREAKSET)'\n\n          and in the PROC section:\n          &BREAKSET = ' '\n\n3.        The member in this PDS called BREAKSE@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BRLAST": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          One productivity improvement you may make to your BR dialog\n          is the ability to browse the last dataset browsed again with-\n          out having to retype the dsname.\n\n          The BR command syntax would be BR * instead of BR dsname.\n          The asterk specifies last dsname browsed.\n\n          Below you will find code you may add to the Browse panels so\n          that users may use this command.\n\nInstallation------------------------------------------------------------\n\n1.        ISPF, as delivered uses panel ISRBROB for browse and also has\n          panel ISRBROBF. The second panel is user modifiable per the\n          ISPF Installation and Customization Panel. You should make the\n          following changes to both panels. If your users have created\n          their own browse panel, they too should be modified.\n\n          To the above panels do the following:\n\n          Add to the INIT section the following code:\n\n          )INIT\n\n           &BRDSN = &ZDSN\n           &BRMEM = &ZMEMB\n           VPUT (BRDSN BRMEM) PROFILE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COMMAND@": {"ttr": 770, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)    MANY PANELS                                                *\n//*  2)  1 PROGRAM                                                    *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  COMMANDS FUNCTION.                                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n          S M=$BR\n          S M=$BREAKSE\n          S M=$COMMAND\n          S M=$CURSOR\n          S M=$DOWN\n          S M=$DSM\n          S M=$DSNLIST\n          S M=$ED\n          S M=$END\n          S M=$HELP\n          S M=$HOLD\n          S M=$IBM\n          S M=$KBR\n          S M=$KBR$2\n          S M=$KED\n          S M=$KED$2\n          S M=$KEYS\n          S M=$LEFT\n          S M=$LISTA\n          S M=$LOGMSG\n          S M=$NOP\n          S M=$PANELID\n          S M=$PFKINIT\n          S M=$PRINT\n          S M=$PRINTL\n          S M=$PRINTLH\n          S M=$RCHANGE\n          S M=$RETURN\n          S M=$RFIND\n          S M=$RIGHT\n          S M=$SECURE\n          S M=$SPLIT\n          S M=$SPLITV\n          S M=$SUGGEST\n          S M=$SWAP\n          S M=$TSO\n          S M=$TSOCMD\n          S M=$UP\n          S M=CMDB\n          S M=CMDB1\n          S M=COMHMAN\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CMD0TABL)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME CMD0TABL(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMMANDS": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This command will list all current ISPF commands that a user\n          may view.\n\n          It will present is table format the VERB, TRUNCATE value and\n          the Description field of the system command table.\n\n          Commands that are in an application table other than ISP will\n          be denoted with a \"*\". Commands found in both an application\n          table and the ISP command table will be denoted with \"**\".\n\n          In addition, a user is able to select any command and he will\n          be presented with a tutorial for that command.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          COMMANDS 0    SELECT PGM(CMD0TABL)\n\n\n2.        The member in this PDS called COMMAND@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n3.        If a user selects a command from the list, the dialog will\n          attempt to invoke the tutorial program ISPTUTOR against a\n          panel. The panel name is a $ followed by the command name.\n          For example, if the command is END, the dialog invokes\n          ISPTUTOR against $END.\n\nModifications ----------------------------------------------------------\n\n1. 8505   Modified by Bob Zimmerman of CNA Insurance.\n          It does not require the SYSCMDS (old version did).\n          Also, if the user is in a NEWAPPL, the new applications\n          command table is processed and its commands are highlighted.\n\n2. 8506   Modified by Bob Zimmerman of CNA Insurance.\n          Had a bug with the TBPUT on duplicate commands when under\n          a new application.\n\n          Added ORDER keyword to TBPUT - problem fixed.\n\n3. 8508   Converted CLIST to program to improve performance. Added\n          Line Command abilities. Option S will allow a user to invoke\n          tutorial on the command.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFT": {"ttr": 775, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          In most installations, a great many dialogs are devoted to the\n          function of ...\n\n          DISPLAYing a Panel\n          Various Edits\n          FILE TAILOR some JCL.\n\n          This CLIST is a Display and File Tailor general Dialog.\n\nUsing It----------------------------------------------------------------\n\n          You normally invoke this dialog from a menu panel. For\n          example, on a given menu panel, if a user selects option COMP,\n          it will invoke this CLIST passing some parameters.\n\n          The parameters it passes are as follows:\n\n          EX 'LIB(DFTE)' 'panel skeleton panel2(...) skel2(...)'\n\n          where panel is the Panel to be displayed, skeleton is the\n          skeleton to file tailor. Panel2 and skeleton2 are additional\n          panels and skeletons to be displayed.\n\n          If the panel sets VERDSN1 thru VERDSN10 to a value other than\n          spaces, the CLIST will verify that VERDSN1 is a valid existing\n          dsname. If VERMEM1 is set to a member name, the CLIST will\n          verify that VERMEM1 exists on the dataset by VERDSN1. If\n          either of these verifications fail, an error message is issued\n          and the cursor is placed on the field specified in VERCSR1.\n          VERDSN1, VERMEM1 and VERCSR1 are all supported thru VERDSN10,\n          VERMEM10 and VERCSR10.\n\n          Job cards are automatically generated at the begining of the\n          CLIST and it uses variables BJC1 thru BJC4. Finally, these job\n          cards should be coded on the MENU  panel invoking this option.\n          This will allow the user to modify them before invoking this\n          command.\n\n          If this is confusing or some option is not available, please\n          contact\n\n          Bob Zimmerman\n          CNA Insurance\n          (312) 822-5719\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called dft@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DFT@": {"ttr": 777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  1 CLIST MEMBER=DFTE                                          *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  DFT FUNCTION.                                                    *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(DFTE)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSINDEX": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the DSINDEX dialog.\n\n          It will allow a user to specify an index level (similar to\n          option 3.4 of ISPF Version 2) and it will return a list of\n          datasets conforming to that index level. It also allows you\n          to limit the search to DASD, TAPE (neither or both) type\n          datasets.\nInstallation------------------------------------------------------------\n\n1.        Update a menu panel to invoke PGM(DSINDEX)\n\n2.        The member in this PDS called DSINDEX@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSINDEX@": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(DSINDX01,DSINDX02,DSINDX03,DSINDX04)\n           SELECT MEMBER=(TDSINDX0,TDSINDX1)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DSI@00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.MACROS                         <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(DSINDEX)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.MACROS                         <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(MINIXDMP)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM3     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.MACROS                         <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(LOCINDEX)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.ISPLINK             <== MODIFY ==\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY DSINDEX\n  NAME DSINDEX(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSM": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This command allows a user to maintain a list of Dsnames in\n          an ISPF table across ISPF sessions (permanent table).\n\n          From this list a user is able to Insert, Delete and Repeat\n          the Dsnames in order to maintain the list of dsnames.\n\n          In addition to the above line commands, a user is able to\n          Edit, Browse, invoke the PDS command and the DSAT command\n          (the DSAT command is from the CBT tape).\n\n          If you do not have the DSAT TSO command (from the CBT Tape)\n          you may disable this in the PROC section of panels\n          DSNBMGF and DSNBMGF1.\n\n          An installation can add line commands by updating the PROC\n          section of the panels mentioned above. No source needs to\n          be updated. Any new line commands added should set the\n          variable ZSEL to the operand of the SELECT service. See\n          the panels for more.\n\n          The dialog is invoked by a user typing DSM from any screen.\n          The primary commands are documented on the tutorial screens.\n\n          All line commands are documented on the Tutorial screens.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          DSM      0    SELECT PGM(DSN0MGF) NEWAPPL(ISR)\n\n\n2.        The member in this PDS called dsm@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSM@": {"ttr": 786, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  SOURCE PROGRAMS (1 MODULES)                                  *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  3)  2  PANELS FOR ISPPLIB                                        *\n//*  4)  1  MESSAGE FOR ISPMLIB                                       *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(DSNBMGF,DSNBMGF1,DSNHMGF,DSNHMGFA,DSNHMGFB)\n           SELECT MEMBER=(DSNHMGFC,DSNHMGFD,DSNHMGFE,DSNHMGF1,DSNHMGF2)\n           SELECT MEMBER=(DSNHMGF3,DSNHMGF4,DSNHMGFF,DSNHMGFG,DSNHMGFH)\n           SELECT MEMBER=(DSNHMGFI,DSNHMGFJ,DSNHMGF9)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* VS COBOL AND VS COBOL II ARE SUPPORTED                            *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//COMP1    EXEC PGM=IKFCBL00,REGION=4096K,           <==MODIFY==\n//         PARM=('APOS TERM OPT SXR NONUM ',\n//             'SIZE=2048K BUF=128K DMAP PMAP')\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT5   DD  DUMMY\n//SYSPUNCH DD  DUMMY\n//SYSLIN   DD  DSN=&&LOAD3,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(TRK,(35,20),RLSE),\n//             DCB=(BLKSIZE=400,BUFNO=20)\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(DSN0MGF)    <== MODIFY ==\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIB   DD  DSN=SYS1.COBLIB,DISP=SHR\n//         DD  DISP=SHR,DSN=INSTALL.ISPLINK              <== MODIFY ==\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD3,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD4,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY DSN0MGF\n  NAME DSN0MGF(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSNINFO": {"ttr": 789, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog was contributed by Lionell Dyck of Rockwell\n          International.\n\n          This dialog program will return to a user the different\n          allocation charateristics of a dataset. This includes DCB\n          information as well as allocation information.\n\n          The EDIT MACRO GENJCL on this tape requires this program.\n\n          To invoke this program from a CLIST, specify:\n\n          ISPEXEC SELECT PGM(DSN0INFO) PARM(dsn-variable)\n\n          where \"dsn-variable\" is the ISPF variable containing the DSN\n          to be interogated.  The \"dsn-variable\" and the variables\n          returned are all accessed in the SHARED pool.\n\n          The following is a list of the Variable names returned:\n          ALCYL     Allocated Cylinders\n          ATRECFM   Record Format for ATTR\n          BLKSIZE   Block Size\n          CREDT     Creation Date\n          DEVTYPE   Unit name for dataset\n          DIRALLOC  # Alloc Dir Blocks\n          DIRUSE    # Used Dir Blocks\n          DSORG     Dataset Organization\n          EX        # of extents\n          GCREDT    Gregorian Creation date\n          GUSEDT    Gregorian Used date\n          USCYL     Used Cylinders\n          KEYLEN    Key Length\n          LRECL     Logical Record Length\n          MEMBER    Member name (or blank)\n          RECFM     Record Format\n          RKP       Relative Key Position\n          SCALO     Secondary Allocation\n          TRALC     Tracks Allocated\n          TRUSE     Tracks Used\n          UNIT      Allocation Unit Type\n          USEDT     Last Used Date\n          VOLSER    Volser of dataset\n\n          Return Codes:  0   OK\n                        99   Dataset not found or unavaiable\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called DSNINFO@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n\nModifications-----------------------------------------------------------\n\n1. 86/03  Fixed the VPUT and VGET parameters to always use the SHARED\n          pool. Before it was using the ASIS parm.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNINFO@": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAM  (1 MODULES)                        *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(DSN0INFO)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.ISPLINK             <== MODIFY ==\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME DSN0INFO(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ED": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the ED command table command.\n\n          It will allow a user to edit a dataset from any screen.\n          It will allow the user to type the dataset name at command\n          invokation time. For example:\n\n          COMMAND ===> ED MY.DATA(X) PROFILE(CLIST)\n\n          will put the user directly into edit on MY.DATA(X). When\n          the user finishes the edit, he returns to the currently\n          running function.\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          ED      0    SELECT NEWAPPL(ISR) CMD(%CNAEEDIT &ZPARM)\n\n\n2.        The member in this PDS called ED@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n\n3.        This dialog requires the EDRECD dialog (CLIST) be moved to\n          SYSPROC to support edit recovery.\n\nModifications ----------------------------------------------------------\n\n1.        Modified ACTION field in Command Table entry so that your\n          default PFKeys and Edit Profiles are used when invoking\n          edit with this command.\n\n          This would be a problem if you install a package using a\n          new Application Command Table. HSM 3.2 and JESMASTER are\n          some examples.\n\n2.        Edit Recovery is now checked for the dsn you request edit\n          on.\n\n3. 86/03  Added error recovery so if user enters invalid dsname he\n          is displayed dsname and is prompted for correct dsname.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ED@": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPONENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*    1) COMMAND TABLE UPDATE (SEE MEMBER ED)                        *\n//*    2) CLIST MOVED TO A SYSPROC LIBRARY - MEMBER=CNAEEDIT          *\n//*    3) HELP MEMBER FOR SYSHELP LIBRARY - MEMBER=ED                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE CLIST FOR THE ED        *\n//*  COMMAND TABLE COMMAND. FOR MORE INFORMATION, SEE MEMBER ED IN    *\n//*  THIS PDS.                                                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(CNAEEDIT)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(ED)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(EDDDSN)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDITLIS@": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  2 PANELS MEMBERS=EDTD AND EDTH                               *\n//*  2)  1 CLIST MEMBER=EDTE                                          *\n//*  3)  1 MLIB  MEMBER=EDTM00                                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  COMMANDS FUNCTION.                                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(EDTD,EDTH)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(EDTE)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(EDTM00)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDITLIST": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog was contributed by Lauri Demotts of ibm.\n          Its documentation said to install this as a replacement for\n          the current PDF option 2. It is suggested by the maintainers\n          of this tape that it not \"replace\" option 2. One\n          implementation would be the creation of command table command.\n\n          The current Option 2 remembers only 1 dataset name. This can\n          be very frustrating at times when a user access multiple\n          datasets interchangably. This option offers one solution.\n\n          It allows a user to remember over 10 different dataset names\n          for the editor.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          EDITLIST 0    SELECT CMD(%EDTE) newappl(isr)\n\n\n2.        The member in this PDS called EDITLIS@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EDLAST": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          One productivity improvement you may make to your ED dialog\n          is the ability to edit the dataset you are currently or the\n          last dataset you have browsed.\n\n          This does not edit the last dataset you have edited.\n          See paragraph above.\n\n          Install ED command and BRLAST and your support for this is\n          installed. Invoke by the command ED *.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDREC": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is a CLIST in the CLIB file or Assembler source in\n          the  Source file.\n\n          In ISPF Version 2, edit recovery is the responsability\n          of the dialog. This CLIST should be executed at the front of\n          any dialog that supports the edit service.\n\n          If the CLIST/PGM ends with return code 20 the dialog should\n          not continue - it should exit.\n\n1.        The member in this PDS called EDREC@ contains JCL to move\n          the appropriate components of the program version to the\n          appropriate libraries. The CLIST version should be manually\n          moved into a SYSPROC library.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDREC@": {"ttr": 1039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAM  (1 MODULES)                        *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(EDREC)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME EDREC(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDRECD": {"ttr": 1041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is a CLIST in the CLIB file.\n\n          In ISPF Version 2, edit recovery is the responsability\n          of the dialog. This CLIST should be executed at the front of\n          any dialog that supports the edit service.\n\n          If the CLIST ends with return code 20 the dialog should\n          not continue - it should exit.\n\n          This CLIST differs from the EDREC clist because it only\n          processes recovery of a specified dataset.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GETTABL": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          When users write dialogs that create ISPF tables, they need to\n          create unique table names for those tables. This allows\n          recursive use of those dialogs with no fear of affecting a\n          table currenly open.\n\n          This module will dynamically allocate a temporary dataset to\n          the programmers default unit (in UADS) and free it immediately\n          using SVC 99. The program will trap the system generated\n          ddname and return it to the caller. This system generated\n          ddname is always unique and can be used as a table name. The\n          first 3 bytes of the generated ddname is SYS and you may want\n          to change it to your Dialog Application ID.\n\n          This program will return into a Shared Pool Variable, a\n          unique ISPF table name.\n\n          This is not designed to be used from a dialog program. For\n          a dialog program, see RETTABL (another dialog on this tape).\n          To use this from a CLIST, issue the following CLIST commands:\n\n          ISPEXEC SELECT PGM(GET0TABL) PARM(variable-name)\n          ISPEXEC VGET (variable-name) SHARED\n\n          where variable-name is any variable you want the program to\n          return the ISPF table name into.\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called GETTABL@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GETTABL@": {"ttr": 1045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAM  (2 MODULES)                        *\n//*  2)  2 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(RET0TABL)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(GET0TABL)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY GET0TABL\n  NAME GET0TABL(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HOLD": {"ttr": 1048, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the HOLD command table command.\n\n          It will allow a user to save his current function status and\n          invoke the Primary Option Panel. This is liking Stacking ISPF\n          sessions. The user will be able to type\n\n          COMMAND ===> HOLD 3.2\n\n          The 3.2 is optional. This will hold his current function and\n          invoke the Primary Option Menu. Because he typed 3.2, he would\n          jump straight to option 3.2.\n\n          When the user types =X to get out of the screen, he will\n          resume the function executing when he typed HOLD. Some users\n          may choose to set a PFKey to the word HOLD. This will act like\n          a Pseudo SPLIT screen key (PF2).\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          HOLD    0    SELECT PANEL(ISR@PRIM) NEWAPPL(ISR) OPT(&ZPARM)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JOBLIST": {"ttr": 1050, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This command will display the current active tasks on the\n          system. I saw the DA command on the CBT tape, modified its\n          TPUTs to TBADDs, wrote a front end and now I have an ISPF\n          dialog that will list the current system tasks using full\n          screen mode.\n\n          Some features include the optional display of TSO users,\n          sorting the display by Jobname, Elapsed time or CPU time, and\n          an AUTO Primary command to automatically update your screen\n          (with your keyboard locked).\n\n          A full tutorial panel is available.\n\nInstallation------------------------------------------------------------\n\n1.        Under MVS/XA, this program should be linked with AMODE 31.\n          This is the way the dialog is delivered. For MVS 370 systems,\n          you may have to run the program authorized (as well as be\n          AMODE24.\n\n2.        The member in this PDS called JOBLIST@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n3.        Update a menu panel (possible option 3) to include an option\n          that will invoke PGM(JOB0LIST).\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JOBLIST@": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  2 PANELS MEMBER=JOBBLIST AND JOBHLIST                        *\n//*  2)  USES ISPZ00 (ISPF INSTALLED MESSAGE MEMBER)                  *\n//*  3)  ASSEMBLER SOURCE PROGRAMS (2 MODULES)                        *\n//*  4)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(JOBBLIST,JOBHLIST)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(JOB0LIST)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(JOB1LIST)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY JOB0LIST\n  NAME JOB0LIST(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KBR": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the KBR command table command.\n\n          It will allow a user to invoke ISPF Browse based on a\n          given ddname. a great deal of power may be found when using\n          this command in dialog writing. For example:\n\n          COMMAND ===> KBR ISPPLIB\n\n          will bring up an MSL containing a list of datasets allocated\n          to ISPPLIB.  This function does not use the Library Access\n          Services available with Version 2 of ISPF. The facility limits\n          the ddname to 4 datasets. In the above example, If ISPPLIB is\n          allocated to only one dataset, the user would directly enter\n          browse on that dataset.\n\n          If the user desires, he can enter a member name with the\n          ddname. For example:\n\n          COMMAND ===> KBR ISPPLIB(ISR@PRIM)\n\n          The above command scans the datasets allocated to ISPPLIB. If\n          the member ISR@PRIM exists in only one dataset, the user\n          enters browse directly on that dataset. If the member exists\n          in more than one dataset, an MSL of datasets is displayed. The\n          list of datasets displayed are only those datasets containing\n          the member.\n\n          See the HELP member for more.\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          KBR     0    SELECT PGM(CNA0KBR) NEWAPPL(ISR) PARM(&ZPARM)\n\n\n2.        The member in this PDS called KBR@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n\nModifications ----------------------------------------------------------\n\n1.        Modified ACTION field in Command Table entry so that your\n          default PFKeys that are used when invoking browse with this\n          command.\n\n          This would be a problem if you install a package using a\n          new Application Command Table. HSM 3.2 and JESMASTER are\n          some examples.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "KBR@": {"ttr": 1286, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE SYSTEM COMMAND TABLE (ISPCMDS) - SEE MEMBER KBR FOR   *\n//*      MORE                                                         *\n//*  2)  1 PANEL MEMBER=CNADKBR                                       *\n//*  3)  5 MESSAGE MEMBERS                                            *\n//*      MEMBER=DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00             *\n//*  4)  ASSEMBLER SOURCE PROGRAMS (4 MODULES)                        *\n//*  5)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  6)  1 HELP MEMBER FOR SYSHELP MEMBER=KBR                         *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  KBR FUNCTION. IT WILL ALSO ASSEMBLE 4 SOURCE MODULES AND LINK A  *\n//*  SINGLE LOAD MODULE INTO AN ISPF LOAD LIBRARY.                    *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(CNADKBR)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(KBR)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CNA0KBR1)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CPPLRET)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM3     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD3,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)         <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM4     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD4,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CNA0KBR)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD4,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD3,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY CNA0KBR\n  NAME CNA0KBR(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KDDN": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the KDDN TSO command.\n\n          This TSO Command Processor is being enclosed on this tape\n          because of its significant use in Dialog development.\n          Normally, TSO commands are not maintained on the ISPF Dialog\n          Tape.\n\n          This command will display the ddnames that currently have\n          allocated a given dsname. This is a TSO command and may\n          be invoked from any ISPF screen by entering the following\n          command on the command line:\n\n          COMMAND ===> TSO KDDN ('SYS1.ISPF.ISPPLIB' 'TERMFILE')\n\n          The above command may respond with:\n\n          'SYS1.ISPF.ISPPLIB' ALLOCATED TO:\n          ISPPLIB  002 IN CONCATENATION\n          ISR0002\n\n          'TERMFILE' ALLOCATED TO:\n          SYSOUT\n          SYSPRINT\n\nInstallation------------------------------------------------------------\n\n1)        The member in this PDS called KDDN@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "KDDN@": {"ttr": 1292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAMS (2 MODULES)                        *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  3)  1 HELP MEMBER FOR SYSHELP MEMBER=KDDN                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  KDDN FUNCTION. IT WILL ALSO ASSEMBLE 2 SOURCE MODULES AND LINK   *\n//*  A SINGLE LOAD MODULE INTO A STEPLIB (OR ISPF ISPLLIB)            *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(KDDN)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KDDN)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)         <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.STEPLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY KDDN\n  NAME KDDN(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KDSN": {"ttr": 1295, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the KDSN TSO command.\n\n          This TSO Command Processor is being enclosed on this tape\n          because of its significant use in Dialog development.\n          Normally, TSO commands are not maintained on the ISPF Dialog\n          Tape.\n\n          This command will display the datasets that are currently\n          allocated to a given ddname. This is a TSO command and may\n          be invoked from any ISPF screen by entering the following\n          command on the command line:\n\n          COMMAND ===> TSO KDSN ISPPLIB\n\n          The above command will respond with a list of datasets\n          currently allocated to ISPPLIB. This list is more readable and\n          easier to obtain the the TSO LISTA command. Response may be:\n\n          ISPPLIB ALLOCATED TO:\n          SYS1.ISPF.ISRPLIB\n          SYS1.ISPF.ISPPLIB\n          SYS1.INST.ISPPLIB\n\nInstallation------------------------------------------------------------\n\n1)        The member in this PDS called KDSN@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "KDSN@": {"ttr": 1297, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAMS (2 MODULES)                        *\n//*  2)  COBOL COMPILE SOURCE PROG (1 MODULES)                        *\n//*  3)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  4)  1 HELP MEMBER FOR SYSHELP MEMBER=KDSN                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  KDSN FUNCTION. IT WILL ALSO ASSEMBLE 2 SOURCE MODULES AND LINK   *\n//*  A SINGLE LOAD MODULE INTO A STEPLIB (OR ISPF ISPLLIB)            *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(KDSN)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KDSN)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//COMP1    EXEC PGM=IKFCBL00,REGION=4096K,           <==MODIFY==\n//         PARM=('APOS TERM OPT SXR NONUM ',\n//             'SIZE=2048K BUF=128K DMAP PMAP')\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT5   DD  DUMMY\n//SYSPUNCH DD  DUMMY\n//SYSLIN   DD  DSN=&&LOAD3,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(TRK,(35,20),RLSE),\n//             DCB=(BLKSIZE=400,BUFNO=20)\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KDSNNAM)    <== MODIFY ==\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.STEPLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIB   DD  DSN=SYS1.COBLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD3,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY KDSN\n  NAME KDSN(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KED": {"ttr": 1538, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the KED command table command.\n\n          It will allow a user to invoke the ISPF Editor based on a\n          given ddname. A great deal of power may be found when using\n          this command in dialog writing. For example:\n\n          COMMAND ===> KED ISPPLIB\n\n          will bring up an MSL containing a list of datasets allocated\n          to ISPPLIB.  This function does not use the Library Access\n          Services available with Version 2 of ISPF. The facility limits\n          the ddname to 4 datasets. In the above example, If ISPPLIB is\n          allocated to only one dataset, the user would directly enter\n          edit on that dataset.\n\n          If the user desires, he can enter a member name with the\n          ddname. For example:\n\n          COMMAND ===> KED ISPPLIB(ISR@PRIM)\n\n          The above command scans the datasets allocated to ISPPLIB. If\n          the member ISR@PRIM exists in only one dataset, the user\n          enters edit directly on that dataset. If the member exists in\n          more than one dataset, an MSL of datasets is displayed. The\n          list of datasets displayed are only those datasets containing\n          the member.\n\n          The command also support PROFILE, MACRO and the keyword FIRST.\n          See the HELP member for more.\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          KED     0    SELECT PGM(CNA0KED) NEWAPPL(ISR)  PARM(&ZPARM)\n\n\n2.        The member in this PDS called KED@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n\n3.        The dialog on this tape called EDREC should be installed\n          for support of EDIT RECOVERY.\n\nModifications ----------------------------------------------------------\n\n1.        Modified ACTION field in Command Table entry so that your\n          default PFKeys and Edit Profiles are used when invoking\n          edit with this command.\n\n          This would be a problem if you install a package using a\n          new Application Command Table. HSM 3.2 and JESMASTER are\n          some examples.\n\n2.        Modified KED to check for EDIT Recovery before begining.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "KED@": {"ttr": 1540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE SYSTEM COMMAND TABLE (ISPCMDS) - SEE MEMBER KED FOR   *\n//*      MORE                                                         *\n//*  2)  1 PANEL MEMBER=CNADKED                                       *\n//*  3)  5 MESSAGE MEMBERS                                            *\n//*      MEMBER=DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)            *\n//*  4)  ASSEMBLER SOURCE PROGRAMS (4 MODULES)                        *\n//*  5)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  6)  1 HELP MEMBER FOR SYSHELP MEMBER=KED                         *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  KED FUNCTION. IT WILL ALSO ASSEMBLE 4 SOURCE MODULES AND LINK A  *\n//*  SINGLE LOAD MODULE INTO AN ISPF LOAD LIBRARY.                    *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(CNADKED)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(KED)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CNA0KED1)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CPPLRET)    <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM3     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD3,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM4     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD4,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                  <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(CNA0KED)    <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD4,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD3,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY CNA0KED\n  NAME CNA0KED(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KLIB": {"ttr": 1544, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the KLIB TSO command.\n\n          This TSO Command Processor is being enclosed on this tape\n          because of its significant use in Dialog development.\n          Normally, TSO commands are not maintained on the ISPF Dialog\n          Tape.\n\n          This command will display the datasets currently allocated to\n          a given ddname that contain a member.  This is a TSO command\n          and may be invoked from any ISPF screen by entering the\n          following command on the command line:\n\n          COMMAND ===> TSO KLIB ISPPLIB(ISR@PRIM)\n\n          The above command will respond with a list of datasets\n          currently allocated to ISPPLIB that contain member ISR@PRIM.\n          Response may be:\n\n          ISPPLIB DATASETS SEARCHED - ISR@PRIM FOUND ON:\n          SYS1.ISPF.INSTALL\n          SYS1.INST.ISPPLIB\n\nInstallation------------------------------------------------------------\n\n1)        The member in this PDS called KLIB@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "KLIB@": {"ttr": 1546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAMS (2 MODULES)                        *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  3)  1 HELP MEMBER FOR SYSHELP MEMBER=KLIB                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  KLIB FUNCTION. IT WILL ALSO ASSEMBLE 2 SOURCE MODULES AND LINK   *\n//*  A SINGLE LOAD MODULE INTO A STEPLIB (OR ISPF ISPLLIB)            *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(KLIB)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KLIB)       <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.STEPLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY KLIB\n  NAME KLIB(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTA": {"ttr": 1549, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This command will create a list (similar to a member list)\n          containing all dataset allocated to a user.\n\n          The output is in the following format.\n\n          DDNAME   VOLSER  DSNAME\n\n          From this member list, a user can Browse, Edit, Invoke PDS\n          DSAT (from CBT TAPE) the dsnames in the list.\n\n          If you do not have the DSAT TSO command (from the CBT Tape)\n          you may disable this in the PROC section of the panel LSTDA.\n\n          The dialog is invoked by a user typing LISTA from any screen.\n          The primary command FULL exapnds the table to list all\n          datasets in the concatenation. Compress will only list the\n          first dataset in the concatenation.\n\n          All line commands are documented on the HELP panel LSTHA.\n\n          The default display when first invoked is in the compressed\n          format described above. You may choose the FULL format\n          by typing LISTA FULL on the command line.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          LISTA    0    SELECT PGM(LST0A) NEWAPPL(ISR) PARM(&ZPARM)\n\n\n2.        The member in this PDS called LISTA@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n\nModifications-----------------------------------------------------------\n\n1. 86/03  Updated command to have Locate command work identical to ISPF.\n          If locate operand matches identically, scroll to member else\n          scroll to first entry before GE then the key.\n\n2. 86/03  Added SETPROF command to support setting edit profile.\n\n3. 86/03  When invoking the LISTA command, you may now specify DDnames.\n          For example, LISTA SYSPROC SYSHELP will only list SYSPROC\n          and SYSHELP in the table display. You may also specify\n          a generic DDname, for example LISTA ISP* will list all\n          DDnames beginning with ISP. You may list up to 50 DDnames\n          (generic or full).\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LISTA@": {"ttr": 1551, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  SOURCE PROGRAMS (4 MODULES)                                  *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  3)  2  PANELS FOR ISPPLIB                                        *\n//*  4)  1  MESSAGE FOR ISPMLIB                                       *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(LSTDA,LSTHA)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(RET0TABL)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=SYS1.MACLIB\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(DDNLIST)    <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM3     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD4,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(KSUBS)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//COMP1    EXEC PGM=IKFCBL00,REGION=4096K,           <==MODIFY==\n//         PARM=('APOS TERM OPT SXR NONUM ',\n//             'SIZE=2048K BUF=128K DMAP PMAP')\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(13000,(100,30))\n//SYSUT5   DD  DUMMY\n//SYSPUNCH DD  DUMMY\n//SYSLIN   DD  DSN=&&LOAD3,\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(TRK,(35,20),RLSE),\n//             DCB=(BLKSIZE=400,BUFNO=20)\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(LST0A)      <== MODIFY ==\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIB   DD  DSN=SYS1.COBLIB,DISP=SHR                  <== MODIFY ==\n//         DD  DISP=SHR,DSN=INSTALL.ISPLINK              <== MODIFY ==\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD3,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD4,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY LST0A\n  NAME LST0A(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOGMSG": {"ttr": 1554, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the logmsg command table command.\n\n          It will allow a user to place or log a message into his ispf\n          log. This is extremely helpful when debugging a dialog. A\n          user may want to log a message saying he is at a certain point\n          in the testing. For example:\n\n          COMMAND ===> LOGMSG I AM DISPLAYING PANEL NOW - PHASE 2 BEGINS\n\n          This will place a one line message into the users log with the\n          above text.\n\n          In addition, the user community can document a series of\n          events they have done when encountering system problems. This\n          eliminates the user from having to remember the events. To do\n          this, the user would enter the command LOGMSG without any\n          text. For example:\n\n          COMMAND ===> LOGMSG\n\n          This will display a panel that the user can enter\n          text on and the user can continue to enter text until he enter\n          the END command (PF3). This panel happens to use a dynamic\n          panel area (in case you would like to see one in action).\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          LOGMSG  3    SELECT PGM(LOG0MSG) PARM(&ZPARM)\n\n\n2.        The member in this PDS called LOGMSG@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGMSG@": {"ttr": 1794, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE SYSTEM COMMAND TABLE (ISPCMDS) - SEE MEMBER LOGMSG    *\n//*  2)  1 PANEL MEMBER=LOGDMSG                                       *\n//*  3)  5 MESSAGE MEMBERS                                            *\n//*      MEMBER=DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00             *\n//*  4)  ASSEMBLER SOURCE PROGRAM                                     *\n//*  5)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAM                  *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS.             *\n//*  IT WILL ALSO ASSEMBLE THE SOURCE MODULE AND                      *\n//*  LINK IT INTO AN ISPF LOAD LIBRARY.                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(LOGDMSG)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(LOGMSG)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM      EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOADSET,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(LOG0MSG)    <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY LOG0MSG\n  NAME LOG0MSG(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LSPACE": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the LSP0ACE Dialog Program\n\n          This dialog will display the free space available for a given\n          volume. In addition to specifying a single volume, a user can\n          specify a generic volser. For example, TSDA* will display free\n          space in an ISPF table format for all volumes begining with\n          TSDA.\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called LSPACE@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.  This\n          JCL will also assemble the source and link the program.\n\n2.        Update your current Primary Option Menu or the option 3 menu\n          to include access to this function. The new option should\n          invoke the program PGM(LSP0ACE).\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LSPACE@": {"ttr": 1799, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  2 PANELS MEMBERS=LSPDP1,LSPDP2                               *\n//*  2)  1 MESSAGE MEMBER                                             *\n//*      MEMBER=LSPM00                                                *\n//*  3)  ASSEMBLER SOURCE PROGRAM  (1 MODULES)                        *\n//*  4)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(LSPDP1,LSPDP2)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(LSPM00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                      <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(LSP0ACE)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME LSP0ACE(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MENU": {"ttr": 1801, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          Every installation has their own way of setting up their\n          primary option menu. In the file on this tape called PLIB,\n          there is a member called MENU. It is a complete collection of\n          users primary option menus. By finding the )END at the end of\n          each menu, you are able to find the different menus.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NETTRAK": {"ttr": 1803, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog is from Dennis Buswell of the State of Montana\n          (administration).\n\n          The dialog is designed to aid users in reporting hardware\n          problems to the network control area of the company. Some\n          excellent ideas are presented in this dialog. Since it is\n          customized for Dennises installation, there would be some\n          modifications for it to be of use to your installation. The\n          installation instructions allow you to emulate how the dialog\n          runs at the State of Montana.\n\n          Dennis Buswell\n          State of Montana\n          Dept of Admin/Data Processing\n          Room 5 Mitchell Building\n          Helena, Montana  59620\n\nInstallation------------------------------------------------------------\n\n1.        Update a panel to invoke dialog program nettrak.\n\n2.        The member in this PDS called NETtrak@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n3.        The CLIST call NTRKCLST attempts to create a LOG dataset. You\n          must pre-allocate it. See the CLIST for dsname information.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NETTRAK@": {"ttr": 1805, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  NUMEROUS PANELS                                              *\n//*  2)  USES ISPZ00 (ISPF INSTALLED MESSAGE MEMBER) AND NETM00       *\n//*  3)  ASSEMBLER SOURCE PROGRAMS (2 MODULES)                        *\n//*  4)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*  5)  1 CLIST MEMBER                                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(NTABLADS,NTALFAIL,NTERRPNL,NTEXTEND)\n           SELECT MEMBER=(NTGENL#1,NTGENL#2,NTIB3277,NTIB3279)\n           SELECT MEMBER=(NTLINBAD,NTMDMBAD,NTMORSTG,NTNOROOM)\n           SELECT MEMBER=(NTNOSPLT,NTPR#PNL,NTPRBTYP,NTR24LSI)\n           SELECT MEMBER=(NTTERBAD,NT1STPNL)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(NTRKCLST)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(NETM00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,DECK,NOOBJECT,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.MACROS                         <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(NETTRAK)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM2     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,NOALIGN'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SOURCE                         <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(DATECNVT)      <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLINK             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.LINKLIB     ISPLINK <== MODIFY ==\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  *\n  NAME NETTRAK(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NEWMSGS": {"ttr": 1808, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is an Edit Macro. It is documented on panel #NEWMSGS\n          found on the GUIDE.EDITMACS file of the tape (the Edit\n          Macro file on the tape).\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called NEWMSGS@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NEWMSGS@": {"ttr": 1810, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//PLI    EXEC  PGM=IEL0AA,\n// PARM='MACRO,OBJECT,SOURCE,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(NEWMSGS)      <== MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIB   DD  DSN=NULLFILE,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK   EXEC  PGM=IEWL,PARM='XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.ISPLINK (ISPLINK LOAD) <== MODIFY\n//         DD  DSN=SYS1.PLIBASE,DISP=SHR\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB              <==MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DISP=NEW\n//SYSLIN   DD  DSN=&&LOAD,DISP=(OLD,DELETE)\n//         DD  *\n NAME NEWMSGS(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSXREF": {"ttr": 1812, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the PDSXREF Dialog.\n\n          This dialog will create a member list of up to four PDS's.\n          Unlike the typical member lists facilities of ISPF, if there\n          are duplicate members, they will be shown on the member list.\n          Currently, the member list is used just to display duplicates;\n          In the future, you will be able to Browse, Edit etc...\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called PDSXREF@ contains JCL to move\n          appropriate components to their libraries. Run this JCL.  This\n          JCL will also assemble the source and link the program.\n\n2.        Update a Menu Panel to invoke PDSXREF using CMD(%PDSEXREF).\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDSXREF@": {"ttr": 1814, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  3 PANELS MEMBERS=PDSDXREF,PDSDXRE2,PDSDXRE3                  *\n//*  2)  1 MESSAGE MEMBER                                             *\n//*      MEMBER=DTSM00                                                *\n//*  3)  1 CLIST PDSEXREF                                             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(PDSDXREF,PDSDXRE2,PDSDXRE3)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(PDSEXREF)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PFKINIT": {"ttr": 1816, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          The most significant problem dialog developers have with using\n          a new Application Id (NEWAPPL) is the modification of users\n          Pfkeys.\n\n          By invoking a dialog with a NEWAPPL, the user gets a new\n          Profile Pool and the Pfkeys will all default to the default\n          member in ISPTLIB.  These default are often not desired by the\n          typical user.  In addition, there are some users that would\n          like to have a different set of Pfkeys under a given dialog\n          running as a NEWAPPL.  It is difficult to please both users.\n\n          Some examples of current products that are required to run as\n          a NEWAPPL is HSM, JESMASTER and SDSF (to name just a few).\n\n          The PFKINIT command allows a user, under a given NEWAPPL, to\n          copy the current values for the Pfkeys used under regular PDF.\n          If I enter HSM for the first time and wish to initialize my\n          Pfkeys to the values I use everywhere else under PDF, I can\n          type the command PFKINIT and those values are copied. I may\n          now change one or two Pfkeys to be HSM dependent. This does\n          not affect my regular PDF Pfkeys and they will always be\n          unique under HSM.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          PFKINIT 0    SELECT PGM(PFK0INIT)\n\n\n2.        The member in this PDS called PFKINIT@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PFKINIT@": {"ttr": 1818, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  1 PROGRAM\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  COMMANDS FUNCTION.                                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                    <== MODIFY ==\n//         DD  DISP=SHR,DSN=GUIDE.MACROS             <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(PFK0INIT)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME PFK0INIT(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RECALL": {"ttr": 2049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          One of the largest complaints users have about the ISPF\n          Command Line is that it does not allow a user to \"RECALL\" the\n          last command. If a user types in a long TSO command or a FIND\n          command in Edit, there currently is no way to recall that\n          command back to the command line so that a user may optionally\n          modify the command and reissue it.\n\n          Below you will find code you may add to the Edit panels which\n          will allow users to recall the last Edit command entered. This\n          includes Find, Change etc. as well as installation Edit\n          Macros. It does not include commands prefaced by TSO or any\n          other Command Table command.\n\n          Once the code below has been added, all the user does is type\n          a question mark (?) on the Edit Command Line and the last edit\n          command entered will be placed on the command line.\n\nInstallation------------------------------------------------------------\n\n1.        ISPF, as delivered uses panel ISREDDE for edit and also has\n          panel ISREFR01. The second panel is user modifiable per the\n          ISPF Installation and Customization Panel. You should make the\n          following changes to both panels. If your users have created\n          their own edit panel, they too should be modified.\n\n          To the above panels do the following:\n\n          Add to the and of the REINIT section:\n\n          )REINIT\n           IF (&EDITSW \u00ac= &Z)\n               .CURSOR = ZCMD\n               .CSRPOS = 1\n               &EDITSW = &Z\n\n          Add to the and of the PROC   section:\n\n          )PROC\n           IF (.RESP = ENTER)\n               IF (&ZCMD = '?')\n                   &ZCMD = &EDITZCMD\n                   REFRESH (ZCMD)\n                   &ZEDSMSG = 'RECALL COMPLETED'\n                   &ZEDLMSG = 'BY ENTERING A \"?\" YOU HAVE +\n                   RECALLED YOUR LAST EDIT COMMAND'\n                   &EDITSW = ON\n                   .MSG = ISRZ000\n               IF (&ZCMD \u00ac= '?',&Z)\n                   &EDITZCMD = &ZCMD\n                   VPUT (EDITZCMD) PROFILE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RETTABL": {"ttr": 2051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          When users write dialogs that create ISPF tables, they need to\n          create unique table names for those tables. This allows\n          recursive use of those dialogs with no fear of affecting a\n          table currenly open.\n\n          This module will dynamically allocate a temporary dataset to\n          the programmers default unit (in UADS) and free it immediately\n          using SVC 99. The program will trap the system generated\n          ddname and return it to the caller. This system generated\n          ddname is always unique and can be used as a table name. The\n          first 3 bytes of the generated ddname is SYS and you may want\n          to change it to your Dialog Application ID.\n\n          To use this program from a dialog program, simply call\n          RET0TABL passing it an 8 byte field. This field will be\n          returned with the ISPF table name.\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called RETTABL@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RETTABL@": {"ttr": 2053, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  ASSEMBLER SOURCE PROGRAM  (1 MODULES)                        *\n//*  2)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAMS                 *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//ASM1     EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='RENT,LOAD,NOOBJECT,DECK,TERM'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOAD1,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.SVC99MAC                    <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(RET0TABL)   <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOAD1,DISP=(OLD,DELETE)\n//         DD  *\n  NAME RET0TABL(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TRMLOCK": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog is a nifty dialog from Mike Botos of House\n          Information Systems in Washington. It will allow a user to\n          secure his terminal. This means that someone cannot walk over\n          to your terminal while your logged on and play under your ID.\n\n          Because of its use, its installation instructions specifies\n          its implementation via a Command Table Command \"SECURE\". This\n          means you may type SECURE from any screen and secure the\n          terminal. When you type your pass- word, the security\n          disappears and you are back where you were.\n\n          A modification by GUIDE ISPF for ISPF V2 is the addition of an\n          ISPEXEC CONTROL NOCMD issued before every display of a panel\n          making this security fool-proof.\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          SECURE  0    SELECT PGM(TRM0LOCK) NEWAPPL(ISR)\n\n\n2.        The member in this PDS called TRMLOCK@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TRMLOCK@": {"ttr": 2057, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE SYSTEM COMMAND TABLE (ISPCMDS) - SEE MEMBER TRMLOCK   *\n//*      FOR MORE                                                     *\n//*  2)  2 PANELS MEMBERS=(TRMDLCK1,TRMDLCK2)                         *\n//*  3)  1 MESSAGE MEMBERS                                            *\n//*      MEMBER=TRMM10                                                *\n//*  4)  PLI SOURCE PROGRAM (1 MODULE)                                *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(TRMDLCK1,TRMDLCK2)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(TRMM10)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//PLI    EXEC  PGM=IEL0AA,\n// PARM='MACRO,OBJECT,SOURCE,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(TRMLOCK)       <== MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIB   DD  DSN=NULLFILE,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK   EXEC  PGM=IEWL,PARM='XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=INSTALL.ISPLINK (ISPLINK LOAD) <== MODIFY\n//         DD  DSN=SYS1.PLIBASE,DISP=SHR\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB              <==MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DISP=NEW\n//SYSLIN   DD  DSN=&&LOAD,DISP=(OLD,DELETE)\n//         DD  *\n NAME TRM0LOCK(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSO": {"ttr": 2059, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the TSO0 Dialog Program.\n\n          This program was written at CNA Insurance to replace the\n          option 6 (TSO) delivered with the PDF Version of ISPF. The\n          significant problem with that version is after typing a TSO\n          command on the screen, if the user hit his PFk2 (SPLIT) screen\n          key, the TSO command is lost.\n\n       This version has the following features:\n\n       1) The SPLIT screen bug described above is resolved.\n\n       2) The user now has 2 data entry lines for option 6 (Similar to\n          VM Version 2). The first data entry line is the regular ISPF\n          Command Line and is used for that purpose. The Second data\n          entry line is the TSO Command Line. This must only be used for\n          TSO Commands. Command Stacking using a delimiter is supported\n          for both lines.\n\n       3) The screen will now remember the last command entered every\n          time you invoke this option. If the last command was a stack\n          of TSO Commands, it will now remember the entire list.\n\n       4) When executing a stack of TSO Commands, if a command ends with\n          a non-zero return code, the user will be prompted - do you\n          want to continue or not.\n\n\nInstallation------------------------------------------------------------\n\n1.        The member in this PDS called TSO@ contains JCL to move the\n          appropriate components to their libraries. Run this JCL.\n          This JCL will also assemble the source and link the program.\n\n2.        Update your current Primary Option Menu so that Option 6 will\n          now invoke the new program PGM(TSO0).\n\nModifications-----------------------------------------------------------\n\n85/04     Version 2 of this command was modified to support the 8504\n          Version 2 release of the TSOCMD command. See that command\n          for a description.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSO@": {"ttr": 2061, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE PRIMARY OPTION PANEL (ISR@PRIM) - SEE MEMBER TSO      *\n//*      FOR MORE                                                     *\n//*  2)  1 PANEL MEMBER=TSOD                                          *\n//*  3)  5 MESSAGE MEMBERS                                            *\n//*      MEMBER=DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)            *\n//*  4)  ASSEMBLER SOURCE PROGRAM                                     *\n//*  5)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAM                  *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  OPTION 6 FUNCTION. IT WILL ALSO ASSEMBLE THE SOURCE MODULE AND   *\n//*  LINK IT INTO AN ISPF LOAD LIBRARY.                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(TSOD)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(DTSM00,DTSM01,DTSM02,DTSM03,DTSM04,ZCMD00)\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//ASM      EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOADSET,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(TSO0)          <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY TSO0\n  NAME TSO0(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOCMD": {"ttr": 2064, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is the TSOCMD command table command.\n\n          It will allow a user to invoke option 6 while on any screen.\n          Since may times the ISPF Command Line is not long enough and\n          if you are using the new option 6 delivered with this PDS it\n          will remember the last command, it is very helpfull to say\n          'bring up option 6' for a second. When hitting PF3 (END) you\n          then return to the currently running\n          function.\n\n          For example:\n\n          COMMAND ===> TSOCMD\n\n          will put the user on the current option 6 found on ISR@PRIM.\n          When the user hits the END Pfkey, he will return to this\n          screen. A user may set a PFKEY to TSOCMD.\n\n\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB    T    ACTION\n          ----    -    ------\n          TSOCMD  0    SELECT PGM(TSO0CMD) NEWAPPL(ISR) PARM(&ZPARM)\n\n\n2.        The member in this PDS called TSOCMD@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n\n3.        This program will actually look at the current Primary Option\n          Menu and invoke option 6 the same way it does. If you have\n          modified the option 6 on the primary option panel, you DO NOT\n          have to modify this program.\n\nModifications ----------------------------------------------------------\n\n85/04     This command used to only display option 6. Now, if the\n          command is entered with some parms, for example:\n\n          COMMAND ===> TSOCMD ALLOC F(X) SYSOUT(P)\n\n          this command will initialize the option 6 screen with the\n          command and hit enter for the user. The user remains in option\n          6 as if he entered TSOCMD without any parms at all.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOCMD@": {"ttr": 2066, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPONENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  UPDATE COMMAND TABLE - SEE MEMBER TSOCMD FOR MORE            *\n//*  2)  ASSEMBLER SOURCE PROGRAM                                     *\n//*  3)  1 LOAD MODULE GENERATED FROM SOURCE PROGRAM                  *\n//*  4)  1 HELP MEMBER FOR SYSHELP LIBRARY                            *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  FUNCTION. IT WILL ALSO ASSEMBLE THE SOURCE MODULE AND LINK IT    *\n//*  INTO AN ISPF LOAD LIBRARY.                                       *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.HELP                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.SYSHELP             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(TSOCMD)\n//ASM      EXEC    PGM=IEV90,REGION=1024K,\n//             PARM='LOAD,NOOBJECT,DECK,TERM,RENT'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT2   DD  DSN=&&SYSUT2,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSUT3   DD  DSN=&&SYSUT3,\n//             SPACE=(6400,(160,20)),\n//             UNIT=SYSDA\n//SYSPUNCH DD  DSN=&&LOADSET,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DCB=BLKSIZE=16000,\n//             DSN=GUIDE.ISPFMACS                       <== MODIFY ==\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSIN    DD  DISP=SHR,DSN=GUIDE.SOURCE(TSO0CMD)    <== MODIFY ==\n//SYSTERM  DD  SYSOUT=*\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK     EXEC PGM=IEWL,\n//             REGION=1024K,\n//             PARM=(XREF,RENT),\n//             COND=(7,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLMOD  DD  DISP=SHR,DSN=INSTALL.ISPLLIB             <== MODIFY ==\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(1024,(500,100)),\n//             UNIT=SYSDA\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  *\n  ENTRY TSO0CMD\n  NAME TSO0CMD(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOHELP": {"ttr": 2068, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This command will bring up a screen similar to option 6.\n          The screen will display the Help member information for\n          a tso command so the user may scroll the help before issuing\n          his command.\n\n          The syntax requires the user enter a TSO command that has a\n          help member. For example TSOHELP ALLOC.\nInstallation------------------------------------------------------------\n\n1.        Update your current System Command Table (ISPCMDS) to include\n          the follwoing entry:\n\n          VERB     T    ACTION\n          ----     -    ------\n          TSOHELP  0    SELECT CMD(%TSOEHELP &ZPARM)\n\n\n2.        The member in this PDS called TSOHELP@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOHELP@": {"ttr": 2070, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*        JOB CARD GOES HERE\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  COMPENENT LIST FOR THIS DIALOG:                                  *\n//*                                                                   *\n//*  1)  1 PANEL MEMBER=TSOBHELP                                      *\n//*  2)  1 CLIST MEMBER=TSOEHELP                                      *\n//*  3)  1 MLIB  MEMBER=DTSM00                                        *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL RUN AN IEBCOPY TO COPY THE COMPONENTS FOR THE NEW  *\n//*  COMMANDS FUNCTION.                                               *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*  THIS JCL WILL REPLACE MEMBERS IF THEY ALREADY EXIST.             *\n//*                                                                   *\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//STEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//INDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//OUTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//INDD2    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//OUTDD2   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//INDD3    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//OUTDD3   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//SYSIN    DD  *\n           COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n           SELECT MEMBER=(TSOBHELP)\n           COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n           SELECT MEMBER=(TSOEHELP)\n           COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n           SELECT MEMBER=(DTSM00)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOJCL": {"ttr": 2305, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This is not a dialog but code you can use in your developing\n          of an ISPF dialog.\n\n          To write a user-friendly dialog, all dsnames entered by the\n          user should be entered using TSO-dsname syntax. This means if\n          the dsname is not enclosed in quotes the users TSO prefix\n          should be added. If the dataset is enclosed in quotes, it\n          should remain untouched. Also, the quotes should be stripped\n          off.\n\n          The following code may be embedded in a panel to convert a TSO\n          dsname to JCL syntax. This is useful when file tailoring a\n          dsname for JCL. You may want to create an Edit Model with this\n          code.\n\nPanel Code for PROC sections -------------------------------------------\n\n          The following code must be modified as follows:\n\n          1)  The string TSODSN should be modified to the variable name\n              containing the dsname in TSO syntax.\n\n          1)  The string JCLDSN should be modified to the variable name\n              containing the dsname in JCL syntax.\n\n\n VER (&TSODSN,DSNAME)\n IF (&TSODSN \u00ac= &Z)\n     IF (.MSG = &Z)\n         &TEMP = TRUNC (&TSODSN,'''')\n         &TRAIL = .TRAIL\n         IF (&TRAIL = &Z)\n             &JCLDSN = '&ZPREFIX..&TSODSN'\n         IF (&TRAIL \u00ac= &Z)\n             &JCLDSN = TRUNC (&TRAIL,'''')\n\n\nThe edit macro TSOTOJCL on this tape as of 8506 is designed to insert\nthe above code with a minimum amount of work. See the Edit Macro for\nmore.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPRIN@": {"ttr": 2307, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//C900073A JOB (9000,080),LELAND,MSGCLASS=T,NOTIFY=C900073\n/*ROUTE   RES   SYSTEMB\n/*ROUTE   PRINT RMT129\n/*SERVICE LEVEL=1\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//*                                                                   *\n//*TEP1    EXEC PGM=IEBCOPY,REGION=1024K\n//*YSPRINT DD  SYSOUT=*\n//*YSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//*YSUT4   DD  UNIT=SYSDA,SPACE=(TRK,(5,1))\n//*NDD1    DD  DISP=SHR,DSN=GUIDE.PLIB                  <== MODIFY ==\n//*UTDD1   DD  DISP=SHR,DSN=INSTALL.ISPPLIB             <== MODIFY ==\n//*NDD2    DD  DISP=SHR,DSN=GUIDE.MLIB                  <== MODIFY ==\n//*UTDD2   DD  DISP=SHR,DSN=INSTALL.ISPMLIB             <== MODIFY ==\n//*NDD3    DD  DISP=SHR,DSN=GUIDE.CLIB                  <== MODIFY ==\n//*UTDD3   DD  DISP=SHR,DSN=INSTALL.SYSPROC             <== MODIFY ==\n//*YSIN    DD  *\n//*     COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n//*       S M=TUTPC050\n//*       S M=TUTPE010\n//*       S M=TUTPT001\n//*       S M=TUTPT010\n//*       S M=TUTPT021\n//*       S M=TUTPT031\n//*       S M=TUTPT040\n//*       S M=TUTPT060\n//*       S M=TUTPT062\n//*       S M=TUTPT063\n//*       S M=TUTPT064\n//*       S M=TUTPT065\n//*       S M=TUTPT066\n//*       S M=TUTPT070\n//*       S M=TUTPT080\n//*     COPY INDD=((INDD2,R)),OUTDD=OUTDD2\n//*       S M=TUTP00\n//*       S M=TUTP01\n//*     COPY INDD=((INDD3,R)),OUTDD=OUTDD3\n//*       S M=TUTPRINT\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//PLI    EXEC  PGM=IEL0AA,\n// PARM='MACRO,OBJECT,SOURCE,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=C900073.ISPF.SOURCE(TUTPRNT1)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIB   DD  DSN=NULLFILE,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//PLI2   EXEC  PGM=IEL0AA,\n// PARM='MACRO,OBJECT,SOURCE,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=C900073.ISPF.SOURCE(TUTPRNT2)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIB   DD  DSN=NULLFILE,DISP=SHR\n//SYSLIN   DD  DSN=&&LOAD2,\n//             UNIT=SYSDA,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=400,RECFM=FB),\n//             SPACE=(6400,(75,20))\n//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n//LINK   EXEC  PGM=IEWL,PARM='XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS2.TSO.CMDLIB             <== MODIFY ==\n//         DD  DSN=SYS1.PLIBASE,DISP=SHR\n//SYSLMOD  DD  DISP=SHR,DSN=C900073.LINK.LOAD           <== MODIFY ==\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DISP=NEW\n//SYSLIN   DD  DSN=&&LOAD,DISP=(OLD,DELETE)\n//         DD  *\n NAME TUTPRNT1(R)\n//         DD  DSN=&&LOAD2,DISP=(OLD,DELETE)\n//         DD  *\n NAME TUTPRNT2(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TUTPRINT": {"ttr": 2310, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Description-------------------------------------------------------------\n\n          This dialog is a nifty dialog that prints off tutorials.\n          You specify the highest level tutorial panel and if they\n          are connected correctly, it will print them off with a\n          table of contents.\n\nInstallation------------------------------------------------------------\n\n1.        Update a panel to invoke SELECT PGM(TUTPRNT1)\n\n2.        The member in this PDS called TUTPRIN@ contains JCL to move\n          the appropriate components to their libraries. Run this JCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT465/FILE465.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT465", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}