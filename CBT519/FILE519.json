{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012244000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE519.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE519.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x0e'", "DS1TRBAL": "b'J\\xe8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xde\\x00\\x04\\x03\\xde\\x00\\x0b\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x19/\\x01\\x01\\x19/\\x141\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-11T00:00:00", "modifydate": "2001-07-11T14:31:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 437    FILE:  519\n\n    ORIGINAL DSNAME:  WCBT.CBT437.FILE519\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   PDS117I 20 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,241 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/11/01    14:31:03    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE519": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x19/\\x140\\x00j\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-07-11T14:30:00", "lines": 106, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 519 is from Sam Golob, and contains a system to compare   *   FILE 519\n//*           the status of tapes in CA-1 (TMS - Tape Management    *   FILE 519\n//*           System) with the status of the corresponding volume   *   FILE 519\n//*           names (numbers) in VTS (IBM's Virtual Tape System),   *   FILE 519\n//*           which looks, to MVS, like a 3494 Tape Library.        *   FILE 519\n//*                                                                 *   FILE 519\n//*           This, essentially, is an audit system between TMS     *   FILE 519\n//*           (CA-1) and the VTS.                                   *   FILE 519\n//*                                                                 *   FILE 519\n//*           There is some installation-dependent code in the      *   FILE 519\n//*           last program, which is the actual audit program       *   FILE 519\n//*           that compares the TMS data with the VTS data.  All    *   FILE 519\n//*           the other programs (I think) can run anywhere.  I     *   FILE 519\n//*           have included our alphanumeric volser information,    *   FILE 519\n//*           our TMSUX2E and TMSUX2U exits, as well as a TMSBLDUE  *   FILE 519\n//*           report to show our actual tape ranges.  Installation  *   FILE 519\n//*           dependencies are roughly marked in the TMLIBAUD code. *   FILE 519\n//*                                                                 *   FILE 519\n//*           If you have questions, please feel free to contact    *   FILE 519\n//*           Sam Golob:   sbgolob@attglobal.net                    *   FILE 519\n//*                                                                 *   FILE 519\n//*     PROGRAMS:                                                   *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBA01 - Reads your TMC (from TMS) and produces a       *   FILE 519\n//*                  complete volume list, representing all         *   FILE 519\n//*                  volumes (even the ones in DELETE status)       *   FILE 519\n//*                  defined to TMS.                                *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBA02 - Reads a LISTCAT of your VOLCAT (either the     *   FILE 519\n//*                  short version or the long version) and         *   FILE 519\n//*                  produces a list of all volumes defined to      *   FILE 519\n//*                  the VTS.                                       *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBA03 - Match-merge program to compare the TMC         *   FILE 519\n//*                  volume list, to the VTS volume list.           *   FILE 519\n//*                  Three outputs are produced:                    *   FILE 519\n//*                                                                 *   FILE 519\n//*                  TNOV  -  Tape volumes in TMS and not in VTS    *   FILE 519\n//*                  VNOT  -  Tape volumes in VTS and not in TMS    *   FILE 519\n//*                  BOTH  -  Tape volumes in both places           *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBA04 - Programs to find information about the         *   FILE 519\n//*       TMLIBA05   status of volumes in the VTS.  We run them     *   FILE 519\n//*                  against the BOTH and VNOT lists concatenated   *   FILE 519\n//*                  together, and sorted by volser (colums 1-6).   *   FILE 519\n//*                                                                 *   FILE 519\n//*                  TMLIBA04, which does an inquiry to the Library *   FILE 519\n//*                  Management System for each volser, is too      *   FILE 519\n//*                  slow, therefore TMLIBA05 was written to run    *   FILE 519\n//*                  against the LISTCAT for the library catalog,   *   FILE 519\n//*                  to pull equivalent information.                *   FILE 519\n//*                                                                 *   FILE 519\n//*                  Input (INDD) is FB-80 and consists of the      *   FILE 519\n//*                  volume lists.                                  *   FILE 519\n//*                                                                 *   FILE 519\n//*                  Output (OUTDD) is FB-385, and is a file we     *   FILE 519\n//*                  create, containing output from the IBM macro   *   FILE 519\n//*                  CBRXLCS, as below, and other relevant VTS      *   FILE 519\n//*                  volume information that is available to the    *   FILE 519\n//*                  program.  This file is input to the TMLIBAUD   *   FILE 519\n//*                  audit program.  Macro call is as follows:      *   FILE 519\n//*                                                                 *   FILE 519\n//*                  CBRXLCS  TYPE=TAPE,                            *   FILE 519\n//*                        FUNC=QVR,                                *   FILE 519\n//*                        VOLUME=TRANVOL,                          *   FILE 519\n//*                        VOLINFO=YES,                             *   FILE 519\n//*                        MF=(E,LCSLIST),                          *   FILE 519\n//*                        SUBPOOL=0                                *   FILE 519\n//*                                                                 *   FILE 519\n//*                  It is essential to code VOLINFO=YES, and       *   FILE 519\n//*                  (the book informs me), that also allows the    *   FILE 519\n//*                  program to obtain information from the         *   FILE 519\n//*                  Library Manager Inventory, as well as from     *   FILE 519\n//*                  the TCDB (the VOLCAT).                         *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBTM  - This is an EARL program, that produces a       *   FILE 519\n//*                  report containing essential data about active  *   FILE 519\n//*                  TMS volumes.  Input to the TMLIBAUD program    *   FILE 519\n//*                  from the TMS side, comes from here.  JCL to    *   FILE 519\n//*                  run this program, and all the programs in      *   FILE 519\n//*                  the entire collection, is in member TMLIBRUN.  *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBAUD - This is the actual compare program which we    *   FILE 519\n//*                  use, to identify \"inconsistencies\" (as we      *   FILE 519\n//*                  define them) between TMS and the VTS.  In our  *   FILE 519\n//*                  implementation, four error types are found.    *   FILE 519\n//*                  Reports on these are sent, both to separate    *   FILE 519\n//*                  outputs, and to one (total and summary)        *   FILE 519\n//*                  summation output.                              *   FILE 519\n//*                                                                 *   FILE 519\n//*                  You can re-code this program to detect any     *   FILE 519\n//*                  other conditions between the TMS and the VTS   *   FILE 519\n//*                  which you feel you need to know about.  This   *   FILE 519\n//*                  program is really the only one in the set,     *   FILE 519\n//*                  that contains installation dependencies.       *   FILE 519\n//*                                                                 *   FILE 519\n//*       TMLIBRUN - The job stream to run the entire package.      *   FILE 519\n//*                                                                 *   FILE 519\n//*       CBRTST   - Program (also found on File 516) to query      *   FILE 519\n//*                  the status of volumes in TMS.  This program    *   FILE 519\n//*                  uses a call to the TMS CTSQSTS facility, and   *   FILE 519\n//*                  may be run against the output of TMLIBA01,     *   FILE 519\n//*                  which is why I am also including it here.      *   FILE 519\n//*                  This program should be run from a non-APF      *   FILE 519\n//*                  library (non-authorized library).              *   FILE 519\n//*                                                                 *   FILE 519\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMLK": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x01\\x01\\x15_\\x01\\x01\\x15\\x8f\\x101\\x00\\x1f\\x00\\x1b\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-06-04T00:00:00", "modifydate": "2001-06-07T10:31:00", "lines": 31, "newlines": 27, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//*     THIS IS FOR TMLIBA01, 02, AND 03, AND TMLIBAUD.\n//*\n//*     USE ASMLK4 FOR TMLIBA04\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.FILE519.PDS(TMLIBA01)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n NAME    TMLIBA01(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMLK4": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x01\\x01\\x15_\\x01\\x01\\x15\\x8f\\x101\\x00\\x1f\\x00\\x1b\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-06-04T00:00:00", "modifydate": "2001-06-07T10:31:00", "lines": 31, "newlines": 27, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//*     TMLIBA04 HAS TO BE LINKEDITED WITH SETCODE AC(1)\n//*\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.FILE519.PDS(TMLIBA04)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETCODE AC(1)\n NAME    TMLIBA04(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBRTST": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x13\\x7f\\x01\\x01\\x15\\x0f\\x11\\x15\\x01\\x10\\x01\\x0c\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-05-17T00:00:00", "modifydate": "2001-05-30T11:15:00", "lines": 272, "newlines": 268, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*       CBRTEST    -   TEST CTSQSTS RETURN CODES FOR A VOLSER       *\n*       -------        --------------------------------------       *\n*                                                                   *\n*    AUTHOR:   SAM GOLOB                DATE:  MAY 25, 01           *\n*                                                                   *\n*    SAMPLE EXECUTION JCL:                                          *\n*                                                                   *\n*       //WSBGCBRT JOB ,'SAM GOLOB',CLASS=S,                        *\n*       //    MSGCLASS=X,NOTIFY=&SYSUID                             *\n*       //*                                                         *\n*       //TESTCALL EXEC PGM=CBRTST                                  *\n*       //STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD                      *\n*       //SYSPRINT DD   SYSOUT=*,DCB=RECFM=FBA                      *\n*       //SYSIN    DD   DISP=SHR,DSN=WSBG.EDIT.SPLIT.STATEMTS       *\n*                                                                   *\n*     OR SYSIN MIGHT LOOK LIKE THIS:                                *\n*                                                                   *\n*       //SYSIN    DD   *                                           *\n*       M10000                                                      *\n*       M10001                                                      *\n*       M10002                                                      *\n*       M10003                                                      *\n*       M10004                                                      *\n*       M10005                                                      *\n*       M10006                                                      *\n*       M10007                                                      *\n*       M10008                                                      *\n*       M10009                                                      *\n*       M10010                                                      *\n*       /*                                                          *\n*                                                                   *\n*                                                                   *\n*         THE SYSIN DATASET HAS TO BE FB-80 AND CONTAIN A           *\n*         VOLUME SERIAL IN COLUMNS 1-6.  ASTERISK '*' OR BLANK      *\n*         IN COLUMN1 IS REGARDED AS A COMMENT.                      *\n*                                                                   *\n*         YOU CAN MODIFY THE CODE AT LABEL \"COMMENT\" TO FILTER      *\n*         THE SYSIN INPUT THE WAY YOU WANT IT.                      *\n*                                                                   *\n*         I RAN THIS PROGRAM AGAINST ALL THE VOLUMES IN MY TMC.     *\n*         I COPIED THE TMC RECORDS INTO AN FB-80 DATASET,           *\n*         TRUNCATING THE ENDS.  THEN I EDITED OUT THE DSNB          *\n*         RECORDS, LEAVING RECORDS CONTAINING ONLY VOLUME           *\n*         SERIAL NUMBERS IN COLUMNS 1-6.  THAT FILE IS INPUT        *\n*         TO THE CBRTST PROGRAM.                                    *\n*                                                                   *\n*         IT IS ALSO EASY TO MODIFY THE RETURN CODE INTERPRETATION  *\n*         MESSAGES AT LABEL CODE0, ETC.                             *\n*                                                                   *\n*         AND LAST BUT NOT LEAST, YOU CAN CALL A DIFFERENT          *\n*         PROGRAM, IF YOU HAVE NEED TO.  JUST LOOK AT THE           *\n*         PROGRAM NAME LITERAL BEFORE THE LOAD MACRO.  AND          *\n*         YOU ALSO HAVE TO DO THE SAME THING AT THE DELLOAD LABEL.  *\n*         THE \"DELETE\" MACRO WILL ALSO PROBABLY HAVE TO BE REMOVED  *\n*         OR MODIFIED, IN THE DELLOAD SUBROUTINE.                   *\n*                                                                   *\n*         OF COURSE, THE INPUT FILE MAY HAVE TO BE HANDLED          *\n*         DIFFERENTLY TOO.  CURRENTLY IT IS A LIST OF VOLSERS.      *\n*         AND THE OTHER PROGRAM MAY HAVE A LONGER PARM LIST.        *\n*         BUT THIS PROGRAM IS STILL QUITE GENERAL.                  *\n*                                                                   *\n*********************************************************************\n*                                                                   *\n*  CHANGE LOG:                                                      *\n*                                                                   *\n*    05/25/01 - RUNNING THIS PROGRAM AGAINST THE OLDER VERSION OF   *\n*    (S.GOLOB)  CTSQSTS, WHICH DID A LOAD OF TMSSVC WITHOUT A       *\n*               DELETE, CAUSED A S906-08 ABEND AFTER 32767 INPUT    *\n*               VOLUME RECORDS WERE READ.  TMSSVC USE COUNT WAS     *\n*               RAISED TO 32767, AND COULD BE INCREASED NO MORE.    *\n*                                                                   *\n*               THIS PROGRAM NOW DOES A DELETE OF TMSSVC, EACH TIME *\n*               CTSQSTS IS CALLED, BECAUSE IT RUNS IN THE SAME TCB  *\n*               AS CTSQSTS, WHEN THE LATTER PROGRAM LOADS TMSSVC.   *\n*               THEREFORE OUR DELETE OF THE TMSSVC PROGRAM IS       *\n*               EFFECTIVE.  RUSSELL WITT (THE AUTHOR OF CTSQSTS)    *\n*               HAS TOLD ME THAT CTSQSTS (AT A LATER LEVEL) DOES    *\n*               THE DELETE OF TMSSVC, ITSELF.                       *\n*                                                                   *\n*               WE DISCOVERED THIS PROBLEM BY RUNNING CBRTST        *\n*               AGAINST ALL VOLUMES IN THE TMC.  WHEN WE ENLARGED   *\n*               OUR TMC (TO GREATER THAN 32767 VOLUMES), THIS       *\n*               PROBLEM \"REARED ITS UGLY HEAD\", AND HAD TO BE       *\n*               FIXED.                                              *\n*                                                                   *\n*********************************************************************\n         EJECT\nCBRTEST  CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'CBRTEST - TEST CTSQSTS RETURN CODES - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP ONE BASE REGISTER\n         USING CBRTEST,R12\n         LR    R12,R15\n         LR    R1,R5          RESTORE PARM POINTER\n         L     R1,0(R1)       GET PARM FROM JCL\n         OPEN  (SYSIN,INPUT)\n         OPEN  (SYSPRINT,OUTPUT)\n         ZAP   PAGECT,=P'0'\n         ZAP   ITEMCT,=P'0'\n         ZAP   LOADCT,=P'0'\n         BAL   R4,HEADING\n         LA    R0,=CL8'CTSQSTS '\n         LOAD  EPLOC=(0)\n         ST    R0,ENTRYPT\nGETLOOP  DS    0H\n         CP    LINECT,=P'60'\n         BL    NOPAGE\n         BAL   R4,HEADING\nNOPAGE   DS    0H\n         MVC   INAREA,INAREA-1    CLEAR INPUT AREA TO BLANKS\n         GET   SYSIN,INAREA       GET A VOLSER RECORD\nCOMMENT  CLI   SYSIN,C'*'\n         BE    GETLOOP\n         CLI   SYSIN,C' '\n         BE    GETLOOP\n         MVC   VOLSR(6),INAREA    MOVE VOLSER TO INPUT AREA\n         PRINT GEN\n* --------  PRINT HEADER AND INITIAL VOLUME NAME MESSAGE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   MSG01+20(6),VOLSR\n* --------  CODE TO CALL CTSQSTS AND GET THE RETURN CODE\n* -*-*-\n         CP    LOADCT,=P'30000'   USE COUNT GETTING TOO HIGH?\n         BNH   NOLOADIT           NO. BYPASS DELETE.\n         BAL   R4,DELLOAD         DELETE AND RELOAD\nNOLOADIT DS    0H\n* -*-*-\n         XC    LQUERY(16),LQUERY  CLEAR PARM AREA\n         LA    R0,VOLSR           POINT TO VOLSER NAME\n         ST    R0,LQUERY          PUT VOLSER INTO PARM LIST\n         OI    LQUERY,X'80'       INDICATE END OF PARM LIST\n         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM\n         LA    R1,LQUERY               POINT TO PARM LIST\n         BALR  R14,R15                 DO CALL\n         CVD   R15,DOUBLE         CONVERT TO PACKED\n         ST    R15,SAVER15        SAVE RETURN CODE\n         DELETE EP=TMSSVC\n         AP    LOADCT,=P'1'\n         OI    DOUBLE+7,X'0F'     SIGN NIBBLE\n         MVC   MSG02+20(10),EDPAT\n         ED    MSG02+20,DOUBLE+3\n         L     R15,SAVER15        RESTORE RETURN CODE\n         BAL   R4,CODETEXT        PUT INTERPRETATION INTO MESSAGE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         PUT   SYSPRINT,OUTLINE\n         AP    LINECT,=P'1'\n         B     GETLOOP\n* --------\nGETEND   DS    0H\n         CLOSE SYSIN\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* --------         SUBROUTINE - PRINT HEADING\nHEADING  DS    0H\n         ZAP   LINECT,=P'4'\n         AP    PAGECT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   HEADPAT,EDPAT\n         ED    HEADPAT,PAGECT+2\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         BR    R4\n* --------         SUBROUTINE - CODE TEXT INTERPRETATION\nCODETEXT MVC   CODETXT,BLANKS\nTRYC0    C     R15,=F'0'\n         BNE   TRYC4\n         MVC   CODETXT,CODE0\n         B     TRYCEND\nTRYC4    C     R15,=F'4'\n         BNE   TRYC8\n         MVC   CODETXT,CODE4\n         B     TRYCEND\nTRYC8    C     R15,=F'8'\n         BNE   TRYC12\n         MVC   CODETXT,CODE8\n         B     TRYCEND\nTRYC12   C     R15,=F'12'\n         BNE   TRYC16\n         MVC   CODETXT,CODE12\n         B     TRYCEND\nTRYC16   C     R15,=F'16'\n         BNE   TRYC20\n         MVC   CODETXT,CODE16\n         B     TRYCEND\nTRYC20   C     R15,=F'20'\n         BNE   TRYCERR\n         MVC   CODETXT,CODE20\n         B     TRYCEND\nTRYCERR  MVC   CODETXT,CODEERR\nTRYCEND  BR    R4\n* --------         SUBROUTINE - DELETE AND RELOAD OF CALLED PROGRAM\nDELLOAD  DS    0H\n         STM   R0,R1,SAVER0R1      SAVE R0 AND R1\n         ZAP   LOADCT,=P'0'        RESET COUNTER TO ZERO\n         L     R0,ENTRYPT          GET ENTRY POINT\n*                                  DELETE AND RELOAD\n         DELETE EPLOC=(0)\n         LA    R0,=CL8'CTSQSTS '\n         LOAD  EPLOC=(0)\n         ST    R0,ENTRYPT\n         LM    R0,R1,SAVER0R1      RESTORE R0 AND R1\nDELLEND  BR    R4\n* ----- CONSTANTS ------ *\nDOUBLE   DC    D'0'\nSAVER0R1 DC    D'0'\nSAVER15  DC    F'0'\nENTRYPT  DC    F'0'\nPAGECT   DC    PL7'0'\nLINECT   DC    PL7'0'\nITEMCT   DC    PL7'0'\nLOADCT   DC    PL7'0'\nEDPAT    DC    X'40202020202020202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DS    0CL133\n         DC    CL103'1  CTSQSTS - RETURN CODE TEST PROGRAM     '\n         DC    CL5'PAGE '\nHEADPAT  DC    CL10' '\n         DC    CL15' '\n         DC    CL15' '\nMSG01    DS    0CL133\n         DC    CL31'     INPUT VOLSER =            '\nMSG02    DC    CL43'     RETCODE WAS  =                       '\nCODETXT  DC    CL14' '\n         DC    CL45' '\n         DC    CL8' '\nVOLSR    DC    CL6' '\nRETCDE   DC    PL7'0'\nLQUERY   DS    A                       ADR OF VOLSER\n         DS    A                       ADR OF ATL-TYPE, ATL-NUM\n         DS    A                       ADR OF CONTAINER VOLSER\n         DS    A                       ADR OF DSN FOR CONTAINER VOLUME\nLQUERYE  EQU   *                       END-OF-LIST\nCODETABL DS    0H\nCODE0    DC    C'SCRATCH TAPE  '\nCODE4    DC    C'TAPE NOT FULL '\nCODE8    DC    C'FULL TAPE     '\nCODE12   DC    C'OUT OF SERVICE'\nCODE16   DC    C'FOREIGN TAPE  '\nCODE20   DC    C'CA1 NOT ACTIVE'\nCODEERR  DC    C'INVALID CODE  '\nLINKPARM DS    0A                 <--- R15 AT LINK TIME\n         DC    A(0)                    ADR OF PGM NAME\n         DC    A(0)                    NO ADR FOR DCB\n         DC    C' '\nINAREA   DC    CL80' '\n         LTORG\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,LRECL=80,EODAD=GETEND\n         END   CBRTEST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CBRTST1": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x01\\x01\\x13O\\x01\\x01\\x15_\\x10E\\x00\\x07\\x00\\x06\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-05-14T00:00:00", "modifydate": "2001-06-04T10:45:00", "lines": 7, "newlines": 6, "modlines": 0, "user": "WSBG"}, "text": "//WSBGCBRV JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//TESTCALL EXEC PGM=CBRTST\n//STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.TMC.VOLLIST\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBAUD": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x16_\\x10\"\\x03\\x8d\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-14T10:22:00", "lines": 909, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBAUD - PROGRAM TO MATCH-MERGE VOLUME-BASED DATA FROM THE     *\n*             TMC WITH CORRESPONDING DATA FROM THE TAPE LIBRARY.    *\n*                                                                   *\n*             A  TOTAL  EXCEPTION REPORT IS PRODUCED, PLUS          *\n*             FOUR REPORTS SHOWING THE SEPARATE EXCEPTION TYPES     *\n*                                                                   *\n*                                                                   *\n*   AUTHOR:   SAM GOLOB            DATE:  06/01/01                  *\n*                                                                   *\n*   INPUTS:   TMSIN    -  VOLUME LIST CREATED FROM THE TMC          *\n*             LIBIN    -  VOLUME LIST CREATED FROM THE TCDB         *\n*                                                                   *\n*   OUTPUTS:  SYSPRINT -  PRINTS TOTAL EXCEPTION REPORT             *\n*             SYSPRNT1 -  PRIVATE IN LIBRARY, SCRATCH TO TMS        *\n*             SYSPRNT2 -  SCRATCH IN LIBRARY, PRIVATE TO TMS        *\n* INST'ION>>  SYSPRNT3 -  DEVELOPMENT TAPES NOT PRIVATE IN LIBRARY  *\n*             SYSPRNT4 -  VTS TAPES THAT ARE NOT IN TMS             *\n*             SYSPRNT5 -  TMS SAYS IN LIBRARY - BUT NOT THERE       *\n*                         TMS SAYS IN LIBRARY - BUT WAS EJECTED     *\n*             SYSPRNT6 -  TMS SAYS NOT IN LIBRARY - REALLY THERE    *\n*                                                                   *\n*                                                                   *\n*   CHANGE LOG:                                                     *\n*                                                                   *\n*   LEVEL 002                                                       *\n*     06/05/01 - PAGE NUMBERS ADDED, ALL OUTPUT LINES PROPERLY      *\n*                BLANKED (NOT FILLED WITH X'00').  SET UP THIRD     *\n*                BASE REGISTER, FOR BREATHING ROOM.                 *\n*                                                                   *\n*   LEVEL 003                                                       *\n*     06/06/01 - PUT LITERAL \"PAGE\" BEFORE PAGE NUMBER.  CONVERT    *\n*                LINES PER PAGE, PAGE COUNT, TO AN ASSEMBLER        *\n*                GLOBAL VARIABLE.                                   *\n*                                                                   *\n*   LEVEL 004                                                       *\n*     06/11/01 - CODED CASE:  TMS SHOWS IN ROBOT, BUT NOT THERE     *\n*              - CODED CASE:  TMS SHOWS IN ROBOT, BUT ON SHELF      *\n*                                                                   *\n*   LEVEL 005                                                       *\n*     06/12/01 - 7 CATEGORIES OF EXCEPTIONS IN 6 REPORTS.           *\n*              - ADDED CASE:  TMS SHOWS NOT IN ROBOT, BUT IT        *\n*                REALLY IS THERE.                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\n*\n*    SET LINES PER PAGE VARIABLE, FOR PRINT CONTROL.\n*\n         GBLA  &LINEPPG,&LINEINT\n&LINEPPG SETA  60\n&LINEINT SETA  &LINEPPG+1\n         GBLC  &LLEV\n&LLEV    SETC  '005'\n*\n*********************************************************************\nTMLIBAUD CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBAUD - EXCEPTION REPORT - TMS VERSUS TAPE LIB - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----    SET UP THREE BASE REGISTERS (JUST FOR BREATHING ROOM) -- *\n         USING TMLIBAUD,R12,R11,R10\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\nINITPAGE DS    0H                   FORCE INITIAL PRINT OF HEADERS\n         ZAP   LINECNT,=P'&LINEINT'\n         ZAP   LINECNT1,=P'&LINEINT'\n         ZAP   LINECNT2,=P'&LINEINT'\n         ZAP   LINECNT3,=P'&LINEINT'\n         ZAP   LINECNT4,=P'&LINEINT'\n         ZAP   LINECNT5,=P'&LINEINT'\n         ZAP   LINECNT6,=P'&LINEINT'\n         ZAP   PAGECNT,=P'0'        INITIALIZE PAGE COUNTERS\n         ZAP   PAGECNT1,=P'0'\n         ZAP   PAGECNT2,=P'0'\n         ZAP   PAGECNT3,=P'0'\n         ZAP   PAGECNT4,=P'0'\n         ZAP   PAGECNT5,=P'0'\n         ZAP   PAGECNT6,=P'0'\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADER+96(23),HEADDATE\n         MVC   HEADER1+95(23),HEADDATE\n         MVC   HEADER2+95(23),HEADDATE\n         MVC   HEADER3+95(23),HEADDATE\n         MVC   HEADER4+95(23),HEADDATE\n         MVC   HEADER5+95(23),HEADDATE\n         MVC   HEADER6+95(23),HEADDATE\n***********************************************************************\nPROCESS  DS    0H                        BEGIN MATCH-MERGE\n*                                        OPEN INPUTS AND PRINT\n         OPEN  (TMSIN,(INPUT))\n         OPEN  (LIBIN,(INPUT))\n         OPEN  (SYSPRINT,OUTPUT)\n         OPEN  (SYSPRNT1,OUTPUT)\n         OPEN  (SYSPRNT2,OUTPUT)\n         OPEN  (SYSPRNT3,OUTPUT)\n         OPEN  (SYSPRNT4,OUTPUT)\n         OPEN  (SYSPRNT5,OUTPUT)\n         OPEN  (SYSPRNT6,OUTPUT)\n*                                        START ALL THE HEADERS\n         BAL   R9,DOHEADR\n*\n         BAL   R9,DOHEADR1\n*\n         BAL   R9,DOHEADR2\n*\n         BAL   R9,DOHEADR3\n*\n         BAL   R9,DOHEADR4\n*\n         BAL   R9,DOHEADR5\n*\n         BAL   R9,DOHEADR6\n*\n*                                        ZERO SOME COUNTERS\n         ZAP   INTMCC,=P'0'\n         ZAP   INLIBC,=P'0'\n         ZAP   EXCEPNO,=P'0'\n         MVI   FLAG,X'00'                AND THE FLAG\n         MVI   FLAGPS,X'00'                AND THE OTHER FLAG\n         MVC   TMCLVOL,BLANKS            AND THE 'LAST VOLUME READ'\n         MVC   LIBLVOL,BLANKS             STORAGE AREAS\n         MVC   AREAIN,AREAIN-1           AND BLANK THE\n         MVC   AREAJN(256),AREAJN-1            INPUT AREAS\n         MVC   AREAJN+256(AREAJNL-256),AREAJN+255\n*\n* -------------------------   START WITH ONE READ FROM EACH FILE\n*\nINITREAD DS    0H                        INITIALIZATION OF FILES\n* --------------------------------       READ A TMS RECORD FROM EARL\n         GET   TMSIN,AREAIN\n*                                        IF EOF IT'LL GO TO FTN\n*\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   INITREAD                  NO - IGNORE IT\n         NI    FLAGPS,X'FF'-X'8C'        CLEAR ROBOT FLAGS\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         CLC   AREAIRNO(3),=C'000'       ROBOT NUM 000?\n         BE    INITLGET\n         MVC   LIBTYPE(8),BLANKS         BLANK FIELD\n         MVC   LIBTYPE(8),AREAIRTY       HOLD ROBOT NAME\n         MVC   ROBNUMB(3),AREAIRNO       AND NUMBER\n         OI    FLAGPS,X'04'              MARK THAT TMS THINKS ROBOT\nINITLGET DS    0H\n* --------------------------------       READ A VTS RECORD\n         GET   LIBIN,AREAJN\n*                                        IF EOF IT'LL GO TO FVN\n*\n         NI    FLAGPS,X'FF'-X'40'        TURN OFF SHELF FLAG\n         OI    FLAGPS,X'80'              SHOW WE HAVE A ROBOT RECD\n*   IF YOU USE TMLIBA04 INPUT, YOU HAVE TO CHECK RET CODES HERE.\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE VOLSER NAMES --\n         MVC   LIBLVOL,AREAJVOL           - BLANK IF NO INPUT\n*\n* --------------------------------       MATCH MERGE PROCESS\nMATMERGE DS    0H\n         MVI   FLAGPS,X'00'              CLEAR VOLUME STATUS FLAG\n         TM    FLAG,X'30'                EOF ON BOTH FILES?\n         BO    EOFS                      YES. FINISH UP.\n         TM    FLAG,X'10'                EOF ON TMC VOL FILE?\n         BO    LOWLIB                    YES. JUST READ FROM VTS FILE\n         TM    FLAG,X'20'                EOF ON LIB VOL FILE?\n         BO    LOWTMC                    YES. JUST READ FROM TMC FILE\n         CLC   TMCLVOL,LIBLVOL           COMPARE WHICH VOL IS LOWER\n         BH    LOWLIB                    PROCESS LIBRARY VOL LOWER\n         BL    LOWTMC                    PROCESS TMC VOL LOWER\n         B     INEQUAL                   PROCESS EQUAL\n*\n*------------------------------------------------------------------*\nINEQUAL  DS    0H                      BOTH ARE EQUAL - PRODUCE AUDIT\n*                                      TO COMPARE THEM, THEN GET TWO\n*                                      MORE INPUTS, ONE FROM EACH FILE.\n*\n* -----     TEST IF EACH INPUT SHOWS PRIVATE OR SCRATCH\n*\n         CLC   AREAIPOS,=C'PRIVATE'\n         BNE   INETISCR\n         OI    FLAGPS,X'01'              FLAG TMS STATUS AS PRIVATE\n         NI    FLAGPS,X'FF'-X'02'        AND NOT SCRATCH\n         B     INETIGO\nINETISCR DS    0H\n         CLC   AREAIPOS,=C'SCRATCH'\n         BNE   INETIGO\n         OI    FLAGPS,X'02'              FLAG TMS STATUS AS SCRATCH\n         NI    FLAGPS,X'FF'-X'01'        AND NOT PRIVATE\n*        --------------------------------------------------------------\n*                                        TEST IF TMS SHOWS VOL IN ROBOT\nINETIGO  DS    0H\n         CLC   AREAIRNO,=C'000'          ROBOT NUM 000?\n         BE    INETINOL\n         MVC   LIBTYPE(8),BLANKS         BLANK FIELD\n         MVC   LIBTYPE(8),AREAIRTY       HOLD ROBOT NAME\n         MVC   ROBNUMB(3),AREAIRNO       AND NUMBER\n         OI    FLAGPS,X'04'              MARK THAT TMS THINKS ROBOT\n         NI    FLAGPS,X'FF'-X'08'        AND NOT OTHERWISE\n         B     INETJSTT\nINETINOL DS    0H\n         OI    FLAGPS,X'08'              TMS THINKS NOT IN ROBOT\n         NI    FLAGPS,X'FF'-X'04'        AND NOT OTHERWISE\n*        --------------------------------------------------------------\nINETJSTT DS    0H                        LIB RECORD\n         CLC   AREAJLIB(5),=C'SHELF   '     \"LIBRARY\" IS \"SHELF\"?\n         BNE   INETJNOS                  NO, DON'T SET FLAG\n         OI    FLAGPS,X'40'              SET SHELF FLAG\nINETJNOS DS    0H\n         CLI   AREAJPOS,C'P'\n         BNE   INETJSCR\n         OI    FLAGPS,X'10'              FLAG LIB STATUS AS PRIVATE\n         NI    FLAGPS,X'FF'-X'20'        AND NOT SCRATCH\n         B     INETJGO\nINETJSCR DS    0H\n         CLI   AREAJPOS,C'S'\n         BNE   INETJGO\n         OI    FLAGPS,X'20'              FLAG LIB STATUS AS SCRATCH\n         NI    FLAGPS,X'FF'-X'10'        AND NOT PRIVATE\n         B     INETJGO\n* ---------------------------------------------------------- *\n* -----     PRODUCE OUTPUT ONLY IF EXCEPTIONAL CASE    ----- *\n* ---------------------------------------------------------- *\nINETJGO  DS    0H\n         CLI   FLAGPS,X'00'              NOT MARKED P OR S?\n         BE    INEQGANO                  CAN'T PROCESS\n* ---------------------------------------------------------- *\n         TM    FLAGPS,X'04'     TMS SAYS IN ROBOT?\n         BO    INETJX1          YES, DON'T TEST VTS NOW\n         TM    FLAG,X'02'       NO, WHAT DOES THE ROBOT SAY?\n         BNO   INETJX1          ROBOT DOESN'T HAVE IT, GO ON.\n*              ----------->     BUT IF ROBOT SAYS HE HAS IT, AND\n*                               TMS SAYS HE DOESN'T.....\n* ---------------------------------------------------------- *\n*  TMS SAYS NOT IN ROBOT, ROBOT SAYS IT IS.\n* ---------------------------------------------------------- *\n         AP    TNVLCNT,=P'1'             COUNT THIS CASE\n         AP    EXCEPNO,=P'1'             COUNT AS EXCEPTION\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   TNRLIBN,TNRLIBN-1          BLANK FIELD\n         MVC   TNRLIBN(8),AREAJLIB        MOVE LIBRARY NAME INTO MSG\n         MVC   AREAOUT+30(TNRNOTLL),TNRNOTL    MOVE ERROR MESSAGE IN\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9                 PRINT ALL EXCEPTION RECORD\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT6,=P'1'\n         ST    R9,SAVER9                 PRINT THIS EXCEPTION\n         BAL   R9,DOHEADR6\n         L     R9,SAVER9\n         PUT   SYSPRNT6,AREAOUT\n         B     INEQGANO         GET 2 NEW RECORDS\n* ---------------------------------------------------------- *\n*  CHECK OTHER EXCEPTION CASES.\n* ---------------------------------------------------------- *\nINETJX1  DS    0H\n         TM    FLAGPS,X'44'     TMS THINKS IN ROBOT, LIB THINKS SHELF\n         BO    INETNOPR         CHECK FIRST FOR THIS CASE\n* ---------------------------------------------------------- *\n         TM    FLAGPS,X'11'              BOTH MARKED PRIVATE?\n         BO    INEQGANO                  YES - GET 2 MORE RECORDS\n* ---------------------------------------------------------- *\n         CLI   AREAJVOL,C'D'             IS IT A \"DEV\" TAPE?\n         BE    ITSADEV                   YES. SPECIAL TREATMENT.\n* ---------------------------------------------------------- *\n         TM    FLAGPS,X'22'              BOTH MARKED SCRATCH?\n         BO    INEQGANO                  YES - GET 2 MORE RECORDS\n         B     INETNODV                  NO - TEST FOR EXCEPTIONS.\n* ---------------------------------------------------------- *\nITSADEV  DS    0H\n         TM    FLAGPS,X'10'              YES - PRIVATE IN LIBRARY?\n         BO    INEQGANO                  YES - AS IT SHOULD BE\n         TM    FLAGPS,X'20'              YES - SCRATCH IN LIBRARY?\n         BZ    INEQGANO                  NO  - COUNT AS OK\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(DEVNOTPL),DEVNOTP    MOVE ERROR MESSAGE IN\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9            PRINT IN TOTAL EXCEPTION REPORT\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT3,=P'1'\n         ST    R9,SAVER9            PRINT JUST THIS CATEGORY\n         BAL   R9,DOHEADR3\n         L     R9,SAVER9\n         PUT   SYSPRNT3,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    DEVNPTMS,=P'1'       DEV NOT PRIVATE IN TMS - COUNTER\n         B     INEQGANO                  AFTER ERRORMSG, GO ON\n* ---------------------------------------------------------- *\n* -----     TEST WHICH EXCEPTION WE HAVE     --------------- *\n* ---------------------------------------------------------- *\nINETNODV DS    0H               NOW TEST THE EXCEPTIONS, AND REPORT\n         TM    FLAGPS,X'21'     TMS IS PRIVATE, LIB IS SCRATCH?\n         BNO   INETTSLP         NO. TEST FOR OPPOSITE.\n         BAL   R9,TSLP          YES. HANDLE EXCEPTION.\n         B     INEQGANO         GET TWO NEW RECORDS\n* ---------------------------------------------------------- *\nINETTSLP DS    0H\n         TM    FLAGPS,X'12'     TMS IS SCRATCH, LIB IS PRIVATE?\n         BNO   INETNOPR         NO. GO ON PROCESSING.\n         BAL   R9,TPLS          YES. HANDLE EXCEPTION.\n         B     INEQGANO         GET TWO NEW RECORDS\n* ---------------------------------------------------------- *\nINETNOPR DS    0H\n         TM    FLAGPS,X'44'     TMS THINKS IN ROBOT, LIB THINKS SHELF\n         BNO   INEQGANO         NOT THIS COMBINATION\n         AP    TLVNOTS,=P'1'             COUNT THIS CASE\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(TLBNOTLL),TLBNOTL    MOVE ERROR MESSAGE IN\n         MVC   AREAOUT+62(14),=C'IS ON SHELF    '  CHANGE MSG FOR CASE\n         MVC   AREAOUT+36+TLBNOTLL(8),LIBTYPE  MOVE LIBTYPE INTO MSG\n         MVC   AREAOUT+46+TLBNOTLL(3),ROBNUMB  MOVE ROB NUM INTO MSG\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9            PRINT TOTAL EXCEPTION REPORT LINE\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT5,=P'1'\n         ST    R9,SAVER9            PRINT SPECIALIZED CASE\n         BAL   R9,DOHEADR5\n         L     R9,SAVER9\n         PUT   SYSPRNT5,AREAOUT\n         B     INEQGANO         GET 2 NEW RECORDS\n* ---------------------------------------------------------------- *\n* - - - - -        IF RECORDS EQUAL GET TWO NEW RECORDS      - - - *\n* ---------------------------------------------------------------- *\nINEQGANO DS    0H                        GET A TMS RECORD FROM EARL\n         GET   TMSIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   INEQGANO                  NO - IGNORE IT\n         NI    FLAGPS,X'FF'-X'0C'        CLEAR ROBOT FLAGS\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n         CLC   AREAIRNO(3),=C'000'       ROBOT NUM 000?\n         BE    INEQGOON\n         MVC   LIBTYPE(8),BLANKS         BLANK FIELD\n         MVC   LIBTYPE(8),AREAIRTY       HOLD ROBOT NAME\n         MVC   ROBNUMB(3),AREAIRNO       AND NUMBER\n         OI    FLAGPS,X'04'              MARK THAT TMS THINKS ROBOT\n         NI    FLAGPS,X'FF'-X'08'        EXCLUDE THE OTHER CASE\n* - - - - -\nINEQGOON DS    0H                        GET A VTS RECORD TOO\n* - - - - -\n         GET   LIBIN,AREAJN\n         NI    FLAGPS,X'FF'-X'40'        TURN OFF SHELF FLAG\n         OI    FLAGPS,X'80'              SHOW WE HAVE A ROBOT RECD\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\n*------------------------------------------------------------------*\n*------------------------------------ TMS VOLSER LOWER THAN VTS ---*\n*------------------------------------------------------------------*\n*\nLOWTMC   DS    0H\n         NI    FLAG,X'FF'-X'02'          TURN OFF LIB RECD AS LAST IN\n         NI    FLAGPS,X'FF'-X'8C'        CLEAR ROBOT FLAGS\n         CLC   AREAIRNO(3),=C'000'       ROBOT NUM 000?\n         BE    LOWTGANO\n         MVC   LIBTYPE(8),BLANKS         BLANK FIELD\n         MVC   LIBTYPE(8),AREAIRTY       HOLD ROBOT NAME\n         MVC   ROBNUMB(3),AREAIRNO       AND NUMBER\n         OI    FLAGPS,X'04'              MARK THAT TMS THINKS ROBOT\n         AP    TLVNCNT,=P'1'             COUNT OCCURRENCE\n         AP    EXCEPNO,=P'1'             COUNT OCCURRENCE\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(TLBNOTLL),TLBNOTL    MOVE ERROR MESSAGE IN\n         MVC   AREAOUT+36+TLBNOTLL(8),LIBTYPE  MOVE LIBTYPE INTO MSG\n         MVC   AREAOUT+46+TLBNOTLL(3),ROBNUMB  MOVE ROB NUM INTO MSG\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9             PUT OUT TO TOTAL EXCEPTION REPORT\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT5,=P'1'\n         ST    R9,SAVER9             PUT OUT TO SPECIALIZED REPORT\n         BAL   R9,DOHEADR5\n         L     R9,SAVER9\n         PUT   SYSPRNT5,AREAOUT\n*------------------------------------------------------------------*\n* - - - - -        GET ANOTHER TMC VOLUME RECORD             - - - *\n*------------------------------------------------------------------*\nLOWTGANO DS    0H\n         GET   TMSIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   LOWTGANO                  NO - IGNORE IT\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\n*------------------------------------------------------------------*\n*------------------------------------ VTS VOLSER LOWER THAN TMS ---*\n*------------------------------------------------------------------*\nLOWLIB   DS    0H\n         TM    FLAG,X'03'                BOTH RECORDS READ TOGETHER?\n         BO    LOWNOERR                  NO ERROR - NO MESSAGE\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(VNOTTDL),VNOTTD    INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT4,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR4\n         L     R9,SAVER9\n         PUT   SYSPRNT4,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    VNTTDCNT,=P'1'\nLOWNOERR DS    0H\n         NI    FLAG,X'FF'-X'01'          TURN OFF TMC RECD AS LAST IN\n* - - - - -        GET ANOTHER LIB VOLUME RECORD\n         GET   LIBIN,AREAJN\n         NI    FLAGPS,X'FF'-X'40'        TURN OFF SHELF FLAG\n         OI    FLAGPS,X'80'              SHOW WE HAVE A ROBOT RECD\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\n*----------------------   COME HERE AT END OF INPUT FILES   -------*\nFTN      DS    0H\n         OI    FLAG,X'10'                 INDICATE EOF ON TMC VOL LIST\n         MVC   TMCLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\nFVN      DS    0H\n         OI    FLAG,X'20'                 INDICATE EOF ON LIB VOL LIST\n         NI    FLAGPS,X'FF'-X'80'         SHOW NO MORE ROBOT RECDS\n         MVC   LIBLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\n*------------------------------------------------------------------*\nEOFS     DS    0H                         CLOSE INPUT FILES\n         CLOSE TMSIN\n         CLOSE LIBIN\nOUTPRT   DS    0H                         PRODUCE FINAL SUMMARY TOTALS\n         AP    LINECNT,=P'4'\n         BAL   R9,DOHEADR\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIT\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),INTMCC+2\n         PUT   SYSPRINT,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIV\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),INLIBC+2\n         PUT   SYSPRINT,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGEXCEP\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),EXCEPNO+2\n         PUT   SYSPRINT,OUTLINE\n*\n         AP    LINECNT,=P'3'\n         BAL   R9,DOHEADR\n         AP    LINECNT1,=P'3'\n         BAL   R9,DOHEADR1\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGPRNSC\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),PRNSCCNT+2\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         PUT   SYSPRNT1,OUTLINE\n*\n         AP    LINECNT,=P'3'\n         BAL   R9,DOHEADR\n         AP    LINECNT2,=P'3'\n         BAL   R9,DOHEADR2\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGSCNPR\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),SCNPRCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT2,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         AP    LINECNT3,=P'3'\n         BAL   R9,DOHEADR3\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),DEVNPRVT\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),DEVNPTMS+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT3,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         AP    LINECNT4,=P'3'\n         BAL   R9,DOHEADR4\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),VNTTPCTR\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),VNTTDCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT4,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         AP    LINECNT5,=P'3'\n         BAL   R9,DOHEADR5\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),TLIBLNOT\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),TLVNCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT5,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         AP    LINECNT5,=P'3'\n         BAL   R9,DOHEADR5\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),TLIBLONS\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),TLVNOTS+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C' '\n         PUT   SYSPRNT5,OUTLINE\n*\n         AP    LINECNT,=P'1'\n         BAL   R9,DOHEADR\n         AP    LINECNT6,=P'3'\n         BAL   R9,DOHEADR6\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),TNOTLYES\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),TNVLCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C' '\n         PUT   SYSPRNT6,OUTLINE\n*                                        CLOSE THE PRINT FILES, AND\n         CLOSE SYSPRINT\n         CLOSE SYSPRNT1\n         CLOSE SYSPRNT2\n         CLOSE SYSPRNT3\n         CLOSE SYSPRNT4\n         CLOSE SYSPRNT5\n         CLOSE SYSPRNT6\nTHEEND   DS    0H                        RETURN TO THE SYSTEM\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- SUBROUTINES ------ *\nTPLS     DS    0H\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(PRNOTSCL),PRNOTSC   INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT1,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR1\n         L     R9,SAVER9\n         PUT   SYSPRNT1,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    PRNSCCNT,=P'1'         COUNT PRV IN LIB, SCR IN TMS\n         BR    R9\n* ------------------------ *\nTSLP     DS    0H\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(SCNOTPRL),SCNOTPR   INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT2,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR2\n         L     R9,SAVER9\n         PUT   SYSPRNT2,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    SCNPRCNT,=P'1'         COUNT SCR IN LIB, PRV IN TMS\n         BR    R9\n* ------------------------ *         MAIN HEADER\nDOHEADR  DS    0H\n         CP    LINECNT,=P'&LINEPPG'\n         BNH   DOHEADE\n         AP    PAGECNT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         ZAP   LINECNT,=P'4'\nDOHEADE  BR    R9\n* ------------------------ *          HEADER  1\nDOHEADR1 DS    0H\n         CP    LINECNT1,=P'&LINEPPG'\n         BNH   DOHEADE1\n         AP    PAGECNT1,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER1\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT1+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT1,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT1,OUTLINE\n         ZAP   LINECNT1,=P'4'\nDOHEADE1 BR    R9\n* ------------------------ *          HEADER  2\nDOHEADR2 DS    0H\n         CP    LINECNT2,=P'&LINEPPG'\n         BNH   DOHEADE2\n         AP    PAGECNT2,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER2\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT2+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT2,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT2,OUTLINE\n         ZAP   LINECNT2,=P'4'\nDOHEADE2 BR    R9\n* ------------------------ *          HEADER  3\nDOHEADR3 DS    0H\n         CP    LINECNT3,=P'&LINEPPG'\n         BNH   DOHEADE3\n         AP    PAGECNT3,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER3\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT3+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT3,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT3,OUTLINE\n         ZAP   LINECNT3,=P'4'\nDOHEADE3 BR    R9\n* ------------------------ *          HEADER  4\nDOHEADR4 DS    0H\n         CP    LINECNT4,=P'&LINEPPG'\n         BNH   DOHEADE4\n         AP    PAGECNT4,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER4\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT4+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT4,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT4,OUTLINE\n         ZAP   LINECNT4,=P'4'\nDOHEADE4 BR    R9\n* ------------------------ *          HEADER  5\nDOHEADR5 DS    0H\n         CP    LINECNT5,=P'&LINEPPG'\n         BNH   DOHEADE5\n         AP    PAGECNT5,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER5\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT5+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT5,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT5,OUTLINE\n         ZAP   LINECNT5,=P'4'\nDOHEADE5 BR    R9\n* ------------------------ *          HEADER  6\nDOHEADR6 DS    0H\n         CP    LINECNT6,=P'&LINEPPG'\n         BNH   DOHEADE6\n         AP    PAGECNT6,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER6\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT6+2\n         MVC   OUTLINE+120(4),=C'PAGE'     OVERLAY BEGINNING OF NUMBER\n         PUT   SYSPRNT6,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT6,OUTLINE\n         ZAP   LINECNT6,=P'4'\nDOHEADE6 BR    R9\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nFLAG     DC    X'00'\n*              X'01'        INPUT IS FROM TMC VOLUME LIST\n*              X'02'        INPUT IS FROM LIB VOLUME LIST\n*              X'10'        END OF INPUT ON TMC LIST\n*              X'20'        END OF INPUT ON LIB LIST\nFLAGPS   DC    X'00'\n*              X'01'        TMC SAYS THIS VOLUME IS PRIVATE\n*              X'02'        TMC SAYS THIS VOLUME IS SCRATCH\n*              X'04'        TMC SAYS THIS VOLUME IS IN A ROBOT\n*              X'08'        TMC SAYS THIS VOLUME IS NOT IN LIBRARY\n*              X'10'        LIB SAYS THIS VOLUME IS PRIVATE\n*              X'20'        LIB SAYS THIS VOLUME IS SCRATCH\n*              X'40'        LIB SAYS THIS VOLUME IS ON SHELF\n*              X'80'        LIB GOT A RECORD\nTMCLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM TMC LIST\nLIBLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM VOL LIST\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBAUD - AUDIT REPORT - TMS AND LIBRARY EXCEP-\n               TIONS AND INCONSISTENCIES - ALL EXCEPTIONS'\nHEADER1  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TAPES THAT ARE PRIVAT-\n               E IN THE VTS AND SCRATCH TO TMS'\nHEADER2  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TAPES THAT ARE SCRATC-\n               H IN THE VTS AND PRIVATE TO TMS'\nHEADER3  DC    CL133'1  TMLIBAUD - AUDIT REPORT - DEVELOPMENT TAPES THA-\n               T ARE NOT PRIVATE IN THE VTS'\nHEADER4  DC    CL133'1  TMLIBAUD - AUDIT REPORT - VTS TAPES THAT ARE NO-\n               T IN TMS'\nHEADER5  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TMS SAYS TAPE IN LIBR-\n               ARY, AND IT IS NOT THERE'\nHEADER6  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TMS SAYS TAPE NOT IN -\n               LIBRARY, AND IT IS THERE'\nMSGIT    DC    CL133'-         TMC VOLUME RECORDS  IN ='\nMSGIV    DC    CL133'          LIB VOLUME RECORDS  IN ='\nMSGEXCEP DC    CL133'      TOTAL NUMBER OF EXCEPTIONS ='\nMSGPRNSC DC    CL133'  PRIVATE IN LIB, SCRATCH TO TMS ='\nMSGSCNPR DC    CL133'  SCRATCH IN LIB, PRIVATE TO TMS ='\nDEVNPRVT DC    CL133'    DEV TAPES NOT PRIVATE IN VTS ='\nVNTTPCTR DC    CL133'   VTS TAPES THAT ARE NOT IN TMS ='\nTLIBLNOT DC    CL133' TMS SAYS IN LIBRARY - NOT THERE ='\nTNOTLYES DC    CL133' TMS - NOT IN LIB - REALLY THERE ='\nTLIBLONS DC    CL133' TMS - IN LIB, LIB SAYS ON SHELF ='\nISOSHELF DC    CL14'IS ON SHELF'\n         DC    CL133' '\nVNOTTD   DC    C'IN LIBRARY AND NOT IN TMS'\nVNOTTDL  EQU   *-VNOTTD\nPRNOTSC  DC    C'PRIVATE IN LIBRARY AND SCRATCH TO TMS'\nPRNOTSCL EQU   *-PRNOTSC\nSCNOTPR  DC    C'SCRATCH IN LIBRARY AND PRIVATE TO TMS'\nSCNOTPRL EQU   *-SCNOTPR\nDEVNOTP  DC    C'DEVELOPMENT TAPE IS NOT PRIVATE IN THE VTS LIBRARY'\nDEVNOTPL EQU   *-DEVNOTP\nTLBNOTL  DC    C'TMS SAYS IN LIBRARY, BUT REALLY NOT IN LIBRARY'\n         DC    C' '\nTLBNONM  DC    CL8' '\n         DC    C' '\nTLBNONO  DC    CL3' '\nTLBNOTLL EQU   *-TLBNOTL\nTNRNOTL  DC    C'TMS SAYS NOT IN ROBOT, BUT ROBOT SAYS IT IS'\n         DC    C' '\nTNRLIBN  DC    CL8' '\n         DC    C' '\nTNRNOTLL EQU   *-TNRNOTL\nTNLBISL  DC    C'TMS SAYS IS IN LIBRARY, BUT REALLY IT IS NOT'\nTNLBISLL EQU   *-TNLBISL\nLINECNT  DC    PL7'0'\nLINECNT1 DC    PL7'0'\nLINECNT2 DC    PL7'0'\nLINECNT3 DC    PL7'0'\nLINECNT4 DC    PL7'0'\nLINECNT5 DC    PL7'0'\nLINECNT6 DC    PL7'0'\nPAGECNT  DC    PL7'0'\nPAGECNT1 DC    PL7'0'\nPAGECNT2 DC    PL7'0'\nPAGECNT3 DC    PL7'0'\nPAGECNT4 DC    PL7'0'\nPAGECNT5 DC    PL7'0'\nPAGECNT6 DC    PL7'0'\nINTMCC   DC    PL7'0'\nINLIBC   DC    PL7'0'\nEXCEPNO  DC    PL7'0'\nPRNSCCNT DC    PL7'0'\nSCNPRCNT DC    PL7'0'\nDEVNPTMS DC    PL7'0'\nVNTTDCNT DC    PL7'0'\nTLVNCNT  DC    PL7'0'            IN TMS NOT IN LIBRARY\nTLVNOTS  DC    PL7'0'            IN TMS BUT ON THE SHELF\nTNVLCNT  DC    PL7'0'\nSAVER9   DC    F'0'\n         DC    C' '\nLIBTYPE  DC    CL8' '            SAVE LIBRARY TYPE IF EXISTS\n         DC    C' '\nROBNUMB  DC    CL3' '            SAVE ROBOT NUMBER IF NOT 000\n         LTORG\nTMSIN    DCB   DDNAME=TMSIN,MACRF=GM,EODAD=FTN,DSORG=PS,LRECL=133\nLIBIN    DCB   DDNAME=LIBIN,MACRF=GM,EODAD=FVN,DSORG=PS,LRECL=385\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT1 DCB   DDNAME=SYSPRNT1,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT2 DCB   DDNAME=SYSPRNT2,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT3 DCB   DDNAME=SYSPRNT3,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT4 DCB   DDNAME=SYSPRNT4,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT5 DCB   DDNAME=SYSPRNT5,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT6 DCB   DDNAME=SYSPRNT6,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL133            TMS   INPUT AREA\n         DS    CL1\nAREAIVOL DS    CL6               VOLSER\n         DS    CL90\nAREAIRTY DC    CL8' '            ROBOT TYPE\n         DC    CL1' '\nAREAIRNO DC    CL3' '            ROBOT NUMBER\n         DC    CL4' '\nAREAITAP DS    CL1               \"L\" IF TAPE VOLUME RECORD\n         DS    CL4\nAREAIPOS DS    CL7               PRIVATE OR SCRATCH\n         DS    CL8\n         DC    CL8' '            SEPARATOR\nAREAJN   DS    0CL385            LIB   INPUT AREA\n         DS    CL26\nAREAJLIB DS    CL8\n         DS    CL24\nAREAJVOL DS    CL6               VOLSER\nAREAJPOS DC    CL1' '            P - PRIVATE,   S - SCRATCH\n         DS    CL320\nAREAJNL  EQU   *-AREAJN\n         DC    C'    '\nAREAOUT  DS    0CL133            SYSPRINT AREA\nAREAOCC  DS    CL1\nAREAOVOL DS    CL6\n         DC    CL126' '\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\n         END   TMLIBAUD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TMLIBA01": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x7f\\x18G\\x00\\x8c\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-06T18:47:00", "lines": 140, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBA01 - PROGRAM TO CREATE A LIST OF VOLUMES IN COLUMNS 1-6    *\n*             WHICH IS MANUFACTURED FROM THE TMS TMC.               *\n*                                                                   *\n*     AUTHOR:   SAM GOLOB            DATE:  05/31/01                *\n*                                                                   *\n*     INPUTS:   TMCIN    -  THE TMS TMC DATASET                     *\n*                                                                   *\n*     OUTPUTS:  VOLLIST  -  OUTPUT FB-80 LIST OF VOLUMES            *\n*               SYSPRINT -  PRINTS RUN STATISTICS                   *\n*                                                                   *\n*     CHANGE LOG:                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMLIBA01 CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBA01 - CREATE VOL LIST FROM TMC - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 001 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMLIBA01,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADER+95(23),HEADDATE\n***********************************************************************\n         OPEN  (TMCIN,(INPUT))\n         OPEN  (VOLLIST,(OUTPUT))\n         ZAP   INRCDS,=P'0'\n         ZAP   OUTRCDS,=P'0'\nLEER     GET   TMCIN,AREAIN\n         AP    INRCDS,=P'1'\n         CLC   AREAIVOL,=C'TMSCTL'        TMS HEADER?\n         BE    LEER                       IGNORE IT\n         CLI   AREAIVOL,X'FF'             DSNB RECORD?\n         BE    LEER                       IGNORE IT\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),AREAIVOL       MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(TMCINDL),TMCIND    INDICATE VOL IS FROM TMC\n         PUT   VOLLIST,AREAOUT\n         AP    OUTRCDS,=P'1'\n         B     LEER\nFIN      DS    0H\n         OPEN  (SYSPRINT,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),INRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG02\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),OUTRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         CLOSE TMCIN\n         CLOSE VOLLIST\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBA01 - TMC VOLUME NAME EXTRACT PROGRAM'\n         DC    CL133' '\nMSG01    DC    CL133'-    RECORDS  IN ='\n         DC    CL133' '\nMSG02    DC    CL133'     RECORDS OUT ='\n         DC    CL133' '\nTMCIND   DC    C'FROM THE TMC'\nTMCINDL  EQU   *-TMCIND\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nTMCIN    DCB   DDNAME=TMCIN,MACRF=GM,EODAD=FIN,DSORG=PS,LRECL=340\nVOLLIST  DCB   DDNAME=VOLLIST,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL340\nAREAIVOL DS    CL6\nAREAIRST DS    CL334\n         DC    CL8' '\nAREAOUT  DS    0CL80\nAREAOVOL DS    CL6\n         DC    CL74' '\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\n         END   TMLIBA01\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBA02": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x7f\\x18U\\x00\\x90\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-06T18:55:00", "lines": 144, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBA02 - PROGRAM TO CREATE A LIST OF VOLUMES IN COLUMNS 1-6    *\n*             WHICH IS MANUFACTURED FROM THE OUTPUT OF A TSO        *\n*             LISTCAT COMMAND AGAINST THE SYSCAT.VOLCAT.VGENERAL    *\n*             DATASET.  THIS IS THE TCDB DATASET, AND IT IS MUCH    *\n*             LIKE A CATALOG.                                       *\n*                                                                   *\n*        LISTC ENT('SYSCAT.VOLCAT.VGENERAL') VOLENTRIES(*)          *\n*                                                                   *\n*     AUTHOR:   SAM GOLOB            DATE:  05/31/01                *\n*                                                                   *\n*     INPUTS:   VOLCIN   -  THE SYSTSPRT OUTPUT OF THE LISTCAT      *\n*                           COMMAND - EXPECTED TO BE FB-133         *\n*                                                                   *\n*     OUTPUTS:  VOLLIST  -  OUTPUT FB-80 LIST OF VOLUMES            *\n*               SYSPRINT -  PRINTS RUN STATISTICS                   *\n*                                                                   *\n*     CHANGE LOG:                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMLIBA02 CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBA02 - CREATE VOL LIST FROM LISTC OF VOLCAT '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 001 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMLIBA02,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADER+95(23),HEADDATE\n***********************************************************************\n         OPEN  (VOLCIN,(INPUT))\n         OPEN  (VOLLIST,(OUTPUT))\n         ZAP   INRCDS,=P'0'\n         ZAP   OUTRCDS,=P'0'\nLEER     GET   VOLCIN,AREAIN\n         AP    INRCDS,=P'1'\n         CLC   AREAIN+12(5),=C'----V'     CONTAINS VOLSER?\n         BNE   LEER                       IGNORE IT\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),AREAIN+17      MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(VOLCINDL),VOLCIND  INDICATE VOL FROM VOLCAT\n         PUT   VOLLIST,AREAOUT\n         AP    OUTRCDS,=P'1'\n         B     LEER\nFIN      DS    0H\n         OPEN  (SYSPRINT,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),INRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG02\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),OUTRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         CLOSE VOLCIN\n         CLOSE VOLLIST\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBA02 - VOLCAT VOLUME NAME EXTRACT PROGRAM'\n         DC    CL133' '\nMSG01    DC    CL133'-    RECORDS  IN ='\n         DC    CL133' '\nMSG02    DC    CL133'     RECORDS OUT ='\n         DC    CL133' '\nVOLCIND  DC    C'FROM THE VOLCAT'\nVOLCINDL EQU   *-VOLCIND\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nVOLCIN   DCB   DDNAME=VOLCIN,MACRF=GM,EODAD=FIN,DSORG=PS,LRECL=133\nVOLLIST  DCB   DDNAME=VOLLIST,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL133\nAREAIVOL DS    CL6\nAREAIRST DS    CL127\n         DC    CL8' '\nAREAOUT  DS    0CL80\nAREAOVOL DS    CL6\n         DC    CL74' '\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\n         END   TMLIBA02\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBA03": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x7f\\x19\\x00\\x01(\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-06T19:00:00", "lines": 296, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBA03 - PROGRAM TO MATCH-MERGE LISTS OF VOLUMES CREATED BY    *\n*             THE TMLIBA01 AND TMLIBA02 PROGRAMS TO PRODUCE THREE   *\n*             OUTPUTS, REFLECTING VOLUMES IN ONE LIST, BUT NOT      *\n*             THE OTHER, AND VOLUMES THAT ARE IN BOTH LISTS.        *\n*                                                                   *\n*             BOTH INPUT LISTS ARE EXPECTED TO BE SORTED ASCENDING  *\n*             ON THE VOLUME IN COLS 1-6.                            *\n*                                                                   *\n*                                                                   *\n*   AUTHOR:   SAM GOLOB            DATE:  05/31/01                  *\n*                                                                   *\n*   INPUTS:   TVLIN    -  VOLUME LIST CREATED FROM THE TMC          *\n*             VVLIN    -  VOLUME LIST CREATED FROM THE TCDB         *\n*                                                                   *\n*   OUTPUTS:  TNOV     -  OUTPUT FB-80, VOLUMES IN TMC & NOT TCDB   *\n*             VNOT     -  OUTPUT FB-80, VOLUMES IN TCDB & NOT TMC   *\n*             BOTH     -  OUTPUT FB-80, VOLUMES IN BOTH PLACES      *\n*             SYSPRINT -  PRINTS RUN STATISTICS                     *\n*                                                                   *\n*                                                                   *\n*   CHANGE LOG:                                                     *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMLIBA03 CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBA03 - MERGE TMC VOLLIST WITH VOLCAT VOLLIST - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 001 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMLIBA03,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADER+95(23),HEADDATE\n***********************************************************************\nPROCESS  DS    0H                        BEGIN MATCH-MERGE\n*                                        OPEN INPUTS AND PRINT\n         OPEN  (TVLIN,(INPUT))\n         OPEN  (VVLIN,(INPUT))\n         OPEN  (SYSPRINT,OUTPUT)\n         OPEN  (TNOV,OUTPUT)\n         OPEN  (VNOT,OUTPUT)\n         OPEN  (BOTH,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1         PRINT A HEADER LINE SO YOU\n         MVC   OUTLINE(133),HEADER       DON'T FEEL THE PROGRAM\n         PUT   SYSPRINT,OUTLINE          ISN'T DOING ANYTHING.\n*\n*                                        ZERO THE COUNTERS\n         ZAP   INTMCC,=P'0'\n         ZAP   INLIBC,=P'0'\n         ZAP   OUTTNV,=P'0'\n         ZAP   OUTVNT,=P'0'\n         ZAP   OUTBOTH,=P'0'\n         MVI   FLAG,X'00'                AND THE FLAG\n         MVC   TMCLVOL,BLANKS            AND THE 'LAST VOLUME READ'\n         MVC   LIBLVOL,BLANKS             STORAGE AREAS\n         MVC   AREAIN,AREAIN-1           AND BLANK THE\n         MVC   AREAJN,AREAJN-1            INPUT AREAS\n*\nINITREAD DS    0H                        INITIALIZATION OF FILES\n         GET   TVLIN,AREAIN\n*                                        IF EOF IT'LL GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         GET   VVLIN,AREAJN\n*                                        IF EOF IT'LL GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE VOLSER NAMES --\n         MVC   LIBLVOL,AREAJVOL           - BLANK IF NO INPUT\n*\nMATMERGE DS    0H                        MATCH MERGE PROCESS\n         TM    FLAG,X'30'                EOF ON BOTH FILES?\n         BO    EOFS                      YES. FINISH UP.\n         TM    FLAG,X'10'                EOF ON TMC VOL FILE?\n         BO    LOWLIB                    YES. JUST READ FROM VOL FILE\n         TM    FLAG,X'20'                EOF ON LIB VOL FILE?\n         BO    LOWTMC                    YES. JUST READ FROM TMC FILE\n         CLC   TMCLVOL,LIBLVOL           COMPARE WHICH VOL IS LOWER\n         BH    LOWLIB                    PROCESS LIBRARY VOL LOWER\n         BL    LOWTMC                    PROCESS TMC VOL LOWER\n         B     INEQUAL                   PROCESS EQUAL\n*\n*------------------------------------------------------------------*\nINEQUAL  DS    0H                        BOTH ARE EQUAL - ONE OUTPUT\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(VBOTHDL),VBOTHD     INDICATOR IN OUTPUT\n         PUT   BOTH,AREAOUT                   WRITE ONE OUTPUT RECORD\n         AP    OUTBOTH,=P'1'              INCREMENT COUNTER\n         NI    FLAG,X'FF'-X'03'          TURN OF \"LAST INPUT\" FLAGS\n* - - - - -        IF RECORDS EQUAL GET TWO NEW RECORDS      - - - *\n         GET   TVLIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n* - - - - -\n         GET   VVLIN,AREAJN\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\n*\nLOWTMC   DS    0H\n         NI    FLAG,X'FF'-X'02'          TURN OFF LIB RECD AS LAST IN\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(TNOTVDL),TNOTVD     INDICATOR IN OUTPUT\n         PUT   TNOV,AREAOUT\n         AP    OUTTNV,=P'1'               INCREMENT COUNTER\n         NI    FLAG,X'FF'-X'01'          TURN OF \"LAST INPUT\" FLAG\n* - - - - -        GET ANOTHER TMC VOLUME RECORD             - - - *\n         GET   TVLIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\nLOWLIB   DS    0H\n         NI    FLAG,X'FF'-X'01'          TURN OFF TMC RECD AS LAST IN\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(VNOTTDL),VNOTTD    INDICATOR IN OUTPUT\n         PUT   VNOT,AREAOUT\n         AP    OUTVNT,=P'1'               INCREMENT COUNTER\n         NI    FLAG,X'FF'-X'02'          TURN OF \"LAST INPUT\" FLAG\n* - - - - -        GET ANOTHER LIB VOLUME RECORD\n         GET   VVLIN,AREAJN\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\nFTN      DS    0H\n         OI    FLAG,X'10'                 INDICATE EOF ON TMC VOL LIST\n         MVC   TMCLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\nFVN      DS    0H\n         OI    FLAG,X'20'                 INDICATE EOF ON LIB VOL LIST\n         MVC   LIBLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\n*------------------------------------------------------------------*\nEOFS     DS    0H\n         CLOSE TVLIN\n         CLOSE VVLIN\n         CLOSE TNOV\n         CLOSE VNOT\n         CLOSE BOTH\nOUTPRT   DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIT\n         MVC   OUTLINE+34(12),EDPAT\n         ED    OUTLINE+34(12),INTMCC+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIV\n         MVC   OUTLINE+34(12),EDPAT\n         ED    OUTLINE+34(12),INLIBC+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGOTNV\n         MVC   OUTLINE+34(12),EDPAT\n         ED    OUTLINE+34(12),OUTTNV+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGOVNT\n         MVC   OUTLINE+34(12),EDPAT\n         ED    OUTLINE+34(12),OUTVNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGBOTH\n         MVC   OUTLINE+34(12),EDPAT\n         ED    OUTLINE+34(12),OUTBOTH+2\n         PUT   SYSPRINT,OUTLINE\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nFLAG     DC    X'00'\n*              X'01'        INPUT IS FROM TMC VOLUME LIST\n*              X'02'        INPUT IS FROM LIB VOLUME LIST\n*              X'10'        END OF INPUT ON TMC LIST\n*              X'20'        END OF INPUT ON LIB LIST\nTMCLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM TMC LIST\nLIBLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM VOL LIST\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBA03 - TMC AND LIB VOLUME LIST MERGE'\n         DC    CL133' '\nMSGIT    DC    CL133'-        TMC VOLUME RECORDS  IN ='\n         DC    CL133' '\nMSGIV    DC    CL133'         LIB VOLUME RECORDS  IN ='\n         DC    CL133' '\nMSGOTNV  DC    CL133'     TMC VOLUMES NOT IN LIBRARY ='\n         DC    CL133' '\nMSGOVNT  DC    CL133'     LIBRARY VOLUMES NOT IN TMC ='\n         DC    CL133' '\nMSGBOTH  DC    CL133'    VOLUMES IN BOTH TMC AND LIB ='\n         DC    CL133' '\nTNOTVD   DC    C'IN TMC AND NOT IN LIBRARY'\nTNOTVDL  EQU   *-TNOTVD\nVNOTTD   DC    C'IN LIBRARY AND NOT IN TMC'\nVNOTTDL  EQU   *-VNOTTD\nVBOTHD   DC    C'BOTH IN LIBRARY AND IN TMC'\nVBOTHDL  EQU   *-VBOTHD\nINTMCC   DC    PL7'0'\nINLIBC   DC    PL7'0'\nOUTTNV   DC    PL7'0'\nOUTVNT   DC    PL7'0'\nOUTBOTH  DC    PL7'0'\n         LTORG\nTVLIN    DCB   DDNAME=TVLIN,MACRF=GM,EODAD=FTN,DSORG=PS,LRECL=80\nVVLIN    DCB   DDNAME=VVLIN,MACRF=GM,EODAD=FVN,DSORG=PS,LRECL=80\nTNOV     DCB   DDNAME=TNOV,MACRF=PM,DSORG=PS,LRECL=80\nVNOT     DCB   DDNAME=VNOT,MACRF=PM,DSORG=PS,LRECL=80\nBOTH     DCB   DDNAME=BOTH,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL80             FIRST INPUT AREA\nAREAIVOL DS    CL6\nAREAIRST DS    CL74\n         DC    CL8' '\nAREAJN   DS    0CL80             SECOND INPUT AREA\nAREAJVOL DS    CL6\nAREAJRST DS    CL74\n         DC    CL8' '\nAREAOUT  DS    0CL80             OUTPUT AREA\nAREAOVOL DS    CL6\n         DC    CL74' '\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\n         END   TMLIBA03\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TMLIBA04": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x8f\\x15T\\x01W\\x01\\xc1\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-07T15:54:00", "lines": 343, "newlines": 449, "modlines": 0, "user": "WSBG"}, "text": "TMLIBA04  START 0\n         SPACE 2\n**** START OF SPECIFICATIONS ******************************************\n*                                                                     *\n*    MODULE NAME:       TMLIBA04                                      *\n*                                                                     *\n*    PURPOSE:  TO QUERY THE VTS ON A VOLUME-BY-VOLUME BASIS, AND      *\n*              RETURN THE RESULTS IN THE FORM OF A SPECIAL FORMAT     *\n*              FILE, RECFM=FB,LRECL=385.  THIS FILE IS USED TO INPUT  *\n*              THE VTS LIBRARY DATA INTO THE TMLIBAUD PROGRAM.        *\n*                                                                     *\n*                                                                     *\n*    AUTHOR:   SAM GOLOB            DATE:  05/31/01                   *\n*                                                                     *\n*    INPUTS:   INDD     -  VOLUME LIST CREATED FROM THE TMLIBA03      *\n*                          PROGRAM WHICH PRODUCES THE BOTH AND        *\n*                          VNOT FILES.  THESE VOLUME NAMES WERE       *\n*                          ORIGINALLY GENERATED FROM THE VOLCAT       *\n*                          LISTING BY THE TMLIBA02 PROGRAM.           *\n*                                                                     *\n*    OUTPUTS:  OUTDD    -  OUTPUT FB-385 FILE SHOWING VOLUME DATA     *\n*                          FROM BOTH THE TCDB AND THE LIBRARY.  THIS  *\n*                          FILE IS IN A SPECIAL FORMAT THAT WE HAVE   *\n*                          DEFINED.  USED FOR THE TMLIBAUD PROGRAM.   *\n*                                                                     *\n*              SYSPRINT -  PRINTS RUN STATISTICS                      *\n*                                                                     *\n*                                                                     *\n*     CHANGE LOG:                                                     *\n*                                                                     *\n*     LEVEL 002                                                       *\n*     06/07/01 - SYSPRINT ADDED WITH DATE AND TIME, INPUT AND         *\n*                OUTPUT COUNTS.                                       *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n**** END OF SPECIFICATIONS ********************************************\n         TITLE 'STANDARD REGISTER DEFINITIONS'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        STANDARD REGISTER DEFINITIONS                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nR0       EQU   0                    GENERAL REGISTER 0\nR1       EQU   1                    GENERAL REGISTER 1\nR2       EQU   2                    GENERAL REGISTER 2\nR3       EQU   3                    GENERAL REGISTER 3\nR4       EQU   4                    GENERAL REGISTER 4\nR5       EQU   5                    GENERAL REGISTER 5\nR6       EQU   6                    GENERAL REGISTER 6\nR7       EQU   7                    GENERAL REGISTER 7\nR8       EQU   8                    GENERAL REGISTER 8\nR9       EQU   9                    GENERAL REGISTER 9\nR10      EQU   10                   GENERAL REGISTER 10\nR11      EQU   11                   GENERAL REGISTER 11\nR12      EQU   12                   GENERAL REGISTER 12\nR13      EQU   13                   GENERAL REGISTER 13\nR14      EQU   14                   GENERAL REGISTER 14\nR15      EQU   15                   GENERAL REGISTER 15\n         TITLE 'CBRLCSPL - LCS EXTERNAL SERVICES PARAMETER LIST'\n         CBRLCSPL  ,                LCS EXTERNAL SERVICES PARM LIST\n         TITLE 'TMLIBA04 - CREATE VTS VOLUME DATA FILE'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        TMLIBA04 ENTRY POINT                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\nTMLIBA04  CSECT ,                   SAMPLE INSTALLATION MGMT PACKAGE\nTMLIBA04  AMODE 24\nTMLIBA04  RMODE 24\n         SAVE  (14,12),,            SAVE CALLER'S REGISTERS AND        +\n               'TMLIBA04 &SYSDATE &SYSTIME - LEVEL 002'\n         USING TMLIBA04,R12,R11     TMLIBA04 BASE REGISTER\n         LR    R12,R15              COPY ENTRY POINT ADDRESS\n         LR    R11,R12              SET UP SECOND BASE\n         LA    R11,4095(,R12)       FOR BREATHING ROOM\n         LA    R11,1(,R11)\n         ST    R13,SAVE+4           BACKWARD CHAIN SAVE AREAS\n         LA    R0,SAVE              TMLIBA04 SAVE AREA ADDRESS\n         ST    R0,8(,R13)           FORWARD CHAIN SAVE AREAS\n         LR    R13,R0               SET TMLIBA04 SAVE AREA ADDRESS\n         SPACE 2\n***********************************************************************\n         BAL   R9,TIMEDATE              GET START DATE AND TIME\n         MVC   HEADER+95(23),HEADDATE   AND MOVE TO THE HEADER\n         MVC   STMSG+12(23),HEADDATE    AND MOVE TO START TIME MSG\n***********************************************************************\n         OPEN  (SYSPRINT,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1         PRINT A HEADER LINE SO YOU\n         MVC   OUTLINE(133),HEADER       DON'T FEEL THE PROGRAM\n         PUT   SYSPRINT,OUTLINE          ISN'T DOING ANYTHING.\n*\n*                                        ZERO THE COUNTERS\n         ZAP   INVOLC,=P'0'\n         ZAP   OUTFILC,=P'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        OPEN BOTH DATA CONTROL BLOCKS                                *\n*                                                                     *\n*---------------------------------------------------------------------*\n         OPEN  (INDCB,(INPUT),OUTDCB,(OUTPUT))  OPEN BOTH DCBS\n         SPACE 2\n*---------------------------------------------------------------------*\n*                                                                     *\n*        READ AND PROCESS THE INPUT TRANSACTION REQUEST DATASET       *\n*                                                                     *\n*---------------------------------------------------------------------*\nCUA1000  DS    0H\n         GET   INDCB,TRANSACT       READ FIRST/NEXT TRANSACTION\n         AP    INVOLC,=P'1'         COUNT RECORD READ IN\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        VERIFY THAT THE VOLUME RESIDES IN A LIBRARY, IF REQUESTED    *\n*                                                                     *\n*---------------------------------------------------------------------*\n         BAL   R9,CUACOPY           COPY MODEL TO LCS PARAMETER LIST\n         LA    R3,LCSLIST\n         USING LCSPL,R3\n         CBRXLCS  TYPE=TAPE,        QUERY VOLUME RESIDENCE CALL        +\n               FUNC=QVR,                                               +\n               VOLUME=TRANVOL,                                         +\n               VOLINFO=YES,                                            +\n               MF=(E,LCSLIST),                                         +\n               SUBPOOL=0\n         LTR   R15,R15              VOLUME IN LIBRARY?\n*        BNE   CUA1000A\n         BAL   R9,CUACODES          FORMAT RETURN AND REASON CODES\n         BAL   R9,CUAOUTIT\nCUA1000A DS    0H\n         C     R15,=A(LCSWARN)      WARNING RETURN CODE?\n         BNE   CUA1100              NO. FORMAT ERROR MESSAGE\n         C     R0,=A(LCSFNLRS)      VOLUME NOT LIBRARY RESIDENT?\n         BNE   CUA1100              NO. FORMAT ERROR MESSAGE\n         BAL   R9,CUAFREE           WRITE TRANSACTION RESPONSE\n         B     CUA1000              GET NEXT TRANSACTION\nCUA1100  DS    0H\n         BAL   R9,CUAFREE           WRITE TRANSACTION RESPONSE\n         B     CUA1000              GET NEXT TRANSACTION\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CLEAN UP AND RETURN TO THE CALLER                            *\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT     DS    0H\n         BAL   R9,TIMEDATE              GET ENDING DATE AND TIME\n         MVC   ENDMSG+12(23),HEADDATE    AND MOVE TO START TIME MSG\n*                                 PRINT SUMMARY STATS BEFORE CLOSING\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGINV\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),INVOLC+2\n         MVC   OUTLINE+59(36),STMSG      ADD START TIME MESSAGE\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGOUTF\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),OUTFILC+2\n         MVC   OUTLINE+59(36),ENDMSG     ADD ENDING TIME MESSAGE\n         PUT   SYSPRINT,OUTLINE\n         CLOSE (INDCB,,OUTDCB)      CLOSE BOTH DATA CONTROL BLOCKS\n         L     R13,SAVE+4           RESTORE CALLER'S SAVE AREA ADDRESS\n         RETURN  (14,12),           RESTORE CALLER'S REGISTERS, THEN   +\n               RC=0                   RETURN TO CALLER\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        COPY THE MODEL LCS PARAMETER LIST TO THE ACTUAL LIST         *\n*                                                                     *\n*---------------------------------------------------------------------*\nCUACOPY  DS    0H\n         LA    R0,LCSMODEL          ADDRESS OF SOURCE\n         LA    R1,LCSPLENG          LENGTH OF SOURCE\n         LA    R14,LCSLIST          ADDRESS OF TARGET\n         LR    R15,R1               LENGTH OF TARGET\n         MVCL  R14,R0               COPY MODEL TO LCS PARAMETER LIST\n         BR    R9                   RETURN TO CALLER\n         EJECT ,\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\nTIMEDATE DS    0H\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         BR    R9\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        FORMAT THE RETURN AND REASON CODES FOR PRINTING              *\n*                                                                     *\n*---------------------------------------------------------------------*\nCUACODES DS    0H\n         CVD   R15,PRETCODE         CONVERT TO PACKED DECIMAL\n         UNPK  ZRETCODE,PRETCODE    CONVERT TO ZONED DECIMAL\n         OI    ZRETCODE+3,X'F0'     CORRECT FINAL ZONE\n         CVD   R0,PRSNCODE          CONVERT TO PACKED DECIMAL\n         UNPK  ZRSNCODE,PRSNCODE    CONVERT TO ZONED DECIMAL\n         OI    ZRSNCODE+3,X'F0'     CORRECT FINAL ZONE\n*        MVC   TRANMSG,RETREAS      MOVE TEXT TO RESPONSE AREA\n         BR    R9                   RETURN TO CALLER\n         EJECT ,\n*\nCUAOUTIT DS    0H                   CREATE OUTPUT FILE RECORDS\n*                                   FROM ALL AVAILABLE DATA\n*\n         MVC   TVIOVOL(6),TRANVOL   FIRST GET STUFF YOU KNOW...\n         MVC   TVIOLIB(8),LCSLIBNM\n         MVC   TVIOCONS(8),LCSCONSN\n         MVC   ERRFUNC(3),=C'QVR'   INDICATE QVR REQUEST\n         L     R7,LCSTVI@           THEN GET STUFF FROM THE INQUIRY\n         MVC   TVIOAREA(256),0(R7)\n         MVC   TVIOAREA+256(TVILNGTH-256),256(R7)\n         PUT   OUTDCB,TVIOUT\n         AP    OUTFILC,=P'1'        COUNT FILE RECORDS PUT OUT\n         BR    R9                   RETURN TO CALLER\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        FREE THE STORAGE OBTAINED BY THE CBRXLCS CALL                *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                             WATCHING THIS JOB WITH A MONITOR,\n*                             SHOWED THAT THE CBRXLCS CALL OBTAINED\n*                             STORAGE IN SUBPOOL 4, AND DIDN'T\n*                             FREE IT.\nCUAFREE  DS    0H\n         FREEMAIN RC,SP=4\n         BR    R9                   RETURN TO CALLER\n         TITLE 'CONSTANTS AND WORK AREAS'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CONSTANTS AND WORK AREAS                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         LTORG ,                    LITERAL CONSTANTS\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        DATA CONTROL BLOCKS                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nINDCB    DCB   DDNAME=INDD,         INPUT:  TRANSACTION REQUESTS       +\n               DSORG=PS,                                               +\n               MACRF=GM,                                               +\n               EODAD=EXIT\n         EJECT ,\nOUTDCB   DCB   DDNAME=OUTDD,        OUTPUT:  RESULT NOTIFICATION       +\n               MACRF=PM,                                               +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=385\n         EJECT ,\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        TMLIBA04 TRANSACTION RECORD AND RESPONSE AREA                *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRANLEN  DC    AL2(L'TRANSACT)      LENGTH FOR WTO TEXT\nTRANSACT DS    0CL80                TRANSACTION RECORD\nTRANVOL  DS    CL6                  VOLUME SERIAL NUMBER\n         DS    CL74                 SEPARATOR\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CBRXLCS PARAMETER LISTS                                      *\n*                                                                     *\n*---------------------------------------------------------------------*\n         CBRXLCS  MF=(L,LCSLIST)    LCS EXTERNAL SERVICES PARM LIST\n         SPACE 2\n         CBRXLCS  MF=(L,LCSMODEL)   LCS EXTERNAL SERVICES MODEL LIST\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MISCELLANEOUS WORK AREAS                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nSAVE     DC    18F'0'               STANDARD SAVE AREA\n         SPACE 2\n*---------------------------------------------------------------------*\nTVIOUT   DS    0CL385\nPRETCODE DC    D'0'                 CBRXLCS RETURN CODE - PACKED DEC\nPRSNCODE DC    D'0'                 CBRXLCS REASON CODE - PACKED DEC\nTVIOVOL  DC    CL6' '\nTVIOLIB  DC    CL8' '\nTVIOCONS DC    CL8' '\nTVIOAREA DC    (TVILNGTH)X'00'      SHOULD BE 288 CHARACTERS\n         SPACE 2\nRETREAS  DS    0CL45\nERRFUNC  DC    CL5' '               'QVR', 'CUA', OR 'EJECT'\n         DC    CL15' RETURN CODE = '\nZRETCODE DC    CL4' '               CBRXLCS RETURN CODE - ZONED DEC\n         DC    CL16', REASON CODE = '\nZRSNCODE DC    CL4' '               CBRXLCS REASON CODE - ZONED DEC\n         DC    CL1'.'\n         DC    CL14' '            FILL OUT 385 CHARACTER OUTPUT\n*---------------------------------------------------------------------*\n         DC    CL20' '      SPACER\nLIBLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM VOL LIST\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBA04 - GET LIBRARY MANAGER AND VOLCAT DATA -\n               FOR TAPE VOLUMES'\nMSGINV   DC    CL133'-            VOLUME RECORDS  IN ='\n         DC    CL133' '\nMSGOUTF  DC    CL133'        OUTPUT FILE RECORDS OUT ='\n         DC    CL133' '\nINVOLC   DC    PL7'0'\nOUTFILC  DC    PL7'0'\n         SPACE 2\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\nSTMSG    DC    CL36'START TIME:                       '\nENDMSG   DC    CL36'  END TIME:                       '\nENDDATA  EQU   *\n         SPACE 2\n         CBRTVI\n         END   TMLIBA04\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBA05": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x8f\\x18(\\x00\\xe1\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-07T18:28:00", "lines": 225, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBA05 - PROGRAM TO CREATE COMPATIBLE OUTPUT TO TMLIBA04,      *\n*             WITHOUT HAVING TO QUERY THE LIBRARY MANAGER.  THIS    *\n*             PROGRAM ONLY TAKES INPUT FROM THE VOLCAT.  INPUT IS   *\n*             LISTCAT COMMAND AGAINST THE SYSCAT.VOLCAT.VGENERAL    *\n*             DATASET.  THIS IS THE TCDB DATASET, AND IT IS MUCH    *\n*             LIKE A CATALOG.                                       *\n*                                                                   *\n*        LISTC ENT('SYSCAT.VOLCAT.VGENERAL') VOLENTRIES(*) ALL      *\n*                                                                   *\n*     AUTHOR:   SAM GOLOB            DATE:  06/07/01                *\n*                                                                   *\n*     INPUTS:   VOLCIN   -  THE SYSTSPRT OUTPUT OF THE LISTCAT      *\n*                           COMMAND - EXPECTED TO BE FB-133         *\n*                                                                   *\n*     OUTPUTS:  VOLLIST  -  OUTPUT FB-385 FILE, SOMEWHAT COMPATIBLE *\n*                           WITH THE OUTPUT OF TMLIBA04.            *\n*                                                                   *\n*               SYSPRINT -  PRINTS RUN STATISTICS                   *\n*                                                                   *\n*     CHANGE LOG:                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMLIBA05 CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBA05 - CREATE VOL LIST FROM LISTC OF VOLCAT '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 002 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMLIBA05,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADER+95(23),HEADDATE\n***********************************************************************\n         OPEN  (VOLCIN,(INPUT))\n         OPEN  (VOLLIST,(OUTPUT))\n         ZAP   INRCDS,=P'0'\n         ZAP   OUTRCDS,=P'0'\nGETINP   DS    0H\n         MVI   VFLAG,X'00'                   CLEAR FLAGS\n*                                        CLEAR OUTPUT AREA\n         MVC   AREAOUT(256),AREAOUT-1\n         MVC   AREAOUT+256(AREAOUTL-256),AREAOUT+255\n*\n         BAL   R9,TESTVOL                GET LISTCAT INFO FOR VOLUME\n*        MVC   AREAOUT+15(VOLCINDL),VOLCIND  INDICATE VOL FROM VOLCAT\n         MVC   ERRFUNC+(5),=C'VCT  '\n         MVC   AREAOUT+42(5),=C'VCT  '\n         PUT   VOLLIST,AREAOUT\n         AP    OUTRCDS,=P'1'\n         B     GETINP\nFIN      DS    0H\n         OPEN  (SYSPRINT,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),INRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG02\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),OUTRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         CLOSE VOLCIN\n         CLOSE VOLLIST\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* -------------------------- SUBROUTINES --------------------------- *\nTESTVOL  DS    0H\n         GET   VOLCIN,AREAIN\n         AP    INRCDS,=P'1'\n         TM    VFLAG,X'01'               ONLY ONCE\n         BO    TESTLIB                     PER VOLSER\n         CLC   AREAIN(17),=C'VOLUME-ENTRY----V'   VOLSER?\n         BNE   TESTVOL\n         OI    VFLAG,X'01'               INDICATE VOLUME GOTTEN\n         MVC   AREAOUT+20(6),AREAIN+17      MOVE VOLUME SERIAL\n         MVC   AREAOUT+58(6),AREAIN+17      MOVE VOLUME SERIAL\n         B     TESTVOL                   GET ANOTHER RECORD LINE\nTESTLIB  DS    0H\n         TM    VFLAG,X'02'               ONLY ONCE\n         BO    TESTUSE                     PER VOLSER\n         CLC   AREAIN+7(16),=C'LIBRARY---------'\n         BNE   TESTVOL\n         OI    VFLAG,X'02'               INDICATE LIBRARY GOTTEN\n         MVC   AREAOUT+26(8),BLANKS      BLANK TARGET AREA\n         LA    R6,AREAIN+23              PREPARE VARIABLE MOVE\n         LA    R7,8                      8 CHARS MAX\nTESTSTRT DS    0H\n         CLI   0(R6),C'-'\n         BNE   TESTMOVE\n         LA    R6,1(,R6)                 START ONE CHAR LATER\n         BCTR  R7,0                      MOVE ONE CHAR LESS\n         B     TESTSTRT\nTESTMOVE DS    0H\n         BCTR  R7,0                      ONE LESS FOR EXECUTE\n         EX    R7,TESTML\n         B     TESTVOL                   GET ANOTHER RECORD LINE\nTESTML   MVC   AREAOUT+26(*-*),0(R6)           EXECUTED\nTESTUSE  DS    0H\n         TM    VFLAG,X'04'               ONLY ONCE\n         BO    TESTOWNR\n         CLC   AREAIN+65(17),=C'USE-ATTRIBUTE----'\n         BNE   TESTVOL\n         OI    VFLAG,X'04'               INDICATE USAGE GOTTEN\n         CLC   AREAIN+82(7),=C'PRIVATE'\n         BNE   TESTSCR\n         MVI   AREAOUT+64,C'P'           INDICATE PRIVATE VOLUME\n         B     TESTVOL\nTESTSCR  DS    0H\n         CLC   AREAIN+82(7),=C'SCRATCH'\n         BNE   TESTERR\n         MVI   AREAOUT+64,C'S'           INDICATE SCRATCH VOLUME\n         B     TESTVOL\nTESTERR  DS    0H\n         MVI   AREAOUT+64,C'E'           INDICATE ERROR\n         B     TESTVOL\nTESTOWNR DS    0H\n         TM    VFLAG,X'08'               ONLY ONCE\n         BO    TESTVOLE\n         CLC   AREAIN+7(16),=C'OWNER-----------'\n         BNE   TESTVOL\n         OI    VFLAG,X'08'\nTESTVOLE BR    R9\n* ------------------------------------------------------------------ *\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nVFLAG    DC    X'00'\n         DC    CL1' '\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBA05 - VOLCAT VOLUME NAME EXTRACT PROGRAM'\n         DC    CL133' '\nMSG01    DC    CL133'-    RECORDS  IN ='\n         DC    CL133' '\nMSG02    DC    CL133'     RECORDS OUT ='\n         DC    CL133' '\nVOLCIND  DC    C'FROM THE VOLCAT'\nVOLCINDL EQU   *-VOLCIND\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nVOLCIN   DCB   DDNAME=VOLCIN,MACRF=GM,EODAD=FIN,DSORG=PS,LRECL=133\nVOLLIST  DCB   DDNAME=VOLLIST,MACRF=PM,DSORG=PS,LRECL=385\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL133\nAREAIVOL DS    CL6\nAREAIRST DS    CL127\n*\n         DC    CL8' '\nAREAOUT  DS    0CL385\nPRETCODE DC    D'0'                 CBRXLCS RETURN CODE - PACKED DEC\nPRSNCODE DC    D'0'                 CBRXLCS REASON CODE - PACKED DEC\nAREAOVOL DC    CL6' '\nTVIOLIB  DC    CL8' '\nTVIOCONS DC    CL8' '\nTVIOAREA DC    288X'00'                288 CHARACTERS\n         SPACE 2\nRETREAS  DS    0CL45\nERRFUNC  DC    CL5' '               'QVR', 'CUA', OR 'EJECT'\n         DC    CL15' RETURN CODE = '\nZRETCODE DC    CL4' '               CBRXLCS RETURN CODE - ZONED DEC\n         DC    CL16', REASON CODE = '\nZRSNCODE DC    CL4' '               CBRXLCS REASON CODE - ZONED DEC\n         DC    CL1'.'\n         DC    CL14' '            FILL OUT 385 CHARACTER OUTPUT\nAREAOUTL EQU   *-AREAOUT\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\n         END   TMLIBA05\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBRUA": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x01\\x01\\x15\\x1f\\x01\\x01\\x16?\\x16C\\x00\\x89\\x00G\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2001-05-31T00:00:00", "modifydate": "2001-06-12T16:43:00", "lines": 137, "newlines": 71, "modlines": 0, "user": "WSBG"}, "text": "//WSBGVTST JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//****************************************************************//\n//*                                                              *//\n//* JOBSTREAM TO RUN TMC AGAINST VOLCAT VOLUMES TO PRODUCE 4     *//\n//*  EXCEPTION REPORTS AND A TOTAL EXCEPTION REPORT, WHICH IS    *//\n//*  A SUM OF THE FOUR SEPARATE REPORTS:                         *//\n//*                                                              *//\n//* THIS VERSION USES TMLIBA05, AND NOT TMLIBA04.  MUCH FASTER.  *//\n//*                                                              *//\n//****************************************************************//\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  DEL 'W$$.TMC.VOLLIST'\n  DEL 'W$$.TMC.VOLLIST.SORTED'\n  DEL 'W$$.VOLCAT.LIST'\n  DEL 'W$$.VOLCAT.VOLLIST'\n  DEL 'W$$.VOLCAT.VOLLIST.SORTED'\n  DEL 'W$$.VOLCAT.LONG.LIST'\n  DEL 'W$$.TESTOUT.TMLIBA05'\n  DEL 'W$$.TNOV.VOLLIST'\n  DEL 'W$$.VNOT.VOLLIST'\n  DEL 'W$$.BOTH.VOLLIST'\n  DEL 'W$$.EARL.TMS.VOLMAST'\n//*\n//TMCEXVOL EXEC PGM=TMLIBA01\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//TMCIN     DD  DISP=SHR,DSN=P$.MON$.TMS.TMC\n//VOLLIST   DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TMC.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//SORTTLST EXEC PGM=SYNCSORT\n//SORTIN   DD DISP=SHR,DSN=W$$.TMC.VOLLIST\n//SORTOUT  DD DISP=(NEW,CATLG,DELETE),DSN=W$$.TMC.VOLLIST.SORTED,\n//            UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//SYSIN    DD *\n SORT FIELDS=(1,6,CH,A)\n//SYSOUT   DD SYSOUT=*\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.LIST,\n//    DCB=(DSORG=PS,LRECL=133,BLKSIZE=27930,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//SYSTSIN DD *\n LISTC ENT('SYSCAT.VOLCAT.VGENERAL') VOLENTRIES(*)\n/*\n//*\n//VLCEXVOL EXEC PGM=TMLIBA02\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//VOLCIN    DD  DISP=SHR,DSN=W$$.VOLCAT.LIST\n//VOLLIST   DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//SORTVLST EXEC PGM=SYNCSORT\n//SORTIN   DD DISP=SHR,DSN=W$$.VOLCAT.VOLLIST\n//SORTOUT  DD DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.VOLLIST.SORTED,\n//            UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//SYSIN    DD *\n SORT FIELDS=(1,6,CH,A)\n//SYSOUT   DD SYSOUT=*\n//*\n//VLCEXVOL EXEC PGM=TMLIBA03\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//TVLIN     DD  DISP=SHR,DSN=W$$.TMC.VOLLIST.SORTED\n//VVLIN     DD  DISP=SHR,DSN=W$$.VOLCAT.VOLLIST.SORTED\n//TNOV      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TNOV.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//VNOT      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.VNOT.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//BOTH      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.BOTH.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.LONG.LIST,\n//    DCB=(DSORG=PS,LRECL=133,BLKSIZE=27930,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,25),RLSE),UNIT=SYSDA\n//SYSTSIN DD *\n LISTC ENT('SYSCAT.VOLCAT.VGENERAL') VOLENTRIES(*) ALL\n/*\n//*\n//VTST    EXEC PGM=TMLIBA05\n//STEPLIB  DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//VOLCIN   DD  DISP=SHR,DSN=W$$.VOLCAT.LONG.LIST\n//VOLLIST  DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TESTOUT.TMLIBA05,\n//    UNIT=SYSDA,VOL=SER=WORKB1,DCB=(RECFM=FB,LRECL=385,BLKSIZE=27720),\n//    SPACE=(TRK,(5,50),RLSE)\n//*\n//VOLSER10 EXEC PGM=EARL\n//EARLLIB  DD  DISP=SHR,DSN=S$$.CNTLLIB\n//TAPEDB   DD  DISP=SHR,DSN=P$.MON$.TMS.TMC\n//*SYSEARL DD  SYSOUT=*\n//SYSEARL  DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.EARL.TMS.VOLMAST,\n//         UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,15),RLSE),\n//         DCB=(RECFM=FB,DSORG=PS,LRECL=133,BLKSIZE=27930)\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//TMSRPT   DD  SYSOUT=*\n//EARLOBJ  DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SORTIN   DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTOUT  DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//WORK1    DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK01 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK02 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK03 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SYSIN    DD  DISP=SHR,DSN=W$$.CNTLLIB(TMLIBTM)\n//*\n//TMLIBAUD EXEC PGM=TMLIBAUD\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT1  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT2  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT3  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT4  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT5  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT6  DD  SYSOUT=*,DCB=RECFM=FBA\n//TMSIN     DD  DISP=SHR,DSN=W$$.EARL.TMS.VOLMAST\n//LIBIN     DD  DISP=SHR,DSN=W$$.TESTOUT.TMLIBA05\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBRUN": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x01\\x01\\x15\\x1f\\x01\\x01\\x16?\\x16C\\x00\\x97\\x00G\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2001-05-31T00:00:00", "modifydate": "2001-06-12T16:43:00", "lines": 151, "newlines": 71, "modlines": 0, "user": "WSBG"}, "text": "//WSBGVTST JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//****************************************************************//\n//*                                                              *//\n//* COMPLETE JOBSTREAM TO RUN TMLIBAUD PROCESSING.               *//\n//*  FINAL OUTPUT IS 5 SYSPRINTS.                                *//\n//*                                                              *//\n//****************************************************************//\n//*                                                              *//\n//* JOBSTREAM TO RUN TMC AGAINST VOLCAT VOLUME LISTS, TO         *//\n//*  PRODUCE 4 EXCEPTION REPORTS, AND A TOTAL EXCEPTION REPORT,  *//\n//*  WHICH CONTAINS A SUM OF THE FOUR OTHER REPORTS (SO YOU CAN  *//\n//*  SEE ALL THE INFORMATION IN ONE PLACE, TOO.)                 *//\n//*                                                              *//\n//*  SYSPRINT - TOTALS AND SUM REPORT INCLUDING ALL EXCEPTIONS   *//\n//*  SYSPRNT1 - VOLUMES THAT ARE PRIVATE IN TMS, SCRATCH IN LIB  *//\n//*  SYSPRNT2 - VOLUMES THAT ARE SCRATCH IN TMS, PRIVATE IN LIB  *//\n//*>>SYSPRNT3 - DEVELOPMENT TAPES THAT ARE NOT PRIVATE IN LIB    *//\n//*  SYSPRNT4 - VTS TAPES THAT ARE NOT IN TMS                    *//\n//*                                                              *//\n//*    >> INSTALLATION-DEPENDENT CODE                            *//\n//*                                                              *//\n//****************************************************************//\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  DEL 'W$$.TMC.VOLLIST'\n  DEL 'W$$.TMC.VOLLIST.SORTED'\n  DEL 'W$$.VOLCAT.LIST'\n  DEL 'W$$.VOLCAT.VOLLIST'\n  DEL 'W$$.VOLCAT.VOLLIST.SORTED'\n  DEL 'W$$.TNOV.VOLLIST'\n  DEL 'W$$.VNOT.VOLLIST'\n  DEL 'W$$.BOTH.VOLLIST'\n  DEL 'W$$.SORTED.TMLIBA04'\n  DEL 'W$$.TESTOUT.TMLIBA04'\n  DEL 'W$$.EARL.TMS.VOLMAST'\n//*\n//TMCEXVOL EXEC PGM=TMLIBA01\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//TMCIN     DD  DISP=SHR,DSN=P$.MON$.TMS.TMC\n//VOLLIST   DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TMC.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//SORTTLST EXEC PGM=SYNCSORT\n//SORTIN   DD DISP=SHR,DSN=W$$.TMC.VOLLIST\n//SORTOUT  DD DISP=(NEW,CATLG,DELETE),DSN=W$$.TMC.VOLLIST.SORTED,\n//            UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//SYSIN    DD *\n SORT FIELDS=(1,6,CH,A)\n//SYSOUT   DD SYSOUT=*\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.LIST,\n//    DCB=(DSORG=PS,LRECL=133,BLKSIZE=27930,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//SYSTSIN DD *\n LISTC ENT('SYSCAT.VOLCAT.VGENERAL') VOLENTRIES(*)\n/*\n//*\n//VLCEXVOL EXEC PGM=TMLIBA02\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//VOLCIN    DD  DISP=SHR,DSN=W$$.VOLCAT.LIST\n//VOLLIST   DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//SORTVLST EXEC PGM=SYNCSORT\n//SORTIN   DD DISP=SHR,DSN=W$$.VOLCAT.VOLLIST\n//SORTOUT  DD DISP=(NEW,CATLG,DELETE),DSN=W$$.VOLCAT.VOLLIST.SORTED,\n//            UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//SYSIN    DD *\n SORT FIELDS=(1,6,CH,A)\n//SYSOUT   DD SYSOUT=*\n//*\n//VLCEXVOL EXEC PGM=TMLIBA03\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//TVLIN     DD  DISP=SHR,DSN=W$$.TMC.VOLLIST.SORTED\n//VVLIN     DD  DISP=SHR,DSN=W$$.VOLCAT.VOLLIST.SORTED\n//TNOV      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TNOV.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//VNOT      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.VNOT.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//BOTH      DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.BOTH.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n//*\n//VTST    EXEC PGM=TMLIBA04\n//STEPLIB  DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//INDD     DD  DISP=SHR,DSN=W$$.BOTH.VOLLIST\n//         DD  DISP=SHR,DSN=W$$.VNOT.VOLLIST\n//OUTDD    DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.TESTOUT.TMLIBA04,\n//    UNIT=SYSDA,VOL=SER=WORKB1,DCB=(RECFM=FB,LRECL=385,BLKSIZE=27720),\n//    SPACE=(TRK,(5,50),RLSE)\n//*\n//SORTVTST EXEC PGM=SYNCSORT\n//SORTIN   DD DISP=SHR,DSN=W$$.TESTOUT.TMLIBA04\n//SORTOUT  DD DISP=(NEW,CATLG,DELETE),DSN=W$$.SORTED.TMLIBA04,\n//            UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),\n//            DCB=(DSORG=PS,RECFM=FB,LRECL=385,BLKSIZE=27720)\n//SYSIN    DD *\n SORT FIELDS=(59,6,CH,A)\n//SYSOUT   DD SYSOUT=*\n//*\n//VOLSER10 EXEC PGM=EARL\n//EARLLIB  DD  DISP=SHR,DSN=S$$.CNTLLIB\n//TAPEDB   DD  DISP=SHR,DSN=P$.MON$.TMS.TMC\n//*SYSEARL DD  SYSOUT=*\n//SYSEARL  DD  DISP=(NEW,CATLG,DELETE),DSN=W$$.EARL.TMS.VOLMAST,\n//         UNIT=SYSDA,VOL=SER=WORKB1,SPACE=(CYL,(5,15),RLSE),\n//         DCB=(RECFM=FB,DSORG=PS,LRECL=133,BLKSIZE=27930)\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//TMSRPT   DD  SYSOUT=*\n//EARLOBJ  DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=VIO,SPACE=(CYL,(1,1))\n//SORTIN   DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTOUT  DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//WORK1    DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK01 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK02 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SORTWK03 DD  UNIT=VIO,SPACE=(CYL,(5,5))\n//SYSIN    DD  DISP=SHR,DSN=W$$.CNTLLIB(TMLIBTM)\n//*\n//TMLIBAUD EXEC PGM=TMLIBAUD\n//STEPLIB   DD  DISP=SHR,DSN=W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT1  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT2  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT3  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT4  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT5  DD  SYSOUT=*,DCB=RECFM=FBA\n//SYSPRNT6  DD  SYSOUT=*,DCB=RECFM=FBA\n//TMSIN     DD  DISP=SHR,DSN=W$$.EARL.TMS.VOLMAST\n//LIBIN     DD  DISP=SHR,DSN=W$$.SORTED.TMLIBA04\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBTM": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x00\\x01\\x01\\x15/\\x01\\x01\\x15\\x9f\\x14\\x17\\x00\\x82\\x00\\x85\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2001-06-01T00:00:00", "modifydate": "2001-06-08T14:17:00", "lines": 130, "newlines": 133, "modlines": 0, "user": "WSBG"}, "text": "!\n!  TMS REPORT-TMLIBTM   VOLUME SERIAL MASTER\n!     ( SIMILAR TO OLD TMS REPORT 1 )\n!       VOLUME AND/OR RECORDS ONLY\n!\n!\n!-----------------------  MAINTENANCE LOG  ----------------------------\n!\n! ADD TOTALS TO REPORTS AND GENERAL ENHANCEMENTS                TE9A022\n!\n COPY EARLDEFS\n\n DEF D_LBLTYPE         (X 4) = NONE 'LBL' 'TYPE'\n DEF D_VOLSER          (X 6) = NONE 'VOLUME' 'SERIAL'\n DEF D_CTIME           (P 4.0) = NONE 'CREATE' 'TIME' PIC '99:99'\n DEF P_FLAG1           (B 3.0) = 0    'F1' PIC H\n DEF FIRST_SW          (X 1) = ' '\n DEF VMS_INFO          (X 13) = ' '\n   DEF VMS_CODE          =VMS_INFO 001-004 X\n   DEF VMS_DATE          =VMS_INFO 006-013 X\n DEF NUM_DATASETS      (X 13) = ' '\n   DEF NUM_TEXT        = NUM_DATASETS 001-009 X\n   DEF NUM_FILES       = NUM_DATASETS 011-013 N PIC '999'\n DEF P_COMMENT         (X 13) = ' ' 'COMMENTS'\n DEF VOL_COUNT         (N 6.0) = 0 'VOLUMES'\n DEF DSNB_COUNT        (N 6.0) = 0 'DSNBS'\n\n!\n! USING A TYPRUN OF R_SEQUENTIAL WILL SELECT VOLUME AND DSNB RECORDS\n! USING A TYPRUN OF R_VOLUME WILL SELECT ONLY VOLUME RECORDS\n! USING A TYPRUN OF R_CHAINED WILL SELECT BASE VOLUME, THEN DSNB'S\n!\n\n!SET TYPRUN = R_SEQUENTIAL\n SET TYPRUN = R_VOLUME\n!SET TYPRUN = R_CHAINED\n\n GOTO EOJ TAPEDB = 'E'\n GET TAPEDB\n GOTO TEST TAPEDB = 'E'\n\n IF FILESEQ = 0                   ! Q. UNALLOCATED DSNB RECORD\n     GOTO START                   ! A. EQUAL - YES, BYPASS RECORD\n ENDIF\n\n IF ACTIND = 'N' AND FILESEQ > 1  ! Q. UNALLOCATED DSNB RECORD\n     GOTO START                   ! A. EQUAL - YES, BYPASS RECORD\n ENDIF\n\n IF FLAG1_DEL = 'Y'               ! Q. TAPE IN DELETED STATUS\n     GOTO START                   ! A. EQUAL - YES, BYPASS RECORD\n ENDIF\n\n!IF CJOB = 'PRE-TMS'              ! Q. TAPE IN \"PRE\" STATUS\n!    GOTO START                   ! A. EQUAL - YES, BYPASS RECORD\n!ENDIF\n\n!IF SCRATCH_IND = 'Y'             ! Q. TAPE IN SCRATCH STATUS\n!    GOTO START                   ! A. EQUAL - YES, BYPASS RECORD\n!ENDIF\n\n CONTINUE:\n IF FIRST_SW = ' '\n    THEN SET FIRST_SW = '*'\n    SET FUNCTION = 'RETURN_DATE'\n    CALL CTSEDATE USING FUNCTION,RUNDATE,RUNTIME\n    SET FUNCTION = 'TO_EXPLODED'\n    CALL CTSEDATE USING FUNCTION,P_EXP_DATA,RUNDATE\n ENDIF\n\n SET FUNCTION = 'TO_EXTERNAL'\n CALL  CTSEDATE  USING FUNCTION,P_EXPDT,EXPDT,DATE_FMT\n CALL  CTSEDATE  USING FUNCTION,P_CDATE,CDATE DATE_FMT\n CALL  CTSEDATE  USING FUNCTION,P_LDATE,LDATE,DATE_FMT\n\n SET D_CTIME  = CTIME / 100\n SET D_LBLTYPE = LABEL_TYPE\n\n IF FILESEQ > 1 THEN\n     SET P_FLAG1  = DSNBFLG1\n     SET D_VOLSER = '      '\n     SET D_LBLTYPE = 'DSNB'\n     SET DSNB_COUNT = DSNB_COUNT + 1\n   ELSE\n     SET P_FLAG1  = VOLFLG1\n     SET D_VOLSER = VOLSER\n     SET VOL_COUNT = VOL_COUNT + 1\n ENDIF\n\n IF OUTCODE = '    ' OR OUTCODE = ' VMS' OR OUTCODE < '    '\n     SET P_COMMENT = '             '\n   ELSE\n     SET VMS_CODE = OUTCODE\n     CALL CTSEDATE USING FUNCTION,VMS_DATE,OUTDATE,DATE_FMT\n     SET P_COMMENT = VMS_INFO\n ENDIF\n\n IF  FILESEQ = 1 THEN\n     SET P_COMMENT = '*PRIVATE*    '\n ENDIF\n\n IF SCRATCH_IND = 'Y' THEN\n     SET P_COMMENT = '*SCRATCH*    '\n ENDIF\n\n IF FLAG3_BAD = 'Y' THEN\n     SET P_COMMENT = '*BAD*        '\n ENDIF\n\n REPORT TITLE  @1 P_EXP_DAYNAM @11 ',' @13 P_EXP_MONNAM @24 P_EXP_DD\n               @26 ',' @28 P_EXP_YYYY @32 '.' @33 P_EXP_DDD\n               @50 COMPANY_NAME @115 'PAGE' @125 PAGENUMBER\n        TITLE  @1 ' '\n        TITLE  @1 'TMS REPORT-TMLIBTM  VOLUME SERIAL MASTER'\n\n SELECT TAPEDB NOT = 'E'\n\n CONTROL VOLSER VOLSEQ FILESEQ\n\n PRINT D_VOLSER 1 DSN 1 CJOB        VOLSEQ  1 P_CDATE D_CTIME 1\n     P_EXPDT 1 ROBOT_TYPE ROBOT_NUMBER @112 D_LBLTYPE @117 P_COMMENT\n\n REPORT TITLE  @1 P_EXP_DAYNAM @11 ',' @13 P_EXP_MONNAM @24 P_EXP_DD\n               @26 ',' @28 P_EXP_YYYY @32 '.' @33 P_EXP_DDD\n               @50 COMPANY_NAME @115 'PAGE' @125 PAGENUMBER\n        TITLE  @1 ' '\n        TITLE  @1 'TMS REPORT-TMLIBTM  TOTALS FOR VOLUME SERIAL MASTER'\n SELECT TAPEDB = 'E'\n PRINT 0 'TOTAL NUMBER OF ITEMS LISTED:' VOL_COUNT 5 DSNB_COUNT\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TMSBLDUE": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x11o\\x01\\x01\\x15o\\x082\\x00\\x07\\x00\\x04\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-04-26T00:00:00", "modifydate": "2001-06-05T08:32:00", "lines": 7, "newlines": 4, "modlines": 0, "user": "WSBG"}, "text": "//WSBGTBLD JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//TMSBLDUE EXEC PGM=TMSBLDUE\n//SYSPRINT  DD  SYSOUT=*\n//SYSPUNCH  DD  DISP=SHR,DSN=WSBG.TMS.CNTL(TMSBLD02)\n//TMC       DD  DISP=SHR,DSN=P$.MON$.TMS.TMC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMSUX2E": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x13o\\x01\\x01\\x14?\\x16$\\x00l\\x00l\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-05-16T00:00:00", "modifydate": "2001-05-23T16:24:00", "lines": 108, "newlines": 108, "modlines": 0, "user": "WSBG"}, "text": "TMSUX2E  TITLE 'CA-1  TAPE MANAGEMENT SYSTEM  -  MODULE (TMSUX2E)'\n*****************************************************************\n*    TMSUX2E - CONVERT CA-1  INTERNAL VOLSERS TO INSTALLATION\n*              STANDARD (ALPHANUMERIC) VOLSERS\n*\n*    REGISTER USAGE\n*        R0    UNUSED\n*        R1    POINTS TO A POINTER TO A VOLSER & 10 BYTE WORKAREA\n*        R2    UNUSED\n*        R3    BASE REGISTER\n*        R4    UNSED\n*        R5    UNUSED\n*        R6    UNUSED\n*        R7    UNUSED\n*        R8    UNUSED\n*        R9    UNUSED\n*        R10   UNUSED\n*        R11   UNUSED\n*        R12   UNUSED\n*        R13   CALLER'S SAVE AREA\n*        R14   RETURN ADDRESS\n*        R15   RETURN CODE (NOT REQUIRED)\n*\n*    SPECIFICATIONS\n*        AMODE ANY\n*        RMODE 24\n*\n*    EXIT\n*        VOLSER POINTED TO BY PARAMETER LIST MUST CONTAIN AN\n*        ALPHANUMERIC VOLSER DEFINED IN THE TMC.\n*\n*****************************************************************\n         EJECT\nTMSUX2E  CSECT ,\nTMSUX2E  AMODE ANY\nTMSUX2E  RMODE 24\n         TMMLINK (R3),NAME=TMSUX2E,SAVAREA=NO,EQUS=YES,                X\n               SSI=CL052B0\n         EJECT\n*---------------------------------------------------------------------*\n*    CHANGES:                                                         *\n*        PARMLIB: EXTERNALIZE USER EXITS                              *\n*        PROCESS PARAMETER LIST CORRECTLY                             *\n*        ADD THE TAG RETURN FOR EXITING FROM TMSUX2E                  *\n*     SUPPORT FOR > 999,999 INTERNAL VOLSER'S                         *\n*                                                                     *\n*  COMMENT \"CLI 0(R1),0\"                                        -RR1  *\n*  COMMENT \"NEWSTYLE\" BRANCH AND LABEL                          -RR1  *\n*  COMMENT \"B RETURN\" BRANCH                                    -RR1  *\n*  ADD  \"TR 0(1,1),INT2EXT\"                                     +RR1  *\n*  COPY XLATE TABLE CODE: !HS1                                  +RR1  *\n*  ADD V AND DV TAPE TYPES                                      +SBG  *\n*---------------------------------------------------------------------*\n         L     R1,0(,R1)          GET ADDRESS OF VOLSER\n*        CLI   0(R1),0            IS IT NEW STYLE ?                -RR1\n*        BE    NEWSTYLE           YES THEN BRANCH                  -RR1\n*\n*\n         CLC   0(2,R1),=C'10'     NEW DEVELOPMENT VOLUMES?          SBG\n         BNE   DOTRAN             NO. REGULAR PROCESSING            SBG\n         MVC   0(2,R1),=C'DV'     YES. MOVE IN DV INSTEAD           SBG\n         B     RETURN             AND GET OUT                       SBG\nDOTRAN   DS    0H                                                   SBG\n         TR    0(1,1),INT2EXT     XLATE INTERNAL (CA-1) PRESENT-   +RR1\n*                                 ATION TO EXTERNAL (IBM) VOLSER   +RR1\n*                                 OLD TABLE INCLUDED BELOW W/ !HS1.+RR1\n*\n*        B     RETURN                                              -RR1\nNEWSTYLE DS    0H                                                  -RR1\n*\n*        PLACE NEWSTYLE USER CODE HERE\n*\nRETURN   DS    0H\n         LA    R15,0              SET RC TO ZERO\n*\n         RETURN (14,12),RC=(15)\n         EJECT\n*                                                                  !HS1\n* THE PURPOSE OF THIS ROUTINE IS TO CONVERT INTERNAL VOLUME SERIAL !HS1\n* NUMBERS TO EXTERNAL FORMAT. CA-1  REQUIRES ALL NUMERIC           !HS1\n* VOLSERS  FOR ITS PROCESSING. SINCE A & P USES THE FIRST CHARATER !HS1\n* OF OUR VOL SERS TO INDICATE THE \"OWNER\" OF THE TAPE, A NUMERIC   !HS1\n* TO ALPHA  MAPPING IS REQUIRED.                                   !HS1\n*                                                                  !HS1\n*------------------------------------------------------------------!HS1\n*   ANP TABLE FOR TRANSLATION FROM INTERNAL (CA1) REPRESENTATION   !HS1\n*   TO EXTERNAL (IBM) VOLSER                                       !HS1\n*------------------------------------------------------------------!HS1\nINT2EXT  DS    0D                                                  !HS1\n         DC    256AL1(*-INT2EXT) TABLE THAT TRANSLATES TO ITSELF   !HS1\n*                                                                  !HS1\n         ORG   INT2EXT+C'0'     0 -> D FOR DEVELOPMENT             !HS1\n         DC    C'D'                                                !HS1\n*        ORG   INT2EXT+C'1'     10-> DV FOR DEVELOPMENT VIRTUAL\n*        DC    C'DV'            THIS IS FOR DOC (2 CHARS NG FOR TRT)\n         ORG   INT2EXT+C'2'     2 -> C FOR COLUMBIA                !HS1\n         DC    C'C'                                                !HS1\n         ORG   INT2EXT+C'4'     4 -> M FOR MONTVALE                !HS1\n         DC    C'M'                                                !HS1\n         ORG   INT2EXT+C'6'     6 -> T FOR TORONTO                 !HS1\n         DC    C'T'                                                !HS1\n         ORG   INT2EXT+C'8'     8 -> V FOR VIRTUAL TAPES            SBG\n         DC    C'V'                                                 SBG\n         ORG   INT2EXT+C'9'     9 -> W FOR TECH SERVICES            SBG\n         DC    C'W'                                                 SBG\n         LTORG ,\n         TMMLINK PATCH\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TMSUX2U": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x13o\\x01\\x01\\x14?\\x164\\x00n\\x00n\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-05-16T00:00:00", "modifydate": "2001-05-23T16:34:00", "lines": 110, "newlines": 110, "modlines": 0, "user": "WSBG"}, "text": "TMSUX2U  TITLE 'CA-1 TAPE MANAGEMENT SYSTEM  -  MODULE (TMSUX2U)'\n*****************************************************************\n*    TMSUX2U - USER EDIT ROUTINE FOR ALPHANUMERIC VOLSERS\n*\n*    REGISTER USAGE\n*        R0    DO NOT DESTROY\n*        R1    ADDRESS OF VOLSER FOLLOWED BY 10 BYTE WORK AREA\n*        R2    DO NOT DESTROY\n*        R3    DO NOT DESTROY\n*        R4    DO NOT DESTROY\n*        R5    DO NOT DESTROY\n*        R6    DO NOT DESTROY\n*        R7    DO NOT DESTROY\n*        R8    DO NOT DESTROY\n*        R9    DO NOT DESTROY\n*        R10   DO NOT DESTROY\n*        R11   DO NOT DESTROY\n*        R12   DO NOT DESTROY\n*        R13   CALLER'S SAVE AREA\n*        R14   RETURN ADDRESS\n*        R15   BASE REGISTER\n*\n*    SPECIFICATIONS\n*        REENTRANT\n*        AMODE ANY\n*        RMODE 24\n*\n*    EXIT\n*        VOLSER POINTED TO BY R1 IS ALL NUMERIC FOR CONTROLLED TAPE\n*        AND NON-NUMERIC FOR NON-CA-1 CONTROLLED TAPE\n*\n*****************************************************************\n*    MAINTENANCE LOG                                                  *\n*    ADDED AMODE ANY AND RMODE 24 FOR PROPER LKED              TEAA084*\n*    ADDED V AND DV TAPES  SBG 5/01                                   *\n***********************************************************************\n         EJECT\nR0       EQU   0                  DO NOT DESTROY\nR1       EQU   1                  ADDRESS OF VOLSER AND WORK AREA\nR2       EQU   2                  DO NOT DESTROY\nR3       EQU   3                  DO NOT DESTROY\nR4       EQU   4                  DO NOT DESTROY\nR5       EQU   5                  DO NOT DESTROY\nR6       EQU   6                  DO NOT DESTROY\nR7       EQU   7                  DO NOT DESTROY\nR8       EQU   8                  DO NOT DESTROY\nR9       EQU   9                  DO NOT DESTROY\nR10      EQU   10                 DO NOT DESTROY\nR11      EQU   11                 DO NOT DESTROY\nR12      EQU   12                 DO NOT DESTROY\nR13      EQU   13                 CALLER'S SAVEAREA\nR14      EQU   14                 RETURN ADDRESS\nR15      EQU   15                 BASE REGISTER\n         EJECT\nTMSUX2U  CSECT ,\nTMSUX2U  AMODE ANY                                              TEAA084\nTMSUX2U  RMODE 24                                               TEAA084\n         USING TMSUX2U,R15\n         TMMLINK COPY=ONLY,                                            X\n               SSI=CL052B0                                     CL052B0\n         SPACE 2\n         CLC   0(2,R1),=C'DV'     NEW DEVELOPMENT VOLUMES?          SBG\n         BNE   DOTRAN             NO. REGULAR PROCESSING            SBG\n         MVC   0(2,R1),=C'10'     YES. MOVE IN '10' INSTEAD         SBG\n         B     RETURN             AND GET OUT                       SBG\n*\nDOTRAN   DS    0H                                                   SBG\n         TR    0(1,1),EXT2INT     CONVERT EXTERNAL (IBM) VOLSER    !HS1\n*                                  TO INTERNAL (CA1) REPRESENTATION!HS1\n*\nRETURN   DS    0H                                                   SBG\n         BR    R14                RETURN TO CALLER\n         EJECT\n*------------------------------------------------------------------!HS1\n*                                                                  !HS1\n* THE PURPOSE OF THIS ROUTINE IS TO CONVERT EXTERNAL VOLUME SERIAL !HS1\n* NUMBERS TO INTERNAL UCC-1 FORMAT. UCC-1 REQUIRES ALL NUMERIC     !HS1\n* VOL SERS FOR ITS PROCESSING. SINCE A & P USES THE FIRST CHARATER !HS1\n* OF OUR VOL SERS TO INDICATE THE \"OWNER\" OF THE TAPE, AN ALPHA TO !HS1\n* TO NUMERIC MAPPING IS REQUIRED. IN ADDITION, ANY TAPE WITH A     !HS1\n* NUMERIC FIRST LETTER IS MADE ALPHA, SO THAT UCC-1 WILL TREAT IT  !HS1\n* AS THE FOREIGN TAPE IT IS.                                       !HS1\n*                                                                  !HS1\n*------------------------------------------------------------------!HS1\n*   ANP TABLE FOR TRANSLATION FROM EXTERNAL (CA1) VOLSER TO        !HS1\n*   INTERNAL (CA1) REPRESENTATION                                  !HS1\n*------------------------------------------------------------------!HS1\nEXT2INT  DS    0D                                                  !HS1\n         DC    256AL1(*-EXT2INT) TABLE THAT TRANSLATES TO ITSELF   !HS1\n         ORG   EXT2INT+C'0'                                        !HS1\n         DC    C'ABCDEFGHIJ'     0->A,....9->J                     !HS1\n*                                                                  !HS1\n         ORG   EXT2INT+C'D'     D FOR DEVELOPMENT -> 0             !HS1\n         DC    C'0'                                                !HS1\n*        ORG   EXT2INT+C'DV'    DV FOR DEV VIRT   -> 1  NON-FUNCTIONAL\n*        DC    C'1'                                     DOC ONLY\n         ORG   EXT2INT+C'C'     C FOR COLUMBIA    -> 2             !HS1\n         DC    C'2'                                                !HS1\n         ORG   EXT2INT+C'M'     M FOR MONTVALE    -> 4             !HS1\n         DC    C'4'                                                !HS1\n         ORG   EXT2INT+C'T'     T FOR TORONTO     -> 6             !HS1\n         DC    C'6'                                                !HS1\n         ORG   EXT2INT+C'V'     V FOR VIRT TAPES  -> 8             !HS1\n         DC    C'8'                                                !HS1\n         ORG   EXT2INT+C'W'     W FOR TECH SVCS   -> 9             !HS1\n         DC    C'9'                                                !HS1\n         ORG\n         LTORG ,\n         TMMLINK PATCH,PSIZE=16\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VOLRANGE": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x15o\\x01\\x01\\x15o\\x08\\x17\\x008\\x008\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-06-05T00:00:00", "modifydate": "2001-06-05T08:17:00", "lines": 56, "newlines": 56, "modlines": 0, "user": "WSBG"}, "text": "Processing input from 5.X TMC\nNo parm specified, DEFAULT processing\nRange 1 has internal vols 000000 to 001999\n     for a total of 2000 Volumes\nRange 2 has internal vols 100000 to 103999\n     for a total of 4000 Volumes\nRange 3 has internal vols 400000 to 400299\n     for a total of 300 Volumes\nRange 4 has internal vols 400723 to 400723\n     for a total of 1 Volumes\nRange 5 has internal vols 401377 to 401377\n     for a total of 1 Volumes\nRange 6 has internal vols 402191 to 403826\n     for a total of 1636 Volumes\nRange 7 has internal vols 404321 to 404934\n     for a total of 614 Volumes\nRange 8 has internal vols 405525 to 406499\n     for a total of 975 Volumes\nRange 9 has internal vols 407000 to 408999\n     for a total of 2000 Volumes\nRange 10 has internal vols 410000 to 423899\n     for a total of 13900 Volumes\nRange 11 has internal vols 430000 to 434999\n     for a total of 5000 Volumes\nRange 12 has internal vols 610000 to 615199\n     for a total of 5200 Volumes\nRange 13 has internal vols 800000 to 824999\n     for a total of 25000 Volumes\nTotal number of ranges: 13\n         TMMVOLDF D00000,D01999 Tmsformt range=0-1999\n         TMMVOLDF 002000,099999   unformatted\n         TMMVOLDF DV0000,DV3999 Tmsformt range=100000-103999\n         TMMVOLDF 104000,399999   unformatted\n         TMMVOLDF M00000,M00299 Tmsformt range=400000-400299\n         TMMVOLDF 400300,400722   unformatted\n         TMMVOLDF M00723,M00723 Tmsformt range=400723-400723\n         TMMVOLDF 400724,401376   unformatted\n         TMMVOLDF M01377,M01377 Tmsformt range=401377-401377\n         TMMVOLDF 401378,402190   unformatted\n         TMMVOLDF M02191,M03826 Tmsformt range=402191-403826\n         TMMVOLDF 403827,404320   unformatted\n         TMMVOLDF M04321,M04934 Tmsformt range=404321-404934\n         TMMVOLDF 404935,405524   unformatted\n         TMMVOLDF M05525,M06499 Tmsformt range=405525-406499\n         TMMVOLDF 406500,406999   unformatted\n         TMMVOLDF M07000,M08999 Tmsformt range=407000-408999\n         TMMVOLDF 409000,409999   unformatted\n         TMMVOLDF M10000,M23899 Tmsformt range=410000-423899\n         TMMVOLDF 423900,429999   unformatted\n         TMMVOLDF M30000,M34999 Tmsformt range=430000-434999\n         TMMVOLDF 435000,609999   unformatted\n         TMMVOLDF T10000,T15199 Tmsformt range=610000-615199\n         TMMVOLDF 615200,799999   unformatted\n         TMMVOLDF V00000,V24999 Tmsformt range=800000-824999\n         END\nTMC Records read: 60630\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VOLRANG1": {"ttr": 1805, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x15o\\x01\\x01\\x15o\\x08\\x18\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-06-05T00:00:00", "modifydate": "2001-06-05T08:18:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "WSBG"}, "text": "         TMMVOLDF D00000,D01999 Tmsformt range=0-1999\n         TMMVOLDF 002000,099999   unformatted\n         TMMVOLDF DV0000,DV3999 Tmsformt range=100000-103999\n         TMMVOLDF 104000,399999   unformatted\n         TMMVOLDF M00000,M00299 Tmsformt range=400000-400299\n         TMMVOLDF 400300,400722   unformatted\n         TMMVOLDF M00723,M00723 Tmsformt range=400723-400723\n         TMMVOLDF 400724,401376   unformatted\n         TMMVOLDF M01377,M01377 Tmsformt range=401377-401377\n         TMMVOLDF 401378,402190   unformatted\n         TMMVOLDF M02191,M03826 Tmsformt range=402191-403826\n         TMMVOLDF 403827,404320   unformatted\n         TMMVOLDF M04321,M04934 Tmsformt range=404321-404934\n         TMMVOLDF 404935,405524   unformatted\n         TMMVOLDF M05525,M06499 Tmsformt range=405525-406499\n         TMMVOLDF 406500,406999   unformatted\n         TMMVOLDF M07000,M08999 Tmsformt range=407000-408999\n         TMMVOLDF 409000,409999   unformatted\n         TMMVOLDF M10000,M23899 Tmsformt range=410000-423899\n         TMMVOLDF 423900,429999   unformatted\n         TMMVOLDF M30000,M34999 Tmsformt range=430000-434999\n         TMMVOLDF 435000,609999   unformatted\n         TMMVOLDF T10000,T15199 Tmsformt range=610000-615199\n         TMMVOLDF 615200,799999   unformatted\n         TMMVOLDF V00000,V24999 Tmsformt range=800000-824999\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT519/FILE519.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT519", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}