{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012537000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE658.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE658.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\r'", "DS1TRBAL": "b'k\\x0c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xa2\\x00\\x0b\\x04\\xa2\\x00\\r\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04@\\x00\\x00\\x01\\x036?\\x01\\x036?\\x18D\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf4@@@'", "ispf": {"version": "04.64", "flags": 0, "createdate": "2003-12-29T00:00:00", "modifydate": "2003-12-29T18:44:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-464"}, "text": "REGULAR CBT TAPE - VERSION 464    FILE:  658\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT464.FILE658\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 4 MEMBERS COUNTED; CUMULATIVE SIZE IS 260 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/29/03    18:44:25    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE658": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04@\\x00\\x00\\x01\\x036?\\x01\\x036?\\x18D\\x00\\x07\\x00\\x07\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf4@@@'", "ispf": {"version": "04.64", "flags": 0, "createdate": "2003-12-29T00:00:00", "modifydate": "2003-12-29T18:44:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "CBT-464"}, "text": "//***FILE 658 is an Assembler program and a REXX to call it, which  *   FILE 658\n//*           calculates a CRC value for any string or file that    *   FILE 658\n//*           is passed to it.                                      *   FILE 658\n//*                                                                 *   FILE 658\n//*           contact email:  sbgolob@cbttape.org                   *   FILE 658\n//*                           sbgolob@attglobal.net                 *   FILE 658\n//*                                                                 *   FILE 658\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CRCCALC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x036?\\x01\\x036?\\x187\\x00!\\x00!\\x00\\x00\\xc3\\xd9\\xc3\\xc3\\xc8\\xc5\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-12-29T00:00:00", "modifydate": "2003-12-29T18:37:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "CRCCHEK"}, "text": "/******************************* rexx *******************************/\n\narg.1 = 'This is a test of the crc subroutine.'\narg.2 = 'This is a test of the crc subroutine 1.'\narg.3 = arg.1 || arg.2\n\nsay '     Before the call, these are the arguments:'\nsay 'first  =' arg.1\nsay 'second =' arg.2\nsay 'third  =' arg.3\n\nsay ' '\nsay '     Calling the CCRC calculation subroutine.'\nsay ' '\n\ncrc.1 = crcrexx(arg.1)\ncrc.2 = crcrexx(arg.2)\ncrc.3 = crcrexx(arg.3)\n\nsay ' '\nsay 'Calculated CRC''s are:'\nsay 'first  =' c2x(crc.1)\nsay 'second =' c2x(crc.2)\nsay 'third  =' c2x(crc.3)\n\ndo i = 1 to 2\n  do j = i+1 to 3\n    if i \\= j then do\n      if crc.i = crc.j then say i 'and' j 'have the same crc''s.'\n      end\n    end\n  end\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CRCREXX": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x004\\x01\\x036?\\x01\\x036?\\x18@\\x00\\xd0\\x00\\xd0\\x00\\xcd\\xc3\\xd9\\xc3\\xc3\\xc8\\xc5\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-12-29T00:00:00", "modifydate": "2003-12-29T18:40:34", "lines": 208, "newlines": 208, "modlines": 205, "user": "CRCCHEK"}, "text": "CRCREXX TITLE 'ROUTINE TO CALCULATE A CRC VALUE FOR ANY INPUT STRING'\n*%A LOAD(ISPLLIB) MAC3(ASM) LET RMODE(24)\n*L  NAME  CRCREXX(R)\n*\n*======================================================================\n*                                                                     *\n*       THIS SUBROUTINE IS DESIGNED TO BE CALLED BY A REXX EXEC.  THE *\n*  REXX EXEC SHOULD CALL THIS WITH 1 ARGUMENTS.  THE ARGUMENT IS THE  *\n*  CHARACTER STRING FOR WHICH THE CRC IS TO BE CALCULATED.  THE REXX  *\n*  WILL PASS A LENGTH AND THE SUBROUTINE WILL USE IT TO DECIDE HOW    *\n*  MANY CHARACTERS SHOULD BE USED FOR THE CRC CALCULATION.            *\n*                                                                     *\n*=====================================================================*\n*\n*    MAKE A PRETTY EYE CATCHER FOR THIS PROGRAM\n*\nCRCREXX  CSECT\n         YREGS\n         USING CRCREXX,R15         (ESTABLISH TEMPORARY BASE).\n         B     BEGIN               SKIP OVER HEADER.\nHEAD1    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.\nHEAD     DC    C'CRCREXX - ONE ARG - &SYSDATE - &SYSTIME'\nHEADL    EQU   *-HEAD\n         DROP  R15                 DROP TEMPORARY BASE.\n*\n*    DO THE REQUISITE HOUSEKEEPING CHORES\n*\nBEGIN    STM   R14,R12,12(R13)     PUT CALLER'S REGS IN SAVE AREA.\n         LR    R12,R15             COPY BASE TO MY BASE REG.\n         USING CRCREXX,R12         TELL ASSEMBLER ABOUT NEW BASE.\n         LA    R6,SAVE             MAKE R6 POINT TO MY SAVE AREA.\n         ST    R6,8(,R13)          CHAIN SAVE AREAS ...\n         ST    R13,4(,R6)          ... TO COMPLETE LINKAGE.\n         LR    R13,R6              POINT TO MY SAVE AREA FOR LATER\n*\n*    PROCESS ARGS\n*\n         LR    R2,R0               GET ADDRESS OF ENVIRONMENT BLOCK\n         LR    R3,R1               GET ADDRESS OF EXT FUN PARM INTERF\n         L     R4,16(,R3)          ADDRESS OF FIRST ARGUMENT POINTER\n         L     R5,0(,R4)           GET FIRST ARGUMENT'S ADDRESS\n         L     R11,4(,R4)          GET LENGTH OF ARGUMENT\n*\n* R5 NOW POINTS TO THE ARG AND R11 HAS ITS LENGTH\n*\n* THIS SAMPLE WAS USED TO TEST DURING DEBUGGING\n*Q1      L     R11,QBUFFLEN        TEST BUFFER USED TO TEST\n*Q2      LA    5,QBUFFER           TEST BUFFER LENGTH\n*\n*    SET UP THE ACTUAL CRC LOOP\n*\n         LA    R11,0(R5,R11)       LAST BUFFER ADDRESS FOR COMPARE\n         BCTR  R11,R0              DROP ONE CHAR FOR IBM COUNT\n         LA    R10,1               GET AN INCREMENT OF 1 BYTE\n         L     R8,ONEFOX           GET A ONE BYTE MASK FOR ANDING\n         XR    R6,R6               CLEAR R6 AND THEN TURN ON ALL\n         BCTR  R6,R0               ... THE BITS IN THE REGISTER\n*\n*    NOW LOOP THROUGH THE DATA\n*\nLOOP     EQU   *\n         IC    R7,0(R5)            GET THE NEXT CHAR FROM THE BUFFER\n         XR    R7,R6               EXCLUSIVE OR TO INTERMEDIATE CRC\n         NR    R7,R8               AND RESULT TO ONE BYTE\n         SLL   R7,2                MULTIPLY BY FOUR FOR WORD INDEX\n         SRL   R6,8                PART OF THE CRC ALGORITHM\n         X     R6,CRCTABLE(R7)     UPDATE INTERMEDIATE CRC CALCULATION\n         BXLE  R5,R10,LOOP         LOOP UNTIL END ( R10=INCR, R11=MAX )\n*\n*    WE'RE DONE IF WE GET THIS FAR\n*\n         XR    R7,R7               CLEAR R7 AND THEN TURN ON ALL\n         BCT   R7,FINALIZE         ... THE BITS IN THE REGISTER\nFINALIZE XR    R6,R7               ... AND XOR IT INTO CRC\n*\n*    THESE CAN BE UNCOMMENTED FOR THE STANDALONE TEST PROGRAM\n*Q3       STCM  R6,15,QMESS1\n*Q4       CALL  PUTMESSR\n*QMESS1   DC    CL80'     IS THE CALCULATED CRC.'\n*\n         STCM  R6,15,CHAR4         SAVE FINAL CRC FOR RETURNTO REXX\n*\n*    WE'VE PUT OUR RESULT AWAY NOW GIVE IT TO THE REXX\n*\n         L     R4,20(,R3)          GET EVALUATION BLOCK ADDRESS PTR\n         L     R4,0(,R4)           GET EVALUATION BLOCK ADDRESS\n         L     R10,4(,R4)          GET EVAL BLOCK SIZE\n         LA    R1,IRXRLTPB         POINT TO PARAMETER BLOCK\n         LINK  EP=IRXRLT           GET ADDRESS OF IRXRLT ROUTINE\n         LTR   R10,R15             CHECK RETURN CODE\n         BZ    BIGGEROK            IF IT WAS OK CONTINUE\n         B     LEAVE               EXIT THE ROUTINE\nBIGGEROK EQU   *\n         L     R4,IRXRLTPB+4       GET NEW EVAL BLOCK ADDRESS POINTER\n         L     R4,0(,R4)           NEW GET ACTUAL ADDRESS\n         L     R10,4(,R4)          GET NEW EVAL BLOCK SIZE\nLEAVE    EQU   *\n         L     R5,NEWSIZE          GET RETURNED STRING LENGTH\n         ST    R5,8(,R4)           PUT IT IN EVAL BLOCK\n         MVC   16(4,R4),CHAR4      MOVE ACTUAL ARG INTO BLOCK\n*\n*    FINALLY RETURN TO THE CALLER\n*\n         L     R13,SAVE+4          GET ORIGINAL REGISTER 13\n         LM    R14,R12,12(R13)     RESTORE REST OF ORIGINAL REGISTERS\n         SR    R15,R15             SET ZERO RETURN CODE\n         BR    R14                 USE RETURN ADDRESS\n*\n*    DEFINE DATA TO BE USED IN THIS PROGRAM\n*\n         DS    0F\nSAVE     DS    9D                  REGISTER SAVE AREA\n*\nGETNAME  DC    CL8'GETBLOCK'       REQUEST LARGER EVALUATION BLOCK\nNEWSIZE  DC    1F'4'               LENGTH OF RETURNED ARGUMENT\nNEWBLOCK DS    1F                  NEW EVAL BLOCK ADDRESS WILL BE HERE\nIRXRLTPB DC    AL4(GETNAME)        POINTER TO NAME OF REQUEST TYPE\n         DC    AL4(NEWBLOCK)       OLD EVAL BLOCK ADDRESS GOES HERE\n         DC    AL4(X'80000000'+NEWSIZE)\n*\n         SPACE 1\n         DS    0D\nCHAR4    DC    AL4(0)              THE CRC WILL GO HERE\nONEFOX   DC    X'000000FF'         USED TO LIMIT THE ANDING\n*\n         DS    0H                  CRC CALC TABLE\nCRCTABLE EQU   *\n         DC    X'0000000077073096EE0E612C990951BA'  00-03\n         DC    X'076DC419706AF48FE963A5359E6495A3'  04-07\n         DC    X'0EDB883279DCB8A4E0D5E91E97D2D988'  08-0B\n         DC    X'09B64C2B7EB17CBDE7B82D0790BF1D91'  0C-0F\n         DC    X'1DB710646AB020F2F3B9714884BE41DE'  10-13\n         DC    X'1ADAD47D6DDDE4EBF4D4B55183D385C7'  14-17\n         DC    X'136C9856646BA8C0FD62F97A8A65C9EC'  18-1B\n         DC    X'14015C4F63066CD9FA0F3D638D080DF5'  1C-1F\n         DC    X'3B6E20C84C69105ED56041E4A2677172'  20-23\n         DC    X'3C03E4D14B04D447D20D85FDA50AB56B'  24-27\n         DC    X'35B5A8FA42B2986CDBBBC9D6ACBCF940'  28-2B\n         DC    X'32D86CE345DF5C75DCD60DCFABD13D59'  2C-2F\n         DC    X'26D930AC51DE003AC8D75180BFD06116'  30-33\n         DC    X'21B4F4B556B3C423CFBA9599B8BDA50F'  34-37\n         DC    X'2802B89E5F058808C60CD9B2B10BE924'  38-3B\n         DC    X'2F6F7C8758684C11C1611DABB6662D3D'  3C-3F\n         DC    X'76DC419001DB710698D220BCEFD5102A'  40-43\n         DC    X'71B1858906B6B51F9FBFE4A5E8B8D433'  44-47\n         DC    X'7807C9A20F00F9349609A88EE10E9818'  48-4B\n         DC    X'7F6A0DBB086D3D2D91646C97E6635C01'  4C-4F\n         DC    X'6B6B51F41C6C6162856530D8F262004E'  50-53\n         DC    X'6C0695ED1B01A57B8208F4C1F50FC457'  54-57\n         DC    X'65B0D9C612B7E9508BBEB8EAFCB9887C'  58-5B\n         DC    X'62DD1DDF15DA2D498CD37CF3FBD44C65'  5C-5F\n         DC    X'4DB261583AB551CEA3BC0074D4BB30E2'  60-63\n         DC    X'4ADFA5413DD895D7A4D1C46DD3D6F4FB'  64-67\n         DC    X'4369E96A346ED9FCAD678846DA60B8D0'  68-6B\n         DC    X'44042D7333031DE5AA0A4C5FDD0D7CC9'  6C-6F\n         DC    X'5005713C270241AABE0B1010C90C2086'  70-73\n         DC    X'5768B525206F85B3B966D409CE61E49F'  74-77\n         DC    X'5EDEF90E29D9C998B0D09822C7D7A8B4'  78-7B\n         DC    X'59B33D172EB40D81B7BD5C3BC0BA6CAD'  7C-7F\n         DC    X'EDB883209ABFB3B603B6E20C74B1D29A'  80-83\n         DC    X'EAD547399DD277AF04DB261573DC1683'  84-87\n         DC    X'E3630B1294643B840D6D6A3E7A6A5AA8'  88-8B\n         DC    X'E40ECF0B9309FF9D0A00AE277D079EB1'  8C-8F\n         DC    X'F00F93448708A3D21E01F2686906C2FE'  90-93\n         DC    X'F762575D806567CB196C36716E6B06E7'  94-97\n         DC    X'FED41B7689D32BE010DA7A5A67DD4ACC'  98-9B\n         DC    X'F9B9DF6F8EBEEFF917B7BE4360B08ED5'  9C-9F\n         DC    X'D6D6A3E8A1D1937E38D8C2C44FDFF252'  A0-A3\n         DC    X'D1BB67F1A6BC57673FB506DD48B2364B'  A4-A7\n         DC    X'D80D2BDAAF0A1B4C36034AF641047A60'  A8-AB\n         DC    X'DF60EFC3A867DF55316E8EEF4669BE79'  AC-AF\n         DC    X'CB61B38CBC66831A256FD2A05268E236'  B0-B3\n         DC    X'CC0C7795BB0B4703220216B95505262F'  B4-B7\n         DC    X'C5BA3BBEB2BD0B282BB45A925CB36A04'  B8-BB\n         DC    X'C2D7FFA7B5D0CF312CD99E8B5BDEAE1D'  BC-BF\n         DC    X'9B64C2B0EC63F226756AA39C026D930A'  C0-C3\n         DC    X'9C0906A9EB0E363F7207678505005713'  C4-C7\n         DC    X'95BF4A82E2B87A147BB12BAE0CB61B38'  C8-CB\n         DC    X'92D28E9BE5D5BE0D7CDCEFB70BDBDF21'  CC-CF\n         DC    X'86D3D2D4F1D4E24268DDB3F81FDA836E'  D0-D3\n         DC    X'81BE16CDF6B9265B6FB077E118B74777'  D4-D7\n         DC    X'88085AE6FF0F6A7066063BCA11010B5C'  D8-DB\n         DC    X'8F659EFFF862AE69616BFFD3166CCF45'  DC-DF\n         DC    X'A00AE278D70DD2EE4E0483543903B3C2'  E0-E3\n         DC    X'A7672661D06016F74969474D3E6E77DB'  E4-E7\n         DC    X'AED16A4AD9D65ADC40DF0B6637D83BF0'  E8-EB\n         DC    X'A9BCAE53DEBB9EC547B2CF7F30B5FFE9'  EC-EF\n         DC    X'BDBDF21CCABAC28A53B3933024B4A3A6'  F0-F3\n         DC    X'BAD03605CDD7069354DE572923D967BF'  F4-F7\n         DC    X'B3667A2EC4614AB85D681B022A6F2B94'  F8-FB\n         DC    X'B40BBE37C30C8EA15A05DF1B2D02EF8D'  FC-FF\n*\n*   THESE DEFINITIONS CAN BE UNCOMMENTED TO SET UP TEST DATA AND THE\n*         TEST DATA CAN BE CHANGED FOR TESTING PURPOSES.  TO TEST\n*         WITH THE TEST DATA CHANGE '*Q' IN POSITION 1 TO 'Q' IN THIS\n*         ENTIRE MEMBER AND THE TEST DATA CRC WILL BHE CALCULATED.\n*         TO MODIFY THE TEST DATA, SIMPLY CHANGE THE DEFINITIONS\n*         BELOW.  WHEN TESTING, THIS PROGRAM CAN BE RUN FROM THE\n*         COMMAND LINE AND WILL DISPLAY THE CALCULATED CRC.\n*\n*QBUFFLEN DC    AL4(QBUFFEND-QBUFFER)\n*\n*QBUFFER  DC    X'80'\n*QA       DC    1000000X'00'\n*QB       DC    X'FF'\n*QBUFFEND EQU   *\n*\n         END   CRCREXX             END OF PROG.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT658/FILE658.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT658", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}