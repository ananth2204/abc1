{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011516000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 764218, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE214.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 764218, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 764218, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE214.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\r\\x04'", "DS1TRBAL": "b'\\x9a\\xdc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x90\\x00\\r\\x01\\x91\\x00\\x0b\\x00\\x0e'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x12_\\x00\\x94\\x12_\\x17\\x06\\x01\\xf6\\x01\\xf4\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-05-05T00:00:00", "modifydate": "1994-05-05T17:06:00", "lines": 502, "newlines": 500, "modlines": 0, "user": "SBGCSC"}, "text": "\n\n\n\n\n\n                           The COBOL-II POINTER\n\n\n\n\n\n                                    by\n\n\n                                Fred Schuff\n\n                           (Wayne, Pennsylvania)\n\n\n\n\n\n\n\n\n\n\nPointers, more commonly referred to as addresses (or address constants)\non the mainframe, provide access to data areas and structures which were\npreviously inaccessable in the predominant, mainframe HLL (High Level\nLanguage), COBOL.  The ability to manipulate data addresses, which is\nprovided through pointers, is a very powerful feature.  Pointers allow\nflexible mapping of data structures which are comprised of multiple,\nsmaller areas assembled in various configurations.  This type of data\narea is becomming more common as multi-platform systems communicate more\nand more and they have always existed in system (MVS, JES, etc.) data\nareas.  Other HLLs, like PL/I, have supported pointers for a number of\nyears.  The \"C\" language is heavily based on pointers and COBOL\nimplementations on PC platforms support pointers as well.\n\nComposite data areas can be dynamically addressed using standard\nfixed-length data layout segments using pointers to map portions of\nthese data areas to their actual, fixed-length data structure segments.\n\nFixed-length data structures are no longer the only ones encountered.\nVariable length data areas with imbedded offsets and lengths are\nbecoming more prevalent as systems interact with other systems.  Many\nIBM system control blocks are structured to contain both data values and\nthe addresses of other data structures.  Each of these data types are\noften comprised of many component segments which can appear in various\nsequences and thus at various locations within the overall structure.\n\n               Structure #1                        Structure #2\n   Address+---------------------+     Address+-----------------------+\n     500  |    Section - 1      |       500  |                       |\n     600  |---------------------|            |     Section - 2       |\n          |                     |       700  |-----------------------|\n          |    Section - 2      |            |     Section - 3       |\n     800  |---------------------|       820  |-----------------------|\n          |    Section - 3      |            |     Section - 1       |\n     920  +---------------------+       920  +-----------------------+\n\nThere is a wealth of information available in system data areas.  For\nexample, under MVS, the JOBNAME and STEPNAME of the executing JOB as\nwell as the USERID associated with the JOB are all available through\nsystem (MVS) data areas.  File names (DDNAMEs) which have been allocated\nin a step along with the dataset names (DSNAMEs) are also available.\nThis information is very useful when tracking and reporting usage of\nprograms, systems and resources as well as for logging problem\nconditions.\n\n\nPOINTERS and VALUES\n\nIt is important to understand pointers.  Data has both a value and a\nlocation where it is stored in memory.  To access data, it must be\npossible to obtain either the data value or the data address.\n\n        Memory             Memory\n        Address           Contents         Comments/Description\n\n          100                500 >-+        Address of Field \"A\"\n                                   |\n    +------------------------------+\n    |\n    +---> 500                  5            Field \"A\" with a value of 5\n          504                800 >-+        Address of Field \"B\"\n                                   |\n    +------------------------------+\n    |\n    +---> 800                  7            Field \"B\" with a value of 7\n\n\n   +------------------------------------------------------------------+\n   |  Data Element A      |     Address = 500      |     Value = 5    |\n   |----------------------+------------------------+------------------|\n   |  Data Element B      |     Address = 800      |     Value = 7    |\n   +------------------------------------------------------------------+\n\nActually, it is impossible to differentiate data from addresses of data\nin memory.  Each value depends upon the context in which that value in\nmemory is being used.  In the example, the value of 800 at location 504\nis an address because the program which stored that value \"meant\" it to\nbe an address.  In another program, the value of 800 at location 504\ncould have meant a data value.\n\n\nThe COBOL-II POINTER\n\nCOBOL-II POINTER variables provide the ability to dynamically address\ndata areas.  POINTER manipulation statements reset the address of the\nphysical data area location as a program executes.  This simple facility\ngreatly enhances the power of programming in the COBOL language.\n\nThe basic POINTER syntax will establish the address of a data area via\nthe SET verb and the \"ADDRESS OF\" clause.  COBOL-II implements the\nPOINTER type variable as a binary fullword, PIC S9(9) USAGE COMP.  That\nis, POINTERs are addresses which occupy a fullword.  This is the\nstandard MVS address constant.  MVS addresses are either 24-bit or\n31-bit binary values which occupy the low-order (rightmost) 24 or 31\nbits of a fullword.  This is exactly how the POINTER is treated in\nCOBOL-II.  Therefore, the POINTER variables can address any data\nstructure.\n\n   +---------------------------------------------------------------+\n   | MEMORY:  WORD=4 BYTES  |  BYTE-0   BYTE-1   BYTE-2   BYTE-3   |\n   |          or BITS 0-3   | 00000000 00111111 11112222 22222233  |\n   |                  0-1   | 01234567 89012345 67890123 45678901  |\n   +------------------------+--------------------------------------+\n   | ADDRESS:     24-BIT    | -------- XXXXXXXX XXXXXXXX XXXXXXXX  |\n   |              31-BIT    | -XXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX  |\n   +---------------------------------------------------------------+\n\nThe basic limitation in the COBOL-II implementation is that the value of\na POINTER can not be readily set to any value; it must be set to the\naddress of a data element (level 01 or 77) named in the LINKAGE Section.\nIt is often desirable to address an area which is not passed through the\nLINKAGE Section.  This includes MVS control blocks and data area in\nWORKING-STORAGE.  Similarly, it precludes using WORKING-STORAGE\nstructures to compute offsets or lengths of data segments.\n\n\nSOME EXAMPLES\n\nThe first use of pointers is to address composite data structures.  This\nrequires a slightly modified definition of the structure for each part\nof the data array.  Referring back to the data structures shown\npreviously which were comprised of the 3- segments, the coding to\naddress these areas is shown in the following code segment; assume the\nfirst character of each area is the section number (i.e., \"1\", \"2\" or\n\"3\").\n\nThe address of the next area is assigned with the SET pointer TO ADDRESS\nOF data-field syntax.  This will place the address of the \"data-field\"\nin the pointer variable.  This is done for the first byte of the next\narea.  The second part of the process is then to assign that address\n(pointer) to the proper data structure.  This is accomplished by using\nthe type code.  If there is no type code, then the determination of the\nproper data section to be addressed must be dependent upon some other\npiece of information.\n\n     WORKING-STORAGE SECTION.\n\n     01   PTR            USAGE POINTER.\n     01   WS-TYPE        PIC X(1).\n\n     LINKAGE SECTION.\n     01   SECTION-0.\n          05  SECTION-0-NEXT       PIC X(1).\n     01   SECTION-1.\n          05  SECTION-1-DATA       PIC X(100).\n          05  SECTION-1-NEXT       PIC X(1).\n     01   SECTION-2.\n          05  SECTION-2-DATA       PIC X(200).\n          05  SECTION-2-NEXT       PIC X(1).\n     01   SECTION-3.\n          05  SECTION-3-DATA       PIC X(120).\n          05  SECTION-3-NEXT       PIC X(1).\n\n      PROCEDURE DIVISION USING SECTION-0.\n\n     *    ******************************************************\n     *    * GET THE INITIAL SECTION ADDRESS AND ASSIGN IT TO   *\n     *    *  THE PROPER AREA STRUCTURE                         *\n     *    ******************************************************\n          MOVE SECTION-0-NEXT TO WS-TYPE.\n          SET PTR TO ADDRESS OF SECTION-0-NEXT.\n          PERFORM 8888-SWAP.\n     *    ******************************************************\n     *    *  PROCESS THE DATA BY SECTION                       *\n     *    ******************************************************\n      1111-PROCESS.\n          EVALUATE WS-TYPE\n               WHEN '1'\n                    process Section-1 data\n                    MOVE SECTION-1-NEXT TO WS-TYPE\n                    SET PTR TO ADDRESS OF SECTION-1-NEXT\n               WHEN '2'\n                    process Section-2 data\n                    MOVE SECTION-2-NEXT TO WS-TYPE\n                    SET PTR TO ADDRESS OF SECTION-2-NEXT\n               WHEN '3'\n                    process Section-3 data\n                    MOVE SECTION-3-NEXT TO WS-TYPE\n                    SET PTR TO ADDRESS OF SECTION-3-NEXT\n               WHEN OTHER\n                    GOBACK\n          END-EVALUATE.\n          PERFORM 8888-SWAP.\n          GO TO 1111-PROCESS.\n\n     *    ******************************************************\n     *    * PICK UP THE NEXT AREA ADDRESS BASED ON 'TYPE' CODE *\n     *    ******************************************************\n      8888-SWAP.\n          EVALUATE WS-TYPE\n               WHEN '1'\n                    SET ADDRESS OF SECTION-1 TO PTR\n               WHEN '2'\n                    SET ADDRESS OF SECTION-2 TO PTR\n               WHEN '3'\n                    SET ADDRESS OF SECTION-3 TO PTR\n          END-EVALUATE.\n\nPointers are also used to address data areas which contain system (MVS,\nJES, etc.) information.  Consider a simple requirement to display the\nname of the JOB which is being executed as part of the messages the job\ndisplays.  The JOBNAME (8- characters) is available through the\nfollowing structure of MVS data areas (or control blocks):\n\n     CVT => TCB-WORDS => CURRENT-TCB => TIOT (contains JOBNAME)\n\n      where:   CVT            = Communications Vector Table\n          TCB-WORDS      = Pointers to the previous and current TCBs\n          TCB            = Task Control Block\n          TIOT                = Task Input Output Table\n           =>                 = contains the address of\n\nTo access the field JOBNAME, the addressing required is fairly simple to\naccomplish in assembler language:\n\n     L    R1,16(R0)           A(CVT) @ Location X'10' (16 decimal)\n     L    R1,0(R1)            A(TCB-WORDS) @ CVT+0\n     L    R1,4(R1)            A(CURR-TCB) @ TCB-WORDS+4\n     L    R1,12(R1)           A(TIOT) @ CURR-TCB+X'C' (12 decimal)\n     MVC  JOBNAME(8),0(R1)         JOBNAME @ TIOT+0\n\nIN COBOL-II the same result can be obtained as follows (after defining\nthe data areas which are required, like the TIOT):\n\n      WORKING-STORAGE SECTION.\n      01  WORK-AREA.\n          05  PTR                  POINTER.\n          05  WORD  REDEFINES PTR       PIC S9(9) COMP.\n          05  WS-JOBNAME           PIC X(8).\n\n      LINKAGE SECTION.\n      01  WORDS.\n          05  W   OCCURS 100 TIMES PIC S9(9) COMP.\n\n      01  TIOT-TIOT.\n     *    TIOT (TASK INPUT OUTPUT TABLE) DEFINITION\n          05  TIOT-TIOCNJOB             PIC X(08).\n          05  TIOT-TIOCSTEP.\n              10  TIOT-TIOJSTEP         PIC X(08).\n              10  FILLER           PIC X(08).\n          05  FILLER  REDEFINES TIOT-TIOCSTEP.\n              10  TIOT-TIOPSTEP         PIC X(08).\n              10  TIOT-TIOPJSTP         PIC X(08).\n          05  TIOT-TIOENTRY-NO-1        PIC X(01).\n      01  TIOT-TIOENTRY.\n     *    TIOT DD-ENTRY\n          05  TIOT-TIOELNGH             PIC X(01).\n          05  TIOT-TIOESTTA             PIC X(01).\n          05  TIOT-TIOERLOC.\n              10  TIOT-TIOEWTCT         PIC X(01).\n              10  TIOT-TIOELINK         PIC X(01).\n          05  TIOT-TIOEDDNM             PIC X(08).\n          05  TIOT-TIOEJFCB             PIC X(03).\n          05  TIOT-TIOESTTC             PIC X(01).\n          05  TIOT-TIOESTTB             PIC X(01).\n          05  TIOT-TIOEFSRT             PIC X(03).\n     *    TIOT POOL ENTRY\n          05  TIOT-POOLSTAR             PIC X(01).\n          05  TIOT-TIOPNSLT             PIC X(01).\n          05  FILLER                    PIC X(01).\n          05  TIOT-TIOPNSRT             PIC X(01).\n          05  TIOT-TIOPPOOL             PIC X(08).\n          05  TIOT-TIOPSTTB             PIC X(01).\n          05  TIOT-TIOPSLOT             PIC X(03).\n          05  TIOT-TIOTFEND             PIC X(04).\n     ****************END-OF-TIOT**********************\n\n     PROCEDURE DIVISION.\n\n          MOVE +16 TO WORD.\n          SET ADDRESS OF W TO PTR.      (1)\n          MOVE W(1) TO WORD.\n          SET ADDRESS OF W TO PTR.      (2)\n          MOVE W(1) TO WORD.\n          SET ADDRESS OF W TO PTR.      (3)\n          MOVE W(2) TO WORD.\n          SET ADDRESS OF W TO PTR.      (4)\n          MOVE W(4) TO WORD.\n          SET ADDRESS OF TIOT-TIOT TO PTR.\n          MOVE TIOT-TIOCNJOB TO WS-JOBNAME.\n\nThe COBOL-II implementation presents two obstacles which the above\nexample overcomes.  The first is that pointers can not be set to just\nany value.  The trick is to REDEFINE a POINTER variable as a fullword\nbinary value (PIC S9(9) COMP) so that COBOL can MOVE values to/from this\ndata area which overlays a pointer.  Those data values to be moved are\nactually the addresses of other data areas.  In the example above, a\nbinary fullword field, WORD, REDEFINES the pointer field, PTR.  This\nallows values (i.e. +16, W(1), etc.) to be MOVEd to the pointer by\nMOVEing them to the binary field.  Additionally, the binary fields can\nbe used in arithmetic statements and COMPUTEs to change or alter the\nvalue of the POINTER value.\n\nThe second point to remember is that each time the value of the pointer\nvariable is changed by altering the binary field which REDEFINES that\npointer (WORD), the SET statement must be re-executed.  This is required\neven when the SET statement is identical (see statements (1), (2), (3)\nand (4) in the above example.)  COBOL-II can handle \"chained lists of\npointers\", if the individual fields in the data areas are defined as\nUSAGE POINTER.  In some cases, this would still require a REDEFINES for\nfullword used as a 24-bit address as both a POINTER and a character\nfields to access the high-order byte or where calculations were required\nwhen using the pointer.\n\n     01   PTR-FIELD.\n          05   PTR                 POINTER.\n          05   FILLER  REDEFINES PTR.\n               10   FIRST-BYTE          PIC X(01).\n               10   OTHER-BYTES         PIC X(03).\n\nAnother example accesses the USERID.  This reqquires a slightly more\ncomplex data chain:\n\n  CVT => TCB-WORDS => CURRENT-ASCB => ASXB => ACEE (contains USERID)\n\n      where:   ASCB                = Address Space Control Block\n          ASXB           = Address Space Extension Block\n          ACEE           = Accessor Environment Element\n\nIn assembler language this is accessed as follows:\n\n     L    R1,16(R0)           A(CVT) @ Location X'10' (16 decimal)\n     L    R1,0(R1)            A(TCB-WORDS) @ CVT+0\n     L    R1,12(R1)           A(CURR-ASCB) @ TCB-WORDS+X'C' (12 decimal)\n     L    R1,108(R1)          A(ASXB) @ CURR-ASCB+X'6C' (108 decimal)\n     L    R1,200(R1)          A(ACEE) @ ASXB+X'C8' (200 decimal)\n     MVC  USERID(8),21(R1)    USERID @ ACEE+X'15' (21 decimal)\n\nIn COBOL-II, the code is as follows:\n\n      WORKING-STORAGE SECTION.\n      01  WORK-AREA.\n          05  PTR                  POINTER.\n          05  WORD  REDEFINES PTR       PIC S9(9) COMP.\n          05  WS-USERID            PIC X(8).\n\n      LINKAGE SECTION.\n      01  WORDS.\n          05   W   OCCURS 100 TIMES     PIC S9(9) COMP.\n\n      01  ACEE.\n          05  FILLER                    PIC X(21).\n          05  ACEE-USERID               PIC X(8).\n          05  FILLER                    PIC X(..).\n\n     PROCEDURE DIVISION.\n\n          MOVE +16 TO WORD.\n          SET ADDRESS OF W TO PTR.\n          MOVE W(1) TO WORD.\n          SET ADDRESS OF W TO PTR.\n          MOVE W(1) TO WORD.\n          SET ADDRESS OF W TO PTR.\n          MOVE W(4) TO WORD.\n          SET ADDRESS OF W TO PTR.\n          MOVE W(28) TO WORD.\n          SET ADDRESS OF W TO PTR.\n          MOVE W(51) TO WORD.\n          SET ADDRESS OF ACEE TO PTR.\n          MOVE ACEE-USERID TO WS-USERID.\n\n\nANOTHER EXAMPLE\n\nAnother technique using COBOL-II POINTERs demonstrates how to list the\nfiles allocated to a job.  Using the TIOT (Task Input Output Table) from\nthe first example, the DDNAMEs can be located.   Re-defining the pointer\nstorage as a binary data item permits the pointer's value to be part of\na calculation.  Within the TIOT data structure, the length of each fixed\nformat file entry is defined by the length byte (the first byte) of the\nentry itself.  The next file entry in the TIOT is located by adding the\nlength to the pointer value.  Note how the single byte length, a data\ntype which is not supported in COBOL-II, can be moved into a COBOL-II,\nbinary format number field and then used is computational statement.\n\nThe COBOL-II code fragments are shown below:\n\n     WORKING-STORAGE SECTION.\n\n     05   WS-TIOTDD                USAGE POINTER.\n     05   WS-TIODD-ADDR REDEFINES WS-TIOT\n                                   PIC S9(9) COMP.\n     05   WS-WORD                  PIC S9(9) COMP.\n     05   FILLER REDEFINES WS-WORD.\n          10  FILLER               PIC X(03).\n          10  WS-BYTE              PIC X(01).\n\n     PROCEDURE DIVISION.\n\n          SET ADDRESS OF TIOT-TIOT     TO  WS-TIOT.\n          SET WS-TIODD TO ADDRESS      OF  TIOT-TIOENTRY-NO-1.\n          SET ADDRESS OF TIOT-TIOENTRY TO  WS-TIODD.\n\n     0999-TIOTDD.\n          MOVE ZERO TO WS-WORD\n          MOVE TIOT-TIOELNGH TO WS-BYTE.\n          IF WS-WORD NOT EQUAL ZERO\n               DISPLAY 'DDNAME = ' TIOT-TIOEDDNM\n               ADD WS-WORD TO WS-TIODD-ADDR\n               SET ADDRESS OF TIOT-TIOENTRY TO WS-TIODD\n               GO TO 0999-TIOTDD\n          END-IF.\n\n\nTRYING TO COUNT PARAMETERS IN A PARAMETER-LIST\n\nOne thing that the COBOL-II pointer implementation does not provide is\nthe ability to count the number of parameters passed to a COBOL\nsubprogram (or subroutine.) This would eliminate many ABENDs which occur\nwhen a parameter list is coded improperly in the CALLing program.  A\nstandard COBOL-II subprogram CALL is:\n\n   CALL 'program-name' USING parameter-1 parameter-2 ... parameter-j.\n\nStandard program linkage will construct a parameter list containing the\naddresses of the parameters and then pass them in one contiguous area\nwhich is pointer to by Register-1.  The last parameter address is\n\"flagged\" with the high-order bit being set to '1' (the X'80000000\nvalue).  Thus, a list would look as follows:\n\n  Register-1 =>     A(parameter-1)           parameter-list + 0\n               A(parameter-2)           parameter-list + 4\n                    .                        .\n               A(parameter-i)           parameter-list + 4*(i-1)\n                    .                        .\n               A(parameter-j)+X'80000000'    parameter-list + 4*j\n\nA CALL(ed) COBOL-II subprogram references the parameter list to access\nthe addresses of the parameters which are passed.  The address of\nparameter-i is fetched from the list at an offset of +4*(i-1).  There is\nno logic in the generated COBOL-II code to determine the end of the\nlist.  Therefore, parameter addresses are merely fetched from the\n4-bytes in the maximum length parameter list which would have contained\nthe address, if it were passed.  Therefore, using the following sequence\nwill not work:\n\n     LINKAGE SECTION.\n     01  PARAMETER-NUMBER-01       PIC .....\n     01  PARAMETER-NUMBER-02       PIC .....\n          .\n     01  PARAMETER-NUMBER-10       PIC .....\n\n     PROCEDURE DIVISION.\n\n         SET POINTER-10 TO ADDRESS OF PARAMETER-NUMBER-10.\n         IF  POINTER-10 IS NULL\n             logic if no 10th parameter passed\n         END-IF.\n\n\nA FINAL NOTE\n\nThe COBOL-II POINTER provides a powerful method to address data which\nwas difficult, or impossible, to access previously with COBOL.  POINTERs\nare both powerful and dangerous because they can defeat the protections\nbuilt into COBOL by having to name all variables to be accessed.\n\nThe addition of pointers should be looked upon as a better tool to\nassist in providing systems which are more reliable, informative and\nself contained.  It merely requires the application of the POINTER\nfeature of COBOL-II in conjunction with some knowledge of MVS, JES and\ndata structures, to provide some rather impressive capabilities to the\nstandard business processing environment.\n\n\nNote:     COBOL-II structures for a number of MVS control blocks can be\n          obtained by sending a self-addressed, stamped envelope with a\n          3.5\" diskette (720KB or 1.44MB) or a 5.25\" diskette (1.2MB)\n          to the author.  The control block definitions include the\n          ACEE, ASCB, ASVT, ASXB, CDE, CVT, DEB, PDSDE, RB, TCB, TIOT\n          (shown above) and UCB.\n\n\n\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$MORE": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12_\\x17'\\x00\\x16\\x00\\x07\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-05T17:27:00", "lines": 22, "newlines": 7, "modlines": 0, "user": "SBGCSC"}, "text": "                This package was contributed by:\n\n                         Fred Schuff\n                         15 Chateau Circle\n                         Wayne, PA  19087\n                         (610) 647-5306\n\n        Documentation for this package can be found in member\n        $$$DOC in this file.  That is an article concerning the\n        new POINTER facility in COBOL II which allows access to\n        control blocks on the MVS system through the COBOL II\n        language.  Maps for a good number of MVS control blocks\n        have been made in COBOL by the author, and these have\n        been contributed to this file on the CBT tape for the\n        convenience of anyone trying to use the new facility.\n\n        The member MVS@JCL is a special member in that it contains\n        JCL to assemble the supplied DSECTs using Assembler\n        language.  This is for the purpose of revising the COBOL\n        maps, just in case IBM decides to change them.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MVS@ACB": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x01\\x1a\\x01\\x1a\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 282, "newlines": 282, "modlines": 0, "user": "SCHUFF"}, "text": "      *ACB*************************************************************\n      *                                                               *\n      *    ACB = ACCESS METHOS CONTROL BLOCK (VSAM DATASETS)          *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 ACB-ACB.\n       05  ACB-ACBID     PIC X(1).\n      *             ACB IDENTIFIER IDENTIFIER VALUE - X'A0'\n       05  ACB-ACBSTYP   PIC X(1).\n      *             ACB SUBTYPE\n      *             X'10'  VSAM SUBTYPE\n      *             X'11'  VRP SUBTYPE\n      *             X'20'  VTAM SUBTYPE\n      *             X'40'  3540 SUBTYPE\n       05  ACB-ACBLENG.\n      *             ACB LENGTH IN BYTES\n      *10  ACB-ACBLEN2.\n      *             ALTERNATE NAME FOR ACBLENG\n       10  ACB-ACBLENG2  PIC S9(4) COMP.\n      *             ALTERNATE NAME FOR ACBLENG\n       05  ACB-ACBAMBL.\n      *             AMB LIST ADDRESS(VSAM)\n      *10  ACB-ACBJWA.\n      *             JES WORK AREA ADDRESS\n      *10  ACB-ACBIBCT.\n      *             INTERFACE BUFFER CONTROL TABLE (RTAM)\n       10  ACB-ACBAMWAP  PIC S9(9) COMP.\n      *             ACCESS METHOD WORKAREA POINTER\n       05  ACB-ACBINRTN  PIC S9(9) COMP.\n      *             DATA MANAGEMENT INTERFACE ROUTINE\n      *             ADDRESS; VTAM REQUEST PROCESSOR ADDRESS\n       05  ACB-ACBMACRF.\n      *             MACRF PROCESSING OPTIONS\n       10  ACB-ACBMACR1  PIC X(1).\n      *             MACRF FIRST BYTE\n      *             X'80' KEYED PROCESSING VIA INDEX\n      *             X'40' ADDRESSED PROCESSING WITHOUT INDEX\n      *             X'20' PROCESSING BY CONTROL INTERVAL\n      *             X'10' SEQUENTIAL PROCESSING\n      *             X'08' DIRECT PROCESSING\n      *             X'04' INPUT PROCESSING USING GET OR READ\n      *             X'02' OUTPUT PROCESSING USING PUT OR WRITE\n      *             X'01' USER CONTROLS BUFFERS -\n      *             VALID ONLY WITH CONTROL INTERVAL PROCESSING\n       10  ACB-ACBMACR2  PIC X(1).\n      *             MACRF SECOND BYTE\n      *             X'80' DEFINED ONLY WHEN\n      *             OUTPUT AND ACBRECAF IS\n      *             ON. THE SYSTEM IS TO\n      *             ENSURE THAT THE LOGICAL\n      *             RECORD LENGTH WILL BE\n      *             THE SAME WHEN THE DATA\n      *             IS READ (NO BLANK\n      *             TRUNCATION). BIT NOT\n      *             DEFINED FOR INPUT.\n      *             X'40' THE CONTROL CHARACTER\n      *             TYPE IS INDICATED IN\n      *             RPLOPT4 AFTER EACH GET.\n      *             NOT DEFINED FOR OUTPUT.\n      *             X'20' ELIGIBLE FOR BACKUP\n      *             WHILE OPEN\n      *             X'10' SKIP SEQUENTIAL\n      *             PROCESSING\n      *             X'08' LOGON REQUESTS TO AN\n      *             APPLICATION WILL BE\n      *             REJECTED(VTAM)\n      *             X'04' SET DATA SET TO\n      *             EMPTY STATE\n      *             X'02' BASIC SUBTASK SHARED\n      *             CONTROL BLOCK CONNECTION\n      *             ON COMMON DSNAMES\n      *             X'01' ENTITY TO BE PROCESSED\n      *             IS AIX PATH SPECIFIED IN\n      *             IN THE GIVEN DDNAME\n       05  ACB-ACBBSTNO  PIC X(1).\n      *             NUMBER OF CONCURRENT STRINGS FOR AIX PATH\n       05  ACB-ACBSTRNO  PIC X(1).\n      *             NUMBER OF CONCURRENT REQUEST STRINGS\n       05  ACB-ACBBUFND  PIC S9(4) COMP.\n      *             NUMBER OF DATA RECORD BUFFERS\n       05  ACB-ACBBUFNI  PIC S9(4) COMP.\n      *             NUMBER OF INDEX RECORD BUFFERS\n       05  ACB-ACBBUFPL.\n      *             JES BUFFER POOL\n      *05  ACB-ACBLFB.\n      *             RESERVED NAME\n       10  ACB-ACBMACR3  PIC X(1).\n      *             MACRF THIRD BYTE\n      *             X'80' NO EXCL CTL WAIT\n      *             X'40' LOCAL SHARED RESOURCE\n      *             X'20' GLOBAL SHARED RESOURCE\n      *             X'10' IMPROVED CONTROL INTERVAL PROCESSING\n      *             X'08' DEFER WRITES\n      *             X'04' SEQUENTIAL INSERT STRATEGY\n      *             X'02' NFX=0/CFX=1\n      *             X'01' 31-BIT BUFFER ADDRESS  SEE ACBR31B\n       10  ACB-ACBSHRP   PIC X(1).\n      *             SHARED RESOURCE POOL ID NUMBER\n       10  ACB-ACBJBUF   PIC S9(4) COMP.\n      *             NUMBER OF JOURNAL BUFFERS(VSAM)\n       05  ACB-ACBRECFM  PIC X(1).\n      *             RECORD FORMAT\n      *             X'80' JES FORMAT\n       05  ACB-ACBCCTYP  PIC X(1).\n      *             CONTROL CHARACTER TYPE\n      *             X'C0' 3800 TRANSLATE TABLE+8 (VS1)\n      *             X'04' ASA CONTROL CHARACTERS\n      *             X'02' MACHINE CONTROL CHARACTERS\n      *             X'01' DATA STREAM. NO CONTROL CHARACTERS.\n       05  ACB-ACBOPT.\n      *             NON-USER OPTIONS\n      *05  ACB-ACBDSORG.\n      *             MATCH ACBDORGA WITH DCBDSORG\n       10  ACB-ACBDSOR1  PIC X(1).\n      *             DSORG FIRST BYTE\n      *             CHECKPOINT/RESTART OPTIONS\n      *             X'80' NO CHECK BY RESTART\n      *             FOR MODIFICATIONS SINCE\n      *             LAST CHECKPOINT\n      *             X'40' DATA ADDED SINCE\n      *             LAST CHECKPOINT NOT\n      *             ERASED BY RESTART AND\n      *             NO REPOSITION TO LAST\n      *             CHECKPOINT TAKES PLACE\n      *             X'20' DEVICE INDICATR\n      *             X'20' 3800 CONTROL\n      *             CHAR PRESENT\n       10  ACB-ACBDSOR2  PIC X(1).\n      *             DSORG SECOND BYTE\n      *             X'08' ACB INDICATOR\n       05  ACB-ACBMSGAR  PIC S9(9) COMP.\n      *             MSG AREA PTR\n       05  ACB-ACBPASSW  PIC S9(9) COMP.\n      *             PASSWORD ADDRESS\n       05  ACB-ACBEXLST.\n      *             USER EXIT LIST ADDRESS\n       10  ACB-ACBUEL    PIC S9(9) COMP.\n      *             ALTERNATE NAME FOR\n      *             ACBEXLST\n      *             BEFORE ACB IS OPENED\n      *             (FOR VTAM, ACBDDNM IS INITIALIZED TO\n      *             X'FF00000000000000')\n       05  ACB-ACBDDNM   PIC X(8).\n      *             DDNAME - MUST BE THE\n      *             SAME AS THE NAME FIELD\n      *             ON THE DD STATEMENT\n      *             DEFINING THE DATA SET\n      *             ASSOCIATED WITH THIS ACB\n      *             AFTER ACB IS OPENED\n      *             ORG ACBDDNM\n       05  ACB-ACBMORE   REDEFINES  ACB-ACBDDNM.\n       10  ACB-ACBTIOT   PIC S9(4) COMP.\n      *             OFFSET FROM TIOT ORIGIN\n      *             TO THE TIOELNGH FIELD IN\n      *             THE TIOT ENTRY FOR THE\n      *             DD STATEMENT FOR THIS ACB\n       10  ACB-ACBINFL   PIC X(1).\n      *             CONTENTS AND MEANING\n      *             ARE THE SAME AS\n      *             ACBINFLG (BEFORE OPEN)\n       10  ACB-ACBAM.\n      *             ALTERNATE NAME FOR\n      *             ACBAMETH\n       15  ACB-ACBAMETH  PIC X(1).\n      *             ACCESS METHOD TYPE\n      *             X'60'  VTAM\n      *             X'41'  SUBSYSTEMS\n      *             X'31'  TCAM\n      *             X'23'  JES/RCI\n      *             X'22'  JES/RTAM\n      *             X'21'  JES/JAM\n      *             X'11'  VSAM\n       15  ACB-ACBERFL   PIC X(1).\n      *             FOR JES, CONTENTS AND\n      *             MEANING ARE THE SAME\n      *             AS ACBERFLG (BEFORE\n      *             OPEN) - NOT USED BY\n      *             VSAM/VTAM\n       15  ACB-ACBDEB    PIC X(3).\n      *             DEB ADDRESS\n      *             NOT MOVED BY OPEN\n       05  ACB-ACBOFLGS  PIC X(1).\n      *             OPEN / CLOSE FLAGS\n      *             X'80' 31-BIT BUFR REQUEST\n      *             X'40' 31-BIT CB REQUEST\n      *             X'20' EOV CONCATENATION\n      *             X'10' THE ACB IS OPEN\n      *             X'08' NO FURTHER REQUESTS ARE\n      *             POSSIBLE AGAINST THIS ACB\n      *             X'02' USER EXIT FLAG - SET TO\n      *             0 BY AN I/O SUPPORT\n      *             WHEN A USER EXIT TAKEN;\n      *             SET TO 1 ON RETURN\n      *             X'01' OPEN/CLOSE IN CONTROL -\n      *             THE ACB IS BEING\n      *             PROCESSED BY AN I/O\n      *             SUPPORT FUNCTION\n       05  ACB-ACBERFLG  PIC X(1).\n      *             ERROR FLAGS - FOR\n      *             VSAM/VTAM THIS FIELD IS\n      *             NOT MOVED BY OPEN AND\n      *             ERROR FLAGS ARE\n      *             RETURNED HERE; FOR JES\n      *             THIS FIELD IS MOVED TO\n      *             ACBERFL BY OPEN\n      *             THE FOLLOWING CODES ARE COMMON TO ALL ACCESS\n      *             METHODS.\n      *             X'04'                THE ACB IS ALREADY OPEN\n      *             X'04'                THE ACB IS NOT OPEN\n       05  ACB-ACBINFLG.\n      *             INDICATOR FLAGS\n       10  ACB-ACBINFL1  PIC X(1).\n      *             FIRST IND FLAGS\n      *             X'40' JEPS IS USING THIS ACB\n      *             X'20' AN RQE IS HELD BY JAM\n      *             X'10' ACB FOR VSAM CATALOG\n      *             X'08' CATALOG CONTROL BLOCK\n      *             SYSTEM AREA\n      *             X'04' CATALOG CONTROL BLOCK\n      *             USER AREA\n      *             X'02' DATA SET BEING OPENED\n      *             IS SYS1.VVIC\n      *             X'02' OPEN AS SYSTEM DATA SET\n      *             X'01' BYPASS SECURITY ON OPEN\n      *             IF CALLER AUTH\n       10  ACB-ACBINFL2  PIC X(1).\n      *             2ND IND FLAGS\n      *             X'80' SUPPRESS OPEN WARNING\n      *             MSG AND IMPLICIT VERIFY\n      *             IF DATA SET NOT PROPERLY\n      *             CLOSED CONDITION IS\n      *             DETECTED\n      *             X'40' SUPPRESS CLOSE CATALOG\n      *             UPDATE OF THE OPEN\n      *             INDICATOR\n      *             X'20' OPEN WITH CONTROL BLOCKS\n      *             IN COMMON STORAGE AREA\n      *             X'10' CATX OPEN\n      *             X'08' CAS RESTART\n      *             X'04' IGNORE SHR DASD\n      *             X'03' SHARE OPTIONS\n      *             X'02' CROSS REG SHARE 2\n      *             X'01' CROSS REG SHARE 1\n      *             NOT MOVED BY OPEN\n       05  ACB-ACBUJFCB.\n      *             USER JFCB ADDRESS\n       10  ACB-ACBOPTN   PIC X(1).\n      *             JAM UCS INDICATOR\n       10  FILLER        PIC X(3).\n      *             RESERVED\n       05  ACB-ACBBUFSP  PIC S9(9) COMP.\n      *             VIRTUAL CORE AVAILABLE\n      *             FOR BUFFERS\n       05  ACB-ACBBLKSZ.\n      *             BLOCKSIZE\n       10  ACB-ACBMSGLN  PIC S9(4) COMP.\n      *             LNG OF MSG AREA\n       05  ACB-ACBLRECL  PIC S9(4) COMP.\n      *             LOGICAL RECORD LENGTH\n       05  ACB-ACBUAPTR  PIC S9(9) COMP.\n      *             USER WORKAREA ADDRESS;\n      *             CAXWA ADDRESS FOR\n      *             CATALOG OPEN\n       05  ACB-ACBCBMWA  PIC S9(9) COMP.\n      *             CONTROL BLOCK\n      *             MANIPULATION WORKAREA\n      *             ADDRESS\n       05  ACB-ACBAPID.\n      *             APPLICATION ID\n       10  ACB-ACBAMAX   PIC S9(9) COMP.\n      *\n      *    END OF ACB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@ACEE": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00\\xc3\\x00\\xc3\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 195, "newlines": 195, "modlines": 0, "user": "SCHUFF"}, "text": "      *ACEE************************************************************\n      *                                                               *\n      *      ACEE = ACCESSOR ENVIRONMENT ELEMENT                      *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n      *\n       01 ACEE-ACEE.\n       05  ACEE-ACEEACEE PIC X(4).\n      *             ACRONYM IN EBCDIC -ACEE-\n       05  ACEE-ACEECORE.\n      *             ACEE SUBPOOL AND LENGTH\n       10  ACEE-ACEESP   PIC X(1).\n      *             ACEE SUBPOOL NUMBER\n       10  ACEE-ACEELEN  PIC X(3).\n      *             LENGTH OF ACEE\n       05  ACEE-ACEEVRSN PIC X(1).\n      *             ACEE VERSION NUMBER\n      *             X'01' ACEE VERSION NUMBER = 1.\n      *             X'02' ACEE VERSION NUMBER = 2.\n      *             X'02' ACEE CURRENT VERSION NUMBER\n       05  FILLER        PIC X(3).\n      *             RESERVED\n       05  ACEE-ACEEIEP  PIC S9(9) COMP.\n      *             RESERVED FOR INSTALLATION.\n      *             IF USED, IT MUST POINT TO A\n      *             ONE BYTE SUBPOOL FOLLOWED BY\n      *             A THREE BYTE LENGTH.\n       05  ACEE-ACEEINST PIC S9(9) COMP.\n      *             ADDRESS OF INSTALLATION SUPPLIED\n      *             USER DATA - FROM USER ENTRY\n       05  ACEE-ACEEUSER.\n      *             USERID INFORMATION\n       10  ACEE-ACEEUSRL PIC X(1).\n      *             USERID LENGTH\n       10  ACEE-ACEEUSRI PIC X(8).\n      *             USERID OR *, IF NOT SUPPLIED AT RACINIT\n       05  ACEE-ACEEGRP.\n      *             GROUP NAME INFORMATION\n       10  ACEE-ACEEGRPL PIC X(1).\n      *             GROUP NAME LENGTH\n       10  ACEE-ACEEGRPN PIC X(8).\n      *             CONNECT GROUP NAME\n       05  ACEE-ACEEFLG1 PIC X(01).\n      *             USER FLAGS\n      *             X'80' 1 - SPECIAL ATTRIBUTE\n      *             X'40' 1 - AUTOMATIC DATA SECURITY\n      *             PROTECTION\n      *             X'20' 1 - OPERATIONS ATTRIBUTE\n      *             X'10' 1 - AUDITOR ATTRIBUTE\n      *             X'08' 1 - USER IS TO HAVE MOST RACF\n      *             FUNCTIONS LOGGED\n      *             X'02' 1 - USER IS A STARTED PROCEDURE\n      *             WITH THE PRIVILEGED ATTRIBUTE\n      *             X'01' 1 - RACF DEFINED USER\n       05  ACEE-ACEEFLG2 PIC X(01).\n      *             DEFAULT UNIVERSAL ACCESS\n      *             X'80' 1 - ALTER AUTORITY TO\n      *             RESOURCE\n      *             X'40' 1 - CONTROL AUTHORITY TO\n      *             RESOURCE\n      *             X'20' 1 - UPDATE AUTHORITY TO\n      *             RESOURCE\n      *             X'10' 1 - READ AUTHORITY TO\n      *             RESOURCE\n      *             X'08' RESERVED FOR COMPATIBILITY\n      *             X'01' 1 - NO AUTHORITY TO\n      *             RESOURCE\n       05  ACEE-ACEEFLG3 PIC X(01).\n      *             MISCELLANEOUS FLAGS\n      *             X'80' ACCESS LIST OF GROUP DS\n      *             TO CONTAIN\n      *             0 - USERID\n      *             1 - GROUP NAME AND USERID\n       05  ACEE-ACEEDATE PIC X(3).\n      *             DATE OF RACINIT\n       05  ACEE-ACEEPROC PIC X(8).\n      *             NAME OF STARTED PROC OR BLANKS\n      *             IF NOT A STARTED PROC\n       05  ACEE-ACEETRMP PIC S9(9) COMP.\n      *             ADDRESS OF TERMINAL RELATED\n      *             INFORMATION. ZERO FOR NON-\n      *             TERMINAL USERS\n       05  ACEE-ACEEFLG4 PIC X(2).\n      *             MISCELLANEOUS FLAGS 2\n      *             X'20' 1 - USER IS AUTHORIZED TO DEFINE\n      *             OTHER USERS\n      *             X'08' 1 - USER IS AUTHORIZED TO PROTECT\n      *             DASD VOLUMES\n      *             X'04' 1 - USER IS AUTHORIZED TO PROTECT\n      *             TAPE VOLUMES\n      *             X'02' 1 - USER IS AUTHORIZED TO PROTECT\n      *             TERMINALS\n       05  ACEE-ACEEAPLV PIC S9(9) COMP.\n      *             APPLICTAION LEVEL NUMBER\n       05  ACEE-ACEETRLV PIC S9(9) COMP.\n      *             TERMINAL LEVEL NUMBER\n       05  ACEE-ACEETRDA PIC S9(9) COMP.\n      *             ADDRESS OF INSTALLATION SUPPLIED\n      *             DATA FROM TERMINAL ENTRY\n       05  ACEE-ACEETRID PIC X(8).\n      *             TERMINAL ID\n       05  ACEE-ACEEAMP  PIC S9(9) COMP.\n      *             ADDRESS 1ST ANCHORED MODEL\n       05  ACEE-ACEECLTH PIC X(4).\n      *             USER CLASS AUTHORIZATIONS -\n      *             THESE BIT POSITIONS ARE MAPPED\n      *             BY THE CLASS DESCRIPTOR ENTRIES\n      *             ANCHORED OFF THE RACF CVT\n       05  ACEE-ACEECLCP PIC S9(9) COMP.\n      *             ANCHOR FOR INSTORAGE PROFILE\n      *             TREES BUILT BY THE RACLIST\n      *             FUNCTION\n       05  ACEE-ACEEAPTR PIC S9(9) COMP.\n      *             ADDRESS FIELD RESERVED FOR\n      *             APPLICATION USAGE\n       05  ACEE-ACEEAPLN PIC X(8).\n      *             NAME OF APPLICATION TO WHICH\n      *             USER IS CONNECTED OR BLANKS\n      *             IF NO APPLICATION SPECIFIED\n       05  ACEE-ACEEAPDA PIC S9(9) COMP.\n      *             ADDRESS INSTALLATION SUPPLIED\n      *             DATA FROM APPLICATION ENTRY\n       05  ACEE-ACEEUNAM PIC S9(9) COMP.\n      *             ADDRESS OF USER NAME STRING.\n      *             ZERO, IF NO NAME PRESENT.\n      *             IF PRESENT, THE FIRST BYTE IS\n      *             A LENGTH FIELD FOLLOWED BY THE\n      *             NAME STRING.\n       05  ACEE-ACEEMDLS PIC S9(9) COMP.\n      *             ADDRESS OF THE MODEL NAME\n      *             ARRAY. ZERO, IF ARRAY NOT\n      *             OBTAINED BY RACINIT.\n       05  ACEE-ACEECGRP PIC S9(9) COMP.\n      *             ADDRESS OF TABLE CONTAINING\n      *             THE LIST OF GROUPS THIS\n      *             USERID IS A MEMBER OF.\n       05  ACEE-ACEEGATA PIC S9(9) COMP.\n      *             ADDRESS OF THE GENERIC\n      *             ANCHOR TABLE\n       05  ACEE-ACEEFCGP PIC S9(9) COMP.\n      *             ADDRESS OF LIST OF GROUPS USER\n      *             IS A MEMBER OF, BUILT BY RACINIT,\n      *             USED BY FRACHECK, IT IS NOT\n      *             AUTOMATICALLY REFRESHED\n       05  ACEE-ACEEDSLP PIC S9(9) COMP.\n      *             ADDRESS OF THE LIST OF CATEGORIES\n      *             THIS USER IS ALLOWED TO ACCESS\n       05  ACEE-ACEECPRG PIC S9(9) COMP.\n      *             ADDRESS OF THE LIST OF CONTROLLED\n      *             PROGRAMS EXECUTED BY THIS USER\n       05  ACEE-ACEEPADS PIC S9(9) COMP.\n      *             ADDRESS OF THE LIST OF DATA SETS\n      *             ACCESSED BY CONTROLLED PROGRAMS\n      *             EXECUTED BY THIS USER\n       05  ACEE-ACEESLVL PIC X(1).\n      *             MAXIMUM SECURITY LEVEL ACCESSED\n      *             BY THIS USER\n       05  ACEE-ACEEFLG5 PIC X(1).\n      *             MISCELLANEOUS FLAGS\n      *             X'80' AMODE OF ACEE DATA AREAS\n      *             0 - 24 BIT MODE\n      *             1 - 31 BIT MODE\n       05  FILLER        PIC X(2).\n      *             RESERVED.\n       05  ACEE-ACEE3PTY PIC S9(9) COMP.\n      *             ADDRESS OF ACEE CREATED BY\n      *             THIRD PARTY RACHECK SVC\n      *             PROCESSING\n       05  ACEE-ACEEPLCL PIC S9(9) COMP.\n      *             POINTER TO EXTENDED CLASS\n      *             AUTHORIZATION MASK, OR 0\n       05  ACEE-ACEESUID PIC X(8).\n      *             SURROGATE USERID (AUDIT)\n       05  ACEE-ACEEOCOX PIC S9(9) COMP.\n      *             POINTER TO ACEX\n       05  ACEE-ACEEPTDS PIC S9(9) COMP.\n      *             POINTER TO FIRST TDS TABLE\n       05  FILLER        PIC X(4).\n      *             RESERVED THIS 4 BYTE SO ACEE\n      *             HAS MULTIPLE LENGTH OF DOUBLE\n      *             WORD. THIS ALLOWS FREEMAIN FOR\n      *             ACEX STARTING AT DOUBLE WORD\n      *             BOUNDRY\n       05  ACEE-ACEETOKP PIC S9(9) COMP.\n      *             POINTER TO UTOKEN\n      *\n      *        END OF ACEE\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@ASCB": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x02;\\x02;\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 571, "newlines": 571, "modlines": 0, "user": "SCHUFF"}, "text": "      *ASCB************************************************************\n      *                                                               *\n      *     ASCB = ADDRESS SPACE CONTROL BLOCK                        *\n      *                                                               *\n      *             ADDRESS SPACE INFORMATION CONTROL BLOCK           *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n\n       01 ASCB-ASCB.\n       05  ASCB-ASCBASCB PIC X(4).\n      *             ACRONYM IN EBCDIC -ASCB-\n       05  ASCB-ASCBFWDP PIC S9(9) COMP.\n      *             ADDRESS OF NEXT ASCB ON ASCB READY\n      *             QUEUE\n       05  ASCB-ASCBBWDP PIC S9(9) COMP.\n      *             ADDRESS OF PREVIOUS ASCB ON ASCB\n      *             READY QUEUE\n       05  ASCB-ASCBCMSF PIC S9(9) COMP.\n      *             ADDRESS OF NEXT ASCB ON CMS SUSPEND\n      *             QUEUE\n       05  ASCB-ASCBSUPC.\n      *             SUPERVISOR CELL FIELD\n       10  ASCB-ASCBSVRB PIC S9(9) COMP.\n      *             SVRB POOL ADDRESS.  THIS OFFSET\n      *             FIXED BY ARCHITECTURE.\n       10  ASCB-ASCBSYNC PIC S9(9) COMP.\n      *             COUNT USED TO SYNCHRONIZE SVRB POOL.\n      *             THIS OFFSET FIXED BY ARCHITECTURE.\n       05  ASCB-ASCBIOSP PIC S9(9) COMP.\n      *             POINTER TO IOS PURGE INTERFACE\n      *             CONTROL BLOCK (IPIB)\n       05  ASCB-ASCBTNEW PIC S9(9) COMP.\n      *             POINTER TO TCB FOR FIRST READY TASK\n      *             IN MEMORY\n       05  ASCB-ASCBCPUS PIC S9(9) COMP.\n      *             NUMBER OF CPU'S ACTIVE IN THIS\n      *             MEMORY\n       05  ASCB-ASCBASID PIC S9(4) COMP.\n      *             ADDRESS SPACE IDENTIFIER FOR THE\n      *             ASCB\n       05  ASCB-ASCBR026 PIC X(2).\n      *             RESERVED\n       05  ASCB-ASCBLL5  PIC X(01).\n      *             FLAGS.\n      *             X'20' - STAGE II EXIT EFECTOR HAS\n      *             SCHEDULED AN RQE OR IQE AND\n      *             STAGE III EXIT EFFECTOR\n      *             SHOULD BE INVOKED\n       05  ASCB-ASCBHLHI PIC X(1).\n      *             INDICATION OF SUSPEND LOCKS\n      *             HELD AT TASK SUSPENSION\n       05  ASCB-ASCBDPH.\n      *             HALFWORD DISPATCHING PRIORITY\n       10  ASCB-ASCBDPHI PIC X(1).\n      *             HIGH ORDER BYTE OF HALFWORD\n      *             DISPATCHING PRIORITY\n       10  ASCB-ASCBDP   PIC X(1).\n      *             DISPATCHING PRIORITY RANGE FROM 0-255\n       05  ASCB-ASCBTRQP.\n      *             ADDRESS OF THE NEXT ASCB ON THE\n      *             TRUE READY QUEUE\n       10  FILLER        PIC X(1).\n      *             BYTE 0 OF ASCBTRQP\n      *             X'80' - TRUE READY QUEUE LOCK BIT.\n       10  FILLER        PIC X(2).\n      *             BYTES 1 AND 2 OF ASCBTRQP\n       10  ASCB-ASCBTRQ3 PIC X(1).\n      *             BYTE 3 OF ASCBTRQP\n      *             X'01' - TRUE READY QUEUE DELETE BIT. IF\n      *             ON, AND ASCBTRQL IS ON, ASCB IS\n      *             OFF OF THE TRUE READY QUEUE.\n       05  ASCB-ASCBLDA  PIC S9(9) COMP.\n      *             POINTER TO LOCAL DATA AREA PART OF\n      *             LSQA FOR VSM\n       05  ASCB-ASCBRSMF PIC X(01).\n      *             RSM ADDRESS SPACE FLAGS\n      *             X'80' - SECOND LEVEL PREFERRED USER. THIS\n      *             OFFSET FIXED BY ARCHITECTURE.\n      *             X'40' - FIRST LEVEL PREFERRED USER\n      *             X'20' - SRM IN SYSEVENT TRANSWAP SHOULD NOT\n      *             SET ASCB2LPU BIT - HOWEVER IT MAY\n      *             ALREADY BE ON AND WILL STAY ON\n      *             X'10' - V=R ADDRESS SPACE\n       05  ASCB-ASCBR035 PIC X(2).\n      *             RESERVED.\n       05  ASCB-ASCBTRQI PIC X(1).\n      *             TRUE READY QUEUE INTERSECTION INDICATOR.\n      *             X'80' - INTERNAL DISPATCHER FLAG USED\n      *             TO INDICATE THE ADDRESS SPACE\n      *             SHOULD NOT BE DELETED FROM THE\n      *             TRUE READY QUEUE\n      *             X'40' - INTERNAL SRM INDICATOR USED\n      *             TO INDICATE ADDRESS SPACE HAS BEEN\n      *             EXAMINED ON THE TRUE READY QUEUE.\n      *             STORING X'FF' OR SETTING THE CPU ID\n      *             IN ASCBTRQI WILL SET THIS BIT ON.\n      *             X'20' - INTERNAL DISPATCHER FLAG USED\n      *             TO INDICATE A TCB WITHIN THE\n      *             ADDRESS SPACE HAS BEEN\n      *             SERIALIZED BUT NOT DISPATCHED\n      *             X'10' - IF ONE, A MEMORY SWITCH HAS\n      *             OCCURRED FOR THE ADDRESS SPACE.\n      *             MEMORY SWITCH SETS THIS BIT BY\n      *             STORING X'FF' INTO ASCBTRQI\n       05  ASCB-ASCBCSCB PIC S9(9) COMP.\n      *             ADDRESS OF CSCB\n       05  ASCB-ASCBTSB  PIC S9(9) COMP.\n      *             ADDRESS OF TSB\n       05  ASCB-ASCBEJST PIC X(8).\n      *             ELAPSED JOB STEP TIMING  UNSIGNED\n      *             64 BIT BINARY NUMBER\n       05  ASCB-ASCBEWST PIC X(8).\n      *             TIME OF DAY WHENEVER I-STREAM IS\n      *             SWITCHED FROM A MEMORY\n       05  ASCB-ASCBJSTL PIC S9(9) COMP.\n      *             CPU TIME LIMIT FOR THE JOB STEP\n      *             UNSIGNED 32 BIT BINARY NUMBER\n       05  ASCB-ASCBECB  PIC S9(9) COMP.\n      *             RCT'S WORK ECB\n       05  ASCB-ASCBUBET PIC S9(9) COMP.\n      *             TIME STAMP WHEN USER BECOMES READY\n       05  ASCB-ASCBTLCH PIC S9(9) COMP.\n      *             CHAIN FIELD FOR TIME LIMIT EXCEEDED\n      *             QUEUE\n       05  ASCB-ASCBDUMP PIC S9(9) COMP.\n      *             SVC DUMP TASK TCB ADDRESS\n       05  ASCB-ASCBFW1.\n      *             FULL-WORD LABEL TO BE USED FOR\n      *             COMPARE AND SWAP FOR ANY BIT IN\n      *             THIS WORD\n       10  ASCB-ASCBAFFN PIC S9(4) COMP.\n      *             CPU AFFINITY INDICATOR\n       10  ASCB-ASCBRCTF PIC X(01).\n      *             FLAGS FOR RCT SERIALIZED BY COMPARE\n      *             AND SWAP\n      *             X'80' - MEMORY IS BEING QUIESCED, IS\n      *             QUIESCED, OR IS BEING RESTORED\n      *             X'40' - RESTORE REQUEST\n      *             X'20' - QUIESCE REQUEST\n      *             X'10' - JOB STEP TIME EXCEEDED. NOT USED BY\n      *             RCT\n      *             X'08' - LONG WAIT INDICATOR\n      *             X'04' - ADDRESS SPACE CONSIDERED SWAPPED OUT\n      *             X'02' - MEMORY IS IN A LONG WAIT\n      *             X'01' - MEMORY SHOULD NOT BE CHECKED FOR JOB\n      *             STEP TIMING. NOT USED BY RCT\n       10  ASCB-ASCBFLG1 PIC X(01).\n      *             FLAG FIELD\n      *             X'80' - ADDRESS SPACE IS LOGICALLY SWAPPED\n      *             OUT\n      *             X'40' - ADDRESS SPACE IS TRANSITIONING\n      *             FROM LOGICAL TO PHYSICAL SWAP AND\n      *             ASCBEWST SHOULD NOT BE UPDATED WHEN\n      *             THIS BIT IS ON.\n      *             X'10' - ADDRESS SPACE TERMINATING NORMALLY\n      *             X'08' - ADDRESS SPACE TERMINATING ABNORMALLY\n       05  ASCB-ASCBTMCH PIC S9(9) COMP.\n      *             TERMINATION QUEUE CHAIN\n       05  ASCB-ASCBASXB PIC S9(9) COMP.\n      *             POINTER TO ADDRESS SPACE EXTENSION\n      *             CONTROL BLOCK (ASXB)\n       05  ASCB-ASCBFW2.\n      *             FULLWORD LABEL TO ADDRESS BITS IN\n      *             THIS WORD\n       10  ASCB-ASCBSWCT PIC S9(4) COMP.\n      *             NUMBER OF TIMES MEMORY ENTERS SHORT\n      *             WAIT\n       10  ASCB-ASCBDSP1 PIC X(01).\n      *             NONDISPATCHABILITY FLAGS.\n      *             X'80' - SYSTEM SET NONDISPATCHABLE AND THIS\n      *             ASCB IS NOT EXEMPT\n      *             X'40' - A FAILURE HAS OCCURRED WITHIN THE\n      *             ADDRESS SPACE. THE MEMORY IS\n      *             NONDISPATCHABLE\n      *             X'20' - STATUS STOP NON-QUIESCABLE LEVEL\n      *             SRB'S\n      *             X'10' - STATUS STOP SRB SUMMARY\n      *             X'08' - TCB'S NONDISPATCHABLE\n      *             X'04' - ASCB NOT ELIGIBLE FOR CML LOCK\n      *             REQUESTS\n      *             X'02' - ASCB NOT ON SWAPPED IN QUEUE\n       10  ASCB-ASCBFLG2 PIC X(01).\n      *             FLAG BYTE.\n      *             X'80' - ASCB EXEMPT FROM SYSTEM\n      *             NONDISPATCHABLE\n      *             X'40' - ASCB PERMANENTLY EXEMPT FROM SYSTEM\n      *             NONDISPATCHABLE\n      *             X'20' - CANCEL TIMER EXTENSION BECAUSE EOT\n      *             PROCESSING IS STARTED FOR THE JOB\n      *             STEP TCB\n      *             X'10' - FOR LOCK MANAGER, ENTRY MADE TO\n      *             STAGE II EXIT EFFECTOR WITHOUT\n      *             CORRESPONDING ENTRY TO STAGE III\n      *             EXIT EFFECTOR\n      *             X'04' - ADDRESS SPACE MUST NOT BE MEMTERMED\n      *             UNLESS A DAT ERROR HAS OCCURRED.\n      *             IF A DAT ERROR HAS OCCURRED, ACTION\n      *             IS CONTROLLED BY ASCBNOMD.\n      *             X'02' - IF ON,ADDRESS SPACE CANNOT BE\n      *             MEMTERMED ON A DAT ERROR.\n      *             IF OFF, PROCESS MEMTERM ON A DAT\n      *             ERROR.\n       05  ASCB-ASCBSCNT.\n      *             FULLWORD LABEL FOR COMPARE AND SWAP (CS)\n       10  FILLER        PIC S9(4) COMP.\n      *             FIRST HALFWORD OF ASCBSCNT MUST BE ZERO\n       10  ASCB-ASCBSRBS PIC S9(4) COMP.\n      *             COUNT OF SRB'S SUSPENDED IN THIS MEMORY\n       05  ASCB-ASCBLLSQ PIC S9(9) COMP.\n      *             LOCAL LOCK SUSPEND SERVICE QUEUE.\n       05  ASCB-ASCBRCTP PIC S9(9) COMP.\n      *             POINTER TO REGION CONTROL TASK (RCT) TCB\n       05  ASCB-ASCBLKGP.\n      *             LOCK GROUP\n       10  ASCB-ASCBLOCK PIC S9(9) COMP.\n      *             LOCAL LOCK.  THIS OFFSET FIXED BY\n      *             ARCHITECTURE.\n       10  ASCB-ASCBLSQH PIC S9(9) COMP.\n      *             LOCAL LOCK SUSPEND QUEUE HEADER.\n      *             THIS OFFSET FIXED BY ARCHITECTURE.\n       05  ASCB-ASCBQECB PIC S9(9) COMP.\n      *             QUIESCE ECB\n       05  ASCB-ASCBMECB PIC S9(9) COMP.\n      *             MEMORY CREATE/DELETE ECB\n       05  ASCB-ASCBOUCB PIC S9(9) COMP.\n      *             SYSTEM RESOURCES MANAGER (SRM) USER\n      *             CONTROL BLOCK POINTER\n       05  ASCB-ASCBOUXB PIC S9(9) COMP.\n      *             SYSTEM RESOURCES MANAGER (SRM) USER\n      *             EXTENSION BLOCK POINTER\n       05  ASCB-ASCBFW2A.\n      *             FULLWORD LABEL TO ADDRESS\n      *             BITS IN THIS WORD.\n      *             SERIALIZATION - CS.\n       10  ASCB-ASCBFMCT PIC S9(4) COMP.\n      *             RESERVED. ALLOCATED PAGE FRAME\n      *             COUNT NOW RESIDES IN THE RAX\n      *             (MAPPING MACRO IARRAX).\n       10  ASCB-ASCBLEVL PIC X(01).\n      *             LEVEL NUMBER OF ASCB\n      *             X'00' - HBB2102 (NOT IN BASE)\n      *             X'01' - JBB2110\n      *             X'02' - JBB2133\n      *             X'03' - HBB4410\n      *             X'03' - LEVEL OF THIS MAPPING\n       10  ASCB-ASCBFL2A PIC X(01).\n      *             FLAG BYTE\n      *             X'80' - NO PREEMPTION FLAG\n      *             1=DO NOT SIGP ANOTHER PROCESSOR TO\n      *             EXECUTE READY WORK IN THIS SPACE\n      *             0=DO SIGP ANOTHER PROCESSOR\n       05  ASCB-ASCBXMPQ PIC S9(9) COMP.\n      *             POINTER TO XMPOST SRB QUEUE\n       05  ASCB-ASCBIQEA PIC S9(9) COMP.\n      *             POINTER TO IQE FOR ATCAM\n      *             ASYNCHRONOUS PROCESSING\n       05  ASCB-ASCBRTMC PIC S9(9) COMP.\n      *             ANCHOR FOR SQA SDWA QUEUE\n       05  ASCB-ASCBMCC  PIC X(4).\n      *             USED TO HOLD A MEMORY TERMINATION\n      *             COMPLETION CODE ON ABNORMAL MEMORY\n      *             TERMINATION\n       05  ASCB-ASCBJBNI PIC S9(9) COMP.\n      *             POINTER TO JOBNAME FIELD FOR\n      *             INITIATED PROGRAMS OR ZERO\n       05  ASCB-ASCBJBNS PIC S9(9) COMP.\n      *             POINTER TO JOBNAME FIELD FOR\n      *             START/MOUNT/LOGON OR ZERO\n       05  ASCB-ASCBSRQ.\n      *             DISPATCHER SERIALIZATION REQUIRED\n       10  ASCB-ASCBSRQ1 PIC X(01).\n      *             FIRST BYTE OF ASCBSRQ\n      *             X'80' - SIGNAL WAITING PROCESSORS WHEN\n      *             INTERSECT IS RESET\n      *             X'40' - DEFAULT LOCAL INTERSECT\n       10  ASCB-ASCBSRQ2 PIC X(01).\n      *             SECOND BYTE OF ASCBSRQ\n      *             X'80' - SIGNAL WAITING PROCESSORS WHEN\n      *             INTERSECT IS RESET\n      *             X'02' - SYSTEM RESOURCE MANAGER (SRM)\n      *             INTERSECTING\n      *             X'01' - QUEUE VERIFICATION INTERSECTING\n       10  ASCB-ASCBSRQ3 PIC X(01).\n      *             THIRD BYTE OF ASCBSRQ\n      *             X'80' - SIGNAL WAITING PROCESSORS WHEN\n      *             INTERSECT IS RESET\n      *             X'40' - REGION CONTROL TASK (RCT)\n      *             INTERSECTING\n      *             X'20' - TCB VERIFICATION INTERSECTING\n      *             X'10' - ASCB CHAP INTERSECTING\n      *             X'04' - MEMORY TERMINATION INTERSECTING\n      *             X'02' - MEMORY INITIALIZATION INTERSECTING\n      *             X'01' - CONTROL BLOCK VERIFICATION\n      *             INTERSECTING\n       10  ASCB-ASCBSRQ4 PIC X(01).\n      *             FOURTH BYTE OF ASCBSRQ\n      *             X'80' - SIGNAL WAITING PROCESSORS WHEN\n      *             INTERSECT IS RESET\n      *             X'40' - DETACH INTERSECTING\n      *             X'20' - ATTACH INTERSECTING\n      *             X'10' - RTM2 INTERSECTING\n      *             X'08' - RTM1 INTERSECTING\n      *             X'04' - CHAP INTERSECTING\n      *             X'02' - STATUS INTERSECTING\n      *             X'01' - PURGEDQ INTERSECTING\n       05  ASCB-ASCBVGTT PIC S9(9) COMP.\n      *             ADDRESS OF VSAM GLOBAL TERMINATION\n      *             TABLE (VGTT)\n       05  ASCB-ASCBPCTT PIC S9(9) COMP.\n      *             ADDRESS OF PRIVATE CATALOG\n      *             TERMINATION TABLE (PCTT)\n       05  ASCB-ASCBSSRB PIC S9(4) COMP.\n      *             COUNT OF STATUS STOP SRB'S\n       05  ASCB-ASCBSMCT PIC X(1).\n      *             NUMBER OF OUTSTANDING STEP MUST\n      *             COMPLETE REQUESTS IN ADDRESS\n      *             SPACE\n       05  ASCB-ASCBSRBM PIC X(01).\n      *             MODEL PSW BYTE 0 USED BY SRB\n      *             DISPATCHER\n      *             X'40' - PER BIT IN ASCBSRBM - ALSO USED TO\n      *             SHOW PER STATUS FOR THE ADDRESS\n      *             SPACE\n       05  ASCB-ASCBSWTL PIC S9(9) COMP.\n      *             STEP WAIT TIME LIMIT\n       05  ASCB-ASCBSRBT PIC X(8).\n      *             ACCUMULATED SRB TIME\n       05  ASCB-ASCBLSRB.\n      *             LOCAL SRB QUEUES\n       10  ASCB-ASCBLSMQ PIC S9(9) COMP.\n      *             LOCAL SERVICE MANAGEMENT QUEUE\n      *             X'80' - SYSEVENT USER READY REQUIRED\n       10  ASCB-ASCBLSPL PIC S9(9) COMP.\n      *             LOCAL SERVICE PRIORITY LIST\n       05  ASCB-ASCBTCBG.\n      *             TCB GROUP\n       10  ASCB-ASCBTCBS PIC S9(9) COMP.\n      *             NUMBER OF READY TCB'S\n       10  ASCB-ASCBTCBL PIC S9(9) COMP.\n      *             NUMBER OF TCB'S REQUIRING LOCAL LOCK\n       05  ASCB-ASCBWPRB PIC S9(9) COMP.\n      *             ADDRESS OF WAIT POST REQUEST BLOCK\n       05  ASCB-ASCBSRDP.\n      *             SYSTEM RESOURCE MANAGER (SRM)\n      *             DISPATCHING PRIORITY\n       10  ASCB-ASCBNDP  PIC X(1).\n      *             NEW DISPATCHING PRIORITY\n       10  ASCB-ASCBTNDP PIC X(1).\n      *             NEW TIME SLICE DISPATCHING PRIORITY\n       10  ASCB-ASCBNTSG PIC X(1).\n      *             NEW TIME SLICE GROUP\n       10  ASCB-ASCBIODP PIC X(1).\n      *             I/O PRIORITY\n       05  ASCB-ASCBLOCI PIC S9(9) COMP.\n      *             LOCK IMAGE, ADDRESS OF ASCB\n      *             HOLDING THIS ASCB'S LOCAL\n      *             LOCK AS A CML LOCK.\n       05  ASCB-ASCBCMLH PIC S9(9) COMP.\n      *             ADDRESS OF TCB OR SSRB\n      *             SUSPENDED HOLDING THIS\n      *             ASCB'S LOCAL LOCK AS A CML OR LOCAL\n      *             LOCK.\n       05  ASCB-ASCBCMLC PIC S9(9) COMP.\n      *             COUNT OF CML LOCKS HELD BY\n      *             THIS ADDRESS SPACE.\n       05  ASCB-ASCBSSOM.\n      *             SPACE SWITCH EVENT OWNER\n      *             MASK.\n       10  ASCB-ASCBSSO1 PIC X(3).\n      *             SPACE SWITCH EVENT OWNER\n      *             MASK BYTES 1 - 3.\n       10  ASCB-ASCBSSO4 PIC X(01).\n      *             SPACE SWITCH EVENT OWNER\n      *             MASK BYTE 4.\n      *             X'02' - SLIP/PER REQUESTED\n      *             NOTIFICATION ON SPACE SWITCH\n      *             EVENTS.\n      *             X'01' - JOB STEP TERMINATION\n      *             REQUESTED SPACE SWITCH EVENTS\n      *             FOR BREAKING LATENT ADDRESSING\n      *             BINDS\n       05  ASCB-ASCBASTE PIC S9(9) COMP.\n      *             VIRTUAL ADDRESS OF ADDRESS\n      *             SPACE SECOND TABLE ENTRY (ASTE)\n       05  ASCB-ASCBLTOV PIC S9(9) COMP.\n      *             VIRTUAL ADDRESS OF THE\n      *             LINKAGE TABLE ORIGIN.\n      *             (LOCATED IN PC/AUTH ADDRESS\n      *             SPACE LSQA).\n       05  ASCB-ASCBATOV PIC S9(9) COMP.\n      *             VIRTUAL ADDRESS OF\n      *             AUTHORIZATION TABLE (LOCATED\n      *             IN PC/AUTH ADDRESS SPACE LSQA)\n       05  ASCB-ASCBETC  PIC S9(4) COMP.\n      *             NUMBER OF ENTRY TABLES\n      *             CURRENTLY OWNED BY THIS\n      *             ADDRESS SPACE.\n       05  ASCB-ASCBETCN PIC S9(4) COMP.\n      *             NUMBER OF CONNECTIONS TO\n      *             ENTRY TABLES IN THIS ADDRESS\n      *             SPACE CONTAINING ANY SPACE\n      *             SWITCH ENTRIES.\n       05  ASCB-ASCBLXR  PIC S9(4) COMP.\n      *             NUMBER OF LINKAGE INDEXES\n      *             RESERVED BY THIS ADDRESS\n      *             SPACE.\n       05  ASCB-ASCBAXR  PIC S9(4) COMP.\n      *             NUMBER OF AUTHORIZATION\n      *             INDEXES RESERVED BY THIS\n      *             ADDRESS SPACE.\n       05  ASCB-ASCBSTKH PIC S9(9) COMP.\n      *             ADDRESS OF LOCAL STACK POOL\n      *             HEADER FOR PCLINK SERVICE.\n       05  ASCB-ASCBGQEL PIC S9(9) COMP.\n      *             ADDRESS SPACE GLOBAL\n      *             RESOURCE QUEUE.\n       05  ASCB-ASCBLQEL PIC S9(9) COMP.\n      *             ADDRESS SPACE LOCAL\n      *             RESOURCE QUEUE.\n       05  ASCB-ASCBGSYN PIC S9(9) COMP.\n      *             GRS SYNCHRONIZATION\n      *             REQUEST QUEUE.\n       05  ASCB-ASCBXTCB PIC S9(9) COMP.\n      *             ADDRESS OF THE JOB STEP\n      *             TASK TCB WHICH OWNS THE CROSS MEMORY\n      *             RESOURCES IN THIS ADDRESS SPACE.\n       05  ASCB-ASCBFW3.\n      *             FULLWORD LABEL TO ADDRESS\n      *             BITS IN THIS WORD.\n       10  ASCB-ASCBCS1  PIC X(01).\n      *             FIRST BYTE OF COMPARE AND\n      *             SWAP FLAGS.\n      *             X'80' - IF ONE, THE ADDRESS SPACE IS\n      *             NON-REUSABLE BECAUSE OF CROSS\n      *             MEMORY CONNECTIONS TO IT.  THIS\n      *             CONDITION MAY NOT BE PERMANENT.\n      *             X'40' - CROSS MEMORY ENTRY TABLES\n      *             CONTAINING SPACE SWITCH ENTRIES\n      *             HAVE BEEN CREATED BY THIS ADDRESS\n      *             SPACE.\n      *             X'20' - IF ONE, THE ADDRESS SPACE IS\n      *             PERMANENTLY NON-REUSABLE BECAUSE\n      *             OF INCOMPLETE TERMINATION\n      *             PROCESSING OF PC/AUTH RESOURCE\n      *             MANAGER.\n      *             X'10' - IF ONE, THE ADDRESS SPACE IS\n      *             PERMANENTLY NON-REUSABLE BECAUSE\n      *             OF A CML BIND.\n      *             X'08' - COMMUNICATION BIT FOR\n      *             SLIP/PER SRB ROUTINES.\n      *             IF 1, THE LOCAL SRB ROUTINE WILL\n      *             ACTIVATE PER FOR THE SPECIFIED\n      *             ADDRESS SPACE/JOB/CROSS MEMORY\n      *             REFERENCES.\n      *             IF 0, THE LOCAL SRB ROUTINE WILL\n      *             DEACTIVATE PER FOR THE ADDRESS\n      *             SPACE.\n      *             X'04' - A DAT ERROR HAS OCCURRED\n      *             FOR THIS ADDRESS SPACE.\n      *             X'02' - PER PROCESSING NEEDS TO BE\n      *             DONE WHEN ADDRESS SPACE IS SWAPPED\n      *             IN.\n      *             X'01' - ADDRESS SPACE IS SWAPPED OUT\n      *             WITH RESPECT TO PER PROCESSING BEING\n      *             DONE.\n       10  ASCB-ASCBR121 PIC X(3).\n      *             RESERVED.\n       05  ASCB-ASCBGXL  PIC S9(9) COMP.\n      *             ADDRESS OF GLOBALLY LOADED MODULE\n      *             EXTENT INFORMATION CONTROL BLOCK.\n       05  ASCB-ASCBEATT PIC X(8).\n      *             EXPENDED AND ACCOUNTED TASK TIME.\n       05  ASCB-ASCBINTS PIC X(80.\n      *             JOB SELECTION TIME STAMP.\n       05  ASCB-ASCBFW4.\n      *             FULLWORD LABEL TO ADDRESS\n      *             BITS IN THIS WORD.\n       10  ASCB-ASCBLL1  PIC X(01).\n      *             FIRST BYTE OF FLAGS.\n      *             X'80' - STATUS STOP TASKS PENDING\n      *             A CML LOCK RELEASE.\n       10  ASCB-ASCBLL2  PIC X(01).\n      *             SECOND BYTE OF FLAGS.\n       10  ASCB-ASCBLL3  PIC X(01).\n      *             THIRD BYTE OF FLAGS.\n       10  ASCB-ASCBLL4  PIC X(01).\n      *             FOURTH BYTE OF FLAGS.\n      *             X'02' - TYPE 1 SVC HAS CONTROL. THIS OFFSET\n      *             FIXED BY ARCHITECTURE.\n       05  ASCB-ASCBRCMS PIC S9(9) COMP.\n      *             ADDRESS OF THE REQUESTED\n      *             CMS CLASS LOCK FOR WHICH\n      *             THE LOCAL LOCK HOLDER IS\n      *             SUSPENDED.\n       05  ASCB-ASCBIOSC PIC S9(9) COMP.\n      *             I/O SERVICE MEASURE.\n      *             UPDATED BY JES2,JES3,SMF.\n      *             READ BY RMF,SMF,SRM.\n       05  ASCB-ASCBPKML PIC S9(4) COMP.\n      *             PKM OF LAST TASK DISPATCHED\n      *             IN THIS ADDRESS SPACE.\n       05  ASCB-ASCBXCNT PIC S9(4) COMP.\n      *             EXCP COUNT FIELD.\n       05  ASCB-ASCBNSQA PIC S9(9) COMP.\n      *             ADDRESS OF THE SQA RESIDENT\n      *             NSSA CHAIN.\n       05  ASCB-ASCBASM  PIC S9(9) COMP.\n      *             ADDRESS OF THE ASM HEADER.\n       05  ASCB-ASCBASSB PIC S9(9) COMP.\n      *             POINTER TO ADDRESS SPACE\n      *             SECONDARY BLOCK (ASSB).\n       05  ASCB-ASCBTCME PIC S9(9) COMP.\n      *             POINTER TO TCXTB.\n       05  ASCB-ASCBGQIR.\n      *             ISGQSCAN INFORMATION\n      *             ROUTINE ADDRESS.\n       10  FILLER        PIC X(1).\n      *             BYTE 0 OF ASCBGQIR\n      *             X'80' - ISGQSCAN INFORMATION\n      *             ROUTINE ABENDED FLAG. IF ON,\n      *             ISGQSCAN INFORMATION ROUTINE\n      *             UNEXPECTEDLY ABENDED.\n       10  FILLER        PIC X(2).\n      *             BYTE 1 AND 2 OF ASCBGQIR\n       10  ASCB-ASCBGQI3 PIC X(1).\n      *             BYTE 3 OF ASCBGQIR\n      *             X'01' - ISGQSCAN INFORMATION\n      *             ROUTINE DISABLED FLAG. IF ON,\n      *             ISGQSCAN WILL NOT INVOKE THE\n      *             ISGQSCAN INFORMATION ROUTINE.\n       05  ASCB-ASCBR15C PIC X(12).\n      *             RESERVED FOR 370 EXPANSION.\n       05  ASCB-ASCBCREQ PIC S9(9) COMP.\n      *             COUNT OF CONCURRENT\n      *             ENQ/RESERVE AND GQSCAN REQUESTS\n       05  ASCB-ASCBRSME PIC S9(9) COMP.\n      *             POINTER TO RSM ADDRESS SPACE\n      *             BLOCK EXTENSION.\n       05  ASCB-ASCBAVM.\n      *             AVAILABILITY MANAGER ADDRESS\n      *             SPACE RELATED DATA.\n       10  ASCB-ASCBAVM1 PIC X(01).\n      *             FIRST BYTE OF ASCBAVM.\n      *             RESERVED.\n       10  ASCB-ASCBAVM2 PIC X(01).\n      *             SECOND BYTE OF ASCBAVM.\n      *             RESERVED.\n       10  ASCB-ASCBAGEN PIC S9(4) COMP.\n      *             AVM ASID REUSE GENERATION\n      *             NUMBER.\n       05  ASCB-ASCBARC  PIC S9(9) COMP.\n      *             REASON CODE ON MEMTERM.\n       05  ASCB-ASCBRSM.\n      *             ADDRESS OF RSM'S CONTROL BLOCK\n      *             HEADER.\n       10  ASCB-ASCBRSMA PIC S9(9) COMP.\n      *             ADDRESS OF RSM'S CONTROL BLOCK\n      *             HEADER.\n       05  ASCB-ASCBDCTI PIC S9(9) COMP.\n      *             ACCUMULATED CHANNEL CONNECT TIME\n      *             INCURRED BY THIS MEMORY\n      *\n      *       END OF THE ASCB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@ASVT": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00S\\x00S\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 83, "newlines": 83, "modlines": 0, "user": "SCHUFF"}, "text": "      *ASVT************************************************************\n      *                                                               *\n      *    ASVT = ADDRESS SPACE VECTOR TABLE                          *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 ASVT-ASVT.\n       05  ASVT-ASVTPRFX PIC X(480).\n      *             RESERVED FOR FUTURE EXPANSION\n       05  ASVT-ASVTBEGN.\n      *             BEGINNING OF ASVT\n       10  ASVT-ASVTAAV  PIC S9(9) COMP.\n      *             NUMBER OF FREE SLOTS ON THE\n      *             ASVT AVAILABLE QUEUE.\n       10  ASVT-ASVTAST  PIC S9(9) COMP.\n      *             NUMBER OF FREE SLOTS ON THE\n      *             START/SASI QUEUE.\n       05  ASVT-ASVTANR  PIC S9(9) COMP.\n      *             NUMBER OF FREE SLOTS ON THE\n      *             NON-REUSABLE REPLACEMENT\n      *             QUEUE.\n       05  ASVT-ASVTSTRT PIC S9(9) COMP.\n      *             ORIGINAL SIZE OF START/SASI\n      *             QUEUE.\n       05  ASVT-ASVTNONR PIC S9(9) COMP.\n      *             ORIGINAL SIZE OF NON-REUSABLE\n      *             REPLACEMENT QUEUE.\n       05  ASVT-ASVTMAXI PIC S9(9) COMP.\n      *             ORIGINAL MAX USERS COUNT AS\n      *             INPUT TO IEAVNP09.\n       05  ASVT-ASVTRSHD PIC S9(9) COMP.\n      *             ADDRESS OF FIRST AVAILABLE SLOT\n      *             ON QUEUE OF SLOTS RESERVED FOR\n      *             STARTED/SASI ADDRESS SPACES. (I.E.,\n      *             HEADER FOR THE QUEUE.)\n      *             X'80' - BIT ONE IF ASID IS AVAILABLE\n      *             AND ZERO IF ASID IS ASSIGNED\n       05  ASVT-ASVTDSHD PIC S9(9) COMP.\n      *             ADDRESS OF FIRST AVAILABLE SLOT\n      *             ON QUEUE OF SLOTS RESERVED TO\n      *             REPLACE NON-REUSABLE ASIDS. (I.E.,\n      *             HEADER FOR THE QUEUE.)\n      *             X'80' BIT ONE IF ASID IS AVAILABLE\n      *             AND ZERO IF ASID IS ASSIGNED\n       05  ASVT-ASVTASVT PIC X(4).\n      *             ACRONYM IN EBCDIC -ASVT-\n       05  ASVT-ASVTMAXU PIC S9(9) COMP.\n      *             MAXIMUM NUMBER OF ADDRESS SPACES\n       05  ASVT-ASVTRS00 PIC S9(9) COMP.\n      *             RESERVED\n       05  ASVT-ASVTFRST PIC S9(9) COMP.\n      *             ADDRESS OF FIRST AVAILABLE ASVT\n      *             ENTRY\n      *             X'80' BIT ONE IF ASID IS AVAILABLE AND\n      *             ZERO IF ASID IS ASSIGNED\n      *\n      *      ENTRY FOR EACH POSSIBLE ASID.\n      *\n       01 ASVT-ASENTRY.\n       05  ASVT-ASVTENTY PIC S9(9) COMP.\n      *             IF ADDRESS SPACE ASSIGNED, ENTRY\n      *             CONTAINS ADDRESS OF ASCB. IF NOT\n      *             ASSIGNED, ENTRY CONTAINS EITHER\n      *             ADDRESS OF NEXT AVAILABLE ASID OR\n      *             ZEROS WITH HIGH-ORDER BIT ON IF\n      *             LAST ENTRY.\n      *             IF THE ADDRESS SPACE IS MARKED\n      *             NON-REUSABLE, THE ENTRY CONTAINS\n      *             THE ADDRESS OF MASTER'S ASVT ENTRY\n      *             WITH THE HIGH BIT ON.\n      *             X'80' - BIT ONE IF ASID IS AVAILABLE AND\n      *             ZERO IF ASID IS ASSIGNED\n      *\n      *    END OF ASVT\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@ASXB": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00\\x8d\\x00\\x8d\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 141, "newlines": 141, "modlines": 0, "user": "SCHUFF"}, "text": "      *ASXB************************************************************\n      *                                                               *\n      *    ASXB = ADDRESS SPACE EXTENSION BLOCK                       *\n      *                                                               *\n      *      CONTAINS INFORMATION AND POINTERS NEEDED FOR ADDRESS     *\n      *      SPACE CONTROL. THE ASXB IS SWAPPABLE                     *\n      *      AND THE ASCB IS NOT.                                     *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 ASXB-ASXB.\n       05  ASXB-ASXBEGIN.\n      *             BEGINNING OF ASXB\n       10  ASXB-ASXBASXB PIC X(4).\n      *             ACRONYM IN EBCDIC -ASXB-\n       10  ASXB-ASXBFTCB PIC S9(9) COMP.\n      *             POINTER TO FIRST TCB ON TCB QUEUE\n       05  ASXB-ASXBLTCB PIC S9(9) COMP.\n      *             POINTER TO LAST TCB ON TCB QUEUE\n       05  ASXB-ASXBTCBS PIC S9(4) COMP.\n      *             NUMBER TCB'S IN THE MEMORY\n       05  ASXB-ASXBR00E PIC S9(4) COMP.\n      *             RESERVED\n       05  ASXB-ASXBMPST PIC S9(9) COMP.\n      *             ADDRESS OF VTAM MEMORY PROCESS\n      *             SCHEDULING TABLE\n       05  ASXB-ASXBLWA  PIC S9(9) COMP.\n      *             ADDRESS OF LWA\n       05  ASXB-ASXBVFVT PIC S9(9) COMP.\n      *             POINTER TO INTERNAL VIRTUAL\n      *             FETCH VECTOR TABLE.\n       05  ASXB-ASXBSAF  PIC S9(9) COMP.\n      *             ROUTER RRCB ADDRESS\n       05  ASXB-ASXBIHSA PIC S9(9) COMP.\n      *             POINTER TO INTERRUPT HANDLERS SAVE\n      *             AREA FOR LOCALLY LOCKED INTERRUPTS\n       05  ASXB-ASXBFLSA PIC X(72).\n      *             SAVE AREA FOR ANY FIRST LEVEL BRANCH\n      *             ENTRY (MUST BE FIRST USER AFTER\n      *             LOCAL LOCK IS OBTAINED)\n       05  ASXB-ASXBOMCB PIC S9(9) COMP.\n      *             POINTER TO OBJECT ACCESS METHOD\n      *             CONTROL BLOCK\n       05  ASXB-ASXBSPSA PIC S9(9) COMP.\n      *             POINTER TO LOCAL WORK/SAVE AREA\n      *             VECTOR TABLE\n       05  ASXB-ASXBRSMD PIC S9(9) COMP.\n      *             POINTER TO LOCAL RSM DATA AREA\n       05  ASXB-ASXBRCTD PIC S9(9) COMP.\n      *             POINTER TO LOCAL RCT DATA AREA\n       05  ASXB-ASXBDECB PIC S9(9) COMP.\n      *             DUMP TASK ECB\n       05  ASXB-ASXBOUSB PIC S9(9) COMP.\n      *             POINTER TO SYSTEM RESOURCES MANAGER\n      *             (SRM) USER SWAPPABLE BLOCK\n       05  ASXB-ASXBCRWK PIC S9(9) COMP.\n      *             CHECKPOINT/RESTART WORKAREA POINTER.\n       05  ASXB-ASXBPRG  PIC X(16).\n      *             SVC PURGE I/O PARAMETER LIST\n       05  ASXB-ASXBPSWD PIC X(8).\n      *             USER'S LOGON PASSWORD.  IF BLANK,\n      *             NOT REQUIRED\n       05  ASXB-ASXBSIRB PIC S9(9) COMP.\n      *             ADDRESS OF SIRB FOR THIS ADDRESS\n      *             SPACE\n       05  ASXB-ASXBETSK PIC S9(9) COMP.\n      *             ADDRESS OF ERROR TASK FOR THIS\n      *             ADDRESS SPACE\n       05  ASXB-ASXBAEQ.\n      *             QUEUE ANCHORS FOR EXIT EFFECTOR'S\n      *             ASYNCHRONOUS EXIT QUEUES\n       10  ASXB-ASXBFIQE PIC S9(9) COMP.\n      *             POINTER TO FIRST IQE\n       10  ASXB-ASXBLIQE PIC S9(9) COMP.\n      *             POINTER TO LAST IQE\n       10  ASXB-ASXBFRQE PIC S9(9) COMP.\n      *             POINTER TO FIRST RQE\n       10  ASXB-ASXBLRQE PIC S9(9) COMP.\n      *             POINTER TO LAST RQE\n       10  ASXB-ASXBFSRB PIC S9(9) COMP.\n      *             ADDRESS OF FIRST SRB\n       10  ASXB-ASXBLSRB PIC S9(9) COMP.\n      *             ADDRESS OF LAST SRB\n       05  ASXB-ASXBUSER PIC X(7).\n      *             USER ID FOR WHICH THE JOB OR SESSION\n      *             IS BEING EXECUTED\n       05  ASXB-ASXBSECR.\n      *             ACCESS CONTROL INFORMATION\n       10  ASXB-ASXBSFLG PIC X(01).\n      *             ACCESS CONTROL FLAGS\n       10  ASXB-ASXBSENV PIC S9(9) COMP.\n      *             ADDRESS OF ACCESS CONTROL\n      *             ENVIRONMENT ELEMENT\n       05  ASXB-ASXBXSBA PIC S9(9) COMP.\n      *             ADDRESS OF FIRST AVAILABLE XSB.\n      *             POOL USED BY STAGE 3, IEAVEEE0,FOR\n      *             IRBS. XSBS QUEUED BY EXIT,IEAVEOR.\n       05  ASXB-ASXBNSDW.\n      *             DOUBLEWORD CONTAINING THE NSSA POOL\n      *             AND SYNCHRONIZATION COUNT.\n       10  ASXB-ASXBNSSA PIC S9(9) COMP.\n      *             NSSA POOL.\n       10  ASXB-ASXBNSCT PIC S9(9) COMP.\n      *             COUNT USED TO SYNCHRONIZE THE\n      *             NSSA POOL.\n       05  ASXB-ASXBCASW.\n      *             USED BY REGION CONTROL TASK\n      *             (RCT)/CANCEL VIA CS INSTRUCTION\n       10  ASXB-ASXBCRB1 PIC X(01).\n      *             CANCEL/RCT BYTE 1\n      *             X'80' - SET BY RCT TO INDICATE PURGE (SVC\n      *             16) IS IN PROCESS\n      *             X'40' - SET BY CANCEL TO INDICATE THAT ALL\n      *             SUBTASKS OF THE RCT HAVE BEEN SET\n      *             DISPATCHABLE VIA STATUS\n       10  ASXB-ASXBCRB2 PIC X(01).\n      *             CANCEL/RCT BYTE 2\n       10  ASXB-ASXBCRB3 PIC X(01).\n      *             CANCEL/RCT BYTE 3\n       10  ASXB-ASXBCRB4 PIC X(01).\n      *             CANCEL/RCT BYTE 4\n       05  ASXB-ASXBPT0E PIC S9(9) COMP.\n      *             POST EXIT QUEUE HEADER\n       05  ASXB-ASXBR0E0 PIC S9(9) COMP.\n      *             RESERVED\n       05  ASXB-ASXBJSVT PIC S9(9) COMP.\n      *             JES COMMUNICATION AREA POINTER.\n       05  ASXB-ASXBDIVW PIC S9(9) COMP.\n      *             ADDRESS OF THE DIV WORK/SAVE\n      *             AREA, OR ZERO IF NONE EXISTS\n       05  ASXB-ASXBR0EC PIC S9(9) COMP.\n      *             RESERVED\n      *\n      *    END OF ASXB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@CDE": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00R\\x00R\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 82, "newlines": 82, "modlines": 0, "user": "SCHUFF"}, "text": "      *CDE*************************************************************\n      *                                                               *\n      *    CDE = CONTENTS DIRECTORY ENTRY                             *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 CDE-CDENTRY.\n       05  CDE-CDCHAIN   PIC S9(9) COMP.\n      *             ADDRESS OF NEXT CDE IN QUEUE (EITHER JPAQ\n      *             OR LPAQ)\n       05  CDE-CDRRBP    PIC S9(9) COMP.\n      *             IF THE MODULE IS REENTERABLE, THIS FIELD\n      *             CONTAINS THE ADDRESS OF THE LAST RB THAT\n      *             CONTROLLED THE MODULE.  IF THE MODULE IS\n      *             SERIALLY REUSABLE, THIS FIELD CONTAINS\n      *             THE ADDRESS OF THE RB AT THE TOP OF THE\n      *             WAITING (RBPGMQ) QUEUE.  IF THE MODULE\n      *             WAS REQUESTED ONLY THROUGH LOAD MACRO\n      *             INSTRUCTIONS, CONTAINS ZERO.\n       05  CDE-CDNAME    PIC X(8).\n      *             8-BYTE NAME\n       05  CDE-CDENTPT   PIC S9(9) COMP.\n      *             MODULE'S RELOCATED ENTRY POINT ADDRESS\n      *             X'80' ROUTINE RUNS IN 31 BIT MODE\n       05  CDE-CDXLMJP   PIC S9(9) COMP.\n      *             EXTENT LIST ADDRESS OR MAJOR CDE ADDRESS\n      *             IF THIS CDE IS A MINOR\n       05  CDE-CDUSE     PIC S9(4) COMP.\n      *             VALUE CONTAINS THE TOTAL MODULE USE\n      *             COUNT\n       05  CDE-CDATTRB   PIC X(01).\n      *             FLAG BYTE\n      *             X'80' - ON=DELETE MODULE AT MEMORY TERMINATION\n      *             X'40' - ON=MAJOR BUILT BY IDENTIFY FOR AN\n      *             UNAUTHORIZED CALLER THAT IDENTIFIED TO\n      *             AN APF LIBRARY JPA MODULE\n      *             X'20' - ON = MODULE WAS LOADED BY 'DIRTY' TASK\n      *             X'08' - OFF=CDE, USED TO DISTINGUISH A CDE FROM\n      *             AN LPDE\n      *             X'04' - ON = MODULE LOADED TO GLOBAL\n      *             X'02' - ON = CONTAMINATION\n      *             X'01' - RESERVED FOR RACF\n       05  CDE-CDSP      PIC X(01).\n      *             MODULE SUBPOOL ID\n       05  CDE-CDATTR    PIC X(01).\n      *             ATTRIBUTE FLAGS\n      *             X'80' - MODULE LOADED BY NIP OR FIXED/MODIFIED\n      *             LPA MODULE\n      *             X'40' - MODULE IS IN PROCESS OF BEING LOADED\n      *             X'20' - MODULE IS REENTERABLE\n      *             X'10' - MODULE IS SERIALLY REUSABLE\n      *             X'08' - MODULE IS NOT REUSABLE (NON-FUNCTIONAL)\n      *             X'04' - THIS IS A MINOR CDE\n      *             X'02' - MODULE IS IN JOB PACK AREA\n      *             X'01' - MODULE IS NOT LOADABLE-ONLY\n       05  CDE-CDATTR2   PIC X(01).\n      *             SECOND ATTRIBUTE FIELD\n      *             X'80' -   MODULE IS IN SUBPOOL ZERO\n      *             X'40' -   MODULE IS INACTIVE AND MAY BE RELEASED\n      *             X'20' -   EXTENT LIST HAS BEEN BUILT FOR MODULE.\n      *             MAIN STORAGE OCCUPIED BY MODULE IS\n      *             DESCRIBED THEREIN.\n      *             X'10' -   THIS CDE CONTAINS A MINOR ENTRY POINT\n      *             ADDRESS THAT HAS BEEN RELOCATED BY THE\n      *             PROGRAM FETCH ROUTINE\n      *             X'08' ROUTINE RUNS IN ANY MODE\n      *             X'04' -   MODULE IS IN OVERLAY FORMAT\n      *             X'02' - AUTHORIZED LIBRARY MODULE\n      *             X'01' -  PROGRAM AUTHORIZATION FLAG\n       05  CDE-CDATTR3   PIC S9(4) COMP.\n      *             RESERVED\n      *\n      *    END OF CDE\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@CVT": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x05$\\x05$\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 1316, "newlines": 1316, "modlines": 0, "user": "SCHUFF"}, "text": "      *CVT*************************************************************\n      *                                                               *\n      *     CVT = COMMUNICATION VECTOR TABLE                          *\n      *                                                               *\n      *           BASE MVS CONTROL BLOCK                              *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n\n      *\n       01 CVT.\n       05  CVT-CVTTCBP  PIC S9(9) COMP.\n      *             ADDRESS OF 4-WORD LIST OF ADDRESSES -\n      *             THE NEXT TCB, THE CURRENT TCB, THE NEXT\n      *             ASCB AND THE CURRENT ASCB, IN THAT ORDER\n       05  CVT-CVT0EF00 PIC S9(9) COMP.\n      *             A(ROUTINE TO SCHEDULE ASYNCHRONOUS EXITS)\n       05  CVT-CVTLINK  PIC S9(9) COMP.\n      *             A(DCB) FOR SYS1.LINKLIB DATA SET\n       05  CVT-CVTAUSCB PIC S9(9) COMP.\n      *             A(ASSIGN/UNASSIGN SERVICE DATA MODULE)\n       05  CVT-CVTBUF   PIC S9(9) COMP.\n      *             A(THE BUFFER OF THE RESIDENT CONSOLE\n      *             INTERRUPT ROUTINE)\n       05  CVT-CVTXAPG  PIC S9(9) COMP.\n      *             A(I/O SUPERVISOR APPENDAGE VECTOR TABLE)\n       05  CVT-CVT0VL00 PIC S9(9) COMP.\n      *             A(ENTRY POINT OF THE TASK SUPERVISOR'S\n      *             ADDRESS VALIDITY CHECKING ROUTINE)\n       05  CVT-CVTPCNVT PIC S9(9) COMP.\n      *             A(ENTRY POINT OF THE ROUTINE\n      *             WHICH CONVERTS A RELATIVE TRACK ADDRESS\n      *             (TTR) TO AN ABSOLUTE TRACK ADDRESS\n      *             (MBBCCHHR))\n       05  CVT-CVTPRLTV PIC S9(9) COMP.\n      *             A(ENTRY POINT OF THE ROUTINE\n      *             WHICH CONVERTS AN ABSOLUTE TRACK ADDRESS\n      *             (MBBCCHHR) TO A RELATIVE TRACK ADDRESS(TTR))\n       05  CVT-CVTLLCB  PIC S9(9) COMP.\n      *             A(THE LLCB)\n       05  CVT-CVTLLTRM PIC S9(9) COMP.\n      *             A(LLA'S MEMORY TERNIMATION RESOURCE MANAGER)\n       05  CVT-CVTXTLER PIC S9(9) COMP.\n      *             A(ERROR RECOVERY PROCEDURE (ERP)\n      *             LOADER (IECVERPL) ENTRY POINT IECXTLER)\n       05  CVT-CVTSYSAD PIC S9(9) COMP.\n      *             UCB ADDRESS FOR THE SYSTEM RESIDENCE VOLUME\n       05  CVT-CVTBTERM PIC S9(9) COMP.\n      *             A(ENTRY POINT OF THE ABTERM ROUTINE)\n       05  CVT-CVTDATE  PIC S9(7) COMP-3.\n      *             CURRENT DATE IN PACKED DECIMAL\n       05  CVT-CVTMSLT  PIC S9(9) COMP.\n      *             A(THE MASTER COMMON AREA IN MASTER SCHEDULER\n      *             RESIDENT DATA AREA. NOTE - USE CVTMSER INSTEAD\n      *             TO ADDRESS MASTER SCHEDULER RESIDENT DATA AREA\n       05  CVT-CVTZDTAB PIC S9(9) COMP.\n      *             A(I/O DEVICE CHARACTERISTIC TABLE)\n       05  CVT-CVTXITP  PIC S9(9) COMP.\n      *             A(ERROR INTERPRETER ROUTINE)\n       05  CVT-CVT0EF01 PIC S9(9) COMP.\n      *             ENTRY POINT IN STAGE II EXIT EFFECTOR\n      *             USED BY SCHEDXIT MACRO\n       05  CVT-CVTVPRM.\n      *             VECTOR PARAMETERS\n       10  CVT-CVTVSS   PIC S9(4) COMP.\n      *             VECTOR SECTION SIZE\n       10  CVT-CVTVPSM  PIC S9(4) COMP.\n      *             VECTOR PARTIAL SUM NUMBER\n       05  CVT-CVTEXIT  PIC X(2).\n      *             SVC 3 - EXIT TO DISPATCHER\n       05  CVT-CVTBRET  PIC X(2).\n      *             BR 14 - RETURN TO CALLER (USED BY DATA\n      *             MANAGEMENT ROUTINES)\n       05  CVT-CVTSVDCB PIC S9(9) COMP.\n      *             A(THE DCB FOR THE SYS1.SVCLIB DATA SET)\n       05  CVT-CVTTPC   PIC S9(9) COMP.\n      *             A(THE TIMER SUPERVISOR WORK AREA)\n       05  CVT-CVTRS05C PIC X(2).\n      *             RESERVED\n       05  CVT-CVTICPID PIC S9(4) COMP.\n      *             IPL'ED CPU PHYSICAL ID\n       05  CVT-CVTRS060 PIC X(4).\n      *             RESERVED\n       05  CVT-CVTCUCB  PIC S9(9) COMP.\n      *             A(THE UNIT CONTOL MODULE (UCM))\n       05  CVT-CVTQTE00 PIC S9(9) COMP.\n      *             A(THE TIMER ENQUEUE ROUTINE FOR INTERVAL TIMER)\n       05  CVT-CVTQTD00 PIC S9(9) COMP.\n      *             A(THE TIMER DEQUEUE ROUTINE FOR INTERVAL TIMER)\n       05  CVT-CVTSTB   PIC S9(9) COMP.\n      *             A(THE I/O DEVICE STATISTICS TABLE)\n       05  CVT-CVTDCB   PIC X(1).\n      *             OPERATING SYSTEM\n      *             X'80' - S/370-XA MODE EXECUTION\n      *             X'40' - OPTION 1 (PCP) SSS.\n      *             X'20' - OPTION 2 (MFT) SPS, OS/VS1\n      *             X'10' - OPTION 4 (MVT) MS1, OS/VS2\n      *             X'08' - INDICATOR THAT THE CVTOSLVL AREA IS\n      *             PRESENT AND MAY BE REFERENCED.\n      *             X'04' - MODEL 65 MULTIPROCESSING\n      *             X'02' - DYNAMIC ADDRESS TRANSLATION BY CPU\n      *             X'01' - MULTIPLE MEMORY OPTION OF OS/VS2\n       05  CVT-CVTDCBA  PIC X(3).\n      *             A(THE DCB FOR THE SYS1.LOGREC\n      *             (OUTBOARD RECORDER) DATA SET FOR SYSTEM\n      *             ENVIRONMENT RECORDING (SER))\n       05  CVT-CVTSV76M PIC S9(9) COMP.\n      *             SVC 76 MESSAGE COUNT FIELD (OS/VS2)\n       05  CVT-CVTIXAVL PIC S9(9) COMP.\n      *             A(THE I/O SUPERVISOR'S FREELIST\n      *             POINTER WHICH CONTAINS THE ADDRESS OF THE\n      *             NEXT REQUEST ELEMENT  (OS/VS1))\n      *             A(THE I/O SUPERVISOR'S\n      *             COMMUNICATION AREA (IOCOM)  (OS/VS2))\n       05  CVT-CVTNUCB  PIC S9(9) COMP.\n      *             RESERVED\n       05  CVT-CVTFBOSV PIC S9(9) COMP.\n      *             A(PROGRAM FETCH ROUTINE)\n       05  CVT-CVT0DS   PIC S9(9) COMP.\n      *             A(ENTRY POINT OF THE DISPATCHER)\n       05  CVT-CVTECVT  PIC S9(9) COMP.\n      *             POINTER TO THE EXTENDED CVT\n       05  CVT-CVTDAIRX PIC S9(9) COMP.\n      *             A(THE 31- BIT ENTRY\n      *             POINT OF IKJDAIR, TSO DYNAMIC ALLOCATION\n      *             INTERFACE ROUTINE.)\n       05  CVT-CVTMSER  PIC S9(9) COMP.\n      *             A(DATA AREA OF MASTER SCHEDULER\n      *             RESIDENT DATA AREA)\n       05  CVT-CVT0PT01 PIC S9(9) COMP.\n      *             A(BRANCH ENTRY POINT OF POST ROUTINE)\n       05  CVT-CVTTVT   PIC S9(9) COMP.\n      *             A(TSO VECTOR TABLE)\n       05  CVT-CVTSV76C PIC X(4).\n      *             SVC 76 MESSAGE CONTROL FIELD. HIGH-ORDER\n      *             BIT IS DEFINED, AND ALL OTHER BITS ARE\n      *             ZERO. (OS/VS2)\n      *             X'80' - SVC 76 ENQUEUE SWITCH. THIS IS THE\n      *             HIGH-ORDER BIT OF CVTSV76C.  (OS/VS2)\n       05  CVT-CVTMZ00  PIC S9(9) COMP.\n      *             HIGHEST ADDRESS IN VIRTUAL STORAGE FOR\n      *             THIS MACHINE X'7FFFFFFF'\n       05  CVT-CVT1EF00 PIC S9(9) COMP.\n      *             A(ROUTINE WHICH CREATES IRB'S FOR EXITS)\n       05  CVT-CVTQOCR  PIC S9(9) COMP.\n      *             GRAPHICS INTERFACE TASK (GFX) FIELD.\n      *             ADDRESS OF SEVENTH WORD OF GFX PARAMETER\n      *             LIST, IF GFX IS ACTIVE.  ZERO IF GFX IS\n      *             NOT ACTIVE\n       05  CVT-CVTQMWR  PIC S9(9) COMP.\n      *             A(THE ALLOCATION COMMUNICATION\n      *             AREA (MAPPED BY IEFZB432) - CONTAINS THE\n      *             ADDRESSES OF SERVICE ROUTINES AND THE\n      *             CHAIN OF MOUNT AND VERIFY COMMUNICATION\n      *             AREAS.)\n       05  CVT-CVTSNCTR PIC S9(4) COMP.\n      *             SERIAL NUMBER COUNTER FOR ASSIGNING SERIAL\n      *             NUMBERS TO NON-SPECIFIC, UNLABELED\n      *             MAGNETIC TAPE VOLUMES\n       05  CVT-CVTOPTA  PIC X(1).\n      *             OPTION INDICATORS\n      *             X'80' - CHANNEL CHECK HANDLER (CCH) OPTION\n      *             PRESENT-RECOVERY MANAGEMENT SUPPORT (RMS)\n      *             X'40' - ALTERNATE PATH RETRY (APR) OPTION\n      *             PRESENT-RECOVERY MANAGEMENT SUPPORT (RMS)\n      *             X'20' - DYNAMIC DEVICE RECONFIGURATION (DDR)\n      *             OPTION PRESENT - RECOVERY MANAGEMENT\n      *             SUPPORT (RMS) (OS/VS1)\n      *             DDR SYSTEM-INITIATED SWAP ACTIVE (OS/VS2)\n      *             X'10' - NIP IS EXECUTING\n      *             X'04',,C'X' - DO NOT TRANSLATE EXCP V=R.\n      *             X'02' - ASCII TAPE PROCESSING IS GENERATED\n      *             IN THIS SYSTEM\n      *             X'01' - CPU HAS EXTENDED PRECISION FLOATING\n      *             POINT FEATURE\n       05  CVT-CVTOPTB  PIC X(1).\n      *             MISCELLANEOUS FLAGS\n      *             X'80' - CPU HAS STORE PROTECTION FEATURE\n      *             (OS/VS1)\n      *             X'40' - IF ON, HARDWARE HAS THE CLOCK COM-\n      *             PARATOR AND CPU TIMER FEATURE INSTALLED,\n      *             AND OS/VS1 SYSGEN HAS SPECIFIED THIS\n      *             FEATURE (OS/VS1)\n      *             X'20' - CPU HAS TIME-OF-DAY CLOCK FEATURE\n      *             X'10' - SYS1.LOGREC IS UNAVAILABLE FOR ERROR\n      *             RECORDING. ALWAYS SET TO ZERO FOR\n      *             OS/VS1.\n      *             X'08' - NIP SETS THIS BIT TO 1 WHEN DEVICE\n      *             TESTING IS COMPLETE.  IF 1, I/O SUPERVISOR\n      *             USES AN ALTERNATE PATH TO A DEVICE WHEN A\n      *             CONDITION CODE OF 3 EXISTS.  THIS BIT IS\n      *             RESET TO 0 BY NIP AFTER THE LINK PACK\n      *             AREA IS INITIALIZED.\n      *             X'04' - CPU HAS FETCH PROTECTION FEATURE\n      *             (OS/VS1)\n      *             X'02' - VS1 ASSIST IS AVAILABLE FOR USE\n      *             (OS/VS1)\n      *             X'01' - VS1 ASSIST SUBSET IS AVAILABLE FOR\n      *             USE (OS/VS1)\n       05  CVT-CVTQCDSR PIC S9(9) COMP.\n      *             A(CDE SEARCH ROUTINE (OS/VS2))\n       05  CVT-CVTQLPAQ PIC S9(9) COMP.\n      *             A(POINTER TO MOST RECENT ENTRY\n      *             ON LINK PACK AREA CDE QUEUE  (OS/VS2))\n       05  CVT-CVTENFCT PIC S9(9) COMP.\n      *             A(EVENT NOTIFICATION CONTROL TABLE)\n       05  CVT-CVTSMCA  PIC S9(9) COMP.\n      *             A(THE SYSTEM MANAGEMENT CONTROL\n      *             AREA (SMCA) IF THE SYSTEM MANAGEMENT\n      *             FACILITIES (SMF) OPTION IS PRESENT IN THE\n      *             SYSTEM. OTHERWISE, ZERO.)\n       05  CVT-CVTABEND PIC S9(9) COMP.\n      *             A(SECONDARY CVT FOR ABEND IN EOT\n      *             (OS/VS2))\n       05  CVT-CVTUSER  PIC S9(9) COMP.\n      *             A WORD AVAILABLE TO THE USER\n       05  CVT-CVTMDLDS PIC S9(9) COMP.\n      *             RESERVED FOR MODEL-DEPENDENT SUPPORT\n       05  CVT-CVTQABST PIC X(2).\n      *             SVC 13 - AN ABEND INVOCATION (OS/VS2)\n       05  CVT-CVTLNKSC PIC X(2).\n      *             SVC 6 - A LINK INVOCATION\n       05  CVT-CVTTSCE  PIC S9(9) COMP.\n      *             A(THE FIRST TIME SLICE CONTROL\n      *             ELEMENT (TSCE))\n       05  CVT-CVTPATCH PIC S9(9) COMP.\n      *             A(A 200-BYTE FE PATCH AREA)\n       05  CVT-CVTRMS   PIC S9(9) COMP.\n      *             RECOVERY MANAGEMENT SUPPORT (RMS)\n      *             COMMUNICATIONS VECTOR. ADDRESS OF A\n      *             MACHINE STATUS BLOCK.\n       05  CVT-CVTSPDME PIC S9(9) COMP.\n      *             SERVICE PROCESSOR DAMAGE MONITOR ECB.\n       05  CVT-CVT0SCR1 PIC S9(9) COMP.\n      *             A(THE SECTOR CALCULATION ROUTINE\n      *             FOR ROTATIONAL POSITION SENSING (RPS))\n       05 CVT-CVTGTF.\n      *             GENERALIZED TRACE FACILITY (GTF) CONTROL WORD\n       10  CVT-CVTGTFST PIC X(1).\n      *             GTF FLAG BYTES\n      *             X'80' - IF ZERO, GTF NOT ACTIVE. IF ONE, GTF\n      *             ACTIVE. (OS/VS2)\n      *             X'40' - SERVICE PROCESSOR DAMAGE.\n      *             (1) INDICATES DAMAGE.\n      *             (0) INDICATES NO DAMAGE.\n      *             X'20' - WAITING FOR SERVICE PROCESSOR\n      *             RESPONSE.\n      *             (1) INDICATES OUTSTANDING REQUEST.\n      *             (0) INDICATES NO OUTSTANDING\n      *             REQUEST.\n      *             X'04' - TRACE=USR SPECIFIED. USER-REQUESTED TRACE\n      *             DATA IS TO BE INCLUDED IN THE TRACE DATA\n      *             SET.\n      *             X'02' - GTF IS ACTIVE AND TRACING RNIO EVENTS\n       10  CVT-CVTGTFA  PIC X(3).\n      *             A(MAIN MONITOR CALL ROUTING TABLE, MCHEAD\n      *             (OS/VS2)\n       05 CVT-CVTAQAVT.\n      *             ADDRESS OF THE FIRST WORD OF THE TCAM\n      *             DISPATCHER WHICH CONTAINS THE ADDRESS OF\n      *             THE ADDRESS VECTOR TABLE (AVT).  IF ZERO,\n      *             TCAM IS NOT STARTED.\n       10  CVT-CVTTCMFG PIC X(1).\n      *             TCAM FLAGS\n      *             X'80' - TCAM IS READY TO ACCEPT USERS\n      *             X'40' - LOCAL DEVICE ATTACHED TO TCAM\n      *             X'20' - MULTIPLE TCAM FEATURE ACTIVE.\n       10  CVT-CVTAQAVB PIC X(3).\n      *             SAME AS CVTAQAVT ABOVE\n       05  CVT-CVTRS0F4 PIC X(4).\n      *             RESERVED\n       05  CVT-CVTSAF   PIC S9(9) COMP.\n      *             A(ROUTER VECTOR TABLE.)\n      *\n       05  CVT-CVTEXT1  PIC S9(9) COMP.\n      *             A(OS - OS/VS COMMON EXTENSION)\n      *\n       05  CVT-CVTCBSP  PIC S9(9) COMP.\n      *             A(ACCESS METHOD CONTROL BLOCK STRUCTURE)\n       05  CVT-CVTPURG.\n      *             ADDRESS OF SUBSYSTEM PURGE ROUTINE\n       10  FILLER       PIC X(1).\n      *             RESERVED - FIRST BYTE OF CVTPURG\n       10  CVT-CVTPURGA PIC X(3).\n      *             A(SUBSYSTEM PURGE ROUTINE)\n       05  CVT-CVTAMFF  PIC X(4).\n      *             RESERVED FOR ACCESS METHOD FLAGS\n       05  CVT-CVTQMSG  PIC S9(9) COMP.\n      *             A(INFORMATION TO BE PRINTED BY ABEND)\n       05  CVT-CVTDMSR.\n      *             SAME AS CVTDMSRA BELOW\n       10  CVT-CVTDMSRF  PIC X(1).\n      *             - OPEN/CLOSE/EOV FLAG BYTE. SETTING BOTH\n      *             BIT 0 AND BIT 1 ON WILL CAUSE BOTH KINDS\n      *             OF DUMPS TO BE TAKEN.  THESE BITS ARE USED\n      *             DURING TESTING AND DEBUGGING WHEN OTHER\n      *             DEBUG METHODS ARE INEFFECTIVE.  (OS/VS2)\n      *             X'80' - SET BY COREZAP. WILL CAUSE AN SDUMP TO BE\n      *             TAKEN AND IEC999I MESSAGE ISSUED FOR EVERY\n      *             ABEND ISSUED WITHIN AN OPEN/CLOSE/EOV OR\n      *             DADSM FUNCTION. (OS/VS2)\n      *             X'40' - SET BY COREZAP. WILL CAUSE AN ABEND DUMP\n      *             TO BE TAKEN FOR EVERY ABEND ISSUED WITHIN\n      *             AN OPEN/CLOSE/EOV OR DADSM FUNCTION.\n      *             (OS/VS2)\n       10  CVT-CVTDMSRA  PIC X(3).\n      *        AL3(0) - ADDRESS OF THE OPEN/CLOSE/EOV SUPERVISORY\n      *             ROUTINE IN THE NUCLEUS.  THIS ROUTINE\n      *             HANDLES THE ROUTING OF CONTROL AMONG THE\n      *             I/O SUPPORT ROUTINES.\n       05  CVT-CVTSFR    PIC S9(9) COMP.\n      *             ADDRESS OF SETFRR ROUTINE\n      *             (IEAVTSFR)\n       05  CVT-CVTGXL    PIC S9(9) COMP.\n      *             ADDRESS OF CONTENTS SUPERVISION\n      *             MEMORY TERMINATION ROUTINE\n      *             OWNERSHIP - CONTENTS SUPERVISION.\n      *\n       05  CVT-CVTREAL   PIC S9(9) COMP.\n      *             ADDRESS OF THE VIRTUAL STORAGE\n      *             BYTE FOLLOWING THE HIGHEST V=R\n      *             STORAGE ADDRESS.\n       05  CVT-CVTPTRV   PIC S9(9) COMP.\n      *             ADDRESS OF PAGING SUPERVISOR GENERAL\n      *             ROUTINE TO TRANSLATE 24 BIT REAL\n      *             ADDRESSES TO VIRTUAL ADDRESSES.\n       05  CVT-CVTIHVP   PIC S9(9) COMP.\n      *             POINTER TO IHV$COMM. INITIALIZED TO\n      *             ZERO. OWNER: IHV/DATA HANDLER.\n      *             SET BY: IHVSTRTM.\n      *             SERIALIZATION: NONE.\n       05  CVT-CVTJESCT  PIC S9(9) COMP.\n      *             A(IEFJESCT) - ADDRESS OF JOB ENTRY SUBSYSTEM (JES)\n      *             CONTROL TABLE\n       05  CVT-CVTRS12C  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTTZ     PIC S9(9) COMP.\n      *             DIFFERENCE BETWEEN LOCAL TIME AND\n      *             GREENWICH MEAN TIME IN BINARY UNITS OF\n      *             1.048576 SECONDS\n      *             INITIALIZED DURING NIP PROCESSING\n      *             OF SYS1.PARMLIB CLOCKXX MEMBERS\n       05  CVT-CVTMCHPR  PIC S9(9) COMP.\n      *             ADDRESS OF MACHINE CHECK PARAMETER LIST\n      *\n       05  CVT-CVTEORM   PIC S9(9) COMP.\n      *             POTENTIAL REAL HIGH STORAGE\n      *             ADDRESS (OS/VS2)\n       05  CVT-CVTPTRV3  PIC S9(9) COMP.\n      *             ADDRESS OF PAGING SUPERVISOR ROUTINE\n      *             TO TRANSLATE REAL ADDRESSES WHICH MAY\n      *             EXCEED 24 BITS TO VIRTUAL ADDRESSES.\n       05  CVT-CVTLKRM   PIC S9(9) COMP.\n      *             ADDRESS OF CML LOCK RESOURCE\n      *             MANAGER\n       05  CVT-CVTAPF.\n      *             SAME AS CVTAPFA BELOW\n       10  FILLER   PIC X(1).\n      *             RESERVED - FIRST BYTE OF CVTAPF\n       10  CVT-CVTAPFA   PIC X(3).\n      *             ADDRESS OF BRANCH ENTRY POINT IN\n      *             AUTHORIZED PROGRAM FACILITY (APF) ROUTINE\n       05  CVT-CVTEXT2.\n      *             ADDRESS OF OS/VS1 - OS/VS2 COMMON\n      *             EXTENSION\n       10  FILLER        PIC X(1).\n      *             RESERVED - FIRST BYTE OF CVTEXT2\n       10  CVT-CVTEXT2A  PIC X(3).\n      *             SAME AS CVTEXT2 ABOVE\n       05  CVT-CVTHJES.\n      *        0A - SAME AS CVTHJESA BELOW\n       10  FILLER        PIC X(1).\n      *             RESERVED - FIRST BYTE OF CVTHJES\n       10  CVT-CVTHJESA  PIC X(3).\n      *             ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM\n      *             (JES) COMMUNICATION VECTOR TABLE\n       05  CVT-CVTRSTW2.\n      *             STATUS DATA FOR RESTART FLIH\n      *             OWNERSHIP: RESTART FLIH\n      *             SERIALIZATION: RESTART RESOURCE\n       10  CVT-CVTRSTCP  PIC X(1).\n      *             LOGICAL CPU ADDRESS OF TARGET OF\n      *             RESTART.\n       10  CVT-CVTRSTRS  PIC X(1).\n      *             RESTART REASON.\n       10  FILLER        PIC X(2).\n      *             RESERVED FOR RESTART FLIH\n       05  CVT-CVTSNAME  PIC X(8).\n      *             SYSTEM NAME FOR CURRENT SYSTEM.\n       05  CVT-CVTGETL   PIC S9(9) COMP.\n      *             ADDRESS OF IKJGETL, TSO GET LINE ROUTINE\n       05  CVT-CVTLPDSR  PIC S9(9) COMP.\n      *             ADDRESS OF LINK PACK AREA (LPA) DIRECTORY\n      *             SEARCH ROUTINE\n       05  CVT-CVTPVTP   PIC S9(9) COMP.\n      *             ADDRESS OF PAGE VECTOR TABLE\n       05  CVT-CVTLPDIA.\n      *             ADDRESS OF LINK PACK AREA (LPA) DIRECTORY\n      *             (ON PAGE BOUNDARY)\n       10  CVT-CVTDIRST  PIC X(1).\n      *             FLAG BYTE\n      *             X'80' - LPA DIRECTORY HAS BEEN INITIALIZED BY NIP\n       10  CVT-CVTLPDIR  PIC X(3).\n      *             ADDRESS OF LINK PACK AREA (LPA) DIRECTORY\n      *             (ON PAGE BOUNDARY)\n       05  CVT-CVTRBCB   PIC S9(9) COMP.\n      *             ADDRESS OF THE RECORD BUFFER'S\n      *             CONTROL BLOCK\n       05  CVT-CVTRS170  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTSLIDA.\n      *             IDENTITY OF TCB CAUSING SUPERVISOR LOCK\n      *             BYTE (CVTSYLK) TO BE SET OR IDENTITY OF\n      *             TCB THAT SECOND EXIT PROCESSING IS FOR\n      *             WHEN CVTSEIC=1\n       10  CVT-CVTSYLK   PIC X(1).\n      *             SUPERVISOR LOCK. ONLY ENABLED TASKS MAY\n      *             BE DISPATCHED\n      *             X'FF' - SET LOCK BYTE\n      *             X'00' - RESET LOCK BYTE\n       10  CVT-CVTSLID   PIC X(3).\n      *             SAME AS CVTSLIDA ABOVE\n       05  CVT-CVTFLAGS.\n      *             SYSTEM GLOBAL FLAGS\n       10  CVT-CVTFLAG1  PIC X(1).\n      *             FLAG BYTE\n      *             X'80' - IF ONE REAL STORAGE MANAGER WINDOW\n      *             WAS BUILT, INITIALIZED BY NIP.\n      *             X'40' - SERVICE PROCESSOR ARCHITECTURE\n      *             SUPPORTED.\n      *             X'20' - CUSE. SET BY NIP\n      *             X'10' - IF ONE, MOVEPAGE CAPABILITY IS\n      *             PRESENT ON THIS SYSTEM. INITIALIZED BY NIP\n      *             X'08' - SUBPOOL OVERRIDE IS SUPPORTED.\n      *             INITIALIZED BY NIP.\n       10  CVT-CVTRS179  PIC X(3).\n      *             RESERVED\n       05  CVT-CVTRT03   PIC S9(9) COMP.\n      *             ADDRESS OF SRB TIMING\n      *             INITIALIZATION MODULE.\n       05  CVT-CVTRS180  PIC X(8).\n      *             RESERVED\n       05  CVT-CVTEXSNR  PIC S9(9) COMP.\n      *             ADDRESS OF EXCESSIVE SPIN NOTIFICATION\n      *             ROUTINE\n       05  CVT-CVTEXSNL  PIC X(1).\n      *             SERIALIZATION BYTE FOR EXCESSIVE SPIN\n      *             NOTIFICATION ROUTINE\n       05  CVT-CVTSPVLK  PIC X(1).\n      *             NUMBER OF TASKS WHICH HAVE TERMINATED\n      *             WHILE OWNING SUPERVISOR LOCK WITHOUT\n      *             OPERATOR HAVING YET BEEN NOTIFIED\n       05  CVT-CVTCTLFG  PIC X(1).\n      *             SYSTEM CONTROL FLAGS\n      *             X'10' - DEVSTAT OPTION IN EFFECT. DEVICE ADDRESS\n      *             FOR 2319, 3330, 2314, 3330-1, 3340 CAN\n      *             VARY ACROSS SYSTEMS\n      *             X'04' - MULTIPROCESSING CODE IS NOT IN THE SYSTEM\n      *\n      *             X'02' - GENERALIZED TRACE FACILITY (GTF) HAS\n      *             SUPPRESSED SUPERVISOR TRACE\n      *             X'01' - SVC DUMP HAS SUPPRESSED SUPERVISOR TRACE\n       05  CVT-CVTAPG    PIC X(1).\n      *             DISPATCHING PRIORITY OF AUTOMATIC PRIORITY\n      *             GROUP (APG)\n       05  CVT-CVTTRACE  PIC X(2).\n      *             BR 11 - RESERVED\n       05  CVT-CVTTRAC2  PIC X(2).\n      *             BR 11 - RESERVED\n       05  CVT-CVTRSCN   PIC S9(9) COMP.\n      *             ADDRESS OF ROUTINE TO SCAN TCB TREE\n       05  CVT-CVTTAS    PIC S9(9) COMP.\n      *             ADDRESS OF ROUTINE TO TRANSFER ADDRESS\n      *             SPACE\n       05  CVT-CVTTRCRM  PIC S9(9) COMP.\n      *             ADDRESS POINTER OF THE SYSTEM\n      *             TRACE RESOURCE MANAGER.\n       05  CVT-CVTSHRVM  PIC S9(9) COMP.\n      *             LOWEST ADDRESS OF SHARED VIRTUAL STORAGE\n      *             AREA. THIS ADDRESS WILL BE THE BEGINNING\n      *             OF THE COMMON SERVICE AREA (CSA)\n       05  CVT-CVT0VL01  PIC S9(9) COMP.\n      *             ENTRY POINT ADDRESS OF VALIDITY CHECK\n      *             ROUTINE (IEA0VL01) USED TO COMPARE\n      *             PROTECT KEY OF AN ADDRESS WITH TCB\n      *             PROTECT KEY\n       05  CVT-CVTPPGMX  PIC S9(9) COMP.\n      *             ADDRESS POINTER FOR MVS/370-XA.\n       05  CVT-CVTRMFPT  PIC S9(9) COMP.\n      *             ADDRESS OF RMF COLLECTION ROUTINE\n       05  CVT-CVTGVT    PIC S9(9) COMP.\n      *             ADDRESS OF THE GRS VECTOR TABLE\n       05  CVT-CVTASCRF  PIC S9(9) COMP.\n      *             CREATED ASCB QUEUE HEADER\n       05  CVT-CVTASCRL  PIC S9(9) COMP.\n      *             CREATED ASCB QUEUE TRAILER\n       05  CVT-CVTPUTL   PIC S9(9) COMP.\n      *             ADDRESS OF IKJPUTL, TSO PUT LINE ROUTINE\n       05  CVT-CVTSRBRT  PIC S9(9) COMP.\n      *             DISPATCHER RETURN ADDRESS FOR SRB ROUTINES\n       05  CVT-CVTOLT0A  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO OLTEP MEMORY TERMINATION\n      *             RESOURCE MANAGER\n       05  CVT-CVTSMFEX  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO SYSTEM MANAGEMENT\n      *             FACILITIES (SMF) EXCP COUNTING ROUTINE\n      *             FOR VAM WINDOW INTERCEPT\n       05  CVT-CVTCSPIE  PIC S9(9) COMP.\n      *             ENTRY POINT ADDRESS OF THE SUPERVISOR\n      *             CHECKPOINT/RESTART ROUTER (IEAVCKRS).\n      *             RESOLVED BY IEAVNP05 AFTER THE LPA HAS\n      *             BEEN BUILT. PREVIOUSLY CONTAINED THE\n      *             ENTRY POINT ADDRESS OF THE RTM CHECKPOINT/\n      *             RESTART EXIT ROUTINE (IEAVSPI).\n       05  CVT-CVTPTGT   PIC S9(9) COMP.\n      *             ADDRESS OF IKJPTGT, TSO PUTGET ROUTINE\n       05  CVT-CVTSIGPT  PIC X(1).\n      *             SIGP TIMEOUT VALUE.\n       05  CVT-CVTSPDMC  PIC X(1).\n      *             SERVICE PROCESSOR DAMAGE MACHINE\n      *             CHECK LOCK BYTE.\n       05  CVT-CVTDSSAC  PIC X(1).\n      *             DYNAMIC SUPPORT SYSTEM (DSS) ACTIVATED\n      *             FLAG - USED BY RESTART FLIH.  IF X'00',\n      *             DSS NOT INITIALIZED.  IF X'FF', DSS HAS\n      *             BEEN INITIALIZED.\n       05  CVT-CVTRS1D7  PIC X(1).\n      *             RESERVED\n       05  CVT-CVTSTCK   PIC S9(9) COMP.\n      *             ADDRESS OF IKJSTCK, TSO STACK ROUTINE\n       05  CVT-CVTMAXMP  PIC S9(4) COMP.\n      *             MAXIMUM PHYSICAL CPU ADDRESS\n      *             SUPPORTED BY THIS RELEASE.\n       05  CVT-CVTBSM2   PIC X(02).\n      *             RETURN VIA REG 2, BSM 0,2.\n       05  CVT-CVTSCAN   PIC S9(9) COMP.\n      *             ADDRESS OF IKJSCAN, TSO SCAN ROUTINE\n       05  CVT-CVTAUTHL  PIC S9(9) COMP.\n      *             POINTER TO AUTHORIZED LIBRARY TABLE\n       05  CVT-CVTBLDCP  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO BUILD POOL\n       05  CVT-CVTGETCL  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO GET CELL\n       05  CVT-CVTFRECL  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO FREE CELL\n       05  CVT-CVTDELCP  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO DELETE POOL\n       05  CVT-CVTCRMN   PIC S9(9) COMP.\n      *             BRANCH ENTRY TO SVC 120 (GETMAIN/FREEMAIN)\n       05  CVT-CVTCRAS   PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF BRANCH\n      *             ENTRY TO 'CREATE ADDRESS SPACE'\n       05  CVT-CVTQSAS   PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF\n      *             BRANCH ENTRY TO TASK TERMINATION\n       05  CVT-CVTFRAS   PIC S9(9) COMP.\n      *             POINTER DEFINED ENTRY TO TASK\n      *             TERMINATION\n       05  CVT-CVTS1EE   PIC S9(9) COMP.\n      *             BRANCH ENTRY TO STAGE 1 EXIT EFFECTOR\n       05  CVT-CVTPARS   PIC S9(9) COMP.\n      *             ADDRESS OF IKJPARS, TSO PARSE ROUTINE\n       05  CVT-CVTQUIS   PIC S9(9) COMP.\n      *             BRANCH ENTRY TO QUIESCE\n       05  CVT-CVTSTXU   PIC S9(9) COMP.\n      *             BRANCH ENTRY TO ATTENTION EXIT EPILOGUE\n       05  CVT-CVTOPTE   PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS TO SYSEVENT\n       05  CVT-CVTSDRM   PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS OF THE RESOURCE\n      *             MANAGER ROUTINE FOR SVC DUMP.  THIS\n      *             ROUTINE CAN BE INVOKED BY MEMORY\n      *             TERMINATION\n       05  CVT-CVTCSRT   PIC S9(9) COMP.\n      *             POINTER TO CALLABLE SERVICE REQUEST TABLE\n       05  CVT-CVTAQTOP  PIC S9(9) COMP.\n      *             POINTER TO THE ALLOCATION QUEUE LOCK AREA\n       05  CVT-CVTVVMDI  PIC S9(9) COMP.\n      *             CONSTANT USED BY PAGED LINK PACK AREA\n      *             (LPA) DIRECTORY SEARCH ALGORITHM\n       05  CVT-CVTASVT   PIC S9(9) COMP.\n      *             POINTER TO ADDRESS SPACE VECTOR TABLE\n       05  CVT-CVTGDA    PIC S9(9) COMP.\n      *             POINTER TO GLOBAL DATA AREA (GDA) IN SQA\n       05  CVT-CVTASCBH  PIC S9(9) COMP.\n      *             POINTER TO HIGHEST PRIORITY ADDRESS SPACE\n      *             CONTROL BLOCK (ASCB) ON THE ASCB\n      *             DISPATCHING QUEUE (HEAD OF ASCB QUEUE)\n       05  CVT-CVTASCBL  PIC S9(9) COMP.\n      *             POINTER TO LOWEST PRIORITY ASCB ON THE\n      *             ASCB DISPATCHING QUEUE\n       05  CVT-CVTRTMCT  PIC S9(9) COMP.\n      *             POINTER TO RECOVERY/TERMINATION CONTROL\n      *             TABLE\n       05  CVT-CVTSV60   PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS FOR\n      *             24 OR 31 BIT ADDRESSING MODE\n      *             USERS OF SVC 60.\n      *             ENTRY TO A GLUE ROUTINE.\n       05  CVT-CVTSDMP   PIC S9(9) COMP.\n      *             ADDRESS OF SVC DUMP BRANCH\n      *             ENTRY POINT\n       05  CVT-CVTSCBP   PIC S9(9) COMP.\n      *             ADDRESS OF SCB PURGE RESOURCE MANAGER\n       05  CVT-CVTSDBF   PIC X(4).\n      *             ADDRESS OF 4K SQA BUFFER USED BY SVC\n      *             DUMP. HIGH-ORDER BIT OF THIS CVT WORD\n      *             IS USED AS LOCK TO INDICATE BUFFER IS\n      *             IN USE\n       05  CVT-CVTRTMS   PIC S9(9) COMP.\n      *             ADDRESS OF SERVICABILITY LEVEL INDICATOR\n      *             PROCESSING (SLIP) HEADER\n       05  CVT-CVTTPIOS  PIC S9(9) COMP.\n      *             ADDRESS OF THE TELEPROCESSING I/O\n      *             SUPERVISOR ROUTINE (TPIOS)\n       05  CVT-CVTSIC    PIC S9(9) COMP.\n      *             BRANCH ADDRESS OF THE ROUTINE TO SCHEDULE\n      *             SYSTEM INITIALIZED CANCEL\n       05  CVT-CVTOPCTP  PIC S9(9) COMP.\n      *             ADDRESS OF SYSTEM RESOURCES MANAGER (SRM)\n      *             CONTROL TABLE\n       05  CVT-CVTEXPRO  PIC S9(9) COMP.\n      *             ADDRESS OF EXIT PROLOGUE/TYPE 1 EXIT\n       05  CVT-CVTGSMQ   PIC S9(9) COMP.\n      *             ADDRESS OF GLOBAL SERVICE MANAGER QUEUE\n       05  CVT-CVTLSMQ   PIC S9(9) COMP.\n      *             ADDRESS OF LOCAL SERVICE MANAGER QUEUE\n       05  CVT-CVTGSPL   PIC S9(9) COMP.\n      *             ADDRESS OF GLOBAL SYSTEM PRIORITY LIST QUEUE\n       05  CVT-CVTVWAIT  PIC S9(9) COMP.\n      *             ADDRESS OF WAIT ROUTINE\n       05  CVT-CVTPARRL  PIC S9(9) COMP.\n      *             ADDRESS OF PARTIALLY LOADED DELETE QUEUE\n       05  CVT-CVTAPFT   PIC S9(9) COMP.\n      *             ADDRESS OF AUTHORIZED PROGRAM FACILITY\n      *             (APF) TABLE. INITIALIZED BY NIP.\n       05  CVT-CVTQCS01  PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS TO PROGRAM MANAGER\n      *             USED BY ATTACH\n       05  CVT-CVTFQCB   PIC S9(9) COMP.\n      *             FORMERLY USED BY ENQ/DEQ.\n      *             SHOULD ALWAYS BE ZERO.\n       05  CVT-CVTLQCB   PIC S9(9) COMP.\n      *             FORMERLY USED BY ENQ/DEQ.\n      *             SHOULD ALWAYS BE ZERO.\n       05  CVT-CVTRENQ   PIC S9(9) COMP.\n      *             RESOURCE MANAGER ADDRESS FOR ENQ\n       05  CVT-CVTRSPIE  PIC S9(9) COMP.\n      *             RESOURCE MANAGER FOR SPIE\n       05  CVT-CVTLKRMA  PIC S9(9) COMP.\n      *             RESOURCE MANAGER ADDRESS FOR LOCK MANAGER\n       05  CVT-CVTCSD    PIC S9(9) COMP.\n      *             VIRTUAL ADDRESS OF COMMON SYSTEM DATA AREA\n      *             (CSD). INITIALIZED BY NIP.\n       05  CVT-CVTDQIQE  PIC S9(9) COMP.\n      *             RESOURCE MANAGER FOR EXIT EFFECTORS\n       05  CVT-CVTRPOST  PIC S9(9) COMP.\n      *             RESOURCE MANAGER FOR POST.\n       05  CVT-CVT062R1  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO DETACH\n       05  CVT-CVTVEAC0  PIC S9(9) COMP.\n      *             ASCBCHAP BRANCH ENTRY\n       05  CVT-CVTGLMN   PIC S9(9) COMP.\n      *             GLOBAL BRANCH ENTRY ADDRESS FOR\n      *             GETMAIN/FREEMAIN\n       05  CVT-CVTSPSA   PIC S9(9) COMP.\n      *             POINTER TO GLOBAL WORK/SAVE AREA VECTOR\n      *             TABLE (WSAG)\n       05  CVT-CVTWSAL   PIC S9(9) COMP.\n      *             ADDRESS OF TABLE OF LENGTHS OF LOCAL\n      *             WORK/SAVE AREAS\n       05  CVT-CVTWSAG   PIC S9(9) COMP.\n      *             ADDRESS OF TABLE OF LENGTHS OF GLOBAL\n      *             WORK/SAVE AREAS\n       05  CVT-CVTWSAC   PIC S9(9) COMP.\n      *             ADDRESS OF TABLE OF LENGTHS OF CPU\n      *             WORK/SAVE AREAS\n       05  CVT-CVTRECRQ  PIC S9(9) COMP.\n      *             ADDRESS OF THE RECORDING REQUEST\n      *             FACILITY (PART OF RTM1 - CALLED\n      *             BY RTM2 AND RMS).\n       05  CVT-CVTASMVT  PIC S9(9) COMP.\n      *             POINTER TO AUXILIARY STORAGE MANAGEMENT\n      *             VECTOR TABLE (AMVT)\n       05  CVT-CVTIOBP   PIC S9(9) COMP.\n      *             ADDRESS OF THE BLOCK PROCESSOR CVT\n       05  CVT-CVTSPOST  PIC S9(9) COMP.\n      *             POST RESOURCE MANAGER TERMINATION ROUTINE\n      *             (RMTR) ENTRY POINT\n       05  CVT-CVTRSTWD.\n      *             RESTART RESOURCE MANAGEMENT WORD.\n      *             CONTAINS IDENTIFIER OF USER IF\n      *             RESTART IS IN USE. OTHERWISE, ZERO.\n       10  CVT-CVTRSTCI  PIC S9(4) COMP.\n      *             CPU ID OF THE CPU HOLDING THE RESTART RESOURCE.\n       10  CVT-CVTRSTRI  PIC X(2).\n      *             IDENTIFIER OF OWNING ROUTINE\n       05  CVT-CVTFETCH  PIC S9(9) COMP.\n      *             ADDRESS OF ENTRY POINT FOR BASIC FETCH.\n       05  CVT-CVT044R2  PIC S9(9) COMP.\n      *             IGC044R2 ROUTINE\n       05  CVT-CVTPERFM  PIC S9(9) COMP.\n      *             ADDRESS OF THE PERFORMANCE WORK AREA.\n      *             SET BY IGX00018.\n       05  CVT-CVTDAIR   PIC S9(9) COMP.\n      *             ADDRESS OF IKJDAIR, TSO DYNAMIC\n      *             ALLOCATION INTERFACE ROUTINE\n       05  CVT-CVTEHDEF  PIC S9(9) COMP.\n      *             ADDRESS OF IKJEHDEF, TSO DEFAULT\n      *             SERVICE ROUTINE.\n       05  CVT-CVTEHCIR  PIC S9(9) COMP.\n      *             ADDRESS OF IKJEHCIR, TSO CATALOG\n      *             INFORMATION ROUTINE.\n       05  CVT-CVTSSAP   PIC S9(9) COMP.\n      *             ADDRESS OF SYSTEM SAVE AREA\n       05  CVT-CVTAIDVT  PIC S9(9) COMP.\n      *             POINTER TO APPENDAGE ID VECTOR TABLE\n       05  CVT-CVTIPCDS  PIC S9(9) COMP.\n      *             BRANCH ENTRY FOR DIRECT SIGNAL\n      *             SERVICE ROUTINE\n       05  CVT-CVTIPCRI  PIC S9(9) COMP.\n      *             BRANCH ENTRY FOR REMOTE IMMEDIATE\n      *             SIGNAL SERVICE ROUTINE\n       05  CVT-CVTIPCRP  PIC S9(9) COMP.\n      *             BRANCH ENTRY FOR REMOTE PENDABLE\n      *             SIGNAL SERVICE ROUTINE\n       05  CVT-CVTPCCAT  PIC S9(9) COMP.\n      *             POINTER TO PHYSICAL CCA VECTOR TABLE\n       05  CVT-CVTLCCAT  PIC S9(9) COMP.\n      *             POINTER TO LOGICAL CCA VECTOR TABLE\n       05  CVT-CVTXSFT   PIC S9(9) COMP.\n      *             ADDRESS OF SYSTEM FUNCTION TABLE\n      *             CONTAINING LINKAGE INDEX (LX) AND ENTRY\n      *             INDEX (EX) NUMBERS FOR SYSTEM ROUTINES.\n       05  CVT-CVTXSTKS  PIC S9(9) COMP.\n      *             ADDRESS OF PCLINK STACK (SAVE=YES) ROUTINE.\n       05  CVT-CVTXSTKN  PIC S9(9) COMP.\n      *             ADDRESS OF PCLINK STACK (SAVE=NO) ROUTINE.\n       05  CVT-CVTXUNSS  PIC S9(9) COMP.\n      *             ADDRESS OF PCLINK UNSTACK (SAVE=YES) ROUTINE.\n       05  CVT-CVTPWI    PIC S9(9) COMP.\n      *             ADDRESS OF THE WINDOW INTERCEPT ROUTINE\n       05  CVT-CVTPVBP   PIC S9(9) COMP.\n      *             ADDRESS OF THE VIRTUAL BLOCK PROCESSOR\n       05  CVT-CVTMFCTL  PIC S9(9) COMP.\n      *             POINTER TO MEASUREMENT FACILITY CONTROL BLOCK\n       05  CVT-CVTMFRTR  PIC S9(9) COMP.\n      *             IF MEASUREMENT FACILITY IS ACTIVE,\n      *             CONTAINS ADDRESS OF MEASUREMENT FACILITY\n      *             ROUTINE. OTHERWISE, ADDRESS OF CVTBRET.\n      *             X'80' - IF ONE, I/O SUPERVISOR AND TIMER SECOND\n      *             LEVEL INTERRUPT HANDLER HOOKS BRANCH\n      *             TO MEASUREMENT FACILITY ROUTER.  USED TO\n      *             SET HIGH-ORDER BIT OF CVTMFRTR.\n       05  CVT-CVTVPSIB  PIC S9(9) COMP.\n      *             BRANCH ENTRY TO PAGE SERVICES\n       05  CVT-CVTVSI    PIC S9(9) COMP.\n      *             POINTER DEFINED, BRANCH ENTRY\n      *             TO VAM SERVICES.\n       05  CVT-CVTEXCL   PIC S9(9) COMP.\n      *             ADDRESS POINTER TO THE EXCP\n      *             TERMINATION ROUTINE.\n       05  CVT-CVTXUNSN  PIC S9(9) COMP.\n      *             ADDRESS OF PCLINK UNSTACK\n      *             (SAVE=NO) ROUTINE.\n       05  CVT-CVTISNBR  PIC S9(9) COMP.\n      *             ENTRY POINT ADDRESS OF DISABLED\n      *             SERVICE PROCESSOR INTERFACE MODULE\n       05  CVT-CVTXEXTR  PIC S9(9) COMP.\n      *             ADDRESS OF PCLINK EXTRACT ROUTINE\n       05  CVT-CVTMSFRM  PIC S9(9) COMP.\n      *             ADDRESS OF THE PROCESSOR CONTROLLER.\n       05  CVT-CVTSCPIN  PIC S9(9) COMP.\n      *             ADDRESS OF SCPINFO DATA BLOCK.\n       05  CVT-CVTWSMA   PIC S9(9) COMP.\n      *             ADDRESS OF WAIT STATE MESSAGE AREA\n      *             MUST BE DISPLAYABLE BY OPERATOR\n       05  CVT-CVTRMBR   PIC S9(9) COMP.\n      *             ADDRESS OF REGMAIN BRANCH ENTRY.\n       05  CVT-CVTLFRM   PIC S9(9) COMP.\n      *             LIST FORMAT FREEMAIN BRANCH ENTRY POINT.\n       05  CVT-CVTGMBR   PIC S9(9) COMP.\n      *             LIST FORMAT GETMAIN BRANCH ENTRY POINT.\n       05  CVT-CVT0TC0A  PIC S9(9) COMP.\n      *             ADDRESS OF TASK CLOSE MODULE IFG0TC0A.\n       05  CVT-CVTRLSTG  PIC S9(9) COMP.\n      *             SIZE OF ACTUAL REAL STORAGE ONLINE\n      *             AT IPL TIME IN 'K'. VALUE PLACED\n      *             HERE BY IEAVNIP0.\n       05  CVT-CVTSPFRR  PIC S9(9) COMP.\n      *             'SUPER FRR' ADDRESS (ADDRESS OF\n      *             FUNCTIONAL RECOVERY ROUTINE\n      *             ESTABLISHED AT NIP0 TIME TO\n      *             PROTECT SUPERVISOR CONTROL\n      *             PROGRAM).\n       05  CVT-CVTVEMS0  PIC S9(9) COMP.\n      *             ADDRESS OF MEMORY SWITCH ROUTINE.\n       05  CVT-CVTSVT    PIC S9(9) COMP.\n      *             ADDRESS POINTER FOR FETCH PROTECTED PSASVT.\n       05  CVT-CVTIRECM  PIC S9(9) COMP.\n      *             ADDRESS OF INITIATOR RESOURCE MANAGER.\n       05  CVT-CVTDARCM  PIC S9(9) COMP.\n      *             ADDRESS OF DEVICE ALLOCATION\n      *             RESOURCE MANAGER.\n       05  CVT-CVT0PT02  PIC S9(9) COMP.\n      *             ADDRESS OF POST ENTRY POINT\n      *             IEA0PT02.\n       05  CVT-CVTRS374  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTWTCB   PIC S9(9) COMP.\n      *             ADDRESS OF WAIT STATE TCB.\n       05  CVT-CVTVACR   PIC S9(9) COMP.\n      *             ACR/VARY CPU CHANNEL RECOVERY\n      *             ROUTINE ADDRESS. ADDRESS FILLED IN\n      *             BY VARY CPU PROCESSOR.\n       05  CVT-CVTRECON  PIC S9(9) COMP.\n      *             VARY CPU SHUTDOWN ROUTINE\n      *             ADDRESS. ADDRESS FILLED IN BY\n      *             VARY CPU PROCESSOR.\n       05  CVT-CVTGTFR8  PIC S9(9) COMP.\n      *             GENERALIZED TRACE FACILITY (GTF)\n      *             CONTROL REGISTER 8 INITIALIZATION\n      *             ROUTINE ADDRESS.\n       05  CVT-CVTVSTOP  PIC S9(9) COMP.\n      *             ADDRESS OF VARY CPU STOP CPU\n      *             ROUTINE.\n       05  CVT-CVTVPSA   PIC S9(9) COMP.\n      *             ADDRESS OF COPY OF SYSGEN'ED PSA -\n      *             PLACED HERE BY NIP.\n       05  CVT-CVTRMPTT  PIC S9(9) COMP.\n      *             ADDRESS OF ISTRAMA1, THE VTAM\n      *             RESOURCE MANAGER FOR NORMAL AND\n      *             ABNORMAL TASK TERMINATION.\n       05  CVT-CVTRMPMT  PIC S9(9) COMP.\n      *             ADDRESS OF ISTRAMA2, THE VTAM\n      *             RESOURCE MANAGER FOR NORMAL AND\n      *             ABNORMAL MEMORY TERMINATION.\n       05  CVT-CVTEXP1   PIC S9(9) COMP.\n      *             ADDRESS OF EXIT PROLOGUE WHICH\n      *             RETURNS TO THE DISPATCHER.\n       05  CVT-CVTCSDRL  PIC S9(9) COMP.\n      *             REAL ADDRESS OF COMMON SYSTEM DATA\n      *             AREA (CSD). INITIALIZED BY NIP.\n       05  CVT-CVTSSRB   PIC S9(9) COMP.\n      *             STATUS STOP SRB ENTRY.\n       05  CVT-CVTRS3A4  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTQV1    PIC S9(9) COMP.\n      *             ADDRESS OF QUEUE VERIFICATION FOR\n      *             SINGLE THREADED QUEUES WITH\n      *             HEADERS ONLY.\n       05  CVT-CVTQV2    PIC S9(9) COMP.\n      *             ADDRESS OF QUEUE VERIFICATION FOR\n      *             SINGLE THREADED QUEUES WITH\n      *             HEADER AND TRAILER.\n       05  CVT-CVTQV3    PIC S9(9) COMP.\n      *             ADDRESS OF QUEUE VERIFICATION FOR\n      *             DOUBLE THREADED QUEUES.\n       05  CVT-CVTGSDA   PIC S9(9) COMP.\n      *             ADDRESS OF GLOBAL SYSTEM DUPLEX AREA.\n      *             X'80' - IF HIGH-ORDER BIT IS ONE, THERE IS\n      *             A VALID VALUE IN FOLLOWING 31 BITS.\n       05  CVT-CVTADV    PIC S9(9) COMP.\n      *             ADDRESS OF ADDRESS VERIFICATION ROUTINE.\n       05  CVT-CVTTPIO   PIC S9(9) COMP.\n      *             ADDRESS OF VTAM TPIO (SVC 124) ROUTINE.\n       05  CVT-CVTRS3C0  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTEVENT  PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS TO EVENTS\n      *             (FAST MULTIPLE WAIT ROUTINE).\n       05  CVT-CVTSSCR   PIC S9(9) COMP.\n      *             ADDRESS OF STORAGE SYSTEM\n      *             CONTROLLER RECOVERY MANAGER\n      *             CLEANUP ROUTINE (SSC RMCR).\n       05  CVT-CVTCBBR   PIC S9(9) COMP.\n      *             BRANCH ENTRY ADDRESS TO\n      *             GETMAIN/FREEMAIN.\n       05  CVT-CVTEFF02  PIC S9(9) COMP.\n      *             ADDRESS OF IKJEFF02, TSO MESSAGE\n      *             ISSUER SERVICE ROUTINE.\n       05  CVT-CVTLSCH   PIC S9(9) COMP.\n      *             ADDRESS OF LOCAL SCHEDULE.\n       05  CVT-CVTCDEQ   PIC S9(9) COMP.\n      *             ADDRESS OF PROGRAM MANAGER\n      *             AVAILBLE CDE QUEUE CONTROL AREA.\n       05  CVT-CVTHSM    PIC S9(9) COMP.\n      *             POINTER TO HIERARCHICAL STORAGE\n      *             MANAGER (HSM) QUEUE CONTROL\n      *             TABLE.\n       05  CVT-CVTRAC    PIC S9(9) COMP.\n      *             ADDRESS OF ACCESS CONTROL CVT.\n       05  CVT-CVTCGK    PIC S9(9) COMP.\n      *             ADDRESS OF ROUTINE USED TO CHANGE\n      *             THE KEY OF VIRTUAL PAGES.\n       05  CVT-CVTSRM    PIC S9(9) COMP.\n      *             ADDRESS OF ENTRY TABLE FOR SRM,\n      *             ENTRY TABLE IS INITIALIZED BY\n      *             NIP10.\n       05  CVT-CVT0PT0E  PIC S9(9) COMP.\n      *             ENTRY POINT TO IDENTIFY POST EXIT\n      *             ROUTINES.\n       05  CVT-CVT0PT03  PIC S9(9) COMP.\n      *             POST REINVOCATION ENTRY POINT\n      *             FROM POST EXIT ROUTINES.\n       05  CVT-CVTTCASP  PIC S9(9) COMP.\n      *             POINTER TO THE TSO/VTAM TERMINAL\n      *             CONTROL ADDRESS SPACE (TCAS)\n      *             TABLE.\n       05  CVT-CVTRS3F8  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTJTERM  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF\n      *             AUXILIARY STORAGE MANAGEMENT JOB\n      *             TERMINATION RESOURCE MANAGER.\n       05  CVT-CVTRSUME  PIC S9(9) COMP.\n      *             ADDRESS OF RESUME FUNCTION.\n       05  CVT-CVTTCTL   PIC S9(9) COMP.\n      *             ADDRESS OF TRANSFER CONTROL\n      *             (TCTL) FUNCTION.\n       05  CVT-CVTRMT    PIC S9(9) COMP.\n      *             ADDRESS OF RESOURCE MANAGER\n      *             CONTROL STRUCTURE (RMT)\n       05  CVT-CVTT6SVC  PIC S9(9) COMP.\n      *             ENTRY POINT ADDRESS FOR TYPE 6\n      *             SVC EXIT FUNCTION.\n       05  CVT-CVTSUSP   PIC S9(9) COMP.\n      *             ADDRESS OF SUSPEND ROUTINE.\n       05  CVT-CVTIHASU  PIC S9(9) COMP.\n      *             ADDRESS OF BIT STRING.\n       05  CVT-CVTRS418  PIC X(4).\n      *             RESERVED.\n       05  CVT-CVTIDEVN  PIC S9(9) COMP.\n      *             ADDRESS OF DEVICE NUMBER CONVERSION\n      *             ROUTINE\n       05  CVT-CVTSMF83  PIC S9(9) COMP.\n      *             ADDRESS OF BRANCH ENTRY TO SMF SVC 83\n       05  CVT-CVTSMFSP  PIC S9(9) COMP.\n      *             ADDRESS OF SMF SUSPEND HANDLER.\n       05  CVT-CVTMSFCB  PIC S9(9) COMP.\n      *             ADDRESS OF MAINTENANCE AND\n      *             SERVICE FACILITY CONTROL BLOCK\n       05  CVT-CVTHID    PIC S9(9) COMP.\n      *             ADDRESS OF SCP HOST ID.\n       05  CVT-CVTPSXM   PIC S9(9) COMP.\n      *             ADDRESS OF CROSS MEMORY PAGE\n      *             FIX AND PAGE FREE.\n       05  CVT-CVTUCBSC  PIC S9(9) COMP.\n      *             ADDRESS OF UCB SCAN SERVICE\n       05  CVT-CVTTPUR   PIC S9(9) COMP.\n      *             DDR QUEUE OF TAPE UNIT-RECORD\n      *             SWAP REQUESTS.\n       05  CVT-CVTDPUR   PIC S9(9) COMP.\n      *             DDR QUEUE OF DASD SWAP REQUESTS.\n       05  CVT-CVTTRPOS  PIC S9(9) COMP.\n      *             DDR QUEUE OF TAPES TO BE REPRESENTED\n       05  CVT-CVTRESTX  PIC S9(9) COMP.\n      *             VIRTUAL ADDRESS OF TEXT TO BE\n      *             PLACED ON CONSOLE FRAME.\n       05  CVT-CVTXCPCT  PIC S9(4) COMP.\n      *             MAXIMUM EXCP COUNT PER ADDRESS SPACE\n       05 CVT-CVTCALL    PIC X(2).\n      *             BASSM 14,15 - POINTER USED VIA AN EXECUTE\n      *             INSTRUCTION TO BRANCH TO USERS EXITS\n       05  CVT-CVTVFIND  PIC S9(9) COMP.\n      *             THE POINTER TO VIRTUAL FETCH BUILD\n      *             AND FIND ROUTINE.\n       05  CVT-CVTVFGET  PIC S9(9) COMP.\n      *             THE POINTER TO VIRTUAL FETCH GET\n      *             ROUTINE.\n       05  CVT-CVTVFMEM  PIC S9(9) COMP.\n      *             THE POINTER TO VIRTUAL FETCH\n      *             MEMORY TERMINATION RESOURCE MANAGER\n       05  CVT-CVTVFCB   PIC S9(9) COMP.\n      *             THE POINTER TO VIRTUAL FETCH INTERNAL\n      *             CONTROL BLOCK IN CSA, INITIALIZED TO\n      *             ZERO AND SET TO NON-ZERO VALUE BY\n      *             VIRTUAL FETCH INITIALIZATION ROUTINE.\n       05  CVT-CVTPGSER  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF ENTRY\n      *             TO PAGE SERVICES (FIX,FREE,LOAD,\n      *             OUT,RLSE,ANYWHER).\n       05  CVT-CVTTSKI   PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF TASK\n      *             MANAGEMENT/STORAGE MANAGEMENT\n      *             INTERFACE ROUTINE.\n       05  CVT-CVTCPGUB  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF CPOOL\n      *             GET UNCONDITIONAL BRANCH ENTRY ROUTINE\n       05  CVT-CVTCPGUP  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF CPOOL\n      *             GET UNCONDITIONAL PC-ENTRY ROUTINE\n       05  CVT-CVTCPGTC  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF GET\n      *             UNCONDITIONAL ROUTINE.\n       05  CVT-CVTCPFRE  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF CPOOL\n      *             FREE ROUTINE.\n       05  CVT-CVTSLIST  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF VSM\n      *             LIST SERVICE.\n       05  CVT-CVTSREGN  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF VSM\n      *             REGION SIZE.\n       05  CVT-CVTSLOC   PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF VSM\n      *             LOCATOR SERVICE.\n       05  CVT-CVTCPBDB  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF CPOOL\n      *             BUILD ENTRY ROUTINE.\n       05  CVT-CVTCPDLB  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF CPOOL\n      *             DELETE BRANCH ENTRY ROUTINE.\n       05  CVT-CVTDOFFS  PIC S9(9) COMP.\n      *             STARTING REAL ADDRESS OF DAT-OFF\n      *             NUCLEUS.\n       05  CVT-CVTDOFFE  PIC S9(9) COMP.\n      *             ENDING REAL ADDRESS OF DAT-OFF\n      *             NUCLEUS.\n       05  CVT-CVTRCEP   PIC S9(9) COMP.\n      *             ADDRESS OF THE RSM CONTROL AND\n      *             ENUMERATION AREA.\n       05  CVT-CVTCPGUS  PIC S9(9) COMP.\n      *             ADDRESS OF CPOOL GET\n      *             UNCONDITIONAL PC-ENTRY ROUTINE\n      *             WHICH SAVES SECONDARY ASID STATUS\n       05  CVT-CVTGRRGN  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF GET\n      *             REAL REGION ROUTINE.\n       05  CVT-CVTGVRGN  PIC S9(9) COMP.\n      *             POINTER DEFINED ADDRESS OF GET\n      *             VIRTUAL REGION ROUTINE.\n       05  CVT-CVTIONLV  PIC X(1).\n      *             DEFAULT VALUE OF IOS LEVEL\n       05  CVT-CVTRS4A1  PIC X(3).\n      *             RESERVED\n      *\n      *    EXIT CODE FOR NORMAL AND/OR ABNORMAL END APPENDAGES FOR I/O\n      *    DRIVERS.\n      *\n       05 CVT-CVTRCZRT   PIC X(2).\n      *             SR 15,15 - SET REGISTER 15 TO ZERO.\n       05  FILLER        PIC X(2).\n      *             RETURN VIA A BSM.\n       05  CVT-CVTRS4A8  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTSMEXT  PIC S9(9) COMP.\n      *             ADDRESS OF STORAGE MAP EXTENSION.\n       05  CVT-CVTNUCMP  PIC S9(9) COMP.\n      *             ADDRESS OF NUCLEUS MAP.\n       05  CVT-CVTXAFL   PIC X(1).\n      *             FLAG BYTE FOR MVS/XA PROCESSING.\n      *             X'80' - EXPLICIT LOAD PROCESSING REQUIRED\n      *             FOR CONTENTS SUPERVISOR RIM.\n       05  CVT-CVTRS4B5  PIC X(3).\n      *             RESERVED\n       05  CVT-CVTVTAM   PIC S9(9) COMP.\n      *             ADDRESS OF VTAM COMMAND PROCESSOR\n       05  CVT-CVTSPIP   PIC S9(9) COMP.\n      *             ADDRESS OF RTM INTERFACE TO\n      *             RETURN PROGRAM MASK TO CONTENTS\n      *             SUPERVISOR,(ON SPIE/ESPIE).\n       05  CVT-CVTCKRAS.\n      *             OLD NAME FOR CVTDFA FIELD.\n       10  CVT-CVTDFA    PIC S9(9) COMP.\n      *             ADDRESS OF DFP ID TABLE, MAPPED BY THE DFA.\n       05  CVT-CVTNVT0   PIC S9(9) COMP.\n      *             ADDRESS OF DATA IN DAT-ON NUCLEUS\n       05  CVT-CVTCSOMF  PIC S9(9) COMP.\n      *             OWNER OF CHANNEL MEASUREMENT FACILITY.\n       05  CVT-CVTCSOAL  PIC S9(9) COMP.\n      *             OWNER OF ADDRESS LIMIT FACILITY.\n       05  CVT-CVTICHPT  PIC S9(9) COMP.\n      *             ADDRESS OF THE INSTALLED CHANNEL PATH TABLE.\n       05  CVT-CVTCSOCR  PIC S9(9) COMP.\n      *             CHANNEL SUBSYSTEM OWNER - CHANNEL\n      *             PATH RESET FACILITY.\n       05  CVT-CVTCSOCS  PIC S9(9) COMP.\n      *             CHANNEL SUBSYSTEM OWNER - CHANNEL\n      *             PATH STATUS FACILITY.\n       05  CVT-CVTLLTA   PIC S9(9) COMP.\n      *             LINK LIST TABLE ADDRESS.\n       05  CVT-CVTDCQA   PIC S9(9) COMP.\n      *             ADDRESS OF DEVICE CLASS QUEUE\n       05  CVT-CVTUCBA   PIC S9(9) COMP.\n      *             ADDRESS OF THE FIRST UCB IN THE\n      *             CHAIN OF UCB'S.\n       05  CVT-CVTVESTU  PIC S9(9) COMP.\n      *             ADDRESS OF THE ENTRY POINT OF THE\n      *             SVC UPDATE ROUTINE.\n       05  CVT-CVTNUCLU  PIC S9(9) COMP.\n      *             ADDRESS TO SUPPORT THE NUCLEUS\n      *             MAP LOOKUP ROUTINE.\n       05  CVT-CVTOSLVL.\n      *             SYSTEM LEVEL INDICATORS\n       10  CVT-CVTOSLV0  PIC X(1).\n      *             BYTE 0 OF CVTOSLVL\n      *             X'80' HBB3310 FUNCTIONS ARE PRESENT\n      *             X'80' ESA/370 IS SUPPORTED\n      *             X'40' HBB4420 FUNCTIONS ARE PRESENT.\n      *             X'20' JBB3313 FUNCTIONS ARE PRESENT\n      *             X'10' JBB3311 FUNCTIONS ARE PRESENT\n      *             X'10' HIPERSPACES ARE SUPPORTED\n      *             X'08' HBB4410 FUNCTIONS ARE PRESENT.\n      *             X'08' SPIN LOCK RESTRUCTURE INDICATOR.\n      *             X'08' UCB SERVICES INSTALLED.\n      *             X'04' SCOPE=COMMON DATA SPACES SUPPORTED\n      *             X'02' ENCRYPTION ASYMMETRIC FEATURE IS\n      *             SUPPORTED\n      *             X'01' JBB4422 FUNCTIONS ARE PRESENT\n       10  CVT-CVTOSLV1  PIC X(1).\n      *             BYTE 1 OF CVTOSLVL\n       10  CVT-CVTOSLV2  PIC X(1).\n      *             BYTE 2 OF CVTOSLVL\n       10  CVT-CVTOSLV3  PIC X(1).\n      *             BYTE 3 OF CVTOSLVL\n       10  CVT-CVTOSLV4  PIC X(1).\n      *             BYTE 4 OF CVTOSLVL\n       10  CVT-CVTOSLV5  PIC X(1).\n      *             BYTE 5 OF CVTOSLVL\n       10  CVT-CVTOSLV6  PIC X(1).\n      *             BYTE 6 OF CVTOSLVL\n       10  CVT-CVTOSLV7  PIC X(1).\n      *             BYTE 7 OF CVTOSLVL\n       10  CVT-CVTOSLV8  PIC X(1).\n      *             BYTE 8 OF CVTOSLVL\n       10  CVT-CVTOSLV9  PIC X(1).\n      *             BYTE 9 OF CVTOSLVL\n       10  CVT-CVTOSLVA  PIC X(1).\n      *             BYTE 10 OF CVTOSLVL\n       10  CVT-CVTOSLVB  PIC X(1).\n      *             BYTE 11 OF CVTOSLVL\n       10  CVT-CVTOSLVC  PIC X(1).\n      *             BYTE 12 OF CVTOSLVL\n       10  CVT-CVTOSLVD  PIC X(1).\n      *             BYTE 13 OF CVTOSLVL\n       10  CVT-CVTOSLVE  PIC X(1).\n      *             BYTE 14 OF CVTOSLVL\n       10  CVT-CVTOSLVF  PIC X(1).\n      *             BYTE 15 OF CVTOSLVL\n      *\n      *************************************************************\n      *                                                           *\n      *     OS/VS2 - VIRTUAL STORAGE ADDRESS EXTENSION            *\n      *************************************************************\n      *\n      *     ADDRESS OF EXTENSION IS IN CVTSMEXT\n      *      NOTE- ALL STARTING ADDRESSES POINT TO FIRST BYTE IN\n      *      STORAGE AREA. ALL ENDING ADDRESSES POINT TO LAST\n      *      BYTE WITHIN STORAGE AREA (NOT BEYOND STORAGE AREA).\n      *\n       01 CVT-CVTVSTGX.\n       05  CVT-CVTBLDLS  PIC S9(9) COMP.\n      *             RESERVED - WAS STARTING ADDRESS OF\n      *             BLDL LIST. MUST BE ZERO NOW.\n       05  CVT-CVTBLDLE  PIC S9(9) COMP.\n      *             RESERVED - WAS ENDING ADDRESS OF\n      *             BLDL LIST. MUST BE ZERO NOW.\n       05  CVT-CVTMLPAS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF MLPA.\n       05  CVT-CVTMLPAE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF MLPA.\n       05  CVT-CVTFLPAS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF FLPA.\n       05  CVT-CVTFLPAE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF FLPA.\n       05  CVT-CVTPLPAS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF PLPA.\n       05  CVT-CVTPLPAE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF PLPA.\n       05  CVT-CVTRWNS   PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF\n      *             READ-WRITE NUCLEUS.\n       05  CVT-CVTRWNE   PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF\n      *             READ-WRITE NUCLEUS.\n       05  CVT-CVTRONS   PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF\n      *             READ-ONLY NUCLEUS.\n       05  CVT-CVTRONE   PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF\n      *             READ-ONLY NUCLEUS.\n       05  CVT-CVTERWNS  PIC S9(9) COMP.\n      *             STARTING EXTENDED ADDRESS\n      *             READ/WRITE NUCLEUS.\n       05  CVT-CVTERWNE  PIC S9(9) COMP.\n      *             ENDING EXTENDED ADDRESS\n      *             READ/WRITE NUCLEUS.\n       05  CVT-CVTEPLPS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF\n      *             EXTENDED PLPA.\n       05  CVT-CVTEPLPE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF\n      *             EXTENDED PLPA.\n       05  CVT-CVTEFLPS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF\n      *             EXTENDED FLPA.\n       05  CVT-CVTEFLPE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF\n      *             EXTENDED FLPA.\n       05  CVT-CVTEMLPS  PIC S9(9) COMP.\n      *             STARTING VIRTUAL ADDRESS OF\n      *             EXTENDED MLPA.\n       05  CVT-CVTEMLPE  PIC S9(9) COMP.\n      *             ENDING VIRTUAL ADDRESS OF\n      *             EXTENDED MLPA.\n      *\n      ***************************************************************\n      *     OS - OS/VS COMMON EXTENSION                             *\n      *          ADDRESS OF EXTENSION IS IN CVTEXT1                 *\n      ***************************************************************\n      *\n       01 CVT-CVTXTNT1.\n       05  CVT-CVTFACHN  PIC S9(9) COMP.\n      *             ADDRESS OF CHAIN OF DCB FIELD AREAS\n      *             (ISAM).\n       05  CVT-CVT1R004  PIC X(8).\n      *             RESERVED\n      *\n      ***************************************************************\n      *         OS/VS2 COMMON EXTENSION                             *\n      *         ADDRESS OF EXTENSION IS IN CVTEXT2                  *\n      ***************************************************************\n      *\n       01 CVT-CVTXTNT2.\n       05  CVT-CVT2R000  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTNUCLS  PIC X(1).\n      *             IDENTIFICATION OF THE NUCLEUS MEMBER\n      *             NAME\n       05  CVT-CVTFLGBT  PIC X(1).\n      *             FLAG BYTE (OS/VS1)\n      *             X'80' - INDICATES NON-PAGING ENVIRONMENT (VM\n      *             HANDSHAKING) (OS/VS1)\n      *             X'40' - INDICATES MACHINE IS OPERATING IN VM\n      *             ENVIRONMENT (OS/VS1)\n      *             X'20' - INDICATES THAT THE VM/370 - OS/VS1 BTAM\n      *             AUTOPOLL HANDSHAKE IS OPERATIONAL (OS/VS1)\n       05  CVT-CVTIOCID  PIC X(2).\n      *             EBCDIC IDENTIFIER OF THE ACTIVE I/O\n      *             CONFIGURATION SPECIFIED BY THE OPERATOR\n       05  CVT-CVTDEBVR  PIC S9(9) COMP.\n      *             ADDRESS OF BRANCH ENTRY POINT OF DEB\n      *             VALIDITY CHECK ROUTINE\n       05  CVT-CVTCVAF   PIC S9(9) COMP.\n      *             POINTER TO THE CVAF TABLE, WHICH CONTAINS\n      *             THE CVAF BRANCH ENTRY ADDRESS AND NEXT\n      *             VIB ADDRESS.\n       05  CVT-CVTMMVT   PIC S9(9) COMP.\n      *             ADDRESS OF THE MEDIA MANAGER VECTOR TABLE\n       05  CVT-CVTNCVP   PIC S9(9) COMP.\n      *             ADDRESS OF CSA BUFFER POOL - USED BY\n      *             NETWORK MANAGEMENT FACILITY (NMF)\n       05  CVT-CVTQID.\n      *             SAME AS CVTQIDA BELOW\n       10  FILLER        PIC X(1).\n      *             RESERVED - FIRST BYTE OF CVTQID\n       10  CVT-CVTQIDA   PIC X(3).\n      *             ADDRESS OF QUEUE IDENTIFICATION (QID)\n      *             TABLE PREFIX\n       05  CVT-CVTOLTEP  PIC S9(9) COMP.\n      *             POINTER TO CONTROL BLOCK CREATED BY SVC 59\n      *             TO POINT TO PSEUDO-DEB'S\n       05  CVT-CVT2R020  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTAVVT.\n      *             ADDRESS OF AVM CONTROL BLOCK\n      *             X'80' INDICATES AVM INSTALLED\n       10  FILLER        PIC X(4).\n       05  CVT-CVTCCVT   PIC S9(9) COMP.\n      *             ADDRESS OF CRYPTOGRAPHIC FACILITY CVT\n      *\n       05  CVT-CVTSKTA   PIC S9(9) COMP.\n      *             ADDRESS OF STORAGE KEY TABLE (VM\n      *             HANDSHAKING) (OS/VS1)\n       05  CVT-CVTICB    PIC S9(9) COMP.\n      *             ADDRESS OF MASS STORAGE SYSTEM (MSS)\n      *             CONTROL BLOCK\n       05  CVT-CVTFBYT1  PIC X(1).\n      *             FLAG BYTE\n      *             X'80' - RELIABILITY DATA EXTRACTOR INDICATOR\n      *             OWNERSHIP: DFP.\n      *             SERIALIZATION: NONE.\n       05  CVT-CVT2R035  PIC X(3).\n      *             RESERVED\n      *\n      *    THE FOLLOWING FIELD CONTAINS THE OFFSET VALUE NEEDED TO\n      *    CORRECT THE TOD VALUE TO THE CORRECT LOCAL DATE AND TIME OF\n      *    DAY. IT IS SIMILAR TO CVTTZ EXCEPT THAT IT IS A DOUBLEWORD\n      *    VALUE PLUS IT ALSO CONTAINS THE DATE CORRECTION AS WELL AS\n      *    THE TIME CORRECTION VALUE.\n       05  CVT-CVTLDTO.\n      *             LOCAL TIME/DATE OFFSET\n       10  CVT-CVTLDTOL  PIC S9(9) COMP.\n      *             HIGH WORD\n       10  CVT-CVTLDTOR  PIC S9(9) COMP.\n      *             LOW WORD\n       05  CVT-CVTATCVT  PIC S9(9) COMP.\n      *             POINTER TO VTAM'S CVT\n      *             X'80' IF ON, VTAM IS ACTIVE\n       05  CVT-CVT2R044  PIC X(4).\n      *             RESERVED\n       05  CVT-CVTBCLMT  PIC S9(9) COMP.\n      *             NUMBER OF 130-BYTE RECORDS SET ASIDE\n      *             FOR BROADCAST MESSAGES\n       05  CVT-CVT2R04C  PIC X(56).\n      *             RESERVED\n      *\n      *     END OF CVT\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@DCB": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00u\\x00u\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 117, "newlines": 117, "modlines": 0, "user": "SCHUFF"}, "text": "      *****************************************************************\n      *                                                               *\n      *    DCB = DATASET CONTROL BLOCK                                *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 DCB-DCB.\n      *             DIRECT ACCESS DEVICE INTERFACE\n       05  DCB-FDAD      PIC X(16).\n      *             FDAD,DVTBL\n       05  DCB-KEYLEN    PIC S9(9) COMP.\n      *             KEYLE,DEVT,TRBAL\n      *             COMMON ACCESS METHOD INTERFACE\n       05  DCB-BUFNO     PIC X(1).\n      *             BUFNO\n       05  DCB-BUFCB     PIC X(3).\n      *             BUFCB\n       05  DCB-BUFL      PIC S9(4) COMP.\n      *             BUFL\n       05  DCB-DSORG.\n      *             DSORG\n       10  DCB-DSORG1    PIC X(1).\n      *             FIRST BYTE OF DSORG\n      *             X'80' INDEXED SEQUENTIAL\n      *             X'40' PHYSICAL SEQUENTIAL\n      *             X'20' DIRECT\n      *             X'10' BTAM OR QTAM LINE GROUP\n      *             X'08' QTAM DIRECT ACCESS MESSAGE QUEUE\n      *             X'04' QTAM PROBLEM PROGRAM MESSAGE QUEUE\n      *             X'02' PARTITIONED\n      *             X'01' UNMOVABLE - THE DATA CONTAINS LOCATION\n      *             DEPENDENT INFORMATION\n       10  DCB-DSORG2    PIC X(1).\n      *             SECOND BYTE OF DSORG\n      *             X'80' GRAPHICS\n      *             X'40' TCAM LINE GROUP\n      *             X'20' TCAM MESSAGE QUEUE\n      *             X'08' VSAM\n      *             X'04' TCAM 3705\n       05  DCB-IOBAD     PIC S9(9) COMP.\n      *             ICQE/IOBAD\n      *             FOUNDATION EXTENSION\n       05  DCB-BFTEK     PIC X(1).\n      *             BFTEK,BFLN,HIARCHY\n       05  DCB-EODAD     PIC X(3).\n      *             EODAD\n       05  DCB-RECFM     PIC X(1).\n      *             RECFM\n      *             X'C0' HIGH-ORDER TWO BITS OF RECFM TO BE TESTED\n      *             FOR RECORD FORMAT\n      *             X'C0' U - UNDEFINED\n      *             X'80' F - FIXED\n      *             X'40' V - VARIABLE\n      *             X'E0' RECORD FORMAT (USASI/USASCII)\n      *             X'20' D - VARIABLE (FORMAT D FOR USASI/USASCII)\n      *             X'20' T - TRACK OVERFLOW\n      *             X'10' B - BLOCKED - MAY NOT OCCUR WITH UNDEFINED\n      *             X'08' S - FOR FIXED LENGTH RECORD FORMAT, STANDARD\n      *             BLOCKS. NO TRUNCATED BLOCKS OR UNFILLED\n      *             TRACKS ARE EMBEDDED IN THE DATA SET.\n      *             FOR VARIABLE LENGTH RECORD FORMAT, SPANNED\n      *             RECORDS.\n      *             X'06' CONTROL CHARACTER\n      *             X'04' A - AMERICAN NATIONAL STANDARD (ASA) CONTROL\n      *             CHARACTER\n      *             X'02' M - MACHINE CODE CONTROL CHARACTER\n      *             X'00' NO CONTROL CHARACTER\n       05  DCB-EXLST     PIC X(3).\n      *             EXLST\n      *             FOUNDATION BLOCK\n       05  DCB-DDNAME    PIC X(8).\n      *             DDNAME\n       05  DCB-OFLGS     PIC X(1).\n      *             OFLGS\n       05  DCB-IFLGS     PIC X(1).\n      *             IFLG\n       05  DCB-MACRF     PIC X(2).\n      *             MACR\n      *       BSAM-BPAM-QSAM INTERFACE\n       05  DCB-RER1      PIC X(1).\n      *             RER1\n       05  DCB-CHECK     PIC X(3).\n      *             CHECK, GERR, PERR\n       05  DCB-SYNAD     PIC S9(9) COMP.\n      *             SYNAD\n       05  DCB-CIND1-2   PIC S9(4) COMP.\n      *             CIND1, CIND2\n       05  DCB-BLKSIZE   PIC S9(2) COMP.\n      *             BLKSIZE\n       05  DCB-WCP0      PIC S9(9) COMP.\n      *             WCPO, WCPL, OFFSR, OFFSW\n       05  DCB-IOBA      PIC S9(9) COMP.\n      *             IOBA\n       05  DCB-NCP       PIC X(1).\n      *             NCP\n       05  DCB-EOBAD     PIC X(3).\n      *             EOBR, EOBAD\n      *       BSAM-BPAM INTERFACE\n       05  DCB-EOBW      PIC S9(9) COMP.\n      *             EOBW\n       05  DCB-DIRCT     PIC S9(4) COMP.\n      *             DIRCT\n       05  DCB-LRECL     PIC S9(4) COMP.\n      *             LRECL\n       05  DCB-CNTRL     PIC S9(9) COMP.\n      *             CNTRL, NOTE, POINT\n      *\n      *    END OF DCB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@DEB": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x02\\xcd\\x02\\xcd\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 717, "newlines": 717, "modlines": 0, "user": "SCHUFF"}, "text": "      *DEB*************************************************************\n      *                                                               *\n      *    DEB = DATA EXTENT BLOCK                                    *\n      *                                                               *\n      *  THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION OF         *\n      *  INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED WITH A       *\n      *  DCB, AND THE TWO POINT TO EACH OTHER.  THE DEB CONTAINS      *\n      *  INFORMATION CONCERNING THE PHYSICAL CHARACTERISTICS OF       *\n      *  THE DATA SET AND OTHER INFORMATION THAT IS USED BY THE       *\n      *  CONTROL PROGRAM.                                             *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 DEB-DEB.\n      *****************************************************************\n      *       APPENDAGE VECTOR TABLE SECTION OF THE DEB               *\n      *       POINTED TO BY DEBAPPAD                                  *\n      *****************************************************************\n       05  DEB-DEBAVT.\n      *             APPENDAGE VECTOR TABLE\n       10  DEB-DEBEOEA.\n      *             ADDRESS OF END-OF-EXTENT APPENDAGE ROUTINE\n       15  DEB-DEBEOEAB  PIC X(01).\n      *             FLAG BYTE\n      *             DEBEOEA - TCAM USES AS WORK AREA (BITS 0-3)\n      *             X'0F' - NUMBER OF 2K PAGES TO BE FIXED FOR THE\n      *             END-OF-EXTENT APPENDAGE\n       15  DEB-DEBEOEAD  PIC X(3).\n      *             ADDRESS OF END-OF-EXTENT APPENDAGE ROUTINE\n       05  DEB-DEBSIOA.\n      *             ADDRESS OF START I/O APPENDAGE ROUTINE\n       10  DEB-DEBSIOAB  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' ADDRESS IN DEBSIOAD CAN BE USED TO DETERMINE\n      *             THE ENTRY POINT TO THE PAGE FIX (PGFX)\n      *             APPENDAGE ROUTINE BY ADDING 4 TO THE ADDRESS\n      *             IN DEBSIOAD\n      *             X'40' IF ZERO, DO NOT ENTER SIO APPENDAGE WHEN ERP\n      *             IS ACTIVE. IF ONE, ENTER SIO APPENDAGE EVEN\n      *             WHEN ERP IS ACTIVE.\n      *             X'20' IF ONE, EXCPVR REQUEST IS VALID.\n      *             IF ZERO, EXCPVR REQUEST IS INVALID AND WILL\n      *             NOT BE EXECUTED.\n      *             X'10' INDICATION THAT DEB HAS BEEN FIXED (OS/VS2)\n      *             X'0F' NUMBER OF 2K PAGES TO BE FIXED FOR THE\n      *             SIO APPENDAGE\n       10  DEB-DEBSIOAD  PIC X(3).\n      *             ADDRESS OF START I/O APPENDAGE ROUTINE\n       05  DEB-DEBPCIA.\n      *             ADDRESS OF PCI APPENDAGE ROUTINE\n       10  DEB-DEBPCIAB  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' RESERVED\n      *             X'40' RESERVED\n      *             X'20' RESERVED\n      *             X'10' RESERVED\n      *             X'0F' NUMBER OF 2K PAGES TO BE FIXED FOR THE\n      *             PCI APPENDAGE\n       10  DEB-DEBPCIAD  PIC X(3).\n      *             ADDRESS OF PROGRAM-CONTROLLED-INTERRUPTION\n      *             (PCI) APPENDAGE ROUTINE\n       05  DEB-DEBCEA.\n      *             ADDRESS OF CHANNEL-END APPENDAGE ROUTINE\n       10  DEB-DEBCEAB   PIC X(01).\n      *             FLAG BYTE\n      *             X'80' VALIDITY CHECK FOR EXCPVR CALLER\n      *             X'40' RESERVED\n      *             X'20' RESERVED\n      *             X'10' RESERVED\n      *             X'0F' NUMBER OF 2K PAGES TO BE FIXED FOR THE\n      *             CHANNEL-END APPENDAGE\n       10  DEB-DEBCEAD   PIC X(3).\n      *             ADDRESS OF CHANNEL-END APPENDAGE ROUTINE\n       05  DEB-DEBXCEA.\n      *             ADDRESS OF ABNORMAL-END APPENDAGE ROUTINE\n       10  DEB-DEBXCEAB  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' RESERVED\n      *             X'40' RESERVED\n      *             X'20' RESERVED\n      *             X'10' RESERVED\n      *             X'0F' NUMBER OF 2K PAGES TO BE FIXED FOR THE\n      *             ABNORMAL-END APPENDAGE\n       10  DEB-DEBXCEAD  PIC X(3).\n      *             ADDRESS OF ABNORMAL-END APPENDAGE ROUTINE\n      *\n      *    END OF APPENDAGE VECTOR TABLE\n      *\n      *****************************************************************\n      *    DEB PREFIX TABLE                                           *\n      *****************************************************************\n       01 DEB-DEBPREFX.\n      *             DEB PREFIX TABLE\n       05  DEB-DEBWKARA  PIC X(1).\n      *             I/O SUPPORT WORK AREA (DIRECT ACCESS)\n       05  DEB-DEBDSCBA  PIC X(7).\n      *             DSCB ADDRESS (BBCCHHR) USED BY I/O SUPPORT\n      *             (DIRECT ACCESS)\n       05  DEB-DEBXTNP.\n      *             POINTER TO DEB EXTENSION (OS/VS2)\n       10  DEB-DEBDCBMK  PIC X(4).\n      *             DCB MODIFICATION MASK USED BY I/O SUPPORT\n      *             (OS/VS1)\n       05  DEB-DEBLNGTH  PIC X(1).\n      *             LENGTH OF DEB IN DOUBLE WORDS\n       05  DEB-DEBAMTYP  PIC X(01).\n      *             ACCESS METHOD TYPE\n      *             0 ACCESS METHOD TYPE NOT KNOWN\n      *             1 VSAM ACCESS METHOD TYPE\n      *             2 EXCP ACCESS METHOD TYPE\n      *             4 TCAM ACCESS METHOD TYPE\n      *             8 GRAPHICS ACCESS METHOD TYPE\n      *             16 BTAM ACCESS METHOD TYPE\n      *             32 BPAM ACCESS METHOD TYPE\n      *             32 SEQUENTIAL ACCESS METHOD TYPE\n      *             64 DIRECT ACCESS METHOD TYPE\n      *             128 ISAM ACCESS METHOD TYPE\n      *             129 SUBSYSTEM ACCESS METHOD TYPE\n      *             130 VTAM ACCESS METHOD TYPE\n      *             132 TCAM APPLICATION ACC METHOD TYPE\n       05  DEB-DEBTBLOF  PIC S9(4) COMP.\n      *             OFFSET IN THE DEB TABLE TO THE ENTRY FOR\n      *             THIS DEB\n      *\n      *    END OF DEB PREFIX TABLE\n      *\n      ******************************************************************\n      *             DEB BASIC SECTION                                  *\n      ******************************************************************\n       05  DEB-DEBTCBAD.\n      *             ADDRESS OF TCB FOR THIS DEB\n      *10  DEB-DEBAMID.\n      *             VTAM/TCAM DEB ID FLAG\n      *             X'00' TCAM DEB ID\n      *             X'0F' VTAM DEB ID\n       10  DEB-DEBNMSUB  PIC X(1).\n      *             NUMBER OF SUBROUTINES LOADED BY OPEN\n      *             EXECUTOR ROUTINES\n       10  DEB-DEBTCBB   PIC X(3).\n      *             ADDRESS OF TCB FOR THIS DEB\n       05  DEB-DEBDEBAD.\n      *             ADDRESS OF THE NEXT DEB IN THE SAME TASK\n       10  DEB-DEBAMLNG  PIC X(1).\n      *             NUMBER OF BYTES IN THE ACCESS METHOD DEPENDENT\n      *             SECTION. FOR BDAM THIS FIELD CONTAINS THE\n      *             LENGTH EXPRESSED IN NUMBER OF WORDS.\n       10  DEB-DEBDEBB   PIC X(3).\n      *             ADDRESS OF THE NEXT DEB IN THE SAME TASK\n       05  DEB-DEBIRBAD.\n      *             IRB STORAGE ADDRESS USED FOR APPENDAGE\n      *             ASYNCHRONOUS EXITS\n       10  DEB-DEBOFLGS  PIC X(01).\n      *             DATA SET STATUS FLAGS\n      *             X'C0' DATA SET DISPOSITION FLAGS\n      *             BIT SETTING DISPOSITION\n      *             DEBDSOLD 01 OLD DATA SET\n      *             DEBDSMOD 10 MOD DATA SET\n      *             DEBDSNEW 11 NEW DATA SET\n      *             X'40' OLD DATA SET\n      *             X'80' MOD DATA SET\n      *             X'C0' NEW DATA SET\n      *             X'20' END-OF-FILE (EOF) ENCOUNTERED (TAPE INPUT)\n      *             FORMAT 1 DSCB BIT 93.0 INDICATES THAT THE\n      *             CURRENT VOLUME IS THE LAST VOLUME OF THE DATA\n      *             SET (DASD INPUT)\n      *             X'10' RELEASE UNUSED EXTERNAL STORAGE (DASD)\n      *             EMULATOR TAPE WITH SECOND GENERATION FORMAT.\n      *             TAPE MAY CONTAIN BLOCKS SHORTER THAN 12\n      *             CHARACTERS. (TAPE)\n      *             X'08' DCB MODIFICATION\n      *             X'04' SPLIT CYLINDER (DASD)\n      *             7-TRACK EMULATOR TAPE WITH POSSIBLE MIXED\n      *             PARITY RECORDS (TAPE)\n      *             X'02' NONSTANDARD LABELS\n      *             X'01' USE REDUCED ERROR RECOVERY PROCEDURE (TAPE)\n      *             CONCATENATED PARTITIONED ORGANIZATION DATA\n      *             SETS PROCESSED USING BPAM (DASD)\n       10  DEB-DEBIRBB   PIC X(3).\n      *             IRB STORAGE ADDRESS USED FOR APPENDAGE\n      *             ASYNCHRONOUS EXITS\n       05  DEB-DEBOPATB  PIC X(01).\n      *             FLAGS INDICATING BOTH THE METHOD OF I/O\n      *             PROCESSING AND THE DISPOSITION THAT IS TO BE\n      *             PERFORMED WHEN AN END-OF-VOLUME (EOV)\n      *             CONDITION OCCURS\n      *             X'80' SET BY ABEND INDICATING A SYSABEND OR\n      *             SYSUDUMP DATA SET (OS/VS2)\n      *             X'40' ALWAYS ZERO\n      *             X'30' DATA SET POSITIONING FLAGS\n      *             BIT SETTING POSITIONING\n      *             DEBRERED 01 REREAD\n      *             DEBLEAVE 11 LEAVE\n      *             X'10' REREAD\n      *             X'30' LEAVE\n      *             X'0F' TYPE OF I/O ACCESSING BEING DONE\n      *             BIT SETTING ACCESSING\n      *             DEBINPUT 0000 INPUT\n      *             DEBOUTPT 1111 OUTPUT\n      *             DEBINOUT 0011 INOUT\n      *             DEBOUTIN 0111 OUTIN\n      *             DEBRDBCK 0001 RDBACK\n      *             DEBUPDAT 0100 UPDAT\n      *             X'00'  INPUT\n      *             X'0F'  OUTPUT\n      *             X'03'  INOUT\n      *             X'07'  OUTIN\n      *             X'01'  RDBACK\n      *             X'04'  UPDAT\n       05  DEB-DEBQSCNT  PIC X(1).\n      *             PURGE (SVC 16) - QUIESCE COUNT. NUMBER OF\n      *             DEVICES EXECUTING USER'S CHANNEL PROGRAMS,\n      *             AS SHOWN BY BITS 5 AND 6 OF UCBFL1 FIELDS.\n       05  DEB-DEBFLGS1  PIC X(1).\n      *             FLAG FIELD\n      *             X'80' PASSWORD WAS SUPPLIED DURING OPEN. EOV WILL\n      *             NOT REQUEST A PASSWORD FOR EACH ADDITIONAL\n      *             VOLUME OF A MULTIVOLUME DATA SET.\n      *             X'40' SET BY EOV TO INFORM CLOSE THAT AN END-OF-FILE\n      *             HAS BEEN ENCOUNTERED AND, THEREFORE, DEFERRED\n      *             USER LABEL PROCESSING IS ALLOWED.\n      *             X'20' SIO APPENDAGE RE-ENTRY AUTHORIZATION BIT\n      *             (OS/VS1)\n      *             X'10' EXCP IS AUTHORIZED FOR THIS DEB\n      *             X'08' DCB ASSOCIATED WITH THIS DEB IS BEING\n      *             PROCESSED BY THE COMPATIBILITY INTERFACE\n      *             ROUTINES (VSAM)\n      *             X'04' EOV PROCESSING OCCURRED DURING CLOSE\n      *             PROCESSING. TESTED AND SET TO ZERO BY CLOSE,\n      *             SET TO ONE BY EOV.\n      *             X'02' IF ON, AUTHORIZED PROGRAMS CAN BE LOADED\n      *             X'01' IF ONE, DEB EXTENSION EXISTS (OS/VS2)\n       05  DEB-DEBFLGS2  PIC X(1).\n      *             FLAG FIELD TWO\n      *             X'80' THE I/O PREVENTION IDENTIFIER (IOPID)\n      *             IN THE DEB EXTENSION IS VALID AND\n      *             DEBXTNIN IS ON 2D\n      *             X'40' RESERVED\n      *             X'20' RESERVED\n      *             X'10' RESERVED\n      *             THE FOLLOWING TWO FLAG BITS ARE USED BY\n      *             O/C/EOV TO MAINTAIN AN UNIFORM RECORDING\n      *             MODE (COMPACTION OR NON-COMPACTION) ON\n      *             TAPE DATA SETS THAT SPAN OVER MORE THAN\n      *             ONE VOLUME.\n      *             X'08' TAPE DATA SET COMPACTION MODE\n      *             X'04' TAPE DATA SET NON-COMPACTION MODE\n      *             X'02' RESERVED\n      *             X'01' RESERVED\n       05  DEB-DEBUSRPG.\n      *             ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN\n      *             (OS/VS1)\n      *             ADDRESS OF PURGED I/O RESTORE LIST (PIRL)\n      *             (OS/VS2)\n       10  DEB-DEBNMEXT  PIC X(1).\n      *             NUMBER OF EXTENTS SPECIFIED IN DSCB'S\n       10  DEB-DEBUSRPB  PIC X(3).\n      *             ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN\n      *             (OS/VS1)\n      *             ADDRESS OF PURGED I/O RESTORE LIST (PIRL)\n      *             (OS/VS2)\n       05  DEB-DEBRRQ.\n      *             POINTER TO RELATED REQUEST QUEUE (OS/VS2)\n      *05  DEB-DEBECBAD.\n      *             ADDRESS OF A PARAMETER LIST USED TO LOCATE\n      *             THE PURGE ECB FOR AN SVC PURGE REQUEST\n      *             (OS/VS1)\n       10  DEB-DEBPRIOR  PIC X(1).\n      *             PRIORITY OF THE TASK OWNING DEB\n       10  DEB-DEBECBB   PIC X(3).\n      *             ADDRESS OF A PARAMETER LIST USED TO LOCATE\n      *             THE PURGE ECB FOR AN SVC PURGE REQUEST\n      *             (OS/VS1)\n       05  DEB-DEBDCBAD.\n      *             ADDRESS OF DCB ASSOCIATED WITH THIS DEB\n      *10  DEB-DEBPROTG  .\n      *             TASK PROTECTION KEY IN HIGH-ORDER 4 BITS\n       10  DEB-DEBDEBID  PIC X(1).\n      *             A HEX F IN LOW-ORDER 4 BITS TO IDENTIFY\n      *             THIS BLOCK AS A DEB\n       10  DEB-DEBDCBB   PIC X(3).\n      *             ADDRESS OF DCB ASSOCIATED WITH THIS DEB\n       05  DEB-DEBAPPAD.\n      *             ADDRESS OF THE I/O APPENDAGE VECTOR TABLE\n       10  DEB-DEBEXSCL  PIC X(1).\n      *             THIS FIELD IS USED TO DETERMINE THE SIZE OF\n      *             THE DEVICE DEPENDENT SECTION. TWO TO THIS\n      *             POWER GIVES THE LENGTH OF THE DEVICE-\n      *             DEPENDENT SECTION AT DEBBASND. EXTENT SCALE -\n      *             4 (16 BYTES) FOR DIRECT ACCESS DEVICE AND\n      *             3525 CARD PUNCH WITH DEVICE-ASSOCIATED DATA\n      *             SET SUPPORT AND 2 (4 BYTES) FOR NONDIRECT\n      *             ACCESS DEVICE AND COMMUNICATION DEVICE.\n       10  DEB-DEBAPPB   PIC X(3).\n      *             ADDRESS OF THE I/O APPENDAGE VECTOR TABLE\n      ******************************************************************\n      * UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION\n      *\n      *   NOTE FOR TELECOMMUNICATIONS DEVICES, THE UCB ADDRESS IS\n      *   REPEATED FOR EACH LINE ASSIGNED\n      ******************************************************************\n       05  DEB-DEBSUCBA.\n      *             ADDRESS OF A UCB ASSOCIATED WITH A GIVEN\n      *             DATA SET\n       10  DEB-DEBSDVM   PIC X(01).\n      *             DEVICE MODIFIER. FOR MAGNETIC TAPE, MODESET\n      *             OPERATION CODE OR MODE SET FUNCTION BYTE.\n      *             FOR UNIT RECORD, NOT USED.\n      *             9-TRACK TAPE MODESET OPERATION CODES\n      *             X'D3' 9-TRACK MODESET CCW CODE DENSITY=6250BPI\n      *             X'C3' 9-TRACK MODESET CCW CODE DENSITY=1600BPI\n      *             X'CB' 9-TRACK MODESET CCW CODE DENSITY= 800BPI\n      *             7-TRACK TAPE MODESET SKELETON CODES\n      *             (MUST BE COMPLETED WITH PARITY,\n      *             TRANSLATION AND/OR CONVERSION)\n      *             X'03' 7-TRACK MODESET SKELETON DENSITY=200BPI\n      *             X'43' 7-TRACK MODESET SKELETON DENSITY=556BPI\n      *             X'83' 7-TRACK MODESET SKELETON DENSITY=800BPI\n      *             3480 TAPE OPERATION CODE\n      *             X'C3' 3480 SET TAPE WRITE IMMEDIATE CCW CODE\n      *             TAPE MODE SET FUNCTION BYTE\n      *             X'80' TAPE RECORDING FORMAT BIT 0\n      *             X'40' TAPE RECORDING FORMAT BIT 1\n      *             X'20' TAPE WRITE IMMEDIATE (NON-BUFFERED WRITE)\n      *             X'10' INHIBIT SUPERVISOR COMMANDS\n      *             X'08' COMPACTED RECORDING MODE\n      *             DEBMCOMP COMPACTED RECORDING MODE\n      *             X'02' 3424 MODE SET FLAG\n      *             X'02' 9348 MODE SET FLAG\n      *             X'01' INHIBIT CONTROL UNIT ERP\n      *\n      *             DEBMTRF0+DEBMTRF1+DEBM3424 SET 3424 DENSITY=6250BPI\n      *             DEBMTRF1+DEBM3424 SET 3424 DENSITY=1600BPI\n      *\n      *             DEBMTRF0+DEBMTRF1+DEBM9348 SET 9348 FORMAT=4-TRACK\n      *             DEBMTRF0+DEBM9348 SET 9348 FORMAT=2-TRACK\n      *             DEBMTRF1+DEBM9348 SET 9348 FORMAT=1-TRACK\n      *\n       10  DEB-DEBSUCBB  PIC X(3).\n      *             ADDRESS OF A UCB ASSOCIATED WITH A GIVEN\n      *             DATA SET\n      *05  DEB-DEBDEVED.\n      *\n      *        END OF COMMON UNIT RECORD FIELDS\n      *\n      *        THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 WITH\n      *        DEVICE-ASSOCIATED DATA SET SUPPORT\n      *\n       05  DEB-DEBRDCB.\n      *             ADDRESS OF DCB FOR THE READ ASSOCIATED DATA\n      *             SET\n       10  DEB-DEBRSV06  PIC X(01).\n      *             RESERVED\n       10  DEB-DEBRDCBA  PIC X(3).\n      *             ADDRESS OF DCB FOR THE READ ASSOCIATED DATA\n      *             SET\n       05  DEB-DEBPDCB.\n      *             ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA\n      *             SET\n       10  DEB-DEBRSV07  PIC X(01).\n      *             RESERVED\n       10  DEB-DEBPDCBA  PIC X(3).\n      *             ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA\n      *             SET\n       05  DEB-DEBWDCB.\n      *             ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA\n      *             SET\n       10  DEB-DEBRSV08  PIC X(01).\n      *             RESERVED\n       10  DEB-DEBWDCBA  PIC X(3).\n      *             ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA\n      *             SET\n      *\n      *    END OF DEVICE-ASSOCIATED DS SEC.\n      *\n      ******************************************************************\n      *\n      *    3540 ACCESS METHOD DEPENDENT SECTION\n      *        (OS/VS1 ONLY)\n      *\n      *    NOTE THIS SECTION FOLLOWS DEBSUCBA IN UNIT RECORD, MAGNETIC\n      *       TAPE, TELECOMMUNICATIONS DEVICES SECTION IF DEB IS\n      *       FOR 3540 DEVICE.\n      ******************************************************************\n       01 DEV-DEBMT.\n       05  DEB-DEBASC09.\n      *             3540 ACCESS METHOD DEPENDENT SECTION\n       10  DEB-DEBVOLAC  PIC X(1).\n      *             VOLUME ACCESSABILITY INDICATOR\n       10  DEB-DEBDSSQL  PIC X(1).\n      *             DATA SET SECURITY QUALIFIER\n       10  DEB-DEBVSEQU  PIC X(1).\n      *             VOLUME SEQUENCE NUMBER\n       10  DEB-DEBEAMFG  PIC X(1).\n      *             FLAG BYTE\n      *             X'80' MULTI-VOLUME INDICATOR\n      *             X'40' DATA SET IS OPEN\n      *             X'20' VOLUME ACCESSABILITY MESSAGE HAS BEEN ISSUED\n      *             X'10' SECURE VOLUME\n      *             X'08' RESERVED\n      *             X'04' RESERVED\n      *             X'02' RESERVED\n      *             X'01' RESERVED\n      *10  DEB-DEBDSID.\n      *             DATA SET IDENTIFIER (DSID) (INPUT)\n       10  DEB-DEBEXDTE  PIC X(6).\n      *             EXPIRATION DATE (OUTPUT)\n       10  DEB-DEBWTPTI  PIC X(1).\n      *             WRITE PROTECT INDICATOR (OUTPUT)\n       10  DEB-DEBRV008  PIC X(1).\n      *             RESERVED (OUTPUT)\n      *10  DEB-DEBEOD.\n      *             END OF DATA (EOD) ADDRESS (INPUT)\n      *10  DEB-DEBBOE.\n      *             BEGINNING OF EXTENT (BOE) ADDRESS (OUTPUT)\n      *10  DEB-DEBEODRV.\n      *             RESERVED\n       10  DEB-DEBBOERV  PIC X(1).\n      *             RESERVED\n      *10  DEB-DEBEODTT.\n      *             EOD TRACK NUMBER\n       10  DEB-DEBBOETT  PIC X(1).\n      *             BOE TRACK NUMBER\n      *10  DEB-DEBEOD0.\n      *             MUST BE ZERO\n       10  DEB-DEBBOE0   PIC X(1).\n      *             MUST BE ZERO\n      *10  DEB-DEBEODSS.\n      *             EOD SECTOR NUMBER\n       10  DEB-DEBBOESS  PIC X(1).\n      *             BOE SECTOR NUMBER\n      *\n      *    END OF 3540 DEPENDENT SECTION\n      *\n      ******************************************************************\n      *\n      *    DEB ISAM DEPENDENT SECTION\n      *\n      *      NOTE PRESENT ONLY IF ISAM IS USED.  FOLLOWS THE BASIC\n      *      SECTION AND PRECEDES THE DIRECT ACCESS STORAGE DEVICE\n      *      SECTION. COUNTED AS ONE EXTENT IN DEBNMEXT.\n      ******************************************************************\n       01 DEB-DEBISAM.\n       05  DEB-DEBFIEAD.\n      *             ADDRESS OF FIRST INDEX EXTENT\n       10  DEB-DEBNIEE   PIC X(1).\n      *             NUMBER OF EXTENTS OF INDEPENDENT INDEX AREA\n       10  DEB-DEBFIEB   PIC X(3).\n      *             ADDRESS OF FIRST INDEX EXTENT\n       05  DEB-DEBFPEAD.\n      *             ADDRESS OF THE FIRST PRIME DATA EXTENT\n       10  DEB-DEBNPEE   PIC X(1).\n      *             NUMBER OF EXTENTS OF PRIME DATA AREA\n      *             (M=0 EXTENT)\n       10  DEB-DEBFPEB   PIC X(3).\n      *             ADDRESS OF THE FIRST PRIME DATA EXTENT\n       05  DEB-DEBFOEAD.\n      *             ADDRESS OF THE FIRST OVERFLOW EXTENT\n       10  DEB-DEBNOEE   PIC X(1).\n      *             NUMBER OF EXTENTS OF INDEPENDENT OVERFLOW AREA\n       10  DEB-DEBFOEB   PIC X(3).\n      *             ADDRESS OF THE FIRST OVERFLOW EXTENT\n       05  DEB-DEBEXPT.\n      *             ADDRESS OF ISAM DEB EXTENSION\n       10  DEB-DEBRPSID  PIC X(1).\n      *             ROTATIONAL POSITION SENSING (RPS) DEVICE\n      *             INDICATORS\n      *             X'80' PRIME DATA AREA IS ON RPS DEVICE\n      *             X'40' INDEPENDENT INDEX AREA IS ON RPS DEVICE\n      *             X'20' INDEPENDENT OVERFLOW AREA IS ON RPS DEVICE\n      *             X'10' RPS SIO APPENDAGE HAS BEEN LOADED\n       10  DEB-DEBEXPTA  PIC X(3).\n      *             ADDRESS OF ISAM DEB EXTENSION\n      *\n      *     END OF ISAM DEPENDENT SECTION\n      *\n      ******************************************************************\n      *\n      *    DIRECT-ACCESS STORAGE DEVICE SECTION\n      *\n      *     NOTE IF ISAM IS BEING USED, THIS SECTION FOLLOWS THE ISAM\n      *     DEVICE DEPENDENT SECTION.  OTHERWISE, IT FOLLOWS THE\n      *     BASIC SECTION.\n      *\n      *    THERE IS ONE OF THESE SECTIONS FOR EACH EXTENT.\n      ******************************************************************\n       01 DEB-DEBDASD.\n       05  DEB-DEBUCBAD.\n      *             ADDRESS OF UCB ASSOCIATED WITH THIS DATA\n      *             EXTENT\n       10  DEB-DEBDVMOD  PIC X(01).\n      *             DEVICE MODIFIER - FILE MASK\n       10  DEB-DEBUCBA   PIC X(3).\n      *             ADDRESS OF UCB ASSOCIATED WITH THIS DATA\n      *             EXTENT\n       05  DEB-DEBBINUM  PIC X(2).\n      *             BIN NUMBER\n       05  DEB-DEBSTRCC  PIC X(2).\n      *             CYLINDER ADDRESS FOR THE START OF AN EXTENT\n      *             LIMIT\n       05  DEB-DEBSTRHH  PIC X(2).\n      *             READ/WRITE TRACK ADDRESS FOR THE START OF AN\n      *             EXTENT LIMIT\n       05  DEB-DEBENDCC  PIC X(2).\n      *             CYLINDER ADDRESS FOR THE END OF AN EXTENT\n      *             LIMIT\n       05  DEB-DEBENDHH  PIC X(2).\n      *             READ/WRITE TRACK ADDRESS FOR THE END OF AN\n      *             EXTENT LIMIT\n       05  DEB-DEBNMTRK  PIC X(2).\n      *             NUMBER OF TRACKS ALLOCATED TO A GIVEN EXTENT.\n      *             FOR SPLIT CYLINDER DATA SETS, THIS FIELD\n      *             REPRESENTS THE NUMBER OF TRACKS BETWEEN THE\n      *             START ADDRESS OF THE EXTENT AND THE END\n      *             ADDRESS OF THE EXTENT.\n      *\n      *    END OF DASD DEVICE SECTION\n      *\n      ******************************************************************\n      *\n      *    EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION\n      *\n      ******************************************************************\n       01 DEB-DEBACSMD.\n       05  DEB-DEBVOLSQ.\n      *             VOLUME SEQUENCE NUMBER FOR MULTIVOLUME\n      *             SEQUENTIAL DATA SETS\n       10  DEB-DEBVOLBT  PIC X(01).\n      *             FIRST BYTE OF DEBVOLSQ\n      *             X'80' SET BY EOV WHEN REWRITING AN OLD DIRECT ACCESS\n      *             DATA SET TO INDICATE THAT ALL PREVIOUS\n      *             EXISTING EXTENTS HAVE BEEN FILLED\n       10  DEB-DEBVLSEQ  PIC X(1).\n      *             FOR DIRECT ACCESS, SEQUENCE NUMBER OF THE\n      *             VOLUME OF THE DATA SET RELATIVE TO THE FIRST\n      *             VOLUME OF THE DATA SET.  FOR TAPE, SEQUENCE\n      *             NUMBER OF THE VOLUME OF THE DATA SET RELATIVE\n      *             TO THE FIRST VOLUME PROCESSED.(MDC019) YA00318\n       05  DEB-DEBVOLNM  PIC X(2).\n      *             TOTAL NUMBER OF VOLUMES IN A MULTIVOLUME\n      *             SEQUENTIAL DATA SET.\n       05  DEB-DEBDSNM.\n      *             MEMBER NAME. THIS FIELD APPEARS ONLY WHEN AN\n      *             OUTPUT DATA SET HAS BEEN OPENED FOR A MEMBER\n      *             NAME AND THE DSCB SPECIFIES A PARTITIONED\n      *             DATA SET.\n      *10  DEB-DEBUTSAA  .\n      *             ADDRESS OF THE USER TOTALING SAVE AREA\n       10  DEB-DEBRSV13  PIC X(01).\n      *             RESERVED\n       10  DEB-DEBUTSAB  PIC X(3).\n      *             ADDRESS OF THE USER TOTALING SAVE AREA\n       10  DEB-DEBRSV14  PIC X(4).\n      *             RESERVED (IF USER TOTALING WAS SPECIFIED)\n       05  DEB-DEBBLKSI  PIC S9(4) COMP.\n      *             MAXIMUM BLOCK SIZE\n       05  DEB-DEBLRECL  PIC S9(4) COMP.\n      *             LOGICAL RECORD LENGTH\n      *\n      *****************************************************************\n      *      DEB EXTENSION (OS/VS2)                                   *\n      *          POINTED TO BY DEBXTNP                                *\n      *****************************************************************\n       01 DEB-DEBXTN.\n       05  DEB-DEBXLNGH  PIC S9(4) COMP.\n      *             LENGTH OF DEB EXTENSION\n       05  DEB-DEBXFLG1  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' DEBDCBAD FIELD CONTAINS THE ADDRESS OF A\n      *             COPIED DCB. USED BY END-OF-VOLUME, TCLOSE AND\n      *             TASK CLOSE.\n      *             X'40' TASK CLOSE IS CLOSING THE RELATED DCB. SET BY\n      *             TASK CLOSE AND INTERROGATED BY END-OF-VOLUME,\n      *             FEOV AND TCLOSE FOR DEB'S NOT ON THE CURRENT\n      *             TCB DEB CHAIN.\n      *             X'20' DATA SET SECURITY INDICATOR. SET BY OPEN AND\n      *             CHECKPOINT. INTERROGATED BY EOV.\n      *             X'10' MSS WINDOW PROCESSING INDICATOR.\n      *             SET BY OPEN.  INTERROGATED BY EOV,\n      *             SAM EOB AND CLOSE.\n      *             X'08' ACQUIRE ISSUED WITH INHIBIT STAGE\n      *             INDICATED DURING OPEN OR EOV.\n      *             SET BY OPEN AND EOV.\n      *             INTERROGATED BY SVC 126.\n      *             X'04' DO NOT FLUSH QSAM BUFFERS IN CLOSE BECAUSE\n      *             AN OPEN/CLOSE/EOV ABEND OCCURRED. SET BY\n      *             IFG0RR0B. TESTED BY IGG0201Z.\n      *             X'02' SYSTEM DETERMINED BLOCKSIZE\n      *             X'01' RACF EXECUTE ONLY AUTHORITY OF A PROGRAM\n      *             LIBRARY. SET BY OPEN AND INTEROGATED BY\n      *             OPEN AFTER FINAL DCB MERGE AND BY A SAM\n      *             EXECUTOR.\n       05  DEB-DEBXFLG2  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' USED BY RESTART TO INDICATE THAT RESTART\n      *             HAS INCREASED THE LENGTH OF THE DEB\n      *             EXTENSION TO INCLUDE A CHKPT/RST APPENDAGE@06A\n      *             TO THE DEB EXTENSION. THE APPENDAGE IS\n      *             FREEMAINED AND THIS BIT IS TURNED OFF\n      *             BEFORE RESTART PROCESSING IS COMPLETED.\n      *             DEBXLNTH INCLUDES THE LENGTH OF THE\n      *             APPENDAGE WHILE THIS BIT IS ON.\n      *             X'40' WHEN ON EXCP SCAN ROUTINE WILL SET\n      *             IOSBYP ON AND BYPASS BUILDING A PREFIX\n      *             X'20' WHEN ON EXCP SCAN ROUTINE WILL SET\n      *             IOSCHCMP ON AND BYPASS BUILDING A PREFIX\n      *             X'10' ENQUEUED ON PDS, DISP=SHARE, OUTPUT\n      *             X'08' ENQUEUED ON DSCB,DISP=SHR\n      *             X'04' IMS CLOSE IN PROGRESS\n      *             X'02' THE CACHE ATTRIBUTE TOKEN IS VALID\n       05  DEB-DEBXDSAB  PIC S9(9) COMP.\n      *             POINTER TO DSAB\n       05  DEB-DEBXDCBM  PIC X(4).\n      *             DCB MODIFICATION MASK USED BY I/O SUPPORT\n       05  DEB-DEBXDBPR  PIC S9(9) COMP.\n      *             POINTER TO DEB\n       05  DEB-DEBXDSO1  PIC X(01).\n      *             SAME AS DCBDSORG BYTE 1\n       05  DEB-DEBXDSO2  PIC X(01).\n      *             SAME AS DCBDSORG BYTE 2\n       05  DEB-DEBXMCF1  PIC X(01).\n      *             SAME AS DCBMACRF BYTE 1\n       05  DEB-DEBXMCF2  PIC X(01).\n      *             SAME AS DCBMACRF BYTE 2\n       05  DEB-DEBXXARG  PIC S9(9) COMP.\n      *             ADDRESS OF BDAM READ EXCLUSIVE LIST\n       05  DEB-DEBXOPNJ  PIC S9(9) COMP.\n      *             POINTER TO DSAB (SEPARATE FROM DEBXDSAB)\n      *             DYNAMICALLY ALLOCATED BY OPEN TYPE=J.  THIS\n      *             POINTER WILL EXIST FOR NON-AUTHORIZED CALLERS\n      *             OF OPEN TYPE=J FOR A DIRECT ACCESS DATA SET\n      *             WHERE THE DATA SET NAME BEING OPENED IS\n      *             DIFFERENT FROM THE DATA SET DESCRIBED BY THE\n      *             DDNAME IN DCB AND THE JFCNWRIT BIT IS ON IN\n      *             JFCB. THE POINTER WILL BE USED BY CLOSE TO\n      *             DYNAMICALLY UNALLOCATE THE DATA SET.\n       05  DEB-DEBXSAMB  PIC S9(9) COMP.\n      *             ADDRESS OF SAM BLOCK (SAMB)\n       05  DEB-DEBXOPET  PIC X(8).\n      *             DATASET OPEN TIME SET BY OPEN INITIAL\n       05  DEB-DEBXDEF.\n      *             DEFINE EXTENT DATA AREA\n       10  DEB-DEBDEFG1  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' NO SEEK HEAD PERMITTED\n      *             X'40' DEB DEF EXT DATA PARMS VALID\n       10  DEB-DEBGATTR  PIC X(1).\n      *             GLOBAL ATTRIBUTES\n      *             X'C0' EXTENT DEFINITION\n      *             B'XX......' EXTENT DEFINITION\n      *             X'80' EXTENT DEFINITION 1\n      *             X'40' EXTENT DEFINITION 2\n      *             B'00......' DEFINE EXTENT OPERATES\n      *             AS DEFINED FOR FIXED BLOCK ARCH\n      *             B'11......' DEFINE EXTENT OPERATES\n      *             AS DEFINED FOR CKD EXT-CCHH EXTENTS\n      *             X'20' DATA STORAGE TYPE-NORM/TEMP\n      *             B'..1.....' NORMAL DATA STORAGE\n      *             B'..0.....' TEMPORARY DATA STORAGE\n      *             X'1C' ATTRIBUTES BITS 3,4,5\n      *             B'...XXX..' ATTRIBUTE BITS 3,4,5\n      *             X'10' ATTRIBUTE 1\n      *             X'08' ATTRIBUTE 2\n      *             X'04' ATTRIBUTE 3\n      *             B'...000..' NORMAL CACHE ACCESS\n      *             B'...001..' BYPASS CACHE LOAD\n      *             B'...010..' INHIBIT CACHE LOAD\n      *             B'...011..' SEQUENTIAL ACCESS\n      *             B'...100..' RESERVED\n      *             B'...101..' RESERVED\n      *             B'...111..' RESERVED\n      *             B'......XX' RESERVED\n      *             X'00' NORMAL CACHE ACCESS\n      *             X'04' BYPASS CACHE LOAD\n      *             X'08' INHIBIT CACHE LOAD\n      *             X'0C' SEQUENTIAL ACCESS\n      *             X'02' NON RETENTIVE DATA ACCESS\n      *             X'01' INHIBIT FAST WRITE\n       10  DEB-DEBBLKSZ  PIC X(2).\n      *             BLOCKSIZE IN BYTES\n       10  DEB-DEBEXTOK.\n      *             ZERO,EXTENT LOCATOR OR TOKEN\n       15  DEB-DEBNRDID  PIC X(2).\n      *             NON RETENTIVE DATA ID\n       15  FILLER        PIC X(2).\n       05  DEB-DEBIOPID  PIC X(4).\n      *             I/O PREVENTION IDENTIFIER\n       05  DEB-DEBBLKID  PIC X(4).\n      *             BLOCK ID VALUE USED TO CALCULATE NUMBER OF\n      *             BLOCKS IN THIS VOLUME FOR EXTENDED\n      *             BLOCK COUNT CHECKING\n       05  DEB-DEBXCASF  PIC X(4).\n      *             CACHE ATTRIBUTE SELECTION TOKEN\n       05  DEB-DEBXFLG3  PIC X(01).\n      *             FLAG BYTE\n      *             X'80' TRUNC MACRO HAS BEEN ISSUED\n      *             X'40' NULL SEGMENT ENCOUNTERED IN DATA SET\n      *             X'20' SMS GUARANTEED SPACE DISP NEW OR MOD\n      *             BIT 3 - 7 RESERVED\n       05  DEB-DEBXRSV1  PIC X(3).\n      *             RESERVED\n       05  DEB-DEBXSACB  PIC S9(9) COMP.\n      *             POINTER TO SACB CONTROL BLOCK\n       05  DEB-DEBXRSV2  PIC X(4).\n      *             RESERVED\n       05  DEB-DEBXRSV3  PIC X(4).\n      *             RESERVED\n      *\n      *     END OF EXTENSION\n      *\n      *    END OF DEB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@JCL": {"ttr": 2058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00,\\x00,\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "SCHUFF"}, "text": "//*\n//*       ASSEMBLE DSECTS\n//*\n//ASMH   EXEC  PGM=IEV90,REGION=512K\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=O,DCB=(BLKSIZE=3509)\n//SYSIN    DD  *\nDSECTS   CSECT\n*\n         CVT   DSECT=YES,LIST=YES\n*\n         IHAASCB LIST=YES\n*\n         IHAACEE\n*\n         IKJRB LIST=YES      (IHARB)\n*\n         IKJTCB LIST=YES\n*\n         IHAASXB LIST=YES\n*\n         IHACDE\n*\n         IHAPDS\n*\n         IEFUCBOB\n*\n         IEFTIOT1\n*\n         IEZDEB  LIST=YES\n*\n         IHAASVT LIST=YES\n*\n         IFGACB AM=VSAM\n*\n         DCB   DDNAME=XXXXXXXX,DSORG=PS,MACRF=(RP,WP)\n*\n         IEFJFCBN LIST=YES\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@JFCB": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x02\\x86\\x02\\x86\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 646, "newlines": 646, "modlines": 0, "user": "SCHUFF"}, "text": "      *JFCB************************************************************\n      *                                                               *\n      *    JFCB = JOB FILE CONTROL BLOCK                              *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n      *05  JFCB-JFCBQNAM.\n      *             PROCESS QUEUE NAME SPECIFIED BY THE QNAME\n      *             KEYWORD (TCAM)\n       05  JFCB-JFCBDSNM PIC X(44).\n      *             DATA SET NAME\n      *05  JFCB-JFCIPLTX.\n      *             MODULE NAME OF NETWORK CONTROL PROGRAM (TCAM)\n       05  JFCB-JFCBELNM PIC X(8).\n      *             ELEMENT NAME OR RELATIVE GENERATION NUMBER.\n      *             TYPE OF AREA (INDEX, PRIME OR OVERFLOW) FOR\n      *             AN INDEXED SEQUENTIAL DATA SET ONLY.\n       05  JFCB-JFCBTSDM PIC X(01).\n      *             JOB MANAGEMENT/DATA MANAGEMENT INTERFACE\n      *             X'80' DATA SET IS CATALOGED\n      *             X'40' VOLUME SERIAL LIST HAS BEEN CHANGED\n      *             X'20' DATA SET IS A SYSIN OR SYSOUT DATA SET\n      *             X'10' A JOB STEP IS TO BE RESTARTED. USE JFCBOTTR\n      *             INSTEAD OF DS1LSTAR FIELD TO REPOSITION DATA\n      *             SET IF AUTOMATIC STEP RESTART OCCURS.  (THIS\n      *             JOB HAD ABEND PROCESSING FOR A DATA SET OPENED\n      *             FOR MOD.)\n      *             X'08' DO NOT WRITE BACK THE JFCB DURING OPEN\n      *             PROCESSING\n      *             X'04' DO NOT MERGE DSCB OR LABEL FIELDS INTO THIS\n      *             JFCB\n      *             X'02' DO NOT MERGE DCB FIELDS INTO THIS JFCB\n      *             X'01' THE PATTERNING DSCB IS COMPLETE\n       05  JFCB-JFCBDSCB PIC X(3).\n      *             SVA OF THE FORMAT 1 DSCB FOR DATA SET\n      *             PART ON THE FIRST VOLUME OF THE DATA SET\n       05  JFCB-JFCFCBID.\n      *             FORMS CONTROL BUFFER IMAGE IDENTIFICATION FOR\n      *             THE 3211 PRINTER OR DATA PROTECTION IMAGE\n      *             IDENTIFICATION FOR THE 3525 CARD PUNCH WITH\n      *             THE READ AND PRINT FEATURES OR FORMAT RECORD ID\n      *05  JFCB-JFCBFRID.\n      *             LAST 4 CHARACTERS OF A PDS MEMBER TO BE USED\n      *             IN THE INTERPRETATION OF DOCUMENTS READ BY\n      *             3886 DEVICE FOR THIS STEP\n      *05  JFCB-JFCRBIDO.\n      *             THE PHYSICAL LOCATION ON THE TAPE\n      *             OF THE FIRST STANDARD-LABEL HEADER\n      *             RECORD TO BE PROCESSED BY OPEN\n       10  JFCB-JFCAMCRO PIC X(2).\n      *             VSAM CHECKPOINT/RESTART OPTION INDICATORS\n       10  JFCB-JFCAMSTR PIC S9(4) COMP.\n      *             NUMBER OF STRINGS\n       05  JFCB-JFCBADBF PIC S9(4) COMP.\n      *             NUMBER OF DATA BUFFERS\n       05  JFCB-JFCNLREC PIC S9(4) COMP.\n      *             LOGICAL RECORD LENGTH FOR VSAM\n       05  JFCB-JFCVINDX PIC S9(4) COMP.\n      *             MASS STORAGE SYSTEM COMMUNICATOR (MSSC) VOLUME\n      *             SELECTION INDEX\n       05  JFCB-JFCBLTYP PIC X(01).\n      *             LABEL TYPE\n      *             X'80' DATASET SEQUENCE NUMBER WAS CODED ON LABEL\n      *             PARAMETER\n      *             X'40' AMERICAN NATIONAL STANDARD TAPE LABELS (AL OR\n      *             IF BIT 4 IS ALSO ON, AUL)\n      *             X'20' UNLABELLED TAPE CREATED BY DOS MAY HAVE\n      *             LEADING TAPE MARK.  OPEN/CLOSE/EOV AND RESTART\n      *             MUST SPACE OVER A TAPE MARK IF ONE EXISTS.\n      *             X'10' BYPASS LABEL PROCESSING\n      *             X'0A' USER LABEL\n      *             X'04' NONSTANDARD LABEL\n      *             X'02' STANDARD LABEL\n      *             X'01' NO LABEL\n       05  JFCB-JFCBOTTR.\n      *             DASD MOD DATA SET - IF AUTOMATIC STEP RESTART\n      *             WAS REQUESTED, SVA OF THE END-OF-DATA\n      *             INDICATOR EXISTING WHEN THE DATA SET WAS FIRST\n      *             OPENED DURING THE ORIGINAL EXECUTION OF THE\n      *             CURRENT STEP\n       10  JFCB-JFCBUFOF PIC X(1).\n      *             TAPE DATA SET - THIS FIELD CONTAINS THE BUFFER\n      *             OFFSET (DCB SUBPARAMETER VALUE)\n      *             X'80' IF 1, THE OFFSET EQUALS FOUR AND THE BUFFER\n      *             OFFSET FIELD OF EACH BLOCK (D-FORMAT RECORDS)\n      *             CONTAINS THE BLOCK LENGTH (SPECIFIED BY\n      *             BUFOFF=L).\n      *             IF 0, THE OFFSET IS AS SPECIFIED IN THE\n      *             REMAINING SEVEN BITS AND THE BUFFER OFFSET\n      *             FIELD OF EACH BLOCK DOES NOT CONTAIN THE\n      *             BLOCK LENGTH.\n      *10  JFCB-JFCFUNC.\n      *             FUNCTION INDICATORS FOR THE 3525 CARD PUNCH\n      *             (SPECIFIED BY THE FUNC PARAMETER)\n      *             X'80' I - INTERPRET (PUNCH AND PRINT TWO LINES)\n      *             X'40' R - READ\n      *             X'20' P - PUNCH\n      *             X'10' W - PRINT\n      *             X'08' D - DATA PROTECTION\n      *             X'04' X - THIS DATA SET IS TO BE PRINTED. THIS MAY\n      *             BE CODED WITH PW OR RPW TO DISTINGUISH THE\n      *             DATA SET TO BE PRINTED FROM THE DATA SET TO\n      *             BE PUNCHED.\n      *             X'02' T - TWO-LINE PRINT SUPPORT REQUEST. THE\n      *             SECOND PRINT LINE IS LOCATED ON CARD LINE\n      *             THREE.\n      *             X'01' RESERVED\n       10  JFCB-JFCBFLSQ PIC S9(4) COMP.\n      *             FOR MAGNETIC TAPE DEVICES, FILE SEQUENCE\n      *             NUMBER\n       05  JFCB-JFCBVLSQ PIC S9(4) COMP.\n      *             VOLUME SEQUENCE NUMBER\n       05  JFCB-JFCBMASK.\n      *             DATA MANAGEMENT MASK\n       10  JFCB-JFCBOPS1 PIC X(5).\n      *             OPEN ROUTINE INTERNAL SWITCHES\n       10  JFCB-JFCBFLG1 PIC X(01).\n      *             FLAG BYTE\n      *             X'80' VOLUME LABEL PROCESSING STANDARD\n      *             X'40' CREATION OF A STANDARD LABEL IS NECESSARY\n      *             X'20' DESTRUCTION OF A STANDARD LABEL IS NECESSARY\n      *             X'10' DUAL-DENSITY CHECK DETECTED\n      *             X'0F' OPEN ROUTINE INTERNAL SWITCHES\n      *             X'01' PASSWORD BYPASS INDICATOR\n       10  JFCB-JFCBFLG2 PIC X(01).\n      *             FLAG BYTE OF OPEN SWITCHES\n      *             X'80' TREAT THE INOUT OPTION OF OPEN AS INPUT\n      *             X'40' TREAT THE OUTIN OPTION OF OPEN AS OUTPUT\n      *             X'20' SET ONLY IN A JFCB RECORDED IN A DATA SET\n      *             DESCRIPTOR RECORD (DSDR) BY THE CHECKPOINT\n      *             ROUTINE. INDICATES THAT THE DATA SET RELATED\n      *             TO THE JFCB IS BEING PROCESSED SEQUENTIALLY,\n      *             AT THE CHECKPOINT, ON A VOLUME OTHER THAN THE\n      *             VOLUME ON WHICH PROCESSING BEGAN IN THE\n      *             CURRENT STEP. WHEN RESTART OCCURS, THIS BIT\n      *             CAUSES DEFERRED VOLUME MOUNTING.\n      *             X'20' USE BY OPEN ROUTINES - SET TO INDICATE THAT\n      *             THIS DATA SET RESIDES ON A NON-RPS DEVICE.\n      *             RESET TO ZERO WHEN OPEN PROCESSING IS\n      *             COMPLETED.\n      *             X'10' DISPOSITION OF THIS DATA SET HAS BEEN CHANGED\n      *             FROM MOD TO NEW.  DISPOSITION (IN JFCBIND2)\n      *             WILL BE RESTORED TO MOD AFTER OPEN.\n      *             X'08' USE SEARCH DIRECT FOR ROTATIONAL POSITION\n      *             SENSING (RPS) DEVICES\n      *             X'04' GTF TRACE IS TO OCCUR DURING OPEN/CLOSE/EOV\n      *             AND DYNAMIC ALLOCATION PROCESSING OF DCB\n      *            X'02' INDICATOR TO OPEN THAT A NON-ZERO VALUE IN\n      *             JFCBOTTR IS NOT TO PREVENT THE NORMAL STORING\n      *             BY OPEN OF A SVA IN JFCBOTTR.  BEFORE OPEN -\n      *             JFCBUFOF (OFFSET 67) CONTAINS A BUFFER OFFSET\n      *             OR INVALID INFORMATION RESULTING FROM A\n      *             JFCB-TO-JFCB MERGE. AFTER OPEN - OPEN MAY\n      *             HAVE STORED A SVA IN JFCBOTTR (OFFSET 67), IN\n      *             WHICH CASE OPEN WILL HAVE SET THIS BIT TO\n      *             ZERO.\n      *             X'01' OPEN HAS UPDATED THE SVA. SCHEDULER STEP\n      *             TERMINATION ROUTINE IS TO RECATALOG THIS DATA\n      *             SET AND PLACE IN THE CATALOG ENTRY THE DSCB\n      *             SVA CONTAINED IN JFCBDSCB IF THIS DATA SET IS\n      *             CATALOGED.\n       10  JFCB-JFCBOPS2 PIC X(01).\n      *             OPEN ROUTINE INTERNAL SWITCHES\n       05  JFCB-JFCBCRDT PIC X(3).\n      *             DATA SET CREATION DATE (YDD, Y=YEAR AND\n      *             DD=DAY)\n       05  JFCB-JFCBXPDT PIC X(3).\n      *             DATA SET EXPIRATION DATE (YDD)\n       05  JFCB-JFCBIND1 PIC X(01).\n      *             INDICATOR BYTE 1\n      *             X'C0' RELEASE EXTERNAL STORAGE\n      *             X'30' DATA SET HAS BEEN LOCATED\n      *             X'0C' NEW VOLUME HAS BEEN ADDED TO THE DATA SET\n      *             X'02' DATA SET IS A MEMBER OF A GENERATION DATA\n      *             GROUP\n      *             X'01' DATA SET IS A MEMBER OF A PARTITIONED DATA SET\n       05  JFCB-JFCBIND2 PIC X(01).\n      *             INDICATOR BYTE 2\n      *             X'C0' BIT PATTERN FOR NEW, MOD, OLD\n      *             X'C0' NEW DATA SET\n      *             X'80' MOD DATA SET\n      *             X'40' OLD DATA SET\n      *             X'30' PASSWORD IS REQUIRED TO WRITE BUT NOT TO READ\n      *             (DATA SET SECURITY)\n      *             X'10' PASSWORD IS REQUIRED TO READ OR TO WRITE\n      *             (DATA SET SECURITY)\n      *             X'08' SHARED DATA SET\n      *             X'04' DELETE THIS JFCB BEFORE ALLOCATION FOR A\n      *             RESTARTED GENERATION DATA GROUP\n      *             X'02' STORAGE VOLUME REQUESTED\n      *             X'01' TEMPORARY DATA SET\n       05  JFCB-JFCAMPTR.\n      *             POINTER TO AMPBLK FOR ADDITIONAL VSAM\n      *             PARAMETERS\n      *10  JFCB-JFCAMSVA.\n      *             SVA OF AMPX CONTROL BLOCK EXTENSION\n      *             TO THE JFCB\n      *10  JFCB-JFCBUFNO.\n      *             NUMBER OF BUFFERS REQUIRED FOR THIS DATA SET\n      *             (ACCESS METHODS OTHER THAN TCAM AND QTAM)\n      *10  JFCB-JFCBUFIN.\n      *             BITS 0-3 CONTAIN THE NUMBER OF BUFFERS\n      *             ASSIGNED INITIALLY FOR RECEIVING OPERATIONS\n      *             FOR EACH LINE IN A LINE GROUP  (TCAM)\n      *10  JFCB-JFCBFOUT.\n      *             BITS 4-7 CONTAIN THE NUMBER OF BUFFERS\n      *             ASSIGNED INITIALLY FOR SENDING OPERATIONS FOR\n      *             EACH LINE IN A LINE GROUP  (TCAM)\n       10  JFCB-JFCBUFRQ PIC X(1).\n      *             NUMBER OF BUFFERS REQUIRED FOR EACH LINE\n      *             (QTAM)\n      *10  JFCB-JFCBGNCP.\n      *             FOR GAM, THIS FIELD IS USED FOR THE NUMBER OF\n      *             IOB'S CONSTRUCTED BY THE OPEN ROUTINE.\n      *             MAXIMUM NUMBER IS 99.\n      *10  JFCB-JFCBHIAR.\n      *             BUFFER POOL LOCATION IN MAIN STORAGE\n      *             (HIERARCHY)\n      *10  JFCB-JFCBFALN.\n      *             BUFFER ALIGNMENT\n       10  JFCB-JFCBFTEK PIC X(01).\n      *             BUFFERING TECHNIQUE\n      *             X'84' BITS 0 AND 5 DESCRIBE MAIN STORAGE HIERARCHY.\n      *             BOTH BITS OFF, HIERARCHY 0.\n      *             BIT 0 OFF AND BIT 5 ON, HIERARCHY 1.\n      *             X'40' S - SIMPLE BUFFERING\n      *             X'60' A - FOR QSAM LOCATE MODE PROCESSING OF SPANNED\n      *             RECORDS, AUTOMATIC RECORD AREA CONSTRUCTION\n      *             DURING LOGICAL RECORD INTERFACE PROCESSING.\n      *             OPEN IS TO CONSTRUCT A RECORD AREA IF IT\n      *             AUTOMATICALLY CONSTRUCTS BUFFERS.\n      *             X'20' R - FOR BSAM CREATE BDAM PROCESSING OR BDAM\n      *             PROCESSING OF UNBLOCKED SPANNED RECORDS,\n      *             SOFTWARE TRACK OVERFLOW.  OPEN FORMS A SEGMENT\n      *             WORK AREA POOL AND STORES THE ADDRESS OF THE\n      *             SEGMENT WORK AREA CONTROL BLOCK IN THE DCBEOBW\n      *             FIELD OF THE DATA CONTROL BLOCK.  WRITE USES\n      *             A SEGMENT WORK AREA TO WRITE A RECORD AS ONE\n      *             OR MORE SEGMENTS.\n      *             FOR BSAM INPUT PROCESSING OF UNBLOCKED SPANNED\n      *             RECORDS WITH KEYS, RECORD OFFSET PROCESSING.\n      *             READ READS ONE RECORD SEGMENT INTO THE RECORD\n      *             AREA. THE FIRST SEGMENT OF A RECORD IS\n      *             PRECEDED IN THE RECORD AREA BY THE KEY.\n      *             SUBSEQUENT SEGMENTS ARE AT AN OFFSET EQUAL TO\n      *             THE KEY LENGTH.\n      *             X'10' E - EXCHANGE BUFFERING\n      *             X'08' DYNAMIC BUFFERING\n      *             X'04' HIERARCHY 1 MAIN STORAGE\n      *             X'02' D - DOUBLE WORD BOUNDARY\n      *             X'01' F - FULL WORD NOT A DOUBLE WORD BOUNDARY\n       10  JFCB-JFCBUFL  PIC S9(4) COMP.\n      *             BUFFER LENGTH\n       05  JFCB-JFCEROPT PIC X(01).\n      *             ERROR OPTION. DISPOSITION OF PERMANENT ERRORS\n      *             IF USER RETURNS FROM A SYNCHRONOUS ERROR\n      *             EXIT. (QSAM)\n      *             X'80' ACCEPT\n      *             X'40' SKIP\n      *             X'20' ABNORMAL END OF TASK\n      *             X'10' ON-LINE TERMINAL TEST (BTAM)\n       05  JFCB-JFCTRTCH.\n      *             TAPE RECORDING TECHNIQUE FOR 7-TRACK TAPE\n      *             X'23' E - EVEN PARITY\n      *             X'3B' T - EOD/EBCDIC TRANSLATION\n      *             X'13' C - DATA CONVERSION\n      *             X'2B' ET - EVEN PARITY AND TRANSLATION\n      *             X'42' TBD - RESERVED FUTURE DEVELOPMENT\n      *             X'82' TBD - RESERVED FUTURE DEVELOPMENT\n      *             X'C2' TBD - RESERVED FUTURE DEVELOPMENT\n      *             X'08' COMP - ENHANCED 3480 DATA RECORDING\n      *             X'04' NOCOMP - ENHANCED 3480 DATA RECORDING\n      *05  JFCB-JFCKEYLE.\n      *             DIRECT ACCESS KEY LENGTH\n      *05  JFCB-JFCCODE.\n      *             CONVERSION CODE (PAPER TAPE)\n      *             X'80' N - NO CONVERSION\n      *             X'40' I - IBM BCD\n      *             X'20' F - FRIDEN\n      *             X'10' B - BURROUGHS\n      *             X'08' C - NATIONAL CASH REGISTER\n      *             X'04' A - ASCII (8-TRACK)\n      *             X'02' T - TELETYPE\n      *05  JFCB-JFCMODE.\n      *             MODE OF OPERATION (CARD READER, CARD PUNCH)\n      *05  JFCB-JFCSTACK.\n      *             STACKER SELECTION (CARD READER, CARD PUNCH)\n      *             X'80' C - COLUMN BINARY MODE\n      *             X'40' E - EBCDIC MODE\n      *             X'20' 0 - OPTICAL MARK READ MODE (3505 ONLY)\n      *             X'10' R - READ COLUMN ELIMINATE MODE (3505 AND 3525\n      *             WITH READ FEATURE)\n      *             X'02' 2 - STACKER TWO\n      *             X'01' 1 - STACKER ONE\n       10  JFCB-JFCPRTSP PIC X(01).\n      *             NORMAL PRINTER SPACING\n      *             X'19' 3 - SPACE THREE LINES\n      *             X'11' 2 - SPACE TWO LINES\n      *             X'09' 1 - SPACE ONE LINE\n      *             X'01' 0 - NO SPACING\n       05  JFCB-JFCDEN   PIC X(01).\n      *             TAPE DENSITY - 2400/3400 SERIES MAGNETIC TAPE\n      *             UNITS\n      *             X'03' 7-TRACK 200 BPI\n      *             X'43' 7-TRACK 556 BPI\n      *             X'83' 7-TRACK AND 9-TRACK 800 BPI\n      *             X'C3' 9-TRACK 1600 BPI\n      *             X'D3' 9-TRACK 6250 BPI\n       05  JFCB-JFCBABFS.\n      *             TOTAL BUFFER SIZE FOR ALL VSAM BUFFERS\n      *10  JFCB-JFCLIMCT.\n      *             SEARCH LIMIT (BDAM)\n       10  FILLER        PIC X(1).\n      *             RESERVED\n       10  JFCB-JFCTRKBL PIC X(2).\n      *             DATA SET OPENED FOR MOD - IF AUTOMATIC STEP\n      *             RESTART WAS REQUESTED, TRACK BALANCE EXISTING\n      *             WHEN THE DATA SET WAS FIRST OPENED DURING THE\n      *             ORIGINAL EXECUTION OF THE CURRENT STEP\n       05  JFCB-JFCDSORG.\n      *             DATA SET ORGANIZATION BEING USED\n       10  JFCB-JFCDSRG1 PIC X(01).\n      *             BYTE 1 OF JFCDSORG\n      *             X'80' INDEXED SEQUENTIAL\n      *             X'40' PHYSICAL SEQUENTIAL\n      *             X'20' DIRECT\n      *             X'10' BTAM OR QTAM LINE GROUP\n      *             X'08' QTAM DIRECT ACCESS MESSAGE QUEUE\n      *             X'04' QTAM PROBLEM PROGRAM MESSAGE QUEUE\n      *             X'02' PARTITIONED\n      *             X'01' UNMOVABLE - THE DATA CONTAINS LOCATION\n      *             DEPENDENT INFORMATION\n       10  JFCB-JFCDSRG2 PIC X(01).\n      *             BYTE 2 OF JFCDSORG\n      *             X'80' GRAPHICS\n      *             X'40' TCAM LINE GROUP\n      *             X'20' TCAM MESSAGE QUEUE\n      *             X'08' VSAM\n      *             X'04' TCAM 3705\n       05  JFCB-JFCRECFM PIC X(01).\n      *             RECORD FORMAT\n      *             X'C0' HIGH-ORDER TWO BITS OF JFCRECFM TO BE TESTED\n      *             FOR RECORD FORMAT\n      *             X'C0' U - UNDEFINED\n      *             X'80' F - FIXED\n      *             X'40' V - VARIABLE\n      *             X'E0' RECORD FORMAT (USASI/USASCII)\n      *             X'20' D - VARIABLE (FORMAT D FOR USASI/USASCII)\n      *             X'20' T - TRACK OVERFLOW\n      *             X'10' B - BLOCKED - MAY NOT OCCUR WITH UNDEFINED\n      *             X'08' S - FOR FIXED LENGTH RECORD FORMAT, STANDARD\n      *             BLOCKS. NO TRUNCATED BLOCKS OR UNFILLED\n      *             TRACKS ARE EMBEDDED IN THE DATA SET.\n      *             FOR VARIABLE LENGTH RECORD FORMAT, SPANNED\n      *             RECORDS.\n      *             X'06' CONTROL CHARACTER\n      *             X'04' A - AMERICAN NATIONAL STANDARD (ASA) CONTROL\n      *             CHARACTER\n      *             X'02' M - MACHINE CODE CONTROL CHARACTER\n      *             X'00' NO CONTROL CHARACTER\n       05  JFCB-JFCOPTCD PIC X(01).\n      *             OPTION CODES\n      *             QSAM - BSAM - BPAM\n      *             X'80' W - WRITE VALIDITY CHECK\n      *             X'40' U - ALLOW A DATA CHECK CAUSED BY AN INVALID\n      *             CHARACTER (1403 PRINTER WITH UCS FEATURE)\n      *             X'20' C - CHAINED SCHEDULING USING THE PROGRAM\n      *             CONTROLLED INTERRUPTION\n      *             X'10' BYPASS EMBEDDED DOS CHECKPOINT RECORDS ON TAPE\n      *             X'08' RESERVED\n      *             X'04' Z - USE REDUCED ERROR RECOVERY PROCEDURE\n      *             (MAGNETIC TAPE) (EXCP ALSO)\n      *             X'04' USE SEARCH DIRECT (SD), INSTEAD OF SEARCH\n      *             PREVIOUS, ON ROTATIONAL POSITION SENSING (RPS)\n      *             DEVICE. (DIRECT ACCESS)\n      *             X'02' RESERVED\n      *             X'01' J - 3800 CONTROL CHARACTER\n      *             BISAM - QISAM\n      *             X'80' W - WRITE VALIDITY CHECK\n      *             X'40' RESERVED\n      *             X'20' M - MASTER INDEXES\n      *             X'10' I - INDEPENDENT OVERFLOW AREA\n      *             X'08' Y - CYLINDER OVERFLOW AREA\n      *             X'04' RESERVED\n      *             X'02' L - DELETE OPTION\n      *             X'01' R - REORGANIZATION CRITERIA\n      *             BDAM\n      *             X'80' W - WRITE VALIDITY CHECK\n      *             X'40' TRACK OVERFLOW\n      *             X'20' E - EXTENDED SEARCH\n      *             X'10' F - FEEDBACK\n      *             X'08' A - ACTUAL ADDRESSING\n      *             X'04' RESERVED\n      *             X'02' RESERVED\n      *             X'01' R - RELATIVE BLOCK ADDRESSING\n      *             USASI/USASCII\n      *             X'08' EBCDIC TO ASCII OR ASCII TO EBCDIC\n      *             TRANSLATION REQUIRED\n      *             TCAM\n      *             X'80' SOURCE OR DESTINATION NAME PRECEDES MESSAGE\n      *             (AFTER CONTROL BYTE)\n      *             X'40' WORK UNIT IS A MESSAGE (DEFAULT WORK UNIT IS\n      *             A RECORD)\n      *             X'20' CONTROL BYTE PRECEDES WORK UNIT\n       05  JFCB-JFCBLKSI.\n      *             MAXIMUM BLOCK SIZE\n      *10  JFCB-JFCBUFSI.\n      *             MAXIMUM BUFFER SIZE\n       10  JFCB-JFCBAXBF PIC S9(4) COMP.\n      *             NUMBER OF INDEX BUFFERS (VSAM)\n       05  JFCB-JFCLRECL PIC S9(4) COMP.\n      *             LOGICAL RECORD LENGTH\n       05  JFCB-JFCNCP.\n      *             NUMBER OF CHANNEL PROGRAMS. NUMBER OF READ OR\n      *             WRITE REQUESTS WHICH MAY BE ISSUED PRIOR TO A\n      *             CHECK. NUMBER OF IOB'S GENERATED.\n      *             (MAXIMUM NUMBER IS 99.)\n      *             NOTE - GAM USES JFCBFTEK FOR THIS INFORMATION\n      *             AND DOES NOT USE THIS FIELD AT ALL.\n       10  JFCB-JFCBUFMX PIC X(1).\n      *             THE MAXIMUM NUMBER OF BUFFERS TO BE USED FOR\n      *             DATA TRANSFER FOR EACH LINE IN THIS LINE\n      *             GROUP (TCAM)\n       05  JFCB-JFCBFSEQ.\n      *             TAPE POSITIONING INFORMATION FOR CHECKPOINT\n      *             RESTART. THIS FIELD IS USED TO PASS A\n      *             PHYSICAL FILE SEQUENCE COUNT FROM CHECKPOINT\n      *             TO RESTART. THE COUNT TELLS THE PHYSICAL\n      *             POSITION OF THE TAPE VOLUME THAT WAS BEING\n      *             PROCESSED WHEN THE CHECKPOINT WAS TAKEN.\n      *10  JFCB-JFCNTM.\n      *             THE NUMBER OF TRACKS THAT DETERMINE THE\n      *             DEVELOPMENT OF A MASTER INDEX.  MAXIMUM\n      *             NUMBER IS 99.  (ISAM)\n       10  JFCB-JFCPCI   PIC X(01).\n      *             PROGRAM-CONTROLLED INTERRUPTION (PCI) FLAG\n      *             BYTE (TCAM)\n      *             X'80' PCI=(X,) RECEIVE OPERATIONS\n      *             X'40' PCI=(,X) SEND OPERATIONS\n      *             X INDICATES THAT AFTER THE FIRST BUFFER IS\n      *             FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON\n      *             SEND OPERATIONS), A PCI OCCURS DURING THE\n      *             FILLING OR EMPTYING OF THE NEXT BUFFER.  THE\n      *             FIRST BUFFER REMAINS ALLOCATED AND ANOTHER\n      *             IS ALLOCATED.\n      *             X'20' PCI=(A,) RECEIVE OPERATIONS\n      *             X'10' PCI=(,A) SEND OPERATIONS\n      *             A INDICATES THAT AFTER THE FIRST BUFFER IS\n      *             FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON\n      *             SEND OPERATIONS), A PCI OCCURS DURING THE\n      *             FILLING OR EMPTYING OF THE NEXT BUFFER.  THE\n      *             FIRST BUFFER IS DEALLOCATED.  A BUFFER IS\n      *             ALLOCATED IN PLACE OF THE DEALLOCATED BUFFER.\n      *             X'08' PCI=(N,) RECEIVE OPERATIONS\n      *             X'04' PCI=(,N) SEND OPERATIONS\n      *             N INDICATES THAT NO PCI'S ARE TAKEN DURING\n      *             FILLING (ON RECEIVE OPERATIONS) OR EMPTYING\n      *             (ON SEND OPERATIONS) OF BUFFERS.  BUFFERS\n      *             ARE DEALLOCATED AT THE END OF TRANSMISSION.\n      *             X'02' PCI=(R,) RECEIVE OPERATIONS\n      *             X'01' PCI=(,R) SEND OPERATIONS\n      *             R INDICATES THAT AFTER THE FIRST BUFFER IS\n      *             FILLED (ON RECEIVE OPERATIONS) OR EMPTIED (ON\n      *             SEND OPERATIONS), A PCI OCCURS DURING THE\n      *             FILLING OR EMPTYING OF EACH SUCCEEDING BUFFER.\n      *             THE COMPLETED BUFFER IS DEALLOCATED, BUT NO\n      *             NEW BUFFER IS ALLOCATED TO TAKE ITS PLACE.\n      *****************************************************************\n      *\n      *             NORMAL 108 SEGMENT\n      *\n       05  JFCB-JFCRESRV.\n      *             FIRST BYTE CONTAINS NUMBER OF BYTES FOR TIME\n      *             OF DAY. SECOND BYTE CONTAINS NUMBER OF BYTES\n      *             FOR DATE. THIRD BYTE CONTAINS NUMBER OF\n      *             BYTES FOR OUT SEQ.  FOURTH BYTE CONTAINS\n      *             NUMBER OF BYTES IN.  (TCAM)\n      *10  JFCB-JFCRBIDC.\n      *             THE PHYSICAL LOCATION OF WHAT WILL BE THE\n      *             FIRST STANDARD-LABEL HEADER RECORDS OF\n      *             THE NEXT DATASET ON THE TAPE VOLUME\n       10  JFCB-JFCRKP   PIC S9(4) COMP.\n      *             THE RELATIVE POSITION OF THE FIRST BYTE OF THE\n      *             KEY WITHIN EACH LOGICAL RECORD.  MAXIMUM VALUE\n      *             IS LOGICAL RECORD LENGTH MINUS KEY LENGTH.\n       10  JFCB-JFCCYLOF PIC X(1).\n      *             THE NUMBER OF TRACKS TO BE RESERVED ON EACH\n      *             CYLINDER TO HOLD RECORDS THAT OVERFLOW FROM\n      *             OTHER TRACKS ON THAT CYLINDER.  MAXIMUM VALUE\n      *             IS 99.\n       10  JFCB-JFCDBUFN PIC X(1).\n      *             RESERVED\n       10  JFCB-JFCINTVL PIC X(1).\n      *             INTENTIONAL DELAY, IN SECONDS, BETWEEN\n      *             PASSES THROUGH A POLLING LIST (QTAM)\n      *             END OF NORMAL 108 SEGMENT\n      *****************************************************************\n      *\n      *       108 PRINTER SEGMENT\n      *\n      *       NOTE THIS SEGMENT REPLACES THE NORMAL 108 SEGMENT IF\n      *       THE DD STATEMENT USES THE UCS PARAMETER.\n      *\n       05  JFCB-PS108  REDEFINES  JFCB-JFCRESRV.\n       10  JFCB-JFCUCSID PIC X(4).\n      *             NAME OF THE UCS IMAGE TO BE LOADED\n       10  JFCB-JFCUCSOP PIC X(01).\n      *             OPERATION OF THE UCS IMAGE TO BE LOADED\n      *             X'80' JFCB EXTENSION PRESENT FOR 3800 DEVICE\n      *             X'40' UCS IMAGE IS TO BE LOADED IN THE FOLD MODE\n      *             X'20' RESERVED\n      *             X'10' UCS IMAGE IS TO BE VERIFIED\n      *             X'08' FORMS ARE TO BE ALIGNED\n      *             X'04' FORMS CONTROL BUFFER (FCB) IMAGE IS TO BE\n      *             VERIFIED\n      *             X'02' RESERVED\n      *             X'01' RESERVED\n      *\n      *      END OF 108 PRINTER SEGMENT\n      *\n      *****************************************************************\n       05  JFCB-JFCOUTLI.\n      *             SMF - SYSOUT LIMIT. BINARY REPRESENTATION OF\n      *             THE OUTLIM= PARAMETER ON THE SYSOUT DD\n      *             STATEMENT. THE MAXIMUM NUMBER OF LOGICAL\n      *             RECORDS SPECIFIED FOR THIS OUTPUT DATA SET.\n      *10  JFCB-JFCTHRSH.\n      *             RECORDS TO BE USED\n       10  JFCB-JFCCPRI  PIC X(01).\n      *             PRIORITY BETWEEN SEND AND RECEIVE OPERATIONS\n      *             (TCAM)\n      *             X'04' - RECEIVE PRIORITY\n      *             X'02' - EQUAL PRIORITY\n      *             X'01' - SEND PRIORITY\n       10  JFCB-JFCSOWA  PIC S9(4) COMP.\n      *             LENGTH, IN BYTES, OF THE USER-PROVIDED WORK\n      *             AREA (QTAM)\n       05  JFCB-JFCBNTCS PIC X(1).\n      *             NUMBER OF OVERFLOW TRACKS\n       05  JFCB-JFCBNVOL PIC X(1).\n      *             NUMBER OF VOLUME SERIAL NUMBERS\n       05  JFCB-JFCBVOLS.\n      *             THE FIRST FIVE VOLUME SERIAL NUMBERS\n       10  JFCB-JFCBVOL1 PIC X(6).\n       10  JFCB-JFCBVOL2 PIC X(6).\n       10  JFCB-JFCBVOL3 PIC X(6).\n       10  JFCB-JFCBVOL4 PIC X(6).\n       10  JFCB-JFCBVOL5 PIC X(6).\n       05  FILLER  REDEFINES  JFCB-JFCBVOLS.\n       10  FILLER        PIC X(22).\n      *             FIRST 22 BYTES OF JFCBVOLS\n       10  JFCB-JFCMSVGP PIC X(8).\n      *             MASS STORAGE VOLUME GROUP FROM WHICH TO\n      *             SELECT A VOLUME\n       05  JFCB-JFCBEXTL PIC X(1).\n      *             LENGTH OF BLOCK OF EXTRA VOLUME SERIAL NUMBERS\n      *             (BEYOND FIVE)\n       05  JFCB-JFCBEXAD PIC X(3).\n      *             SYSTEM VIRTUAL ADDRESS (SVA) OF FIRST JFCB\n      *             EXTENSION BLOCK FOR VOLUME SERIAL NUMBERS OR\n      *             SVA OF JFCB EXTENSION BLOCK FOR 3800\n       05  JFCB-JFCBPQTY.\n      *             PRIMARY QUANTITY OF DIRECT ACCESS STORAGE\n      *             REQUIRED\n       10  JFCB-JFCRUNIT PIC X(3).\n      *             UNIT TYPE (EBCDIC) OF A DEVICE AT A REMOTE\n      *             TERMINAL. THE FIRST TWO CHARACTERS ARE RD\n      *             (READER), PR (PRINTER) OR PU (PUNCH).  THE\n      *             THIRD CHARACTER IS A NUMBER FROM 1 TO 9\n       05  JFCB-JFCBCTRI PIC X(01).\n      *             SPACE PARAMETERS\n      *             X'C0' BIT PATTERN FOR SPACE REQUESTS\n      *             X'00' ABSTR REQUEST\n      *             X'40' AVERAGE BLOCK LENGTH REQUEST\n      *             X'80' TRK REQUEST\n      *             X'C0' CYL REQUEST\n      *             X'20' REQUEST IS FOR A MASS STORAGE VOLUME GROUP\n      *             (MSVGP) VOLUME\n      *             X'10' RESERVED\n      *             X'08' CONTIG REQUEST\n      *             X'04' MXIG REQUEST\n      *             X'02' ALX REQUEST\n      *             X'01' ROUND REQUEST\n       05  JFCB-JFCBSQTY.\n      *             SECONDARY QUANTITY OF DIRECT ACCESS STORAGE\n      *             REQUIRED\n       10  JFCB-JFCRQID  PIC S9(4) COMP.\n      *             QUEUE IDENTIFICATION (QID) USED BY ACCESS\n      *             METHOD TO DETERMINE THE REMOTE TERMINAL\n      *             LOCATION FOR THIS JOB.\n       10  FILLER        PIC X(01).\n      *             LAST BYTE OF JFCBSQTY\n       05  JFCB-JFCFLGS1 PIC X(01).\n      *             FLAG BYTE (ICB488)\n      *             X'80' IF ONE, DELETE THE DATA SET USED WHEN\n      *             EXTENDING THE JOB QUEUE OR SPOOL DATA SETS\n      *             (OS/VS1)\n      *             X'40' TAPE DATA SET HAS BEEN OPENED\n      *             X'20' AUTOMATIC DATA SET PROTECTION INDICATOR\n      *             X'10' RACF PROTECT REQUESTED (OS/VS2)\n      *             X'08' IF ONE, CHKPT=EOV SPECIFIED FOR THIS DATA SET\n      *             X'04' VIO DATA SET\n      *             X'02' DATA SET IS CHECKPOINT DATASET\n      *             X'01' UNIT AFFINITY SPECIFIED FOR THIS DATA SET\n       05  JFCB-JFCBDQTY PIC X(3).\n      *             QUANTITY OF DIRECT ACCESS STORAGE REQUIRED FOR\n      *             A DIRECTORY OR AN EMBEDDED INDEX AREA\n       05  JFCB-JFCBSPNM.\n      *             MAIN STORAGE ADDRESS OF THE JFCB WITH WHICH\n      *             CYLINDERS ARE SPLIT (OS/VS1)\n       10  JFCB-JFCBFLG3 PIC X(01).\n      *             FLAG BYTE (OS/VS2)\n      *             X'80' REQUEST DEQUEUE OF TAPE VOLUME WHEN DEMOUNTED\n      *             X'40' EXPIRATION DATE SPECIFIED\n      *             X'20' LRECL=NNNNNK WAS SPECIFIED\n      *             X'10' JFCRBIDO CONTAINS THE PHYSICAL LOCATION\n      *             ON THE TAPE OF THE FIRST STANDARD-LABEL\n      *             HEADER RECORD TO BE PROCESSED BY OPEN\n       10  JFCB-JFCBRV08 PIC S9(4) COMP.\n      *             RESERVED (OS/VS2)\n       05  JFCB-JFCBABST PIC S9(4) COMP.\n      *             RELATIVE ADDRESS OF FIRST TRACK TO BE\n      *             ALLOCATED\n       05  JFCB-JFCBSBNM PIC X(3).\n      *             MAIN STORAGE ADDRESS OF THE JFCB FROM WHICH\n      *             SPACE IS TO BE SUBALLOCATED\n       05  JFCB-JFCBDRLH PIC X(3).\n      *             AVERAGE DATA BLOCK LENGTH\n       05  JFCB-JFCBVLCT PIC X(1).\n      *             VOLUME COUNT\n       05  JFCB-JFCBSPTN PIC X(1).\n      *             NUMBER OF TRACKS PER CYLINDER TO BE USED BY\n      *             THIS DATA SET WHEN SPLIT CYLINDER IS INDICATED\n      *\n      *        176 - LENGTH OF JFCB\n      *\n      *    END OF JFCB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@PDS": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00\\xcb\\x00\\xcb\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 203, "newlines": 203, "modlines": 0, "user": "SCHUFF"}, "text": "      *PDS*************************************************************\n      *                                                               *\n      *    PDS = PARTITIONED DATASET DIRECTORY ENTRY                  *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 PDS-PDS.\n       05  PDS-PDS2NAME  PIC X(8).\n      *             LOAD MODULE MEMBER NAME OR ALIAS\n       05  PDS-PDS2TTRP  PIC X(3).\n      *             TTR OF FIRST BLOCK OF NAMED MEMBER\n       05  PDS-PDS2CNCT  PIC X(1).\n      *             CONCATENATION NUMBER OF THE DATA SET\n       05  PDS-PDS2LIBF  PIC X(01).\n      *             LIBRARY FLAG FIELD\n      *             X'00' - NORMAL CASE\n      *             X'01' - IF DCB OPERAND IN BLDL MACRO INTRUCTION\n      *             WAS SPECIFIED AS ZERO, NAME WAS FOUND IN\n      *             LINK LIBRARY\n      *             X'02' - IF DCB OPERAND IN BLDL MACRO INTRUCTION\n      *             WAS SPECIFIED AS ZERO, NAME WAS FOUND IN\n      *             JOB LIBRARY\n       05  PDS-PDS2INDC  PIC X(01).\n      *             INDICATOR BYTE\n      *             BIT0 - NAME IN THE FIRST FIELD IS AN ALIAS\n      *             BIT1+BIT2 - NUMBER OF TTR'S IN THE USER DATA FIELD\n      *             BIT3+BIT4+BIT5+BIT6+BIT7 - LENGTH OF USER DATA FIELD\n      *             IN HALF WORDS\n      *05  PDS-PDS2USRD.\n      *             START OF VARIABLE LENGTH USER DATA FIELD\n       05  PDS-PDS2TTRT  PIC X(3).\n      *             TTR OF FIRST BLOCK OF TEXT\n       05  PDS-PDS2ZERO  PIC X(01).\n      *             ZERO\n       05  PDS-PDS2TTRN  PIC X(3).\n      *             TTR OF NOTE LIST OR SCATTER/TRANSLATION\n      *             TABLE. USED FOR MODULES IN SCATTER LOAD\n      *             FORMAT OR OVERLAY STRUCTURE ONLY.\n       05  PDS-PDS2NL    PIC X(1).\n      *             NUMBER OF ENTRIES IN NOTE LIST FOR\n      *             MODULES IN OVERLAY STRUCTURE\n       05  PDS-PDS2ATR.\n      *             TWO-BYTE MODULE ATTRIBUTE FIELD\n       10  PDS-PDS2ATR1  PIC X(01).\n      *             FIRST BYTE OF MODULE ATTRIBUTE FIELD\n      *             BIT0 - REENTERABLE\n      *             BIT1 - REUSABLE\n      *             BIT2 - IN OVERLAY STRUCTURE\n      *             BIT3 - MODULE TO BE TESTED - TESTRAN\n      *             BIT4 - ONLY LOADABLE\n      *             BIT5 - SCATTER FORMAT\n      *             BIT6 - EXECUTABLE\n      *             BIT7 - IF ZERO, MODULE CONTAINS MULTIPLE RECORDS\n      *             WITH AT LEAST ONE BLOCK OF TEXT.  ---\n      *             IF ONE, MODULE CONTAINS NO RLD ITEMS AND\n      *             ONLY ONE BLOCK OF TEXT.\n       10  PDS-PDS2ATR2  PIC X(01).\n      *             SECOND BYTE OF MODULE ATTRIBUTE FIELD\n      *             BIT0 - IF ZERO, MODULE CAN BE PROCESSED BY ALL\n      *             LEVELS OF LINKAGE EDITOR.  ---\n      *             IF ONE, MODULE CAN BE PROCESSED ONLY BY\n      *             F LEVEL OF LINKAGE EDITOR.\n      *             BIT1 - LINKAGE EDITOR ASSIGNED ORIGIN OF FIRST\n      *             BLOCK OF TEXT IS ZERO.\n      *             BIT2 - ENTRY POINT ASSIGNED BY LINKAGE EDITOR\n      *             IS ZERO\n      *             BIT3 - MODULE CONTAINS NO RLD ITEMS\n      *             BIT4 - MODULE CANNOT BE REPROCESSED BY LINKAGE\n      *             EDITOR\n      *             BIT5 - MODULE CONTAINS TESTRAN SYMBOL CARDS\n      *             BIT6 - MODULE CREATED BY LINKAGE EDITOR F\n      *             BIT7 - REFRESHABLE MODULE\n       05  PDS-PDS2STOR  PIC X(3).\n      *             TOTAL CONTIGUOUS MAIN STORAGE REQUIREMENT\n      *             OF MODULE\n       05  PDS-PDS2FTBL  PIC X(2).\n      *             LENGTH OF FIRST BLOCK OF TEXT\n       05  PDS-PDS2EPA   PIC X(3).\n      *             ENTRY POINT ADDRESS ASSOCIATED WITH\n      *             MEMBER NAME OR WITH ALIAS NAME IF ALIAS\n      *             INDICATOR IS ONE\n       05  FILLER.\n      *             LINKAGE EDITOR ASSIGNED ORIGIN OF FIRST\n      *             BLOCK OF TEXT (OS USE OF FIELD)\n      *05  PDS-PDS2FTBO  .\n      *             FLAG BYTES (AOS USE OF FIELD)\n       10  PDS-PDS2FTB1  PIC X(01).\n      *             BYTE 1 OF PDS2FTBO\n      *             BIT0 - MODULE HAS BEEN PROCESSED BY AOS LINKAGE\n      *             EDITOR\n      *             BIT1 IS RESERVED TO INDICATE ANOTHER EXPANSION WHEN\n      *             IT BECOMES NECESSARY\n      *             BIT2 - PAGE ALIGNMENT REQUIRED FOR LOAD\n      *             MODULE\n      *             BIT3 - SSI INFORMATION PRESENT\n      *             BIT4 - INFORMATION IN PDSAPF IS VALID\n       10  PDS-PDS2FTB2  PIC X(01).\n      *             BYTE 2 OF PDS2FTBO\n      *             BIT3 LOAD MODULE RESIDENCE MODE\n      *             BIT4+BIT5 ALIAS ENTRY POINT ADDRESSING MODE\n      *             BIT6+BIT7 MAIN ENTRY POINT ADDRESSING MODE\n      *10  PDS-PDS2RLDS.\n      *             NUMBER OF RLD/CONTROL RECORDS WHICH\n      *             FOLLOW THE FIRST BLOCK OF TEXT\n       10  PDS-PDS2FTB3  PIC X(01).\n      *             NOW USED BY LINKAGE EDITOR\n      *\n      *    END OF BASIC SECTION\n      *\n      *    THE FOLLOWING SECTION IS FOR LOAD MODULES\n      *    WITH SCATTER LOAD\n      *\n       01 PDS-SCATTER.\n       05  PDS-PDS2SLSZ  PIC X(2).\n      *             NUMBER OF BYTES IN SCATTER LIST\n       05  PDS-PDS2TTSZ  PIC X(2).\n      *             NUMBER OF BYTES IN TRANSLATION TABLE\n       05  PDS-PDS2ESDT  PIC X(2).\n      *             IDENTIFICATION OF ESD ITEM (ESDID) OF\n      *             CONTROL SECTION TO WHICH FIRST BLOCK OF\n      *             TEXT BELONGS\n       05  PDS-PDS2ESDC  PIC X(2).\n      *             IDENTIFICATION OF ESD ITEM (ESDID) OF\n      *             CONTROL SECTION CONTAINING ENTRY POINT\n      *\n      *      END OF SCATTER LOAD SECTION\n      *\n      *      THE FOLLOWING SECTION IS FOR LOAD MODULES WITH ALIAS NAMES\n      *\n       01 PDS-ALIAS.\n       05  PDS-PDS2EPM   PIC X(3).\n      *             ENTRY POINT FOR MEMBER NAME\n       05  PDS-PDS2MNM   PIC X(8).\n      *             CL8 - MEMBER NAME OF LOAD MODULE. WHEN THE\n      *             FIRST FIELD (PDS2NAME) IS AN ALIAS NAME,\n      *             THIS FIELD CONTAINS THE ORIGINAL NAME OF\n      *             THE MEMBER EVEN AFTER THE MEMBER HAS\n      *             BEEN RENAMED.\n      *\n      *      END OF ALIAS SECTION\n      *\n      *      THE FOLLOWING SECTION IS FOR SSI INFORMATION AND IS ON\n      *      A HALF-WORD BOUNDARY\n      *\n       01 PDS-SSI.\n      *05  PDS-PDSS03.\n      *             FORCE HALF-WORD ALIGNMENT FOR SSI\n      *             SECTION\n       05  PDS-PDSSSIWD.\n      *             SSI INFORMATION WORD\n       10  PDS-PDSCHLVL  PIC X(1).\n      *             CHANGE LEVEL OF MEMBER\n       10  PDS-PDSSSIFB  PIC X(01).\n      *             SSI FLAG BYTE\n      *             BIT1 - A FORCE CONTROL CARD WAS USED WHEN\n      *             EXECUTING THE IHGUAP PROGRAM\n      *             BIT2 - A CHANGE WAS MADE TO MEMBER BY THE\n      *             INSTALLATION, AS OPPOSED TO AN\n      *             IBM-DISTRIBUTED CHANGE\n      *             BIT3 - SET WHEN AN EMERGENCY IBM-AUTHORIZED\n      *             PROGRAM 'FIX' IS MADE, AS OPPOSED TO\n      *             CHANGES THAT ARE INCLUDED IN AN\n      *             IBM-DISTRIBUTED MAINTENANCE PACKAGE\n      *             BIT4 - A CHANGE MADE TO THE MEMBER IS DEPENDENT\n      *             UPON A CHANGE MADE TO SOME OTHER MEMBER\n      *             IN THE SYSTEM\n      *             BIT5+BIT6 - FLAGS THAT INDICATE WHETHER OR NOT A\n      *             CHANGE TO THE MEMBER WILL NECESSITATE A\n      *             PARTIAL OR COMPLETE REGENERATION OF THE\n      *             SYSTEM\n      *             X'00' - NOT CRITICAL FOR SYSTEM GENERATION\n      *             BIT6 - MAY REQUIRE COMPLETE REGENERATION\n      *             BIT5 - MAY REQUIRE PARTIAL REGENERATION\n      *             BIT7 - MEMBER IS SUPPLIED BY IBM\n       10  PDS-PDSMBRSN  PIC X(2).\n      *             MEMBER SERIAL NUMBER\n      *\n      *     END OF SSI SECTION\n      *\n      *     THE FOLLOWING SECTION IS FOR APF INFORMATION\n      *\n       01 PDS-APF.\n       05  PDS-PDSAPF.\n      *             PROGRAM AUTHORIZATION FACILITY (APF)\n      *             FIELD\n       10  PDS-PDSAPFCT  PIC X(1).\n      *             LENGTH OF PROGRAM AUTHORIZATION CODE\n      *             (PDSAPFAC) IN BYTES\n       10  PDS-PDSAPFAC  PIC X(01).\n      *             PROGRAM AUTHORIZATION CODE\n      *\n      *     END OF APF SECTION\n      *\n      *    END OF PDS\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@RB": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00\\x95\\x00\\x95\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 149, "newlines": 149, "modlines": 0, "user": "SCHUFF"}, "text": "      *RB**************************************************************\n      *                                                               *\n      *      RB = OS/VS REQUEST BLOCKS                                *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n      *\n       01 RB-RBPRFX.\n      *             RBSECPTR-64\n       05  FILLER        PIC X(64).\n      *             PREFIX IS SYSTEM DEPENDENT\n      *05  RB-RBBASIC.\n      *             START OF BASIC SECTION OF RB\n       05  RB-RBEXRTNM.\n      *             EIGHT-CHARACTER NAME OF ERROR EXIT\n      *             ROUTINE (SIRB)\n       10  RB-RBTMFLD    PIC X(01).\n      *             INDICATORS FOR TIMER ROUTINES.  WHEN\n      *             THERE ARE NO TIMER ROUTINES, THIS FIELD\n      *             IS ZERO. (IRB)\n      *             X'80' - TIMER ELEMENT NOT ON QUEUE\n      *             X'40' - LOCAL TIME-OF-DAY OPTION IS USED\n      *             X'10' - WAIT LIMIT EXCEEDED\n      *             X'08' - INTERVAL HAS EXPIRED\n      *             X'04' - EXIT SPECIFIED WITH TASK OR REAL REQUEST\n      *             X'00' - TASK REQUEST\n      *             X'01' - WAIT REQUEST\n      *             X'03' - REAL REQUEST\n       10  FILLER        PIC X(7).\n      *             LAST 7 BYTES OF RBEXRTNM\n       05  FILLER        PIC S9(4) COMP.\n      *             SYSTEM-DEPENDENT FIELD\n       05  RB-RBSTAB.\n      *             STATUS AND ATTRIBUTE BITS  (ALL RB'S)\n      *05  RB-XSTAB.\n      *             SAME AS RBSTAB\n      *10  RB-RBSTAB1.\n      *             FIRST BYTE OF STATUS AND ATTRIBUTE BITS\n       10  RB-XSTAB1     PIC X(01).\n      *             SAME AS RBSTAB1\n      *             BITS 0-4 ARE SYSTEM-DEPENDENT BITS\n      *             X'04' - A CHECKPOINT MAY BE TAKEN IN A USER EXIT\n      *             FROM THIS SVC ROUTINE (SVRB-BOTH)\n      *             BITS 6-7 ARE SYSTEM-DEPENDENT BITS\n      *10  RB-RBSTAB2.\n      *             SECOND BYTE OF STATUS AND ATTRIBUTE BITS\n       10  RB-XSTAB2     PIC X(01).\n      *             SAME AS RBSTAB2\n      *             X'80' - RBLINK FIELD POINTS TO TCB (ALL RB'S)\n      *             X'40' - IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS\n      *             ACTIVE\n      *             X'40' - ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND\n      *             LRB FOR OS/VS1)\n      *             BITS 2-5 ARE SYSTEM-DEPENDENT BITS\n      *             X'02' - RB STORAGE CAN BE FREED AT EXIT\n      *             X'01' - IF ZERO, WAIT FOR A SINGLE EVENT OR ALL\n      *             OF A NUMBER OF EVENTS ---\n      *             IF ONE, WAIT FOR A NUMBER OF EVENTS THAT\n      *             IS LESS THAN THE TOTAL NUMBER OF EVENTS\n      *             WAITING\n       05  FILLER        PIC S9(9) COMP.\n      *             SYSTEM-DEPENDENT FIELD\n       05  RB-RBOPSW.\n      *             USER'S OLD PSW.  THIS OFFSET FIXED BY\n      *             ARCHITECTURE. (ALL RB'S EXCEPT FRB)\n       10  RB-RBOPSWB1   PIC X(01).\n      *             OLD PSW BYTE 1\n      *             X'40' - PER BIT IN RBOPSWB1\n       10  RB-RBOPSWB2   PIC X(01).\n      *             OLD PSW BYTE 2\n      *             X'01' - PROBLEM STATE BIT IN OLD PSW\n       10  FILLER        PIC X(2).\n      *             OLD PSW BYTES 3-4\n       10  RB-RBOPSWA    PIC S9(9) COMP.\n      *             OLD PSW BYTES 5-8 (ADDRESS)\n      *             X'80' - ADDRESSING MODE OF OLD PSW\n       05  FILLER        PIC S9(9) COMP.\n      *             SYSTEM-DEPENDENT FIELD\n       05  RB-RBLINK.\n      *             SAME AS RBLINKB BELOW.  THIS OFFSET FIXED\n      *             BY ARCHITECTURE.\n      *05  RB-XRBLNK.\n      *             SAME AS RBLINKB BELOW\n       10  RB-RBWCF      PIC X(1).\n      *             NUMBER OF REQUESTS WAITING (WAIT COUNT)\n      *             (ALL RB'S FOR OS/VS2)\n      *             (ALL RB'S EXCEPT LPRB AND\n      *             LRB FOR OS/VS1)\n       10  RB-RBLINKB    PIC X(3).\n      *             ADDRESS OF PREVIOUS RB, OR ADDRESS OF TCB\n      *             WHEN THIS IS FIRST RB ON THE QUEUE\n      *             (ALL RB'S FOR OS/VS2)\n      *             (ALL RB'S EXCEPT LPRB AND\n      *             LRB FOR OS/VS1)\n       05  RB-RBGRSAVE.\n      *             GENERAL REGISTER SAVE AREA. THIS OFFSET\n      *             FIXED BY ARCHITECTURE.  (SVRB-BOTH, IRB,\n      *             TIRB FOR OS/VS2)\n      *             (IRB, SIRB, SVRB FOR OS/VS1)\n       10  RB-RBGRS0 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 0\n       10  RB-RBGRS1 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 1\n       10  RB-RBGRS2 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 2\n       10  RB-RBGRS3 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 3\n       10  RB-RBGRS4 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 4\n       10  RB-RBGRS5 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 5\n       10  RB-RBGRS6 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 6\n       10  RB-RBGRS7 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 7\n       10  RB-RBGRS8 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 8\n       10  RB-RBGRS9 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 9\n       10  RB-RBGRS10 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 10\n       10  RB-RBGRS11 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 11\n       10  RB-RBGRS12 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 12\n       10  RB-RBGRS13 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 13\n       10  RB-RBGRS14 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 14\n       10  RB-RBGRS15 PIC X(4).\n      *             SAVE AREA FOR GENERAL REGISTER 15\n       05  RB-RBEXSAVE.\n      *             EXTENDED SAVE AREA FOR SVC ROUTINES\n      *             (SVRB-BOTH) (OS/VS2)\n       10  RB-XRBESA     PIC X(80).\n      *             SVRB - EXTENDED SAVE AREA OF UP TO TEN\n      *             DOUBLEWORDS REQUESTED FOR SVC ROUTINE\n      *             (OS/VS1)\n      *\n      *    END OF RB(S)\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@TCB": {"ttr": 2571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x03E\\x03E\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 837, "newlines": 837, "modlines": 0, "user": "SCHUFF"}, "text": "      *TCB*************************************************************\n      *                                                               *\n      *      TCB = TASK CONTROL BLOCK                                 *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 TCB-TCBFIX.\n      *             TCB PREFIX (32 BYTES)\n      *\n       05 TCB-TCBFRS.\n       10  TCB-TCBFRS0   PIC X(8).\n      *          SAVE AREA FOR FLOATING POINT REGISTER 0\n       10  TCB-TCBFRS2   PIC X(8).\n      *          SAVE AREA FOR FLOATING POINT REGISTER 2\n       10  TCB-TCBFRS4   PIC X(8).\n      *          SAVE AREA FOR FLOATING POINT REGISTER 4\n       10  TCB-TCBFRS6   PIC X(8).\n      *          SAVE AREA FOR FLOATING POINT REGISTER 6\n      *\n      *     TCB PROPER\n      *\n       05  TCB-TCB.\n       10  TCB-TCBRBP    PIC S9(9) COMP.\n      *          ADDRESS OF THE RB FOR EXECUTING PROGRAM. THIS\n      *          OFFSET FIXED BY ARCHITECTURE.\n       10  TCB-TCBPIE.\n      *          ADDRESS OF SPIE CONTROL AREA. THE FIRST WORD OF\n      *          THIS AREA CONTAINS THE PROGRAM INTERRUPT ELEMENT\n      *          (PIE) ADDRESS.\n       15  TCB-TCBPMASK  PIC X(01).\n      *          SPIE BITS\n      *          X'0F' - PROGRAM MASK AT TIME OF SPIE INITIATION. MASK\n      *          RESTORED AT TIME OF SPIE NULLIFICATION.\n       15  TCB-TCBPIEA   PIC X(3).\n      *          ADDRESS OF SPIE CONTROL AREA. THE FIRST WORD OF\n      *          THIS AREA CONTAINS THE PROGRAM INTERRUPT ELEMENT\n      *          (PIE) ADDRESS.\n       10  TCB-TCBDEB    PIC S9(9) COMP.\n      *          ADDRESS OF THE DEB QUEUE\n       10  TCB-TCBTIO    PIC S9(9) COMP.\n      *          ADDRESS OF THE TASK I/O TABLE (TIOT)\n       10  TCB-TCBCMP.\n      *          TASK COMPLETION CODE AND INDICATORS\n       15  TCB-TCBCMPF   PIC X(01).\n      *          INDICATOR FLAGS\n      *          X'80' - A DUMP HAS BEEN REQUESTED\n      *          X'40' - A STEP ABEND HAS BEEN REQUESTED\n      *          X'20' - SOME PROBLEM PROGRAM STORAGE WAS OVERLAID BY\n      *          THE SECOND LOAD OF ABEND.  A FIRST LOAD OVERLAY IS\n      *          INDICATED IN TCBFLGS FIELD (OFFSET 29 DECIMAL).\n      *          (OS/VS1)\n      *          X'20' - DUMP OPTIONS WERE PROVIDED ON CALLRTM OR SETRP\n      *          MACRO (OS/VS2)\n      *          X'10' - COMPLETION CODE IS NOT TO BE STORED IN TCBCMPC\n      *          (OFFSET 17 DECIMAL) IF AN ABEND IS ENCOUNTERED.\n      *          THIS IS TO PREVENT AN OVERLAY OF THE ORIGINAL\n      *          COMPLETION CODE. (OS/VS1)\n      *          X'10' - A COMPLETION CODE WAS NOT PROVIDED ON CALLRTM\n      *          MACRO. A DEFAULT CODE IS BEING USED.\n      *          (OS/VS2)\n      *          X'08' - A DOUBLE ABEND HAS OCCURRED (OS/VS1)\n      *          X'08' - ABEND WAS SCHEDULED VIA CROSS MEMORY ABTERM\n      *          (OS/VS2)\n      *          X'04' - A DUMP MESSAGE (WTO) IS TO BE ISSUED TO THE\n      *          OPERATOR (OS/VS1)\n      *          X'04' - INDICATES REASON CODE (TCBARC) IS VALID(OS/VS2)\n      *          X'02' - ABEND TO OUTPUT AN INDICATIVE DUMP (OS/VS1)\n      *          X'01' - AN ABEND MESSAGE IS PROVIDED TO BE PRINTED BY\n      *          ABDUMP (OS/VS1)\n       14  TCB-TCBCMPC   PIC X(3).\n      *          SYSTEM COMPLETION CODE IN FIRST 12 BITS,\n      *          USER COMPLETION CODE IN LAST 12 BITS\n       10  TCB-TCBTRN.\n      *          ADDRESS OF TESTRAN CONTROL CORE TABLE\n       15  TCB-TCBABF    PIC X(01).\n      *          FLAG BYTE\n      *          X'80' - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91\n      *          X'40' - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP\n      *          (JOB STEP TCB)\n      *          X'20' - GAM/SP ACTIVE FOR THIS TASK\n      *          X'08' - TCAM POST-PENDING (RORI)\n      *          X'04' - TEST TASK - USED BY TEST SVC\n      *          X'02' - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL\n      *          TERMINATION CAN BE INVOKED\n       15  TCB-TCBTRNB   PIC X(3).\n      *          ADDRESS OF TESTRAN CONTROL CORE TABLE\n       10  TCB-TCBMSS.\n      *          FOR JOB STEP TCB, ADDRESS OF THE BOUNDARY BOX.\n      *          FOR SUBTASK TCB, ADDRESS OF THE GOTTEN SUBTASK\n      *          AREA QUEUE ELEMENT (GQE).  A GQE IS PRESENT\n      *          ONLY IF THE SYSTEM HAS ISSUED A GETMAIN MACRO\n      *          INSTRUCTION FOR THE SPACE.  (OS/VS1)\n      *          ADDRESS OF LAST SPQE ON MSS QUEUE (OS/VS2)\n       15  FILLER        PIC X(01).\n      *          HIGH ORDER BYTE OF TCBMSS\n       15  TCB-TCBMSSB   PIC X(3).\n      *          FOR JOB STEP TCB, ADDRESS OF THE BOUNDARY BOX.\n      *          FOR SUBTASK TCB, ADDRESS OF THE GOTTEN SUBTASK\n      *          AREA QUEUE ELEMENT (GQE).  A GQE IS PRESENT\n      *          ONLY IF THE SYSTEM HAS ISSUED A GETMAIN MACRO\n      *          INSTRUCTION FOR THE SPACE.  (OS/VS1)\n      *          ADDRESS OF LAST SPQE ON MSS QUEUE (OS/VS2)\n       10  TCB-TCBPKF    PIC X(01).\n      *          STORAGE PROTECTION KEY FOR THIS TASK. IF THERE\n      *          IS NO STORAGE PROTECTION, ALL BITS ARE ZERO.\n      *          X'F0' - STORAGE PROTECTION KEY\n      *          X'0F' - MUST BE ZERO\n       10 TCB-TCBFLGS.\n       15  TCB-TCBFLGS1  PIC X(01).\n      *          FIRST TCB FLAG BYTE\n      *          X'80' - ABNORMAL TERMINATION IN PROGRESS\n      *          X'40' - NORMAL TERMINATION IN PROGRESS\n      *          X'20' - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN\n      *          (OS/VS2)\n      *          X'10' - TASK IS NON-PREEMPTABLE (OS/VS2)\n      *          X'08' - PREVENT DUMP INDICATOR (OS/VS2)\n      *          X'04' - TOP TASK IN TREE BEING ABTERMED (OS/VS2)\n      *          X'02' - ABTERM DUMP COMPLETED (OS/VS2)\n      *          PROBLEM PROGRAM STORAGE HAS BEEN OVERLAID TO\n      *          PROCESS ABEND (OS/VS1)\n      *          X'01' - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR\n      *          THIS TASK\n       15  TCB-TCBFLGS2  PIC X(1).\n      *          X'80' - THE TASK IS ABENDING AND IS IN THE PROCESS OF\n      *          (1) OPEN FOR DUMP DATA SET PROCESSING,\n      *          (2) CLOSE FOR USER DATA SET OR\n      *          (3) PURGE FOR ENQ'ED RESOURCES.  THIS BIT IS\n      *          USED IN CONJUNCTION WITH TCBSTACK.\n      *          (OS/VS2)\n      *          X'40' - SECOND JOB STEP INTERVAL HAS EXPIRED\n      *          (OS/VS2 INITIATOR TCB)\n      *          X'20' - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENE\n      *          FOR ABEND. IF 0, THE SYSUDUMP DUMP DATA SET WAS\n      *          OPENED. THIS BIT IS ONLY USED FOR THE JOB STEP\n      *          TCB AND IS USED IN CONJUNCTION WITH TCBFDSOP BIT.\n      *          X'10' - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET\n      *          ALL OTHER TASKS IN THE SYSTEM NONDISPATCHABLE\n      *          X'08' - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED\n      *          OFF ALL OTHER TASKS IN THE STEP\n      *          X'04' - SYSABEND OPEN FOR JOB STEP (OS/VS2)\n      *          X'02' - ETXR TO BE SCHEDULED\n      *          X'01' - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP\n       15  TCB-TCBFLGS3  PIC X(1).\n      *          X'80' - ALL PSW'S IN SUPERVISOR STATE (OS/VS2)\n      *          X'40' - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.\n      *          RTM2 MAY BYPASS SLIP PROCESSING\n      *          X'20' - ABTERM BIT TO PREVENT MULTIPLE ABENDS (OS/VS2)\n      *          X'10' - TCBFX WAS SET BY STATUS MCSTEP\n      *          X'02' - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED\n      *          CONTROL. NO FURTHER DIRECTED ENQS ALLOWED.\n      *          X'01' - THIS TASK WAS DETACHED WITH STAE=YES OPTION\n      *          (OS/VS2)\n       15  TCB-TCBFLGS4  PIC X(1).\n      *          RESERVED BYTE (OS/VS1)\n      *          X'80' - ABDUMP NONDISPATCHABILITY INDICATOR\n      *          X'40' - SER1 NONDISPATCHABILITY INDICATOR\n      *          X'20' - I/O RQE'S EXHAUSTED\n      *          X'10' - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL\n      *          THE REQUIRED RESOURCES ARE AVAILABLE.  THE BIT\n      *          IS SET THROUGH THE USE OF THE 'STATUS' SVC\n      *          X'08' - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE\n      *          SMF TIME LIMIT OR SYSOUT LIMIT USER EXIT\n      *          ROUTINE IS BEING EXECUTED FOR THIS STEP\n      *          X'04' - TOP RB IS IN WAIT STATE\n      *          X'01' - TASK TERMINATING AND NONDISPATCHABLE BECAUSE\n      *          EITHER OPEN FOR DUMP DATA SET IS IN PROCESS OR\n      *          CLOSE BY ABEND IS IN PROCESS\n       15  TCB-TCBFLGS5  PIC X(1).\n      *          X'80' - TASK TERMINATED (OS/VS2)\n      *          X'40' - ABNORMAL WAIT (OS/VS2)\n      *          X'40' - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE\n      *          SMF TIME LIMIT OR SYSOUT LIMIT USER EXIT ROUTINE\n      *          IS BEING EXECUTED FOR THIS STEP.  THIS BIT IS\n      *          SET TO 1 IN ALL TCB'S EXCEPT JOB STEP TCB.\n      *          (OS/VS1)\n      *          X'20' - TASK IS NONDISPATCHABLE DUE TO EXCESSIVE PAGING\n      *          RATE\n      *          X'10' - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE IT\n      *          WAS ATTACHED UNDER THE DISP=NO OPERAND\n      *          X'08' - ANOTHER TASK IS IN SYSTEM-MUST-COMPLETE STATUS\n      *          OR A SUMMARY BIT FOR FIELD TCBSYSCT\n      *          X'04' - ANOTHER TASK IN THIS JOB STEP IS IN\n      *          STEP-MUST-COMPLETE STATUS\n      *          X'02' - INITIATOR WAITING FOR REGION (OS/VS2)\n      *          X'01' - PRIMARY NONDISPATCHABILITY BIT. THIS BIT IS\n      *          SET TO 1 IF ANY OF THE SECONDARY\n      *          NONDISPATCHABILITY BITS (OFFSETS 173, 174, 175,\n      *          200 OR 201 DECIMAL) IS SET TO 1.  THIS BIT IS\n      *          SET TO 0 IF A SECONDARY NONDISPATCHABILITY BIT\n      *          IS SET TO 0 AND ALL OTHER SECONDARY\n      *          NONDISPATCHABILITY BITS ARE 0.\n       10  TCB-TCBLMP    PIC X(1).\n      *          TASK LIMIT PRIORITY (OS/VS2)\n      *          NUMBER OF RESOURCES FOR WHICH THIS TASK IS\n      *          ENQUEUED (OS/VS1)\n       10  TCB-TCBDSP    PIC X(1).\n      *          DISPATCHING PRIORITY FOR THIS TASK\n       10  TCB-TCBLLS    PIC S9(9) COMP.\n      *          ADDRESS OF LAST LOAD LIST ELEMENT (LLE) IN LOAD\n      *          LIST (OS/VS2)\n      *          ADDRESS OF THE PREFIX OF THE MOST RECENTLY ADDED\n      *          REQUEST BLOCK (RB-8) ON THE LIST OF PROGRAMS\n      *          LOADED VIA THE LOAD MACRO INSTRUCTION (OS/VS1)\n       10  TCB-TCBJLB    PIC S9(9) COMP.\n      *          ADDRESS OF A JOBLIB DCB\n       10  TCB-TCBJPQ.\n      *          ADDRESS OF LAST CDE FOR JOB PACK AREA (JPA)\n      *          CONTROL QUEUE (OS/VS2)\n       15  TCB-TCBPURGE  PIC X(01).\n      *          HIGH ORDER BYTE\n      *          X'80' - JPQ PURGE FLAG\n       15  TCB-TCBJPQB   PIC X(3).\n      *          LOW ORDER 24-BITS OF TCBJPQ\n       10 TCB-TCBGRS.\n       15  TCB-TCBGRS0   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 0\n       15  TCB-TCBGRS1   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 1\n       15  TCB-TCBGRS2   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 2\n       15  TCB-TCBGRS3   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 3\n       15  TCB-TCBGRS4   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 4\n       15  TCB-TCBGRS5   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 5\n       15  TCB-TCBGRS6   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 6\n       15  TCB-TCBGRS7   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 7\n       15  TCB-TCBGRS8   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 8\n       15  TCB-TCBGRS9   PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 9\n       15  TCB-TCBGRS10  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 10\n       15  TCB-TCBGRS11  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 11\n       15  TCB-TCBGRS12  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 12\n       15  TCB-TCBGRS13  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 13\n       15  TCB-TCBGRS14  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 14\n       15  TCB-TCBGRS15  PIC S9(9) COMP.\n      *          SAVE AREA FOR GENERAL REGISTER 15\n       10  TCB-TCBFSA.\n      *          ADDRESS OF THE FIRST PROBLEM PROGRAM SAVE AREA\n       15  FILLER        PIC X(1).\n      *          FIRST BYTE OF TCBFSA (OS/VS2)\n       15  TCB-TCBFSAB   PIC X(3).\n      *          ADDRESS OF THE FIRST PROBLEM PROGRAM SAVE AREA\n       10  TCB-TCBTCB    PIC S9(9) COMP.\n      *          ADDRESS OF NEXT TCB OF LOWER PRIORITY ON THE\n      *          READY QUEUE\n       10  TCB-TCBTME    PIC S9(9) COMP.\n      *          ADDRESS OF THE TIMER QUEUE ELEMENT (TQE)\n      *          X'80' - IF ZERO, TASK TYPE TQE.\n      *          IF ONE, REAL/WAIT TYPE TQE.\n       10  TCB-TCBJSTCB.\n      *          ADDRESS OF FIRST JOB STEP TCB\n      *          OR OF THIS TCB IF KEY ZERO  (OS/VS2)\n       15  FILLER        PIC X(01).\n      *          HIGH ORDER BYTE OF TCBJSTCB\n       15  TCB-TCBJSTCA  PIC X(3).\n      *          LOW ORDER 24 BITS OF TCBJSTCB\n       10  TCB-TCBNTC    PIC S9(9) COMP.\n      *          ADDRESS OF THE TCB FOR THE TASK PREVIOUSLY\n      *          ATTACHED BY THE TASK THAT ATTACHED THIS TASK.\n      *          FOR EXAMPLE, IF TASK A ATTACHED TASK B AND THEN\n      *          TASK C, THIS FIELD IN TASK C'S TCB POINTS TO\n      *          TASK B'S TCB, AND THIS FIELD IN TASK B'S TCB\n      *          IS ZERO.\n       10  TCB-TCBOTC    PIC S9(9) COMP.\n      *          ADDRESS OF THE TCB FOR THE TASK (THE ORIGINATING\n      *          TASK) THAT ATTACHED THIS TASK.  THIS FIELD IS\n      *          ZERO IN THE TCB FOR A SYSTEM TASK.\n       10  TCB-TCBLTC    PIC S9(9) COMP.\n      *          ADDRESS OF THE TCB FOR THE TASK LAST ATTACHED BY\n      *          THIS TASK. NOTE - IF A TASK (THE ORIGINATING\n      *          TASK) HAS ATTACHED OTHER TASKS, THE TCB'S FOR\n      *          THE OTHER TASKS ARE ON THE SUBTASK QUEUE OF THE\n      *          ORIGINATING TASK. TCBLTC IN THE TCB FOR THE\n      *          ORIGINATING TASK POINTS TO THE LAST TCB (THE\n      *          TCB FOR THE LAST ATTACHED TASK) IN THE SUBTASK\n      *          QUEUE. IN EACH TCB ON THE SUBTASK QUEUE,\n      *          EXCEPT THE FIRST TCB, TCBNTC POINTS TO THE\n      *          PRECEDING TCB ON THE QUEUE.\n       10  TCB-TCBIQE    PIC S9(9) COMP.\n      *          ADDRESS OF AN INTERRUPTION QUEUE ELEMENT (IQE)\n      *          FOR SCHEDULING THE ETXR ROUTINE OF THE TASK\n      *          THAT ATTACHED THIS TASK.\n       10  TCB-TCBECB    PIC S9(9) COMP.\n      *          ADDRESS OF THE ECB THAT WILL BE POSTED BY THE\n      *          SUPERVISOR'S TASK TERMINATION ROUTINES WHEN\n      *          NORMAL OR ABNORMAL TERMINATION OCCURS.\n       10  TCB-TCBTSFLG  PIC X(01).\n      *          TIME SHARING FLAGS\n      *          X'80' - SWAPPED TIME SHARING TASK (OS/VS1)\n      *          X'40' - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP\n      *          WHEN IT IS NO LONGER RUNNING A PRIVILEGED\n      *          PROGRAM\n      *          X'20' - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED\n      *          ON IT BY EXIT EFFECTOR.  THIS OFFSET FIXED BY\n      *          ARCHITECTURE.\n      *          X'10' - PURGE TGET/TPUT AFTER ATTENTION\n      *          X'02' - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING\n      *          GROUP\n      *          X'01' - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS\n      *          CPU BOUND\n       10  TCB-TCBSTPCT  PIC X(1).\n      *          NUMBER OF SETTASK STARTS WHICH MUST BE\n      *          ISSUED BEFORE TASK IS MADE DISPATCHABLE -\n      *          FIELD NOT RESTRICTED TO TSO\n       10  TCB-TCBTSLP   PIC X(1).\n      *          LIMIT PRIORITY OF TIME SHARING TASK\n       05  TCB-TCBTSDP   PIC X(01).\n      *          DISPATCHING PRIORITY OF TIME SHARING TASK\n       05  TCB-TCBRD     PIC S9(9) COMP.\n      *          POINTER TO DPQE MINUS 8 FOR THE JOB STEP\n      *          (OS/VS2).\n      *          TCBRD SAME AS TCBRD\n       05  TCB-TCBAE     PIC S9(9) COMP.\n      *          LIST ORIGIN OF AQE(S) FOR THIS TASK (OS/VS2).\n      *          TCBAE SAME AS TCBAE\n       05  TCB-TCBSTAB.\n      *          ADDRESS OF THE CURRENT STAE CONTROL BLOCK\n       10  TCB-TCBNSTAE  PIC X(01).\n      *          FLAGS INTERNAL TO STAE ROUTINE\n      *          X'80' - ABEND ENTERED BECAUSE OF ERROR IN STAE\n      *          PROCESSING\n      *          X'40' - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O\n      *          OPTION\n      *          X'20' - A 33E ABEND HAS OCCURRED FOR TASK (OS/VS2)\n      *          X'10' - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE\n      *          INDICATOR TO SYNCH OF THE MODE OF THE USER\n      *          EXIT (OS/VS2)\n      *          X'08' - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE\n      *          I/O, BUT I/O WAS HALTED\n      *          X'04' - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE\n      *          (OS/VS2)\n      *          X'01' - STAE RECURSION VALID (OS/VS2)\n       10  TCB-TCBSTABB  PIC X(3).\n      *          ADDRESS OF THE CURRENT STAE CONTROL BLOCK\n       05  TCB-TCBTCT.\n      *          ADDRESS OF THE TIMING CONTROL TABLE (TCT) IF\n      *          SYSTEM MANAGEMENT FACILITIES (SMF) DATA IS BEING\n      *          COLLECTED FOR THE TASK.  ZERO IF SMF DATA IS NOT\n      *          BEING COLLECTED FOR THE TASK OR FOR OS/VS1, IF\n      *          SMF IS NOT IN THE SYSTEM.\n       10  TCB-TCBTCTGF  PIC X(01).\n      *          FLAG BYTE FOR TIMING CONTROL TABLE\n      *          X'80' - IF ZERO, THE TCT CORE TABLE IS NOT TO BE\n      *          UPDATED BY GETMAIN/FREEMAIN.\n      *          IF ONE, THE TCT CORE TABLE IS TO BE UPDATED BY\n      *          GETMAIN/FREEMAIN.\n       10  TCB-TCBTCTB   PIC X(3).\n      *          ADDRESS OF THE TIMING CONTROL TABLE (TCT) IF\n      *          SYSTEM MANAGEMENT FACILITIES (SMF) DATA IS BEING\n      *          COLLECTED FOR THE TASK.  ZERO IF SMF DATA IS NOT\n      *          BEING COLLECTED FOR THE TASK OR FOR OS/VS1, IF\n      *          SMF IS NOT IN THE SYSTEM.\n       05  TCB-TCBUSER   PIC S9(9) COMP.\n      *          A WORD AVAILABLE TO THE USER\n       05  TCB-TCBSCNDY.\n      *          SECONDARY NONDISPATCHABILITY BITS. IF ANY BIT\n      *          IN THE FOLLOWING FOUR BYTES IS 1, THE PRIMARY\n      *          NONDISPATCHABILITY BIT (OFFSET 33.7 DECIMAL)\n      *          IS 1, AND THE TASK IS NONDISPATCHABLE.\n      *05  TCB-TCBNDSP.\n      *          SAME AS TCBSCNDY\n       10  TCB-TCBNDSP0  PIC X(01).\n      *          BYTE 0\n       10  TCB-TCBNDSP1  PIC X(01).\n      *          BYTE 1\n      *          X'80' - THE TASK IS TEMPORARILY NONDISPATCHABLE -\n      *          DAMAGE ASSESSMENT ROUTINE (DAR)\n      *          TCBDARTN * ALIAS *\n      *          X'40' - THE TASK IS PERMANENTLY NONDISPATCHABLE -\n      *          DAMAGE ASSESSMENT ROUTINE (DAR)\n      *          TCBDARPN * ALIAS *\n      *          X'20' - THE TASK IS TEMPORARILY NONDISPATCHABLE -\n      *          RECOVERY MANAGEMENT SUPPORT AND SYSTEM ERROR\n      *          RECOVERY (RMS/SER)\n      *          X'10' - THE TASK IS PERMANENTLY NONDISPATCHABLE -\n      *          RECOVERY MANAGEMENT SUPPORT AND SYSTEM ERROR\n      *          RECOVERY (RMS/SER)\n      *          (IF THIS BIT IS ON THEN THE PREVIOUS BIT\n      *          MUST BE ON TOO)\n      *          X'08' - THE TASK IS IN DEVICE ALLOCATION AND DYNAMIC\n      *          DEVICE RECONFIGURATION (DDR) HAS MADE IT\n      *          NONDISPATCHABLE -\n      *          RECOVERY MANAGEMENT SUPPORT AND SYSTEM ERROR\n      *          RECOVERY (RMS/SER) (OS/VS1)\n      *          X'04' - DISPATCHING OF TCAM TASK MUST BE DELAYED UNTIL\n      *          TCAM I/O APPENDAGE OR SVC ROUTINE HAS COMPLETED\n      *          EXECUTION (TCAM IN MULTIPROCESSING ENVIRONMENT)\n      *          X'02' - SRB IS TO BE SCHEDULED TO PERFORM PIE/PICA\n      *          PROCESSING (FIRST LEVEL INTERRUPT HANDLER)\n      *          X'01' - THE TASK IS TEMPORARILY NONDISPATCHABLE WHILE\n      *          BEING SET UP FOR ABTERM (OS/VS2)\n       10  TCB-TCBNDSP2  PIC X(01).\n      *          BYTE 2\n      *          X'80' - ABDUMP IS PROCESSING (OS/VS1)\n      *          X'40' - TASK SET NONDISPATCHABLE BY SETTASK\n      *          X'20' - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS\n      *          EXECUTING FOR ANOTHER TASK\n      *          X'10' - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING\n      *          SWAPPED OUT\n      *          X'08' - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT\n      *          X'04' - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT\n      *          X'02' - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS\n      *          TASK NONDISPATCHABLE\n      *          X'01' - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE\n      *          THE DCB FOR SYSABEND (OR SYSUDUMP) DATA SET WAS\n      *          BEING OPENED FOR ANOTHER TASK  (OS/VS1)\n       10  TCB-TCBNDSP3  PIC X(01).\n      *          BYTE 3\n      *          X'80' - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT\n      *          HAS A JOB STEP SUBTASK.  TCBONDSP MUST ALSO BE\n      *          ON. (OS/VS2)\n      *          X'20' - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED\n      *          (OS/VS2)\n      *          X'10' - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER\n      *          RB PSW PER BIT (OS/VS2)\n      *          X'08' - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE\n      *          ATTENTION INTERRUPT (OS/VS2)\n      *          X'04' - TSO AUTHORIZED REQUEST PROCESSING ACTIVE\n      *          X'02' - INDICATES TASK IS STOPPED BECAUSE ITS CPU\n      *          OR CONTINUOUS WAIT TIME HAS BEEN EXCEEDED.  SMF\n      *          DETERMINES WHETHER TO GRANT EXTENSION OR ABEND\n      *          TASK.\n      *          X'01' - INITIATOR SETS THIS BIT TO PREVENT JOB STEP\n      *          EXECUTION IN ORDER TO DO CANCEL PROCESSING\n      *          (CAN CANCEL LOOP)   (OS/VS2)\n       05  TCB-TCBMDIDS  PIC S9(9) COMP.\n      *          RESERVED FOR MODEL-DEPENDENT SUPPORT AND FOR\n      *          IBM PROPRIETARY PROGRAMMING SUPPORT\n       05  TCB-TCBJSCB.\n      *          ADDRESS OF THE JOB STEP CONTROL BLOCK\n       10  TCB-TCBRECDE  PIC X(01).\n      *          ABEND RECURSION BYTE\n      *          X'80' - VALID REENTRY TO ABEND IF NON-ZERO VALUE IN\n      *          FOLLOWING 7 BITS\n      *          X'01' - OPEN DUMP DATA SET\n      *          X'02' - CLOSE DIRECT SYSOUT ON TAPE\n      *          X'03' - CLOSE OPEN DATA SETS\n      *          X'04' - RESERVED.\n      *          X'05' - GRAPHICS\n      *          X'07' - ABDUMP\n      *          X'08' - PURGE TAXE\n      *          X'09' - MESSAGE RECURSION\n      *          X'0A' - DD-DYNAM TIOT CLEANUP\n      *          X'0B' - ABEND IS ISSUING A WTOR ASKING WHETHER THE JOB\n      *          STEP TASK SHOULD WAIT FOR THE DUMP AREA\n      *          (OS/VS1)\n      *          X'0C' - PURGE TSO INTERPARTITION POSTS\n      *          X'0D' - PURGE TCAM INTERPARTITION POSTS\n      *          X'0E' - INDICATIVE DUMP (LOAD 8 OF ABEND) HAS ABENDED.\n      *          ABEND WILL HANDLE THIS ABEND.  (OS/VS1)\n      *          X'0F' - ASIR RECURSION. SAVE OLD COMPLETION CODE\n      *          X'10' - TYPE 1 MESSAGE WRITE TO PROGRAMMER\n      *          X'20' - WRITE-TO-PROGRAMMER (WTP) FAILED. JOB STEP\n      *          TIMER EXPIRED DURING JOB STEP ABEND AND THE\n      *          STAE EXIT IS DENIED.  (OS/VS1)\n      *          X'21' - ABEND IS ENTERING FIRST VTAM INTERFACE,\n      *          ISTRAAA1, FOR TERMINATION OF TASK OR SUBTASK\n      *          (OS/VS1)\n      *          X'22' - ABEND IS ENTERING SECOND VTAM INTERFACE,\n      *          ISTRAAA2, BECAUSE ISTRAAA1 ABENDED  (OS/VS1)\n      *          X'23' - ABEND IS ENTERING FIRST VTAM INTERFACE,\n      *          ISTRAAA0, BECAUSE VTAM ABENDED  (OS/VS1)\n      *          X'24' - ABEND IS ENTERING SECOND VTAM INTERFACE,\n      *          ISTRAAA2, BECAUSE ISTRAAA0 ABENDED  (OS/VS1)\n      *          X'30' - STAE/STAI NOT TO BE HONORED\n      *          X'31' - RETURN FROM DUMP PROCESSING\n      *          X'32' - CONVERT TO STEP ABEND\n      *          X'33' - RETURN FROM DAMAGE ASSESSMENT ROUTINES\n      *          X'34' - RETURN FROM TYPE 1 MESSAGE MODULE\n      *          X'35' - ABEND ISSUED SVC 13 TO TRANSFER CONTROL (XCTL)\n      *          TO A NON-ABEND MODULE\n      *          X'40' - A MUST COMPLETE TASK HAS ABNORMALLY TERMINATED\n      *          WITHOUT ENOUGH STORAGE FOR 2 RB'S FOR A WTOR\n      *          ASKING WHETHER THE TASK'S RESOURCES ARE\n      *          CRITICAL. THE RESOURCES ARE ASSUMED TO BE\n      *          CRITICAL, AND THE PARTITION IS MARKED\n      *          PERMANENTLY NONDISPATCHABLE. (OS/VS1)\n       10  TCB-TCBJSCBB  PIC X(3).\n      *          ADDRESS OF THE JOB STEP CONTROL BLOCK\n       05  TCB-TCBSSAT   PIC S9(9) COMP.\n      *          ADDRESS OF THE SUBSYSTEM AFFINITY TABLE\n      *          (SSAT).\n       05  TCB-TCBIOBRC  PIC S9(9) COMP.\n      *          ADDRESS OF IOB RESTORE CHAIN FOR I/O QUIESCED\n      *          BY EOT\n       05  TCB-TCBEXCPD  PIC S9(9) COMP.\n      *          ADDRESS OF EXCP DEBUG AREA (OS/VS2)\n       05  TCB-TCBEXT1.\n      *          ADDRESS OF OS-OS/VS COMMON TCB EXTENSION\n       10  FILLER        PIC X(01).\n      *          RESERVED.\n       10  TCB-TCBEXT1A  PIC X(3).\n      *          ADDRESS OF OS-OS/VS COMMON TCB EXTENSION\n      *\n      *      OS/VS1 - OS/VS2 COMMON SECTION\n      *\n       05  TCB-TCBBITS.\n      *          FLAG BYTES. IF A BIT IN THE FOLLOWING TWO BYTES\n      *          IS SET TO 1, THE PRIMARY NONDISPATCHABILITY BIT\n      *          (OFFSET 33.7 DECIMAL) IS SET TO 1, AND THE TASK\n      *          IS NONDISPATCHABLE.\n       10  TCB-TCBNDSP4  PIC X(01).\n      *          SECONDARY NONDISPATCHABILITY FLAGS COMMON TO\n      *          OS/VS1 AND OS/VS2.  COORDINATED WITH PRIMARY\n      *          NONDISPATCHABILITY FLAG TCBPNDSP.   THIS BYTE IS\n      *          NOT CURRENTLY SUPPORTED BY OS/VS2.\n       10  TCB-TCBNDSP5  PIC X(01).\n      *          SECONDARY NONDISPATCHABILITY FLAGS UNIQUE TO\n      *          OS/VS1 OR OS/VS2.  COORDINATED WITH PRIMARY\n      *          NONDISPATCHABILITY FLAG TCBPNDSP.   THIS BYTE IS\n      *          NOT CURRENTLY SUPPORTED BY OS/VS2.\n       10  TCB-TCBFLGS6  PIC X(01).\n      *          TASK-RELATED FLAGS\n      *          X'80' - THE PARTITION IS FIXED IN REAL STORAGE. VIRTUAL\n      *          ADDRESSES ARE EQUAL TO REAL ADDRESSES.\n      *          X'40' - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE\n      *          TASK'S INTERRUPT EXIT AND AN 8-BYTE PICA IS IN\n      *          EFFECT FOR THIS TASK  (OS/VS2)\n      *          X'20' - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY\n      *          GROUP (APG) (OS/VS2)\n      *          X'10' - TASK SCHEDULED FOR ABTERM WHILE OWNING\n      *          SUPERVISOR LOCK (OS/VS2)\n      *          X'04' - REGION SELECTED FOR MIGRATION FROM PRIMARY\n      *          PAGING DEVICE (OS/VS2)\n      *          X'02' - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)\n      *          (OS/VS2)\n      *          X'01' - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE\n      *          (OS/VS2)\n       10  TCB-TCBFLGS7  PIC X(01).\n      *          TASK-RELATED FLAGS\n      *          X'80' - TASK IS IN AN ECB WAIT FOR A GETPART\n      *          (OS/VS2)\n      *          X'20' - IF 1, SVC SCREENING IS TO BE PROPAGATED TO\n      *          SUBTASKS\n      *          X'10' - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN\n      *          THE JOB STEP IS IN SERIAL ABEND PROCESSING.\n      *          USED IN CONJUNCTION WITH TCBFOINP.\n      *          (OS/VS2)\n      *          X'08' - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.\n      *          THIS OFFSET FIXED BY ARCHITECTURE.\n      *          X'04' - RESIDENT SYSTEM TASK (OS/VS2)\n      *          X'02' - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET\n      *          NONDISPATCHABLE BY ABDUMP.   THIS BIT IS SET TO\n      *          CONTROL JOB STEP DURING THE DUMPING PROCESS.\n      *          (OS/VS2)\n      *          X'01' - GENERALIZED TRACE FACILITY (GTF) TRACING HAS\n      *          BEEN TEMPORARILY DISABLED UNDER THIS TASK\n       05  TCB-TCBDAR    PIC X(01).\n      *          DAMAGE ASSESSMENT ROUTINE (DAR) FLAGS\n      *          X'80' - PRIMARY DAR RECURSION. DAR HAS BEEN ENTERED FOR\n      *          THIS TASK.\n      *          X'40' - SECONDARY DAR RECURSION. IF DAR IS REENTERED,\n      *          THIS TASK WILL BE SET NONDISPATCHABLE.\n      *          X'20' - A DUMP HAS BEEN REQUESTED FOR A WRITER OR\n      *          SCHEDULER ABEND, AND THE USER HAS PROVIDED NO\n      *          SYSABEND DD CARD (OS/VS1)\n      *          X'10' - RECURSION PERMITTED IN CLOSE -\n      *          AFTER DAR PROCESSING COMPLETED (PCP)\n      *          X'10' - DAR HAS BEEN ENTERED TO HANDLE A VALID\n      *          RECURSION IN MUST-COMPLETE STATUS THROUGH ABEND\n      *          X'08' - SYSTEM ERROR TASK IS FAILING. DAR DUMP SHOULD\n      *          NOT REQUEST ANY ERROR RECOVERY PROCEDURE (ERP)\n      *          PROCESSING.\n      *          X'04' - A WTO OPERATION WITH A 'REINSTATEMENT FAILURE'\n      *          MESSAGE IS IN PROCESS FOR DAR\n      *          X'02' - WTO OPERATION WITH A 'DAR IN PROGRESS' MESSAGE\n      *          IS IN PROCESS FOR DAR (OS/VS1)\n      *          X'01' - THE DUMP SVC ROUTINE IS EXECUTING FOR THIS TASK\n       05  TCB-TCBRSV37  PIC X(01).\n      *          RESERVED FOR USER\n       05  TCB-TCBSYSCT  PIC X(1).\n      *          NUMBER OF OUTSTANDING SYSTEM-MUST-COMPLETE\n      *          REQUESTS (ICB497) YM3883\n       05  TCB-TCBSTMCT  PIC X(1).\n      *          NUMBER OF OUTSTANDING STEP-MUST-COMPLETE\n      *          REQUESTS (ICB497) YM3883\n       05  TCB-TCBEXT2.\n      *          ADDRESS OF OS/VS1 - OS/VS2 COMMON EXTENSION\n       10  FILLER        PIC X(01).\n      *          FIRST BYTE OF TCBEXT2\n       10  TCB-TCBEXT2A  PIC X(3).\n      *          ADDRESS OF OS/VS1 - OS/VS2 COMMON EXTENSION\n      *\n      *     OS/VS2 TCB OVERLAY\n      *\n       05  TCB-TCBAECB   PIC S9(9) COMP.\n      *          ABEND ECB. POSTED BY A MOTHER TASK IN RTM2\n      *          PROCESSING WHEN A DAUGHTER IS WAITING TO\n      *          TERMINATE IT.\n       05  TCB-TCBXSB    PIC S9(9) COMP.\n      *          ADDRESS OF CURRENT XSB FOR TASK.\n       05  TCB-TCBBACK   PIC S9(9) COMP.\n      *          ADDRESS OF PREVIOUS TCB ON READY QUEUE. ZERO\n      *          IN TOP TCB.\n       05  TCB-TCBRTWA   PIC S9(9) COMP.\n      *          POINTER TO CURRENT RTM2 WORK AREA\n       05  TCB-TCBNSSP   PIC S9(9) COMP.\n      *          NORMAL STACK SAVE AREA POINTER.\n      *          X'80' - NORMAL STACK SAVED IN SQA INDICATOR.\n       05  TCB-TCBXLAS   PIC S9(9) COMP.\n      *          ASCB ADDRESS OF THE CML LOCK HELD WHILE\n      *          TCB SUSPENDED OR INTERRUPTED.\n       05  TCB-TCBABCUR  PIC X(01).\n      *          ABEND RECURSION BYTE\n       05  TCBFJMCT      PIC X(1).\n      *          NUMBER OF OUTSTANDING STEP-MUST-COMPLETE@YA02725\n      *          REQUESTS ISSUED BY THE TASK\n       05  TCB-TCBTID    PIC X(01).\n      *          TASK ID NUMBER\n      *          255 - ID FOR PAGING SUPERVISOR TASK\n      *          254 - ID FOR SYSTEM ERROR TASK\n      *          253 - ID FOR COMMUNCIATIONS TASK\n      *          252 - ID FOR I/O RMS TASK\n      *          251 - ID FOR MASTER SCHEDULER TASK\n      *          250 - ID FOR JOB ENTRY SUBSYSTEM (JES) MONITOR TASK\n      *          249 - ID FOR DYNAMIC SUPPORT SYSTEM (DSS) TASK\n      *          248 - ID FOR SYSTEM LOG TASK\n       05  FILLER        PIC X(01).\n      *          RESERVED.\n       05  TCB-TCBXSCT.\n      *          DISPATCHER INTERSECT CONTROL WORD\n       10  TCB-TCBXSCT1  PIC X(01).\n      *          FLAG BYTE\n      *          X'80' - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A\n      *          CPU. USED TO SYNCHRONIZE SOME STATUS SAVING AND\n      *          DISPATCHABILITY INDICATORS WHEN ACTIVE OR NOT\n      *          UNDER THE LOCAL LOCK.\n      *          X'40' - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLA\n      *          X'20' - TASK REQUESTED LOCAL LOCK\n       10  TCB-TCBXSCT2  PIC X(01).\n      *          FLAG BYTE\n      *          X'80' - CML RESOURCE MANAGER PROCESSING\n      *          COMPLETE FOR THIS CML LOCK HOLDER.\n      *          X'40' - CML LOCK HOLDER READY TO RUN\n       10  TCB-TCBCCPVI  PIC S9(4) COMP.\n      *          ID OF THE CURRENT CPU RUNNING THIS TASK. USED\n      *          FOR RECOVERY AND CPU AFFINITY.\n       05  TCB-TCBFOE.\n      *          ADDRESS OF FIRST FIX OWNERSHIP ELEMENT (FOE)\n      *          IN LIST FOR THIS TASK\n       10  FILLER        PIC X(01).\n      *          RESERVED.\n       10  TCB-TCBFOEA   PIC X(3).\n      *          ADDRESS OF FIRST FIX OWNERSHIP ELEMENT (FOE)\n      *          IN LIST FOR THIS TASK\n       05  TCB-TCBSWA    PIC S9(9) COMP.\n      *          ADDRESS OF FIRST SCHEDULER WORK AREA (SWA) SPQE\n      *          ON SWA SPQE CHAIN\n       05  TCB-TCBSTAWA  PIC S9(9) COMP.\n      *          ESTAE ROUTINE WORK AREA POINTER\n       05  TCB-TCBTCBID  PIC X(4).\n      *          CONTAINS BLOCK ID - 'TCB '\n       05  TCB-TCBRTM12  PIC S9(9) COMP.\n      *          POINTER TO PARAMETER AREAS PASSED FROM RTM1 TO RTM2\n       05  TCB-TCBESTAE.\n      *          AREA TO CONTAIN RECOVERY DATA FOR RTM\n       10  TCB-TCBSCBKY  PIC X(01).\n      *          KEY IN WHICH SYNCH IS TO PASS CONTROL\n      *          TO THE USER EXIT\n       10  TCB-TCBESTRM  PIC X(01).\n      *          ESTAE TERM OPTIONS\n      *          X'80' - ESTAE EXIT ENTERED WITH TERM OPTION\n      *          X'40' - SERIALIZED BY TCB ACTIVE\n       10  TCB-TCBERTYP  PIC X(1).\n      *          TYPE OF ERROR CAUSING ENTRY TO THE RTM. SET\n      *          BY RTM1.\n       10  TCB-TCBMODE   PIC X(1).\n      *          MASK INDICATING MODE OF SYSTEM AT TIME OF ERROR.\n      *          SEE IHART1W/MODE FOR INDIVIDUAL BIT DEFINITIONS.\n       05  TCB-TCBUKYSP  PIC S9(9) COMP.\n      *          ADDRESS OF SPQE'S FOR SUBPOOLS 229 AND 230\n      *          (USER KEY STORAGE IN THE PRIVATE AREA)\n       05  TCB-TCBSEQNO  PIC S9(4) COMP.\n      *          DISPATCHING SEQUENCE NUMBER\n       05  TCB-TCBAFFN   PIC X(2).\n      *          CPU AFFINITY INDICATOR\n       05  TCB-TCBFBYT1  PIC X(01).\n      *          FLAG BYTE.\n      *          X'80' - END OF TASK FLAG FOR FREEMAIN. SET TO 1 BY TASK\n      *          TERMINATION AT START OF TERMINATION PROCESSING\n      *          AND RESET TO 0 AT FINISH.  INDICATES THAT A\n      *          FREEMAIN ON A BLOCK OF LOCAL STORAGE THAT IS\n      *          STILL FIXED BY RSM SHOULD RESULT IN A RETURN\n      *          CODE OF 8 RATHER THAN ABNORMAL TERMINATION.\n      *          X'40' - RTM1 IS CURRENTLY PROCESSING EUT FRR'S\n      *          FOR THIS TASK\n      *          X'20' - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND\n      *          WHILE SVC 16 (PURGE) SCANS THE RB CHAIN PURGING\n      *          APPENDAGE-SCHEDULED ASYNCHRONOUS EXIT ROUTINES\n      *          RUNNING UNDER AN IRB/RQE OR NON-RESIDENT ERP'S\n      *          RUNNING UNDER THE SIRB.\n      *          X'10' - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE\n      *          PERFORMED\n      *          X'08' - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED\n      *          FOR THIS TASK\n      *          X'04' - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TAS\n      *          PROCESSING IS COMPLETE\n      *          X'02' - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED\n      *          BY EXIT PROLOG\n      *          X'01' - LOCALLY LOCKED TCB HAS PAGE FAULTED, AND I/O IS\n      *          REQUIRED (FIRST LEVEL INTERRUPT HANDLER)\n       05  TCB-TCBFBYT2  PIC X(01).\n      *          FLAG BYTE.\n      *          X'80' - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEE\n      *          ENTERED ON THE TCB FOR AN X22 ABEND\n      *          X'40' - MOTHER WAITING FLAG. TURNED ON IN A SUBTASK IN\n      *          RTM2 PROCESSING WHEN AN ANCESTOR TASK IS WAITING\n      *          TO ABEND IT.\n      *          X'20' - DAUGHTER WAITING FLAG. TURNED ON IN A MOTHER\n      *          TASK IN RTM2 PROCESSING WHEN A DAUGHTER IS\n      *          WAITING TO ABEND IT.\n      *          X'10' - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK\n      *          OF AN ASYNCHRONOUS ABEND\n      *          X'08' - IF 1, ERROR PROPAGATED FROM RTM1 IS\n      *          NON-RETRYABLE\n      *          X'04' - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE\n      *          VALIDITY CHECKED. IF 0, ECB POINTED TO BY\n      *          TCBECB IS TO BE VALIDITY CHECKED.\n      *          X'02' - STATUS STOP PENDING,TASK HOLDS A CML LOCK\n      *          X'01' - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS\n      *          FLAG PASSES THE CANCEL REQUEST FROM RTM1 TO RTM2.\n       05  TCB-TCBFBYT3  PIC X(01).\n      *          FLAG BYTE\n      *          X'80' - EXPANDED VERSION OF THE TCB\n      *          X'40' - IF 1, INDICATES USER PROGRAM IS LOADED\n      *          UNDER THIS TASK OR A LOWER TASK.\n      *          X'20' - DETACH HAS BEEN CALLED BY RTM\n       05  FILLER        PIC X(01).\n      *          RESERVED.\n       05  TCB-TCBRPT    PIC S9(9) COMP.\n      *          ADDRESS OF RADIX PARTITION TREE FOR LOCAL\n      *          STORAGE MANAGEMENT\n       05  TCB-TCBVAT    PIC S9(9) COMP.\n      *          ADDRESS OF THE VAT (VSAM). THERE IS ONE\n      *          VAT PER JOB STEP TCB.\n       05  TCB-TCBSWASA  PIC S9(9) COMP.\n      *          ADDRESS OF SAVE AREA USED BY SWA MANAGER\n       05  TCB-TCBSVCA2  PIC S9(9) COMP.\n      *          ADDRESS OF SVC SCREENING TABLE\n       05  TCB-TCBERD    PIC S9(9) COMP.\n      *          EXTENDED REGION DESCRIPTOR.\n       05  TCB-TCBEAE    PIC S9(9) COMP.\n      *          EXTENDED ALLOCATED ELEMENT QUEUE\n      *          ANCHOR.\n       05  TCB-TCBARC    PIC S9(9) COMP.\n      *          REASON CODE FOR ABEND\n       05  TCB-TCBGRES   PIC S9(9) COMP.\n      *          TASK GLOBAL RESOURCE COUNT - NUMBER OF GLOBAL\n      *          RESOURCES OWNED BY THIS TASK\n       05  TCB-TCBSTCB   PIC S9(9) COMP.\n      *          ADDRESS OF STCB\n       05  TCB-TCBTTIME  PIC X(8).\n      *          TCB'S ACCUMULATED CPU TIME\n       05  TCB-TCBCELAP  PIC S9(9) COMP.\n      *          COMMON EXECUTION LIBRARY ANCHOR POINTER\n       05  TCB-TCBR148   PIC X(3).\n      *          RESERVED\n       05  TCB-TCBLEVEL  PIC X(01).\n      *          LEVEL NUMBER OF TCB\n      *          X'02' - JBB2110 (NOT IN BASE)\n      *          X'02' - JBB2125\n      *          X'03' - JBB2133\n      *          X'03' - LEVEL OF THIS MAPPING\n       05  TCB-TCBBDT    PIC S9(9) COMP.\n      *          ADDRESS OF BDT'S GSD LINKAGE\n      *          CONTROL BLOCK\n       05  TCB-TCBNDAXP  PIC S9(9) COMP.\n      *          COUNT OF NUMBER OF CONSECUTIVE DISPATCHES\n      *          REQUIRED ON A CP BEFORE THE TASK SHOULD BE\n      *          REDISPATCHED ON AN AXP.\n       05  TCB-TCBSENV   PIC S9(9) COMP.\n      *          ADDRESS OF ACEE FOR THE TASK.\n      *          THE ACEE DESCRIBES THE RACF\n      *          AUTHORIZATION FOR THE TASK.\n      *\n      *****************************************************************\n      *      OS/VS1 - OS/VS2 COMMON EXTENSION                         *\n      *      ADDRESS OF EXTENSION IS IN TCBEXT2                       *\n      *****************************************************************\n       01 TCB-TCBXTNT2.\n      *          START OF EXTENSION\n       05  TCB-TCBGTF.\n      *          ADDRESS OF GENERALIZED TRACE FACILITY (GTF)\n      *          TEMPORARY TRACE BUFFER\n       10  TCB-TCBTFLG   PIC X(01).\n      *          GTF FLAG BYTE\n      *          X'80' - GTF ASYNCHRONOUS GATHER ROUTINE IS IN CONTROL\n      *          X'40' - GTF ASYNCHRONOUS GATHER ERROR ROUTINE IS IN\n      *          CONTROL\n      *          X'20' - MACHINE CHECK INTERRUPTION HANDLER SHOULD\n      *          UNCONDITIONALLY BRANCH TO THE DISPATCHER\n       10  TCB-TCBGTFA   PIC X(3).\n      *          ADDRESS OF GTF TEMPORARY TRACE BUFFER\n       05  FILLER        PIC X(01).\n      *          RESERVED.\n       05  TCB-TCBRCMP   PIC X(3).\n      *          MOST RECENT ABEND COMPLETION CODE (INCLUDING\n      *          VALID RECURSIONS IN STAE)\n       05  TCB-TCBEVENT  PIC S9(9) COMP.\n      *          ADDRESS OF EVENT TABLES QUEUE\n       05  TCB-TCBRTMCT  PIC S9(9) COMP.\n      *          COUNT OF TOKENS USED FOR ESTAE.\n       05  TCB-TCBTQE    PIC S9(9) COMP.\n      *          ADDRESS OF A REUSABLE TASK-RELATED TQE (OS/VS2)\n       05  TCB-TCBCAUF   PIC S9(9) COMP.\n      *          ADDRESS OF SUBSYSTEM FACILITY CONTROL BLOCK\n      *          (OS/VS2)\n       05  TCB-TCBPERCP  PIC S9(9) COMP.\n      *          POINTER TO A QUEUE OF SPIS. AN SPI\n      *          REPRESENTS THE PERCOLATION OF AN SRB'S\n      *          FRR TO THE RELATED TASK.\n      *          X'80' - TASK IS IN RECOVERY.\n       05  TCB-TCBPERCT  PIC S9(9) COMP.\n      *          COUNT OF SRB MODE FRRS WAITING TO\n      *          PERCOLATE TO THIS TASK, BUT NOT\n      *          REPRESENTED IN SPI QUEUE (TCBPERCP).\n      *\n      *    END OF TCB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@TIOT": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x00\\xa2\\x00\\xa2\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 162, "newlines": 162, "modlines": 0, "user": "SCHUFF"}, "text": "      *TIOT************************************************************\n      *                                                               *\n      *     TIOT = TASK INPUT OUTPUT TABLE                            *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n       01 TIOT-TIOT1.\n       05  TIOT-TIOCNJOB PIC X(8).\n      *             JOB NAME\n       05  TIOT-TIOCSTEP PIC X(16).\n      *             FOR A JOB STEP THAT IS NOT A PROCEDURE\n      *             STEP, 8-BYTE JOB STEP NAME AND 8 RESERVED\n      *             BYTES. FOR A JOB STEP THAT IS A\n      *             PROCEDURE STEP, 8-BYTE PROCEDURE STEP\n      *             NAME AND 8-BYTE JOB STEP NAME OF THE JOB\n      *             STEP THAT CALLED THE PROCEDURE.\n      ******************************************************************\n      *                                                                *\n      *     DD ENTRY                                                   *\n      *                                                                *\n      *      THERE IS A 16-BYTE DD ENTRY FOR EACH DD STATEMENT IN THE  *\n      *      JOB STEP OR PROCEDURE STEP.  (REFERENCES TO GDG (ALL) DATA*\n      *      SETS, THE JOBLIB DATA SET OR PGM=*.DDNAME CREATE STILL    *\n      *      OTHER DD ENTRIES.)                                        *\n      *                                                                *\n      *      A DD ENTRY INCLUDES A DEVICE ENTRY.  BEFORE ALLOCATION,   *\n      *      THERE MAY BE SEVERAL DEVICE ENTRIES IN EACH DD ENTRY.     *\n      *                                                                *\n      ******************************************************************\n       01  TIOT-DDENTRY.\n       05  TIOT-TIOELNGH PIC X(1).\n      *             LENGTH, IN BYTES, OF THIS ENTRY\n      *             (INCLUDING ALL DEVICE ENTRIES)\n       05  TIOT-TIOESTTA PIC X(01).\n      *             STATUS BYTE A\n      *             X'80' NONSTANDARD LABEL (TAPE) (OS/VS1)\n      *             FREED TIOT ENTRY (OS/VS2)\n      *             X'40' DURING ALLOCATION, SPLIT CYLINDER\n      *             PRIMARY. (THIS IS THE FIRST DD ENTRY FOR\n      *             A SPLIT CYLINDER.)\n      *             DURING STEP TERMINATION, NO UNALLOCATION\n      *             NECESSARY.\n      *             X'20' DURING ALLOCATION, SPLIT CYLINDER\n      *             SECONDARY. (THIS IS NOT THE FIRST DD\n      *             ENTRY FOR A SPLIT CYLINDER.)\n      *             DURING STEP TERMINATION, REWIND BUT NO\n      *             UNLOADING.\n      *             X'10' JOBLIB INDICATOR\n      *             X'08' DADSM ALLOCATION NECESSRY\n      *             X'04' LABELED TAPE. IF BIT 0 IS OFF, SL OR\n      *             SUL. IF BIT 0 IS ALSO ON, AL OR AUL.\n      *             X'02' REWIND/UNLOAD THE TAPE VOLUME (TAPE)\n      *             PRIVATE VOLUME (DIRECT ACCESS)\n      *             X'01' REWIND THE TAPE VOLUME (TAPE)\n      *             PUBLIC VOLUME (DIRECT ACCESS)\n       05  TIOT-TIOERLOC.\n      *             RELATIVE LOCATION OF POOL\n       10  TIOT-TIOEWTCT PIC X(1).\n      *             DURING ALLOCATION, NUMBER OF DEVICES\n      *             REQUESTED FOR THIS DATA SET\n       10  TIOT-TIOELINK PIC X(1).\n      *             DURING ALLOCATION, LINK TO THE\n      *             APPROPRIATE PRIME SPLIT, UNIT AFFINITY,\n      *             VOLUME AFFINITY OR SUBALLOCATE TIOT\n      *             ENTRY. AFTER ALLOCATION, FLAG BYTE.\n      *             X'80' THIS IS A SYSOUT DATA SET THAT CONTAINS\n      *             DATA (AFTER CLOSE)\n      *             X'40' RESERVED\n      *             X'20' DEVICE IS A TERMINAL\n      *             X'10' DYNAM CODED ON DD STATEMENT\n      *             X'08' QNAME CODED ON DD STATEMENT\n      *             X'04' ENTRY FOR SPOOLED SYSIN DATA SET\n      *             (OS/VS1)\n      *             X'02' ENTRY FOR SPOOLED SYSOUT DATA SET\n      *             (OS/VS1)\n      *             X'02' ENTRY FOR A SUBSYSTEM DATA SET\n      *             (OS/VS2)\n      *             X'01' ENTRY FOR A REMOTE DEVICE\n       05  TIOT-TIOEDDNM PIC X(8).\n      *             DD NAME\n       05  TIOT-TIOEJFCB PIC X(3).\n      *             RELATIVE TRACK ADDRESS (TTR) OF THE JFCB.\n      *             (DURING ALLOCATION, TTR OF THE SIOT IF\n      *             SUBALLOCATE WAS REQUESTED.)\n       05  TIOT-TIOESTTC PIC X(01).\n      *             STATUS BYTE C. USED DURING ALLOCATION\n      *             ONLY. SET TO ZEROS AT END OF ALLOCATION.\n      *             X'80' MAIN STORAGE OR DASD ADDRESS\n      *             X'40' DEFERRED MOUNT\n      *             X'20' PRIMARY UNIT AFFINITY\n      *             X'10' SECONDARY UNIT AFFINITY\n      *             X'08' PRIMARY VOLUME AFFINITY\n      *             X'04' SECONDARY VOLUME AFFINITY\n      *             X'02' PRIMARY SUBALLOCATE\n      *             X'01' SECONDARY SUBALLOCATE\n      ******************************************************************\n      *                                                                *\n      *    DEVICE ENTRIES                                              *\n      *                                                                *\n      *      1. DURING ALLOCATION -                                    *\n      *         ONE DEVICE ENTRY FOR EACH DEVICE REQUIRED, OR FOR      *\n      *         EACH PUBLIC DEVICE ELIGIBLE.                           *\n      *                                                                *\n      *      2. DURING PROBLEM PROGRAM -                               *\n      *         ONE DEVICE ENTRY FOR EACH ALLOCATED DEVICE.            *\n      *                                                                *\n      ******************************************************************\n       05  TIOT-TIOESTTB PIC X(01).\n      *             STATUS BYTE B - DURING ALLOCATION AND\n      *             DURING PROBLEM PROGRAM\n      *             X'80' DATA SET IS ON DEVICE\n      *             X'40' DATA SET WILL USE DEVICE\n      *             X'20' DEVICE VIOLATES SEPARATION\n      *             X'10' VOLUME SERIAL PRESENT\n      *             X'08' SETUP MESSAGE REQUIRED\n      *             X'04' IF 0, DELETE UNLOADED VOLUME IF UNLOAD\n      *             REQUIRED. IF 1, RETAIN UNLOADED VOLUME\n      *             IF UNLOAD REQUIRED.\n      *             X'02' UNLOAD REQUIRED\n      *             X'01' VERIFICATION REQUIRED\n       05  TIOT-TIOEFSRT PIC X(3).\n      *             DURING PROBLEM PROGRAM, ADDRESS OF UCB.\n      *             DURING ALLOCATION, BITS 0-11 CONTAIN\n      *             OFFSET, IN THE UCB LOOK-UP TABLE, TO AN\n      *             ADDRESS FOR A DEVICE REQUIRED OR ELIGIBLE\n      *             FOR THIS DATA SET.  THE UCB LOOK-UP TABLE\n      *             HAS ADDRESSES OF UCB'S.  BITS 12-23\n      *             CONTAIN OFFSET, IN THE STEP VOLUME TABLE\n      *             (VOLT), TO THE VOLUME SERIAL NUMBER FOR\n      *             THE VOLUME REQUIRED OR ELIGIBLE FOR THIS\n      *             DATA SET.\n      *************************************************************\n      *             TIOT POOL ENTRY\n      *************************************************************\n       01 TIOT-POOL.\n       05  FILLER        PIC X(1).\n      *             RESERVED\n       05  TIOT-TIOPNSLT PIC X(1).\n      *             NUMBER OF SLOTS FOR POOL\n       05  FILLER        PIC X(1).\n      *             RESERVED\n       05  TIOT-TIOPNSRT PIC X(1).\n      *             NUMBER OF DEVICES (FILLED SLOTS)\n       05  TIOT-TIOPPOOL PIC X(8).\n      *             POOL NAME\n       05  TIOT-TIOPSTTB PIC X(1).\n      *             STATUS OF SLOT\n       05  TIOT-TIOPSLOT PIC X(3).\n      *             UCB ADDRESS OR EMPTY SLOT\n       05  TIOT-TIOTFEND PIC X(4).\n      *             FINAL END OF THE TIOT - BINARY ZEROS\n      *\n      *    END OF TIOT\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVS@UCB": {"ttr": 3077, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x12O\\x00\\x94\\x12O\\x12\\x00\\x02l\\x02l\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc6\\xc6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-04T00:00:00", "modifydate": "1994-05-04T12:00:00", "lines": 620, "newlines": 620, "modlines": 0, "user": "SCHUFF"}, "text": "      *UCB*************************************************************\n      *                                                               *\n      *    UCB = UNIT CONTROL BLOCK                                   *\n      *                                                               *\n      *                                                               *\n      *                                                               *\n      *---------------------------------------------------------------*\n      *                                                               *\n      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *\n      *                                                               *\n      *                PREPARED BY : FRED SCHUFF                      *\n      *                              WAYNE, PA                        *\n      *                                                               *\n      *****************************************************************\n      *\n      *             UCB COMMON SEGMENT\n      *\n       01 UCB-UCB.\n       05  UCB-UCBJBNR   PIC X(01).\n      *             FLAG BYTE\n      ******************************************************************\n      *      FIELDS AND FLAGS USED BY ALLOCATION, ACCESS METHODS, ETC.**\n      ******************************************************************\n      *             X'80' UCB FOR VIO DEVICE\n      *             X'40' ALL VOLUME MOUNTING AND DEVICE\n      *             MANAGEMENT FOR THIS DEVICE IS\n      *             CONTROLLED BY JES3\n      *             X'20' DISPLAY DEVICE UNIT CHECK\n      *             DETECTED DURING IPL\n      *             X'10' DEVICE IS DEFINED TO JES3\n      *             X'08' OLTEP COMMUNICATING DIRECTLY WITH\n      *             THE MASS STORAGE CONTROL (MSC),\n      *             NOT THROUGH THE MASS STORAGE SYSTEM\n      *             COMMUNICATOR (MSSC)\n      *             X'04' MOUNT MESSAGE PENDING.  THE DEVICE\n      *             HAS BEEN SELECTED BY DEVICE\n      *             ALLOCATION, BUT NO MOUNT MESSAGE HAS\n      *             BEEN ISSUED.\n      *             X'02' DISABLED CONSOLE SUPPORT CONTROLS\n      *             THIS CONSOLE.\n      *             X'01' VOLUME TO BE MOUNTED IS TO BE\n      *             RETAINED OR CONTAINS A PASSED DATA\n      *             SET (SET BY DEVICE ALLOCATION OR\n      *             DATA MANAGEMENT)\n       05  UCB-UCBFL5    PIC X(01).\n      *             FLAGS\n      *             X'80' DISCONNECT COMMAND CHAIN DEVICE\n      *             X'40' ATTENTION FOR THIS CONSOLE DEVICE\n      *             IS TO BE PROCESSED BY THE\n      *             COMMUNICATIONS TASK\n      *             X'40' SUCCESSFUL COMPARISON CHECKING OF\n      *             THE ACCESS METHOD CATALOG AND THE\n      *             VTOC (VSAM DIRECT ACCESS DEVICES\n      *             ONLY)\n      *             X'20' DATA MANAGEMENT FLAG\n      *             X'10' DEVICE HAS VARIABLE LENGTH SDRS\n      *             X'08' DEVICE RETURNS ENVIRONMENTAL DATA\n      *             X'04' THIS OFFLINE DEVICE IS BEING USED BY\n      *             A SYSTEM COMPONENT.  THE DEVICE\n      *             STATUS MUST NOT CHANGE TO ONLINE NOR\n      *             WILL IT BE ALLOCATED.  THE LAST\n      *             PATH TO THE DEVICE MUST NOT BE\n      *             VARY'ED OFFLINE. THE DEVICE IS\n      *             UNAVAILABLE FOR USAGE BY ANOTHER\n      *             SYSTEM COMPONENT WHICH PROCESSES\n      *             OFFLINE DEVICES.\n      *             X'02' DEVICE HAS AN ALTERNATE CONTROL UNIT\n      *             ADDRESS\n      *             X'01' INDICATES WHETHER THE DEVICE IS\n      *             OFFLINE DUE TO CUIR\n      ******************************************************************\n      *       UCB IDENTIFICATION BYTE - CONTAINS HEX FF\n      ******************************************************************\n       05  UCB-UCBID     PIC X(1).\n      *             UCB IDENTIFICATION (FF)\n      *             X'FF' UCB IDENTIFIER\n      *             X'CC' UCB IDENTIFIER FOR A UCB COPY\n      *             X'11' UCB IDENTIFIER FOR UCBS THAT ARE\n      *             ON THE UCB CHAIN, BUT HAVE BEEN\n      *             CHANGED FROM STATIC TO DYNAMIC.\n      *             THESE UCBS ARE INVALID.\n      *             X'12' UCB IDENTIFIER FOR UCBS THAT\n      *             ARE USED EXCLUSIVELY BY IOS\n      ******************************************************************\n      *     DEVICE STATUS FLAGS CONTROLLED BY ALLOC, ACCESS METHODS,ETC.\n      ******************************************************************\n       05  UCB-UCBSTAT   PIC X(01).\n      *             DEVICE STATUS\n      *             X'80' DEVICE IS ONLINE\n      *             X'40' DEVICE STATUS IS TO BE CHANGED FROM\n      *             ONLINE TO OFFLINE, AND EITHER\n      *             ALLOCATION IS ENQUEUED ON DEVICES\n      *             OR THE DEVICE IS ALLOCATED.  (BIT 0\n      *             IS ALSO ON.)\n      *             X'20' THE MOUNT STATUS OF THE VOLUME ON\n      *             THIS DEVICE IS RESERVED\n      *             X'10' UNLOAD OPERATOR COMMAND HAS BEEN\n      *             ADDRESSED TO THIS DEVICE.  THE\n      *             DEVICE IS NOT YET UNLOADED.\n      *             X'08' DEVICE IS ALLOCATED\n      *             X'04' THE MOUNT STATUS OF THE VOLUME ON\n      *             THIS DEVICE IS PERMANENTLY RESIDENT\n      *             X'02' SYSTEM RESIDENCE DEVICE OR PRIMARY\n      *             CONSOLE OR ACTIVE CONSOLE\n      *             X'01' STANDARD TAPE LABELS HAVE BEEN\n      *             VERIFIED FOR THIS TAPE VOLUME\n      *             OR SECONDARY CONSOLE OR\n      *             CONSOLE STATUS CHANGING\n      ******************************************************************\n      *      BINARY DEVICE NUMBER                                      *\n      ******************************************************************\n       05  UCB-UCBCHAN   PIC S9(4) COMP.\n      *             BINARY DEVICE NUMBER\n      ******************************************************************\n      *      IOS STARTABILITY FLAGS                                    *\n      ******************************************************************\n       05  UCB-UCBSFLS.\n      *             DEVICE STATUS FLAGS\n       10  UCB-UCBFLA    PIC X(1).\n      *             I/O SUPERVISOR FLAG BYTE A\n      *             X'80' THIS DEVICE IS TEMPORARILY UNUSABLE.\n      *             ALL I/O REQUESTS WILL BE QUEUED\n      *             UNTIL UCBDEFER IS RESET.\n      *             X'40' DEVICE NOT READY\n      *             X'20' THE SUBCHANNEL FOR THIS DEVICE\n      *             IS UNUSABLE.\n      *             X'10' PENDING SENSE OPERATION\n      *             X'08' IOS HAS ISSUED A START SUBCHANNEL\n      *             AND RECEIVED CONDITION CODE 0.\n      *             IF UCBHALT AND UCBCLEAR ARE BOTH\n      *             OFF, THEN UCBIOQ CONTAINS THE\n      *             ADDRESS OF THE IOQ FOR THIS I/O\n      *             REQUEST. THE BIT IS TURNED OFF\n      *             WHEN THE REQUESTOR IS TO BE\n      *             NOTIFIED THAT THE REQUEST IS\n      *             COMPLETE.\n      *             X'04' IOS HAS ISSUED A HALT SUBCHANNEL\n      *             AND RECEIVED CONDITION CODE 0.\n      *             IF UCBCLEAR IS OFF, THEN UCBIOQ\n      *             CONTAINS THE ADDRESS OF THE IOQ\n      *             ASSOCIATED WITH THE HALT REQUEST.\n      *             THE BIT IS TURNED OFF WHEN THE\n      *             HALT INTERRUPT OCCURS.\n      *             X'02' IOS HAS ISSUED A CLEAR SUBCHANNEL\n      *             AND RECEIVED CONDITION CODE 0.\n      *             UCBIOQ CONTAINS THE ADDRESS OF THE\n      *             IOQ ASSOCIATED WITH THE CLEAR\n      *             REQUEST. THE BIT IS TURNED OFF WHEN\n      *             THE CLEAR INTERRUPT OCCURS.\n      *             X'01' THIS DEVICE HAS BEEN FORCED OFFLINE\n      *             DUE TO AN ERROR\n       10  UCB-UCBFLB    PIC X(1).\n      *             I/O SUPERVISOR FLAG BYTE B\n      *             X'80' AN INTERCEPT CONDITION EXISTS\n      *             REQUIRING ERP PROCESSING AND WILL\n      *             BE GIVEN TO THE NEXT NORMAL I/O\n      *             REQUEST TO THE DEVICE. INTERCEPT\n      *             CONDITIONS ARE A RESULT OF:\n      *             1) A SECONDARY INTERRUPTION STATUS\n      *             WITH UNIT CHECK AND/OR UNIT\n      *             EXCEPTION SET,\n      *             2) AN UNSOLICITED INTERRUPTION\n      *             STATUS WITH UNIT CHECK AND\n      *             ATTENTION OR DEVICE END SET AND\n      *             THE ATTENTION TABLE ENTRY\n      *             INDICATES INTERCEPT, OR\n      *             3) AN UNSOLICITED INTERRUPTION\n      *             STATUS WITH UNIT CHECK AND\n      *             THE DEVICE-DEPENDENT EOS EXIT\n      *             REQUESTS INTERCEPT.\n      *             X'40' DEVICE HAS NO OPERATIONAL PATHS.\n      *             THE BIT IS TURNED OFF WHEN AN\n      *             UNSOLICITED INTERRUPT OCCURS OR IS\n      *             SIMULATED.\n      *             X'20' DEVICE IS NOT CONNECTED TO A\n      *             SUBCHANNEL\n      *             X'10' NON-NORMAL UCBLEVEL VALUE HAS BEEN\n      *             SET\n      *             X'08' HOT-I/O DETECTED, DEVICE BOXED\n      *             OR NOT RECOVERED YET\n      ******************************************************************\n      *   POINTER TO THE NEXT UCB ON THE UCB CHAIN                     *\n      ******************************************************************\n       05  UCB-UCBNXUCB  PIC S9(9) COMP.\n      *             ADDRESS OF THE NEXT UCB ON THE UCB\n      *             CHAIN\n       05  UCB-UCBWGT    PIC X(01).\n      *             FLAGS\n      *             X'80' SYSIN\n      *             X'40' SYSOUT\n      *             X'20' ASSUMED THAT THIS DEVICE WILL BE\n      *             ALLOCATED FOR A PUBLIC VOLUME\n      *             REQUEST\n      *             X'10' REWIND COMMAND HAS BEEN ADDRESSED TO\n      *             THIS MAGNETIC DEVICE BY I/O SUPPORT\n      *             X'08' MULTIPLE EXPOSURE DEVICE\n      *             X'04' VARY COMMAND OPERATOR REASON\n      *             INDICATOR\n      *             X'02' VARY COMMAND HIERARCHY REASON\n      *             INDICATOR\n      *             X'01' RESERVED, SET TO ZERO.\n       05  UCB-UCBNAME   PIC X(3).\n      *             DEVICE NUMBER (EBCDIC)\n      ******************************************************************\n      *    UCBTYP FIELD - 4 BYTES OF DEVICE UNIQUE DATA                *\n      ******************************************************************\n       05  UCB-UCBTYP.\n      *             DEVICE TYPE\n       10  UCB-UCBTBYT1  PIC X(01).\n      *             MODEL BITS\n       10  UCB-UCBTBYT2  PIC X(01).\n      *             OPTION FLAGS\n      *             X'02' VOLUME REQUIRES ALTERNATE POWER\n      *             SOURCE DEVICE\n      *             X'01' DEVICE HAS ALTERNATE POWER SOURCE\n      *10  UCB-UCBDVCLS.\n      *             SAME AS UCBTBYT3\n       10  UCB-UCBTBYT3  PIC X(01).\n      *             CLASS BITS\n      *             X'80' TAPE\n      *             X'40' COMMUNICATIONS\n      *             X'41' CHANNEL-TO-CHANNEL ADAPTER\n      *             X'20' DIRECT ACCESS\n      *             X'10' DISPLAY\n      *             X'08' UNIT RECORD\n      *             X'04' CHARACTER READER\n      *10  UCB-UCBUNTYP.\n      *             SAME AS UCBTBYT4\n       10  UCB-UCBTBYT4  PIC X(01).\n      *             DEVICE CODE\n       05  UCB-UCBEXTPT.\n      *             ADDRESS OF UCB COMMON EXTENSION\n      *             (VALID ONLY FOR AMODE 24)\n      *****************************************************************\n      *    I/O SUPERVISOR FLAG BYTE\n      *****************************************************************\n       10  UCB-UCBFLC    PIC X(1).\n      *             I/O SUPERVISOR FLAG BYTE C\n      *             X'80' ATTENTION PENDING\n      *             X'40' INTERCEPT CONDITION PENDING\n      *             X'20' UNSOLICITED DEVICE END RECEIVED\n      *             X'08' INTERVENTION REQUIRED MESSAGE\n      *             ISSUED\n      *             X'04' INTERVENTION REQUIRED MESSAGE\n      *             IS NEEDED\n      *             X'01' DDR SWITCH PENDING ON THIS DEVICE\n       10  UCB-UCBEXTP   PIC X(3).\n      *             ADDRESS OF UCB COMMON EXTENSION\n      *             (VALID FOR ANY AMODE)\n      *\n      *      UCB COMMON EXTENSION\n      *      THIS EXTENSION IS POINTED TO BY THE UCBEXTP FIELD IN THE\n      *      COMMON SEGMENT.\n      *\n       01 UCB-UCBCMEXT.\n       05  UCB-UCBETI    PIC X(1).\n      *             A BINARY NUMBER USED BY THE EXIT\n      *             EFFECTOR ROUTINE TO COMPLETE THE\n      *             8-BYTE NAME OF AN IBM-SUPPLIED\n      *             ERROR ROUTINE FOR THIS DEVICE\n       05  UCB-UCBSTI    PIC X(1).\n      *             INCREMENT WHICH, WHEN MULTIPLIED BY\n      *             10, BECOMES AN INDEX TO THE\n      *             STATISTICS TABLE (STATAB)\n       05  UCB-UCBFL6    PIC X(01).\n      *             DEVICE FEATURES BYTE\n      *             X'80' ASSIGN/UNASSIGN COMMANDS\n      *             SUPPORTED\n      *             X'40' DEVICE HAS MESSAGE DISPLAY\n      *             X'20' DATA IS BUFFERED PRIOR TO\n      *             STORING ON PERMANENT MEDIA\n      *             X'10' BLOCK ID SUPPORTED ON THIS\n      *             DEVICE\n      *             X'08' INDICATES WHETHER THE DEVICE\n      *             SUPPORTS SELF DESCRIPTION\n      *             X'04' RESERVED\n      *             X'02' FLAG INDICATING THAT BASIC AND\n      *             INTERMEDIATE ERP ARE SUPPORTED FOR\n      *             THIS DEVICE.\n      *             X'01' FLAG INDICATING THAT THE I/O TIMING\n      *             FUNCTIONS ARE SUPPORTED FOR THIS\n      *             DEVICE\n       05  UCB-UCBATI    PIC X(1).\n      *             INDEX TO THE ATTENTION TABLE (ANTAB)\n      *             OR OPTIONAL JOB ENTRY SUBSYSTEM\n      *             (JES) FLAG BYTE\n      *             X'02' OPTIONAL JOB ENTRY SUBSYSTEM (JES)\n      *             ALLOCATION INDICATOR\n      *             X'01' OPTIONAL JOB ENTRY SUBSYSTEM (JES)\n      *             PSEUDO-DEVICE\n       05  UCB-UCBSNSCT  PIC X(1).\n      *             COUNT OF SENSE BYTES PRESENTED\n      *             BY THIS DEVICE\n       05  UCB-UCBFLP1   PIC X(01).\n      *             FLAG BYTE\n      *             X'80' THE CURRENTLY ALLOCATED VOLUME WAS\n      *             SPECIFICALLY REQUESTED BY VOLUME\n      *             SERIAL NUMBER. IT IS NOT AVAILABLE\n      *             FOR ASSIGNMENT BY OPEN/EOV FOR A\n      *             NON-SPECIFIC VOLUME REQUEST.\n      *             X'40' SHAREABLE WHEN IN UNIPROCESSOR MODE\n      *             X'20' RESIDENT ERROR ROUTINE\n      *             X'10' INHIBIT HALT SUBCHANNEL FROM SVC 33\n      *             X'08' WITH BIT SET, THE DEVICE IS ABLE TO\n      *             BE SWAPPED\n      *             X'04' INDICATES PRESENCE OF AN ERROR LOG\n      *             IN A DEVICE\n      *             X'02' IF 1,DYNAMIC PATHING AVAILABILITY\n      *             IS AN OPTIONAL FEATURE FOR THIS\n      *             DEVICE\n      *             X'01' ALLOCATIONS TO THIS DEVICE ARE\n      *             RESTRICTED\n       05  UCB-UCBSTLI   PIC X(1).\n      *             STATISTICS TABLE LOOKUP INDEX\n       05  UCB-UCBFL7    PIC X(01).\n      *             MISCELLANEOUS USAGE FLAGS\n      *             X'80' MULTI-SYSTEM ASSIGN DONE\n      *             X'40' SUSPENDED CHANNEL PROGRAM\n       05  UCB-UCBIEXT   PIC S9(9) COMP.\n      *             POINTER TO IOS UCB EXTENSION\n       05  UCB-UCBCHPRM  PIC X(1).\n      *             CHANNEL PATH RECOVERY MASK\n       05  UCB-UCBSATI   PIC X(1).\n      *             ATTENTION TABLE INDEX\n      *             SAVED BY THE SCHEDULER\n       05  UCB-UCBASID   PIC S9(4) COMP.\n      *             ASID OF THE MEMORY TO WHICH THIS\n      *             DEVICE IS ALLOCATED EXCEPT FOR\n      *             UNALLOCATED TAPE. FOR UNALLOCATED\n      *             TAPE, ASID OF THE LAST MEMORY TO\n      *             WHICH THIS DEVICE WAS ALLOCATED.\n       05  UCB-UCBWTOWD.\n      *             WTO WORD\n       10  FILLER        PIC X(01).\n      *             RESERVED\n       10  UCB-UCBWTOID  PIC X(3).\n      *             WTO MESSAGE IDENTIFIER\n       05  UCB-UCBDDT.\n      *             ADDRESS OF DEVICE DESCRIPTOR TABLE\n      *             (DDT) ASSOCIATED WITH UCB\n       10  UCB-UCBDDTI   PIC S9(4) COMP.\n      *             CONTAINS DDT NAME LIST INDEX DURING\n      *             MVSCP AND IPL PROCESSING\n       10  FILLER        PIC S9(4) COMP.\n      *             REMAINDER OF DDT ADDRESS\n       05  UCB-UCBCLEXT  PIC S9(9) COMP.\n      *             POINTER TO DEVICE CLASS\n      *             EXTENSION\n       05  UCB-UCBDCTOF  PIC S9(4) COMP.\n      *             DEVICE CONNECT TIME\n      *             OVERFLOW COUNTER\n       05  UCB-UCBCSFLG  PIC X(01).\n      *             MISCELLANEOUS FLAGS WHICH SHOULD\n      *             BE SERIALIZED BY COMPARE\n      *             AND SWAP.\n      *             X'80' INDICATES THAT IOS MARKED THE\n      *             DEVICE OFFLINE DURING NIP BECAUSE\n      *             AT LEAST ONE PATH WAS FOUND\n      *             NOT OPERATIONAL. USED TO\n      *             DETERMINE IF AN XCF CTC SHOULD\n      *             BE MARKED ONLINE BY IECVIOPM\n       05  FILLER        PIC X(01).\n      *             RESERVED\n      *\n      *      DIRECT ACCESS DEVICE DEPENDENT SEGMENT (IECDUCBD)\n      *\n      *      UCBVOLI, UCBSTAB AND UCBDMCT ARE THE SAME IN THE TAPE\n      *      SEGMENT AS IN THE DIRECT ACCESS SEGMENT.\n      *\n       01 UCB-UCBDA.\n       05  UCB-UCBVTOC   PIC X(4).\n      *             RELATIVE ADDRESS OF VTOC FOR THIS\n      *             VOLUME, IN FORM TTR0\n       05  UCB-UCBVOLI   PIC X(6).\n      *             VOLUME SERIAL NUMBER\n       05  UCB-UCBSTAB   PIC X(1).\n      *             VOLUME STATUS\n      *             X'80' VOLUME DEMOUNTABLE BY DATA\n      *             MANAGEMENT (DIRECT ACCESS)\n      *             X'80' DEVICE NOT SHAREABLE AMONG SEVERAL\n      *             CPUS (3420 MAGNETIC TAPE DEVICES\n      *             ONLY)\n      *             X'40' UCB IS OPEN AND IS BEING USED AS A\n      *             PAGE FILE\n      *             X'20' DURING VOLUME ATTRIBUTE PROCESSING\n      *             THIS BIT IS USED BOTH TO DENOTE\n      *             UCBS THAT WERE MARKED PERMANENTLY\n      *             RESIDENT PRIOR TO GETTING CONTROL\n      *             AND TO IDENTIFY DEVICES THAT WERE\n      *             SELECTED BY THE OPERATOR FOR\n      *             MOUNTING VOLUMES (DIRECT ACCESS)\n      *             X'20' ADDITIONAL VOLUME LABEL PROCESSING\n      *             (TAPE)\n      *             X'10' PRIVATE - VOLUME USE STATUS\n      *             X'08' PUBLIC - VOLUME USE STATUS\n      *             X'04' STORAGE - VOLUME USE STATUS\n      *             (DIRECT ACCESS)\n      *             THE VOLUME MOUNTED HAS AN AMERICAN\n      *             NATIONAL STANDARD LABEL  (TAPE)\n      *             X'02' VOLUME SHAREABLE AMONG JOB STEPS\n      *             X'01' CONTROL VOLUME - A CATALOG DATA SET\n      *             IS ON THIS VOLUME  (DIRECT ACCESS).\n      *             IF THE MULTIPLE CONSOLE SUPPORT\n      *             OPTION IS IN THE SYSTEM, DEMOUNT OR\n      *             MOUNT MESSAGES HAVE BEEN ISSUED AND\n      *             THE MESSAGE ID'S ARE AT OFFSETS 40\n      *             THROUGH 45. OPEN WILL DELETE THE\n      *             MESSAGES AND TURN THIS BIT OFF.\n      *             (TAPE)\n       05  UCB-UCBDMCT   PIC X(1).\n      *             VOLUME USE BYTE\n      *             X'80' IF 0, A MOUNT VERIFICATION HAS BEEN\n      *             PERFORMED. IF 1, A MOUNT REQUEST\n      *             HAS BEEN ISSUED.  (DIRECT ACCESS)\n      *             FOR TAPE, THE FOLLOWING MEANINGS\n      *             APPLY.\n      *             NORMAL SCHEDULER PROCESSING - IF 0,\n      *             NO VOLUME HAS BEEN MOUNTED.  IF 1,\n      *             A VOLUME HAS BEEN MOUNTED BUT NO\n      *             VOLUME LABEL PROCESSING HAS BEEN\n      *             PERFORMED.\n      *             SL OPEN ROUTINE - IF 0, STANDARD\n      *             VOLUME LABEL AND CORRECT SERIAL\n      *             NUMBER HAVE BEEN VERIFIED.  IF 1,\n      *             VOLUME LABEL IS NOT STANDARD FORMAT\n      *             OR SERIAL NUMBER IS NOT CORRECT.\n      *             (A MOUNT MESSAGE HAS BEEN ISSUED.)\n      *             NSL OPEN ROUTINE - IF 0,\n      *             NON-STANDARD VOLUME LABEL HAS BEEN\n      *             VERIFIED. IF 1, VOLUME LABEL IS NOT\n      *             STANDARD FORMAT. (CONTROL PASSES TO\n      *             THE PROCESSING PROGRAM'S\n      *             NON-STANDARD LABEL PROCESSING\n      *             ROUTINE.) VOLUME LABEL IS STANDARD\n      *             FORMAT. (CONTROL REMAINS WITH THE\n      *             OPEN ROUTINE. A MOUNT MESSAGE HAS\n      *             BEEN ISSUED.)\n      *             BLP OPEN ROUTINE - IF 0, VOLUME\n      *             LABEL HAS NOT BEEN PROCESSED.\n      *             X'7F' NUMBER OF DCB'S OPEN FOR THIS VOLUME\n      *\n      *       END OF COMMON DIRECT ACCESS/TAPE AREA\n      *\n       05  UCB-UCBSQC    PIC X(1).\n      *             NUMBER OF RESERVE MACRO INSTRUCTIONS\n      *             ISSUED\n       05  UCB-UCBFL4    PIC X(1).\n      *             DIRECT ACCESS FLAG BYTE\n      *             X'40' DAVV WAITING FOR MOUNT\n      *             X'08' 3330V ATTENTION RECEIVED\n      *             X'04' 3330V CYLINDER FAULT PENDING\n      *             X'02' 3330V ATTENTION OVERDUE\n       05  UCB-UCBUSER   PIC S9(4) COMP.\n      *             NUMBER OF CURRENT USERS\n       05  UCB-UCBBASE   PIC S9(9) COMP.\n      *             ADDRESS OF BASE EXPOSURE UCB\n       05  UCB-UCBNEXP   PIC S9(9) COMP.\n      *             BASE - ADDRESS OF LAST STARTED EXPOSURE\n      *             NON-BASE - ADDRESS OF NEXT\n      *             EXPOSURE IN THE RING\n      *             THIS ADDRESS POINTS TO THE PREFIX\n      *\n      *       DASD UCBTYP FLAGS AND VALUES (IECDUCBD)\n      *\n      *       THESE FLAGS AND VALUES ARE VALID ONLY WHEN UCBDVCLS\n      *       (UCBTBYT3) IS SET TO UCB3DACC.\n      *\n      *       UCBTBYT2 FLAGS\n      *\n      *        X'20' THIS DEVICE IS SHAREABLE BETWEEN TWO CPUS\n      *        X'10' ROTATIONAL POSITION SENSING (RPS) DEVICE\n      *        X'08' IF 0, REAL DEVICE. IF 1, VIRTUAL DEVICE\n      *\n      *        MAGNETIC TAPE DEVICE DEPENDENT SEGMENT   (IECDUCBT)\n      *\n      *        UCBVOLI, UCBSTAB AND UCBDMCT ARE THE SAME IN THE TAPE\n      *        SEGMENT AS IN THE DIRECT ACCESS SEGMENT\n      *\n       01 UCB-UCBMT.\n       05  UCB-UCBFSCT   PIC S9(4) COMP.\n      *             DATA SET SEQUENCE COUNT\n       05  UCB-UCBFSEQ   PIC S9(4) COMP.\n      *             DATA SET SEQUENCE NUMBER\n       05  FILLER        PIC X(8).\n      *             UCBVOLI, UCBSTAB AND UCBDMCT AS IN\n      *             DIRECT ACCESS SEGMENT\n       05  UCB-UCBFSER   PIC X(6).\n      *             BEFORE OPEN, MESSAGE IDS.  SEE\n      *             UCBSTAB BIT 7.  AFTER OPEN, DATA\n      *             SET SERIAL NUMBER\n       05  UCB-UCBTFL2   PIC X(01).\n      *             FLAG BYTE\n      *             X'80' EXTENDED MODE SET SUPPORTED\n      *             X'40' PERFORM SUBSYSTEM FUNCTION\n      *             COMMAND SUPPORTED\n      *             X'20' VOLUME CONTAINS COMPACTED DATA\n      *             X'10' ERP DETECTED PERMANENT ERROR -\n      *             TAPE POSITION UNKNOWN\n       05  UCB-UCBTFL1   PIC X(01).\n      *             FLAG BYTE\n      *             X'80' TAPE VOLUME DOES NOT CONTAIN\n      *             LABELS\n      *             X'40' TAPE CONTAINS NON-STANDARD\n      *             LABELS\n      *             X'20' DEQUEUE TAPE VOLUME WHEN DEMOUNTED\n      *             X'18' UCBTFL1 BITS SWAPPED BY DDR\n      *             X'10' UNUSED\n      *             X'08' ACL FEATURE PRESENT\n      *             SWAPPED BY DDR\n      *             X'04' ACL ACTIVE\n      *             X'02' LOOKAHEAD MOUNT PENDING\n      *             X'01' BYPASS LABEL PROCESSING\n       05  UCB-UCBXTN.\n      *             ADDRESS OF THE MAGNETIC TAPE UCB\n      *             EXTENSION\n       10  UCB-UCBVOPT   PIC X(1).\n      *             VOLUME STATISTICS OPTION BITS\n      *             X'80' ERROR STATISTICS BY VOLUME (ESV)\n      *             RECORDS KEPT\n      *             X'40' ERROR VOLUME ANALYSIS (EVA) RECORDS\n      *             KEPT\n      *             X'20' IF 0, ESV RECORDS SENT TO SYS1.MAN\n      *             (X OR Y) DATA SET.\n      *             IF 1, ESV RECORDS SENT TO CONSOLE.\n      *             X'10' AN ERROR RECOVERY PROCEDURE HAS\n      *             CONTROL\n      *             X'08' AN ESV RECORD HAS BEEN ISSUED FOR\n      *             THIS VOLUME BECAUSE OF AN EOV\n      *             CONDITION\n      *             X'04' ERP DETECTED PERM ERROR. TAPE\n      *             POSITION UNKNOWN.\n      *             X'02' RESERVED\n      *             X'01' RESERVED\n       10  UCB-UCBXTNB   PIC X(3).\n      *             ADDRESS OF THE MAGNETIC TAPE UCB\n      *             EXTENSION\n      *\n      *       MAGNETIC TAPE DEVICE DEPENDENT EXTENSION   (IECDUCBT)\n      *\n      *       THIS EXTENSION IS POINTED TO BY THE UCBXTNB FIELD OF THE\n      *       UCB AND IS NOT CONTIGUOUS TO THE UCB.\n      *\n       01 UCB-UCBMTX.\n       05  UCB-UCBCTD    PIC S9(4) COMP.\n      *             SERIAL NUMBER IN BINARY OF TAPE\n      *             DRIVE UPON WHICH THE VOLUME WAS\n      *             CREATED\n       05  UCB-UCBOBRID  PIC X(1).\n      *             OUTBOARD RECORDER ID\n       05  UCB-UCBMDRID  PIC X(1).\n      *             MISCELLANEOUS DATA RECORD ID\n       05  UCB-UCBTR     PIC X(1).\n      *             THE NUMBER (BINARY) OF TEMPORARY\n      *             READ ERRORS THAT HAVE OCCURRED\n      *   ORG UCBTR\n      *             USED FOR TAPE DRIVES THAT HAVE\n      *             MESSAGE DISPLAY - USAGE DURING\n      *             DISMOUNT PROCESSING ONLY\n       05  UCB-UCBMTFL1  PIC X(01).\n      *             MSGDISP DISMOUNT REQUEST\n      *             X'80' DISP=D (DISMOUNT)\n      *             X'40' DISP=K (KEEP)\n      *             X'20' DISP=R (RETAIN)\n       05  UCB-UCBTW     PIC X(1).\n      *             THE NUMBER (BINARY) OF TEMPORARY\n      *             WRITE ERRORS THAT HAVE OCCURRED\n       05  UCB-UCBSIO    PIC S9(4) COMP.\n      *             THE NUMBER (BINARY) OF START I/O\n      *             OPERATIONS THAT HAVE OCCURRED\n       05  UCB-UCBPR     PIC X(1).\n      *             THE NUMBER (BINARY) OF PERMANENT\n      *             READ ERRORS THAT HAVE OCCURRED\n       05  UCB-UCBPW     PIC X(1).\n      *             THE NUMBER (BINARY) OF PERMANENT\n      *             WRITE ERRORS THAT HAVE OCCURRED\n       05  UCB-UCBSER.\n      *             USED FOR TAPE DRIVES THAT HAVE A\n      *             MESSAGE DISPLAY - USAGE DURING\n      *             DISMOUNT PROCESSING ONLY -\n      *             SERIAL OF DISMOUNTED VOLUME\n       10  UCB-UCBNB     PIC X(1).\n      *             THE NUMBER (BINARY) OF NOISE BLOCKS\n      *             THAT HAVE BEEN ENCOUNTERED\n       10  UCB-UCBMS     PIC X(1).\n      *             MODE SET OPERATION CODE FOR DATA\n      *             BLOCKS ON A 3420 MAGNETIC TAPE UNIT\n       10  UCB-UCBERG    PIC S9(4) COMP.\n      *             THE NUMBER (BINARY) OF ERASE GAPS\n      *             THAT HAVE BEEN ENCOUNTERED\n       10  UCB-UCBCLN    PIC S9(4) COMP.\n      *             THE NUMBER (BINARY) OF CLEANER ACTIONS\n      *             THAT HAVE OCCURRED\n      *\n      *      MAGNETIC TAPE UCBTYP FLAGS AND VALUES  (IECDUCBT)\n      *\n      *      THESE FLAGS AND VALUES ARE VALID ONLY WHEN UCBDVCLS\n      *      (UCBTBYT3) IS SET TO UCB3TAPE.\n      *\n      *      UCBTBYT1 FLAGS\n      *\n      *        X'04'   1600 BPI\n      *        X'02'   6250 BPI\n      *\n      *      UCBTBYT2 FLAGS\n      *\n      *        X'20'   DUAL DENSITY 800/1600 BPI\n      *        X'10'   DUAL DENSITY 1600/6250 BPI\n      *        X'08'   READ/WRITE TAPE CONTROL\n      *        X'04' - COMPACTION FEATURE\n      *\n      *      UCBTBYT4 (UCBUNTYP) VALUES\n      *\n      *        X'03'    3400 MAGNETIC TAPE\n      *        X'80'    3480 MAGNETIC TAPE\n      *        X'81'    3490 MAGNETIC TAPE\n      *\n      *      UNIT RECORD DEVICE DEPENDENT SEGMENT (IECDUCBU)\n      *\n      *     END OF UCB\n      *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT214/FILE214.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT214", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}