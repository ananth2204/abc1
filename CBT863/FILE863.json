{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013132000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE863.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE863.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x05'", "DS1TRBAL": "b'\\x91\\x90'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07[\\x00\\x05\\x07[\\x00\\x08\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x16\\x01\\x12\\x04O\\x01\\x12\\x04O\\x133\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-02-13T00:00:00", "modifydate": "2012-02-13T13:33:16", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-484"}, "text": "REGULAR CBT TAPE - VERSION 484    FILE:  863\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT484.FILE863\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 4 MEMBERS COUNTED; CUMULATIVE SIZE IS 775 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/13/12    13:33:16    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE863": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x10\\x01\\x12\\x04O\\x01\\x12\\x04O\\x133\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-02-13T00:00:00", "modifydate": "2012-02-13T13:33:10", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-484"}, "text": "//***FILE 863 is from Jim Callihan and contains an IKJEFF10 TSO     *   FILE 863\n//*           SUBMIT exit that originally came from PRC's CBT tape  *   FILE 863\n//*           File 369.  It stopped working from z/OS 1.12 to 1.13  *   FILE 863\n//*           because of a change in control blocks, and Jim found  *   FILE 863\n//*           a different way to obtain the information, which,     *   FILE 863\n//*           by the way, also works on old systems back to OS/390  *   FILE 863\n//*           1.3 (the first Y2K compliant MVS release).  So (I     *   FILE 863\n//*           think) you can use this version of the exit on older  *   FILE 863\n//*           systems too.                                          *   FILE 863\n//*                                                                 *   FILE 863\n//*           The exit inserts a comment line in the JCL source,    *   FILE 863\n//*           telling you where the JCL in the job came from.       *   FILE 863\n//*                                                                 *   FILE 863\n//*           For example:                                          *   FILE 863\n//*                                                                 *   FILE 863\n//*   //*ISPF EDIT OF SBGOLOB.B.ASM(IKJEFF1$)                       *   FILE 863\n//*           or                                                    *   FILE 863\n//*   //*JCL: SBGOLOB SUBMIT   'SBGOLOB.CBT484.FILE863(IKJEFF1$)'   *   FILE 863\n//*                                                                 *   FILE 863\n//*           email:  James.R.Callihan@salliemae.com                *   FILE 863\n//*                                                                 *   FILE 863\n//*           email:  sbgolob@cbttape.org      or                   *   FILE 863\n//*                   sbgolob@attglobal.net                         *   FILE 863\n//*                                                                 *   FILE 863\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IKJEFF1$": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00W\\x01\\x12\\x04\\x0f\\x01\\x12\\x04?\\x11\\x06\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2012-02-09T00:00:00", "modifydate": "2012-02-12T11:06:57", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT484.FILE863(IKJEFF10)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT,REUS'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB484863\n SETCODE AC(1)\n NAME    IKJEFF10(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IKJEFF10": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00Q\\x01\\x12\\x04\\x0f\\x01\\x12\\x04O\\x131\\x02\\xc7\\x02\\xba\\x00\\x00\\xd1\\xd9\\xc3@@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2012-02-09T00:00:00", "modifydate": "2012-02-13T13:31:51", "lines": 711, "newlines": 698, "modlines": 0, "user": "JRC"}, "text": "**\n** THIS COPY BEING SUBMITTED FOR THE CBT.\n** THIS COPY OF IKJEFF10 WORKS WITH Z/OS V1R13.\n** THIS COPY OF IKJEFF10 WORKS BACK TO OS/390 V1R3, OLD MVS BACK TO Y2K\n**    (MODIFIED BY JAMES CALLIHAN - FEB 2012)                       JRC\n**\nPRC      TITLE 'IKJEFF10 - TSO/E SUBMIT EXIT ROUTINE.'\n***********************************************************************\n*                                                                     *\n* NAME - TSO/E SUBMIT EXIT ROUTINE.                                   *\n*                                                                     *\n* DESCRIPTION - THIS EXIT IS DOCUMENTED IN THE SPL: TSO MANUAL.       *\n*   WE USE THIS EXIT TO INSERT A COMMENT CARD AFTER EACH JOB CARD     *\n*   THAT NAMES THE JCL SOURCE DATASET.  IF IT'S SUB FROM TSO EDIT     *\n*   OR ISPF EDIT, WE HAVE TO DIG FOR THE REAL DATASET NAME.  IF       *\n*   IT'S A SPECIAL ISPF UTILITY DSN, WE PUT OUT A FIXED MESSAGE.      *\n*   IF IT'S SUBMIT *, WE SAY SO.  ELSE, WE USE THE SUBMIT DSN AS IS.  *\n*                                                                     *\n* LEVEL - THIS MODULE HAS BEEN TESTED WITH TSO/E HTE7780 Z/OS V1R13.  *\n*   THERE ARE MORE DEPENDENCIES THAN USUAL ON INTERNAL CONTROL        *\n*   BLOCKS WITHIN THESE PRODUCTS.  IT IS ALSO VERY SENSITIVE TO RB,   *\n*   TCB, AND CDE STRUCTURES.  THUS THIS MODULE WILL BE SENSITIVE      *\n*   TO RELEASE CHANGES IN THESE PRODUCTS.                             *\n*   NOTE: THIS MODULE IS INSTALLED VIA SMP/E LOCAL MOD.  THE LOAD     *\n*         MODULE IKJEFF10 NEEDS APF AUTHORIZATION, A LINKLIST         *\n*         LIBRARY, AND 'RENT,REUS' ATTRIBUTES.                        *\n*                                                                     *\n* LOG -                                                               *\n*     DATE   WHO LV    CHANGE                                         *\n*   01/14/86 PTW 01 IMPLEMENTATION                                    *\n*   03/31/86 PTW 02 REDO VERIFICATION OF ISPF EDIT. CHECKING FOR CDES *\n*                   ISRUDL OR ISREDIT DIDN'T CATCH \"ISPEXEC EDIT\".    *\n*                   CHECKING TLD PANELID ISREDDE DIDN'T CATCH IMACRO. *\n*   08JULY92 GIP 03 ADD X'20' TO ISPF DSN OFFSETS FOR ISPF V3R2.      *\n*                   INITIALIZE R10 EARLIER IN LOGIC.                  *\n*   01JANU93 GIP 04 ADD X'28' TO ISPF DSN OFFSETS FOR ISPF V3R3.      *\n*                   WITH ISPF/PDF V3R4.                               *\n*   6THMAY96 GIP 05 USE AMODE=31 TO ACCESS ISPF V4 ADDRESSES.         *\n*                   VERIFY CL8'SPFEDIT ' IS BEFORE DATA SET NAME.     *\n*                   SCAN AN ADDRESS RANGE FOR CL8'SPFEDIT ' TO        *\n*                   AUTOMATICALLY HANDLE VARIOUS ISPF RELEASES.       *\n*                   (SCAN RANGE CONTROLLED BY SPFEDFST AND SPFEDLST.) *\n*                   CHANGE TEXT OF BADIDSNM - WAS FOR BLANK DSN ONLY. *\n*   01/13/2012 JRC  ALTER TO WORK WITH Z/OS V1R12 AND ABOVE.          *\n*      I CHANGED THE WAY THE SUBMIT COMMAND IS FOUND                  *\n*      MOVED \"BAS R14,TO31\" AT ENVISPFE UP 1 LINE CONTROL BLOCK MOVED *\n*   02/12/2012 SBG  FIXED HANDLING OF ISPF TEMP DATASETS. (THEY       *\n*                   DEPEND ON HOW YOUR ISPF SESSION IS CONFIGURED.)   *\n***********************************************************************\n         LCLC  &CSECT\n&CSECT   SETC  'IKJEFF10'\n&CSECT   CSECT ,\n***********************************************************************\n*                                                                     *\n*        I N I T I A L I Z E   A N D   D E T E R M I N E              *\n*        T Y P E   O F   C A L L.                                     *\n*                                                                     *\n***********************************************************************\n         PRINT GEN                                                L02\n         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME\n         LR    R12,R15                 ESTABLISH BASE.\n         USING &CSECT,R12              TELL ASSEMBLER.\n         L     R11,0(,R1)              R11 = A(PLIST).\n         USING IEDSECTD,R11\n         L     R2,IEEXITWD             R2 = A(OUR SAVED WORKAREA).\n         LTR   R2,R2                   IF R2 \u00bc= 0,\n         BNZ   HAVSTOR                   WE ALREADY HAVE WORKAREA.\n         GETMAIN RU,LV=DYNLEN,SP=230  230 IS FREED AT TASK TERMINATION.\n         ST    R1,IEEXITWD             SAVE A(WORKAREA).\n         LR    R2,R1                   ZERO\n         LR    R0,R1                     DYNAMIC\n         LA    R1,DYNLEN                   STORAGE.\n         LR    R14,R0\n         SLR   R15,R15\n         MVCL  R0,R14                  DO IT.\nHAVSTOR  DS    0H\n         LR    R1,R13                  PREPARE TO\n         LR    R13,R2                    SAVEAREA CHAIN.\n         USING DYNAMIC,R13             TELL ASSEMBLER.\n         ST    R1,4(,R13)              BACK CHAIN.\n         ST    R13,8(,R1)              FORWARD CHAIN.\n         L     R10,IESUBCTP            ADDRESS THE FLAGS IN PLIST.  L03\n         USING IESUBCTD,R10                                         L03\n         CLI   ENVTYPE,NOTINIT         IF FIRST ENTRY,\n         BE    ENVBEG                    WE NEED TO CALL\nTRYMSG   DS    0H\n         L     R2,IEMSGP               IF CALL TO FREE MSG AREA,\n         LTR   R2,R2                     DON'T NEED TO...\n         BNZ   RETCONT                     JUST RETURN.\n         L     R2,IECARDP              IF CALL TO INSERT A CARD,\n         LTR   R2,R2                     STORE THE PROPER\n         BNZ   JCLTYPE                     WORKAREA ADDRESS\n         LA    R2,INSLINE                    IN PARAMETER LIST\n         ST    R2,IECARDP                      AND RETURN.\n         B     RETCONT\nJCLTYPE  DS    0H\n         TM    IESTMTYP,IESJOB         IF A JOBCARD,                L03\n         BZ    RETCONT                   AND\n         TM    IESTMTYP,IESOPCON+IESSCON IF A CONTINUATION,\n         BNZ   RETCONT                   DON'T NEED...RETURN.\n         CLI   CERROR,NO               NO COMMENT ERROR,\n         BE    COMMENTS                  GO DO COMMENTS PROCESSING.\nRETCONT  DS    0H                      RETURN TO CONTINUE.\n         LA    R15,IECONTIN\n         MVI   IETAKEEX,IETJOB\n         B     RETURN\nRETMSG   DS    0H\n         LA    R15,IEMSG               RETURN TO OUTPUT MESSAGE.\n         MVI   IETAKEEX,IETJOB\n         B     RETURN\nRETRET   DS    0H\n         LA    R15,IERETURN            RETURN TO INSERT COMMENT.\n         MVI   IETAKEEX,IETJOB\n         B     RETURN\nRETURN   DS    0H\n         LR    R1,R13              PREPARE\n         L     R13,4(,R13)         FOR FREEMAIN.\n*        FREEMAIN RU,LV=DYNLEN,A=(1),SP=230  SUBMIT NEEDS A(BUFFER)!\n         RETURN (14,12),RC=(15)      WITH R15 = RC.\n***********************************************************************\n*                                                                     *\n*        D E T E R M I N E   E N V I R O N M E N T.                   *\n*                                                                     *\n***********************************************************************\nENVBEG   DS    0H\n*\n*  THIS ROUTINE DETERMINES WHAT ENVIRONMENT WE ARE RUNNING IN:\n*  REGULAR SUBMIT, TSO EDIT, ISPF, OR ISPF EDIT.\n*\n         MVI   CERROR,NO               ASSUME NO ERROR.\n         MVI   ENVTYPE,SUBMIT          ASSUME IT'S REGULAR SUBMIT.\n         MVI   INSLINE,C' '            BLANK BUFFER.\n         MVC   INSLINE+1(L'INSLINE-1),INSLINE\n*\n*  HERE WE FIND SUBMIT'S TCB. THIS EXIT RUNS UNDER A DIFFERENT\n*  CHAIN THAN SUBMIT, AND WE CAN'T PREDICT WHERE SUBMIT'S TCB WILL BE.\n*  THUS WE RUN THE DISPATCHING CHAIN LOOKING FOR AN SVC 100 SVRB.\n*\n         L     R2,PSATOLD-P            R2 = A(OUR TCB).\n         L     R2,TCBJSTCB-T(,R2)      R2 = A(JOB-STEP TCB).\nENVTCBL1 DS    0H\n         L     R3,TCBRBP-T(,R2)        R3 = A(MOST RECENT RB).\nENVRBL1  DS    0H\n         TM    RBSTAB1-R(R3),RBFTSVRB  IF NOT AN SVRB,\n         BNO   ENVTCBE1                  FORGET THIS ONE.\n         L     R4,RBLINK-R(,R3)        VERIFY ITS SVC 100.\n         SL    R4,=A(RBPRFXND-RBPREFIX)\n         CLI   RBINTCOD-RP+1(R4),100               LOOK FOR SVC 100.\n         BE    ENVOKSUB\nENVTCBE1 DS    0H\n         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 2ND RB.\n         L     R2,TCBTCB-T(,R2)        DIG INTO TCB DISP. CHAIN.\n         LTR   R2,R2                   IF END OF LINE,\n         BNZ   ENVTCBL1\n         B     BADSUB1                   PUT OUT ERROR MESSAGE.\nENVOKSUB DS    0H\n         ST    R2,SUBTCB               SAVE SUBMIT'S TCB.\n*\n*  HERE WE RUN SAVE AREAS TO FIND THE CPPL SENT TO SUBMIT.\n*\n         L     R4,RBGRS13-R(,R3)       FIND CPPL SENT TO SUBMIT.\n         L     R4,SAVHSA(,R4)\n         L     R5,SAVR15(,R4)         CHECK FOR PRESENCE OF IKJEFF01.\n         CLC   =CL8'IKJEFF01',5(R5)\n         BNE   BADSUB2\n         L     R4,SAVR1(,R4)\n         L     R5,CPPLUPT-CPPL(,R4)\n         ST    R5,UPTPTR               SAVE A(UPT).\n         TM    UPTSWS-UPT(R5),UPTWTP   IF NO WTP MESSAGES,\n         BNO   BADWTP                    THEN NO COMMENTS!\n         MVC   PSCBPTR,CPPLPSCB-CPPL(R4) SAVE A(PSCB).\n*\n*  NEXT WE LOOK FOR THE DAPB FOR THE CURRENT DSN AND THE SUBMIT\n*  TABLE.  WE RUN SAVE AREAS ANCHORED IN THIS EXIT'S TCB TO DO THIS.\n*\n         L     R2,PSATOLD-P            R2 = A(OUR TCB).\n         L     R3,TCBFSA-T(,R2)        DIG THROUGH SAVE AREAS\n         L     R3,SAVLSA(,R3)\n         L     R3,SAVLSA(,R3)\n*JRC     L     R3,SAVLSA(,R3)   APPEARS 1.13 IS ONE LEVEL HIGHER\n         ST    R3,SUBSAREA             WILL BE USED LATER TO GET DSN.\n         L     R4,SAVR6(,R3)\n         CLC   =C'SUBMIT TABLE',0(R4)  CHECK EYE-CATCHER TO BE SURE.\n         BNE   BADSUB3                 AARGH! WE HAVE A PROBLEM HERE.\n*\n*  HERE WE CHECK SPECIFICALLY FOR TSO EDIT, ISPF, OR ISPF EDIT.\n*  FOR TSO EDIT, THE MOTHER TASK'S 2ND RB MUST BE RUNNING IKJEBESU,\n*  AND THE PREVIOUS RB MUST BE RUNNING IKJEBEMA.  FOR ISPF, ANY MOTHER\n*  TASK'S 1ST RB MUST BE RUNNING ISPTASK.  FOR ISPF EDIT, WE MUST BE\n*  ISPF. RUN TH SAVEAREAS ARE DETERMINE THAT ISPCSB AND ISREPSB ARE\n*  BEING USED.  THUS WE AREN'T FOOLED BY TSO COMMANDS, ETC.\n*\n         L     R2,SUBTCB               GET SUBMIT'S TCB.\n         L     R2,TCBOTC-T(,R2)        R2 = A(MOTHER TCB).\n         L     R3,TCBRBP-T(,R2)        R3 = A(LAST RB).\n         L     R4,RBCDE-R(,R3)             JRC\n         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 2ND RB.\n         BO    ENVENDED\n         L     R3,RBLINK-R(,R3)\n         L     R4,RBCDE-R(,R3)             JRC\n         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 3RD RB.\n         BO    ENVENDED\n         L     R4,RBCDE-R(,R3)         R4 = A(1ST CDE).\n         CLC   =CL8'IKJEBESU',CDNAME-C(R4)  LOOK FOR TSO EDIT.\n         BNE   ENVENDED\n         L     R3,RBLINK-R(,R3)\n         L     R4,RBCDE-R(,R3)         R5 = A(1ST CDE).\n         CLC   =CL8'IKJEBEMA',CDNAME-C(R4)\n         BNE   ENVENDED\n         MVI   ENVTYPE,EDIT            WE GOT EDIT.\n*        TPUT  =C'ENV: EDIT',9\n         MVC   EWAPTR,TCBGRS9-T(R2)    SAVE THE WORK AREA POINTER.\n         B     ENVEND\nENVENDED DS    0H\n*\n* NOW DO ISPF AND ISPF EDIT.\n*\n         L     R2,SUBTCB               GET SUBMIT'S TCB.\n         L     R2,TCBOTC-T(,R2)        R2 = A(MOTHER TCB).\nENVTCBL2 DS    0H\n         L     R3,TCBRBP-T(,R2)        R3 = A(LAST RB).\nENVRBL2  DS    0H\n         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 1ST RB.\n         BO    ENVRBE2\n         L     R3,RBLINK-R(,R3)\n         B     ENVRBL2\nENVRBE2  DS    0H\n         L     R4,RBCDE-R(,R3)         R5 = A(1ST CDE).\n         CLC   =CL8'ISPTASK',CDNAME-C(R4)  LOOK FOR ISPF.\n         BNE   ENVTCBE2\n         MVI   ENVTYPE,ISPF            WE'RE IN ISPF.\n*        TPUT  =C'ENV: ISPF',9\n         BE    ENVISPFE\n         B     ENVENDIS\nENVTCBE2 DS    0H\n         CL    R2,TCBJSTCB-T(,R2)      WE WANT TO STOP AT THE\n         BE    ENVENDIS                  JOB-STEP TCB.\n         L     R2,TCBOTC-T(,R2)        GET PREVIOUS MOTHER.\n         B     ENVTCBL2                LOOP.\nENVISPFE DS    0H                      WE'VE PASSED THE CDE TEST.\n         L     R3,TCBGRS13-T(,R2)      NOW VERIFY THE SAVEAREA CHAIN.\n         L     R3,SAVHSA(,R3)          DIG BACK 2 LEVELS.\n         L     R3,SAVHSA(,R3)\n         BAS   R14,TO31   MOVED UP THE 31 BIT CBLK MUST HAVE MOVED JRC\n         L     R4,SAVR15(,R3)          CHECK FOR PRESENCE OF ISPCSB.\n*JRC     BAS   R14,TO31   MOVED UP THE 31 BIT CBLK MUST HAVE MOVED JRC\n         CLC   =C'ISPCSB ',5(R4)\n         BNE   ENVIFROM\n         L     R4,SAVHSA(,R3)          DIG BACK ANOTHER LEVEL.      L02\n         L     R4,SAVR15(,R4)          CHECK FOR PRESENCE OF ISPEPSBL02\n         CLC   =C'ISREPSB ',5(R4)                                   L02\n         BNE   ENVIFROM                                             L02\n         BAS   R14,FROM31\n         MVI   ENVTYPE,ISPFEDIT        WE'RE ISPF EDIT!\n*        TPUT  =C'ENV: ISPFEDIT',13\n         MVC   EDTPTR,SAVR3(R3)        NEED THIS FOR LATER.\n         B     ENVEND\nENVIFROM DS    0H\n         BAS   R14,FROM31\nENVENDIS DS    0H\nENVEND   DS    0H\n         B     TRYMSG                  GO BACK FROM WHENCE.\n***********************************************************************\n*                                                                     *\n*        D E T E R M I N E   D S N T Y P E.                           *\n*                                                                     *\n***********************************************************************\nCOMMENTS DS    0H\n*\n*  THIS ROUTINE DETERMINES WHAT TYPE OF DSN SUBMIT IS HANDLING:\n*    PERMANENT        - YOUR.EVERYDAY.DSN\n*    TEMPORARY        - SYS99999.D99999.T99999999.USERID.R9999999\n*    ISPF UTILITY     - PREFIX(.USERID).SPFTEMP9.CNTL\n*    TSO EDIT UTILITY - PREFIX.SUB(MIT).D99999.T9999999.CNTL\n*    NONE             - DETERMINED BY ZERO BUFFER POINTER\n*\nDSNBEG   DS    0H\n         MVI   INSLINE,C' '            BLANK BUFFER.\n         MVC   INSLINE+1(L'INSLINE-1),INSLINE\n         MVI   DSNTYPE,PERM            ASSUME PERMANENT.\n         L     R2,SUBSAREA             R2 = A(SAVED BUFFER).\n         L     R3,SAVR6(,R2)           IF ZERO BUFFER\n         L     R3,SUBUFPTR(,R3)          POINTER,\n         LTR   R3,R3\n         BNZ   DSNENONE\n         MVI   DSNTYPE,NONE            INDICATE THUSLY.\n*        TPUT  =C'DSN: NONE',9\n         B     DSNEND\nDSNENONE DS    0H\n*        L     R2,SUBSAREA             R2 = A(SAVED BUFFER).\n*** JRC\n*** JRC  SAVR7 CONTAINS ZEROES, NEED TO FIND A GOOD POINTER\n*** JRC  SAVR6 POINTS TO SUBSAREA, I'LL TRY IT\n*** JRC  I WILL TRY PICKING UP THE USERID FROM THE SUBMIT TABLE\n*** JRC  THEN A POINTER IN THE SUBMIT TABLE THAT WILL GET ME TO\n*** JRC  THE ACTUAL SUBMIT COMMAND.\n*** JRC\n         L     R2,SAVR6(,R2)   GET SUBMIT TABLE POINTER          JRC\n         CLC   =C'SUB',X'4C'(R2)          IF SUBMIT IN TABLE     JRC\n         BNE   BADSDSN                   IF NOT JUST GET OUT.    JRC\n         MVI   SUBJCL,C' '                                       JRC\n         MVC   SUBJCL+1(79),SUBJCL                               JRC\n         MVC   SVUSERID,X'55'(R2)        SAVE THE SUBMITTING ID  JRC\n         L     R2,X'2C'(,R2)          GET SUBMIT COMMAND AREA    JRC\n         L     R2,0(,R2)          GET SUBMIT COMMAND BUFFER      JRC\n         LH    R3,2(,R2)          GET SUBMIT COMMAND LENGTH      JRC\n         S     R3,=F'1'           REDUCE THE LENGTH BY ONE       JRC\n         EX    R3,MOVECMD         SAVE THE COMMAND               JRC\n         MVC   INSLINE+8(72),SUBJCL  SAVE THE COMMAND            JRC\n         CLC   =C'SYS',INSLINE+26  TEST FOR A TEMP DSNAME        JRC\n         BE    DSNTEMP             PASSES THE TEST               SBG\n         CLC   =C'.T',INSLINE+34  TEST FOR A TEMP DSNAME         JRC\n         BE    DSNTEMP             PASSES THE TEST               SBG\n* ---  R7 AND R8 ARE UNUSED IN THIS VERSION OF THE PROGRAM ---   SBG\n         LA    R7,40              LOAD REGISTER FOR LOOP TEST    SBG\n         LA    R8,INSLINE+26      START IN THE SAME PLACE        SBG\nDSNTLOOP CLC   =C'SPFT',0(R8)     CHECK FOR SPFTEMP*             SBG\n         BE    DSNTEMP            FOUND IT, IT'S TEMP            SBG\n         LA    R8,1(,R8)          BUMP UP ONE PLACE              SBG\n         BCT   R7,DSNTLOOP        LOOP                           SBG\n         B     DSNNOTMP           FELL THRU, NOT TEMP            SBG\nDSNTEMP  DS    0H                 POSITIVELY TEMP                SBG\n         MVI   DSNTYPE,TEMP           WE'RE A TEMPORARY! (PHEW)  JRC\n         B     DSNEND                                            JRC\nDSNNOTMP EQU   *                                                 JRC\n         BC    15,DSNEND          SAVE THE COMMAND               JRC\nMOVECMD  MVC   SVSUBCMD(0),4(R2)  SAVE THE COMMAND               JRC\n*        TPUT  =C'DSN: TEMP',9\n         B     DSNEND\nCLCUSER  CLC   23(*-*,R3),PSCBUSER-PSCB(R5)\nDSNENTMP DS    0H                      CHECK FOR ISPF UTILITY.\n         L     R5,UPTPTR               COMPARE PREFIX WITH DSN.\n         SLR   R6,R6\n         IC    R6,UPTPREFL-UPT(,R5)\n         LTR   R6,R6\n         BZ    DSNENIUT\n         BCTR  R6,0\n         EX    R6,CLCUPT\n         BNE   DSNENIUT\n         CH    R4,=H'14'               MIN LENGTH IS 14 W 1 BYTE PREFIX\n         BL    DSNENIUT\n         LA    R5,0(R4,R3)\n         SH    R5,=H'14'\n         CLC   =C'.SPFTEMP',0(R5)      DO BASIC TEXT CHECKS.\n         BNE   DSNENIUT\n         CLC   =C'.CNTL',9(R5)\n         BNE   DSNENIUT\n         MVI   DSNTYPE,ISPFUTIL        WE'RE AN ISPF UTILITY!\n*        TPUT  =C'DSN: ISPFUTIL',13\n         B     DSNEND\nCLCUPT   CLC   0(*-*,R3),UPTPREFX-UPT(R5)\nDSNENIUT DS    0H                      NOW TRY TSO EDIT UTILITY.\n         CH    R4,=H'24'               AGAIN CHECK MIN LENGTH.\n         BL    DSNENDED\n         L     R5,UPTPTR               IF PREFIX IS AVAILABLE,\n         SLR   R6,R6                     CHECK DSN.\n         IC    R6,UPTPREFL-UPT(,R5)\n         LA    R5,0(R6,R3)\n         LTR   R6,R6\n         BZ    *+8\n         LA    R5,1(,R5)               BUMP PAST '.'.\n         CLC   =C'SUB.D',0(R5)         DO BASIC TEXT CHECKS.\n         BE    DSNTRYED\n         CLC   =C'SUBMIT.D',0(R5)\n         BNE   DSNENDED\nDSNTRYED DS    0H\n         LA    R5,0(R4,R3)\n         SH    R5,=H'14'\n         CLC   =C'.T',0(R5)\n         BNE   DSNENDED\n         CLC   =C'.CNTL',9(R5)\n         BNE   DSNENDED\n         MVI   DSNTYPE,EDITUTIL        WE'RE A TSO EDIT UTILTIY DSN!\n*        TPUT  =C'DSN: EDITUTIL',13\nDSNENDED DS    0H\nDSNEND   DS    0H\n***********************************************************************\n*                                                                     *\n*        D E T E R M I N E   M S G T Y P E.                           *\n*                                                                     *\n***********************************************************************\nMSGBEG   DS    0H\n*\n* HERE WE DETERMINE THE TYPE OF COMMENT TO OUTPUT BASED ON THE\n* ENVIRONMENT AND THE DSN:\n*   -DSN-      -ENV-      -MSG-          -ACTION-\n*  NONE          .       PROMPT   FIXED TEXT.\n*  EDITUTIL   EDIT       EDITNAME MUST DIG OUT REAL DSN IN TSO EDIT\n*  ISPFUTIL   ISPFEDIT   ISPENAME MUST DIG OUT REAL DSN IN ISPFEDIT\n*  TEMP       ISPFEDIT   ISPENAME              \"\"\n*  ISPFUTIL   ISPF       ISPUNAME FIXED TEXT\n*  TEMP       ISPF       ISPUNAME FIXED TEXT\n*  ALL OTHER     .       SUBNAME  USE DSN ON COMMAND LINE\n*\n         MVI   MSGTYPE,SUBNAME         ASSUME SUBMIT DSN.\n         CLI   DSNTYPE,NONE            CHECK FOR PROMPT MSG.\n         BNE   MSGENDPR\n         MVI   MSGTYPE,PROMPT\n*        TPUT  =C'MSG: PROMPT',11\n         B     MSGEND\nMSGENDPR DS    0H                      CHECK FOR TSO EDIT.\n         CLI   DSNTYPE,EDITUTIL        ONLY EDIT UTILITY NAME.\n         BNE   MSGENDED\n         CLI   ENVTYPE,EDIT            MUST BE EDIT ENVIRONMENT.\n         BNE   MSGEND\n         MVI   MSGTYPE,EDITNAME        WE GOT TSO EDIT.\n*        TPUT  =C'MSG: EDITNAME',13\n         B     MSGEND\nMSGENDED DS    0H                      CHECK FOR ISPF.\n         CLI   DSNTYPE,ISPFUTIL        IF A ISPF UTILITY\n         BE    MSGTRYIE\n         CLI   DSNTYPE,TEMP              OR A TEMP, OK.\n         BNE   MSGEND\nMSGTRYIE DS    0H\n         CLI   ENVTYPE,ISPFEDIT        IF ISPF EDIT ENV.,\n         BNE   MSGTRYIU\n         MVI   MSGTYPE,ISPENAME        THAT'S COOL.\n*        TPUT  =C'MSG: ISPENAME',13\n         B     MSGEND\nMSGTRYIU DS    0H\n         CLI   ENVTYPE,ISPF            ELSE, TRY DIALOGS, ETC.\n         BNE   MSGENDIS\n         MVI   MSGTYPE,ISPUNAME\n*        TPUT  =C'MSG: ISPUNAME',13\n         B     MSGEND\nMSGENDIS DS    0H\nMSGEND   DS    0H\n***********************************************************************\n*                                                                     *\n*        F O R M A T   C O M M E N T S.                               *\n*                                                                     *\n***********************************************************************\nPUTBEG   DS    0H\n*\n* HERE WE BUILD THE COMMENT, BASED ON MSGTYPE.\n*\n         MVI   INSLINE,C' '            BLANK BUFFER.\n         MVC   INSLINE+1(L'INSLINE-1),INSLINE\n         CLI   MSGTYPE,SUBNAME         CHECK FOR SUBMIT DSNAME.\n         BNE   PUTENDSU\n         MVC   INSLINE(L'JCL),JCL\n         LA    R2,INSLINE+L'JCL\n         L     R3,SUBSAREA             R2 = A(SAVED BUFFER).\n         L     R3,SAVR7(,R3)           DIG FOR DSNAME.\n         L     R3,0(,R3)\n*** JRC\n*** JRC  SAVR7 CONTAINS ZEROES, NEED TO FIND A GOOD POINTER\n*** JRC  SAVR6 POINTS TO SUBSAREA, I'LL TRY IT\n*** JRC  I WILL TRY PICKING UP THE USERID FROM THE SUBMIT TABLE\n*** JRC  THEN A POINTER IN THE SUBMIT TABLE THAT WILL GET ME TO\n*** JRC  THE ACTUAL SUBMIT COMMAND.\n*** JRC\n*** JRC\n         L     R2,SUBSAREA             R2 = A(SAVED BUFFER).     JRC\n         L     R2,SAVR6(,R2)   GET SUBMIT TABLE POINTER          JRC\n         CLC   =C'SUB',X'4C'(R2)       IF SUBMIT IN TALBE        JRC\n         BNE   BADSDSN                   IF NOT JUST GET OUT.    JRC\n         MVI   SUBJCL,C' '                                       JRC\n         MVC   SUBJCL+1(79),SUBJCL                               JRC\n         MVC   SVUSERID,X'55'(R2)        SAVE THE SUBMITTING ID  JRC\n         L     R2,X'2C'(,R2)          GET SUBMIT COMMAND AREA    JRC\n         L     R2,0(,R2)          GET SUBMIT COMMAND BUFFER      JRC\n         LH    R3,2(,R2)          GET SUBMIT COMMAND LENGTH      JRC\n         S     R3,=F'1'           REDUCE THE LENGTH BY ONE       JRC\n         EX    R3,MOVECMD         SAVE THE COMMAND               JRC\n         MVC   INSLINE+8(72),SUBJCL  SAVE THE COMMAND            JRC\n         BC    15,PUTEND          SAVE THE COMMAND               JRC\nPUTENDSU DS    0H\n         CLI   MSGTYPE,ISPENAME        CHECK FOR ISPF EDIT DSN.\n         BNE   PUTENDIE\n         BAS   R14,TO31                                             L05\n         L     R3,EDTPTR               R3 = A(EDT).\n         LA    R4,SPFEDFST(,R3)        R4 = START SCAN ADDRESS.     L05\nEDSNLOOP LA    R0,(SPFEDLST-SPFEDFST)/8  GET SCAN DOUBLEWORD COUNT. L05\n         CLC   =CL8'SPFEDIT ',0(R4)    ENQUEUE RESOURCE FOUND?      L05\n         BE    GOTEDDSN                YES, PROCEED.                L05\n         LA    R4,8(,R4)               NO, POINT TO NEXT DOUBLEWORD.L05\n         BCT   R0,EDSNLOOP             CONTINUE SCAN.               L05\n         B     BADIDSN                 COULD NOT FIND EDIT DSNAME.  L05\nGOTEDDSN LA    R4,8(,R4)               R4 = A(DSN).                 L05\n         CLI   0(R4),C' '              IF BLANK, FORGET IT.\n         BE    BADIDSN\n         MVC   INSLINE(L'JCLISPED),JCLISPED\n         LA    R2,INSLINE+L'JCLISPED\n         LA    R5,44(,R4)              FIND L'DSN.  (ASSUME 44.)    L05\n         BCTR  R5,0\n         CLI   0(R5),C' '\n         BE    *-6\n         SLR   R5,R4\n         EX    R5,MVCDSN               MOVE DSN.\n         LA    R2,1(R5,R2)\n         LA    R4,44(,R4)              R4 = A(MEMBER).              L05\n         CLI   0(R4),C' '              IF BLANK, FORGET IT.\n         BE    PUTISPFX                                             L05\n         MVI   0(R2),C'('\n         LA    R5,8(,R4)               FIND L'MEMBER.  (ASSUME 8.)  L05\n         BCTR  R5,0\n         CLI   0(R5),C' '\n         BE    *-6\n         SLR   R5,R4\n         EX    R5,MVCMEM               MOVE MEMBER.\n         LA    R2,2(R5,R2)\n         MVI   0(R2),C')'\nPUTISPFX BAS   R14,FROM31                                           L05\n         B     PUTEND                  THAT'S IT.\nPUTENDIE DS    0H\n         CLI   MSGTYPE,EDITNAME        CHECK FOR TSO EDIT DSNAME.\n         BNE   PUTENDED\n         L     R3,EWAPTR               R3 = A(EWA).\n         LA    R4,EDITDSN(,R3)         R4 = A(DSN).\n         CLI   0(R4),C' '              IF BLANK, FORGET IT.\n         BE    BADEDSN\n         MVC   INSLINE(L'JCLEDIT),JCLEDIT\n         LA    R2,INSLINE+L'JCLEDIT\n         LH    R5,EDITDSNL(,R3)        R5 = L'DSN.\n         BCTR  R5,0\n         EX    R5,MVCDSN               MOVE DSN.\n         LA    R2,1(R5,R2)\n         LA    R4,EDITMEM(,R3)         R4 = A(MEMBER).\n         CLI   0(R4),C' '              IF BLANK, FORGET NEXT.\n         BE    PUTEND\n         MVI   0(R2),C'('\n         LA    R5,L'EDITMEM(,R4)       FIND L'MEMBER.\n         BCTR  R5,0\n         CLI   0(R5),C' '\n         BE    *-6\n         SLR   R5,R4\n         EX    R5,MVCMEM               MOVE MEMBER.\n         LA    R2,2(R5,R2)\n         MVI   0(R2),C')'\n         B     PUTEND                  THAT'S IT.\nPUTENDED DS    0H\n         CLI   MSGTYPE,ISPFUTIL        CHECK FOR ISPF UTILTIY.\n         BNE   PUTENDIU\n         MVC   INSLINE(L'JCLISPUT),JCLISPUT\n         B     PUTEND\nPUTENDIU DS    0H\n         CLI   MSGTYPE,PROMPT          CHECK FOR * IN READY.\n         BNE   PUTENDPR\n         MVC   INSLINE(L'JCLPROMP),JCLPROMP\n         B     PUTEND\nPUTENDPR DS    0H\nPUTEND   DS    0H\n         B     RETRET                  TELL SUBMIT TO RETURN TO INSERT.\n***********************************************************************\n*                                                                     *\n*        E R R O R   H A N D L I N G.                                 *\n*                                                                     *\n***********************************************************************\nBADSUB1  DS    0H                      CONTROL BLOCK MESSUP.\n         MVI   CERROR,YES\n         MVC   INSLINE(2),=AL2(L'BADSUB1M+2)\n         MVC   INSLINE+2(L'BADSUB1M),BADSUB1M\n         B     BADRET\nBADSUB1M DC    C'NO DSN COMMENT - CAN''T FIND SUBMIT TCB.'\nBADSUB2  DS    0H                      CONTROL BLOCK MESSUP.\n         MVI   CERROR,YES\n         MVC   INSLINE(2),=AL2(L'BADSUB2M+2)\n         MVC   INSLINE+2(L'BADSUB2M),BADSUB2M\n         B     BADRET\nBADSUB2M DC    C'NO DSN COMMENT - SUBMIT SAVE AREA CHAIN ERROR.'\nBADSUB3  DS    0H                      SUBMIT CONTROL BLOCK MESSUP.\n         MVI   CERROR,YES\n         MVC   INSLINE(2),=AL2(L'BADSUB3M+2)\n         MVC   INSLINE+2(L'BADSUB3M),BADSUB3M\n         B     BADRET\nBADSUB3M DC    C'NO DSN COMMENT - CAN''T FIND SUBMIT TABLE.'\nBADWTP   DS    0H                      NOWTP - NO COMMENT WANTED.\n         MVI   CERROR,YES\n         B     RETCONT\nBADSDSN  DS    0H                      BLANK SUBMIT DSN.\n         MVI   CERROR,YES\n         MVC   INSLINE(2),=AL2(L'BADSDSNM+2)\n         MVC   INSLINE+2(L'BADSDSNM),BADSDSNM\n         B     BADRET\nBADSDSNM DC    C'NO DSN COMMENT - INTERNAL SUBMIT DSN IS BLANK.'\nBADIDSN  DS    0H                      BLANK ISPF EDIT DSN.\n         BAS   R14,FROM31                                           L05\n         MVC   INSLINE(2),=AL2(L'BADIDSNM+2)\n         MVC   INSLINE+2(L'BADIDSNM),BADIDSNM\n         B     BADRET\nBADIDSNM DC    C'NO DSN COMMENT - UNABLE TO FIND ISPF EDIT DSN.'    L05\nBADEDSN  DS    0H                      BLANK TSO EDIT DSN.\n         MVC   INSLINE(2),=AL2(L'BADEDSNM+2)\n         MVC   INSLINE+2(L'BADEDSNM),BADEDSNM\n         B     BADRET\nBADEDSNM DC    C'NO DSN COMMENT - INTERNAL TSO EDIT DSN IS BLANK.'\nBADRET   DS    0H                      SAVE A(ERROR MSG).\n         LA    R2,INSLINE\n         ST    R2,IEMSGP\n         B     RETMSG\n         DROP  R10,R11\n***********************************************************************\n*                                                                     *\n*        T O   A N D   F R O M   3 1   B I T   M O D E.               *\n*                                                                     *\n***********************************************************************\nTO31     DS    0H\n         L     R1,LABEL1\n         BSM   0,R1\nLABEL1   DC    A(LABEL2+X'80000000')\nLABEL2   DS    0H\n         BR    R14\nFROM31   DS    0H\n         LA    R1,LABEL3\n         BSM   0,R1\nLABEL3   DS    0H\n         BR    R14\n***********************************************************************\n*                                                                     *\n*        S T A T I C   A R E A S.                                     *\n*                                                                     *\n***********************************************************************\nMVCDSN   MVC   0(*-*,R2),0(R4)\nMVCMEM   MVC   1(*-*,R2),0(R4)\nJCL      DC    C'//*JCL: '\nJCLISPED DC    C'//*ISPF EDIT OF '\nJCLISPUT DC    C'//*JCL: ISPF UTILITY DATASET'\nJCLEDIT  DC    C'//*TSO EDIT OF '\nJCLPROMP DC    C'//*JCL: INPUT FROM THE TERMINAL'\n         LTORG *\n***********************************************************************\n*                                                                     *\n*        D Y N A M I C   A R E A S.                                   *\n*                                                                     *\n***********************************************************************\nDYNAMIC  DSECT\nSAVE     DS    18F                     SAVEAREA.\nDYNAMEYE DS    CL50\nINSLINE  DS    CL80                    BUFFER.\nSUBTCB   DS    A                       A(SUB TCB).\nUPTPTR   DS    A                       A(UPT).\nPSCBPTR  DS    A                       A(PSCB).\nSUBSAREA DS    A                       A(SUB TABLE).\nEDTPTR   DS    A                       A(ISPF EDIT EDT).\nEWAPTR   DS    A                       A(TSO EDIT EWA).\nCERROR   DS    X                       HAS THERE BEEN A SERIOUS ERROR?\nNO       EQU   1\nYES      EQU   2\nENVTYPE  DS    X                       ENVIRONMENT.\nNOTINIT  EQU   0                       NOT SET.\nSUBMIT   EQU   1\nISPF     EQU   2\nISPFEDIT EQU   3\nEDIT     EQU   4\nDSNTYPE  DS    X                       DSN TYPE.\nPERM     EQU   1\nTEMP     EQU   2\nISPFUTIL EQU   3\nEDITUTIL EQU   4\nNONE     EQU   5\nMSGTYPE  DS    X                       MSG TYPE.\nSUBNAME  EQU   1\nISPENAME EQU   2\nISPUNAME EQU   3\nEDITNAME EQU   4\nPROMPT   EQU   5\nSUBJCL   DS    0CL80\nSVUSERID DS    CL7             SAVE THE SUBMITTING ID  JRC\n         DS    C                                       JRC\nSVSUBCMD DS    CL72\n         DS    CL80            SLUSH STORAGE\nDYNLEN   EQU   *-DYNAMIC\n*\nSAVHSA   EQU   X'04',4,C'A'       SAVE AREA HSA.\nSAVLSA   EQU   X'08',4,C'A'       SAVE AREA LSA.\nSAVR1    EQU   X'18',4,C'A'       PARM PTR IN SAVE AREA.\nSAVR3    EQU   X'20',4,C'A'       EDT POINTER IN SAVE AREA.\nSAVR6    EQU   X'2C',4,C'A'       SUBTAB POINTER IN SAVE AREA.\nSAVR7    EQU   X'30',4,C'A'       CURRENT DAPB POINTER.\nSAVR9    EQU   X'54',4,C'A'       EDIT TABLE POINTER IN SAVE AREA.\nSAVR15   EQU   X'10',4,C'A'       MODULE EP IN SAVE AREA.\nSUBUFPTR EQU   X'38',4,C'A'       DAIR PARAMETER BLOCK POINTER.\nSPFEDFST EQU   X'A60'             FIRST OFFSET TO SCAN.             L05\nSPFEDLST EQU   X'FA0'             LAST OFFSET TO SCAN.              L05\n*              X'B18' IS OFFSET OF CL8'SPFEDIT ' FOR ISPF V4R2.     L05\nEDITDSNL EQU   X'EE',2,C'H'       TSO EDIT DSNAME LENGTH.\nEDITDSN  EQU   X'F0',44,C'C'      TSO EDIT DSNAME.\nEDITMEM  EQU   X'11C',8,C'C'      TSO EDIT MEMBER.\nR0       EQU   00\nR1       EQU   01\nR2       EQU   02\nR3       EQU   03\nR4       EQU   04\nR5       EQU   05\nR6       EQU   06\nR7       EQU   07\nR8       EQU   08\nR9       EQU   09\nR10      EQU   10\nR11      EQU   11                 A(PLIST).\nR12      EQU   12                 PROGRAM BASE.\nR13      EQU   13                 A(SAVE AREA).\nR14      EQU   14\nR15      EQU   15\n         IHAPSA\nP        EQU   PSA\n         IKJTCB\nT        EQU   TCB\n         IKJRB\nRP       EQU   RBPREFIX\nR        EQU   RBSECT\nFLGPRB   EQU   X'E0'                 ITS A PRB.\n         IHACDE\nC        EQU   CDENTRY\n         IKJEFFIE IETYPE=SUBMIT\n         IKJCPPL\n         IKJPSCB\n         IKJUPT\n         IKJDAP08\n         END   &CSECT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT863/FILE863.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT863", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}