{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013456000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE926.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE926.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\n\\x03'", "DS1TRBAL": "b'\\xc4\\x08'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\tY\\x00\\x06\\tZ\\x00\\x01\\x00\\x0b'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04c\\x00V\\x01 \\x02\\x9f\\x01 \\x02\\x9f\\t\"\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf9@@@'", "ispf": {"version": "04.99", "flags": 0, "createdate": "2020-01-29T00:00:00", "modifydate": "2020-01-29T09:22:56", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-499"}, "text": "REGULAR CBT TAPE - VERSION 499    FILE:  926\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT499.FILE926\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 20 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,763 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/29/20    09:22:56    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE926": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04c\\x00P\\x01 \\x02\\x9f\\x01 \\x02\\x9f\\t\"\\x00Q\\x00Q\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf9@@@'", "ispf": {"version": "04.99", "flags": 0, "createdate": "2020-01-29T00:00:00", "modifydate": "2020-01-29T09:22:50", "lines": 81, "newlines": 81, "modlines": 0, "user": "CBT-499"}, "text": "//***FILE 926 is from Philip Polchinski and contains a COBOL        *   FILE 926\n//*           program to figure out amoritization payments,         *   FILE 926\n//*           such as mortgage payments and car payments.           *   FILE 926\n//*                                                                 *   FILE 926\n//*           Compile and execution JCL is included here, as        *   FILE 926\n//*           are load libraries (PDS and PDSE) in XMIT format.     *   FILE 926\n//*                                                                 *   FILE 926\n//*           This program is of general personal value, or it      *   FILE 926\n//*           may also be used by corporate management to figure    *   FILE 926\n//*           estimates for their own use.                          *   FILE 926\n//*                                                                 *   FILE 926\n//*           email:  philmpolchinski@hotmail.com                   *   FILE 926\n//*                                                                 *   FILE 926\n//*           This program is not a system programmer tool per se,  *   FILE 926\n//*           but it will help people with their personal lives,    *   FILE 926\n//*           by helping to calculate how much you'll have to pay   *   FILE 926\n//*           monthly, if you are borrowing a certain amount of     *   FILE 926\n//*           money at a certain rate of interest.  And it runs     *   FILE 926\n//*           on z/OS or earlier MVS systems.                       *   FILE 926\n//*                                                                 *   FILE 926\n//*           Program source is included, in COBOL, as member       *   FILE 926\n//*           AMORT.                                                *   FILE 926\n//*                                                                 *   FILE 926\n//*           Included are three load libraries, PDS for COBOL 4.2  *   FILE 926\n//*           and earlier, and a PDSE loadlib for COBOL 5.1 or      *   FILE 926\n//*           later.  IBM has forced users of COBOL 5.1 to link     *   FILE 926\n//*           its programs into a PDSE load library and not a       *   FILE 926\n//*           PDS load library. ;-)  A load library has now been    *   FILE 926\n//*           included which contains AMORT, compiled on COBOL 5.2. *   FILE 926\n//*           Also, AMORT compiled on COBOL 6.1 and 6.2 and 6.3.    *   FILE 926\n//*                                                                 *   FILE 926\n//*   How to use the AMORT program.                                 *   FILE 926\n//*                                                                 *   FILE 926\n//*   This program creates a payment schedule (for mortgage         *   FILE 926\n//*   or car payments or corporate loan payments or the             *   FILE 926\n//*   like), based on the following factors:                        *   FILE 926\n//*                                                                 *   FILE 926\n//*   1-  The interest rate                                         *   FILE 926\n//*   2-  The amount of the principal                               *   FILE 926\n//*   3-  The amount of each payment                                *   FILE 926\n//*   4-  The total number of (monthly) payments                    *   FILE 926\n//*                                                                 *   FILE 926\n//*   Required for each run:   the interest rate  (ALWAYS NEEDED)   *   FILE 926\n//*                                                                 *   FILE 926\n//*   For the other 3 factors, if you supply two of them, the       *   FILE 926\n//*   program will produce a schedule showing the third             *   FILE 926\n//*   factor.                                                       *   FILE 926\n//*                                                                 *   FILE 926\n//*   Thus, the type of run you want, is classified into three      *   FILE 926\n//*   \"job types\".                                                  *   FILE 926\n//*                                                                 *   FILE 926\n//*   For example:  (Remember that the interest rate ALWAYS         *   FILE 926\n//*                  has to be supplied)                            *   FILE 926\n//*                                                                 *   FILE 926\n//*   Job Type: 1-  Given monthly payment amount and number         *   FILE 926\n//*                 of payments                                     *   FILE 926\n//*                                                                 *   FILE 926\n//*                 Program supplies:   - total principal paid      *   FILE 926\n//*                                                                 *   FILE 926\n//*   Job Type: 2-  Given total principal and number of             *   FILE 926\n//*                 payments                                        *   FILE 926\n//*                                                                 *   FILE 926\n//*                 Program supplies:   - monthly payment amounts   *   FILE 926\n//*                                                                 *   FILE 926\n//*   Job Type: 3-  Given total principal and monthly payment       *   FILE 926\n//*                 amount desired                                  *   FILE 926\n//*                                                                 *   FILE 926\n//*                 Program supplies:   - length of the loan        *   FILE 926\n//*                 (number of payments)                            *   FILE 926\n//*                                                                 *   FILE 926\n//*   Values are entered in the PARM field of the EXEC              *   FILE 926\n//*   statement as shown below.  In addition, you HAVE TO           *   FILE 926\n//*   ENTER THE JOB TYPE as the first parameter (the format         *   FILE 926\n//*   is also shown below, in detail).                              *   FILE 926\n//*                                                                 *   FILE 926\n//*   PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'  pattern of parms   *   FILE 926\n//*   PARM='1--000000000-000060300-02-00-05999'                     *   FILE 926\n//*   PARM='2--000013600-000000000-00-24-05999'                     *   FILE 926\n//*   PARM='3--000013600-000060300-00-00-05999'                     *   FILE 926\n//*   PARM='Z--MMMTTTDDD-MTTTDDDcc-YY-MM-INTER'  format of parms    *   FILE 926\n//*                                                                 *   FILE 926\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "AMORT": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00H\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x10\"\\x01\\xc0\\x01\\xbc\\x00\\x00\\xd7\\xd6\\xd3\\xc3\\xc8\\xc9\\xd5@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T10:22:48", "lines": 448, "newlines": 444, "modlines": 0, "user": "POLCHIN"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.     AMORTIZA.\n      *\n      * AUTHOR:  PHILIP POLCHINSKI\n      *\n      * THIS PROGRAM CREATES A SCHEDULE OF AMORTIZATION PAYMENTS\n      *  WHEN INFORMATION IS SUPPLIED VIA A PARM FIELD AT THE TIME\n      *   OF EXECUTION.  AFTER ALL VALUES HAVE BEEN VERIFIED,\n      *    THE PROGRAM THEN PERFORMS 1 OF 3 DIFFERENT CALCULATIONS:\n      *\n      *  JOB TYPE-1 - CALCULATES THE AMOUNT OF PRINCIPAL TO BE BORROWED\n      *    (WHEN MONTHLY PAYMENT AMOUNT AND # OF PAYMENTS IS PROVIDED)\n      *\n      *  JOB TYPE-2 - CALCULATES THE MONTHLY PAYMENT AMOUNT\n      *    (WHEN PRINCIPAL AND # OF PAYMENTS IS PROVIDED)\n      *\n      *  JOB TYPE-3 - CALCULATES LENGTH OF LOAN IN NUMBER OF PAYMENTS\n      *    (WHEN PRINCIPAL AND MONTHLY PAYMENT AMOUNT IS PROVIDED)\n      *\n      * VALID VALUES MUST ALWAYS APPEAR IN THE PARM AREA\n      *\n      *  1. THE JOB TYPE MUST ALWAYS BE A VALUE OF 1 OR 2 OR 3\n      *      NO EXCEPTIONS\n      *\n      *  2. THE PRINCIPAL MUST ALWAYS BE A 9-DIGIT NUMBER\n      *      IN DOLLARS ONLY    - BUT CAN BE ZERO ONLY WHEN JOB TYPE 1\n      *\n      *  3. THE MONTHLY PAYMENT AMOUNT MUST ALWAYS BE A 9-DIGIT NUMBER\n      *      IN DOLLARS & CENTS - BUT CAN BE ZERO ONLY WHEN JOB TYPE 2\n      *\n      *  4. LENGTH OF LOAN IS TOTAL OF MONTHLY PAYMENTS\n      *      (YEARS PLUS MONTHS)\n      *      BOTH YY & MM MUST BE NUMERIC AND TOTAL CANNOT EXCEED 1200\n      *       BUT CAN BE A TOTAL OF ZERO ONLY WHEN JOB TYPE 3\n      *\n      *  NOTE: LENGTH IS CALCULATED AS YEARS PLUS MONTHS (FOR EXAMPLE)\n      *        2 YRS + 0 MOS = 1 YR + 12 MOS = 0 YRS + 24 MOS\n      *        2 YRS + 6 MOS = 1 YR + 18 MOS = 0 YRS + 30 MOS\n      *\n      *  5. THE ANNUAL INTEREST RATE MUST ALWAYS BE > +0 AND\n      *      MUST RANGE FROM .00001 TO .99999 FOR ALL JOB TYPES\n      *\n      * //JOBCARD AND JCL\n      * //******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n      * // EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n      * //******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n      * //******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n      * //******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDcc-YY-MM-INTER'\n      * //STEPLIB  DD DSN=NAME.OF.LOADLIB.LIBRARY,DISP=SHR\n      * //SYSOUT   DD SYSOUT=*\n      * //SCHEDULE DD SYSOUT=*\n      *\n      * SAMPLE OUTPUT:\n      *\n      * JOB TYPE-1 CALCULATES THE MAXIMUM AMOUNT OF PRINCIPAL\n      * DISPLAY THE PARM FIELD ==> 1--000000000-000060300-02-00-05999\n      * THE PRINCIPAL WILL BE ===>   +13,605.55\n      *  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n      *   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n      *     1       +13,070.57      534.98       68.02     603.00\n      *\n      * JOB TYPE-2 CALCULATES THE AMOUNT OF EACH MONTHLY PAYMENT\n      * DISPLAY THE PARM FIELD ==> 2--000013600-000000000-00-24-05999\n      * THE PAYMENTS WILL BE  ===>                 602.75\n      *  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n      *   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n      *     1       +13,065.24      534.76       67.99     602.75\n      *\n      * JOB TYPE-3 CALCULATES THE NUMBER OF PAYMENTS\n      * DISPLAY THE PARM FIELD ==> 3--000013600-000060300-00-00-05999\n      * >>>>> MAX DOWN TO FIND THE NUMBER OF PAYMENTS  >>>>>\n      *  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n      *   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n      *     1       +13,064.99      535.01       67.99     603.00\n      *\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PAYMENT-SCHEDULE   ASSIGN TO UT-S-SCHEDULE.\n\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PAYMENT-SCHEDULE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-RECORD.\n           05 PRINT-CC            PIC  X(1).\n           05 PRINT-LINE          PIC  X(132).\n\n       WORKING-STORAGE SECTION.\n\n       01  HEADER-LINE-1.\n           05 FILLER           PIC  X(1)       VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'PAYMENT'.\n           05 FILLER           PIC  X(10)      VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'BALANCE'.\n           05 FILLER           PIC  X(11)      VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'CURRENT'.\n           05 FILLER           PIC  X(9)       VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'CURRENT'.\n           05 FILLER           PIC  X(9)       VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'CURRENT'.\n           05 FILLER           PIC  X(4)       VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE SPACE.\n           05 FILLER           PIC  X(10)      VALUE 'CUMULATIVE'.\n           05 FILLER           PIC  X(7)       VALUE SPACE.\n           05 FILLER           PIC  X(10)      VALUE 'CUMULATIVE'.\n           05 FILLER           PIC  X(7)       VALUE SPACE.\n           05 FILLER           PIC  X(10)      VALUE 'CUMULATIVE'.\n           05 FILLER           PIC  X(2)       VALUE SPACE.\n\n       01  HEADER-LINE-2.\n           05 FILLER           PIC  X(2)       VALUE SPACE.\n           05 FILLER           PIC  X(6)       VALUE 'NUMBER'.\n           05 FILLER           PIC  X(8)       VALUE SPACE.\n           05 FILLER           PIC  X(9)       VALUE 'REMAINING'.\n           05 FILLER           PIC  X(9)       VALUE SPACE.\n           05 FILLER           PIC  X(9)       VALUE 'PRINCIPAL'.\n           05 FILLER           PIC  X(8)       VALUE SPACE.\n           05 FILLER           PIC  X(8)       VALUE 'INTEREST'.\n           05 FILLER           PIC  X(9)       VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'PAYMENT'.\n           05 FILLER           PIC  X(4)       VALUE SPACE.\n           05 FILLER           PIC  X(8)       VALUE SPACE.\n           05 FILLER           PIC  X(9)       VALUE 'PRINCIPAL'.\n           05 FILLER           PIC  X(9)       VALUE SPACE.\n           05 FILLER           PIC  X(8)       VALUE 'INTEREST'.\n           05 FILLER           PIC  X(10)      VALUE SPACE.\n           05 FILLER           PIC  X(7)       VALUE 'PAYMENT'.\n           05 FILLER           PIC  X(2)       VALUE SPACE.\n\n       01  DETAIL-LINE.\n           05 FILLER            PIC  X(1)       VALUE SPACE.\n           05 PRINT-PAY-NUMBER  PIC  ZZZZ9.\n           05 FILLER            PIC  X(2)       VALUE SPACE.\n           05 FILLER            PIC  X(2)       VALUE SPACE.\n           05 PRINT-REM-BAL     PIC  ++++,+++,++9.99.\n           05 FILLER            PIC  X(4)       VALUE SPACE.\n           05 PRINT-CUR-PRIN    PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(2)       VALUE SPACE.\n           05 PRINT-CUR-INT     PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(2)       VALUE SPACE.\n           05 PRINT-CUR-PAY     PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(4)       VALUE SPACE.\n           05 FILLER            PIC  X(3)       VALUE SPACE.\n           05 PRINT-CUM-PRIN    PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(3)       VALUE SPACE.\n           05 PRINT-CUM-INT     PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(3)       VALUE SPACE.\n           05 PRINT-CUM-PAY     PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(2)       VALUE SPACE.\n\n       01  JOB-LINE-1.\n           05 FILLER            PIC  X(28)      VALUE\n             'THE PRINCIPAL WILL BE  ===> '.\n           05 PRINT-CALC-PRIN   PIC  ++++,+++,++9.99.\n           05 FILLER            PIC  X(89)      VALUE SPACE.\n\n       01  JOB-LINE-2.\n           05 FILLER            PIC  X(28)      VALUE\n             'THE PAYMENTS WILL BE   ===> '.\n           05 FILLER            PIC  X(11)      VALUE SPACE.\n           05 PRINT-CALC-PAY    PIC  ZZZ,ZZZ,ZZ9.99.\n           05 FILLER            PIC  X(79)      VALUE SPACE.\n\n       01  JOB-LINE-3.\n           05 FILLER            PIC  X(07)      VALUE\n              '>>>>>  '.\n           05 FILLER            PIC  X(46)      VALUE\n              'MAX DOWN TO FIND THE NUMBER OF PAYMENTS  >>>>>'.\n           05 FILLER            PIC  X(79)      VALUE SPACE.\n\n       01  PARM-LINE.\n           05 FILLER            PIC  X(31)      VALUE\n              'DISPLAY THE PARM FIELD ===>    '.\n           05 PRINT-PARM-FIELD  PIC  X(34)      VALUE SPACE.\n           05 FILLER            PIC  X(67)      VALUE SPACE.\n\n       01  WS-PARM-DATA.\n           03 JOB-TYPE          PIC  9(1).\n           03 FILLER            PIC  X(2).\n           03 PARM-PRINCIPAL    PIC  9(9).\n           03 FILLER            PIC  X(1).\n           03 PARM-PAYMENTS     PIC  9(7)V9(2).\n           03 FILLER            PIC  X(1).\n           03 PARM-YEARS        PIC  9(2).\n           03 FILLER            PIC  X(1).\n           03 PARM-MONTHS       PIC  9(2).\n           03 FILLER            PIC  X(1).\n           03 PARM-RATE         PIC  9(5).\n\n       01  WORK-AREA-1.\n           03 LINE-CTR          PIC  9(3)       COMP-3 VALUE 48.\n           03 TOTAL-MONTHS      PIC  9(5)       COMP-3 VALUE 0.\n           03 PAYMENT-NUMBER    PIC  9(5)       COMP-3 VALUE 0.\n           03 TEMP-CALC         PIC  9(2)V9(7)  COMP-3 VALUE 0.\n           03 MONTHLY-RATE      PIC  9(2)V9(7)  COMP-3 VALUE 0.\n           03 POINT-09          PIC  9(2)V9(5)  COMP-3 VALUE .09.\n           03 POINT-00001       PIC  9(2)V9(5)  COMP-3 VALUE .00001.\n           03 WS-REM-BAL        PIC S9(9)V9(2)  COMP-3 VALUE +0.\n           03 WS-CUR-PRIN       PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 WS-CUR-INT        PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 WS-CUR-PAY        PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 WS-CUM-PRIN       PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 WS-CUM-INT        PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 WS-CUM-PAY        PIC S9(9)V9(2)  COMP-3 VALUE 0.\n           03 LOW-BAL-AMOUNT    PIC S9(9)V9(2)  COMP-3 VALUE 0.\n\n       LINKAGE SECTION.\n       01  PARM.\n           03 PARM-LENGTH         PIC S9(4)       COMP.\n           03 PARM-DATA           PIC  X(34).\n\n       PROCEDURE DIVISION USING PARM.\n\n           PERFORM 0100-VERIFY-ALL-PARM-VALUES\n           PERFORM 0200-CONFIRM-JOB-TYPE\n           PERFORM 0300-PRINT-THE-PAY-SCHEDULE\n            VARYING PAYMENT-NUMBER\n             FROM 1 BY 1\n              UNTIL WS-REM-BAL = +0\n           PERFORM 0600-SUCCESSFUL.\n\n       0100-VERIFY-ALL-PARM-VALUES.\n\n           OPEN OUTPUT PAYMENT-SCHEDULE\n           MOVE PARM-DATA TO WS-PARM-DATA PRINT-PARM-FIELD\n\n           IF JOB-TYPE NUMERIC\n              IF JOB-TYPE = 1 OR 2 OR 3\n                 CONTINUE\n              ELSE\n                 PERFORM 0700-NOT-SUCCESSFUL-1\n              END-IF\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF PARM-PRINCIPAL NUMERIC\n              CONTINUE\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF PARM-PAYMENTS NUMERIC\n              CONTINUE\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF PARM-YEARS NUMERIC\n              CONTINUE\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF PARM-MONTHS NUMERIC\n              CONTINUE\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF PARM-RATE NUMERIC\n              IF PARM-RATE > 0\n                 CONTINUE\n              ELSE\n                 PERFORM 0700-NOT-SUCCESSFUL-1\n              END-IF\n           ELSE\n              PERFORM 0700-NOT-SUCCESSFUL-1\n           END-IF\n\n           IF JOB-TYPE = 1\n              IF PARM-PAYMENTS > 0\n                 IF PARM-YEARS > 0 OR PARM-MONTHS > 0\n                    CONTINUE\n                 ELSE\n                    PERFORM 0700-NOT-SUCCESSFUL-1\n                 END-IF\n              ELSE\n                 PERFORM 0700-NOT-SUCCESSFUL-1\n              END-IF\n           END-IF\n\n           IF JOB-TYPE = 2\n              IF PARM-PRINCIPAL > 0\n                 IF PARM-YEARS > 0 OR PARM-MONTHS > 0\n                    CONTINUE\n                 ELSE\n                    PERFORM 0700-NOT-SUCCESSFUL-1\n                 END-IF\n              ELSE\n                 PERFORM 0700-NOT-SUCCESSFUL-1\n              END-IF\n           END-IF\n\n           IF JOB-TYPE = 3\n              IF PARM-PRINCIPAL > 0\n                 IF PARM-PAYMENTS > 0\n                    CONTINUE\n                 ELSE\n                    PERFORM 0700-NOT-SUCCESSFUL-1\n                 END-IF\n              ELSE\n                 PERFORM 0700-NOT-SUCCESSFUL-1\n              END-IF\n           END-IF.\n\n       0200-CONFIRM-JOB-TYPE.\n\n           MOVE SPACE TO PRINT-LINE\n           MOVE '1' TO PRINT-CC\n           WRITE PRINT-RECORD\n\n           MOVE PARM-LINE TO PRINT-LINE\n           MOVE '-' TO PRINT-CC\n           WRITE PRINT-RECORD\n\n           COMPUTE MONTHLY-RATE = (PARM-RATE * POINT-00001) / 12\n\n           IF JOB-TYPE = 3\n            MOVE PARM-PRINCIPAL TO WS-REM-BAL\n            MOVE PARM-PAYMENTS TO WS-CUR-PAY\n            MOVE JOB-LINE-3 TO PRINT-LINE\n            MOVE ' ' TO PRINT-CC\n            WRITE PRINT-RECORD\n           ELSE\n            COMPUTE TOTAL-MONTHS = (PARM-YEARS * 12) + PARM-MONTHS\n            COMPUTE TEMP-CALC = (1 + MONTHLY-RATE) ** TOTAL-MONTHS\n           END-IF\n\n           IF JOB-TYPE = 2\n            MOVE PARM-PRINCIPAL TO WS-REM-BAL\n            COMPUTE WS-CUR-PAY ROUNDED =\n             (WS-REM-BAL * MONTHLY-RATE * TEMP-CALC) / (TEMP-CALC - 1)\n            MOVE WS-CUR-PAY TO PRINT-CALC-PAY\n            MOVE JOB-LINE-2 TO PRINT-LINE\n            MOVE ' ' TO PRINT-CC\n            WRITE PRINT-RECORD\n           END-IF\n\n           IF JOB-TYPE = 1\n            MOVE PARM-PAYMENTS TO WS-CUR-PAY\n            COMPUTE WS-REM-BAL ROUNDED =\n            (WS-CUR-PAY * (TEMP-CALC - 1)) / (MONTHLY-RATE * TEMP-CALC)\n            MOVE WS-REM-BAL TO PRINT-CALC-PRIN\n            MOVE JOB-LINE-1 TO PRINT-LINE\n            MOVE ' ' TO PRINT-CC\n            WRITE PRINT-RECORD\n           END-IF\n\n           COMPUTE LOW-BAL-AMOUNT = WS-CUR-PAY * POINT-09.\n\n       0300-PRINT-THE-PAY-SCHEDULE.\n\n           IF PAYMENT-NUMBER > 1200\n            PERFORM 0800-NOT-SUCCESSFUL-2\n           END-IF\n\n           COMPUTE WS-CUR-INT ROUNDED =  WS-REM-BAL * MONTHLY-RATE\n\n           IF WS-CUR-INT > WS-CUR-PAY\n              PERFORM 0900-NOT-SUCCESSFUL-3\n           END-IF\n\n           COMPUTE WS-CUR-PRIN = WS-CUR-PAY - WS-CUR-INT\n\n           IF WS-CUR-PRIN > WS-REM-BAL\n              MOVE WS-REM-BAL TO WS-CUR-PRIN\n              MOVE +0 TO WS-REM-BAL\n              COMPUTE WS-CUR-PAY = WS-CUR-PRIN + WS-CUR-INT\n           ELSE\n              SUBTRACT WS-CUR-PRIN FROM WS-REM-BAL\n              IF WS-REM-BAL > +0\n                 IF WS-REM-BAL < LOW-BAL-AMOUNT\n                    ADD WS-REM-BAL TO WS-CUR-PRIN\n                    MOVE +0 TO WS-REM-BAL\n                    COMPUTE WS-CUR-PAY = WS-CUR-PRIN + WS-CUR-INT\n                 END-IF\n              END-IF\n           END-IF\n\n           ADD WS-CUR-PRIN TO WS-CUM-PRIN\n           ADD WS-CUR-INT  TO WS-CUM-INT\n           ADD WS-CUR-PAY  TO WS-CUM-PAY\n\n           MOVE PAYMENT-NUMBER TO PRINT-PAY-NUMBER\n           MOVE WS-REM-BAL     TO PRINT-REM-BAL\n           MOVE WS-CUR-PRIN    TO PRINT-CUR-PRIN\n           MOVE WS-CUR-INT     TO PRINT-CUR-INT\n           MOVE WS-CUR-PAY     TO PRINT-CUR-PAY\n           MOVE WS-CUM-PRIN    TO PRINT-CUM-PRIN\n           MOVE WS-CUM-INT     TO PRINT-CUM-INT\n           MOVE WS-CUM-PAY     TO PRINT-CUM-PAY\n\n           IF LINE-CTR = 48\n              MOVE HEADER-LINE-1 TO PRINT-LINE\n              MOVE '1' TO PRINT-CC\n              WRITE PRINT-RECORD\n              MOVE HEADER-LINE-2 TO PRINT-LINE\n              MOVE ' ' TO PRINT-CC\n              WRITE PRINT-RECORD\n              MOVE SPACE TO PRINT-LINE\n              MOVE ' ' TO PRINT-CC\n              WRITE PRINT-RECORD\n              MOVE 0 TO LINE-CTR\n           END-IF\n\n           MOVE DETAIL-LINE TO PRINT-LINE\n           MOVE ' ' TO PRINT-CC\n           WRITE PRINT-RECORD\n           ADD 1 TO LINE-CTR.\n\n       0600-SUCCESSFUL.\n           DISPLAY '*********************************'\n           DISPLAY '** THIS EXAMPLE WAS SUCCESSFUL **'\n           DISPLAY '*********************************'\n           CLOSE PAYMENT-SCHEDULE\n           STOP RUN.\n\n       0700-NOT-SUCCESSFUL-1.\n           DISPLAY '************************************************'\n           DISPLAY '** THIS EXAMPLE WAS NOT SUCCESSFUL BECAUSE'\n           DISPLAY '**  INVALID VALUES EXIST IN THE PARM FIELD'\n           DISPLAY WS-PARM-DATA\n           DISPLAY '************************************************'\n           CLOSE PAYMENT-SCHEDULE\n           STOP RUN.\n\n       0800-NOT-SUCCESSFUL-2.\n           DISPLAY '************************************************'\n           DISPLAY '** THIS EXAMPLE WAS NOT SUCCESSFUL BECAUSE'\n           DISPLAY '**  TOTAL MONTHLY REPAYMENTS EXCEED 1200'\n           DISPLAY '**   CURRENT PAYMENT NUMBER ==> ' PAYMENT-NUMBER\n           DISPLAY '************************************************'\n           CLOSE PAYMENT-SCHEDULE\n           STOP RUN.\n\n       0900-NOT-SUCCESSFUL-3.\n           DISPLAY '************************************************'\n           DISPLAY '** THIS EXAMPLE WAS NOT SUCCESSFUL BECAUSE'\n           DISPLAY '**  CURRENT INTEREST EXCEEDS PAYMENT AMOUNT DUE'\n           DISPLAY '**   INTEREST DUE =====> ' WS-CUR-INT\n           DISPLAY '**   PAYMENT DUE ======> ' WS-CUR-PAY\n           DISPLAY '************************************************'\n           CLOSE PAYMENT-SCHEDULE\n           STOP RUN.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "AMORTHLP": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x142\\x00l\\x00F\\x00\\x00\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T14:32:11", "lines": 108, "newlines": 70, "modlines": 0, "user": "HELP"}, "text": "How to use the AMORT program.\n\nThis program creates a payment schedule (for a mortgage or car\npayments or corporate loan payments or the like), based on the\nfollowing factors:\n\n1-  The interest rate\n2-  The amount of the principal\n3-  The amount of each payment\n4-  The total number of (monthly) payments\n\nRequired for each run:   the interest rate\n\nFor the other 3 factors, if you supply two of them, the program\nwill produce a schedule showing the third factor.\n\nThus, the type of run you want, is classified into \"Job type\".\n\nFor example:  (Remember that the interest rate ALWAYS has to be\n               supplied)\n\nJob Type: 1-  Given monthly payment amount and number of payments\n              Program supplies:   - total principal paid\n\nJob Type: 2-  Given total principal and number of payments\n              Program supplies:   - monthly payment amounts\n\nJob Type: 3-  Given total principal and monthly payment amount\n              desired\n              Program supplies:   - length of the loan\n              (number of payments)\n\nValues are entered in the PARM field of the EXEC statement as\nshown below.  In addition, you HAVE TO ENTER THE JOB TYPE as the\nfirst parameter (the format is also shown below, in detail).\n\nAuthor's further description:\n\n THIS PROGRAM CREATES A SCHEDULE OF AMORTIZATION PAYMENTS\n  WHEN INFORMATION IS SUPPLIED VIA A PARM FIELD AT THE TIME\n   OF EXECUTION.  AFTER ALL VALUES HAVE BEEN VERIFIED,\n    THE PROGRAM THEN PERFORMS 1 OF 3 DIFFERENT CALCULATIONS:\n\n  JOB TYPE-1 - CALCULATES THE AMOUNT OF PRINCIPAL TO BE BORROWED\n    (WHEN MONTHLY PAYMENT AMOUNT AND # OF PAYMENTS IS PROVIDED)\n\n  JOB TYPE-2 - CALCULATES THE MONTHLY PAYMENT AMOUNT\n    (WHEN PRINCIPAL AND # OF PAYMENTS IS PROVIDED)\n\n  JOB TYPE-3 - CALCULATES LENGTH OF LOAN IN NUMBER OF PAYMENTS\n    (WHEN PRINCIPAL AND MONTHLY PAYMENT AMOUNT IS PROVIDED)\n\n VALID VALUES MUST ALWAYS APPEAR IN THE PARM AREA\n\n  1. THE JOB TYPE MUST ALWAYS BE A VALUE OF 1 OR 2 OR 3\n      NO EXCEPTIONS\n\n  2. THE PRINCIPAL MUST ALWAYS BE A 9-DIGIT NUMBER\n      IN DOLLARS ONLY    - BUT CAN BE ZERO ONLY WHEN JOB TYPE 1\n\n  3. THE MONTHLY PAYMENT AMOUNT MUST ALWAYS BE A 9-DIGIT NUMBER\n      IN DOLLARS & CENTS - BUT CAN BE ZERO ONLY WHEN JOB TYPE 2\n\n  4. LENGTH OF LOAN IS TOTAL OF MONTHLY PAYMENTS\n      (YEARS PLUS MONTHS)\n      BOTH YY & MM MUST BE NUMERIC AND TOTAL CANNOT EXCEED 1200\n       BUT CAN BE A TOTAL OF ZERO ONLY WHEN JOB TYPE 3\n\n  NOTE: LENGTH IS CALCULATED AS YEARS PLUS MONTHS (FOR EXAMPLE)\n        2 YRS + 0 MOS = 1 YR + 12 MOS = 0 YRS + 24 MOS\n        2 YRS + 6 MOS = 1 YR + 18 MOS = 0 YRS + 30 MOS\n\n  5. THE ANNUAL INTEREST RATE MUST ALWAYS BE > +0 AND\n      MUST RANGE FROM .00001 TO .99999 FOR ALL JOB TYPES\n\n //JOBCARD AND JCL\n //******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n // EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n //******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n //******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n //******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDcc-YY-MM-INTER'\n //STEPLIB  DD DSN=NAME.OF.LOADLIB.LIBRARY,DISP=SHR\n //SYSOUT   DD SYSOUT=*\n //SCHEDULE DD SYSOUT=*\n\n SAMPLE OUTPUT:\n\n JOB TYPE-1 CALCULATES THE MAXIMUM AMOUNT OF PRINCIPAL\n DISPLAY THE PARM FIELD ==> 1--000000000-000060300-02-00-05999\n THE PRINCIPAL WILL BE ===>   +13,605.55\n  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n     1       +13,070.57      534.98       68.02     603.00\n\n JOB TYPE-2 CALCULATES THE AMOUNT OF EACH MONTHLY PAYMENT\n DISPLAY THE PARM FIELD ==> 2--000013600-000000000-00-24-05999\n THE PAYMENTS WILL BE  ===>                 602.75\n  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n     1       +13,065.24      534.76       67.99     602.75\n\n JOB TYPE-3 CALCULATES THE NUMBER OF PAYMENTS\n DISPLAY THE PARM FIELD ==> 3--000013600-000060300-00-00-05999\n >>>>> MAX DOWN TO FIND THE NUMBER OF PAYMENTS  >>>>>\n  PAYMENT       BALANCE     CURRENT     CURRENT    CURRENT\n   NUMBER     REMAINING   PRINCIPAL    INTEREST    PAYMENT\n     1       +13,064.99      535.01       67.99     603.00\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "AMORTJ1": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x12&\\x00\\r\\x00\\x07\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T12:26:41", "lines": 13, "newlines": 7, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//AMORT1 EXEC PGM=AMORT,PARM='1--000000000-000060300-02-00-05999'\n//STEPLIB  DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//SYSOUT   DD SYSOUT=*\n//SCHEDULE DD SYSOUT=*\n//\n//******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n// EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n//******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n//******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n//******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDCC-YY-MM-INTER'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMORTJ2": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x10$\\x00\\r\\x00\\x07\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T10:24:13", "lines": 13, "newlines": 7, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//AMORT1 EXEC PGM=AMORT,PARM='2--000013600-000000000-00-24-05999'\n//STEPLIB  DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//SYSOUT   DD SYSOUT=*\n//SCHEDULE DD SYSOUT=*\n//\n//******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n// EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n//******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n//******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n//******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDCC-YY-MM-INTER'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMORTJ3": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x003\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x10&\\x00\\r\\x00\\x07\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T10:26:33", "lines": 13, "newlines": 7, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//AMORT1 EXEC PGM=AMORT,PARM='3--000013600-000060300-00-00-05999'\n//STEPLIB  DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//SYSOUT   DD SYSOUT=*\n//SCHEDULE DD SYSOUT=*\n//\n//******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n// EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n//******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n//******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n//******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDCC-YY-MM-INTER'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMORTK3": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x000\\x01\\x15\\x00\\x8f\\x01 \\x02\\x9f\\t\\t\\x00\\r\\x00\\x07\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2020-01-29T09:09:30", "lines": 13, "newlines": 7, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//AMORT1 EXEC PGM=AMORT,PARM='3--000013600-000060300-00-00-05999'\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.AMORT.LOAD63.PDSE\n//SYSOUT   DD SYSOUT=*\n//SCHEDULE DD SYSOUT=*\n//\n//******PGM=PROGNAME,PARM='Z--PRINCIPAL-PAYMENTCC-YY-MM-INTER'\n// EXEC PGM=PROGNAME,PARM='1--000000000-000060300-02-00-05999'\n//******PGM=PROGNAME,PARM='2--000013600-000000000-00-24-05999'\n//******PGM=PROGNAME,PARM='3--000013600-000060300-00-00-05999'\n//******PGM=PROGNAME,PARM='Z--MMMTTTDDD-MTTTDDDCC-YY-MM-INTER'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGYWCL": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x16\\x00\\x98)_\\x01\\x15\\x00\\x8f\\x120\\x00/\\x003\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1998-10-22T00:00:00", "modifydate": "2015-01-08T12:30:16", "lines": 47, "newlines": 51, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBP  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//IGYWCL PROC SYSLBLK=3200,LNGPRFX='IGY420',    <-- COMPILER LEVEL\n//            PGMLIB='&&GOSET',GOPGM=GO\n//*\n//* IBM COBOL FOR MVS & VM\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  RELEASE LEVEL: 01.02.00  (VERSION.RELEASE.MODIFICATION LEVEL)\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY420           PREFIX FOR LANGUAGE DATA SET NAMES\n//*   SYSLBLK   3200             BLOCKSIZE FOR OBJECT DATA SET\n//*   LIBPRFX   CEE.V1R5M0       PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=3072K\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DISP=SHR,DSN=CEE.SCEERUN\n//         DD  DISP=SHR,DSN=CEE.SCEERUN2\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(3,3)),\n//             DCB=(BLKSIZE=&SYSLBLK)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=HEWL,COND=(8,LT,COBOL),REGION=1024K\n//SYSLIB   DD  DSNAME=CEE.SCEELKED,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT490.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGYWCL51": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x08\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x122\\x00=\\x006\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T12:32:08", "lines": 61, "newlines": 54, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBC  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*  Note:  In order to use COBOL 5.1, the output load library\n//*         must be a PDSE and not a PDS.  IBM says \"sorry about\n//*         that\"!  Use an earlier version of COBOL (4.2 and\n//*         before) if your load library is a PDS.\n//*\n//IGYWCL PROC  LNGPRFX='IGY510',\n//             LIBPRFX='CEE',\n//             PGMLIB='&&GOSET',GOPGM=GO\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V5R1M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//*  CALLER MUST SUPPLY //COBOL.SYSIN DD ...\n//*\n//*  CALLER MUST ALSO SUPPLY //COBOL.SYSLIB DD ... for COPY statements\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN2,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSALLDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT8   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT9   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT10  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT11  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT12  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT13  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT14  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT15  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSMDECK DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=IEWL,COND=(8,LT,COBOL),REGION=0M\n//SYSLIB   DD  DSNAME=&LIBPRFX..SCEELKED,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEELKEX,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD.PDSE',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT490.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGYWCL52": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x13\\x01\\x15\\x00\\x8f\\x01\\x155\\x8f\"1\\x00=\\x006\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-12-24T22:31:13", "lines": 61, "newlines": 54, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBC  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*  Note:  In order to use COBOL 5.2, the output load library\n//*         must be a PDSE and not a PDS.  IBM says \"sorry about\n//*         that\"!  Use an earlier version of COBOL (4.2 and\n//*         before) if your load library is a PDS.\n//*\n//IGYWCL PROC  LNGPRFX='IGY520',\n//             LIBPRFX='CEE',\n//             PGMLIB='&&GOSET',GOPGM=GO\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V5R2M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//*  CALLER MUST SUPPLY //COBOL.SYSIN DD ...\n//*\n//*  CALLER MUST ALSO SUPPLY //COBOL.SYSLIB DD ... for COPY statements\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN2,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSALLDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT8   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT9   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT10  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT11  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT12  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT13  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT14  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT15  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSMDECK DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=IEWL,COND=(8,LT,COBOL),REGION=0M\n//SYSLIB   DD  DSNAME=&LIBPRFX..SCEELKED,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEELKEX,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD52.PDSE',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT491.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGYWCL61": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x02\\x01\\x15\\x00\\x8f\\x01\\x180\\x1f\\tI\\x00=\\x006\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2018-10-28T09:49:02", "lines": 61, "newlines": 54, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBC  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*  Note:  In order to use COBOL 6.1, the output load library\n//*         must be a PDSE and not a PDS.  IBM says \"sorry about\n//*         that\"!  Use an earlier version of COBOL (4.2 and\n//*         before) if your load library is a PDS.\n//*\n//IGYWCL PROC  LNGPRFX='IGY610',\n//             LIBPRFX='CEE',\n//             PGMLIB='&&GOSET',GOPGM=GO\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V6R1M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//*  CALLER MUST SUPPLY //COBOL.SYSIN DD ...\n//*\n//*  CALLER MUST ALSO SUPPLY //COBOL.SYSLIB DD ... for COPY statements\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN2,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSALLDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT8   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT9   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT10  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT11  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT12  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT13  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT14  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT15  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSMDECK DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=IEWL,COND=(8,LT,COBOL),REGION=0M\n//SYSLIB   DD  DSNAME=&LIBPRFX..SCEELKED,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEELKEX,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD61.PDSE',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT496.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGYWCL62": {"ttr": 788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00!\\x01\\x15\\x00\\x8f\\x01 \\x02\\x9f\\t\\x06\\x00=\\x006\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2020-01-29T09:06:21", "lines": 61, "newlines": 54, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBC  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*  Note:  In order to use COBOL 6.2, the output load library\n//*         must be a PDSE and not a PDS.  IBM says \"sorry about\n//*         that\"!  Use an earlier version of COBOL (4.2 and\n//*         before) if your load library is a PDS.\n//*\n//IGYWCL PROC  LNGPRFX='IGY620',\n//             LIBPRFX='CEE',\n//             PGMLIB='&&GOSET',GOPGM=GO\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V6R1M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//*  CALLER MUST SUPPLY //COBOL.SYSIN DD ...\n//*\n//*  CALLER MUST ALSO SUPPLY //COBOL.SYSLIB DD ... for COPY statements\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN2,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSALLDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT8   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT9   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT10  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT11  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT12  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT13  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT14  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT15  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSMDECK DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=IEWL,COND=(8,LT,COBOL),REGION=0M\n//SYSLIB   DD  DSNAME=&LIBPRFX..SCEELKED,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEELKEX,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD62.PDSE',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT499.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGYWCL63": {"ttr": 790, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00X\\x01\\x15\\x00\\x8f\\x01 \\x02\\x9f\\t\\x03\\x00=\\x006\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2020-01-29T09:03:58", "lines": 61, "newlines": 54, "modlines": 0, "user": "COMPILE"}, "text": "//SBGOLOBC  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*  Note:  In order to use COBOL 6.3, the output load library\n//*         must be a PDSE and not a PDS.  IBM says \"sorry about\n//*         that\"!  Use an earlier version of COBOL (4.2 and\n//*         before) if your load library is a PDS.\n//*\n//IGYWCL PROC  LNGPRFX='IGY630',\n//             LIBPRFX='CEE',\n//             PGMLIB='&&GOSET',GOPGM=GO\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V6R1M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//*  CALLER MUST SUPPLY //COBOL.SYSIN DD ...\n//*\n//*  CALLER MUST ALSO SUPPLY //COBOL.SYSLIB DD ... for COPY statements\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=0M\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEERUN2,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSALLDA,\n//             DISP=(MOD,PASS),SPACE=(CYL,(1,1))\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT8   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT9   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT10  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT11  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT12  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT13  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT14  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT15  DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSMDECK DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=IEWL,COND=(8,LT,COBOL),REGION=0M\n//SYSLIB   DD  DSNAME=&LIBPRFX..SCEELKED,DISP=SHR\n//         DD  DSNAME=&LIBPRFX..SCEELKEX,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.AMORT.LOAD63.PDSE',\n//       GOPGM=AMORT\n//COBOL.SYSIN DD DSN=SBGOLOB.CBT499.FILE926(AMORT),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOADLIB": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04\\x02\\x00\\x00\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x129\\x01\\xc9\\x01\\xc9\\x00\\x00\\xd7\\xc4\\xe2@@@@@@@'", "ispf": {"version": "04.02", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T12:39:00", "lines": 457, "newlines": 457, "modlines": 0, "user": "PDS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADPD51": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x01\\x00\\x00\\x01\\x15\\x00\\x8f\\x01\\x15\\x00\\x8f\\x129\\x02\\xb4\\x02\\xb4\\x00\\x00\\xd7\\xc4\\xe2\\xc5@@@@@@'", "ispf": {"version": "05.01", "flags": 0, "createdate": "2015-01-08T00:00:00", "modifydate": "2015-01-08T12:39:00", "lines": 692, "newlines": 692, "modlines": 0, "user": "PDSE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADPD52": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x02\\x00\\x14\\x01\\x155\\x8f\\x01\\x155\\x8f\"5\\x02\\xb4\\x02\\xb4\\x00\\x00\\xd7\\xc4\\xe2\\xc5@@@@@@'", "ispf": {"version": "05.02", "flags": 0, "createdate": "2015-12-24T00:00:00", "modifydate": "2015-12-24T22:35:14", "lines": 692, "newlines": 692, "modlines": 0, "user": "PDSE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADPD61": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x06\\x01\\x00\\x03\\x01\\x16\\x14\\x7f\\x01\\x16\\x14\\x7f\\x19\\x05\\x02M\\x02M\\x00\\x00\\xd7\\xc4\\xe2\\xc5@@@@@@'", "ispf": {"version": "06.01", "flags": 0, "createdate": "2016-05-26T00:00:00", "modifydate": "2016-05-26T19:05:03", "lines": 589, "newlines": 589, "modlines": 0, "user": "PDSE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADPD62": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x06\\x02\\x006\\x01\\x180\\x1f\\x01\\x180\\x1f\\tU\\x02\\x80\\x02\\x80\\x00\\x00\\xd7\\xc4\\xe2\\xc5@@@@@@'", "ispf": {"version": "06.02", "flags": 0, "createdate": "2018-10-28T00:00:00", "modifydate": "2018-10-28T09:55:36", "lines": 640, "newlines": 640, "modlines": 0, "user": "PDSE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADPD63": {"ttr": 2307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x06\\x03\\x00\\x15\\x01 \\x02\\x9f\\x01 \\x02\\x9f\\t\\x15\\x02\\x80\\x02\\x80\\x00\\x00\\xd7\\xc4\\xe2\\xc5@@@@@@'", "ispf": {"version": "06.03", "flags": 0, "createdate": "2020-01-29T00:00:00", "modifydate": "2020-01-29T09:15:15", "lines": 640, "newlines": 640, "modlines": 0, "user": "PDSE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT926/FILE926.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT926", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}