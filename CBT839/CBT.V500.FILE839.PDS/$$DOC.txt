      Long Parameters and Symbolic Parameter replacement
                in card image control cards.

The following programs are now available that will allow the
above to happen, using conventional JCL or TSO.

1. EXECLONG will execute a program with up to 3,000 bytes as a
   parameter.

2. PARMCNTL creates either Fixed or Variable blocked control file
   from a Parameter, or other control file.

3. SAVEPARM saves parameters into a VB file which is used by
   EXECLONG and/or PARMCNTL above.

Further Description:

1. EXECLONG executes the program specified with the
   PARM='PGM=program-name'.  It first reads a VB file allocated
   with a DDNAME of $$PARM, and creates a standard parameter of
   up to 3,000 bytes.

   Standard APF facilities are used, so Authorised or
   Non-Authorised programs may be used.

2. PARMCNTL creates either FB or VB control files from either the
   VB $$PARM file.

   PARMCNTL creates a file using the $$CNTL file.  It either
   takes it's input from the parameter field, or, if that is
   null, it reads from the $$PARM file.

   New control cards are created on finding a LF (X'25')
   character, or <p>.

   After forming up the parameter fields or the records from the
   $$PARM DD File, the following parameters are allowed:

      PGM=program-name  - Program to be executed.
      DDN=ddname        - Instead of the $$CNTL,
                          use ddsname instead.
      PARM='parameter'  - Use this parameter.
                          Quotes are not allowed.

3. SAVEPARM appends it's parameter to the VB $$PARM file.
   Symbolic parameters may be used in the PGM PARM field, and
   hence can be used by the PARMCNTL program to create control
   files with symbolic parameters replaced.


Examples.

1. Execute a program with a long parameter:

//EXEC01    EXEC PGM=SAVEPARM,
// PARM='Start of a long parameter.  It can have symbolics, too. '
//$$PARM    DD  DSN=&&PARM,DCB=(RECFM=VB,LRECL=255,BLKSIZE=3200),
//              UNIT=SYSDA,SPACE=(TRK,10),
//              DISP=(NEW,PASS)
//EXEC02    EXEC PGM=SAVEPARM,
// PARM='This is the second part of the long parameter.'
//$$PARM    DD  DSN=&&PARM, DISP=(OLD,PASS)
//*
//EXEC03    EXEC PGM=EXECLONG,
// PARM='PGM=xyz'
//$$PARM    DD  DSN=&&PARM, DISP=(OLD,DELETE)

This executes program xyz, with the parameters formed from the
$$PARM file.

2. Create Control card from parameters.

Note the use of the Symbolic in the Parm Field.  And the <p> acts
as a Line Feed when creating the control cards.

//EXEC02    EXEC PGM=PARMCNTL,
// PARM='Control Card1<p>Control Card2<p>Password=&PASS.<p>'
//$$CNTL    DD  DSN=&&CNTL,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),
//              UNIT=SYSDA,SPACE=(TRK,10),
//              DISP=(NEW,PASS)
//EXEC03    EXEC PGM=FTP
//SYSIN     DD  DSN=&&CNTL, DISP=(OLD,DELETE)

Note that if the control cards need more than 100 characters that
are allowed in the conventional program parameter field, we can
use the SAVEPARM program repeatedly to create up to 3,000
characters of text, which then can be used by the PARMCNTL
program to create many Control cards.

For more information, please email me at:

clemclarke@gmail.com
