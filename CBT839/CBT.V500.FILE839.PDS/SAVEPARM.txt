SAVEPARM   TITLE 'Save or Add the Parameter to the $$PARM File'
*
* COPYRIGHT Clement Clarke, CLARKE COMPUTER SOFTWARE 2010
* ALL RIGHTS RESERVED
* ANY USE OF THIS CODE MUST RETAIN THE ABOVE COPYRIGHT NOTICE
*
*
* This program is provided free of charge, under the Apache Licence,
* for Hercules and "Hobbyist" licences.
*
* However, you are invited to contribute if
* you find this software useful. And this will assist with the
* development of new software.
*
*
* There is no warranty - source code is provided so that the program
* may be maintained.
*
* Note: You may not convert this program into a paid product, and all
*       source code changes must be made available for everyone.
*
* My email is clemclarke@gmail.com
*
*
* This a stand alone program.  It is inspired by Jol,
*        the Universal Command Language for all computers.
*
* Note: Versions of Jol exist for Z/OS, VSE, Windows, Linux, OS/2,
*       and soon Macs.
*
*
*
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
           SPACE 3
         LCLC  &SCHED
&SCHED   SETC  '$JOLSH40'
SAVEPARM CSECT                                                    86211
         DS    0H
*
*     This program simply save the parameter the program was
*     executed with to the $$PARM DD card.
*
*     The file must be a VB data set.
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SAVEPRM  SAVE   (14,12),,SAVEPARM.COPYRIGHT.CLEM.CLARKE;COMPILED.ON.&SY+
               SDATE.:&SYSTIME
         USING SAVEPARM,R11    ADDRESS OURSELVES
         LR    R11,R15         AND FIX UP BASE REGISTER
         LR    R9,R1           SAVE R1 FOR A WHILE
         L     R0,=A(CONEND-CONSTART)  LOAD R0 WITH LENGTH OF CONSTANT
*                                      AREA + LENGTH SAVE AREA
         GETMAIN R,LV=(0)      GET THE REQUIRED STORAGE
         ST    R13,4(R1)
         ST    R1,8(R13)
         USING SAVEAREA,R13
         LR    R13,R1          LINKAGE SET UP NOW
         SPACE 3
*
         L     R9,0(R9)       POINT TO PARAMETER AREA(OS)         75128
         USING PARMIN,R9                                          10245
         CLC   =H'0',#PARM     IS THERE A PARAMETER?              10245
         BNE   TPARM           Test for PGM=
         WTO   'SaveParm: No Parameter Specified',ROUTCDE=(2,11)
         B     DISPLHLP
*
TPARM    DS    0H
* Get the Program Name from the Parameter Field
         LH    R14,#PARM       Get Parameter Length
         CH    R14,=AL2(3000)  Check if Parameter too long
         BL    PARMLOK         Parm Length OK
         WTO   'SaveParm: Parameter Too Long (>3000 Bytes)  ',         *
               ROUTCDE=(2,11)
         B     DISPLHLP
*
*
PARMLOK  DS   0H
*
* We will copy the Parameter Field to a VB style Record, ready to
* write out once we open the file $$PARM to Extend it.
*
* Naturally, we had better copy more than 100 characters
* (if necessary)
*
* Prepare for an MVCL.
*
* We need to set R14 to From Address, R0 = To Address
* and R15 and R1 to the length to move.
         LA   R14,PARM         Get the address of the Data
         LA   R0,RECOUT        Get TO Area Address
         LH   R15,#PARM        Get DATA LENGTH
         LR   R1,R15           TO SOURCE & DEST LENGTH REGS
         MVCL 0,14             COPY THE DATA
         LH   R15,#PARM        Get DATA LENGTH
         AH   R15,=H'4'        -4
         STH  R15,#RECOUT      Set VB Data Length.
         SR   R14,R14
         STH  R14,#RECOUT+2    Set next two bytes to zero for VB
*
* OK, Now get the long Parameter from the $$PARM DD Card
         B     TPARM2
         PRINT NOGEN
DISPLHLP WTO   'SaveParm: Parameter Is Saved/Appended to a File',      *
               ROUTCDE=(2,11)
         WTO   'SaveParm: Program Parameter will be saved in',         *
               ROUTCDE=(2,11)
         WTO   'SaveParm: a VB Data Set with allocated with a ',       *
               ROUTCDE=(2,11)
         WTO   'SaveParm: DDNAME of $$PARM',                           *
               ROUTCDE=(2,11)
         ABEND 16,DUMP
         PRINT GEN
TPARM2   DS    0H
*
* OK, Now open the $$PARM DD Card, preparing to add to it.
*
*        OPEN ($$PARM,EXTEND)
OPEN     DS    0H
         MVC   $$PARM($$PARMCL),$$PARMC  Copy DCB to gotten storage
         MVC   OPENWRK(OPENOUTS),OPENOUT Copy Open Inirialised List
         OPEN  ($$PARM,(EXTEND)),MF=(E,OPENWRK)
*
         LA    R1,$$PARM       Get address of Input DCB
         USING IHADCB,R1
         TM    DCBOFLGS,DCBOFOPN OPEN okay ?
         BZ    OPENERR         If OPEN failed, go to ABEND
         TM    DCBRECFM,DCBRECV VARIABLE RECORD FORMAT ?
         BNO   MUSTBEVB        NO, Must be VB (for version 1)
         DROP  R1
*
*
         PUT   $$PARM,#RECOUT  Put the first record directly from area
*
PARMEOD  DS    0H              Got End of File on $$PARM
         MVC   OPENWRK(OPENOUTS),OPENOUT Copy Open Initialised List
         CLOSE ($$PARM),MF=(E,OPENWRK)  Close the input control fil
*
         L     R7,4(R13)       LOAD R7 WITH PREVIOUS SAVEAREA ADDRESS
         LR    R1,R13          LOAD R1 WITH THE ADDRESS OF GOTTEN
*                              STORAGE
         FREEMAIN R,LV=CONEND-CONSTART,A=(1)
         LR    R13,R7          SET R13=OLD SAVE
         LR    R15,R10         SET UP RETURN CODE
         L     R14,12(13)      AND RETURN ADDRESS
         LM    R0,R12,20(R13)  AND OLD REGISTERS
         SR    R15,R15
         BR    R14             AND BACK WE GO
*
*
*
OPENERR  DS    0H
         WTO   'SaveParm: Open of $$PARM File Failed',ROUTCDE=(2,11)
         ABEND 16,DUMP
*
MUSTBEVB WTO   'SaveParm: $$PARM File must be V or VB (Variable)',     *
               ROUTCDE=(2,11)
         ABEND 16,DUMP
$$PARMC  DCB   DDNAME=$$PARM,DSORG=PS,MACRF=PM,EODAD=PARMEOD
$$PARMCL EQU   *-$$PARMC
*
OPENOUT  OPEN  (,(EXTEND)),MF=L
OPENOUTS EQU   *-OPENOUT
*
         LTORG
         TITLE 'COMMUNICATION AREA FOR MONITOR AND SCHEDULER'
*
* This is the input Parm in the EXEC PGM=SaveParm
*
PARMIN   DSECT
#PARM    DS  H
PARM     DS  CL3000
*
*
* General Work Area.  This is copied into "gotten" storage for
*  re-enentrancy.
*
CONSTART DSECT
SAVEAREA DS    18F
CALLAREA DS    10F             WORK AREA ONLY FOR PARAMETERS BASICALLY
         DS    0F
OPENWRK  OPEN  (,),MF=L
*
$$PARM   DCB   DDNAME=$$PARM,DSORG=PS,MACRF=PM,EODAD=PARMEOD
*              SYNAD=QSAMSYND
#RECOUT  DS    H               Length of Output Record to $$PARM DD.
         DS    H               Necessary for VB Records
RECOUT   DS    CL3004          Long Parameter Area
CONEND   EQU   *
         SPACE 3
*
         DCBD  DSORG=PS
*
         END
