//MVSJOB2 JOB (0000,0000),NAME,NOTIFY=USER,REGION=1024K, <<<===========
// MSGCLASS=X,TYPRUN=SCAN
//CATLOAD PROC SOUT='*',                <<<======================
//             PROCLIB='SYS2.PROCLIB'            <<<============
//**     N O T E
//*
//*    YOU MUST ALTER THE INDEX PARAMETER ABOVE TO BE THE HIGH LEVEL
//*      INDEX YOU REQUIRE.
//*
//*
//***************************************************************
//***************************************************************
//**************                                 ****************
//*********                                           ***********
//*********   COPY CATALOGUED PROCEDURES TO PROCLIB   ***********
//*********                                           ***********
//**************                                 ****************
//***************************************************************
//***************************************************************
//PROCCOPY EXEC PGM=IEBUPDTE
//SYSPRINT DD  SYSOUT=&SOUT
//SYSUT1   DD  DSN=&PROCLIB,DISP=SHR
//SYSUT2   DD  DSN=&PROCLIB,DISP=SHR
//    PEND
//  EXEC  CATLOAD
//PROCCOPY.SYSIN DD DATA
./ ADD NAME=FTPTEST
//FTPTEST PROC  INDSN=,OUTDSN=,PASSWORD=,HOST=,USER=
//*
//* THIS HAS NOT BEEN TESTED. I DO NOT HAVE FTP ACCESS.
//* SEE THE MEMBER TFTP TO TEST IT.
//*
//* THIS PROCEDURE COPIES INFORMATION FOR AN FTP TO A VB FILE,
//* IN THE FIRST TWO STEPS.
//*
//* EXECFTP EXECUTES THE FTP PROGRAM AFTER CREATING A CONTROL FILE
//*        FORMED FROM THE VB FILE CREATED IN THE EARLIER STEPS.
//*
//* THANKS TO WALTER MARGUCCIO <WALTER_MARGUCCIO@YAHOO.COM>
//* AND OTHERS IN IBMMAIN FOR THE IDEA OF THE //DD:IN
//*
//EXEC01      EXEC PGM=SAVEPARM,
// PARM=('PGM=FTP,DDN=INPUT,PARM=''(EXIT''',
//  ' &HOST <P> &USER <P> &PASSWORD. <P>')
//$$PARM   DD  DSN=&&PARM,DCB=(RECFM=VB,LRECL=255,BLKSIZE=3200),
//             UNIT=SYSDA,SPACE=(TRK,10),
//             DISP=(NEW,PASS)
//EXEC02   EXEC PGM=SAVEPARM,
// PARM=' SENDSITE <P> PUT //DD:IN &OUTDSN <P> QUIT '
//$$PARM   DD  DSN=&&PARM,DISP=(OLD,PASS)
//*
//EXECFTP  EXEC PGM=EXECLONG,PARM='PGM=PARMCNTL'
//* CALL PARMCNTL FROM EXECLONG. IT WILL CREATE CONTROL CARDS,
//* AND EXECUTE THE PROGRAM (FTP) THAT WAS SPECIFIED IN THE
//* FIRST STEP.
//SYSUDUMP DD  SYSOUT=*
//$$PARM   DD  DSN=&&PARM,DISP=(OLD,PASS)
//IN       DD  DSN=&INDSN,DISP=(SHR,PASS)
//* CHANGE THIS NEXT DD TO A SIMPLE WORK FILE AFTER TESTING.
//INPUT    DD  DSN=&&CNTL,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),
//             UNIT=SYSDA,SPACE=(TRK,10),
//             DISP=(,PASS)
//* NEXT STEP SIMPLY PRINTS OUT THE CREATE CONTROL FILE.
//* AFTER TESTING, PLEASE REMOVE IT.
//EXEC03   EXEC PGM=IEBGENER,COND=EVEN
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&CNTL,DISP=OLD VOL=REF=*.$$PARM
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
./ ADD NAME=PDSCOPYS
//PDSCOPYS PROC  INDSN=,OUTDSN=,SELECT=
//*
//* THIS EXAMPLE EXECUTES IEBCOPY.    IT IS SIMILAR TO
//* THE JOL COPY COMMAND (SEE JOL).
//*
//EXEC01   EXEC PGM=PARMCNTL,
// PARM=('PGM=IEBCOPY,DDN=SYSIN',
//       ' C I=SYSUT1,O=SYSUT2<P> S M=&SELECT <P> ')
//SYSIN    DD  DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),   CREATED BY PROG.
//         UNIT=VIO,SPACE=(TRK,10)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&INDSN,DISP=SHR
//SYSUT2   DD  DSN=&OUTDSN,DISP=OLD
./ ADD NAME=PDSDELM
//PDSDELM  PROC  INDSN=,MEM=
//*
//* THIS EXAMPLE EXECUTES IDCAMS.
//*
//EXEC01   EXEC PGM=PARMCNTL,
// PARM=('PGM=IDCAMS,DDN=SYSIN',
//       ' DELETE &INDSN(&MEM) FILE(PDS)')
//SYSPRINT DD  SYSOUT=*
//PDS      DD  DSN=&INDSN,DISP=SHR
//SYSIN    DD  DCB=SYS1.MACLIB,UNIT=VIO,SPACE=(TRK,10)
./ ADD NAME=PDSRENM
//PDSRENM  PROC  INDSN=,MEM=,NEWNAME=
//*
//* THIS EXAMPLE EXECUTES IDCAMS TO RENAME A MEMBER.
//*
//EXEC01   EXEC PGM=PARMCNTL,
// PARM=('PGM=IDCAMS,DDN=SYSIN',
//  ' ALTER  &INDSN(&MEM) FILE(PDS) - <P> NEWNAME(&INDSN(&NEWNAME))')
//SYSPRINT DD  SYSOUT=*
//PDS      DD  DSN=&INDSN,DISP=SHR
//SYSIN    DD  DCB=SYS1.MACLIB,UNIT=VIO,SPACE=(TRK,10)
./ ADD NAME=SORT
//SORT   PROC  INDSN=,OUTDSN=,OUTDISP=NEW,FIELDS=,CYLS=5
//*
//* THIS EXAMPLE EXECUTES THE MVS SORT.  IT IS SIMILAR TO
//* THE JOL SORT COMMAND (SEE JOL).
//*
//EXEC01      EXEC PGM=PARMCNTL,
// PARM='PGM=SORT,DDN=SYSIN,PARM=''SIZE=MAX'', SORT FIELDS=&FIELDS<P>'
//STEPLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
//SYSIN    DD  DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),   CREATED BY PROG.
//         UNIT=VIO,SPACE=(TRK,10)
//SYSPRINT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SORTMSG  DD  SYSOUT=*
//SORTIN   DD  DSN=&INDSN,DISP=SHR
//SORTOUT  DD  DSN=&OUTDSN,DCB=(RECFM=VB,LRECL=2000,BLKSIZE=20000),
//             UNIT=SYSDA,SPACE=(TRK,10),
//             DISP=(&OUTDISP,CATLG)
//SORTWK01 DD  SPACE=(CYL,(&CYLS),,CONTIG),UNIT=SYSDA
//SORTWK02 DD  SPACE=(CYL,(&CYLS),,CONTIG),UNIT=SYSDA
//SORTWK03 DD  SPACE=(CYL,(&CYLS),,CONTIG),UNIT=SYSDA
//SORTWK04 DD  SPACE=(CYL,(&CYLS),,CONTIG),UNIT=SYSDA
./ ADD NAME=CATDEF
//CATDEF   PROC  CAT=,NAME=,VOL=,DEVT=3380
//*
//* THIS PROCEDURE COPIES INFORMATION FOR AN DEFINE TO A VB FILE,
//* IN THE FIRST TWO STEPS.
//*
//* IT REQUIRES 3 STEPS BECAUSE THE PARAMETERS COULD EASILY RUN
//*        OVER A 100 CHARACTERSE FOR A DEFINE CAT.
//*
//EXEC01      EXEC PGM=SAVEPARM,
// PARM=('PGM=IDCAMS,DDN=SYSIN',
//  ' DEFINE CAT (&CAT) NONVSAM - <P>')
//$$PARM   DD  DSN=&&PARM,DCB=(RECFM=VB,LRECL=255,BLKSIZE=3200),
//             UNIT=SYSDA,SPACE=(TRK,10),
//             DISP=(NEW,PASS)
//EXEC02   EXEC PGM=SAVEPARM,
// PARM=' ( NAME (&NAME) - <P>   VOL (&VOL) DEVT (&DEVT))'
//$$PARM   DD  DSN=&&PARM,DISP=(OLD,PASS)
//EXECDEF  EXEC PGM=EXECLONG,PARM='PGM=PARMCNTL'
//* CALL PARMCNTL FROM EXECLONG. IT WILL CREATE CONTROL CARDS,
//* AND EXECUTE THE PROGRAM (IDCAMS) THAT WAS SPECIFIED IN THE
//* FIRST STEP.
//SYSPRINT DD  SYSOUT=*
//$$PARM   DD  DSN=&&PARM,DISP=(OLD,DELETE)
//* SYSIN BELOW IS WRITTEN TO BY PARMCNTL, THEN IDCAMS READS IT.
//SYSIN    DD  DCB=SYS1.MACLIB,UNIT=VIO,SPACE=(TRK,10)
./ ADD NAME=SORT
//
