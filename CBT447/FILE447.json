{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012044000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE447.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE447.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x02'", "DS1TRBAL": "b'\\xcf\\xfc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x035\\x00\\x06\\x035\\x00\\t\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00\\x05\\x01\\x13\\x05\\x0f\\x01\\x13\\x05\\x0f\\x13E\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-02-19T00:00:00", "modifydate": "2013-02-19T13:45:05", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  447\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE447\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 587 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/19/13    13:45:05    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE447": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00Y\\x01\\x13\\x05\\x0f\\x01\\x13\\x05\\x0f\\x13D\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-02-19T00:00:00", "modifydate": "2013-02-19T13:44:59", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 447 is from Rick Fochtman of Chicago, Illinois, and       *   FILE 447\n//*           contains two programs to improve GRS facilities,      *   FILE 447\n//*           so that the messages which GRS produces, will         *   FILE 447\n//*           approximate those which MIM produces, reporting       *   FILE 447\n//*           ENQUEUE conflicts on the operator console.            *   FILE 447\n//*                                                                 *   FILE 447\n//*             email:   sbgolob@cbttape.org     or                 *   FILE 447\n//*                      sbgolob@attglobal.net                      *   FILE 447\n//*                                                                 *   FILE 447\n//*           Since we've gone to GRS, in place of MIM, there       *   FILE 447\n//*           was one feature of MIM that was sorely missed.        *   FILE 447\n//*           MIM would explain the nature of dataset               *   FILE 447\n//*           contentions in greater detail than the initial        *   FILE 447\n//*           messages from GRS.  True, you could get the detail    *   FILE 447\n//*           by issuing the \"D GRS,C\" command, if you managed      *   FILE 447\n//*           to catch it quick enough.  We deemed that this was    *   FILE 447\n//*           insufficient.  Attached are the solutions             *   FILE 447\n//*           developed here.  One is a started task that checks    *   FILE 447\n//*           for a contention situation each minute and            *   FILE 447\n//*           displays information about it.  The other is an MPF   *   FILE 447\n//*           exit that displays the same information whenever a    *   FILE 447\n//*           dataset contention situation is announced via the     *   FILE 447\n//*           IEF099I message.                                      *   FILE 447\n//*                                                                 *   FILE 447\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ENQDOC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x17\\x01\\x00\\x13o\\x01\\x13\\x05\\x0f\\x13C\\x00\\x1f\\x00\\x18\\x00\\x00\\xc3\\xc8\\xe2\\xe8\\xf2\\xf2\\xf7@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-05-15T00:00:00", "modifydate": "2013-02-19T13:43:17", "lines": 31, "newlines": 24, "modlines": 0, "user": "CHSY227"}, "text": "Date - Tue Sep 15 09:04:21 1998\nContent-Type: text/plain; charset=US-ASCII\n\n     Since we've gone to GRS, in place of MIM, there was one\n     feature of MIM that was sorely missed.  MIM would explain\n     the nature of dataset contentions in greater detail than the\n     initial messages from GRS.  True, you could get the detail\n     by issuing the \"D GRS,C\" command, if you managed to catch it\n     quick enough.  We deemed that this was insufficient.\n     Attached are the solutions developed here.  One is a started\n     task that checks for a contention situation each minute and\n     displays information about it.  The other is a MPF exit that\n     displays the same information whenever a dataset contention\n     situation is announced vie the IEF099I message.\n\n     These are very simple routines, without a lot of bells and\n     whistles.  But they work!  They might not tell us how many\n     minutes a job has been waiting for datasets, but at least\n     we'll know it's still waiting.\n\n     Your suggestions and comments are welcome....\n\n     Enjoy........ Rick   :-)\n\n       Rick Fochtman\n\n     Supported by:   Sam Golob\n\n           email :   sbgolob@cbttape.org       or\n                     sbgolob@attglobal.net\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ENQMON": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00\\x13o\\x01\\x00\\x13o\\x143\\x01\\x03\\x01\\x04\\x00\\x00\\xd9\\xc1\\xc6\\xd6\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-05-15T00:00:00", "modifydate": "2000-05-15T14:33:00", "lines": 259, "newlines": 260, "modlines": 0, "user": "RAFOCH"}, "text": "ENQM     TITLE 'STARTED TASK ENQ CONTENTION MONITOR'\n*---------------------------------------------------------------------*\n*---     NAME: ENQMON                                              ---*\n*---                                                               ---*\n*---     PURPOSE: DISPLAY AND LOG DATASET CONTENTION PROBLEMS.     ---*\n*---                                                               ---*\n*---     METHOD: EACH MINUTE, USE GQSCAN TO LOCATE ANY DATASET     ---*\n*---           CONTENTION SITUATIONS.  USE THE INFORMATION RETURNED---*\n*---           BY GRS TO DISPLAY, ON CONSOLES AND SYSLOG, THE      ---*\n*---           DSNAME INVOLVED, THE HOLDERS, AND REQUESTORS.       ---*\n*---                                                               ---*\n*---     PARAMETERS: NONE                                          ---*\n*---                                                               ---*\n*---     DD STATEMENTS REQUIRED: NONE                              ---*\n*---                                                               ---*\n*---     TERMINATION: THIS PROGRAM WILL ACCEPT A MVS STOP COMMAND  ---*\n*---           AS A SIGNAL TO SHUTDOWN.  ACTUAL SHUTDOWN MAY TAKE  ---*\n*---           UP TO ONE MINUTE.                                   ---*\n*---                                                               ---*\n*---     PROGRAM ATTRIBUTES: AMODE-31, RMODE-ANY, NOT-REENTRANT    ---*\n*---                                                               ---*\n*---     RICK FOCHTMAN, SR. SYSTEMS PROGRAMMING SPECIALIST         ---*\n*---     BOARD OF TRADE CLEARING CORP.                             ---*\n*---     141 W. JACKSON BLVD, SUITE 1460                           ---*\n*---     CHICAGO, IL  60604                                        ---*\n*---     (312) 786-5772                                            ---*\n*---                                                               ---*\n*---     SEPTEMBER, 1998                                           ---*\n*---------------------------------------------------------------------*\n         SPACE 3\nENQMON   CSECT\nENQMON   AMODE 31\nENQMON   RMODE ANY\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n         B     12(,R15)            BRANCH AROUND\n         DC    AL1(7),CL7'ENQMON'  CSECT IDENTIFIER\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS\n         LR    R12,R15             COPY ENTRY ADDRESS\n         USING ENQMON,R12          AND DECLARE THE BASE REGISTER\n         L     R3,WALEN            LOAD WORK AREA LENGTH\n         GETMAIN RC,LV=(3)         GRAB W.A. STORAGE\n         LR    R2,R1               COPY STORAGE ADDRESS\n         LA    R4,0                CLEAR SOURCE ADDRESS\n         LA    R5,0                  AND LENGTH\n         MVCL  R2,R4               CLEAR THE WORKING STORAGE\n         ST    R13,4(,R1)          SAVE BACK S.A. POINTER\n         ST    R1,8(,R13)          AND FORWARD POINTER\n         LR    R13,R1              AND BUMP DOWN THE CHAIN\n         USING WORK,R13            AND BASE ITS DSECT\n*---------------------------------------------------------------------*\n*---     1. SET UP CIB INTERFACE FOR STOP COMMAND.                 ---*\n*---------------------------------------------------------------------*\n         LA    R2,COMMPTR          POINT TO RETURN AREA\n         EXTRACT (2),FIELDS=COMM\n         L     R2,COMMPTR          LOAD THE COMMAREA POINTER\n         USING COM,R2              AND BASE THE DSECT\n         ICM   R3,15,COMCIBPT      LOAD CIB POINTER\n         BZ    NOCIB               NONE TO FREE ---\n         LA    R4,COMCIBPT         POINT TO CIB START ADDRESS\n         QEDIT ORIGIN=(4),BLOCK=(3)    RELEASE 'START' CIB\nNOCIB    DS    0H\n         QEDIT ORIGIN=(4),CIBCTR=1\n         DROP  R2\n*---------------------------------------------------------------------*\n*---     2. GRAB STORAGE FOR GQSCAN RETURN AREA AND BASE ITS       ---*\n*---        DSECT(S)                                               ---*\n*---------------------------------------------------------------------*\n         L     R2,GQSCSIZE         LOAD SIZE\n         GETMAIN RC,LV=(2),SP=POOL1,BNDRY=PAGE\n         LR    R4,R1               COPY STORAGE ADDRESS\n         ST    R1,GQAREA           AND SAVE FOR LATER\n         LR    R5,R2               COPY AREA SIZE\n         LA    R6,0                SOURCE ADDRESS OF ZERO\n         LA    R7,0                AND LENGTH OF ZERO\n         MVCL  R4,R6               CLEAR IT OUT...\n         LR    R11,R1              COPY AREA POINTER FOR LATER\n*---------------------------------------------------------------------*\n*---     5. ISSUE GQSCAN FOR SYSDSN CONTENTION                     ---*\n*---------------------------------------------------------------------*\nRESCAN   DS    0H\n         L     R3,GQSCSIZE         LOAD AREA SIZE\n         GQSCAN AREA=((R11),(R3)),SCOPE=ALL,REQLIM=MAX,                X\n               WAITCNT=1,XSYS=NO,RESNAME=QNAME\n         ST    R1,RIBSLEFT         SAVE RIB COUNT\n         CH    R15,=H'4'           ANY CONTENTION ??\n         BE    NOWAIT              NOPE; RELEASE CHAINS\n         BL    PARSEIT             SOMEONE IS WAITING; CHECK IT OUT\n*        WTO   'ENQMON: GQSCAN SEVERE ERROR HAS OCCURED.'\n         ABEND 1000,DUMP\n*---------------------------------------------------------------------*\n*---     NOBODY WAITING FOR DATASETS. RELEASE ANY CHAINS WE HAVE   ---*\n*---           AND GO WAIT FOR ANOTHER MINUTE.                     ---*\n*---------------------------------------------------------------------*\nNOWAIT   DS    0H\n         L     R2,COMMPTR          LOAD COMM AREA POINTER\n         USING COM,R2\n         ICM   R3,15,COMCIBPT      IS THERE A CIB ??\n         BZ    WAITER              NOPE ---\n         USING CIB,R3              YES; MAP IT\n         CLI   CIBVERB,CIBSTOP     STOP COMMAND ??\n         BE    ENDITALL\n         LA    R4,COMCIBPT         POINT TO ORIGIN\n         QEDIT ORIGIN=(R4),BLOCK=(R3)\n         DROP  R2,R3               DISCARD MAPS\nWAITER   DS    0H\n         STIMER WAIT,BINTVL=MINUTE\n         B     RESCAN              AND SCAN AGAIN ---\nMINUTE   DC    A(60*100)           ONE MINUTE WAIT INTERVAL\n         SPACE 3\nENDITALL DS    0H\n         L     R13,4(,R13)\n         LM    R14,R12,12(R13)\n         LA    R15,0\n         BR    R14\n*---------------------------------------------------------------------*\n*---     PARSE THE RIB RETURNED BY GQSCAN                          ---*\n*---------------------------------------------------------------------*\nPARSEIT  DS    0H\n         LR    R10,R11             COPY AREA POINTER FOR LATER\n         USING RIB,R10             AND BASE ITS DSECT\nNEWRIB   DS    0H\n         ST    R1,RIBSLEFT         SAVE UPDATED RIB COUNT\n         LA    R3,RIBEND           POINT TO START OF RIBVAR\n         AH    R3,RIBVLEN          ADD VARIABLE AREA LENGTH\n         USING RIBE,R3             AND BASE ANOTHER DSECT\n         L     R4,RIBTRIBE         LOAD RIBE COUNT\n         LA    R5,OWNERS           POINT TO OWNERS' LIST\n         LA    R6,WAITERS          POINT TO WAITERS' LIST\n         LA    R7,0                NO OWNERS YET\n         LA    R8,0                NO WAITERS YET\nFRSTLOOP DS    0H\n*---\n*---     FIND THE OWNERS AND WAITERS FIRST\n*---\n         TM    RIBESFLG,RIBESTAT   WAITING FOR RESOURCE ??\n         BZ    WAIT1               YES ---\n         MVC   0(16,R5),RIBEJBNM   COPY JOB/SYSTEM NAMES\n         MVC   16(1,R5),RIBERFLG   COPY REQUEST FLAGS\n         LA    R5,17(,R5)          POINT TO NEXT SLOT\n         LA    R7,1(,R7)           INCREMENT COUNTER BY ONE\n         B     LOOP1               AND CONTINUE\nWAIT1    DS    0H\n         MVC   0(16,R6),RIBEJBNM   COPY JOB/SYSTEM NAMES\n         MVC   16(1,R6),RIBERFLG   COPY REQUEST FLAGS\n         LA    R6,17(,R6)          POINT TO NEXT SLOT\n         LA    R8,1(,R8)           INCREMENT COUNTER BY ONE\nLOOP1    DS    0H\n         LA    R3,RIBEEND          POINT TO NEXT RIBE\n         BCT   R4,FRSTLOOP         AND CONTINUE ---\n*---\n*--- START BUILDING/SPITING MESSAGES\n*---\n*--- USE PRINTED MESSAGES FOR DEBUGGING\n*---\n         LA    R15,RIBEND          POINT TO RIB VARIABLE AREA\n         USING RIBVAR,R15\n         LH    R1,RIBVLEN          LOAD VARIABLE AREA LENGTH\n         BCTR  R1,R0\n         MVC   DSNAME,BLANKS\n         EX    R1,RIBM             MOVE DSNAME TO MESSAGE\n         B     RIBM+6\nRIBM     MVC   DSNAME(1),RIBRNAME COPY THE DSNAME\n         DROP  R15\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         WTO   TEXT=LINE1\n         WTO   TEXT=LINE2\n         LA    R5,OWNERS           POINT TO LIST OF OWNERS\nMSG1     DS    0H\n         MVC   JOBNAME1,0(R5)      COPY THE JOB NAME\n         MVC   SYSTEM1,8(R5)       AND SYSTEM ID\n         MVC   USE1,=CL3'EXC'      ASSUME SHARED FOR NOW\n         TM    16(R5),X'80'        EXCLUSIVE USE ??\n         BNO   MSG2                NOPE ---\n         MVC   USE1,=CL3'SHR'      YES, MARK IT\nMSG2     DS    0H\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         WTO   TEXT=LINE3\n         LA    R5,17(,R5)          POINT TO NEXT ENTRY\n         BCT   R7,MSG1             AND CONTINUE ---\n         LA    R5,WAITERS          POINT TO LIST OF OWNERS\nMSG3     DS    0H\n         MVC   JOBNAME2,0(R5)      COPY THE JOB NAME\n         MVC   SYSTEM2,8(R5)       AND SYSTEM ID\n         MVC   USE2,=CL3'EXC'      ASSUME SHARED FOR NOW\n         TM    16(R5),X'80'        EXCLUSIVE USE ??\n         BNO   MSG4                NOPE ---\n         MVC   USE2,=CL3'SHR'      YES, MARK IT\nMSG4     DS    0H\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         WTO   TEXT=LINE4\n         LA    R5,17(,R5)          POINT TO NEXT ENTRY\n         BCT   R8,MSG3             AND CONTINUE ---\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         LR    R10,R3              START A NEW RIBE\n         L     R1,RIBSLEFT         GET NUMBER OF RIBS LEFT\n         BCT   R1,NEWRIB           PROCESS NEXT RIB, IF ANY\n         B     NOWAIT              AND LOOP ---\n         DROP  R10\n         SPACE 3\n*\nQNAME    DC    CL8'SYSDSN'\nBLANKS   DC    CL44' '\n*\nLINE1    DC    AL2(LINE2-TXT1)\nTXT1     DC    C' ENQMON01 : DATASET CONTENTION EXISTS!'\n*\nLINE2    DC    AL2(LINE3-TXT2)\nTXT2     DC    C' ENQMON02 : DSNAME='\nDSNAME   DC    CL44' '\n*\nLINE3    DC    AL2(LINE4-TXT3)\nTXT3     DC    C' ENQMON03: JOB '\nJOBNAME1 DC    CL08' '\n         DC    C' ON SYSTEM '\nSYSTEM1  DC    CL08' '\n         DC    C' HAS IT '\nUSE1     DC    CL03' '\n*\nLINE4    DC    AL2(ENDTXT-TXT4)\nTXT4     DC    C' ENQMON04: JOB '\nJOBNAME2 DC    CL08' '\n         DC    C' ON SYSTEM '\nSYSTEM2  DC    CL08' '\n         DC    C' WANTS IT '\nUSE2     DC    CL03' '\nENDTXT   EQU   *\nGQSCSIZE DC    F'1048576'          ONE MEGABYTE\nPOOL1    EQU   6                   SUBPOOL FOR GQSCAN RETURN AREA\n         LTORG\nWALEN    DC    A(ENDWORK-WORK)\nWORK     DSECT\nSA       DS    18F\nGQAREA   DS    A\nRIBSLEFT DS    F\nCOMMPTR  DS    F\nWAITERS  DS    100CL17\nOWNERS   DS    100CL17\nENDWORK  DS    0D\n         ISGRIB\nCOM      DSECT\n         IEZCOM\nCIB      DSECT\n         IEZCIB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ENQMPF": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00\\x13o\\x01\\x00\\x13o\\x143\\x01\\x05\\x01\\x06\\x00\\x00\\xd9\\xc1\\xc6\\xd6\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-05-15T00:00:00", "modifydate": "2000-05-15T14:33:00", "lines": 261, "newlines": 262, "modlines": 0, "user": "RAFOCH"}, "text": "EMPF     TITLE 'DATASET CONTENTION MPF EXIT'\n*---------------------------------------------------------------------*\n*---     THIS PROGRAM IS A MPF EXIT FOR MVS, DESIGNED TO BE        ---*\n*---     INVOKED WHENEVER MSG IEF099I IS ISSUED BY THE OPERATING   ---*\n*---     SYSTEM.  IT WILL CREATE A SERIES OF MESSAGES, ON CONSOLES ---*\n*---     AND SYSLOG, DESCRIBING THE NATURE OF THE CONTENTION.      ---*\n*---                                                               ---*\n*---     ATTRIBUTES: RMODE-ANY, AMODE-31, REENTRANT, REUSABLE      ---*\n*---           AND REFRESHABLE.                                    ---*\n*---                                                               ---*\n*---     TO INVOKED THIS EXIT, LINK IT INTO A LNKLST LIBRARY,      ---*\n*---           REFRESH LLA, AND INSERT THE FOLLOWING LINE INTO     ---*\n*---           YOUR MPF LIST:                                      ---*\n*---                                                               ---*\n*---   IEF099I,USEREXIT(ENQMPF)                                    ---*\n*---                                                               ---*\n*---     RICK FOCHTMAN, SR. SYSTEMS PROGRAMMING SPECIALIST         ---*\n*---     BOARD OF TRADE CLEARING CORP.                             ---*\n*---     141 W. JACKSON BLVD, SUITE 1460                           ---*\n*---     CHICAGO, IL  60604                                        ---*\n*---     (312) 786-5772                                            ---*\n*---                                                               ---*\n*---     SEPTEMBER, 1998                                           ---*\n*---------------------------------------------------------------------*\n         SPACE 3\nENQMPF   CSECT\nENQMPF   AMODE 31\nENQMPF   RMODE ANY\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n         B     12(,R15)            BRANCH AROUND\n         DC    AL1(7),CL7'ENQMPF'  CSECT IDENTIFIER\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS\n         LR    R12,R15             COPY ENTRY ADDRESS\n         USING ENQMPF,R12          AND DECLARE THE BASE REGISTER\n         L     R3,WALEN            LOAD WORK AREA LENGTH\n         GETMAIN RU,LV=(3)         GRAB W.A. STORAGE\n         LR    R2,R1               COPY STORAGE ADDRESS\n         LA    R4,0                CLEAR SOURCE ADDRESS\n         LA    R5,0                  AND LENGTH\n         MVCL  R2,R4               CLEAR THE WORKING STORAGE\n         ST    R13,4(,R1)          SAVE BACK S.A. POINTER\n         ST    R1,8(,R13)          AND FORWARD POINTER\n         LR    R13,R1              AND BUMP DOWN THE CHAIN\n         USING WORK,R13            AND BASE ITS DSECT\n         LA    R2,LINE2            LOAD MODEL ADDRESS\n         LA    R3,ENDTXT           POINT TO MODEL END AREA\n         SR    R3,R2               COMPUTE LENGTH TO MOVE\n         LA    R4,NOTE2            POINT TO DYN. AREA\n         LR    R5,R3               COPY LENGTH\n         MVCL  R4,R2               COPY MODELS TO DYN AREA\n*---------------------------------------------------------------------*\n*---     1. GRAB STORAGE FOR GQSCAN RETURN AREA AND BASE ITS       ---*\n*---        DSECT(S)                                               ---*\n*---------------------------------------------------------------------*\n         L     R2,GQSCSIZE         LOAD SIZE\n         GETMAIN RU,LV=(2),SP=241,BNDRY=PAGE\n         LR    R4,R1               COPY STORAGE ADDRESS\n         ST    R1,GQAREA           AND SAVE FOR LATER\n         LR    R5,R2               COPY AREA SIZE\n         LA    R6,0                SOURCE ADDRESS OF ZERO\n         LA    R7,0                AND LENGTH OF ZERO\n         MVCL  R4,R6               CLEAR IT OUT...\n         LR    R11,R1              COPY AREA POINTER FOR LATER\n*---------------------------------------------------------------------*\n*---     5. ISSUE GQSCAN FOR SYSDSN CONTENTION                     ---*\n*---------------------------------------------------------------------*\n         MVC   SCANB(SCANLEN),SCANA COPY GQSCAN PARMS\n         L     R3,GQSCSIZE         LOAD AREA SIZE\n         GQSCAN AREA=((R11),(R3)),SCOPE=ALL,REQLIM=MAX,                X\n               WAITCNT=1,XSYS=NO,RESNAME=QNAME,MF=(E,SCANB)\n         ST    R1,RIBSLEFT         SAVE RIB COUNT\n         CH    R15,=H'4'           ANY CONTENTION ??\n         BL    PARSEIT             SOMEONE IS WAITING; CHECK IT OUT\n*---------------------------------------------------------------------*\n*---     NOTHING TO DO; BAIL OUT QUIETLY.                          ---*\n*---------------------------------------------------------------------*\n         SPACE 3\nENDITALL DS    0H\n         L     R2,GQSCSIZE         LOAD SIZE\n         FREEMAIN RU,LV=(2),A=(11),SP=241 RELEASE GQSCAN AREA\n         LR    R1,R13              COPY W.A. POINTER\n         L     R13,4(,R13)\n         L     R0,WALEN            LOAD WORK AREA LENGTH\n         FREEMAIN RU,LV=(0),A=(1)  AND RELEASE SAVE AREA\n         LM    R14,R12,12(R13)\n         LA    R15,0\n         BR    R14\n*---------------------------------------------------------------------*\n*---     PARSE THE RIB RETURNED BY GQSCAN                          ---*\n*---------------------------------------------------------------------*\nPARSEIT  DS    0H\n         LR    R10,R11             COPY AREA POINTER FOR LATER\n         USING RIB,R10             AND BASE ITS DSECT\nNEWRIB   DS    0H\n         ST    R1,RIBSLEFT         SAVE RIB COUNT\n         LA    R3,RIBEND           POINT TO START OF RIBVAR\n         AH    R3,RIBVLEN          ADD VARIABLE AREA LENGTH\n         USING RIBE,R3             AND BASE ANOTHER DSECT\n         L     R4,RIBTRIBE         LOAD RIBE COUNT\n         LA    R5,OWNERS           POINT TO OWNERS' LIST\n         LA    R6,WAITERS          POINT TO WAITERS' LIST\n         LA    R7,0                NO OWNERS YET\n         LA    R8,0                NO WAITERS YET\nFRSTLOOP DS    0H\n*---\n*---     FIND THE OWNERS AND WAITERS FIRST\n*---\n         TM    RIBESFLG,RIBESTAT   WAITING FOR RESOURCE ??\n         BZ    WAIT1               YES ---\n         MVC   0(16,R5),RIBEJBNM   COPY JOB/SYSTEM NAMES\n         MVC   16(1,R5),RIBERFLG   COPY REQUEST FLAGS\n         LA    R5,17(,R5)          POINT TO NEXT SLOT\n         LA    R7,1(,R7)           INCREMENT COUNTER BY ONE\n         B     LOOP1               AND CONTINUE\nWAIT1    DS    0H\n         MVC   0(16,R6),RIBEJBNM   COPY JOB/SYSTEM NAMES\n         MVC   16(1,R6),RIBERFLG   COPY REQUEST FLAGS\n         LA    R6,17(,R6)          POINT TO NEXT SLOT\n         LA    R8,1(,R8)           INCREMENT COUNTER BY ONE\nLOOP1    DS    0H\n         LA    R3,RIBEEND          POINT TO NEXT RIBE\n         BCT   R4,FRSTLOOP         AND CONTINUE ---\n*---\n*--- START BUILDING/SPITING MESSAGES\n*---\n*--- USE PRINTED MESSAGES FOR DEBUGGING\n*---\n         LA    R15,RIBEND          POINT TO RIB VARIABLE AREA\n         USING RIBVAR,R15\n         LH    R1,RIBVLEN          LOAD VARIABLE AREA LENGTH\n         BCTR  R1,R0\n         MVC   DSNAME,BLANKS\n         EX    R1,RIBM             MOVE DSNAME TO MESSAGE\n         B     RIBM+6\nRIBM     MVC   DSNAME(1),RIBRNAME COPY THE DSNAME\n         DROP  R15\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         MVC   WTOLIST(WTOLEN),WTOMDL COPY BASIC PARM LIST\n         WTO   TEXT=LINE1,MF=(E,WTOLIST)\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         MVC   WTOLIST(WTOLEN),WTOMDL COPY BASIC PARM LIST\n         WTO   TEXT=NOTE2,MF=(E,WTOLIST)\n         LA    R5,OWNERS           POINT TO LIST OF OWNERS\nMSG1     DS    0H\n         MVC   JOBNAME1,0(R5)      COPY THE JOB NAME\n         MVC   SYSTEM1,8(R5)       AND SYSTEM ID\n         MVC   USE1,=CL3'EXC'      ASSUME SHARED FOR NOW\n         TM    16(R5),X'80'        EXCLUSIVE USE ??\n         BNO   MSG2                NOPE ---\n         MVC   USE1,=CL3'SHR'      YES, MARK IT\nMSG2     DS    0H\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         MVC   WTOLIST(WTOLEN),WTOMDL COPY BASIC PARM LIST\n         WTO   TEXT=NOTE3,MF=(E,WTOLIST)\n         LA    R5,17(,R5)          POINT TO NEXT ENTRY\n         BCT   R7,MSG1             AND CONTINUE ---\n         LA    R5,WAITERS          POINT TO LIST OF OWNERS\nMSG3     DS    0H\n         MVC   JOBNAME2,0(R5)      COPY THE JOB NAME\n         MVC   SYSTEM2,8(R5)       AND SYSTEM ID\n         MVC   USE2,=CL3'EXC'      ASSUME SHARED FOR NOW\n         TM    16(R5),X'80'        EXCLUSIVE USE ??\n         BNO   MSG4                NOPE ---\n         MVC   USE2,=CL3'SHR'      YES, MARK IT\nMSG4     DS    0H\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         MVC   WTOLIST(WTOLEN),WTOMDL COPY BASIC PARM LIST\n         WTO   TEXT=NOTE4,MF=(E,WTOLIST)\n         LA    R5,17(,R5)          POINT TO NEXT ENTRY\n         BCT   R8,MSG3             AND CONTINUE ---\n         LA    R0,0                CLEAR MCS CONSOLE ID\n         LR    R10,R3              POINT TO NEW RIB\n         L     R1,RIBSLEFT         LOAD REMAINDER COUNT\n         BCT   R1,NEWRIB           AND LOOP, LOVINGLY ---\n         B     ENDITALL\n         DROP  R10\n         SPACE 3\n*\nSCANA    GQSCAN MF=L\nSCANLEN  EQU   *-SCANA\nWTOMDL   WTO   TEXT=,MF=L\nWTOLEN   EQU   *-WTOMDL\n*\nQNAME    DC    CL8'SYSDSN'\nBLANKS   DC    CL44' '\n*\nLINE1    DC    AL2(LINE2-TXT1)\nTXT1     DC    C' ENQMPF01 : DATASET CONTENTION DETECTED'\n*\nLINE2    DC    AL2(LINE3-TXT2)\nTXT2     DC    C' ENQMPF02 : DSNAME='\n         DC    CL44' '\n*\nLINE3    DC    AL2(LINE4-TXT3)\nTXT3     DC    C' ENQMPF03: JOB '\n         DC    CL08' '\n         DC    C' ON SYSTEM '\n         DC    CL08' '\n         DC    C' HAS IT '\n         DC    CL03' '\n*\nLINE4    DC    AL2(ENDTXT-TXT4)\nTXT4     DC    C' ENQMPF04: JOB '\n         DC    CL08' '\n         DC    C' ON SYSTEM '\n         DC    CL08' '\n         DC    C' WANTS IT '\n         DC    CL03' '\nENDTXT   EQU   *\nGQSCSIZE DC    F'1048576'          ONE MEGABYTE\nPOOL1    EQU   99                  SUBPOOL FOR GQSCAN RETURN AREA\nPOOL2    EQU   8                   SUBPOOL FOR MY CHAINS OF NAMES\n         LTORG\nWALEN    DC    A(ENDWORK-WORK)\nWORK     DSECT\nSA       DS    18F\nRIBSLEFT DS    F\nGQAREA   DS    A\nWTOLIST  WTO   TEXT=,MF=L\n*\nSCANB    GQSCAN MF=L\n*\nNOTE2    DC    AL2(LINE3-TXT2)\n         DC    C' ENQMPF02 : DSNAME='\nDSNAME   DC    CL44' '\n*\nNOTE3    DC    AL2(LINE4-TXT3)\n         DC    C' ENQMPF03: JOB '\nJOBNAME1 DC    CL08' '\n         DC    C' ON SYSTEM '\nSYSTEM1  DC    CL08' '\n         DC    C' HAS IT '\nUSE1     DC    CL03' '\n*\nNOTE4    DC    AL2(ENDTXT-TXT4)\n         DC    C' ENQMPF04: JOB '\nJOBNAME2 DC    CL08' '\n         DC    C' ON SYSTEM '\nSYSTEM2  DC    CL08' '\n         DC    C' WANTS IT '\nUSE2     DC    CL03' '\nWAITERS  DS    100CL17\nOWNERS   DS    100CL17\nENDWORK  DS    0D\n         ISGRIB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT447/FILE447.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT447", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}