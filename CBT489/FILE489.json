{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012150000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 940576, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 20, "INMDSNAM": "CBT.V500.FILE489.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE489.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x10\\x19'", "DS1TRBAL": "b')\\n'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x8d\\x00\\x01\\x03\\x8e\\x00\\x02\\x00\\x11'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x006\\x01\\x19\\x07\\x8f\\x01\\x19\\x07\\x8f\\x14\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2019-03-19T00:00:00", "modifydate": "2019-03-19T14:00:36", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-497"}, "text": "REGULAR CBT TAPE - VERSION 497    FILE:  489\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT497.FILE489\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 89 MEMBERS COUNTED; CUMULATIVE SIZE IS 7,952 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/19/19    14:00:36    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x08\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13T\\x00n\\x00c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:54:08", "lines": 110, "newlines": 99, "modlines": 0, "user": "IANNONE"}, "text": "\n File 489 pertains to:\n\n SMS INVISION \"dayend\" (ie: batch process) improvements/changes.\n\n Terms:\n   SHARED MEDICAL SYSTEMS (SMS) - was acquired by Siemens\n   Software Update Tape (SUT) - of course transitioned to FTP delivery\n   \"dayend\" is the overnight batch process\n   INVISION is their patient registration and patient accounting\n     software that runs on an S/390 platform\n\n These processes were developed to help document and streamline\n the installation of their SUT tapes.\n\n Probably by now - 2019 - anyone who had interest in using these\n tools for Invision would have downloaded them already.  However,\n the input parms are still useful as examples for other types\n of solutions, especially using CHNGFILE and PULLFILE on CBT file 488.\n\n\n The standard copyright applies to all members submitted.\n\n   ALTHOUGH THESE PROGRAMS HAVE BEEN TESTED AND ARE IN USE IN A\n   PRODUCTION ENVIRONMENT, NO GUARANTEE IS MADE OF, OR\n   RESPONSIBILITY ASSUMED FOR, CORRECT OR RELIABLE OPERATION.\n   THE USE OF THESE PROGRAMS, OR RESULTS THEREOF, IS ENTIRELY\n   AT THE RISK OF THE USER.\n\n   THESE PROGRAMS ARE DONATED TO THE PUBLIC DOMAIN AND MAY\n   BE FREELY COPIED. THEY MAY BE FREELY DISTRIBUTED TO ANY\n   OTHER PARTY ON CONDITION THAT NO INDUCEMENT BEYOND\n   REASONABLE HANDLING COSTS BE OFFERED OR ACCEPTED FOR\n   SUCH DISTRIBUTION.\n\n   THE AUTHOR DOES ASK THAT YOU LEAVE HIS NAME IN THE FILES\n   AND GIVE CREDIT TO HIM AS THE ORIGINAL PROGRAMMER.\n\n\n  Overview\n  --------\n\n  SHARED MEDICAL SYSTEMS is (well - was) one of the largest healthcare\n  software providers in the country.  For the INVISION system (patient\n  accounting and registration systems), updates are sent on SUT\n  tapes.  They arrive both monthly and quarterly.  Installation\n  is a fairly manual process: download software, apply site\n  modifications, document steps, etc.\n\n  Data centers that receive SUT tapes from SMS are called\n  ICO sites (In-house computing option).  The site runs\n  SMS software on their own machine.  SMS also runs their software\n  on their machines in Malvern, PA.  This option is called\n  RCO (remote computing option).\n\n  These routines are geared towards ICO shops that run INVISION.\n\n  These routines attempt to automate some of the SUT install process.\n  Documentation is spread throughout the SUT install libraries.\n  SUT install steps are documented.\n  Backup JCL is automatically generated.\n  Site modifications are automatically placed in the install jcl.\n\n  Some of the utilities in CBT FILE489 require programs\n  or other members located in CBT FILE488.\n\n  NEWWAIT is used throughout these utilities and is located\n  on CBT file 270.\n\n\n  SUT INSTALL  When SISTDAPL is run, other jobs/jcl are placed in\n               the APPLYJCL file.  These jobs perform the\n               following:\n\n               1.  spread the primary tape number throughout the\n                   SUT install jobs for documentation purposes.\n               2.  compare what is being delivered with a list\n                   of items requiring early notification.\n                   generate a report listing flagged elements and\n                   who is associated with them\n               3.  automatically generate backup jcl\n               4.  make repetitive jcl changes to the staging\n                   libraries automatically (ie: change the space\n                   definition for a file, or change UNIT= parameter,\n                   or add DATACLAS= parameters to a file.\n\n\n  DURATIONS    List INVISION batch job durations\n               Sorted by start time, with duration prominently displayed\n               appended to PDSMS.SUGS.CP01.SCHDREPT(0)\n               See JCI0057B\n\n\n  PX ADHOCS    INVISION generates most of its reports using ADHOCS.\n               These can sometimes run for quite awhile.  If there are\n               problems then they are usually restarted from the\n               beginning.\n\n               This process splits the PX ADHOCS into multiple files.\n               They are then run sequentially.  This reduces the\n               possibility that an error will require a restart from\n               the beginning, and also reduces the likelyhood of\n               errors, since less adhocs run in each step.\n\n               IF you name your PX adhocs as *$PXZxxx then another\n               copy of PAP19A6$, called PXADHOCZ, will process them.\n               Use this for PX adhocs that do not have post-dayend\n               dependencies.\n               see $INDEX\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INDEX": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00$\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11$\\x00v\\x00v\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:24:24", "lines": 118, "newlines": 118, "modlines": 0, "user": "IANNONE"}, "text": "\n Members grouped by function\n\n list Invision batch job durations -------------------------------\n JCI0057B   list SMS INVISION batch jobs/durations\n JCI57B     jcl for JCI0057B\n\n split PX adhocs -------------------------------------------------\n PAP19A6$   job step to split PX adhocs into multiple files\n PXADHOCZ   processes *$PXZxxx adhocs\n MIS0515B   distribute PX adhocs into separate files\n SMSACA     tets proc to split PX adhocs into multiple files\n SMSAC010   input to SMSACA\n SMSAJ      PX adhocs scheduled depending on month\n SMSAJ030   input to SMSAJ\n SMSAJ050   input to SMSAJ\n SMSAJ052   input to SMSAJ\n SMSAJ054   input to SMSAJ\n SMSAJ056   input to SMSAJ\n SMSAK      PX adhocs scheduled depending on month\n SMSAK020   input to SMSAK\n SMSAK040   input to SMSAK\n SMSAK050   input to SMSAK\n SMSAK052   input to SMSAK\n SMSAK054   input to SMSAK\n SMSAK056   input to SMSAK\n\n aids to SMS SUT install process ---------------------------------\n MIS0480B   pull element list from sut delivery list\n MIS0485B   compare element list to sut delivery list\n MIS0490B   build dfdss copy statements from SUT delivery list\n MIS0580B   list move requests from SUT delivery list\n SMSBFIL    generate dfdss backup parms from SUT delivery list\n SMSBKUP    jcl for backing-up key files before a SUT install\n\n SMSCHNG    alter SUT install JCL: space, volser, etc - job\n SMSCHN1    alter SUT install JCL: space, volser, etc - proc\n SMSCHN2    spread primary SUT volser throughout SUT files\n SMSCNG01   SMSCHNG:  vsiltest\n SMSCNG02   SMSCHNG:  vsilprod\n SMSCNG03   SMSCHNG:  dbhltest  enlarge default space parameters\n SMSCNG04   SMSCHNG:  dbhlprod  enlarge default space parameters\n SMSCNG05   SMSCHNG:  cpy2test  enlarge default space parameters\n SMSCNG06   SMSCHNG:  cpy2prod  enlarge default space parameters\n SMSCNG07   SMSCHNG:  sixsc$$$\n SMSCNG08   SMSCHNG:  siysc$$$\n\n SMSCICS    compress/delete cics load libraries/modules for cics SUT\n SMSCOMP    compare SUT delivery elements (a SUT 'CYA' report)\n SMSCMP01   input to SMSCOMP\n SMSCMP02   input to SMSCOMP\n SMSPUL99   input to SMSCOMP\n SMSCOPY    make copies of pre-sut libraries before SUT install\n SMSDOC     generic SUT job jcl\n SMSJES1    purge and alter jes reports/jcl\n SMSJES2    purge and alter jes reports/jcl\n SMSLOAD    empty and compress staging libraries\n SMSMAIL    generate cut-and-paste SUT notification mail\n SMSMEM     append to proc SISTDAPL to load custom SUT jobs\n SMSNOTE    SMS SUT install procedures\n SMSPRNT    print SISTDAPL report\n SMSREF     first half of SMSCOMP to refresh listing of SUT contents\n SMSREQ     print SUT 'move requests' by number\n SMSSUT     used to warn analysts that a SUT member has been delivered\n\n SMSJOBS    retrofit site customizations to SUT delivery elements\n SMSCCCL    input to SMSJOBS\n SMSC4MXU   input to SMSJOBS\n SMSHMDLY   input to SMSJOBS\n SMSHMSPL   input to SMSJOBS\n SMSIPFSP   input to SMSJOBS\n SMSMIVBK   input to SMSJOBS\n SMSARDLY   input to SMSJOBS\n SMSARSPL   input to SMSJOBS\n SMSBDSPL   input to SMSJOBS\n SMSOPSPL   input to SMSJOBS\n SMSOPTRN   input to SMSJOBS\n SMSPAEZ0   input to SMSJOBS\n SMSPAP01   input to SMSJOBS\n SMSPAP02   input to SMSJOBS\n SMSPAP05   input to SMSJOBS\n SMSPAP08   input to SMSJOBS\n SMSPAP10   input to SMSJOBS\n SMSPAP13   input to SMSJOBS\n SMSPAP18   input to SMSJOBS\n SMSPAP24   input to SMSJOBS\n SMSPAP33   input to SMSJOBS\n SMSPCPR2   input to SMSJOBS\n SMSPROVL   input to SMSJOBS\n SMSPULP    input to SMSJOBS\n SMSPULT    input to SMSJOBS\n SMSPUL06   input to SMSJOBS\n\n\n to use:\n\n 1.  create PLSMS.SMSSM00L.H00T0.PROC    (H=hold  T0=hospital code)\n     add SMSCHN1\n\n 2.  create PLSMS.SMSSM00L.H00T0.SYSJOBS\n     add SMSBFIL    SMSJES2\n         SMSBKUP    SMSJOBS\n         SMSCHNG    SMSLOAD\n         SMSCICS    SMSMAIL\n         SMSCOMP    SMSNOTE\n         SMSCOPY    SMSPRNT\n         SMSDOC     SMSREF\n         SMSJES1    SMSREQ\n\n 3.  create PLSMS.SMSSM00L.H00T0.SYSIN\n     add any 'input to' members\n     add the SMSCHNG input members\n\n 4.  place jcl in SMSMEM at end of proc SISTDAPL\n\n 5.  follow instructions in SMSNOTE when installing suts\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INDEX2": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x009\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11$\\x00\\\\\\x00\\\\\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:24:39", "lines": 92, "newlines": 92, "modlines": 0, "user": "IANNONE"}, "text": "\n Members indexed alphabetically\n\n Note: these 3 members all refer to the same set of programs\n $DOC       overview of programs/systems\n $INDEX     programs/systems sorted by function\n\n $INDEX2    programs/systems sorted alphabetically\n\n\n JCI0057B   list SMS INVISION batch jobs/durations\n JCI57B     jcl for JCI0057B\n MIS0480B   pull element list from sut delivery list\n MIS0485B   compare element list to sut delivery list\n MIS0490B   build dfdss copy statements from SUT delivery list\n MIS0515B   distribute PX adhocs into separate files\n MIS0580B   list move requests from SUT delivery list\n PAP19A6$   job step to split PX adhocs into multiple files\n PXADHOCZ   job step to split PX 'Z' adhocs into multiple files\n SMSACA     test proc to split PX adhocs into multiple files\n SMSAC010   input to SMSACA\n SMSAJ      PX adhocs scheduled depending on month\n SMSAJ030   input to SMSAJ\n SMSAJ050   input to SMSAJ\n SMSAJ052   input to SMSAJ\n SMSAJ054   input to SMSAJ\n SMSAJ056   input to SMSAJ\n SMSAK      PX adhocs scheduled depending on month\n SMSAK020   input to SMSAK\n SMSAK040   input to SMSAK\n SMSAK050   input to SMSAK\n SMSAK052   input to SMSAK\n SMSAK054   input to SMSAK\n SMSAK056   input to SMSAK\n SMSARDLY   input to SMSJOBS\n SMSARSPL   input to SMSJOBS\n SMSBDSPL   input to SMSJOBS\n SMSBFIL    generate dfdss backup parms from SUT delivery list\n SMSBKUP    jcl for backing-up key files before a SUT install\n SMSCCCL    input to SMSJOBS\n SMSCHNG    alter SUT install JCL: space, volser, etc - job\n SMSCHN1    alter SUT install JCL: space, volser, etc - proc\n SMSCHN2    spread primary SUT volser throughout SUT files\n SMSCICS    compress/delete cics load libraries/modules for cics SUT\n SMSCMP01   input to SMSCOMP\n SMSCMP02   input to SMSCOMP\n SMSCNG01   SMSCHNG:  vsiltest\n SMSCNG02   SMSCHNG:  vsilprod\n SMSCNG03   SMSCHNG:  dbhltest  enlarge default space parameters\n SMSCNG04   SMSCHNG:  dbhlprod  enlarge default space parameters\n SMSCNG05   SMSCHNG:  cpy2test  enlarge default space parameters\n SMSCNG06   SMSCHNG:  cpy2prod  enlarge default space parameters\n SMSCNG07   SMSCHNG:  sixsc$$$\n SMSCNG08   SMSCHNG:  siysc$$$\n SMSCOMP    compare SUT delivery elements (a SUT 'CYA' report)\n SMSCOPY    make copies of pre-sut libraries before SUT install\n SMSC4MXU   input to SMSJOBS\n SMSDOC     generic SUT job jcl\n SMSHMDLY   input to SMSJOBS\n SMSHMSPL   input to SMSJOBS\n SMSIPFSP   input to SMSJOBS\n SMSJES1    purge and alter jes reports/jcl\n SMSJES2    purge and alter jes reports/jcl\n SMSJOBS    retrofit site customizations to SUT delivery elements\n SMSLOAD    empty and compress staging libraries\n SMSMAIL    generate cut-and-paste SUT notification mail\n SMSMEM     append to proc SISTDAPL to load custom SUT jobs\n SMSMIVBK   input to SMSJOBS\n SMSNOTE    SMS SUT install procedures\n SMSOPSPL   input to SMSJOBS\n SMSOPTRN   input to SMSJOBS\n SMSPAEZ0   input to SMSJOBS\n SMSPAP01   input to SMSJOBS\n SMSPAP02   input to SMSJOBS\n SMSPAP05   input to SMSJOBS\n SMSPAP08   input to SMSJOBS\n SMSPAP10   input to SMSJOBS\n SMSPAP13   input to SMSJOBS\n SMSPAP18   input to SMSJOBS\n SMSPAP24   input to SMSJOBS\n SMSPAP33   input to SMSJOBS\n SMSPCPR2   input to SMSJOBS\n SMSPRNT    print SISTDAPL report\n SMSPROVL   input to SMSJOBS\n SMSPULP    input to SMSJOBS\n SMSPULT    input to SMSJOBS\n SMSPUL06   input to SMSJOBS\n SMSPUL99   input to SMSCOMP\n SMSREF     first half of SMSCOMP to refresh listing of SUT contents\n SMSREQ     print SUT 'move requests' by number\n SMSSUT     used to warn analysts that a SUT member has been delivered\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE489": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x001\\x01\\x19\\x07\\x8f\\x01\\x19\\x07\\x8f\\x14\\x00\\x00\\x19\\x00\\x19\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2019-03-19T00:00:00", "modifydate": "2019-03-19T14:00:31", "lines": 25, "newlines": 25, "modlines": 0, "user": "CBT-497"}, "text": "//***FILE 489 is from Jim Iannone and contains software to help     *   FILE 489\n//*           in the installation of SUT update tapes from Shared   *   FILE 489\n//*           Medical Systems of Malvern, PA  (which was bought     *   FILE 489\n//*           by Siemens).  This package could help hospital        *   FILE 489\n//*           installations which run INVISION install their        *   FILE 489\n//*           update tapes.                                         *   FILE 489\n//*                                                                 *   FILE 489\n//*           The contents of this file pertain to:                 *   FILE 489\n//*                                                                 *   FILE 489\n//*           SHARED MEDICAL SYSTEMS (SMS) Software Update Tape     *   FILE 489\n//*           (SUT) delivery/install procedures.  INVISION runs     *   FILE 489\n//*           on an S/390 platform.  These processes were           *   FILE 489\n//*           developed to help document and streamline the         *   FILE 489\n//*           installation of their SUT tapes.                      *   FILE 489\n//*                                                                 *   FILE 489\n//*           These are utilities developed over 28 years at        *   FILE 489\n//*           St. Vincent Medical Center in Toledo, Ohio.           *   FILE 489\n//*                                                                 *   FILE 489\n//*           They were submitted by, and primarily authored by:    *   FILE 489\n//*                                                                 *   FILE 489\n//*           Jim Iannone                                           *   FILE 489\n//*           Systems / Applications Programmer                     *   FILE 489\n//*           Toledo, Ohio                                          *   FILE 489\n//*           jiannon@me.com                                        *   FILE 489\n//*                                                                 *   FILE 489\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCI0057B": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x19\\x07O\\x01\\x19\\x07O\\x10Q\\x01\\xd7\\x01\\xd7\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T10:51:07", "lines": 471, "newlines": 471, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  JCI0057B: LIST SMS JOBS BY DURATION'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    JCI0057B.\n      ******************************************************************\n      *@@@ II LIST SMS JOBS BY DURATION\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 07/10/2000\n      * AUTHOR      : JIM IANNONE\n      *               SORT THE PDSMS.SUGS.CP01.SCHDREPT(0) FILE\n      *               BY START TIME AND DATE.  LIST RUN DURATION.\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n           C01 IS PAGE-TOP.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT SCHDRPT              ASSIGN TO SCHDRPT\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT PRINT-SCHDRPT        ASSIGN TO PRINTER.\n\n           SELECT PRINT-SCHDRP2        ASSIGN TO PRINT2.\n\n           SELECT SORT-SCHDRPT         ASSIGN TO S-SORTWK01.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  SCHDRPT\n           RECORDING MODE F.\n       01  SCHDRPT-RECORD.\n           05  FILLER                  PIC  X(05).\n           05  SCHDRPT-STREAM          PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SCHDRPT-JOB             PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SCHDRPT-STATUS          PIC  X.\n           05  FILLER                  PIC  X(19).\n           05  SCHDRPT-ST-MDY8         PIC  X(08).\n           05  FILLER REDEFINES SCHDRPT-ST-MDY8.\n               10  FILLER              PIC  XX.\n               10  SCHDRPT-SLASH1      PIC  X.\n               10  FILLER              PIC  XX.\n               10  SCHDRPT-SLASH2      PIC  X.\n               10  FILLER              PIC  XX.\n           05  FILLER                  PIC  X.\n           05  SCHDRPT-ST-HMS8         PIC  X(08).\n           05  FILLER REDEFINES SCHDRPT-ST-HMS8.\n               10  FILLER              PIC  XX.\n               10  SCHDRPT-COLON1      PIC  X.\n               10  FILLER              PIC  XX.\n               10  SCHDRPT-COLON2      PIC  X.\n               10  FILLER              PIC  XX.\n           05  FILLER                  PIC  X(04).\n           05  SCHDRPT-END-MDY8        PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SCHDRPT-END-HMS8        PIC  X(08).\n           05  FILLER                  PIC  X(04).\n           05  SCHDRPT-DESC            PIC  X(30).\n           05  FILLER                  PIC  X(17).\n\n       FD  PRINT-SCHDRPT\n           RECORDING MODE F.\n       01  PRINT-AREA.\n           05  FILLER                  PIC  X(132).\n\n       FD  PRINT-SCHDRP2\n           RECORDING MODE F.\n       01  PRINT-AREA2.\n           05  FILLER                  PIC  X(132).\n\n       SD  SORT-SCHDRPT.\n       01  SORT-RECORD.\n           05  SR-ST-MDY8              PIC  X(08).\n           05  SR-ST-HMS8              PIC  X(08).\n           05  SR-END-MDY8             PIC  X(08).\n           05  SR-END-HMS8             PIC  X(08).\n           05  SR-JOB                  PIC  X(08).\n           05  SR-STREAM               PIC  X(08).\n           05  SR-STATUS               PIC  X.\n           05  SR-DURATION             PIC  X(05).\n           05  FILLER REDEFINES SR-DURATION.\n               10  SR-DUR-1            PIC  X.\n               10  SR-DUR-2            PIC  X.\n               10  SR-DUR-3X5          PIC  XXX.\n           05  SR-DESC                 PIC  X(30).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE JCI0057B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n           05  WS-HOLD-DAYS            PIC  XX       VALUE SPACE.\n           05  WS-HOUR                 PIC  9(04)    VALUE ZERO.\n           05  WS-MIN                  PIC  9(06)    VALUE ZERO.\n           05  WS-REMAIN               PIC  999      VALUE ZERO.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.\n           05  WS-SORT-RCD-CNT         PIC S9(07)    VALUE ZERO.\n\n       01  WS-PRINT-CONTROL            COMP.\n           05  WS-LINE-SUM             PIC S99       VALUE +90.\n           05  WS-LINE-MAX             PIC S99       VALUE +57.\n           05  WS-PAGE-CNT             PIC S9(05)    VALUE ZERO.\n           05  WS-SPACE-CONTROL        PIC S99       VALUE ZERO.\n\n       01  WS-SUBSCRIPTS               COMP.\n           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.\n           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-SCHDRPT-SW       PIC  X        VALUE 'N'.\n               88  END-OF-SCHDRPT                    VALUE 'Y'.\n               88  MORE-SCHDRPT-RCDS                 VALUE 'N'.\n           05  WS-END-SORT-SW          PIC  X        VALUE 'N'.\n               88  END-OF-SORT                       VALUE 'Y'.\n               88  MORE-SORT-RCDS                    VALUE 'N'.\n           05  WS-FIRST-SW             PIC  X        VALUE 'Y'.\n               88  FIRST-RECORD                      VALUE 'Y'.\n\n       01  WS-STV0400B-FIELDS.\n           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-ERROR      PIC  X(06).\n               10  STV0400B-NBR        PIC  X(04).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-CYMD       PIC  X(08).\n               10  FILLER              PIC  XX.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAYS       PIC  X(05).\n               10  FILLER              PIC  X(05).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAY        PIC  X(09).\n               10  STV0400B-DAY-NBR    PIC  X.\n           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.\n           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.\n           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.\n\n      ****************************************\n      *    STANDARD MIS HEADINGS (8.5\" X 14\")\n      ****************************************\n       01  HEADING-LINE-1.\n           05  FILLER                  PIC  X(08)    VALUE 'JCI0057B'.\n           05  FILLER                  PIC  X(08)    VALUE '  DATE  '.\n           05  H1-DATE                 PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X(29)    VALUE SPACE.\n           05  FILLER                  PIC  X(26)    VALUE\n               '  MERCY HEALTH PARTNERS   '.\n           05  FILLER                  PIC  X(43)    VALUE SPACE.\n           05  FILLER                  PIC  X(05)    VALUE 'PAGE '.\n           05  H1-PAGE                 PIC  ZZZZ9    VALUE ZERO.\n\n       01  APPEND-LINE-1.\n           05  FILLER                  PIC  X        VALUE SPACE.\n           05  FILLER                  PIC  X(08)    VALUE 'JCI0057B'.\n           05  FILLER                  PIC  X(08)    VALUE '  DATE  '.\n           05  A1-DATE                 PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X(28)    VALUE SPACE.\n           05  FILLER                  PIC  X(26)    VALUE\n               '     SCHDREPT SUMMARY     '.\n           05  FILLER                  PIC  X(53)    VALUE SPACE.\n\n       01  HEADING-LINE-2.\n           05  H2-SECURITY-CODE        PIC  X(20)    VALUE SPACE.\n           05  FILLER                  PIC  X(31)    VALUE SPACE.\n           05  FILLER                  PIC  X(30)    VALUE\n               '     INFORMATION SERVICES     '.\n           05  FILLER                  PIC  X(51)     VALUE SPACE.\n\n       01  HEADING-LINE-4.\n           05  FILLER                  PIC  X(33)    VALUE\n               '  START             END          '.\n           05  FILLER                  PIC  X(33)    VALUE\n               '      HH:MM     JOB       STREAM '.\n           05  FILLER                  PIC  X(33)    VALUE\n               '   STATUS  DESCRIPTION           '.\n           05  FILLER                  PIC  X(33)    VALUE\n               '                                 '.\n\n       01  HEADING-LINE-5.\n           05  FILLER                  PIC  X(33)    VALUE\n               '  ----------------- -------------'.\n           05  FILLER                  PIC  X(33)    VALUE\n               '----  -----     --------  -------'.\n           05  FILLER                  PIC  X(33)    VALUE\n               '-  ------  ----------------------'.\n           05  FILLER                  PIC  X(33)    VALUE\n               '--------                         '.\n\n       01  DETAIL-LINE-1.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-ST-MDY8              PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X        VALUE SPACE.\n           05  D1-ST-HMS8              PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X        VALUE SPACE.\n           05  D1-END-MDY8             PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X        VALUE SPACE.\n           05  D1-END-HMS8             PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-DURATION             PIC  X(05)    VALUE SPACE.\n           05  FILLER REDEFINES D1-DURATION.\n               10  D1-DUR-1            PIC  X.\n               10  D1-DUR-2            PIC  X.\n               10  D1-DUR-3X5          PIC  XXX.\n           05  FILLER                  PIC  X(05)    VALUE SPACE.\n           05  D1-JOB                  PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-STREAM               PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-STATUS               PIC  X        VALUE SPACE.\n           05  FILLER                  PIC  X(07)    VALUE SPACE.\n           05  D1-DESC                 PIC  X(30)    VALUE SPACE.\n           05  FILLER                  PIC  X(25)    VALUE SPACE.\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  JCI0057B END  '.\n\n       LINKAGE SECTION.\n\n      /\n       PROCEDURE DIVISION.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-PROCESS-SCHDRPT.\n\n           DISPLAY '**** RECORDS IN SCHDRPT  ' WS-READ-RCD-CNT.\n           DISPLAY '**** RECORDS SORTED      ' WS-SORT-RCD-CNT.\n           DISPLAY '**** JCI0057B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** JCI0057B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  SCHDRPT.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** JCI0057B OPEN ERROR ON SCHDRPT'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT PRINT-SCHDRP2.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** JCI0057B OPEN ERROR ON SCHDRP2'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT PRINT-SCHDRPT.\n\n       0300-CLOSE-FILES.\n           CLOSE PRINT-SCHDRPT.\n           CLOSE PRINT-SCHDRP2.\n           CLOSE SCHDRPT.\n\n       0400-PROCESS-SCHDRPT.\n           PERFORM 0500-GET-PARM-CYMD.\n           IF WS-RETURN-CODE = ZERO\n               SORT SORT-SCHDRPT\n                   ON ASCENDING KEY SR-ST-MDY8\n                                    SR-ST-HMS8\n                   INPUT PROCEDURE IS 0600-SORT-IN\n                   OUTPUT PROCEDURE IS 1500-SORT-OUT.\n\n       0500-GET-PARM-CYMD.\n           MOVE SPACE                     TO WS-STV0400B-FIELDS.\n           MOVE 'M/D/Y '                  TO STV0400B-OUT.\n           CALL 'STV0400B' USING WS-STV0400B-FIELDS.\n           MOVE STV0400B-DATA             TO H1-DATE A1-DATE.\n\n       0600-SORT-IN.\n           PERFORM 0700-READ-SCHDRPT THRU\n                   0700-READ-SCHDRPT-EXIT\n                   UNTIL END-OF-SCHDRPT.\n\n       0700-READ-SCHDRPT.\n           READ SCHDRPT.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT\n               PERFORM 0800-SELECT THRU\n                       0800-SELECT-EXIT\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-SCHDRPT-SW\n           ELSE\n               DISPLAY '**** JCI0057B READ ERROR ON SCHDRPT '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0700                     TO WS-RETURN-CODE.\n\n       0700-READ-SCHDRPT-EXIT. EXIT.\n\n       0800-SELECT.\n           IF SCHDRPT-SLASH1 = '/'\n               AND SCHDRPT-SLASH2 = '/'\n               AND SCHDRPT-COLON1 = ':'\n               AND SCHDRPT-COLON2 = ':'\n               PERFORM 0900-DETERMINE-DURATION THRU\n                       0900-DETERMINE-EXIT\n               PERFORM 1100-SEND-TO-SORT.\n\n       0800-SELECT-EXIT. EXIT.\n\n       0900-DETERMINE-DURATION.\n           MOVE SPACE                         TO SR-DURATION.\n           MOVE SPACE                         TO WS-STV0400B-FIELDS.\n           IF SCHDRPT-ST-MDY8 = SCHDRPT-END-MDY8\n               MOVE '00'                      TO WS-HOLD-DAYS\n           ELSE\n               MOVE SCHDRPT-ST-MDY8           TO STV0400B-DATA\n               MOVE SCHDRPT-END-MDY8          TO STV0400B-DATA2\n               MOVE 'M/D/Y '                  TO STV0400B-IN\n               MOVE 'DAYS  '                  TO STV0400B-OUT\n               CALL 'STV0400B' USING WS-STV0400B-FIELDS\n               IF STV0400B-ERROR = 'ERROR'\n                   DISPLAY '**** ERROR CONVERTING DATES '\n                   WS-STV0400B-FIELDS\n                   MOVE +1000                 TO WS-RETURN-CODE\n                   GO TO 0900-DETERMINE-EXIT\n               ELSE\n                   MOVE STV0400B-DAYS(4: 2)   TO WS-HOLD-DAYS.\n           MOVE SPACE                         TO WS-STV0400B-FIELDS.\n           MOVE SCHDRPT-ST-HMS8(1: 2)         TO STV0400B-DATA(1: 2).\n           MOVE SCHDRPT-ST-HMS8(4: 2)         TO STV0400B-DATA(3: 2).\n           MOVE SCHDRPT-ST-HMS8(7: 2)         TO STV0400B-DATA(5: 2).\n           MOVE WS-HOLD-DAYS                  TO STV0400B-DATA(7: 2).\n           MOVE SCHDRPT-END-HMS8(1: 2)        TO STV0400B-DATA2(1: 2).\n           MOVE SCHDRPT-END-HMS8(4: 2)        TO STV0400B-DATA2(3: 2).\n           MOVE SCHDRPT-END-HMS8(7: 2)        TO STV0400B-DATA2(5: 2).\n           MOVE 'HMSM  '                      TO STV0400B-IN.\n           MOVE 'MIN   '                      TO STV0400B-OUT.\n           CALL 'STV0400B' USING WS-STV0400B-FIELDS\n           IF STV0400B-ERROR = 'ERROR'\n               DISPLAY '**** ERROR CONVERTING TIMES '\n               WS-STV0400B-FIELDS\n               MOVE +0900                     TO WS-RETURN-CODE\n               GO TO 0900-DETERMINE-EXIT\n           ELSE\n           IF STV0400B-DATA(1: 6) NUMERIC\n               MOVE STV0400B-DATA(1: 6)       TO WS-MIN\n               DIVIDE WS-MIN BY 60 GIVING WS-HOUR\n                      REMAINDER WS-REMAIN\n               MOVE WS-HOUR(3: 2)             TO SR-DURATION(1: 2)\n               MOVE ':'                       TO SR-DURATION(3: 1)\n               MOVE WS-REMAIN(2: 2)           TO SR-DURATION(4: 2).\n\n       0900-DETERMINE-EXIT. EXIT.\n\n       1100-SEND-TO-SORT.\n           MOVE SCHDRPT-STREAM                TO SR-STREAM.\n           MOVE SCHDRPT-JOB                   TO SR-JOB.\n           MOVE SCHDRPT-STATUS                TO SR-STATUS.\n           MOVE SCHDRPT-DESC                  TO SR-DESC.\n           MOVE SCHDRPT-ST-MDY8               TO SR-ST-MDY8.\n           MOVE SCHDRPT-ST-HMS8               TO SR-ST-HMS8.\n           MOVE SCHDRPT-END-MDY8              TO SR-END-MDY8.\n           MOVE SCHDRPT-END-HMS8              TO SR-END-HMS8.\n           RELEASE SORT-RECORD.\n\n       1500-SORT-OUT.\n           PERFORM 1600-RETURN-RECORDS\n               UNTIL END-OF-SORT.\n\n           IF WS-RETURN-CODE = ZERO\n               IF WS-SORT-RCD-CNT > ZERO\n                   CONTINUE\n               ELSE\n                   PERFORM 1900-PRINT-HEADINGS\n                   MOVE '     NO RECORDS MATCH SELECTION CRITERIA'\n                                              TO PRINT-AREA\n                   PERFORM 2000-WRITE-LINE.\n\n       1600-RETURN-RECORDS.\n           PERFORM 1700-RETURN-SORT.\n           IF MORE-SORT-RCDS\n               ADD 1                          TO WS-SORT-RCD-CNT\n               PERFORM 1800-PRINT-DETAIL-LINE.\n\n       1700-RETURN-SORT.\n           RETURN SORT-SCHDRPT\n               AT END\n                   MOVE 'Y'                   TO WS-END-SORT-SW.\n\n       1800-PRINT-DETAIL-LINE.\n           IF WS-LINE-SUM > WS-LINE-MAX\n               PERFORM 1900-PRINT-HEADINGS.\n           MOVE SR-STREAM                     TO D1-STREAM.\n           MOVE SR-JOB                        TO D1-JOB.\n           MOVE SR-STATUS                     TO D1-STATUS.\n           IF SR-DURATION = '00:00' OR '00:01'\n               MOVE SPACE                     TO D1-DURATION\n           ELSE\n           IF SR-DUR-1 = '0'\n               MOVE SR-DURATION               TO D1-DURATION\n               IF SR-DUR-2 = '0'\n                   MOVE SPACE                 TO D1-DUR-1 D1-DUR-2\n               ELSE\n                   MOVE SPACE                 TO D1-DUR-1\n           ELSE\n               MOVE SR-DURATION               TO D1-DURATION.\n           MOVE SR-DESC                       TO D1-DESC.\n           MOVE SR-ST-MDY8                    TO D1-ST-MDY8.\n           MOVE SR-ST-HMS8                    TO D1-ST-HMS8.\n           MOVE SR-END-MDY8                   TO D1-END-MDY8.\n           MOVE SR-END-HMS8                   TO D1-END-HMS8.\n           MOVE DETAIL-LINE-1                 TO PRINT-AREA.\n           PERFORM 2000-WRITE-LINE.\n           MOVE DETAIL-LINE-1                 TO PRINT-AREA2.\n           PERFORM 2000-APPEND-LINE.\n\n       1900-PRINT-HEADINGS.\n           ADD 1                              TO WS-PAGE-CNT.\n           MOVE 1                             TO WS-SPACE-CONTROL.\n           MOVE WS-PAGE-CNT                   TO H1-PAGE.\n           MOVE HEADING-LINE-1                TO PRINT-AREA.\n           PERFORM 2100-WRITE-PAGE-TOP.\n           MOVE HEADING-LINE-2                TO PRINT-AREA.\n           PERFORM 2000-WRITE-LINE.\n           MOVE 2                             TO WS-SPACE-CONTROL.\n           MOVE HEADING-LINE-4                TO PRINT-AREA.\n           PERFORM 2000-WRITE-LINE.\n           MOVE 1                             TO WS-SPACE-CONTROL.\n           MOVE HEADING-LINE-5                TO PRINT-AREA.\n           PERFORM 2000-WRITE-LINE.\n           IF FIRST-RECORD\n               MOVE 'N'                       TO WS-FIRST-SW\n               MOVE APPEND-LINE-1             TO PRINT-AREA2\n               PERFORM 2000-APPEND-LINE\n               MOVE SPACE                     TO PRINT-AREA2\n               PERFORM 2000-APPEND-LINE\n               MOVE HEADING-LINE-4            TO PRINT-AREA2\n               PERFORM 2000-APPEND-LINE\n               MOVE HEADING-LINE-5            TO PRINT-AREA2\n               PERFORM 2000-APPEND-LINE.\n\n       2000-WRITE-LINE.\n           WRITE PRINT-AREA\n               AFTER ADVANCING WS-SPACE-CONTROL LINES.\n           ADD WS-SPACE-CONTROL               TO WS-LINE-SUM.\n\n       2000-APPEND-LINE.\n           WRITE PRINT-AREA2.\n\n       2100-WRITE-PAGE-TOP.\n           WRITE PRINT-AREA\n               AFTER ADVANCING PAGE-TOP.\n           MOVE 1                             TO WS-LINE-SUM.\n\n      ************************************ END JCI0057B\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCI57B": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x19\\x07O\\x01\\x19\\x07O\\x10R\\x00\\x17\\x00\\x17\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T10:52:20", "lines": 23, "newlines": 23, "modlines": 0, "user": "IANNONE"}, "text": "//*----------------------------------------------\n//*\n//*  submit after GSPJ1$01 completes.\n//*\n//*  this summarizes the sms invision batch dayend stream\n//*  and gives you a condensed listing with job durations\n//*\n//*----------------------------------------------\n//S020     EXEC PGM=JCI0057B,\n//             REGION=2048K,\n//*            RESTART=S010,\n//             COND=(0,NE)\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SCHDRPT  DD  DSN=PDSMS.SUGS.CP01.SCHDREPT(0),DISP=SHR\n//PRINTER  DD  DUMMY\n//*RINTER  DD  SYSOUT=(X,,STD),FCB=STD\n//PRINT2   DD  DSN=PDSMS.SUGS.CP01.SCHDREPT(0),\n//             DISP=(MOD,KEEP,KEEP)\n//*----------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MIS0480B": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11\\x13\\x02:\\x02:\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:13:48", "lines": 570, "newlines": 570, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  MIS0480B: pull element list from sut delivery list'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    MIS0480B.\n      ******************************************************************\n      *@@@ II pull element list from sut delivery list\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 08/09/96\n      * AUTHOR      : JIM IANNONE\n      *               LOOP THROUGH A SUT CHANGE REPORT AND PARSE\n      *               RECORDS INTO A USEABLE FORMAT FOR FUTURE\n      *               COMPARES.\n      *\n      ******************************************************************\n      *               SUTS are delivered to 'ICO' environments\n      *               by Shared Medical Systems in Malvern, PA.\n      *\n      *               A report listing what is delivered is presented\n      *               in electronic form on the tape.  This\n      *               program will loop through that report and\n      *               further clarify what has been delivered.\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT SUTIN                ASSIGN TO SUTIN\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SUTO01               ASSIGN TO SUTO01\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SUTO02               ASSIGN TO SUTO02\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SUTO03               ASSIGN TO SUTO03\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SMSNAME              ASSIGN TO SMSNAME\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  SUTIN\n           RECORDING MODE F.\n       01  SUTIN-RECORD.\n           05  SUTIN-RCD1              PIC  X(133).\n           05  FILLER REDEFINES SUTIN-RCD1.\n               10  FILLER              PIC  X(05).\n               10  SUTIN-LIB           PIC  X(08).\n               10  FILLER              PIC  X(05).\n               10  SUTIN-MARK1         PIC  X.\n               10  FILLER              PIC  XXX.\n               10  SUTIN-ELEMENT       PIC  X(08).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-MARK2         PIC  X.\n               10  FILLER              PIC  XX.\n               10  SUTIN-LIB-NAME      PIC  X(44).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-MARK3         PIC  X.\n               10  FILLER              PIC  XXX.\n               10  SUTIN-TARGET        PIC  X(05).\n               10  FILLER              PIC  XX.\n               10  SUTIN-MARK4         PIC  X.\n               10  FILLER              PIC  XX.\n               10  SUTIN-AREA1         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ1     PIC  X(05).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-AREA2         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ2     PIC  X(05).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-AREA3         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ3     PIC  X(05).\n\n       FD  SUTO01\n           RECORDING MODE F.\n       01  SUTO01-RECORD.\n           05  FILLER              PIC  X.\n           05  SUTO01-SUT-NAME     PIC  X(20).\n           05  FILLER              PIC  X.\n           05  SUTO01-LIB          PIC  X(08).\n           05  FILLER              PIC  X.\n           05  SUTO01-MARK1        PIC  X.\n           05  FILLER              PIC  X.\n           05  SUTO01-ELEMENT      PIC  X(08).\n           05  FILLER              PIC  X.\n           05  SUTO01-MARK2        PIC  X.\n           05  FILLER              PIC  X.\n           05  SUTO01-LIB-NAME     PIC  X(44).\n           05  SUTO01-TRAILER.\n               10  FILLER              PIC  X.\n               10  SUTO01-MARK3        PIC  X.\n               10  FILLER              PIC  X.\n               10  SUTO01-TARGET       PIC  X(05).\n               10  FILLER              PIC  X.\n               10  SUTO01-MARK4        PIC  X.\n               10  FILLER              PIC  X.\n               10  SUTO01-AREA1        PIC  XXX.\n               10  FILLER              PIC  X.\n               10  SUTO01-MOVE-REQ1    PIC  X(05).\n               10  FILLER              PIC  X.\n               10  SUTO01-AREA2        PIC  XXX.\n               10  FILLER              PIC  X.\n               10  SUTO01-MOVE-REQ2    PIC  X(05).\n               10  FILLER              PIC  X.\n               10  SUTO01-AREA3        PIC  XXX.\n               10  FILLER              PIC  X.\n               10  SUTO01-MOVE-REQ3    PIC  X(05).\n               10  FILLER              PIC  X(04).\n           05  SUTO01-TRAILER2 REDEFINES SUTO01-TRAILER.\n               10  SUTO01-DESCRIPTION  PIC  X(40).\n               10  FILLER              PIC  X(04).\n\n       FD  SUTO02\n           RECORDING MODE F.\n       01  SUTO02-RECORD.\n           05  SUTO02-SUT-NAME         PIC  X(20).\n           05  FILLER                  PIC  X.\n           05  SUTO02-MOVE-REQ         PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SUTO02-APPLY            PIC  X(80).\n           05  FILLER                  PIC  X(22).\n\n       FD  SUTO03\n           RECORDING MODE F.\n       01  SUTO03-RECORD.\n           05  SUTO03-SUT-NAME         PIC  X(20).\n           05  FILLER                  PIC  X.\n           05  SUTO03-MOVE-REQ         PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SUTO03-APPLY            PIC  X(80).\n           05  FILLER                  PIC  X(22).\n\n       FD  SMSNAME\n           RECORDING MODE F.\n       01  SMSNAME-RECORD.\n           05  SMSNAME-PRE             PIC  X(12).\n           05  SMSNAME-NAME            PIC  X(30).\n           05  FILLER                  PIC  X(38).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE MIS0480B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n           05  WS-MARK                 PIC  X        VALUE X'4F'.\n           05  WS-SUT-NAME             PIC  X(20)    VALUE SPACE.\n           05  WS-SMSNAME              PIC  X(30)    VALUE SPACE.\n           05  WS-MOVE-REQ             PIC  X(08)    VALUE SPACE.\n           05  WS-HOLD-LIB             PIC  X(08)    VALUE SPACE.\n           05  WS-HOLD-ELEMENT         PIC  X(08)    VALUE SPACE.\n           05  WS-HOLD-LIB-NAME        PIC  X(44)    VALUE SPACE.\n           05  WS-HOLD-DESCRIPTION     PIC  X(40)    VALUE SPACE.\n           05  WS-HOLD-SUTIN-RCD       PIC  X(133)   VALUE SPACE.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.\n           05  WS-WRITE-RCD1-CNT       PIC S9(07)    VALUE ZERO.\n           05  WS-WRITE-RCD2-CNT       PIC S9(07)    VALUE ZERO.\n           05  WS-WRITE-RCD3-CNT       PIC S9(07)    VALUE ZERO.\n           05  WS-SKIP-CNT             PIC S9(05)    VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-SUTIN-SW         PIC  X        VALUE 'N'.\n               88  END-OF-SUTIN                      VALUE 'Y'.\n               88  MORE-SUTIN-RCDS                   VALUE 'N'.\n           05  WS-NEXT-SW              PIC  X        VALUE SPACE.\n           05  WS-DASH-SW              PIC  X        VALUE SPACE.\n           05  WS-DIFF-SW              PIC  X        VALUE SPACE.\n           05  WS-DIFF-SW2             PIC  X        VALUE SPACE.\n           05  WS-REPORT-FOUND-SW      PIC  X        VALUE SPACE.\n\n       01  WS-SUBSCRIPTS               COMP.\n           05  WS-SUB1                 PIC S9(04)   VALUE ZERO.\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  MIS0480B END  '.\n\n      /\n       PROCEDURE DIVISION.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-PROCESS-SUTIN.\n\n           DISPLAY '**** RECORDS IN SUTIN    ' WS-READ-RCD-CNT.\n           DISPLAY '**** ELEMENT RCDS OUT    ' WS-WRITE-RCD1-CNT.\n           DISPLAY '**** APPLY RCDS OUT      ' WS-WRITE-RCD2-CNT.\n           DISPLAY '**** DELIV DESC RCDS OUT ' WS-WRITE-RCD3-CNT.\n           DISPLAY '**** MIS0480B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** MIS0480B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  SUTIN.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0480B OPEN ERROR ON SUTIN'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT SUTO01.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0480B OPEN ERROR ON SUTO01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT SUTO02.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0480B OPEN ERROR ON SUTO02'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT SUTO03.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0480B OPEN ERROR ON SUTO03'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN INPUT SMSNAME.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0480B OPEN ERROR ON SMSNAME'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n\n       0300-CLOSE-FILES.\n           CLOSE SMSNAME.\n           CLOSE SUTO03.\n           CLOSE SUTO02.\n           CLOSE SUTO01.\n           CLOSE SUTIN.\n\n       0400-PROCESS-SUTIN.\n           IF WS-RETURN-CODE = ZERO\n               MOVE 'UNKNOWN SUT DELIVERY'    TO WS-SMSNAME\n               PERFORM 0500-FIND-NAME THRU\n                       0500-FIND-NAME-EXIT.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0600-SELECT THRU\n                       0600-SELECT-EXIT\n                       UNTIL END-OF-SUTIN.\n           IF WS-DIFF-SW = 'Y' OR 'E'\n               MOVE '  NON-STANDARD DELIVERY REPORT ' TO SUTO02-RECORD\n                                                         SUTO03-RECORD\n               PERFORM 1200-WRITE-SUTO02\n               PERFORM 1300-WRITE-SUTO03.\n           IF WS-REPORT-FOUND-SW = SPACE\n               MOVE '  NO RECOGNIZED REPORT FORMAT FOUND'\n                                    TO SUTO01-RECORD  SUTO02-RECORD\n                                       SUTO03-RECORD\n               PERFORM 1100-WRITE-SUTO01\n               PERFORM 1200-WRITE-SUTO02\n               PERFORM 1300-WRITE-SUTO03.\n\n       0500-FIND-NAME.\n           READ SMSNAME.\n           IF WS-STAT = 10\n               GO TO 0500-FIND-NAME-EXIT\n           ELSE\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0480B READ ERROR ON SMSNAME'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0500                     TO WS-RETURN-CODE\n               GO TO 0500-FIND-NAME-EXIT.\n\n           IF SMSNAME-PRE(1: 5) = '00000'\n               MOVE SMSNAME-NAME          TO WS-SMSNAME\n               GO TO 0500-FIND-NAME-EXIT.\n           GO TO 0500-FIND-NAME.\n\n       0500-FIND-NAME-EXIT. EXIT.\n\n       0600-SELECT.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               GO TO 0600-SELECT-EXIT.\n\n           IF WS-SKIP-CNT > ZERO\n               SUBTRACT 1 FROM WS-SKIP-CNT\n               GO TO 0600-SELECT-EXIT.\n\n      ****************************************\n      *    this logic is for the delivery reports which are in\n      *    a different format than regular SUT delivery reports.\n      *+**************************************\n           IF WS-DIFF-SW = 'E'\n               GO TO 0600-SELECT-EXIT.\n           IF SUTIN-RECORD(56: 19) = 'SMS DELIVERY REPORT'\n               MOVE 'Y'                       TO WS-REPORT-FOUND-SW\n               MOVE 'Y'                       TO WS-DIFF-SW.\n           IF WS-DIFF-SW = 'Y'\n               PERFORM 0650-DIFF-REPORT THRU\n                       0650-DIFF-REPORT-EXIT\n               GO TO 0600-SELECT-EXIT.\n\n      ****************************************\n      *    'events contained' is the signal for a regular sut\n      *    delivery report\n      *+**************************************\n           IF SUTIN-RECORD(22: 16) = 'Events contained'\n                                  OR 'EVENTS CONTAINED'\n               MOVE 'Y'                       TO WS-REPORT-FOUND-SW\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD(24: 20)      TO WS-SUT-NAME\n               GO TO 0600-SELECT-EXIT.\n\n           IF SUTIN-RECORD(2: 20) = 'MOVE REQUEST NO.    '\n               PERFORM 1000-READ-SUTIN\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD(13: 8)       TO WS-MOVE-REQ\n               GO TO 0600-SELECT-EXIT.\n\n           IF SUTIN-RECORD(22: 25) = 'SOFTWARE APPLY PROCEDURES'\n               PERFORM 1000-READ-SUTIN\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD              TO WS-HOLD-SUTIN-RCD\n               PERFORM 1000-READ-SUTIN\n               IF SUTIN-RECORD(63: 10) = '----------'\n                   IF WS-HOLD-SUTIN-RCD(2: 15) = 'FOLLOW STANDARD'\n                       GO TO 0600-SELECT-EXIT\n                   ELSE\n                       PERFORM 0700-PRINT-APPLY\n                       GO TO 0600-SELECT-EXIT\n               ELSE\n                   PERFORM 0700-PRINT-APPLY\n                   MOVE SPACE                 TO WS-DASH-SW\n                   PERFORM 0700-APPLY-LOOP THRU\n                           0700-APPLY-EXIT\n                           UNTIL WS-DASH-SW = 'Y'.\n\n           IF SUTIN-RECORD(12: 22) = 'DESCRIPTION OF PROBLEM'\n               PERFORM 1000-READ-SUTIN\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD              TO WS-HOLD-SUTIN-RCD\n               PERFORM 1000-READ-SUTIN\n               IF SUTIN-RECORD(63: 10) = '----------'\n                   PERFORM 0750-PRINT-DESC\n                   GO TO 0600-SELECT-EXIT\n               ELSE\n                   PERFORM 0750-PRINT-DESC\n                   MOVE SPACE                 TO WS-DASH-SW\n                   PERFORM 0750-DESCRIPTION-LOOP THRU\n                           0750-DESCRIPTION-EXIT\n                           UNTIL WS-DASH-SW = 'Y'.\n\n           IF SUTIN-MARK1 = WS-MARK\n               AND SUTIN-MARK2 = WS-MARK\n               AND SUTIN-MARK3 = WS-MARK\n               AND SUTIN-MARK4 = WS-MARK\n               MOVE SPACE                     TO WS-DASH-SW\n               PERFORM 0800-ELEMENT-LOOP THRU\n                       0800-ELEMENT-EXIT\n                       UNTIL WS-DASH-SW = 'Y'.\n\n           GO TO 0600-SELECT-EXIT.\n\n       0600-CLEAR-SW.\n           MOVE SPACE                         TO WS-NEXT-SW.\n\n       0600-SELECT-EXIT. EXIT.\n\n      ****************************************\n      *    this logic is for the delivery reports which are in\n      *    a different format than regular SUT delivery reports.\n      *+**************************************\n       0650-DIFF-REPORT.\n           IF SUTIN-RECORD(4: 7) = 'LIBRARY'\n               PERFORM 1000-READ-SUTIN\n               PERFORM 1000-READ-SUTIN\n               PERFORM 0650-GET-LIB-NAME\n               MOVE 'Y'                       TO WS-DIFF-SW2.\n           IF SUTIN-RECORD(59: 16) = 'DELIVERY SUMMARY'\n               MOVE 'E'                       TO WS-DIFF-SW\n               MOVE SPACE                     TO WS-DIFF-SW2.\n           IF SUTIN-RECORD(6: 5) = 'DATE:'\n               MOVE SPACE                     TO WS-DIFF-SW2.\n           IF SUTIN-RECORD(52: 8) = SPACE\n               MOVE SPACE                     TO WS-DIFF-SW2.\n           IF WS-DIFF-SW2 = SPACE\n               GO TO 0650-DIFF-REPORT-EXIT.\n\n           MOVE SUTIN-RECORD(52: 8)           TO WS-HOLD-ELEMENT.\n           MOVE SUTIN-RECORD(64: 40)          TO WS-HOLD-DESCRIPTION.\n           PERFORM 0650-DIFF-REPORT-OUT.\n\n       0650-DIFF-REPORT-EXIT. EXIT.\n\n       0650-GET-LIB-NAME.\n           MOVE SUTIN-RECORD(4: 44)           TO WS-HOLD-LIB-NAME.\n           PERFORM\n               VARYING WS-SUB1 FROM 44 BY -1\n               UNTIL WS-SUB1 < 1\n               IF WS-HOLD-LIB-NAME(WS-SUB1: 1) = '.'\n                   ADD 1                      TO WS-SUB1\n                   MOVE WS-HOLD-LIB-NAME(WS-SUB1: 8) TO WS-HOLD-LIB\n                   MOVE ZERO                  TO WS-SUB1\n               END-IF\n           END-PERFORM.\n           IF WS-HOLD-LIB = 'LOADLIB '\n               MOVE 'LOAD    '                TO WS-HOLD-LIB.\n\n       0650-DIFF-REPORT-OUT.\n           MOVE SPACE                         TO SUTO01-RECORD.\n           MOVE WS-SMSNAME                    TO SUTO01-SUT-NAME.\n           MOVE WS-HOLD-LIB                   TO SUTO01-LIB\n           MOVE WS-HOLD-ELEMENT               TO SUTO01-ELEMENT.\n           MOVE WS-HOLD-LIB-NAME              TO SUTO01-LIB-NAME.\n           MOVE WS-HOLD-DESCRIPTION           TO SUTO01-DESCRIPTION.\n           PERFORM 1100-WRITE-SUTO01.\n\n       0700-PRINT-APPLY.\n           MOVE SPACE                         TO SUTO02-RECORD.\n           MOVE WS-HOLD-SUTIN-RCD(2: 80)      TO SUTO02-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO02-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO02-SUT-NAME.\n           PERFORM 1200-WRITE-SUTO02.\n           MOVE SPACE                         TO SUTO02-RECORD.\n           MOVE SUTIN-RCD1(2: 80)             TO SUTO02-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO02-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO02-SUT-NAME.\n           PERFORM 1200-WRITE-SUTO02.\n\n       0700-APPLY-LOOP.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               MOVE 'Y'                       TO WS-DASH-SW\n               GO TO 0700-APPLY-EXIT.\n           IF SUTIN-RECORD(63: 10) = '----------'\n               MOVE 'Y'                       TO WS-DASH-SW.\n           MOVE SPACE                         TO SUTO02-RECORD.\n           MOVE SUTIN-RECORD(2: 80)           TO SUTO02-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO02-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO02-SUT-NAME.\n           PERFORM 1200-WRITE-SUTO02.\n\n       0700-APPLY-EXIT. EXIT.\n\n       0750-PRINT-DESC.\n           MOVE SPACE                         TO SUTO03-RECORD.\n           MOVE WS-HOLD-SUTIN-RCD(2: 80)      TO SUTO03-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO03-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO03-SUT-NAME.\n           PERFORM 1300-WRITE-SUTO03.\n           MOVE SPACE                         TO SUTO03-RECORD.\n           MOVE SUTIN-RCD1(2: 80)             TO SUTO03-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO03-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO03-SUT-NAME.\n           PERFORM 1300-WRITE-SUTO03.\n\n       0750-DESCRIPTION-LOOP.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               MOVE 'Y'                       TO WS-DASH-SW\n               GO TO 0750-DESCRIPTION-EXIT.\n           IF SUTIN-RECORD(63: 10) = '----------'\n               MOVE 'Y'                       TO WS-DASH-SW.\n           MOVE SPACE                         TO SUTO03-RECORD.\n           MOVE SUTIN-RECORD(2: 80)           TO SUTO03-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO03-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO03-SUT-NAME.\n           PERFORM 1300-WRITE-SUTO03.\n\n       0750-DESCRIPTION-EXIT. EXIT.\n\n       0800-ELEMENT-LOOP.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               MOVE 'Y'                       TO WS-DASH-SW\n               GO TO 0800-ELEMENT-EXIT.\n           IF SUTIN-LIB-NAME = SPACE\n               GO TO 0800-ELEMENT-EXIT.\n           IF SUTIN-LIB = '--------'\n               GO TO 0800-ELEMENT-EXIT.\n           IF SUTIN-ELEMENT = SPACE\n               MOVE 'Y'                       TO WS-DASH-SW\n               GO TO 0800-ELEMENT-EXIT.\n           IF SUTIN-LIB NOT = SPACE\n               MOVE SUTIN-LIB                 TO WS-HOLD-LIB.\n\n       0800-WRITE-RECORD.\n           MOVE SPACE                         TO SUTO01-RECORD.\n           IF SUTIN-LIB = SPACE\n               MOVE WS-HOLD-LIB               TO SUTO01-LIB\n           ELSE\n               MOVE SUTIN-LIB                 TO SUTO01-LIB.\n           MOVE WS-SUT-NAME                   TO SUTO01-SUT-NAME.\n           MOVE SUTIN-ELEMENT                 TO SUTO01-ELEMENT.\n           MOVE SUTIN-LIB-NAME                TO SUTO01-LIB-NAME.\n           MOVE SUTIN-TARGET                  TO SUTO01-TARGET.\n           MOVE SUTIN-AREA1                   TO SUTO01-AREA1.\n           MOVE SUTIN-MOVE-REQ1               TO SUTO01-MOVE-REQ1.\n           MOVE SUTIN-AREA2                   TO SUTO01-AREA2.\n           MOVE SUTIN-MOVE-REQ2               TO SUTO01-MOVE-REQ2.\n           MOVE SUTIN-AREA3                   TO SUTO01-AREA3.\n           MOVE SUTIN-MOVE-REQ3               TO SUTO01-MOVE-REQ3.\n           PERFORM 1100-WRITE-SUTO01.\n\n       0800-ELEMENT-EXIT. EXIT.\n\n       1000-READ-SUTIN.\n           READ SUTIN.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-SUTIN-SW\n           ELSE\n               DISPLAY '**** MIS0480B READ ERROR ON SUTIN '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE 'Y'                       TO WS-END-SUTIN-SW\n               MOVE +1000                     TO WS-RETURN-CODE.\n\n       1100-WRITE-SUTO01.\n           WRITE SUTO01-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0480B WRITE ERROR ON SUTO01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1100                     TO WS-RETURN-CODE.\n           ADD 1                              TO WS-WRITE-RCD1-CNT.\n\n       1200-WRITE-SUTO02.\n           WRITE SUTO02-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0480B WRITE ERROR ON SUTO02'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1200                     TO WS-RETURN-CODE.\n           ADD 1                              TO WS-WRITE-RCD2-CNT.\n\n       1300-WRITE-SUTO03.\n           WRITE SUTO03-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0480B WRITE ERROR ON SUTO03'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1300                     TO WS-RETURN-CODE.\n           ADD 1                              TO WS-WRITE-RCD3-CNT.\n\n      ************************************ END MIS0480B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MIS0485B": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11\\x14\\x02\\xaa\\x02\\xab\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:14:35", "lines": 682, "newlines": 683, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  MIS0485B: COMPARE SUT CHANGE LIST'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    MIS0485B.\n      ******************************************************************\n      *@@@ II COMPARE SUT CHANGE LIST\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 08/19/96\n      * AUTHOR      : JIM IANNONE\n      *               LOOP THROUGH A SUT DELIVERY LIST AND COMPARE\n      *               TO AN APPLICATION MAINTAINED LIST OF ITEMS\n      *               FOR CHANGE NOTIFICATION PURPOSES.\n      ******************************************************************\n      *               10/08/1999\n      *               LOOP THROUGH AND GATHER GENERIC ELEMENT ENTRIES\n      *               FIRST.  THEN COMPARE THE GENERIC ELEMENTS TO\n      *               EACH DELIVERED ELEMENT.\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n           C01 IS PAGE-TOP.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT DELIVER              ASSIGN TO DELIVER\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SMSSUT               ASSIGN TO SMSSUT\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SMSSUT2              ASSIGN TO SMSSUT2\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT CPY2PRD              ASSIGN TO CPY2PRD\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT PRINT-MATCH          ASSIGN TO PRINTER.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  DELIVER\n           RECORDING MODE F.\n       01  DELIVER-RECORD.\n           05  FILLER              PIC  X.\n           05  DELIVER-SUT-NAME    PIC  X(20).\n           05  FILLER              PIC  X.\n           05  DELIVER-LIB         PIC  X(08).\n           05  FILLER              PIC  X.\n           05  DELIVER-MARK1       PIC  X.\n           05  FILLER              PIC  X.\n           05  DELIVER-ELEMENT     PIC  X(08).\n           05  FILLER              PIC  X.\n           05  DELIVER-MARK2       PIC  X.\n           05  FILLER              PIC  X.\n           05  DELIVER-LIB-NAME    PIC  X(44).\n           05  DELIVER-TRAILER.\n               10  FILLER              PIC  X.\n               10  DELIVER-MARK3       PIC  X.\n               10  FILLER              PIC  X.\n               10  DELIVER-TARGET      PIC  X(05).\n               10  FILLER              PIC  X.\n               10  DELIVER-MARK4       PIC  X.\n               10  FILLER              PIC  X.\n               10  DELIVER-AREA1       PIC  XXX.\n               10  FILLER              PIC  X.\n               10  DELIVER-MOVE-REQ1   PIC  X(05).\n               10  FILLER              PIC  X.\n               10  DELIVER-AREA2       PIC  XXX.\n               10  FILLER              PIC  X.\n               10  DELIVER-MOVE-REQ2   PIC  X(05).\n               10  FILLER              PIC  X.\n               10  DELIVER-AREA3       PIC  XXX.\n               10  FILLER              PIC  X.\n               10  DELIVER-MOVE-REQ3   PIC  X(05).\n               10  FILLER              PIC  X(04).\n           05  DELIVER-TRAILER2 REDEFINES DELIVER-TRAILER.\n               10  DELIVER-DESCRIPTION PIC  X(40).\n               10  FILLER              PIC  X(04).\n\n       FD  SMSSUT\n           RECORDING MODE F.\n       01  SMSSUT-RECORD.\n           05  SMSSUT-DOC              PIC  X.\n           05  FILLER                  PIC  X.\n           05  SMSSUT-RESP-PARTY       PIC  X(10).\n           05  FILLER                  PIC  X.\n           05  SMSSUT-LIB              PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SMSSUT-ELEMENT          PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SMSSUT-TARGET           PIC  X(05).\n           05  FILLER                  PIC  XX.\n           05  SMSSUT-COMMENT          PIC  X(32).\n           05  FILLER                  PIC  X(10).\n\n       FD  SMSSUT2\n           RECORDING MODE F.\n       01  SMSSUT2-RECORD.\n           05  SMSSUT2-DOC             PIC  X.\n           05  FILLER                  PIC  X.\n           05  SMSSUT2-RESP-PARTY      PIC  X(10).\n           05  FILLER                  PIC  X.\n           05  SMSSUT2-LIB             PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SMSSUT2-ELEMENT         PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SMSSUT2-TARGET          PIC  X(05).\n           05  FILLER                  PIC  XX.\n           05  SMSSUT2-COMMENT         PIC  X(32).\n           05  FILLER                  PIC  X(10).\n\n       FD  CPY2PRD\n           RECORDING MODE F.\n       01  CPY2PRD-RECORD.\n           05  CPY2PRD-RCD             PIC  X(80).\n\n       FD  PRINT-MATCH\n           RECORDING MODE F.\n       01  PRINT-AREA.\n           05  FILLER                  PIC  X(80).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE MIS0485B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n           05  WS-TALLY1               PIC S9(04)    VALUE ZERO COMP.\n           05  WS-TALLY2               PIC S9(04)    VALUE ZERO COMP.\n           05  WS-HOLD-LIB             PIC  X(09)    VALUE SPACE.\n           05  WS-HOLD-ELEMENT         PIC  X(09)    VALUE SPACE.\n           05  FILLER REDEFINES WS-HOLD-ELEMENT.\n               10  WS-HOLD-ELEM-1X2    PIC  XX.\n               10  WS-HOLD-ELEM-3      PIC  X.\n               10  WS-HOLD-ELEM-4X9    PIC  X(06).\n           05  FILLER REDEFINES WS-HOLD-ELEMENT.\n               10  WS-HOLD-ELEM-1      PIC  X.\n               10  WS-HOLD-ELEM-2X9    PIC  X(08).\n           05  WS-HOLD-ORIG-ELEM       PIC  X(09)    VALUE SPACE.\n           05  WS-HOLD-RESP            PIC  X(10)    VALUE SPACE.\n           05  WS-HOLD-TGT             PIC  X(05)    VALUE SPACE.\n           05  WS-HOLD-CMNT            PIC  X(32)    VALUE SPACE.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.\n           05  WS-READ-RCD-CNT2        PIC S9(07)    VALUE ZERO.\n           05  WS-WRITE-RCD-CNT        PIC S9(07)    VALUE ZERO.\n           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.\n           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.\n           05  WS-GEN-MAX              PIC S9(05)    VALUE ZERO.\n           05  WS-SKIP-CNT             PIC  9(05)    VALUE ZERO.\n           05  WS-GEN-MATCH-CNT        PIC  9(05)    VALUE ZERO.\n\n       01  WS-PRINT-CONTROL            COMP.\n           05  WS-LINE-SUM             PIC S99       VALUE +90.\n           05  WS-LINE-MAX             PIC S99       VALUE +57.\n           05  WS-PAGE-CNT             PIC S9(05)    VALUE ZERO.\n           05  WS-SPACE-CONTROL        PIC S99       VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-DELIVER-SW       PIC  X        VALUE 'N'.\n               88  END-OF-DELIVER                    VALUE 'Y'.\n               88  MORE-DELIVER-RCDS                 VALUE 'N'.\n           05  WS-END-CPY2PRD-SW       PIC  X        VALUE 'N'.\n               88  END-OF-CPY2PRD                    VALUE 'Y'.\n               88  MORE-CPY2PRD-RCDS                 VALUE 'N'.\n           05  WS-READ-DELIVER-SW      PIC  X        VALUE 'Y'.\n           05  WS-READ-SMSSUT-SW       PIC  X        VALUE 'Y'.\n           05  WS-FIRST-RCD-SW         PIC  X        VALUE 'Y'.\n               88  FIRST-RECORD                      VALUE 'Y'.\n           05  WS-DIFF-SW              PIC  X        VALUE SPACE.\n           05  WS-MATCH-SW             PIC  X        VALUE SPACE.\n           05  WS-LOAD-SW              PIC  X        VALUE SPACE.\n\n      ****************************************\n      *    STANDARD MIS HEADINGS (8.5\" X 11\")\n      ****************************************\n       01  HEADING-LINE-1.\n           05  FILLER                  PIC  X(08)    VALUE 'MIS0485B'.\n           05  FILLER                  PIC  X(08)    VALUE '  DATE  '.\n           05  H1-DATE                 PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  X(03)    VALUE SPACE.\n           05  FILLER                  PIC  X(26)    VALUE\n               'ST. VINCENT MEDICAL CENTER'.\n           05  FILLER                  PIC  X(17)    VALUE SPACE.\n           05  FILLER                  PIC  X(05)    VALUE 'PAGE '.\n           05  H1-PAGE                 PIC  ZZZZ9    VALUE ZERO.\n\n       01  HEADING-LINE-2.\n           05  FILLER                  PIC  X(25)    VALUE SPACE.\n           05  FILLER                  PIC  X(30)    VALUE\n               'MANAGEMENT INFORMATION SYSTEMS'.\n           05  FILLER                  PIC  X(25)     VALUE SPACE.\n\n       01  HEADING-LINE-3.\n           05  FILLER                  PIC  X        VALUE SPACE.\n           05  H3-TITLE                PIC  X(79)    VALUE SPACE.\n\n       01  HEADING-LINE-4.\n           05  FILLER                  PIC  X(40)    VALUE\n               '  RESP PARTY  LIBRARY   ELEMENT   TARGET'.\n           05  FILLER                  PIC  X(40)    VALUE\n               '  COMMENT                               '.\n\n       01  HEADING-LINE-5.\n           05  FILLER                  PIC  X(40)    VALUE\n               '  ----------  --------  --------  ------'.\n           05  FILLER                  PIC  X(40)    VALUE\n               '  --------------------------------      '.\n\n       01  WS-LOAD-MSG1.\n           05  FILLER                  PIC  X(40)    VALUE\n               '  Warning!!  This SUT deliveres modules '.\n           05  FILLER                  PIC  X(40)    VALUE\n               'to P0000.LOAD libraries.                '.\n\n       01  WS-LOAD-MSG2.\n           05  FILLER                  PIC  X(40)    VALUE\n               '             Move E0000.LOAD members to '.\n           05  FILLER                  PIC  X(40)    VALUE\n               'P0000 libraries before installing SUT.  '.\n\n       01  DETAIL-LINE-1.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-RESP-PARTY           PIC  X(10)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-LIB                  PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-ELEMENT              PIC  X(08)    VALUE SPACE.\n           05  FILLER                  PIC  XX       VALUE SPACE.\n           05  D1-TARGET               PIC  X(05)    VALUE SPACE.\n           05  FILLER                  PIC  XXX      VALUE SPACE.\n           05  D1-COMMENT              PIC  X(32)    VALUE SPACE.\n           05  FILLER                  PIC  X(06)    VALUE SPACE.\n\n      *    YEAR 2000 COMPATIBLE DATE ROUTINE\n       01  WS-STV0400B-FIELDS.\n           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-ERROR      PIC  X(06).\n               10  STV0400B-NBR        PIC  X(04).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-CYMD       PIC  X(08).\n               10  FILLER              PIC  XX.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAYS       PIC  X(05).\n               10  FILLER              PIC  X(05).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAY        PIC  X(09).\n               10  STV0400B-DAY-NBR    PIC  X.\n           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.\n           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.\n           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.\n\n      *    DATASET MASK COMPARISON\n       01  WS-MIS0540B-FIELDS.\n           05  MIS0540B-MASK           PIC  X(44).\n           05  MIS0540B-DSN            PIC  X(44).\n           05  MIS0540B-DISPLAY        PIC  X.\n           05  MIS0540B-EDIT-NAMES     PIC  X.\n           05  MIS0540B-MATCH          PIC  XXX.\n\n       01  WS-TABLES.\n           05  WS-GENERIC-TABLE        OCCURS 40 TIMES.\n               10  WS-GEN-RESP         PIC  X(10).\n               10  WS-GEN-LIB          PIC  X(08).\n               10  WS-GEN-ELEM         PIC  X(08).\n               10  WS-GEN-TGT          PIC  X(05).\n               10  WS-GEN-CMNT         PIC  X(32).\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  MIS0485B END  '.\n\n      /\n       PROCEDURE DIVISION.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               MOVE SPACE                     TO WS-STV0400B-FIELDS\n               MOVE 'M/D/Y '                  TO STV0400B-OUT\n               CALL 'STV0400B' USING WS-STV0400B-FIELDS\n               MOVE STV0400B-DATA             TO H1-DATE\n               PERFORM 0400-PROCESS-DELIVER.\n\n           DISPLAY '**** ELEMENT RECORDS     ' WS-READ-RCD-CNT.\n           DISPLAY '**** SMSSUT ENTRIES      ' WS-READ-RCD-CNT2.\n           DISPLAY '**** GENERIC SKIPS       ' WS-SKIP-CNT.\n           DISPLAY '**** GENERIC ENTRIES     ' WS-GEN-MAX.\n           DISPLAY '**** GENERIC MATCHES     ' WS-GEN-MATCH-CNT.\n           DISPLAY '**** MATCHES             ' WS-WRITE-RCD-CNT.\n           DISPLAY '**** MIS0485B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** MIS0485B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  DELIVER.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0485B OPEN ERROR ON DELIVER'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN INPUT SMSSUT.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0485B OPEN ERROR ON SMSSUT'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0201                     TO WS-RETURN-CODE.\n           OPEN INPUT SMSSUT2.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0485B OPEN ERROR ON SMSSUT2'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0202                     TO WS-RETURN-CODE.\n           OPEN INPUT CPY2PRD.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0485B OPEN ERROR ON CPY2PRD'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0203                     TO WS-RETURN-CODE.\n           OPEN OUTPUT PRINT-MATCH.\n\n       0300-CLOSE-FILES.\n           CLOSE PRINT-MATCH.\n           CLOSE CPY2PRD.\n           CLOSE SMSSUT2.\n           CLOSE SMSSUT.\n           CLOSE DELIVER.\n\n       0400-PROCESS-DELIVER.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0600-SELECT THRU\n                       0600-SELECT-EXIT\n                       UNTIL END-OF-DELIVER\n               IF WS-WRITE-RCD-CNT = ZERO\n                   PERFORM 1400-PRINT-HEADINGS\n                   MOVE '  NO SUT ELEMENTS MATCH THE SMSSUT LIST'\n                                              TO PRINT-AREA\n                   MOVE 2                     TO WS-SPACE-CONTROL\n                   PERFORM 1500-WRITE-LINE.\n           IF WS-RETURN-CODE = ZERO\n               MOVE SPACE                     TO WS-LOAD-SW\n               PERFORM 1200-READ-CPY2PRD THRU\n                       1200-READ-CPY2PRD-EXIT\n                       UNTIL END-OF-CPY2PRD\n               IF WS-LOAD-SW = 'Y'\n                   MOVE SPACE                 TO PRINT-AREA\n                   PERFORM 1500-WRITE-LINE\n                   MOVE WS-LOAD-MSG1          TO PRINT-AREA\n                   PERFORM 1500-WRITE-LINE\n                   MOVE WS-LOAD-MSG2          TO PRINT-AREA\n                   PERFORM 1500-WRITE-LINE.\n\n\n       0600-SELECT.\n           IF WS-READ-DELIVER-SW = 'Y'\n               PERFORM 1000-READ-DELIVER.\n           IF WS-READ-SMSSUT-SW = 'Y'\n               PERFORM 1000-READ-SMSSUT.\n\n           IF FIRST-RECORD\n               STRING 'SMS SUT DELIVERY COMPARISON: ' DELIMITED BY SIZE\n                   DELIVER-SUT-NAME                   DELIMITED BY SIZE\n                   INTO H3-TITLE\n               CALL 'STV0270B' USING H3-TITLE\n               IF DELIVER-SUT-NAME = 'DELIVERY REPORT'\n                   MOVE 'Y'                       TO WS-DIFF-SW.\n           IF FIRST-RECORD\n               MOVE 'N'                       TO WS-FIRST-RCD-SW\n               MOVE ZERO                      TO WS-SUB1\n               PERFORM 0800-GET-GENERICS THRU\n                       0800-GET-GENERICS-EXIT.\n\n           IF SMSSUT-DOC = '*'\n               OR SMSSUT-LIB = SPACE\n               MOVE 'N'                       TO WS-READ-DELIVER-SW\n               MOVE 'Y'                       TO WS-READ-SMSSUT-SW\n               GO TO 0600-SELECT-EXIT.\n\n      *---------------------------------------\n      *    COMPARE ALL DELIVERED ELEMENTS WITH THE GENERICS\n      *    TABLE PREVIOUSLY LOADED\n      *+--------------------------------------\n           MOVE 'N'                           TO WS-MATCH-SW.\n           IF WS-READ-DELIVER-SW = 'Y'\n               PERFORM 0900-TEST-GENERIC THRU\n                       0900-TEST-GENERIC-EXIT\n                       VARYING WS-SUB1 FROM 1 BY 1\n                       UNTIL WS-SUB1 > WS-GEN-MAX.\n\n           MOVE 'N'                           TO WS-MATCH-SW.\n           IF WS-READ-SMSSUT-SW = 'Y'\n               MOVE SMSSUT-LIB                TO WS-HOLD-LIB\n               MOVE SMSSUT-ELEMENT            TO WS-HOLD-ELEMENT\n               MOVE SMSSUT-ELEMENT            TO WS-HOLD-ORIG-ELEM\n               PERFORM 0700-CHANGE-ELEMENT THRU\n                       0700-CHANGE-EXIT.\n\n           MOVE 'N'                           TO WS-READ-DELIVER-SW\n                                                 WS-READ-SMSSUT-SW.\n           IF END-OF-DELIVER\n               GO TO 0600-SELECT-EXIT.\n\n           IF DELIVER-LIB > SMSSUT-LIB\n               MOVE 'Y'                       TO WS-READ-SMSSUT-SW\n               GO TO 0600-SELECT-EXIT.\n           IF DELIVER-LIB < SMSSUT-LIB\n               MOVE 'Y'                       TO WS-READ-DELIVER-SW\n               GO TO 0600-SELECT-EXIT.\n\n      *---------------------------------------\n      *    SKIP GENERICS THAT WERE PREVIOUSLY LOADED BY\n      *    LOOPING THROUGH THE SMSSUT2 FILE\n      *+--------------------------------------\n           IF WS-HOLD-ELEM-1 NOT = '*'\n               MOVE ZERO                      TO WS-TALLY1 WS-TALLY2\n               INSPECT WS-HOLD-ELEM-2X9 TALLYING WS-TALLY1 FOR ALL '*'\n               INSPECT WS-HOLD-ELEM-2X9 TALLYING WS-TALLY2 FOR ALL '%'\n               ADD WS-TALLY1                  TO WS-TALLY2\n               IF WS-TALLY2 > ZERO\n                   MOVE 'Y'                   TO WS-READ-SMSSUT-SW\n                   ADD 1                      TO WS-SKIP-CNT\n                   GO TO 0600-SELECT-EXIT.\n\n           IF DELIVER-ELEMENT > WS-HOLD-ELEMENT\n               MOVE 'Y'                       TO WS-READ-SMSSUT-SW\n           ELSE\n           IF DELIVER-ELEMENT < WS-HOLD-ELEMENT\n               MOVE 'Y'                       TO WS-READ-DELIVER-SW\n           ELSE\n               MOVE SMSSUT-RESP-PARTY         TO WS-HOLD-RESP\n               MOVE SMSSUT-TARGET             TO WS-HOLD-TGT\n               MOVE SMSSUT-COMMENT            TO WS-HOLD-CMNT\n               MOVE 'Y'                       TO WS-READ-SMSSUT-SW\n               PERFORM 1100-CHECK-TARGET THRU\n                       1100-CHECK-TARGET-EXIT.\n\n       0600-SELECT-EXIT. EXIT.\n\n       0700-CHANGE-ELEMENT.\n           IF WS-DIFF-SW = 'Y'\n               GO TO 0700-CHANGE-EXIT.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A6$ ' BY 'DG$ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A7$ ' BY 'DG$ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A6E ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A7E ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A6T ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A7D ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A7S ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL 'A7W ' BY 'DG@ '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#01 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#02 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#03 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#04 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#05 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '#06 ' BY '#CC '.\n           INSPECT WS-HOLD-ELEMENT REPLACING ALL '$01 ' BY '$CP '.\n           IF WS-HOLD-LIB = 'SYSJOBS '\n               IF WS-HOLD-ELEM-3 = 'T'\n                   MOVE 'P'                   TO WS-HOLD-ELEM-3\n               ELSE\n               IF WS-HOLD-ELEM-3 = 'E'\n                   MOVE 'D'                   TO WS-HOLD-ELEM-3.\n\n       0700-CHANGE-EXIT. EXIT.\n\n       0800-GET-GENERICS.\n           READ SMSSUT2.\n           IF WS-STAT = ZERO\n               CONTINUE\n           ELSE\n           IF WS-STAT = 10\n               MOVE WS-SUB1                   TO WS-GEN-MAX\n               GO TO 0800-GET-GENERICS-EXIT\n           ELSE\n               DISPLAY '**** MIS0485B READ ERROR ON SMSSUT2 '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0500                     TO WS-RETURN-CODE\n               GO TO 0800-GET-GENERICS-EXIT.\n\n           IF SMSSUT2-DOC = '*'\n               OR SMSSUT2-LIB = SPACE\n               GO TO 0800-GET-GENERICS.\n\n           MOVE SMSSUT2-ELEMENT               TO WS-HOLD-ELEMENT.\n\n           IF WS-HOLD-ELEM-1 NOT = '*'\n               MOVE ZERO                      TO WS-TALLY1 WS-TALLY2\n               INSPECT WS-HOLD-ELEM-2X9 TALLYING WS-TALLY1 FOR ALL '*'\n               INSPECT WS-HOLD-ELEM-2X9 TALLYING WS-TALLY2 FOR ALL '%'\n               ADD WS-TALLY1                  TO WS-TALLY2\n               IF WS-TALLY2 > ZERO\n                 IF WS-SUB1 < 40\n                     ADD 1                    TO WS-SUB1\n                     MOVE SMSSUT2-LIB         TO WS-HOLD-LIB\n                     PERFORM 0700-CHANGE-ELEMENT THRU\n                             0700-CHANGE-EXIT\n                     MOVE WS-HOLD-ELEMENT     TO WS-GEN-ELEM(WS-SUB1)\n                     MOVE SMSSUT2-RESP-PARTY  TO WS-GEN-RESP(WS-SUB1)\n                     MOVE SMSSUT2-LIB         TO WS-GEN-LIB(WS-SUB1)\n                     MOVE SMSSUT2-TARGET      TO WS-GEN-TGT(WS-SUB1)\n                     MOVE SMSSUT2-COMMENT     TO WS-GEN-CMNT(WS-SUB1)\n                 ELSE\n                     DISPLAY '**** MIS0485B > 40 GENERIC ENTRIES '\n                     MOVE +0800               TO WS-RETURN-CODE.\n\n           GO TO 0800-GET-GENERICS.\n\n       0800-GET-GENERICS-EXIT. EXIT.\n\n       0900-TEST-GENERIC.\n           IF DELIVER-LIB NOT = WS-GEN-LIB(WS-SUB1)\n               GO TO 0900-TEST-GENERIC-EXIT.\n           MOVE WS-GEN-ELEM(WS-SUB1)          TO MIS0540B-MASK.\n           MOVE DELIVER-ELEMENT               TO MIS0540B-DSN\n                                                 WS-HOLD-ORIG-ELEM.\n           MOVE SPACE                         TO MIS0540B-DISPLAY\n                                                 MIS0540B-MATCH\n                                                 MIS0540B-EDIT-NAMES.\n           CALL 'MIS0540B' USING MIS0540B-MASK MIS0540B-DSN\n                           MIS0540B-DISPLAY MIS0540B-EDIT-NAMES\n                           MIS0540B-MATCH.\n           IF MIS0540B-MATCH NUMERIC\n               DISPLAY '**** MIS0545B CALL ERROR TO MIS0540B'\n               DISPLAY '**** CODE = ' MIS0540B-MATCH\n               MOVE +0600                     TO WS-RETURN-CODE\n           ELSE\n           IF MIS0540B-MATCH = 'YES'\n               MOVE WS-GEN-RESP(WS-SUB1)      TO WS-HOLD-RESP\n               MOVE WS-GEN-TGT(WS-SUB1)       TO WS-HOLD-TGT\n               MOVE WS-GEN-LIB(WS-SUB1)       TO WS-HOLD-LIB\n               MOVE WS-GEN-CMNT(WS-SUB1)      TO WS-HOLD-CMNT\n               MOVE 'Y'                       TO WS-MATCH-SW\n               PERFORM 1100-CHECK-TARGET THRU\n                       1100-CHECK-TARGET-EXIT.\n\n       0900-TEST-GENERIC-EXIT. EXIT.\n\n       1000-READ-DELIVER.\n           READ DELIVER.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-DELIVER-SW\n           ELSE\n               DISPLAY '**** MIS0485B READ ERROR ON DELIVER '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE 'Y'                       TO WS-END-DELIVER-SW\n               MOVE +1000                     TO WS-RETURN-CODE.\n\n       1000-READ-SMSSUT.\n           READ SMSSUT.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT2\n           ELSE\n           IF WS-STAT = 10\n               MOVE HIGH-VALUE                TO SMSSUT-RECORD\n           ELSE\n               DISPLAY '**** MIS0485B READ ERROR ON SMSSUT '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE HIGH-VALUE                TO SMSSUT-LIB\n               MOVE +1000                     TO WS-RETURN-CODE.\n\n       1100-CHECK-TARGET.\n           IF WS-DIFF-SW = 'Y'\n               PERFORM 1300-PRINT-DETAIL-LINE\n               GO TO 1100-CHECK-TARGET-EXIT.\n           IF WS-HOLD-TGT = SPACE OR 'BOTH '\n               PERFORM 1300-PRINT-DETAIL-LINE.\n           IF WS-HOLD-TGT = 'PROD '\n               IF DELIVER-TARGET = 'PROD ' OR ' BOTH' OR SPACE\n                   PERFORM 1300-PRINT-DETAIL-LINE.\n           IF WS-HOLD-TGT = 'TEST '\n               IF DELIVER-TARGET = 'TEST ' OR ' BOTH' OR SPACE\n                   PERFORM 1300-PRINT-DETAIL-LINE.\n\n       1100-CHECK-TARGET-EXIT. EXIT.\n\n       1200-READ-CPY2PRD.\n           READ CPY2PRD.\n           IF WS-STAT = ZERO\n               PERFORM 1200-CHECK-FOR-PLIBS\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-CPY2PRD-SW\n           ELSE\n               DISPLAY '**** MIS0485B READ ERROR ON CPY2PRD '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE 'Y'                       TO WS-END-CPY2PRD-SW\n               MOVE +1200                     TO WS-RETURN-CODE.\n\n       1200-READ-CPY2PRD-EXIT. EXIT.\n\n      *---------------------------------------\n      *    DETERMINE IF ANY LOAD MODULES ARE BEING DELIVERED\n      *    DIRECTLY TO P0000 LIBRARIES RATHER THAN ENHANCEMENT\n      *    E0000 LIBRARIES.  IF SO, IT IS IMPORTANT TO MOVE\n      *    E0000 MODULES TO THEIR CORRESPONDING P0000 LIBRARIES\n      *    BEFORE THE SUT APPLY, OR SOFTWARE MAY BE INADVERTANTLY\n      *    BACKLEVELED SINCE E0000 LIBRARIES OVERRIDE P0000\n      *    LIBRARIES IN CICS.\n      *---------------------------------------\n       1200-CHECK-FOR-PLIBS.\n           IF CPY2PRD-RCD(1: 9) = '//SYSUT2 '\n               PERFORM VARYING WS-SUB2 FROM 15 BY 1\n                   UNTIL WS-SUB2 > 68\n                   IF CPY2PRD-RCD(WS-SUB2: 10) = 'P0000.LOAD'\n                       MOVE 'Y'               TO WS-LOAD-SW\n                       MOVE 70                TO WS-SUB2\n                   END-IF\n               END-PERFORM\n           END-IF.\n\n       1300-PRINT-DETAIL-LINE.\n           IF WS-LINE-SUM > WS-LINE-MAX\n               PERFORM 1400-PRINT-HEADINGS.\n           MOVE WS-HOLD-LIB                   TO D1-LIB.\n           MOVE WS-HOLD-RESP                  TO D1-RESP-PARTY.\n           MOVE WS-HOLD-ORIG-ELEM             TO D1-ELEMENT.\n           MOVE WS-HOLD-CMNT                  TO D1-COMMENT.\n           MOVE WS-HOLD-TGT                   TO D1-TARGET.\n           MOVE DETAIL-LINE-1                 TO PRINT-AREA.\n           ADD 1                              TO WS-WRITE-RCD-CNT.\n           IF WS-MATCH-SW = 'Y'\n               ADD 1                          TO WS-GEN-MATCH-CNT.\n           PERFORM 1500-WRITE-LINE.\n\n       1400-PRINT-HEADINGS.\n           ADD 1                              TO WS-PAGE-CNT.\n           MOVE 1                             TO WS-SPACE-CONTROL.\n           MOVE WS-PAGE-CNT                   TO H1-PAGE.\n           MOVE HEADING-LINE-1                TO PRINT-AREA.\n           PERFORM 1600-WRITE-PAGE-TOP.\n           MOVE HEADING-LINE-2                TO PRINT-AREA.\n           PERFORM 1500-WRITE-LINE.\n           MOVE 2                             TO WS-SPACE-CONTROL.\n           MOVE HEADING-LINE-3                TO PRINT-AREA.\n           PERFORM 1500-WRITE-LINE.\n           MOVE HEADING-LINE-4                TO PRINT-AREA.\n           PERFORM 1500-WRITE-LINE.\n           MOVE 1                             TO WS-SPACE-CONTROL.\n           MOVE HEADING-LINE-5                TO PRINT-AREA.\n           PERFORM 1500-WRITE-LINE.\n\n       1500-WRITE-LINE.\n           WRITE PRINT-AREA\n               AFTER ADVANCING WS-SPACE-CONTROL LINES.\n           ADD WS-SPACE-CONTROL               TO WS-LINE-SUM.\n\n       1600-WRITE-PAGE-TOP.\n           WRITE PRINT-AREA\n               AFTER ADVANCING PAGE-TOP.\n           MOVE 1                             TO WS-LINE-SUM.\n\n      ************************************ END MIS0485B\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MIS0490B": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11\\x14\\x00\\xbf\\x00\\xc1\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:14:48", "lines": 191, "newlines": 193, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  MIS0490B: CREATE SUT TARGET COPY JCL'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    MIS0490B.\n      ******************************************************************\n      *@@@ II CREATE SUT TARGET COPY JCL\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 08/27/96\n      * AUTHOR      : JIM IANNONE\n      *               LOOP THROUGH A LIST OF SUT TARGET FILES\n      *               AND BUILD A LIST OF FILES FOR COPYING\n      *               AND RENAMING USING DFDSS.\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT SMSBFILO             ASSIGN TO SMSBFILO\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SMSBFILC             ASSIGN TO SMSBFILC\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  SMSBFILO\n           RECORDING MODE F.\n       01  SMSBFILO-RECORD.\n         02  SMSBFILO-RCD.\n           05  SMSBFILO-SKIP           PIC  X(05).\n           05  FILLER                  PIC  X(19).\n           05  SMSBFILO-DBHL1          PIC  X(04).\n           05  SMSBFILO-DOT1           PIC  X.\n           05  FILLER                  PIC  X.\n           05  SMSBFILO-DBHL2          PIC  X(04).\n           05  SMSBFILO-DOT2           PIC  X.\n           05  FILLER                  PIC  X(45).\n         02  SMSBFILO-RCD2 REDEFINES SMSBFILO-RCD.\n           05  FILLER                  PIC  X(23).\n           05  SMSBFILO-HLQ            PIC  X(06).\n           05  SMSBFILO-REMAIN         PIC  X(42).\n           05  FILLER                  PIC  X(09).\n\n       FD  SMSBFILC\n           RECORDING MODE F.\n       01  SMSBFILC-RECORD.\n           05  FILLER                  PIC  X(20).\n           05  SMSBFILC-LINE           PIC  X(50).\n           05  FILLER                  PIC  X(10).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE MIS0490B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-WRITE-RCD-CNT        PIC S9(07)    VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-SMSBFILO-SW      PIC  X        VALUE 'N'.\n               88  END-OF-SMSBFILO                   VALUE 'Y'.\n               88  MORE-SMSBFILO-RCDS                VALUE 'N'.\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  MIS0490B END  '.\n\n       LINKAGE SECTION.\n\n       01  PARM-FIELD.\n           05  PARM-LENGTH             PIC S9(04)    COMP.\n           05  PARM-SUFFIX             PIC  X(06).\n\n      /\n       PROCEDURE DIVISION USING PARM-FIELD.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-PROCESS-SMSBFILO.\n\n           DISPLAY '**** FILES TO COPY      ' WS-WRITE-RCD-CNT.\n           DISPLAY '**** MIS0490B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** MIS0490B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  SMSBFILO.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0490B OPEN ERROR ON SMSBFILO'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT SMSBFILC.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0490B OPEN ERROR ON SMSBFILC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n\n       0300-CLOSE-FILES.\n           CLOSE SMSBFILC.\n           CLOSE SMSBFILO.\n\n       0400-PROCESS-SMSBFILO.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0600-SELECT THRU\n                       0600-SELECT-EXIT\n                       UNTIL END-OF-SMSBFILO.\n\n       0600-SELECT.\n           PERFORM 1000-READ-SMSBFILO.\n           IF END-OF-SMSBFILO\n               GO TO 0600-SELECT-EXIT.\n\n           IF SMSBFILO-SKIP NOT = SPACE\n               GO TO 0600-SELECT-EXIT.\n           IF (SMSBFILO-DBHL1 = 'DSMS' OR 'LSMS')\n               AND (SMSBFILO-DBHL2 = 'DSMS' OR 'LSMS' OR 'LSYS')\n               AND (SMSBFILO-DOT1 = '.')\n               AND (SMSBFILO-DOT2 = '.')\n               GO TO 0600-SELECT-EXIT.\n\n           IF SMSBFILO-DBHL1 = SPACE\n               GO TO 0600-SELECT-EXIT.\n\n           MOVE SPACE                         TO SMSBFILC-RECORD.\n           STRING '('             DELIMITED BY SIZE\n                  SMSBFILO-HLQ    DELIMITED BY SIZE\n                  SMSBFILO-REMAIN DELIMITED BY SIZE\n                  INTO SMSBFILC-LINE.\n           PERFORM 1100-WRITE-SMSBFILC.\n           ADD 1                              TO WS-WRITE-RCD-CNT.\n           MOVE SPACE                         TO SMSBFILC-RECORD.\n           STRING '   '           DELIMITED BY SIZE\n                  SMSBFILO-HLQ    DELIMITED BY SPACE\n                  PARM-SUFFIX     DELIMITED BY SIZE\n                  '.'             DELIMITED BY SIZE\n                  SMSBFILO-REMAIN DELIMITED BY SPACE\n                  ')'             DELIMITED BY SIZE\n                  ' -'            DELIMITED BY SIZE\n                  INTO SMSBFILC-LINE.\n           PERFORM 1100-WRITE-SMSBFILC.\n\n       0600-SELECT-EXIT. EXIT.\n\n       1000-READ-SMSBFILO.\n           READ SMSBFILO.\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-SMSBFILO-SW\n           ELSE\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0490B READ ERROR ON SMSBFILO '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE 'Y'                       TO WS-END-SMSBFILO-SW\n               MOVE +1000                     TO WS-RETURN-CODE.\n\n       1100-WRITE-SMSBFILC.\n           WRITE SMSBFILC-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0490B WRITE ERROR ON SMSBFILC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1100                     TO WS-RETURN-CODE.\n\n      ************************************ END MIS0490B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MIS0515B": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11\\x17\\x04\\xee\\x04\\xee\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:17:03", "lines": 1262, "newlines": 1262, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  MIS0515B: SPLIT PX ADHOC REPORTS'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    MIS0515B.\n      ******************************************************************\n      *@@@ II SPLIT PX ADHOC REPORTS INTO 4 FILES\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 10/11/96\n      * AUTHOR      : JIM IANNONE\n      *               READ THE ADHOC SCHEDULE FILE AND DISTRIBUTE THE\n      *               PX ADHOCS INTO 9 SEPARATE FILES FOR\n      *               INPUT TO PAP19A6$ AND PXADHOCZ\n      ******************************************************************\n      * DATE CHANGED: 05/21/2001\n      * AUTHOR      : JIM IANNONE\n      *               ADD LIST OF ALLOWABLE ADHOCS.  ALL OTHERS ARE\n      *               SENT TO THE 'Z' FILES, AND A WARNING MESSAGE\n      *               IS SENT OUT TO TSO USERS.\n      ******************************************************************\n      * DATE CHANGED: 06/14/2001\n      * AUTHOR      : JIM IANNONE\n      *               ADD PXADHA6W\n      ******************************************************************\n      * DATE CHANGED: 05/08/2003\n      * AUTHOR      : JIM IANNONE\n      *               ADD PXADHA6S\n      ******************************************************************\n      * DATE CHANGED: 06/30/2004\n      * AUTHOR      : JIM IANNONE\n      *               ALTER FOR NEW A7 REGION\n      ******************************************************************\n      * DATE CHANGED: 09/22/2006\n      * AUTHOR      : JIM IANNONE\n      *               ADD TIFFIN AND WILLARD, ALLEN AND LORAIN\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT INFILE               ASSIGN TO INFILE\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT PARM01               ASSIGN TO PARM01\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUT9A                ASSIGN TO OUT9A\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUT9B                ASSIGN TO OUT9B\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUT9C                ASSIGN TO OUT9C\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUT9D                ASSIGN TO OUT9D\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTZA                ASSIGN TO OUTZA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTZB                ASSIGN TO OUTZB\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTZC                ASSIGN TO OUTZC\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTSA                ASSIGN TO OUTSA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTSB                ASSIGN TO OUTSB\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTSC                ASSIGN TO OUTSC\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTWA                ASSIGN TO OUTWA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTWB                ASSIGN TO OUTWB\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTWC                ASSIGN TO OUTWC\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTFA                ASSIGN TO OUTFA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTMA                ASSIGN TO OUTMA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT OUTAA                ASSIGN TO OUTAA\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT NOTIF01              ASSIGN TO NOTIF01\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  INFILE\n           RECORDING MODE F\n           BLOCK CONTAINS 0.\n       01  INFILE-RECORD.\n         02  INFILE-RCD.\n           05  INFILE-NBR1             PIC  X.\n           05  INFILE-KEY.\n               10  INFILE-HOSP         PIC  XX.\n               10  INFILE-SCHED        PIC  X(04).\n           05  INFILE-DY-WM            PIC  XX.\n           05  FILLER                  PIC  X(04).\n           05  INFILE-1-MDY            PIC  X(06).\n           05  FILLER                  PIC  X(04).\n           05  INFILE-2-MDY            PIC  X(06).\n           05  FILLER                  PIC  X(51).\n         02  INFILE-RCD2 REDEFINES INFILE-RCD.\n           05  FILLER                  PIC  X(13).\n           05  INFILE-RPT              PIC  X(08).\n           05  FILLER                  PIC  X(13).\n           05  INFILE-REGN             PIC  XX.\n           05  INFILE-FLAG1            PIC  X.\n           05  INFILE-FLAG2            PIC  X.\n           05  INFILE-FLAG3            PIC  X.\n           05  INFILE-FLAG4            PIC  X.\n           05  INFILE-FLAG5            PIC  X.\n           05  FILLER                  PIC  X(38).\n           05  INFILE-CNT              PIC  X.\n\n       FD  PARM01\n           RECORDING MODE F.\n       01  PARM01-RECORD.\n           05  PARM01-FLAG             PIC  X.\n           05  FILLER                  PIC  X.\n           05  PARM01-ADHOC            PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  PARM01-JOB              PIC  X.\n           05  FILLER                  PIC  X.\n           05  PARM01-LONG             PIC  XXX.\n           05  FILLER                  PIC  X.\n           05  PARM01-DY-WM            PIC  XXX.\n           05  FILLER                  PIC  X(52).\n           05  FILLER                  PIC  X(08).\n\n       FD  OUT9A\n           RECORDING MODE F.\n       01  OUT9A-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUT9B\n           RECORDING MODE F.\n       01  OUT9B-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUT9C\n           RECORDING MODE F.\n       01  OUT9C-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUT9D\n           RECORDING MODE F.\n       01  OUT9D-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTZA\n           RECORDING MODE F.\n       01  OUTZA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTZB\n           RECORDING MODE F.\n       01  OUTZB-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTZC\n           RECORDING MODE F.\n       01  OUTZC-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTSA\n           RECORDING MODE F.\n       01  OUTSA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTSB\n           RECORDING MODE F.\n       01  OUTSB-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTSC\n           RECORDING MODE F.\n       01  OUTSC-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTWA\n           RECORDING MODE F.\n       01  OUTWA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTWB\n           RECORDING MODE F.\n       01  OUTWB-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTWC\n           RECORDING MODE F.\n       01  OUTWC-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTFA\n           RECORDING MODE F.\n       01  OUTFA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTMA\n           RECORDING MODE F.\n       01  OUTMA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  OUTAA\n           RECORDING MODE F.\n       01  OUTAA-RECORD.\n           05  FILLER                  PIC X(80).\n\n       FD  NOTIF01\n           RECORDING MODE F.\n       01  NOTIF01-RECORD.\n           05  NOTIF01-SE              PIC  XXX.\n           05  NOTIF01-QUOTE1          PIC  X.\n           05  NOTIF01-FILL1           PIC  X.\n           05  NOTIF01-MSG             PIC  X(40).\n           05  NOTIF01-FILL2           PIC  X.\n           05  NOTIF01-QUOTE2          PIC  X.\n           05  NOTIF01-REMAIN          PIC  X(33).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE MIS0515B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n           05  WS-PARM01-MAX           PIC  9(05)    VALUE ZERO.\n           05  WS-1-CYMD               PIC  X(08)    VALUE '00000000'.\n           05  FILLER REDEFINES WS-1-CYMD.\n               10  WS-1-CYMD-CC        PIC  XX.\n               10  WS-1-CYMD-YY        PIC  XX.\n               10  WS-1-CYMD-MM        PIC  XX.\n               10  WS-1-CYMD-DD        PIC  XX.\n           05  WS-NBR1                 PIC  999      VALUE ZERO.\n           05  WS-NBR2                 PIC  999      VALUE ZERO.\n           05  WS-NBR1-M               PIC  999      VALUE ZERO.\n           05  WS-NBR2-M               PIC  999      VALUE ZERO.\n           05  WS-NBR-Z1               PIC  999      VALUE ZERO.\n           05  WS-NBR-Z2               PIC  999      VALUE ZERO.\n           05  WS-NBR-W1               PIC  999      VALUE ZERO.\n           05  WS-NBR-W2               PIC  999      VALUE ZERO.\n           05  WS-NBR-S1               PIC  999      VALUE ZERO.\n           05  WS-NBR-S2               PIC  999      VALUE ZERO.\n           05  WS-HOLD-NBR2            PIC  999      VALUE ZERO.\n           05  WS-HOLD-NBR2-M          PIC  999      VALUE ZERO.\n           05  WS-DIFF                 PIC  999      VALUE ZERO.\n           05  WS-HOLD-HDR             PIC  X(80)    VALUE SPACE.\n           05  WS-MOVED                PIC  X(12)    VALUE SPACE.\n           05  WS-PREV-HOSP            PIC  XX       VALUE SPACE.\n           05  WS-JOB-VAL              PIC  X        VALUE SPACE.\n           05  WS-LONG-VAL             PIC  XXX      VALUE SPACE.\n           05  WS-DY-WM-VAL            PIC  XXX      VALUE SPACE.\n           05  WS-CALL-STV0400B        PIC  X(08)    VALUE 'STV0400B'.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-READ-RCD-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-9A-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-9B-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-9C-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-9D-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-ZA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-ZB-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-ZC-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-WA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-WB-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-WC-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-SA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-SB-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-SC-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-FA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-MA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-AA-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-9-CNT          PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-Z-CNT          PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-W-CNT          PIC S9(05)    VALUE ZERO.\n           05  WS-WRITE-S-CNT          PIC S9(05)    VALUE ZERO.\n           05  WS-ADHOC-CNT            PIC S9(05)    VALUE ZERO.\n           05  WS-HOLD-RCD-CNT         PIC S9(05)    VALUE ZERO.\n           05  WS-PARM-CNT             PIC S9(05)    VALUE ZERO.\n           05  WS-NOTIF01-CNT          PIC S9(05)    VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-INFILE-SW        PIC  X        VALUE 'N'.\n               88  END-OF-INFILE                     VALUE 'Y'.\n               88  MORE-INFILE-RCDS                  VALUE 'N'.\n           05  WS-MONTHEND-SW          PIC  X        VALUE SPACE.\n               88  MONTHEND                          VALUE 'Y'.\n           05  WS-FIRST-RCD-SW         PIC  X        VALUE 'Y'.\n               88  FIRST-RECORD                      VALUE 'Y'.\n           05  WS-2ND-SW               PIC  X        VALUE SPACE.\n           05  WS-HD9A-SW              PIC  X        VALUE SPACE.\n           05  WS-HD9B-SW              PIC  X        VALUE SPACE.\n           05  WS-HD9C-SW              PIC  X        VALUE SPACE.\n           05  WS-HD9D-SW              PIC  X        VALUE SPACE.\n           05  WS-HDZA-SW              PIC  X        VALUE SPACE.\n           05  WS-HDZB-SW              PIC  X        VALUE SPACE.\n           05  WS-HDZC-SW              PIC  X        VALUE SPACE.\n           05  WS-HDWA-SW              PIC  X        VALUE SPACE.\n           05  WS-HDWB-SW              PIC  X        VALUE SPACE.\n           05  WS-HDWC-SW              PIC  X        VALUE SPACE.\n           05  WS-HDSA-SW              PIC  X        VALUE SPACE.\n           05  WS-HDSB-SW              PIC  X        VALUE SPACE.\n           05  WS-HDSC-SW              PIC  X        VALUE SPACE.\n           05  WS-HDFA-SW              PIC  X        VALUE SPACE.\n           05  WS-HDMA-SW              PIC  X        VALUE SPACE.\n           05  WS-HDAA-SW              PIC  X        VALUE SPACE.\n           05  WS-ADJ-SW               PIC  X        VALUE 'Y'.\n           05  WS-ADHOC-SW             PIC  X        VALUE 'N'.\n\n      *    YEAR 2000 COMPATIBLE DATE ROUTINE\n       01  WS-STV0400B-FIELDS.\n           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-ERROR      PIC  X(06).\n               10  STV0400B-NBR        PIC  X(04).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-CYMD       PIC  X(08).\n               10  FILLER              PIC  XX.\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAYS       PIC  X(05).\n               10  FILLER              PIC  X(05).\n           05  FILLER REDEFINES STV0400B-DATA.\n               10  STV0400B-DAY        PIC  X(09).\n               10  STV0400B-DAY-NBR    PIC  X.\n           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.\n           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.\n           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.\n\n       01  WS-SUBSCRIPTS               COMP.\n           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.\n           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.\n\n       01  WS-TABLES.\n           05  WS-ADHOC-TABLE                       VALUE SPACE.\n               10  WS-ADHOC-FIELD      OCCURS 300 TIMES.\n                   15  WS-ADHOC        PIC  X(08).\n                   15  WS-JOB          PIC  X.\n                   15  WS-LONG         PIC  XXX.\n                   15  WS-DY-WM        PIC  XXX.\n           05  WS-USER-TABLE                        VALUE SPACE.\n               10  WS-USERID           PIC  X(10)\n                                       OCCURS 20 TIMES.\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  MIS0515B END  '.\n\n       LINKAGE SECTION.\n\n       01  PARM-FIELD.\n           05  PARM-LENGTH             PIC S9(04)    COMP.\n           05  PARM-NBR1               PIC  XXX.\n           05  PARM-NBR2               PIC  XXX.\n           05  PARM-NBR1-M             PIC  XXX.\n           05  PARM-NBR2-M             PIC  XXX.\n           05  PARM-NBR-Z1             PIC  XXX.\n           05  PARM-NBR-S1             PIC  XXX.\n           05  PARM-NBR-W1             PIC  XXX.\n\n      /\n       PROCEDURE DIVISION USING PARM-FIELD.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-LOAD-PARM01 THRU\n                       0400-LOAD-PARM01-EXIT.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-PROCESS-INFILE.\n\n           DISPLAY '**** RECORDS IN INFILE      ' WS-READ-RCD-CNT.\n           IF MONTHEND\n               DISPLAY '**** MONTHEND VALUES USED '.\n           DISPLAY '**** NBR1                   ' WS-NBR1.\n           IF MONTHEND\n               DISPLAY '**** NBR2                   ' WS-HOLD-NBR2-M\n           ELSE\n               DISPLAY '**** NBR2                   ' WS-HOLD-NBR2.\n           DISPLAY '**** A6T/A7D/A8L NBR        ' WS-NBR-Z1.\n           DISPLAY '**** PXADHA7S    NBR        ' WS-NBR-S1.\n           DISPLAY '**** PXADHA7W    NBR        ' WS-NBR-W1.\n           DISPLAY '****'.\n           DISPLAY '**** PAP19RR$    #1         ' WS-WRITE-9A-CNT.\n           DISPLAY '****             #2         ' WS-WRITE-9B-CNT.\n           DISPLAY '****             #3         ' WS-WRITE-9C-CNT.\n           DISPLAY '****             #4         ' WS-WRITE-9D-CNT.\n           DISPLAY '**** A6T/A7D/A8L #1         ' WS-WRITE-ZA-CNT.\n           DISPLAY '****             #2         ' WS-WRITE-ZB-CNT.\n           DISPLAY '****             #3         ' WS-WRITE-ZC-CNT.\n           DISPLAY '**** PXADHA7S    #1         ' WS-WRITE-SA-CNT.\n           DISPLAY '****             #2         ' WS-WRITE-SB-CNT.\n           DISPLAY '****             #3         ' WS-WRITE-SC-CNT.\n           DISPLAY '**** PXADHA7W    #1         ' WS-WRITE-WA-CNT.\n           DISPLAY '****             #2         ' WS-WRITE-WB-CNT.\n           DISPLAY '****             #3         ' WS-WRITE-WC-CNT.\n           DISPLAY '**** PXADHA7F    #1         ' WS-WRITE-FA-CNT.\n           DISPLAY '**** PXADHA7M    #1         ' WS-WRITE-MA-CNT.\n           DISPLAY '**** PXADHA8A    #1         ' WS-WRITE-AA-CNT.\n           DISPLAY '****'.\n           DISPLAY '**** SCHEDULED ADHOCS       ' WS-ADHOC-CNT.\n           DISPLAY '****'.\n           DISPLAY '**** ALLOWABLE ADHOCS       ' WS-PARM-CNT.\n           DISPLAY '**** USER NOTIFICATIONS     ' WS-NOTIF01-CNT.\n           DISPLAY '**** MIS0515B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** MIS0515B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  INFILE.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON INFILE'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN INPUT  PARM01.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON INFILE'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0201                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUT9A.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9A'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0202                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUT9B.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9B'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0203                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUT9C.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9C'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0204                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUT9D.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9D'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0204                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTZA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0205                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTZB.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0206                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTZC.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0207                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTWA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0208                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTWB.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0209                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTWC.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0211                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTSA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0212                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTSB.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0213                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTSC.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0214                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTFA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTFA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0215                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTMA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTMA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0216                     TO WS-RETURN-CODE.\n           OPEN OUTPUT OUTAA.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON OUTAA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0217                     TO WS-RETURN-CODE.\n           OPEN OUTPUT NOTIF01.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0515B OPEN ERROR ON NOTIF01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0218                     TO WS-RETURN-CODE.\n\n       0300-CLOSE-FILES.\n           CLOSE NOTIF01.\n           CLOSE OUTAA.\n           CLOSE OUTMA.\n           CLOSE OUTFA.\n           CLOSE OUTSC.\n           CLOSE OUTSB.\n           CLOSE OUTSA.\n           CLOSE OUTWC.\n           CLOSE OUTWB.\n           CLOSE OUTWA.\n           CLOSE OUTZC.\n           CLOSE OUTZB.\n           CLOSE OUTZA.\n           CLOSE OUT9D.\n           CLOSE OUT9C.\n           CLOSE OUT9B.\n           CLOSE OUT9A.\n           CLOSE INFILE.\n           CLOSE PARM01.\n\n      *---------------------------------------\n      *    LOAD PARM01 - LIST OF ALLOWABLE ADHOCS\n      *---------------------------------------\n       0400-LOAD-PARM01.\n           READ PARM01.\n           IF WS-STAT = 10\n               MOVE WS-SUB1                   TO WS-PARM01-MAX\n               GO TO 0400-LOAD-PARM01-EXIT\n           ELSE\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B READ ERROR ON PARM01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0400                     TO WS-RETURN-CODE\n               GO TO 0400-LOAD-PARM01-EXIT.\n\n           IF PARM01-FLAG = '*'\n               GO TO 0400-LOAD-PARM01.\n           IF PARM01-FLAG = 'A'\n               IF WS-SUB1 < 300\n                   ADD 1                      TO WS-SUB1\n                   ADD 1                      TO WS-PARM-CNT\n                   MOVE PARM01-ADHOC          TO WS-ADHOC(WS-SUB1)\n                   MOVE PARM01-JOB            TO WS-JOB(WS-SUB1)\n                   MOVE PARM01-LONG           TO WS-LONG(WS-SUB1)\n                   MOVE PARM01-DY-WM          TO WS-DY-WM(WS-SUB1).\n           IF PARM01-FLAG = 'U'\n               IF WS-SUB2 < 20\n                   ADD 1                      TO WS-SUB2\n                   MOVE PARM01-ADHOC          TO WS-USERID(WS-SUB2).\n           GO TO 0400-LOAD-PARM01.\n\n       0400-LOAD-PARM01-EXIT. EXIT.\n\n       0400-PROCESS-INFILE.\n           IF PARM-NBR1 NUMERIC\n               MOVE PARM-NBR1                 TO WS-NBR1\n           ELSE\n               DISPLAY '**** MIS0515B NBR1 NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           IF PARM-NBR2 NUMERIC\n               MOVE PARM-NBR2                 TO WS-HOLD-NBR2\n           ELSE\n               DISPLAY '**** MIS0515B NBR2 NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n\n           IF PARM-NBR1-M NUMERIC\n               MOVE PARM-NBR1-M               TO WS-NBR1-M\n           ELSE\n               DISPLAY '**** MIS0515B MONTHEND NBR1 NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           IF PARM-NBR2-M NUMERIC\n               MOVE PARM-NBR2-M               TO WS-HOLD-NBR2-M\n           ELSE\n               DISPLAY '**** MIS0515B MONTHEND NBR2 NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           IF PARM-NBR-Z1 NUMERIC\n               MOVE PARM-NBR-Z1               TO WS-NBR-Z1\n               COMPUTE WS-NBR-Z2 = WS-NBR-Z1 + WS-NBR-Z1\n           ELSE\n               DISPLAY '**** MIS0515B ADHOC Z PARM NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           IF PARM-NBR-W1 NUMERIC\n               MOVE PARM-NBR-W1               TO WS-NBR-W1\n               COMPUTE WS-NBR-W2 = WS-NBR-W1 + WS-NBR-W1\n           ELSE\n               DISPLAY '**** MIS0515B ADHOC W PARM NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           IF PARM-NBR-S1 NUMERIC\n               MOVE PARM-NBR-S1               TO WS-NBR-S1\n               COMPUTE WS-NBR-S2 = WS-NBR-S1 + WS-NBR-S1\n           ELSE\n               DISPLAY '**** MIS0515B ADHOC S PARM NOT NUMERIC '\n               MOVE +0400                     TO WS-RETURN-CODE.\n           COMPUTE WS-NBR2 = WS-NBR1 + WS-HOLD-NBR2.\n           COMPUTE WS-NBR2-M = WS-NBR1-M + WS-HOLD-NBR2-M.\n\n           MOVE SPACE                         TO WS-STV0400B-FIELDS.\n           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.\n           MOVE STV0400B-CYMD                 TO WS-1-CYMD.\n           IF WS-1-CYMD-DD = '01'\n               MOVE 'Y'                       TO WS-MONTHEND-SW\n               MOVE WS-NBR1-M                 TO WS-NBR1\n               MOVE WS-NBR2-M                 TO WS-NBR2.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0500-READ-INFILE THRU\n                       0500-READ-INFILE-EXIT\n                       UNTIL END-OF-INFILE.\n\n       0500-READ-INFILE.\n           READ INFILE.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT\n               PERFORM 0600-SELECT THRU\n                       0600-SELECT-EXIT\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-INFILE-SW\n               PERFORM 0700-LAST-HEADERS\n           ELSE\n               DISPLAY '**** MIS0515B READ ERROR ON INFILE '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0500                     TO WS-RETURN-CODE.\n\n       0500-READ-INFILE-EXIT. EXIT.\n\n      ****************************************\n      *    WS-WRITE-9-CNT IS THE NUMBER OF ADHOC REPORT PAIRS,\n      *      NOT INCLUDING HEADER RECORDS.\n      *    # REPORTS IN SPLIT9A = WS-NBR1\n      *    # REPORTS IN SPLIT9B = WS-NBR2 MINUS WS-NBR1\n      *    # REPORTS IN SPLIT9C = REMAINDER\n      *    # REPORTS IN SPLIT9D = LONGER RUNNING ADHOCS\n      *+**************************************\n       0600-SELECT.\n           IF INFILE-SCHED = 'PXEX'\n               CONTINUE\n           ELSE\n               GO TO 0600-SELECT-EXIT.\n\n           IF FIRST-RECORD\n               MOVE INFILE-HOSP                TO WS-PREV-HOSP\n               MOVE 'N'                        TO WS-FIRST-RCD-SW.\n\n           IF INFILE-NBR1 = '1'\n               MOVE INFILE-RECORD              TO WS-HOLD-HDR\n               MOVE 'Y'                        TO WS-HD9A-SW\n               MOVE 'Y'                        TO WS-HD9B-SW\n               MOVE 'Y'                        TO WS-HD9C-SW\n               MOVE 'Y'                        TO WS-HD9D-SW\n               MOVE 'Y'                        TO WS-HDZA-SW\n               MOVE 'Y'                        TO WS-HDZB-SW\n               MOVE 'Y'                        TO WS-HDZC-SW\n               MOVE 'Y'                        TO WS-HDWA-SW\n               MOVE 'Y'                        TO WS-HDWB-SW\n               MOVE 'Y'                        TO WS-HDWC-SW\n               MOVE 'Y'                        TO WS-HDSA-SW\n               MOVE 'Y'                        TO WS-HDSB-SW\n               MOVE 'Y'                        TO WS-HDSC-SW\n               MOVE 'Y'                        TO WS-HDFA-SW\n               MOVE 'Y'                        TO WS-HDMA-SW\n               MOVE 'Y'                        TO WS-HDAA-SW\n               GO TO 0600-SELECT-EXIT.\n\n           IF INFILE-DY-WM = 'WM'\n              IF WS-ADJ-SW = 'Y'\n                  PERFORM 0600-ADJUST-FOR-WM\n                  MOVE 'N'                    TO WS-ADJ-SW.\n           IF INFILE-HOSP NOT = WS-PREV-HOSP\n              IF WS-ADJ-SW = 'Y'\n                  PERFORM 0600-ADJUST-FOR-HOSP\n                  MOVE 'N'                    TO WS-ADJ-SW.\n           MOVE 'N'                           TO WS-ADHOC-SW.\n           MOVE SPACE                         TO WS-JOB-VAL.\n           MOVE SPACE                         TO WS-LONG-VAL.\n           MOVE SPACE                         TO WS-DY-WM-VAL.\n           PERFORM 0650-SEARCH-ADHOCS\n               VARYING WS-SUB1 FROM 1 BY 1\n               UNTIL WS-SUB1 > WS-PARM01-MAX\n               OR WS-ADHOC-SW = 'Y'.\n\n      *---------------------------------------\n      *    A6  :  WRITTEN TO SPLIT9/Z           Z = ST. VINCENTS\n      *    A7  :  WRITTEN TO SPLIT9/Z/F/M/S/W   Z = DEFIANCE\n      *    A8  :  WRITTEN TO SPLIT9/Z/A         Z = LORAIN\n      *---------------------------------------\n           IF WS-ADHOC-SW = 'N'\n               OR WS-JOB-VAL = 'N'\n               IF INFILE-HOSP = 'F0'\n                   PERFORM 1500-HANDLE-F-ADHOCS\n               ELSE\n               IF INFILE-HOSP = 'M0'\n                   PERFORM 1500-HANDLE-M-ADHOCS\n               ELSE\n               IF INFILE-HOSP = 'S0'\n                   PERFORM 1500-HANDLE-S-ADHOCS\n               ELSE\n               IF INFILE-HOSP = 'W0'\n                   PERFORM 1500-HANDLE-W-ADHOCS\n               ELSE\n               IF INFILE-HOSP = 'A0'\n                   PERFORM 1500-HANDLE-A-ADHOCS\n               ELSE\n                   PERFORM 1500-HANDLE-Z-ADHOCS\n           ELSE\n           IF (WS-LONG-VAL = INFILE-HOSP OR 'ALL')\n               AND (WS-DY-WM-VAL = INFILE-DY-WM OR SPACE)\n               PERFORM 1400-WRITE-OUT9D\n           ELSE\n           IF WS-WRITE-9-CNT NOT < WS-NBR2\n               PERFORM 1400-WRITE-OUT9C\n           ELSE\n           IF WS-WRITE-9-CNT NOT < WS-NBR1\n               PERFORM 1300-WRITE-OUT9B\n           ELSE\n               PERFORM 1200-WRITE-OUT9A.\n\n       0600-SELECT-EXIT. EXIT.\n\n       0600-ADJUST-FOR-WM.\n           MOVE WS-WRITE-9-CNT                 TO WS-HOLD-RCD-CNT.\n           IF WS-HOLD-RCD-CNT < WS-NBR2\n             IF WS-HOLD-RCD-CNT < WS-NBR1\n                 COMPUTE WS-DIFF = WS-NBR1 - WS-HOLD-RCD-CNT\n                 IF WS-DIFF > 6\n                     CONTINUE\n                 ELSE\n                     COMPUTE WS-NBR1 = WS-HOLD-RCD-CNT\n                     DISPLAY '**** NBR1 ADJUSTED FOR WM   ' WS-NBR1\n             ELSE\n                 COMPUTE WS-DIFF = WS-NBR2 - WS-HOLD-RCD-CNT\n                 IF WS-DIFF > 6\n                     CONTINUE\n                 ELSE\n                     COMPUTE WS-NBR2 = WS-HOLD-RCD-CNT - WS-NBR1\n                     DISPLAY '**** NBR2 ADJUSTED FOR WM   ' WS-NBR2.\n\n       0600-ADJUST-FOR-HOSP.\n           MOVE WS-WRITE-9-CNT                 TO WS-HOLD-RCD-CNT.\n           IF WS-HOLD-RCD-CNT < WS-NBR2\n             IF WS-HOLD-RCD-CNT < WS-NBR1\n                 COMPUTE WS-DIFF = WS-NBR1 - WS-HOLD-RCD-CNT\n                 IF WS-DIFF > 6\n                     CONTINUE\n                 ELSE\n                     COMPUTE WS-NBR1 = WS-HOLD-RCD-CNT\n                     DISPLAY '**** NBR1 ADJUSTED FOR HOSP ' WS-NBR1\n             ELSE\n                 COMPUTE WS-DIFF = WS-NBR2 - WS-HOLD-RCD-CNT\n                 IF WS-DIFF > 6\n                     CONTINUE\n                 ELSE\n                     COMPUTE WS-NBR2 = WS-HOLD-RCD-CNT - WS-NBR1\n                     DISPLAY '**** NBR2 ADJUSTED FOR HOSP ' WS-NBR2.\n\n       0650-SEARCH-ADHOCS.\n           IF INFILE-RPT = WS-ADHOC(WS-SUB1)\n               MOVE 'Y'                       TO WS-ADHOC-SW\n               MOVE WS-LONG(WS-SUB1)          TO WS-LONG-VAL\n               MOVE WS-JOB(WS-SUB1)           TO WS-JOB-VAL\n               MOVE WS-DY-WM(WS-SUB1)         TO WS-DY-WM-VAL.\n\n       0700-LAST-HEADERS.\n           IF WS-WRITE-9B-CNT = ZERO\n               WRITE OUT9B-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-9C-CNT = ZERO\n               WRITE OUT9C-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-9D-CNT = ZERO\n               WRITE OUT9D-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-ZA-CNT = ZERO\n               WRITE OUTZA-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-ZB-CNT = ZERO\n               WRITE OUTZB-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-ZC-CNT = ZERO\n               WRITE OUTZC-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-WA-CNT = ZERO\n               WRITE OUTWA-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-WB-CNT = ZERO\n               WRITE OUTWB-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-WC-CNT = ZERO\n               WRITE OUTWC-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-SA-CNT = ZERO\n               WRITE OUTSA-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-SB-CNT = ZERO\n               WRITE OUTSB-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-SC-CNT = ZERO\n               WRITE OUTSC-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-FA-CNT = ZERO\n               WRITE OUTFA-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-MA-CNT = ZERO\n               WRITE OUTMA-RECORD FROM WS-HOLD-HDR.\n           IF WS-WRITE-AA-CNT = ZERO\n               WRITE OUTAA-RECORD FROM WS-HOLD-HDR.\n\n       1200-WRITE-OUT9A.\n           IF WS-HD9A-SW = 'Y'\n               MOVE SPACE                     TO WS-HD9A-SW\n               WRITE OUT9A-RECORD FROM WS-HOLD-HDR.\n           WRITE OUT9A-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9A'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1200                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-9A-CNT\n               ADD 1                          TO WS-WRITE-9-CNT.\n\n       1300-WRITE-OUT9B.\n           IF WS-HD9B-SW = 'Y'\n               MOVE SPACE                     TO WS-HD9B-SW\n               WRITE OUT9B-RECORD FROM WS-HOLD-HDR.\n           WRITE OUT9B-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9B'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1300                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-9B-CNT\n               ADD 1                          TO WS-WRITE-9-CNT.\n\n       1400-WRITE-OUT9C.\n           IF WS-HD9C-SW = 'Y'\n               MOVE SPACE                     TO WS-HD9C-SW\n               WRITE OUT9C-RECORD FROM WS-HOLD-HDR.\n           WRITE OUT9C-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9C'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1400                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-9C-CNT\n               ADD 1                          TO WS-WRITE-9-CNT.\n\n       1400-WRITE-OUT9D.\n           IF WS-HD9D-SW = 'Y'\n               MOVE SPACE                     TO WS-HD9D-SW\n               WRITE OUT9D-RECORD FROM WS-HOLD-HDR.\n           WRITE OUT9D-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9D'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1400                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-9D-CNT.\n\n       1500-HANDLE-Z-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'A6T/A7D/A8A '      TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           IF WS-WRITE-Z-CNT NOT < WS-NBR-Z2\n               PERFORM 1500-WRITE-OUTZC\n           ELSE\n           IF WS-WRITE-Z-CNT NOT < WS-NBR-Z1\n               PERFORM 1500-WRITE-OUTZB\n           ELSE\n               PERFORM 1500-WRITE-OUTZA.\n\n       1500-WRITE-OUTZA.\n           IF WS-HDZA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDZA-SW\n               WRITE OUTZA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTZA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-ZA-CNT\n               ADD 1                          TO WS-WRITE-Z-CNT.\n\n       1500-WRITE-OUTZB.\n           IF WS-HDZB-SW = 'Y'\n               MOVE SPACE                     TO WS-HDZB-SW\n               WRITE OUTZB-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTZB-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-ZB-CNT\n               ADD 1                          TO WS-WRITE-Z-CNT.\n\n       1500-WRITE-OUTZC.\n           IF WS-HDZC-SW = 'Y'\n               MOVE SPACE                     TO WS-HDZC-SW\n               WRITE OUTZC-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTZC-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-ZC-CNT\n               ADD 1                          TO WS-WRITE-Z-CNT.\n\n       1500-HANDLE-W-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'PXADHA7W'          TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           IF WS-WRITE-W-CNT NOT < WS-NBR-W2\n               PERFORM 1500-WRITE-OUTWC\n           ELSE\n           IF WS-WRITE-W-CNT NOT < WS-NBR-W1\n               PERFORM 1500-WRITE-OUTWB\n           ELSE\n               PERFORM 1500-WRITE-OUTWA.\n\n       1500-WRITE-OUTWA.\n           IF WS-HDWA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDWA-SW\n               WRITE OUTWA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTWA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-WA-CNT\n               ADD 1                          TO WS-WRITE-W-CNT.\n\n       1500-WRITE-OUTWB.\n           IF WS-HDWB-SW = 'Y'\n               MOVE SPACE                     TO WS-HDWB-SW\n               WRITE OUTWB-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTWB-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-WB-CNT\n               ADD 1                          TO WS-WRITE-W-CNT.\n\n       1500-WRITE-OUTWC.\n           IF WS-HDWC-SW = 'Y'\n               MOVE SPACE                     TO WS-HDWC-SW\n               WRITE OUTWC-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTWC-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-WC-CNT\n               ADD 1                          TO WS-WRITE-W-CNT.\n\n       1500-HANDLE-S-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'PXADHA7S'          TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           IF WS-WRITE-S-CNT NOT < WS-NBR-S2\n               PERFORM 1500-WRITE-OUTSC\n           ELSE\n           IF WS-WRITE-S-CNT NOT < WS-NBR-S1\n               PERFORM 1500-WRITE-OUTSB\n           ELSE\n               PERFORM 1500-WRITE-OUTSA.\n\n       1500-WRITE-OUTSA.\n           IF WS-HDSA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDSA-SW\n               WRITE OUTSA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTSA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-SA-CNT\n               ADD 1                          TO WS-WRITE-S-CNT.\n\n       1500-WRITE-OUTSB.\n           IF WS-HDSB-SW = 'Y'\n               MOVE SPACE                     TO WS-HDSB-SW\n               WRITE OUTSB-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTSB-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSB'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-SB-CNT\n               ADD 1                          TO WS-WRITE-S-CNT.\n\n       1500-WRITE-OUTSC.\n           IF WS-HDSC-SW = 'Y'\n               MOVE SPACE                     TO WS-HDSC-SW\n               WRITE OUTSC-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTSC-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSC'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-SC-CNT\n               ADD 1                          TO WS-WRITE-S-CNT.\n\n       1500-HANDLE-F-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'PXADHA7F'          TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           PERFORM 1500-WRITE-OUTFA.\n\n       1500-WRITE-OUTFA.\n           IF WS-HDFA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDFA-SW\n               WRITE OUTFA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTFA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTFA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-FA-CNT.\n\n       1500-HANDLE-M-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'PXADHA7M'          TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           PERFORM 1500-WRITE-OUTMA.\n\n       1500-WRITE-OUTMA.\n           IF WS-HDMA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDMA-SW\n               WRITE OUTMA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTMA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTMA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-MA-CNT.\n\n       1500-HANDLE-A-ADHOCS.\n           IF WS-JOB-VAL = SPACE\n             IF INFILE-RPT(3: 3) NOT = 'PXZ'\n                 IF INFILE-CNT = '1'\n                     MOVE 'PXADHA8A'          TO WS-MOVED\n                     PERFORM 1600-CREATE-NOTIFY\n                         VARYING WS-SUB2 FROM 1 BY 1\n                         UNTIL WS-SUB2 > 20.\n           PERFORM 1500-WRITE-OUTAA.\n\n       1500-WRITE-OUTAA.\n           IF WS-HDAA-SW = 'Y'\n               MOVE SPACE                     TO WS-HDAA-SW\n               WRITE OUTAA-RECORD FROM WS-HOLD-HDR.\n           WRITE OUTAA-RECORD FROM INFILE-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON OUTAA'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1500                     TO WS-RETURN-CODE.\n\n           IF WS-2ND-SW = SPACE\n               MOVE 'Y'                       TO WS-2ND-SW\n           ELSE\n               MOVE SPACE                     TO WS-2ND-SW\n               ADD 1                          TO WS-ADHOC-CNT\n               ADD 1                          TO WS-WRITE-AA-CNT.\n\n       1600-CREATE-NOTIFY.\n           IF WS-USERID(WS-SUB2) = SPACE\n               MOVE 20                        TO WS-SUB2\n           ELSE\n               MOVE 'SE '                     TO NOTIF01-SE\n               MOVE QUOTE                     TO NOTIF01-QUOTE1\n               MOVE SPACE                     TO NOTIF01-FILL1\n               MOVE SPACE                     TO NOTIF01-MSG\n               STRING WS-1-CYMD-MM '-' WS-1-CYMD-DD '-'\n                          WS-1-CYMD-YY '  ' INFILE-RPT\n                          ' MOVED TO ' WS-MOVED\n                          DELIMITED BY SIZE INTO NOTIF01-MSG\n               MOVE SPACE                     TO NOTIF01-FILL2\n               MOVE QUOTE                     TO NOTIF01-QUOTE2\n               MOVE SPACE                     TO NOTIF01-REMAIN\n               STRING ' U('                   DELIMITED BY SIZE\n                      WS-USERID(WS-SUB2)      DELIMITED BY ' '\n                      ') LOGON'               DELIMITED BY SIZE\n                      INTO NOTIF01-REMAIN\n               PERFORM 1700-WRITE-NOTIF01.\n\n       1700-WRITE-NOTIF01.\n           WRITE NOTIF01-RECORD.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0515B WRITE ERROR ON NOTIF01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1700                     TO WS-RETURN-CODE.\n           ADD 1                              TO WS-NOTIF01-CNT.\n\n      ************************************ END MIS0515B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MIS0580B": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11\\x17\\x01w\\x01w\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:17:28", "lines": 375, "newlines": 375, "modlines": 0, "user": "IANNONE"}, "text": "\n       TITLE '  MIS0580B: list move requests'.\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    MIS0580B.\n      ******************************************************************\n      *@@@ II list move requests from SUT delivery list\n      ******************************************************************\n      *\n      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS\n      *  ARE IN USE.     EMAIL:  jiannon@me.com\n      *\n      ******************************************************************\n      * DATE WRITTEN: 04/15/98\n      * AUTHOR      : JIM IANNONE\n      *               LOOP THROUGH A SUT CHANGE REPORT AND PARSE\n      *               OUT MOVE REQUESTS AS REQUESTED BY ENTRIES\n      *               IN A STATIC PARM.\n      ******************************************************************\n\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n           C01 IS PAGE-TOP.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT SUTIN                ASSIGN TO SUTIN\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SUTO03               ASSIGN TO SUTO03\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT PARM01               ASSIGN TO PARM01\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n           SELECT SMSNAME              ASSIGN TO SMSNAME\n                                       ORGANIZATION IS SEQUENTIAL\n                                       ACCESS MODE IS SEQUENTIAL\n                                       FILE STATUS IS WS-STAT.\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  SUTIN\n           RECORDING MODE F.\n       01  SUTIN-RECORD.\n           05  SUTIN-RCD1              PIC  X(133).\n           05  FILLER REDEFINES SUTIN-RCD1.\n               10  FILLER              PIC  X(05).\n               10  SUTIN-LIB           PIC  X(08).\n               10  FILLER              PIC  X(05).\n               10  SUTIN-MARK1         PIC  X.\n               10  FILLER              PIC  XXX.\n               10  SUTIN-ELEMENT       PIC  X(08).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-MARK2         PIC  X.\n               10  FILLER              PIC  XX.\n               10  SUTIN-LIB-NAME      PIC  X(44).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-MARK3         PIC  X.\n               10  FILLER              PIC  XXX.\n               10  SUTIN-TARGET        PIC  X(05).\n               10  FILLER              PIC  XX.\n               10  SUTIN-MARK4         PIC  X.\n               10  FILLER              PIC  XX.\n               10  SUTIN-AREA1         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ1     PIC  X(05).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-AREA2         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ2     PIC  X(05).\n               10  FILLER              PIC  XXX.\n               10  SUTIN-AREA3         PIC  XXX.\n               10  FILLER              PIC  XX.\n               10  SUTIN-MOVE-REQ3     PIC  X(05).\n\n       FD  PARM01\n           RECORDING MODE F.\n       01  PARM01-RECORD.\n           05  PARM01-DOCU             PIC  X.\n           05  FILLER                  PIC  X.\n           05  PARM01-MOVE-REQ         PIC  X(08).\n           05  FILLER                  PIC  X(62).\n           05  FILLER                  PIC  X(08).\n\n       FD  SUTO03\n           RECORDING MODE F.\n       01  SUTO03-RECORD.\n           05  SUTO03-SUT-NAME         PIC  X(14).\n           05  FILLER                  PIC  X.\n           05  SUTO03-MOVE-REQ         PIC  X(08).\n           05  FILLER                  PIC  X.\n           05  SUTO03-APPLY            PIC  X(106).\n           05  FILLER                  PIC  XX.\n\n       FD  SMSNAME\n           RECORDING MODE F.\n       01  SMSNAME-RECORD.\n           05  SMSNAME-PRE             PIC  X(12).\n           05  SMSNAME-NAME            PIC  X(30).\n           05  FILLER                  PIC  X(38).\n\n       WORKING-STORAGE SECTION.\n\n       01  WS-START.\n           05  FILLER                  PIC  X(32)    VALUE\n               ' WORKING STORAGE MIS0580B START '.\n\n       01  WS-WORK-FIELDS.\n           05  WS-STAT                 PIC  99       VALUE ZERO.\n           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.\n           05  WS-PARM01-MAX           PIC  9(05)    VALUE ZERO.\n           05  WS-SUT-NAME             PIC  X(20)    VALUE SPACE.\n           05  WS-SMSNAME              PIC  X(30)    VALUE SPACE.\n           05  WS-MOVE-REQ             PIC  X(08)    VALUE SPACE.\n\n       01  WS-COUNT-FIELDS             COMP-3.\n           05  WS-READ-RCD-CNT         PIC S9(07)    VALUE ZERO.\n           05  WS-WRITE-RCD3-CNT       PIC S9(07)    VALUE ZERO.\n           05  WS-SKIP-CNT             PIC S9(05)    VALUE ZERO.\n\n       01  WS-SWITCHES.\n           05  WS-END-SUTIN-SW         PIC  X        VALUE 'N'.\n               88  END-OF-SUTIN                      VALUE 'Y'.\n               88  MORE-SUTIN-RCDS                   VALUE 'N'.\n           05  WS-TOP-SW               PIC  X        VALUE SPACE.\n           05  WS-DASH-SW              PIC  X        VALUE SPACE.\n           05  WS-DIFF-SW              PIC  X        VALUE SPACE.\n           05  WS-REPORT-FOUND-SW      PIC  X        VALUE SPACE.\n           05  WS-MV-REQ-SW            PIC  X        VALUE SPACE.\n           05  WS-END-MV-REQ           PIC  X        VALUE SPACE.\n\n       01  WS-SUBSCRIPTS               COMP.\n           05  WS-SUB1                 PIC S9(04)   VALUE ZERO.\n\n       01  WS-TABLES.\n           05  WS-MOVE-REQUEST-TABLE   PIC  X(800)   VALUE SPACE.\n           05  WS-MV-REQ REDEFINES WS-MOVE-REQUEST-TABLE\n                                       PIC  X(08)\n                                       OCCURS 100 TIMES.\n\n       01  WS-END.\n           05  FILLER                  PIC  X(16)    VALUE\n               '  MIS0580B END  '.\n\n      /\n       PROCEDURE DIVISION.\n\n       0100-PROGRAM-ENTRY.\n           PERFORM 0200-OPEN-FILES.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0400-PROCESS-SUTIN.\n\n           DISPLAY '**** RECORDS IN SUTIN       ' WS-READ-RCD-CNT.\n           DISPLAY '**** PARM MOVE REQUESTS     ' WS-PARM01-MAX.\n           DISPLAY '**** PRINTED MOVE REQUESTS  ' WS-WRITE-RCD3-CNT.\n           DISPLAY '**** MIS0580B EOJ ENCOUNTERED '.\n\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0300-CLOSE-FILES\n           ELSE\n               DISPLAY '**** MIS0580B COND CODE ' WS-RETURN-CODE\n                       ' SENT BY PROGRAM'\n               MOVE WS-RETURN-CODE            TO RETURN-CODE.\n\n           STOP RUN.\n\n       0200-OPEN-FILES.\n           OPEN INPUT  SUTIN.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0580B OPEN ERROR ON SUTIN'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN INPUT  PARM01.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0580B OPEN ERROR ON PARM01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN INPUT SMSNAME.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0580B OPEN ERROR ON SMSNAME'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n           OPEN OUTPUT SUTO03.\n           IF WS-STAT NOT = ZERO\n               DISPLAY '**** MIS0580B OPEN ERROR ON SUTO03'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0200                     TO WS-RETURN-CODE.\n\n       0300-CLOSE-FILES.\n           CLOSE SUTO03.\n           CLOSE SMSNAME.\n           CLOSE PARM01.\n           CLOSE SUTIN.\n\n       0400-PROCESS-SUTIN.\n           IF WS-RETURN-CODE = ZERO\n               MOVE 'UNKNOWN SUT DELIVERY'    TO WS-SMSNAME\n               PERFORM 0500-FIND-NAME THRU\n                       0500-FIND-NAME-EXIT.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0550-LOAD-PARM01 THRU\n                       0550-LOAD-PARM01-EXIT.\n           IF WS-RETURN-CODE = ZERO\n               PERFORM 0600-SELECT THRU\n                       0600-SELECT-EXIT\n                       UNTIL END-OF-SUTIN.\n           IF WS-DIFF-SW = 'Y'\n               MOVE '  NON-STANDARD DELIVERY REPORT ' TO SUTO03-RECORD\n               PERFORM 1300-WRITE-SUTO03.\n           IF WS-REPORT-FOUND-SW = SPACE\n               MOVE '  NO RECOGNIZED REPORT FORMAT FOUND'\n                                    TO SUTO03-RECORD\n               PERFORM 1300-WRITE-SUTO03.\n\n       0500-FIND-NAME.\n           READ SMSNAME.\n           IF WS-STAT = 10\n               GO TO 0500-FIND-NAME-EXIT\n           ELSE\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0580B READ ERROR ON SMSNAME'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0500                     TO WS-RETURN-CODE\n               GO TO 0500-FIND-NAME-EXIT.\n\n           IF SMSNAME-PRE(1: 5) = '00000'\n               MOVE SMSNAME-NAME          TO WS-SMSNAME\n               GO TO 0500-FIND-NAME-EXIT.\n           GO TO 0500-FIND-NAME.\n\n       0500-FIND-NAME-EXIT. EXIT.\n\n      ****************************************\n      *    LOAD PARM01\n      ****************************************\n       0550-LOAD-PARM01.\n           READ PARM01.\n           IF WS-STAT = 10\n               MOVE WS-SUB1                   TO WS-PARM01-MAX\n               GO TO 0550-LOAD-PARM01-EXIT\n           ELSE\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0580B READ ERROR ON PARM01'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +0550                     TO WS-RETURN-CODE\n               GO TO 0550-LOAD-PARM01-EXIT.\n\n           IF PARM01-DOCU = '*'\n               GO TO 0550-LOAD-PARM01.\n           IF WS-SUB1 < 100\n               ADD 1                          TO WS-SUB1\n               MOVE PARM01-MOVE-REQ           TO WS-MV-REQ (WS-SUB1).\n           GO TO 0550-LOAD-PARM01.\n\n       0550-LOAD-PARM01-EXIT. EXIT.\n\n       0600-SELECT.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               GO TO 0600-SELECT-EXIT.\n\n           IF WS-SKIP-CNT > ZERO\n               SUBTRACT 1 FROM WS-SKIP-CNT\n               GO TO 0600-SELECT-EXIT.\n\n      ****************************************\n      *    this logic is for the delivery reports which are in\n      *    a different format than regular SUT delivery reports.\n      *+**************************************\n           IF SUTIN-RECORD(56: 19) = 'SMS DELIVERY REPORT'\n               MOVE 'Y'                       TO WS-REPORT-FOUND-SW\n               MOVE 'Y'                       TO WS-DIFF-SW.\n           IF WS-DIFF-SW = 'Y'\n               GO TO 0600-SELECT-EXIT.\n\n      ****************************************\n      *    'events contained' is the signal for a regular sut\n      *    delivery report\n      *+**************************************\n           IF SUTIN-RECORD(22: 16) = 'Events contained'\n                                  OR 'EVENTS CONTAINED'\n               MOVE 'Y'                       TO WS-REPORT-FOUND-SW\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD(24: 20)      TO WS-SUT-NAME\n               GO TO 0600-SELECT-EXIT.\n\n       0600-CONTINUE.\n           IF END-OF-SUTIN\n               GO TO 0600-SELECT-EXIT.\n           IF SUTIN-RECORD(02: 16) = 'MOVE REQUEST NO.'\n               PERFORM 1000-READ-SUTIN\n               PERFORM 1000-READ-SUTIN\n               MOVE SUTIN-RECORD(10: 8)       TO WS-MOVE-REQ\n               MOVE SPACE                     TO WS-MV-REQ-SW\n               PERFORM 0700-TEST-MV-REQ\n                   VARYING WS-SUB1 FROM 1 BY 1\n                   UNTIL WS-SUB1 > WS-PARM01-MAX\n               IF WS-MV-REQ-SW = 'Y'\n                   PERFORM 1000-READ-SUTIN\n                   MOVE SPACE                 TO WS-END-MV-REQ\n                   MOVE 'Y'                   TO WS-TOP-SW\n                   PERFORM 0800-PRINT-MV-REQ\n                       UNTIL WS-END-MV-REQ = 'Y'\n                   GO TO 0600-CONTINUE.\n\n       0600-SELECT-EXIT. EXIT.\n\n       0700-TEST-MV-REQ.\n           IF WS-MOVE-REQ = WS-MV-REQ (WS-SUB1)\n               MOVE 'Y'                       TO WS-MV-REQ-SW\n               MOVE WS-PARM01-MAX             TO WS-SUB1.\n\n       0800-PRINT-MV-REQ.\n           MOVE SPACE                         TO SUTO03-RECORD.\n           MOVE SUTIN-RCD1(2: 106)            TO SUTO03-APPLY.\n           MOVE WS-MOVE-REQ                   TO SUTO03-MOVE-REQ.\n           MOVE WS-SUT-NAME                   TO SUTO03-SUT-NAME.\n           IF WS-TOP-SW = 'Y'\n               PERFORM 1400-WRITE-SUTO03-TOP\n               MOVE SPACE                     TO WS-TOP-SW\n           ELSE\n               PERFORM 1300-WRITE-SUTO03.\n           PERFORM 1000-READ-SUTIN.\n           IF END-OF-SUTIN\n               MOVE 'Y'                       TO WS-END-MV-REQ.\n           IF SUTIN-RECORD(02: 16) = 'MOVE REQUEST NO.'\n               MOVE 'Y'                       TO WS-END-MV-REQ.\n           IF SUTIN-RECORD(63: 10) = '----------'\n               IF WS-DASH-SW = 'Y'\n                   MOVE 'Y'                   TO WS-END-MV-REQ\n               ELSE\n                   MOVE 'Y'                   TO WS-DASH-SW\n           ELSE\n               MOVE SPACE                     TO WS-DASH-SW.\n\n       1000-READ-SUTIN.\n           READ SUTIN.\n           IF WS-STAT = ZERO\n               ADD 1                          TO WS-READ-RCD-CNT\n           ELSE\n           IF WS-STAT = 10\n               MOVE 'Y'                       TO WS-END-SUTIN-SW\n           ELSE\n               DISPLAY '**** MIS0580B READ ERROR ON SUTIN '\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE 'Y'                       TO WS-END-SUTIN-SW\n               MOVE +1000                     TO WS-RETURN-CODE.\n\n       1300-WRITE-SUTO03.\n           WRITE SUTO03-RECORD AFTER ADVANCING 1.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0580B WRITE ERROR ON SUTO03'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1300                     TO WS-RETURN-CODE.\n\n       1400-WRITE-SUTO03-TOP.\n           WRITE SUTO03-RECORD AFTER ADVANCING PAGE-TOP.\n           IF WS-STAT > ZERO\n               DISPLAY '**** MIS0580B WRITE ERROR ON SUTO03'\n               DISPLAY '**** FILE STAT = ' WS-STAT\n               MOVE +1400                     TO WS-RETURN-CODE.\n           ADD 1                              TO WS-WRITE-RCD3-CNT.\n\n      ************************************ END MIS0580B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PAP19A6$": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x004/\\x01\\x004/\\x165\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-12-07T00:00:00", "modifydate": "2000-12-07T16:35:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "IANNONE"}, "text": "  Insert before the PXADHCS step in PAP19A6$\n\n//*\n//*\n//*-----------------------------------------------\n//*   READ ADHOC SCHEDULE FILE AND CREATE 6 PX SCHEDULE FILES.\n//*   DETERMINE PLACEMENT OF REPORTS BASED ON PX REPORT COUNT\n//*   PASSED IN PARM.\n//*\n//*   PARM='111222333444555'    111 = DAILY NBR1\n//*                             222 = DAILY NBR2\n//*                             333 = MONTHEND NBR1\n//*                             444 = MONTHEND NBR2\n//*                             555 = PXADHOCZ NBR\n//*\n//*    # REPORTS IN SPLIT1 = NBR1\n//*    # REPORTS IN SPLIT2 = NBR2\n//*    # REPORTS IN SPLIT3 = REMAINDER\n//*    # REPORTS IN SPLIT4 = PXADHOCZ NBR\n//*    # REPORTS IN SPLIT5 = PXADHOCZ NBR * 2\n//*    # REPORTS IN SPLIT6 = PXADHOCZ REMAINDER\n//*-----------------------------------------------\n//PXSPLIT  EXEC SMSAC,\n//             PXSPLT='015015015015008'\n//BULK01   EXEC SMSAJ\n//BULK02   EXEC SMSAK\n//*....JCI....961011 PXSPLIT  INVOKE SMSAC, BULK01, BULK02\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PXADHOCZ": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x18\\x00\\xef\\x00\\xef\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:18:48", "lines": 239, "newlines": 239, "modlines": 0, "user": "IANNONE"}, "text": "//PXADHOCZ JOB (111111,11),'SMSPROD-INVISION',CLASS=C,MSGCLASS=H,\n//         REGION=96M,TIME=NOLIMIT\n//*....JCI....961010 PAP19A6$  REGION=60M,TIME=NOLIMIT\n/*JOBPARM PROCLIB=PROCP\n//JOBLIB    DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.E0000.LOAD\n//          DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.P0000.LOAD\n//          DD  DISP=SHR,DSN=PLSMS.SMBSM00L.E0000.LOAD\n//          DD  DISP=SHR,DSN=PLSMS.SMBSM00L.P0000.LOAD\n//          DD  DISP=SHR,DSN=SYS1.COB2LIB\n//*---------------------------------------------------------------\n//*  !! NOTE:  WHEN SUBMITTING MANUALLY:\n//*\n//*            THIS JOB PROCESSES PDSMS.SMGS.DGA6.SCHEDULE.SPLIT4\n//*                           AND PDSMS.SMGS.DGA6.SCHEDULE.SPLIT5\n//*                           AND PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6\n//*\n//*            EITHER ALTER THEM ALL OR DELETE THE PXADHC2/3 STEP.\n//*\n//*            COMMENT OUT THE START AND UPDATE STEPS BELOW.\n//*---------------------------------------------------------------\n//START  EXEC DECHCKPT,CP=01,HL1='PDSMS.',JOB=PXADHOCZ,ACT=S\n//UPDATE EXEC DECHCKPT,CP=01,HL1='PDSMS.',JOB=PXADHOCZ,ACT=U\n//*---------------------------------------------------------------\n//PXADHCS  EXEC AHDAYEND,\n//             APPL=PX,\n//             LVL=P,\n//             HL1='PDSMS.',           DATASET NAME HIGH LEVEL\n//             HL2='PLSMS.',           LIBRARY HIGH LEVEL\n//             HL9='PLSMS.',\n//             REGION=60M,\n//             CODE=SYSIN,             USED TO REFERENCE SCHEDULE FILE\n//             MEMBER=BRPSCHPX,        USED TO REFERENCE SCHEDULE FILE\n//             FHC='  ',\n//             DG=A6                   PROCESSING REGION\n//*\n//ADHSCEXT.SCHFILE DD DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT4\n//*....JCI.... USE TO OVERRIDE WHICH REPORTS ARE SELECTED FOR ADHOC\n//*\n//SMSBIRP.BIRPARMX DD *\nSEGEXIT=PAAHEXIT\n//*\n//* FILES BELOW ARE OVERRIDES FOR DDNAMES NOT IN THE AHDAYEND PROC\n//* DO NOT COMMENT THEM OUT OF THIS JOB\n//*\n//SMSBIRP.SYSOUT DD SYSOUT=*\n//SMSBIRP.SYSABOUT DD SYSOUT=*\n//*     TRANSFER FILES FOR PX ADHOCS\n//SMSBIRP.OPXFRIP  DD DUMMY,DCB=BLKSIZE=6230\n//SMSBIRP.BDXFRAR  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFRAR\n//SMSBIRP.HMXFRAR  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRAR\n//SMSBIRP.IPXFROP  DD DISP=SHR,DSN=PDSMS.SMIP.DGA6.IPXFROP\n//SMSBIRP.BDXFROP  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFROP\n//SMSBIRP.HMXFROP  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFROP\n//SMSBIRP.HMXFRBD  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRBD\n//*\n//SMSBIRP.PAPRM    DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PRMASTER\n//SMSBIRP.CDMSTFIL DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.CDMASTER\n//SMSBIRP.DOCMSTR  DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.DOCMSTR\n//SMSBIRP.DIAFILE  DD DISP=SHR,DSN=PDSMS.SVPC.SITE.ICDAFILE\n//SMSBIRP.DRGCNTL DD DISP=SHR,DSN=PDSMS.SMHF.SITE.DRGCNTL,DCB=BUFNO=1\n//SMSBIRP.PAAHSCHD DD DISP=SHR,DSN=PDSMS.SMPA.SITE.PAPXSCHD\n//SMSBIRP.PAPARMDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PXPARMDV),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.BMBFILE DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAABENDS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDEFN DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDATA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDAT),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAPARMDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAPARMDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDEF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDAT DD DSN=PLSMS.PASSM00L.P0000.SYSIN(ADHCORDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAKPFCTL DD DSN=PLSMS.SMSSM00L.P0000.SYSIN(PA016A6$),\n//  DISP=SHR\n//SMSBIRP.HMFLNMS DD DSN=PLSMS.PASDG&DG.L.P0000.SYSIN(HMDSNMS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAMSTKPF DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PAMSTKPF\n//*---------------------------------------------------------------\n//PXADHC2  EXEC AHDAYEND,\n//             APPL=PX,\n//             LVL=P,\n//             HL1='PDSMS.',           DATASET NAME HIGH LEVEL\n//             HL2='PLSMS.',           LIBRARY HIGH LEVEL\n//             HL9='PLSMS.',\n//             REGION=60M,\n//             CODE=SYSIN,             USED TO REFERENCE SCHEDULE FILE\n//             MEMBER=BRPSCHPX,        USED TO REFERENCE SCHEDULE FILE\n//             FHC='  ',\n//             DG=A6                   PROCESSING REGION\n//*\n//ADHSCEXT.SCHFILE DD DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT5\n//*....JCI.... USE TO OVERRIDE WHICH REPORTS ARE SELECTED FOR ADHOC\n//*\n//SMSBIRP.BIRPARMX DD *\nSEGEXIT=PAAHEXIT\n//*\n//* FILES BELOW ARE OVERRIDES FOR DDNAMES NOT IN THE AHDAYEND PROC\n//* DO NOT COMMENT THEM OUT OF THIS JOB\n//*\n//SMSBIRP.SYSOUT DD SYSOUT=*\n//SMSBIRP.SYSABOUT DD SYSOUT=*\n//*     TRANSFER FILES FOR PX ADHOCS\n//SMSBIRP.OPXFRIP  DD DUMMY,DCB=BLKSIZE=6230\n//SMSBIRP.BDXFRAR  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFRAR\n//SMSBIRP.HMXFRAR  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRAR\n//SMSBIRP.IPXFROP  DD DISP=SHR,DSN=PDSMS.SMIP.DGA6.IPXFROP\n//SMSBIRP.BDXFROP  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFROP\n//SMSBIRP.HMXFROP  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFROP\n//SMSBIRP.HMXFRBD  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRBD\n//*\n//SMSBIRP.PAPRM    DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PRMASTER\n//SMSBIRP.CDMSTFIL DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.CDMASTER\n//SMSBIRP.DOCMSTR  DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.DOCMSTR\n//SMSBIRP.DIAFILE  DD DISP=SHR,DSN=PDSMS.SVPC.SITE.ICDAFILE\n//SMSBIRP.DRGCNTL DD DISP=SHR,DSN=PDSMS.SMHF.SITE.DRGCNTL,DCB=BUFNO=1\n//SMSBIRP.PAAHSCHD DD DISP=SHR,DSN=PDSMS.SMPA.SITE.PAPXSCHD\n//SMSBIRP.PAPARMDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PXPARMDV),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.BMBFILE DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAABENDS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDEFN DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDATA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDAT),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAPARMDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAPARMDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDEF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDAT DD DSN=PLSMS.PASSM00L.P0000.SYSIN(ADHCORDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAKPFCTL DD DSN=PLSMS.SMSSM00L.P0000.SYSIN(PA016A6$),\n//  DISP=SHR\n//SMSBIRP.HMFLNMS DD DSN=PLSMS.PASDG&DG.L.P0000.SYSIN(HMDSNMS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAMSTKPF DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PAMSTKPF\n//*---------------------------------------------------------------\n//PXADHC3  EXEC AHDAYEND,\n//             APPL=PX,\n//             LVL=P,\n//             HL1='PDSMS.',           DATASET NAME HIGH LEVEL\n//             HL2='PLSMS.',           LIBRARY HIGH LEVEL\n//             HL9='PLSMS.',\n//             REGION=60M,\n//             CODE=SYSIN,             USED TO REFERENCE SCHEDULE FILE\n//             MEMBER=BRPSCHPX,        USED TO REFERENCE SCHEDULE FILE\n//             FHC='  ',\n//             DG=A6                   PROCESSING REGION\n//*\n//ADHSCEXT.SCHFILE DD DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6\n//*....JCI.... USE TO OVERRIDE WHICH REPORTS ARE SELECTED FOR ADHOC\n//*\n//SMSBIRP.BIRPARMX DD *\nSEGEXIT=PAAHEXIT\n//*\n//* FILES BELOW ARE OVERRIDES FOR DDNAMES NOT IN THE AHDAYEND PROC\n//* DO NOT COMMENT THEM OUT OF THIS JOB\n//*\n//SMSBIRP.SYSOUT DD SYSOUT=*\n//SMSBIRP.SYSABOUT DD SYSOUT=*\n//*     TRANSFER FILES FOR PX ADHOCS\n//SMSBIRP.OPXFRIP  DD DUMMY,DCB=BLKSIZE=6230\n//SMSBIRP.BDXFRAR  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFRAR\n//SMSBIRP.HMXFRAR  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRAR\n//SMSBIRP.IPXFROP  DD DISP=SHR,DSN=PDSMS.SMIP.DGA6.IPXFROP\n//SMSBIRP.BDXFROP  DD DISP=SHR,DSN=PDSMS.SMBD.DGA6.BDXFROP\n//SMSBIRP.HMXFROP  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFROP\n//SMSBIRP.HMXFRBD  DD DISP=SHR,DSN=PDSMS.SMHM.DGA6.HMXFRBD\n//*\n//SMSBIRP.PAPRM    DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PRMASTER\n//SMSBIRP.CDMSTFIL DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.CDMASTER\n//SMSBIRP.DOCMSTR  DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.DOCMSTR\n//SMSBIRP.DIAFILE  DD DISP=SHR,DSN=PDSMS.SVPC.SITE.ICDAFILE\n//SMSBIRP.DRGCNTL DD DISP=SHR,DSN=PDSMS.SMHF.SITE.DRGCNTL,DCB=BUFNO=1\n//SMSBIRP.PAAHSCHD DD DISP=SHR,DSN=PDSMS.SMPA.SITE.PAPXSCHD\n//SMSBIRP.PAPARMDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PXPARMDV),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.BMBFILE DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAABENDS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDEFN DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PARMDATA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PASEGDAT),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAPARMDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PAPARMDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDEF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORDEF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORDAT DD DSN=PLSMS.PASSM00L.P0000.SYSIN(ADHCORDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDF DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDF),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PACORXDA DD DSN=PLSMS.PASSM00L.P0000.SYSIN(PACORXDA),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAKPFCTL DD DSN=PLSMS.SMSSM00L.P0000.SYSIN(PA016A6$),\n//  DISP=SHR\n//SMSBIRP.HMFLNMS DD DSN=PLSMS.PASDG&DG.L.P0000.SYSIN(HMDSNMS),\n//  DISP=SHR,\n//  DCB=BUFNO=1\n//SMSBIRP.PAMSTKPF DD DISP=SHR,DSN=PDSMS.SVPA.DGA6.PAMSTKPF\n//*---------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAC": {"ttr": 2309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x010\\x00\\x00\\x00\\x97 \\x8f\\x01\\x004/\\x16B\\x00C\\x00\\x00\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.48", "flags": 0, "createdate": "1997-07-27T00:00:00", "modifydate": "2000-12-07T16:42:00", "lines": 67, "newlines": 0, "modlines": 0, "user": "IANNONE"}, "text": "//SMSAC    PROC\n//*--------------------------------------------------\n//*   THIS PROC IS REFERENCED BY PAP19A6$\n//*--------------------------------------------------\n//*   DELETE PREVIOUS VERSIONS OF PX ADHOC SCHEDULE FILES\n//*--------------------------------------------------\n//S010     EXEC PGM=IDCAMS,REGION=2048K\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//SYSIN    DD  DISP=SHR,DSN=PLSMS.SMSSM00L.H00T0.SYSIN(SMSAC010)\n//*--------------------------------------------------\n//*   READ ADHOC SCHEDULE FILE AND CREATE 6 PX SCHEDULE FILES.\n//*   DETERMINE PLACEMENT OF REPORTS BASED ON PX REPORT COUNT\n//*   PASSED IN PARM.\n//*\n//*   PARM='111222333444555'    111 = DAILY NBR1\n//*                             222 = DAILY NBR2\n//*                             333 = MONTHEND NBR1\n//*                             444 = MONTHEND NBR2\n//*                             555 = PXADHOCZ NBR\n//*\n//*    # REPORTS IN SPLIT1 = NBR1\n//*    # REPORTS IN SPLIT2 = NBR2\n//*    # REPORTS IN SPLIT3 = REMAINDER\n//*    # REPORTS IN SPLIT4 = PXADHOCZ NBR\n//*    # REPORTS IN SPLIT5 = PXADHOCZ NBR * 2\n//*    # REPORTS IN SPLIT6 = PXADHOCZ REMAINDER\n//*--------------------------------------------------\n//S020     EXEC PGM=MIS0515B,\n//             REGION=3072K,\n//             PARM='&PXSPLT/'\n//STEPLIB  DD  DSN=SYS1.COB2LIB,DISP=SHR\n//SYSPRINT DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSOUT   DD  SYSOUT=X\n//INFILE   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE,DISP=SHR\n//OUTFIL1  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT1,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFIL2  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT2,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFIL3  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT3,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFIZ1  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT4,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFIZ2  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT5,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFIZ3  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(200,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSACA": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00Y\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13%\\x00\\xb0\\x00\\xb0\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:25:59", "lines": 176, "newlines": 176, "modlines": 0, "user": "IANNONE"}, "text": "/*PRIORITY     01\n//useridJ JOB (860353,'TEST ADHOCS '),\n//             'TEST ADHOCS ',\n//             CLASS=x,\n//             MSGCLASS=x,\n//*            RESTART=J010.S010,\n//*            TYPRUN=SCAN,\n//             MSGLEVEL=(1,1)\n//*-------------------------------------------------\n//PROCLIB  JCLLIB ORDER=(APSP.PROCLIB,\n//             PLSMS.SMSSM00L.P0000.PROC)\n//JOBLIB   DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.E0000.LOAD\n//         DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.P0000.LOAD\n//         DD  DISP=SHR,DSN=PLSMS.SMBSM00L.E0000.LOAD\n//         DD  DISP=SHR,DSN=PLSMS.SMBSM00L.P0000.LOAD\n//         DD  DISP=SHR,DSN=userid.ISPF.OBJ\n//*-------------------------------------------------\n//*   DELETE PREVIOUS VERSIONS OF PX ADHOC SCHEDULE FILES\n//*-------------------------------------------------\n//S010     EXEC PGM=IDCAMS,REGION=2048K\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//SYSIN    DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAC010)\n//*-------------------------------------------------\n//*   READ ADHOC SCHEDULE FILE AND SPLIT THE ADHOCS BETWEEN\n//*   UP TO FOUR PX 'SPLIT' FILES.\n//*   DETERMINE PLACEMENT OF REPORTS BASED ON THREE CRITERIA:\n//*   -  WAS 'GROUP LONGER RUNNING ADHOCS' LOGIC REQUESTED FOR\n//*      THE FACILITY\n//*   -  DO NOT EXCEED ## ADHOCS PER JOB STEP (CURRENTLY 50)\n//*      SET IN: PLSMS.SMSSM00L.P0000.SYSIN(AHBRAPPL)\n//*   -  IF NUMBER OF LONG-RUNNING ADHOCS < VALUE (CURRENTLY 30),\n//*      RUN THEM IN A SEPARATE STEP\n//*-------------------------------------------------\n//S020     EXEC PGM=MIS0515B,\n//             PARM='5030N          /',\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSOUT   DD  SYSOUT=X\n//INFILE   DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.SMSAC\n//PARM01   DD  DISP=SHR,DSN=PLSMS.SMSSM00L.H00T0.SYSIN(ADHOCS)\n//OUT9A    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9A,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUT9B    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9B,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUT9C    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9C,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUT9D    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9D,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTZA    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZA,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTZB    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZB,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTZC    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZC,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTZD    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZD,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTWA    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTWB    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTWC    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTWD    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTSA    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTSB    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTSC    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTSD    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTFA    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTMA    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTAA    DD  DUMMY,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUTGP    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIGP,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//OUT1P    DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI1P,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(400,10),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//NOTIF01  DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCINOT,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(50,5),RLSE),AVGREC=U,\n//             DCB=(RECFM=FB,DSORG=PS,LRECL=80)\n//*--------------------------------------------------\n//*  UPDATE DATES IN SCHEDULE FILES.  THESE DATES ARE PROBABLY\n//*  NOT USED - THEY ARE UPDATED HERE FOR COHESION WITH OTHER\n//*  DATES IN THE FILES.\n//*--------------------------------------------------\n//S050     EXEC PGM=CHNG0080,\n//             REGION=3072K,\n//             PARM='0080N0000000000N    /'\n//SYSOUT   DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=*\n//CHANGED  DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9A\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9B\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9C\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI9D\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZA\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZB\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZC\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIZD\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCIGP\n//         DD  DISP=SHR,DSN=PDSMS.SMGS.DGA6.SCHEDULE.JCI1P\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAC020)\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSAC010": {"ttr": 2315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11H\\x00\\x08\\x00\\x08\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:48:18", "lines": 8, "newlines": 8, "modlines": 0, "user": "IANNONE"}, "text": "  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT1 NONVSAM\n  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT2 NONVSAM\n  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT3 NONVSAM\n  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT4 NONVSAM\n  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT5 NONVSAM\n  DELETE PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6 NONVSAM\n  IF MAXCC = 8 THEN SET MAXCC = 0\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAJ": {"ttr": 2317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11T\\x00\\x9f\\x00\\x9f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:54:24", "lines": 159, "newlines": 159, "modlines": 0, "user": "IANNONE"}, "text": "//SMSAJ    PROC\n//*--------------------------------------------------\n//*   THIS PROC IS REFERENCED BY PAP19A6$\n//*--------------------------------------------------\n//*--------------------------------------------------\n//*     SET CODE, FROM 50 TO 72, BASED ON MONTH,\n//*     IF IT IS THE 2ND DAY OF THE MONTH\n//*\n//*     PARM:  N/Y  = IGNORE/CONSIDER DATE OFFSET\n//*            CYMD = OVERRIDE CURRENT SYSTEM DATE\n//*--------------------------------------------------\n//S030     EXEC PGM=MIS0685B,\n//*            RESTART=S020,\n//             REGION=3072K,\n//             PARM='Y00000000/'\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAJ030)\n//OUTNOT   DD  DUMMY\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//         IF (S030.RC = 50) THEN\n//S050     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ050),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 52) THEN\n//S052     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ052),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 54) THEN\n//S054     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ054),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 56) THEN\n//S056     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ056),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//*\n//* THE REMAINING SYSIN'S ARE NOT PROVIDED DUE TO THEIR\n//* REPETITIVE NATURE\n//*\n//*--------------------------------------------------\n//         IF (S030.RC = 58) THEN\n//S058     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ058),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 60) THEN\n//S060     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ060),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 62) THEN\n//S062     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ062),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 64) THEN\n//S064     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ064),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 66) THEN\n//S066     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ066),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 68) THEN\n//S068     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ068),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 70) THEN\n//S070     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ070),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S030.RC = 72) THEN\n//S072     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=userid.ISPF.FILE489(SMSAJ072),  *INPUT\n//             DISP=SHR\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSAJ030": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x19\\x07O\\x01\\x19\\x07O\\x11V\\x00D\\x00D\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T11:56:18", "lines": 68, "newlines": 68, "modlines": 0, "user": "IANNONE"}, "text": "*\n* SEND TSO MESSAGES OR SET CONDITION CODES  (mis0685b)\n*\n* ----------------------------------------\n*\n* * = documentation line\n* C = combined scheduling (Siemens weekly/monthly processing)\n*     skip if day before/after the 1st\n* S = skip remaining lines when match occurs\n* T = temporary; commented out once match occurs\n*\n* USERIDs 8 digit, on own line separated by a space (12 max)\n*         messages are generated into the OUTNOT ddname\n*         new userid line replaces previously specified userids\n*\n* YYYY : year or '****' for any year\n*      MM : month or '**' for any month\n*         DD : day or '**' for any day\n*\n* CMFE00 -01 : 'CMF' can be used in place of a hardcoded date to\n*              automatically derive a date.\n*              note: CMFxxx must derive a cymd date.\n*              example:  'CMFE00 -01' = second to last day of current\n*                        month.  see stv0400b for examples.\n* QFF000 +02 : calculate beginning quarter dates\n* QFF000E+00 : calculate ending quarter dates\n*\n*           DURATION\n*           |  '00' = set/send on match-date only\n*           |  '##' = set/send for ## days\n*           |\n*           | ADJUSTMENT\n*           | |  '<##' = adjust match date back ## days\n*           | |  '>##' = adjust match date forward ## days\n*           | |\n*           | |   CYCLE DAYS\n*           | |   |  repeat every ### days  ie: biweekly = 014\n*           | |   |\n*           | |   |   MATCH DAY\n*           | |   |   |  blank = set/send any day\n*           | |   |   |  # = set/send only if day (mon=1..sun=7)\n*           | |   |   |  '3RD 4  ' = 3rd thursday\n*           | |   |   |  'LST 7  ' = last sunday\n*           | |   |   |\n*           | |   |   |       Prefix message with current date (Y or N)\n*           | |   |   |       |\n*           | |   |   |       | CCM #### = set rc when dates match\n*           | |   |   |       | CCN #### = set when dates do not match\n*           | |   |   |       | CTM #### HHMM HHMM (or **MM) = set rc\n*           | |   |   |       |          when within date and time range\n*           | |   |   |       | ABM      = abend when dates match\n*USERIDS... | |   |   |       | ABN      = abend when dates do not match\n*CMF... -## | |   |   |       | MESSAGE (40 bytes max, 30 if prefix=y)\n*YYYY MM DD | |   |   |       |          #+00000#M/D/CY# date in msg\n*---- -- -- ----- --- ------- - ----+----1----+----2----+----3----+----4\n **** 01 02 00 00 000           CCC 0050\n **** 02 02 00 00 000           CCC 0052\n **** 03 02 00 00 000           CCC 0054\n **** 04 02 00 00 000           CCC 0056\n **** 05 02 00 00 000           CCC 0058\n **** 06 02 00 00 000           CCC 0060\n **** 07 02 00 00 000           CCC 0062\n **** 08 02 00 00 000           CCC 0064\n **** 09 02 00 00 000           CCC 0066\n **** 10 02 00 00 000           CCC 0068\n **** 11 02 00 00 000           CCC 0070\n **** 12 02 00 00 000           CCC 0072\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSAJ050": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00\\x06/\\x01\\x00\\x06/\\x10\"\\x000\\x000\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-03-02T00:00:00", "modifydate": "2000-03-02T10:22:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMD01             A6                                           1\n2T0PXEXDY    *$PXMD01             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD1B             A6                                           1\n2T0PXEXDY    *$PXMD1B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD02             A6                                           1\n2T0PXEXDY    *$PXMD02             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD2B             A6                                           1\n2T0PXEXDY    *$PXMD2B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD03             A6                                           1\n2T0PXEXDY    *$PXMD03             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD3B             A6                                           1\n2T0PXEXDY    *$PXMD3B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD04             A6                                           1\n2T0PXEXDY    *$PXMD04             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD4B             A6                                           1\n2T0PXEXDY    *$PXMD4B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD05             A6                                           1\n2T0PXEXDY    *$PXMD05             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD5B             A6                                           1\n2T0PXEXDY    *$PXMD5B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD06             A6                                           1\n2T0PXEXDY    *$PXMD06             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD6B             A6                                           1\n2T0PXEXDY    *$PXMD6B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD07             A6                                           1\n2T0PXEXDY    *$PXMD07             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD7B             A6                                           1\n2T0PXEXDY    *$PXMD7B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD08             A6                                           1\n2T0PXEXDY    *$PXMD08             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD8B             A6                                           1\n2T0PXEXDY    *$PXMD8B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD09             A6                                           1\n2T0PXEXDY    *$PXMD09             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD9B             A6                                           1\n2T0PXEXDY    *$PXMD9B             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD10             A6                                           1\n2T0PXEXDY    *$PXMD10             A6YYYYY                                      2\n2T0PXEXDY    *$PXMDOB             A6                                           1\n2T0PXEXDY    *$PXMDOB             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD11             A6                                           1\n2T0PXEXDY    *$PXMD11             A6YYYYY                                      2\n2T0PXEXDY    *$PXMDNB             A6                                           1\n2T0PXEXDY    *$PXMDNB             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD12             A6                                           1\n2T0PXEXDY    *$PXMD12             A6YYYYY                                      2\n2T0PXEXDY    *$PXMDDB             A6                                           1\n2T0PXEXDY    *$PXMDDB             A6YYYYY                                      2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAJ052": {"ttr": 2565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00\\x06/\\x01\\x00\\x06/\\x10 \\x00\\x04\\x000\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-03-02T00:00:00", "modifydate": "2000-03-02T10:20:00", "lines": 4, "newlines": 48, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMD01             A6                                           1\n2T0PXEXDY    *$PXMD01             A6YYYYY                                      2\n2T0PXEXDY    *$PXMD1B             A6                                           1\n2T0PXEXDY    *$PXMD1B             A6YYYYY                                      2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAJ054": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x00\\x06/\\x01\\x004\\x8f\\x11(\\x00\\x08\\x000\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-03-02T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 8, "newlines": 48, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMD01             A6\n2T0PXEXDY    *$PXMD01             A6YYYYY\n2T0PXEXDY    *$PXMD1B             A6\n2T0PXEXDY    *$PXMD1B             A6YYYYY\n2T0PXEXDY    *$PXMD02             A6\n2T0PXEXDY    *$PXMD02             A6YYYYY\n2T0PXEXDY    *$PXMD2B             A6\n2T0PXEXDY    *$PXMD2B             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAJ056": {"ttr": 2569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x00\\x06/\\x01\\x004\\x8f\\x11(\\x00\\x0c\\x000\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-03-02T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 12, "newlines": 48, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMD01             A6\n2T0PXEXDY    *$PXMD01             A6YYYYY\n2T0PXEXDY    *$PXMD1B             A6\n2T0PXEXDY    *$PXMD1B             A6YYYYY\n2T0PXEXDY    *$PXMD02             A6\n2T0PXEXDY    *$PXMD02             A6YYYYY\n2T0PXEXDY    *$PXMD2B             A6\n2T0PXEXDY    *$PXMD2B             A6YYYYY\n2T0PXEXDY    *$PXMD03             A6\n2T0PXEXDY    *$PXMD03             A6YYYYY\n2T0PXEXDY    *$PXMD3B             A6\n2T0PXEXDY    *$PXMD3B             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAK": {"ttr": 2571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x19\\x00\\x9e\\x00\\x9e\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:19:33", "lines": 158, "newlines": 158, "modlines": 0, "user": "IANNONE"}, "text": "//SMSAK    PROC\n//*--------------------------------------------------\n//*   THIS PROC IS REFERENCED BY PAP19A6$\n//*--------------------------------------------------\n//*--------------------------------------------------\n//*     SET CODE, FROM 50 TO 72, BASED ON MONTH,\n//*     ON THE 1ST AND 24TH OF THE MONTH\n//*     (BASED ON CURRENT DATE, NOT PROCESSING DATE)\n//*\n//*     PARM:  N/Y  = IGNORE/CONSIDER DATE OFFSET\n//*            CYMD = OVERRIDE CURRENT SYSTEM DATE\n//*--------------------------------------------------\n//S020     EXEC PGM=MIS0685B,\n//*            RESTART=S020,\n//             REGION=3072K,\n//             PARM='Y00000000/'\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK020)\n//OUTNOT   DD  DUMMY\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//         IF (S020.RC > 40) THEN\n//S040     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK040)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT5,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 50) THEN\n//S050     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK050)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 52) THEN\n//S052     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK052)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 54) THEN\n//S054     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK054)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 56) THEN\n//S056     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK056)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//*\n//* THE REMAINING SYSIN'S ARE NOT PROVIDED DUE TO THEIR\n//* REPETITIVE NATURE\n//*\n//*--------------------------------------------------\n//         IF (S020.RC = 58) THEN\n//S058     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK058)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 60) THEN\n//S060     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK060)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 62) THEN\n//S062     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK062)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 64) THEN\n//S064     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK064)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 66) THEN\n//S066     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK066)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 68) THEN\n//S068     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK068)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 70) THEN\n//S070     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK070)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n//         IF (S020.RC = 72) THEN\n//S072     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSAK072)\n//SYSUT2   DD  DSN=PDSMS.SMGS.DGA6.SCHEDULE.SPLIT6,\n//             DISP=(MOD,KEEP,KEEP)\n//SYSIN    DD  DUMMY\n//         ENDIF\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSAK020": {"ttr": 2575, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x19\\x07O\\x01\\x19\\x07O\\x12\\t\\x00Q\\x00Q\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:09:06", "lines": 81, "newlines": 81, "modlines": 0, "user": "IANNONE"}, "text": "*\n* SEND TSO MESSAGES OR SET CONDITION CODES  (mis0685b)\n*\n* ----------------------------------------\n*\n* * = documentation line\n* C = combined scheduling (Siemens weekly/monthly processing)\n*     skip if day before/after the 1st\n* S = skip remaining lines when match occurs\n* T = temporary; commented out once match occurs\n*\n* USERIDs 8 digit, on own line separated by a space (12 max)\n*         messages are generated into the OUTNOT ddname\n*         new userid line replaces previously specified userids\n*\n* YYYY : year or '****' for any year\n*      MM : month or '**' for any month\n*         DD : day or '**' for any day\n*\n* CMFE00 -01 : 'CMF' can be used in place of a hardcoded date to\n*              automatically derive a date.\n*              note: CMFxxx must derive a cymd date.\n*              example:  'CMFE00 -01' = second to last day of current\n*                        month.  see stv0400b for examples.\n* QFF000 +02 : calculate beginning quarter dates\n* QFF000E+00 : calculate ending quarter dates\n*\n*           DURATION\n*           |  '00' = set/send on match-date only\n*           |  '##' = set/send for ## days\n*           |\n*           | ADJUSTMENT\n*           | |  '<##' = adjust match date back ## days\n*           | |  '>##' = adjust match date forward ## days\n*           | |\n*           | |   CYCLE DAYS\n*           | |   |  repeat every ### days  ie: biweekly = 014\n*           | |   |\n*           | |   |   MATCH DAY\n*           | |   |   |  blank = set/send any day\n*           | |   |   |  # = set/send only if day (mon=1..sun=7)\n*           | |   |   |  '3RD 4  ' = 3rd thursday\n*           | |   |   |  'LST 7  ' = last sunday\n*           | |   |   |\n*           | |   |   |       Prefix message with current date (Y or N)\n*           | |   |   |       |\n*           | |   |   |       | CCM #### = set rc when dates match\n*           | |   |   |       | CCN #### = set when dates do not match\n*           | |   |   |       | CTM #### HHMM HHMM (or **MM) = set rc\n*           | |   |   |       |          when within date and time range\n*           | |   |   |       | ABM      = abend when dates match\n*USERIDS... | |   |   |       | ABN      = abend when dates do not match\n*CMF... -## | |   |   |       | MESSAGE (40 bytes max, 30 if prefix=y)\n*YYYY MM DD | |   |   |       |          #+00000#M/D/CY# date in msg\n*---- -- -- ----- --- ------- - ----+----1----+----2----+----3----+----4\n **** 01 01 00 00 000           CCC 0050\n **** 02 01 00 00 000           CCC 0052\n **** 03 01 00 00 000           CCC 0054\n **** 04 01 00 00 000           CCC 0056\n **** 05 01 00 00 000           CCC 0058\n **** 06 01 00 00 000           CCC 0060\n **** 07 01 00 00 000           CCC 0062\n **** 08 01 00 00 000           CCC 0064\n **** 09 01 00 00 000           CCC 0066\n **** 10 01 00 00 000           CCC 0068\n **** 11 01 00 00 000           CCC 0070\n **** 12 01 00 00 000           CCC 0072\n*---- -- -- ----- --- ------- - ----+----1----+----2----+----3----+----4\n **** 01 24 00 00 000           CCC 0050\n **** 02 24 00 00 000           CCC 0052\n **** 03 24 00 00 000           CCC 0054\n **** 04 24 00 00 000           CCC 0056\n **** 05 24 00 00 000           CCC 0058\n **** 06 24 00 00 000           CCC 0060\n **** 07 24 00 00 000           CCC 0062\n **** 08 24 00 00 000           CCC 0064\n **** 09 24 00 00 000           CCC 0066\n **** 10 24 00 00 000           CCC 0068\n **** 11 24 00 00 000           CCC 0070\n **** 12 24 00 00 000           CCC 0072\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSAK040": {"ttr": 2578, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00&O\\x01\\x004\\x8f\\x11(\\x00H\\x00H\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-09-20T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 72, "newlines": 72, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMBAC             A6\n2T0PXEXDY    *$PXMBAC             A6YYYYY\n2T0PXEXDY    *$PXMBAD             A6\n2T0PXEXDY    *$PXMBAD             A6YYYYY\n2T0PXEXDY    *$PXMBA9             A6\n2T0PXEXDY    *$PXMBA9             A6YYYYY\n2T0PXEXDY    *$PXMBBC             A6\n2T0PXEXDY    *$PXMBBC             A6YYYYY\n2T0PXEXDY    *$PXMBBD             A6\n2T0PXEXDY    *$PXMBBD             A6YYYYY\n2T0PXEXDY    *$PXMBB9             A6\n2T0PXEXDY    *$PXMBB9             A6YYYYY\n2T0PXEXDY    *$PXMBCC             A6\n2T0PXEXDY    *$PXMBCC             A6YYYYY\n2T0PXEXDY    *$PXMBCD             A6\n2T0PXEXDY    *$PXMBCD             A6YYYYY\n2T0PXEXDY    *$PXMBC9             A6\n2T0PXEXDY    *$PXMBC9             A6YYYYY\n2T0PXEXDY    *$PXMBDC             A6\n2T0PXEXDY    *$PXMBDC             A6YYYYY\n2T0PXEXDY    *$PXMBDD             A6\n2T0PXEXDY    *$PXMBDD             A6YYYYY\n2T0PXEXDY    *$PXMBD9             A6\n2T0PXEXDY    *$PXMBD9             A6YYYYY\n2T0PXEXDY    *$PXMCAC             A6\n2T0PXEXDY    *$PXMCAC             A6YYYYY\n2T0PXEXDY    *$PXMCAD             A6\n2T0PXEXDY    *$PXMCAD             A6YYYYY\n2T0PXEXDY    *$PXMCA9             A6\n2T0PXEXDY    *$PXMCA9             A6YYYYY\n2T0PXEXDY    *$PXMCBC             A6\n2T0PXEXDY    *$PXMCBC             A6YYYYY\n2T0PXEXDY    *$PXMCBD             A6\n2T0PXEXDY    *$PXMCBD             A6YYYYY\n2T0PXEXDY    *$PXMCB9             A6\n2T0PXEXDY    *$PXMCB9             A6YYYYY\n2T0PXEXDY    *$PXMCCC             A6\n2T0PXEXDY    *$PXMCCC             A6YYYYY\n2T0PXEXDY    *$PXMCCD             A6\n2T0PXEXDY    *$PXMCCD             A6YYYYY\n2T0PXEXDY    *$PXMCC9             A6\n2T0PXEXDY    *$PXMCC9             A6YYYYY\n2T0PXEXDY    *$PXMCDC             A6\n2T0PXEXDY    *$PXMCDC             A6YYYYY\n2T0PXEXDY    *$PXMCDD             A6\n2T0PXEXDY    *$PXMCDD             A6YYYYY\n2T0PXEXDY    *$PXMCD9             A6\n2T0PXEXDY    *$PXMCD9             A6YYYYY\n2T0PXEXDY    *$PXMSAC             A6\n2T0PXEXDY    *$PXMSAC             A6YYYYY\n2T0PXEXDY    *$PXMSAD             A6\n2T0PXEXDY    *$PXMSAD             A6YYYYY\n2T0PXEXDY    *$PXMSA9             A6\n2T0PXEXDY    *$PXMSA9             A6YYYYY\n2T0PXEXDY    *$PXMSBC             A6\n2T0PXEXDY    *$PXMSBC             A6YYYYY\n2T0PXEXDY    *$PXMSBD             A6\n2T0PXEXDY    *$PXMSBD             A6YYYYY\n2T0PXEXDY    *$PXMSB9             A6\n2T0PXEXDY    *$PXMSB9             A6YYYYY\n2T0PXEXDY    *$PXMSCC             A6\n2T0PXEXDY    *$PXMSCC             A6YYYYY\n2T0PXEXDY    *$PXMSCD             A6\n2T0PXEXDY    *$PXMSCD             A6YYYYY\n2T0PXEXDY    *$PXMSC9             A6\n2T0PXEXDY    *$PXMSC9             A6YYYYY\n2T0PXEXDY    *$PXMSDC             A6\n2T0PXEXDY    *$PXMSDC             A6YYYYY\n2T0PXEXDY    *$PXMSDD             A6\n2T0PXEXDY    *$PXMSDD             A6YYYYY\n2T0PXEXDY    *$PXMSD9             A6\n2T0PXEXDY    *$PXMSD9             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAK050": {"ttr": 2581, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x00&O\\x01\\x004\\x8f\\x11(\\x00\\x12\\x000\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-09-20T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 18, "newlines": 48, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMBFG             A6\n2T0PXEXDY    *$PXMBFG             A6YYYYY\n2T0PXEXDY    *$PXMBFH             A6\n2T0PXEXDY    *$PXMBFH             A6YYYYY\n2T0PXEXDY    *$PXMBF0             A6\n2T0PXEXDY    *$PXMBF0             A6YYYYY\n2T0PXEXDY    *$PXMCFG             A6\n2T0PXEXDY    *$PXMCFG             A6YYYYY\n2T0PXEXDY    *$PXMCFH             A6\n2T0PXEXDY    *$PXMCFH             A6YYYYY\n2T0PXEXDY    *$PXMCF0             A6\n2T0PXEXDY    *$PXMCF0             A6YYYYY\n2T0PXEXDY    *$PXMSFG             A6\n2T0PXEXDY    *$PXMSFG             A6YYYYY\n2T0PXEXDY    *$PXMSFH             A6\n2T0PXEXDY    *$PXMSFH             A6YYYYY\n2T0PXEXDY    *$PXMSF0             A6\n2T0PXEXDY    *$PXMSF0             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAK052": {"ttr": 2583, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00&O\\x01\\x004\\x8f\\x11(\\x00$\\x00$\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-09-20T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMBEG             A6\n2T0PXEXDY    *$PXMBEG             A6YYYYY\n2T0PXEXDY    *$PXMBEH             A6\n2T0PXEXDY    *$PXMBEH             A6YYYYY\n2T0PXEXDY    *$PXMBE0             A6\n2T0PXEXDY    *$PXMBE0             A6YYYYY\n2T0PXEXDY    *$PXMBFG             A6\n2T0PXEXDY    *$PXMBFG             A6YYYYY\n2T0PXEXDY    *$PXMBFH             A6\n2T0PXEXDY    *$PXMBFH             A6YYYYY\n2T0PXEXDY    *$PXMBF0             A6\n2T0PXEXDY    *$PXMBF0             A6YYYYY\n2T0PXEXDY    *$PXMCEG             A6\n2T0PXEXDY    *$PXMCEG             A6YYYYY\n2T0PXEXDY    *$PXMCEH             A6\n2T0PXEXDY    *$PXMCEH             A6YYYYY\n2T0PXEXDY    *$PXMCE0             A6\n2T0PXEXDY    *$PXMCE0             A6YYYYY\n2T0PXEXDY    *$PXMCFG             A6\n2T0PXEXDY    *$PXMCFG             A6YYYYY\n2T0PXEXDY    *$PXMCFH             A6\n2T0PXEXDY    *$PXMCFH             A6YYYYY\n2T0PXEXDY    *$PXMCF0             A6\n2T0PXEXDY    *$PXMCF0             A6YYYYY\n2T0PXEXDY    *$PXMSEG             A6\n2T0PXEXDY    *$PXMSEG             A6YYYYY\n2T0PXEXDY    *$PXMSEH             A6\n2T0PXEXDY    *$PXMSEH             A6YYYYY\n2T0PXEXDY    *$PXMSE0             A6\n2T0PXEXDY    *$PXMSE0             A6YYYYY\n2T0PXEXDY    *$PXMSFG             A6\n2T0PXEXDY    *$PXMSFG             A6YYYYY\n2T0PXEXDY    *$PXMSFH             A6\n2T0PXEXDY    *$PXMSFH             A6YYYYY\n2T0PXEXDY    *$PXMSF0             A6\n2T0PXEXDY    *$PXMSF0             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAK054": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00&O\\x01\\x004\\x8f\\x11(\\x00\\x12\\x00\\x12\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-09-20T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMBAG             A6\n2T0PXEXDY    *$PXMBAG             A6YYYYY\n2T0PXEXDY    *$PXMBAH             A6\n2T0PXEXDY    *$PXMBAH             A6YYYYY\n2T0PXEXDY    *$PXMBA0             A6\n2T0PXEXDY    *$PXMBA0             A6YYYYY\n2T0PXEXDY    *$PXMCAG             A6\n2T0PXEXDY    *$PXMCAG             A6YYYYY\n2T0PXEXDY    *$PXMCAH             A6\n2T0PXEXDY    *$PXMCAH             A6YYYYY\n2T0PXEXDY    *$PXMCA0             A6\n2T0PXEXDY    *$PXMCA0             A6YYYYY\n2T0PXEXDY    *$PXMSAG             A6\n2T0PXEXDY    *$PXMSAG             A6YYYYY\n2T0PXEXDY    *$PXMSAH             A6\n2T0PXEXDY    *$PXMSAH             A6YYYYY\n2T0PXEXDY    *$PXMSA0             A6\n2T0PXEXDY    *$PXMSA0             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSAK056": {"ttr": 2819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00&O\\x01\\x004\\x8f\\x11(\\x00$\\x00$\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-09-20T00:00:00", "modifydate": "2000-12-13T11:28:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "IANNONE"}, "text": "2T0PXEXDY    *$PXMBAG             A6\n2T0PXEXDY    *$PXMBAG             A6YYYYY\n2T0PXEXDY    *$PXMBAH             A6\n2T0PXEXDY    *$PXMBAH             A6YYYYY\n2T0PXEXDY    *$PXMBA0             A6\n2T0PXEXDY    *$PXMBA0             A6YYYYY\n2T0PXEXDY    *$PXMBFG             A6\n2T0PXEXDY    *$PXMBFG             A6YYYYY\n2T0PXEXDY    *$PXMBFH             A6\n2T0PXEXDY    *$PXMBFH             A6YYYYY\n2T0PXEXDY    *$PXMBF0             A6\n2T0PXEXDY    *$PXMBF0             A6YYYYY\n2T0PXEXDY    *$PXMCAG             A6\n2T0PXEXDY    *$PXMCAG             A6YYYYY\n2T0PXEXDY    *$PXMCAH             A6\n2T0PXEXDY    *$PXMCAH             A6YYYYY\n2T0PXEXDY    *$PXMCA0             A6\n2T0PXEXDY    *$PXMCA0             A6YYYYY\n2T0PXEXDY    *$PXMCFG             A6\n2T0PXEXDY    *$PXMCFG             A6YYYYY\n2T0PXEXDY    *$PXMCFH             A6\n2T0PXEXDY    *$PXMCFH             A6YYYYY\n2T0PXEXDY    *$PXMCF0             A6\n2T0PXEXDY    *$PXMCF0             A6YYYYY\n2T0PXEXDY    *$PXMSAG             A6\n2T0PXEXDY    *$PXMSAG             A6YYYYY\n2T0PXEXDY    *$PXMSAH             A6\n2T0PXEXDY    *$PXMSAH             A6YYYYY\n2T0PXEXDY    *$PXMSA0             A6\n2T0PXEXDY    *$PXMSA0             A6YYYYY\n2T0PXEXDY    *$PXMSFG             A6\n2T0PXEXDY    *$PXMSFG             A6YYYYY\n2T0PXEXDY    *$PXMSFH             A6\n2T0PXEXDY    *$PXMSFH             A6YYYYY\n2T0PXEXDY    *$PXMSF0             A6\n2T0PXEXDY    *$PXMSF0             A6YYYYY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSARDLY": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13H\\x00\\x11\\x00\\x11\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:48:11", "lines": 17, "newlines": 17, "modlines": 0, "user": "IANNONE"}, "text": "*\n*  Find the last qualifier of a filename, search for\n*  its associated space parameter (within 2 lines),\n*  and replace, adjusting surrounding jcl accordingly.\n*\n*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .AROUTDAT\n  02A  00000000  0006  #JCL#SPACE#\n  02A  00000000 20025  SPACE=(TRK,(800,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSARSPL": {"ttr": 2823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x15\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13H\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:48:15", "lines": 27, "newlines": 27, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .BILMODAR\n N02A  00000000  0006  #JCL#SPACE#\n N02A  00000000 20036  SPACE=(TRK,(10000,1000),RLSE,,ROUND)\n F02B L00200000  0008  .ARCONDB\n N02B  00000000  0006  #JCL#SPACE#\n N02B  00000000 20023  SPACE=(TRK,(30,5),RLSE)\n F02C L00200000  0009  .PADLYRPT\n N02C  00000000  0006  #JCL#SPACE#\n N02C  00000000 20025  SPACE=(TRK,(300,15),RLSE)\n F02D L00200000  0009  .ARINQTRN\n N02D  00000000  0006  #JCL#SPACE#\n N02D  00000000 20023  SPACE=(TRK,(50,5),RLSE)\n F02E L00200000  0009  .ARPACOUT\n N02E  00000000  0006  #JCL#SPACE#\n N02E  00000000 20023  SPACE=(TRK,(10,2),RLSE)\n F02F L00200000  0008  .ARXFRHM\n N02F  00000000  0006  #JCL#SPACE#\n N02F  00000000 20027  SPACE=(TRK,(5000,200),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSBDSPL": {"ttr": 2825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13H\\x00\\x15\\x00\\x15\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:48:19", "lines": 21, "newlines": 21, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .PADLYRPT\n N02A  00000000  0006  #JCL#SPACE#\n N02A  00000000 20026  SPACE=(TRK,(3500,60),RLSE)\n F02B L00200000  0009  .BDINQTRN\n N02B  00000000  0006  #JCL#SPACE#\n N02B  00000000 20025  SPACE=(TRK,(400,50),RLSE)\n F02C L00200000  0009  .BDPACOUT\n N02C  00000000  0006  #JCL#SPACE#\n N02C  00000000 20023  SPACE=(TRK,(10,2),RLSE)\n F02D L00200000  0008  .BDXFRAR\n N02D  00000000  0006  #JCL#SPACE#\n N02D  00000000 20023  SPACE=(TRK,(10,2),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSBFIL": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00A\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13H\\x00\\xff\\x00\\xff\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:48:41", "lines": 255, "newlines": 255, "modlines": 0, "user": "IANNONE"}, "text": "//useridS JOB (8231,'GENERATE LIST OF BACKUP FILES'),\n//             '###### SMSBFIL',\n//             CLASS=x,\n//             MSGCLASS=x,\n//*            RESTART=J010.S010,\n//             MSGLEVEL=(1,1)\n//*--------------------------------------------------\n//*   PULL DATASET NAMES FROM SMS DELIVERY LIST\n//*--------------------------------------------------\n//S010     EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(DBHLPROD)\n//         DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(CPY2PROD)\n//         DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(DBHLTEST)\n//         DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(CPY2TEST)\n//OUTFILE  DD  DSN=&&TEMP01,\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(800,20),RLSE),AVGREC=U,\n//             RECFM=FB,LRECL=80,DCB=(DSORG=PS)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  *,DLM=ZZ\n**  --------------------------------------------------------------\n**\n**  '**  '  =  DOCUMENTATION LINE           input to PULLFILE\n**\n**  Loop through an input file and search for a specified string\n**  in a specified position, or anywhere in the file.\n**  When found, write that (full or partial) record, or a group of\n**  records (including or not including the original search record)\n**  to an output file.  Enter up to 100 strings.\n**\n**           a           bb cccc ddeee f.ggggg# h.iiiii#       j\n**                       -- ---- ----- -------- -------- ---------------\n**\n**  a      enter a search string in position 1, length 24\n**  bb     length of string\n**  cccc   position of string.  0000=search for string in record\n**  dd     record to pull when string found. 00=same, 01=next, etc\n**  eee    number of records to pull after string found\n**         '999' = pull all records after string found\n**\n**  f      'P'=positional: (g) is a position to begin pulling output\n**         '+'=relative: begin pulling output (g) bytes after string\n**         '-'=relative: begin pulling output (g) bytes before string\n**         ' '=start pulling from beginning of record\n**         '#'=length of delimiter in (g) to find (1/2/3/4/5)\n**\n**  .      'E' = exclude the delimiter from output if (f) is 1-5\n**         'H' = if (h) is '+' or '-': relative to (h) delimiter\n**         ' ' = default of include\n**\n**  ggggg  if (f) is 'P': a position to begin pulling\n**         if (f) is '+': a relative position (g) bytes after string\n**         if (f) is '-': a relative position (g) bytes before string\n**         if (f) is ' ': (g) is ignored\n**         if (f) is '#': a physicial delimiter to begin pull\n**\n**  #      if (f) is a delimiter search: a '3' would mean select the\n**            third occurrence of the delimiter for the beginning\n**            pull position.\n**\n**  h      'P'=positional: (i) is a position to end pulling output\n**         '+'=relative: end pulling output (i) bytes after string\n**         '-'=relative: end pulling output (i) bytes before string\n**         ' '=end pulling at end of record\n**         '#'=length of delimiter in (i) to find (1/2/3/4/5)\n**\n**  .      'E' = exclude the delimiter from output if (h) is 1-5\n**         'F' = if (f) is '+' or '-': relative to (f) delimiter\n**         ' ' = default of include\n**\n**  iiiii  if (h) is 'P': a position to end pulling\n**         if (h) is '+': a relative position (i) bytes after string\n**         if (h) is '-': a relative position (i) bytes before string\n**         if (h) is ' ': (i) is ignored\n**         if (h) is '#': a physicial delimiter to end pull\n**\n**  #      if (h) is a delimiter search: a '3' would mean select the\n**            third occurrence of the delimiter for the ending\n**            pull position.\n**\n**  j      title to place in front of output record.\n**         format as 'I##            ' to insert a specific number\n**         of spaces in front of the output data.\n**\n**  <------------------- -- ---- ----- -------- -------- ---------------\n**           a           bb cccc ddeee f.ggggg# h.iiiii#       j\n**  <------------------- -- ---- ----- -------- -------- ---------------\nLISTC ENT(               10 0000 00000 + 00011  1E'    2 I23\nSYSUT2                   06 0003 00000 4EDSN=            I23\nOUTFILE                  07 0003 00000 4EDSN=   1E,      I23\nM4LIB                    05 0003 00000 4EDSN=   1E,      I23\nZZ\n//*--------------------------------------------------\n//S020     EXEC PGM=CHNG0080,\n//             REGION=3072K,\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//CHANGED  DD  DSN=&&TEMP01,\n//             DISP=(OLD,PASS,DELETE)\n//PARM01   DD  *,DLM=ZZ\n*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n N00   00000000  0001  ,\n N00   00000000  0001\n N00   00000000  0008  DISP=OLD\n N00   00000000  0008\n N00   00000000  0008  DISP=SHR\n N00   00000000  0008\n  00  L00230000  0002\n  00   00000000  0002   -\nZZ\n//*--------------------------------------------------\n//S030     EXEC PGM=SORT,\n//             REGION=2048K,\n//*            RESTART=S010,\n//             COND=(0,NE)\n//SORTMSG  DD  SYSOUT=X\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SORTIN   DD  DSN=&&TEMP01,                           *INPUT\n//             DISP=(OLD,DELETE,DELETE)\n//SORTOUT  DD  DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(SMSBFILO),\n//             DISP=SHR\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(TRK,(80))\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(TRK,(80))\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(TRK,(80))\n//SYSIN    DD  *\n  SORT FIELDS=(24,44,A),FORMAT=CH\n  SUM FIELDS=NONE\n  END\n/*\n//*--------------------------------------------------\n//*   CREATE INPUT TO DFDSS FOR COPYING MAJOR SUT FILES\n//*--------------------------------------------------\n//S040     EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(SMSBFILO)\n//OUTFILE  DD  DSN=&&TEMP02,\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(800,20),RLSE),AVGREC=U,\n//             RECFM=FB,LRECL=80,DCB=(DSORG=PS)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  *,DLM=ZZ\n**  --------------------------------------------------------------\n**\n**  '**  '  =  DOCUMENTATION LINE           input to PULLFILE\n**\n**\n**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <----+----+----+----i-- ---- ----- -------- -------- ---------------\n.PA                      03 0029 00000\n.SM                      03 0029 00000\n.TP                      03 0029 00000\nZZ\n//*--------------------------------------------------\n//S050     EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DSN=&&TEMP02,\n//             DISP=(OLD,DELETE,DELETE)\n//OUTFILE  DD  DSN=&&TEMP03,\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,\n//             SPACE=(80,(800,20),RLSE),AVGREC=U,\n//             RECFM=FB,LRECL=80,DCB=(DSORG=PS)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  *,DLM=ZZ\n**  --------------------------------------------------------------\n**\n**  '**  '  =  DOCUMENTATION LINE           input to PULLFILE\n**\n**\n**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <----+----+----+----i-- ---- ----- -------- -------- ---------------\n PL                      03 0000 00000\nZZ\n//*--------------------------------------------------\n//S060     EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DSN=&&TEMP03,\n//             DISP=(OLD,DELETE,DELETE)\n//OUTFILE  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(SMSBFILC)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPUL05)\n//*--------------------------------------------------\n//S070     EXEC PGM=CHNG0080,\n//             REGION=3072K,\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(SMSBFILC)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//PARM01   DD  *,DLM=ZQ\n*\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n N00   00240000  0001  P\n N00   00230000  0002  (P\n N00  L00260000  0003\n N00   00000000  0003  ) -\n N00   00000000  0004  -) -\n N00   00000000  0004  -\n  00   00310000  0001  .\n  00   00000000 10008  .######.\nZQ\n//*--------------------------------------------------\n//*  RESULTING OUTPUT EXAMPLE:\n//*\n//*                    PDSMS.PDSMS.SMOA.CC01.DDDFILE -\n//*                    PDSMS.PDSMS.SMOA.CC01.DOCDEF -\n//*                    PDSMS.PDSMS.SMOA.CC01.ERRFILE -\n//*                    PDSMS.PDSMS.SMOA.CC01.LSTTFILE -\n//*                    PDSMS.PDSMS.SMOA.CC01.PROFILE -\n//*                    PDSMS.PDSMS.SMOA.CC01.PROFILE.DEL -\n//*                    PDSMS.PDSMS.SMOA.CC01.SDFILE -\n//*                    PDSMS.PDSMS.SMOA.CC01.TCLFILE -\n//*                    PDSMS.SMOA.CC01.DDDFILE -\n//*\n//*--------------------------------------------------\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSBKUP": {"ttr": 2832, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x19\\x07O\\x01\\x19\\x07O\\x122\\x00#\\x00#\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:32:37", "lines": 35, "newlines": 35, "modlines": 0, "user": "IANNONE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SMSCCCL": {"ttr": 2834, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13H\\x00\\x11\\x00\\x11\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:48:48", "lines": 17, "newlines": 17, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F01A  00280000  0012  DG??.ONLSCHD\n N01A  00620000  0019  ADD,UPDATE,READ,BRO\n N01A  00620000  0019  READ,BROWSE\n  01A  00010000  0010  WSE,DELETE\n  01A  00010000  0010\n F01B  00280000  0013  DG??.ONLCHECK\n N01B  00620000  0019  ADD,UPDATE,READ,BRO\n N01B  00620000  0019  READ,BROWSE\n  01B  00010000  0010  WSE,DELETE\n  01B  00010000  0010\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCHNG": {"ttr": 2836, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x19\\x07O\\x01\\x19\\x07O\\x12C\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:43:35", "lines": 14, "newlines": 14, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'CHANGE SUT INSTALL JOBS'),\n//             'SMS SUT CHANGES',\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1,\n//             NOTIFY=userid\n//PROC     JCLLIB ORDER=PLSMS.SMSSM00L.H00T0.PROC\n//*--------------------------------------------------\n//*   THIS JOB MAKES CHANGES IN SMS JCL BEFORE SUT PROCESSING.\n//*--------------------------------------------------\n//*   1. PLACE SMSDOC ABOVE MEMBERS USED FOR SUT PROCESSING\n//*   2. CHANGE TAPE1 (BELOW) TO TAPE NUMBER\n//*--------------------------------------------------\n//SMSCHNG  EXEC SMSCHN1,\n//             TAPE1=######\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCHN1": {"ttr": 2838, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13!\\x01_\\x01_\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:21:11", "lines": 351, "newlines": 351, "modlines": 0, "user": "IANNONE"}, "text": "//SMSCHN1  PROC PARMFX1='XXX0624008N',\n//             TAPE1=######\n//**-------------------------------------------------\n//**  UPDATE THE SORT PARM WITH A PREVIOUS DATE\n//**  ( CCYY/MM/DD FORMAT IN POSITION 32 OF RECORD 5)\n//**-------------------------------------------------\n//S005     EXEC PGM=MIS0425B,\n//             REGION=2048K,\n//             COND=(0,NE),\n//             PARM='&PARMFX1&TAPE1/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//PARMFX   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//*--------------------------------------------------\n//*   THIS PROC MAKES CHANGES IN SMS JCL BEFORE SUT PROCESSING.\n//*--------------------------------------------------\n//S010     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(0,NE),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(VSILTEST)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG01)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S020     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(VSILPROD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG02)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S030     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(DBHLTEST)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG03)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S040     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(DBHLPROD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG04)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S050     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(CPY2TEST)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG05)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S060     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(CPY2PROD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG06)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S070     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSBFIL)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S080     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSBKUP)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S090     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSDOC)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S100     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SIXSC$$$)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG07)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S110     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SIYSC$$$)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//         DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCNG08)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S120     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSCOMP)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S130     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSNOTE)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S140     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSCOPY)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S150     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSPRNT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S160     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSMAIL)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S170     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSREQ)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S180     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSJOBS)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S190     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSJES1)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S200     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSJES2)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S210     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSLOAD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S220     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSU418)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//S230     EXEC PGM=CHNG0080,\n//             REGION=2048K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSXROX)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCHN2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCHN2": {"ttr": 3079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x08\\x00\\x08\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:41", "lines": 8, "newlines": 8, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes (80 lines) may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n N00   00000000  0005  #####\n N00   00000000  0006  X01829\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCICS": {"ttr": 3081, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x19\\x07O\\x01\\x19\\x07O\\x12F\\x00E\\x00E\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:46:28", "lines": 69, "newlines": 69, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'CLEAR SMS CICS LIBRARIES'),\n//             '###### CLEAR CICS',\n//*            RESTART=J010.S040,\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1\n//*--------------------------------------------------\n//*    EDIT TO ONLY INCLUDE LIBRARIES MENTIONED IN SUT APPLY\n//*--------------------------------------------------\n//S010     EXEC PGM=IEBCOPY,REGION=4096K\n//SYSPRINT DD SYSOUT=X\n//OUT1     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.COBLIB\n//OUT2     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.MACLIB\n//OUT3     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.PL1LIB\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  EMPTYO   OUTDD=OUT1\n  EMPTYO   OUTDD=OUT2\n  EMPTYO   OUTDD=OUT3\n/*\n//*--------------------------------------------------\n//S020     EXEC PGM=IEBCOPY,REGION=4096K,\n//             COND=(0,NE)\n//SYSPRINT DD SYSOUT=X\n//OUT1     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.LOADLIB\n//OUT2     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.LOADLIB1\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  EDITDIR   OUTDD=OUT1\n    DELETE    MEMBER=DFH*\n  EDITDIR   OUTDD=OUT2\n    DELETE    MEMBER=DFH*\n/*\n//*--------------------------------------------------\n//S030     EXEC PGM=IEBCOPY,REGION=4096K,\n//             COND=(0,NE)\n//SYSPRINT DD SYSOUT=X\n//OUT1     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.LOADLIB\n//OUT2     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.LOADLIB1\n//OUT3     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.COBLIB\n//OUT4     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.MACLIB\n//OUT5     DD  DISP=SHR,DSN=PLSMS.CICVNDRL.P0410.PL1LIB\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  COMPRESS  OUTDD=OUT1\n  COMPRESS  OUTDD=OUT2\n  COMPRESS  OUTDD=OUT3\n  COMPRESS  OUTDD=OUT4\n  COMPRESS  OUTDD=OUT5\n/*\n//*--------------------------------------------------\n//S040     EXEC PGM=IEBCOPY,REGION=4096K,\n//             COND=(0,NE)\n//SYSPRINT DD SYSOUT=X\n//IN1      DD  DISP=SHR,DSN=PLSMS.PLSMS.CICVNDRL.P0410.LOADLIB\n//OUT2     DD  DISP=SHR,DSN=PLSYS.SMLSM00L.E0000.LOAD\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  COPYMOD  INDD=((IN1,R)),OUTDD=OUT1,COPYALIAS\n    SELECT MEMBER=DFHDU410\n    SELECT MEMBER=DFHTU410\n    SELECT MEMBER=DFHTR410\n    SELECT MEMBER=DFHPD410\n    SELECT MEMBER=DFHSTUP\n    SELECT MEMBER=DFHTG410\n/*\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCMP01": {"ttr": 3083, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x19\\x07O\\x01\\x19\\x07O\\x12G\\x00\\x03\\x00\\x03\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:47:02", "lines": 3, "newlines": 3, "modlines": 0, "user": "IANNONE"}, "text": " SORT FIELDS=(23,8,A,34,8,A),FORMAT=CH,EQUALS\n END\n*  sort list of software delivery elements by type and element name\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCMP02": {"ttr": 3085, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x19\\x07O\\x01\\x19\\x07O\\x12H\\x00\\x06\\x00\\x06\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T12:48:03", "lines": 6, "newlines": 6, "modlines": 0, "user": "IANNONE"}, "text": " SORT FIELDS=(14,8,A,23,8,A),FORMAT=CH,EQUALS\n OMIT COND=(1,1,CH,EQ,C'*')\n END\n*\n*  sort list of elements for which applications would like\n*  change notification.  skip comments in pos 1.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG01": {"ttr": 3087, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x10\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:10", "lines": 11, "newlines": 11, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //VSILTEST\n  00   00000000  0027  //SYSPRINT DD  SYSOUT=A\n  00   00000000  0027  //SYSPRINT DD  SYSOUT=0\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG02": {"ttr": 3089, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:13", "lines": 11, "newlines": 11, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //VSILPROD\n  00   00000000  0027  //SYSPRINT DD  SYSOUT=A\n  00   00000000  0027  //SYSPRINT DD  SYSOUT=0\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG03": {"ttr": 3091, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:16", "lines": 29, "newlines": 29, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0020  //   VOL=REF=TDSMS.S\n  00   00000000  0020  //*  VOL=REF=TDSMS.S\n  00   00000000  0019  //   VOL=SER=XXXXXX\n  00   00000000  0019  //*  VOL=SER=XXXXXX\n  00   00000000  0019  //   VOL=SER=YYYYYY\n  00   00000000  0019  //*  VOL=SER=YYYYYY\n  00   00000000  0019  //   VOL=SER=ZZZZZZ\n  00   00000000  0019  //*  VOL=SER=ZZZZZZ\n  00   00000000  0009  ,(00001,0\n  00   00000000  0009  ,(00002,0\n  00   00000000  0015  ,00001))\n  00   00000000  0015  ,00002))\n  00   00000000  0006  ,00001\n  00   00000000  0006  ,00002\n  00   00000000  0015  ,011))\n  00   00000000  0015  ,018))\n  00   00000000  0015  ,007))\n  00   00000000  0015  ,012))\n  00   00000000  0015  ,006))\n  00   00000000  0015  ,010))\n  00   00000000  0015  ,005))\n  00   00000000  0015  ,009))\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG04": {"ttr": 3093, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00 \\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:20", "lines": 31, "newlines": 31, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //DBHLPROD\n  00   00000000  0020  //   VOL=REF=PDSMS.S\n  00   00000000  0020  //*  VOL=REF=PDSMS.S\n  00   00000000  0019  //   VOL=SER=XXXXXX\n  00   00000000  0019  //*  VOL=SER=XXXXXX\n  00   00000000  0019  //   VOL=SER=YYYYYY\n  00   00000000  0019  //*  VOL=SER=YYYYYY\n  00   00000000  0019  //   VOL=SER=ZZZZZZ\n  00   00000000  0019  //*  VOL=SER=ZZZZZZ\n  00   00000000  0009  ,(00001,0\n  00   00000000  0009  ,(00002,0\n  00   00000000  0015  ,00001))\n  00   00000000  0015  ,00002))\n  00   00000000  0006  ,00001\n  00   00000000  0006  ,00002\n  00   00000000  0015  ,011))\n  00   00000000  0015  ,018))\n  00   00000000  0015  ,007))\n  00   00000000  0015  ,012))\n  00   00000000  0015  ,006))\n  00   00000000  0015  ,010))\n  00   00000000  0015  ,005))\n  00   00000000  0015  ,009))\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG05": {"ttr": 3095, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00#\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:23", "lines": 31, "newlines": 31, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //CPY2TEST\n  00   00000000  0020  //   VOL=REF=TDSMS.S\n  00   00000000  0020  //*  VOL=REF=TDSMS.S\n  00   00000000  0009  ,(00002,0\n  00   00000000  0009  ,(00003,0\n  00   00000000  0009  ,(00001,0\n  00   00000000  0009  ,(00002,0\n  00   00000000  0015  ,00001))\n  00   00000000  0015  ,00002))\n  00   00000000  0006  ,00001\n  00   00000000  0006  ,00002\n F07A  00000000  0005  .LOAD\n  02A  00000000  0006   COPY\n  02A +00050000 10003  MOD\n  02A  00010000  0004  /*\n  02A  00000000  0025    EXCLUDE MEMBER=$$$SPACE\n  02A  00010000  0004  //*\n  02A  00000000  0004  /*\n F02 B 00000000  0006   COPY\n  02 B 00010000  0004  /*\n  02 B 00000000  0025    EXCLUDE MEMBER=$$$SPACE\n  02 B 00010000  0004  //*\n  02 B 00000000  0004  /*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG06": {"ttr": 3329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:25", "lines": 31, "newlines": 31, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //CPY2PROD\n  00   00000000  0020  //   VOL=REF=PDSMS.S\n  00   00000000  0020  //*  VOL=REF=PDSMS.S\n  00   00000000  0009  ,(00002,0\n  00   00000000  0009  ,(00003,0\n  00   00000000  0009  ,(00001,0\n  00   00000000  0009  ,(00002,0\n  00   00000000  0015  ,00001))\n  00   00000000  0015  ,00002))\n  00   00000000  0006  ,00001\n  00   00000000  0006  ,00002\n F07A  00000000  0005  .LOAD\n  02A  00000000  0006   COPY\n  02A +00050000 10003  MOD\n  02A  00010000  0004  /*\n  02A  00000000  0025    EXCLUDE MEMBER=$$$SPACE\n  02A  00010000  0004  //*\n  02A  00000000  0004  /*\n F02 B 00000000  0006   COPY\n  02 B 00010000  0004  /*\n  02 B 00000000  0025    EXCLUDE MEMBER=$$$SPACE\n  02 B 00010000  0004  //*\n  02 B 00000000  0004  /*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG07": {"ttr": 3331, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00(\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\r\\x00\\r\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:28", "lines": 13, "newlines": 13, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //useridX\n  00   00000000  0021  SYSOUT=A,DCB=*.SYSUT1\n  00   00000000  0021  SYSOUT=W,DCB=*.SYSUT1\n  00   00000000  0021  SYSPRINT DD  SYSOUT=A\n  00   00000000  0021  SYSPRINT DD  SYSOUT=W\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCNG08": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x001\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13I\\x00\\r\\x00\\r\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:49:31", "lines": 13, "newlines": 13, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00000000  0011  //DBHLTEST\n  00   00000000  0011  //useridY\n  00   00000000  0021  SYSOUT=A,DCB=*.SYSUT1\n  00   00000000  0021  SYSOUT=W,DCB=*.SYSUT1\n  00   00000000  0021  SYSPRINT DD  SYSOUT=A\n  00   00000000  0021  SYSPRINT DD  SYSOUT=W\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCOMP": {"ttr": 3335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00W\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13!\\x00\\x89\\x00\\x89\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:21:57", "lines": 137, "newlines": 137, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'LIST DELIVERED SUT ELEMENTS'),\n//             '###### COMPARE',\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1,\n//             NOTIFY=userid\n//*--------------------------------------------------\n//SMSCOMP  PROC MEMBR=D##T0A6,     OR     D##HHRR\n//             TAPE1=######\n//*--------------------------------------------------\n//*   !! CHANGE MEMBR (ABOVE) TO MEMBER NAME IN\n//*      PLSMS.TMSI.SITE.TAPEDOC.VS######\n//*--------------------------------------------------\n//*   LOOP THROUGH SUT DELIVERY DOCUMENTATION AND COMPARE WITH\n//*   LIST OF CHANGES BY APPLICATIONS - NOTIFY OF MATCHES\n//*--------------------------------------------------\n//S010     EXEC PGM=IEFBR14,REGION=2048K,\n//             COND=(0,NE)\n//DASD1    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//DASD2    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//DASD3    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//*--------------------------------------------------\n//S020     EXEC PGM=IEFBR14,REGION=2048K,\n//             COND=(0,NE)\n//SUTO01   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//SUTO02   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//SUTO03   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//*--------------------------------------------------\n//S030     EXEC PGM=MIS0480B,REGION=2048K,\n//             COND=(0,NE)\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//SUTIN    DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.TAPEDOC.VS&TAPE1(&MEMBR)\n//SUTO01   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST(ELEMENT),\n//             DISP=SHR\n//SUTO02   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT(COMMENT),\n//             DISP=SHR\n//SUTO03   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC(PROBLEM),\n//             DISP=SHR\n//SMSNAME  DD  DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(CPY2PROD),\n//             DISP=SHR\n//*--------------------------------------------------\n//S040     EXEC PGM=SORT,REGION=4096K,\n//             COND=(0,NE)\n//SORTMSG  DD  SYSOUT=X\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SORTIN   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST(ELEMENT),\n//             DISP=SHR\n//SORTOUT  DD  DSN=&&DELIVER,                          *OUTPUT\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,SPACE=(CYL,(10,1),RLSE),\n//             DCB=(RECFM=FB,LRECL=132,DSORG=PS)\n//SYSIN    DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCMP01)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//*--------------------------------------------------\n//S050     EXEC PGM=SORT,REGION=4096K,\n//             COND=(0,NE)\n//SORTMSG  DD  SYSOUT=X\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SORTIN   DD  DSN=ADMP.DOCUMENT.LIBRARY(SMSSUT),\n//             DISP=SHR\n//SORTOUT  DD  DSN=&&SMSSUT,                           *OUTPUT\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,SPACE=(CYL,(10,1),RLSE),\n//             DCB=(RECFM=FB,LRECL=80,DSORG=PS)\n//SYSIN    DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCMP02)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//*--------------------------------------------------\n//S060     EXEC PGM=SORT,REGION=4096K,\n//             COND=(0,NE)\n//SORTMSG  DD  SYSOUT=X\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SORTIN   DD  DSN=ADMP.DOCUMENT.LIBRARY(SMSSUT),\n//             DISP=SHR\n//SORTOUT  DD  DSN=&&SMSSUT2,                          *OUTPUT\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=SYSDA,SPACE=(CYL,(10,1),RLSE),\n//             DCB=(RECFM=FB,LRECL=80,DSORG=PS)\n//SYSIN    DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCMP02)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(30,2))\n//*--------------------------------------------------\n//S070     EXEC PGM=MIS0485B,\n//             REGION=2048K,\n//             COND=(0,NE)\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//DELIVER  DD  DSN=&&DELIVER,DISP=(OLD,DELETE)\n//SMSSUT   DD  DSN=&&SMSSUT,DISP=(OLD,DELETE)\n//SMSSUT2  DD  DSN=&&SMSSUT2,DISP=(OLD,DELETE)\n//PRINTER  DD  SYSOUT=(Y,MIS0485B,8X11),\n//             FCB=X116,DCB=RECFM=FM\n//*--------------------------------------------------\n//S080     EXEC PGM=PULL0132,\n//             REGION=2048K,\n//             COND=(0,NE),\n//             PARM='0132NN44  /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC(PROBLEM),\n//             DISP=SHR\n//OUTFILE  DD  DUMMY\n//OUTPRNT  DD  SYSOUT=(Y,SISTDAP2,STD),\n//             FCB=STD,DEST=LOCAL\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPUL99)\n//*--------------------------------------------------\n//         PEND\n//J010     EXEC SMSCOMP\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSCOPY": {"ttr": 3338, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x02\\x00\\x16\\x00\\x16\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:02:13", "lines": 22, "newlines": 22, "modlines": 0, "user": "IANNONE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SMSC4MXU": {"ttr": 3340, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13P\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:50:07", "lines": 15, "newlines": 15, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F01A  00000000  0009  //SORTLIB\n  01A  00000000  0009  //SORTLIB\n  01A  00000000  0009  //*ORTLIB\n* include any 'disp=shr' continuation\n  01A  00000000  0003  //\n  01A  00000000  0003  //*\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSDOC": {"ttr": 3342, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x02\\x00\\n\\x00\\n\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:02:54", "lines": 10, "newlines": 10, "modlines": 0, "user": "IANNONE"}, "text": "/*PRIORITY     07\n//DBHLTEST JOB (8231,'INSTALL SUT ###### .............'),\n//             '###### .............',\n//             CLASS=x,\n//*            RESTART=TEST0066,\n//             MSGCLASS=x,MSGLEVEL=1,\n//             NOTIFY=userid\n//*--------------------------------------------------\n//*   JOB RUN? N  2000MMDD\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSHMDLY": {"ttr": 3344, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13P\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:50:16", "lines": 12, "newlines": 12, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F03A L00200000  0009  .HMOUTDAT\n N03A  00000000  0006  #JCL#SPACE#\n N03A  00000000 20027  SPACE=(TRK,(5000,500),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSHMSPL": {"ttr": 3346, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\"\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13P\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:50:22", "lines": 12, "newlines": 12, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .HMDLYRPT\n N02A  00000000  0006  #JCL#SPACE#\n N02A  00000000 20027  SPACE=(TRK,(2500,300),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSIPFSP": {"ttr": 3348, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13P\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:50:25", "lines": 15, "newlines": 15, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .ERRORIPS\n  02A  00000000  0006  #JCL#SPACE#\n  02A  00000000 20023  SPACE=(TRK,(30,5),RLSE)\n F02B L00200000  0009  .IPPACOUT\n  02B  00000000  0006  #JCL#SPACE#\n  02B  00000000 20025  SPACE=(TRK,(230,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSJES1": {"ttr": 3350, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x08\\x00,\\x00,\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:08:01", "lines": 44, "newlines": 44, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'SEND JES REPORTS TO RMS'),\n//             '###### SEND TO RMS',\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1\n//*--------------------------------------------------\n//*  THIS JOB PURGES SMS SUT REPORTS AND JCL, OR SENDS THEM TO\n//*    RMS FOR DISTRIBUTION BY THE SMSDIST JOB\n//*\n//*  !! BE CAREFUL WHEN EDITING THE INPUT PARM.\n//*--------------------------------------------------\n//S020     EXEC PGM=MIS0525B,\n//             COND=(0,NE),REGION=2048K,\n//             PARM='010 005/'\n//STEPLIB  DD  DSN=SYS1.COB2LIB,DISP=SHR\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INTRDR   DD  SYSOUT=(A,INTRDR)\n//PARM01   DD  *\n*----------------------------------------------------\n*\n*   JOB NAME/STARTED TASK NAME/TSO USER NAME\n*   MAY INCLUDE GENERICS: *=ALL CHARACTERS, ?=SPECIFIC LOCATIONS\n*   |\n*   |      PURGE: ENTER A CLASS HERE TO PURGE, FROM EITHER THE HELD\n*   |      OR OUTPUT QUEUE, ANYTHING IN THAT CLASS\n*   |      (OTHER PARAMETERS ARE IGNORED WHEN PURGE SPECIFIED)\n*   |      |\n*   |      |  DAYS TO SKIP: 01=SKIP YESTERDAY, 00=ALL\n*   |      |  |   HOURS TO SKIP, 00=ALL (IGNORED IF DAYS SPECIFIED)\n*   |      |  |   |   O=LOOK IN OUTPUT QUEUE ONLY\n*   |      |  |   |   H=LOOK IN HELD QUEUE ONLY\n*   |      |  |   |   |\n*   |      |  |   |   |  O=SEND TO OUTPUT QUEUE\n*   |      |  |   |   |  H=SEND TO HELD QUEUE\n*   |      |  |   |   |  |  NEW CLASS\n*   |      |  |   |   |  |  |  NEW FCB         NEW WRITER NAME\n*   |      |  |   |   |  |  |  |     NEW FORM  |         NEW DEST\n*   |      |  |   |   |  |  |  |     |         |         |\n*--------  -  --  --  -  -  -  ----  --------  --------  --------\n SISTDAPL     00  00  O     R\n useridS      00  00  O     R\n VSILPROD     00  00  O     R\n VSILTEST     00  00  O     R\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSJES2": {"ttr": 3352, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13\\x11\\x00<\\x00<\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:11:40", "lines": 60, "newlines": 60, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'SEND JES REPORTS TO RMS'),\n//             '###### SEND TO RMS',\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1\n//*--------------------------------------------------\n//*  THIS JOB PURGES SMS SUT REPORTS AND JCL, OR SENDS THEM TO\n//*    RMS FOR DISTRIBUTION BY THE SMSDIST JOB\n//*\n//*  !! BE CAREFUL WHEN EDITING THE INPUT PARM.\n//*--------------------------------------------------\n//S020     EXEC PGM=MIS0525B,\n//             COND=(0,NE),REGION=2048K,\n//             PARM='010 005/'\n//STEPLIB  DD  DSN=SYS1.COB2LIB,DISP=SHR\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INTRDR   DD  SYSOUT=(A,INTRDR)\n//PARM01   DD  *\n*----------------------------------------------------\n*\n*   JOB NAME/STARTED TASK NAME/TSO USER NAME\n*   MAY INCLUDE GENERICS: *=ALL CHARACTERS, ?=SPECIFIC LOCATIONS\n*   |\n*   |      PURGE: ENTER A CLASS HERE TO PURGE, FROM EITHER THE HELD\n*   |      OR OUTPUT QUEUE, ANYTHING IN THAT CLASS\n*   |      (OTHER PARAMETERS ARE IGNORED WHEN PURGE SPECIFIED)\n*   |      |\n*   |      |  DAYS TO SKIP: 01=SKIP YESTERDAY, 00=ALL\n*   |      |  |   HOURS TO SKIP, 00=ALL (IGNORED IF DAYS SPECIFIED)\n*   |      |  |   |   O=LOOK IN OUTPUT QUEUE ONLY\n*   |      |  |   |   H=LOOK IN HELD QUEUE ONLY\n*   |      |  |   |   |\n*   |      |  |   |   |  O=SEND TO OUTPUT QUEUE\n*   |      |  |   |   |  H=SEND TO HELD QUEUE\n*   |      |  |   |   |  |  NEW CLASS\n*   |      |  |   |   |  |  |  NEW FCB         NEW WRITER NAME\n*   |      |  |   |   |  |  |  |     NEW FORM  |         NEW DEST\n*   |      |  |   |   |  |  |  |     |         |         |\n*--------  -  --  --  -  -  -  ----  --------  --------  --------\n CPY2PROD     00  00     O  S\n CPY2TEST     00  00     O  S\n DBHLPROD     00  00     O  S\n DBHLTEST  X  00  00\n useridS   X  00  00\n PAE41A6?     00  00  O     R                  HPPI####\n SISTDAPL  X  00  00\n useridY      00  00  O     R                  SIYSC$$$\n useridY   X  00  00\n useridX      00  00  O     R                  SIXSC$$$\n useridX   X  00  00\n VSILPROD  X  00  00\n VSILTEST  X  00  00\n PA?99A6$  H  00  00\n OA?69#0?  H  00  00\n HD?BN$$$  H  00  00\n CCDCL#0?  H  00  00\n CCCAJ#0?  H  00  00\n CCCAD#0?  H  00  00\n CCCAF#0?  H  00  00\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSJOBS": {"ttr": 3354, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\t\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13%\\x01\\x8f\\x01\\x8f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:25:09", "lines": 399, "newlines": 399, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'GENERATE SUT POINTER FILE'),\n//             '###### JOB UPDATES',\n//             CLASS=x,\n//             MSGCLASS=x,\n//*            RESTART=J010.ARDLYUP,\n//             MSGLEVEL=(1,1)\n//*--------------------------------------------------\n//*    !! ALTER VARIABLES BELOW !!\n//*--------------------------------------------------\n//SMSJOB   PROC PL='PLSMS.PLSMS',\n//             PT=P,\n//             NBRB=03,       03=PRD8  04=TST8\n//             TAPE1=######\n//*--------------------------------------------------\n//*    DEFINE A DOUBLE-HIGH-LEVEL FILE 'POINTER FILE'.\n//*    THIS TELLS YOU TO WHICH SUT THE OTHER DOUBLE-HIGH-LEVEL\n//*    FILES ARE RELATED.\n//*--------------------------------------------------\n//DBHL01   EXEC PGM=IEFBR14,REGION=1024K\n//DASD1    DD  DSN=&PL..POINTER.FOR.&TAPE1,\n//             DISP=(MOD,DELETE),\n//             SPACE=(TRK,(1,1)),\n//             UNIT=SYSDA\n//*--------------------------------------------------\n//DBHL02   EXEC PGM=IEFBR14,REGION=1024K\n//DASD1    DD  DSN=&PL..POINTER.FOR.&TAPE1,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO\n//*--------------------------------------------------\n//DBHL03   EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(SMSBFILO)\n//OUTFILE  DD  DISP=SHR,DSN=&PL..POINTER.FOR.&TAPE1(SMSBFILO)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPUL&PT)\n//*--------------------------------------------------\n//DBHL04   EXEC PGM=PULL0080,\n//             REGION=3072K,\n//             PARM='0080NN    /'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//INFILE   DD  DISP=SHR,DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(CPY2PROD)\n//OUTFILE  DD  DISP=SHR,DSN=&PL..POINTER.FOR.&TAPE1(SMSWHAT)\n//OUTPRNT  DD  DUMMY\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPUL06)\n//*--------------------------------------------------\n//*--------------------------------------------------\n//*--------------------------------------------------\n//*    CHANGE SMS JOBS\n//*\n//*    JCL ERROR IS NORMAL WHEN JOB IS NOT FOUND\n//*--------------------------------------------------\n//*--------------------------------------------------\n//*--------------------------------------------------\n//PAP01    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.01A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP01)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP02    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.02A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP02)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP05    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.05A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP05)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP08    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.08A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP08)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP10    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.10A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP10)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP13    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.13A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP13)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP18    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.18A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP18)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP24    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.24A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP24)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAP33    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PA&PT.33A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAP33)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PCPR2    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSJOBS(PC&PT.R2A6$),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPCPR2)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//*    CHANGE CSD SYSIN DG??.ONLSCHD TO READ,BROWSE\n//*--------------------------------------------------\n//CCC01    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSIN(CCCL1#&NBRB),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCCCL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//CCC02    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.SYSIN(CCCL2#&NBRB),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSCCCL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PROVL    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.PROC(PROVLOAD),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPROVL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//C4CMUPD  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(C4CMUPD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPROVL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//STATS    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(STATANAL)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPROVL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//A2KMIV   EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(A2KMIVIR)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPROVL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//APLSORT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(APLSORT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPROVL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//ARDLYUP  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(ARDLYUP)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSARDLY)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//ARSPLIT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(ARSPLIT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSARSPL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//MIVBK    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(A2KMIVBK)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSMIVBK)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//BDSPLIT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(BDSPLIT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSBDSPL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//HMSPLIT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(HMSPLIT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSHMSPL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//IPFSPLT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(IPFSPLT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSIPFSP)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//OPSPLIT  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DSN=&PL..SMSSM00L.P0000.PROC(OPSPLIT),\n//             DISP=SHR\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSOPSPL)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//C4MXUPD  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(C4MXUPD)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSC4MXU)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAHACT   EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(PAHACT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSC4MXU)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//HMDLYUP  EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(HMDLYUP)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSHMDLY)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//OPTRN    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.PROC(OPTRNSRT)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSOPTRN)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//PAEZ0    EXEC PGM=CHNG0080,REGION=3072K,\n//             COND=(4,LT),\n//             PARM='0080N0000000000N00000000/'\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.COB2LIB\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSPRINT DD  SYSOUT=X\n//CHANGED  DD  DISP=SHR,DSN=&PL..SMSSM00L.P0000.SYSJOBS(PAEZ0A6$)\n//PARM01   DD  DISP=SHR,DSN=userid.ISPF.FILE489(SMSPAEZ0)\n//OFFSET   DD  DISP=SHR,DSN=userid.ISPF.FILE488(MIS10010)\n//*--------------------------------------------------\n//         PEND\n//J010     EXEC SMSJOB\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSLOAD": {"ttr": 3591, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x19\\x07O\\x01\\x19\\x07O\\x13$\\x00P\\x00P\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:24:11", "lines": 80, "newlines": 80, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'MANAGE SMS LOAD LIBRARIES'),\n//             '###### LOAD LIBS',\n//*            RESTART=J010.S040,\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=1\n//*--------------------------------------------------\n//*    EDIT TO ONLY INCLUDE LIBRARIES DELIVERED ON THE SUT TAPE\n//*--------------------------------------------------\n//*    BE SURE EACH FILES TRACK AND DIRECTORY SPACE WILL FIT IN\n//*    EACH TARGET LIBRARY\n//*--------------------------------------------------\n//S010     EXEC PGM=IEBCOPY,REGION=4096K\n//SYSPRINT DD SYSOUT=X\n//IN1      DD  DISP=SHR,DSN=PLSMS.SMBSM00L.E0000.LOAD\n//IN2      DD  DISP=SHR,DSN=PLSMS.SMOSM00L.E0000.LOAD\n//IN3      DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.E0000.LOAD\n//IN4      DD  DISP=SHR,DSN=PLSMS.CICSM01L.E0410.LOAD\n//IN5      DD  DISP=SHR,DSN=PLSYS.SMLSM00L.E0000.LOAD\n//IN6      DD  DISP=SHR,DSN=PLSMS.SMSSM00L.E0000.DBRM\n//*\n//OUT1     DD  DISP=SHR,DSN=PLSMS.SMBSM00L.P0000.LOAD\n//OUT2     DD  DISP=SHR,DSN=PLSMS.SMOSM00L.P0000.LOAD\n//OUT3     DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.P0000.LOAD\n//OUT4     DD  DISP=SHR,DSN=PLSMS.CICSM01L.P0410.LOAD\n//OUT5     DD  DISP=SHR,DSN=PLSYS.SMLSM00L.P0000.LOAD\n//OUT6     DD  DISP=SHR,DSN=PLSMS.SMSSM00L.P0000.DBRM\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  COPYMOD INDD=((IN1,R)),OUTDD=OUT1\n  EXCLUDE MEMBER=$$$SPACE\n  COPYMOD INDD=((IN2,R)),OUTDD=OUT2\n  EXCLUDE MEMBER=$$$SPACE\n  COPYMOD INDD=((IN3,R)),OUTDD=OUT3\n  EXCLUDE MEMBER=$$$SPACE\n  COPYMOD INDD=((IN4,R)),OUTDD=OUT4\n  EXCLUDE MEMBER=$$$SPACE\n  COPYMOD INDD=((IN5,R)),OUTDD=OUT5\n  EXCLUDE MEMBER=$$$SPACE\n  COPY    INDD=((IN6,R)),OUTDD=OUT6\n  EXCLUDE MEMBER=$$$SPACE\n/*\n//*--------------------------------------------------\n//S020     EXEC PGM=IEBCOPY,REGION=4096K,\n//             COND=(4,LT)\n//SYSPRINT DD SYSOUT=X\n//IN1      DD  DISP=SHR,DSN=PLSMS.SMBSM00L.E0000.LOAD\n//IN2      DD  DISP=SHR,DSN=PLSMS.SMOSM00L.E0000.LOAD\n//IN3      DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.E0000.LOAD\n//IN4      DD  DISP=SHR,DSN=PLSMS.CICSM01L.E0410.LOAD\n//IN5      DD  DISP=SHR,DSN=PLSYS.SMLSM00L.E0000.LOAD\n//IN6      DD  DISP=SHR,DSN=PLSMS.SMSSM00L.E0000.DBRM\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  EMPTYO  INDD=IN1\n  EMPTYO  INDD=IN2\n  EMPTYO  INDD=IN3\n  EMPTYO  INDD=IN4\n  EMPTYO  INDD=IN5\n  EMPTYO  INDD=IN6\n/*\n//*--------------------------------------------------\n//S030     EXEC PGM=IEBCOPY,REGION=4096K,\n//             COND=(4,LT)\n//SYSPRINT DD SYSOUT=X\n//OUT1     DD  DISP=SHR,DSN=PLSMS.SMBSM00L.P0000.LOAD\n//OUT2     DD  DISP=SHR,DSN=PLSMS.SMOSM00L.P0000.LOAD\n//OUT3     DD  DISP=SHR,DSN=PLSMS.SMSCUSTL.P0000.LOAD\n//OUT4     DD  DISP=SHR,DSN=PLSMS.CICSM01L.P0410.LOAD\n//OUT6     DD  DISP=SHR,DSN=PLSMS.SMSSM00L.P0000.DBRM\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,15)\n//SYSIN    DD *\n  COMPRESS OUTDD=OUT1\n  COMPRESS OUTDD=OUT2\n  COMPRESS OUTDD=OUT3\n  COMPRESS OUTDD=OUT4\n  COMPRESS OUTDD=OUT6\n/*\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSMAIL": {"ttr": 3594, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x19\\x07O\\x01\\x19\\x07O\\x131\\x00b\\x00b\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:31:21", "lines": 98, "newlines": 98, "modlines": 0, "user": "IANNONE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SMSMEM": {"ttr": 3597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x19\\x07O\\x01\\x19\\x07O\\x132\\x00!\\x00!\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:32:10", "lines": 33, "newlines": 33, "modlines": 0, "user": "IANNONE"}, "text": " append this step to sistdapl:\n\n //*********************************************************\n //**  COPY SITE SPECIFIC INSTALL JOBS TO  ..TMSI.SITE.APPLYJCL...\n //*********************************************************\n //SMSDOC   EXEC PGM=IEBCOPY\n //SYSPRINT DD  SYSOUT=*\n //SYSUT1   DD  DSN=PLSMS.SMSSM00L.H00T0.SYSJOBS,DISP=SHR\n //SYSUT2   DD  DSN=&DHI..TMSI.SITE.APPLYJCL.VS&VOLSER,DISP=SHR\n //SYSUT3   DD  UNIT=SMSDA,SPACE=(TRK,30)\n //SYSUT4   DD  UNIT=SMSDA,SPACE=(TRK,30)\n //SYSIN    DD  DSN=userid.ISPF.FILE489(SMSMEM),DISP=SHR\n //*********************************************************\n\n input (this member):\n\n   COPY    INDD=SYSUT1,OUTDD=SYSUT2\n   SELECT  MEMBER=SMSBFIL\n   SELECT  MEMBER=SMSBKUP\n   SELECT  MEMBER=SMSCHNG\n   SELECT  MEMBER=SMSCICS\n   SELECT  MEMBER=SMSCOMP\n   SELECT  MEMBER=SMSCOPY\n   SELECT  MEMBER=SMSDOC\n   SELECT  MEMBER=SMSJES1\n   SELECT  MEMBER=SMSJES2\n   SELECT  MEMBER=SMSJOBS\n   SELECT  MEMBER=SMSLOAD\n   SELECT  MEMBER=SMSMAIL\n   SELECT  MEMBER=SMSNOTE\n   SELECT  MEMBER=SMSPRNT\n   SELECT  MEMBER=SMSREQ\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSMIVBK": {"ttr": 3599, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13P\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:50:53", "lines": 14, "newlines": 14, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0009  .PIDXFICH\n N04A  00000000  0009  UNIT=CART\n N04A  00000000  0009  UNIT=3480\n A00A  00000000  0000  //*....JCI....YYMMDD DRIVER SUPC.DGA6..PIDX+\n A00A  00000000  0000  FICH+  UNIT=3480\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSNOTE": {"ttr": 3841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x19\\x07O\\x01\\x19\\x07O\\x134\\x00\\xbd\\x00\\xbd\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-15T13:34:13", "lines": 189, "newlines": 189, "modlines": 0, "user": "IANNONE"}, "text": "\n  SUT APPLY PREPARATION\n\n  ----------------------------------------------------------\n  quarterly numbered suts:  ie: 98.2\n      these require downtime.  follow install procedures as delivered\n      in the 'software apply procedure manual'.\n      perform functions below, paying close attention to the\n      sixsc$$$ output, altering the staging double-high-level\n      libraries as needed to reflect previous svmmc changes.\n\n      Double check for CICS modules that belong in the LPA -\n      see SYS1.CICS410.SDFHLPA.\n\n  monthly alpha suts:  ie: 98.E\n      these generally do not require downtime.  review the sistdapl\n      output for software apply procedures (which always include\n      running pap99a6$/pat99a6$ after cpy2prod/cpy2test).\n\n      skip steps: SMSLOAD, (interfaces), (drop cics's).\n\n      sometimes we rename alpha sut staging libraries so that\n      numbered sut staging libraries can be brought down from tape.\n      these are changed from PLSMS.PLSMS to PLSMS.######:\n      ###### is the primary tape number, PLSMS.PLSMS might be\n      PDSMS.PDSMS, TLSMS.TLSMS, TDSMS.TDSMS.\n      change cpy2prod/cpy2test as needed to load from these libraries\n  ----------------------------------------------------------\n\n  1.  check tape number, be sure this is not a duplicate of existing\n        maint library names.  if so, delete old maint library.\n        ex: PLSMS.TMSI.SITE.APPLYJCL.VSX01048 where X01048 is the\n        tape name.\n\n  2.  issue sistdapl command to download tapes to maint library\n        ex: S SISTDAPL,VOLSER=X0XXXX\n        ex: S SISTDAPL,VOLSER=X0XXXX,OVOL=X0XXXX\n        ex: S SISTDAPL,VOLSER=X0XXXX,OVOL='X0XXXX,X0XXXX'\n\n        VSILPROD and VSILTEST will abend because CHPP1330 is not\n        in the regular library due to bad TTR's.  Add\n        PLSMS.SMBSM00L.P0000.LOAD.ALIAS to their joblib.\n        if no VSILTEST/VSILPROD report was created then there\n        are no VSAM updates on the sut.\n\n  3.  copy member 'SMSDOC' above all jobs to run for sut apply\n        CPY2TEST DBHLTEST SIYSC$$$ VSILTEST\n        CPY2PROD DBHLPROD SIXSC$$$ VSILPROD\n\n  4.  update SMSCHNG variable with the\n        6 digit sut tape name (ex: X08195) and submit\n\n  5.  mass replace all '###### ............ ' with sut name,\n        such as:       '###### .............'\n      mass replace all 'D##T0A6' with the member name found\n        in the PLSMS.TMSI.SITE.TAPEDOC.VS###### library,\n        such as:       'D73T0A6' or 'D73HHRR'\n\n  6.  submit SMSCOMP.  if 2 or more members exist, run for each.\n        (ie:  D##T0A6: T = invision.  D##E0A6: E = ead)\n        This process creates 3 files:\n          PDSMS.SUT0.######.D##HHRR.ELEMENT.LIST\n          PDSMS.SUT0.######.D##HHRR.PROBLEM.DESC\n          PDSMS.SUT0.######.D##HHRR.APPLY.COMMENT\n        This process also creates 2 reports which are sent to\n          rms-online below\n\n  7.  see i below\n      Quarterly SUT's: because the SISTDAPL report generated\n        by initiating the SISTDAPL proc includes both D##T0A6\n        and D##E0A6 data, delete the SISTDAPL report and\n        reprint only the D##T0A6 member using SMSPRNT.\n      Purge unwanted reports\n      run SMSJES1\n      run SMSXROX if a quarterly numbered SUT\n      run SMSU418 if a monthly alpha SUT\n\n  8.  update the comment line in cpy2prod (step SIL0DLVR)\n      to further clarify what is on the tape.  run SMSMAIL.\n      cut and paste entries from SMSMAILO and send.\n\n  9.  If the SUT updates a CICS file, such as the ICDAFILE,\n        you may be able to close and open it while cics stays up:\n        in IANNONE.ISPF.LIBRARY.SMS:  RMSRSVP     RMSRELP\n                                      RMSRSVT     RMSRELT\n        - add to cpy2test and cpy2prod\n        - if necessary, stop interfaces when using\n\n  10. prepare backups:\n       a.  run SMSBFIL\n       b.  copy SMSBFILO into smsbkup, modify the dataset list,\n           and update the backup tape name\n             pre-aply:   backup all libraries affected by apply process\n                           immediately before sut install\n             dbhl-del:   delete double-high-level files after sut apply\n       c.  use SMSCOPY to make dasd copies of target datasets, if\n           desired.  copy SMSBFILO into the include area of smscopy,\n           and SMSBFILC into the renameu area.\n\n  11. production quarterly suts only:\n        alter SMSLOAD if needed.\n        also review SMSCICS if CICS maintenance is being delivered.\n\n  12. Perform standard sut apply procedures\n\n      test-  dbhltest,\n             run SMSJOBS (change &pl, &pt, nbrb symbolics)\n             see ii below,\n             global replace: unit=smsda to sysda, dev1=smsda etc\n             siysc$$$: in output queue as iannoney - review carefully\n             smsjes1,\n             alter dbhl libs (see iii below),\n             update sut apply documentation to include smsbkup, etc,\n             (interfaces), (drop cics's),\n             (empty load libs if instructed, but only if sut levels\n              are the same - otherwise this will backlevel test)\n             smsbkup w/pre-aply, cpy2test, (post apply jobs),\n             send mail,\n             retrieve migrated libs, smsbkup w/dbhl-del,\n             delete IANNONEY jcl from held queue,\n             run smsjes2, then smsxrox or smsU418,\n             update IANNONE.ISPF.LIBRARY(SMSSUT)\n\n      prod-  dbhlprod,\n             run SMSJOBS (change &pl, &pt, nbrb symbolics)\n             see ii below,\n             global replace: unit=smsda to sysda, dev1=smsda etc\n             sixsc$$$: in output queue as iannonex - review carefully\n             smsjes1,\n             alter dbhl libs (see iii below),\n             update sut apply documentation to include smsbkup, etc,\n             (interfaces), (drop cics's),\n             smsbkup w/pre-aply, smscopy, smsload, cpy2prod,\n             (post apply jobs),\n             send mail,\n             retrieve migrated libs, smsbkup w/dbhl-del,\n             delete IANNONEX jcl from held queue,\n             run smsjes2, then smsxrox or smsU418,\n             update IANNONE.ISPF.LIBRARY(SMSSUT)\n\n  ----------------------------------------------------------\n\n  i.  after each run:\n           (jobs SMSJES1&2 will perform most of the following)\n       a.  delete jcl:\n             VSILTEST  DBHLTEST  SIYSC$$$  IANNONES\n             VSILPROD  SISTDAPL  SIXSC$$$\n       b.  place reports in a class of 'r'\n             SIXSC$$$  VSILPROD  SISTDAPL  MIS0485B\n             SIYSC$$$  VSILTEST  HPPI####\n             note: job pa?41a6? may create 2 reports: delete the one\n                   that does not have 'hppi####' in the writer field\n       c.  place jcl in class of 's'\n             DBHLPROD  CPY2PROD\n             IANNONES  CPY2TEST\n       d.  run SMSXROX or SMSU418\n\n  ii.  altering dbhl libraries based on output from siysc$$$\n       or sixsc$$$:\n\n           //*....JCI....yymmdd filename  change\n\n       -   the above comment format is used to indicate a change\n           in a proc or job.  Use this format when adapting jcl\n           to reflect svmmc modifications.\n           Cut and paste this into the dbhl libraries.\n           When in doubt - go with what sms delivered.\n           In siysc$$$ or sixsc$$$, find 'OVERALL' to skip to\n           the next library comparison.\n       -   delete vol=ref= statements for temp files (&&)\n       -   check for high region requests, change to 20m or 7800k\n\n  ----------------------------------------------------------\n\n  ONLINE FILES:\n\n  PDSMS.S%OA.CC##.DDDFILE   dynamic data dictionary\n                              closing causes a tif abend - reset w/pf2\n  PDSMS.S%OA.CC##.SDFILE    screen definition file\n  PDSMS.S%OA.CC##.PROFILE   OAS profiles\n  PDSMS.S%OA.CC##.TCLFILE   TCL definition file\n  PDSMS.S%OA.CC##.ERRFILE\n  PDSMS.S%OA.CC##.DOCDEF    document definition file\n  PDSMS.S%OA.CC##.LSTFILE   list & translation table definition file\n  PDSMS.S%OA.CC##.SECUFILE  security file\n  PDSMS.SVAZ.DGA6.AHCATALG  ADHOC wizard catalog\n                              includes adhoc definitions\n  ----------------------------------------------------------\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSOPSPL": {"ttr": 3845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x18\\x00\\x18\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:51:09", "lines": 24, "newlines": 24, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F02A L00200000  0009  .OPFPLTPL\n N02A  00000000  0006  #JCL#SPACE#\n N02A  00000000 20023  SPACE=(TRK,(30,2),RLSE)\n F02B L00200000  0009  .OPPACOUT\n N02B  00000000  0006  #JCL#SPACE#\n N02B  00000000 20025  SPACE=(TRK,(700,45),RLSE)\n F02C L00200000  0008  .OPXFRBD\n N02C  00000000  0006  #JCL#SPACE#\n N02C  00000000 20026  SPACE=(TRK,(1000,45),RLSE)\n F02D L00200000  0008  .OPXFRHM\n N02D  00000000  0006  #JCL#SPACE#\n N02D  00000000 20025  SPACE=(TRK,(200,15),RLSE)\n F02E L00200000  0009  .OPADTRPT\n N02E  00000000  0006  #JCL#SPACE#\n N02E  00000000 20025  SPACE=(TRK,(700,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSOPTRN": {"ttr": 3847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:51:13", "lines": 12, "newlines": 12, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0009  .INOTRANS\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20025  SPACE=(TRK,(900,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAEZO": {"ttr": 3849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x14?\\x01\\x00\\x14?\\x11\\x08\\x00\\t\\x00\\t\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-05-22T00:00:00", "modifydate": "2000-05-22T11:08:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "IANNONE"}, "text": "*\n* UP TO 40 PAIRS OF CHANGES, OR 80 LINES, MAY BE ENTERED\n* SEE CHNGDOCU FOR FURTHER DETAILS\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00030000  0007  YYYYYYY\n  00   00000000  0007  NNNNNNN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSPAEZ0": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13Q\\x00\\t\\x00\\t\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:51:16", "lines": 9, "newlines": 9, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n  00   00030000  0007  YYYYYYY\n  00   00000000  0007  NNNNNNN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP01": {"ttr": 3853, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x10\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13G\\x00!\\x00!\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:47:10", "lines": 33, "newlines": 33, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0012  .BATCHES(+1)\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04B L00200000  0008  .MTW(+1)\n N04B  00000000  0006  #JCL#SPACE#\n N04B  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04C L00200000  0011  .AXWORK(+1)\n N04C  00000000  0006  #JCL#SPACE#\n N04C  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04D L00200000  0011  .BLEITW(+1)\n N04D  00000000  0006  #JCL#SPACE#\n N04D  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04E L00200000  0012  .ARINDEX(+1)\n N04E  00000000  0006  #JCL#SPACE#\n N04E  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04F L00200000  0013  .OPADTWRK(+1)\n N04F  00000000  0006  #JCL#SPACE#\n N04F  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04G L00200000  0013  .ARADTWRK(+1)\n N04G  00000000  0006  #JCL#SPACE#\n N04G  00000000 20025  SPACE=(TRK,(100,15),RLSE)\n F04H L00200000  0013  .UPADTWRK(+1)\n N04H  00000000  0006  #JCL#SPACE#\n N04H  00000000 20025  SPACE=(TRK,(100,15),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP02": {"ttr": 3855, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00'\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:51:27", "lines": 15, "newlines": 15, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .ERRORIPS(+1)\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20025  SPACE=(TRK,(100,15),RLSE)\n F04B L00200000  0013  .IPPACOUT(+1)\n N04B  00000000  0006  #JCL#SPACE#\n N04B  00000000 20025  SPACE=(TRK,(100,15),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP05": {"ttr": 3857, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\x19\\x07O\\x01\\x19\\x07\\x7f\\x13Q\\x00!\\x00!\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-15T00:00:00", "modifydate": "2019-03-18T13:51:32", "lines": 33, "newlines": 33, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .INOTRANS(+1)\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20026  SPACE=(TRK,(1000,45),RLSE)\n F04B L00200000  0013  .OPOUTDAT(+1)\n N04B  00000000  0006  #JCL#SPACE#\n N04B  00000000 20027  SPACE=(TRK,(3000,150),RLSE)\n F04C L00200000  0013  .OPFPLTPL(+1)\n N04C  00000000  0006  #JCL#SPACE#\n N04C  00000000 20023  SPACE=(TRK,(10,2),RLSE)\n F04D L00200000  0013  .OPPACOUT(+1)\n N04D  00000000  0006  #JCL#SPACE#\n N04D  00000000 20026  SPACE=(TRK,(1000,45),RLSE)\n F04E L00200000  0012  .OPXFRBD(+1)\n N04E  00000000  0006  #JCL#SPACE#\n N04E  00000000 20026  SPACE=(TRK,(1000,45),RLSE)\n F04F L00200000  0009  .OPTL(+1)\n N04F  00000000  0006  #JCL#SPACE#\n N04F  00000000 20025  SPACE=(TRK,(500,45),RLSE)\n F04G L00200000  0013  .OPADTRPT(+1)\n N04G  00000000  0006  #JCL#SPACE#\n N04G  00000000 20025  SPACE=(TRK,(500,45),RLSE)\n F04H L00200000  0012  .OPXFRHM(+1)\n N04H  00000000  0006  #JCL#SPACE#\n N04H  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP08": {"ttr": 3859, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x007\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:51:37", "lines": 29, "newlines": 29, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .AROUTDAT(+1)\n N04A  00000000  0005  UNIT=\n N04A  00000000  0011  UNIT=CART,\n N04A  00000000  0020  //            SPACE=\n N04A  00000000  0020  //*           SPACE=\n F04B L00200000  0012  .ARCONDB(+1)\n N04B  00000000  0006  #JCL#SPACE#\n N04B  00000000 20023  SPACE=(TRK,(40,5),RLSE)\n F04C L00200000  0013  .PADLYRPT(+1)\n N04C  00000000  0006  #JCL#SPACE#\n N04C  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04D L00200000  0013  .ARPACOUT(+1)\n N04D  00000000  0006  #JCL#SPACE#\n N04D  00000000 20023  SPACE=(TRK,(30,5),RLSE)\n F04E L00200000  0012  .ARXFRHM(+1)\n N04E  00000000  0006  #JCL#SPACE#\n N04E  00000000 20027  SPACE=(TRK,(5000,150),RLSE)\n F04F L00200000  0013  .BILMODAR(+1)\n N04F  00000000  0006  #JCL#SPACE#\n N04F  00000000 20027  SPACE=(TRK,(5000,150),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP10": {"ttr": 3861, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:51:41", "lines": 27, "newlines": 27, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F05B L00200000  0013  .BDINQTRN(+1)\n N05B  00000000  0006  #JCL#SPACE#\n N05B  00000000 20025  SPACE=(TRK,(400,45),RLSE)\n F04C L00200000  0013  .BDPACOUT(+1)\n N04C  00000000  0006  #JCL#SPACE#\n N04C  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04D L00200000  0012  .BDXFRAR(+1)\n N04D  00000000  0006  #JCL#SPACE#\n N04D  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04E L00200000  0012  .ARINDEX(+1)\n N04E  00000000  0006  #JCL#SPACE#\n N04E  00000000 20025  SPACE=(TRK,(300,45),RLSE)\n F04F L00200000  0013  .PADLYRPT(+1)\n N04F  00000000  0006  #JCL#SPACE#\n N04F  00000000 20026  SPACE=(TRK,(3500,90),RLSE)\n F08G  00000000  0013  EXEC BDDLYUP,\n N08G  00000000  0006  DG=A6\n N08G  00000000  0018  DG=A6,REGION=36M\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP13": {"ttr": 3863, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00E\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x13\\x00\\x13\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:51:45", "lines": 19, "newlines": 19, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F03A  00060000  0005  13A6$\n N03A  00000000  0015    LINES=9999\n N03A  00000000  0023    LINES=9999,REGION=80M\n A00A  00000000  0000  //*....JCI....YYMMDD PAP13A6$  REGION=80M\n F03B L00250000  0013  .PASRTDLY(+1)\n N03B  00000000  0006  #JCL#SPACE#\n N03B  00000000 20034  SPACE=(TRK,(2000,125),RLSE,,ROUND)\n F03C L00250000  0013  .PAACDLYR(+1)\n N03C  00000000  0006  #JCL#SPACE#\n N03C  00000000 20034  SPACE=(TRK,(3500,125),RLSE,,ROUND)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP18": {"ttr": 3865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00I\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x12\\x00\\x12\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:51:49", "lines": 18, "newlines": 18, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .USERBTCH(+1)\n N04A  00000000  0010  UNIT=SYSDA\n N04A  00000000 20009  UNIT=CART\n N04A  00000000  0007  SPACE=(\n N04A  00000000  0030  DATACLAS=DTMMBAK,RETPD=30,\n N04A  00000000  0013  BLKSIZE=9040,\n N04A  00000000 20014  BLKSIZE=28000,\n A00A  00000000  0000  //*....JCI....YYMMDD BKUP003 SUPA..USERBTCH+\n A00A  00000000  0000  +  28000 DTMMBAK CART\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP24": {"ttr": 3867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13Q\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:51:55", "lines": 30, "newlines": 30, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .UPDTRANS(+1)\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20041  SPACE=(TRK,(700,45),RLSE),DATACLAS=D0C0PS\n F04B L00200000  0013  .HMOUTDAT(+1)\n N04B  00000000  0006  #JCL#SPACE#\n N04B  00000000 20043  SPACE=(TRK,(5000,500),RLSE),DATACLAS=D0C0PS\n F04C L00200000  0013  .HMTAPFLG(+1)\n N04C  00000000  0006  #JCL#SPACE#\n N04C  00000000 20034  SPACE=(TRK,(1000,100),RLSE,,ROUND)\n F04D L00200000  0012  .ARINDEX(+1)\n N04D  00000000  0006  #JCL#SPACE#\n N04D  00000000 20025  SPACE=(TRK,(500,45),RLSE)\n F04E L00200000  0012  .HMJFILE(+1)\n N04E  00000000  0006  #JCL#SPACE#\n N04E  00000000 20024  SPACE=(CYL,(200,5),RLSE)\n F04F L00200000  0020  .HMJFILE.RECOVHM(+1)\n N04F  00000000  0006  #JCL#SPACE#\n N04F  00000000 20029  SPACE=(TRK,(20000,1000),RLSE)\n F04G L00200000  0013  .HMDLYRPT(+1)\n N04G  00000000  0006  #JCL#SPACE#\n N04G  00000000 20027  SPACE=(TRK,(2500,300),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPAP33": {"ttr": 3869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13R\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:52:07", "lines": 12, "newlines": 12, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0013  .CWREPORT(+1)\n N04A  00000000  0006  #JCL#SPACE#\n N04A  00000000 20025  SPACE=(TRK,(500,45),RLSE)\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPCPR2": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x10\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13R\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:52:10", "lines": 14, "newlines": 14, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F04A L00200000  0010  .TSTPTA60(\n N04A  00000000  0008  RETPD=22\n N04A  00000000  0008  RETPD=92\n A00A  00000000  0000  //*....JCI....YYMMDD SUPC.DGA6..TSTPTA60+  +\n A00A  00000000  0000  RETPD=92\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPRNT": {"ttr": 4099, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00X\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x137\\x00\\x13\\x00\\x11\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:37:58", "lines": 19, "newlines": 17, "modlines": 0, "user": "IANNONE"}, "text": "//useridS  JOB (8231,'PRINT SUT SISTDAPL REPORT'),\n//             '###### REPRINT',\n//             CLASS=x,MSGCLASS=x,MSGLEVEL=(2,0)\n//*--------------------------------------------------\n//*   !! VERIFY MEMBER NAME AND TAPE NUMBER BELOW !!\n//*--------------------------------------------------\n//*   PRINT THE SUT DELIVERY INSTRUCTIONS\n//*--------------------------------------------------\n//S010     EXEC PGM=IEBGENER,\n//             REGION=3072K\n//SYSPRINT DD  SYSOUT=X\n//SYSUT1   DD  DSN=PLSMS.TMSI.SITE.TAPEDOC.VS######(D##T0A6),\n//             DISP=SHR,RECFM=FBA\n//SYSUT2   DD  SYSOUT=(Z,SISTDAPL,8LPI),FCB=STD\n//SYSIN    DD  DUMMY\n//*YSIN    DD  *\n//*     GENERATE  MAXFLDS=1\n//*     RECORD   FIELD=(132,1,,1)\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPROVL": {"ttr": 4101, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\"\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13R\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:52:22", "lines": 15, "newlines": 15, "modlines": 0, "user": "IANNONE"}, "text": "*\n* up to 40 pairs of changes, or 80 lines, may be entered\n* see CHNGDOCU in CBT file 488 for further details\n*\n*...+....1....+....2....\n*                               1         2         3         4\n*TII12PPPPPMMMMPALLLL  1...+....0....+....0....+....0....+....0....\n F01A  00000000  0009  //SORTLIB\n  01A  00000000  0009  //SORTLIB\n  01A  00000000  0009  //*ORTLIB\n* include any 'disp=shr' continuation\n  01A  00000000  0003  //\n  01A  00000000  0003  //*\n  00   00000000  0010  UNIT=SMSDA\n  00   00000000  0010  UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPULP": {"ttr": 4103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x983o\\x00\\x99)O\\x08P\\x00\\x06\\x00\\x05\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-12-02T00:00:00", "modifydate": "1999-10-21T08:50:00", "lines": 6, "newlines": 5, "modlines": 0, "user": "IANNONE"}, "text": "**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <-------------------i-- ---- ----- -------- -------- ---------------\nPDSMS.PDSMS              11 0024 00000   00000    00000\nPLSMS.PLSMS              11 0024 00000   00000    00000\nPLSMS.PLSYS              11 0024 00000   00000    00000\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPULT": {"ttr": 4105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x983o\\x00\\x99)O\\x08P\\x00\\x05\\x00\\x05\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-12-02T00:00:00", "modifydate": "1999-10-21T08:50:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "IANNONE"}, "text": "**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <-------------------i-- ---- ----- -------- -------- ---------------\nTDSMS.TDSMS              11 0024 00000   00000    00000\nTLSMS.TLSMS              11 0024 00000   00000    00000\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPUL05": {"ttr": 4107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13@\\x00\\x04\\x00\\x04\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:40:08", "lines": 4, "newlines": 4, "modlines": 0, "user": "IANNONE"}, "text": "**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <-------------------i-- ---- ----- -------- -------- ---------------\n0000                     04 0001 00000 P 00012  P 00062  I03\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPUL06": {"ttr": 4109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x983o\\x00\\x99)O\\x08Q\\x00\\x04\\x00\\x04\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-12-02T00:00:00", "modifydate": "1999-10-21T08:51:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "IANNONE"}, "text": "**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <-------------------i-- ---- ----- -------- -------- ---------------\n0000                     04 0001 00000 P 00012  P 00062  I03\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSPUL99": {"ttr": 4111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99(\\x8f\\x00\\x99)O\\x08R\\x00\\x05\\x00\\x05\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-10-15T00:00:00", "modifydate": "1999-10-21T08:52:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "IANNONE"}, "text": "**\n**  <-------------------x-- ---- ----- -------- -------- ---------------\n**           a          sbb cccc ddeee f.ggggg# h.iiiii#       j\n**  <-------------------i-- ---- ----- -------- -------- ---------------\n                        I00 0000 00000   00000    00000\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMSREF": {"ttr": 4113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13C\\x005\\x005\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:43:52", "lines": 53, "newlines": 53, "modlines": 0, "user": "IANNONE"}, "text": "//USERIDS  JOB (8231,'SAVE SISTDAPL CONTENTS'),\n//             '###### REFRESH LIBS',\n//             CLASS=X,MSGCLASS=X,MSGLEVEL=1\n//*\n//*--------------------------------------------------\n//SMSCOMP  PROC MEMBR=D##T0A6,     OR     D##HHRR\n//             TAPE1=X#####\n//*--------------------------------------------------\n//S010     EXEC PGM=IEFBR14,REGION=2048K,\n//             COND=(0,NE)\n//DASD1    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//DASD2    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//DASD3    DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC,\n//             DISP=(MOD,DELETE),\n//             UNIT=SYSDA,SPACE=(TRK,(1,0))\n//*--------------------------------------------------\n//S020     EXEC PGM=IEFBR14,REGION=2048K,\n//             COND=(0,NE)\n//SUTO01   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//SUTO02   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//SUTO03   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC,\n//             DISP=(NEW,CATLG,KEEP),\n//             DATACLAS=D0FBPO,DCB=LRECL=132\n//*--------------------------------------------------\n//S030     EXEC PGM=MIS0480B,REGION=2048K,\n//             COND=(0,NE)\n//STEPLIB  DD  DSN=SYS1.COB2LIB,DISP=SHR\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//SUTIN    DD  DSN=PLSMS.TMSI.SITE.TAPEDOC.VS&TAPE1(&MEMBR),DISP=SHR\n//SUTO01   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..ELEMENT.LIST(ELEMENT),\n//             DISP=SHR\n//SUTO02   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..APPLY.COMMENT(COMMENT),\n//             DISP=SHR\n//SUTO03   DD  DSN=PDSMS.SUT0.&TAPE1..&MEMBR..PROBLEM.DESC(PROBLEM),\n//             DISP=SHR\n//SMSNAME  DD  DSN=PLSMS.TMSI.SITE.APPLYJCL.VS&TAPE1(CPY2PROD),\n//             DISP=SHR\n//*--------------------------------------------------\n//         PEND\n//J010     EXEC SMSCOMP\n//*--------------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSREQ": {"ttr": 4115, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13D\\x00&\\x00&\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:44:27", "lines": 38, "newlines": 38, "modlines": 0, "user": "IANNONE"}, "text": "//XXXXXXXJ JOB (8231,'PRINT SMS SUT MOVE REQUESTS'),\n//             '###### PRNT MOVE REQ',\n//             CLASS=X,\n//             MSGCLASS=X,\n//             MSGLEVEL=(1,1)\n//*--------------------------------------------------\n//*  !!  UPDATE SUTIN MEMBER NAME AND PARM01 BELOW  !!\n//*--------------------------------------------------\n//S010     EXEC PGM=MIS0580B,\n//             REGION=2048K,\n//             COND=(0,NE)\n//STEPLIB  DD  DSN=SYS1.COB2LIB,DISP=SHR\n//SYSOUT   DD  SYSOUT=X\n//SYSUDUMP DD  SYSOUT=D\n//SYSDBOUT DD  SYSOUT=X\n//SYSABOUT DD  SYSOUT=X\n//SYSPRINT DD  SYSOUT=X\n//SUTIN    DD  DSN=PLSMS.TMSI.SITE.TAPEDOC.VS######(D##T0A6),\n//             DISP=SHR\n//SMSNAME  DD  DSN=PLSMS.TMSI.SITE.APPLYJCL.VS######(CPY2PROD),\n//             DISP=SHR\n//SUTO03   DD  SYSOUT=(X,DSTD,8LPI),FCB=STD,DEST=U363\n//*--------------------------------------------------\n//*  PARM01 : LIST OF SMS SUT MOVE REQUEST NUMBERS TO PRINT\n//*--------------------------------------------------\n//*  POS 1  : * = COMMENTS\n//*  POS 3  : 8 DIGIT SUT MOVE REQUEST NUMBER,\n//*           PRECEDED BY SPACES, ENDING COLUMN 10\n//*--------------------------------------------------\n//PARM01   DD  *\n*    17845\n*    17923\n*    17953\n*    16856\n*    17540\n*    17201\n/*\n//*4567890-------------------------------------------\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSSUT": {"ttr": 4117, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x19\\x07\\x7f\\x01\\x19\\x07\\x7f\\x13F\\x00\\xdb\\x00\\xdb\\x00\\x00\\xc9\\xc1\\xd5\\xd5\\xd6\\xd5\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-03-18T00:00:00", "modifydate": "2019-03-18T13:46:29", "lines": 219, "newlines": 219, "modlines": 0, "user": "IANNONE"}, "text": "*---------------------------------------------------------------------\n* ITEMS DELIVERED ON AN SMS SOFTWARE UPDATE TAPE WILL BE\n* COMPARED TO THIS LIST.  MATCHES WILL ALLOW APPLICATIONS TO\n* RESPOND TO SUT CHANGES IN A TIMELY MANNER.\n*---------------------------------------------------------------------\n* RESP PARTY:     THE LAST NAME OF THE PERSON WHO WILL BE NOTIFIED\n*                 WHEN A SUT ELEMENT MATCHES ONE LISTED BELOW.\n*\n* LIBRARY ITEMS:\n*      OF MOST CONCERN TO APPLICATIONS/SYSTEMS:\n*                 COBLIB   :  COPYBOOK MEMBERS\n*                 LOAD     :  LOAD MODULES\n*                 CLIST    :  CLIST MEMBERS\n*                 PANELS   :  TSO PANELS\n*                 PROC     :  PROCEDURES\n*                 SDFILE   :  SCREEN DEFINITIONS\n*                             ??.....   HELP SCREENS\n*                             ?#.....   DYNAMIC DISPLAY SCREENS\n*                 SOURCE   :  PROGRAM SOURCE CODE\n*                 SYSIN    :  PROC SYSIN DATA\n*                 SYSJOBS  :  JOBS\n*                 TCLFILE  :  TCL'S\n*                 VDEF     :  VSAM FILE DEFINITIONS\n*      OTHERS:\n*                 AHCATALG :  DSNHI.SVOA.CC##.AHCATALG\n*                 BDMFILEP *  DSNHI.SVTI.DG%%.TEMP.UNV.BDMFILEP\n*                 BDMFILEP *  DSNHI.SVTI.DG%%.TEMP.UNVRPBDM\n*                 BDMFILEP *  DSNHI.SVTI.DG%%.TEMP.UNVUPBDM\n*                 BDMMTHHI *  DSNHI.SMTI.DG%%.TEMP.BDMMTHHI\n*                 BDM92OPT *  DSNHI.SMTI.DG%%.BDM92OPT\n*                 CLFP     *  DSNHI.SVTI.DG%%.TEMP.CLFP\n*                 CLFTBLP  *  DSNHI.SVTI.DG%%.TEMP.CLFTBLP\n*                 DBRM     :  DB2 ITEMS\n*                 DDDFILE  :  DATA DICTIONARY ITEMS\n*                 DGSYSIN  :  LIBHI.PASDG%%L.P0000.SYSIN\n*                 DOCDEF   :\n*                 DRGCNTL  *  STDHI.SMHF.SITE.DRGCNTL\n*                 EDTABLES *  STDHI.SMPA.SITE.EDTABLES\n*                 ERRFILE  :\n*                 FORMATAB *  STDHI.SMAS.SITE.FORMATAB\n*                 FORMSP   *  DSNHI.SVTI.DG%%.TEMP.FORMSP\n*                 ICDAFILE *  STDHI.SVPC.SITE.ICDAFILE\n*                 INSTALL  :  INSTALL JCL MEMBERS\n*                 MACLIB   :\n*                 MASSR40I *  DSNHI.SMOO.CC##.MASSR40I\n*                 MASSR400 *  DSNHI.SMOO.CC##.MASSR400\n*                 MODELPGM *  PRDHI.SMSM.SITE.MODELPGM\n*                 MSAXFILE *  STDHI.SMHF.SITE.MSAXFILE\n*                 M4DMPINT *  CNDHI.SMIR.SITE.M4LIB\n*                 OMPATH   *  DSNHI.SVTI.DG%%.OMPATH\n*                 PL1LIB   :  LIBHI.SMSSM00L.P0000.PL1LIB\n*                 PROFILE  :\n*                 RECOVERY :  RECOVERY JCL MEMBERS\n*                 SCHEDDSS *  DSNHI.SVTI.DG%%.TEMP.SCHEDDSS\n*                 SCMAINT  *  CNDHI.SMSC.SITE.SCMAINT\n*                 SUBR     :\n*                 USLP     *  DSNHI.SVTI.DG%%.TEMP.USLP\n*\n* ELEMENT ITEMS:  THE NAME OF THE ITEM AS DELIVERED ON THE SUT.\n*                 SOME LIBRARY ITEMS ABOVE ARE DELIVERED WITH AN\n*                 ELEMENT ITEM OF '*       '.\n*           --->  GENERICS MAY BE USED:\n*                          * = VARIABLE NBR OF CHARACTERS\n*                          % = SINGLE POSITION\n*\n*\n* TARGET:         'TEST  '\n*                 'PROD  '\n*                 'BOTH  ' (OR LEAVE BLANK)\n*                 IF YOU SPECIFY PROD, YOU ARE NOT NOTIFIED IF ITEM\n*                 IS ONLY DELIVERED TO TEST, & VICE-VERSA.\n*\n* COMMENT:        A 32 CHARACTER COMMENT ABOUT YOUR ENTRY\n*\n*\n* ---------- -------- -------- ------ --------------------------------\n* RESP PARTY LIBRARY  ELEMENT  TARGET COMMENT\n* ---------- -------- -------- ------ --------------------------------\n  LNAME01    CLIST    INDFPL   PROD   FIRST PARTY LETTERS\n  LNAME01    CLIST    OML92    PROD   FIRST PARTY LETTERS - ALTER\n  LNAME01    COBLIB   PANADSEG\n  LNAME01    COBLIB   PASEGLST\n  userid     COBLIB   A2339C01        GTIF ADMISSION\n  userid     COBLIB   A2339C02        GTIF CHANGE PATIENT NBR\n  userid     COBLIB   A2339C03        GTIF REVISE\n  userid     COBLIB   A2339C04        GTIF TRANSFER\n  userid     COBLIB   A2339C05        GTIF DISCHARGE\n  userid     COBLIB   A2339C06        GTIF ENTER ORDER\n  userid     COBLIB   A2339C07        GTIF BABY\n  userid     COBLIB   A2339C08        GTIF REVISE\n  userid     LOAD     A2000*          MOVE TO SMOSM00L ONLY\n  userid     LOAD     A2339*          MOVE TO SMSCUSTL ONLY\n  userid     LOAD     A2339PFC        SVMC TIF SUPPRESSION USER EXIT\n  userid     LOAD     A2339PMT        SVMC MASTER FILE MAINT USER EXIT\n  userid     LOAD     A2339P01        SVMC ADT USER EXIT\n  userid     LOAD     A2339P02        GTIF ORDER ENTRY USER EXIT\n  userid     LOAD     A2339P03        GTIF USER EXIT\n  userid     LOAD     A2339TMF        SVMC MASTER FUNCTION TABLE\n  userid     LOAD     A2339T01        GTIF ADMIT DETAIL TABLE\n  userid     LOAD     A2339T02        GTIF CHANGE PAT NBR DETAIL TABLE\n  userid     LOAD     A2339T03        GTIF REVISE DETAIL TABLE\n  userid     LOAD     A2339T04        GTIF TRANSFER DETAIL TABLE\n  userid     LOAD     A2339T05        GTIF DISCHARGE DETAIL TABLE\n  userid     LOAD     A2339T06        GTIF ORDER ENTRY DETAIL TABLE\n  userid     LOAD     A2339T07        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T08        GTIF REVISE DETAIL TABLE\n  userid     LOAD     A2339T09        GTIF REVISE DETAIL TABLE\n* ---------- -------- -------- ------ --------------------------------\n  userid     LOAD     A2339T10        GTIF REVISE DETAIL TABLE\n  userid     LOAD     A2339T11        GTIF REVISE DETAIL TABLE\n  userid     LOAD     A2339T12        GTIF REVISE DETAIL TABLE\n  userid     LOAD     A2339T13        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T14        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T15        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T16        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T17        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T18        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T19        GTIF BABY DETAIL TABLE\n  userid     LOAD     A2339T20        GTIF ADMIT DETAIL TABLE\n  userid     LOAD     A2339T21        GTIF ADMIT DETAIL TABLE\n  userid     LOAD     A2339T22        GTIF TRANSFER DETAIL TABLE\n  userid     LOAD     A2339T23        SVMC DOCTOR DETAIL TABLE\n  userid     LOAD     CHPPCLNK        RTIF INTERFACE PROGRAM\n  userid     LOAD     CHPPID09        HL7 V3 TRANSACTION FORMATTER\n  userid     LOAD     CHPPIR13        1 ALIAS, DISCONNECTED      BTCH\n  userid     LOAD     CHPPIR14        1 ALIAS, DISCONNECTED      BTCH\n  userid     LOAD     CHPPPK00        4 ALIASES, 4 DISCONNECTED  ONLN\n  userid     LOAD     CHPPPSM7        3 ALIASES, 3 DISCONNECTED  ONLN\n  userid     LOAD     CHPPTIFM        GENERIC TIF INTERFACE PROGRAM\n  userid     LOAD     CHPPTMBX        15 ALIASES, 1 DISCONNECTED BTCH\n  userid     LOAD     CHPPUF51        FMS FINANCIAL DATA USER ENTRY\n  userid     LOAD     CHPPXP00        4 ALIASES, 4 DISCONNECTED  ONLN\n  userid     LOAD     CSIFSTUB        2 ALIASES, 1 DISCONNECTED  ONLN\n  userid     LOAD     DATETIME        4 ALIASES, 4 DISCONNECTED  BTCH\n  userid     LOAD     DFHNET          CUST BY SMS - DO NOT OVERRIDE\n* ---------- -------- -------- ------ --------------------------------\n  userid     LOAD     DFHPEP          CUST BY SMS - DO NOT OVERRIDE\n  userid     LOAD     DFHTDWTR        CUST BY SMS - DO NOT OVERRIDE\n  userid     LOAD     DFHXJCC         CUST BY SMS - DO NOT OVERRIDE\n  userid     LOAD     DFHXJCO         CUST BY SMS - DO NOT OVERRIDE\n  userid     LOAD     DFHZNEP         CUST BY SMS - DO NOT OVERRIDE\n  userid     LOAD     FLEXUT          2 ALIASES, 2 DISCONNECTED  BTCH\n  userid     LOAD     FLEXUT          2 ALIASES, 2 DISCONNECTED  ONLN\n  userid     LOAD     IGC00%%E        SVC - MOVE TO SYS2.MLPALIB\n  userid     LOAD     IGC00%%I        SVC - MOVE TO SYS2.MLPALIB\n  userid     LOAD     NDBIOTSK        VSDM ACCESS - SERIALIZATION\n  userid     LOAD     NDBIOVC         ZAPPED FOR U550 FIX - 1997289\n  userid     LOAD     NDBIOVC         ZAPPED FOR U550 FIX - 1999281\n  userid     LOAD     NDBXCTL         SMS VSDM READ MODULE\n  userid     LOAD     P2000DT1        PMS HL7 2.2 TIF DETAIL TABLE\n  userid     LOAD     P2000DT2        PMS HL7 2.2 TIF DETAIL TABLE\n  userid     LOAD     P2000DT3        PMS HL7 2.2 TIF DETAIL TABLE\n  userid     LOAD     P2000DT4        PMS HL7 2.2 TIF DETAIL TABLE\n  userid     LOAD     P2000HMB        HL7 2.2 MESSAGE BUILDING\n  userid     LOAD     QP000TC1        MODEL EAD DETAIL TABLE\n  userid     LOAD     R2000*          MOVE TO SMBSM00L ONLY\n  userid     LOAD     R2339*          MOVE TO SMSCUSTL ONLY\n  userid     LOAD     SMSDROPN        ZAPS APPLIED AT SMS GO-LIVE\n  userid     PANELS   TSSP7    PROD   ADD 1T AND 3T OPTIONS\n  userid     PROC     SISTDAPL PROD\n  userid     PROC     SMS*     PROD   MIGHT OVERLAY OUR SMS PROCS\n  userid     SYSIN    SMS*     PROD   MIGHT OVERLAY OUR SMS SYSIN\n  userid     SYSJOBS  PAP19A6$ PROD   PROPAGATE CHNGS TO OTHER PXADHCS\n  userid     SYSJOBS  PAP19A6$ PROD   USE SPLIT1 FILE\n  userid     SYSJOBS  PSMS*    PROD   MIGHT OVERLAY OUR SMS JOBS\n  LNAME02    COBLIB   CHPZCA00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZCC00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZCH00        COPIED INTO REG0745B-SMSACTV\n* ---------- -------- -------- ------ --------------------------------\n  LNAME02    COBLIB   CHPZCLFL        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZEN00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZG200        COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   CHPZIS00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZPE00        COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   CHPZPI00        COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   CHPZRL00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZSU00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   CHPZVI00        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   DMIBLOCK        COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   DMIBLOCK        COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   NDBCOM          COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   NDBCOM          COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   NDBINT          COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   NDBINT          COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   NDBSCB          COPIED INTO MDR0385B-COLOR BAR\n  LNAME02    COBLIB   NDBSCB          COPIED INTO REG0745B-SMSACTV\n  LNAME02    COBLIB   R2339PM3        SOFTMED RTIF PSR\n  LNAME03    COBLIB   CHPZCA00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZCC00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZCH00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZCLFL        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZEN00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZG200        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZIS00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZPE00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZPI00        COPIED INTO FOR VSDM LOOK-UP\n* ---------- -------- -------- ------ --------------------------------\n  LNAME03    COBLIB   CHPZRL00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZSU00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   CHPZVI00        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   DMIBLOCK        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   DMIBLOCK        COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBCOM          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBCOM          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBINT          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBINT          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBSCB          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    COBLIB   NDBSCB          COPIED INTO FOR VSDM LOOK-UP\n  LNAME03    LOAD     CHPPOW11        CLINDOC VSDM DATA GATHERER\n  LNAME04    SYSJOBS  GQD35A6$ PROD   GQ BACKUP JOB\n  LNAME04    SYSJOBS  GQP00A6$ PROD   GQ FREE/PURGE JOB\n  LNAME05    COBLIB   CHPCISRT PROD   CUSTOMIZED BY SMS: MOVR 14043\n  LNAME05    COBLIB   CHPCNEIC PROD   CUSTOMIZED BY SMS: MOVR 14043\n  LNAME05    LOAD     CHPPEIXX        CUSTOMIZED BY SMS: MOVR 14043\n  LNAME05    LOAD     CHPPEPXX        CUSTOMIZED BY SMS: MOVR 14043\n  LNAME05    LOAD     CHPPOP50        CUSTOMIZED BY SMS: MOVR 14043\n* ---------- -------- -------- ------ --------------------------------\n* RESP PARTY LIBRARY  ELEMENT  TARGET COMMENT\n* ---------- -------- -------- ------ --------------------------------\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT489/FILE489.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT489", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}