/**** REXX subcmac ****************************************************/
/*                                                                    */
/*  REXX-Programmm                      : subcmac                     */
/*   |                                                                */
/*   '-> Unterprogramme (intern)        : -----                       */
/*   |   Unterprogramme (extern)        : -----                       */
/*   |                                                                */
/*   '-> Messages                       : -----                       */
/*   |                                                                */
/*   '-> Panels                         : -----                       */
/*   |                                                                */
/*   '-> Tables                         : -----                       */
/*   |                                                                */
/*   '-> Skeletons                      : -----                       */
/*                                                                    */
/*  Edit macro to change system symbols in JCL stream which was       */
/*  called from header macro 'SUBC' or 'SUBCC'.                       */
/*                                                                    */
/*  Author: Karl-Heinz Doppelfeld                                     */
/*          Karl-Heinz.DoppelfeldÂ§Sparkassen-Informatik.de            */
/*                                                                    */
/**** REXX ************************************************************/

Address ISREDIT
"MACRO (control)"
  /**********************/
  /* housekeeping       */
  /**********************/
  "(status) = USER_STATE"         /* save current status  */
  "(lastln) = LINENUM .ZLAST"     /* last data line       */
  "BOUNDS"                        /* reset bounds         */
  "SCAN OFF"

  call GetSystemSymbols  /* get System Symbols from storage */

  currln = 1

  do while currln <= lastln
    "(data1) = LINE "currln       /* data1 = current line */

    currln = currln + 1
  end   /* do while */

  do jj = 1 to SymbCnt
    interpret "isredit C '&"symvName.jj"..' "symvCont.jj"'.' all"
    interpret "isredit C '&"symvName.jj".' "symvCont.jj" all"
    interpret "isredit C '&"symvName.jj"' "symvCont.jj" all"
  end

  Year = word(date(),3)
  lYear = Year-1
  days = date('D')
  lYearlDay = date('D',lYear||1231,'S')
  if (days = '1') then
    jYesterday = lYear||right(lYearlDay,3,'0')
  else
    jYesterday = Year||right(days-1,3,'0')

  jtoday = '20'date('J')

  isredit C '&&TODAY..' jtoday'.' all
  isredit C '&&TODAY.' jtoday all
  isredit C '&&TODAY' jtoday all

  isredit C '&&YESTERDAY..' jYesterday'.' all
  isredit C '&&YESTERDAY.' jYesterday all
  isredit C '&&YESTERDAY' jYesterday all


  "USER_STATE = (status)"  /* restore saved bounds steeing */
  if (control = 'YES') then
    nop
  else
    do
      "SUBMIT"
      "END"
    end

exit

GetSystemSymbols:
/*********************************************************************/
/*                                                                   */
/* get actual system-symbols from system symbol table                */
/*                                                                   */
/*********************************************************************/
cvt      = C2X(STORAGE(10,4))                   /* pointer to CVT    */
ecvt_P   = D2X(X2D(cvt)+X2D(8C))                /* pointer to ECVT   */
ecvt     = C2X(STORAGE(ecvt_P,4))               /* address ECVT      */
symt_P   = D2X(X2D(ecvt)+X2D(128))              /* pointer to SYMT   */
symt     = C2X(STORAGE(symt_P,4))               /* address SYMT      */
SymbCnt  = X2D(SUBSTR(C2X(STORAGE(symt,4)),5,4)) /* number of symbols*/
symtBase = D2X(X2D(symt)+X2D(4))                /* SYMT base address */

symt_I   = symtBase

do ii = 1 to SymbCnt
   symvOff = C2X(STORAGE(symt_I,16))          /* get offsets for var */
   symtVar = D2X(X2D(symtBase)+X2D(SUBSTR(symvOff,1,8)))
   symvLen = X2D(SUBSTR(symvOff,9,8))
   symvName.ii = STORAGE(symtVar,symvLen-1)

   symtCont = D2X(X2D(symtBase)+X2D(SUBSTR(symvOff,17,8)))
   symcLen   = X2D(SUBSTR(symvOff,25,8))
   symvCont.ii = STORAGE(symtCont,symcLen)

   symt_I = D2X(X2D(symt_I)+X2D(10))   /* POINTER TO ECVT */
end
return
