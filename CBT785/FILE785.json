{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012806000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE785.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE785.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x12'", "DS1TRBAL": "b'B\\x8a'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05V\\x00\\x07\\x05V\\x00\\t\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04M\\x00\\x00\\x01\\x08\\x13o\\x01\\x08\\x13o\\x101\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf7@@@'", "ispf": {"version": "04.77", "flags": 0, "createdate": "2008-05-15T00:00:00", "modifydate": "2008-05-15T10:31:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-477"}, "text": "REGULAR CBT TAPE - VERSION 477    FILE:  785\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT477.FILE785\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 345 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/15/08    10:31:07    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x02\\x01\\x08\\x13o\\x01\\x08\\x13o\\x10'\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-05-15T00:00:00", "modifydate": "2008-05-15T10:27:02", "lines": 29, "newlines": 29, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:    ICSF Status Monitor \u00ddVirus checked\u00a8\nFrom:       Karl-Heinz.Doppelfeld@Sparkassen-Informatik.de\nDate:       Wed, 14 May 2008 09:56:15 +0200\nTo:         sbgolob@cbttape.org\n\n\nHello Sam,\n\nAt the moment I send you an update for my ICSF Monitor and my\nlitte edit macro to use system symbols in JCL.\n\nThe submit macro are in real two REXX and one edit macro.  The\nREXXs are:\n\nSUBC  - to change any symbols and directly submit the\n        job.\nSUBCC - to change the symbols and show the final JCL for\n        checking. Both are using the edit macro #SUBCMAC.\n\nHave a nice day and all the best for you and your family.\n\nKind regards, Karl-Heinz.\n\nSparkassen Informatik GmbH & Co.KG\nEdmund-Rumpler-Stra\u00dfe 6c\n51149 K\u00f6ln\nTelefon: 02203/5039-3482\nTelefax: 02203/5039-9443482\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#SUBCMAC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00)\\x01\\x07\\x04_\\x01\\x073\\x0f\\x08%\\x00m\\x00(\\x00\\x00\\xd2\\xc8\\xc4\\xd6\\xd7\\xd7\\xd3@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2007-02-14T00:00:00", "modifydate": "2007-11-26T08:25:29", "lines": 109, "newlines": 40, "modlines": 0, "user": "KHDOPPL"}, "text": "/**** REXX subcmac ****************************************************/\n/*                                                                    */\n/*  REXX-Programmm                      : subcmac                     */\n/*   |                                                                */\n/*   '-> Unterprogramme (intern)        : -----                       */\n/*   |   Unterprogramme (extern)        : -----                       */\n/*   |                                                                */\n/*   '-> Messages                       : -----                       */\n/*   |                                                                */\n/*   '-> Panels                         : -----                       */\n/*   |                                                                */\n/*   '-> Tables                         : -----                       */\n/*   |                                                                */\n/*   '-> Skeletons                      : -----                       */\n/*                                                                    */\n/*  Edit macro to change system symbols in JCL stream which was       */\n/*  called from header macro 'SUBC' or 'SUBCC'.                       */\n/*                                                                    */\n/*  Author: Karl-Heinz Doppelfeld                                     */\n/*          Karl-Heinz.Doppelfeld\u00a7Sparkassen-Informatik.de            */\n/*                                                                    */\n/**** REXX ************************************************************/\n\nAddress ISREDIT\n\"MACRO (control)\"\n  /**********************/\n  /* housekeeping       */\n  /**********************/\n  \"(status) = USER_STATE\"         /* save current status  */\n  \"(lastln) = LINENUM .ZLAST\"     /* last data line       */\n  \"BOUNDS\"                        /* reset bounds         */\n  \"SCAN OFF\"\n\n  call GetSystemSymbols  /* get System Symbols from storage */\n\n  currln = 1\n\n  do while currln <= lastln\n    \"(data1) = LINE \"currln       /* data1 = current line */\n\n    currln = currln + 1\n  end   /* do while */\n\n  do jj = 1 to SymbCnt\n    interpret \"isredit C '&\"symvName.jj\"..' \"symvCont.jj\"'.' all\"\n    interpret \"isredit C '&\"symvName.jj\".' \"symvCont.jj\" all\"\n    interpret \"isredit C '&\"symvName.jj\"' \"symvCont.jj\" all\"\n  end\n\n  Year = word(date(),3)\n  lYear = Year-1\n  days = date('D')\n  lYearlDay = date('D',lYear||1231,'S')\n  if (days = '1') then\n    jYesterday = lYear||right(lYearlDay,3,'0')\n  else\n    jYesterday = Year||right(days-1,3,'0')\n\n  jtoday = '20'date('J')\n\n  isredit C '&&TODAY..' jtoday'.' all\n  isredit C '&&TODAY.' jtoday all\n  isredit C '&&TODAY' jtoday all\n\n  isredit C '&&YESTERDAY..' jYesterday'.' all\n  isredit C '&&YESTERDAY.' jYesterday all\n  isredit C '&&YESTERDAY' jYesterday all\n\n\n  \"USER_STATE = (status)\"  /* restore saved bounds steeing */\n  if (control = 'YES') then\n    nop\n  else\n    do\n      \"SUBMIT\"\n      \"END\"\n    end\n\nexit\n\nGetSystemSymbols:\n/*********************************************************************/\n/*                                                                   */\n/* get actual system-symbols from system symbol table                */\n/*                                                                   */\n/*********************************************************************/\ncvt      = C2X(STORAGE(10,4))                   /* pointer to CVT    */\necvt_P   = D2X(X2D(cvt)+X2D(8C))                /* pointer to ECVT   */\necvt     = C2X(STORAGE(ecvt_P,4))               /* address ECVT      */\nsymt_P   = D2X(X2D(ecvt)+X2D(128))              /* pointer to SYMT   */\nsymt     = C2X(STORAGE(symt_P,4))               /* address SYMT      */\nSymbCnt  = X2D(SUBSTR(C2X(STORAGE(symt,4)),5,4)) /* number of symbols*/\nsymtBase = D2X(X2D(symt)+X2D(4))                /* SYMT base address */\n\nsymt_I   = symtBase\n\ndo ii = 1 to SymbCnt\n   symvOff = C2X(STORAGE(symt_I,16))          /* get offsets for var */\n   symtVar = D2X(X2D(symtBase)+X2D(SUBSTR(symvOff,1,8)))\n   symvLen = X2D(SUBSTR(symvOff,9,8))\n   symvName.ii = STORAGE(symtVar,symvLen-1)\n\n   symtCont = D2X(X2D(symtBase)+X2D(SUBSTR(symvOff,17,8)))\n   symcLen   = X2D(SUBSTR(symvOff,25,8))\n   symvCont.ii = STORAGE(symtCont,symcLen)\n\n   symt_I = D2X(X2D(symt_I)+X2D(10))   /* POINTER TO ECVT */\nend\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE785": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04M\\x00\\x00\\x01\\x08\\x13o\\x01\\x08\\x13o\\x100\\x00\\x06\\x00\\x06\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf7@@@'", "ispf": {"version": "04.77", "flags": 0, "createdate": "2008-05-15T00:00:00", "modifydate": "2008-05-15T10:30:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "CBT-477"}, "text": "//***FILE 785 is from Karl-Heinz Doppelfeld and contatins 2 REXXes  *   FILE 785\n//*           and an edit macro to substitute system symbols into   *   FILE 785\n//*           JCL.  The package is called JCLSYMB.                  *   FILE 785\n//*                                                                 *   FILE 785\n//*     email:  Karl-Heinz.Doppelfeld@Sparkassen-Informatik.de      *   FILE 785\n//*                                                                 *   FILE 785\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SUBC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00 \\x01\\x07\\x04_\\x01\\x073\\x0f\\t!\\x00^\\x00;\\x00\\x00\\xd2\\xc8\\xc4\\xd6\\xd7\\xd7\\xd3@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2007-02-14T00:00:00", "modifydate": "2007-11-26T09:21:20", "lines": 94, "newlines": 59, "modlines": 0, "user": "KHDOPPL"}, "text": "/**** REXX subcc ******************************************************/\n/*                                                                    */\n/*  REXX-Programmm                      : subc                        */\n/*   |                                                                */\n/*   '-> Unterprogramme (intern)        : -----                       */\n/*   |   Unterprogramme (extern)        : subcmac                     */\n/*   |                                                                */\n/*   '-> Messages                       : -----                       */\n/*   |                                                                */\n/*   '-> Panels                         : -----                       */\n/*   |                                                                */\n/*   '-> Tables                         : -----                       */\n/*   |                                                                */\n/*   '-> Skeletons                      : -----                       */\n/*                                                                    */\n/*  Edit macro to change system symbols in JCL stream. This macro     */\n/*  only allocates a temporay dataset, copies the shown JCL, insert   */\n/*  a '/*JOBPARM SYSAFF=....' statement (to secure that the job runs  */\n/*  on the local system) and at least calls ISPEXEC EDIT with         */\n/*  macro 'subcmac' to change system symbols.                         */\n/*                                                                    */\n/*  The 'subcmac' also allow the usage of the date variables          */\n/*  &TODAY and &YESTERDAY.                                            */\n/*                                                                    */\n/*  I have also supplied a REXX called 'subcc' which does the same    */\n/*  as described before but don't submit the changed JCL directly.    */\n/*  The resulting JCL will be displayed for checking purposes and you */\n/*  must submit the JCL manually.                                     */\n/*                                                                    */\n/*                                                                    */\n/*  Author: Karl-Heinz Doppelfeld                                     */\n/*          Karl-Heinz.Doppelfeld\u00a7Sparkassen-Informatik.de            */\n/*                                                                  */*/\n/**** REXX ************************************************************/\n\nSYSNAME  = MVSVAR('SYSNAME')    /* get system name      */\n\njobuser = USERID()              /* get uid              */\n\nADDRESS ISREDIT\n\"MACRO (PARM)\"\n\"(status) = USER_STATE\"         /* save current bounds  */\n\"(lastln) = LINENUM .ZLAST\"     /* last data line       */\n\nx = msg('off')\naddress tso \"delstack\"\naddress tso \"newstack\"\naddress tso \"DROPBUF\"\naddress tso \"MAKEBUF\"\n\nADDRESS TSO \"FREE DD($tmpjob)\"\nADDRESS TSO \"ALLOC DD($tmpjob) UNIT(sysda)\",\n            \"space(5 5) tracks lrecl(80) recfm(f b)\"\nif (rc > 0) then\n  do\n    zedsmsg = 'TempFile not allocated'\n    zedlmsg = 'Temporary file could not allocated.',\n              'DDname $tmpjob already allocated.'\n    Address ISPEXEC \"SETMSG MSG(ISRZ001)\"  /* msg - with alarm */\n    exit\n  end\n\n/*  Here you can insert a job card, otherwise the jobcard will\n    be generated by submit and you must specify a job character\n\nqueue \"//\"jobuser\"E JOB 0000,\"\nqueue \"//             \"jobuser\",  **JOB STMT generated by SUBC**\"\nqueue \"//             NOTIFY=\"jobuser\",CLASS=A,             \"\nqueue \"//             MSGLEVEL=(1,1),USER=\"jobuser\n*/\n\nqueue \"//*\"\nqueue \"/*JOBPARM SYSAFF=\"sysname\n\ncurrln = 1\nDo while currln <= lastln\n  \"(data1) = LINE \"currln     /* data1 = current line */\n  queue data1\n  currln = currln + 1\nEnd   /* do while */\nqueue ''\n\naddress TSO \"EXECIO * DISKW $tmpjob (FINIS\"\n\nADDRESS ISPEXEC \"LMINIT DATAID(DATAID) DDNAME($tmpjob)\"\n\nsubcparm = 'NO'\n\naddress ispexec \"EDIT DATAID(\"DATAID\")\",\n        \"CONFIRM(NO) PARM(subcparm) MACRO(#subcmac)\"\nADDRESS ISPEXEC \"LMFREE DATAID(\"DATAID\")\"\nADDRESS TSO     \"FREE file($tmpjob)\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUBCC": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x01\\x01\\x07\\x04_\\x01\\x073\\x0f\\t\\x08\\x00_\\x00;\\x00\\x00\\xd2\\xc8\\xc4\\xd6\\xd7\\xd7\\xd3@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2007-02-14T00:00:00", "modifydate": "2007-11-26T09:08:01", "lines": 95, "newlines": 59, "modlines": 0, "user": "KHDOPPL"}, "text": "/**** REXX subc *******************************************************/\n/*                                                                    */\n/*  REXX-Programmm                      : subc                        */\n/*   |                                                                */\n/*   '-> Unterprogramme (intern)        : -----                       */\n/*   |   Unterprogramme (extern)        : subcmac                     */\n/*   |                                                                */\n/*   '-> Messages                       : -----                       */\n/*   |                                                                */\n/*   '-> Panels                         : -----                       */\n/*   |                                                                */\n/*   '-> Tables                         : -----                       */\n/*   |                                                                */\n/*   '-> Skeletons                      : -----                       */\n/*                                                                    */\n/*  Edit macro to change system symbols in JCL stream. This macro     */\n/*  only allocates a temporay dataset, copies the shown JCL, insert   */\n/*  a '/*JOBPARM SYSAFF=....' statement (to secure that the job runs  */\n/*  on the local system) and at least calls ISPEXEC EDIT with         */\n/*  macro 'subcmac' to change system symbols.                         */\n/*                                                                    */\n/*  The 'subcmac' also allow the usage of the date variables          */\n/*  &TODAY and &YESTERDAY.                                            */\n/*                                                                    */\n/*  I have also supplied a REXX called 'subcc' which does the same    */\n/*  as described before but don't submit the changed JCL directly.    */\n/*  The resulting JCL will be displayed for checking purposes and you */\n/*  must submit the JCL manually.                                     */\n/*                                                                    */\n/*                                                                    */\n/*  Author: Karl-Heinz Doppelfeld                                     */\n/*          Karl-Heinz.Doppelfeld\u00a7Sparkassen-Informatik.de            */\n/*                                                                  */*/\n/**** REXX ************************************************************/\n\nSYSNAME  = MVSVAR('SYSNAME')    /* get system name      */\n\njobuser = USERID()              /* get uid              */\n\nADDRESS ISREDIT\n\"MACRO (PARM)\"\n\"(status) = USER_STATE\"         /* save current bounds  */\n\"(lastln) = LINENUM .ZLAST\"     /* last data line       */\n\nx = msg('off')\naddress tso \"delstack\"\naddress tso \"newstack\"\naddress tso \"DROPBUF\"\naddress tso \"MAKEBUF\"\n\nADDRESS TSO \"FREE DD($tmpjob)\"\nADDRESS TSO \"ALLOC DD($tmpjob) UNIT(sysda)\",\n            \"space(5 5) tracks lrecl(80) recfm(f b)\"\nif (rc > 0) then\n  do\n    zedsmsg = 'TempFile not allocated'\n    zedlmsg = 'Temporary file could not allocated.',\n              'DDname $tmpjob already allocated.'\n    Address ISPEXEC \"SETMSG MSG(ISRZ001)\"  /* msg - with alarm */\n    exit\n  end\ntrace off\n\n/*  Here you can insert a job card, otherwise the jobcard will\n    be generated by submit and you must specify a job character\n\nqueue \"//\"jobuser\"E JOB 0000,\"\nqueue \"//             \"jobuser\",  **JOB STMT generated by SUBC**\"\nqueue \"//             NOTIFY=\"jobuser\",CLASS=A,             \"\nqueue \"//             MSGLEVEL=(1,1),USER=\"jobuser\n*/\n\nqueue \"//*\"\nqueue \"/*JOBPARM SYSAFF=\"sysname\n\ncurrln = 1\nDo while currln <= lastln\n  \"(data1) = LINE \"currln     /* data1 = current line */\n  queue data1\n  currln = currln + 1\nEnd   /* do while */\nqueue ''\n\naddress TSO \"EXECIO * DISKW $tmpjob (FINIS\"\n\nADDRESS ISPEXEC \"LMINIT DATAID(DATAID) DDNAME($tmpjob)\"\n\nsubcparm = 'YES'\n\naddress ispexec \"EDIT DATAID(\"DATAID\")\",\n        \"CONFIRM(NO) PARM(subcparm) MACRO(#subcmac)\"\nADDRESS ISPEXEC \"LMFREE DATAID(\"DATAID\")\"\nADDRESS TSO     \"FREE file($tmpjob)\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT785/FILE785.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT785", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}