{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011142000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE059.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE059.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x0e'", "DS1TRBAL": "b'\\x06\\x82'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00i\\x00\\x01\\x00i\\x00\\x04\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x925\\x0f\\x00\\x95\\x08\\x0f\\x16\\x07\\x00-\\x00\\x18\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1995-03-21T16:07:00", "lines": 45, "newlines": 24, "modlines": 0, "user": "SBGCSC"}, "text": "  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n              REFERENCE INDEX\n             ----------------\n\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n  MEMBER    Description or purpose\n  ========  ============================================================\n  --------  ------------------------------------------------------------\n  $DOC      This member: describes the contents of the PDS and where\n            other members need to be placed.\n  IPL       CLIST that invokes IPLDATA program and parses the\n            information returned in a TSO variable and displays it\n            on ISPF panel IPLINFO.\n  IPLPUT    CLIST that invokes IPLDATA program and writes the\n            information returned in a TSO variable to the terminal.\n            (UPDATE CALL statement with load library name where you\n            linkedit IPLDATA)\n  ASMJCL    Sample JCL to assemble and link IPLDATA.\n            (UPDATE source and load library names)\n  JULSUB    Same as file66/file133 from Alan C. Field.\n            This is a subroutine used to do calendar conversions.\n  IPLDATA   Assembler program to follow control blocks and retrive\n            information about the last IPL. This is a modified version\n            of LASTIPL from file300/file360.\n            Instead of displaying information\n            it puts the data into a tso variable.\n  IPLINFO   ISPF panel that you copy to your ISPPLIB concatenation.\n\n\n  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n  If you have any questions or comments, please contact:\n\n\n          Ken Tomiak\n          City of New York\n          DOITT\n          11 Metrotech Center - 3rd Floor\n          Brooklyn, NY\n          (718) 403-8612\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMJCL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x925\\x0f\\x00\\x926O\\x14W\\x00<\\x00!\\x00$\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1992-12-29T14:57:00", "lines": 60, "newlines": 33, "modlines": 36, "user": "KETCSC"}, "text": "//jobname JOB (acct,room),'programmer-name',\n//            MSGCLASS=x,CLASS=a,REGION=4096K,TIME=1200,\n//            NOTIFY=&SYSUID     valid in ESA V4.1\n//*\n//* LIB: source.pds(ASMJCL)\n//* GDE: XXXX-XXXX ASSEMBLER USERS GUIDE\n//* DOC: THIS JOB ASSEMBLES THE JULSUB AND IPLDATA PROGRAMS.\n//* CHG: LOCATE LOWERCASE AND CHANGE WITH AN APPROPRIATE VALUE.\n//*\n//ASM1    EXEC PGM=IEV90,PARM='OBJECT,NODECK'\n//SYSIN    DD  DISP=SHR,DSN=user.source.library(JULSUB)\n/*\n//SYSLIB   DD  DSN=SYS1.MODGEN,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//             SPACE=(800,(500,500)),DCB=(BLKSIZE=800)\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//*\n//LKED1   EXEC PGM=IEWL,REGION=1024K,\n//             PARM='AC=1,SIZE=(900K,124K),XREF,MAP,LET',\n//             COND=(4,LT,ASM1)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//            DD  *\n  NAME JULSUB(R)\n/*\n//SYSLMOD  DD  DISP=SHR,DSN=user.loadlib\n//SYSLIB   DD  DISP=SHR,DSN=user.loadlib\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,50))\n//*\n//ASM2    EXEC PGM=IEV90,PARM='OBJECT,NODECK'\n//SYSIN    DD  DISP=SHR,DSN=user.source.library(IPLDATA)\n/*\n//SYSLIB   DD  DSN=SYS1.MODGEN,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//             SPACE=(800,(500,500)),DCB=(BLKSIZE=800)\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)\n//*\n//LKED2   EXEC PGM=IEWL,REGION=1024K,\n//             PARM='AC=1,SIZE=(900K,124K),XREF,MAP,LET',\n//             COND=(4,LT,ASM2)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//            DD  *\n  NAME IPLDATA(R)\n/*\n//SYSLMOD  DD  DISP=SHR,DSN=user.loadlib\n//SYSLIB   DD  DISP=SHR,DSN=user.loadlib\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,50))\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IDPANEL": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x92!\\x9f\\x00\\x93\\x00o\\x15\\x14\\x00;\\x00\\x06\\x00\\x00\\xe2`\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1992-08-06T00:00:00", "modifydate": "1993-01-06T15:14:00", "lines": 59, "newlines": 6, "modlines": 0, "user": "S-GOLOB"}, "text": ")ATTR DEFAULT(%+_)\n    % TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n    \u00ac TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n    + TYPE(TEXT)  INTENS(HIGH) COLOR(PINK)\n)BODY\n\u00ac----------------------- \u00acISPF/PDF Basic Variable Display  ---------------------\n%OPTION  ===>_ZCMD                                                             +\n                    %USERID     - &ZUSER\n                    %PREFIX     - &ZPREFIX\n                    %SYSID      - &SYSID\n  \u00acSCREEN - &ZSCREEN                             \u00acSCR DEPTH - &ZSCREEND\n                    +TIME       - &ZTIME\n                    +DATE       - &ZDATE\n                    +JULIAN     - &ZJDATE\n\n                    %PROCEDURE  - &ZLOGON\n                    %APPLID     - &ZAPPLID\n\n                    +TERMINAL   - &ZTERM\n                    +PF KEYS    - &ZKEYS\n                    +COLORS     - &ZCOLORS\n\n                %ISPF Environment   -   &ZENVIR\n                %Log  Dataset - &ZLOGNAME\n                %List Dataset - &ZLSTNAME\n)INIT\n  VPUT (ZHTOP,ZHINDEX,ZSCLMPRJ) PROFILE /*             @L1C*/\n  IF (&SYSID = &Z)\n    .RESP = ENTER\n    &ZCMD = SYD\n)PROC\n&ZQ = &Z\n  IF (&ZCMD \u00ac= ' ')\n    &ZQ = TRUNC(&ZCMD,'.')\n    IF (&ZQ = ' ')\n      .MSG = ISRU000\n  &ZSEL = TRANS( &ZQ\n              SYD,'CMD(%SMCASID)'\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISPYXDR) PARM(ISR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                9,'PANEL(ISRDIIS)'\n               10,'PGM(ISRSCLM) NOCHECK'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                O,'PANEL(NEWPNL) NEWAPPL(NONI)'\n                P,'PANEL(PDS@PRIM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IPL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x90\\x03\\x7f\\x00\\x925\\x0f\\x13T\\x00\\x1d\\x00\\x04\\x00\\x1d\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1990-02-06T00:00:00", "modifydate": "1992-12-15T13:54:00", "lines": 29, "newlines": 4, "modlines": 29, "user": "KETCSC"}, "text": "PROC 0\n/*********************************************************************/\n/*                                                                   */\n/* LIB: xxxxxxxx.clist(IPL)                                          */\n/* DOC: THIS CLIST POPS UP A DISPLAY WITH IPL RELATED INFORMATION.   */\n/* CHG: LOCATE LOWERCASE AND CHANGE WITH AN APPROPRIATE VALUE.       */\n/*                                                                   */\n/*********************************************************************/\n    CONTROL NOFLUSH NOMSG MAIN\n    ISPEXEC CONTROL ERRORS RETURN\n    ISPEXEC CONTROL DISPLAY LOCK\n    ISPEXEC DISPLAY PANEL(IPLINFO)\n    SET &IPLDAY = &STR( )\n    CALL 'user.loadlib(IPLDATA)'\n    SET &IPLSYS = &SUBSTR(7:10,&NRSTR(&IPLTXT))\n    SET &IPLGDT = &SUBSTR(21:40,&NRSTR(&IPLTXT))\n    SET &IPLDAY = &SUBSTR(46:57,&NRSTR(&IPLTXT))\n    SET &IPLJDT = &SUBSTR(68:73,&NRSTR(&IPLTXT))\n    SET &IPLTIM = &SUBSTR(80:84,&NRSTR(&IPLTXT))\n    SET &IPLCUA = &SUBSTR(91:93,&NRSTR(&IPLTXT))\n    SET &IPLNAME = &SUBSTR(102:107,&NRSTR(&IPLTXT))\n    SET &IPLFMID = &SUBSTR(114:122,&NRSTR(&IPLTXT))\n    SET &IPLLVL  = &SUBSTR(129:136,&NRSTR(&IPLTXT))\n    SET &IPLRLSE = &SUBSTR(146:149,&NRSTR(&IPLTXT))\n    SET &IPLIO   = &SUBSTR(161:162,&NRSTR(&IPLTXT))\n    SET &IPLNUC  = &SUBSTR(172:172,&NRSTR(&IPLTXT))\n    SET &IPLCPU  = &SUBSTR(178:182,&NRSTR(&IPLTXT))\n    ISPEXEC DISPLAY PANEL(IPLINFO)\n    EXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IPLDATA": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x925\\x0f\\x00\\x925\\x0f\\x13G\\x01L\\x01L\\x00\\x00\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1992-12-15T13:47:00", "lines": 332, "newlines": 332, "modlines": 0, "user": "KETCSC"}, "text": "IPLDATA  CSECT\n         PRINT NOGEN\n         STM   R14,R12,12(R13)\n         BALR  R12,0                   LOAD REGISTER 12 WITH ENTRY\n         USING *,R12\n         ST    R13,SAVEAREA+4\n         LA    R15,SAVEAREA\n         ST    R15,9(,R13)\n         LA    R13,SAVEAREA\n*\n* WORKING CODE GOES HERE\n         L     R15,CVTPTR\n         L     R2,196(,R15)\n* DATE (JULIAN)\n         LA    R3,340(,R2)\n         MVC   IPLDATE,JULPATT\n         ED    IPLDATE,1(R3)\n* DATE (GREGORIAN)\n         BAL   R8,DATECONV\n* TIME\n         LA    R4,336(,R2)\n         L     R1,0(,R4)\n         SLR   R0,R0\n         D     R0,=F'360000'\n         CVD   R1,DOUBLE\n         OI    DOUBLE+7,X'0F'\n         UNPK  IPLTIME(2),DOUBLE+6(2)\n         LR    R1,R0\n         SLR   R0,R0\n         D     R0,=F'6000'\n         CVD   R1,DOUBLE\n         OI    DOUBLE+7,X'0F'\n         UNPK  IPLTIME+3(2),DOUBLE+6(2)\n* IPLTEXT:\n         L     R9,CVTPTR\n         S     R9,=F'256'\n         USING CVTFIX,R9\n         L     R10,CVTSMCA\n         USING SMCABASE,R10\n* IPLTEXT: SYSID\n         MVC   IPLID,SMCASID\n* IPLTEXT: FMID\n         MVC   IPLFMID,CVTPRODI\n* IPLTEXT: PRODUCT LEVEL\n         MVC   IPLLVL,CVTPRODN\n* IPLTEXT: RELEASE\n         MVC   IPLRLSE,CVTRELNO\n* IPLTEXT: CPU MODEL\n         MVC   CPUMODEL(2),CVTMDL\n         L     R4,CPUMOD\n         SLL   R4,4\n         ST    R4,CPUMOD\n         OI    CPUMOD+3,X'0F'\n         UNPK  IPLCPU(4),CPUMOD+1(3)\n         OI    IPLCPU+3,X'F0'\n* IPLTEXT: SYSRES VOLUME\n         L     R8,CVTPTR\n         USING CVTMAP,R8\n         L     R5,CVTSYSAD\n         USING UCBOB,R5\n         MVC   IPLVOL,UCBVOLI\n* IPLTEXT: SYSRES NAME\n         MVC   IPLCUA,UCBNAME\n         L     R7,CVTEXT2\n         USING CVTXTNT2,R7\n* IPLTEXT: IO CONFIG MEMBER\n         MVC   IPLIO,CVTIOCID\n* IPLTEXT: NUCLEUS NUMBER\n         MVC   IPLNUC,CVTNUCLS\n* IPLTEXT: DAY OF WEEK\n         MVC   IPLDAY(12),PARM3+20  DAY OF WEEK\n* IPLTEXT: JULIAN\n         MVC   IPLJUL,IPLDATE\n* IPLTEXT: GREGORIAN\n         MVC   IPLGREG,PARM3       MONTH DAY YEAR\n* IPLTEXT: TIME\n         MVC   IPLTM,IPLTIME\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLDATE                                       *\n***********************************************************************\n*\n         L     R15,CVTTVT\n         L     R15,TSVTVACC-TSVT(,R15)\n*\n         LTR   R15,R15\n         BNZ   CALL441\nLINK441  LINK  EP=IKJCT441,                                            X\n               PARAM=(ECODE,                                           X\n               IPLDTNMP,                                               X\n               IPLDTNML,                                               X\n               IPLDATEP,                                               X\n               IPLDATEL,                                               X\n               TOKEN),                                                 X\n               VL=1\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLTIME                                       *\n***********************************************************************\n*\n         L     R15,CVTTVT\n         L     R15,TSVTVACC-TSVT(,R15)\n*\n         LTR   R15,R15\n         BNZ   CALL441\n         LINK  EP=IKJCT441,                                            X\n               PARAM=(ECODE,                                           X\n               IPLTMEMP,                                               X\n               IPLTMEML,                                               X\n               IPLTIMEP,                                               X\n               IPLTIMEL,                                               X\n               TOKEN),                                                 X\n               VL=1\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLTXTE                                       *\n***********************************************************************\n*\n         L     R15,CVTTVT\n         L     R15,TSVTVACC-TSVT(,R15)\n*\n         LTR   R15,R15\n         BNZ   CALL441\n         LINK  EP=IKJCT441,                                            X\n               PARAM=(ECODE,                                           X\n               IPLTXTMP,                                               X\n               IPLTXTML,                                               X\n               IPLTXTEP,                                               X\n               IPLTXTEL,                                               X\n               TOKEN),                                                 X\n               VL=1\n         B     RET441\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLDATE                                       *\n***********************************************************************\n*\nCALL441  CALL  (15),                                                   X\n               (ECODE,                                                 X\n               IPLDTNMP,                                               X\n               IPLDTNML,                                               X\n               IPLDATEP,                                               X\n               IPLDATEL,                                               X\n               TOKEN),                                                 X\n               VL\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLTIME                                       *\n***********************************************************************\n*\n         L     R15,CVTTVT\n         L     R15,TSVTVACC-TSVT(,R15)\n         CALL  (15),                                                   X\n               (ECODE,                                                 X\n               IPLTMEMP,                                               X\n               IPLTMEML,                                               X\n               IPLTIMEP,                                               X\n               IPLTIMEL,                                               X\n               TOKEN),                                                 X\n               VL\n*\n***********************************************************************\n*  CODE TO ADD VARIABLE IPLTXTE                                       *\n***********************************************************************\n*\n         L     R15,CVTTVT\n         L     R15,TSVTVACC-TSVT(,R15)\n         CALL  (15),                                                   X\n               (ECODE,                                                 X\n               IPLTXTMP,                                               X\n               IPLTXTML,                                               X\n               IPLTXTEP,                                               X\n               IPLTXTEL,                                               X\n               TOKEN),                                                 X\n               VL\nRET441   LTR   R15,R15\n         BNZ   ERRORRTN\n*\n***********************************************************************\n*                                                                     *\n*        CLEANUP AREAS GETMAINED BY PARS,                             *\n*           SET RETURN CODE, RESTORE REGISTERS AND                    *\n*           RETURN TO CALLER                                          *\n*                                                                     *\n***********************************************************************\n*\nRETURN   DS    0H\nERRORRTN DS    0H\n         L     R13,4(,R13)\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n*\n***********************************************************************\n*                                                                     *\n*         DATE CONVERSION                                             *\n*                                                                     *\n***********************************************************************\n*\nDATECONV LA    R1,3\n         ST    R1,PARM2\n         MVC   PARM1(4),0(R3)\n         LA    R1,16+128\n         ST    R1,PARM4\n         LA    R1,PARMPTRS\n         LA    R14,PARM1\n         ST    R14,0(,R1)\n         LA    R14,PARM2\n         ST    R14,4(,R1)\n         LA    R14,PARM3\n         ST    R14,8(,R1)\n         LA    R14,PARM4\n         ST    R14,12(,R1)\n         LA    R14,PARM5\n         ST    R14,16(,R1)\n         L     R15,=V(JULSUB)\n         BALR  R14,R15\n         BR    R8\n*\n***********************************************************************\n*                                                                     *\n*         DATA AREAS                                                  *\n*                                                                     *\n***********************************************************************\n*\n         LTORG\n*\nJULPATT  DC    X'4020204B202020'\nJULDATE  DS    CL7\n*\n*********************** WORKAREAS *************************************\n*\n******** GREGORIAN DATE **********\n*\nIPLDTNM  DC    CL7'IPLDATE'\nIPLDTNML DC    F'7'\nIPLDTNMP DC    A(IPLDTNM)\nIPLDATE  DC    CL7'YY.DDD'\nIPLDATEL DC    F'7'\nIPLDATEP DC    A(IPLDATE)\n*\n******** GREGORIAN TIME **********\n*\nIPLTMEM  DC    CL7'IPLTIME'\nIPLTMEML DC    F'7'\nIPLTMEMP DC    A(IPLTMEM)\nIPLTIME  DC    CL6'HH:MM'\nIPLTIMEL DC    F'6'\nIPLTIMEP DC    A(IPLTIME)\n*\n******** IPL DATA ****************\n*\nIPLTXTM  DC    CL6'IPLTXT'\nIPLTXTML DC    F'6'\nIPLTXTMP DC    A(IPLTXTM)\nIPLTXTE  DS    0C\n         DC    CL6'SYSID='\nIPLID    DS    CL4' '\n         DC    CL10' GREGDATE='\nIPLGREG  DS    CL20\n         DC    CL5' DAY='\nIPLDAY   DC    CL12' '\n         DC    CL9' JULDATE='\nIPLJUL   DC    CL7' '\n         DC    CL6' TIME='\nIPLTM    DC    CL6' '\n         DC    CL5' CUA='\nIPLCUA   DC    CL3' '\n         DC    CL8' VOLSER='\nIPLVOL   DC    CL6' '\n         DC    CL6' FMID='\nIPLFMID  DC    CL8' '\n         DC    CL7' LEVEL='\nIPLLVL   DC    CL8' '\n         DC    CL9' RELEASE='\nIPLRLSE  DC    CL4' '\n         DC    CL11' IO CONFIG='\nIPLIO    DC    CL2' '\n         DC    CL9' NUCLEUS='\nIPLNUC   DC    CL1' '\n         DC    CL5' CPU='\nIPLCPU   DC    CL4' '\nIPLTXTEL DC    A(IPLTXTEL-IPLTXTE)\nIPLTXTEP DC    A(IPLTXTE)\n*\n******** OTHER AREAS *************\n*\nCPUMOD   DS    0F\n         DC    X'0000'\nCPUMODEL DS    CL2\nTOKEN    DC    F'0'\nECODE    DC    A(TSVEUPDT)\nSAVEAREA DS    18F\nDOUBLE   DS    D\n*\n         DS    0D\nPARMPTRS DS    5F\nPARM1    DS    F\nPARM2    DS    F\nPARM4    DS    F\nPARM3    DS    CL32\nPARM5    DS    32D\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n         IEESMCA\n*\n*        PRINT GEN\n         CVT   DSECT=YES,PREFIX=YES,LIST=YES\n         PRINT NOGEN\n*\nUCBDSECT DSECT\n         IEFUCBOB\n*\n         IKJTSVT\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IPLINFO": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x925\\x0f\\x00\\x925\\x0f\\x139\\x00\\x10\\x00\\x10\\x00\\x00\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1992-12-15T13:39:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "KETCSC"}, "text": ")BODY Expand(\\\\)\n%-\\-\\- IPLed System &SYSID = &IPLCPU -\\-\\-\n%\n+          TODAY                      LAST IPL\n+     Julian:%&ZJDATE   +   Julian:%&IPLJDT    +Day:%&IPLDAY\n+  Gregorian:%&ZDATE    +Gregorian:%&IPLGDT\n+       Time:%&ZTIME    +     Time:%&IPLTIM\n+                       +     Unit:%&IPLCUA\n+                       +   Volser:%&IPLNAME\n+                       +     FMID:%&IPLFMID\n+                       +  Product:%&IPLLVL    +Release:%%&IPLRLSE\n+                       +IO Config:%&IPLIO     +Nucleus:%0&IPLNUC\n%\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IPLPUT": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x925\\x0f\\x00\\x925\\x0f\\x13X\\x00\\r\\x00\\r\\x00\\x00\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1992-12-15T13:58:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "KETCSC"}, "text": "PROC 0\n/*********************************************************************/\n/*                                                                   */\n/* LIB: xxxxxxxx.clist(IPLPUT)                                       */\n/* DOC: THIS CLIST WRITES IPL RELATED INFORMATION TO THE TERMINAL.   */\n/* CHG: LOCATE LOWERCASE AND CHANGE WITH AN APPROPRIATE VALUE.       */\n/*                                                                   */\n/*********************************************************************/\n    CONTROL NOFLUSH NOMSG MAIN\n    SET &IPLDAY = &STR( )\n    CALL 'user.loadlib(IPLDATA)'\n    WRITE &NRSTR(&IPLTXT)\n    EXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JULSUB": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x925\\x0f\\x00\\x925\\x0f\\x13C\\x022\\x022\\x00\\x00\\xd2\\xc5\\xe3\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-15T00:00:00", "modifydate": "1992-12-15T13:43:00", "lines": 562, "newlines": 562, "modlines": 0, "user": "KETCSC"}, "text": "         TITLE '   J U L S U B   '\n************************************************************\n*                                                          *\n*        'JULSUB'                                          *\n*                                                          *\n************************************************************\n         SPACE\n*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.\n*        INSTALLATION. PRC COMPUTER CENTER, MCLEAN VA.\n*        DATE WRITTEN. JUNE 4 1976.\n*        DATE UPDATED. APRIL 23 1980.\n*        ATTRIBUTES. RE-ENTRANT.\n*        REMARKS.\n*            THIS SUBPROGRAM CONVERTS A DATE FROM ONE FORMAT\n*            TO ANOTHER. THE DIFFERENT FORMATS ARE:\n*\n*            INPUT\n*               1   JULIAN       BINARY    F'YYYYDDD'\n*               2   STANDARD     BINARY    F'YYYYMMDD'\n*               3   JULIAN       PACKED    PL4'YYYYDDDF'\n*\n*            OUTPUT\n*               1   JULIAN       BINARY    F'YYYYDDD'\n*               2   STANDARD     BINARY    F'YYYYMMDD'\n*               4   STANDARD     8-CHAR    CL8'MM/DD/YY'\n*               8   ALPHA        8-CHAR    CL8'03JUN76 '\n*              16   PROSE        20-CHAR   CL20'JUNE 3 1976'\n*              32   FRSTLAST     BINARY    F'0' 1 - FIRST OF MONTH\n*                                               2 - LAST OF MONTH\n*              64   WEEKDAYCODE  BINARY    F'0' (SATURDAY)\n*             128   WEEKDAY      12-CHAR   CL12'SATURDAY'\n*             256   TIME         BINARY    F'100THS SEC SINCE MIDNITE'\n*             512   TIME         8-CHAR    CL8'HH:MM:SS'\n*\n*            INPUT MUST BE EITHER JULIAN OR STANDARD.\n*\n*            PASS THE FOLLOWING PARAMETERS VIA A LIST OF ADDRESSES\n*            POINTED TO BY REGISTER 1\n*               1   THE INPUT DATE\n*               2   A FULLWORD CONTAINING THE NUMERIC CODE\n*                   WHICH DEFINES THE INPUT FORMAT\n*               3   THE RECEIVING FIELD FOR OUTPUT\n*               4   A FULLWORD CONTAINING THE NUMERIC CODE\n*                   WHICH DEFINES THE OUTPUT FORMAT\n*               5   A 256 BYTE WORKAREA (ON DOUBLEWORD BOUNDARY)\n*            NOTES.\n*               1) MAKE OUTPUT 00YY IF INPUT IS 00YY.\n*               2) FOR CURRENT DATE, USE TYPE 1 DATE ZERO.\n         SPACE\n         MACRO\n         STAMP\n         LCLC  &ASMTIME\n&ASMTIME SETC  '&SYSTIME'(1,5)\n         DC    CL16' &SYSDATE &ASMTIME '\n         MEND\n         SPACE\nJULSUB CSECT\n         USING *,R12\n         B     @PROLOG-*(,15)\n         DC    AL1(11),CL11'JULSUB   '\n         STAMP\n@PROLOG  STM   14,12,12(13)\n         LR    R12,15\n         LR    R2,R1\n*        GETMAIN R,LV=@DATAL       GET SAVEAREA ADDRESS\n         L     R1,16(,R1)          GET SAVEAREA ADDRESS\n         ST    13,4(,1)\n         ST    1,8(,13)\n         LR    13,1\n         LR    R1,R2\n         USING @DATA,13\n         SPACE\n         LM    R2,R3,0(R1)         GET INPUT AND DESCRIPTOR\n         LM    R4,R5,8(R1)         GET OUTPUT AND DESCRIPTOR\n         MVC   INPUT(4),0(R2)      COPY INPUT\n         XC    DOUBLE,DOUBLE\n         SLR   R14,R14             ZERO R14\n         ST    R14,FRSTLAST\n         ST    R14,TIMEB\n         CLI   3(R3),INP003        INPUT JULIAN PACKED?\n         BNE   INP01               NO - BRANCH\n         SPACE\n*              INPUT IS JULIAN PACKED\n         SPACE\n         MVC   DOUBLE+4(4),INPUT   MOVE INPUT\n         CVB   R1,DOUBLE\n         ST    R1,JB\nJULCOMM  L     R14,DOUBLE+4        SAVE 00YYDDDF\n         LH    R1,DOUBLE+4         GET 00YY\n         SLL   R1,16               GET 00YY0000\n         SRL   R1,12               GET 00000YY0\n         ST    R1,DOUBLE+4         STORE BACK 00000YY0\n         OI    DOUBLE+7,X'0F'      SET SIGN\n         CVB   R1,DOUBLE\n         ST    R1,YYYYB\n         CH    R1,=H'99'\n         BH    *+8\n         AH    R1,=H'1900'\n         ST    R1,CENTB\n         UNPK  YYYYC,DOUBLE+5(3)     SAVE YYYY CHAR\n         MVC   YYC,YYYYC+2\n*\n         ST    R14,DOUBLE+4        RESTORE 00YYDDDF\n         XC    DOUBLE(6),DOUBLE      00YYDDDF TO 0000DDDF\n         OI    DOUBLE+7,X'0F'      SET SIGN\n         UNPK  DDDC,DOUBLE+4(4)    SAVE DDD CHAR\n         CVB   R1,DOUBLE           CONVERT DDD TO BINARY\n         ST    R1,DDDB             SAVE DDD BINARY\n         SPACE\n         BAL   R9,TODD\n         BAL   R9,TOSB\n         BAL   R9,TOMON\n         BAL   R9,TOPROSE\n         BAL   R9,TOWEEK\n         BAL   R9,TOTIME\n         BAL   R9,OUTPUT\n         B     EXIT0\n         SPACE\nINP01    CLI   3(R3),INP001        INPUT JULIAN BINARY?\n         BNE   INP02               NO - BRANCH\n         L     R1,INPUT            GET BINARY YYYYDDD\n         LTR   R1,R1               ZERO?\n         BNZ   INP01A              NO - BRANCH\n         TIME  BIN\n         ST    R0,TIMEB            SAVE TIME\n         SLR   R0,R0\n         STM   R0,R1,DOUBLE\n         CVB   R1,DOUBLE\n         B     INP01B\nINP01A   CVD   R1,DOUBLE           TO DECIMAL\nINP01B   ST    R1,JB\n         B     JULCOMM             PROCEED AS IF INP003\n         SPACE\n*              CONVERT JULIAN DATE TO MONTH-DAY-YEAR\n*\n*                 INPUT  - YYYYB AND DDDB   (ALSO YYC)\n*\n*                 OUTPUT - MMB AND DDB, MMC AND DDC, FRSTLAST\n         SPACE\nTODD     MVC   DPM(26),DAYSPMON\n         TM    YYYYB+3,B'00000011' IS YEAR A MULTIPLE OF 4?\n         BNZ   DPM365              NO - BRANCH\n         CLC   YYC,=C'00'          DIVISIBLE BY 100?\n         BNE   DPM366              NO - BRANCH\n         L     R15,CENTB\n         SLR   R14,R14\n         D     R14,=F'400'\n         LTR   R14,R14             EVENLY DIVISIBLE BY 400?\n         BNZ   DPM365              NO - NOT A LEAP YEAR\nDPM366   MVI   DPM+3,29            CHANGE FEB TO 29 DAYS\nDPM365   EQU   *\n         LA    R14,2               INDEX FOR DPM\n         LR    R0,R14              INDEX INCREMENT\n         L     R1,DDDB             DAY OF YEAR\nDPMLOOP  CH    R1,DPM-2(R14)       DAY LESS THAN OR EQ ENTRY?\n         BE    DPMEND              EQUAL - BRANCH\n         BL    DPMWIN              LESS - BRANCH\n         SH    R1,DPM-2(R14)       NO, SUBTRACT ENTRY FROM DAY\n         ALR   R14,R0              ADD 2 TO INDEX\n         B     DPMLOOP             LOOP\nDPMEND   MVI   FRSTLAST+3,2        LAST DAY OF MONTH\n         B     DPMCOMM\nDPMWIN   CH    R1,=H'1'            FIRST OF MONTH?\n         BNE   DPMCOMM             NO - BRANCH\n         MVI   FRSTLAST+3,1        FIRST DAY OF MONTH\nDPMCOMM  SRL   R14,1               HALVE INDEX TO GET MM\n         ST    R1,DDB              SAVE DD BINARY\n         CVD   R1,DOUBLE           CONVERT TO PACKED\n         OI    DOUBLE+7,X'0F'      SET SIGN\n         UNPK  DDC,DOUBLE+6(2)     SAVE DD CHAR\n         ST    R14,MMB             SAVE MM BINARY\n         CVD   R14,DOUBLE          CONVERT TO PACKED\n         OI    DOUBLE+7,X'0F'      SET SIGN\n         UNPK  MMC,DOUBLE+6(2)     SAVE MM CHAR\n         MVI   SLASH1,C'/'\n         MVI   SLASH2,C'/'\n         BR    R9\n         SPACE\n*              CONVERT MONTH NUMBER TO MONTH NAME\n*\n*                 INPUT  - MMB     (ALSO DDC AND YYC FOR MOVE)\n*\n*                 OUTPUT - MONTH AND ALPHA\n         SPACE\nTOMON    L     R15,MMB\n         MH    R15,=H'9'           MULT BY 9\n         LA    R15,ALPHAMON-9(R15) ADDRESS OF ENTRY\n         MVC   MONTH,0(R15)        SAVE PROSE MONTH\n         MVC   ALPHA+2(3),0(R15)   SAVE ALPHA MONTH\n         MVC   ALPHA(2),DDC\n         MVC   ALPHA+5(2),YYC\n         MVI   ALPHA+7,C' '\n         BR    R9\n         SPACE\n*              BUILD PROSE DATE\n*\n*                 INPUT  - MONTH, DDC, YYYYC\n         SPACE\nTOPROSE  TM    3(R5),OUT016\n         BZR   R9\n         MVI   PROSE,C' '\n         MVC   PROSE+1(L'PROSE-1),PROSE\n         MVC   PROSE(9),MONTH\n         LA    R1,PROSE+9\nPROSE01  CLI   0(R1),C' '          BLANK?\n         BNE   PROSE02             NO - FOUND LAST LETTER\n         BCT   R1,PROSE01          BACK UP AND BRANCH\nPROSE02  MVC   2(2,R1),DDC\n         CLI   2(R1),C'0'          LEADING ZERO?\n         BNE   PROSE03             NO - BRANCH\n         MVC   2(1,R1),3(R1)       YES - SHIFT\n         MVI   3(R1),C' '\n         BCTR  R1,0\nPROSE03  EQU   *\n*        MVI   4(R1),C','          COMMA AFTER DAY\n*        LA    R1,1(,R1)           ADD 1 FOR COMMA\n         MVC   5(4,R1),YYYYC\n         CLC   5(2,R1),=C'00'\n         BNE   *+10\n         MVC   5(2,R1),=C'19'\n         BR    R9\n         SPACE\n*              INPUT IS YYYY/MM/DD BINARY\n         SPACE\nINP02    L     R1,INPUT\n         CVD   R1,DOUBLE           GET 0000000Y YYYMMDDF\n         LM    R14,R15,DOUBLE\n         NC    DOUBLE,=X'0000000000000FFF' ISOLATE 00000DDF\n         CVB   R1,DOUBLE\n         ST    R1,DDB\n         OI    DOUBLE+7,X'0F'\n         UNPK  DDC,DOUBLE+6(2)\n*\n         STM   R14,R15,DOUBLE\n         NC    DOUBLE,=X'00000000000FF00F' ISOLATE 000MM00F\n         L     R1,DOUBLE+4\n         SRL   R1,8\n         ST    R1,DOUBLE+4\n         OI    DOUBLE+7,X'0F'\n         CVB   R1,DOUBLE\n         CH    R1,=H'12'\n         BNH   *+8\n         LA    R1,13               SET ALL BAD MONTHS TO 13\n         ST    R1,MMB\n         UNPK  MMC,DOUBLE+6(2)\n*\n         SRDL  R14,4               GET YYYYMMDD\n         SLR   R14,R14             GET 00000000 IN R14\n         SRL   R15,12              GET 000YYYYM IN R15\n         STM   R14,R15,DOUBLE\n         OI    DOUBLE+7,X'0F'\n         CVB   R1,DOUBLE\n         ST    R1,YYYYB\n         CH    R1,=H'99'\n         BH    *+8\n         AH    R1,=H'1900'\n         ST    R1,CENTB\n         UNPK  YYYYC,DOUBLE+5(3)\n         MVC   YYC,YYYYC+2\n         MVI   SLASH1,C'/'\n         MVI   SLASH2,C'/'\n*\n         BAL   R9,TOSB\n         BAL   R9,TOJUL\n         BAL   R9,TOMON\n         BAL   R9,TOPROSE\n         BAL   R9,TOWEEK\n         BAL   R9,TOTIME\n         BAL   R9,OUTPUT\n         B     EXIT0\n         SPACE\n*              CONVERT M/D/Y TO JULIAN\n*\n*                 INPUT  - MMB, DDB, YYYYB\n*\n*                 OUTPUT - DDDB, DDDC, JB\n         SPACE\nTOJUL    MVC   DPM(26),DAYSPMON\n         TM    YYYYB+3,B'00000011' IS YEAR A MULTIPLE OF 4?\n         BNZ   JUL365              NO - BRANCH\n         CLC   YYC,=C'00'          DIVISIBLE BY 100?\n         BNE   JUL366              NO - BRANCH\n         L     R15,CENTB\n         SLR   R14,R14\n         D     R14,=F'400'\n         LTR   R14,R14             EVENLY DIVISIBLE BY 400?\n         BNZ   JUL365              NO - NOT A LEAP YEAR\nJUL366   MVI   DPM+3,29             CHANGE FEB TO 29 DAYS\nJUL365   EQU   *\n         L     R15,DDB              GET DAYS IN CURRENT MONTH\n         LR    R0,R15               SAVE IT TO COMPARE FOR LAST DAY\n         L     R14,MMB              GET CURRENT MONTH\n         BCTR  R14,0                GET NO. OF COMPLETED MONTHS\n         LA    R1,DPM\n         LTR   R14,R14              JANUARY?\n         BNP   JULEND               YES - BRANCH\n         B     *+8\nJULOOP   LA    R1,2(,R1)            POINT TO NEXT MONTH\n         AH    R15,0(,R1)           ADD DAYS IN MONTH TO TOTAL\n         BCT   R14,JULOOP\nJULEND   CH    R0,0(,R1)            LAST DAY OF MONTH?\n         BNE   *+8                  NO\n         MVI   FRSTLAST+3,2         YES\n         CH    R0,=H'1'             FIRST DAY OF MONTH?\n         BNE   *+8                  NO\n         MVI   FRSTLAST+3,1         YES\n         ST    R15,DDDB             SAVE DDD\n         CVD   R15,DOUBLE\n         OI    DOUBLE+7,X'0F'       SET SIGN\n         UNPK  DDDC,DOUBLE+4(4)     SAVE DDD CHAR\n         MVC   JC(2),YYC\n         PACK  DOUBLE,JC\n         CVB   R1,DOUBLE\n         ST    R1,JB\n         BR    R9\n         SPACE\n*\n*\n*\n         SPACE\nTOSB     MVC   WORK(4),YYYYC\n         MVC   WORK+4(2),MMC\n         MVC   WORK+6(2),DDC\n         PACK  DOUBLE,WORK(8)\n         CVB   R1,DOUBLE\n         ST    R1,SB\n         BR    R9\n         SPACE\n*              GET DAY OF WEEK\n*\n*                 INPUT  - MMB, DDB, YYYYB\n*\n*                 OUTPUT - WEEKB, WEEKC\n*\n*              N = D + 2M + 3(M+1)/5 + Y + Y/4 - Y/100 + Y/400 + 2\n*\n*                 WHERE M = 3-14 (JAN,FEB ARE 13,14 OF Y-1)\n*\n*                 N/7 LEAVES REMAINDER 0-6, 0 INDICATING SATURDAY\n*\nTOWEEK   TM    3(R5),OUT064+OUT128\n         BZR   R9\n         L     R1,DDB              SET N = D\n         L     R15,CENTB\n         L     R14,MMB\n         CH    R14,=H'2'           JAN OR FEB?\n         BH    WEEKMMOK\n         BE    WEEKFEB\n         LA    R14,13              SET M=13\n         B     WEEKYMIN\nWEEKFEB  LA    R14,14              SET M=14\nWEEKYMIN BCTR  R15,0               SET Y = Y-1\nWEEKMMOK LR    R0,R14              COPY M\n         ALR   R0,R0               GET 2M\n         ALR   R1,R0               SET N = N + 2M\n         LR    R0,R15              SAVE REDEFINED Y\n         SPACE\n         LA    R14,1(,R14)         GET M+1\n         MH    R14,=H'3'           GET 3(M+1)\n         SRDL  R14,32              SHIFT INTO R15, ZERO R14\n         D     R14,=F'5'           GET 3(M+1)/5 IN R15\n         ALR   R1,R15              SET N = N + 3(M+1)/5\n         SPACE\n         LR    R15,R0              GET Y\n         ALR   R1,R15              SET N = N + Y\n         SLR   R14,R14             ZERO R14\n         D     R14,=F'4'           GET Y/4\n         ALR   R1,R15              SET N = N + Y/4\n         SPACE\n         LR    R15,R0              GET Y\n         SLR   R14,R14             ZERO R14\n         D     R14,=F'100'         GET Y/100\n         SLR   R1,R15              SET N = N - Y/100\n         SPACE\n         LR    R15,R0              GET Y\n         SLR   R14,R14             ZERO R14\n         D     R14,=F'400'         GET Y/400\n         ALR   R1,R15              SET N = N + Y/400\n         LA    R15,2               GET 2\n         ALR   R1,R15              SET N = N + 2\n         SLR   R0,R0               ZERO R0\n         D     R0,=F'7'            SET N = N/7\n         ST    R0,WEEKB            SAVE REMAINDER\n         LR    R1,R0\n         MH    R1,=H'9'\n         LA    R14,WEEKDAYS(R1)    POINT TO NAME\n         MVC   WEEKC(9),0(R14)     MOVE NAME\n         MVC   WEEKC+9(3),WEEKBLNK PLUS 3 BLANKS\n         BR    R9\n         SPACE\n*\n*              CONVERT TIMEB TO TIMEC\n*\n*                 DIVIDE BY 10,10,10,6,10,6,10,6\n*\nTOTIME   TM    2(R5),OUT512\n         BNOR  R9\n         L     R15,TIMEB\n         LA    R6,10               INITIAL DIVISOR\n         LA    R7,12               SET DIVISOR MASK\n         LA    R8,32               SHIFT COUNT\nDECLOOP  SR    R14,R14\n         DR    R14,R6\n         LR    R0,R14              SAVE REMAINDER\n         SRDL  R0,4                SHIFT INTO R1\n         SH    R8,=H'4'            DECREMENT SHIFT COUNT\n         LTR   R15,R15             QUOTIENT ZERO?\n         BZ    TOTIMX              YES - BRANCH\n         CL    R8,=F'24'           IF COUNT LT 24\n         BNL   DECLOOP             NO - BRANCH\n         XR    R6,R7               10 TO 6 TO 10 ETC\n         B     DECLOOP\nTOTIMX   SRL   R1,0(R8)            SHIFT REMAINING BITS\n         SRL   R1,4                GET 0HHMMSST\n         ST    R1,DOUBLE\n         OI    DOUBLE+3,X'0F'\n         MVC   DOUBLE+6(10),=X'402120204B20204B2020'\n         ED    DOUBLE+6(10),DOUBLE\n         MVC   TIMEC,DOUBLE+8\n         BR    R9\n         SPACE\nOUTPUT   LR    R1,R4\n         TM    3(R5),OUT001\n         BZ    *+14\n         MVC   0(4,R1),JB\n         LA    R1,4(,R1)\n         TM    3(R5),OUT002\n         BZ    *+14\n         MVC   0(4,R1),SB\n         LA    R1,4(,R1)\n         TM    3(R5),OUT004\n         BZ    *+14\n         MVC   0(8,R1),SC\n         LA    R1,8(,R1)\n         TM    3(R5),OUT008\n         BZ    *+14\n         MVC   0(8,R1),ALPHA\n         LA    R1,8(,R1)\n         TM    3(R5),OUT016\n         BZ    *+14\n         MVC   0(L'PROSE,R1),PROSE\n         LA    R1,L'PROSE(,R1)\n         TM    3(R5),OUT032\n         BZ    *+14\n         MVC   0(4,R1),FRSTLAST\n         LA    R1,4(,R1)\n         TM    3(R5),OUT064\n         BZ    *+14\n         MVC   0(4,R1),WEEKB\n         LA    R1,4(,R1)\n         TM    3(R5),OUT128\n         BZ    *+14\n         MVC   0(12,R1),WEEKC\n         LA    R1,12(,R1)\n         TM    2(R5),OUT256\n         BZ    *+14\n         MVC   0(4,R1),TIMEB\n         LA    R1,4(,R1)\n         TM    2(R5),OUT512\n         BZ    *+14\n         MVC   0(8,R1),TIMEC\n         LA    R1,8(,R1)\n         BR    R9\n         SPACE\nEXIT0    SR    15,15\nEXIT     LR    1,13\n         L     13,4(,13)\n         ST    15,16(,13)\n*        FREEMAIN R,A=(1),LV=@DATAL  (COMMENT)\n         LM    14,12,12(13)\n         BR    14\n         SPACE\n************************************************************\n*                                                          *\n*        CONSTANTS                                         *\n*                                                          *\n************************************************************\n         SPACE\nDAYSPMON DC    H'31,28,31,30,31,30,31,31,30,31,30,31,999'\nALPHAMON DC    CL36'JANUARY  FEBRUARY MARCH    APRIL    '\n         DC    CL36'MAY      JUNE     JULY     AUGUST   '\n         DC    CL36'SEPTEMBEROCTOBER  NOVEMBER DECEMBER '\n         DC    CL09'UNKNOWN  '\nWEEKDAYS DC    CL36'SATURDAY SUNDAY   MONDAY   TUESDAY  '\n         DC    CL27'WEDNESDAYTHURSDAY FRIDAY   '\nWEEKBLNK EQU   WEEKDAYS+15         3 BLANKS\n         LTORG\n         SPACE\n************************************************************\n*                                                          *\n*        DSECTS                                            *\n*                                                          *\n************************************************************\n         SPACE\n@DATA    DSECT\n         DS    18F\nINPUT    DS    CL8\nDOUBLE   DS    D\nWORK     DS    8C\nSC       DS    0CL8\nMMC      DS    CL2\nSLASH1   DS    C\nDDC      DS    CL2\nSLASH2   DS    C\nYYC      DS    CL2\nYYYYC    DS    CL4\nDDB      DS    F\nMMB      DS    F\nYYYYB    DS    F\nCENTB    DS    F\nDDDB     DS    F\nJB       DS    F\nSB       DS    F\nWEEKB    DS    F\nFRSTLAST DS    F\nTIMEB    DS    F\nTIMEC    DS    CL8\nJC       DS    0CL5\n         DS    CL2\nDDDC     DS    CL3\nMONTH    DS    CL9\nALPHA    DS    0CL8\n         DS    CL2\nMON      DS    CL3\n         DS    CL2\n         DS    CL1                 BLANK FILLER LAST BYTE OF ALPHA\nWEEKC    DS    CL12\nPROSE    DS    CL20\nDPM      DS    13H\n@DATAL   EQU   *-@DATA\n         SPACE\nINP001   EQU   1\nINP002   EQU   2\nINP003   EQU   3\nOUT001   EQU   1\nOUT002   EQU   2\nOUT004   EQU   4\nOUT008   EQU   8\nOUT016   EQU   16\nOUT032   EQU   32\nOUT064   EQU   64\nOUT128   EQU   128\nOUT256   EQU   1\nOUT512   EQU   2\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMCASID": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90\"\\x8f\\x00\\x90#?\\x11I\\x00\\x05\\x00\\x06\\x00\\x00\\xc1`\\xc6\\xd6\\xd9\\xe3\\xc5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-08-16T00:00:00", "modifydate": "1990-08-21T11:49:00", "lines": 5, "newlines": 6, "modlines": 0, "user": "A-FORTE"}, "text": "/* REXX */\n@CVT = STORAGE(10,4)\n@SMCA = STORAGE(D2X(C2D(@CVT)+197),3)\nSYSID = STORAGE(D2X(C2D(@SMCA)+16),4)\n'ISPEXEC VPUT (SYSID) SHARED'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT059/FILE059.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT059", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}