{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012007000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE424.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE424.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x10'", "DS1TRBAL": "b'\\x0e6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x10\\x00\\x07\\x03\\x10\\x00\\t\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"INSTALL": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                             VETAPE\nVETAPE IS A PROGRAM THAT GENERATES AND SUBMITS JOBS TO THE INTERNAL\nREADER TO COPY 3420 VOLUMES TO 3480 VOLUMES AND VICE VERSA.\nIT REQUIRES UCC ONE TAPE MANAGEMENT SYSTEM TO RETRIEVE DATA ABOUT\nTHE VOLUMES YOU ARE MIGRATING.  RUNNING AS A STARTED TASK IT ISSUES\nA REQUEST TO THE OPERATOR TO ENTER A VOLSER OF THE VOLUME TO BE\nMIGRATED.  FROM THAT IT DETERMINES IF THE VOLUME IS ELGIBLE FOR\nMIGRATION FROM THE FOLLOWING CRITERIA:\n1. EXPIRATION DATE - IF TAPE DUE TO EXPIRE IN 30 DAYS OR LESS IT\n                     WILL BE BYPASSED.\n2. DENSITY         - MUST BE STANDARD 6250 BPI.\n3. CREATING JOBNAME- VOLUMES CREATED BY JOBS USING CERTAIN UTILITIES\n                     OR INTENDED FOR 3420 VOLUMES CAN BE BYPASSED.\n4. MULTI-FILE TAPES- IF TAPE HAS MULTIPLE DATASETS IT WILL BE BYPASSED.\nIF A VOLUME PASSES THESE CHECKS A TWO STEP JOB IS GENERATED AND\nSUBMITTED TO THE INTERNAL READER. THE JOBNAME WILL BE IN THE FORMAT OF\nJJJJJXX WHERE JJJJJ IS DETERMINED BY YOU AND XX IS THE LAST 2 DIGITS OF\nTHE ORIGINAL VOLSER.  IT WILL DETERMINE FROM THE TMS RECORD THE\nFOLLOWING:\n1. DATASET NAME\n2. EXPIRATION DATE\n3. DENSITY\n4. CREATING JOB NAME\n5. NUMBER OF VOLUMES AND SEQUENCE\n6. MUTIPLE DATASET VOLUMES\nIT WILL THEN DETERMINE IF THE DATASET IS CURRENTLY CATALOGED TO THE\nSPECIFIED VOLUME USING THE LOCATE MACRO TO DETERMINE THE DISPOSITION\nOF THE NEW VOLUMES. IF THE ORIGINAL WAS CATALOGED IT WILL BE UN-\nCATALOGED AND THE NEW VOLUME WILL BE CATALOGED.  IF THE ORIGINAL\nWAS NOT CATALOGED IT WILL REMAIN UNCATALOGED AND THE NEW VERSION\nWILL BE CREATED UNCATALOGED.  IN THIS CASE IF THE  DATASET RESIDES ON\nMULTIPLE VOLUMES THAT INFORMATION WILL BE SUPPLIED IN THE JCL.\nTHE EXPIRATION DATE OF THE ORIGINAL VOLUME WILL BE USED FOR THE NEW\nVOLUME. IF THE FIRST STEP (IEBGENER) IS SUCCESFUL, THE SECOND STEP\nWILL SET THE EXPIRATION DATE OF THE ORIGINAL TO EXPIRE IN 3 DAYS.\nA RETURN CODE OF 8 OR HIGHER WILL CAUSE STEP1 TO ABEND WITH U0012.\nBY RESETTING THE EXPIRATION DATE OF THE ORIGINAL VOLUME AFTER A\nSUCCESFULL COPY THE MIGRATED VOLUMES CAN BE TAKEN OUT OF SERVICE\nAS TMC SHOWS THEM TO BE EXPIRED.\nAFTER THE JOB IS SUBMITTED VETAPE WILL PROMPT THE OPERATOR TO\nENTER ANOTHER VOLUME AND THE PROCESS WILL CONTINUE.  FOR EACH\nVOLUME ENTERED A RECORD IS PUT TO THE SYSPRINT DATASET OF VETAPE\nSHOWING THE DSN AND JOBNAME OF JOBS SUBMITTED FOR MIGRATION OR\nTHE REASON THE VOLUME WAS BYPASSED.\nTHINGS TO CONSIDER IN USING THIS METHOD TO MIGRATE YOUR TAPES ARE\nAS FOLLOWS:\n1. EVERY TIME A VOLUME IS ENTERED A JOB COULD BE GENERATED.\n   IT IS VERY EASY TO ENTER A LARGE NUMBER OF VOLSERS AND CREATE\n   A GREAT MANY JOBS TO RUN. ANY VOLSER COULD BE PART OF\n   A LARGE MULTI-VOLUME DATASET WHICH COULD TAKE TIME TO RUN.\n   ON MULTI-VOLUME DATASETS ALL VOLUMES WILL BE MIGRATED.\n2. MULTI-VOLUME UNCATALOGED DATASETS COULD CAUSE DUPLICATES\n   SINCE THE EXPIRATION DATE ISN'T CHANGED UNTIL THE JOB COMPLETES\n   IT IS POSSIBLE FOR THE OPERATOR TO ENTER DIFFERENT VOLSERS FROM\n   THE SAME DATASET AND CREATE MORE THAN ONE JOB TO COPY IT, THUS\n   CAUSING DUPLICATES.\n3. IF YOU HAVE A GREAT DEAL OF UNCATALOGED DATASETS ON 3420 REELS\n   YOU WILL NOT KNOW THE NEW VOLSER THEY WERE MIGRATED TO\n   WITHOUT THE LISTING FROM THE JOB GENERATED TO COPY IT. IT IS\n   HANDY TO KEEP A TMC REPORT OF ALL 3420 VOLUMES BY VOLSER AND\n   DSN PRIOR TO STARTING THE PROCESS SO THESE CAN BE TRACKED\n   DOWN. IT CAN BE USED TO COMPARE TO THE CONTROL SHEET GENERATED\n   BY VETAPE.\nBEFORE ASSEMBLING VETAPE YOU MUST MAKE SOME MODIFICATIONS TO THE SOURCE\nCODE TO MAKE IT CONFORM TO YOUR INSTALLATION STANDARDS.  VETAPE ALSO\nPERFORMS EDITS TO PREVENT CERTAIN VOLUMES FROM BEING MIGRATED.  THESE\nALSO NEED TO BE CHANGED TO FIT YOUR INSTALLATION NEEDS.\n\n1. LINE 27 CALCULATES THE DATE YOU WANT THE OLD 3420 VOLUME TO EXPIRE\n   ITS CURRENTLY SET FOR 3 DAYS AFTER IT HAS BEEN MIGRATED.\n\n2. LINE 30 CALCULATES THE DATE 30 DAYS FROM THE CURRENT DATE.  ANY\n   VOLUMES THAT HAVE AN EXPIRATION DATE WITHIN THE RANGE OF CURRENT\n   DATE AND CURRENT DATE PLUS THIRTY DAYS WILL NOT BE MIGRATED.\n\n3. VETAPE WRITES MESSAGES TO THE CONSOLE OPERATOR.  ONE WILL REQUIRE\n   RESPONSE, THE OTHERS ARE INFORMATIONAL. MAKE THE ROUTCODE FOR THESE\n   MESSAGES VALID FOR YOUR INSTALLATION.\n\n4. VETAPE CONTAINS A TABLE OF CREATING JOBNAMES IT USES TO BYPASS\n   CERTAIN VOLUMES THAT SHOULD NOT BE MIGRATED. TAPES CREATED WITH\n   DFDSS, DMS, OR FDR CANNOT BE COPIED WITH IEBGENER. YOU MAY ALSO\n   HAVE VOLUMES THAT WERE SPECIFICALLY INTENDED FOR 3420 VOLUMES THAT\n   SHOULD NOT BE MIGRATED.  A TABLE ENTRY MUST BE CODED WITH THE\n   JOBNAMES OF THE JOBS THAT USE THESE UTILITIES OR CREATED TAPES\n   YOU DO NOT WANT MIGRATED.  THE CJOB FIELD ON THE VOLUME TMC RECORD\n   IS TESTED AGAINST THIS TABLE.  THIS IS A MUST.\n\n5. VETAPE WILL MIGRATE TAPES FROM 3420 TO 3480 OR 3480 TO 3420.\n   IT MUST BE ABLE TO DISTINGUISH THE TYPE FROM THE VOLSER. THE CODE\n   AS IT IS NOW CHECKS THE SECOND POSITION OF THE VOLSER ENTERED FOR\n   A VALUE OF '2'.  ANY VOLUME WITH A VOLSER OF 020000 OR HIGHER IS\n   CONSIDERED TO BE A 3480 VOLUME.  THOSE WITH LOWER VOLSERS ARE\n   CONSIDERED TO BE 3420 VOLUMES THIS MUST BE CHANGED TO MEET YOUR\n   NEEDS. LINES 73, 83, 156, 191.\n\n6. THE SECTION OF CODE TITLED SKELETON JCL MUST HAVE ALL '?' CHANGED\n   TO MEET YOUR INSTALATION JCL STANDARDS. BE CAREFULL NOT TO CHANGE\n   THE POSITION OF FIELDS IN THIS SECTION .  THE PROGRAM USES RELATIVE\n   ADDRESSING TO PLACE DATA IN THESE AREAS.  IF THIS IS NOT POSSIBLE\n   BE CERTAIN YOU MAKE THE APPROPRIATE CHANGES IN THE CODE TO\n   ACCOMIDATE YOUR CHANGES. THE 'X'S ARE MOST OF THE FIELDS VETAPE\n   IS PLACING VALUES AND SHOULD NOT REQUIRE CHANGING.\n\n7. IN THE SKELETON JCL STEP1 EXEC CARD PGM=IEBGENER, 'IEBGENER'\n   IS THE ALIAS GIVEN TO UTILDRIV (UTILITY FRONT-END).  IF YOU\n   GIVE THE FRONT END ANY OTHER NAME CHANGE THIS TO THAT NAME.\n   IF THIS IS THE CASE BE CERTAIN YOU HAVE CHANGED UTILDRIV TO\n   LINK TO IEBGENER INSTEAD OF IEBGENEX AND THE ENTRY POINT NAME\n   HAS BEEN CHANGED.\n\n                           UTILDRIV\nUTILDRIV IS JUST A FRONT END ON IEBGENER THAT WILL CAUSE AN ABEND\nON RETURN CODES GREATER THAN 8 FROM IEBGENER. THIS IS NEEDED TO PREVENT\nTHE TMC UPDATE STEP FROM RUNNING IF THE COPY WAS NOT SUCCESSFUL.\nYOU MUST RENAME YOUR CURRENT IEBGENER TO IEBGENX AND ASSEMBLE AND LINK\nUTILDRIV AS IEBGENER.   NO CHANGES TO THIS SOURCE ARE NECESSARY.\nIF YOU CHOOSE NOT TO DO THIS, CHANGE THE EP NAME (SEE ITEM7 ABOVE)\nAND CHANGE THE LINK MACRO TO INVOKE IEBGENER.\n\n                           VETAPEJ\nTHIS IS THE STARTED TASK JCL. PLACE ON SYS1.PROCLIB WITH APPROPIATE\nCHANGES. STEPLIB TO THE LOADLIB THAT CONTAINS YOUR VERSIONS OF VETAPE\nAND UTILDRIV.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UTILDRIV": {"ttr": 519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET VEUTIL     AT LEVEL 002 AS OF 06/26/85\n         TITLE '* * UTILDRIV - UTILITY FRONT END'                       00001\n         AST                                                            00002\n         EJECT                                                          00003\nUTILDRIV CSECT                                                          00004\nIEBGENER DS    0H                                                       00005\n         ENTRY IEBGENER                                                 00006\n         SAVE  (14,12),,IEBGENER-75204002                               00007\n         BALR  R3,0                                                     00008\n         USING *,R3                     SAVE                            00009\n         ST    R13,SAVEAREA+4                                           00010\n         LA    R12,SAVEAREA                  THE                        00011\n         ST    R12,8(R13)                                               00012\n         LR    R13,R12                           REGISTERS              00013\n         SPACE 2                                                        00014\n         L     R2,0(R1)            POINT TO PARM                        00015\n         LH    R4,0(R2)            LENGTH OF PARM                       00016\n         LTR   R4,R4               PARM LENGTH EQ 0                     00017\n         BZ    GENRLINK            YES - NO PARM                        00018\n         SPACE 2                                                        00019\n         LA    R5,2(R2)             POINT TO BEGIN OF PARM              00020\n         AR    R5,R4                POINT TO END OF PARM                00021\n         LA    R4,2(R2)             POINT TO BEGIN OF PARM              00022\n         CLC   0(6,R4),=CL6'/ABEND' ABEND REQUESTED                     00023\n         BNE   GENRLINK             NO                                  00024\n         MVI   ABENDSW,X'FF'        YES,TURN ON ABEND SWITCH            00025\nGENRLINK DS    0H                                                       00026\n         LINK  EP=IEBGENEX                                              00027\n         CLI   ABENDSW,X'FF'       ABEND REQUESTED?                     00028\n         BNE   GENRRTN             NO                                   00029\n         CH    R15,=H'8'                RC GT 8                         00030\n         BH    ABEND                    YES GO TO ABEND                 00031\nGENRRTN  DS    0H                                                       00032\n         L     R13,SAVEAREA+4           THATS ALL                       00033\n         RETURN (14,12),RC=(15)         GET OUT                         00034\nABEND    LR    R1,R15                   PUT RETURN CODE IN R1           00035\n         ABEND (1)                                                      00036\n         EJECT                                                          00037\n*                                                                       00038\nSAVEAREA DS    18F                                                      00039\nABENDSW  DC    X'00'               ABEND/NOABEND SWITCH                 00040\n         SPACE 6                                                        00041\nR0       EQU   0                                                        00042\nR1       EQU   1                        PARM LIST                       00043\nR2       EQU   2                   WORK                                 00044\nR3       EQU   3                        BASE REGISTER                   00045\nR4       EQU   4                   WORK                                 00046\nR5       EQU   5                   WORK                                 00047\nR6       EQU   6                        DECIMAL SAVE OF ABEND PARM      00048\nR7       EQU   7                                                        00049\nR8       EQU   8                                                        00050\nR9       EQU   9                                                        00051\nR10      EQU   10                                                       00052\nR11      EQU   11                                                       00053\nR12      EQU   12                                                       00054\nR13      EQU   13                                                       00055\nR14      EQU   14                                                       00056\nR15      EQU   15                       RETURN CODES                    00057\n         END                                                            00058\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VETAPE": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET VETAPEX    AT LEVEL 013 AS OF 06/26/85\n*  AUTHOR:  GARY GROGIS                                                 00001\n*  FUNCTION   THIS PROGRAM IS TO MIGRATE 3420 TAPES TO 3480 TAPE      * 00002\n*                                                                       00003\n*                                                                       00004\nVETAPE   CSECT                                                          00005\n         USING VETAPE,R15                                               00006\n         STM   R14,R12,R12(R13)                                         00007\n         ST    R13,S+4                                                  00008\n         LR    R14,R13                                                  00009\n         CNOP  0,4                                                      00010\n         BAL   R13,S+72                                                 00011\nS        DS    18F                                                      00012\n         ST    R13,8(R14)                                               00013\n         DROP  R15                                                      00014\n         USING S,R13                                                    00015\n         L     R12,*+8                                                  00016\n         B     *+8                                                      00017\n         DC    A(S+4096)                                                00018\n         USING S+4096,R12                                               00019\n         OPEN  (PRINT,(OUTPUT))         OPEN CONTROL SHEET FILE         00020\n         OPENTMC NOTACT=NOTMC           OPEN TMC FILE                   00021\n         MVC   CARD(L'TITLE),TITLE      MOVE TITLE TO OUTPUT            00022\n         PUT   PRINT,CARD               WRITE TITLE                     00023\n         TIME  DEC                      GET TODAYS DATE                 00024\n         ST    R1,FULLWORD              STORE DATE                      00025\n         AP    FULLWORD,=P'3'           ADD 3 DAYS  (FOR OLD TMC REC)   00026\n         UNPK  NEWDATE,FULLWORD         PUT IN CHAR FORMAT              00027\n         OI    NEWDATE+6,X'F0'          FLIP SIGN                       00028\n         AP    FULLWORD,=P'27'         ADD 27 MORE (EXPIRES IN 30 DAYS) 00029\n         TITLE 'VETAPE   QUESTIONS TO OPERATOR'                         00030\nGET      DS    0H                                                       00031\n         MVC   REPLY(6),=CL6' '            CLEAR REPLY AREA             00032\n         MVC   ECB,=F'0'                   CLEAR ECB                    00033\n         WTOR  'VETAPE   ENTER VOLUME SERIAL OF VOL TO BE MIGRATED   / X00034\n               OR ENTER ''STOP'' TO TERMINATE JOB  ',REPLY,6,ECB,      X00035\n               ROUTCDE=(3)                                              00036\n         WAIT  1,ECB=ECB                   WAIT TILL REPLY IS SATISFIED 00037\n         OC    REPLY(6),=XL6'404040404040' TURN TO UPPER CASE           00038\n         CLC   REPLY(4),=CL4'STOP'         REPLY = STOP ?               00039\n         BE    ENDJOB                      YES, END.                    00040\n         CLI   REPLY,X'40'                 REPLY = BLANKS               00041\n         BE    ENDJOB                      YES, END.                    00042\n         TITLE ' READ TMC AND EDIT FOR INELGIBLE VOLUMES'               00043\nREADTMC  DS    0H                                                       00044\nVSNTEST  TESTVSN REPLY,BADVOL1A             TEST FOR VALID TMC VOL SER  00045\nTMCGET   GETTMC REPLY,TMRECORD,NOTMC,ENQ=NO  READ TMC FOR VOL SER       00046\n         LH    R7,TM#DSNBS                  TEST FOR MULTIPLE DSN 'S    00047\n         LTR   R7,R7                         ON VOLUME                  00048\n         BNZ   BADVOL2A                     MORE THAN ONE SKIP THIS VOL 00049\n         CLC   TMDEN,=XL1'D3'               STANDARD DEN                00050\n         BE    LOADTAB                      YES, CONTINUE               00051\n         CLC   TMDEN,=XL1'E3'               STANDARD DEN                00052\n         BNE   BADVOL4A                     NO, PUT OUT MSG             00053\nLOADTAB  LA    R7,JOBLIST                   GET ADDRESS OF JOB TABLE    00054\n         SR    R4,R4                        CLEAR R4 FOR DIVIDE         00055\n         LA    R8,8                         LOAD LENGTH IF ELEMENT      00056\n         LA    R5,TBLLEN                    LOAD LENGTH OF TABLE        00057\n         DR    R4,R8                        CALC NUM OF ENTRIES         00058\nLOOP     LTR   R5,R5                        CHECK FOR POSITIVE          00059\n         BNP   ENDJOB                       NO GET OUT                  00060\n         CLC   TMJOBNM,0(R7)                CJOB INELGIBLE ?            00061\n         BE    BADVOL3A                     YES, SKIP THIS VOL          00062\n         LA    R7,8(R7)                     NEXT TABLE ENTRY            00063\n         BCT   R5,LOOP                      LOOP BACK                   00064\n         CP    FULLWORD,TMEXPDT             EXPIRE IN 30 OR LESS        00065\n         BH    BADVOL5                      SKIP IT                     00066\n         TITLE ' BUILD JCL AND SUBMIT TO INTERNAL READER'               00067\nBLDJCL   OPEN  (SYSOUT,(OUTPUT))           OPEN FOR NEW JCL             00068\n         MVC   JOBCARD+7(2),REPLY+4        CHANGE JOB NAME              00069\n         MVC   JOBCARD+33(6),REPLY         INSERT VOL SER ON JOB CARD   00070\n         MVC   JOBCARD+24(7),=CL7'MIGRATE' 3420 TO 3480                 00071\n         CLC   REPLY+1(1),=CL1'2'          IS INPUT 3480                00072\n         BL    BLDJCLA                     NO                           00073\n         MVC   JOBCARD+24(7),=CL7'REVERSE' YES SPECIFY REVERSE          00074\nBLDJCLA  MVC   CARD(L'JOBCARD),JOBCARD     MOVE JOB CARD                00075\n         BAL   R4,PUTINTR                  PUT JOB CARD                 00076\n         MVC   CARD(L'JOBCARD2),JOBCARD2   MOVE JOB CARD                00077\n         BAL   R4,PUTINTR                  PUT JOB CARD                 00078\n         MVC   CARD(L'EXECARD),EXECARD     MOVE EXEC CARD               00079\n         BAL   R4,PUTINTR                  PUT EXEC CARD                00080\n         MVC   INCARD1+17(4),=CL4'3420'    DEFAULT 3420 INPUT           00081\n         CLC   REPLY+1(1),=CL1'2'          IS INPUT 3480                00082\n         BL    BLDJCLB                     NO                           00083\n         MVC   INCARD1+17(4),=CL4'3480'    3480 INPUT                   00084\nBLDJCLB  MVC   CARD(L'INCARD1),INCARD1     MOVE SYSUT1 CARD             00085\n         BAL   R4,PUTINTR                  PUT SYSUT1 CARD              00086\n         LOCATE CAMLST1                    CHECK CATALOG                00087\n         LTR   R15,R15                     CATALOGED ?                  00088\n         BNZ   NOTCAT                      NO , CHECK UNCATALOGED       00089\n         LA    R7,CATAREA                  GET ADDRESS OF CATAREA       00090\n         LH    R5,0(R7)                    GET NUMBER OF VOLS           00091\n         LTR   R5,R5                       >0                           00092\n         BNP   CATERR                      NO, PROBLEM                  00093\n         LA    R7,6(R7)                    POINT TO FIRST VOL SER       00094\n         ZAP   DBLWORD,=P'0'               CLEAR SECONDARY COUNTER      00095\n         MVC   OUTCARD+29(14),=C'CATLG,DELETE),'  DEFAULT OUT DISP      00096\n         MVC   INCARD3+13(14),=C'UNCATLG,KEEP),'  DEFAULT IN DISP       00097\nCATLOOP  CLC   0(6,R7),TMVOLSER            EQUAL TO TMC ?               00098\n         BE    BLDJCLB2                    YES, CREATE REST OF JCL      00099\n         LA    R7,12(R7)                   NO, POINT TO NEXT VOL SER    00100\n         AP    DBLWORD,=P'1'               ADD TO COUNTER               00101\n         CLC   DBLWORD,=P'20'              FIRST 20 VOLS CHECKED ?      00102\n         BL    CATRET                      NO, CONTINUE LOOP            00103\n         CLC   CATAREA+252(3),=C'0'        CHECK FOR MORE VCB'S         00104\n         BE    NOTCAT1                     NO MORE TREAT AS NOT CATLGD  00105\n         MVC   TTR,CATAREA+252             YES, GET ADDR OF NEXT VCB    00106\n         LOCATE CAMLST2                    READ NEXT VCB                00107\n         LTR   R15,R15                     GOOD RETURN ?                00108\n         BNZ   CATERR                      NO GET OUT                   00109\n         LA    R7,CATAREA+6                POINT TO VOLSER              00110\nCATRET   BCT   R5,CATLOOP                  CONTINUE LOOP                00111\n         B     NOTCAT1                     ALL CHECKED VOL NOT CATLG    00112\nNOTCAT   C     R15,=F'8'                   NAME NOT CATALOGED ?         00113\n         BNE   CATERR                      NO, OTHER PROBLEM GET OUT    00114\nNOTCAT1  MVC   OUTCARD+29(14),=C'KEEP,DELETE), '  CHG OUT DISP          00115\n         MVC   INCARD2+3(9),=CL9'VOL=SER=('       NEED VOL SERS         00116\n         MVC   VOLUME,TMVOLSER                    GET IN ORDER          00117\n         CLC   TMVOLSEQ,=XL2'1'                   FIRST VOL ?           00118\n         BE    TMCLOOP                            START FOLLOWING CHAIN 00119\n         MVC   VOLUME,TMFRSVOL                    USE FIRST VOL SER     00120\nTMCLOOP  LA    R7,INCARD2+12                      POINT TO CARD POS     00121\n         LA    R5,4                               4 VOLS PER CARD       00122\nTMCLOOP1 GETTMC VOLUME,TMRECORD,NOTMC,ENQ=NO      READ TMC              00123\n         MVC   0(6,R7),TMVOLSER                   WRITE TO CARD         00124\n         LA    R7,6(R7)                           INCREMENT CARD ADDR   00125\n         CLC   TMNXTVOL,=XL6'0'                   LAST VOL ?            00126\n         BE    PAREN                               YES, FINISH CARD     00127\n         MVC   0(1,R7),=C','                 COMMA BETWEEN VOL SERS     00128\n         LA    R7,1(R7)                      NEXT ADDRESS ON CARD       00129\n         MVC   VOLUME,TMNXTVOL               SET TO READ NEXT VOL       00130\n         BCT   R5,TMCLOOP1                   LOOP FOR 4 PER CARD        00131\n         BAL   R3,BLDJCLB1                   HAVE 4 , WRITE CARD        00132\n         LA    R5,4                          SET FOR 4 MORE             00133\n         B     TMCLOOP1                      LOOP BACK                  00134\nPAREN    MVC   0(2,R7),=C'),'                CLOSE PAREN                00135\n         LA    R3,BLDJCLB2                   CHG BAL ADDR               00136\n         MVC   INCARD3+13(14),=C'KEEP,KEEP),   '  CHG OUT DISP          00137\nBLDJCLB1 MVC   CARD(L'INCARD2),INCARD2          MOVE CARD               00138\n         BAL   R4,PUTINTR                  WRITE CARD                   00139\n         LA    R7,INCARD2+3                     POINT TO BEG OF CARD    00140\n         MVC   0(68,R7),=CL68' '                CLEAR FOR MORE VOLS     00141\n         BR    R3                           CONT LOOP OR FALL THRU      00142\nBLDJCLB2 MVC   CARD(L'INCARD3),INCARD3     PUT OUT DISP                 00143\n         BAL   R4,PUTINTR                  PUT CARD                     00144\n         MVC   INCARD4+7(44),TMDSN         MOVE DSN FROM TMC TO SYSUT1  00145\n         MVC   CARD(L'INCARD4),INCARD4     WRITE OUT DSN                00146\n         BAL   R4,PUTINTR                  PUT CARD                     00147\n         CLC   TMVOLSEQ,=XL2'1'            FIRST VOL ?                  00148\n         BNE   MOVFRST                     NEED FIRST FOR TMC SYSIN     00149\n         MVC   OUTCARD0+4(6),TMVOLSER      GET READY TO WRITE           00150\n         B     BLDJCL2C                    BRANCH AROUND                00151\nMOVFRST  MVC   OUTCARD0+4(6),TMFRSVOL      GET FIRST FOR TMC UPD        00152\nBLDJCL2C MVC   OUTCARDA+8(44),TMDSN        GET NAME FOR TMC UPD         00153\n         MVC   OUTCARD+17(4),=CL4'3480'    SET DEVICE FOR OUTPUT        00154\n         CLC   REPLY+1(1),=CL1'2'          IS INPUT 3480                00155\n         BNE   BLDJCLC                     NO                           00156\n         MVC   OUTCARD+17(4),=CL4'3420'    SET DEV FOR INPUT            00157\nBLDJCLC  MVC   CARD(L'OUTCARD),OUTCARD     MOVE SYSUT2                  00158\n         BAL   R4,PUTINTR                  PUT CARD                     00159\n         UNPK  EXPDT,TMEXPDT               UNPACK EXPDT FROM TMC        00160\n         MVC   OUTCARD2+33(5),EXPDT        MOVE EXPDT TO JCL            00161\n         MVC   CARD(L'OUTCARD2),OUTCARD2                                00162\n         BAL   R4,PUTINTR                  PUT CARD                     00163\n         MVC   OUTCARD3+7(44),TMDSN        MOVE DSN TO SYSUT2           00164\n         MVC   CARD(L'OUTCARD3),OUTCARD3                                00165\n         BAL   R4,PUTINTR                  PUT CARD                     00166\n         MVC   CARD(L'OUTCARD4),OUTCARD4   MOVE SYSPRINT CARD           00167\n         BAL   R4,PUTINTR                  PUT CARD                     00168\n         MVC   CARD(L'OUTCARD5),OUTCARD5   MOVE SYSUDUMP                00169\n         BAL   R4,PUTINTR                  PUT CARD                     00170\n         MVC   CARD(L'OUTCARD6),OUTCARD6   MOVE SYSIN                   00171\n         BAL   R4,PUTINTR                  PUT SYSIN                    00172\n         MVC   CARD(L'OUTCARD7),OUTCARD7   MOVE SYSIN                   00173\n         BAL   R4,PUTINTR                  PUT SYSIN                    00174\n         MVC   CARD(L'OUTCARD8),OUTCARD8   MOVE SYSIN                   00175\n         BAL   R4,PUTINTR                  PUT SYSIN                    00176\n         MVC   CARD(L'OUTCARD9),OUTCARD9   MOVE SYSIN                   00177\n         BAL   R4,PUTINTR                  PUT SYSIN                    00178\n         MVC   CARD(L'OUTCARD0),OUTCARD0   MOVE SYSIN                   00179\n         BAL   R4,PUTINTR                  PUT SYSIN                    00180\n         MVC   CARD(L'OUTCARDA),OUTCARDA   MOVE SYSIN                   00181\n         BAL   R4,PUTINTR                  PUT SYSIN                    00182\n         MVC   OUTCARDB+10(5),NEWDATE+2                                 00183\n         MVC   CARD(L'OUTCARDB),OUTCARDB   MOVE SYSIN                   00184\n         BAL   R4,PUTINTR                  PUT SYSIN                    00185\n         MVC   CARD(L'ENDCARD),ENDCARD     MOVE END CARD                00186\n         BAL   R4,PUTINTR                  PUT CARD                     00187\n         CLOSE SYSOUT                      CLOSE AND SUBMIT JCL         00188\n         MVC   CONREC+35(8),=CL8'MIGRATED'                              00189\n         CLC   REPLY+1(1),=CL1'2'          IS INPUT 3480                00190\n         BNE   BLDJCLD                     NO                           00191\n         MVC   CONREC+35(8),=CL8'REVERSED'                              00192\nBLDJCLD  MVC   CONREC+27(7),JOBCARD+2     MOVE JOBNAME TO CONTROL SHEET 00193\n         MVC   CONREC+5(6),REPLY          MOVE VOL SER TO CONTROL SHEET 00194\n         MVC   CARD(L'CONREC),CONREC      MOVE TO OUTPUT                00195\n         PUT   PRINT,CARD                 WRITE CONTROL LINE            00196\n         MVC   CARD(L'INCARD4),INCARD4     WRITE OUT DSN                00197\n         PUT   PRINT,CARD                 WRITE CONTROL LINE            00198\n         B     GET                        GO GET NEXT VOL SER           00199\nPUTINTR  PUT   SYSOUT,CARD                WRITE ROUTINE                 00200\n         BR    R4                                                       00201\n         TITLE ' ERROR AND BYPASS ROUTINES  '                           00202\nBADVOL1A MVC   BADVOL1+21(6),REPLY    MOVE VOL SER TO MESSAGE           00203\nBADVOL1  WTO   'VETAPE   VOL XXXXXX NOT VALID OR NOT FOUND',           X00204\n               ROUTCDE=(3)            TELL OPERATOR                     00205\n         MVC   CONREC0+5(6),REPLY     MOVE VOL SER TO CONTROL LIST      00206\n         MVC   CARD(L'CONREC0),CONREC0                                  00207\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00208\n         B     GET                    GO GET NEXT VOL                   00209\nBADVOL2A MVC   BADVOL2+8(6),REPLY     MOVE VOL SER TO MESSAGE           00210\nBADVOL2  WTO   'XXXXXX CONTAINS MULTIPLE DSNS AND CANNOT BE MIGRATED', X00211\n               ROUTCDE=(3)            TELL OPERATOR                     00212\n         MVC   CONREC1+5(6),REPLY     MOVE VOL SER TO CONTROL LIST      00213\n         MVC   CARD(L'CONREC1),CONREC1                                  00214\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00215\n         B     GET                     GO GET NEXT VOL                  00216\nBADVOL3A MVC   BADVOL3+8(6),REPLY      MOVE VOL SER TO OPERATOR MSG     00217\n         MVC   BADVOL3+26(8),TMJOBNM   MOVE CJOB TO OPERATOR MSG        00218\nBADVOL3  WTO   'XXXXXX CREATED BY             AND CANNOT BE MIGRATED', X00219\n               ROUTCDE=(3)             TELL OPERATOR VOL INELGIBLE      00220\n         MVC   CONREC2+5(6),REPLY      MOVE VOL TO CONTROL LIST         00221\n         MVC   CONREC2+24(8),TMJOBNM   MOVE CJOB TO CONTROL LIST        00222\n         MVC   CARD(L'CONREC2),CONREC2                                  00223\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00224\n         B     GET                     GO GET NEXT VOL                  00225\nBADVOL4A MVC   BADVOL4+8(6),REPLY      MOVE VOL SER TO OPERATOR MSG     00226\nBADVOL4  WTO   'XXXXXX USES NON STANDARD DEN  AND CANNOT BE MIGRATED', X00227\n               ROUTCDE=(3)             TELL OPERATOR VOL INELGIBLE      00228\n         MVC   CONREC3+5(6),REPLY      MOVE VOL TO CONTROL LIST         00229\n         MVC   CARD(L'CONREC3),CONREC3                                  00230\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00231\n         B     GET                     GO GET NEXT VOL                  00232\nBADVOL5  MVC   CONREC4+5(6),REPLY      MOVE VOL TO CONTROL LIST         00233\n         MVC   CARD(L'CONREC4),CONREC4                                  00234\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00235\n         B     GET                     GO GET NEXT VOL                  00236\nCATERR   MVC   CATERR1+8(6),REPLY      MOVE VOL SER TO OPERATOR MSG     00237\nCATERR1  WTO   'XXXXXX   ENCOUNTERED CATALOG ERROR',                   X00238\n               ROUTCDE=(3)                                              00239\n         MVC   CONREC5+5(6),REPLY      MOVE VOL TO CONTROL LIST         00240\n         MVC   CARD(L'CONREC5),CONREC5                                  00241\n         PUT   PRINT,CARD              WRITE CONTROL LIST               00242\n         CLOSE SYSOUT                      CLOSE AND SUBMIT JCL ERROR   00243\n         B     GET                     GO GET NEXT VOL                  00244\nNOTMC    WTO   'VETAPE   TMC NOT ACTIVE UNABLE TO CONTINUE',           X00245\n               ROUTCDE=(3)                                              00246\nENDJOB   CLOSE PRINT                                                    00247\n         WTO   'VETAPE    ENDING TO CONTINUE PROCESSING RESTART JOB',  X00248\n               ROUTCDE=(3)                                              00249\n         L     R13,4(R13)                                               00250\n         RETURN (14,12),RC=0                                            00251\n         TITLE 'REGISTER EQUATES'                                       00252\nR0       EQU   0                                                        00253\nR1       EQU   1                                                        00254\nR2       EQU   2                                                        00255\nR3       EQU   3                                                        00256\nR4       EQU   4                                                        00257\nR5       EQU   5                                                        00258\nR6       EQU   6                                                        00259\nR7       EQU   7                                                        00260\nR8       EQU   8                                                        00261\nR9       EQU   9                                                        00262\nR10      EQU   10                                                       00263\nR11      EQU   11                                                       00264\nR12      EQU   12                                                       00265\nR13      EQU   13                                                       00266\nR14      EQU   14                                                       00267\nR15      EQU   15                                                       00268\n         TITLE 'DEFINED STORAGE AND CONSTANTS'                          00269\nFULLWORD DS    F                                                        00270\nNEWDATE  DS    CL7                                                      00271\nVOLUME   DS    CL6                                                      00272\nTTR      DS    CL3                                                      00273\nDBLWORD  DS    D                                                        00274\nCARD     DS    CL80                                                     00275\nREPLY    DC    CL6' '                                                   00276\nEXPDT    DS    CL5                                                      00277\nECB      DC    F'0'                                                     00278\nTITLE    DS    0CL133                                                   00279\n         DC    CL1'1'                                                   00280\n         DC    CL30' '                                                  00281\n         DC    CL28'TAPE MIGRATION CONTROL SHEET'                       00282\n         DC    CL74' '                                                  00283\nCONREC   DC    CL80' VOL XXXXXX  SUBMITTED JOB XXXXXXX             '    00284\nCONREC0  DC    CL80' VOL XXXXXX  NOT VALID OR NOT FOUND IN TMC     '    00285\nCONREC1  DC    CL80' VOL XXXXXX  HAS MUTIPLE DSNS    CANNOT MIGRATE'    00286\nCONREC2  DC    CL80' VOL XXXXXX  CREATED BY          CANNOT MIGRATE'    00287\nCONREC3  DC    CL80' VOL XXXXXX  NON STANDARD DEN    CANNOT MIGRATE'    00288\nCONREC4  DC    CL80' VOL XXXXXX  EXPIRES IN 30 DAYS OR LESS,  SKIP '    00289\nCONREC5  DC    CL80' VOL XXXXXX  ENCOUNTERED CATALOG ERROR    SKIP '    00290\n         TITLE 'SKELETON JCL   '                                        00291\nJOBCARD  DC    CL80'//?????XX JOB (?,????),''MIGRATE  XXXXXX'','        00292\nJOBCARD2 DC    CL80'//     CLASS=?,MSGCLASS=?'                          00293\nEXECARD  DC    CL80'//STEP1    EXEC  PGM=IEBGENER,PARM=''/ABEND'''      00294\nINCARD1  DC    CL80'//SYSUT1 DD UNIT=3420,                        '     00295\nINCARD2  DC    CL80'//                                                 X00296\n                                            '                           00297\nINCARD3  DC    CL80'// DISP=(OLD,                                  '    00298\nINCARD4  DC    CL80'// DSN=                                            X00299\n                '                                                       00300\nOUTCARD  DC    CL80'//SYSUT2 DD UNIT=3480,DISP=(,CATLG,DELETE),'        00301\nOUTCARD2 DC    CL80'// DCB=*.SYSUT1,LABEL=(,SL,EXPDT=XXXXX),VOL=(,,,21)X00302\n               ,'                                                       00303\nOUTCARD3 DC    CL80'// DSN=                                            X00304\n                '                                                       00305\nOUTCARD4 DC    CL80'//SYSPRINT DD SYSOUT=*,DCB=BUFNO=1'                 00306\nOUTCARD5 DC    CL80'//SYSUDUMP DD SYSOUT=A,DCB=BUFNO=1'                 00307\nOUTCARD6 DC    CL80'//SYSIN    DD *'                                    00308\nOUTCARD7 DC    CL80'//STEP2    EXEC PGM=TMSUPDTE,COND=(0,LT,STEP1)'     00309\nOUTCARD8 DC    CL80'//TMSRPT   DD SYSOUT=*       '                      00310\nOUTCARD9 DC    CL80'//SYSIN    DD *              '                      00311\nOUTCARD0 DC    CL80'VOL XXXXXX                   '                      00312\nOUTCARDA DC    CL80'VER DSN=                                           X00313\n                 '                                                      00314\nOUTCARDB DC    CL80'REP EXPDT=XXXXX'                                    00315\nENDCARD  DC    CL80'//'                                                 00316\n         TITLE 'INELGIBLE JOB TABLE'                                    00317\n         DS    0F                                                       00318\nJOBLIST  EQU   *                                                        00319\n         DC    C'JOB1    '                                              00320\n         DC    C'JOB2    '                                              00321\n         DC    C'ETC     '                                              00322\nTBLLEN   EQU   *-JOBLIST                                                00323\n         TITLE 'TMS RECORD FORMAT'                                      00324\n         TMRECORD                                                       00325\n         TITLE 'CATALOG WORK AREA'                                      00326\nCAMLST1  CAMLST NAME,TMDSN,,CATAREA                                     00327\nCAMLST2  CAMLST BLOCK,TTR,,CATAREA                                      00328\nCATAREA  DS    0D                                                       00329\n         DS    265C                                                     00330\n         TITLE 'DCBS     '                                              00331\nSYSOUT   DCB   DDNAME=SYSOUT,MACRF=PM,DSORG=PS,RECFM=F,BLKSIZE=80,     X00332\n               BUFNO=1                                                  00333\nPRINT    DCB   DDNAME=PRINT,MACRF=PM,DSORG=PS                           00334\n         END                                                            00335\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VETAPEJ": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//VETAPE EXEC PGM=VETAPE                                                00005\n//STEPLIB  DD DSN=???????????????,DISP=SHR                              00003\n//SYSPRINT DD  SYSOUT=A,DCB=BUFNO=1                                     00007\n//SYSUDUMP DD  SYSOUT=A,DCB=BUFNO=1                                     00007\n//SYSOUT   DD  SYSOUT=(A,INTRDR),DCB=BUFNO=1                            00008\n//PRINT    DD  SYSOUT=A,DCB=(LRECL=80,BLKSIZE=8000,RECFM=FBA)           00009\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT424/FILE424.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT424", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}