Pseudo-Random Number Generator

    (Assembler)  I recently decided to try consolidating some
    programs I use to generate test data into a single run unit.
    The first hurdle was finding a suitable random number
    generator that I could implement under MVS 3.8.
    Unfortunately, the COBOL compiler we have available to us
    lacks those handy intrinsic functions, including RANDOM.  I
    also found that there are not many solutions available in
    Assembler or COBOL.  And those few I found (well, actually
    only a couple and they were very old) failed to built very
    random sets of numbers.  I came up with a subroutine, written
    in Assembler, based on the Linear Congruential method
    (described in Knuth, Sedgewick, and in many places on the
    'net).  It isn't cryptographic quality, but will do for
    simulation and ad hoc sets of test numbers.  I also wrote a
    COBOL program to do some analysis on the generated number
    sets.  The jobstream contained in member RANDOM will run the
    analysis program and illustrates how to link the Assembler
    routine to your own programs.

