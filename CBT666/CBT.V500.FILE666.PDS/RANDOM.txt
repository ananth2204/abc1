//RANDOMF  JOB 'ANALYZE RANDOMF',CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1)
//ASM     EXEC ASMFCL,PARM.ASM='LIST,LOAD,NODECK'
//ASM.SYSIN DD *
         PRINT ON,GEN,DATA
         TITLE 'RANDOMF: PSEUDO-RANDOM NUMBER GENERATOR'
*---------------------------------------------------------------------*
*                                                                     *
* GENERATES A PSEUDO-RANDOM NUMBER FOR RETURN TO A COBOL CALLING      *
* PROGRAM IN A COMPUTATIONAL-1 (FLOATING POINT) VARIABLE.             *
*                                                                     *
* THE "SEED" VALUE IS STORED IN A LOCAL VARIABLE BETWEEN CALLS, SO    *
* THIS IS NOT RE-ENTRANT CODE. IF RE-ENTRANT CODE IS REQUIRED, IT     *
* WOULD BE A TRIVIAL MODIFICATION TO MOVE THE SEED INTO THE CALLER'S  *
* STORAGE.                                                            *
*                                                                     *
* THE NUMBERS GENERATED ARE SUFFICIENTLY RANDOM FOR SIMULATION AND    *
* TESTING.                                                            *
*                                                                     *
* THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     *
* AND INCORPORATED INTO DERIVED WORKS SO LONG AS ATTRIBUTION TO THE   *
* ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    *
* SOURCE.                                                             *
*                                                                     *
* WRITTEN JANUARY, 2002 BY JAY MOSELEY, CCP                           *
* HTTP://WWW.JAYMOSELEY.COM/HERCULES/                                 *
*                                                                     *
*---------------------------------------------------------------------*
*
         LCLC  &SYSECT
&SYSECT  SETC  'RANDOMF'
*
&SYSECT  CSECT
*
@IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS
         DC    AL1(@IDENT03-@IDENT02)
@IDENT02 DC    C'&SYSECT '
         DC    C'&SYSDATE &SYSTIME - '
         DC    C'PSEUDO-RANDOM NUMBER GENERATOR'
@IDENT03 DS    0H
@IDENT04 EQU   *-@IDENT01
*
         SAVE  (14,12)             SAVE CALLER'S REGISTERS
*
         BALR  R12,0               ESTABLISH MY BASE
         USING *,R12
*
*---------------------------------------------------------------------*
* I DO NOT ESTABLISH A LOCAL REGISTER SAVE AREA SINCE I CALL NO       *
* SUBORDINATE PROGRAMS!                                               *
*---------------------------------------------------------------------*
*
         L     R11,0(,R1)          ADDRESS PARAMETER
         USING $PARMS,R11
*
*---------------------------------------------------------------------*
* THE SEED VALUE IS STORED IN LOCAL STORAGE. ON THE INITAL CALL, IT   *
* HAS THE ASSEMBLER ASSIGNED VALUE OF ZERO, SO ON THE INITIAL CALL    *
* THE SEED VALUE IS ESTABLISHED USING THE SYSTEM TIMER.               *
*---------------------------------------------------------------------*
         L     R5,SEED             LOAD SEED VALUE
         LTR   R5,R5               TEST FOR FIRST TIME
         BNZ   NEXTPICK            CONTINUE IF SEED ESTABLISHED
*
*---------------------------------------------------------------------*
* ONLY THE HUNDREDTHS PORTION OF THE TIMER IS CONSIDERED. IN THE      *
* EVENT THAT THE VALUE IS EXACTLY ZERO, THE SEED IS SET TO THE PRIME  *
* NUMBER 34513. OTHERWISE, THE SEED VALUE IS COMPUTED BY MULTIPLYING  *
* THE TIMER VALUE BY THE PRIME NUMBER 13831.                          *
*---------------------------------------------------------------------*
         TIME  DEC                 RETRIEVE SYSTEM TIME
         LR    R5,R0               MOVE TIME PORTION TO R5
         N     R5,=F'255'          CLEAR ALL BUT HUNDREDTHS/SECOND
         LTR   R5,R5               IS IT ZERO?
         BNZ   SEEDM                 NO, FACTOR
         LA    R5,=F'34513'        DEFAULT PRIME SEED
         B     NEXTPICK
*
SEEDM    M     R4,=F'13831'        PRIME FACTOR
*
NEXTPICK DS    0H
*---------------------------------------------------------------------*
* COMPUTE NEXT RANDOM NUMBER BASED ON SEED VALUE.                     *
*---------------------------------------------------------------------*
*
         M     R4,A                MULTIPLY SEED BY CONSTANT
         D     R4,M                DIVIDE BY MODULUS
         ST    R4,SEED             STORE SEED FOR NEXT ITERATION
*
         SRL   R4,7                ADJUST FOR REAL RESULT
         A     R4,C                ADD CONSTANT
         ST    4,$NUMBER           STORE IN CALLER'S VARIABLE
*
GOBACK   DS    0H
         RETURN (14,12),RC=0
*
SEED     DC    F'0'                SEED VALUE, 0 CAUSES INITIALIZATION
A        DC    F'16807'            MULTIPLIER
M        DC    F'2147483647'       MODULUS
C        DC    F'1073741824'       INCREMENT
*
$PARMS   DSECT
*---------------------------------------------------------------------*
* THIS DSECT DEFINES THE VARIABLE TO RECEIVE THE RETURNED VALUE.      *
*---------------------------------------------------------------------*
$NUMBER  DS    E                   COMPUTATIONAL-1 VARIABLE
*
         YREGS
*
         END
/*
//LKED.SYSLMOD DD DSN=&RANDOM
//LKED.SYSIN DD *
  NAME RANDOMF
/*
//COB     EXEC COBUCLG,PARM.COB='LIST,OBJECT,NODECK,DMAP,PMAP'
//COB.SYSIN DD *
000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. ANALYZE.
000300* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
000400*  AUTHOR. JAY MOSELEY.                                         *
000500*  DATE-WRITTEN. JANUARY, 2002.                                 *
000600*  FUNCTION. TEST THE DISTRIBUTION OF THE OUTPUT OF THE         *
000700*            PSEUDO-RANDOM NUMBER GENERATOR:  RANDOMF.          *
000800* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
000900
001000 ENVIRONMENT DIVISION.
001100 INPUT-OUTPUT SECTION.
001200 FILE-CONTROL.
001300
001400     SELECT REPORT-FILE
001500         ASSIGN TO UR-1403-S-REPORT.
001600
001700 DATA DIVISION.
001800 FILE SECTION.
001900
002000 FD  REPORT-FILE
002100     LABEL RECORDS ARE OMITTED
002200     REPORT IS ANALYSIS.
002300
002400 WORKING-STORAGE SECTION.
002500
002600 01  WORK-VARIABLES.
002700     02  WV-ITERATION            PIC S9(3)   COMP-3.
002800
002900     02  WV-RANDOM                           COMP-1.
003000
003100     02  WV-SAMPLE               PIC S9(3)V9(4).
003200     02  FILLER                  REDEFINES WV-SAMPLE.
003300         03  WV-SAMPLE-INT       PIC S9(3).
003400         03  FILLER              PIC S9(4).
003500
003600     02  WV-MIN                  PIC S9(3)   COMP-3.
003700     02  WV-MAX                  PIC S9(3)   COMP-3.
003800     02  WV-MEAN                             COMP-1.
003900     02  WV-R-SQ                             COMP-1.
004000     02  WV-VARIANCE                         COMP-1.
004100     02  WV-STDDEV                           COMP-1.
004200     02  WV-CHISQR                           COMP-1.
004300     02  WV-ALERT                PIC X(5).
004400
004500     02  SAMPLE-R                OCCURS 100 TIMES
004600                                 INDEXED BY SAMPLE-IX
004700                                 PIC S9(3)   COMP-3.
004800
004900
005000 REPORT SECTION.
005100 RD  ANALYSIS
005200     PAGE LIMIT IS 60 LINES
005300     FIRST DETAIL 3
005400     LAST DETAIL 55.
005500
005600 01  REPORT-HEADING              TYPE IS REPORT HEADING.
005700     02  LINE 1.
005800         03  COLUMN 01           PIC X(48)   VALUE
005900         'TESTING PSEUDO-RANDOM NUMBER GENERATOR:  RANDOMF'.
006000
006100     02  LINE PLUS 2.
006200         03  COLUMN 01           PIC X(51)   VALUE
006300         'THE FOLLOWING SEQUENCE WILL BE PERFORMED 100 TIMES:'.
006400
006500     02  LINE PLUS 1.
006600         03  COLUMN 06           PIC X(44)   VALUE
006700         'FOR A SAMPLE SET OF 1,100 GENERATED NUMBERS '.
006800         03  COLUMN 50           PIC X(15)   VALUE
006900         'IN THE RANGE OF'.
007000
007100     02  LINE PLUS 1.
007200         03  COLUMN 06           PIC X(44)   VALUE
007300         '001 THROUGH 100, THE ARITHMETIC MEAN, THE ST'.
007400         03  COLUMN 50           PIC X(17)   VALUE
007500         'ANDARD DEVIATION,'.
007600
007700     02  LINE PLUS 1.
007800         03  COLUMN 06           PIC X(44)   VALUE
007900         'AND CHI-SQUARE WILL BE COMPUTED FOR THE SET.'.
008000
008100     02  LINE PLUS 2.
008200         03  COLUMN 01           PIC X(44)   VALUE
008300         'IF THE CHI-SQUARE STATISTIC IS CLOSE TO THE '.
008400         03  COLUMN 45           PIC X(44)   VALUE
008500         'MAXIMUM VALUE OF A SAMPLE (100), THEN THE   '.
008600
008700     02  LINE PLUS 1.
008800         03  COLUMN 01           PIC X(44)   VALUE
008900         'NUMBERS ARE RANDOM; IF IT IS TOO FAR AWAY, T'.
009000         03  COLUMN 45           PIC X(44)   VALUE
009100         'HEN THEY ARE NOT.  FOR A SIMPLE TEST, THE   '.
009200
009300     02  LINE PLUS 1.
009400         03  COLUMN 01           PIC X(44)   VALUE
009500         'STATISTIC SHOULD BE 2 * SQUARE ROOT(100) OF '.
009600         03  COLUMN 45           PIC X(44)   VALUE
009700         '100, (IN THE RANGE 80 THROUGH 120).         '.
009800
009900 01  PAGE-HEADING                TYPE IS PAGE HEADING.
010000     02  LINE 1.
010100         03  COLUMN 55           PIC X(08)   VALUE
010200             'STANDARD'.
010300
010400     02  LINE 2.
010500         03  COLUMN 01           PIC X(09)   VALUE
010600             'ITERATION'.
010700         03  COLUMN 12           PIC X(07)   VALUE
010800             'MINIMUM'.
010900         03  COLUMN 21           PIC X(07)   VALUE
011000             'MAXIMUM'.
011100         03  COLUMN 35           PIC X(04)   VALUE
011200             'MEAN'.
011300         03  COLUMN 43           PIC X(08)   VALUE
011400             'VARIANCE'.
011500         03  COLUMN 54           PIC X(09)   VALUE
011600             'DEVIATION'.
011700         03  COLUMN 65           PIC X(10)   VALUE
011800             'CHI-SQUARE'.
011900
012000 01  SET-DETAILS                 TYPE IS DETAIL.
012100     02  LINE PLUS 1.
012200         03  COLUMN 7            PIC ZZ9     SOURCE
012300             WV-ITERATION.
012400         03  COLUMN 16           PIC ZZ9     SOURCE WV-MIN.
012500         03  COLUMN 25           PIC ZZ9     SOURCE WV-MAX.
012600         03  COLUMN 34           PIC ZZ9.9   SOURCE WV-MEAN.
012700         03  COLUMN 45           PIC ZZ9.99  SOURCE WV-VARIANCE.
012800         03  COLUMN 57           PIC ZZ9.99  SOURCE WV-STDDEV.
012900         03  COLUMN 69           PIC ZZ9.99  SOURCE WV-CHISQR.
013000         03  COLUMN 76           PIC X(5)    SOURCE WV-ALERT.
013100
013200 PROCEDURE DIVISION.
013300
013400 0000-CONTROL.
013500
013600     OPEN OUTPUT REPORT-FILE.
013700     INITIATE ANALYSIS.
013800
013900     PERFORM 1000-TEST-SET
014000         VARYING WV-ITERATION
014100             FROM +1 BY +1
014200         UNTIL WV-ITERATION GREATER THAN +100.
014300*    END-PERFORM.
014400
014500     TERMINATE ANALYSIS.
014600     CLOSE REPORT-FILE.
014700
014800     STOP RUN.
014900* - - - - - - - - - - - - - - - - - - - - -> PROGRAM EXIT POINT <
015000
015100 1000-TEST-SET.
015200
015300* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
015400* CLEAR ARRAY TO SUM FREQUENCY.                                 *
015500* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
015600     PERFORM 1100-CLEAR-SET
015700         VARYING SAMPLE-IX
015800             FROM +1 BY +1
015900         UNTIL SAMPLE-IX GREATER THAN +100.
016000*    END-PERFORM.
016100
016200     MOVE +101 TO WV-MIN.
016300     MOVE +0 TO WV-MAX.
016400     MOVE +0 TO WV-MEAN.
016500     MOVE +0 TO WV-R-SQ.
016600     MOVE +0 TO WV-CHISQR.
016700
016800* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
016900* POPULATE SAMPLE SET.                                          *
017000* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
017100     PERFORM 1200-FILL-SET
017200         1100 TIMES.
017300*    END-PERFORM.
017400
017500* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
017600* COMPLETE MEAN COMPUTATION.                                    *
017700* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
017800     COMPUTE WV-MEAN = WV-MEAN / 1100.
017900
018000* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
018100* COMPLETE VARIANCE COMPUTATION.                                *
018200* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
018300     COMPUTE WV-VARIANCE = (WV-R-SQ / 1100) - (WV-MEAN ** 2).
018400
018500* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
018600* COMPUTE STANDARD DEVIATION.                                   *
018700* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
018800     COMPUTE WV-STDDEV = WV-VARIANCE ** .5.
018900
019000* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
019100* COMPUTE SUM OF SQUARES OF FREQENCY OF OBSERVATIONS.           *
019200* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
019300     PERFORM 1300-COMPUTE-SQUARES
019400         VARYING SAMPLE-IX
019500             FROM +1 BY +1
019600         UNTIL SAMPLE-IX GREATER THAN +100.
019700*    END-PERFORM.
019800
019900* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
020000* COMPLETE CHI-SQUARE COMPUTATION.                              *
020100* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
020200     COMPUTE WV-CHISQR = (100 * (WV-CHISQR / 1100)) - 1100.
020300
020400     IF WV-CHISQR LESS THAN 80.0
020500     OR WV-CHISQR GREATER THAN 120.0
020600         MOVE '<****' TO WV-ALERT
020700     ELSE
020800         MOVE SPACES TO WV-ALERT.
020900*    END-IF.
021000
021100* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
021200* PRINT REPORT LINE.                                            *
021300* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
021400     GENERATE SET-DETAILS.
021500* - - - - - - - - - - - - - - - - - - - - -> PERFORM EXIT POINT <
021600
021700 1100-CLEAR-SET.
021800
021900     MOVE +0 TO SAMPLE-R (SAMPLE-IX).
022000* - - - - - - - - - - - - - - - - - - - - -> PERFORM EXIT POINT <
022100
022200 1200-FILL-SET.
022300
022400     CALL 'RANDOMF' USING WV-RANDOM.
022500
022600* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
022700* CONFORM RETURN VALUE INTO INTEGER 1:100.                      *
022800* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
022900     COMPUTE WV-SAMPLE = (100 * WV-RANDOM) + 1.
023000
023100     SET SAMPLE-IX TO WV-SAMPLE-INT.
023200     ADD +1 TO SAMPLE-R (SAMPLE-IX).
023300
023400     ADD WV-SAMPLE-INT TO WV-MEAN.
023500
023600     IF WV-SAMPLE-INT LESS THAN WV-MIN
023700         MOVE WV-SAMPLE-INT TO WV-MIN.
023800*    END-IF.
023900
024000     IF WV-SAMPLE-INT GREATER THAN WV-MAX
024100         MOVE WV-SAMPLE-INT TO WV-MAX.
024200*    END-IF.
024300
024400     COMPUTE WV-R-SQ = WV-R-SQ + (WV-SAMPLE-INT ** 2).
024500* - - - - - - - - - - - - - - - - - - - - -> PERFORM EXIT POINT <
024600
024700 1300-COMPUTE-SQUARES.
024800
024900     COMPUTE WV-CHISQR = WV-CHISQR + (SAMPLE-R (SAMPLE-IX) ** 2).
025000* - - - - - - - - - - - - - - - - - - - - -> PERFORM EXIT POINT <
025100
025200*END PROGRAM ANALYZE.
/*
//LKED.SYSLIB DD
//         DD DSN=&RANDOM,DISP=(OLD,DELETE)
//GO.SYSOUT DD SYSOUT=*
//GO.SYSUDUMP DD SYSOUT=*
//GO.REPORT DD SYSOUT=*
//
