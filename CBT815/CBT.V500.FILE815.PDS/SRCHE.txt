/* REXX */

/*------------------------------------------------------------------------*/
/* SRCHE - Extended version of SRCH. This REXX supports the searching of  */
/*         M U L T I P L E  PDS datasets                                  */
/*         To launch (examples):                                          */
/*            "TSO SRCHE" - Dialog will elicit required dataset info      */
/*            "TSO SRCHE TSDB.**.CNTL*"  Use "3.4" method to feed DSnames */
/*         NOTE: Any detected MIGRATED Datasets will stop this REXX       */
/*         NOTE: Max argument hits allowed is 5,000 (modifiable)          */
/*         NOTE: If initial call doesn't specify a DS, it will VGET it    */
/*         MAXCOUNT=Specifies max # hits allowed                          */
/*------------------------------------------------------------------------*/

/* FIXES ...                                                              */
/* 04/27/11 RGG - Drop all Non-PDS datasets                               */
/* 05/02/13 RGG - Add a REMPOP to fix null panel output                   */
/* 10/30/14 RGG - Change dataset "pointer" to all '@'                     */

arg SRCHEMSKU
SRCHEMSKU=strip(SRCHEMSKU,'B','''')
address ispexec
"CONTROL ERRORS RETURN"
"TBEND srchetab"
address ispexec
"CONTROL ERRORS NORETURN"
if SRCHEMSKU <> '' then SRCHEMSK=SRCHEMSKU
  else
"VGET SRCHEMSK"

ispexec "vput(SRCHEMSK) profile"
ISPEXEC "ADDPOP ROW(4) COLUMN(4)"
"DISPLAY PANEL(SRCHEPAN)"
if RC = 8 then  exit
"VGET SRCHEMSK"

ADDRESS ISPEXEC
"LMDINIT LISTID(LISTID) LEVEL("SRCHEMSK")"

DSN=''
X1=OUTTRAP('DS_LIST.')
DO FOREVER
   ADDRESS ISPEXEC
   "LMDLIST LISTID("LISTID") OPTION(LIST) DATASET(DSN) STATS(YES)"
   if rc<>0 then leave
   ADDRESS TSO
   "LISTCAT ENT('"DSN"') VOLUMES"
END

X1=OUTTRAP OFF
"LMDLIST LISTID("LISTID") OPTION(FREE)"
"LMDFREE LISTID("LISTID")"
if ds_List.0 < 1 then
  do
    say 'No DSNAME hits'
    say 'Search mask is: ('SRCHEMSK')'
    exit
  end

/* create in-core tables consisting of all =3.4 dsnames & RECALL info */

x2=0
#RECALLS=0
MAXCOUNT=5000        /* STOP when this #hits is reached */
DO X1=1 TO DS_LIST.0
  PARSE VAR DS_LIST.X1 ARG1 ARG2 ARG3
  if strip(ARG1)='NONVSAM' then
    do
      x2=x2+1
      DSN_LIST.X2=STRIP(ARG3)
      dsn_list.0=x2
      iterate
    end
  if pos('VOLSER',arg1) > 0 then
    do
      migrat='N'
      if pos('MIGRAT',arg1) > 0 then migrat='Y'
      dvt=pos('--X',arg2)+4
      if migrat='N' THEN
        if substr(arg2,dvt,1) = 7 then
          do
            x2=x2-1
            dsn_list.0=dsn_list.0-1
            iterate
          end
      if MIGRAT='Y' then
        do
          #recalls=#recalls+1
          migrat_table.#recalls=dsn_list.x2
          iterate
        end
    end
end

DROP DS_LIST.

if x2 = 0 then
  do
    say 'No DSNAME hits'
    say 'Search mask is: ('SRCHEMSK')'
    exit
  end

if #recalls > 0 then
  do
    if #recalls > 9 then
      do
        say 'A total of ('#recalls') recalls will be required'
        do forever
          say 'Do you wish to View the RECALL list ? (Y/N), N = exit REXX'
          parse upper pull YN
          if YN = 'Y' then leave
            else
              do
                say '    --->   No. HSM RECALLS Detected: ('#RECALLS')  <---  '
                say '*********************************************************'
                say '* All datasets must be HSM RECALLED before              *'
                say '* you search "'srchemsk'"   '
                say '*                                                       *'
                say '*                                                       *'
                say '* You  M U S T                                          *'
                say '*                                                       *'
                say '* 1. Change your search Dsname mask                     *'
                say '*           -  OR  -                                    *'
                say '* 2. DFHSM RECALL all affected datasets                 *'
                say '*                                                       *'
                say '*********************************************************'
                say 'SRCHE ENDS ...'
                exit
              end
        end
      end
      say '  - -->   No. HSM RECALLS Detected: ('#RECALLS')  <---   '
      say '*********************************************************'
      say '* The following datasets must be HSM RECALLED before    *'
      say '* you search "'srchemsk'"  *'
      say '*                                                       *'
      do x1=1 to #recalls
        say '*  'migrat_table.x1
      end
      say '*                                                       *'
      say '* You  M U S T                                          *'
      say '*                                                       *'
      say '* 1. Change your search Dsname mask                     *'
      say '*           -  OR  -                                    *'
      say '* 2. DFHSM RECALL all affected datasets                 *'
      say '*                                                       *'
      say '*********************************************************'
      say 'SRCHE ENDS ...'
      exit
  end

total_cyls=0
total_trks=0
total_blks=0

say '   --->   The Following ('X2') Datasets Will be searched   <---  '
say '*****************************************************************'
say '*                                               ALLOC    ALLOC  *'
say '* DATASET NAME                                  UNITS    SIZE   *'
say '* --------------------------------------------  -------- ------ *'
do x1=1 to x2
  curdsn=left(dsn_list.x1,44)
  hotdsn=''''
  hotdsn=hotdsn||strip(dsn_list.x1)
  hotdsn=hotdsn||''''
  x=listdsi(hotdsn directory)
  myunits=left(sysunits,8)
  myalloc=right(sysalloc,6)
  say '*  'curdsn||' '||myunits||' 'myalloc

  if sysunits='CYLINDER' then
    total_cyls=total_cyls+sysalloc
  else
  if sysunits='TRACK' then
    total_trks=total_trks+sysalloc
  else
  if sysunits='BLOCK' then
    total_blks=total_blks+sysalloc

end
say '*'
say '* TOTAL SEARCH SIZE IS:'
say '*'
if total_cyls > 0 then
  say '* CYLINDERS ('total_cyls')'
if total_trks > 0 then
  say '* TRACKS    ('total_trks')'
if total_blks > 0 then
  say '* BLOCKS    ('total_blks')'
say '*                                                               *'
say '*****************************************************************'
say ' '

Qloop:     /* LOOP for every PF3 after edit/browse screen */

/* free datasets */

  address tso
  "FREE FILE(OUTDD)"
  "FREE FILE(NEWDD)"
  "FREE FILE(SYSIN)"


/* output dsn */

  rptdsn=SYSVAR("SYSUID")||'.$$TEMP$$.TEMP.RPTOUT'
  stat=MSG("OFF")
  "DELETE "rptdsn
  "ALLOC F(OUTDD) DA("rptdsn")",
  " MOD CYLINDERS  CATALOG SPACE(2,2)",
  " UNIT(SYSDA)",
  " BLKSIZE(0) RECFM(F,B,A) LRECL(133)"

/* Display popup window */

  ZWINTTL = 'Search '||SRCHEMSK

  ISPEXEC "ADDPOP ROW(4) COLUMN(4)"
  ISPEXEC "VGET (db2srch1,db2srch2,db2srch3) PROFILE"
  ISPEXEC "DISPLAY PANEL(db2srchw)"

  IF RC=8 THEN signal leave    /* BIG EXIT */

  ISPEXEC "REMPOP"

  search_arg1=strip(db2srch1,b,"'")     /* strip quotes if any */
  search_arg2=strip(db2srch2,b,"'")
  search_arg3=strip(db2srch3,b,"'")

  stat=MSG("OFF")      /* turn messages off */

/* set search argument sysin data adding quotes if needed */

 drop inrec.
  inrec.1='SRCHFOR '||"'"||search_arg1||"'"
  if search_arg2>' ' then
    inrec.2='SRCHFORC '||"'"||search_arg2||"'"
  if search_arg3>' ' then
    inrec.3='SRCHFORC '||"'"||search_arg3||"'"

/* sysin input dsn */

  "ALLOC  F(SYSIN) NEW DELETE RECFM(F) BLKSIZE(80)"

  "EXECIO * DISKW SYSIN (STEM INREC. FINIS"


/* execute 3.14 as many times as there are dsnames */

  ISPEXEC "VGET (ZSYSID) "
  do x1=1 to DSN_LIST.0
    search_dsn=dsn_list.x1
    "FREE FILE(NEWDD)"
    "ALLOC FILE(NEWDD) DATASET('"search_dsn"') SHR REUSE"
    "CALL 'ISP.SISPLPA(ISRSUPC)' 'SRCHCMP,ANYC'  "
  end

/* free datasets */

  "FREE FILE(OUTDD)"
  "FREE FILE(NEWDD)"
  "FREE FILE(SYSIN)"

/* allocate and proces report file */

  "ALLOC FILE(INDD) DA("rptdsn") SHR",

  eof = 'no'                            /* initialize end-of-file  */
  hit_count=0
  PREV_DSN=' '
  dsn_hit=0                             /* 0=curdsn has no hits    */

  do while eof = 'no'                   /* loop until eof          */
     "EXECIO 1 DISKR INDD (STEM ILINE." /* READ A LINE             */
      if rc = 2 then                    /* if eof                  */
        eof = 'yes'
      else                              /* otherwise               */
        do                              /* test for content        */
          if pos('SRCH DSN:',iline.1) > 0 then
            do
              DSNPOS=pos('SRCH DSN:',iline.1)+10
              CUR_DSN=substr(iline.1,dsnpos,44)

              /* If not a PDS, SRCHE drops it */

              XX=listdsi(CUR_DSN)
              if sysdsorg <> 'PO' & sysdsorg <> 'POU' then
                do
                  say CUR_DSN ' is not a PDS'
                  say 'It will not be searched - SRCHE continues ...'
                  say ' '
                  iterate
                end

              if CUR_DSN=PREV_DSN then iterate
                else
              PREV_DSN=CUR_DSN
              dsn_hits=0
              iterate
            end
          if pos('- STRING(S) FOUND -',iline.1) > 0 then
            do
              if dsn_hits = 0 then
                do
                  dsn_hits=1
                  hit_count=hit_count + 1
                  hit_stem.hit_count='@@@@@@@@@@@ '||CUR_DSN
                  member.hit_count=CUR_DSN
                  DSN_MBR_XREF.hit_count=CUR_DSN
                end
                cur_memb=substr(iline.1,3,8)
                cur_memb_cnt = 0
            end
          if datatype(substr(iline.1,5,4))='NUM' &,
             cur_memb_cnt < 10 &,
             substr(iline.1,3,1) = ' ' &,
             substr(iline.1,9,1) = ' ' then
            do
              hit_count=hit_count+1
              cur_memb_cnt=cur_memb_cnt+1
              hit_stem.hit_count=cur_memb||' '||substr(iline.1,10,70)
              member.hit_count=cur_memb
              DSN_MBR_XREF.hit_count=CUR_DSN
            end
          if hit_count > maxcount then
            do
              hit_count=hit_count+1
              hit_stem.hit_count='  '
              hit_count=hit_count+1
              hit_stem.hit_count=,
                  ' ++++++ hit count > 'maxcount', be more specific',
                  'in your search ++++++'
              hit_count=hit_count+1
              hit_stem.hit_count='  '
              eof = 'yes'
            end
        end
   end

  "EXECIO 0 DISKR INDD (FINIS"          /* Close INDD file         */
  "FREE FILE(INDD)"

   /* ------------------------------------------------------
      done with call, display results in an ISPF table
      ------------------------------------------------------ */

   title1='Search results for ==>'||search_arg1
   title2='   and ==>'||search_arg2||'  and ==>'||search_arg3
   title3=' '

   "ISPEXEC TBCREATE srchetab names(x, line) NOWRITE SHARE"

    do i=1 to hit_count
      x='_'
      if pos('--->>',hit_stem.i) > 0 then
        x=' '
      line=hit_stem.i
      "ISPEXEC TBADD srchetab"
    end
    c_rownum=1

  Mloop:   /* LOOP for all edits and browses */

     "ISPEXEC TBTOP srchetab"
     if c_rownum>1 then
       do
         "ISPEXEC TBSKIP  srchetab NUMBER("c_rownum") NOREAD"
       end

      ISPEXEC "REMPOP"     /* Fixes Bug */
     "ISPEXEC TBDISPL srchetab PANEL(stemsrch) position(irownum)"

      rownum=irownum+0     /* make numeric */
      if rownum>0 then
        do
          member_name=strip(member.rownum)
          if pos('.',member_name) > 0 then
            do
              say 'You cannot select a DSName ... RETRY'
              c_rownum=irownum
              signal Mloop
            end
          dsn_name=strip(DSN_MBR_XREF.rownum)
          c_rownum=rownum
          action=x
        end

     found_mem=dsn_name||'('||member_name||')'
     upper found_mem

     if rownum>0 then
       do
        if (action='E' | action='e')  then
          do
            ADDRESS ISPEXEC "EDIT DATASET('"found_mem"')"
          end
       else
          do
            ADDRESS ISPEXEC "BROWSE DATASET('"found_mem"')"
            IF RC>0 THEN ADDRESS ISPEXEC "SETMSG MSG("ZERRMSG")"
          end
       end

    if rownum>0 then signal Mloop    /* act upon PF3 */

    "ISPEXEC TBCLOSE srchetab"

    stat=MSG("ON")       /* turn messages back on */

    signal Qloop         /* go back and refresh search args */

leave:

exit
