{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012851000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE815.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE815.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x04'", "DS1TRBAL": "b'\\xcc\\xee'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x99\\x00\\x08\\x05\\x99\\x00\\x0b\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00I\\x01\\x142O\\x01\\x142O\\x16\\x06\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2014-11-20T00:00:00", "modifydate": "2014-11-20T16:06:49", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-490"}, "text": "REGULAR CBT TAPE - VERSION 490    FILE:  815\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT490.FILE815\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 582 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/20/14    16:06:49    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\t0o\\x01\\t0o\\x12!\\x004\\x004\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-11-02T00:00:00", "modifydate": "2009-11-02T12:21:16", "lines": 52, "newlines": 52, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:   SRCHE Facility\nFrom:      \"Glover, Bob\" <Bob.Glover@lpsvcs.com>\nDate:      Mon, 2 Nov 2009 10:28:17 -0500\nTo:        \"'sbgolob@cbttape.org'\" <sbgolob@cbttape.org>\n\nHello Sam,\n\nAttached is my latest contribution. Let me know if the format has\nany problems.\n\nSRCHE\n\nThis is a search facility that supports the searching of a user\nentered variable across multiple datasets. It consists of (1)\nREXX and (3) ISPF panels. It is an enhancement to the already CBT\npresent SRCH facility which I introduced many years ago. The core\ncode was created by LEE Hayden. I created the logic that wraps\naround it.\n\nUsers interface with SRCHE (SRCH EXTENDED) in two ways, both in\nTSO/E. ONE: simply issue  TSO SRCHE  and a panel pops up to allow\none to enter any dataset name search mask. TWO: on a  3.4  screen\nshowing one or more dataset names, enter  SRCHE  on a dsname line\nand the same panel pops up with that name in its dsname mask. At\nthis point  users can modify the panel dsname to whatever they\nwant.\n\nA main issue with doing all this is that one may inadvertently\nrequest one (or many) DFHSM MIGRATED datasets to appear as\npotential search targets. SRCHE presents a list of all MIGRATED\ndatasets so the user can rethink his/her search mask. SRCHE will\nNOT issue any RECALLS. This must be done by the user. Once a\nvalid list of target datasets has been created, SRCHE will then\nact like SRCH and ask the user for a valid search argument to go\nagainst the list of datasets previously created. A maximum of\n5,000 hits is supported but that can easily be changed in the\nREXX. The only limitation is the size of a TSO user s region.\n\nAny suggestions to make this a better product are welcome. I\ndon t have the time I used to have in working this fun stuff so\nit may take me a while to complete a change.\n\nBest Regards,\n\nBob Glover\nDataBase Systems\nLender Processing Services, Inc.\n601 Riverside Ave Jacksonville, FL 32204\n904.854.8989\n904.704.6007\nbob.glover@lpsvcs.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE815": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00B\\x01\\x142O\\x01\\x142O\\x16\\x06\\x00(\\x00(\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2014-11-20T00:00:00", "modifydate": "2014-11-20T16:06:42", "lines": 40, "newlines": 40, "modlines": 0, "user": "CBT-490"}, "text": "//***FILE 815 is from Bob Glover and contains an extended string    *   FILE 815\n//*           search facility that runs under ISPF.  We trust that  *   FILE 815\n//*           it will be useful to you.                             *   FILE 815\n//*                                                                 *   FILE 815\n//*           email:  \"Glover, Bob\" <im4fsu@comcast.net>            *   FILE 815\n//*                                                                 *   FILE 815\n//*     The following is a description of this facility in          *   FILE 815\n//*     more detail.                                                *   FILE 815\n//*                                                                 *   FILE 815\n//*     SRCHE                                                       *   FILE 815\n//*                                                                 *   FILE 815\n//*     This is a search facility that supports the searching of    *   FILE 815\n//*     a user entered variable across multiple datasets.  It       *   FILE 815\n//*     consists of (1) REXX and (3) ISPF panels.  It is an         *   FILE 815\n//*     enhancement to the already CBT present SRCH facility        *   FILE 815\n//*     which I introduced many years ago.  The core code was       *   FILE 815\n//*     created by Lee Hayden. I created the logic that wraps       *   FILE 815\n//*     around it.                                                  *   FILE 815\n//*                                                                 *   FILE 815\n//*     Users interface with SRCHE (SRCH EXTENDED) in two ways,     *   FILE 815\n//*     both in TSO/E. ONE: simply issue  TSO SRCHE  and a panel    *   FILE 815\n//*     pops up to allow one to enter any dataset name search       *   FILE 815\n//*     mask. TWO: on a  3.4  screen showing one or more dataset    *   FILE 815\n//*     names, enter  SRCHE  on a dsname line and the same panel    *   FILE 815\n//*     pops up with that name in its dsname mask. At this point    *   FILE 815\n//*     users can modify the panel dsname to whatever they want.    *   FILE 815\n//*                                                                 *   FILE 815\n//*     A main issue with doing all this is that one may            *   FILE 815\n//*     inadvertently request one (or many) DFHSM MIGRATED          *   FILE 815\n//*     datasets to appear as potential search targets. SRCHE       *   FILE 815\n//*     presents a list of all MIGRATED datasets so the user can    *   FILE 815\n//*     rethink his/her search mask. SRCHE will NOT issue any       *   FILE 815\n//*     RECALLS. This must be done by the user. Once a valid        *   FILE 815\n//*     list of target datasets has been created, SRCHE will        *   FILE 815\n//*     then act like SRCH and ask the user for a valid search      *   FILE 815\n//*     argument to go against the list of datasets previously      *   FILE 815\n//*     created. A maximum of 5,000 hits is supported but that      *   FILE 815\n//*     can easily be changed in the REXX.  The only limitation     *   FILE 815\n//*     is the size of a TSO user's region.                         *   FILE 815\n//*                                                                 *   FILE 815\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DB2SRCHW": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x00\\x96\\x03\\x1f\\x00\\x96\\x03\\x1f\\t5\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xe2\\xf0\\xf8\\xf9\\xf7@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-01-31T00:00:00", "modifydate": "1996-01-31T09:35:41", "lines": 19, "newlines": 19, "modlines": 0, "user": "TS0897"}, "text": ")ATTR\n   \u00ac TYPE(text) intens(high) color(yellow)\n   @ TYPE(text) intens(high) color(green)\n   } TYPE(text) intens(high) color(yellow)\n)BODY window(68,10)\n+ _zcmd               +\n%                     +\n% Argument1  >_db2srch1               +\n% Argument2  >_db2srch2               +\n% Argument3  >_db2srch3               +\n%                     +\n%                     +\n+                     +\n)INIT\n  .CURSOR = db2srch1\n)PROC\n  ver (&db2srch1,nb)\n  vput (db2srch1,db2srch2,db2srch3) profile\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SRCHE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00C\\x01\\x13\\x12/\\x01\\x140?\\x14F\\x01\\x9f\\x01\\x98\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2013-05-02T00:00:00", "modifydate": "2014-10-30T14:46:43", "lines": 415, "newlines": 408, "modlines": 0, "user": "TS0710"}, "text": "/* REXX */\n\n/*------------------------------------------------------------------------*/\n/* SRCHE - Extended version of SRCH. This REXX supports the searching of  */\n/*         M U L T I P L E  PDS datasets                                  */\n/*         To launch (examples):                                          */\n/*            \"TSO SRCHE\" - Dialog will elicit required dataset info      */\n/*            \"TSO SRCHE TSDB.**.CNTL*\"  Use \"3.4\" method to feed DSnames */\n/*         NOTE: Any detected MIGRATED Datasets will stop this REXX       */\n/*         NOTE: Max argument hits allowed is 5,000 (modifiable)          */\n/*         NOTE: If initial call doesn't specify a DS, it will VGET it    */\n/*         MAXCOUNT=Specifies max # hits allowed                          */\n/*------------------------------------------------------------------------*/\n\n/* FIXES ...                                                              */\n/* 04/27/11 RGG - Drop all Non-PDS datasets                               */\n/* 05/02/13 RGG - Add a REMPOP to fix null panel output                   */\n/* 10/30/14 RGG - Change dataset \"pointer\" to all '@'                     */\n\narg SRCHEMSKU\nSRCHEMSKU=strip(SRCHEMSKU,'B','''')\naddress ispexec\n\"CONTROL ERRORS RETURN\"\n\"TBEND srchetab\"\naddress ispexec\n\"CONTROL ERRORS NORETURN\"\nif SRCHEMSKU <> '' then SRCHEMSK=SRCHEMSKU\n  else\n\"VGET SRCHEMSK\"\n\nispexec \"vput(SRCHEMSK) profile\"\nISPEXEC \"ADDPOP ROW(4) COLUMN(4)\"\n\"DISPLAY PANEL(SRCHEPAN)\"\nif RC = 8 then  exit\n\"VGET SRCHEMSK\"\n\nADDRESS ISPEXEC\n\"LMDINIT LISTID(LISTID) LEVEL(\"SRCHEMSK\")\"\n\nDSN=''\nX1=OUTTRAP('DS_LIST.')\nDO FOREVER\n   ADDRESS ISPEXEC\n   \"LMDLIST LISTID(\"LISTID\") OPTION(LIST) DATASET(DSN) STATS(YES)\"\n   if rc<>0 then leave\n   ADDRESS TSO\n   \"LISTCAT ENT('\"DSN\"') VOLUMES\"\nEND\n\nX1=OUTTRAP OFF\n\"LMDLIST LISTID(\"LISTID\") OPTION(FREE)\"\n\"LMDFREE LISTID(\"LISTID\")\"\nif ds_List.0 < 1 then\n  do\n    say 'No DSNAME hits'\n    say 'Search mask is: ('SRCHEMSK')'\n    exit\n  end\n\n/* create in-core tables consisting of all =3.4 dsnames & RECALL info */\n\nx2=0\n#RECALLS=0\nMAXCOUNT=5000        /* STOP when this #hits is reached */\nDO X1=1 TO DS_LIST.0\n  PARSE VAR DS_LIST.X1 ARG1 ARG2 ARG3\n  if strip(ARG1)='NONVSAM' then\n    do\n      x2=x2+1\n      DSN_LIST.X2=STRIP(ARG3)\n      dsn_list.0=x2\n      iterate\n    end\n  if pos('VOLSER',arg1) > 0 then\n    do\n      migrat='N'\n      if pos('MIGRAT',arg1) > 0 then migrat='Y'\n      dvt=pos('--X',arg2)+4\n      if migrat='N' THEN\n        if substr(arg2,dvt,1) = 7 then\n          do\n            x2=x2-1\n            dsn_list.0=dsn_list.0-1\n            iterate\n          end\n      if MIGRAT='Y' then\n        do\n          #recalls=#recalls+1\n          migrat_table.#recalls=dsn_list.x2\n          iterate\n        end\n    end\nend\n\nDROP DS_LIST.\n\nif x2 = 0 then\n  do\n    say 'No DSNAME hits'\n    say 'Search mask is: ('SRCHEMSK')'\n    exit\n  end\n\nif #recalls > 0 then\n  do\n    if #recalls > 9 then\n      do\n        say 'A total of ('#recalls') recalls will be required'\n        do forever\n          say 'Do you wish to View the RECALL list ? (Y/N), N = exit REXX'\n          parse upper pull YN\n          if YN = 'Y' then leave\n            else\n              do\n                say '    --->   No. HSM RECALLS Detected: ('#RECALLS')  <---  '\n                say '*********************************************************'\n                say '* All datasets must be HSM RECALLED before              *'\n                say '* you search \"'srchemsk'\"   '\n                say '*                                                       *'\n                say '*                                                       *'\n                say '* You  M U S T                                          *'\n                say '*                                                       *'\n                say '* 1. Change your search Dsname mask                     *'\n                say '*           -  OR  -                                    *'\n                say '* 2. DFHSM RECALL all affected datasets                 *'\n                say '*                                                       *'\n                say '*********************************************************'\n                say 'SRCHE ENDS ...'\n                exit\n              end\n        end\n      end\n      say '  - -->   No. HSM RECALLS Detected: ('#RECALLS')  <---   '\n      say '*********************************************************'\n      say '* The following datasets must be HSM RECALLED before    *'\n      say '* you search \"'srchemsk'\"  *'\n      say '*                                                       *'\n      do x1=1 to #recalls\n        say '*  'migrat_table.x1\n      end\n      say '*                                                       *'\n      say '* You  M U S T                                          *'\n      say '*                                                       *'\n      say '* 1. Change your search Dsname mask                     *'\n      say '*           -  OR  -                                    *'\n      say '* 2. DFHSM RECALL all affected datasets                 *'\n      say '*                                                       *'\n      say '*********************************************************'\n      say 'SRCHE ENDS ...'\n      exit\n  end\n\ntotal_cyls=0\ntotal_trks=0\ntotal_blks=0\n\nsay '   --->   The Following ('X2') Datasets Will be searched   <---  '\nsay '*****************************************************************'\nsay '*                                               ALLOC    ALLOC  *'\nsay '* DATASET NAME                                  UNITS    SIZE   *'\nsay '* --------------------------------------------  -------- ------ *'\ndo x1=1 to x2\n  curdsn=left(dsn_list.x1,44)\n  hotdsn=''''\n  hotdsn=hotdsn||strip(dsn_list.x1)\n  hotdsn=hotdsn||''''\n  x=listdsi(hotdsn directory)\n  myunits=left(sysunits,8)\n  myalloc=right(sysalloc,6)\n  say '*  'curdsn||' '||myunits||' 'myalloc\n\n  if sysunits='CYLINDER' then\n    total_cyls=total_cyls+sysalloc\n  else\n  if sysunits='TRACK' then\n    total_trks=total_trks+sysalloc\n  else\n  if sysunits='BLOCK' then\n    total_blks=total_blks+sysalloc\n\nend\nsay '*'\nsay '* TOTAL SEARCH SIZE IS:'\nsay '*'\nif total_cyls > 0 then\n  say '* CYLINDERS ('total_cyls')'\nif total_trks > 0 then\n  say '* TRACKS    ('total_trks')'\nif total_blks > 0 then\n  say '* BLOCKS    ('total_blks')'\nsay '*                                                               *'\nsay '*****************************************************************'\nsay ' '\n\nQloop:     /* LOOP for every PF3 after edit/browse screen */\n\n/* free datasets */\n\n  address tso\n  \"FREE FILE(OUTDD)\"\n  \"FREE FILE(NEWDD)\"\n  \"FREE FILE(SYSIN)\"\n\n\n/* output dsn */\n\n  rptdsn=SYSVAR(\"SYSUID\")||'.$$TEMP$$.TEMP.RPTOUT'\n  stat=MSG(\"OFF\")\n  \"DELETE \"rptdsn\n  \"ALLOC F(OUTDD) DA(\"rptdsn\")\",\n  \" MOD CYLINDERS  CATALOG SPACE(2,2)\",\n  \" UNIT(SYSDA)\",\n  \" BLKSIZE(0) RECFM(F,B,A) LRECL(133)\"\n\n/* Display popup window */\n\n  ZWINTTL = 'Search '||SRCHEMSK\n\n  ISPEXEC \"ADDPOP ROW(4) COLUMN(4)\"\n  ISPEXEC \"VGET (db2srch1,db2srch2,db2srch3) PROFILE\"\n  ISPEXEC \"DISPLAY PANEL(db2srchw)\"\n\n  IF RC=8 THEN signal leave    /* BIG EXIT */\n\n  ISPEXEC \"REMPOP\"\n\n  search_arg1=strip(db2srch1,b,\"'\")     /* strip quotes if any */\n  search_arg2=strip(db2srch2,b,\"'\")\n  search_arg3=strip(db2srch3,b,\"'\")\n\n  stat=MSG(\"OFF\")      /* turn messages off */\n\n/* set search argument sysin data adding quotes if needed */\n\n drop inrec.\n  inrec.1='SRCHFOR '||\"'\"||search_arg1||\"'\"\n  if search_arg2>' ' then\n    inrec.2='SRCHFORC '||\"'\"||search_arg2||\"'\"\n  if search_arg3>' ' then\n    inrec.3='SRCHFORC '||\"'\"||search_arg3||\"'\"\n\n/* sysin input dsn */\n\n  \"ALLOC  F(SYSIN) NEW DELETE RECFM(F) BLKSIZE(80)\"\n\n  \"EXECIO * DISKW SYSIN (STEM INREC. FINIS\"\n\n\n/* execute 3.14 as many times as there are dsnames */\n\n  ISPEXEC \"VGET (ZSYSID) \"\n  do x1=1 to DSN_LIST.0\n    search_dsn=dsn_list.x1\n    \"FREE FILE(NEWDD)\"\n    \"ALLOC FILE(NEWDD) DATASET('\"search_dsn\"') SHR REUSE\"\n    \"CALL 'ISP.SISPLPA(ISRSUPC)' 'SRCHCMP,ANYC'  \"\n  end\n\n/* free datasets */\n\n  \"FREE FILE(OUTDD)\"\n  \"FREE FILE(NEWDD)\"\n  \"FREE FILE(SYSIN)\"\n\n/* allocate and proces report file */\n\n  \"ALLOC FILE(INDD) DA(\"rptdsn\") SHR\",\n\n  eof = 'no'                            /* initialize end-of-file  */\n  hit_count=0\n  PREV_DSN=' '\n  dsn_hit=0                             /* 0=curdsn has no hits    */\n\n  do while eof = 'no'                   /* loop until eof          */\n     \"EXECIO 1 DISKR INDD (STEM ILINE.\" /* READ A LINE             */\n      if rc = 2 then                    /* if eof                  */\n        eof = 'yes'\n      else                              /* otherwise               */\n        do                              /* test for content        */\n          if pos('SRCH DSN:',iline.1) > 0 then\n            do\n              DSNPOS=pos('SRCH DSN:',iline.1)+10\n              CUR_DSN=substr(iline.1,dsnpos,44)\n\n              /* If not a PDS, SRCHE drops it */\n\n              XX=listdsi(CUR_DSN)\n              if sysdsorg <> 'PO' & sysdsorg <> 'POU' then\n                do\n                  say CUR_DSN ' is not a PDS'\n                  say 'It will not be searched - SRCHE continues ...'\n                  say ' '\n                  iterate\n                end\n\n              if CUR_DSN=PREV_DSN then iterate\n                else\n              PREV_DSN=CUR_DSN\n              dsn_hits=0\n              iterate\n            end\n          if pos('- STRING(S) FOUND -',iline.1) > 0 then\n            do\n              if dsn_hits = 0 then\n                do\n                  dsn_hits=1\n                  hit_count=hit_count + 1\n                  hit_stem.hit_count='@@@@@@@@@@@ '||CUR_DSN\n                  member.hit_count=CUR_DSN\n                  DSN_MBR_XREF.hit_count=CUR_DSN\n                end\n                cur_memb=substr(iline.1,3,8)\n                cur_memb_cnt = 0\n            end\n          if datatype(substr(iline.1,5,4))='NUM' &,\n             cur_memb_cnt < 10 &,\n             substr(iline.1,3,1) = ' ' &,\n             substr(iline.1,9,1) = ' ' then\n            do\n              hit_count=hit_count+1\n              cur_memb_cnt=cur_memb_cnt+1\n              hit_stem.hit_count=cur_memb||' '||substr(iline.1,10,70)\n              member.hit_count=cur_memb\n              DSN_MBR_XREF.hit_count=CUR_DSN\n            end\n          if hit_count > maxcount then\n            do\n              hit_count=hit_count+1\n              hit_stem.hit_count='  '\n              hit_count=hit_count+1\n              hit_stem.hit_count=,\n                  ' ++++++ hit count > 'maxcount', be more specific',\n                  'in your search ++++++'\n              hit_count=hit_count+1\n              hit_stem.hit_count='  '\n              eof = 'yes'\n            end\n        end\n   end\n\n  \"EXECIO 0 DISKR INDD (FINIS\"          /* Close INDD file         */\n  \"FREE FILE(INDD)\"\n\n   /* ------------------------------------------------------\n      done with call, display results in an ISPF table\n      ------------------------------------------------------ */\n\n   title1='Search results for ==>'||search_arg1\n   title2='   and ==>'||search_arg2||'  and ==>'||search_arg3\n   title3=' '\n\n   \"ISPEXEC TBCREATE srchetab names(x, line) NOWRITE SHARE\"\n\n    do i=1 to hit_count\n      x='_'\n      if pos('--->>',hit_stem.i) > 0 then\n        x=' '\n      line=hit_stem.i\n      \"ISPEXEC TBADD srchetab\"\n    end\n    c_rownum=1\n\n  Mloop:   /* LOOP for all edits and browses */\n\n     \"ISPEXEC TBTOP srchetab\"\n     if c_rownum>1 then\n       do\n         \"ISPEXEC TBSKIP  srchetab NUMBER(\"c_rownum\") NOREAD\"\n       end\n\n      ISPEXEC \"REMPOP\"     /* Fixes Bug */\n     \"ISPEXEC TBDISPL srchetab PANEL(stemsrch) position(irownum)\"\n\n      rownum=irownum+0     /* make numeric */\n      if rownum>0 then\n        do\n          member_name=strip(member.rownum)\n          if pos('.',member_name) > 0 then\n            do\n              say 'You cannot select a DSName ... RETRY'\n              c_rownum=irownum\n              signal Mloop\n            end\n          dsn_name=strip(DSN_MBR_XREF.rownum)\n          c_rownum=rownum\n          action=x\n        end\n\n     found_mem=dsn_name||'('||member_name||')'\n     upper found_mem\n\n     if rownum>0 then\n       do\n        if (action='E' | action='e')  then\n          do\n            ADDRESS ISPEXEC \"EDIT DATASET('\"found_mem\"')\"\n          end\n       else\n          do\n            ADDRESS ISPEXEC \"BROWSE DATASET('\"found_mem\"')\"\n            IF RC>0 THEN ADDRESS ISPEXEC \"SETMSG MSG(\"ZERRMSG\")\"\n          end\n       end\n\n    if rownum>0 then signal Mloop    /* act upon PF3 */\n\n    \"ISPEXEC TBCLOSE srchetab\"\n\n    stat=MSG(\"ON\")       /* turn messages back on */\n\n    signal Qloop         /* go back and refresh search args */\n\nleave:\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SRCHEPAN": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x05\\x01\\t(\\x1f\\x01\\x10\\x04/\\t9\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-10-08T00:00:00", "modifydate": "2010-02-11T09:39:05", "lines": 19, "newlines": 19, "modlines": 0, "user": "TS0710"}, "text": ")ATTR\n   \u00ac TYPE(text) intens(high) color(yellow)\n   @ TYPE(text) intens(high) color(green)\n   } TYPE(text) intens(high) color(yellow)\n)BODY window(60,8)\n+  _zcmd               +\n%                      +\n\u00ac        Enter Search dsname Mask in \"=3.4\" format   +\n%                                     +\n%            >_srchemsk                                    +\n%                     +\n%                     +\n+                     +\n)INIT\n  .CURSOR = srchemsk\n)PROC\n  ver(&srchemsk,len,GT,0)\n  vput (srchemsk) profile\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STEMSRCH": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00\\x02\\x00\\x96\\x03\\x1f\\x00\\x96\\x03/\\t\\x00\\x00\\x19\\x00\\x18\\x00\\x00\\xe3\\xe2\\xf0\\xf8\\xf9\\xf7@@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "1996-01-31T00:00:00", "modifydate": "1996-02-01T09:00:02", "lines": 25, "newlines": 24, "modlines": 0, "user": "TS0897"}, "text": ")ATTR\n\u00a2 TYPE(TEXT) COLOR(GREEN) INTENS(LOW)\n@ TYPE(TEXT) COLOR(BLUE) INTENS(HIGH)\n% TYPE(TEXT) COLOR(WHITE) INTENS(HIGH)\n\u00ac TYPE(INPUT) COLOR(RED) INTENS(HIGH) CAPS(ON)\n$ TYPE(OUTPUT) COLOR(BLUE) INTENS(HIGH)\n? TYPE(TEXT) COLOR(TURQ) INTENS(HIGH)\n)BODY Expand(//)\n\u00a2\nCOMMAND ===>_ZCMD                                          \u00a2                  +\n\u00a2\n$title1\n$title2\n$Title3\n\u00a2--- Member\n\u00a2--- Name     Search Hit Text, Mark line with B or E, enter to Browse or Edit -\n\u00a2------------------------------------------------------------------------------\n)MODEL\n \u00acx $line\n)INIT\n  &ZCMD=' '\n)REINIT\n  &ZCMD=' '\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT815/FILE815.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT815", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}