{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013515000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 4350164, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 13, "INMDSNAM": "CBT.V500.FILE937.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 4350164, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 4350164, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE937.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00D\\n'", "DS1TRBAL": "b'\\x08\\xc4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t\\x8f\\x00\\x05\\t\\x93\\x00\\r\\x00E'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00H\\x01\\x16&\\x9f\\x01\\x16&\\x9f\\x17\\x18\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-09-25T00:00:00", "modifydate": "2016-09-25T17:18:48", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-493"}, "text": "REGULAR CBT TAPE - VERSION 493    FILE:  937\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT493.FILE937\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 43 MEMBERS COUNTED; CUMULATIVE SIZE IS 40,788 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/25/16    17:18:47    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$COSGS": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00#\\x01\\x05!/\\x01\\x16&_\\x12\\x07\\x00\\x04\\x00\\x04\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2005-07-31T00:00:00", "modifydate": "2016-09-21T12:07:23", "lines": 4, "newlines": 4, "modlines": 0, "user": "SBGOLOB"}, "text": "*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$ALLOCL": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01-\\x00 \\x01\\x16&\\x9f\\x01\\x16&\\x9f\\x18\\x03\\x00\\x19\\x00\\x14\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.45", "flags": 0, "createdate": "2016-09-25T00:00:00", "modifydate": "2016-09-25T18:03:20", "lines": 25, "newlines": 20, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBA JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------------------- *//\n//* --  ALLOCATE OBJECT AND LOAD LIBRARY FOR CONTAINING THE      -- *//\n//* --                    BDM PROGRAMS                           -- *//\n//* --------------------------------------------------------------- *//\n//*\n//BDMDELET EXEC PGM=IEFBR14\n//*\n//DELOBJLB  DD  DSN=SBGOLOB.BDM140B.OBJECT,DISP=(MOD,DELETE,DELETE)\n//DELLOADL  DD  DSN=SBGOLOB.BDM140B.LOADLIB,DISP=(MOD,DELETE,DELETE)\n//*\n//BDMALLOC EXEC PGM=IEFBR14\n//*\n//ALLOBJLB  DD  DSN=SBGOLOB.BDM140B.OBJECT,DISP=(NEW,CATLG,DELETE),\n//  UNIT=3390,\n//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),VOL=SER=WORKE2,\n//  SPACE=(TRK,(75,45,44))\n//*\n//ALLLOADL  DD  DSN=SBGOLOB.BDM140B.LOADLIB,DISP=(NEW,CATLG,DELETE),\n//  UNIT=3390,\n//  DCB=(RECFM=U,BLKSIZE=18432),VOL=SER=WORKE2,\n//  SPACE=(TRK,(30,30,44))\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$BDMALL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01.\\x00F\\x00\\x99\\x15\\x8f\\x01\\x16&\\x9f\\x18\\x02\\x00Q\\x00\\x1b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.46", "flags": 0, "createdate": "1999-06-07T00:00:00", "modifydate": "2016-09-25T18:02:46", "lines": 81, "newlines": 27, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------------------- *//\n//* --  ASSEMBLE AND LINKEDIT BROADCAST MANAGER LOAD MODULES     -- *//\n//* --     ALL PROGRAMS ARE ASSEMBLED WHOSE SOURCE IS HERE.      -- *//\n//* --------------------------------------------------------------- *//\n//*\n//* NOTE:   INCLUDE=INCLUDEA CREATES AN AC(1) MODULE\n//*\n//* --------------------------------------------------------------- *//\n//*\n//BDMDELET EXEC PGM=IEFBR14\n//*\n//DELOBJLB  DD  DSN=SBGOLOB.BDM140B.OBJECT,DISP=(MOD,DELETE,DELETE)\n//DELLOADL  DD  DSN=SBGOLOB.BDM140B.LOADLIB,DISP=(MOD,DELETE,DELETE)\n//*\n//BDMALLOC EXEC PGM=IEFBR14\n//*\n//ALLOBJLB  DD  DSN=SBGOLOB.BDM140B.OBJECT,DISP=(NEW,CATLG,DELETE),\n//  UNIT=3390,\n//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),VOL=SER=WORKE2,\n//  SPACE=(TRK,(75,45,44))\n//*\n//ALLLOADL  DD  DSN=SBGOLOB.BDM140B.LOADLIB,DISP=(NEW,CATLG,DELETE),\n//  UNIT=3390,\n//  DCB=(RECFM=U,BLKSIZE=18432),VOL=SER=WORKE2,\n//  SPACE=(TRK,(30,30,44))\n//*\n//ASMLKBDM PROC MBR=,INCLUDE=INCLUDE\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE937           << LIBRARY\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE937(&MBR)\n//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DISP=SHR,DSN=SBGOLOB.BDM140B.OBJECT(&MBR)\n//*           DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,NORENT,NOREUS'\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.BDM140B.LOADLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.BDM140B.LOADLIB(&MBR)\n//OBJECT   DD  DISP=SHR,DSN=SBGOLOB.BDM140B.OBJECT(&MBR)\n//SYSLIN   DD  DISP=SHR,DSN=SBGOLOB.CBT493.FILE937(&INCLUDE)\n//*\n//   PEND\n//*\n//BDMCALC  EXEC ASMLKBDM,MBR=BDMCALC\n//BDMCLEAN EXEC ASMLKBDM,MBR=BDMCLEAN\n//BDMCVMSG EXEC ASMLKBDM,MBR=BDMCVMSG\n//BDMDEL   EXEC ASMLKBDM,MBR=BDMDEL\n//BDMDIAG  EXEC ASMLKBDM,MBR=BDMDIAG\n//BDMDSFIX EXEC ASMLKBDM,MBR=BDMDSFIX\n//BDMDUMP  EXEC ASMLKBDM,MBR=BDMDUMP\n//BDMEXPND EXEC ASMLKBDM,MBR=BDMEXPND\n//BDMGTMSG EXEC ASMLKBDM,MBR=BDMGTMSG\n//BDMGTUID EXEC ASMLKBDM,MBR=BDMGTUID\n//BDMINIT  EXEC ASMLKBDM,MBR=BDMINIT\n//BDMLIST  EXEC ASMLKBDM,MBR=BDMLIST\n//BDMLRBA  EXEC ASMLKBDM,MBR=BDMLRBA\n//BDMMLOAD EXEC ASMLKBDM,MBR=BDMMLOAD\n//BDMNLIST EXEC ASMLKBDM,MBR=BDMNLIST\n//BDMNOTFY EXEC ASMLKBDM,MBR=BDMNOTFY\n//BDMNUPD  EXEC ASMLKBDM,MBR=BDMNUPD,INCLUDE=INCLUDEA\n//BDMNXPRT EXEC ASMLKBDM,MBR=BDMNXPRT\n//BDMREST  EXEC ASMLKBDM,MBR=BDMREST\n//BDMSCAN  EXEC ASMLKBDM,MBR=BDMSCAN\n//BDMSEND  EXEC ASMLKBDM,MBR=BDMSEND\n//BDMULOAD EXEC ASMLKBDM,MBR=BDMULOAD\n//BDMUSADD EXEC ASMLKBDM,MBR=BDMUSADD\n//BDMUSDEL EXEC ASMLKBDM,MBR=BDMUSDEL\n//BDMUSERS EXEC ASMLKBDM,MBR=BDMUSERS\n//BDMUSORT EXEC ASMLKBDM,MBR=BDMUSORT\n//BDMXPORT EXEC ASMLKBDM,MBR=BDMXPORT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$BDMONE": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00@\\x00\\x99\\x15\\x8f\\x01\\x16&\\x9f\\x14\\x12\\x00A\\x00\\x1b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1999-06-07T00:00:00", "modifydate": "2016-09-25T14:12:40", "lines": 65, "newlines": 27, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------------------- *//\n//* --  ASSEMBLE AND LINKEDIT BROADCAST MANAGER LOAD MODULES     -- *//\n//* --     ALL PROGRAMS ARE ASSEMBLED WHOSE SOURCE IS HERE.      -- *//\n//* --------------------------------------------------------------- *//\n//*\n//* NOTE:   INCLUDE=INCLUDEA CREATES AN AC(1) MODULE\n//*\n//* --------------------------------------------------------------- *//\n//*\n//ASMLKBDM PROC MBR=,INCLUDE=INCLUDE\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE937           << LIBRARY\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE937(&MBR)\n//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DISP=SHR,DSN=SBGOLOB.BDM140B.OBJECT(&MBR)\n//*           DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,NORENT,NOREUS'\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.BDM140B.LOADLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.BDM140B.LOADLIB(&MBR)\n//OBJECT   DD  DISP=SHR,DSN=SBGOLOB.BDM140B.OBJECT(&MBR)\n//SYSLIN   DD  DISP=SHR,DSN=SBGOLOB.CBT493.FILE937(&INCLUDE)\n//*\n//   PEND\n//*\n//*DMCALC  EXEC ASMLKBDM,MBR=BDMCALC\n//*DMCLEAN EXEC ASMLKBDM,MBR=BDMCLEAN\n//*DMCVMSG EXEC ASMLKBDM,MBR=BDMCVMSG\n//*DMDEL   EXEC ASMLKBDM,MBR=BDMDEL\n//*DMDIAG  EXEC ASMLKBDM,MBR=BDMDIAG\n//BDMDSFIX EXEC ASMLKBDM,MBR=BDMDSFIX\n//*DMDUMP  EXEC ASMLKBDM,MBR=BDMDUMP\n//*DMEXPND EXEC ASMLKBDM,MBR=BDMEXPND\n//*DMGTMSG EXEC ASMLKBDM,MBR=BDMGTMSG\n//*DMGTUID EXEC ASMLKBDM,MBR=BDMGTUID\n//*DMINIT  EXEC ASMLKBDM,MBR=BDMINIT\n//*DMLIST  EXEC ASMLKBDM,MBR=BDMLIST\n//*DMLRBA  EXEC ASMLKBDM,MBR=BDMLRBA\n//*DMMKBAK EXEC ASMLKBDM,MBR=BDMMKBAK\n//*DMMLOAD EXEC ASMLKBDM,MBR=BDMMLOAD\n//*DMNLIST EXEC ASMLKBDM,MBR=BDMNLIST\n//*DMNOTFY EXEC ASMLKBDM,MBR=BDMNOTFY\n//*DMNUPD  EXEC ASMLKBDM,MBR=BDMNUPD,INCLUDE=INCLUDEA\n//*DMNXPRT EXEC ASMLKBDM,MBR=BDMNXPRT\n//*DMREST  EXEC ASMLKBDM,MBR=BDMREST\n//*DMSCAN  EXEC ASMLKBDM,MBR=BDMSCAN\n//*DMSEND  EXEC ASMLKBDM,MBR=BDMSEND\n//*DMULOAD EXEC ASMLKBDM,MBR=BDMULOAD\n//*DMUSADD EXEC ASMLKBDM,MBR=BDMUSADD\n//*DMUSDEL EXEC ASMLKBDM,MBR=BDMUSDEL\n//*DMUSERS EXEC ASMLKBDM,MBR=BDMUSERS\n//*DMUSORT EXEC ASMLKBDM,MBR=BDMUSORT\n//*DMXPORT EXEC ASMLKBDM,MBR=BDMXPORT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "###BAT": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00Q\\x01\\x07\\x12\\x8f\\x01\\x16&\\x9f\\x156\\x00\\x18\\x00\\x0c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2007-05-08T00:00:00", "modifydate": "2016-09-25T15:36:51", "lines": 24, "newlines": 12, "modlines": 0, "user": "SBGOLOB"}, "text": "\n          ---   Broadcast Master  Version   1.4.0B   ---\n     Copyright (c) 1995-2016 Sam Golob Systems Programming LLC\n                     All Rights Reserved\n\n                   ***  BATCH PROGRAMS  ***\n\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nBDMCALC   -  Calculate how big to make a new BRODCAST Dataset\nBDMCVMSG  -  Convert messages from BDMXPORT format to BDMMLOAD format\nBDMDUMP   -  Create an FB-130 backup of a BRODCAST Dataset\nBDMEXPND  -  Reload a new BRODCAST Dataset from a backup, expanding it\nBDMGTMSG  -  Extract all Userid Messages from a BRODCAST Dataset\nBDMGTUID  -  Extract all Userids from a BRODCAST Dataset\nBDMINIT   -  Make a new BRODCAST Dataset according to specs\nBDMMLOAD  -  Bulk reload User Messages from BDMGTMSG backup dataset\nBDMREST   -  Reload a new BRODCAST Dataset from a backup, same size\nBDMSCAN   -  Complete reports on the condition of a BRODCAST dataset\nBDMULOAD  -  Bulk reload Userids from BDMGTUID backup datasets\nBDMUSORT  -  Sort 8-character Userids and delete duplicates\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "###TSO": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x006\\x01\\x07\\x12\\x8f\\x01\\x16&\\x9f\\x156\\x00\\x1e\\x00\\x0f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2007-05-08T00:00:00", "modifydate": "2016-09-25T15:36:36", "lines": 30, "newlines": 15, "modlines": 0, "user": "SBGOLOB"}, "text": "\n          ---   Broadcast Master  Version   1.4.0B   ---\n     Copyright (c) 1995-2016 Sam Golob Systems Programming LLC\n                     All Rights Reserved\n\n                    ***  TSO COMMANDS  ***\n\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nBDMCLEAN  -  Clean BRODCAST Dataset records of extraneous litter\nBDMDEL    -  Delete some, or all, of a Userid's messages\nBDMDIAG   -  Display or Delete User Messages not connected to a Userid\nBDMDSFIX  -  Correct first data byte of Free User Records\n             Necessary when copying the Broadcast Dataset from one\n             device type to another, with different geometry.\nBDMLIST   -  List all of a User's messages\nBDMLRBA   -  List all of a User's messages and their RBA\nBDMNLIST  -  List all active Notices in a BRODCAST Dataset\nBDMNOTFY  -  Write or Delete Notices to (or from) a BRODCAST Dataset\nBDMNUPD   -  TSO Command to turn on the bit to update Incore Notices\nBDMNXPRT  -  Dump all Global Notices to a dataset in BDMNOTFY format\nBDMSEND   -  SEND a message to a Userid in a BRODCAST Dataset\nBDMUSADD  -  Add a Userid to a BRODCAST Dataset\nBDMUSDEL  -  Delete a Userid from a BRODCAST Dataset\nBDMUSERS  -  List all Userids, or only Userids with Messages\nBDMUTIL   -  REXX exec to manage Userids with Outstanding Messages\nBDMXPORT  -  Dump messages connected with a Userid to an Output dataset\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BDMCALC": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x009\\x01\\x063?\\x01\\x16&\\x9f\\x156\\x06Q\\x02\\xb8\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2006-11-29T00:00:00", "modifydate": "2016-09-25T15:36:39", "lines": 1617, "newlines": 696, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMCALC  TITLE 'BDMCALC - CALCULATE SIZE OF NEW BRODCAST DATASET'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program to calculate      *\n*                   the size of a new BRODCAST dataset, given the     *\n*                   number of each type of component records.         *\n*                                                                     *\n*                                                                     *\n*    Copyright (C) 1995-2016 Sam Golob Systems Programming LLC        *\n*              All Rights Reserved                                    *\n*                                                                     *\n*    Function:   To calculate space to be allocated for BRODCAST      *\n*                records for any DASD type, given the number of       *\n*                each type of record in a proposed new BRODCAST       *\n*                dataset.                                             *\n*                                                                     *\n*    Batch Execution:                                                 *\n*                                                                     *\n* //BDMCALC EXEC PGM=BDMCALC,REGION=2000K                             *\n* //STEPLIB  DD  DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB                 *\n* //*                                                                 *\n* //*   BRODUMMY must be allocated as exactly 1 Cylinder primary      *\n* //*   on the same device type as the proposed new Broadcast         *\n* //*   Dataset.  The program will attempt to correct errors.         *\n* //*                                                                 *\n* //BRODUMMY DD  DSN=&&BRDUMM,DISP=(NEW,DELETE,DELETE),               *\n* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *\n* //         SPACE=(CYL,(1,1),RLSE),UNIT=SYSALLDA,VOL=SER=volser      *\n* //SYSPRINT DD  SYSOUT=*                                             *\n* //SYSIN    DD  *                                                    *\n* keywords                                                            *\n* /*                                                                  *\n*                                                                     *\n*       Admissible SYSIN Keywords:                                    *\n*       ---------- ----- ---------                                    *\n*     NOTIFY=nnn      (number of Global Notify records)               *\n*     USERIDS=nnnn    (number of Userids to be loaded)                *\n*     MESSAGES=nnnnn  (number of User Messages in BRODCAST)           *\n*     EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST)           *\n*     RECORDS=nnnnnn  (total number of records in BRODCAST)           *\n*     TRACKS=nnnn     (total tracks in BRODCAST allocation)           *\n*     CYLINDERS=nnn   (total cylinders in BRODCAST allocation)        *\n*     ----------------------------------------------                  *\n*     SYSIN Keywords have to be entered in Column 1.                  *\n*     ----------------------------------------------                  *\n*                                                                     *\n*    Changes: 12/09/06 - Protection if SYSIN DD is missing.           *\n*                        All calculations in place.                   *\n*                        JFCB Diagnostic Display.                     *\n*                        Temporary BRODUMMY dataset in JCL for        *\n*                          calculations of Records/Trk and Trks/Cyl.  *\n*                        If BRODUMMY DD is missing, diagnostic        *\n*                          messages are displayed, and RC = 8.        *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n* --------------------------------------------------------- *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS                    Register Equates.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMCALC '\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n*   DEFAULT VALUES IF NOT CODED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n&DEFNOTF SETA  125\n&DEFUSER SETA  1000\n&DEFMSGS SETA  7000\n* ------------------------------------------------------------------ *   01489\n&CHANOTF SETC  '&DEFNOTF'\n&CHAUSER SETC  '&DEFUSER'\n&CHAMSGS SETC  '&DEFMSGS'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)              Save Registers\n         LR    R12,R15\n         USING BDMCALC,R12,R11,R10,R8,R7    Establish Base Registers\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R8,4095(,R10)\n         LA    R8,1(,R8)\n         LA    R7,4095(,R8)\n         LA    R7,1(,R7)\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          Initialize constants in data area\n         SPACE 1\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  SYSIN AND BRODUMMY.              06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),BRODUMMY+40  PARMREPT DDNAME THERE?               06235\n         BNE   TIOTSYSN       NO                                         06236\n         OI    FLAGSYST,X'01'       SHOW PRESENCE OF BRODUMMY DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTSYSN CLC   4(8,R5),SYSIN+40                                          06239\n         BNE   TIOTNEXT                                                  06240\n         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n* ----------------------------------------------------------------- *    06227\nDOBROD   DS    0H\n         OPEN  (BRODUMMY,(OUTPUT))\n         OPEN  (SYSPRINT,(OUTPUT))\n         BAL   R9,OUTHEADR         Write SYSPRINT Header\n* ------------------------------------------------------------------ *\n* ---    M A I N   R O U T I N E S                               --- *\n* ------------------------------------------------------------------ *\nMAINLINE DS    0H                  MAIN CALCULATION CYCLE\n*                                  Do RDJFCB after the OPEN\n         RDJFCB BRODUMMY\n         BAL   R9,JFCBDSPL         Display the contents of the JFCB\n         BAL   R9,JFCBTEST         Test the JCL for errors.\n         TM    JFCBFLG,X'FF'       Were there any?\n         BNZ   CORRERRS            Yes. Tell the user to correct them.\n         BAL   R9,WRITDUMY         Write 1 Cylinder of dummy records.\n         BAL   R9,SYSADMIS         Message with admissible keywords.\n         BAL   R9,DOSYSIN          Process the SYSIN parameters.\n         TM    INVNFLG,X'01'       Were any invalid numbers coded?\n         BO    NUMERRS             Yes, report and abort\n         BAL   R9,CALCRECS         Calculations for all SYSIN keywords.\n*                                  Calculate total records from\n*                                  NOTIFY+USERIDS+MESSAGES+EXTRAUIDS\n         B     EOJ\n* ------------------------------------------------------------------ *\nNUMERRS  DS    0H                  Errors coding numerics in SYSIN.\n         MVC   LINE,LINE-1         Blank line.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(42),=C'Invalid numbers were coded in SYSIN cards.'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(42),=C'Please check them over and correct them.  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Blank line.\n         PUT   SYSPRINT,LINE\n         B     EOJ8                RC = 8\n* ------------------------------------------------------------------ *\nCORRERRS DS    0H                  Correct JCL errors in BRODUMMY.\n         MVC   LINE,LINE-1         Clear line and print\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Clear line again.\n         MVC   LINET(L'MSGCORRE),MSGCORRE Message to correct JCL errors\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Clear line and print\n         PUT   SYSPRINT,LINE\n         B     EOJ8\n* ------------------------------------------------------------------ *\nEOJ8     DS    0H                  RC = 8.\n         LA    R5,8                Load it into R5 so it's not lost.\n         B     EOJC                And end the program.\nEOJ      DS    0H                  RC = 0.  Normal end of program.\n         LA    R5,0\nEOJC     DS    0H                  Close DCBs up.\n         CLOSE (BRODUMMY)\n         CLOSE (SYSPRINT)\n         LR    R1,R13              Prepare for FREEMAIN.\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\nEOJGO3   DS    0H\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\nEOJN     BR    R14                 Go back to system.\n         LTORG\n         EJECT\n* ------------------------------------------------------------------ *\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *\n*   OF THE PROGRAM EXECUTION.                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nOUTHEADR DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,TITLINE            Print Title and\n         PUT   SYSPRINT,CPYRLINE             Copyright notice.\n         PUT   SYSPRINT,REPTLN01           And name of which Report.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,\n         PUT   SYSPRINT,OUTLINE            PREPARING FOR\n         BR    R9                          FINAL REPORT.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nJFCBDSPL DS    0H\n* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Below\n         MVC   LINE,LINE-1\n         MVC   LINET(L'JFCBDTIT),JFCBDTIT  Title of display\n         MVC   LINE+5(8),=C'BRODUMMY'      Insert which DCB it's about\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(60),MEASR30H          Numeric measuring label.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(60),RULER30H          Ruler.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB           Bytes 0 to 30  (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVI   LINET+68,C'0'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+30        Bytes 31 to 60 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'30'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+60        Bytes 61 to 90 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'60'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+90        Bytes 91 to 120 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'90'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+120       Bytes 121 to 150 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(3),=C'120'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,26,INFMJFCB+150       Bytes 151 to 176 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(3),=C'150'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(60),RULER30H          Print ruler below\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                 And skip a space.\n         PUT   SYSPRINT,LINE\n* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Above\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nJFCBTEST DS    0H\n         MVI   JFCBFLG,X'00'         CLEAR ERROR FLAGS\n         CLI   JFCBCTRI,JFCBCYL      ALLOCATION OF BRODUMMY IN CYL ?\n         BNE   MSGNOCYL              NO. ISSUE MESSAGE.\nJFCBPRIM DS    0H\n         CLC   JFCBPQTY,=AL3(1)      PRIMARY QUANTITY MUST BE 1.\n         BNE   MSGNOONE              NOT 1. ISSUE MESSAGE.\nJFCBDSRG DS    0H\n         CLI   JFCDSORG,JFCORGDA     IS THE DSORG=DA ?\n         BNE   MSGDSORG              NO. ISSUE MESSAGE.\nJFCBRFMT DS    0H\n         TM    JFCRECFM,X'C0'        IS THE RECFM=U ?\n         BO    MSGRECFM              YES. ISSUE MESSAGE.\n         TM    JFCRECFM,X'80'        IS THE RECFM=F ?\n         BZ    MSGRECFM              NO. ISSUE MESSAGE.\nJFCBLREC DS    0H\n         CLC   JFCLRECL,=AL2(129)    LRECL IS 129 ?\n         BNE   MSGLRECL              NOT 129. ISSUE MESSAGE.\nJFCBBKSI DS    0H\n         CLC   JFCBLKSI,=AL2(129)    BLKSIZE IS 129 ?\n         BNE   MSGBLKSZ              NOT 129. ISSUE MESSAGE.\nJFCBKYLN DS    0H\n         CLI   JFCKEYLE,X'01'        KEYLEN IS 1 ?\n         BNE   MSGKEYLE              NOT 1. ISSUE MESSAGE.\nJFCBETST DS    0H                        End of processing.\n         B     JFCBTEND                  Finish the subroutine.\nMSGNOCYL DS    0H                    ERROR MESSAGES FOR JCL PROBLEMS.\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGCYL),MSGCYL    Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'01'             Flag this error\n         B     JFCBPRIM                  Go to next test.\nMSGNOONE DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGONEC),MSGONEC  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'02'             Flag this error\n         B     JFCBDSRG                  Go to next test.\nMSGDSORG DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGDSOR),MSGDSOR  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'04'             Flag this error\n         B     JFCBRFMT                  Go to next test.\nMSGRECFM DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGRFMT),MSGRFMT  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'08'             Flag this error\n         B     JFCBLREC                  Go to next test.\nMSGLRECL DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGLREC),MSGLREC  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'10'             Flag this error\n         B     JFCBBKSI                  Go to next test.\nMSGBLKSZ DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGBLKS),MSGBLKS  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'20'             Flag this error\n         B     JFCBKYLN                  Go to next test.\nMSGKEYLE DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGKEYL),MSGKEYL  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'40'             Flag this error\n         B     JFCBETST                  Go to end of tests.\nJFCBTEND DS    0H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* ------------------------------------------------------------------ *\n* ---    READ DUMMY RECORDS INTO 1 CYLINDER FAKE BRODCAST.       --- *\n* ------------------------------------------------------------------ *\nWRITDUMY DS    0H\n         MVI   EOFWFLG,X'00'             Initialize Flag.\n         LA    R2,0                      Load zero.\n         ST    R2,RECONTRK               Initialize counters\n         ST    R2,RECPERTR                 to\n         ST    R2,TRKPERCY                   zero.\nWRITLOOP DS    0H\n         L     R2,RECONTRK               Increment\n         LA    R2,1(,R2)                  the\n         ST    R2,RECONTRK                 Count.\nGOWRITE  DS    0H\n         WRITE MDLDECB,SF,BRODUMMY,DUMMYREC,'S',MF=E\n         C     R15,=F'8'                 RC = 8 for end of extent.\n         BNE   GOSKIP1                   No. Try if end of track.\n         OI    EOFWFLG,X'02'             Yes. End of extent, so finish.\n         B     ENDCHECK                  Finish up measurements.\nGOSKIP1  DS    0H\n         C     R15,=F'4'                 RC = 4 for end of track.\n         BNE   GOCHECK                   No. Still in middle of track.\n         TM    EOFWFLG,X'01'             Yes. Only come here once,\n         BO    GOSKIP2                     and not later.\n         MVC   RECPERTR,RECONTRK         Copy records/track number.\n         OI    EOFWFLG,X'01'             Only do it once.\nGOSKIP2  DS    0H\n         L     R2,TRKPERCY               Increment\n         LA    R2,1(,R2)                  the\n         ST    R2,TRKPERCY                 Count.\n         XR    R2,R2                     Zero Register.\n         ST    R2,RECONTRK               Re-initialize REC/TRK\nGOCHECK  DS    0H\n         CHECK MDLDECB\n         B     WRITLOOP                  Write till end of extent.\nENDCHECK DS    0H                        Come here at end of extent.\n         CHECK MDLDECB\n         L     R2,TRKPERCY               One\n         LA    R2,1(,R2)                  last\n         ST    R2,TRKPERCY                 time.\nMULTCONV DS    0H\n         STM   R4,R5,SAVE45              Save Work Registers\n         XR    R4,R4                     Clear Multiplicand Hi Reg\n         L     R5,RECPERTR               Load Multipliand\n         MR    R4,R2                     Multiply\n         ST    R5,RECPERCY               Store Result\n         LM    R4,R5,SAVE45              Restore Work Registers\nWRITCONV DS    0H                        Convert binary to decimal.\n*                                        ------- ------ -- -------\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,RECPERTR               SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECREPTR,CVDWORK          STORE AWAY FOR REPORTING\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,TRKPERCY               SAVE TRACKS PER CYLINDER COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECTRPCY,CVDWORK          STORE AWAY FOR REPORTING\nWRITLEND DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGMEAS),MSGMEAS  Title message for measurement.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGMDSH),MSGMDSH  Dashes.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),RECPTRK         Records per track.\n         HEX   LINET+22,4,RECPERTR\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECREPTR+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),TRKPCYL         Tracks per cylinder\n         HEX   LINET+22,4,TRKPERCY\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECTRPCY+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n* - >\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,RECPERCY               SAVE RECORDS PER CYL COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECREPCY,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINE,LINE-1\n         MVC   LINET(22),RECPCYL         Records per cylinder\n         HEX   LINET+22,4,RECPERCY\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECREPCY+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n* - >\n         MVC   LINE,LINE-1               Blank line afterwards.\n         PUT   SYSPRINT,LINE\n         BR    R9\n* ---------------------------------------------- *\n* ---    PROCESS SYSIN INPUT TO PROVIDE      --- *\n* ---      NUMBERS FOR THE CALCULATIONS.     --- *\n* ---------------------------------------------- *\nDOSYSIN  DS    0H                        Process SYSIN records.\n         ST    R9,SAVER9A\n         TM    FLAGSYST,X'02'            Is SYSIN DD name in JCL?\n         BZ    SYSINENX                  No. Skip this entire section.\n         OPEN  (SYSIN,(INPUT))\n         STM   R3,R4,SAVE34              Save the work registers.\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDOSY),MSGDOSY\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDODH),MSGDODH\n         PUT   SYSPRINT,LINE\nSYINLOOP DS    0H                        Read all the SYSIN cards.\n         GET   SYSIN,INSYSIN             GET a card.\n         MVC   WRKSYSIN(80),INSYSIN      Make a copy of it.\n         OC    WRKSYSIN,BLNKLINE         Uppercase the copy.\n         LA    R3,WRKSYSIN               Point R3 to the uppercased.\n         LA    R4,INSYSIN                Point R4 to the original.\n* ------------------------------------------------------------------ *\n*                 Test the uppercased card for keywords              *\n*                 And afterwards do the proper displacements         *\n* ------------------------------------------------------------------ *\n         CLC   =C'NOTIFY=',0(R3)\n         BE    HNOTIFY\n         CLC   =C'USERIDS=',0(R3)\n         BE    HUSERID\n         CLC   =C'MESSAGES=',0(R3)\n         BE    HMESSAGE\n         CLC   =C'TRACKS=',0(R3)\n         BE    HTRACKS\n         CLC   =C'CYLINDERS=',0(R3)\n         BE    HCYLINDR\n         CLC   =C'EXTRAUSERIDRECS=',0(R3)\n         BE    HEXTRUSR\n         CLC   =C'RECORDS=',0(R3)\n         BE    HRECORDS\n         B     SYINLOOP\nHNOTIFY  DS    0H\n         LA    R4,7(,R4)\n         LA    R3,7(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHNOTIFY(10),CHARNUM\n         MVC   BINOTIFY(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'NOTIFY='\n         HEX   LINE+29,4,BINOTIFY\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHNOTIFY\n         TM    NUMCFLG,X'01'\n         BZ    HNOTIFGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHNOTIFGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHUSERID  DS    0H\n         LA    R4,8(,R4)\n         LA    R3,8(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHUSERID(10),CHARNUM\n         MVC   BIUSERID(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'USERIDS='\n         HEX   LINE+29,4,BIUSERID\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHUSERID\n         TM    NUMCFLG,X'01'\n         BZ    HUSERIGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHUSERIGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHMESSAGE DS    0H\n         LA    R4,9(,R4)\n         LA    R3,9(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHMESAGE(10),CHARNUM\n         MVC   BIMESAGE(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(9),=C'MESSAGES='\n         HEX   LINE+29,4,BIMESAGE\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHMESAGE\n         TM    NUMCFLG,X'01'\n         BZ    HMESSAGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHMESSAGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHTRACKS  DS    0H\n         LA    R4,7(,R4)\n         LA    R3,7(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHTRACKS(10),CHARNUM\n         MVC   BITRACKS(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'TRACKS='\n         HEX   LINE+29,4,BITRACKS\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHTRACKS\n         TM    NUMCFLG,X'01'\n         BZ    HTRACKGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHTRACKGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHCYLINDR DS    0H\n         LA    R4,10(,R4)\n         LA    R3,10(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHCYLIND(10),CHARNUM\n         MVC   BICYLIND(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(10),=C'CYLINDERS='\n         HEX   LINE+29,4,BICYLIND\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHCYLIND\n         TM    NUMCFLG,X'01'\n         BZ    HCYLINGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHCYLINGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHEXTRUSR DS    0H\n         LA    R4,16(,R4)\n         LA    R3,16(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHEXTRUS(10),CHARNUM\n         MVC   BIEXTRUS(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(16),=C'EXTRAUSERIDRECS='\n         HEX   LINE+29,4,BIEXTRUS\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHEXTRUS\n         TM    NUMCFLG,X'01'\n         BZ    HEXTRUGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHEXTRUGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHRECORDS DS    0H\n         LA    R4,8(,R4)\n         LA    R3,8(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHRECORD(10),CHARNUM\n         MVC   BIRECORD(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'RECORDS='\n         HEX   LINE+29,4,BIRECORD\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHRECORD\n         TM    NUMCFLG,X'01'\n         BZ    HRECORGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHRECORGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nSYSINEND DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDEFV),MSGDEFV\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDEFD),MSGDEFD\n         PUT   SYSPRINT,LINE\n* ----- >                                  Plug in default values.\n         CLC   BINOTIFY(4),=F'0'           Was NOTIFY= coded?\n         BNE   HNOTFHAS                    Yes. Nonzero value.\n         MVC   BINOTIFY(4),DEFNOTFY        Supply Default Values\n         MVC   CHNOTIFY(10),CHANOTFY\n         OI    FLAG01,X'01'                Force NOTIFY= present\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'NOTIFY='\n         MVC   LINET+7(10),CHANOTFY\n         HEX   LINE+29,4,DEFNOTFY\n         PUT   SYSPRINT,LINE\nHNOTFHAS DS    0H\n* ----- >\n         CLC   BIUSERID(4),=F'0'           Was USERIDS= coded?\n         BNE   HUSEIHAS                    Yes. Nonzero value.\n         MVC   BIUSERID(4),DEFUSERS        Supply Default Values\n         MVC   CHUSERID(10),CHAUSERS\n         OI    FLAG01,X'02'                Force USERIDS= present\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'USERIDS='\n         MVC   LINET+8(10),CHAUSERS\n         HEX   LINE+29,4,DEFUSERS\n         PUT   SYSPRINT,LINE\nHUSEIHAS DS    0H\n* ----- >\n         CLC   BIMESAGE(4),=F'0'           Was MESSAGES= coded?\n         BNE   HMSGSHAS                    Yes. Nonzero value.\n         MVC   BIMESAGE(4),DEFMESGS        Supply Default Values\n         MVC   CHMESAGE(10),CHAMESGS\n         OI    FLAG01,X'04'                Force MESSAGES= present\n         MVC   LINE,LINE-1\n         MVC   LINET(9),=C'MESSAGES='\n         MVC   LINET+9(10),CHAMESGS\n         HEX   LINE+29,4,DEFMESGS\n         PUT   SYSPRINT,LINE\nHMSGSHAS DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n* ----- >\n         CLOSE (SYSIN)\n         LM    R3,R4,SAVE34\nSYSINENX DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     Routine to get the numeric values from the SYSIN keywords.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNUMBRGET DS    0H                                                        06454\n         ST    R9,SAVER9B           Save BAL register.\n         ST    R4,SAVER4A           Save address of number in original\n         ST    R3,SAVER3A           Save address of number in copy\n         NI    NUMCFLG,X'FF'-X'01'  Turn off \"not numeric\" flag.\n         MVC   CHARNUM(10),BLNKLINE   Initialize character field\n         XC    BINVALUE,BINVALUE      Clear binary value\n* ----------------------------------------------------------------- *\n*                    Upon entry, R4 points to \"number\" in original.\n*                    Upon entry, R3 points to \"number\" in copy.\n* ----------------------------------------------------------------- *\n         CLI   0(R4),C' '        Is the first number value blank?        06455\n         BE    NUMBRCLG          Yes. Ignore the entire card.            06456\n* --\n* ----------------------------------------------------------------- *\n*    At this point, we are looking at the first character after     *\n*     the particular keyword, and we want to test it and extract    *\n*     its value.                                                    *\n* ----------------------------------------------------------------- *\n         CLI   0(R4),X'F0'       Smaller than character 0?               06457\n         BL    NUMBRNVL          Yes. Mark as invalid.                   06458\n         CLI   0(R4),X'F9'       Bigger than 9?                          06459\n         BH    NUMBRNVL          Yes. Mark as invalid.                   06460\n         B     NUMBRVLD          Didn't fail, consider the number valid\n*                   Remember that R4 is start address for \"number\".\nNUMBRNVL DS    0H                Mark the character as invalid number.   06464\n         OI    NUMCFLG,X'01'     Set \"invalid flag\" for this number.\n         OI    INVNFLG,X'01'     Show there's an invalid number coded.\n         MVI   0(R4),C'*'        Mark invalid digit in the report.\nNUMBRVLD DS    0H                                                        06464\n* ----------------------------------------------------------------- *\nNUMBRNUM DS    0H                Loop to extract the number.             06464\n         LA    R4,1(,R4)         Bump R4 to point to next character.     06465\n         C     R4,INSYSIN+71     End of card?                            06466\n         BH    NUMBRGNM          Yes, Get number.                        06467\n         CLI   0(R4),C' '        Blank here?                             06468\n         BE    NUMBRGNM          Yes, Get number.                        06469\n** ----- >>   Validity Check - below\n* --\n         CLI   0(R4),X'F0'       Smaller than C'0'?\n         BL    NUMBINVL          Yes. Mark as invalid.\n         CLI   0(R4),X'F9'       Bigger than C'9'?\n         BH    NUMBINVL          Yes. Mark as invalid.\n         B     NUMBVALD          None of above, don't mark invalid.\nNUMBINVL DS    0H                Mark the character as invalid number.   06464\n         OI    NUMCFLG,X'01'     Set \"invalid flag\" for this number.\n         OI    INVNFLG,X'01'     Show there's an invalid number coded.\n         MVI   0(R4),C'*'        Mark invalid digit in the report.\nNUMBVALD DS    0H                                                        06464\n** ----- >>   Validity Check - above\n         B     NUMBRNUM          Step up one place.                      06470\n* ----------------------------------------------------------------- *\nNUMBRGNM DS    0H                                                        06471\n         L     R2,SAVER4A        Load R2 with address of number start\n         SR    R4,R2             How big is the number?                  06472\n         BCTR  R4,0              Lower by one for EXECUTE.               06473\n         TM    NUMCFLG,X'01'     Was any digit of the number invalid?\n         BO    NUMBRNPK          Yes, don't try to pack it. S0C7.\n         XC    PACKWORK,PACKWORK   Clear the doubleword work area.\n         EX    R4,PACKIT         Pack the number into work area.         06474\nNUMBRNPK DS    0H                                                        06471\n         MVC   CHARNUM(10),BLNKLINE   Clear the display area.\n         EX    R4,MVNUMBER       Move the display value to display.      06476\n*        LA    R4,1(,R4)\n         TM    NUMCFLG,X'01'     Was any digit of the number invalid?\n         BO    NUMBRCLG          Yes, don't try to convert it. S0C7.\n         CVB   R0,PACKWORK       Convert the packed version to binary.   06477\n         ST    R0,BINVALUE       Store the binary value for later use.   06478\nNUMBRCLG DS    0H                                                        06479\n         L     R3,SAVER3A\n         L     R9,SAVER9B        Restore BAL register.\n         BR    R9                                                        06480\nPACKIT   PACK  PACKWORK,0(0,R2)      <<< EXECUTED >>>                    06759\nMVNUMBER MVC   CHARNUM(0),0(R2)      <<< EXECUTED >>>                    06767\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   Perform Calculations With The Coded SYSIN Quantities.         *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCALCRECS DS    0H                         Perform Calculations\n         ST    R9,SAVER9C                 BAL register protection\n         MVC   LINE,LINE-1                Clear Line\n         MVC   LINET(L'MSGCLCR),MSGCLCR   Print Calculation Header\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                Clear Line\n         MVC   LINET(L'MSGCLCD),MSGCLCD   Dashes\n         PUT   SYSPRINT,LINE\nFLAGNOTF DS    0H                         Set Flags about which SYSIN\n*                                          parameters were coded.\n         CLC   BINOTIFY(4),=F'0'          NOTIFY?\n         BE    FLAGUSID\n         OI    FLAG01,X'01'\nFLAGUSID DS    0H\n         CLC   BIUSERID(4),=F'0'          USERIDS?\n         BE    FLAGMESG\n         OI    FLAG01,X'02'\nFLAGMESG DS    0H\n         CLC   BIMESAGE(4),=F'0'          MESSAGES?\n         BE    FLAGTRKS\n         OI    FLAG01,X'04'\nFLAGTRKS DS    0H\n         CLC   BITRACKS(4),=F'0'          TRACKS?\n         BE    FLAGCYLS\n         OI    FLAG01,X'08'\nFLAGCYLS DS    0H\n         CLC   BICYLIND(4),=F'0'          CYLINDERS?\n         BE    FLAGEXTU\n         OI    FLAG01,X'10'\nFLAGEXTU DS    0H\n         CLC   BIEXTRUS(4),=F'0'          EXTRAUSERIDRECS?\n         BE    FLAGRECD\n         OI    FLAG01,X'20'\nFLAGRECD DS    0H\n         CLC   BIRECORD(4),=F'0'          RECORDS?\n         BE    FLAGGEND\n         OI    FLAG01,X'40'\nFLAGGEND DS    0H                         End of flagging process.\n         TM    FLAG01,X'7F'               Any SYSINs coded?\n         BZ    NOCALCS                    No. Say so and end.\n         B     DOCALCS                    Yes. Go do the calculations.\nNOCALCS  DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOCAL),MSGNOCAL   No SYSIN was entered.\n         PUT   SYSPRINT,LINE\n*        BAL   R9,NOSYSINM\n         B     CALCREND                   Get out after posting message\nDOCALCS  DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   Perform The Various Calulations And Display The Results.      *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTRKTOREC DS    0H                         TRACKS --> Records\n         TM    FLAG01,X'08'               TRACKS coded?\n         BZ    TRKTOREE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,RECPERTR\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BITRACKS                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BITRKREC                Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BITRKREC               LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DETRKREC,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGTR2BR),MSGTR2BR\n         MVC   LINET(10),CHTRACKS\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DETRKREC+3\n         PUT   SYSPRINT,LINE\nTRKTOREE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCYLTOREC DS    0H                         CYLINDERS --> Records\n         TM    FLAG01,X'10'               CYLINDERS coded?\n         BZ    CYLTOREE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,RECPERCY\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BICYLIND                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BICYLREC                Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BICYLREC               LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECYLREC,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGCY2BR),MSGCY2BR\n         MVC   LINET(10),CHCYLIND\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DECYLREC+3\n         PUT   SYSPRINT,LINE\nCYLTOREE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECTOTRK DS    0H                         RECORDS to TRACKS\n         TM    FLAG01,X'40'               RECORDS coded?\n         BZ    RECTOTRE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIRECORD                Load Dividend\n         L     R2,RECPERTR                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    RECNTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nRECNTREM DS    0H\n         ST    R5,BIRE2TR                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIRE2TR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DERE2TR,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRC2TR),MSGRC2TR\n         MVC   LINET(10),CHRECORD\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DERE2TR+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nRECTOTRE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECTOCYL DS    0H                         RECORDS to CYLINDERS\n         TM    FLAG01,X'40'               RECORDS coded?\n         BZ    RECTOCYE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIRECORD                Load Dividend\n         L     R2,RECPERCY                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    RECNCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nRECNCREM DS    0H\n         ST    R5,BIRE2CY                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIRE2CY                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DERE2CY,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRC2CY),MSGRC2CY\n         MVC   LINET(10),CHRECORD\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DERE2CY+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nRECTOCYE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nUIDTOURC DS    0H                         Userids to Userid Records\n         TM    FLAG01,X'02'               USERIDS coded?\n         BZ    UIDTOURE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIUSERID                Load Dividend\n         L     R2,=F'9'                   Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    UIDNCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nUIDNCREM DS    0H\n         ST    R5,BIUI2UR                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIUI2UR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DEUI2UR,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGUI2UR),MSGUI2UR\n         MVC   LINET(10),CHUSERID\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DEUI2UR+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nUIDTOURE DS    0H                         Userids to Userid Records\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEXUTOUID DS    0H                         Extra Userid Records -> UIDs\n         TM    FLAG01,X'20'               EXTRAUSERIDRECS coded?\n         BZ    EXUTOUIE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,=F'9'                   Multiplier\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BIEXTRUS                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BIEU2UI                 Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BIEU2UI                LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEEU2UI,CVDWORK           STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGEU2UI),MSGEU2UI\n         MVC   LINET(10),CHEXTRUS\n         MVC   LINET+47(10),MASK10\n         ED    LINET+47(10),DEEU2UI+3\n         PUT   SYSPRINT,LINE\nEXUTOUIE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOTFINDX DS    0H                         NOTIFY to NOTIFY INDEX RECDS\n         OI    FLAG01,X'01'               NOTIFY coded?\n         BZ    NOTFINDE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BINOTIFY                Load Dividend\n         L     R2,=F'25'                  Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    NOTFTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nNOTFTREM DS    0H\n         ST    R5,BINOTFI                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTFI                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTFI,CVDWORK            Store away for reporting\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BINOTFI                 Load Multipliand\n         L     R2,=F'25'                  Load Multiplier\n         MR    R4,R2                      Multiply\n         ST    R5,BINOTFR                 Store Result\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTFR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTFR,CVDWORK            Store away for reporting\n         L     R2,BINOTFI\n         A     R2,BINOTFR\n         ST    R2,BINOTOT\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTOT                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTOT,CVDWORK            Store away for reporting\n*\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNO2NI),MSGNO2NI\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTFI+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNRROU),MSGNRROU\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTFR+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOTOT),MSGNOTOT\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTOT+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nNOTFINDE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRECAL DS    0H\n         TM    FLAG01,X'07'     Notify+Userids+Messages?\n         BNO   TOTRTCYM         Not all coded, don't calculate this.\n         ST    R2,SAVER2        Save work register.\n         L     R2,BINOTOT       All records needed for Notify\n         LA    R2,2(,R2)        Header + Free Search record\n         A     R2,BIUI2UR       Userid records\n         A     R2,BIEXTRUS      Extra Userid records\n         A     R2,BIMESAGE      Number of message records\n         ST    R2,BITOTREC      Store total in binary\n         XR    R6,R6                      Zero work register\n         L     R6,BITOTREC                Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETOTREC,CVDWORK           Store away for reporting\n         L     R2,SAVER2\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCR),MSGALCR\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCD),MSGALCD\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB1),MSGTOTB1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB2),MSGTOTB2\n         MVC   LINET+58(10),MASK10\n         ED    LINET+58(10),DETOTREC+3\n         PUT   SYSPRINT,LINE\nTOTRECAE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRTTRK DS    0H                         RECORDS to TRACKS\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BITOTREC                Load Dividend\n         L     R2,RECPERTR                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    TOTRTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nTOTRTREM DS    0H\n         ST    R5,BITO2TR                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BITO2TR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETO2TR,CVDWORK            Store away for reporting\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRTCYL DS    0H                         RECORDS to CYLINDERS\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BITOTREC                Load Dividend\n         L     R2,RECPERCY                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    TOTRCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nTOTRCREM DS    0H\n         ST    R5,BITO2CY                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BITO2CY                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETO2CY,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB3),MSGTOTB3\n         MVC   LINET+31(10),MASK10\n         ED    LINET+31(10),DETO2TR+3\n         MVC   LINET+52(10),MASK10\n         ED    LINET+52(10),DETO2CY+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB4),MSGTOTB4\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB5),MSGTOTB5\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGCYLRE),MSGCYLRE\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE1),MSGEXKE1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE2),MSGEXKE2\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE3),MSGEXKE3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         B     TOTRTCYE\nTOTRTCYM DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCR),MSGALCR\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCD),MSGALCD\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALLRE),MSGALLRE\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALLR1),MSGALLR1\n         PUT   SYSPRINT,LINE\nTOTRTCYE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCALCREND DS    0H\n         MVC   LINE,LINE-1                Blank line at the end.\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9C                 BAL register protection\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOSYSINM DS    0H\n         ST    R9,SAVER9D\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0T),MSGNOC0T\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSYSADMIS DS    0H\n         ST    R9,SAVER9D\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0A),MSGNOC0A\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOCDA),MSGNOCDA\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC01),MSGNOC01\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC02),MSGNOC02\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC03),MSGNOC03\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC04),MSGNOC04\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC05),MSGNOC05\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC06),MSGNOC06\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC07),MSGNOC07\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0T),MSGNOC0T\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nNOSYSINE DS    0H\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                                                        04224\n         MVC   1(1,R15),0(R1)        Move byte                           04225\n         UNPK  0(3,R15),1(2,R15)     Unpack                              04226\n         TR    0(2,R15),HEXTAB-240                                       04227\n         LA    R15,2(,R15)           Increment output pointer            04228\n         LA    R1,1(,R1)             Increment input pointer             04229\n         BCT   R0,HEX                Decrement length, then loop         04230\n         MVI   0(R15),C' '           Blank the trailing byte             04231\n         BR    R4                    Return to caller                    04232\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n         SPACE                                                           04234\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LEVEL(7),BLANKS\n         MVI   OUTLINE-1,C' '        INITIALIZE BLANK\n         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA\n         MVI   FLAGSYST,X'00'        DD name protection\n         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT\n         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER\n         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA\n         MVI   RC15,X'00'            RETURN CODE AREA\n         MVI   EOJFLAG,X'00'\n         MVI   NUMCFLG,X'00'\n         MVI   INVNFLG,X'00'\n         ZAP   DECREPTR,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   DECREPCY,=P'0'\n         ZAP   DECTRPCY,=P'0'        INITIALIZE PACKED FIELDS\n         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER\n         MVI   INSYSIN-1,X'40'\n         MVC   INSYSIN,INSYSIN-1\n         MVI   JFCBFLG,X'00'\n         MVC   CHNOTIFY(10),BLNKLINE\n         MVC   CHUSERID(10),BLNKLINE\n         MVC   CHMESAGE(10),BLNKLINE\n         MVC   CHTRACKS(10),BLNKLINE\n         MVC   CHCYLIND(10),BLNKLINE\n         MVC   CHEXTRUS(10),BLNKLINE\n         MVC   CHRECORD(10),BLNKLINE\n         MVC   BINOTIFY,=F'0'\n         MVC   BIUSERID,=F'0'\n         MVC   BIMESAGE,=F'0'\n         MVC   BITRACKS,=F'0'\n         MVC   BICYLIND,=F'0'\n         MVC   BIEXTRUS,=F'0'\n         MVC   BIRECORD,=F'0'\n         MVC   BIRE2TR,=F'0'\n         MVC   BIRE2CY,=F'0'\n         MVC   BITO2TR,=F'0'\n         MVC   BITO2CY,=F'0'\n         MVC   BIUI2UR,=F'0'\n         MVC   BIEU2UI,=F'0'\n         MVC   BINOTFI,=F'0'\n         MVC   BINOTFR,=F'0'\n         MVC   BINOTOT,=F'0'\n         MVC   BITOTREC,=F'0'\n         MVI   FLAG01,X'00'\n         MVI   FLAG02,X'00'\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nDUMMYREC DS    0CL130\n         DC    X'07'\n         DC    C'DUMMY'\n         DC    124X'00'\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nZERRECX  DS    0CL130\n         DC    130X'00'\nJFCBT    DC    CL10'JFCB +    '\nBLNKLINE DC    CL133' '\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n*     DEFAULT QUANTITIES FOR SYSIN KEYWORDS       *\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nDEFNOTFY DC    A(&DEFNOTF)\nDEFUSERS DC    A(&DEFUSER)\nDEFMESGS DC    A(&DEFMSGS)\nCHANOTFY DC    CL10'&DEFNOTF'\nCHAUSERS DC    CL10'&DEFUSER'\nCHAMESGS DC    CL10'&DEFMSGS'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMSGCYL   DC    C'Allocation of BRODUMMY DD must be in Cylinders.'\nMSGONEC  DC    C'Allocation of BRODUMMY DD must be 1 CYL primary.'\nMSGDSOR  DC    C'DSORG of BRODUMMY DD must be DA.  '\nMSGLREC  DC    C'LRECL of BRODUMMY DD must be 129. '\nMSGBLKS  DC    C'BLKSIZE of BRODUMMY DD must be 129. '\nMSGKEYL  DC    C'KEYLEN of BRODUMMY DD must be 1.   '\nMSGRFMT  DC    C'RECFM must be either F or FB.      '\nMSGMEAS  DC    C'Measured Quantities for this DASD Device: '\nMSGMDSH  DC    C'-------- ---------- --- ---- ---- ------- '\nMSGDOSY  DC    C'SYSIN Quantities Entered: '\nMSGDODH  DC    C'----- ---------- -------- '\nMSGCLCR  DC    C'Calculation Results:  (based only on SYSIN parameters x\n               that were entered)'\nMSGCLCD  DC    C'----------- --------      '\nMSGALCR  DC    C'Allocation Recommendations: '\nMSGALCD  DC    C'---------- ---------------  '\nMSGDEFV  DC    C'Default SYSIN Values - (that were not coded)'\nMSGDEFD  DC    C'------- ----- ------                      '\nMSGNOCAL DC    C'No SYSIN quantities entered. Therefore no calculationsx\n                were done.'\nMSGNOC0D DC    C'---------------------------------------------- '\nMSGNOC0T DC    C'SYSIN Keywords have to be entered in Column 1. '\nMSGNOC0A DC    C'  Admissible SYSIN Keywords:  '\nMSGNOCDA DC    C'  ---------- ----- ---------  '\nMSGNOC01 DC    C'NOTIFY=nnn      (number of Global Notify records)    '\nMSGNOC02 DC    C'USERIDS=nnnn    (number of Userids to be loaded)     '\nMSGNOC03 DC    C'MESSAGES=nnnnn  (number of User Messages in BRODCAST)'\nMSGNOC04 DC    C'EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST -X\n                new Userids / 9)'\nMSGNOC05 DC    C'RECORDS=nnnnnn  (total number of records in BRODCAST)'\nMSGNOC06 DC    C'TRACKS=nnnn     (total tracks in BRODCAST allocation)'\nMSGNOC07 DC    C'CYLINDERS=nnn   (total cylinders in BRODCAST allocatiox\n               n)'\nMSGCORRE DC    C'Please correct the indicated errors in the JCL and rer-\n               un the job.'\nMSGTR2BR DC    C'           Tracks     yield            BRODCAST  recorx\n               ds.'\nMSGCY2BR DC    C'           Cylinders  yield            BRODCAST  recorx\n               ds.'\nMSGRC2TR DC    C'           Records    yield            Tracks    allocx\n               ated for BRODCAST.'\nMSGRC2CY DC    C'           Records    yield            Cylinders allocx\n               ated for BRODCAST.'\nMSGUI2UR DC    C'           Userids    need             Userid records x\n               in BRODCAST.'\nMSGEU2UI DC    C'           Extra UID records contain space for        x\n                    Userids.'\nMSGNO2NI DC    C'           Notify records require            Notify inx\n               dex records.'\nMSGNRROU DC    C'           Notify records round to           as a multx\n               iple of 25.'\nMSGNOTOT DC    C'           Notify records require            Total BROx\n               DCAST records.'\nMSGTOTB1 DC    C'Based on NOTIFY=, USERIDS=, MESSAGES=, EXTRAUSERIDRECSx\n               =, the number'\nMSGTOTB2 DC    C' of records required for a new BRODCAST Dataset would x\n               be:           '\nMSGTOTB3 DC    C'This requires an allocation of            Tracks or   x\n                        Cylinders.'\nMSGTOTB4 DC    C'Allocation for a BRODCAST Dataset must be in 1 extent x\n               only....'\nMSGTOTB5 DC    C'To satisfy specs, you can allocate anything larger thax\n               n this size.'\nMSGCYLRE DC    C'(It is recommended to allocate space in Cylinders rathx\n               er than in Tracks.)'\nMSGALLRE DC    C'To get allocation recommendations, you have to code atx\n                least: '\nMSGALLR1 DC    C'  NOTIFY=, USERIDS=, MESSAGES= parameters in SYSIN. '\nMSGEXKE1 DC    C'The TRACKS=, CYLINDERS=, and RECORDS= keywords'\nMSGEXKE2 DC    C' are for calculation purposes only, and are not used '\nMSGEXKE3 DC    C' in determining minimum BRODCAST Dataset size.       '\nRECPTRK  DC    C'Records per Track   : '\nTRKPCYL  DC    C'Tracks per Cylinder : '\nRECPCYL  DC    C'Records per Cylinder: '\nNEWPAGE  DC    C'1'\nNEXTLIN  DC    C' '\nTWOLINE  DC    C'0'\nTHRLINE  DC    C'-'\nNOLINE   DC    C'+'\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL55'&PGMNAME   ---   BRODCAST Dataset Calculation Progrx\n               am  '\n         DC    C' ---'\n         DC    CL64' '\n*--------------------------------------------------------------------*\nJFCBDTIT DC    C'              JFCB  DIAGNOSTIC  HEX  DISPLAY  '\nMEASR30H DC    C'01      05        10        15        20        25    x\n                   30'\nRULER30H DC    C'--------++--------++--------++--------++--------++----x\n               ----++'\nMASK4    DC    XL4'40202120'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODUMMY DCB   DDNAME=BRODUMMY,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=PS,           SEQUENTIAL....                      X\n               MACRF=(WL),         LOAD OF BDAM FILE                   X\n               RECFM=F,            FIXED LENGTH                        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               EXLST=JFCB1\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n*\nSYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X\n               EODAD=SYSINEND\n         SPACE 3\n         LTORG\n         SPACE\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         SPACE 1\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\n*-----------------------------------------------------------------*\nPACKWORK DC    D'0'              PACK WORK AREA\nCHARNUM  DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBINVALUE DS    F                 FULLWORD BINARY NUMBER\n*-----------------------------------------------------------------*\nCHNOTIFY DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBINOTIFY DS    F                 FULLWORD BINARY NUMBER\nCHUSERID DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIUSERID DS    F                 FULLWORD BINARY NUMBER\nCHMESAGE DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIMESAGE DS    F                 FULLWORD BINARY NUMBER\nCHTRACKS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBITRACKS DS    F                 FULLWORD BINARY NUMBER\nCHCYLIND DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBICYLIND DS    F                 FULLWORD BINARY NUMBER\nCHEXTRUS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIEXTRUS DS    F                 FULLWORD BINARY NUMBER\nCHRECORD DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIRECORD DS    F                 FULLWORD BINARY NUMBER\n*-----------------------------------------------------------------*\nBIRE2TR  DS    F                 FULLWORD BINARY NUMBER\nDERE2TR  DS    PL8\nBIRE2CY  DS    F                 FULLWORD BINARY NUMBER\nDERE2CY  DS    PL8\nBITO2TR  DS    F                 FULLWORD BINARY NUMBER\nDETO2TR  DS    PL8\nBITO2CY  DS    F                 FULLWORD BINARY NUMBER\nDETO2CY  DS    PL8\nBIUI2UR  DS    F                 FULLWORD BINARY NUMBER\nDEUI2UR  DS    PL8\nBIEU2UI  DS    F                 FULLWORD BINARY NUMBER\nDEEU2UI  DS    PL8\nBINOTFI  DS    F                 FULLWORD BINARY NUMBER\nDENOTFI  DS    PL8\nBINOTFR  DS    F                 FULLWORD BINARY NUMBER\nDENOTFR  DS    PL8\nBINOTOT  DS    F                 FULLWORD BINARY NUMBER\nDENOTOT  DS    PL8\nBITOTREC DS    F                 FULLWORD BINARY NUMBER\nDETOTREC DS    PL8\n*-----------------------------------------------------------------*\nHIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST\nNUMBREC  DS    F                   COUNT OF RECORDS LOADED\nRECONTRK DS    F                   COUNT RECORDS ON THIS TRACK\nRECPERTR DS    F                   RECORDS PER TRACK\nTRKPERCY DS    F                   COUNT TRACKS PER CYLINDER\nRECPERCY DS    F                   COUNT OF RECORDS PER CYLINDER\n*  ------   Calculated values  -  below\nBITRKREC DS    F                   RECORDS FROM TRACKS=\nDETRKREC DS    PL8                 RECORDS FROM TRACKS, DECIMAL\nBICYLREC DS    F                   RECORDS FROM CYLINDERS=\nDECYLREC DS    PL8                 RECORDS FROM CYLINDERS, DECIMAL\n*  ------   Calculated values  -  above\nRC15     DS    C                   STORE RETURN CODE FROM WRITE\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\n         DS    0F                  ALIGN ON FULLWORD\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nINHDR    DS    CL130\n         DS    XL2\nINREC    DS    CL130\n         DS    0F\nWRTWR    WRITE MDLDECB,SF,MF=L\nWRTWREND DS    0F\nWRTWRLEN EQU   *-WRTWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nEOJFLAG  DS    X\nNUMCFLG  DS    X\nINVNFLG  DS    X\nEOFWFLG  DS    X\nJFCBFLG  DS    X\nFLAG01   DS    X\n*                                  X'01' - NOTIFY CODED\n*                                  X'02' - USERIDS CODED\n*                                  X'04' - MESSAGES CODED\n*                                  X'08' - TRACKS CODED\n*                                  X'10' - CYLINDERS CODED\n*                                  X'20' - EXTRAUSERIDRECS CODED\n*                                  X'40' - RECORDS CODED\n*                                  X'80' - NOT YET USED\nFLAG02   DS    X                   NOT YET USED\n         DS    CL1\nFLAGSYST DS    X\n*                                  X'01' - BRODUMMY DD IS IN JCL\n*                                  X'02' - SYSIN    DD IS IN JCL\nOUTLINE  DS    CL133\n         DS    CL9                 FILLER\n         DS    0D\nCVDWORK  DS    D\nDECREPTR DS    PL8\nDECREPCY DS    PL8\nDECTRPCY DS    PL8\nSTORWRK1 DS    PL12\nSAVE34   DS    2F\nSAVE45   DS    2F\nSAVER2   DS    F\nSAVER3   DS    F\nSAVER3A  DS    F\nSAVER4A  DS    F\nSAVER5   DS    F\nSAVER6   DS    F\nSAVER7   DS    F\nSAVER9   DS    F\nSAVER9A  DS    F\nSAVER9B  DS    F\nSAVER9C  DS    F\nSAVER9D  DS    F\nSAVER9E  DS    F\nSAVER151 DS    3F\nSTORR4   DS    F\nSTORR5   DS    F\n         DS    C\nINSYSIN  DS    CL80\nWRKSYSIN DS    CL80\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         CVT  DSECT=YES,LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMCLEAN": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00!\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x03\\xc8\\x00\\x01\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:21", "lines": 968, "newlines": 1, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMCLEAN TITLE 'BDMCLEAN - CLEAN BROADCAST NOTICES AND USERID MESSAGES'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM MAY BE RUN AS A TSO COMMAND          *\n*                   OR USING TSO-IN-BATCH.                            *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMCLEAN                                          *\n*                                                                     *\n*       FUNCTION:   TO CLEAN BRODCAST NOTICES AND RID THEM OF         *\n*                   GARBAGE LEFT BY PREVIOUS USE OF THE SLOT.         *\n*                   ALSO TO CLEAN DELETED USER MESSAGES FROM THE      *\n*                   BRODCAST DATASET.                                 *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  NOV 24, 2006                                      *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*       BATCH EXECUTION:                                              *\n*                                                                     *\n*       //XXXXXXXX JOB ,'BDMCLEAN',CLASS=B,                           *\n*       //    MSGCLASS=X,NOTIFY=&SYSUID                               *\n*       //*                                                           *\n*       //*      INSTRUCTIONS FOR BDMCLEAN TSO COMMAND                *\n*       //*      ------------ --- -------- --- -------                *\n*       //*   BDMCLEAN N - CLEAN NOTICES ONLY                         *\n*       //*   BDMCLEAN U - CLEAN USER MESSAGES ONLY                   *\n*       //*   BDMCLEAN M - CLEAN USER MESSAGES ONLY                   *\n*       //*   BDMCLEAN   - CLEAN BOTH NOTICES AND USERID MESSAGES     *\n*       //*                                                           *\n*       //TSOBATCH EXEC PGM=IKJEFT01                                  *\n*       //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB            *\n*       //SYSTSPRT DD SYSOUT=*                                        *\n*       //BRODCAST DD DISP=SHR,DSN=name.of.brodcast.dataset           *\n*       //SYSTSIN DD *                                                *\n*       BDMCLEAN                                                      *\n*       /*                                                            *\n*                                                                     *\n*       NOTE:       BDMCLEAN READS THE BRODCAST DATASET DIRECTLY,     *\n*                   AND CLEANS OUT ALL UNUSED NOTICES TO HEXZEROS,    *\n*                   WHILE ZEROING OUT ALL UNUSED BYTES FROM USED      *\n*                   NOTICES TOO.  CLEANS OUT DELETED USER MESSAGES    *\n*                   AS WELL.                                          *\n*                                                                     *\n*       CHANGES:  05/09/05  -  ADD ENQUEUE PROTECTION.  ENQ ON        *\n*                              HEADER RECORD FOR THE DURATION,        *\n*                              AND ON THE RECORD BEING WRITTEN,       *\n*                              DURING THE WRITE OPERATION.            *\n*                                                                     *\n*                 06/11/24  -  SIMILAR ENQUEUE PROTECTION WHEN        *\n*                              CLEARING USER MESSAGES.                *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND  , */\n         MACRO\n         IKJZT303   &DSECT=YES\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND  , */\n         SPACE\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  'LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMCLEAN'\nBDMCLEAN CSECT\n         USING BDMCLEAN,R12,R11,R10\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C' '\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         ZAP   BMSGCNT,=P'0'\n         ZAP   GMSGCNT,=P'0'\n         ZAP   EMSGCNT,=P'0'\n         ZAP   FREEREC,=P'0'\n         MVI   PARMFLAG,X'00'\n         SPACE 1\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,NOPARM            ZERO, MESSAGE\n*        BC    8,EOJ               ZERO, EOJ\n         BC    5,EOJ4              LESS, OR OVERFLOW, OUT.\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   CMDPRM(8),BLANKS    CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEPRM          MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,PARMLEN          SAVE NEW USER'S LENGTH\n         OC    CMDPRM(8),BLANKS    UPPERCASE NEW USERID\n*---> HANDLE PARM IF ANY - BELOW\n         CLI   CMDPRM,C'U'\n         BE    UMSGONLY\n         CLI   CMDPRM,C'M'\n         BE    UMSGONLY\n         CLI   CMDPRM,C'N'\n         BE    NOTEONLY\n         B     NOPARM\nNOTEONLY DS    0H\n         OI    PARMFLAG,X'01'\n         B     YESPARM\nUMSGONLY DS    0H\n         OI    PARMFLAG,X'02'\n         B     YESPARM\n*---> HANDLE PARM IF ANY - ABOVE\nMOVEPRM  MVC   CMDPRM(*-*),0(R1)   EXECUTED\nNOPARM   DS    0H\n         MVI   PARMFLAG,X'00'      NO PARMS-CLEAR NOTICES AND USERMSGS\n         B     DOBROD\nYESPARM  DS    0H\nDOBROD   OPEN  (BRODCAST,(INOUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST NOTICES RECORD, AND\n*                                  ALSO THE MAXIMUM NUMBER OF NOTICES\n*                                  IN THIS BROADCAST DATASET.\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH NOTICE RECORD.                   --- *\n* ---     FIRST, WE HAVE TO GO THRU THE INDEX RECORDS            --- *\n* ------------------------------------------------------------------ *\n         TM    PARMFLAG,X'02'             USER ONLY INDICATED?\n         BO    WMESS2                     SKIP NOTICES CLEANING\nINDEXBC  DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         MVC   SAVERBA(3),FSTNOTI    GET THE BALL ROLLING\nINDXLOOP DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES\n         BE    ENDINDEX            END OF NOTICE INDEX RECORDS. FINISH.\n*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    NOTICES AREN'T MISSED.\n         LA    R7,25               COUNT OF INDEXES PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+20       ADDRESS OF RECORD\n         CLI   0(R3),X'00'         NOTICE INDEX RECORD?\n         BNE   BADEND              NO. ERROR.\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING BCDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),BCDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE INDEX SLOT COUNTER\n         DROP  R3\n*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY\nBCILOOP  DS    0H\n         USING BCDENTRY,R3\n* --->\n*        MVC   LINE,LINE-1\n*        HEX   LINE,5,BCDENTRY\n*        LA    R0,20\n*        BAL   R9,MSG\n         MVC   LINE,LINE-1\n* --->\n         TM    0(R3),X'80'                   VALID NOTICE ?\n         BZ    YESNMSG                       YES. SKIP COMPLETE CLEAN.\n         OI    CLNALFLG,X'01'                NO. CLEAN ENTIRE RECORD.\nYESNMSG  DS    0H\n         CLC   BCDENTRY(5),=X'0000000000'    BLANK ENTRY?\n         BE    TRYNEXT                       IF SO, JUST BUMP.\n         MVC   CLENNUMB(2),BCDMSGNO          SAVE NOTICE NUMBER\n         MVC   CLENRBA(3),BCDMRBA            SAVE NOTICE RBA\n         ST    R9,SAVERG9\n         BAL   R9,CLENNOTE                   WRITE NOTICE OUT\n         AP    BMSGCNT,=P'1'\n         L     R9,SAVERG9\nTRYNEXT  LA    R3,5(,R3)           BUMP LOCATION TO NEXT INDEX SLOT\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         BCT   R7,BCILOOP          TRY FOR ANOTHER NOTICE SLOT\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     INDXLOOP            END OF RECORD? GET ANOTHER.\n         SPACE 3\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR NOTICES                            --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'00'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF INDX RCDS\nENDINDEX DS    0H                            END OF NOTICE INDEX RCDS.\nWMESS2   DS    0H\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,L'MESSBLNK\n         BAL   R9,MSG\n*\n         TM    PARMFLAG,X'02'             USER ONLY INDICATED?\n         BO    NOCLINDX                   YES. SKIP NOTICE MESSAGES.\n*\n         MVC   LINE,LINE-1\n         MVC   LINE(MSG3LEN),MESSAGE3\n         MVC   LINE+34(10),MASK10\n         ED    LINE+34(10),GMSGCNT\n         LA    R0,MSG3LEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSG4LEN),MESSAGE4\n         MVC   LINE+34(10),MASK10\n         ED    LINE+34(10),EMSGCNT\n         LA    R0,MSG4LEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSG5LEN),MESSAGE5\n         MVC   LINE+34(10),MASK10\n         ED    LINE+34(10),BMSGCNT\n         LA    R0,MSG5LEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,L'MESSBLNK\n         BAL   R9,MSG\n* ---- >\nNOCLINDX DS    0H\n         TM    PARMFLAG,X'01'\n         BO    NOCLUSER\n         BAL   R9,CLEANUSR\n         MVC   LINE,LINE-1\n         MVC   LINE(MSG6LEN),MESSAGE6\n         MVC   LINE+34(10),MASK10\n         ED    LINE+34(10),FREEREC\n         LA    R0,MSG6LEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,L'MESSBLNK\n         BAL   R9,MSG\nNOCLUSER DS    0H\n* ---- >\n         B     EOJ0\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINE,MESSAGE1                  SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1                    TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4                SET CC = 4.\nEOJ      DS    0H\n         MVC   RNAM(3),ZEROS       DEQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n*\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14                 Go back to system.\n         SPACE\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9B\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9C\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   FSTNOTI(3),R1BCPTR  SAVE RBA OF FIRST NOTICES INDEX\n         MVC   NUMNOTES(2),R1BCMAX  SAVE MAXIMUM NUMBER OF NOTES\n         MVC   HIGHVAL(4),R1RECNUM  SAVE NUMBER OF RECORDS IN BRODCAST\n         DROP  R3\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCLENNOTE DS    0H\n         ST    R9,SAVER9D\n         MVC   MESSRBA(3),CLENRBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'02'         IS THIS A GOOD NOTICE ?\n         BNE   CLENNOTN            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING BCMSG,R2\n         TM    CLNALFLG,X'01'\n         BO    CLEANALL\n         AP    GMSGCNT,=P'1'\n         XR    R0,R0\n         IC    R0,BCMLNG           LENGTH FOR MESSAGE MOVE\n         LR    R6,R0               LOAD IT INTO R6\n         BCTR  R6,0                SUBTRACT ONE FOR EXECUTE\n         B     CLENGOON\nCLEANMSG MVC   GOODOUT(*-*),BCMTEXT   EXECUTED\nCLENGOON DS    0H\n*>BELOW<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         C     R6,=X'FFFFFFFF'     IS R6 EQUAL TO MINUS ONE?\n         BNE   CLENNMIN            NO. THERE WON'T BE A PROBLEM.\n         LA    R6,0                YES. SET IT EQUAL TO ZERO.\n         B     CLENNOTN            SKIP MESSAGE MOVE AND GET OUT.\nCLENNMIN DS    0H\n*>ABOVE<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         MVI   GOODOUT,X'00'\n         MVC   GOODOUT+1(124),GOODOUT\n         EX    R6,CLEANMSG         MOVE MESSAGE TEXT TO WORK AREA\n         DROP  R2\n         ST    R8,SAVERG8\n         L     R8,MDLDECB+12\n         MVC   1(125,R8),GOODOUT\n         L     R8,SAVERG8\n         B     CLENNMWR\nCLEANALL DS    0H\n         AP    EMSGCNT,=P'1'\n         MVI   GOODOUT,X'00'\n         MVC   GOODOUT+1(127),GOODOUT\n         ST    R8,SAVERG8\n         L     R8,MDLDECB+12\n         MVC   0(128,R8),GOODOUT\n         NI    CLNALFLG,X'FF'-X'01'\n         L     R8,SAVERG8\nCLENNMWR DS    0H\n         MVC   RNAM(3),MESSRBA         USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n*\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         MVC   RNAM(3),MESSRBA         USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\nCLENNOTN DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9E\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9E\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9F\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9F\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9G\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1         BLANK THE MESSAGE LINE\n         ZAP   BMSGCNT,=P'0'\n         MVC   WKLBLNK(2),BLANKS\n         MVI   ZERREC-1,X'00'\n         MVC   ZERREC(129),ZERREC-1\n         MVI   CLNALFLG,X'00'\n         XC    HIGHVAL,HIGHVAL\n         MVC   CMDPRM(8),BLANKS\n         MVI   PARMFLAG,X'00'\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9H\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9H\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9I\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9J\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9J\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*--------------------------------------------------------------------*\n*        THIS IS NOW OUR READ LOOP AS WE DO A SUCESSIVE READ\n*        INCREMENTING THE RBA NUMBER UNTIL WE REACH THE BCNUMREC\n*        VALUE SAVED IN 'HIGHVAL'.  WHEN WE ENCOUNTER THE X'FF'\n*        RECORD TYPE, WE MAKE SURE IT IS COMPLETELY ZEROED OUT.\n*--------------------------------------------------------------------*\n         SPACE\nCLEANUSR DS    0H\n         ST    R9,SAVER9A\n         MVC   BLOCKNO(3),ZERREC   START BLOCK NUMBER AT ZERO.\nCLEALOOP DS    0H\n         ICM   R1,7,BLOCKNO        GET PROCESSED RBA\n         LA    R1,1(R1)            INCREMENT BY ONE\n         STCM  R1,7,BLOCKNO        STORE IT BACK FOR READ\n         CLC   BLOCKNO(3),HIGHVAL+1  DID WE REACH MAX?           JDM0\n         BE    EXITLOOP            IF SO, GO ANALYZE THEM ALL\n         SPACE\n         READ  REPECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA TO HOLD THE KEY\n         SPACE\n         CHECK REPECB\n         SPACE\n         L     R2,REPECB+20        GET KEY ADDRESS\n         CLI   0(R2),X'FF'         IS IT DELETED RECORD ?      SG 05/99\n         BNE   LOOPGO1             NO. DON'T DO WRITES.        SG 05/99\n         ST    R8,SAVER8                                       SG 05/99\n         L     R8,REPECB+12        GET RECORD ADDRESS TO ZERO. SG 05/99\n         MVC   1(128,R8),ZERREC    AND ZERO IT OUT             SG 05/99\n         AP    FREEREC,=P'1'       ADD 1 TO TOTAL\n         L     R8,SAVER8                                       SG 05/99\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         WRITE REPECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK REPECB\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\nLOOPGO1  DS    0H                                              SG 05/99\n         SPACE\nFREEB    DS    0H                                                       009\n         FREEDBUF REPECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         B     CLEALOOP\nEXITLOOP DS    0H\n         L     R9,SAVER9A\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nQNAM     DS    CL8'SYSIKJBC'\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nRNAME    DC    X'000000'\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE3 DC    C' COUNT OF USED  NOTICES CLEANED:             '\nMSG3LEN  EQU   *-MESSAGE3\nMESSAGE4 DC    C' COUNT OF EMPTY NOTICES CLEANED:             '\nMSG4LEN  EQU   *-MESSAGE4\nMESSAGE5 DC    C' TOTAL COUNT OF NOTICES CLEANED:             '\nMSG5LEN  EQU   *-MESSAGE5\nMESSAGE6 DC    C' COUNT OF USER MESSAGES CLEANED:             '\nMSG6LEN  EQU   *-MESSAGE5\nMESSBLNK DC    C'                                             '\nMESPREND DC    C'?????  PRELIMINARY END OF NOTICES  - - - - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORD    DC    D'0'\n*\nSAVERG8  DS    F\nSAVERG9  DS    F\nHIGHVAL  DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\n         DS    CL1\nZERREC   DS    CL129\nWKLBLNK  DS    CL2\n         DS    CL72                PADDING\nBMSGCNT  DC    PL5'0'              COUNT OF MESSAGES FOR EACH NOTICE\nGMSGCNT  DC    PL5'0'              COUNT OF MESSAGES FOR EACH NOTICE\nEMSGCNT  DC    PL5'0'              COUNT OF MESSAGES FOR EACH NOTICE\nFREEREC  DC    PL5'0'              COUNT OF MESSAGES FOR EACH NOTICE\nPARMFLAG DS    X\nPARMLEN  DS    C\nCMDPRM   DS    CL8\nNUMNOTES DC    X'0000'             MAX NUMBER OF NOTICE RECORDS\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nCLENRBA  DC    X'000000'           STORE RBA OF NOTICE\nCLENNUMB DC    X'0000'             STORE NUMBER OF NOTICE\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nFSTNOTI  DC    X'000000'           STORE RBA OF FIRST NOTICE INDEX\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nRNAM     DC    X'000000'           RBA FOR RNAME IN ENQ-DEQ\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER7   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER8   DS    F                   SAVE WORK REGISTER\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L     NOTICE READ\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nRDWI     READ  MDIDECB,DI,MF=L     INDEX READ\nRDWIEND  DS    0F\nRDWILEN  EQU   *-RDWI\nREPE     READ  REPECB,DI,MF=L      SEQUENTIAL READ\nREPEEND  DS    0F\nREPELEN  EQU   *-REPE\nCLNALFLG DS    X\nGOODOUT  DS    CL129\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IEZBITS\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BDMCVMSG": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x000\\x00\\x95\\x14\\x8f\\x01\\x16&\\x9f\\x156\\x02 \\x03\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-28T00:00:00", "modifydate": "2016-09-25T15:36:30", "lines": 544, "newlines": 798, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMCVMSG TITLE 'Convert User Messages from BDMXPORT to BDMMDUMP format'\n*------------------------------------------------------------------*\n*\n*          BDMCVMSG (Convert BDMXPORT backup to BDMMDUMP format)\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program converts a VB-255 file that was created by\n*        the BDMXPORT program to back up User Messages from a\n*        BRODCAST Dataset, into BDMMDUMP format for reloading\n*        using the BDMMLOAD program (instead of BDMSEND, which,\n*        at the time of writing, is slow).\n*\n*------------------------------------------------------------------*\n*\n*\n*        JCL TO INVOKE:\n*\n*            //BRODCAST EXEC PGM=BDMCVMSG,REGION=4M\n*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --\n*            //SYSPRINT DD  SYSOUT=A\n*            //EXPORTIN DD  DISP=SHR,DSN=yourid.VB255.EXPORT\n*            //BDMMDUMP DD  DISP=(NEW,CATLG,DELETE),\n*            //   DSN=yourid.usermsg.dump.dataset,\n*            //   DCB=(RECFM=FB,DSORG=PS,LRECL=130,BLKSIZE=27950),\n*            //   SPACE=(TRK,(60,60),RLSE),UNIT=SYSALLDA,\n*            //   VOL=SER=WORK04\n*\n* WRITTEN:    21 May 2007\n*\n* CHANGE LOG:\n*    21 May 2007 -\n*\n*\n*------------------------------------------------------------------*\n         EJECT\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                  USED BY O.S.\nR1       EQU   1                  ADDR OF PARM LIST\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9                   PTR TO OUTPUT LINE FOR PUT\nR10      EQU   10                  BAL REGISTER\nR11      EQU   11\nR12      EQU   12                  BASE REGISTER\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMCVMSG '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R5,R1                  Save PARM address\n         LR    R12,R15                Load entry address\n         USING BDMCVMSG,R12,R11,R8    Establish addressability\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R8,4095(,R11)\n         LA    R8,1(,R8)\n         LR    R15,R13             Save caller's save address\n         LA    R13,SAVE            Get our savearea address\n         ST    R15,SAVE+4          Save off into low save\n         ST    R13,8(,R15)         Chain mine back\n         ST    R5,PARMSAVE         Store PARM address for reloading\nINITPGM  DS    0H\n         MVI   LINE-1,X'40'\n         MVI   BLANK44-1,X'40'     Initialize Blanks area\n         MVC   BLANK44(44),BLANK44-1\n         MVC   OLDUSID(7),BLANK44\n         SPACE\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  SYSPRINT, BRODUSER, SYSIN        06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n         ST    R3,SAVER3\n         ST    R5,SAVER5\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),SYSPRINC     SYSPRINT DDNAME THERE?               06235\n         BNE   TIOTPRTN       NO                                         06236\n         OI    DDNFLAG,X'01'        SHOW PRESENCE OF SYSPRINT DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTPRTN CLC   4(8,R5),BDMMDUMC                                          06239\n         BNE   TIOTUSRN                                                  06240\n         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BDMMDUMP DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTUSRN CLC   4(8,R5),EXPORTIC                                          06239\n         BNE   TIOTNEXT                                                  06240\n         OI    DDNFLAG,X'04'        SHOW PRESENCE OF EXPORTIN DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3\n         L     R5,SAVER5\n         B     OPEN\nSYSPRINC DC    CL8'SYSPRINT'\nBDMMDUMC DC    CL8'BDMMDUMP'\nEXPORTIC DC    CL8'EXPORTIN'\n* -------------------------------------------------------- *\n*   OPEN files and print title lines in SYSPRINT report.   *\n* -------------------------------------------------------- *\nOPEN     DS    0H              .... TEST ALL THE DD NAMES .....\n         TM    DDNFLAG,X'01'        SYSPRINT there?\n         BO    OPENSYSP             Yes. Go OPEN it.\n         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMCV10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'02'        BDMMDUMP there? Then it's allocated\n         BZ    NODELMSG             Not there, no need to delete.\n         WTO   'BDMCV03E     BDMMDUMP not created properly.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMCV02E     Delete BDMMDUMP and rerun job.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNODELMSG DS    0H\n         B     EOJ16                End right away.  Code 16.\n*\nOPENSYSP DS    0H\n         OPEN  (SYSPRINT,(OUTPUT))\n         TM    DDNFLAG,X'04'        EXPORTIN missing?\n         BZ    NODDNAME             Put out msgs and end with Code 12.\n         OPEN  (EXPORTIN,(INPUT))\n         TM    DDNFLAG,X'02'        BDMMDUMP missing?\n         BZ    NODDNAME             Put out msgs and end with Code 12.\n         OPEN  (BDMMDUMP,(OUTPUT))\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n*\n* ------------------------------------------------------------------- *\n*     GET A VB-255 EXPORT FILE RECORD AND WRITE IT AS A BDMMDUMP\n* ------------------------------------------------------------------- *\n*\nGETSTART DS    0H                 CLOSE is the EODAD address\n         MVC   OLDUSID(7),BLANK44    Initialize the Userid field\nGETDATIN DS    0H\n         GET   EXPORTIN           Get a record\n         LR    R3,R1              Save address of buffer\n         XR    R2,R2              Clear work register\n         LH    R2,0(,R3)          Bytes to move, plus 4\n         S     R2,=F'4'           Subtract the 4\n         STH   R2,NUMBYTES        And save the number\n         LA    R3,4(,R3)          Bump past the RDW to the data\n         ST    R3,CURBUFAD        Store the address of the data itself\n         CLI   24(R3),C'{'        Is the message preceded by { - BDM\n         BE    WRTDATIN           Bypass the bracket\n         OI    BRACFLG,X'01'      Mark that it's in BCM format\nWRTDATIN DS    0H\n         CLC   OLDUSID(7),16(R3)  Compare the gotten Userid to the old\n         BNE   WRTHEADR           Not the same. Write a ./--- header.\nWRTMESGS DS    0H                 Write out the current message\n         MVC   LINE,LINE-1        First do the SYSPRINT version\n         XR    R2,R2              Clear the work register\n         IC    R2,NUMBYTES+1      Total length of record - 4 for RDW\n         TM    BRACFLG,X'01'\n         BO    NOBRACS1\n         S     R2,=F'27'          Get to the actual message data\n         EX    R2,MOVEMSG         Move the message to the print line\n         B     NOBRACS2\nNOBRACS1 DS    0H\n         S     R2,=F'26'          Get to the actual message data\n         EX    R2,MOVEMSGC        Move the message to the print line\nNOBRACS2 DS    0H\n         PUT   SYSPRINT,LINE      And write it out\n         MVC   REC130,REC130-1    Zero out the BDMMLOAD format record\n         MVI   REC130,X'03'       Put the X'03' into the key\n         TM    BRACFLG,X'01'      Is this in BCM format?\n         BO    NOBRACS3           Yes. Do a different move.\n         EX    R2,MOVEDATA        Move the message out there\n         LA    R2,1(,R2)          Bump R2 to the true message length\n         B     NOBRACS4           Skip over the \"no brace\" action\nNOBRACS3 DS    0H\n         LA    R2,1(,R2)          Bump R2 to the true message length\n         EX    R2,MOVEDATC        Move the message out there\n         LA    R2,1(,R2)          Bump R2 to the true message length\nNOBRACS4 DS    0H\n         STC   R2,LENTHMSG        And store the last character away\n         MVC   REC130+1(1),LENTHMSG   Move binary length into record\n         PUT   BDMMDUMP,REC130    Write out the BDMMDUMP record\n         NI    BRACFLG,X'FF'-X'01'\n         B     GETDATIN           Go get another BDMSEND format record\n*\nWRTHEADR DS    0H                     Write a ./--- format header.\n         MVC   LINE,LINE-1            Print version. Blank the line.\n         MVC   ADDUSUSR(7),BLANK44    Clear the Userid field\n         MVC   ADDUSUSR(7),16(R3)     Dump the new Userid into it.\n         MVC   LINE(130),ADDUSLNE     Bring the line to print.\n         PUT   SYSPRINT,LINE          Print it\n         PUT   BDMMDUMP,LINE          And dump it to the BDMMDUMP too\n         MVC   OLDUSID(7),16(R3)      Renew the old Userid for compare\n         B     WRTMESGS               And write the data record out.\n* -----------------------------\nINRCDS   DC    PL7'0'\nNUMBYTES DC    XL2'00'            Number of bytes to move\nLENTHMSG DC    XL1'00'                 Actual length moved to BDMMLOAD\nCURBUFAD DS    F\nOLDUS    DS    0CL8\nOLDUSID  DC    CL7' '\nOLDUSEND DC    CL1' '\nMOVEMSG  MVC   LINEM(*-*),25(R3)       Curly braces surround message\nMOVEDATA MVC   REC130+2(*-*),25(R3)    Move to BDMMLOAD format output\nMOVEMSGC MVC   LINEM(*-*),24(R3)       Nothing surrounds the message\nMOVEDATC MVC   REC130+2(*-*),24(R3)    Move to BDMMLOAD format output\n         LTORG\n*--------------------------------------------------------------------*\n*        END OF OUTER LOOP\n*        TIME TO CLOSE AND END THE PROGRAM, BYE.\n*--------------------------------------------------------------------*\n         SPACE\nCLOSE    DS    0H\n         CLOSE EXPORTIN\n         CLOSE SYSPRINT\n         TM    DDNFLAG,X'02'\n         BZ    EOJ8\n         CLOSE BDMMDUMP\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H\n         L     R13,SAVE+4\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                 Go back to system.\n         SPACE\n*--------------------------------------------------------------------*\n*        ERROR IF NO BDMMDUMP OR EXPORTIN DD NAME                    *\n*--------------------------------------------------------------------*\nNODDNAME DS    0H\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         TM    DDNFLAG,X'02'       BDMMDUMP DD there?\n         BO    BYPBDMMD            Yes. Bypass msg that it's not.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMCV01E   ---  BDMMDUMP DD Name Missing  -X\n               --  '\n         PUT   SYSPRINT,LINE\nBYPBDMMD DS    0H\n         TM    DDNFLAG,X'04'       EXPORTIN DD there?\n         BO    BYPMDMSG            Yes. Bypass msg that it's not.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMCV01E   ---  EXPORTIN DD Name Missing  -X\n               --  '\n         PUT   SYSPRINT,LINE\nBYPMDMSG DS    0H\n         TM    DDNFLAG,X'02'       BDMMDUMP DD there?\n         BZ    NOCLSBRC            Yes. It needs to be deleted.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMCV03E   ---  BDMMDUMP not created properX\n               ly..'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMCV02E   ---  Delete BDMMDUMP and Rerun -X\n               --  '\n         PUT   SYSPRINT,LINE\nNOCLSBRC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMCV05E   ***  Please correct your JCL   *x\n               **  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         CLOSE SYSPRINT\n         B     EOJ12\n*--------------------------------------------------------------------*\n*        PRINT OUTPUT SUBROUTINE.\n*--------------------------------------------------------------------*\n         SPACE\nPRINT    DS    0H\n         PUT   SYSPRINT,(R9)       WRITE FROM AREA ADDRESS IN R9\n         BR    R10                 RETURN TO WHENCE WE CAME\n         SPACE\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*\n*--------------------------------------------------------------------*\n*        DATA CONTROL BLOCKS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nEXPORTIN DCB   MACRF=GL,DDNAME=EXPORTIN,DSORG=PS,RECFM=VB,EODAD=CLOSE, X\n               EXLST=JFCB1\n         SPACE\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\nBDMMDUMP DCB   DSORG=PS,DDNAME=BDMMDUMP,MACRF=PM,                      X\n               LRECL=130,RECFM=FB,EXLST=JFCB1\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA AREAS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nCVDAREA  DS    D\nSAVE     DC    18F'0'\nSAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build\nSAVER1   DS    F                   Save Register 1\nSAVER3   DS    F                   Save Register 3\nSAVER5   DS    F                   Save Register 5\nSAVER5A  DS    F                   Save Register 5\nSAVER6   DS    F                   Preserve R6 during BRODPRNT handling\nSAVER6A  DS    F                   Save Register 6\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nSAVER9U  DS    F                   BAL Register Save Area\nSAVER9V  DS    F                   BAL Register Save Area\nSAVER9W  DS    F                   BAL Register Save Area\nSAVER9X  DS    F                   BAL Register Save Area\nSAVER9Y  DS    F                   BAL Register Save Area\nSAVER10  DS    F                   Save Register 10\nPARMSAVE DS    F                   Save passed PARM address if any\nSAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX\n         DC    C' '                Initialized at beginning of program\nBLANK44  DC    CL44' '             General Blanks if needed\nPWKAREA  DC    CL3' '              For uppercasing the PARM\nADDUSLNE DS    0CL130\nADDUSHDR DC    CL6'./--- '\nADDUSUSR DC    CL7'       '\nADDUSEND DC    CL117' '\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   below\nBRACFLG  DC    X'00'               Bracket flag\nDDNFLAG  DC    X'00'               Results of TIOT scan\n*              X'01'               SYSPRINT DD is coded in JCL\n*              X'02'               BDMMDUMP DD is coded in JCL\n*              X'04'               EXPORTIN DD is coded in JCL\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   above\n         DC    X'00'\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DC    XL1'00'             Key slot\nRECHOLD  DC    XL129'00'           Data slot\nINCORGEN DS    F\n         DS    0F\nMASK10   DC    XL10'40202020202020202120'\nRECCNT   DC    PL1'0'\nMSGCOUNT DC    PL5'0'\nUWMCNT   DC    PL5'0'\nNOTDIR   DC    PL5'0'              CT FOR NOTICE DIRECTORY RECS\nUSRIND   DC    PL5'0'              CT FOR USER MAIL DIRECTORY RECS\nNOTMSG   DC    PL5'0'              CT FOR NOTICE MSG RECS\nUSRMSG   DC    PL5'0'              CT FOR USER MAIL MSG RECS\nPTRMSG   DC    PL5'0'              CT FOR POINTER REC (ALWAYS 1) JDM1\nREC04    DC    PL5'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0\nFREEREC  DC    PL5'0'              CT FOR INACTIVE MAIL MSG RECS\nUNUSABL  DC    PL5'0'\nUSERS    DC    PL5'0'\nACTNOT   DC    PL5'0'              Number of active Notify messages\nINANOT   DC    PL5'0'              Number of inactive Nofify messages\nUSERDASH DC    CL133'    ----------------------------------------------X\n               --------------------'\n*\nUSERID   DS    0CL8\nUSERIDI  DS    CL7\nUSERIDB  DS    CL1\n         SPACE\n*--------------------------------------------------------------------*\n*--              M E S S A G E   L A Y O U T S                     --*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30'-BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\n*--------------------------------------------------------------------*\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL52'&PGMNAME   ---   BDMXPORT Conversion to BDMMLOAD  '\n         DC    C' ---'\n         DC    CL67' '\n*--------------------------------------------------------------------*\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\nLINET    EQU   LINE+7\nLINEM    EQU   LINE+1\n*--------------------------------------------------------------------*\n         SPACE\n         EJECT\n         SPACE\n         IEZBITS\n         SPACE\n         IKJZT301 DSECT=YES\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n         IKJEESCB\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMDEL": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x006\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x07{\\x05\\x05\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:36", "lines": 1915, "newlines": 1285, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMDEL   TITLE 'BDMDEL - LIST AND DELETE MESSAGES FOR A USERID.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMDEL USERID                                     *\n*                                                                     *\n*       FUNCTION:   TO LIST BRODCAST MESSAGES FOR A USERID AND        *\n*                   DELETE THEM.  THIS PROGRAM WORKS ON SYS1.BRODCAST *\n*                   INTERNALLY, WITHOUT USING LISTBC.                 *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  AUGUST 01, 2005                                   *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         CHANGES:  01/07/05  -  ADDED 2 KEYWORD PARAMETERS TO        *\n*                   (VER 4.0)    CONTROL WHICH MESSAGES ARE DELETED   *\n*                                                                     *\n*                                SKIP(NN) AND MSGS(MM)                *\n*                                                                     *\n*                                ALL OTHER MESSAGES ARE KEPT          *\n*                                AND RECHAINED IF NECESSARY.          *\n*                                                                     *\n*                                SKIP(NN) WILL SKIP NN RECORDS AT     *\n*                                THE BEGINNNG OF THE CHAIN, DELETING  *\n*                                ALL RECORDS FORWARD, UNLESS LIMITED  *\n*                                BY A MSGS(MM) PARAMETER.             *\n*                                                                     *\n*                                MESSAGES(MM) WILL DELETE ONLY MM     *\n*                                MESSAGES, AFTER THE SKIP, IF SKIP    *\n*                                WAS CODED, OR ELSE IT WILL DELETE    *\n*                                MM MESSAGES FROM THE BEGINNING OF    *\n*                                THE CHAIN.                           *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMDEL  '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\nAFLG     DC    X'FF'\nALLCHAR  DC    C'ALL$#@'\n         DC    C'  '\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMDEL,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS2            ZERO, MESSAGE TO ENTER USERID.\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n* ------------------------------------------------------------------ *\nTESTNONN DS    0H                  Test for non-numeric MSGS, SKIP\n         TM    BDMFLAG,X'01'\n         BO    TESTNMSG\n         TM    BDSFLAG,X'01'\n         BO    TESTNMSG\n         B     TESTNEND\nTESTNMSG DS    0H\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         LA    R0,44\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,45\n         MVC   LINE(45),=C'MSGS or SKIP keyword values were non-numericx\n               .'\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,35\n         MVC   LINE(35),=C'No User Messages have been deleted.'\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  Return Code = 8 '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\nTESTNEND DS    0H\n* ------------------------------------------------------------------ *\nALLSET   DS    0H\n** -- >>\n         MVC   NEWIDU(8),NEWID\n         OC    NEWIDU(8),BLANKS\n         CLC   =C'MSGS(',NEWIDU\n         BE    WMESS3\n         CLC   =C'SKIP(',NEWIDU\n         BE    WMESS3\n** -- >>\n         CLC   NEWID(L'ALLCHAR),ALLCHAR    \"USERID\" FOR \"ALL USERIDS\"\n         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID\n         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING\n         CLI   ALLFLAG,X'FF'       IS IT X'FF'?\n         BNE   ONEID               NO. NOT REAL \"ALL\" PROCESSING\n         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.\n         B     DOBROD\nONEID    DS    0H\n         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    NOTITLHE            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nNOTITLHE DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n*\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n* -- >\n         XC    SAVER6B,SAVER6B\n         ST    R6,SAVER6B\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6B\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         CLC   SAVER6B,=F'1'\n         BE    TRYNEXTR\n* -- >\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\nTRYNEXTR DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         MVC   SMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n         MVC   ADJSPTRS(6),USDRBA  SAVE ORIGINAL POINTERS FOR ADJUST\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?\n         BE    TRYMORE             YES. KEEP TRYING MORE ID'S\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVERG5          SAVE WORK REGISTER\n         ST    R7,SAVERG7          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVERG5          RESTORE REGISTER\n         L     R7,SAVERG7          RESTORE REGISTER\n* ----\n         BAL   R9,REWRFRSR         ADJUST FREE SEARCH RECORD\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,REFINDUS         FIND USER SLOT TO ZERO HIM OUT\n         USING USDIR,R3\n*-- NEW CODE --*            <----\n         CLC   COUNTS,=F'0'        ARE WE SKIPPING RECORDS?\n         BNE   NOZERAJ1            YES. ADJUST USERID PTRS, DON'T ZERO\n         CLC   COUNTM,=F'0'        ARE WE LIMITING RECORDS DELETED?\n         BNE   NOZERAJ0            YES. DEPENDS IF ANY MESSAGES LEFT.\n         MVC   USDRBA(6),ZEROS     NO SPECIAL PROCESSING - ZERO OUT\n         B     NOZERAJ2            AND GO REWRITE THE USERID RECORD\nNOZERAJ0 DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND PASSED THE LIMIT?\n         BO    NOZERAJ1            YES. STILL HAVE POINTERS.\n         MVC   USDRBA(6),ZEROS     NO SPECIAL PROCESSING - ZERO OUT\n         B     NOZERAJ2            AND GO REWRITE THE USERID RECORD\nNOZERAJ1 DS    0H\n         MVC   USDRBA(6),ADJSPTRS  ADJUST POINTERS, DON'T ZERO THEM\nNOZERAJ2 DS    0H\n*-- NEW CODE --*            <----\n         DROP  R3\n         TM    MSG0FLAG,X'01'      MSGS(0) CODED?\n         BO    NOZERAJ             DON'T ADJUST USER RECORD\n         BAL   R9,REWRUSER         REWRITE THE RECORD\nNOZERAJ  DS    0H\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         B     ZEROUT                  AND SCRAM\nTRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVERG5          SAVE WORK REGISTER\n         ST    R7,SAVERG7          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVERG5          RESTORE REGISTER\n         L     R7,SAVERG7          RESTORE REGISTER\n* ----\n         BAL   R9,REWRFRSR         ADJUST FREE SEARCH RECORD\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\n         USING USDIR,R3\n*-- NEW CODE --*            <----\n         CLC   COUNTS,=F'0'        ARE WE SKIPPING RECORDS?\n         BNE   NOZERAJ4            YES. ADJUST USERID PTRS, DON'T ZERO\n         CLC   COUNTM,=F'0'        ARE WE LIMITING RECORDS DELETED?\n         BNE   NOZERAJ3            YES. ADJUST USERID PTRS, DON'T ZERO\n         MVC   USDRBA(6),ZEROS     NO SPECIAL PROCESSING - ZERO OUT\n         B     NOZERAJ5            AND GO REWRITE THE USERID RECORD\nNOZERAJ3 DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND PASSED THE LIMIT?\n         BO    NOZERAJ4            YES. STILL HAVE POINTERS.\n         MVC   USDRBA(6),ZEROS     NO SPECIAL PROCESSING - ZERO OUT\n         B     NOZERAJ5            AND GO REWRITE THE USERID RECORD\nNOZERAJ4 DS    0H\n         MVC   USDRBA(6),ADJSPTRS  ADJUST POINTERS, DON'T ZERO THEM\nNOZERAJ5 DS    0H\n*-- NEW CODE --*            <----\n         DROP  R3\n         TM    MSG0FLAG,X'01'      MSGS(0) CODED?\n         BO    NOZERAK             DON'T ADJUST USER RECORD\n         BAL   R9,REWRUSER         REWRITE THE RECORD\nNOZERAK  DS    0H\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\nTRYMOREN DS    0H\n         B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+48(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+48(10),TMSGCNT\n         MVC   LINET(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL+9\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR+7                      DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 MSGS( AND SKIP( ARE\n         LA    R0,L'MESSAGE3+7                  INVALID IN USERID FIELD\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAGE4\n         LA    R0,L'MESSAGE4+7\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE2+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ0     LA    R5,0                SET RC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET RC = 4.\n         B     EOJ                 CONT\nEOJ8     LA    R5,8                SET RC = 8.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        Put RC into passed save area\n         L     R14,12(,R13)        Load R14 back.\n         LM    R0,R12,20(R13)      All the other registers.\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9L\n         ST    R6,SAVER6C\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\nLOOKKEYW DS    0H                  LOOK FOR KEYWORDS MSGS AND SKIP\n         LA    R7,1(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,1(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         MVC   MSGSWKL(5),BLANKS\n         MVC   MSGSWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    MSGSWKL(4),BLANKS   UPPERCASE FIELD\n         CLC   =C'MSGS(',MSGSWKL   MSGS KEYWORD THERE?\n         BE    MSGSCODD            YES. HANDLE IT.\n         MVC   SKIPWKL(5),BLANKS\n         MVC   SKIPWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    SKIPWKL(5),BLANKS   UPPERCASE FIELD\n         CLC   =C'SKIP(',SKIPWKL   SKIP KEYWORD THERE?\n         BE    SKIPCODD            YES. HANDLE IT.\n         B     LOOKKEYW            GO LOOP AND LOOK AT NEXT CHARACTER\nMSGSCODD DS    0H                  MSGS Coded\n         OI    MSGCFLG,X'01'       Show MSGS coded here\n         NI    SKPCFLG,X'FF'-X'01' Show SKIP not coded here\n         NI    MSGFLAG,X'FF'-X'01' Initialize MSGS error flag\n         NI    SKPFLAG,X'FF'-X'01' Initialize SKIP error flag\n         B     MSGSSKIP\nSKIPCODD DS    0H                  SKIP Coded\n         OI    SKPCFLG,X'01'       Show SKIP coded here\n         NI    MSGCFLG,X'FF'-X'01' Show MSGS not coded here\n         B     MSGSSKIP\nMSGSSKIP DS    0H                  Central Processing Station for both\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    MSGSNOPT            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nMSGSNOPT DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n         TM    MSGCFLG,X'01'\n         BO    DOMSGS\n         TM    SKPCFLG,X'01'\n         BO    DOSKIP\n* -- > One of the two flags should be on here - if not, error - below\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         MVC   LINE(43),=C'Error in Processing SKIP and MSGS Keywords.'\n         LA    R0,43\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\n* -- > One of the two flags should be on here - if not, error - above\nDOMSGS   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOMSGSL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOMSGSNO\n         CLI   0(R6),C')'\n         BE    DOMSGSNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOMSGSNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOMSGSNN            NOT NUMERIC\n         B     DOMSGSNU            NUMERIC\nDOMSGSNN DS    0H\n         MVI   0(R6),C'*'\n         NI    SKPFLAG,X'FF'-X'01'\n         OI    MSGFLAG,X'01'\n         OI    BDMFLAG,X'01'\nDOMSGSNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOMSGSNO\n         B     DOMSGSL\nDOMSGSNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    MSGFLAG,X'01'\n         BO    DOMSNNMR\nDOMSNRML DS    0H                     Good Message about MSGS number\n         EX    R6,PACKM\n         STM   R0,R1,SAVER0R1\n         OI    WORKM+7,X'0F'     SIGN NIBBLE\n         MVC   DATAMSGS+24(10),EDPAT\n         ED    DATAMSGS+24,WORKM+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATAMSGS\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGENT\nDOMSNNMR DS    0H                     Bad Message about MSGS number\n         EX    R6,MVSTRNGM\n         STM   R0,R1,SAVER0R1\n         MVC   DATAMSGS+26(10),STRNGM\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATAMSGS+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGERR\nDOMSGENT DS    0H\n         CVB   R0,WORKM\n         ST    R0,COUNTM\nDOMSGERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nDOSKIP   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOSKIPL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOSKIPNO\n         CLI   0(R6),C')'\n         BE    DOSKIPNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOSKIPNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOSKIPNN            NOT NUMERIC\n         B     DOSKIPNU            NUMERIC\nDOSKIPNN DS    0H\n         MVI   0(R6),C'*'\n         NI    MSGFLAG,X'FF'-X'01'\n         OI    SKPFLAG,X'01'\n         OI    BDSFLAG,X'01'\nDOSKIPNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOSKIPNO\n         B     DOSKIPL\nDOSKIPNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    SKPFLAG,X'01'\n         BO    DOSKNNMR\nDOSKNRML DS    0H                    Good Message about SKIP number\n         EX    R6,PACKS\n         STM   R0,R1,SAVER0R1\n         OI    WORKS+7,X'0F'     SIGN NIBBLE\n         MVC   DATASKIP+24(10),EDPAT\n         ED    DATASKIP+24,WORKS+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATASKIP\n         MVC   LINE(L'DATASKIP),DATASKIP\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPENT\nDOSKNNMR DS    0H                    Bad Message about SKIP number\n         EX    R6,MVSTRNGS\n         STM   R0,R1,SAVER0R1\n         MVC   DATASKIP+26(10),STRNGS\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATASKIP),DATASKIP\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATASKIP+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPERR\nDOSKPENT DS    0H\n         CVB   R0,WORKS\n         ST    R0,COUNTS\nDOSKPERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nGETIDEND DS    0H\n         L     R6,SAVER6C\n         L     R9,SAVER9L\n         BR    R9\nPACKM    PACK  WORKM,0(0,7)\nPACKS    PACK  WORKS,0(0,7)\nMVSTRNGM MVC   STRNGM(0),0(R7)\nMVSTRNGS MVC   STRNGS(0),0(R7)\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9M\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H                  WRITE A LINE USING PUTLINE FACILITY\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         ST    R9,SAVER9N\n         LA    R1,LINE\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9N\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECHAIN  DS    0H\n         ST    R9,SAVER9O\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                                  REPOINT CHAIN ADDRESS IN LAST\n*                                  KEPT MESSAGE.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         CLC   COUNTS,=F'0'        IF THERE WAS NO SKIPPING\n         BE    RECHAINE            THEN THERE IS NOTHING TO RECHAIN\n*  -----------------------------------------------------------------\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               LSKPRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         ST    R2,SAVERG2A\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         MVC   USMNEXT(3),FWRTRBA  RECHAIN TO NEXT MESSAGE RBA\n         DROP  R2\n         L     R2,SAVERG2A\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               LSKPRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nRECHAINE DS    0H                  REPOINT CHAIN ADDRESS IN LAST\n         L     R9,SAVER9O\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9P\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9P\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9A\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   SMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   MMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK2TOTAL,MESTLEFT\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   LEVEL(7),BLANKS\n         MVC   STRNGM(10),BLANKS\n         MVC   STRNGS(10),BLANKS\n         MVC   TYP5RBA(3),ZEROS\n         MVC   FSRCRBA(3),ZEROS\n         MVC   NEXTRBA(3),ZEROS\n         MVC   MINRBA(3),=X'0FFFFF'    PUT A LARGE VALUE IN\n         MVI   ALLFLAG,X'00'\n         MVI   TITLFLG,X'00'       Title has not yet been printed.\n         MVI   BDMFLAG,X'00'\n         MVI   BDSFLAG,X'00'\n         MVI   MSGFLAG,X'00'\n         MVI   SKPFLAG,X'00'\n         MVI   MSGCFLG,X'00'\n         MVI   SKPCFLG,X'00'\n         MVC   WORKM,DUBLZERO\n         MVC   WORKS,DUBLZERO\n         MVC   COUNTM,FULLZERO\n         MVC   COUNTS,FULLZERO\n         MVC   DATAMSGS,TESTMSGS\n         MVC   DATASKIP,TESTSKIP\n         MVC   WKLBLNK(2),BLANKS\n         MVC   MSGSWKL(5),BLANKS\n         MVC   SKIPWKL(5),BLANKS\n         MVI   SKLSFLAG,X'00'\n         MVC   TPUTMRBA-8(8),BLANKS\n         MVC   TPUTMRBA,TPUTMRBA-1\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9B\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nDELREC   DS    0H             THIS ROUTINE ASSUMES A READ WAS\n*                             DONE FIRST, AND A CHECK. THE RECORD\n*                             THAT WAS READ, WILL BE DELETED.\n*                             IF LEVEL OF SYS1.BRODCAST IS 2 OR MORE,\n*                             THEN THE RBA OF THE FREE SEARCH RECORD\n*                             WILL ALSO BE UPDATED IF NECESSARY.\n*                             THIS WILL NOT BE DONE HERE.  RATHER,\n*                             THE RBA OF ALL DELETED RECORDS WILL BE\n*                             MINIMIZED, AND THE UPDATING, IF THE\n*                             MINIMUM RBA IS LESS THAN THE FREE SEARCH\n*                             RECORD RBA, WILL BE DONE AT THE VERY END\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         ST    R9,SAVER9C\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         L     R2,MDLDECB+16           POINT TO IOB\n         USING IOBSTDRD,R2\n         MVC   SAVEINF1(8),IOBSEEK     SAVE CCHHR OF RECORD\n         DROP  R2\n         L     R2,MDLDECB+20           POINT TO THE KEY\n         MVI   0(R2),X'FF'             FIRST PART OF MARKING DELETED\n         L     R2,MDLDECB+12           POINT TO RECORD ITSELF\n         USING USMSG,R2\n         MVC   USMLNG(1),SAVEINF1+7    MOVE IN HEX RECORD NUMBER\n         MVC   USMTEXT(128),ZERREC     ZERO OUT THE MESSAGE AREA\n         CLC   MINRBA(3),MESSRBA       SEE IF CURRENT RBA IS LOWEST\n         BNH   CHGFRBA                 IT ISN'T, SO BRANCH AROUND.\n         MVC   MINRBA(3),MESSRBA       LOWER SAVED RBA IF NECESSARY\nCHGFRBA  DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\nDELRECEN DS    0H\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9D\n         ST    R6,SAVER6D\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n*        LA    R6,0\n         L     R6,SAVER6D\n         L     R9,SAVER9D\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9E\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         L     R9,SAVER9E\n         BR    R9\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9F\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n* -- >\n         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY\n         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6A\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         S     R6,SAVER6A              RECALCULATE BCT REGISTER\n* -- >\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRUSER DS    0H            REWRITE RECORD WITH USER SLOT IN IT.\n         ST    R9,SAVER9G\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.\n         ST    R9,SAVER9H\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST\n         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2\nTYP5READ DS    0H\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       POINT TO RECORD\n         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA\n         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE\n         CLC   0(3,R5),MINRBA      SHOULD FREE SEARCH RECORD BE LOWERED\n         BNH   NOFRSR                NO. JUST GET OUT.\n         MVC   0(3,R5),MINRBA      YES. LOWER IT\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nNOFRSR   DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nREWRFEND DS    0H\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID               *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.             *\n*                                                                   *\n*        THIS ROUTINE IS NOW THE MAIN CODE FOR THE PARTIAL          *\n*        DISPLAY AND DELETION OF MESSAGES FOR A USERID,             *\n*        USING THE SKIP(NN) AND MSGS(MM) KEYWORDS.                  *\n*                                                                   *\n*        R5 AND R7 MUST BE SAVED BEFORE ENTERING THIS ROUTINE, AND  *\n*        THEY MUST BE RESTORED RIGHT AFTER LEAVING THIS ROUTINE.    *\n*        R5 IS THE LOOP REGISTER FOR THE SKIP(NN) PARAMETER.        *\n*        R7 IS THE LOOP REGISTER FOR THE MSGS(MM) PARAMETER.        *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9I\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*               INITIALIZE SKIP(NN), MSGS(MM) FOR A USERID\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         TM    MSG0FLAG,X'01'      WAS MSGS(0) CODED?\n         BO    WRITLEM0            YES.  NOP THIS WHOLE THING.\n         OI    SKLSFLAG,X'10'      PRE-LOAD ZERO RECHAIN AFTER SKIPS\n         MVC   LMSGRBA(3),MESSRBA     PRE-LOAD LAST MESSAGE RBA\n         NI    SKLSFLAG,X'FF'-X'07'   TURN OFF ALL FLAGS\n         XR    R5,R5               CLEAR R5 FOR REUSE IN THIS ROUTINE\n         XR    R7,R7               CLEAR R7 FOR REUSE IN THIS ROUTINE\n         CLC   COUNTS,=F'0'        HAVE WE CODED A SKIP COUNT?\n         BE    WRLOOPTM            NO. TRY LIMIT OF MSGS.\n         OI    SKLSFLAG,X'01'      SHOW WE'RE SKIPPING\n         L     R5,COUNTS           LOAD THE BCT REGISTER FOR SKIP\nWRLOOPTM DS    0H\n         CLC   COUNTM,=F'0'        HAVE WE CODED A MSGS LIMIT?\n         BE    WRLOOP              NO. JUST PROCESS ALL OF EM.\n         OI    SKLSFLAG,X'02'      SHOW WE'RE LIMITING MESSAGES\n         L     R7,COUNTM           LOAD BCT REGISTER FOR MSGS LIMIT\n*------------------------------>>\n         LA    R7,1(,R7)           BOOST R7 BY ONE.\n*\n*                                 THIS IS NECESSARY BECAUSE THE BCT\n*                                 INSTRUCTION R7,WRLOOP IS DIFFERENT\n*                                 IN LOGIC, THAN THE BCT FOR R5,WRLOOP.\n*                                 PLEASE SEE THE CODE JUST AFTER\n*                                 LABEL WRLSKIP2, WHICH COMPENSATES\n*                                 FOR THE EFFECT OF THIS INSTRUCTION.\n*------------------------------>>\n         B     WRLOOP              MAIN PROCESSING SKIPS THE RECHAIN\n* ----\n*               ENTRY, TO CONTROL THE USE OF THE RECHAIN ROUTINE.\n*\n*               THE RECHAIN OPERATION REQUIRES A READ AND A WRITE\n*               OF A (DIFFERENT) RECORD, AND CANNOT BE DONE WHILE\n*               THE CURRENTLY READ RECORD IS OPEN.  THEREFORE,\n*               THE RECHAIN OPERATION HAS TO OCCUR OUTSIDE OF\n*               THE WRLOOP ROUTINE.\n* ----\nRECHANIT DS    0H               RECHAIN HAS TO BE OUTSIDE A READ LOOP\n         TM    SKLSFLAG,X'08'         TEST IF ONLY ONCE\n         BZ    RECHANEN               FLAG NOT SET, BYPASS RECHAIN\n         BAL   R9,RECHAIN             RECHAIN LAST SKIPPED RECORD\n         NI    SKLSFLAG,X'FF'-X'08'   ONLY DO THIS ONCE\nRECHANEN DS    0H\n* ----\n*               THIS IS THE MAIN LOOP FOR ONE USERID'S MESSAGES.\n* ----\nWRLOOP   DS    0H\n         TM    SKLSFLAG,X'10'      ONLY DO THIS ONCE\n         BZ    WRLOOPS1\n         CLC   COUNTS,=F'0'        IS SKIPPING ON?\n         BE    WRLOOPS1            NO. THEN NO RECHAINING IS NECESSARY\n         C     R5,=F'0'            YES. THEN IS BCT REGISTER ZERO YET?\n         BNE   WRLOOPS1            NO. NO RECHAINING NECESSARY.\n*                    WE HAVE JUST READ THE LAST SKIPPED RECORD.\n         OI    SKLSFLAG,X'08'      TURN ON THE RECHAINING FLAG\n         MVC   FWRTRBA(3),ZEROS    RECHAIN LAST SKIPPED TO ZERO\n         NI    SKLSFLAG,X'FF'-X'10'   TURN OFF FLAG FOR THIS ROUTINE\n         B     RECHANIT            RECHAIN ZEROS TO LAST SKIPPED RECD\n* ----\n*          AFTER ALL THE FUDGING, WE FINALLY DO THE READ HERE.\n*\n*          ALL THE PREVIOUS STUFF IS TO SUPPORT THE SKIP(NN)\n*          AND MSGS(MM) KEYWORDS.\n* ----\nWRLOOPS1 DS    0H\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         MVC   STORKEY(1),0(R2)    SAVE KEY OF RECORD READ\n         MVC   CURMRBA(3),MESSRBA  SAVE RBA OF CURRENT MESSAGE\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0\n         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE\n         EX    R6,MOVEMSG\nWRLSKIP1 DS    0H\n         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?\n         BO    WRLSKIPA            YES. PASS THE PRINTDEL BUT SAVE ADDR\n         TM    SKLSFLAG,X'04'      LIMITING-AND HAVE PASSED THE LIMIT?\n         BO    WRLSKIPB            YES. PASS THE PRINTING STUFF,\n*                                  BUT ADJUST THE END POINTER TO\n*                                  CURRENT RBA.\nWRLLIMS1 DS    0H\n         TM    SKLSFLAG,X'02'      ARE WE LIMITING MESSAGES?\n         BZ    WRLLIMS2            NO. THEN PRINT THEM.\n         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?\n         BO    WRLLIMS3            YES, DON'T PRINT THIS MESSAGE\nWRLLIMS2 DS    0H\n* --\n         CLC   COUNTM,=F'0'        IF WE ARE LIMITING MSGS\n         BE    WRLNODX0\n         C     R7,=F'1'            AND IF WE'RE ALMOST AT THE END\n         BNE   WRLNODX0\n         B     WRLNODS0            THEN DON'T DISPLAY THIS ONE.\nWRLNODX0 DS    0H\n* --\n         A     R0,=F'7'\n         HEX   LINE,3,MESSRBA\n         BAL   R9,MSG              WRITE MESSAGE OUT\nWRLNODS0 DS    0H\n         B     WRLLIMS3\nWRLSKIPA DS    0H                  COME HERE WHILE SKIPPING\n         MVC   LSKPRBA,CURMRBA        IF SKIPPING SAVE CURR RBA AS LAST\n         MVC   ADJSPTRS+3(3),LSKPRBA  AND ADJUST LAST USERID POINTER\n         B     WRLSKIP2\nWRLLIMS3 DS    0H\nWRLSKIPB DS    0H                  COME HERE AFTER LIMITING\n         CLC   COUNTS,=F'0'        SKIPPING?\n         BNE   WRLSKIPC            YES, DON'T ADJUST STARTING POINTER\n*        MVC   ADJSPTRS(3),LSKPRBA NO, ADJUST STARTING POINTER\n         B     WRLSKIP2\nWRLSKIPC DS    0H\n         TM    SKLSFLAG,X'01'      SKIPPING ON, BUT NOW FINISHED?\n         BO    WRLSKIP2            STILL ON, DON'T ADJUST POINTER YET\n         CLC   COUNTS,=F'0'\n         BNE   WRLSKIP2\n         MVC   ADJSPTRS(3),FMSGRBA   HAVE TO ADJUST STARTING POINTER\n*                         ------>                              <------\nWRLSKIP2 DS    0H         ------>   EVERYTHING GOES THRU HERE  <------\n*                         ------>                              <------\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n*---->\n         ST    R7,STR7             CHECK R7 IF =1 EXACTLY\n         CLC   STR7,=F'1'\n         BNE   WRLSKP2X            NO. GO ON.\n         BCTR  R7,0                DON'T COME HERE AGAIN\n         MVC   NEXTRBA(3),USMNEXT  GET ADDRESS OF NEXT RECORD\n         CLC   NEXTRBA(3),ZEROS    IS THIS THE LAST MESSAGE ?\n         BNE   WRLSKP4A            NO. GO ON.\n*---->\nWRLSK2Q1 DS    0H\n         TM    SKLSFLAG,X'04'      IS X'04' FLAG ALREADY ON?\n         BO    WRITLENX            NOT SPECIAL CASE. GO FINISH UP.\n         OI    SKLSFLAG,X'04'      IS THIS CASE--DELS ARE FINISHED\n         OI    SKLSFLAG,X'40'      MARK THE SPECIAL CASE\n         B     WRITLENX            AND NOW FINISH UP\n*---->\nWRLSKP2X DS    0H\n         CLC   USMNEXT(3),ZEROS    IS THIS THE LAST MESSAGE ?\n         BE    WRITLENX            YES, GO NOW AND FINISH UP\n*---->\n         MVC   NEXTRBA(3),USMNEXT    NO. GET ADDRESS OF NEXT RECORD\n         DROP  R2\n         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?\n         BO    WRLNODEL            DON'T DELETE CURRENT MESSAGE\n         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?\n         BO    WRLNODEL            DON'T DELETE CURRENT MESSAGE\n* --\n         CLC   COUNTM,=F'0'        IF WE ARE LIMITING MSGS\n         BE    WRLNODX1\n         C     R7,=F'1'            AND IF WE'RE ALMOST AT THE END\n         BNE   WRLNODX1\n         B     WRLNODEL            THEN DON'T DELETE THIS ONE.\nWRLNODX1 DS    0H\n* --\n         ST    R2,SAVERG2\n         BAL   R9,DELREC           GO DELETE THE RECORD\n         L     R2,SAVERG2\nWRLNODEL DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRLSKIP3 DS    0H\n         TM    SKLSFLAG,X'01'      SKIPPING, AND NOT FINISHED?\n         BZ    WRLSKIP4            FINISHED SKIPPING. NO BCT.\n         MVC   MESSRBA(3),NEXTRBA    PREPARE TO READ NEXT MESSAGE\n         AP    SMSGCNT,=P'1'          MESSAGES BEING KEPT\n         BCT   R5,WRLOOP             SKIPPING LOOP\n         NI    SKLSFLAG,X'FF'-X'01'  FINISHED SKIPPING-TURN OFF FLAG\n         OI    SKLSFLAG,X'08'\n         MVC   FWRTRBA,CURMRBA      IF SKIPPING SAVE CURR RBA AS LAST\n*                                   FOR THE RECHAINING PROCESS\n         MVC   MESSRBA(3),NEXTRBA   PREPARE TO READ NEXT RECORD\n         B     RECHANIT\nWRLSKIP4 DS    0H\n         CLC   COUNTM,=F'0'        LIMITING, IN EITHER CASE?\n         BE    WRLLIMS4            NO-BYPASS ALL THIS JUNK\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED WRITING?\n         BO    WRLLIMSA            YEAH. BYPASS BCT.\n         MVC   MESSRBA(3),NEXTRBA    PREPARE TO READ NEXT MESSAGE\n         BCT   R7,WRLOOP\n*\n* -- FALL THRU IF RESUMING NO-DELETION FOR THE FIRST TIME\n*\nWRLSKP4A DS    0H\n         TM    SKLSFLAG,X'04'      HAVE WE BEEN HERE BEFORE?\n         BO    WRLLIMSA            YES. DON'T RECHAIN LAST SKIPPED.\n         OI    SKLSFLAG,X'04'      SHOW FINISHED WRITING & DELETING\n         AP    SMSGCNT,=P'1'       COUNT MESSAGES BEING KEPT\n         MVC   FMSGRBA(3),CURMRBA  SAVE FIRST MESSAGE RBA AFTER LIMIT\n         CLC   COUNTS,=F'0'        WAS THERE ANY SKIPPING AT ALL?\n         BNE   WRLLIM3A            YES-DO NOT ADJUST INITIAL POINTER\n         MVC   ADJSPTRS(3),CURMRBA NO- ADJUST INITIAL POINTER\n         B     WRLLIMS4             AND WE SKIP THE RECHAIN BRANCH\nWRLLIM3A DS    0H\n         OI    SKLSFLAG,X'08'      SHOW READY TO RECHAIN LAST SKIPPED\n*                                  THIS FLAG IS TURNED OFF BY RECHAIN\n         MVC   FWRTRBA,FMSGRBA      IF SKIPPING SAVE CURR RBA AS LAST\n*                                   FOR THE RECHAINING PROCESS\n         MVC   MESSRBA(3),NEXTRBA   PREPARE TO READ NEXT RECORD\n         B     RECHANIT\nWRLLIMSA DS    0H\n         AP    SMSGCNT,=P'1'          MESSAGES BEING KEPT\n         B     WRLLIM3A\nWRLLIMS4 DS    0H\n         MVC   MESSRBA(3),NEXTRBA   PREPARE TO READ NEXT RECORD\n         B     WRLOOP\n* ----\n*               AT THE END OF A CHAIN OF USERID MESSAGES,\n*               WHEN THE LAST MESSAGE IS INDICATED BY THE\n*               NEXTUSER FIELD BEING ZEROS, WE COME HERE.\n* ----\nWRITLENX DS    0H\n         ST    R5,STR5\n         ST    R7,STR7\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED DELETING?\n         BO    WRITLENY            THEN DON'T DELETE LAST RECORD\n         CLC   COUNTS,=F'0'        ARE WE SKIPPING MESSAGES?\n         BNE   WRITLENW            THEN DON'T DELETE LAST RECORD\n         B     WRITLEDE\nWRITLENW DS    0H\n         TM    SKLSFLAG,X'03'\n         BNO   WRITLENS\n         AP    SMSGCNT,=P'1'          COUNT MESSAGES BEING KEPT\nWRITLENS DS    0H\n         TM    SKLSFLAG,X'01'\n         BO    WRITLENY\n*----->\n         ST    R7,STR7             CHECK R7 IF =1\n         CLC   STR7,=F'1'\n         BE    WRITLENN\n*----->\nWRITLEDE DS    0H\n         ST    R2,SAVERG2\n         BAL   R9,DELREC           DELETE THE LAST RECORD\n         L     R2,SAVERG2\nWRITLENY DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED DELETING?\n         BZ    WRITLENZ\nWRITLENN DS    0H\n         AP    SMSGCNT,=P'1'          COUNT MESSAGES BEING KEPT\n         MVC   ADJSPTRS+3(3),CURMRBA  READJUST FINAL POINTERS\n*----->\n         TM    SKLSFLAG,X'60'      SPECIAL CASES FROM LABEL WRLSKIP2 ?\n         BZ    WRITLENZ\n         TM    SKLSFLAG,X'40'\n         BZ    WRITLENO\n         MVC   FWRTRBA(3),CURMRBA     ADDRESS FOR RECHAIN\n         BAL   R9,RECHAIN\n*        B     WRITLENZ            END IT\nWRITLENO DS    0H\n         CLC   COUNTS,=F'0'           ANY SKIPPING?\n         BNE   WRITLENZ               YES. DON'T ADJUST INITIAL POINTER\n         MVC   ADJSPTRS(3),CURMRBA    ADJUST INITIAL POINTER\n*----->\nWRITLENZ DS    0H\n         CLC   COUNTM,=F'0'\n         BNE   WRITLEND\n         TM    SKLSFLAG,X'01'\n         BZ    WRITLEND\n         AP    SMSGCNT,=P'1'          COUNT MESSAGES BEING KEPT\n         B     WRITLEND               BRANCH AROUND MSGS(0) MESSAGE\nWRITLEM0 DS    0H\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINET,MES0MSG             MESSAGE THAT MSGS(0) CODED\n         LA    R0,L'MES0MSG+7\n         BAL   R9,MSG\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9I\n         BR    R9\n* ----\n*               THIS IS THE END OF MAIN PROCESSING FOR ONE\n*               USERID'S MESSAGES.\n* ----\n         EJECT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9J\n         TM    MSG0FLAG,X'01'\n         BO    WRITENX1\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINET(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL+7\n         BAL   R9,MSG\nWRITENX1 DS    0H\n         CLC   COUNTS,=F'0'                  ANY SKIPPING?\n         BNE   WRITENDA                      YES-DO SECOND LINE\n         CLC   COUNTM,=F'0'                  ANY LIMITING?\n         BE    WRITENDB                      NO-NO SECOND LINE\n         TM    SKLSFLAG,X'04'                MSGS LEFT OVER?\n         BZ    WRITENDB                      NO-ONLY FIRST LINE\nWRITENDA DS    0H\n         TM    MSG0FLAG,X'01'\n         BO    WRITENDB\n         MVC   LINE,LINE-1\n         MVC   WK2TOTAL,MESTLEFT               WRITE\n         MVC   WK2TOTAL+5(7),TRYID               TOTALS\n         MVC   WK2TOTAL+18(6),MASK6                LINE\n         ED    WK2TOTAL+18(6),SMSGCNT\n         MVC   LINET(L'WK2TOTAL),WK2TOTAL\n         LA    R0,L'WK2TOTAL+7\n         BAL   R9,MSG\nWRITENDB DS    0H\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINET,MESSEND                     END OF USER LINE\n         LA    R0,L'MESSEND+7\n         BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n         BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(62),LINE-1                 OF ASTERISKS.\n         BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9K\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9K\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H                  Print the title lines\n         ST    R9,SAVER9Q\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME\n         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE\n         LA    R0,74                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER\n         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE\n         LA    R0,36                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R0,L'MESNOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R0,L'MESYOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9Q\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30' BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*--------------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    CL10'          '    10 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'Please enter the USERID name after command name'\nMESSAGE3 DC    C' A Userid cannot begin with MSGS( or SKIP( .   '\nMESSAGE4 DC    C' Please use MSGS( or SKIP( after the Userid.   '\nMESSEND  DC    C'* - - - - End of Messages for this User - - - - *'\nMES0MSG  DC    C'MSGS(0) WAS CODED. No Deletion was done at all. '\nMESTOTAL DC    C'User         had           Deferred TSO Messages'\nMESTLEFT DC    C'User         has           Deferred TSO Messages left'\nMESALL   DC    CL60'Total Deferred TSO Messages in BRODCAST dataset.'\nMESNOUSR DC    C'* - - No USERID Record for User          - - *'\nMESPREND DC    C'?????  Preliminary end of USERID records - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nTESTMSGS DC    C'Limit  of MSGS to Delete              '\nTESTSKIP DC    C'Number of MSGS to Skip                '\nEDPAT    DC    X'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nWORKM    DS    D\nWORKS    DS    D\nSAVER0R1 DS    D\nSAVERG2  DS    F\nSAVERG2A DS    F\nSAVERG5  DS    F\nSAVER5A  DS    F\nSAVERG7  DS    F\nCOUNTM   DS    F\nCOUNTS   DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\n         DS    CL80\nSKLSFLAG DC    X'00'\n*              X'01' MEANS WE ARE SKIPPING RECORDS\n*              X'02' MEANS WE ARE LIMITING RECORDS DISPLAYED\n*              X'04' MEANS WE HAVE PASSED THE DISPLAY LIMIT\n*              X'08' MEANS WE ARE READY TO RECHAIN\nMSG0FLAG DC    X'00'\n*              X'01' MEANS WE CODED MSGS(0) EXPLICITLY\n         DS    CL80\nWKLBLNK  DS    CL2\nMSGSWKL  DS    CL5                 THIS ONE FIRST FOR INIT TO BLANK\nSKIPWKL  DS    CL5\n         DC    CL8' '\nTPUTMRBA DC    CL80' '\nDATAMSGS DS    CL38                TEST MSGS AREA\n         DC    CL45' '     PADDING\nDATASKIP DS    CL38                TEST SKIP AREA\n         DC    CL50' '     PADDING\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL8' '              PADDING\nNEWIDU   DC    C'        '         UPPERCASED USERID PARM\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nSMSGCNT  DC    PL3'0'              COUNT OF SKIPPED MESSAGES\nMMSGCNT  DC    PL5'0'              COUNT OF LISTED MESSAGES\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nADJSPTRS DC    X'000000000000'     ADJUSTMENT POINTERS FOR PART DELETE\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nCURMRBA  DC    X'000000'           SAVED RBA OF CURRENT MESSAGE\nFMSGRBA  DC    X'000000'           SAVED RBA OF 1ST MSG AFTER LIMIT\nLMSGRBA  DC    X'000000'           SAVED RBA OF MESSAGE BEFORE\nLSKPRBA  DC    X'000000'           RBA OF LAST SKIPPED RECORD\nFWRTRBA  DC    X'000000'           RBA OF FIRST NON-DELETED RECORD\nNEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMINRBA   DC    X'000000'\nFSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER6   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER9   DS    F                   SAVE BAL REGISTER\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTR5     DS    F\nSTR7     DS    F\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK2TOTAL DC    C'                                                     '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\n         DC    C' '\nALLFLAG  DS    X\nTITLFLG  DS    X\nMSGFLAG  DS    X\nSKPFLAG  DS    X\nBDMFLAG  DS    X\nBDSFLAG  DS    X\nMSGCFLG  DS    X\nSKPCFLG  DS    X\nSTRNGM   DS    CL10\nSTRNGS   DS    CL10\nSTORKEY  DS    X\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJEESCB DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMDIAG": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00Q\\x01\\x01\\x03O\\x01\\x16&\\x9f\\x156\\x05\\xbf\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2001-02-03T00:00:00", "modifydate": "2016-09-25T15:36:51", "lines": 1471, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMDIAG TITLE 'BDMDIAG - DIAGNOSE PROBLEMS IN SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*         SYNTAX:   BDMDIAG REPORT    (TO REPORT ALL ORPHANED MSGS)   *\n*                                                                     *\n*                   BDMDIAG DELBAD    (TO DELETE ALL ORPHANED MSGS)   *\n*                                                                     *\n*                                                                     *\n*       FUNCTION:   TO REPORT AND OPTIONALLY DELETE THOSE MESSAGE     *\n*                   RECORDS ON SYS1.BRODCAST WHICH ARE NO LONGER      *\n*                   CHAINED OFF USERID RECORDS.  CREATION OF THESE    *\n*                   RECORDS NORMALLY DOES NOT HAPPEN, BUT THEY ARE    *\n*                   THE RESULT OF SOME SORT OF DATASET CORRUPTION.    *\n*                   IF THEY DO OCCUR, ONLY SYNC CAN GET RID OF THEM,  *\n*                   TO MY KNOWLEDGE.  AND SINCE THE PURPOSE OF THIS   *\n*                   PACKAGE OF UTILITIES IS TO AVOID DOING A SYNC,    *\n*                   THAT'S WHY THIS PROGRAM WAS WRITTEN.              *\n*                                                                     *\n*                   THE REPORT OPTION WILL LIST THE ORPHANED          *\n*                   RECORDS ALONG WITH THEIR RELATIVE RECORD          *\n*                   ADDRESSES.  THE DELBAD OPTION WILL DELETE EACH    *\n*                   RECORD AFTER LISTING IT.                          *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0          *\n*                                                                     *\n*            DATE:  March 21, 2007                                    *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*    CHANGES:                                                         *\n*     VERSION 1.2  - ACTUALLY IMPLEMENTED THE DELETION OF BAD         *\n*     (07/09/01)     RECORDS IF DELBAD WAS CODED.  (THIS CODE WAS     *\n*                    DUMMIED OUT IN VERSION 1.1.                      *\n*                                                                     *\n*     Version 1.4.0 -  For the commercial version - first cut.        *\n*                      Changed messages to tell you which kind of     *\n*                      execution you are doing, and which are the     *\n*                      correct execution parms.  Got rid of the       *\n*                      instream IBM macros, using only those in       *\n*                      SYS1.MACLIB.                                   *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGISTER EQUATES\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming L-\n               LC'\n&COPYRSV SETC  ' - All Rights Reserved  '\n&PGMNAME SETC  'BDMDIAG '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMDIAG,R12,R11,R10,R7\n         LR    R12,R15             WHO'S ON FIRST BASE ?\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)         WHAT'S ON SECOND ?\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)         THIRD ?\n         LA    R7,4095(,R10)\n         LA    R7,1(,R7)           FOURTH ?\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R4,SAVECPPL         SAVE CPPL FOR RELOADING IF NEEDED\n         LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n         BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BC    8,HELPMSG\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n         MVI   ALLFLAG,X'FF'       RUN CHAIN FOR ALL IDS W/MESSAGES\nMSGX0    DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG20\n         LA    R0,L'MESSAG20+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG21\n         LA    R0,L'MESSAG21+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG22\n         LA    R0,L'MESSAG22+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG23\n         LA    R0,L'MESSAG23+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG24\n         LA    R0,L'MESSAG24+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG25\n         LA    R0,L'MESSAG25+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\nFIXSET   DS    0H\n         CLC   NEWID(6),=C'DELBAD'      KEYWORD FOR FIXING\n         BNE   TRYREAD\n         MVI   FIXFLAG,X'FF'            SET FIX FLAG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG27\n         LA    R0,L'MESSAG27+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         B     FIXPOINT\nTRYREAD  DS    0H\n         CLC   NEWID(6),=C'REPORT'      KEYWORD FOR REPORTING\n         BNE   INVPARM\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG26\n         LA    R0,L'MESSAG26+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         B     FIXPOINT\nINVPARM  DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG28\n         LA    R0,L'MESSAG28+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         B     EOJ4\nFIXPOINT DS    0H\n         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'        TEST FOR GOOD OPEN\n         BNO   WMESS1                   NO GOOD. DISPLAY MESSAGE.\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n*\nMSGX1    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE+46,4,NUMRECS         TAKE OUT LATER\n         MVC   LINE+10(31),=C'HEX NUMBER OF RECORDS IN TABLE ' TAKE OUT\n         BAL   R9,MSG                 TAKE OUT\n*\n         BAL   R9,MAKETABL         GETMAIN THE KEY TABLE.\n*\n         BAL   R9,FILLTABL         FILL THE TABLE WITH ALL THE\n*                                     RECORD KEYS.\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n*   PLEASE MAKE SURE THAT THIS REGISTER R10 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    USERIDS AREN'T MISSED UPON RETRY.\n*        LA    R10,9               COUNT OF USERS PER RECORD\n*        LA    R1,9                SEE BELOW\n*        ST    R1,SAVER1\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\n         LA    R1,9\n         ST    R1,SAVER1\nUSRLOOP  DS    0H\n         ST    R1,SAVER1\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\n         CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         L     R1,SAVER1\n         BCT   R1,USRLOOP\n*        BCT   R10,USRLOOP         TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n         CLC   SAVEPTRS(6),ZEROS   DOES THIS ID HAVE ANY MESSAGES?\n         BE    SKIPSHOW            NO. DON'T DISPLAY THE ZEROS.\nMSGX1A   LA    R0,65                  DISPLAY USERID AND POINTERS\n         MVC   LINE,LINE-1            CLEAR PRINT AREA\n         MVC   LINE+1(7),TRYID        MOVE IN USERID\n         HEX   LINE+10,3,USDRBA       MOVE IN START RBA\n         HEX   LINE+18,3,USDEND       MOVE IN END RBA\n         MVC   LINE+26(21),=C'      USERID POINTERS'\n*        BAL   R9,MSG                 WRITE THE MESSAGE\nSKIPSHOW DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n*        MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n*        ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,TRUSLOOP         LOOP THRU CHAIN FOR THIS USERID\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\n*        MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n*        DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         DROP  R3\nTRYMOREN B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                 >>>     GET HERE AT END OF USER RCDS\nENDUSER  DS    0H                 >>>     NO MORE USERIDS TO SEARCH\n         BAL   R9,GETFRESR         GET RBA POINTED TO BY FREE SRCH RCD\n         BAL   R9,FINDBAD          FIND AND DISPLAY UNCHAINED MESSAGES\n*\n* ---->\n         CLI   FIXFLAG,X'FF'\n         BNE   FINDNREW\n         ST    R9,SAVR9\n         BAL   R9,REWRFRSR         ADJUST FREE SEARCH RECORD\n         L     R9,SAVR9\nFINDNREW DS    0H\n* ---->\n*\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         CLI   FIXFLAG,X'FF'\n         BNE   NOFIXMSG\n         MVC   WKAALL,FMSALL                      WITH THE TOTAL COUNT\n         MVC   WKAALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WKAALL+46(10),FMSGCNT           MOVE IN COUNT\n         MVC   LINET(L'WKAALL),WKAALL          MOVE TO PRINT LINE\n         LA    R0,L'WKAALL+7                   LENGTH OF OVERALL MESSG\n         BAL   R9,MSG                          WRITE IT\n         B     FIXMESSG\nNOFIXMSG DS    0H\n         MVC   WK2ALL,VALALL                      WITH THE TOTAL COUNT\n         MVC   WK2ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK2ALL+46(10),VMSGCNT           MOVE IN COUNT\n         MVC   LINET(L'WK2ALL),WK2ALL          MOVE TO PRINT LINE\n         LA    R0,L'WK2ALL+7                   LENGTH OF OVERALL MESSG\n         BAL   R9,MSG                          WRITE IT\nFIXMESSG DS    0H\n         MVC   WK1ALL,MESALL                      TOTAL COUNT MESSAGE\n         MVC   WK1ALL+46(10),MASK10               MOVE IN EDIT PATTERN\n         ED    WK1ALL+46(10),TMSGCNT              DISPLAY TOTAL COUNT\n         MVC   LINET(L'WK1ALL),WK1ALL             MOVE TO DISPLAY LINE\n         LA    R0,L'WK1ALL+7                      SET LENGTH AND\n         BAL   R9,MSG                             WRITE MESSAGE.\nZEROUT   B     EOJ0           THEN WE'RE DONE.\n         SPACE 3\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\nEOJ4     LA    R15,4               SET CC = 4.\n         ST    R15,SAVER15         PRESERVE IT.\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,=C'  Return Code is 4. '\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         B     EOJXXX\n         L     R6,TABLADDR                  SET UP TO\n         L     R5,TABLSIZE                  FREEMAIN THE KEY TABLE\n         FREEMAIN RU,LV=(R5),A=(R6),SP=SP000\nEOJXXX   LR    R1,R13              SET UP FOR SAVEAREA FREEMAIN\n         L     R13,4(,R13)         POINT R13 TO CALLER'S SAVEAREA\n         L     R0,DATALEN\n         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000\n         L     R15,SAVER15         NON-SPOILED R15.\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)        LOAD THE SAVED REGISTERS BACK\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     SR    R15,R15             SET CC = 0.\n         ST    R15,SAVER15         PRESERVE IT.\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,=C'  Return Code is 0. '\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         B     EOJ                 CONT.\nEOJ8     LA    R15,8               SET CC = 8.\n         ST    R15,SAVER15         PRESERVE IT.\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,=C'  Return Code is 8. '\n         LA    R0,27\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,27\n         BAL   R9,MSG\n         B     EOJ                 CONT\n         EJECT\n*-----------------------------------------------------------------*\nHELPMSG  DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG20\n         LA    R0,L'MESSAG20+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG21\n         LA    R0,L'MESSAG21+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG22\n         LA    R0,L'MESSAG22+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG23\n         LA    R0,L'MESSAG23+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG24\n         LA    R0,L'MESSAG24+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG25\n         LA    R0,L'MESSAG25+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,34\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,=C'You have to code a PARM... '\n         LA    R0,34\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,34\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         B     EOJ8\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9A\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R4,R1               INITIALIZE POINTER\n         LA    R4,0(,R4)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R4),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R4,1(,R4)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        MAKE TABLE FOR KEYS FOR ALL RECORDS IN SYS1.BRODCAST.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMAKETABL DS    0H\n         ST    R9,SAVER9B\n         L     R6,NUMRECS\n         LTR   R6,R6\n         BZ    ERROR2\n         LA    R6,10(,R6)\n         ST    R6,TABLSIZE\nMSGX2    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE+46,4,TABLSIZE        TAKE OUT LATER\n         MVC   LINE+10(31),=C'HEX NUMBER OF TABLE SIZE       ' TAKE OUT\n         BAL   R9,MSG                 TAKE OUT\n         GETMAIN RU,LV=(R6),SP=SP000,LOC=BELOW\n         LTR   R1,R1\n         BZ    ERROR2\n         ST    R1,TABLADDR\nMSGX3    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE+46,4,TABLADDR     TAKE OUT LATER\n         MVC   LINE+10(31),=C'TABLE ADDRESS IN HEX           ' TAKE OUT\n         BAL   R9,MSG                 TAKE OUT\n         B     MAKETEND\nERROR2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 TABLE IS NOT GETMAINED\n         LA    R0,L'MESSAGE3+7                  PROPERLY.\n         BAL   R9,MSG\n         B     EOJ8                         AND SCRAMMEZ VOUS\nMAKETEND DS    0H\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FILL TABLE WITH KEYS FOR ALL RECORDS IN SYS1.BRODCAST.   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFILLTABL DS    0H\n         ST    R9,SAVER9C\nSTARTRD  MVC   BLOCKNO(3),ZEROS\n         L     R4,TABLADDR\nREADLOOP CLC   BLOCKNO(3),NUMRECS+1  DID WE REACH MAX ?\n         BE    READEND\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       GET KEY\n         MVC   0(1,R4),0(R2)       DUMP INTO TABLE\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         LA    R4,1(,R4)           INCREMENT ADDRESS IN TABLE\n         ICM   R3,7,BLOCKNO        INCREMENT\n         STCM  R3,7,BLOCLAST\n         LA    R3,1(,R3)             BLOCK NUMBER\n         STCM  R3,7,BLOCKNO            FOR NEXT READ\n         B     READLOOP\nREADEND  DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nMSGX4    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE+48,3,BLOCLAST     TAKE OUT LATER\n         MVC   LINE+10(31),=C'LAST RELATIVE BLOCK NUMBER READ'\n         BAL   R9,MSG                 TAKE OUT\nWMESS2   DS    0H\n         MVC   LINE,LINE-1\n         LA    R0,130\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 THE TABLE HAS\n         LA    R0,L'MESSAGE2+7                  BEEN FILLED W/KEYS.\n         BAL   R9,MSG\n         CLI   FIXFLAG,X'FF'                IS BRODCAST BEING FIXED?\n         BNE   DONSAYFX\n         MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAG2A                 ORPHANED MSGS ARE\n         LA    R0,L'MESSAG2A+7                  BEING DELETED....\n         BAL   R9,MSG\nDONSAYFX DS    0H\n         MVC   LINE,LINE-1\n         LA    R0,130\n         BAL   R9,MSG\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9D\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   NUMRECS(4),R1RECNUM  TOTAL NUM OF RECORDS IN DATASET.\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        SAVE FREE SEARCH RBA FROM FREE SEARCH RECORD             *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETFRESR DS    0H                  GET RBA POINTED TO BY FREE SRCH RCD\n         ST    R9,SAVER9E\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST\n         BE    GETFREND            NO, PROBABLY NOT RUNNING VERS 2\nTYP5READ READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA\n         MVC   FSRCRBA(3),0(R5)    SAVE ITS VALUE\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGETFREND DS    0H\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        WE HAVE TO LOWER THE FREE SEARCH RECORD'S RBA POINTER    *\n*        WHEN WE DELETE A RECORD WITH A LOWER RBA.                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCHNGFSRC DS    0H\n         ST    R9,SAVER9F\n         CLI   REWFLAG,X'FF'       ARE WE CHANGING ANYTHING ?\n         BNE   CHNGFEND            NO. SKIP THIS ENTIRE SECTION\n         CLC   TYP5RBA(3),ZEROS    IS THIS TSO VERSION 1 ?\n         BE    CHNGFEND            YES. SKIP THIS SECTION\n         CLC   NSRCRBA(3),ZEROS    NO PROBLEM RECORDS ?\n         BE    CHNGFEND            NONE. SKIP SECTION.\nFRSRCEAD DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nMSGX4A   LA    R0,L'MESSAGE4              LOAD LENGTH OF MESSAGE\n         MVC   LINE,LINE-1                CLEAR OUTPUT LINE\n         HEX   WK4ALL+24,3,FSRCRBA        DISPLAY FREE SEARCH RBA\n         MVC   LINE(L'WK4ALL),WK4ALL      MOVE IN FIXED PART OF MSG\n         BAL   R9,MSG                     WRITE OUT MESSAGE\nMSGX5    LA    R0,L'MESSAGE5            LOAD LENGTH OF MESSAGE\n         MVC   LINE,LINE-1              CLEAR OUTPUT LINE\n         HEX   WK5ALL+24,3,NSRCRBA      DISPLAY RBA TO UPDATE FRS RBA\n         MVC   LINE(L'WK5ALL),WK5ALL    MOVE IN FIXED PART OF MSG\n         BAL   R9,MSG                   WRITE OUT MESSAGE\n         L     R3,MDLDECB+12          POINT TO TYPE 5 RECORD\nMSGX6    LA    R0,L'MESSAGE6            LOAD LENGTH OF MESSAGE\n         MVC   LINE,LINE-1              CLEAR OUTPUT LINE\n         MVC   FROM(7),0(R3)            MOVE BEGINNING OF FS RECORD\n         HEX   WK6ALL+16,7,FROM         MAKE ENTIRE AREA DISPLAYABLE\n         MVC   LINE(L'WK6ALL),WK6ALL    MOVE IN FIXED PART OF MSG\n         BAL   R9,MSG                   WRITE OUT MESSAGE\n         LA    R3,1(,R3)              BUMP TO FS RECORD'S RBA\n         CLC   0(3,R3),NSRCRBA        IS NEW SRCH RBA SMALLER ?\n         BNH   NOCHNGF                NO. DON'T CHANGE IT.\n         MVC   0(3,R3),NSRCRBA        YES.  LOWER IT.\nNOCHNGF  DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nCHNGFEND DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        WE'RE IN THIS SECTION WHEN WE SEARCH THE KEY TABLE       *\n*        FOR MESSAGES TO DELETE (IN FIX MODE) OR FOR MESSAGES     *\n*        THAT ARE IN ERROR (IN DISPLAY MODE).                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFINDBAD  DS    0H\n         ST    R9,SAVER9G\n         MVC   RNAM(3),ZEROS       STOP SEND AND LISTBC NOW\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE\n         MVC   MESSRBA(3),ZEROS    START SEARCH WITH HEADER\n* -- >\n         MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         MVC   WK3ALL(L'MESSAG10),MESSAG10\n         MVC   LINET(L'WK3ALL),WK3ALL\n         LA    R0,L'WK3ALL+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   WK3ALL(L'MESSAG11),MESSAG11\n         MVC   LINET(L'WK3ALL),WK3ALL\n         LA    R0,L'WK3ALL+7\n         BAL   R9,MSG\n* -- >\nTABLECYC DS    0H                  ONLY WRITE OUT UNCHAINED MESSAGES\n         CLC   MESSRBA(3),NUMRECS+1     AT END OF TABLE?\n         BE    FINDBEND                 YEP. END THE ROUTINE\n         L     R5,TABLADDR              LOAD START OF TABLE\n         XR    R6,R6                    CLEAR HI BYTE\n         ICM   R6,7,MESSRBA             LOAD RECORD NUMBER\n         AR    R5,R6                    GET PLACE IN TABLE\n         MVC   WRONGKEY(1),0(R5)        SAVE THIS TABLE ENTRY\n         CLI   0(R5),X'03'              IS IT AN X'03' ?\n         BE    SHOWRCD                  YES. GO DUMP MESSAGE.\n         CLI   0(R5),X'DD'              IS IT AN X'DD' ?\n         BE    SHOWRCD                  YES. GO DUMP MESSAGE.\n         LA    R6,1(,R6)           BUMP PLACE IN TABLE\n         STCM  R6,7,MESSRBA        INCREMENT RECORD NUMBER\n         B     TABLECYC\nSHOWRCD  DS    0H\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       POINT TO KEY\n         CLI   0(R2),X'03'         IS THIS A MESSAGE RECORD\n         BNE   FINDBEND            NO, WE HAVE NO BUSINESS HERE\n         L     R2,MDLDECB+12       LOOK AT THE RECORD\n         USING USMSG,R2            AS A MESSAGE RECORD\n         MVI   LINE-1,X'40'        PUT IN BLANK TO CLEAR LINE\n         MVC   LINE,LINE-1         CLEAR OUTPUT AREA\n         XR    R0,R0               ZERO REGISTER\n         IC    R0,USMLNG           LOAD LENGTH OF USER MESSAGE\n         DROP  R2\n         LR    R3,R0               LOAD LENGTH FOR EXECUTE\n         BCTR  R3,0                ONE LESS FOR EXECUTE\n         EX    R3,MOVDMSG          MOVE MESSAGE TO OUTPUT LINE\n         A     R0,=F'11'           ADD 11 TO LENGTH BECAUSE OF INSERTS\n         HEX   LINE+7,1,WRONGKEY   INCLUDE TABLE VALUE FOR RECORD\n         HEX   LINE,3,MESSRBA      INCLUDE RBA NUMBER IN DISPLAY\n         BAL   R9,MSG              NOW WRITE THE MESSAGE OUT\n* -- > test\n*        MVC   LINE,LINE-1\n*        HEX   LINE+26,1,FIXFLAG\n*        BAL   R9,MSG\n* -- > test\n* ---->\n         CLI   FIXFLAG,X'FF'\n         BNE   FINDNFIX\n         ST    R2,SAVR2\n         BAL   R9,DELREC\n         L     R2,SAVR2\nFINDNFIX DS    0H\n* ---->\n         AP    DMSGCNT,=P'1'       AND COUNT IT\nFINDNOFX DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         BAL   R9,CHNGFSRC         GO CHANGE FREE SEARCH RECORD PTR\n*                                   IF THIS IS NEEDED.\n         XR    R6,R6                    CLEAR HI BYTE\n         ICM   R6,7,MESSRBA             LOAD RECORD NUMBER\n         LA    R6,1(,R6)           BUMP PLACE IN TABLE\n         STCM  R6,7,MESSRBA        INCREMENT RECORD NUMBER\n         B     TABLECYC\nFINDBEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   LINE,LINE-1\n         LA    R0,130\n         BAL   R9,MSG\n         MVC   WK3ALL,INVALL                      WITH THE TOTAL COUNT\n         MVC   WK3ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK3ALL+46(10),DMSGCNT\n         MVC   LINET(L'WK3ALL),WK3ALL\n         LA    R0,L'WK3ALL+7\n         BAL   R9,MSG\n         MVC   RNAM(3),ZEROS       ALLOW SEND AND LISTBC NOW\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.\n         ST    R9,SAVER9H\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST\n         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2\nTYP5REA  DS    0H\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       POINT TO RECORD\n         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA\n         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE\n         CLC   0(3,R5),MINRBA      SHOULD FREE SEARCH RECORD BE LOWERED\n         BNH   NOFRSR                NO. JUST GET OUT.\n         MVC   0(3,R5),MINRBA      YES. LOWER IT\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nNOFRSR   DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nREWRFEND DS    0H\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        WRITE A MESSAGE LINE                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9I\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9I\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        MAKE A HEXADECIMAL NUMBER DISPLAYABLE                    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9J\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9J\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9K\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   VMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   DMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         ZAP   FMSGCNT,=P'0'\n         MVC   WK1TOTAL,MESTOTAL                      INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   WK2ALL,VALALL\n         MVC   WK3ALL,INVALL\n         MVC   WK4ALL,MESSAGE4\n         MVC   WK5ALL,MESSAGE5\n         MVC   WK6ALL,MESSAGE6\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS\n         MVC   LASMRBA(3),ZEROS\n         MVC   ENCHRBA(3),ZEROS\n         MVC   MINRBA(3),=X'0FFFFF'    PUT A LARGE VALUE IN\n         MVC   RNAM(3),ZEROS\n         MVC   NUMRECS(4),ZEROS\n         MVC   TABLSIZE(4),ZEROS\n         MVC   TABLADDR(4),ZEROS\n         MVI   ALLFLAG,X'FF'\n         MVI   FIXFLAG,X'00'\n         MVI   REWFLAG,X'00'\n         MVI   NOFREE,X'00'\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        RUN A CONTROL BLOCK CHAIN TO GET ADDRESS OF THE PSCB     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9L\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9L\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        SAVE AS MUCH INFORMATION AS POSSIBLE FROM THE CPPL       *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCPPLPTRS DS    0H\n         ST    R9,SAVER9M\n         L     R4,SAVECPPL         SAVE ADDRESS OF CPPL\n         USING CPPL,R4\n         ST    R6,SAVER6              SAVE R6\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         L     R6,SAVER6              RESTORE R6\n         DROP  R4\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9N\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9N\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9O\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         CLI   NOFREE,X'FF'        DO WE SKIP THE FREEDBUF?\n         BE    SKPFREE\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nSKPFREE  DS    0H\n         L     R9,SAVER9O\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND TRACK THEM IN THE GETMAINED TABLE.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTRUSLOOP DS    0H                  TRACE USER CHAINS TO SEE WHICH\n*                                  ARE GOOD MESSAGES. MARK IN TABLE.\n*\n         ST    R9,SAVER9P\n         MVC   LASMRBA(3),ZEROS    TELL US THERE WAS NO LAST MESSAGE\n*                                  TO BEGIN WITH\nTRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         XR    R6,R6               CLEAR WHOLE REGISTER\n         ICM   R6,7,MESSRBA        DUMP IN RELATIVE ADDRESS\n         LA    R5,0(,R6)           LOAD ADDRESS OF OFFSET\n         L     R3,TABLADDR         LOAD ADDRESS OF TABLE START\n         AR    R5,R3               INDEX INTO TABLE\n         CLI   0(R5),X'03'         MARKED AS VALID MESSAGE?\n         BE    TRCON1              YES. GO ON.\n         CLI   0(R5),X'CC'         IS THIS GUY ON SOMEONE ELSE'S CHAIN\n         BNE   TRGOON              NO.\n         MVI   0(R5),X'DD'         YES. MARK AS DOUBLE CHAINED\nTRGOON   XR    R0,R0               NO.  WRITE IT OUT AS A DISPLAY\n         MVC   WRONGKEY(1),0(R5)   SAVE TABLE'S \"KEY\" ENTRY\n         IC    R0,USMLNG           GET LENGTH OF MESSAGE\n         LR    R3,R0               DUMP IT INTO REG FOR EXECUTE\n         BCTR  R3,0                MINUS ONE FOR EXECUTE\n         EX    R3,MOVDMSG          MOVE MESSAGE INTO DISPLAY LINE\n         A     R0,=F'11'           MAKE ROOM IN DISPLAY LINE FOR EXTRAS\n         HEX   LINE+7,1,WRONGKEY   DISPLAY TABLED \"KEY\" VALUE\n         HEX   LINE,3,MESSRBA      DISPLAY RELATIVE RECORD ADDRESS\n         BAL   R9,MSG              WRITE THIS WHOLE LINE\n         B     WRITLEND\nTRCON1   AP    VMSGCNT,=P'1'       ADD TO VALID MESSAGE COUNT\n         MVI   0(R5),X'CC'         CHANGE ID OF CHAINED MESS IN TABLE\n         CLC   USMNEXT(3),ZEROS    IS THIS END OF MESSAGE CHAIN?\n         BE    WRITLEND            YEP. FINISH OFF THIS USERID.\n         MVC   MESSRBA(3),USMNEXT  NOPE. MOVE IN RBA OF NEXT MESSAGE\n         DROP  R2\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   LASMRBA(3),MESSRBA  SAVE PREVIOUS MESSAGE RBA\n         B     TRLOOP\nWRITLEND DS    0H\n         CLC   MESSRBA(3),SAVEPTRS+3      END POINTER MATCH END RECD?\n         BE    WRITLND                    YES, NO DISPLAY\nMSGX7    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE+7,3,MESSRBA\n         MVC   LINE+16(22),=C'LAST RECORD IN CHAIN  '\n         BAL   R9,MSG                 TAKE OUT\nWRITLND  DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9P\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        ALLFLAG IS ON, SO GO TO THE NEXT ID.                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9Q\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINET(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL+7\n*        BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINET,MESSEND                     END OF USER LINE\n         LA    R0,L'MESSEND+7\n*        BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n*        BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(62),LINE-1                 OF ASTERISKS.\n*        BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'                    WRITE A BLANK LINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9Q\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nDELREC   DS    0H             THIS ROUTINE ASSUMES A READ WAS\n*                             DONE FIRST, AND A CHECK. THE RECORD\n*                             THAT WAS READ, WILL BE DELETED.\n*                             IF LEVEL OF SYS1.BRODCAST IS 2 OR MORE,\n*                             THEN THE RBA OF THE FREE SEARCH RECORD\n*                             WILL ALSO BE UPDATED IF NECESSARY.\n*                             THIS WILL NOT BE DONE HERE.  RATHER,\n*                             THE RBA OF ALL DELETED RECORDS WILL BE\n*                             MINIMIZED, AND THE UPDATING, IF THE\n*                             MINIMUM RBA IS LESS THAN THE FREE SEARCH\n*                             RECORD RBA, WILL BE DONE AT THE VERY END\n         ST    R9,SAVER9R\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE\n         L     R2,MDLDECB+16           POINT TO IOB\n         USING IOBSTDRD,R2\n         MVC   SAVEINF1(8),IOBSEEK     SAVE CCHHR OF RECORD\n         DROP  R2\n         L     R2,MDLDECB+20           POINT TO THE KEY\n         MVI   0(R2),X'FF'             FIRST PART OF MARKING DELETED\n         L     R2,MDLDECB+12           POINT TO RECORD ITSELF\n         USING USMSG,R2\n         MVC   USMLNG(1),SAVEINF1+7    MOVE IN HEX RECORD NUMBER\n         MVC   USMTEXT(128),ZERREC     ZERO OUT THE MESSAGE AREA\n         CLC   MINRBA(3),MESSRBA       SEE IF CURRENT RBA IS LOWEST\n         BNH   CHGFRBA                 IT ISN'T, SO BRANCH AROUND.\n         MVC   MINRBA(3),MESSRBA       LOWER SAVED RBA IF NECESSARY\nCHGFRBA  DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         AP    FMSGCNT,=P'1'       COUNT DELETED RECORD\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         L     R9,SAVER9R\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        SET UP IOPL FOR PUTLINE                                  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE\nSETIOPL  DS    0H\n         ST    R9,SAVER9S\n         L     R4,SAVECPPL         POINT TO CPPL\n         USING CPPL,R4\n         LA    R15,MYIOPL          GET IOPL ADDRESS\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT  MOVE IN UPT ADDR FROM CPPL\n         MVC   IOPLECT(4),CPPLECT  MOVE IN ECT ADDR FROM CPPL\n         DROP  R4\n         LA    R0,MYECB            GET OUR PROGRAM'S ECB ADDR\n         ST    R0,IOPLECB          AND PUT IT IN THE IOPL\n         XC    MYECB,MYECB         CLEAR THE ECB\n         LA    R0,MYPTPB           GET ADDR OF PTPB IN THIS PGM\n         ST    R0,IOPLIOPB         AND PUT IT IN THE IOPL\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9S\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        PUTMSG ROUTINE                                           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        PUTLINE ROUTINE                                          *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n         SPACE 3\n         SPACE 3\n*-----------------------------------------------------------------*\n*---*      E N D   O F   S U B R O U T I N E S                *---*\n*-----------------------------------------------------------------*\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\nMOVDMSG  MVC   LINED(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nSAVER15  DS    F                   SAVE REG 5\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'The GETMAIN-ed Table has been filled with key values'\nMESSAG2A DC    C'Orphaned messages are now being deleted from BRODCAST'\nMESSAGE3 DC    C'GETMAIN was bad, or else NUMRECS corrupted.  '\nMESSAGE4 DC    C'OLD FREE SEARCH RECORD             '\nMESSAGE5 DC    C'NEW FREE SEARCH RECORD             '\nMESSAGE6 DC    C'DUMP OF TYPE 5:                     '\nMESSAGE7 DC    C'ORPHANED USER MESSAGES ARE BEING DELETED. '\nMESSAG10 DC    CL58'     Display of Orphaned User Messages     '\nMESSAG11 DC    CL58'     ------- -- -------- ---- --------     '\nMESSAG20 DC    CL58'   &PGMNAME &PKGTITL &VERTITL &VERSNUM      '\nMESSAG21 DC    CL58'   -------  --------- ------  -------   ----- '\nMESSAG22 DC    CL58'&COPYRGT      '\nMESSAG23 DC    CL58'   &PGMNAME  -  Valid Execution Parms are :       '\nMESSAG24 DC    CL58'   BDMDIAG REPORT - Report orphaned USER messages '\nMESSAG25 DC    CL58'   BDMDIAG DELBAD - Delete orphaned USER messages '\nMESSAG26 DC    CL58'   This Execution is with PARM of REPORT.         '\nMESSAG27 DC    CL58'   This Execution is with PARM of DELBAD.         '\nMESSAG28 DC    CL58'Invalid Execution Parm - Code REPORT or DELBAD.   '\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'\nFMSALL DC C'TOTAL ORPHANED MSGS DELETED IN SYS1.BRODCAST              '\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nVALALL DC C'TOTAL  VALID   TSO MESSAGES IN SYS1.BRODCAST              '\nINVALL DC C'TOTAL ORPHANED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         EJECT\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\n         DS    0D                  ENSURE DOUBLEWORD BOUNDARY OF AREA\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF DELETED ORPHANED RECORDS\nVMSGCNT  DC    PL5'0'              COUNT OF VALID MESSAGES CHAINED\nDMSGCNT  DC    PL5'0'              COUNT OF DELETED MESSAGES\nFMSGCNT  DC    PL5'0'              COUNT OF DELETED MESSAGES\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nTABLADDR DS    F                   ADDR OF GETMAINED TABLE\nTABLSIZE DS    F                   SIZE OF GETMAINED TABLE\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL '\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nTYP5RBA  DC    X'000000'           STORE RELATIVE ADDR OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nBLOCLAST DC    X'000000'           STORE LAST RELATIVE BLOCK NUMBER\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nENCHRBA  DC    X'000000'           RBA OF END OF THIS USERID'S CHAIN\nLASMRBA  DC    X'000000'           RBA OF PREVIOUS MESSAGE\nRNAM     DC    X'000000'           RBA TO ENQUEUE ON\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nFSRCRBA  DC    X'000000'           RBA OF OLD FREE SEARCH RECORD\nNSRCRBA  DC    X'000000'           RBA OF FIRST DELETED FIXED RECORD\nMINRBA   DC    X'000000'\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nWRONGKEY DS    CL1\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nNUMRECS  DS    F                   NUMBER OF RECORDS IN SYS1.BRODCAST\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER1   DS    F                   SAVE REG 1\nSAVR2    DS    F                   SAVE REG 2 DURING BAL\nSAVR9    DS    F                   SAVE REG 9 DURING BAL\nSAVER6   DS    F\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nSAVER9U  DS    F                   BAL Register Save Area\nSAVER9V  DS    F                   BAL Register Save Area\nSAVER9W  DS    F                   BAL Register Save Area\nSAVER9X  DS    F                   BAL Register Save Area\nSAVER9Y  DS    F                   BAL Register Save Area\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 DUMP CCHHR HERE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nLINED    EQU   LINE+11\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK2ALL DC C'                                                          '\nWK3ALL DC C'                                                          '\nWK4ALL   DC    C'                                   '\nWK5ALL   DC    C'                                   '\nWK6ALL   DC    C'                                    '\nWKAALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nFROM     DC    C'       '\nALLFLAG  DS    X\nFIXFLAG  DS    X\nREWFLAG  DS    X\nNOFREE   DS    X\n         DS    0D                  ENSURE DOUBLEWORD BOUNDARY OF AREA\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n*\n         EJECT\n*-----------------------------------------------------*\n*        MAPPING MACROS                               *\n*-----------------------------------------------------*\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMDSFIX": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x15\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x03`\\x05\\x05\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:15", "lines": 864, "newlines": 1285, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMDSFIX TITLE 'BDMDSFIX - FIX A BRODCAST DATASET ACROSS DEVICE TYPE CH-\n               ANGE'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMDSFIX                                          *\n*                                                                     *\n*       FUNCTION:   To fix a Broadcast Dataset whose free records     *\n*                   have become corrupted.  This can arise from       *\n*                   copying a Broadcast Dataset from one device type  *\n*                   to another.  IBM says you can't do it.  This is   *\n*                   why.  For example, if you copy a Broadcast        *\n*                   dataset from a 3380, where X'35' records fit into *\n*                   a track, to a 3390, where X'32' records fit into  *\n*                   a track, the X'FF' records will mostly be wrong,  *\n*                   and the Broadcast Dataset will be unusable by the *\n*                   system.  Let us explain some more.                *\n*                                                                     *\n*                   The free records of a Broadcast Dataset have to   *\n*                   contain the \"record number on the track\" or in    *\n*                   other words, the \"R\" of the CCHHR of the record,  *\n*                   hard-coded into the first data byte of the record *\n*                   after the key.  So if the key is X'FF', meaning   *\n*                   a free record, the first data byte of that record *\n*                   HAS TO CONTAIN a hex value equal to the exact     *\n*                   record number on that track.                      *\n*                                                                     *\n*                   This program will reset any \"errant first bytes\"  *\n*                   of X'FF' records (free Broadcast records) in      *\n*                   the Broadcast Dataset back to their correct       *\n*                   value, for the device type that the Broadcast     *\n*                   Dataset is on.                                    *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  December 26, 2008                                 *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         CHANGES:  12/26/08  -  Got it to work.                      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* ------------------------------------------------------------------ *\n* ---   MAINLINE CODE BEGINS HERE                                --- *\n* ------------------------------------------------------------------ *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMDSFIX'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMDSFIX,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n* ------------------------------------------------------------------ *\n** -- >>\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    NOTITLHE            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nNOTITLHE DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n*\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND GET TOTRECS\n         BAL   R9,READLOOP         Go through BRODCAST and fix X'FF's\n         MVC   LINE,LINE-1         Blank line\n         MVC   LINE(43),=C'Fix free message records that are in error.'\n         LA    R0,55\n         BAL   R9,MSG\n         MVC   LINE,LINE-1         Blank line\n         MVC   LINE(43),=C'--- ---- ------- ------- ---- --- -- ----- '\n         LA    R0,55\n         BAL   R9,MSG\n         MVC   LINE,LINE-1         Display results.\n         MVC   LINE+39(10),MASK10\n         ED    LINE+39(10),CHANGREC\n         MVC   LINE(39),=C'Records    changed by BDMDSFIX program:'\n         LA    R0,55\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE+39(10),MASK10\n         ED    LINE+39(10),FREEREC\n         MVC   LINE(39),=C'Total free records in BRODCAST dataset:'\n         LA    R0,55\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,55\n         BAL   R9,MSG\n         B     EOJ0                End program.\n* ------------------------------------------------------------------ *\n* ---    END OF PROGRAM    ---                                   --- *\n* ------------------------------------------------------------------ *\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\n* ------------------------------------------------------------------ *\nEOJ0     LA    R5,0                SET RC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET RC = 4.\n         B     EOJ                 CONT\nEOJ8     LA    R5,8                SET RC = 8.\n         B     EOJ                 CONT\n* ------------------------------------------------------------------ *\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        Put RC into passed save area\n         L     R14,12(,R13)        Load R14 back.\n         LM    R0,R12,20(R13)      All the other registers.\n         BR    R14\n* ------------------------------------------------------------------ *\n* ---   MAINLINE CODE ENDS HERE                                  --- *\n* ------------------------------------------------------------------ *\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9E\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   TOTLRECS(4),R1RECNUM  TOTAL NUMBER OF RECORDS IN DATASET\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H                  WRITE A LINE USING PUTLINE FACILITY\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         ST    R9,SAVER9F\n         LA    R1,LINE\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9F\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9G\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9G\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9A\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1\n         MVI   KEYHOLD,X'00'\n         MVC   RECHOLD,RECHOLD-1\n         XC    TOTLRECS,TOTLRECS\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS\n         MVI   TITLFLG,X'00'       Title has not yet been printed.\n         ZAP   FREEREC,=P'0'\n         ZAP   CHANGREC,=P'0'\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9B\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9C\n         ST    R6,SAVER6A\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n*        LA    R6,0\n         L     R6,SAVER6A\n         L     R9,SAVER9C\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9D\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9D\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H                  Print the title lines\n         ST    R9,SAVER9H\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME\n         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE\n         LA    R0,74                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER\n         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE\n         LA    R0,36                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1\n         LA    R0,36\n         BAL   R9,MSG\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R0,L'MESNOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R0,L'MESYOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*--------------------------------------------------------------------*\n*        This is now our READ loop as we do a successive READ,\n*        incrementing the RBA number until we reach the BCNUMREC\n*        value saved in 'HIGHVAL'.  Once we have read all the\n*        records, we will go and analyze them.\n*--------------------------------------------------------------------*\n*    BLOCKNO has started with an RBA of X'000000' from the initial   *\n*     READ of the BRODCAST Header record.                            *\n*--------------------------------------------------------------------*\n         SPACE\nREADLOOP DS    0H\n         ST    R9,SAVER9I\n         ICM   R1,7,BLOCKNO        Get RBA processed previously.\n         LA    R1,1(,R1)           Increment by one.\n         STCM  R1,7,BLOCKNO        Store it back for the next READ.\n         CLC   BLOCKNO(3),TOTLRECS+1  Did we reach max?\n         BE    READLEND            Totals after fixing them all.\n         SPACE\n         READ  MDLDECB,            DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA TO HOLD THE KEY\n         SPACE\n         CHECK MDLDECB\n         SPACE\n         L     R2,MDLDECB+20       Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,MDLDECB+12       Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         L     R2,MDLDECB+16       Point to IOB\n         USING IOBSTDRD,R2\n         MVC   SAVEINF1(8),IOBSEEK Save CCHHR of record\n         DROP  R2\n         CLI   KEYHOLD,X'FF'       Is this an unused message record?\n         BE    CHKFF               Yes. No fixing necessary.\n         B     FREEB\n*--------------------------------------------------------------------*\n*        Count the X'FF' record type, and change the bad ones.\n*--------------------------------------------------------------------*\nCHKFF    DS    0H                  Deal with X'FF' record type.\n         AP    FREEREC,=P'1'       Yes. Add one to total for this type.\n         CLC   SAVEINF1+7(1),RECHOLD  Does data byte need changing?\n         BNE   CHANGFF\n         B     FREEB\nCHANGFF  DS    0H\n         USING USMSG,R3            Change record, count, write it back.\n         MVC   USMLNG(1),SAVEINF1+7  Move \"R\" from CCHHR into 1st byte\n         AP    CHANGREC,=P'1'      Count a record changed.\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nFREEB    DS    0H                  Every READ needs a FREEDBUF.         009\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         B     READLOOP            Read another BRODCAST record.\nREADLEND DS    0H\n         L     R9,SAVER9I\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30' BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*--------------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    CL10'          '    10 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nSAVER5A  DS    F\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DS    XL1                 Key slot\nRECHOLD  DS    XL129               Data slot\nTOTLRECS DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\n         DS    CL80\n         DS    CL80\n         DC    CL8' '\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL8' '              PADDING\nNEWIDU   DC    C'        '         UPPERCASED USERID PARM\nADDADR   DS    0CL12\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER9   DS    F                   SAVE BAL REGISTER\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nFREEREC  DS    PL5\nCHANGREC DS    PL5\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\n         DC    C' '\nTITLFLG  DS    X\nSTORKEY  DS    X\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJEESCB DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMDUMP": {"ttr": 3593, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00%\\x00\\x95\\x14\\x8f\\x01\\x16&\\x9f\\x156\\x0b\\xbd\\x03\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-28T00:00:00", "modifydate": "2016-09-25T15:36:25", "lines": 3005, "newlines": 798, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMDUMP  TITLE 'DUMP RECORDS FROM BRODCAST DATASET AND ANALYZE'\n*------------------------------------------------------------------*\n*\n*          B D M D U M P   ( Dump BROADCAST )   Version  1.4.0B\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program analyzes the TSO Broadcast dataset.  It\n*        displays the number of available blocks and how they\n*        are used.  It also displays the TSO users who have\n*        messages waiting.  In addition it also does a validity\n*        check on records which are in the message pool to assure\n*        they are chained off of a user record.  According to\n*        documentation, instances occur which can result in these\n*        garbage records existing.\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*        RECORD TYPES in the BRODCAST Dataset:\n*\n*        The six record types and their keys are:\n*\n*        X'00'     BRODCAST 'NOTICES' Directory Record.\n*\n*        X'01'     User 'MAIL' Directory Record.\n*\n*        X'02'     BRODCAST 'NOTICES' Message Record.\n*\n*        X'03'     User 'MAIL' Message Record.\n*\n*        X'04'     Header Record of BRODCAST Dataset.\n*\n*        X'05'     RBA Address of First Record usable for a message.\n*\n*        X'FF'     Dummy Inactive 'MAIL' Message Record.\n*                   (First byte if data in this type must contain\n*                    the \"R\" value of CCHHR or TTR.  This is the\n*                    record number within the track, starting\n*                    from X'01' and going up to the maximum\n*                    number of BRODCAST records that fit into\n*                    a track (device dependent).)\n*\n*                  Examples:  max is X'32' for 3390s\n*                             max is X'35' for 3380s\n*                             max is X'30' for 3350s\n*\n*                  So, if you copy the BRODCAST dataset across\n*                  device types, you have to reset these numbers\n*                  to the correct \"R\" value for the CCHHR or TTR.\n*\n*        The 'BDAM' Access Method reads these records looking\n*        at the (one byte) key separately, and the (129 byte)\n*        data separately.\n*\n*\n*        JCL TO INVOKE:\n*\n*            //BRODCAST EXEC PGM=BDMDUMP,REGION=2M\n*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --\n*            //BRODMAP  DD  SYSOUT=A,DCB=BLKSIZE=133\n*            //BRODPRNT DD  SYSOUT=A\n*            //BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR\n*\n* INSTALLED:  30 Mar 95\n*\n* CHANGE LOG:\n*    05 Sep 2005 - Corrected CLOSE macro for closing DCBs that\n*                  are in the BDMPRINT program.\n*\n*    09 Aug 2005 - Added BDMPRINT program instead of the snap of\n*                  the Header record area.  With the BDMPRINT\n*                  program you can intelligently look at, and\n*                  format, any BRODCAST record.\n*\n*    17 Aug 2005 - Create an Incore Notices Directory Table which\n*                  can be interrogated by the program instead of\n*                  accessing the BRODCAST dataset directly.  The\n*                  BDMPRINT program needs this information to\n*                  determine both: if a notice message is active,\n*                  and, what the notice number is, for OPER SEND.\n*\n*                  When this table exists, its start address is\n*                  passed to BDMPRINT as the third parameter.  If\n*                  this table does not exist yet, as when reading\n*                  the header record for the first time, an address\n*                  of F'0' is passed to BDMPRINT as the third\n*                  parameter.  BDMPRINT can tell the difference.\n*\n*    21 Aug 2005 - Create a new report with DD name BRODUSER which\n*                  prints the Userid message chains.\n*\n*                  Protection of outputs if a DD name (other than\n*                  BRODMAP) is missing.  You can now eliminate\n*                  the BRODPRNT and/or BRODUSER reports by leaving\n*                  out either or both DD name(s) from the JCL.\n*\n*    04 Sep 2005 - Adapt the BDMSCAN program to BDMDUMP, as was done\n*                  before in the public package.  Since BDMSCAN is\n*                  now much different from BCMSCAN, so also, BDMDUMP\n*                  is much different too.  Force display of all\n*                  records from BRODCAST in the BRODPRNT report.\n*                  BRODDUMP DD name is now required.\n*\n*------------------------------------------------------------------*\n*\n*    Parameter list to call  BDMPRINT\n*\n*       0(R1)  -   Fullword containing 3-byte current RBA in low\n*                  order part of the fullword.\n*       4(R1)  -   130 byte area containing key+data of current\n*                  record being printed and formatted.\n*       8(R1)  -   Incore Notice Directory Table - address of\n*                  its beginning.  Zero if not EXECMODE=X'02'\n*      12(R1)  -   Address of Userid if EXECMODE=X'04'\n*      16(R1)  -   DDNFLAG   - which DD names are OPEN\n*      17(R1)  -   EXECMODE  - which part of the program is\n*                              calling BDMPRINT\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*        BELOW IS A PICTORIAL VIEW OF THE BROADCAST WHICH SHOULD\n*        HELP ONE TO BE ABLE TO NAVIGATE IT SUCCESSFULLY.\n*\n*            S Y S 1 . B R O D C A S T\n*  ===============================================================\n*  =                                                             =\n*  =   *--*--------*---------*----------------------------*---*  =\n*  =   *04*        * R1USPTR *  'SYS1.BRODCAST DATA SET'  *   *  =\n*  =   *--*--------*-----+---*----------------------------*---*  =\n*  =                     +                                       =\n*  =    ++++++++++++++++++                                       =\n*  =    +     1ST USER MAIL DIRECTORY RECORD  (EACH USERID       =\n*  =    +       ENTRY CONSISTS OF A 13 BYTE AREA; THE USERID,    =\n*  =    +       NEXT RBA POINTER AND ENDING RBA POINTER.         =\n*  =    +                                                        =\n*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =\n*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* RBA *      =\n*  =   *--*-------*---*----* /// *------*---*----*--*--+--*      =\n*  =                                                   +         =\n*  =    +++++++++++++++++++++++++++++++ //// +++++++++++         =\n*  =    +                                                        =\n*  =    +    LAST USER MAIL DIRECTORY RECORD                     =\n*  =    +                                                        =\n*  =    +    NOTE: '000' ENDS THE CHAIN OF X'01' RECORDS.        =\n*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =\n*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* 000 *      =\n*  =   *--*-------*---*----* /// *------*-+-*-+--*--*--+--*      =\n*  =                                      +   +                  =\n*  =    +++++++++++++++++++++++++++++++++++   +++++++++++++++++  =\n*  =    +                                                     +  =\n*  =    +     1ST MESSAGE RECORD FOR USER                     +  =\n*  =   *--*-----------------------------------------*-----*   +  =\n*  =   *03*                                         * RBA *   +  =\n*  =   *--*-----------------------------------------*--+--*   +  =\n*  =                                                   +      +  =\n*  =    ++++++++++++++++++++++++++ //// ++++++++++++++++      +  =\n*  =    +                                                     +  =\n*  =    +++++++++++++++++++++++++++++++++++++++++++++++++++++++  =\n*  =    ++    LAST MESSAGE RECORD FOR USER                       =\n*  =    ++   NOTE: '000' ENDS THE CHAIN OF X'03' RECORDS.        =\n*  =   *--*-----------------------------------------*-----*      =\n*  =   *03*                                         * 000 *      =\n*  =   *--*-----------------------------------------*-----*      =\n*  =                                                             =\n*  =             FREE  SPACE                                     =\n*  =   *--*-----------------------------------------------*      =\n*  =   *FF*                                               *      =\n*  =   *--*-----------------------------------------------*      =\n*  =                                                             =\n*  ===============================================================\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1            RESERVED\nR1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE\n*                               NOTICE TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT303   &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                  USED BY O.S.\nR1       EQU   1                  ADDR OF PARM LIST\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9                   PTR TO OUTPUT LINE FOR PUT\nR10      EQU   10                  BAL REGISTER\nR11      EQU   11\nR12      EQU   12                  BASE REGISTER\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMDUMP '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R5,R1               Save PARM address\n         LR    R12,R15             Load entry address\n         USING BDMDUMP,R12,R11,R8  Establish addressability\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R8,4095(,R11)\n         LA    R8,1(,R8)\n         LR    R15,R13             Save caller's save address\n         LA    R13,SAVE            Get our savearea address\n         ST    R15,SAVE+4          Save off into low save\n         ST    R13,8(,R15)         Chain mine back\n         ST    R5,PARMSAVE         Store PARM address for reloading\n         XR    R9,R9               For possible debug purposes\n         XR    R10,R10             For possible debug purposes\nINITPGM  DS    0H\n         MVI   BLANKS-1,X'40'\n         MVC   BLANKS(133),BLANKS-1\n         ZAP   DMPCOUNT,=P'0'\n         MVI   LINE-1,X'40'\n         MVI   BLANK44-1,X'40'     Initialize Blanks area\n         MVC   BLANK44(44),BLANK44-1\n         MVC   OUTREC(130),OUTZERO Blank output record area\n         L     R0,=V(BDMPRINT)     Get BDMPRINT program entry point\n         ST    R0,BDMPRPGM         Store it for future use\n         L     R0,=V(BRODPRNT)     Get BRODPRNT DCB address\n         ST    R0,BRODPDCB         Store it for future use\n         L     R0,=V(BRODUSER)     Get BRODUSER DCB address\n         ST    R0,BRODUDCB         Store it for future use\n         SPACE\n         L     R1,PARMSAVE         Reload PARM address\n         L     R1,0(,R1)           See if PARM was coded\n         MVC   PWKAREA(3),2(R1)    Uppercase the parm for 3 bytes\n         OC    PWKAREA(3),BLANK44\n         CLC   =C'ALL',PWKAREA     Was ALL coded?\n         BNE   TIOTSCAN            No. Don't flip flag\n         OI    ALLPRINT,X'01'      Yes. Let the program know.\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  BRODPRNT, BRODUSER, SYSIN        06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n         ST    R3,SAVER3\n         ST    R5,SAVER5\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),BRODPRNC     BRODPRNT DDNAME THERE?               06235\n         BNE   TIOTPRTN       NO                                         06236\n         OI    DDNFLAG,X'01'        SHOW PRESENCE OF BRODPRNT DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTPRTN CLC   4(8,R5),BRODUSRC                                          06239\n         BNE   TIOTUSRN                                                  06240\n         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BRODUSER DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTUSRN CLC   4(8,R5),SYSINC                                            06239\n         BNE   TIOTDUMN                                                  06240\n         OI    DDNFLAG,X'04'        SHOW PRESENCE OF SYSIN    DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTDUMN CLC   4(8,R5),BRODDUMC                                          06239\n         BNE   TIOTNEXT                                                  06240\n         OI    DDNFLAG,X'08'        SHOW PRESENCE OF BRODDUMP DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3\n         L     R5,SAVER5\n         B     OPEN\nBRODPRNC DC    CL8'BRODPRNT'\nBRODUSRC DC    CL8'BRODUSER'\nBRODDUMC DC    CL8'BRODDUMP'\nSYSINC   DC    CL8'SYSIN   '\n* -------------------------------------------------------- *\n*   OPEN files and print title lines in BRODPRNT report.   *\n* -------------------------------------------------------- *\n*     The BRODPRNT DCB is in the BDMPRINT program, but     *\n*     it is OPENed and CLOSEd by this program.             *\n* -------------------------------------------------------- *\nOPEN     DS    0H\n         OPEN  (BRODCAST,(INPUT),BRODMAP,(OUTPUT))\n         TM    DDNFLAG,X'08'        Is BRODDUMP DD present?\n         BO    OPENOK1\n         PUT   BRODMAP,TITLINE     Title line\n         PUT   BRODMAP,CPYRLINE    Copyright line\n         PUT   BRODMAP,BLANKS\n         PUT   BRODMAP,NODUMPDD\n         B     CLOSFAST\nOPENOK1  DS    0H\n         OPEN  (BRODDUMP,(OUTPUT))\n         RDJFCB BRODDUMP\n* ---- >>>>>>\n* --               OPEN the BRODPRNT DCB    -    below\n* --\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT001\n         ST    R6,SAVER6          SAVE R6 for OPEN purposes.\n         L     R6,BRODPDCB        Get DCB address from BDMPRINT program\n         OPEN  ((6),OUTPUT)       OPEN it.\n         MVC   LINE,LINE-1        Print title lines to that report.\n         PUT   (6),TITLINE\n         MVC   LINE,LINE-1\n         PUT   (6),CPYRLINE\n         MVC   LINE(133),REPTLN02\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         L     R6,SAVER6          Restore R6 for later use.\nNOPRT001 DS    0H\n* --\n* --               OPEN the BRODPRNT DCB    -    above\n* ---- >>>>>>\n* ---- >>>>>>\n* --               OPEN the BRODUSER DCB    -    below\n* --\n         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?\n         BZ    NOBRDUSR\n         ST    R6,SAVER6          SAVE R6 for OPEN purposes.\n         L     R6,BRODUDCB        Get DCB address from BDMPRINT program\n         OPEN  ((6),OUTPUT)       OPEN it.\n         MVC   LINE,LINE-1        Print title lines to that report.\n         PUT   (6),TITLINE\n         MVC   LINE,LINE-1\n         PUT   (6),CPYRLINE\n         MVC   LINE(133),REPTUL02\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         L     R6,SAVER6          Restore R6 for later use.\nNOBRDUSR DS    0H\n* --\n* --               OPEN the BRODUSER DCB    -    above\n* ---- >>>>>>\n         SPACE\n*--------------------------------------------------------------------*\n*        GET THE HEADER RECORD.  THIS IS A SPECIAL RECORD 1.\n*--------------------------------------------------------------------*\n         SPACE\n         READ  HDRECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK HDRECB\n         L     R2,HDRECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,HDRECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n*-------------------------------------------------------------\n         MVC   OUTREC(130),OUTZERO  BLANK RECORD FOR NEXT TIME\n         MVC   OUTREC(130),REC130\n         PUT   BRODDUMP,OUTREC\n         AP    DMPCOUNT,=P'1'\n         MVC   OUTREC(130),OUTZERO  BLANK RECORD FOR NEXT TIME\n*-------------------------------------------------------------\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,BLOCKNO        Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         LA    R0,0                Third parameter address is a dummy,\n         ST    R0,8(,R1)           because the ND table isn't there yet\n         LA    R0,0                Fourth parameter address is a dummy,\n         ST    R0,12(,R1)          because no USERID is being passed.\n         LA    R0,DDNFLAG          EXECMODE flag is one after this\n         MVI   EXECMODE,X'01'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\n         USING R1BC,R3             Addressability to Record 1 Mapping\n         SPACE\n         AP    REC04,=P'1'         Add 1 to total                JDM0\n         MVC   SAVERBA(3),R1USPTR  Save RBA 1ST Mail Directory Record\n         MVC   HIGHVAL(4),R1RECNUM Save get out value\n         MVC   SAVHDADR(4),R1RECNUM Save get out value\n         MVC   NOTEDRBA(3),R1BCPTR  Save Notify Directory Address\n         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA\n         MVC   INCORGEN(4),R1GENNUM Save Incore Notices Table Gen Numbr\n         MVC   NUMNOTCS(2),R1BCMAX  Number of Notice message records\n         L     R5,HIGHVAL          Get number for printout\n         CVD   R5,CVDAREA          Convert it to printable\n         MVC   RECCOUNT,CVDAREA+4\n         MVC   MAXCNT,MASK7        Move in the mask\n         ED    MAXCNT,CVDAREA+5    Make it pretty\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         LA    R9,MAXIMUM          Total blocks line\n         BAL   R10,PRINT           Print and tell how many\n         SPACE\n         LH    R5,R1BCMAX          Get number of notices from header\n         XR    R4,R4               Clear R4 to divide by 25\n         D     R4,=F'25'           Number if blocks for directory\n         AH    R5,R1BCMAX          Add total for Notices & directory\n         DROP  R3\n         LTR   R4,R4               Is there a remainder?\n         BZ    CVDNOT              No. Don't add.\n         LA    R5,1(,R5)           Yes, add one.\nCVDNOT   DS    0H\n         CVD   R5,CVDAREA          Convert block total to printable\n         MVC   NOTCNT,MASK4        Move in mask\n         ED    NOTCNT,CVDAREA+6    Make it pretty\n         LA    R9,NOTICES          Point to line to print\n         BAL   R10,PRINT           And print the line.\n         SPACE\n         FREEDBUF HDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         SPACE\n* ------------ >  Do a run through Notices Directory records - below\n* ------------------------------------------------------------------- *\nNDTABLE  DS    0H                  Run through the Notices directory\n*                                   records and create an incore table\n*                                   of the entries.\n* ------------------------------------------------------------------- *\n         STM   R4,R5,SAVRG45       Save work registers\n         XR    R4,R4               Zero R4\n         XR    R5,R5               Zero R5\n         ICM   R5,3,NUMNOTCS       Insert number of Notice entries\n         M     R4,=F'5'            Multiply by 5 bytes per entry\n         A     R5,=F'15'           Add 15 for NDHDR, NDTLR, one extra.\n         A     R5,=F'125'          Account for almost empty record.\n         LR    R0,R5               Dump this quantity into R0\n         LM    R4,R5,SAVRG45       Restore work registers\n         ST    R0,NOTGTSIZ         Store quantity of bytes in table\n         L     R0,NOTGTSIZ         Load it back into R0 for GETMAIN\n         GETMAIN RU,LV=(0),LOC=BELOW\n         ST    R1,NOTETBLA         Save address of GETMAINed storage\n         L     R1,NOTETBLA         Get it back for us to use now.\n         MVC   0(5,R1),=C'NDHDR'   Put in the table header\n         LA    R1,5(,R1)           Bump past header.\n         ST    R1,CURNOTBL         Save address of start of real data.\nMAKNOTBL DS    0H\n         READ  NDRECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               NOTEDRBA            RBA TO HOLD THE KEY\n         SPACE\n         CHECK NDRECB\n         L     R2,NDRECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,NDRECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         L     R1,CURNOTBL         Get (moving) address to begin\n         MVC   0(125,R1),RECHOLD   Move all the table entries there\n         LA    R1,125(,R1)         Bump the current table address\n         ST    R1,CURNOTBL         And store it away for next read.\n         CLC   RECHOLD+126(3),=X'000000'  Last Notice directory record?\n         BE    ENDNOTBL            Yes, go end up the table.\n         MVC   NOTEDRBA(3),RECHOLD+126    Update to RBA of next record\n         FREEDBUF NDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         B     MAKNOTBL            And do another READ.\nENDNOTBL DS    0H\n         MVC   0(5,R1),=C'NDTLR'   End the GETMAINed table with trailer\n         SPACE\n         FREEDBUF NDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         SPACE\n* ------------ >  Do a run through Notices Directory records - above\n* ----- >    Analyze Notices Directory Records Table  -  below\nANLNOTBL DS    0H                  Read the Incore Notices Directory.\n         LA    R9,NOTFYOUT         Notify messages information title\n         BAL   R10,PRINT           Print it in summary report\n         L     R7,NOTETBLA         Address of incore Notices directory\n         CLC   =C'NDHDR',0(R7)     Is this the proper header?\n         BNE   ANLNOTBB            No.\nANLNOTBP DS    0H\n         LA    R7,5(,R7)           Bump past header.\n         CLC   =C'NDTLR',0(R7)     Is this the trailer?\n         BE    ANLNOTBE            Yes. Get out if we're at the end.\n         CLC   =X'0000000000',0(R7)  Is this an empty entry?\n         BE    ANLNOTBP            Yes. Just bump past and try again.\nANLNOTBS DS    0H\n         TM    0(R7),X'80'         Is this an unused entry?\n         BZ    ANLACTIV            No. Count it as an active entry.\n         B     ANLINACT            Yes. Count it as unused.\nANLACTIV DS    0H\n         AP    ACTNOT,=P'1'        Count an active entry.\n         B     ANLPROCS            Go do the entry processing.\nANLINACT DS    0H\n         AP    INANOT,=P'1'        Count an inactive entry\nANLPROCS DS    0H                  Directory entry processing.\n         MVC   NOTNUM(2),0(R7)     Copy off the notice number.\n         NI    NOTNUM,X'7F'        Turn off the indicator after copy.\n         MVC   NOTRBA(3),2(R7)     Copy off this notice's RBA.\n         B     ANLNOTBP            Go to the next entry.\nANLNOTBB DS    0H                  If the header is wrong, come here.\n         LA    R9,NDCREERR         Read error message - header missing\n         BAL   R10,PRINT           Print it in summary report\n         B     ANLNOTBZ            Don't print Notices details.\nANLNOTBE DS    0H                  Time to get out and print totals.\n         MVC   ACTNNUM,MASK7       Move mask.\n         ED    ACTNNUM,ACTNOT      Edit total active notices.\n         LA    R9,ACTNOMSG         Point to line to print.\n         BAL   R10,PRINT           Print total active.\n         MVC   INANNUM,MASK7       Move mask.\n         ED    INANNUM,INANOT      Edit total inactive notices.\n         LA    R9,INANOMSG         Point to line to print.\n         BAL   R10,PRINT           Print total inactive.\nANLNOTBZ DS    0H\n         SPACE\n* ----- >    Analyze Notices Directory Records Table  -  above\nSKIPNOTE DS    0H\n         L     R0,SAVHDADR              GET MAXIMUM RECORDS    SG MAY99 005\n         A     R0,=F'1'                 ONE FOR GOOD LUCK      HD DEC97 005\nTYPEGET  GETMAIN RU,LV=(0),LOC=BELOW    GET STORAGE FOR TABLE  HD DEC97 005\n         ST    R1,TYPETBLA              SAVE ADDRESS           HD DEC97 005\n         LR    R0,R1                    SAVE ADDRESS           HD DEC97 005\n         L     R1,SAVHDADR              GET LENGTH             SG MAY99 005\n         LM    R14,R15,=D'0'            CLEAR FOR ICM          HD DEC97 006\n         ICM   R15,B'1000',=X'99'       PAD WITH X'99'         HD DEC97 006\n         MVCL  R0,R14                   CLEAR AREA             HD DEC97 006\n         L     R7,TYPETBLA                                     HD DEC97 006\n         MVI   1(R7),X'04'                                     HD DEC97 006\n         SPACE\n*--------------------------------------------------------------------*\n*        This is now our READ loop as we do a successive READ,\n*        incrementing the RBA number until we reach the BCNUMREC\n*        value saved in 'HIGHVAL'.  Once we have read all the\n*        records, we will go and analyze them.\n*--------------------------------------------------------------------*\n*    BLOCKNO has started with an RBA of X'000000' from the initial   *\n*     READ of the BRODCAST Header record.                            *\n*--------------------------------------------------------------------*\n         SPACE\nREADLOOP DS    0H\n         ICM   R1,7,BLOCKNO        Get RBA processed previously.\n         LA    R1,1(,R1)           Increment by one.\n         STCM  R1,7,BLOCKNO        Store it back for the next READ.\n         CLC   BLOCKNO(3),HIGHVAL+1  Did we reach max?           JDM0\n         BE    ANALYZE             If we've read them all, go analyze.\n         SPACE\n         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK RECECB\n         SPACE\n         L     R2,RECECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,RECECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n*-------------------------------------------------------------\n         MVC   OUTREC(130),OUTZERO  BLANK RECORD FOR NEXT TIME\n         MVC   OUTREC(130),REC130\n         PUT   BRODDUMP,OUTREC\n         AP    DMPCOUNT,=P'1'\n         MVC   OUTREC(130),OUTZERO  BLANK RECORD FOR NEXT TIME\n*-------------------------------------------------------------\n         TM    ALLPRINT,X'01'      Has ALL been coded in the PARM?\n         B     PRINTALL            Yes, bypass filtering and print all.\n         CLI   KEYHOLD,X'FF'       Is this an unused message record?\n         BE    PRNTSKP1            Yes. Don't print it.\n         CLI   KEYHOLD,X'03'       Is this a used message record?\n         BE    PRNTSKP1            Yes. Don't print it.\nPRINTALL DS    0H\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,BLOCKNO        Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         L     R0,NOTETBLA         Pass incore Notify Directory Table\n         ST    R0,8(,R1)           As third parameter\n         LA    R0,0                Zero out register\n         ST    R0,12(,R1)          Fourth parameter is zero, no USERID\n         LA    R0,DDNFLAG\n         MVI   EXECMODE,X'02'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\nPRNTSKP1 DS    0H                  Enter each record's key into table.\n         MVC   0(1,R7),0(R2)       Store key type into table entry.\n         LA    R7,1(,R7)           Increment table entry to next one.\n         SPACE\n*--------------------------------------------------------------------*\n*        Count the different record types for later reporting.\n*--------------------------------------------------------------------*\n         SPACE\n         CLI   0(R2),X'00'         Is this a NOTICE directory record?\n         BNE   CHK1                No. Try the next type.\n         AP    NOTDIR,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK1     DS    0H\n         CLI   0(R2),X'01'         Is this a USERID directory record?\n         BNE   CHK2                No. Try the next type.\n         AP    USRIND,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK2     DS    0H\n         CLI   0(R2),X'02'         Is this a NOTICES message record?\n         BNE   CHK3                No. Try the next type.\n         AP    NOTMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK3     DS    0H\n         CLI   0(R2),X'03'         Is this a USER message record?\n         BNE   CHK4                No. Try the next type.\n         AP    USRMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK4     DS    0H\n         CLI   0(R2),X'05'         Is this the Free Search Record?\n         BNE   CHKFF               No. Try the next type.\n         AP    PTRMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE 1\nCHKFF    DS    0H\n         CLI   0(R2),X'FF'         Inactive unused USER mail Record?\n         BNE   UNKNOWN             No. Try the next type.\n         AP    FREEREC,=P'1'       Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nUNKNOWN  DS    0H                         Format any strange key\n         UNPK  ODDKEY+36(3),0(2,R2)       Print hex\n         TR    ODDKEY+36(2),HEXTAB-X'F0'     to\n         MVI   ODDKEY+38,C' '                   display.\n         LA    R9,ODDKEY                  Point to line to print\n         BAL   R10,PRINT\n         SPACE\nFREEB    DS    0H                  Every READ needs a FREEDBUF.         009\n         FREEDBUF RECECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         B     READLOOP            Read another BRODCAST record.\n         SPACE\n*--------------------------------------------------------------------*\n*        NOW, START TO ANALYZE ALL AND PRINT RESULTS TO THE REPORT.\n*--------------------------------------------------------------------*\n         SPACE\nANALYZE  DS    0H\n*------------------------------------------------------------*\n*--  FIRST PRINT THE JFCB INFORMATION FOR BRODDUMP  ---------*\n*------------------------------------------------------------*\n         MVC   LINE,LINE-1\n         PUT   BRODMAP,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),=C'  BRODDUMP Properties '\n         PUT   BRODMAP,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),=C'  -------- ---------- '\n         PUT   BRODMAP,LINE\n         BAL   R7,PRTJFCB\n         CLOSE BRODDUMP            CLOSE DUMP FILE AFTER\n         ST    R7,SAVER7\n         BAL   R7,DUMPRPT\n         L     R7,SAVER7\n*------------------------------------------------------------*\n*                                  END OF SEQUENTIAL READ\n*------------------------------------------------------------*\n         LA    R9,BREAKOUT         Key breakout information title\n         BAL   R10,PRINT           PUT OUT THE SECTION HEADER\n         SPACE\n         MVC   KEYTYPE,TYPE04      MOVE IN DESCRIPTION           JDM0\n         MVC   KEYCNT,MASK7                                      JDM0\n         ED    KEYCNT,REC04                                      JDM0\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM0\n         BAL   R10,PRINT                                         JDM0\n         SPACE 1                                                 JDM0\n         MVC   KEYTYPE,TYPE00      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK7\n         ED    KEYCNT,NOTDIR\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE02      MOVE IN DESCRITPION\n         MVC   KEYCNT,MASK7\n         ED    KEYCNT,NOTMSG\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE01      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK7\n         ED    KEYCNT,USRIND\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE03      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK7\n         ED    KEYCNT,USRMSG\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE05      MOVE IN DESCRIPTION           JDM1\n         MVC   KEYCNT,MASK7                                      JDM1\n         ED    KEYCNT,PTRMSG                                     JDM1\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM1\n         BAL   R10,PRINT                                         JDM1\n         SPACE 1                                                 JDM1\n         MVC   KEYTYPE,TYPEFF      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK7\n         ED    KEYCNT,FREEREC\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         LA    R9,USERSOUT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n*--------------------------------------------------------------------*\n*     In MVS, there is a change from having 12 Userids per block     *\n*     to 9 per block.                                                *\n*--------------------------------------------------------------------*\n         SPACE\n* ------------------------------------------------------------------- *\nINDEXLP  DS    0H               Loop through Userids and run\n*                               the chains of messages, to see        *\n*                               which Userids have outstanding        *\n*                               messages outstanding, and how many.   *\n* ------------------------------------------------------------------- *\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA\n         SPACE\n         READ  SCNECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK SCNECB\n         SPACE\n         L     R3,SCNECB+12        ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   SAVERBA,USDNEXT     COPY NEXT INDEX RECORD NUMBER\n         SPACE\n*--------------------------------------------------------------------*\n*        YOU WILL GO THROUGH THIS LOOP 9 TIMES, BECAUSE 9 ENTRIES\n*        ARE HELD IN EVERY RECORD.\n*--------------------------------------------------------------------*\n         SPACE\nUSRLOOP  DS    0H\n         MVC   USERID(7),USDID     Copy who this is\n         CLC   USERID(7),ZEROS     Is this a real user?\n         BE    NOMSG               Nope, must have been deleted.\n         AP    USERS,=P'1'         Count how many users.\n         XR    R4,R4               Clear upper byte\n         ICM   R4,7,USDRBA         Get block position\n         BZ    NOMSG               NO.. JUST BUMP\n* --- >    Printing title of user with messages  -  below\n         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?\n         BZ    NOBRDUSP            No. Skip effort to print messages.\n         ST    R6,SAVER6           Save R6\n         L     R6,BRODUDCB         Load DCB address for BRODUSER\n         MVC   LINE,LINE-1\n         MVC   USERIDM(7),USDID\n         HEX   USERISTH,3,USDRBA\n         HEX   USERIENH,3,USDEND\n         MVC   LINE(133),USERIMSG\n         DROP  R3\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         L     R6,SAVER6           Restore R6\nNOBRDUSP DS    0H\n* --- >    Printing title of user with messages  -  above\nALTCODE  DS    0H                                              HD DEC97 013\n         SLR   R5,R5                    CLEAR FOR ADD          HD DEC97 013\n         L     R7,TYPETBLA              GET ADDRESS OF TYPETBL HD DEC97 013\n         LA    R5,0(R7,R4)              POINT TO TABLE ENTRY   HD DEC97 013\n         BCTR  R5,0                     ORIGIN ZERO            HD DEC97 013\n         CLI   0(R5),X'03'         JUST VERIFY WERE WE ARE\n         BE    TABLOK                   THIS IS A VALID ONE    HD DEC97 014\n         LA    R9,TABLERR          POINT TO LINE TO PRINT\n         BAL   R10,PRINT           JUST LET THEM KNOW I'M CONFUSED\n         B     BUMPUSR\n         SPACE\nTABLOK   DS    0H\n         MVI   0(R5),X'88'         SET THAT IT WAS A VALID MESSAGE\nBUMPUSR  DS    0H\n         AP    MSGCOUNT,=P'1'      INCREMENT HOW MANY MESSAGES\n         STCM  R4,7,MSGNUM\n         SPACE\n         READ  MSGECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MSGNUM              RBA TO HOLD THE KEY\n         SPACE\n         CHECK MSGECB\n         SPACE\n         L     R4,MSGECB+20        ADDRESS OF KEY\n         MVC   KEYHOLD(1),0(R4)    Move the key data where we can see\n         L     R4,MSGECB+12        Address of Data\n         MVC   RECHOLD(129),0(R4)  Move the data where it is accessible\n*\n* --- >    Printing message number for this USERID  below\n         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?\n         BZ    NOBRUSMN            No. Skip effort to print messages.\n         ST    R6,SAVER6           Save R6\n         L     R6,BRODUDCB         Load DCB address for BRODUSER\n         MVC   LINE,LINE-1\n         MVC   USERIDX(7),USERID\n         MVC   USERMSNO(6),MASK46\n         ED    USERMSNO(6),MSGCOUNT+1\n         MVC   LINE(133),USERMSNM\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         L     R6,SAVER6           Restore R6\nNOBRUSMN DS    0H\n* --- >    Printing message number for this USERID  above\n*\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,MSGNUM         Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         L     R0,0                Zero for third parameter\n         ST    R0,8(,R1)           Store null third parameter\n         LA    R0,USERID\n         ST    R0,12(,R1)          Fourth parameter is USERID\n         LA    R0,DDNFLAG\n         MVI   EXECMODE,X'04'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\n         USING USMSG,R4\n         ICM   R4,7,USMNEXT        RRN OF NEXT MESSAGE\n         DROP  R4\n         SPACE\n         FREEDBUF MSGECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n*--------------------------------------------------------------------*\n*        TEST TO SEE IF THERE WILL BE ANOTHER RECORD AFTER THIS ONE\n*        IN THE CHAIN.  IF 'USMPTR' IS INDEED ZERO, THEN WE ARE\n*        FINISHED PROCESSING THIS CHAIN AND ARE READY TO DETERMINE\n*        IF WE SHOULD BUILD ENTRY 1, 2, OR 3 SHOWING HOW MANY MSGS\n*        A USER HAS OUTSTANDING.\n*--------------------------------------------------------------------*\n         SPACE\n         LTR   R4,R4\n         BNZ   ALTCODE\n         AP    RECCNT,=P'1'\n         CP    RECCNT,=P'2'        TEST MID RANGE\n         BL    LINE1               LOWER\n         BH    LINE3               HIGHER\n         BE    LINE2               .MIDRANGE\nLINE1    DS    0H\n         MVC   MSGCNT1,MASK46\n         MVC   USERID1,USERID\n         ED    MSGCNT1,MSGCOUNT+1\n         B     ZAPCNT\n         SPACE\nLINE2    DS    0H\n         MVC   MSGCNT2,MASK46\n         MVC   USERID2,USERID\n         ED    MSGCNT2,MSGCOUNT+1\n         B     ZAPCNT\n         SPACE\nLINE3    DS    0H\n         MVC   MSGCNT3,MASK46\n         MVC   USERID3,USERID\n         ED    MSGCNT3,MSGCOUNT+1\n         LA    R9,USERLINE\n         BAL   R10,PRINT\n         MVC   MSGCNT1,=CL6' '\n         MVC   MSGCNT2,=CL6' '\n         MVC   MSGCNT3,=CL6' '\n         MVC   USERID2,=CL7' '\n         MVC   USERID3,=CL7' '\n         ZAP   RECCNT,=P'0'\nZAPCNT   DS    0H\n         ZAP   MSGCOUNT,=P'0'\nNOMSG    DS    0H\n         LA    R3,13(R3)           BUMP TO NEXT ENTRY\n         BCT   R6,USRLOOP          REPEAT FOR NINE TIMES\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF INNER LOOP\n*--------------------------------------------------------------------*\n         SPACE\n         FREEDBUF SCNECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         CLC   SAVERBA,=3X'00'     IS THIS LAST\n         BNE   INDEXLP             GO DO NEXT ONE\n         CP    RECCNT,=P'0'\n         BE    PUTUCNT\n         LA    R9,USERLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\nPUTUCNT  DS    0H\n         MVC   USERCNT,MASK7\n         ED    USERCNT,USERS       HOW MANY USERS ARE THERE\n         LA    R9,UTOTLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         L     R7,TYPETBLA              ONCE MORE THRU TYPETAB HD DEC97 018\nVERFLOOP DS    0H\n         CLI   0(R7),X'99'         END YET?\n         BE    ENDVERF\n         CLI   0(R7),X'03'         IS THIS STILL AN 03\n         LA    R7,1(R7)            BUMP EITHER WAY\n         BNE   VERFLOOP\n         AP    UNUSABL,=P'1'\n         B     VERFLOOP\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF OUTER LOOP\n*--------------------------------------------------------------------*\n         SPACE\nENDVERF  DS    0H\n         MVC   UNUSDCNT,MASK4\n         ED    UNUSDCNT,UNUSABL+1\n         LA    R9,JUNKLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         LA    R9,JUNKLIN2         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         LA    R9,JUNKLIN3         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n*--------------------------------------------------------------------*\n*        TIME TO CLOSE AND END THE PROGRAM, BYE.\n*--------------------------------------------------------------------*\n         SPACE\nCLOSE    DS    0H\n         CLOSE BRODCAST\n         CLOSE BRODMAP\n         TM    DDNFLAG,X'01'      Is BRODPRNT DDNAME present?\n         BZ    NCBRDPRT\n         ST    R6,SAVER6\n         L     R6,BRODPDCB\n         CLOSE ((6))\n         L     R6,SAVER6\nNCBRDPRT DS    0H\n         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?\n         BZ    NCBRDUSR\n         ST    R6,SAVER6\n         L     R6,BRODUDCB\n         CLOSE ((6))\n         L     R6,SAVER6\nNCBRDUSR DS    0H\n         B     FREENOTE\nCLOSFAST DS    0H\n         CLOSE BRODCAST\n         CLOSE BRODMAP\n         LA    R5,8\n         B     GETBACK\nFREENOTE DS    0H                                                       020\n         L     R1,NOTETBLA              Address of Table                020\n         L     R0,NOTGTSIZ              Length of Table                 020\n         FREEMAIN RU,LV=(0),A=(1)       Free Note Directory Table       020\nFREETYP  DS    0H                                              HD DEC97 020\n         L     R1,TYPETBLA              ADDRESS OF TABLE       HD DEC97 020\n         LH    R0,HIGHVAL               LENGTH OF TABLE        HD DEC97 020\n         AH    R0,=H'1'                 INCREMENT BY ONE       HD DEC97 020\n         FREEMAIN RU,LV=(0),A=(1)       FREE TYPE TABLE        HD DEC97 020\n         LA    R5,0\nGETBACK  DS    0H\n         L     R13,SAVE+4\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                      Return to caller.\n         SPACE\n*--------------------------------------------------------------------*\n*        PRINT OUTPUT SUBROUTINE.\n*--------------------------------------------------------------------*\n         SPACE\nPRINT    DS    0H\n         PUT   BRODMAP,(R9)        WRITE FROM AREA ADDRESS IN R9\n         BR    R10                 RETURN TO WHENCE WE CAME\n         SPACE\n*--------------------------------------------------------------------*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTJFCB  DS    0H                         Print JFCB info for BDMUSIN\n         ST    R7,SAVER7A                 Save the BAL register\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGDSN\n         MVC   LINE+19(44),JFCBDSNM       DSNAME\n         PUT   BRODMAP,LINE\nNOPRTU01 DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGMBR\n         MVC   LINE+19(8),JFCBELNM        MEMBER NAME\n         PUT   BRODMAP,LINE\nNOPRTU02 DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGVOLSR              VOLSER\n         MVC   LINE+19(6),JFCBVOLS\n         MVC   LINE+26(6),JFCBVOLS+6\n         MVC   LINE+33(6),JFCBVOLS+12\n         MVC   LINE+40(6),JFCBVOLS+18\n         MVC   LINE+47(6),JFCBVOLS+24\n         PUT   BRODMAP,LINE\nNOPRTU03 DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGDSORG              DSORG\n         MVC   LINE+19(3),=C'IS '\n         CLI   JFCDSRG1,JFCORGIS\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'ISU'\n         CLI   JFCDSRG1,JFCORGIS+JFCORGU\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'PS '\n         CLI   JFCDSRG1,JFCORGPS\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'PSU'\n         CLI   JFCDSRG1,JFCORGPS+JFCORGU\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'DA '\n         CLI   JFCDSRG1,JFCORGDA\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'DAU'\n         CLI   JFCDSRG1,JFCORGDA+JFCORGU\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'PO '\n         CLI   JFCDSRG1,JFCORGPO\n         BE    PUTDSRG\n         MVC   LINE+19(3),=C'POU'\n         CLI   JFCDSRG1,JFCORGPO+JFCORGU\n         BE    PUTDSRG\n         OI    FLAG1,X'01'                FLAG DSORG MISSING\n         MVC   LINE+19(15),=C'MISSING OR VSAM'\nPUTDSRG  PUT   BRODMAP,LINE\nRECFM    DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGRECFM              RECFM\n         LA    R4,LINE+19\n         TM    JFCRECFM,JFCUND\n         BNO   NOTUND\n         MVI   0(R4),C'U'\n         OI    FLAG2,X'01'                FLAG RECFM=U\n         A     R4,ONE\n         B     CHKB\nNOTUND   TM    JFCRECFM,JFCFIX\n         BNO   NOTFIX\n         MVI   0(R4),C'F'\n         A     R4,ONE\nNOTFIX   TM    JFCRECFM,JFCVAR\n         BNO   CHKB\n         MVI   0(R4),C'V'\n         A     R4,ONE\nCHKB     TM    JFCRECFM,JFCRFB\n         BNO   NOTBLK\n         MVI   0(R4),C'B'\n         A     R4,ONE\nNOTBLK   TM    JFCRECFM,JFCRFS\n         BNO   NOTSCN\n         MVI   0(R4),C'S'\n         A     R4,ONE\nNOTSCN   TM    JFCRECFM,JFCASA\n         BNO   NOTASA\n         MVI   0(R4),C'A'\n         A     R4,ONE\nNOTASA   TM    JFCRECFM,JFCMAC\n         BNO   PUTRCFM\n         MVI   0(R4),C'M'\nPUTRCFM  PUT   BRODMAP,LINE\nLRECL    DS    0H\n         MVC   LINE,LINE-1                Clear line.\n         MVC   LINE,MSGLRECL              Put LRECL skeleton into it.\n         SR    R4,R4                      Clear work register\n         LH    R4,JFCLRECL                Load LRECL in from JFCB\n         C     R4,=F'0'                   Is it zero?\n         BNE   LRECPRT                    No. Don't check for RECFM=U.\n         TM    FLAG2,X'01'                Is RECFM=U?\n         BO    LRECPRT                    Yes-0 is legitimate.\n         OI    FLAG1,X'04'\n         MVC   LINE+19(7),=C'MISSING'\n         B     LRECPUT\nLRECPRT  DS    0H\n         CVD   R4,DECVALUE\n         MVC   LINE+19(10),MASK10         LRECL\n         ED    LINE+19(10),DECVALUE+3\nLRECPUT  PUT   BRODMAP,LINE\nBLKSIZE  MVC   LINE,LINE-1\n         MVC   LINE,MSGBLKSZ\n         SR    R4,R4\n         LH    R4,JFCBLKSI\n         C     R4,=F'0'\n         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD\n         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING\n         MVC   LINE+19(15),=C'ZERO OR MISSING'\n         B     BLKSZPUT\nBLKSIZEG CVD   R4,DECVALUE\n         MVC   LINE+19(10),MASK10         BLKSIZE\n         ED    LINE+19(10),DECVALUE+3\nBLKSZPUT PUT   BRODMAP,LINE\n         L     R7,SAVER7A\n         BR    R7\n* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n*--------------------------------------------------------------------*\n*        DATA CONTROL BLOCKS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=RISC,         3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE\nBRODMAP  DCB   DDNAME=BRODMAP,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\nBRODDUMP DCB   DSORG=PS,DDNAME=BRODDUMP,MACRF=PM,                      X\n               LRECL=130,RECFM=FB,EXLST=JFCB1\n         SPACE\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA AREAS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nCVDAREA  DS    D\nSAVE     DC    18F'0'\nTYPETBLA DS    F       Address of GETMAINED Type Table         HD\nNOTETBLA DS    F       Address of GETMAINED Notice Directory Table\nNOTGTSIZ DS    F\nCURNOTBL DS    F       Address of beginning of data in Note dir table\nHIGHVAL  DS    F\nSAVHDADR DS    F                   SAVE HEADER ADDRESS         SG MAY99\nBDMPRPGM DS    F                   BDMPRINT entry point\nBRODPDCB DS    F                   BRODPRNT DCB in BDMPRINT program\nBRODUDCB DS    F                   BRODUSER DCB in BDMPRINT program\nSAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build\nSAVER1   DS    F                   Save Register 1\nSAVER3   DS    F                   Save Register 3\nSAVER5   DS    F                   Save Register 5\nSAVER6   DS    F                   Preserve R6 during BRODPRNT handling\nSAVER7   DS    F                   Preserve R7 for BAL\nSAVER7A  DS    F                   Preserve R7 for BAL\nSAVER10  DS    F                   Save Register 10\nSAVEREGA DC    F'0'\nPARMSAVE DS    F                   Save passed PARM address if any\nSAV14TO2 DC    6F'0'\nSAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX\nNOTEDRBA DS    CL3                 Save RBA of Notify Directory f/headr\nFRSRCRBA DS    CL3                 Save RBA of Free Search Rcd f/header\nNUMNOTCS DS    CL2                 Number of Notices slots in BRODCAST\n         DC    C' '                Initialized at beginning of program\nBLANKS   DS    0CL133\nBLANK44  DC    CL44' '             General Blanks if needed\n         DC    CL89' '\nPWKAREA  DC    CL3' '              For uppercasing the PARM\nALLPRINT DC    X'00'\nDDNFLAG  DC    X'00'               Results of TIOT scan\n*              X'01'               BRODPRNT DD is coded in JCL\n*              X'02'               BRODUSER DD is coded in JCL\n*              X'04'               SYSIN    DD is coded in JCL\nEXECMODE DC    X'00'               Execution mode of BDMPRINT program\n*              X'01'               Header Record only\n*              X'02'               Notice Messages Directory Mode\n*              X'04'               BRODUSER mode\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DC    XL1'00'             Key slot\nRECHOLD  DC    XL129'00'           Data slot\nINCORGEN DS    F\nZEROS    DC    XL7'00'             Zero Userid Entry\n*EXTAB   DC    CL16'0123456789ABCDEF'\n         DS    0F\nBLOCKNO  DC    X'000000'           BLOCK NUMBERS\nMSGNUM   DS    CL3                 SAVE LOCAL OF USER INDEX\nMASK3    DC    XL3'202120'\nMASK4    DC    XL4'40202120'\nMASK46   DC    XL6'402020202120'\nMASK7    DC    XL7'4020206B202120'\nRECCNT   DC    PL1'0'\nMSGCOUNT DC    PL4'0'\nDMPCOUNT DC    PL4'0'\nRECCOUNT DC    PL4'0'\nNOTDIR   DC    PL3'0'              CT FOR NOTICE DIRECTORY RECS\nUSRIND   DC    PL3'0'              CT FOR USER MAIL DIRECTORY RECS\nNOTMSG   DC    PL3'0'              CT FOR NOTICE MSG RECS\nUSRMSG   DC    PL3'0'              CT FOR USER MAIL MSG RECS\nPTRMSG   DC    PL3'0'              CT FOR POINTER REC (ALWAYS 1) JDM1\nREC04    DC    PL3'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0\nFREEREC  DC    PL3'0'              CT FOR INACTIVE MAIL MSG RECS\nUNUSABL  DC    PL3'0'\nUSERS    DC    PL3'0'\nACTNOT   DC    PL3'0'              Number of active Notify messages\nINANOT   DC    PL3'0'              Number of inactive Nofify messages\nNOTRBA   DC    X'000000'           Current Notice RBA\nNOTNUM   DC    X'0000'             Current Notice Number\nHINRBA   DC    X'000000'           Hi Notices RBA\nLONRBA   DC    X'000000'           Lo Notices RBA\nTYPE00   DC    CL50'Number of BRODCAST \"Notices\" Directory Records'\nTYPE01   DC    CL50'Number of USER \"Mail\" Directory Records'\nTYPE02   DC    CL50'Number of BRODCAST \"Notices\" Message Records'\nTYPE03   DC    CL50'Number of USER \"Mail\" Message Records'\nTYPE04   DC    CL50'Count  of BRODCAST Header Record (Should be 1)'\nTYPE05   DC    CL50'Count  of Free Search Record (Should be 1)'\nTYPEFF   DC    CL50'Number of Empty USER \"Mail\" Record Slots'\nODDKEY   DC    CL133'  ** Unknown Key Type Encountered :    **'\nTABLERR  DC    CL133'  ** Keys have been updated during this run **'\nBREAKOUT DC    CL133'0< Record counts from the BRODCAST Keys       >'\nNOTFYOUT DC    CL133'0< Statistics about Global \"Notices\" Messages >'\nUSERSOUT DC    CL133'0< The Following Users Have Messages Waiting  >'\nNDCREERR DC    CL133'   Notify Directory Table Read Error  -  1'\nMSGDSN   DC    CL133'         DSNAME  ='\nMSGVOLSR DC    CL133'         VOLSER  ='\nMSGMBR   DC    CL133'         MEMBER  ='\nMSGDSORG DC    CL133'         DSORG   ='\nMSGBLKSZ DC    CL133'         BLKSIZE ='\nMSGLRECL DC    CL133'         LRECL   ='\nMSGRECFM DC    CL133'         RECFM   ='\n*\nUSERID   DS    CL7\nFLAG1    DC    X'00'\n*              X'01'               DSORG IS MISSING\nFLAG2    DC    X'00'\nONE      DC    F'1'\nDECVALUE DS    CL8\nMASK10   DC    XL10'40202020202020202120'\n         SPACE\n*--------------------------------------------------------------------*\n*--              M E S S A G E   L A Y O U T S                     --*\n*--------------------------------------------------------------------*\n         SPACE\nUSERIMSG DS    0CL133\n         DC    CL8'-   *** '\nUSERITXT DC    CL31'Chain of Messages for USERID:  '\nUSERIDM  DC    CL7'       '\n         DC    CL5'  -- '\n         DC    CL8' Start: '\nUSERISTH DC    CL7'       '\n         DC    CL6' End: '\nUSERIENH DC    CL7'       '\n         DC    CL54' '\n         SPACE\n*--------------------------------------------------------------------*\nUSERMSNM DS    0CL133\n         DC    CL1' '\nUSERMTXT DC    CL15'Message Number '\nUSERMSNO DC    CL7'       '\n         DC    CL14' for Userid:  '\nUSERIDX  DC    CL7'       '\n         DC    CL89' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nACTNOMSG DS    0CL133\n         DC    CL10' '\nACTNMSG  DC    CL50'Number of Active BRODCAST Notices Messages    '\nACTNNUM  DC    CL7'       '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nINANOMSG DS    0CL133\n         DC    CL10' '\nINANMSG  DC    CL50'Number of Inactive BRODCAST Notices Messages  '\nINANNUM  DC    CL7'       '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nKEYCOUNT DS    0CL133\n         DC    CL10' '\nKEYTYPE  DC    CL50'Header Records'\nKEYCNT   DC    CL7'      1'\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nMAXIMUM  DS    0CL133\n         DC    CL60'0Total Available Blocks in Dataset'\nMAXCNT   DS    CL7\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nNOTICES  DS    0CL133\n         DC    CL63' Blocks Required for Notify Service (Directory+MessX\n               ages)'\nNOTCNT   DS    CL4\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUSERLINE DS    0CL133\n         DC    CL10' '\nUSERID1  DS    CL7\n         DC    CL3' '\nMSGCNT1  DS    CL6\n         DC    CL10' '\nUSERID2  DS    CL7\n         DC    CL3' '\nMSGCNT2  DS    CL6\n         DC    CL10' '\nUSERID3  DS    CL7\n         DC    CL3' '\nMSGCNT3  DS    CL6\n         DC    CL55' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUTOTLINE DS    0CL133\n         DC    CL60' Number of TSO Users Defined in this BRODCAST datasX\n               et:'\nUSERCNT  DS    CL7\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Summary Report  '\n         DC    C' ---'\n         DC    CL68' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL43'&PGMNAME   ---   BRODCAST Dataset - Record '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL60' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTUL02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL42'&PGMNAME   ---   BRODCAST Userid Messages '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL61' '\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLINE DS    0CL133\n         DC    CL63'0Blocks found to be Orphaned (not connected to a UsX\n               erid):'\nUNUSDCNT DC    CL4' '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN2 DS    0CL133\n         DC    CL65' (Use the BDMDIAG TSO command to display and/or del-\n               ete these.)'\n         DC    CL2' '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN3 DS    0CL133\n         DC    CL75' (BDMDIAG REPORT reports orphaned blocks, and BDMDI-\n               AG DELBAD deletes them.)'\n         DC    CL2' '\n         DC    CL56' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDUMPRPT1 DS    0CL133\n         DC    CL1'0'\n         DC    CL4'  ||'\n         DC    CL62'   BRODCAST Records have been Dumped to the BRODDUM-\n               P dataset  '\n         DC    CL2' '\n         DC    CL4'  ||'\n         DC    CL64' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDUMPRPT2 DS    0CL133\n         DC    CL1' '\n         DC    CL4'  ||'\n         DC    CL33'   Number of Records Dumped:    '\n         DC    CL4' '\nDUMCOUNT DC    CL7'       '\n         DC    CL20' '\n         DC    CL4'  ||'\n         DC    CL64' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDUMPRPT3 DS    0CL133\n         DC    CL1' '\n         DC    CL4'  ||'\n         DC    CL35'   Dump Successfully Completed ...'\n         DC    CL29' '\n         DC    CL4'  ||'\n         DC    CL64' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDUMPERR1 DS    0CL133\n         DC    CL1' '\n         DC    CL4'  ||'\n         DC    CL43'   Dump Error.  Please correct and rerun ! '\n         DC    CL21' '\n         DC    CL4'  ||'\n         DC    CL64' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nNODUMPDD DS    0CL133\n         DC    CL49'0   DD name of BRODDUMP is required in the JCL...'\n         DC    CL84' '\n         SPACE\n*--------------------------------------------------------------------*\nOUTZERO  DC    XL130'00'          ZERO RECORD\nOUTREC   DS    0CL130             DUMP RECORD\nOUTKEY   DC    XL1'00'            KEY SLOT\nOUTDATA  DC    XL129'00'          DATA SLOT\nPRMPRINT DS    0F\nPRMDRCNO DS    F                   RBA number of record in BRODCAST\nPRMDRCAD DS    F                   Address of 130-byte record to be\n*                                   printed and optionally formatted.\nPRMNDTBL DS    F                   Pointer to incore Notices Directory\n*                                   Table, zero if it isn't there.\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\nLINET    EQU   LINE+7\n*--------------------------------------------------------------------*\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\n*                                   Report Number of Records Dumped\n*                                    to BRODDUMP dataset.\nDUMPRPT  DS    0H\n         PUT   BRODMAP,BLANKS       Print a line of blanks\n         PUT   BRODMAP,DUMPRPT1     First line of dump report\n         MVC   DUMCOUNT,MASK7       Move mask.\n         ED    DUMCOUNT,DMPCOUNT+1  Edit dumped records count.\n         PUT   BRODMAP,DUMPRPT2     Second line of dump report.\n         CLC   RECCOUNT,DMPCOUNT    Compare if all records were dumped.\n         BNE   DMPERRO1             Not right. Put error message.\n         PUT   BRODMAP,DUMPRPT3     Correct. Put success message.\n         B     DUMPRPTE             Blank line and exit.\nDMPERRO1 DS    0H\n         PUT   BRODMAP,DUMPERR1     Put error message\nDUMPRPTE DS    0H\n         PUT   BRODMAP,BLANKS       Put blank line\n         BR    R7                   Return to caller\n*--------------------------------------------------------------------*\n         SPACE\n         EJECT\n*----------------------------------------------------------------*\n*        THE FOLLOWING IS TAKEN FROM AN OLD MVS MANUAL CALLED\n*        \"OS/VS2 MVS CONVERSION NOTEBOOK\" (GC28-0689-6) AND\n*        CONTAINS THE FOLLOWING REFERENCE TO HOW THE BROADCAST\n*        HAS CHANGED FROM OS/MVT AND SVS TO MVS:\n*\n*        'MODIFIED TO INCLUDE A CHANGE LEVEL INDICATOR IN THE\n*        HEADER RECORD AND A NEW FIELD FOR EACH USER ID IN THE\n*        MAIL DIRECTORY RECORDS. THIS FIELD CONTAINS THE\n*        ADDRESS OF THE LAST MESSAGE IN THE CHAIN OF MESSAGES\n*        ASSOCIATED WITH EACH NEW USER.'\n*\n*        NOTE: UNTIL I CAN DUMP RECORDS AND FIGURE OUT WHERE THE\n*              ABOVE STATEMENTS FIT INTO THE DSECTS BELOW, WILL\n*              LET IT TO THE READER TO HELP AND GET IT FIGURED\n*              OUT BEFORE I DO.\n*\n*----------------------------------------------------------------*\n         SPACE\n         IEZBITS\n         SPACE\n         IKJZT301 DSECT=YES\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n         END\nBDMPRINT TITLE 'PRINT AND FORMAT RECORDS FROM THE BRODCAST DATASET'\n*------------------------------------------------------------------*\n*\n*          B D M P R I N T                      VERSION  1.4.0B\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program hex prints records from the BRODCAST dataset.\n*        It also formats the record, according to record type,\n*        after the record has been hex printed out.\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*\n*        X'00'     BRODCAST 'NOTICES' DIRECTORY RECORD.\n*\n*        X'01'     USER 'MAIL' DIRECTORY RECORD.\n*\n*        X'02'     BROADCAST 'NOTICES' MESSAGE RECORD.\n*\n*        X'03'     USER 'MAIL' MESSAGE RECORD.\n*\n*        X'04'     FIRST RECORD OF BRODCAST DATA SET.\n*\n*        X'05'     RBA ADDRESS OF FIRST DUMMY RECORD AVAILABLE.\n*\n*        X'FF'     DUMMY INACTIVE 'MAIL' MESSAGE RECORD.\n*\n*                  (Note for X'FF' record types...)\n*                   The first \"record byte\" has to be the\n*                   record number in the track.  In other\n*                   words, it has to be the R from the\n*                   CCHHR or TTR of the particular block.\n*                   If the first byte of an unused message\n*                   record does not have this value, all\n*                   hell breaks loose.  Therefore, when\n*                   copying the BRODCAST dataset between\n*                   two different DASD device types, this\n*                   value has to be reset, otherwise the\n*                   whole dataset can't do its thing.\n*\n*------------------------------------------------------------------*\n*\n*        This program is invoked as a subroutine.\n*\n*------------------------------------------------------------------*\n*\n* CHANGE LOG:\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1            RESERVED\nR1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE\n*                               NOTICE TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT303   &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                   Work, system\nR1       EQU   1                   Address of PARM list\nR2       EQU   2\nR3       EQU   3                   USING for DSECTs\nR4       EQU   4                   Work, BAL Register for HEX routine\nR5       EQU   5                   Work\nR6       EQU   6                   Work\nR7       EQU   7                   BAL Register, usually\nR8       EQU   8                   Work - BCT\nR9       EQU   9                   Fourth Base Register\nR10      EQU   10                  Third Base Register\nR11      EQU   11                  Second Base Register\nR12      EQU   12                  First Base Register\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMPRINT'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)     Save Registers\n         LR    R5,R1               Save PARM address\n         LR    R12,R15             LOAD ENTRY ADDRESS\n         USING BDMPRINT,R12,R11,R10,R9  Establish Addressability\n         LA    R11,4095(,R12)           4 base registers\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R9,4095(,R10)\n         LA    R9,1(,R9)\n         LR    R15,R13             Save his save address\n         LA    R13,SAVE            Get our save area address\n         ST    R15,SAVE+4          Save off into low savearea\n         ST    R13,8(,R15)         Chain mine back to his\n         LR    R1,R5               Get PARM address\n         ST    R1,SAVPARMS         And save it.\n         USING PRMDSECT,R5\n         MVI   DDNFLAG,X'00'\n         MVI   NTHRDFLG,X'00'      Initialize third parm flag to zero\n         MVI   ACTNTFLG,X'00'      Initialize Active Notice flag\n         L     R1,0(,R5)           Get hex RBA number from parm\n         ST    R1,SAVRNHEX         And save it to the program\n         L     R1,4(,R5)           Get 130-bytes of record\n         MVC   REC130A(130),0(R1)  And save it so we can see it\n         L     R1,8(,R5)           Look at third parm address\n         LTR   R1,R1               Is it zero?\n         BNZ   HASTHIRD            No. Don't flag that it's missing.\n         MVI   NTHRDFLG,X'01'      Yes. Flag third parm as missing.\nHASTHIRD DS    0H                  ND Table exists\n         ST    R1,NOTETBLB         Load Notify Directory Table address\n         L     R1,12(,R5)\n         LTR   R1,R1\n         BZ    NOTFORTH\n         MVC   USERID1(7),0(R1)\n         MVI   USERFLAG,X'01'\nNOTFORTH DS    0H\n         L     R1,16(,R5)\n         MVC   DDNFLAG(1),0(R1)\n         MVC   EXECMODE(1),1(R1)\n         DROP  R5\n* -------------------------------------------------------- *\n         TM    USERFLAG,X'01'\n         BO    PRNTUSER\nPRNTSTRT DS    0H\n         MVI   LINE-1,X'40'        Initialize with\n         MVI   HEXPRTWK-1,X'40'       blanks\n         L     R1,SAVPARMS         Get address of the PARMs back\n         L     R5,0(,R1)           Get RBA number\n         CVD   R5,DWORK            Convert it to decimal\n         MVC   RECRDDEC,MASK7A     Move in the mask\n         ED    RECRDDEC,DWORK+5    Edit the number in\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT003\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         MVC   LINE(133),RECRDMSG  Print record number in decimal\n         PUT   BRODPRNT,LINE\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in\n         MVC   LINE(133),RECRDMHX     Move it to print message for hex.\n         PUT   BRODPRNT,LINE\n* --------------------------------------------------------- *            04690\nHEXPRINT DS    0H                  Hex Print from Tape Data (INAREA)     04691\n         ST    R5,R5HXPRT          Save register.                        04695\n         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696\n         USING TRTCSECT,R5                                               04697\n*                                                                        04702\nHEXPRNXX DS    0H                                                        04715\n         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717\nMOVESIZ1 DS    0H                                                        04720\n         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721\n         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723\n         EX    R2,MOVRULER         PUT IN HEX RULER                      04724\n         PUT   BRODPRNT,LINE                                             04725\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726\n         EX    R2,MOVDATIN         Move the data in.                     04729\n         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740\n         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741\n         PUT   BRODPRNT,LINE                                             04742\n         EX    R2,MOVDATIN         Move the data back in.                04745\n         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749\n         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750\n         PUT   BRODPRNT,LINE                                             04751\n         EX    R2,MOVDATIN         Move the data back in.                04754\n         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758\n         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759\n         PUT   BRODPRNT,LINE                                             04760\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODPRNT,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   below\n         ST    R7,SAVRG7\n         BAL   R7,FORMATRC\n         L     R7,SAVRG7\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODPRNT,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   above\nNOPRT003 DS    0H\n         B     HEXPREND                                                  04762\n*\nPRNTUSER DS    0H\n         TM    DDNFLAG,X'02'\n         BZ    NOUSR004\n         MVI   LINE-1,X'40'        Initialize with\n         MVI   HEXPRTWK-1,X'40'       blanks\n         L     R1,SAVPARMS         Get address of the PARMs back\n         L     R5,0(,R1)           Get RBA number\n         CVD   R5,DWORK            Convert it to decimal\n         MVC   RECRDDEC,MASK7A     Move in the mask\n         ED    RECRDDEC,DWORK+5    Edit the number in\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         MVC   LINE(133),RECRDMSG  Print record number in decimal\n         PUT   BRODUSER,LINE\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in\n         MVC   LINE(133),RECRDMHX     Move it to print message for hex.\n         PUT   BRODUSER,LINE\n* --------------------------------------------------------- *            04690\nHEXPRUSR DS    0H                  Hex Print from Tape Data (INAREA)     04691\n         ST    R5,R5HXPRT          Save register.                        04695\n         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696\n         USING TRTCSECT,R5                                               04697\n*                                                                        04702\nHEXPRUXX DS    0H                                                        04715\n         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717\nMOVESIZ2 DS    0H                                                        04720\n         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721\n         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723\n         EX    R2,MOVRULER         PUT IN HEX RULER                      04724\n         PUT   BRODUSER,LINE                                             04725\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726\n         EX    R2,MOVDATIN         Move the data in.                     04729\n         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740\n         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741\n         PUT   BRODUSER,LINE                                             04742\n         EX    R2,MOVDATIN         Move the data back in.                04745\n         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749\n         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750\n         PUT   BRODUSER,LINE                                             04751\n         EX    R2,MOVDATIN         Move the data back in.                04754\n         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758\n         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759\n         PUT   BRODUSER,LINE                                             04760\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODUSER,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   below\n         ST    R7,SAVRG7\n         BAL   R7,FORMATRC\n         L     R7,SAVRG7\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODUSER,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   above\nNOUSR004 DS    0H\n         B     HEXPREND                                                  04762\nMOVDATIN MVC   HEXPRTWK(*-*),REC130A      ***  EXECUTED  ***             04764\nMOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04765\nMOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04766\nTRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04768\nTRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04769\nTRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04770\nR5HXPRT  DC    F'0'\n         DC    C' '                                                      05250\nHEXPRTWK DC    CL133' '                                                  05249\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\nHEXPREND DS    0H                                                        04771\n         L     R5,R5HXPRT                                                04774\n         DROP  R5                                                        04775\nRETURN   DS    0H                                                        04194\n         L     R13,4(,R13)                                               04214\n         MVC   16(4,R13),=F'0'          Return code 0     in R15         04215\n         LM    R14,R12,12(R13)                                           04217\n         BR    R14                                                       04218\n* --------------------------------------------------------- *            04777\n         LTORG\n         ENTRY BRODPRNT                                                  05425\nBRODPRNT DCB   MACRF=PM,DDNAME=BRODPRNT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\n         ENTRY BRODUSER                                                  05425\nBRODUSER DCB   MACRF=PM,DDNAME=BRODUSER,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\nSAVE     DS    9D\nDWORK    DC    D'0'\nSAVPARMS DC    F'0'\nSAVRECNO DC    F'0'\nSAVRECAD DC    F'0'\nSAVRG0   DC    F'0'\nSAVRG3   DC    F'0'\nSAVRG4   DC    F'0'\nSAVRG4A  DC    F'0'\nSAVRG6   DC    F'0'\nSAVRG7   DC    F'0'\nSAVRG7A  DC    F'0'\nSAVRG7B  DC    F'0'\nSAVRG7C  DC    F'0'\nSAVRG7SB DC    F'0'\nNOTETBLB DC    F'0'\nNTHRDFLG DC    X'00'\nUSERFLAG DC    X'00'\nACTNTFLG DC    X'00'\n*\nDDNFLAG  DC    X'00'               Keep these two\nEXECMODE DC    X'00'                 together......\n*\nUSERID1  DC    CL7' '\nNOTFMACT DC    CL8' ACTIVE '\nNOTFMINA DC    CL8'inactive'\nSAVRNHEX DC    F'0'\nMASK7A   DC    XL7'40202020212020'\nCURNDRBA DC    X'000000'           Current Notice RBA\nCURNDNUM DC    X'0000'             Current Notice Number\nNDNUMWRK DC    X'0000'             Work area for hi bit of notice numbr\nNDRBAWRK DC    X'000000'           Work area to hold notice RBA\n\n         DC    X'00'\nREC130A  DC    130X'00'\nRULERHEX DS    0CL130                                                    05255\n         DC    C'K----+----1----+----2----+----3----+----4----+----5--'  05256\n         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  05257\n         DC    C'----1----+----2----+----3----+----4'                    05258\nRECRDMSG DS    0CL133\n         DC    C' '\n         DC    C'Relative Record Number in Decimal:  '\nRECRDDEC DC    CL7' '\n         DC    CL89' '\nRECRDMHX DS    0CL133\n         DC    C' '\n         DC    C'Relative Record Number in Hex:      '\nRECRDHEX DC    CL7' '\n         DC    CL89' '\n         SPACE\n* --------------------------------------------------------- *            04777\n* --       Record formatting print layout lines          -- *            04777\n* --------------------------------------------------------- *            04777\nFMT00LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL27'Format of BRODCAST Notices '\n         DC    CL27'Directory Record, Key X''00'''\n         DC    CL6' **** '\n         DC    CL61' '\n* --------------------------------------------------------- *            04777\nFMT00LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'RBA of next Notices Directory Record:      '\nFM001HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM001DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT00LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL7'Slot #'\nFM002DS1 DC    CL7'  '\n         DC    CL3' '\n         DC    CL9'Notice # '\nFM002DN1 DC    CL7' '\n         DC    CL5' Hex '\nFM002HN1 DC    CL5' '\n         DC    CL2' '\nFM002AC1 DC    CL8' '\n         DC    CL2' '\n         DC    CL10'Hex RBA:  '\nFM002HR1 DC    CL7' '\n         DC    CL2' '\n         DC    CL14'Decimal RBA:  '\nFM002DR1 DC    CL7' '\n         DC    CL48' '\n* --------------------------------------------------------- *            04777\nFMT01LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL47'Format of BRODCAST Userid Dir Record, Key X''01'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT01LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'RBA of next Userid Directory Record:       '\nFM011HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM011DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT01L1A DS    0CL133\n         DC    CL3' '\n         DC    CL30' '\nFMT01L1S DC    CL7' Start '\n         DC    CL2' '\nFMT01L1E DC    CL7'  End  '\n         DC    CL84' '\n* --------------------------------------------------------- *            04777\nFMT01LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL7'Slot #'\nFM012SL1 DC    CL2'  '\n         DC    CL3' '\n         DC    CL9'Userid:  '\nFM012US1 DC    CL7' '\n         DC    CL2' '\nFM012SH1 DC    CL7' '\n         DC    CL2' '\nFM012EH1 DC    CL7' '\n         DC    CL2' '\n         DC    CL16'Decimal Start:  '\nFM012DS1 DC    CL7' '\n         DC    CL14'Decimal End:  '\nFM012DE1 DC    CL7' '\n         DC    CL38' '\n* --------------------------------------------------------- *            04777\nFMT02LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL48'Format of BRODCAST Notices Msg Record, Key X''02'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT02LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'Length of this Notify Message :            '\nFM021HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM021DEC DC    CL7' '\n         DC    CL53' '\n* --------------------------------------------------------- *            04777\nFMT02LN2 DS    0CL133\n         DC    CL3' '\nFMT22MSG DC    CL25'This NOTIFY record is an '\nFMT22ACT DC    CL8'       '\nFMT22LIT DC    CL10' message. '\n         DC    CL87' '\n* --------------------------------------------------------- *            04777\nFMT02LN3 DS    0CL133\n         DC    CL3' '\n         DC    CL43'This Global Notice is Notice number:       '\nFM023HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM023DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT03LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n        DC    CL49'Format of BRODCAST User Message Record, Key X''03'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT03LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'Length of this User Message :              '\nFM031HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM031DEC DC    CL7' '\n         DC    CL53' '\n* --------------------------------------------------------- *            04777\nFMT03LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL43'RBA of next chained message for this user: '\nFM032HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM032DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT04LN0 DS    0CL133\n         DC    CL8' '\n         DC    CL6' **** '\n         DC    Cl43'Format of BRODCAST Header Record, Key X''04'''\n         DC    CL6' **** '\n         DC    CL70' '\n* --------------------------------------------------------- *            04777\nFMT04LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of First Notices Directory Record :  '\nFM041HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM041DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of First Userid Directory Record  :  '\nFM042HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM042DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN3 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Total Number of Records in BRODCAST   :  '\nFM043HEX DC    CL9' '\n         DC    CL2' '\n         DC    CL16'Decimal Value:  '\nFM043DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN4 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Maximum Record Number for Notices     :  '\nFM044HEX DC    CL5' '\n         DC    CL6' '\n         DC    CL16'Decimal Value:  '\nFM044DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN5 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of Free Search Record             :  '\nFM045HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM045DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN6 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Gen Number for Incore Notices Table   :  '\nFM046HEX DC    CL9' '\n         DC    CL2' '\n         DC    CL16'Decimal Value:  '\nFM046DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT05LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL48'Format of BRODCAST Free Search Record, Key X''05'''\n         DC    CL6' **** '\n         DC    CL67' '\n* --------------------------------------------------------- *            04777\nFMT05LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL33'RBA to start Free Search at:     '\nFM051HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM051DEC DC    CL7' '\n         DC    CL63' '\n* --------------------------------------------------------- *            04777\nFMTFFLN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL47'This is an empty User Message Record, Key X''FF'''\n         DC    CL6' **** '\n         DC    CL68' '\n* --------------------------------------------------------- *            04777\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -    S  U  B  R  O  U  T  I  N  E  S                          - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMATRC DS    0H                    Format BRODCAST Records\n*                                    ------ -------- -------\nFORMCHEK DS    0H\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT005\n         CLI   REC130A,X'00'         Notices directory?\n         BE    FORMAT00              Go process it.\n         CLI   REC130A,X'01'         Userids?\n         BE    FORMAT01              Go process it.\n         CLI   REC130A,X'02'         Notices message?\n         BE    FORMAT02              Go process it.\n         CLI   REC130A,X'03'         User message?\n         BE    FORMAT03              Go process it.\n         CLI   REC130A,X'04'         BRODCAST Header?\n         BE    FORMAT04              Go process it.\n         CLI   REC130A,X'05'         Free Search Record?\n         BE    FORMAT05              Go process it.\n         CLI   REC130A,X'FF'         Blank user message slot?\n         BE    FORMATFF              Go process it.\nNOPRT005 DS    0H\n         B     FORMCHEE              Not normal type. Just end.\nFORMAT00 DS    0H                    NOTICES DIRECTORY RECORD\n         ST    R3,SAVRG3             Save mapping register for DSECT\n         PUT   BRODPRNT,FMT00LN0\n         LA    R3,REC130A+1          Get actual record image\n         USING BCDIR,R3\n         MVC   LINE,LINE-1           Clear line\n         HEX   FM001HEX+1,3,BCDNEXT\n         XR    R6,R6                 Zero work register\n         ICM   R6,7,BCDNEXT          Load it with RBA of next dir recd\n         CVD   R6,DWORK              Convert to decimal\n         MVC   FM001DEC,MASK7A       Move in mask\n         ED    FM001DEC,DWORK+5      Edit value into report field\n         MVC   LINE,FMT00LN1         Prepare line for printing\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1           Clear line for next time\n         ST    R7,SAVRG7C\n         BAL   R7,FORMT00A\n         L     R7,SAVRG7C\n         L     R3,SAVRG3             Restore mapping register\n         DROP  R3\n         B     FORMCHEE\nFORMAT01 DS    0H                    USERIDS DIRECTORY RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT01LN0\n         LA    R3,REC130A+1\n         USING USDIR,R3\n         MVC   LINE,LINE-1\n         HEX   FM011HEX+1,3,USDNEXT\n         XR    R6,R6\n         ICM   R6,7,USDNEXT\n         CVD   R6,DWORK\n         MVC   FM011DEC,MASK7A\n         ED    FM011DEC,DWORK+5\n         MVC   LINE,FMT01LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,FMT01L1A\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         ST    R7,SAVRG7A\n         BAL   R7,FORMT01A\n         L     R7,SAVRG7A\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT02 DS    0H                    NOTICES MESSAGE RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT02LN0\n         LA    R3,REC130A+1\n         USING BCMSG,R3\n         MVC   LINE,LINE-1\n         HEX   FM021HEX+1,1,BCMLNG\n         XR    R6,R6\n         ICM   R6,1,BCMLNG\n         CVD   R6,DWORK\n         MVC   FM021DEC,MASK7A\n         ED    FM021DEC,DWORK+5\n         MVC   LINE,FMT02LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         ST    R7,SAVRG7B\n         BAL   R7,FORMT02A\n         L     R7,SAVRG7B\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT03 DS    0H                    USERID MESSAGE RECORD\n         TM    EXECMODE,X'04'\n         BO    SKIPFMT3\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT03LN0\n         LA    R3,REC130A+1\n         USING USMSG,R3\n         MVC   LINE,LINE-1\n         HEX   FM031HEX+1,1,USMLNG\n         XR    R6,R6\n         ICM   R6,1,USMLNG\n         CVD   R6,DWORK\n         MVC   FM031DEC,MASK7A\n         ED    FM031DEC,DWORK+5\n         MVC   LINE,FMT03LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM032HEX+1,3,USMNEXT\n         XR    R6,R6\n         ICM   R6,7,USMNEXT\n         CVD   R6,DWORK\n         MVC   FM032DEC,MASK7A\n         ED    FM032DEC,DWORK+5\n         MVC   LINE,FMT03LN2\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\nSKIPFMT3 DS    0H\n         B     FORMCHEE\nFORMAT04 DS    0H                    BRODCAST HEADER RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT04LN0\n         LA    R3,REC130A+1\n         USING R1BC,R3\n         MVC   LINE,LINE-1\n         HEX   FM041HEX+1,3,R1BCPTR\n         XR    R6,R6\n         ICM   R6,7,R1BCPTR\n         CVD   R6,DWORK\n         MVC   FM041DEC,MASK7A\n         ED    FM041DEC,DWORK+5\n         MVC   LINE,FMT04LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM042HEX+1,3,R1USPTR\n         XR    R6,R6\n         ICM   R6,7,R1USPTR\n         CVD   R6,DWORK\n         MVC   FM042DEC,MASK7A\n         ED    FM042DEC,DWORK+5\n         MVC   LINE,FMT04LN2\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM043HEX+1,4,R1RECNUM\n         XR    R6,R6\n         ICM   R6,15,R1RECNUM\n         CVD   R6,DWORK\n         MVC   FM043DEC(7),MASK7A\n         ED    FM043DEC(7),DWORK+5\n         MVC   LINE,FMT04LN3\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM044HEX+1,2,R1BCMAX\n         XR    R6,R6\n         ICM   R6,3,R1BCMAX\n         CVD   R6,DWORK\n         MVC   FM044DEC,MASK7A\n         ED    FM044DEC,DWORK+5\n         MVC   LINE,FMT04LN4\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM045HEX+1,3,R1FRESRH\n         XR    R6,R6\n         ICM   R6,7,R1FRESRH\n         CVD   R6,DWORK\n         MVC   FM045DEC,MASK7A\n         ED    FM045DEC,DWORK+5\n         MVC   LINE,FMT04LN5\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM046HEX+1,4,R1GENNUM\n         XR    R6,R6\n         ICM   R6,15,R1GENNUM\n         CVD   R6,DWORK\n         MVC   FM046DEC(7),MASK7A\n         ED    FM046DEC(7),DWORK+5\n         MVC   LINE,FMT04LN6\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT05 DS    0H                    FREE SEARCH RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT05LN0\n         LA    R3,REC130A+1\n         USING FREESRCH,R3\n         MVC   LINE,LINE-1\n         HEX   FM051HEX+1,3,FSEARCH\n         XR    R6,R6\n         ICM   R6,7,FSEARCH\n         CVD   R6,DWORK\n         MVC   FM051DEC,MASK7A\n         ED    FM051DEC,DWORK+5\n         MVC   LINE,FMT05LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMATFF DS    0H                    EMPTY USER MESSAGE RECORD SLOT\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMTFFLN0\n         L     R3,SAVRG3\nFORMCHEE DS    0H\nFORMATEN DS    0H\n         BR    R7\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMT00A DS    0H                    Format one Userid entry at a time.\n         LA    R3,REC130A+1          Point to image of current record.\n         USING BCDIR,R3\n         LA    R8,BCDNENT            BCTR register\n         LA    R0,0                  Register for counting slots.\n         ST    R0,SAVRG0             And initialize to 0.\nFORMT00B DS    0H\n         MVC   LINE,LINE-1           Clear line\n         L     R0,SAVRG0             Load current count\n         A     R0,=F'1'              Add one to it\n         ST    R0,SAVRG0             Save it back.\n         XR    R6,R6                 Clear register for decimal display\n         LR    R6,R0                 Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DS1(7),MASK7A    Load mask into print line\n         ED    FM002DS1(7),DWORK+5   Edit RBA number on top of mask\n         MVC   NDNUMWRK(2),BCDMSGNO  Message number to work area\n         MVC   NDRBAWRK(3),BCDMRBA   RBA number to work area\n         TM    BCDMFLG,BCDNOMSG      Check if this is active notice.\n         BO    F00ACTVT              Flag is on, inactive notice.\n         OI    ACTNTFLG,X'02'        Notice is ACTIVE......\nF00ACTVT DS    0H\n         NI    NDNUMWRK,X'7F'        Purify notice number for display\n         HEX   FM002HN1,2,NDNUMWRK\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,3,NDNUMWRK         Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DN1(7),MASK7A    Load mask into print line\n         ED    FM002DN1(7),DWORK+5   Edit RBA number on top of mask\n         TM    ACTNTFLG,X'02'\n         BZ    F00INACT\n         MVC   FM002AC1(8),=C' Active '\n         B     F00ACTGO\nF00INACT DS    0H\n         MVC   FM002AC1(8),=C'Inactive'\nF00ACTGO DS    0H\n         HEX   FM002HR1,3,NDRBAWRK\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,NDRBAWRK         Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DR1(7),MASK7A    Load mask into print line\n         ED    FM002DR1(7),DWORK+5   Edit RBA number on top of mask\nF00PRINT DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,FMT00LN2\n         PUT   BRODPRNT,LINE\n         MVC   FM002AC1(8),=C'        '\n         NI    ACTNTFLG,X'FD'        Turn off flag\n         LA    R3,5(,R3)             Bump to next entry in directory.\n         BCT   R8,FORMT00B\nFORMT00E DS    0H\n         NI    ACTNTFLG,X'FD'        Turn off flag in all cases.\n         BR    R7                    And go back to the caller.\n         DROP  R3\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMT01A DS    0H                    Format one Userid entry at a time.\n         LA    R3,REC130A+1          Point to image of current record.\n         USING USDENTRY,R3\n         LA    R8,9                  BCTR register\n         LA    R0,0                  Register for counting slots.\n         ST    R0,SAVRG0             And initialize to 0.\nFORMT01B DS    0H\n         MVC   LINE,LINE-1           Clear line\n         L     R0,SAVRG0             Load current count\n         A     R0,=F'1'              Add one to it\n         ST    R0,SAVRG0             Save it back.\n         HEX   FM012SL1,1,SAVRG0+3   Take advantage of max of 9. Hex it\n         MVI   FM012SL1,X'40'        And blank the first hex digit.\nF01REALU DS    0H\n         MVC   FM012US1(7),USDID     Display current userid from entry\n         CLC   FM012US1(7),SEVENZRO  Is this a blank entry?\n         BNE   F01REALV              No. Don't mark as empty.\n         MVC   FM012US1(7),SEVENEMP  Yes. Mark it as empty.\nF01REALV DS    0H\n         HEX   FM012SH1,3,USDRBA     Display beginning RBA in hex\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,USDRBA           Load it with begin RBA\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM012DS1(7),MASK7A    Load mask into print line\n         ED    FM012DS1(7),DWORK+5   Edit RBA number on top of mask\n         HEX   FM012EH1,3,USDEND     Display ending RBA in hex\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,USDEND           Load it with ending RBA\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM012DE1(7),MASK7A    Load mask into print line\n         ED    FM012DE1(7),DWORK+5   Edit RBA number on top of mask\n         MVC   LINE,FMT01LN2         Load completely loaded print line\n         PUT   BRODPRNT,LINE\n         LA    R3,13(,R3)            Bump one userid entry forward\n         BCT   R8,FORMT01B           And do it until the end of record\nFORMT01E DS    0H\n         LA    R3,REC130A+1          Reset R3 before leaving.\n         BR    R7                    And go back to the caller.\n         DROP  R3\n* --------------------------------------------------------- *\nFORMT02A DS    0H                  Determine if Notices message Active,\n*                                   by reading the Incore Notices\n*                                   Directory Table we created before.\n         ST    R7,SAVRG7SB\n         NI    ACTNTFLG,X'FE'\nFT2NOTBL DS    0H                  Read the Incore Notices Directory.\n         L     R7,NOTETBLB         Address of incore Notices directory\n         LTR   R7,R7\n         BZ    FT2NOTBB\n         CLC   =C'NDHDR',0(R7)     Is this the proper header?\n         BNE   FT2NOTBB            No.\nFT2NOTBP DS    0H\n         LA    R7,5(,R7)           Bump past header.\n         CLC   =C'NDTLR',0(R7)     Is this the trailer?\n         BE    FT2NOTBE            Yes. Get out if we're at the end.\n         CLC   =X'0000000000',0(R7)  Is this an empty entry?\n         BE    FT2NOTBP            Yes. Just bump past and try again.\nFT2NOTBC DS    0H\n         MVC   CURNDNUM(2),0(R7)\n         MVC   CURNDRBA(3),2(R7)\n         CLC   CURNDRBA(3),SAVRNHEX+1\n         BNE   FT2NOTBP\nFT2NOTBS DS    0H\n         TM    0(R7),X'80'         Is this an unused entry?\n         BZ    FT2ACTIV            No. Count it as an active entry.\n         B     FT2INACT            Yes. Count it as unused.\nFT2ACTIV DS    0H\n         OI    ACTNTFLG,X'01'\n         MVC   FMT22ACT(8),NOTFMACT\n         B     FT2PRINT\nFT2INACT DS    0H\n         MVC   FMT22ACT(8),NOTFMINA\nFT2PRINT DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,FMT02LN2\n         PUT   BRODPRNT,LINE\n         MVC   FMT22ACT(8),=C'        '\n* -- >  Put processing for Notice number here.\n         TM    ACTNTFLG,X'01'\n         BZ    FT2NOTNA\n         MVC   LINE,LINE-1\n         NI    CURNDNUM,X'7F'\n         HEX   FM023HEX+1,2,CURNDNUM\n         XR    R6,R6\n         ICM   R6,3,CURNDNUM\n         CVD   R6,DWORK\n         MVC   FM023DEC,MASK7A\n         ED    FM023DEC,DWORK+5\n         MVC   LINE,FMT02LN3\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\nFT2NOTNA DS    0H\n         B     FT2NOTBE\n* -- >  Put processing for Notice number here.\nFT2NOTBB DS    0H                  If the header is wrong, come here.\n         MVC   LINE,LINE-1\n         MVC   LINE,=CL133'   Notify Directory Table Read Error  -  2'\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\nFT2NOTBE DS    0H\nFORMT02E DS    0H\n         NI    ACTNTFLG,X'FE'\n         L     R7,SAVRG7SB\n         BR    R7\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         LTORG\nSEVENZRO DC    XL7'00000000000000'\nSEVENEMP DC    CL7'-Empty-'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTRTCSECT CSECT                                                           05486\n* ------------------------------------------------------------------- *  05487\n*   The purpose of these translate tables is to do an ISPF-like       *  05488\n*   hex print on several lines.  TRTBL0 is EBCDIC printables.         *  05489\n* ------------------------------------------------------------------- *  05490\nTRTBL0   DS    0D                                                        05491\n         DC    XL16'40404040404040404040404040404040'                    05492\n         DC    XL16'40404040404040404040404040404040'                    05493\n         DC    XL16'40404040404040404040404040404040'                    05494\n         DC    XL16'40404040404040404040404040404040'                    05495\n         DC    XL16'404040404040404040404A4B4C4D4E4F'                    05496\n         DC    XL16'504040404040404040405A5B5C5D5E5F'                    05497\n         DC    XL16'606140404040404040406A6B6C6D6E6F'                    05498\n         DC    XL16'404040404040404040407A7B7C7D7E7F'                    05499\n         DC    XL16'40818283848586878889404040404040'                    05500\n         DC    XL16'40919293949596979899404040404040'                    05501\n         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    05502\n         DC    XL16'40404040404040404040404040404040'                    05503\n         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    05504\n         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    05505\n         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    05506\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05507\nTRTBL1   DS    0D                                                        05508\n         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    05509\n         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    05510\n         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    05511\n         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    05512\n         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    05513\n         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    05514\n         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    05515\n         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    05516\n         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    05517\n         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    05518\n         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    05519\n         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    05520\n         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    05521\n         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    05522\n         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    05523\n         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    05524\nTRTBL2   DS    0D                                                        05525\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05526\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05527\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05528\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05529\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05530\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05531\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05532\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05533\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05534\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05535\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05536\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05537\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05538\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05539\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05540\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05541\n         EJECT                                                           05593\nBDMPRINT CSECT\n         SPACE\n         IEZBITS\n         SPACE\n         IKJZT301\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n* ----------------------------------------------------------------- *\nPRMDSECT DSECT\nPRMDRCNO DS    F                   RBA number of record in BRODCAST\nPRMDRCAD DS    F                   Address of 130-byte record to be\n*                                   printed and optionally formatted.\nPRMNDTBL DS    F                   Pointer to incore Notices Directory\n*                                   Table, zero if it isn't there.\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMEXPND": {"ttr": 4871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00B\\x00\\x99\\x12\\x9f\\x01\\x16&\\x9f\\x156\\x03^\\x03c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "1999-05-09T00:00:00", "modifydate": "2016-09-25T15:36:42", "lines": 862, "newlines": 867, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMEXPND TITLE 'BDMEXPND - RESTORE BRODCAST DATASET FROM A BDMDUMP'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program to restore a      *\n*                   copy of the BRODCAST dataset from an FB-130       *\n*                   BDMDUMP backup.                                   *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*          This program tries to restore a copy of BRODCAST           *\n*          in such a way, so it will be usable, if renamed to         *\n*          SYS1.BRODCAST.  Therefore, the program allows only one     *\n*          extent.  If you allocate secondary extents in your         *\n*          creation JCL (as illustrated below), they will be          *\n*          ignored.  The program reports exactly the minimum size     *\n*          you should allocate for your new dataset.  If you make     *\n*          the first extent allocation larger than the minimum,       *\n*          this program will fill the allocated space with extra      *\n*          unused user message slots (key X'FF').  So therefore       *\n*          the BRODCAST dataset can be conveniently expanded, and     *\n*          all the information it previously contained, is still      *\n*          there.                                                     *\n*                                                                     *\n*          Since there is a field in the Header Record of BRODCAST    *\n*          (key X'04') which contains the total number of records     *\n*          in the BRODCAST dataset (R1RECNUM), this field has to      *\n*          be adjusted after the extra records have been loaded.      *\n*                                                                     *\n*                                                                     *\n*       Function:   To restore a BRODCAST dataset or a copy in the    *\n*                   same format, from a BDMDUMP FB-130 file, but      *\n*                   with the possibility of extending the size of     *\n*                   the BRODCAST dataset to fill the first extent     *\n*                   of allocated space.  The extra records are        *\n*                   empty USER message slots (key X'FF').             *\n*                                                                     *\n*          Author:  Sam Golob             Version 1.4.0               *\n*                                                                     *\n*            Date:  May 17, 99                                        *\n*                                                                     *\n*                                                                     *\n*       JCL to invoke:                                                *\n*                                                                     *\n* //BDMEXPND EXEC PGM=BDMEXPND,REGION=3M                              *\n* //STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.LOAD                            *\n* //BRODCAST DD  DSN=SBGOLOB.BRODCAST.COPY,DISP=(NEW,CATLG,DELETE),   *\n* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *\n* //         SPACE=(TRK,(120,30),RLSE),UNIT=SYSDA                     *\n* //BRODDUMP DD  DISP=SHR,DSN=SBGOLOB.BRODCAST.DUMP                   *\n* //SYSPRINT DD  SYSOUT=*                                             *\n*                                                                     *\n*                                                                     *\n*         Changes:                                                    *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM                                            01470\n&NAME    DS    0H                                                        01471\n         ST    R4,SAV4HEX                                                01472\n         STM   R15,R1,HEXSAVE                                            01473\n         LA    R1,&FROM                                                  01474\n         LA    R0,&LEN                                                   01475\n         LA    R15,&TO                                                   01476\n         BAL   R4,HEX                                                    01477\n         L     R4,SAV4HEX                                                01478\n         LM    R15,R1,HEXSAVE                                            01479\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMEXPND '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)     SAVE REGISTERS\n         LR    R12,R15\n         USING BDMEXPND,R12,R10,R8 Establish addressability\n         LA    R10,4095(,R12)\n         LA    R10,1(,R10)\n         LA    R8,4095(,R10)\n         LA    R8,1(,R8)\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         SPACE 1\nDOBROD   OPEN  (BRODCAST,(OUTPUT))\n         OPEN  (BRODDUMP,(INPUT))\n         OPEN  (SYSPRINT,(OUTPUT))\n         BAL   R9,HEADREAD         READ HEADER RECORD OF BDMDUMP FILE\n*                                  AND EXTRACT ESSENTIAL DATASET INFO\n*                                  FOR THE RESTORE.................\n         L     R11,HIGHVAL         SAVE TOTAL RECORD COUNT\n         CVD   R11,CVDWORK         CONVERT TO DECIMAL\n         MVC   STORNUM1,CVDWORK    STORE AWAY FOR REPORTING\n         BCTR  R11,0               LOWER BY HEADREAD WRITE\n         BAL   R9,OUTHEADR         WRITE SYSPRINT HEADER\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO LOAD ALL THE BRODCAST RECORDS.             --- *\n* ------------------------------------------------------------------ *\nLOADBRD  DS    0H                  READ THROUGH USERID RECORDS\n         GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP\nLOADBRDX L     R7,RECONTRK         INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,RECONTRK           COUNT\n         L     R7,NUMBREC          INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,NUMBREC            COUNT\n*  DELETED USER MESSAGE RECORDS X'FF' IN THE KEY FIELD, HAVE\n*  TO HAVE THE \"R\" PART OF THE RECORD'S TTR OR CCHHR INSERTED\n*  INTO THE FIRST DATA BYTE OF THE RECORD.  IF THIS IS NOT\n*  DONE, THE TSO SEND COMMAND GOES HAYWIRE.  FOR THIS REASON,\n*  WHEN COPYING SYS1.BRODCAST BETWEEN TWO DIFFERENT DEVICE\n*  TYPES, THIS VALUE HAS TO BE FILLED IN FOR THE CURRENT\n*  DEVICE TYPE, OTHERWISE IT WILL GO OUT OF SYNCHRONIZATION.\n         CLI   INREC,X'FF'         IS THIS A DELETED RECORD?\n         BNE   GOWRITE             NO, DON'T HAVE TO PUT REC #\n         MVC   INREC+1(1),RECONTRK+3   MOVE IN RECORD NUMBER\nGOWRITE  DS    0H\n         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E\n         C     R15,=F'8'           CHECK IF END OF EXTENT\n         BNE   GOSKIP1             NO. TRY IF END OF TRACK\n         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?\n         BE    GOEOJ1              YES. INDICATE EXTENDING.\n         MVI   EOJFLAG,X'FF'       OTHERWISE, PRELIMINARY END\nGOEOJ1   B     ENDCHECK            FINISH PREMATURELY\nGOSKIP1  C     R15,=F'4'           CHECK IF END OF TRACK\n         BNE   GOCHECK             NO. STILL IN MID OF TRACK\n         CVD   R7,CVDWORK          CONVERT LAST TRACK NUMBER\n         CP    STORNUM2,=P'0'      NONZERO NUMBER?\n         BNE   GOSKIP2             YES. ONLY DO IT ONCE\n         MVC   STORNUM2,CVDWORK    STORE IT AWAY\nGOSKIP2  XR    R7,R7               ZERO REGISTER\n         ST    R7,RECONTRK         RE-INITIALIZE REC/TRK\nGOCHECK  DS    0H\n         CHECK MDLDECB\n         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?\n         BE    LOADEXT             YES, SKIP PREVIOUS COUNTING\n         BCT   R11,LOADBRD         CYCLE THROUGH ALL RECORDS\n* ------------------------------------------------------------------ *\n*    AFTER OLD RECORDS ARE LOADED, FILL SPACE TO END OF EXTENT.      *\n* ------------------------------------------------------------------ *\nLOADEXT  MVC   INREC(130),ZERMSGR  INSTEAD OF GET, MOVE IN\n*                               NULL MESSAGE RECORD AND GO ON\n*                               WITH PROCESSING UNTIL RC=8.\n         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?\n         BE    LOADBRDX            YES, SKIP PREVIOUS COUNTING\n         MVI   EOJFLAG,X'F0'       SPECIAL FLAG, ON 1ST PASS\n         B     LOADBRDX            GO ON WITH LOADING AS USUAL\n* ------------------------------------------------------------------ *\nENDCHECK DS    0H                  CHECK last record written.\n         CHECK MDLDECB\nEOJ      DS    0H                  BYE.\n         L     R7,NUMBREC          REPORT NUMBER OF RECORDS\n         CVD   R7,CVDWORK            WHICH WERE ACTUALLY\n         MVC   STORNUM3,CVDWORK        LOADED.\n* -- >\n         CLC   STORNUM3,STORNUM1   Was it exact?\n         BNE   PRELMEND            No. Real preliminary end.\n         MVI   EOJFLAG,X'00'       Actually OK.  Mark normal end.\nPRELMEND DS    0H\n* -- >\n         BAL   R9,FINALRPT         Print the final report\n         CLI   EOJFLAG,X'FF'       Abnormal end ?\n         BNE   EOJGO0              No. Print that it's normal.\n         BAL   R9,EOJPREL          Yes. Print diagnostics.\n         B     EOJGO2\nEOJGO0   DS    0H                  Normal end.\n         CLI   EOJFLAG,X'F0'       Did we extend the dataset?\n         BNE   EOJGO1              No. Indicate normal end.\n         BAL   R9,EOJEXTND         Yes. Put out extend messages.\n         BAL   R9,HEADUPDT         Update header for record count,\n         B     EOJGO2              and skip normal.\nEOJGO1   DS    0H\n         BAL   R9,EOJNORM          Put out message for normal.\nEOJGO2   DS    0H\n         CLI   EOJFLAG,X'FF'       Preliminary end of load ?\n         BNE   EOJGO2A             No. Set RC = 0\n         LA    R5,8                Yes. Set RC = 8 and save in R5.\n         B     EOJGO2B\nEOJGO2A  DS    0H\n         LA    R5,0                Save RC in R5 past FREEMAIN.\nEOJGO2B  DS    0H\n         CLOSE (BRODCAST)\n         CLOSE (BRODDUMP)\n         CLOSE (SYSPRINT)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\nEOJGO3   DS    0H\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\nEOJN     BR    R14\n         LTORG\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n*\nHEADREAD GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP\n         L     R7,=F'1'            SHOW IT'S THE FIRST\n         ST    R7,RECONTRK           RECORD IN THE TRACK\n         SPACE\n         LA    R3,INREC+1          INFO THAT SHOULD BE ON HEADER\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   HIGHVAL(4),R1RECNUM  SAVE NUMBER OF RECDS IN BRODCAST\n         L     R7,NUMBREC          INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,NUMBREC            COUNT\n         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E\n         CHECK MDLDECB\n         DROP  R3\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *\n*   OF THE PROGRAM EXECUTION.                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nOUTHEADR DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,TITLINE\n         PUT   SYSPRINT,CPYRLINE\n         PUT   SYSPRINT,REPTLN01\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+19(49),SYSMSG01     PUT OUT DOC\n         PUT   SYSPRINT,OUTLINE             INSTRUCTIONS.\n         MVC   OUTLINE+19(49),SYSMSG02     (A BUNCH OF LINES)\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG03\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG04\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG05\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG06\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG07\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG08\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,\n         PUT   SYSPRINT,OUTLINE            PREPARING FOR\n         BR    R9                          FINAL REPORT.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    NORMAL END OF JOB.  ALL RECORDS LOADED PROPERLY.             *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEOJNORM  DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG15      PUT OUT NORMAL EOJ\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    ABNORMAL END.  PROBABLY NOT ENOUGH PRIMARY SPACE ALLOCATED   *\n*    TO FIT IN ALL THE RECORDS FROM THE COPIED SYS1.BRODCAST,     *\n*    INTO THE FIRST EXTENT.  THIS CODE REPORTS ON HOW MANY        *\n*    RECORDS WERE ACTUALLY LOADED, AND ON EXACTLY HOW MANY        *\n*    TRACKS HAVE TO BE ALLOCATED IN THE FIRST EXTENT, SO THE      *\n*    COPY WILL BE ABLE TO FUNCTION AS A NEW SYS1.BRODCAST         *\n*    DATASET.                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEOJPREL  DS    0H                     PUT OUT 'SPACE' MESSAGES\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         MVC   OUTLINE+9(49),SYSMSG16    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG17    MOVE MESSAGE TEXT\n         OI    STORNUM4+7,X'0F'          MOVE IN REQUIRED\n         UNPK  OUTLINE+40(8),STORNUM4      NUMBER OF TRACKS\n         BAL   R5,STRIPZ1                STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG18    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG22    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEOJEXTND DS    0H                     Put out 'SPACE' messages\n         MVC   OUTLINE(133),OUTLINE-1      Blank output line\n         MVC   OUTLINE(1),THRLINE          Skip 3\n         MVC   OUTLINE+9(49),SYSMSG19    Move message text\n         PUT   SYSPRINT,OUTLINE          Print out\n         MVC   OUTLINE(133),OUTLINE-1      Blank output line\n         MVC   OUTLINE+9(49),SYSMSG20    Move message text\n         OI    STORNUM4+7,X'0F'          Move in required\n         UNPK  OUTLINE+42(8),STORNUM4      number of tracks\n         BAL   R5,STRIPZ2                Strip leading zeros\n         OI    STORNUM3+7,X'0F'          Move in required\n         UNPK  OUTLINE+19(8),STORNUM6      number of records\n         BAL   R5,STRIPZ3                Strip leading zeros\n         PUT   SYSPRINT,OUTLINE          Print out\n         MVC   OUTLINE(133),OUTLINE-1      Blank output line\n         MVC   OUTLINE+9(49),SYSMSG18    Move message text\n         PUT   SYSPRINT,OUTLINE          Print out\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    REPORT STATISTICS ON NUMBER OF RECORDS EXPECTED, NUMBER OF   *\n*    RECORDS ACTUALLY LOADED, NUMBER OF RECORDS PER TRACK, THAT   *\n*    WERE DETERMINED FOR THIS DEVICE TYPE, AND ACTUAL NUMBER OF   *\n*    TRACKS ON THIS DEVICE WHICH WERE NEEDED TO ACCOMMODATE ALL   *\n*    THE RECORDS FROM THE COPIED SYS1.BRODCAST DATASET.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFINALRPT DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG11      NUMBER OF RECORDS\n         OI    STORNUM1+7,X'0F'              EXPECTED\n         UNPK  OUTLINE+62(8),STORNUM1\n         BAL   R5,STRIPZ                   REMOVE LEADING ZROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG12      NUMBER OF RECORDS\n         OI    STORNUM3+7,X'0F'              ACTUALLY LOADED\n         UNPK  OUTLINE+62(8),STORNUM3\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG13      NUMBER OF RECORDS\n         OI    STORNUM2+7,X'0F'              THAT FIT ONTO ONE\n         UNPK  OUTLINE+62(8),STORNUM2          TRACK.\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG14      NUMBER OF TRACKS\n         CLI   EOJFLAG,X'F0'\n         BE    FINGO1\n         MVC   STORNUM6(8),STORNUM1\n         MVC   STORWRK1(4),=X'00000000'    CLEAR UPPER ORDER OF BIG #\n         MVC   STORWRK1+4(8),STORNUM1      LOAD SMALL # INTO BIG #\n         DP    STORWRK1+3(9),STORNUM2+5(3)   TO BE ALLOCATED\n         MVC   STORNUM4+3(5),STORWRK1+4        SO THAT ALL\n         MVC   STORNUM5+5(3),STORWRK1+9          RECORDS FIT\n         B     FINGO2\nFINGO1   MVC   STORNUM6(8),STORNUM3\n         MVC   STORWRK2(4),=X'00000000'    CLEAR UPPER ORDER OF BIG #\n         MVC   STORWRK2+4(8),STORNUM3      LOAD SMALL # INTO BIG #\n         DP    STORWRK2+3(9),STORNUM2+5(3)   TO BE ALLOCATED\n         MVC   STORNUM4+3(5),STORWRK2+4        SO THAT ALL\n         MVC   STORNUM5+5(3),STORWRK2+9          RECORDS FIT\nFINGO2   CP    STORNUM5,=P'0'                      EXACTLY.\n         BE    FINOADD                     CALCULATE NUMBER.\n         AP    STORNUM4,=P'1'\nFINOADD  MVC   OUTLINE+9(49),SYSMSG14\n         OI    STORNUM4+7,X'0F'\n         UNPK  OUTLINE+62(8),STORNUM4      REPORT THE NUMBER.\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT RECORD\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   ROUTINE TO STRIP LEADING ZEROS.  I'M DOING THIS TO AVOID A    *\n*   POSSIBLE OCCASION FOR A S0C7, WHICH CAN HAPPEN WHEN YOU DO    *\n*   AN ED INSTRUCTION THAT FAILS. UNPK DOESN'T HAVE THIS PROBLEM. *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSTRIPZ2  DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+42\n         B     STRIPZL\nSTRIPZ3  DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+19\n         B     STRIPZL\nSTRIPZ1  DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+40\n         B     STRIPZL\nSTRIPZ   DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+62\nSTRIPZL  CLC   0(1,R4),=C'0'\n         BNE   STRIPZE\n         MVI   0(R4),X'40'\n         LA    R4,1(,R4)\n         BCT   R11,STRIPZL\nSTRIPZE  BR    R5\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                                                        04224\n         MVC   1(1,R15),0(R1)        Move byte                           04225\n         UNPK  0(3,R15),1(2,R15)     Unpack                              04226\n         TR    0(2,R15),HEXTAB-240                                       04227\n         LA    R15,2(,R15)           Increment output pointer            04228\n         LA    R1,1(,R1)             Increment input pointer             04229\n         BCT   R0,HEX                Decrement length, then loop         04230\n         MVI   0(R15),C' '           Blank the trailing byte             04231\n         BR    R4                    Return to caller                    04232\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n         SPACE                                                           04234\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ AND UPDATE HEADER RECORD FOR NUMBER OF RECORDS      *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADUPDT DS    0H\n         OPEN  (BRODCASI,(UPDAT))\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCASI,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         CVB   R7,STORNUM6         GET NUMBER OF RECORDS LOADED\n         ST    R7,R1RECNUM         MOVE NEW NUMBER INTO HEADER RECORD\n         DROP  R3\n         WRITE MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCASI,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCASI            DCB FOR PROCESS DATA SET\n         CLOSE (BRODCASI)\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG21      PRINT MESSAGE\n         PUT   SYSPRINT,OUTLINE            DO PRINT\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LEVEL(7),BLANKS\n         MVI   OUTLINE-1,C' '        INITIALIZE BLANK\n         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA\n         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT\n         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER\n         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA\n         MVI   RC15,X'00'            RETURN CODE AREA\n         MVI   EOJFLAG,X'00'\n         ZAP   STORNUM1,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM2,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM3,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM4,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM5,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM6,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM7,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM8,=P'0'        INITIALIZE PACKED FIELDS\n         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nZERRECX  DS    0CL130\n         DC    130X'00'\nBLANKS   DC    C'        '         8 BLANKS\nZERMSGR  DS    0CL130\nZERMKEY  DC    XL1'FF'\nZERMREC  DC    XL129'00'\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nNEWPAGE  DC    C'1'\nNEXTLIN  DC    C' '\nTWOLINE  DC    C'0'\nTHRLINE  DC    C'-'\nNOLINE   DC    C'+'\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Restore Program '\n         DC    C' ---'\n         DC    CL68' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL43'&PGMNAME   ---   BRODCAST Dataset - Record '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL60' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTUL02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL42'&PGMNAME   ---   BRODCAST USERID - Record '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL61' '\n*--------------------------------------------------------------------*\nSYSMSG01 DC    C'This program creates a copy of the BRODCAST      '\nSYSMSG02 DC    C'dataset from a BDMDUMP file, which had originally'\nSYSMSG03 DC    C'been created from a BRODCAST dataset or a copy.  '\nSYSMSG04 DC    C'The restored dataset must reside in one extent.  '\nSYSMSG05 DC    C'This program can restore BRODCAST across device  '\nSYSMSG06 DC    C'types of different geometry, and will report on  '\nSYSMSG07 DC    C'how many tracks exactly, should be used for the  '\nSYSMSG08 DC    C'allocation of the output dataset.                '\nSYSMSG09 DC    C'                                                 '\nSYSMSG10 DC    C'                                                 '\nSYSMSG1A DC    C'                                                 '\n*\nSYSMSG11 DC    C'Expected Number of Records in Copy, from Header :'\nSYSMSG12 DC    C'Number of Records Actually Loaded into the Copy :'\nSYSMSG13 DC    C'Number of Records per Track for this Device Type:'\nSYSMSG14 DC    C'Expected Number of Tracks to be Allocated       :'\nSYSMSG15 DC    C'  Loading Action Completed Successfully .        '\nSYSMSG16 DC    C'Loading Interrupted Unexpectedly....             '\nSYSMSG17 DC    C'Please rerun, and allocate                tracks '\nSYSMSG18 DC    C'in a single extent.                              '\nSYSMSG19 DC    C'BRODCAST copy expanded successfully.  It now     '\nSYSMSG20 DC    C'contains             records on           tracks '\nSYSMSG21 DC    C'Header Record updated successfully.              '\nSYSMSG22 DC    C'WARNING - Output BRODCAST dataset is not usable !'\nMASK4    DC    XL4'40202120'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=PS,           SEQUENTIAL....                      X\n               MACRF=(WL),         LOAD OF BDAM FILE                   X\n               RECFM=F,            FIXED LENGTH                        X\n               KEYLEN=1            SIZE OF KEY\nBRODDUMP DCB   DSORG=PS,DDNAME=BRODDUMP,MACRF=GM,EODAD=EOJ,            X\n               RECFM=FB,LRECL=130\nBRODCASI DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\n         SPACE 3\n         LTORG\n         SPACE\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nHIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST\nNUMBREC  DS    F                   COUNT OF RECORDS LOADED\nRECONTRK DS    F                   COUNT RECORDS ON THIS TRACK\nRC15     DS    C                   STORE RETURN CODE FROM WRITE\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\n         DS    0F                  ALIGN ON FULLWORD\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nINHDR    DS    CL130\n         DS    XL2\nINREC    DS    CL130\n         DS    0F\nWRTWR    WRITE MDLDECB,SF,MF=L\nWRTWREND DS    0F\nWRTWRLEN EQU   *-WRTWR\nRDWR     READ  MDIDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nEOJFLAG  DS    X\n         DS    CL1\nOUTLINE  DS    CL133\n         DS    CL9                 FILLER\n         DS    0D\nCVDWORK  DS    D\nSTORNUM1 DS    PL8\nSTORNUM2 DS    PL8\nSTORNUM3 DS    PL8\nSTORNUM4 DS    PL8\nSTORNUM5 DS    PL8\nSTORNUM6 DS    PL8\nSTORNUM7 DS    PL8\nSTORNUM8 DS    PL8\nSTORWRK1 DS    PL12\nSTORWRK2 DS    PL12\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMGTMSG": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00W\\x00\\x95\\x14\\x8f\\x01\\x16&\\x9f\\x156\\x03\\x9f\\x03\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-28T00:00:00", "modifydate": "2016-09-25T15:36:57", "lines": 927, "newlines": 798, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMGTMSG TITLE 'Extract User Messages from BRODCAST for Reloading'\n*------------------------------------------------------------------*\n*\n*          BDMGTMSG (Extract User Messages from BRODCAST)\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program extracts user messages from the BRODCAST\n*        Dataset, for later bulk reloading with the BDMMLOAD\n*        program.\n*\n*------------------------------------------------------------------*\n*\n*\n*        JCL TO INVOKE:\n*\n*            //BRODCAST EXEC PGM=BDMGTMSG,REGION=4M\n*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --\n*            //SYSPRINT DD  SYSOUT=A\n*            //BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR\n*            //BDMMDUMP DD  DISP=(NEW,CATLG,DELETE),\n*            //   DSN=yourid.usermsg.dump.dataset,\n*            //   DCB=(RECFM=FB,DSORG=PS,LRECL=130,BLKSIZE=27950),\n*            //   SPACE=(TRK,(60,60),RLSE),UNIT=SYSALLDA,\n*            //   VOL=SER=WORK04\n*\n* INSTALLED:  20 Dec 2006\n*\n* CHANGE LOG:\n*    20 Dec 2006 -\n*\n*\n*------------------------------------------------------------------*\n         EJECT\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                  USED BY O.S.\nR1       EQU   1                  ADDR OF PARM LIST\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9                   PTR TO OUTPUT LINE FOR PUT\nR10      EQU   10                  BAL REGISTER\nR11      EQU   11\nR12      EQU   12                  BASE REGISTER\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMGTMSG '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R5,R1                  Save PARM address\n         LR    R12,R15                Load entry address\n         USING BDMGTMSG,R12,R11,R8    Establish addressability\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R8,4095(,R11)\n         LA    R8,1(,R8)\n         LR    R15,R13             Save caller's save address\n         LA    R13,SAVE            Get our savearea address\n         ST    R15,SAVE+4          Save off into low save\n         ST    R13,8(,R15)         Chain mine back\n         ST    R5,PARMSAVE         Store PARM address for reloading\nINITPGM  DS    0H\n         MVI   LINE-1,X'40'\n         MVI   BLANK44-1,X'40'     Initialize Blanks area\n         MVC   BLANK44(44),BLANK44-1\n         SPACE\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  SYSPRINT, BRODUSER, SYSIN        06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n         ST    R3,SAVER3\n         ST    R5,SAVER5\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),SYSPRINC     SYSPRINT DDNAME THERE?               06235\n         BNE   TIOTPRTN       NO                                         06236\n         OI    DDNFLAG,X'01'        SHOW PRESENCE OF SYSPRINT DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTPRTN CLC   4(8,R5),BDMMDUMC                                          06239\n         BNE   TIOTUSRN                                                  06240\n         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BDMMDUMP DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTUSRN CLC   4(8,R5),SYSINC                                            06239\n         BNE   TIOTBROD                                                  06240\n         OI    DDNFLAG,X'04'        SHOW PRESENCE OF SYSIN    DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTBROD CLC   4(8,R5),BRODCASC                                          06239\n         BNE   TIOTNEXT                                                  06240\n         OI    DDNFLAG,X'08'        SHOW PRESENCE OF BRODCAST DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3\n         L     R5,SAVER5\n         B     OPEN\nSYSPRINC DC    CL8'SYSPRINT'\nBDMMDUMC DC    CL8'BDMMDUMP'\nSYSINC   DC    CL8'SYSIN   '\nBRODCASC DC    CL8'BRODCAST'\n* -------------------------------------------------------- *\n*   OPEN files and print title lines in SYSPRINT report.   *\n* -------------------------------------------------------- *\nOPEN     DS    0H              .... TEST ALL THE DD NAMES .....\n         TM    DDNFLAG,X'01'        SYSPRINT there?\n         BO    OPENSYSP             Yes. Go OPEN it.\n         WTO   'BDMGM00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGM10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGM00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'02'        BDMMDUMP there? Then it's allocated\n         BZ    NODELMSG             Not there, no need to delete.\n         WTO   'BDMGM03E     BDMMDUMP not created properly.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGM02E     Delete BDMMDUMP and rerun job.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGM00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNODELMSG DS    0H\n         B     EOJ16                End right away.  Code 16.\n*\nOPENSYSP DS    0H\n         OPEN  (SYSPRINT,(OUTPUT))\n         TM    DDNFLAG,X'08'        BRODCAST missing?\n         BZ    NODDNAME             Put out msgs and end with Code 12.\n         OPEN  (BRODCAST,(INPUT))\n         TM    DDNFLAG,X'02'        BDMMDUMP missing?\n         BZ    NODDNAME             Put out msgs and end with Code 12.\n         OPEN  (BDMMDUMP,(OUTPUT))\n         RDJFCB BRODCAST\n*\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n         SPACE\n*--------------------------------------------------------------------*\n*        GET THE HEADER RECORD.  THIS IS A SPECIAL RECORD 1.\n*--------------------------------------------------------------------*\n         SPACE\n         READ  HDRECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK HDRECB\n         L     R2,HDRECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,HDRECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         USING R1BC,R3             Addressability to Record 1 Mapping\n         SPACE\n         MVC   SAVERBA(3),R1USPTR  Save RBA 1ST Mail Directory Record\n         MVC   HIGHVAL(4),R1RECNUM Save get out value\n         MVC   SAVHDADR(4),R1RECNUM Save get out value\n         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         MVC   DSNAMEN(44),JFCBDSNM\n         LA    R9,DSNAMET\n         BAL   R10,PRINT\n         MVC   DSVOLSN(6),JFCBVOLS\n         LA    R9,DSVOLST\n         BAL   R10,PRINT\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R9,LINE\n         BAL   R10,PRINT\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R9,LINE\n         BAL   R10,PRINT\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         LA    R9,UIDTITLE\n         BAL   R10,PRINT\n         LA    R9,USERDASH\n         BAL   R10,PRINT\n         SPACE\n         FREEDBUF HDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         SPACE\n* ------------------------------------------------------------------- *\nINDEXLP  DS    0H               Loop through Userids and run          *\n*                               the chains of messages, to see        *\n*                               which Userids have messages           *\n*                               outstanding, and how many.            *\n* ------------------------------------------------------------------- *\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA\n         SPACE\n         READ  SCNECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK SCNECB\n         SPACE\n         L     R3,SCNECB+12        ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   SAVERBA,USDNEXT     COPY NEXT INDEX RECORD NUMBER\n         SPACE\n*--------------------------------------------------------------------*\n*        YOU WILL GO THROUGH THIS LOOP 9 TIMES, BECAUSE 9 ENTRIES\n*        ARE HELD IN EVERY RECORD.\n*--------------------------------------------------------------------*\n         SPACE\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANK44\n         MVC   USERID(7),USDID     Copy who this is\n         CLC   USERID(7),ZEROS     Is this a real user?\n         BE    NOMSG               Nope, must have been deleted.\n         AP    USERS,=P'1'         Count how many users.\n         XR    R4,R4               Clear upper byte\n         ICM   R4,7,USDRBA         Get block position\n         BZ    NOMSG               NO.. JUST BUMP\n         MVC   ADDUSUSR(7),BLANK44\n         MVC   ADDUSUSR(7),USERIDI\n         PUT   BDMMDUMP,ADDUSLNE\n* --- >    Printing title of user with messages  -  below\n* --- >    Printing title of user with messages  -  above\nBUMPUSR  DS    0H\n         AP    MSGCOUNT,=P'1'      INCREMENT HOW MANY MESSAGES\n         STCM  R4,7,MSGNUM\n         SPACE\n         READ  MSGECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MSGNUM              RBA TO HOLD THE KEY\n         SPACE\n         CHECK MSGECB\n         SPACE\n         L     R4,MSGECB+20        ADDRESS OF KEY\n         MVC   KEYHOLD(1),0(R4)    Move the key data where we can see\n         L     R4,MSGECB+12        Address of Data\n         MVC   RECHOLD(129),0(R4)  Move the data where it is accessible\n         AP    USRMSG,=P'1'\n         PUT   BDMMDUMP,REC130\n*\n* --- >    Printing message number for this USERID  above\n         USING USMSG,R4\n         ICM   R4,7,USMNEXT        RRN OF NEXT MESSAGE\n         DROP  R4\n         SPACE\n         FREEDBUF MSGECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         LTR   R4,R4\n         BNZ   BUMPUSR\n*--------------------------------------------------------------------*\n         AP    UWMCNT,=P'1'\n         AP    RECCNT,=P'1'\n         CP    RECCNT,=P'2'        TEST MID RANGE\n         BL    LINE1               LOWER\n         BH    LINE3               HIGHER\n         BE    LINE2               .MIDRANGE\nLINE1    DS    0H\n         MVC   MSGCNT1,MASK10\n         MVC   USERID1,USERIDI\n         ED    MSGCNT1,MSGCOUNT\n         B     ZAPCNT\n         SPACE\nLINE2    DS    0H\n         MVC   MSGCNT2,MASK10\n         MVC   USERID2,USERIDI\n         ED    MSGCNT2,MSGCOUNT\n         B     ZAPCNT\n         SPACE\nLINE3    DS    0H\n         MVC   MSGCNT3,MASK10\n         MVC   USERID3,USERIDI\n         ED    MSGCNT3,MSGCOUNT\n         LA    R9,USERLINE\n         BAL   R10,PRINT\n         MVC   MSGCNT1,=CL10' '\n         MVC   MSGCNT2,=CL10' '\n         MVC   MSGCNT3,=CL10' '\n         MVC   USERID2,=CL7' '\n         MVC   USERID3,=CL7' '\n         ZAP   RECCNT,=P'0'\n         SPACE\nZAPCNT   DS    0H\n         ZAP   MSGCOUNT,=P'0'\nNOMSG    DS    0H\n         LA    R3,13(R3)           BUMP TO NEXT ENTRY\n         BCT   R6,USRLOOP          REPEAT FOR NINE TIMES\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF INNER LOOP\n*--------------------------------------------------------------------*\n         SPACE\n         FREEDBUF SCNECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         CLC   SAVERBA,=3X'00'     IS THIS LAST\n         BNE   INDEXLP             GO DO NEXT ONE\n         CP    RECCNT,=P'0'\n         BE    PUTUCNT\n         LA    R9,USERLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\nPUTUCNT  DS    0H\n         LA    R9,USERDASH\n         BAL   R10,PRINT\n         MVC   UWMSCNT(10),MASK10\n         ED    UWMSCNT(10),UWMCNT  HOW MANY MESSAGES ARE THERE\n         LA    R9,UWMSTOTL         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         MVC   UMSGCNT,MASK10\n         ED    UMSGCNT,USRMSG      HOW MANY MESSAGES ARE THERE\n         LA    R9,UMSGTOTL         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         MVC   USERCNT,MASK10\n         ED    USERCNT,USERS       HOW MANY USERS ARE THERE\n         LA    R9,UTOTLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         RDJFCB BDMMDUMP\n         LA    R9,USERDASH\n         BAL   R10,PRINT\n         MVC   LINE,LINE-1\n         MVC   LINE+3(61),=C'The User Messages Have Been Dumped to the x\n               Following Dataset: '\n         PUT   SYSPRINT,LINE\n         MVC   DSNAMEN(44),JFCBDSNM\n         MVC   DSNAMET+1(8),=C'BDMMDUMP'\n         MVI   DSNAMET,C'0'\n         LA    R9,DSNAMET\n         BAL   R10,PRINT\n         MVC   DSVOLSN(6),JFCBVOLS\n         MVC   DSVOLST+1(8),=C'BDMMDUMP'\n         LA    R9,DSVOLST\n         BAL   R10,PRINT\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF OUTER LOOP\n*        TIME TO CLOSE AND END THE PROGRAM, BYE.\n*--------------------------------------------------------------------*\n         SPACE\nCLOSE    DS    0H\n         CLOSE BRODCAST\n         CLOSE SYSPRINT\n         TM    DDNFLAG,X'02'\n         BZ    EOJ8\n         CLOSE BDMMDUMP\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H\n         L     R13,SAVE+4\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                 Go back to system.\n         SPACE\n*--------------------------------------------------------------------*\n*        ERROR IF NO BDMMDUMP OR BRODCAST DD NAME                    *\n*--------------------------------------------------------------------*\nNODDNAME DS    0H\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         TM    DDNFLAG,X'02'       BDMMDUMP DD there?\n         BO    BYPBDMMD            Yes. Bypass msg that it's not.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM01E   ---  BDMMDUMP DD Name Missing  -X\n               --  '\n         PUT   SYSPRINT,LINE\nBYPBDMMD DS    0H\n         TM    DDNFLAG,X'08'       BRODCAST DD there?\n         BO    BYPMDMSG            Yes. Bypass msg that it's not.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM01E   ---  BRODCAST DD Name Missing  -X\n               --  '\n         PUT   SYSPRINT,LINE\nBYPMDMSG DS    0H\n         TM    DDNFLAG,X'02'       BDMMDUMP DD there?\n         BZ    BYPBRODC            Yes. It needs to be deleted.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM03E   ---  BDMMDUMP not created properX\n               ly..'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM02E   ---  Delete BDMMDUMP and Rerun -X\n               --  '\n         PUT   SYSPRINT,LINE\nBYPBRODC DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         TM    DDNFLAG,X'08'       BRODCAST DD there?\n         BZ    NOCLSBRC            No. Don't try to CLOSE it.\n         CLOSE BRODCAST\nNOCLSBRC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM05E   ***  Please correct your JCL   *x\n               **  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         CLOSE SYSPRINT\n         B     EOJ12\n*--------------------------------------------------------------------*\n*        PRINT OUTPUT SUBROUTINE.\n*--------------------------------------------------------------------*\n         SPACE\nPRINT    DS    0H\n         PUT   SYSPRINT,(R9)       WRITE FROM AREA ADDRESS IN R9\n         BR    R10                 RETURN TO WHENCE WE CAME\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA CONTROL BLOCKS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=RISC,         3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\nBDMMDUMP DCB   DSORG=PS,DDNAME=BDMMDUMP,MACRF=PM,                      X\n               LRECL=130,RECFM=FB,EXLST=JFCB1\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA AREAS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nCVDAREA  DS    D\nSAVE     DC    18F'0'\nTYPETBLA DS    F       Address of GETMAINED Type Table         HD\nNOTETBLA DS    F       Address of GETMAINED Notice Directory Table\nNOTGTSIZ DS    F\nCURNOTBL DS    F       Address of beginning of data in Note dir table\nHIGHVAL  DS    F\nSAVHDADR DS    F                   SAVE HEADER ADDRESS         SG MAY99\nBDMPRPGM DS    F                   BDMPRINT entry point\nBRODPDCB DS    F                   BRODPRNT DCB in BDMPRINT program\nBRODUDCB DS    F                   BRODUSER DCB in BDMPRINT program\nSAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build\nSAVER1   DS    F                   Save Register 1\nSAVER3   DS    F                   Save Register 3\nSAVER5   DS    F                   Save Register 5\nSAVER5A  DS    F                   Save Register 5\nSAVER6   DS    F                   Preserve R6 during BRODPRNT handling\nSAVER6A  DS    F                   Save Register 6\nSAVER10  DS    F                   Save Register 10\nPARMSAVE DS    F                   Save passed PARM address if any\nSAV14TO2 DC    6F'0'\nSAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX\nNOTEDRBA DS    CL3                 Save RBA of Notify Directory f/headr\nFRSRCRBA DS    CL3                 Save RBA of Free Search Rcd f/header\nNUMNOTCS DS    CL2                 Number of Notices slots in BRODCAST\n         DC    C' '                Initialized at beginning of program\nBLANK44  DC    CL44' '             General Blanks if needed\nPWKAREA  DC    CL3' '              For uppercasing the PARM\nADDUSLNE DS    0CL130\nADDUSHDR DC    CL6'./--- '\nADDUSUSR DC    CL7'       '\nADDUSEND DC    CL117' '\nALLPRINT DC    X'00'\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   below\n*                   Keep DDNFLAG and EXECMODE together!\nDDNFLAG  DC    X'00'               Results of TIOT scan\n*              X'01'               BRODPRNT DD is coded in JCL\n*              X'02'               BRODUSER DD is coded in JCL\n*              X'04'               SYSIN    DD is coded in JCL\nEXECMODE DC    X'00'               Execution mode of BDMPRINT program\n*              X'01'               Header Record only\n*              X'02'               Notice Messages Directory Mode\n*              X'04'               BRODUSER mode\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   above\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DC    XL1'00'             Key slot\nRECHOLD  DC    XL129'00'           Data slot\nINCORGEN DS    F\nZEROS    DC    XL7'00'             Zero Userid Entry\n*EXTAB   DC    CL16'0123456789ABCDEF'\n         DS    0F\nBLOCKNO  DC    X'000000'           BLOCK NUMBERS\nMSGNUM   DS    CL3                 SAVE LOCAL OF USER INDEX\nMASK3    DC    XL3'202120'\nMASK4    DC    XL4'40202120'\nMASK46   DC    XL6'402020202120'\nMASK46A  DC    XL6'404020202120'\nMASK7    DC    XL7'4020206B202120'\nMASK10   DC    XL10'40202020202020202120'\nRECCNT   DC    PL1'0'\nMSGCOUNT DC    PL5'0'\nUWMCNT   DC    PL5'0'\nNOTDIR   DC    PL5'0'              CT FOR NOTICE DIRECTORY RECS\nUSRIND   DC    PL5'0'              CT FOR USER MAIL DIRECTORY RECS\nNOTMSG   DC    PL5'0'              CT FOR NOTICE MSG RECS\nUSRMSG   DC    PL5'0'              CT FOR USER MAIL MSG RECS\nPTRMSG   DC    PL5'0'              CT FOR POINTER REC (ALWAYS 1) JDM1\nREC04    DC    PL5'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0\nFREEREC  DC    PL5'0'              CT FOR INACTIVE MAIL MSG RECS\nUNUSABL  DC    PL5'0'\nUSERS    DC    PL5'0'\nACTNOT   DC    PL5'0'              Number of active Notify messages\nINANOT   DC    PL5'0'              Number of inactive Nofify messages\nTABLERR  DC    CL133'  ** Keys have been updated during this run **'\nUSERSOUT DC    CL133'0< The Following Users Have Messages Waiting  >'\nUSERDASH DC    CL133'    ----------------------------------------------X\n               --------------------'\nNDCREERR DC    CL133'   Notify Directory Table Read Error  -  1'\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*\nUSERID   DS    0CL8\nUSERIDI  DS    CL7\nUSERIDB  DS    CL1\n         SPACE\n*--------------------------------------------------------------------*\n*--              M E S S A G E   L A Y O U T S                     --*\n*--------------------------------------------------------------------*\n         SPACE\nUSERIMSG DS    0CL133\n         DC    CL8'-   *** '\nUSERITXT DC    CL31'Chain of Messages for USERID:  '\nUSERIDM  DC    CL7'       '\n         DC    CL5'  -- '\n         DC    CL8' Start: '\nUSERISTH DC    CL7'       '\n         DC    CL6' End: '\nUSERIENH DC    CL7'       '\n         DC    CL54' '\n         SPACE\n*--------------------------------------------------------------------*\nUSERMSNM DS    0CL133\n         DC    CL1' '\nUSERMTXT DC    CL15'Message Number '\nUSERMSNO DC    CL7'       '\n         DC    CL14' for Userid:  '\nUSERIDX  DC    CL7'       '\n         DC    CL89' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nACTNOMSG DS    0CL133\n         DC    CL10' '\nACTNMSG  DC    CL50'Number of Active BRODCAST Notices Messages    '\nACTNNUM  DC    CL10'       '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nINANOMSG DS    0CL133\n         DC    CL10' '\nINANMSG  DC    CL50'Number of Inactive BRODCAST Notices Messages  '\nINANNUM  DC    CL10'       '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nKEYCOUNT DS    0CL133\n         DC    CL10' '\nKEYTYPE  DC    CL50'Header Records'\nKEYCNT   DC    CL10'         1'\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nMAXIMUM  DS    0CL133\n         DC    CL60'0Total Available Blocks in Dataset'\nMAXCNT   DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30'-BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nNOTICES  DS    0CL133\n         DC    CL60' Blocks Required for Notify Service (Directory+MessX\n               ages)'\nNOTCNT   DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUSERLINE DS    0CL133\n         DC    CL4' '\nUSERID1  DS    CL7\n         DC    CL1' '\nMSGCNT1  DS    CL10\n         DC    CL6'  |   '\nUSERID2  DS    CL7\n         DC    CL1' '\nMSGCNT2  DS    CL10\n         DC    CL6'  |   '\nUSERID3  DS    CL7\n         DC    CL1' '\nMSGCNT3  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUTOTLINE DS    0CL133\n         DC    CL60' Number of TSO Users Defined in this BRODCAST datasX\n               et:'\nUSERCNT  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUIDTITLE DS    0CL133\n         DC    CL60'-   USERIDS with Outstanding User Messages: '\n         DC    CL73' '\n         SPACE\n*--------------------------------------------------------------------*\nUMSGTOTL DS    0CL133\n         DC    CL60' Total number of Outstanding User Messages Extractex\n               d :'\nUMSGCNT  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\nUWMSTOTL DS    0CL133\n         DC    CL60' Total number of Userids Having Outstanding Messagex\n               s :'\nUWMSCNT  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL52'&PGMNAME   ---   BRODCAST Bulk Message Extraction '\n         DC    C' ---'\n         DC    CL67' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL43'&PGMNAME   ---   BRODCAST Dataset - Record '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL60' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTUL02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL42'&PGMNAME   ---   BRODCAST Userid Messages '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL61' '\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLINE DS    0CL133\n         DC    CL60'0Blocks found to be Orphaned (not connected to a UsX\n               erid):'\nUNUSDCNT DC    CL10' '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN2 DS    0CL133\n         DC    CL65' (Use the BDMDIAG TSO command to display and/or del-\n               ete these.)'\n         DC    CL2' '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN3 DS    0CL133\n         DC    CL75' (BDMDIAG REPORT reports orphaned blocks, and BDMDI-\n               AG DELBAD deletes them.)'\n         DC    CL2' '\n         DC    CL56' '\n         SPACE\nPRMPRINT DS    0F\nPRMDRCNO DS    F                   RBA number of record in BRODCAST\nPRMDRCAD DS    F                   Address of 130-byte record to be\n*                                   printed and optionally formatted.\nPRMNDTBL DS    F                   Pointer to incore Notices Directory\n*                                   Table, zero if it isn't there.\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\nLINET    EQU   LINE+7\nLINEM    EQU   LINE+1\n*--------------------------------------------------------------------*\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*\n*--------------------------------------------------------------------*\n         SPACE\n         EJECT\n*----------------------------------------------------------------*\n*        THE FOLLOWING IS TAKEN FROM AN OLD MVS MANUAL CALLED\n*        \"OS/VS2 MVS CONVERSION NOTEBOOK\" (GC28-0689-6) AND\n*        CONTAINS THE FOLLOWING REFERENCE TO HOW THE BROADCAST\n*        HAS CHANGED FROM OS/MVT AND SVS TO MVS:\n*\n*        'MODIFIED TO INCLUDE A CHANGE LEVEL INDICATOR IN THE\n*        HEADER RECORD AND A NEW FIELD FOR EACH USER ID IN THE\n*        MAIL DIRECTORY RECORDS. THIS FIELD CONTAINS THE\n*        ADDRESS OF THE LAST MESSAGE IN THE CHAIN OF MESSAGES\n*        ASSOCIATED WITH EACH NEW USER.'\n*\n*        NOTE: UNTIL I CAN DUMP RECORDS AND FIGURE OUT WHERE THE\n*              ABOVE STATEMENTS FIT INTO THE DSECTS BELOW, WILL\n*              LET IT TO THE READER TO HELP AND GET IT FIGURED\n*              OUT BEFORE I DO.\n*\n*----------------------------------------------------------------*\n         SPACE\n         IEZBITS\n         SPACE\n         IKJZT301 DSECT=YES\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n         IKJEESCB\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMGTUID": {"ttr": 5639, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x16\\x01\\x06)_\\x01\\x16&\\x9f\\x156\\x04!\\x03J\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2006-10-22T00:00:00", "modifydate": "2016-09-25T15:36:16", "lines": 1057, "newlines": 842, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMGTUID TITLE 'BDMGTUID - EXTRACT USERIDS DEFINED TO SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM IS A BATCH PROGRAM WHICH EXTRACTS    *\n*                   ALL USERID NAMES FROM A BROADCAST DATASET.        *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*       Batch Program - Execution JCL                                 *\n*                                                                     *\n*       // JOB CARD                                                   *\n*       //*                                                           *\n*       //GETUSERS EXEC PGM=BDMGTUID                                  *\n*       //STEPLIB  DD DISP=SHR,DSN=your.BRODMSTR.LOADLIB              *\n*       //BRODCAST DD DISP=SHR,DSN=SYS1.BRODCAST                      *\n*       //SYSPRINT DD SYSOUT=*                                        *\n*       //UIDDIAG  DD SYSOUT=*                           Optional     *\n*       //*             UIDDIAG without BDMUSOUT will produce a       *\n*       //*             diagnostic report only, on defined USERIDs.   *\n*       //BDMUSOUT DD DISP=(NEW,CATLG,DELETE),                        *\n*       //            DSN=your.userid.file,                           *\n*       //            DCB=(LRECL=8,BLKSIZE=8000,DSORG=PS),            *\n*       //            SPACE=(TRK,(15,15),RLSE),                       *\n*       //            UNIT=SYSALLDA,VOL=SER=volser                    *\n*       //EXPORT   DD DISP=(NEW,CATLG,DELETE),      (Optional)        *\n*       //            DSN=your.EXPORT.file,                           *\n*       //            DCB=(LRECL=80,BLKSIZE=8000,DSORG=PS),           *\n*       //            SPACE=(TRK,(15,15),RLSE),                       *\n*       //            UNIT=SYSALLDA,VOL=SER=volser                    *\n*       //                                                            *\n*                                                                     *\n*  FUNCTION:   TO EXTRACT ALL USERIDS FROM AN EXISTING BROADCAST      *\n*              DATASET.                                               *\n*                                                                     *\n*  AUTHOR:     SAM GOLOB               VERSION:   1.4.0B              *\n*                                                                     *\n*  DATE:       OCT 23, 2006                                           *\n*                                                                     *\n*  CHANGES:    06/11/21  -  Introduced UIDDIAG DD name and report,    *\n*                             which is an optional DD name in JCL.    *\n*                           Allowed UIDDIAG without BDMUSOUT for      *\n*                             diagnosis of userids defined in the     *\n*                             Broadcast dataset.                      *\n*                           RDJFCB done for BDMUSOUT to show the      *\n*                             dataset that the userids were written   *\n*                             to.                                     *\n*                                                                     *\n*              06/11/22  -  Cleaned up errors when there are missing  *\n*                             DD names.                               *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        Register Equates\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMGTUID'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)       Branch over Eyecatchers\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMGTUID,R12,R11,R10\n         LR    R12,R15              Set up base registers\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R5,R1                Preserve PARM Pointer.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R5,SAVEPRM           PARM Pointer to Data Area Field\n         L     R1,SAVEPRM           Restore PARM Pointer\n         BAL   R9,INITCON           Initialize Constants in Data Area\n         SPACE 1\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of DD names in      06224\n*                             the JCL:  BRODCAST, BDMUSOUT, UIDDIAG.     06225\n* ----->                      Then OPEN them if there is JCL for them.   06226\n* ----->                      Then test the OPEN if it was good.         06226\n* ----->                      Set DDNFLAG on if the appropriate DD       06226\n* ----->                       was in the JCL.                           06226\n* ----->                      Set BDMNOFLG on if the appropriate OPEN    06226\n* ----->                       for the DD DIDN'T WORK!!!                 06226\n* ----------------------------------------------------------------- *    06227\n         MVI   DDNFLAG,X'00'        ZERO OUT DDNFLAG - Nothing OPEN\n         ST    R3,SAVER3            Save work registers\n         ST    R5,SAVER5\n         L     R5,16                R5=CVT                               06228\n         L     R5,0(,R5)            R5=TCB WORDS                         06229\n         L     R5,4(,R5)            R5=MY TCB                            06230\n         L     R5,12(,R5)           R5=TIOT                              06231\n         LA    R5,24(,R5)           R5=FIRST DD ENTRY                    06232\nTIOTLOOP CLC   0(4,R5),=XL4'00'     END OF TIOT?                         06233\n         BE    TIOTSEND             Yes. Go on with OPENs.               06234\n         CLC   4(8,R5),BRODCASN     BRODPRNT DDNAME there?               06235\n         BNE   TIOTPRTN             No                                   06236\n         OI    DDNFLAG,X'01'        Show presence of BRODCAST DD         06237\n         B     TIOTNEXT             Try next entry                       06238\nTIOTPRTN CLC   4(8,R5),BDMUSOUN     BDMUSOUT DDNAME there?               06239\n         BNE   TIOTUSRN             No                                   06240\n         OI    DDNFLAG,X'02'        Show presence of BDMUSOUT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTUSRN CLC   4(8,R5),UIDDIAGN     UIDDIAG DDNAME there?                06239\n         BNE   TIOTSYSP             No                                   06240\n         OI    DDNFLAG,X'04'        Show presence of UIDDIAG  DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTSYSP CLC   4(8,R5),SYSPRINN     SYSPRINT DDNAME there?               06239\n         BNE   TIOTEXPT             No                                   06240\n         OI    DDNFLAG,X'08'        Show presence of SYSPRINT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTEXPT CLC   4(8,R5),EXPORTN      EXPORT   DDNAME there?               06239\n         BNE   TIOTNEXT             No                                   06240\n         OI    DDNFLAG,X'10'        Show presence of SYSPRINT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)            R3=LENGTH OF DD ENTRY                06244\n         AR    R5,R3                R5=NEXT DD ENTRY                     06245\n         B     TIOTLOOP             GO CHECK IT                          06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3            Restore work registers\n         L     R5,SAVER5\n         B     CHEKOPEN             Jump over Constants\n* ---- >     - - - - - - - - - - - -\nBRODCASN DC    CL8'BRODCAST'        Literals for the DD names.\nBDMUSOUN DC    CL8'BDMUSOUT'\nUIDDIAGN DC    CL8'UIDDIAG '\nSYSPRINN DC    CL8'SYSPRINT'\nEXPORTN  DC    CL8'EXPORT  '\n* ---- >     - - - - - - - - - - - -\n* ---------------------------------------------------------------- *\n*                                                                  *\n*   OPEN FILES -                                                   *\n*                                                                  *\n*    When we're finished here, we should have a good idea about    *\n*    how the DD names were coded in the JCL, and which files were  *\n*    actually opened.  We use 2 flags:  DDNFLAG (if on) shows      *\n*    that the DD name was actually coded in the JCL.  BDMNOFLG     *\n*    (if on) shows that the actual file is NOT OPEN.  In either    *\n*    flag:                                                         *\n*                                                                  *\n*    BRODCAST DD  -  flag = X'01'                                  *\n*    BDMUSOUT DD  -  flag = X'02'                                  *\n*    UIDDIAG  DD  -  flag = X'04'                                  *\n*    SYSPRINT DD  -  flag = X'08'                                  *\n*    EXPORT   DD  -  flag = X'10'                                  *\n*                                                                  *\n* ---------------------------------------------------------------- *\nCHEKOPEN DS    0H\n         TM    DDNFLAG,X'08'        SYSPRINT there?\n         BO    DOOPENS              Yes. Go OPEN it.\n         WTO   'BDMGU00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'02'        BDMUSOUT there? Then it's allocated\n         BZ    NODELUSO             Not there, no need to delete.\n         WTO   'BDMGU03E     BDMUSOUT not created properly.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU02E     Delete BDMUSOUT and rerun job.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNODELUSO DS    0H\n         TM    DDNFLAG,X'10'        EXPORT   there? Then it's allocated\n         BZ    NODELMSG             Not there, no need to delete.\n         WTO   'BDMGU03E     Optional EXPORT DD not proper.',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU02E     Delete EXPORT DSN and rerun.  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMGU00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNODELMSG DS    0H\n         B     EOJ16                End right away.  Code 16.\nDOOPENS  DS    0H                   OPEN SYSPRINT and print titles\n         OPEN  (SYSPRINT,(OUTPUT))\n         PUT   SYSPRINT,TITLINE\n         PUT   SYSPRINT,CPYRLINE\n         PUT   SYSPRINT,BLNKLINE\n         TM    DDNFLAG,X'01'        Is BRODCAST DD in JCL?\n         BZ    NOBRODDD             No. Don't OPEN. Flag as Bad OPEN.\n         OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'    Did the OPEN work?\n         BO    TRYOOPN1             Yes. Go OPEN the other files.\nNOBRODDD DS    0H\n         OI    BDMNOFLG,X'01'       Flag that BRODCAST DD is not OPEN\n*        B     TRYOOPNO\nTRYOOPN1 DS    0H\n         TM    DDNFLAG,X'02'        Is BDMUSOUT DD in JCL?\n         BZ    NOUOUTDD             No. Don't OPEN. Flag as Bad OPEN.\n         TM    DDNFLAG,X'01'        BROADCAST DATASET IN JCL?\n         BZ    WMESS                No. Get out and do nothing.\n         TM    BDMNOFLG,X'01'       BRODCAST DATASET NOT OPEN?\n         BO    WMESS                If so, don't OPEN others.\n         OPEN  (BDMUSOUT,(OUTPUT))\n         TM    BDMUSOUT+48,X'10'    Did the OPEN work?\n         BO    TRYOOPNA             Yes. Don't flag that it didn't.\nNOUOUTDD DS    0H\n         OI    BDMNOFLG,X'02'       Flag that BDMUSOUT DD is not OPEN\n         B     TRYOOPNA             Go to the next DD name.\nTRYOOPNA DS    0H\n         TM    DDNFLAG,X'10'        Is EXPORT   DD in JCL?\n         BZ    NOUOUTEX             No. Don't OPEN. Flag as Bad OPEN.\n         OPEN  (EXPORT,(OUTPUT))\n         TM    EXPORT+48,X'10'      Did the OPEN work?\n         BO    USOUTOPN             Yes. Don't flag that it didn't.\nNOUOUTEX DS    0H\n         OI    BDMNOFLG,X'10'       Flag that EXPORT DD is not OPEN\n         TM    BDMNOFLG,X'02'       BDMUSOUT OPENed?\n         BZ    USOUTOPN             Yes. Go to the RDJFCB.\n         B     TRYOOPN2             Go to the next DD name.\nUSOUTOPN DS    0H                   Report on BDMUSOUT Characteristics\n         TM    BDMNOFLG,X'02'       BDMUSOUT OPENed?\n         BO    TRYOOPN2             No. Bypass the RDJFCB.\n* ----------------------------------------------------------------- *\n*   BDMUSOUT has to be OPEN here, because we branched if not OPEN.  *\n* ----------------------------------------------------------------- *\n         RDJFCB BDMUSOUT\n         MVC   OUTLINE,OUTLINE-1    Clear work area for output line\n         MVC   OUTLINE,MSGDSN       Move in message skeleton\n         TM    DDNFLAG,X'07'        3 DD'S are OPEN?\n         BO    TRYOOPN2             Yes-then don't print here yet.\n         BAL   R6,PRTJFCB           Has to be Diagnostics Only.\n* ---- PRTJFCB OF EXPORT DD NAME -  BELOW\n         TM    BDMNOFLG,X'10'       EXPORT OPENed?\n         BO    USOUTOPW             No. Don't print RDJFCB info for it.\n         RDJFCB EXPORT\n         MVC   OUTLINE,OUTLINE-1    Clear work area for output line\n         MVC   OUTLINE,MSGEXP       Move in message skeleton\n         BAL   R6,PRTJFCB           Print the EXPORT info if there.\nUSOUTOPW DS    0H                   Report on EXPORT Characteristics\n* ---- PRTJFCB OF EXPORT DD NAME -  ABOVE\nTRYOOPN2 DS    0H\n         TM    DDNFLAG,X'04'        UIDDIAG DD present?\n         BZ    NOUIDDDD             No. So don't try to OPEN it.\n         TM    BDMNOFLG,X'01'       BRODCAST Dataset not OPEN?\n         BO    NOUIDDDD             Then flag UIDDIAG not OPEN too.\n         OPEN  (UIDDIAG,(OUTPUT))\n         TM    UIDDIAG+48,X'10'     Did the OPEN work?\n         BO    PUTUIDTL             Yes. So put out title information.\nNOUIDDDD DS    0H\n         OI    BDMNOFLG,X'04'       Flag that UIDDIAG DD is not OPEN.\n         B     TRYOOPNO             If so, no UID report. But go on.\nPUTUIDTL DS    0H                   Begin printing UID Diagnostics.\n         PUT   UIDDIAG,TITLINE\n         PUT   UIDDIAG,CPYRLINE\n         PUT   UIDDIAG,UIDTITLE\n         PUT   UIDDIAG,BLNKLINE\n         TM    DDNFLAG,X'07'        3 DD'S are OPEN?\n         BNO   OUTNDIAG             Not all OPEN. Don't print JFCB here\n         BAL   R6,PRTJFCB           Print characteristics of BDMUSOUT\n* ---- PRTJFCB OF EXPORT DD NAME -  BELOW\n         TM    BDMNOFLG,X'10'       EXPORT OPENed?\n         BO    USOUTOPX             No. Don't print RDJFCB info for it.\n         RDJFCB EXPORT\n         MVC   OUTLINE,OUTLINE-1    Clear work area for output line\n         MVC   OUTLINE,MSGEXP       Move in message skeleton\n         BAL   R6,PRTJFCB           Print the EXPORT info if there.\nUSOUTOPX DS    0H                   Report on EXPORT Characteristics\n* ---- PRTJFCB OF EXPORT DD NAME -  ABOVE\nOUTNDIAG DS    0H                   Diagnostics only message.\n         TM    DDNFLAG,X'02'        BDMUSOUT there?\n         BO    NOMSG3               Yes. No Diagnosis Only report.\n         TM    DDNFLAG,X'05'        BRODCAST and UIDDIAG only?\n         BNO   NOMSG3               Not this combination. Omit message.\n         BAL   R6,DIAGONLY          Diagnostics report only, for UIDs.\nNOMSG3   DS    0H                   Finish up UID report Header.\n         PUT   UIDDIAG,UIDDESCL\n         PUT   UIDDIAG,UIDDASH\n         PUT   UIDDIAG,BLNKLINE\nTRYOOPNO DS    0H\n         TM    DDNFLAG,X'03'        BRODCAST and BDMUSOUT OPEN?\n         BO    HREAD                They are OPEN, so go on.\n         TM    DDNFLAG,X'05'        BRODCAST and UIDDIAG OPEN?\n         BO    HREAD                They are OPEN, so go on.\n         B     WMESS                They are not OPEN - Error & Exit.\n*\n*\nHREAD    DS    0H\n         BAL   R9,HEADREAD          Read Header Record and extract\n*                                   RBA of first UID record to search.\n*                                   This value is stored in SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         ZAP   SLOTCNT,=P'0'       NEW SLOT COUNT FOR NEW READ\n         LA    R7,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   UIDPRBA(3),SAVERBA  SAVE CURRENT RBA FOR UID REPORT\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         AP    SLOTCNT,=P'1'       COUNT WHICH SLOT THIS IS\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         TM    BDMNOFLG,X'02'      Is BDMUSOUT not OPEN?\n         BO    NOBDMUSO            Yes. Can't PUT anything to it.\n         PUT   BDMUSOUT,USERID     PUT OUT THIS ID TO OUTPUT FILE\nNOBDMUSO DS    0H\n         TM    BDMNOFLG,X'10'\n         BO    NOEXPORT\n         MVC   EXPOUT,EXPOUT-1\n         MVC   EXPOUT+8(9),=C'BDMUSADD '\n         MVC   EXPOUT+17(8),USERID\n         PUT   EXPORT,EXPOUT\nNOEXPORT DS    0H\n         AP    USERCNT,=P'1'       INCREMENT USER COUNTER      SG 05/99\n         TM    BDMNOFLG,X'04'        UIDDIAG NOT OPEN?\n         BO    NOUIDPRT               THEN NO UID PRINT\n*\n* -- > This is the guts of the UID diagnostics report - below\n*\n         MVC   SLOTLINE(133),SLOTLINE-1    CLEAR SLOT LINE\n         MVC   SLOTLINE+5(10),MASK10       Move in mask\n         ED    SLOTLINE+5(10),USERCNT      Count of all Userids\n         MVC   SLOTLINE+20(8),USERID       Name of this Userid\n         HEX   SLOTLINE+30,3,UIDPRBA       Hex display of record's RBA\n         MVC   SLOTLINE+40(10),BLNKLINE    Prepare for Decimal display\n         L     R5,UIDPRB                   Get RBA number\n         CVD   R5,DWORK                    Convert it to decimal\n         MVC   SLOTLINE+40(7),MASK7A       Move in edit mask\n         ED    SLOTLINE+40(7),DWORK+5      Edit the Decimal number in\n         MVC   SLOTLINE+50(6),MASK6        Report which slot this is\n         ED    SLOTLINE+50(6),SLOTCNT+4    Edit the slot number\n         MVC   SLOTLINE+54(30),BLNKLINE    Clean out rest of the line.\n         PUT   UIDDIAG,SLOTLINE\n         MVC   SLOTLINE(133),SLOTLINE-1    Clear the entire SLOT LINE.\nNOUIDPRT DS    0H\n*\n* -- > This is the guts of the UID diagnostics report - above\n*\nTRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         BCT   R7,USRLOOP          TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n*        LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         PUT   SYSPRINT,LINE                     SO GOOD.\n*\n*        *--------------------------------*\n*        *  GET HERE AT END OF USER RCDS  *\n*        *--------------------------------*\n* -- >      Put out the Summary Report line....\n*\nENDUSER  DS    0H\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         PUT   SYSPRINT,LINE                   LINES AT THE END\n         MVC   WK1ALL,USRALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+46(10),USERCNT\n         MVC   LINET(L'WK1ALL),WK1ALL\n         PUT   SYSPRINT,LINE                THEN\n         TM    BDMNOFLG,X'04'               Also doing for UIDDIAG?\n         BO    ENDUEOJ                      Not there - don't do.\n         PUT   UIDDIAG,BLNKLINE\n         PUT   UIDDIAG,LINE\nENDUEOJ  B     EOJ                          Now get the heck out.\n         SPACE 3\nWMESS    DS    0H                           Crucial DD names missing.\n         TM    BDMNOFLG,X'03'               BRODCAST and BDMUSOUT OPEN?\n         BZ    EOJ                          Both are, just get out.\n         TM    BDMNOFLG,X'01'               Is BRODCAST DD not OPEN?\n         BZ    WMESS2                       OPEN--Don't write message\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE1),MESSAGE1   Write OPEN Error message\n         PUT   SYSPRINT,LINE\n         TM    DDNFLAG,X'02'       BDMUSOUT DD there?\n         BZ    BYPBRODC            Yes. It needs to be deleted.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGU03E   ---  BDMUSOUT not created properX\n               ly..'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGU02E   ---  Delete BDMUSOUT and rerun jX\n               ob. '\n         PUT   SYSPRINT,LINE\nBYPBRODC DS    0H\n         TM    DDNFLAG,X'10'       EXPORT DD there?\n         BZ    BYPRUEXP            Yes. It needs to be deleted.\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGU03E   ---  EXPORT DD not created propeX\n               rly.'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(48),=C'BDMGU02E   ---  Delete EXPORT DSN and rerunX\n                job.'\n         PUT   SYSPRINT,LINE\nBYPRUEXP DS    0H\nWMESS2   DS    0H\n         TM    BDMNOFLG,X'02'               Is BDMUSOUT DD not OPEN?\n         BZ    EXIT12                       No message--just bad code\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE2),MESSAGE2   Write OPEN Error message\n         PUT   SYSPRINT,LINE\n         B     EXIT12              SYSPRINT there, do Code 12.\nEXIT12   DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMGM05E   ***  Please correct your JCL   *x\n               **  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     EOJ12\nEOJ      DS    0H                  BYE. CC = 0.\n         LA    R5,0                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJOUT\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJOUT\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJOUT\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJOUT\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJOUT\nEOJOUT   DS    0H\n         TM    BDMNOFLG,X'01'      Was BRODCAST DD never opened?\n         BO    EOJBCCLS            Then don't try to close it.\n         CLOSE (BRODCAST)\nEOJBCCLS DS    0H\n         TM    BDMNOFLG,X'02'      Was BDMUSOUT DD never opened?\n         BO    EOJBUCLS            Then don't try to close it.\n         TM    DDNFLAG,X'02'       Was BDMUSOUT DDname never coded?\n         BZ    EOJBUCLS            Then don't try to close it.\n         CLOSE (BDMUSOUT)\nEOJBUCLS DS    0H\n         TM    BDMNOFLG,X'04'      Was UIDDIAG DD never opened?\n         BO    EOJUSCLS            Then don't try to close it.\n         TM    DDNFLAG,X'04'       Was UIDDIAG DDname never coded?\n         BO    EOJUSCLS            Then don't try to close it.\n         CLOSE (UIDDIAG)\nEOJUSCLS DS    0H                  Close EXPORT conditionally\n         TM    BDMNOFLG,X'10'      Was EXPORT DD never opened?\n         BO    EOJEXCLS            Then don't try to close it.\n         TM    DDNFLAG,X'10'       Was EXPORT DDname never coded?\n         BO    EOJEXCLS            Then don't try to close it.\n         CLOSE (EXPORT)\nEOJEXCLS DS    0H                  Close SYSPRINT after everything.\n         TM    DDNFLAG,X'08'       Was SYSPRINT DD there?\n         BZ    EOJNCSYS            No. Then don't CLOSE it.\n         CLOSE (SYSPRINT)\nEOJNCSYS DS    0H                  Bypass CLOSE if SYSPRINT missing.\n         LR    R1,R13              Restore address of GETMAINed area.\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore corrupted RC register\n         L     R13,4(,R13)         Prepare return to the system.\n         L     R14,12(,R13)        Restore R12\n         ST    R15,16(,R13)        Put RC into passed savearea\n         LM    R0,R12,20(R13)      Other registers\n         BR    R14                 Back to system\n         EJECT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - -           S  U  B  R  O  U  T  I  N  E  S               - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        Initialize Data Areas that have been GETMAINed.          *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '                INITIALIZE BLANKER\n         MVI   OUTLINE-1,X'40'            INITIALIZE BLANKER\n         MVC   OUTLINE(133),OUTLINE-1     CLEAR LINE AREA\n         MVC   USERCNT(5),PACKZER5        INITIALIZE COUNTER\n         MVI   BDMNOFLG,X'00'             MARK ALL FILES OPENABLE\n         MVI   SLOTLINE-1,X'40'           INITIALIZE BLANKER\n         MVC   SLOTLINE(133),SLOTLINE-1   CLEAR SLOT LINE\n         XC    DWORK,DWORK                CLEAR WORK AREA\n         MVI   JFCB1,X'87'                INITIALIZE JFCB HEADER\n         MVI   EXPOUT-1,X'40'\n         MVC   EXPOUT,EXPOUT-1\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n*\nPRTJFCB  DS    0H                         Print JFCB info for BDMUSOUT\n         ST    R6,SAVER6                  Save the BAL register\n         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU01                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU01                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU01 DS    0H                         SKIP OVER UIDDIAG PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGMBR\n         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU02                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU02                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU02 DS    0H                         SKIP OVER UIDDIAG PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGVOLSR           VOLSER\n         MVC   OUTLINE+19(6),JFCBVOLS\n         MVC   OUTLINE+26(6),JFCBVOLS+6\n         MVC   OUTLINE+33(6),JFCBVOLS+12\n         MVC   OUTLINE+40(6),JFCBVOLS+18\n         MVC   OUTLINE+47(6),JFCBVOLS+24\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU03                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU03                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU03 DS    0H                         SKIP OVER UIDDIAG PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGDSORG           DSORG\n         MVC   OUTLINE+19(3),=C'IS '\n         CLI   JFCDSRG1,JFCORGIS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'ISU'\n         CLI   JFCDSRG1,JFCORGIS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PS '\n         CLI   JFCDSRG1,JFCORGPS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PSU'\n         CLI   JFCDSRG1,JFCORGPS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DA '\n         CLI   JFCDSRG1,JFCORGDA\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DAU'\n         CLI   JFCDSRG1,JFCORGDA+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PO '\n         CLI   JFCDSRG1,JFCORGPO\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'POU'\n         CLI   JFCDSRG1,JFCORGPO+JFCORGU\n         BE    PUTDSRG\n         OI    FLAG1,X'01'                FLAG DSORG MISSING\n         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'\nPUTDSRG  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU04                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU04                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU04 DS    0H                         SKIP OVER UIDDIAG PRINT.\nRECFM    DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGRECFM           RECFM\n         LA    R4,OUTLINE+19\n         TM    JFCRECFM,JFCUND\n         BNO   NOTUND\n         MVI   0(R4),C'U'\n         OI    FLAG2,X'01'                FLAG RECFM=U\n         A     R4,ONE\n         B     CHKB\nNOTUND   TM    JFCRECFM,JFCFIX\n         BNO   NOTFIX\n         MVI   0(R4),C'F'\n         A     R4,ONE\nNOTFIX   TM    JFCRECFM,JFCVAR\n         BNO   CHKB\n         MVI   0(R4),C'V'\n         A     R4,ONE\nCHKB     TM    JFCRECFM,JFCRFB\n         BNO   NOTBLK\n         MVI   0(R4),C'B'\n         A     R4,ONE\nNOTBLK   TM    JFCRECFM,JFCRFS\n         BNO   NOTSCN\n         MVI   0(R4),C'S'\n         A     R4,ONE\nNOTSCN   TM    JFCRECFM,JFCASA\n         BNO   NOTASA\n         MVI   0(R4),C'A'\n         A     R4,ONE\nNOTASA   TM    JFCRECFM,JFCMAC\n         BNO   PUTRCFM\n         MVI   0(R4),C'M'\nPUTRCFM  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU05                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU05                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU05 DS    0H                         Skip over UIDDIAG print.\nLRECL    DS    0H\n         MVC   OUTLINE,OUTLINE-1          Clear line.\n         MVC   OUTLINE,MSGLRECL           Put LRECL skeleton into it.\n         SR    R4,R4                      Clear work register\n         LH    R4,JFCLRECL                Load LRECL in from JFCB\n         C     R4,=F'0'                   Is it zero?\n         BNE   LRECPRT                    No. Don't check for RECFM=U.\n         TM    FLAG2,X'01'                Is RECFM=U?\n         BO    LRECPRT                    Yes-0 is legitimate.\n         OI    FLAG1,X'04'\n         MVC   OUTLINE+19(7),=C'MISSING'\n         B     LRECPUT\nLRECPRT  DS    0H\n         CVD   R4,DECVALUE\n         MVC   OUTLINE+19(12),EDPAT       LRECL\n         ED    OUTLINE+19(12),DECVALUE+3\nLRECPUT  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU06                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU06                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\nNOPRTU06 DS    0H                         SKIP OVER UIDDIAG PRINT.\nBLKSIZE  MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGBLKSZ\n         SR    R4,R4\n         LH    R4,JFCBLKSI\n         C     R4,=F'0'\n         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD\n         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING\n         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'\n         B     BLKSZPUT\nBLKSIZEG CVD   R4,DECVALUE\n         MVC   OUTLINE+19(12),EDPAT       BLKSIZE\n         ED    OUTLINE+19(12),DECVALUE+3\nBLKSZPUT PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDDIAG DD in the JCL?\n         BZ    NOPRTU07                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDDIAG not OPEN?\n         BO    NOPRTU07                   No. Don't print info to it.\n         PUT   UIDDIAG,OUTLINE\n         PUT   UIDDIAG,BLNKLINE\nNOPRTU07 DS    0H                         SKIP OVER UIDDIAG PRINT.\n         L     R6,SAVER6\n         BR    R6\n* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\nDIAGONLY DS    0H                  Diagnostics Only\n* - - - >\n         ST    R6,SAVER6\n         MVC   LINE,LINE-1                  Clear line.\n         MVC   LINET(L'MESSAGE3),MESSAGE3   Write no BDMUSOUT output.\n         PUT   SYSPRINT,LINE\n         PUT   SYSPRINT,BLNKLINE\n         PUT   UIDDIAG,LINE                 Also write to UIDDIAG reprt\n         PUT   UIDDIAG,BLNKLINE\n         L     R6,SAVER6                    Restore BAL register\n         BR    R6                           Go back to caller.\n* - - - >\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133              Program Title on Report\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\nUIDTITLE DS    0CL133              Userid Diagnostics Report Title\n         DC    C'0'\n         DC    CL11' '\n         DC    CL3'-  '\n         DC    CL79'&PGMNAME Program  -  Userid Diagnosis Report  -    X\n                 '\n         DC    CL41' '\n*--------------------------------------------------------------------*\nUIDDESCL DS    0CL133              Userid Diagnostics Report Header\n         DC    C'0'\n         DC    CL6' '\n         DC    CL9'UID Count'\n         DC    CL4' '\n         DC    CL8'Userid  '\n         DC    CL1' '\n         DC    CL8'RBA Hex '\n         DC    CL2' '\n         DC    CL8'RBA Dec '\n         DC    CL2' '\n         DC    CL8'Slot #'\n         DC    CL76' '\n*--------------------------------------------------------------------*\nUIDDASH  DS    0CL133              Dashes under Report Heading\n         DC    C' '\n         DC    CL6' '\n         DC    CL9'---------'\n         DC    CL4' '\n         DC    CL8'------  '\n         DC    CL1' '\n         DC    CL8'------- '\n         DC    CL2' '\n         DC    CL8'------- '\n         DC    CL2' '\n         DC    CL8'------'\n         DC    CL76' '\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133              Copyright information for program\n         DC    C'0'\n         DC    CL3' '\n* -->                              Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL48' '\n         SPACE\n*--------------------------------------------------------------------*\nBLNKLINE DC    CL133' '            Blank Line sample\n*-----------------------------------------------------------------*\nFLAG1    DC    X'00'\n*              X'01'               DSORG IS MISSING\nFLAG2    DC    X'00'\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nFF       EQU   X'FF'\nF16      DC    F'16'\nF00      DC    F'0'\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGE1 DC    C'BDMGU01E   ---  BRODCAST DD Name Missing  ---  '\nMESSAGE2 DC    C'BDMGU01E   ---  BDMUSOUT DD Name Missing  ---  '\nMESSAGE3 DC    C'Diagnostic Report Only - No BDMUSOUT was produced.   '\nUSRALL DC C'Total # of Userids Dumped to BDMUSOUT DD Name             '\nMESPREND DC    C'?????  Preliminary end of USERID Records - - *'\nMSGEXP   DC    CL133'0   EXPORT   DSN ='\nMSGDSN   DC    CL133'0   BDMUSOUT DSN ='\nMSGVOLSR DC    CL133'         VOLSER  ='\nMSGMBR   DC    CL133'         MEMBER  ='\nMSGDSORG DC    CL133'         DSORG   ='\nMSGBLKSZ DC    CL133'         BLKSIZE ='\nMSGLRECL DC    CL133'         LRECL   ='\nMSGRECFM DC    CL133'         RECFM   ='\n         DC    CL133' '\nMASK6    DC    XL6'402020202120'\nMASK7A   DC    XL7'40202020212020'\nMASK10   DC    XL10'40202020202020202120'\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\nSYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\nUIDDIAG  DCB   MACRF=PM,DDNAME=UIDDIAG,DSORG=PS,RECFM=FA,LRECL=133,    X 05426\n               BLKSIZE=133                                               05427\nBDMUSOUT DCB   DDNAME=BDMUSOUT,MACRF=PM,DSORG=PS,RECFM=FB,             X\n               LRECL=8,EXLST=JFCB1\nEXPORT   DCB   DDNAME=EXPORT,MACRF=PM,DSORG=PS,RECFM=FB,EXLST=JFCB1,   X\n               LRECL=80\n         LTORG\n         SPACE\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORK    DC    D'0'\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUSERCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nSLOTCNT  DC    PL5'0'              COUNT OF SLOT NUMBER IN UID RECORD\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nUIDPRB   DS    0F\nUIDPRBAX DC    X'00'\nUIDPRBA  DC    X'000000'           STORE CURRENT RBA FOR DIAG PRINT\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\n         DS    0F                  ALIGN ON FULLWORD\nSAVER3   DS    F                   WORK REGS FOR TIOT SCAN\nSAVER5   DS    F                   WORK REGS FOR TIOT SCAN\nSAVEPRM  DS    F                   TEMP SAVE FOR PARM POINTER\nSAVER6   DS    F                   BAL REGISTER SAVE AREA\nSAVER9A  DS    F                   BAL REGISTER SAVE AREA\nSAVER9B  DS    F                   BAL REGISTER SAVE AREA\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\nLINEM    EQU   LINE+1\nOUTLINEB DS    C                   OUTLINE-1\nOUTLINE  DS    CL133\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nWK1ALL DC C'                                                          '\nBDMNOFLG DS    X\n*        EQU   X'01'               BRODCAST DD MISSING\n*        EQU   X'02'               BDMUSOUT DD MISSING\n*        EQU   X'04'               UIDDIAG  DD MISSING\n         SPACE 1\nDDNFLAG  DS    X\n         DS    CL6                 FILLER\n         DS    C\nSLOTLINE DS    CL133\n         DS    CL6\n         DS    X\nEXPOUT   DS    CL80\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES,LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BDMINIT": {"ttr": 6149, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x007\\x01\\x063?\\x01\\x16&\\x9f\\x156\\t\\x83\\x02\\xb8\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2006-11-29T00:00:00", "modifydate": "2016-09-25T15:36:37", "lines": 2435, "newlines": 696, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMINIT  TITLE 'BDMINIT - INITIALIZE AN EMPTY BRODCAST DATASET'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program to initialize     *\n*                   a new BRODCAST dataset, based on initialization   *\n*                   parameters similar to those in the BDMCALC        *\n*                   program.                                          *\n*                                                                     *\n*    Copyright (C) 1995-2016 Sam Golob Systems Programming LLC        *\n*              All Rights Reserved                                    *\n*                                                                     *\n*    Function:   To format a new BRODCAST dataset with the proper     *\n*                number of records of each type, based on parameters  *\n*                entered in the SYSIN DD name.                        *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                                                                     *\n*    Batch Execution:                                                 *\n*                                                                     *\n* //BDMINIT EXEC PGM=BDMINIT,REGION=2000K                             *\n* //STEPLIB  DD  DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB                 *\n* //*                                                                 *\n* //*   BRODUMMY must be allocated as exactly 1 Cylinder primary      *\n* //*   on the SAME DEVICE TYPE as the proposed new Broadcast         *\n* //*   Dataset.  The program will attempt to correct errors.         *\n* //*                                                                 *\n* //*   BRODUMMY must be allocated on a device of the SAME TYPE       *\n* //*   as BRODCOUT, as BRODUMMY is used for calculation purposes.    *\n* //*                                                                 *\n* //BRODUMMY DD  DSN=&&BRDUMM,DISP=(NEW,DELETE,DELETE),               *\n* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *\n* //         SPACE=(CYL,(1,1),RLSE),UNIT=SYSALLDA,VOL=SER=volser      *\n* //BRODCOUT DD  DSN=yourid.NEW.BRODCAST,DISP=(NEW,CATLG,DELETE),     *\n* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *\n* //         SPACE=(CYL,(mm),RLSE),UNIT=SYSALLDA,VOL=SER=volser      *\n* //*        SPACE=(TRK,(mm),RLSE),UNIT=SYSALLDA,VOL=SER=volser      *\n* //SYSPRINT DD  SYSOUT=*                                             *\n* //SYSIN    DD  *                                                    *\n* keywords                                                            *\n* /*                                                                  *\n*                                                                     *\n*       Admissible SYSIN Keywords:                                    *\n*       ---------- ----- ---------                                    *\n*     NOTIFY=nnn      (number of Global Notify records)               *\n*     USERIDS=nnnn    (number of Userids to be loaded)                *\n*     MESSAGES=nnnnn  (number of User Messages in BRODCAST)           *\n*     EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST)           *\n*     RECORDS=nnnnnn  (total number of records in BRODCAST)           *\n*     TRACKS=nnnn     (total tracks in BRODCAST allocation)           *\n*     CYLINDERS=nnn   (total cylinders in BRODCAST allocation)        *\n*     ----------------------------------------------                  *\n*     SYSIN Keywords have to be entered in Column 1.                  *\n*     ----------------------------------------------                  *\n*                                                                     *\n*    Changes: 12/10/06 -                                              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS                    Register Equates.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n         LCLA  &DEFNOTF,&DEFUSER,&DEFMSGS\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMINIT '\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n*   DEFAULT VALUES IF NOT CODED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n&DEFNOTF SETA  125\n&DEFUSER SETA  1000\n&DEFMSGS SETA  7000\n* ------------------------------------------------------------------ *   01489\n&CHANOTF SETC  '&DEFNOTF'\n&CHAUSER SETC  '&DEFUSER'\n&CHAMSGS SETC  '&DEFMSGS'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)               Save Registers\n         LR    R12,R15\n         USING BDMINIT,R12,R11,R10,R8,R7     Establish Base Registers\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R8,4095(,R10)\n         LA    R8,1(,R8)\n         LA    R7,4095(,R8)\n         LA    R7,1(,R7)\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          Initialize constants in data area\n         SPACE 1\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  SYSIN AND BRODCOUT.              06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),BRODCOUT+40  PARMREPT DDNAME THERE?               06235\n         BNE   TIOTSYSN       NO                                         06236\n         OI    FLAGSYST,X'01'       SHOW PRESENCE OF BRODCOUT DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTSYSN CLC   4(8,R5),SYSIN+40                                          06239\n         BNE   TIOTBRDD                                                  06240\n         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTBRDD CLC   4(8,R5),BRODUMMY+40                                       06239\n         BNE   TIOTNEXT                                                  06240\n         OI    FLAGSYST,X'04'       SHOW PRESENCE OF BRODUMMY DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n* ----------------------------------------------------------------- *    06227\nDOBROD   DS    0H\n         OPEN  (SYSPRINT,(OUTPUT))\n         BAL   R9,OUTHEADR         Write SYSPRINT Header\n* ------------------------------------------------------------------ *\n* ---    M A I N   R O U T I N E S                               --- *\n* ------------------------------------------------------------------ *\nMAINLINE DS    0H                  MAIN CALCULATION CYCLE\n*                                  Do RDJFCB after the OPEN\n         OPEN  (BRODUMMY,(OUTPUT))\n         RDJFCB BRODUMMY\n         BAL   R9,JFCBDSPL         Display the contents of the JFCB\n         BAL   R9,JFCBTEST         Test the JCL for errors.\n         TM    JFCBFLG,X'FF'       Were there any?\n         BNZ   CORRERRS            Yes. Tell the user to correct them.\n         BAL   R9,WRITDUMY         Write 1 Cylinder of dummy records.\n         CLOSE (BRODUMMY)\n         BAL   R9,SYSADMIS         Message with admissible keywords.\n         BAL   R9,DOSYSIN          Process the SYSIN parameters.\n         TM    INVNFLG,X'01'       Were any invalid numbers coded?\n         BO    NUMERRS             Yes, report and abort\n         BAL   R9,CALCRECS         Calculations for all SYSIN keywords.\n*                                  Calculate total records from\n*                                  NOTIFY+USERIDS+MESSAGES+EXTRAUIDS\n         BAL   R9,WRITBROD         Create an empty BRODCAST according\n*                                   to the specs.\n         B     EOJ\n* ------------------------------------------------------------------ *\nNUMERRS  DS    0H                  Errors coding numerics in SYSIN.\n         MVC   LINE,LINE-1         Blank line.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(42),=C'Invalid numbers were coded in SYSIN cards.'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(42),=C'Please check them over and correct them.  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Blank line.\n         PUT   SYSPRINT,LINE\n         B     EOJ8                RC = 8\n* ------------------------------------------------------------------ *\nCORRERRS DS    0H                  Correct JCL errors in BRODUMMY.\n         MVC   LINE,LINE-1         Clear line and print\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Clear line again.\n         MVC   LINET(L'MSGCORRE),MSGCORRE Message to correct JCL errors\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1         Clear line and print\n         PUT   SYSPRINT,LINE\n         B     EOJ8\n* ------------------------------------------------------------------ *\nEOJ4     DS    0H                  RC = 4.\n         LA    R5,4                Load it into R5 so it's not lost.\n         B     EOJC                And end the program.\nEOJ8     DS    0H                  RC = 8.\n         LA    R5,8                Load it into R5 so it's not lost.\n         B     EOJC                And end the program.\nEOJ0     DS    0H                  RC = 0.  Normal end of program.\nEOJ      DS    0H                  RC = 0.  Normal end of program.\n         LA    R5,0\nEOJC     DS    0H                  Close DCBs up.\n         CLOSE (SYSPRINT)\n         LR    R1,R13              Prepare for FREEMAIN.\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\nEOJGO3   DS    0H\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\nEOJN     BR    R14                 Go back to system.\n         LTORG\n         EJECT\n* ------------------------------------------------------------------ *\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *\n*   OF THE PROGRAM EXECUTION.                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nOUTHEADR DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,TITLINE            Print Title and\n         PUT   SYSPRINT,CPYRLINE             Copyright notice.\n         PUT   SYSPRINT,REPTLN01           And name of which Report.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,\n         PUT   SYSPRINT,OUTLINE            PREPARING FOR\n         BR    R9                          FINAL REPORT.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nJFCBDSPL DS    0H\n* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Below\n         MVC   LINE,LINE-1\n         MVC   LINET(L'JFCBDTIT),JFCBDTIT  Title of display\n         MVC   LINE+5(8),=C'BRODUMMY'      Insert which DCB it's about\n         PUT   SYSPRINT,LINE\nJFCBDSPO DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(60),MEASR30H          Numeric measuring label.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(60),RULER30H          Ruler.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB           Bytes 0 to 30  (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVI   LINET+68,C'0'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+30        Bytes 31 to 60 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'30'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+60        Bytes 61 to 90 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'60'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+90        Bytes 91 to 120 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(2),=C'90'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,30,INFMJFCB+120       Bytes 121 to 150 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(3),=C'120'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         HEX   LINET,26,INFMJFCB+150       Bytes 151 to 176 (decimal)\n         MVC   LINET+62(10),JFCBT\n         MVC   LINET+68(3),=C'150'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(60),RULER30H          Print ruler below\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                 And skip a space.\n         PUT   SYSPRINT,LINE\n* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Above\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nJFCBTEST DS    0H\n         MVI   JFCBFLG,X'00'         CLEAR ERROR FLAGS\n         CLI   JFCBCTRI,JFCBCYL      ALLOCATION OF BRODUMMY IN CYL ?\n         BNE   MSGNOCYL              NO. ISSUE MESSAGE.\nJFCBPRIM DS    0H\n         CLC   JFCBPQTY,=AL3(1)      PRIMARY QUANTITY MUST BE 1.\n         BNE   MSGNOONE              NOT 1. ISSUE MESSAGE.\nJFCBDSRG DS    0H\n         CLI   JFCDSORG,JFCORGDA     IS THE DSORG=DA ?\n         BNE   MSGDSORG              NO. ISSUE MESSAGE.\nJFCBRFMT DS    0H\n         TM    JFCRECFM,X'C0'        IS THE RECFM=U ?\n         BO    MSGRECFM              YES. ISSUE MESSAGE.\n         TM    JFCRECFM,X'80'        IS THE RECFM=F ?\n         BZ    MSGRECFM              NO. ISSUE MESSAGE.\nJFCBLREC DS    0H\n         CLC   JFCLRECL,=AL2(129)    LRECL IS 129 ?\n         BNE   MSGLRECL              NOT 129. ISSUE MESSAGE.\nJFCBBKSI DS    0H\n         CLC   JFCBLKSI,=AL2(129)    LRECL IS 129 ?\n         BNE   MSGBLKSZ              NOT 129. ISSUE MESSAGE.\nJFCBKYLN DS    0H\n         CLI   JFCKEYLE,X'01'        KEYLEN IS 1 ?\n         BNE   MSGKEYLE              NOT 1. ISSUE MESSAGE.\nJFCBETST DS    0H                        End of processing.\n         B     JFCBTEND                  Finish the subroutine.\nMSGNOCYL DS    0H                    ERROR MESSAGES FOR JCL PROBLEMS.\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGCYL),MSGCYL    Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'01'             Flag this error\n         B     JFCBPRIM                  Go to next test.\nMSGNOONE DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGONEC),MSGONEC  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'02'             Flag this error\n         B     JFCBDSRG                  Go to next test.\nMSGDSORG DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGDSOR),MSGDSOR  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'04'             Flag this error\n         B     JFCBRFMT                  Go to next test.\nMSGRECFM DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGRFMT),MSGRFMT  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'08'             Flag this error\n         B     JFCBLREC                  Go to next test.\nMSGLRECL DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGLREC),MSGLREC  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'10'             Flag this error\n         B     JFCBBKSI                  Go to next test.\nMSGBLKSZ DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGBLKS),MSGBLKS  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'20'             Flag this error\n         B     JFCBKYLN                  Go to next test.\nMSGKEYLE DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGKEYL),MSGKEYL  Insert message text.\n         PUT   SYSPRINT,LINE\n         OI    JFCBFLG,X'40'             Flag this error\n         B     JFCBETST                  Go to end of tests.\nJFCBTEND DS    0H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* ------------------------------------------------------------------ *\n* ---    READ DUMMY RECORDS INTO 1 CYLINDER FAKE BRODCAST.       --- *\n* ------------------------------------------------------------------ *\nWRITDUMY DS    0H\n         MVI   EOFWFLG,X'00'             Initialize Flag.\n         LA    R2,0                      Load zero.\n         ST    R2,RECONTRK               Initialize counters\n         ST    R2,RECPERTR                 to\n         ST    R2,TRKPERCY                   zero.\nWRITLOOP DS    0H\n         L     R2,RECONTRK               Increment\n         LA    R2,1(,R2)                  the\n         ST    R2,RECONTRK                 Count.\nGOWRITE  DS    0H\n         WRITE MDLDECB,SF,BRODUMMY,DUMMYREC,'S',MF=E\n         C     R15,=F'8'                 RC = 8 for end of extent.\n         BNE   GOSKIP1                   No. Try if end of track.\n         OI    EOFWFLG,X'02'             Yes. End of extent, so finish.\n         B     ENDCHECQ                  Finish up measurements.\nGOSKIP1  DS    0H\n         C     R15,=F'4'                 RC = 4 for end of track.\n         BNE   GOCHECK                   No. Still in middle of track.\n         TM    EOFWFLG,X'01'             Yes. Only come here once,\n         BO    GOSKIP2                     and not later.\n         MVC   RECPERTR,RECONTRK         Copy records/track number.\n         OI    EOFWFLG,X'01'             Only do it once.\nGOSKIP2  DS    0H\n         L     R2,TRKPERCY               Increment\n         LA    R2,1(,R2)                  the\n         ST    R2,TRKPERCY                 Count.\n         XR    R2,R2                     Zero Register.\n         ST    R2,RECONTRK               Re-initialize REC/TRK\nGOCHECK  DS    0H\n         CHECK MDLDECB\n         B     WRITLOOP                  Write till end of extent.\nENDCHECQ DS    0H                        Come here at end of extent.\n         CHECK MDLDECB\n         L     R2,TRKPERCY               One\n         LA    R2,1(,R2)                  last\n         ST    R2,TRKPERCY                 time.\nMULTCONV DS    0H\n         STM   R4,R5,SAVE45              Save Work Registers\n         XR    R4,R4                     Clear Multiplicand Hi Reg\n         L     R5,RECPERTR               Load Multipliand\n         MR    R4,R2                     Multiply\n         ST    R5,RECPERCY               Store Result\n         LM    R4,R5,SAVE45              Restore Work Registers\nWRITCONV DS    0H                        Convert binary to decimal.\n*                                        ------- ------ -- -------\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,RECPERTR               SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECREPTR,CVDWORK          STORE AWAY FOR REPORTING\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,TRKPERCY               SAVE TRACKS PER CYLINDER COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECTRPCY,CVDWORK          STORE AWAY FOR REPORTING\nWRITLEND DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGMEAS),MSGMEAS  Title message for measurement.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGMDSH),MSGMDSH  Dashes.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),RECPTRK         Records per track.\n         HEX   LINET+22,4,RECPERTR\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECREPTR+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(22),TRKPCYL         Tracks per cylinder\n         HEX   LINET+22,4,TRKPERCY\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECTRPCY+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n* - >\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,RECPERCY               SAVE RECORDS PER CYL COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECREPCY,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINE,LINE-1\n         MVC   LINET(22),RECPCYL         Records per cylinder\n         HEX   LINET+22,4,RECPERCY\n         MVC   LINET+42(10),MASK10\n         ED    LINET+42(10),DECREPCY+3\n         MVC   LINET+38(8),=C'Decimal:'\n         PUT   SYSPRINT,LINE\n* - >\n         MVC   LINE,LINE-1               Blank line afterwards.\n         PUT   SYSPRINT,LINE\n         BR    R9\n* ---------------------------------------------- *\n* ---    PROCESS SYSIN INPUT TO PROVIDE      --- *\n* ---      NUMBERS FOR THE CALCULATIONS.     --- *\n* ---------------------------------------------- *\nDOSYSIN  DS    0H                        Process SYSIN records.\n         ST    R9,SAVER9A\n         TM    FLAGSYST,X'02'            Is SYSIN DD name in JCL?\n         BZ    SYSINENX                  No. Skip this entire section.\n         OPEN  (SYSIN,(INPUT))\n         STM   R3,R4,SAVE34              Save the work registers.\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDOSY),MSGDOSY\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDODH),MSGDODH\n         PUT   SYSPRINT,LINE\nSYINLOOP DS    0H                        Read all the SYSIN cards.\n         GET   SYSIN,INSYSIN             GET a card.\n         MVC   WRKSYSIN(80),INSYSIN      Make a copy of it.\n         OC    WRKSYSIN,BLNKLINE         Uppercase the copy.\n         LA    R3,WRKSYSIN               Point R3 to the uppercased.\n         LA    R4,INSYSIN                Point R4 to the original.\n* ------------------------------------------------------------------ *\n*                 Test the uppercased card for keywords              *\n*                 And afterwards do the proper displacements         *\n* ------------------------------------------------------------------ *\n         CLC   =C'NOTIFY=',0(R3)\n         BE    HNOTIFY\n         CLC   =C'USERIDS=',0(R3)\n         BE    HUSERID\n         CLC   =C'MESSAGES=',0(R3)\n         BE    HMESSAGE\n         CLC   =C'TRACKS=',0(R3)\n         BE    HTRACKS\n         CLC   =C'CYLINDERS=',0(R3)\n         BE    HCYLINDR\n         CLC   =C'EXTRAUSERIDRECS=',0(R3)\n         BE    HEXTRUSR\n         CLC   =C'RECORDS=',0(R3)\n         BE    HRECORDS\n         B     SYINLOOP\nHNOTIFY  DS    0H\n         LA    R4,7(,R4)\n         LA    R3,7(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHNOTIFY(10),CHARNUM\n         MVC   BINOTIFY(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'NOTIFY='\n         HEX   LINE+29,4,BINOTIFY\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHNOTIFY\n         TM    NUMCFLG,X'01'\n         BZ    HNOTIFGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHNOTIFGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHUSERID  DS    0H\n         LA    R4,8(,R4)\n         LA    R3,8(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHUSERID(10),CHARNUM\n         MVC   BIUSERID(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'USERIDS='\n         HEX   LINE+29,4,BIUSERID\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHUSERID\n         TM    NUMCFLG,X'01'\n         BZ    HUSERIGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHUSERIGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHMESSAGE DS    0H\n         LA    R4,9(,R4)\n         LA    R3,9(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHMESAGE(10),CHARNUM\n         MVC   BIMESAGE(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(9),=C'MESSAGES='\n         HEX   LINE+29,4,BIMESAGE\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHMESAGE\n         TM    NUMCFLG,X'01'\n         BZ    HMESSAGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHMESSAGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHTRACKS  DS    0H\n         LA    R4,7(,R4)\n         LA    R3,7(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHTRACKS(10),CHARNUM\n         MVC   BITRACKS(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'TRACKS='\n         HEX   LINE+29,4,BITRACKS\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHTRACKS\n         TM    NUMCFLG,X'01'\n         BZ    HTRACKGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHTRACKGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHCYLINDR DS    0H\n         LA    R4,10(,R4)\n         LA    R3,10(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHCYLIND(10),CHARNUM\n         MVC   BICYLIND(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(10),=C'CYLINDERS='\n         HEX   LINE+29,4,BICYLIND\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHCYLIND\n         TM    NUMCFLG,X'01'\n         BZ    HCYLINGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHCYLINGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHEXTRUSR DS    0H\n         LA    R4,16(,R4)\n         LA    R3,16(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHEXTRUS(10),CHARNUM\n         MVC   BIEXTRUS(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(16),=C'EXTRAUSERIDRECS='\n         HEX   LINE+29,4,BIEXTRUS\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHEXTRUS\n         TM    NUMCFLG,X'01'\n         BZ    HEXTRUGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHEXTRUGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nHRECORDS DS    0H\n         LA    R4,8(,R4)\n         LA    R3,8(,R3)\n         BAL   R9,NUMBRGET\n         MVC   CHRECORD(10),CHARNUM\n         MVC   BIRECORD(4),BINVALUE\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'RECORDS='\n         HEX   LINE+29,4,BIRECORD\n         MVC   LINE+45(8),=C'Decimal:'\n         MVC   LINE+55(10),CHRECORD\n         TM    NUMCFLG,X'01'\n         BZ    HRECORGD\n         MVC   LINE+66(15),=C'INVALID NUMERIC'\nHRECORGD DS    0H\n         PUT   SYSPRINT,LINE\n         B     SYINLOOP\nSYSINEND DS    0H               End of SYSIN. Plug in defaults if any.\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDEFV),MSGDEFV\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGDEFD),MSGDEFD\n         PUT   SYSPRINT,LINE\n* ----- >                                  Plug in default values.\n         CLC   BINOTIFY(4),=F'0'           Was NOTIFY= coded?\n         BNE   HNOTFHAS                    Yes. Nonzero value.\n         MVC   BINOTIFY(4),DEFNOTFY        Supply Default Values\n         MVC   CHNOTIFY(10),CHANOTFY\n         OI    FLAG01,X'01'                Force NOTIFY= present\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'NOTIFY='\n         MVC   LINET+7(10),CHANOTFY\n         HEX   LINE+29,4,DEFNOTFY\n         PUT   SYSPRINT,LINE\nHNOTFHAS DS    0H\n* ----- >\n         CLC   BIUSERID(4),=F'0'           Was USERIDS= coded?\n         BNE   HUSEIHAS                    Yes. Nonzero value.\n         MVC   BIUSERID(4),DEFUSERS        Supply Default Values\n         MVC   CHUSERID(10),CHAUSERS\n         OI    FLAG01,X'02'                Force USERIDS= present\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'USERIDS='\n         MVC   LINET+8(10),CHAUSERS\n         HEX   LINE+29,4,DEFUSERS\n         PUT   SYSPRINT,LINE\nHUSEIHAS DS    0H\n* ----- >\n         CLC   BIMESAGE(4),=F'0'           Was MESSAGES= coded?\n         BNE   HMSGSHAS                    Yes. Nonzero value.\n         MVC   BIMESAGE(4),DEFMESGS        Supply Default Values\n         MVC   CHMESAGE(10),CHAMESGS\n         OI    FLAG01,X'04'                Force MESSAGES= present\n         MVC   LINE,LINE-1\n         MVC   LINET(9),=C'MESSAGES='\n         MVC   LINET+9(10),CHAMESGS\n         HEX   LINE+29,4,DEFMESGS\n         PUT   SYSPRINT,LINE\nHMSGSHAS DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n* ----- >\n         CLOSE (SYSIN)\n         LM    R3,R4,SAVE34\nSYSINENX DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     Routine to get the numeric values from the SYSIN keywords.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNUMBRGET DS    0H                                                        06454\n         ST    R9,SAVER9B           Save BAL register.\n         ST    R4,SAVER4A           Save address of number in original\n         ST    R3,SAVER3A           Save address of number in copy\n         NI    NUMCFLG,X'FF'-X'01'  Turn off \"not numeric\" flag.\n         MVC   CHARNUM(10),BLNKLINE   Initialize character field\n         XC    BINVALUE,BINVALUE      Clear binary value\n* ----------------------------------------------------------------- *\n*                    Upon entry, R4 points to \"number\" in original.\n*                    Upon entry, R3 points to \"number\" in copy.\n* ----------------------------------------------------------------- *\n         CLI   0(R4),C' '        Is the first number value blank?        06455\n         BE    NUMBRCLG          Yes. Ignore the entire card.            06456\n* --\n* ----------------------------------------------------------------- *\n*    At this point, we are looking at the first character after     *\n*     the particular keyword, and we want to test it and extract    *\n*     its value.                                                    *\n* ----------------------------------------------------------------- *\n         CLI   0(R4),X'F0'       Smaller than character 0?               06457\n         BL    NUMBRNVL          Yes. Mark as invalid.                   06458\n         CLI   0(R4),X'F9'       Bigger than 9?                          06459\n         BH    NUMBRNVL          Yes. Mark as invalid.                   06460\n         B     NUMBRVLD          Didn't fail, consider the number valid\n*                   Remember that R4 is start address for \"number\".\nNUMBRNVL DS    0H                Mark the character as invalid number.   06464\n         OI    NUMCFLG,X'01'     Set \"invalid flag\" for this number.\n         OI    INVNFLG,X'01'     Show there's an invalid number coded.\n         MVI   0(R4),C'*'        Mark invalid digit in the report.\nNUMBRVLD DS    0H                                                        06464\n* ----------------------------------------------------------------- *\nNUMBRNUM DS    0H                Loop to extract the number.             06464\n         LA    R4,1(,R4)         Bump R4 to point to next character.     06465\n         C     R4,INSYSIN+71     End of card?                            06466\n         BH    NUMBRGNM          Yes, Get number.                        06467\n         CLI   0(R4),C' '        Blank here?                             06468\n         BE    NUMBRGNM          Yes, Get number.                        06469\n** ----- >>   Validity Check - below\n* --\n         CLI   0(R4),X'F0'       Smaller than C'0'?\n         BL    NUMBINVL          Yes. Mark as invalid.\n         CLI   0(R4),X'F9'       Bigger than C'9'?\n         BH    NUMBINVL          Yes. Mark as invalid.\n         B     NUMBVALD          None of above, don't mark invalid.\nNUMBINVL DS    0H                Mark the character as invalid number.   06464\n         OI    NUMCFLG,X'01'     Set \"invalid flag\" for this number.\n         OI    INVNFLG,X'01'     Show there's an invalid number coded.\n         MVI   0(R4),C'*'        Mark invalid digit in the report.\nNUMBVALD DS    0H\n** ----- >>   Validity Check - above\n         B     NUMBRNUM          NO. STEP UP ONE PLACE                   06470\n* ----------------------------------------------------------------- *\nNUMBRGNM DS    0H                                                        06471\n         L     R2,SAVER4A        Load R2 with address of number start\n         SR    R4,R2             How big is the number?                  06472\n         BCTR  R4,0              Lower by one for EXECUTE.               06473\n         TM    NUMCFLG,X'01'     Was any digit of the number invalid?\n         BO    NUMBRNPK          Yes, don't try to pack it. S0C7.\n         XC    PACKWORK,PACKWORK   Clear the doubleword work area.\n         EX    R4,PACKIT         Pack the number into work area.         06474\nNUMBRNPK DS    0H                                                        06471\n         MVC   CHARNUM(10),BLNKLINE   Clear the display area.\n         EX    R4,MVNUMBER       Move the display value to display.      06476\n*        LA    R4,1(,R4)\n         TM    NUMCFLG,X'01'     Was any digit of the number invalid?\n         BO    NUMBRCLG          Yes, don't try to convert it. S0C7.\n         CVB   R0,PACKWORK       Convert the packed version to binary.   06477\n         ST    R0,BINVALUE       Store the binary value for later use.   06478\nNUMBRCLG DS    0H                                                        06479\n         L     R3,SAVER3A\n         L     R9,SAVER9B        Restore BAL register.\n         BR    R9                                                        06480\nPACKIT   PACK  PACKWORK,0(0,R2)      <<< EXECUTED >>>                    06759\nMVNUMBER MVC   CHARNUM(0),0(R2)      <<< EXECUTED >>>                    06767\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   Perform Calculations With The Coded SYSIN Quantities.         *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCALCRECS DS    0H                         Perform Calculations\n         ST    R9,SAVER9C                 BAL register protection\n         MVC   LINE,LINE-1                Clear Line\n         MVC   LINET(L'MSGCLCR),MSGCLCR   Print Calculation Header\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                Clear Line\n         MVC   LINET(L'MSGCLCD),MSGCLCD   Dashes\n         PUT   SYSPRINT,LINE\nFLAGNOTF DS    0H                         Set Flags about which SYSIN\n*                                          parameters were coded.\n         CLC   BINOTIFY(4),=F'0'          NOTIFY?\n         BE    FLAGUSID\n         OI    FLAG01,X'01'\nFLAGUSID DS    0H\n         CLC   BIUSERID(4),=F'0'          USERIDS?\n         BE    FLAGMESG\n         OI    FLAG01,X'02'\nFLAGMESG DS    0H\n         CLC   BIMESAGE(4),=F'0'          MESSAGES?\n         BE    FLAGTRKS\n         OI    FLAG01,X'04'\nFLAGTRKS DS    0H\n         CLC   BITRACKS(4),=F'0'          TRACKS?\n         BE    FLAGCYLS\n         OI    FLAG01,X'08'\nFLAGCYLS DS    0H\n         CLC   BICYLIND(4),=F'0'          CYLINDERS?\n         BE    FLAGEXTU\n         OI    FLAG01,X'10'\nFLAGEXTU DS    0H\n         CLC   BIEXTRUS(4),=F'0'          EXTRAUSERIDRECS?\n         BE    FLAGRECD\n         OI    FLAG01,X'20'\nFLAGRECD DS    0H\n         CLC   BIRECORD(4),=F'0'          RECORDS?\n         BE    FLAGGEND\n         OI    FLAG01,X'40'\nFLAGGEND DS    0H                         End of flagging process.\n         TM    FLAG01,X'7F'               Any SYSINs coded?\n         BZ    NOCALCS                    No. Say so and end.\n         B     DOCALCS                    Yes. Go do the calculations.\nNOCALCS  DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOCAL),MSGNOCAL   No SYSIN was entered.\n         PUT   SYSPRINT,LINE\n*        BAL   R9,NOSYSINM\n         B     CALCREND                   Get out after posting message\nDOCALCS  DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   Perform The Various Calulations And Display The Results.      *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTRKTOREC DS    0H                         TRACKS --> Records\n         TM    FLAG01,X'08'               TRACKS coded?\n         BZ    TRKTOREE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,RECPERTR\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BITRACKS                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BITRKREC                Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BITRKREC               LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DETRKREC,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGTR2BR),MSGTR2BR\n         MVC   LINET(10),CHTRACKS\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DETRKREC+3\n         PUT   SYSPRINT,LINE\nTRKTOREE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCYLTOREC DS    0H                         CYLINDERS --> Records\n         TM    FLAG01,X'10'               CYLINDERS coded?\n         BZ    CYLTOREE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,RECPERCY\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BICYLIND                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BICYLREC                Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BICYLREC               LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DECYLREC,CVDWORK          STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGCY2BR),MSGCY2BR\n         MVC   LINET(10),CHCYLIND\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DECYLREC+3\n         PUT   SYSPRINT,LINE\nCYLTOREE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECTOTRK DS    0H                         RECORDS to TRACKS\n         TM    FLAG01,X'40'               RECORDS coded?\n         BZ    RECTOTRE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIRECORD                Load Dividend\n         L     R2,RECPERTR                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    RECNTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nRECNTREM DS    0H\n         ST    R5,BIRE2TR                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIRE2TR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DERE2TR,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRC2TR),MSGRC2TR\n         MVC   LINET(10),CHRECORD\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DERE2TR+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nRECTOTRE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECTOCYL DS    0H                         RECORDS to CYLINDERS\n         TM    FLAG01,X'40'               RECORDS coded?\n         BZ    RECTOCYE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIRECORD                Load Dividend\n         L     R2,RECPERCY                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    RECNCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nRECNCREM DS    0H\n         ST    R5,BIRE2CY                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIRE2CY                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DERE2CY,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRC2CY),MSGRC2CY\n         MVC   LINET(10),CHRECORD\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DERE2CY+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nRECTOCYE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nUIDTOURC DS    0H                         Userids to Userid Records\n         TM    FLAG01,X'02'               USERIDS coded?\n         BZ    UIDTOURE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BIUSERID                Load Dividend\n         L     R2,=F'9'                   Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    UIDNCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nUIDNCREM DS    0H\n         ST    R5,BIUI2UR                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BIUI2UR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DEUI2UR,CVDWORK            Store away for reporting\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGUI2UR),MSGUI2UR\n         MVC   LINET(10),CHUSERID\n         MVC   LINET+28(10),MASK10\n         ED    LINET+28(10),DEUI2UR+3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nUIDTOURE DS    0H                         Userids to Userid Records\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEXUTOUID DS    0H                         Extra Userid Records -> UIDs\n         TM    FLAG01,X'20'               EXTRAUSERIDRECS coded?\n         BZ    EXUTOUIE                   No. Don't calculate.\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         L     R2,=F'9'                   Multiplier\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BIEXTRUS                Load Multipliand\n         MR    R4,R2                      Multiply\n         ST    R5,BIEU2UI                 Store Result\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\n         MVC   LINE,LINE-1\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,BIEU2UI                LOAD TOTAL RECORDS\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEEU2UI,CVDWORK           STORE AWAY FOR REPORTING\n         MVC   LINET(L'MSGEU2UI),MSGEU2UI\n         MVC   LINET(10),CHEXTRUS\n         MVC   LINET+47(10),MASK10\n         ED    LINET+47(10),DEEU2UI+3\n         PUT   SYSPRINT,LINE\nEXUTOUIE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOTFINDX DS    0H                         NOTIFY to NOTIFY INDEX RECDS\n         OI    FLAG01,X'01'               NOTIFY coded?\n         BZ    NOTFINDE\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BINOTIFY                Load Dividend\n         L     R2,=F'25'                  Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    NOTFTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nNOTFTREM DS    0H\n         ST    R5,BINOTFI                 Store binary number\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTFI                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTFI,CVDWORK            Store away for reporting\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R5,BINOTFI                 Load Multipliand\n         L     R2,=F'25'                  Load Multiplier\n         MR    R4,R2                      Multiply\n         ST    R5,BINOTFR                 Store Result\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTFR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTFR,CVDWORK            Store away for reporting\n         L     R2,BINOTFI\n         A     R2,BINOTFR\n         ST    R2,BINOTOT\n         XR    R6,R6                      Zero work register\n         L     R6,BINOTOT                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DENOTOT,CVDWORK            Store away for reporting\n*\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNO2NI),MSGNO2NI\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTFI+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNRROU),MSGNRROU\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTFR+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOTOT),MSGNOTOT\n         MVC   LINET(10),CHNOTIFY\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DENOTOT+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGMSGRE),MSGMSGRE\n         MVC   LINET(10),CHMESAGE\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nNOTFINDE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRECAL DS    0H\n         TM    FLAG01,X'07'     Notify+Userids+Messages?\n         BNO   TOTRTCYE         Not all coded, don't calculate this.\n         ST    R2,SAVER2        Save work register.\n         L     R2,BINOTOT       All records needed for Notify\n         LA    R2,2(,R2)        Header + Free Search record\n         A     R2,BIUI2UR       Userid records\n         A     R2,BIEXTRUS      Extra Userid records\n         A     R2,BIMESAGE      Number of message records\n         ST    R2,BITOTREC      Store total in binary\n         XR    R6,R6                      Zero work register\n         L     R6,BITOTREC                Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETOTREC,CVDWORK           Store away for reporting\n         L     R2,SAVER2\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCR),MSGALCR\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGALCD),MSGALCD\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB1),MSGTOTB1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB2),MSGTOTB2\n         MVC   LINET+58(10),MASK10\n         ED    LINET+58(10),DETOTREC+3\n         PUT   SYSPRINT,LINE\nTOTRECAE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRTTRK DS    0H                         RECORDS to TRACKS\n         STM   R4,R5,SAVE45               Save Work Registers\n         ST    R2,SAVER2\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BITOTREC                Load Dividend\n         L     R2,RECPERTR                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    TOTRTREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nTOTRTREM DS    0H\n         ST    R5,BITO2TR                 Store binary number\n*\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R2,RECPERTR                One\n         MR    R4,R2                      Multiply\n         ST    R5,BITRKTO                 Store Result\n*\n         XR    R6,R6                      Zero work register\n         L     R6,BITO2TR                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETO2TR,CVDWORK            Store away for reporting\n*\n         XR    R6,R6                      Zero work register\n         L     R6,BITRKTO                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETRKTO,CVDWORK            Store away for reporting\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTOTRTCYL DS    0H                         RECORDS to CYLINDERS\n         XR    R4,R4                      Clear Dividend Hi Reg\n         L     R5,BITOTREC                Load Dividend\n         L     R2,RECPERCY                Load Divisor\n         DR    R4,R2                      Divide\n         LTR   R4,R4                      Is there a remainder?\n         BZ    TOTRCREM                   No. Quotient is even.\n         LA    R5,1(,R5)                  Yes. Add one to quotient.\nTOTRCREM DS    0H\n         ST    R5,BITO2CY                 Store binary number\n*\n         XR    R4,R4                      Clear Multiplicand Hi Reg\n         L     R2,RECPERCY                One\n         MR    R4,R2                      Multiply\n         ST    R5,BICYLTO                 Store Result\n*\n         XR    R6,R6                      Zero work register\n         L     R6,BITO2CY                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DETO2CY,CVDWORK            Store away for reporting\n*\n         XR    R6,R6                      Zero work register\n         L     R6,BICYLTO                 Load binary number\n         CVD   R6,CVDWORK                 Convert to decimal\n         MVC   DECYLTO,CVDWORK            Store away for reporting\n*\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB3),MSGTOTB3\n         MVC   LINET+31(10),MASK10\n         ED    LINET+31(10),DETO2TR+3\n         MVC   LINET+52(10),MASK10\n         ED    LINET+52(10),DETO2CY+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB4),MSGTOTB4\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGTOTB5),MSGTOTB5\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGCYLRE),MSGCYLRE\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE1),MSGEXKE1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE2),MSGEXKE2\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGEXKE3),MSGEXKE3\n         PUT   SYSPRINT,LINE\n         L     R2,SAVER2\n         LM    R4,R5,SAVE45               Restore Work Registers\nTOTRTCYE DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCALCREND DS    0H\n         MVC   LINE,LINE-1                Blank line at the end.\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9C                 BAL register protection\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOSYSINM DS    0H\n         ST    R9,SAVER9H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0T),MSGNOC0T\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSYSADMIS DS    0H\n         ST    R9,SAVER9D\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0A),MSGNOC0A\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOCDA),MSGNOCDA\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC01),MSGNOC01\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC02),MSGNOC02\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC03),MSGNOC03\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC04),MSGNOC04\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC05),MSGNOC05\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC06),MSGNOC06\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC07),MSGNOC07\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0T),MSGNOC0T\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNOC0D),MSGNOC0D\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nNOSYSINE DS    0H\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nJFCKTEST DS    0H\n         ST    R9,SAVER9F\n         MVI   JFCKFLG,X'00'         CLEAR ERROR FLAGS\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     FIRST TEST - IS THE PRIMARY ALLOCATION BIG ENOUGH?      *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         CLI   JFCBCTRI,X'C0'        ALLOCATION OF BRODCOUT IN CYL ?\n         BNE   JFCKNOCY              NOT CYLINDERS. TRY TRACKS.\n         OI    TRCYFLAG,X'01'        SHOW CYLINDERS\n         ST    R4,SAVER4             SAVE WORK REGISTER\n         XR    R4,R4\n         ICM   R4,7,JFCBPQTY         LOAD PRIMARY QUANTITY\n         ST    R4,BIALCYL            IT IS IN CYLINDERS\n* - multiply here by RECPERCY to get BIALREC\n         L     R2,RECPERCY               Multiplier\n         XR    R4,R4                     Clear Multiplicand Hi Reg\n         L     R5,BIALCYL                Load Multipliand\n         MR    R4,R2                     Multiply\n         ST    R5,BIALREC                Store Result\n* - multiply here by RECPERCY to get BIALREC\n         XR    R6,R6                 ZERO OUT WORK REGISTER\n         L     R6,BIALCYL            SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK            CONVERT TO DECIMAL\n         MVC   DEALCYL,CVDWORK       STORE AWAY FOR REPORTING\n         L     R4,SAVER4             RESTORE WORK REGISTER\n         CLC   BIALCYL,BITO2CY       THEN COMPARE ALLOCATION WITH\n*                                     CALCULATED CYL QUANTITY\n         BL    MSGERCLO              BRODCOUT ALLOC IS NOT ENOUGH\n         B     JFCKPRIM\nJFCKNOCY DS    0H\n         TM    JFCBCTRI,JFCBTRK      ALLOCATION OF BRODCOUT IN TRK ?\n         BZ    MSGERRAL              NOT CORRECT QUANTITY FOR ALLOC\n         OI    TRCYFLAG,X'02'        SHOW TRACKS\n         ST    R4,SAVER4\n         XR    R4,R4\n         ICM   R4,7,JFCBPQTY         LOAD PRIMARY QUANTITY\n         ST    R4,BIALTRK            IT IS IN CYLINDERS\n* - multiply here by RECPERTR to get BIALREC\n         L     R2,RECPERTR               Multiplier\n         XR    R4,R4                     Clear Multiplicand Hi Reg\n         L     R5,BIALTRK                Load Multipliand\n         MR    R4,R2                     Multiply\n         ST    R5,BIALREC                Store Result\n* - multiply here by RECPERTR to get BIALREC\n         XR    R6,R6                 ZERO OUT WORK REGISTER\n         L     R6,BIALTRK            SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK            CONVERT TO DECIMAL\n         MVC   DEALTRK,CVDWORK       STORE AWAY FOR REPORTING\n         L     R4,SAVER4             RESTORE WORK REGISTER\n         CLC   BIALTRK,BITO2TR       THEN COMPARE ALLOCATION WITH\n*                                     CALCULATED TRK QUANTITY\n         BL    MSGERTLO              BRODCOUT ALLOC IS NOT ENOUGH\n         B     JFCKPRIM\nMSGERCLO DS    0H\n         OI    JFCKFLG,X'02'             Flag this error\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGERRCY),MSGERRCY\n         MVC   LINET+14(10),MASK10\n         ED    LINET+14(10),DEALCYL+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGERRC1),MSGERRC1\n         MVC   LINET+24(10),MASK10\n         ED    LINET+24(10),DETO2CY+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     JFCKPRIM\nMSGERTLO DS    0H\n         OI    JFCKFLG,X'02'             Flag this error\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGERRTR),MSGERRTR\n         MVC   LINET+14(10),MASK10\n         ED    LINET+14(10),DEALTRK+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGERRT1),MSGERRT1\n         MVC   LINET+24(10),MASK10\n         ED    LINET+24(10),DETO2TR+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     JFCKPRIM\nMSGERRAL DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGERATC),MSGERATC\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'01'             Flag this error\n         B     JFCKPRIM\nJFCKPRIM DS    0H                    Print results of Allocation Look\n         XR    R6,R6\n         L     R6,BIALREC\n         CVD   R6,CVDWORK\n         MVC   DEALREC,CVDWORK\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGPRIAL),MSGPRIAL\n         MVC   LINET+35(10),MASK10\n         TM    TRCYFLAG,X'03'\n         BO    JFCKPREN\n         TM    TRCYFLAG,X'01'\n         BZ    JFCKPRTK\n         MVC   LINET+46(10),CYLWD\n         ED    LINET+35(10),DEALCYL+3\n         B     JFCKPRPT\nJFCKPRTK DS    0H\n         MVC   LINET+46(10),TRKWD\n         ED    LINET+35(10),DEALTRK+3\nJFCKPRPT DS    0H\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNUMRC),MSGNUMRC\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEALREC+3\n         PUT   SYSPRINT,LINE\n         TM    TRCYFLAG,X'02'\n         BZ    JFCKNORE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGCYLRE),MSGCYLRE\n         PUT   SYSPRINT,LINE\nJFCKNORE DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nJFCKPREN DS    0H\nJFCKDSRG DS    0H\n         CLI   JFCDSORG,JFCORGDA     IS THE DSORG=DA ?\n         BNE   MSKDSORG              NO. ISSUE MESSAGE.\nJFCKRFMT DS    0H\n         TM    JFCRECFM,X'C0'        IS THE RECFM=U ?\n         BO    MSKRECFM              YES. ISSUE MESSAGE.\n         TM    JFCRECFM,X'80'        IS THE RECFM=F ?\n         BZ    MSKRECFM              NO. ISSUE MESSAGE.\nJFCKLREC DS    0H\n         CLC   JFCLRECL,=AL2(129)    LRECL IS 129 ?\n         BNE   MSKLRECL              NOT 129. ISSUE MESSAGE.\nJFCKBKSI DS    0H\n         CLC   JFCBLKSI,=AL2(129)    LRECL IS 129 ?\n         BNE   MSKBLKSZ              NOT 129. ISSUE MESSAGE.\nJFCKKYLN DS    0H\n         CLI   JFCKEYLE,X'01'        KEYLEN IS 1 ?\n         BNE   MSKKEYLE              NOT 1. ISSUE MESSAGE.\nJFCKETST DS    0H                        End of processing.\n         B     JFCKTEND                  Finish the subroutine.\nMSKDSORG DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGDSOR),MSGDSOR  Insert message text.\n         MVC   LINET+9(8),=C'BRODCOUT'\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'04'             Flag this error\n         B     JFCKRFMT                  Go to next test.\nMSKRECFM DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGRFMT),MSGRFMT  Insert message text.\n         MVC   LINET+9(8),=C'BRODCOUT'\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'08'             Flag this error\n         B     JFCKLREC                  Go to next test.\nMSKLRECL DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGLREC),MSGLREC  Insert message text.\n         MVC   LINET+9(8),=C'BRODCOUT'\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'10'             Flag this error\n         B     JFCKBKSI                  Go to next test.\nMSKBLKSZ DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGBLKS),MSGBLKS  Insert message text.\n         MVC   LINET+11(8),=C'BRODCOUT'\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'20'             Flag this error\n         B     JFCKKYLN                  Go to next test.\nMSKKEYLE DS    0H\n         MVC   LINE,LINE-1               Clear line.\n         MVC   LINET(L'MSGKEYL),MSGKEYL  Insert message text.\n         MVC   LINET+10(8),=C'BRODCOUT'\n         PUT   SYSPRINT,LINE\n         OI    JFCKFLG,X'40'             Flag this error\n         B     JFCKETST                  Go to end of tests.\nJFCKTEND DS    0H\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                                                        04224\n         MVC   1(1,R15),0(R1)        Move byte                           04225\n         UNPK  0(3,R15),1(2,R15)     Unpack                              04226\n         TR    0(2,R15),HEXTAB-240                                       04227\n         LA    R15,2(,R15)           Increment output pointer            04228\n         LA    R1,1(,R1)             Increment input pointer             04229\n         BCT   R0,HEX                Decrement length, then loop         04230\n         MVI   0(R15),C' '           Blank the trailing byte             04231\n         BR    R4                    Return to caller                    04232\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n         SPACE                                                           04234\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LEVEL(7),BLANKS\n         MVI   OUTLINE-1,C' '        INITIALIZE BLANK\n         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA\n         MVI   FLAGSYST,X'00'        DD name protection\n         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT\n         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER\n         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA\n         MVI   RC15,X'00'            RETURN CODE AREA\n         MVI   EOJFLAG,X'00'\n         MVI   NUMCFLG,X'00'\n         MVI   INVNFLG,X'00'\n         ZAP   DECREPTR,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   DECREPCY,=P'0'\n         ZAP   DECTRPCY,=P'0'        INITIALIZE PACKED FIELDS\n         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER\n         MVI   INSYSIN-1,X'40'\n         MVC   INSYSIN,INSYSIN-1\n         MVI   JFCBFLG,X'00'\n         MVI   JFCKFLG,X'00'\n         MVI   TRCYFLAG,X'00'\n         MVC   CHNOTIFY(10),BLNKLINE\n         MVC   CHUSERID(10),BLNKLINE\n         MVC   CHMESAGE(10),BLNKLINE\n         MVC   CHTRACKS(10),BLNKLINE\n         MVC   CHCYLIND(10),BLNKLINE\n         MVC   CHEXTRUS(10),BLNKLINE\n         MVC   CHRECORD(10),BLNKLINE\n         MVC   BINOTIFY,=F'0'\n         MVC   BIUSERID,=F'0'\n         MVC   BIMESAGE,=F'0'\n         MVC   BITRACKS,=F'0'\n         MVC   BICYLIND,=F'0'\n         MVC   BIEXTRUS,=F'0'\n         MVC   BIRECORD,=F'0'\n         MVC   BIRE2TR,=F'0'\n         MVC   BIRE2CY,=F'0'\n         MVC   BITO2TR,=F'0'\n         MVC   BITO2CY,=F'0'\n         MVC   BIUI2UR,=F'0'\n         MVC   BIEU2UI,=F'0'\n         MVC   BINOTFI,=F'0'\n         MVC   BINOTFR,=F'0'\n         MVC   BINOTOT,=F'0'\n         MVC   BITOTREC,=F'0'\n         MVC   BIALCYL,=F'0'\n         MVC   BIALTRK,=F'0'\n         ZAP   DEALCYL,=P'0'\n         ZAP   DEALTRK,=P'0'\n         MVI   FLAG01,X'00'\n         MVI   FLAG02,X'00'\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITBROD DS    0H\n         ST    R9,SAVER9E\n         TM    FLAGSYST,X'01'       Test presence of BRODCOUT DD         06237\n         BZ    WRITBROX\n         RDJFCB BRODCOUT\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGBLDBR),MSGBLDBR  Title of display\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGBLDBD),MSGBLDBD  Title of display\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'JFCBDTIT),JFCBDTIT  Title of display\n         MVC   LINE+5(8),=C'BRODCOUT'      Insert which DCB it's about\n         PUT   SYSPRINT,LINE\n         BAL   R9,JFCBDSPO         Display the contents of the JFCB\n         BAL   R9,JFCKTEST\n         TM    JFCKFLG,X'02'               Allocation size error?\n         BO    WRITBROW\n         TM    JFCKFLG,X'FD'\n         BNZ   EOJ8\n         OPEN  (BRODCOUT,(OUTPUT))\n         BAL   R9,WRTBRCDS\nWRITBROE DS    0H\n         CLOSE (BRODCOUT)\n         B     WRITBROX\nWRITBROW DS    0H\n         NI    JFCBTSDM,X'F1'              No merges backward\n*        OI    JFCBTSDM,X'0E'\n*        MVC   JFCBDSNM(44),=CL44'DUMMY.BRODCAST'\n*        OI    JFCBTSDM,JFCCAT\n         OI    JFCBMASK+4,X'80'            Rewrite the JFCB\n         OI    JFCBMASK+4,X'40'            DSCB modification switch\n*        NI    JFCBIND2,X'3F'\n*        OI    JFCBIND2,X'80'\n         MVI   JFCBIND2,X'00'\n         OI    JFCBIND2,JFCTEMP+JFCMOD     Delete dataset after job\n         MVC   JFCBSQTY(3),=X'000000'      Make Secondary alloc = 0\n         OI    JFCBIND1,JFCRLSE            Force RLSE parameter\n         MVI   JFCDSRG1,X'00'\n         OI    JFCDSRG1,X'40'              Force PS for error dataset.\n         OPEN  (BRODCOUT,(OUTPUT)),TYPE=J  Make this order stick\n         TM    BRODCOUT+48,X'10'\n         BNO   WRITBROX\n         WRITE MDLDECB,SF,BRODCOUT,DUMMYREC,'S',MF=E\n         CHECK MDLDECB\n         CLOSE (BRODCOUT)                  Close right away\nWRITBROR DS    0H\n         MVC   LINE,LINE-1                 Clear print line\n         MVC   LINET(L'MSGALSER),MSGALSER  Show no BRODCOUT created\n         PUT   SYSPRINT,LINE               Print line\n         MVC   LINE,LINE-1                 Clear print line\n         PUT   SYSPRINT,LINE               Blank line\n         MVC   LINE,LINE-1                 Clear print line\n         MVC   LINET(L'MSGREAL1),MSGREAL1\n         MVC   LINET+31(44),JFCBDSNM\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                 Clear print line\n         MVC   LINET(L'MSGREAL2),MSGREAL2\n         MVC   LINET+31(6),JFCBVOLS\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                 Clear print line\n         MVC   LINET(L'MSGREAL3),MSGREAL3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         L     R9,SAVER9E\n         B     EOJ8\nWRITBROX DS    0H\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBRCDS DS    0H               Write all the BRODCAST records.     *\n*                               Stage as F-130 first and write into *\n*                               the DA dataset with MACRF=WL.       *\n*   For this reason, we can't do the R of the TTR during the WRITE  *\n*   macro, because that only gets done when we write with DSORG=DA. *\n*   So we have to find the R of the TTR by counting.  Use RECONTRK. *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         ST    R9,SAVER9G          Save BAL register\n         LA    R2,0\n         ST    R2,RECONTRK         Initialize Record on Track counter\n         LA    R2,0\n         ST    R2,NUMBREC          Initialize \"Records Loaded\" counter\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      Begin Writing Records:  X'04', X'00', X'02', X'05', X'01',   *\n*                              X'FF', in that order.                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMT4 DS    0H                  Make header record first\n         MVC   INREC(130),ZERRECX  Zero a record form.\n         MVI   INREC,X'04'         Show it is a header record, X'04'\n         ST    R5,SAVER5           Save work register.\n         LA    R5,INREC+1          Point to F-130 record plus one.\n         USING R1BC,R5             It is a BRODCAST header\n         MVC   R1BCPTR(3),=AL3(1)  First notices index at X'000001'\n         XR    R2,R2               Clear, just for safety.\n         L     R2,BINOTFR          Number of Notices records.\n         STCM  R2,3,R1BCMAX        Put into header.\n         L     R2,BINOTOT          Notices total.\n         LA    R2,1(,R2)           Plus one is address of Fresrch X'05'\n         STCM  R2,7,R1FRESRH       Put into header.\n         STCM  R2,7,FRESRBA        And store the number for later use.\n         LA    R2,1(,R2)           Plus one is address of first UID rec\n         STCM  R2,7,R1USPTR        Put into header.\n         STCM  R2,7,FSTURBA        And store the number for later use.\n*  ---  ---  ---  >>>         ADJUST TOTAL RECORDS HERE  -  BELOW\n         XR    R2,R2               Clear, just for safety.\n         L     R2,BIALREC          From allocated space in JCL.\n         ST    R2,R1RECNUM         Total number of records in dataset.\n*  ---  ---  ---  >>>         ADJUST TOTAL RECORDS HERE  -  ABOVE\n         MVC   WRBCTCTR(4),R1RECNUM    Save number for BCT.\n         MVC   R1DSN(24),=C' SYS1.BRODCAST DATA SET '   Literal\n         MVC   R1LEVEL(7),=C'LEVEL 2'                   Literal\n         MVC   R1GENNUM(4),=F'1'   Put in gen num for starters.\n         L     R5,SAVER5           Restore register.\n         DROP  R5\nWRTBF4WR DS    0H\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         LA    R2,1\n         ST    R2,NUMFMT4\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT4                BINARY FULLWORD NUMBER\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT4,CVDWORK           STORE AWAY FOR REPORTING\n         ST    R4,SAVER4A\n         L     R4,WRBCTCTR         Lower record count for BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR\n         L     R4,SAVER4A\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         CHECK MDLDECB\n*\nWRTEFMT4 DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'04'  -  Header Record                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMT0 DS    0H\n         ST    R4,SAVER4\n         L     R4,BINOTFI          Number of Notify Index rcds for BCT.\nWRTB0INI DS    0H\n         LA    R2,1                RBA OF FIRST NOTICE INDEX RECORD\n         LA    R2,1(,R2)\n         STCM  R2,7,NXTRBANO\n         LA    R2,0                ZERO MESSAGE NUMBER FOR START\n         ST    R2,NOTMSGRG         START MESSAGE NUMBER AT ZERO\n         ST    R2,NUMFMT0\nWRTB0STR DS    0H\n         ST    R5,SAVER5           Save work register.\n         MVC   INREC(130),ZERRECX\n         MVI   INREC,X'00'         Show it is a Notices index, X'00'\n         LA    R5,INREC+1          Point to F-130 record plus one.\n         USING BCDIR,R5            Notices index record\n         ST    R6,SAVER6\n         LA    R6,BCDNENT          25 FOR BCT\n         MVI   BCDREND,X'7F'         DO END OF RECORD FIRST\n         MVC   BCDNEXT(3),NXTRBANO   WITH RBA OF NEXT MESSAGE\n         ICM   R2,7,NXTRBANO       INCREMENT NEXT RBA NUMBER\n         LA    R2,1(,R2)             FOR NEXT PASS\n         STCM  R2,7,NXTRBANO\n         C     R4,=F'1'            LAST PASS?\n         BNE   WRTB0ILP            NO.\n         MVC   BCDNEXT(3),=X'000000' ZERO NEXT RBA FOR LAST INDEX RCD\nWRTB0ILP DS    0H                  INNER LOOP\n         L     R2,NOTMSGRG         INCREMENT MESSAGE NUMBER\n         LA    R2,1(,R2)             BY ONE\n         ST    R2,NOTMSGRG             AND STORE BACK\n         STCM  R2,3,NOTMSGNO       STORE IT IN HALFWORD\n         MVC   BCDMSGNO,NOTMSGNO   MOVE IT INTO BCD ENTRY\n         OI    BCDMFLG,BCDNOMSG    MARK ENTRY AS NOT USED\n         L     R2,NOTMSGRG         MESSAGE NUMBER\n         A     R2,BINOTFI          ADD NUMBER OF NOTICE INDEX RECORDS\n         ST    R2,NOTRBARG         GET RBA OF THIS NOTICE\n         STCM  R2,7,NOTRBANO       STORE INTO 3 BYTE FIELD\n         MVC   BCDMRBA,NOTRBANO    AND MOVE IT INTO BCD ENTRY.\nWRTBF0RS DS    0H\n         LA    R5,5(,R5)           BUMP TO NEXT BCD ENTRY\n         BCT   R6,WRTB0ILP         LOOP 25 TIMES\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         L     R2,NUMFMT0          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMFMT0            COUNT\n         ST    R4,SAVER4A\n         L     R4,WRBCTCTR         Lower record count for BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR\n         L     R4,SAVER4A\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         C     R15,=F'8'           Check if end of extent.\n         BNE   GOSK001             No. Try if end of track.\n         MVI   EOJFLAG,X'FF'       Yes. Indicate preliminary end.\n         B     ENDCHECK            Finish now, but have to CHECK again.\nGOSK001  C     R15,=F'4'           Check if end of track.\n         BNE   GOCHE00             No. Still in middle of track.\nGOSK002  XR    R2,R2               Zero Register.\n         ST    R2,RECONTRK         Re-initialize Record Number on track\nGOCHE00  DS    0H\n         CHECK MDLDECB\n*\n         L     R6,SAVER6           Restore R6\n         BCT   R4,WRTB0STR         Next Notify Index record\nWRTEFMT0 DS    0H\n         L     R5,SAVER5           Restore work register.\n         L     R4,SAVER4\n         DROP  R5\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'00'  -  Notices Index Records           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMT2 DS    0H                  Make header record first\nWRTB2INI DS    0H\n         LA    R2,0\n         ST    R2,NUMFMT2\n         ST    R4,SAVER4\n         MVC   INREC(130),ZERRECX\n         MVI   INREC,X'02'         Show it is a Notices record, X'02'\n         L     R4,BINOTFR\nWRTB2LUP DS    0H                  LOOP\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         L     R2,NUMFMT2          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMFMT2            COUNT\n         ST    R4,SAVER4A\n         L     R4,WRBCTCTR         Lower record count for BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR\n         L     R4,SAVER4A\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         C     R15,=F'8'           Check if end of extent.\n         BNE   GOSK021             No. Try if end of track.\n         MVI   EOJFLAG,X'FF'       Yes. Indicate preliminary end.\n         B     ENDCHECK            Finish now, but have to CHECK again.\nGOSK021  C     R15,=F'4'           Check if end of track.\n         BNE   GOCHE02             No. Still in middle of track.\nGOSK022  XR    R2,R2               Zero Register.\n         ST    R2,RECONTRK         Re-initialize Record Number on track\nGOCHE02  DS    0H\n         CHECK MDLDECB\n         BCT   R4,WRTB2LUP\nWRTEFMT2 DS    0H                  Make header record first\n         L     R4,SAVER4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'02'  -  Notices Records                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMT5 DS    0H\n         ST    R5,SAVER5           Save work register.\n         LA    R5,INREC+1          Point to F-130 record plus one.\n         USING FREESRCH,R5\n         MVC   INREC(130),ZERRECX\n         MVI   INREC,X'05'         Show it is Free Search rcd, X'05'\n         LA    R2,0                Clear R2 for safety\n         ICM   R2,7,FRESRBA        Load RBA of Format 5\n         A     R2,BIUI2UR          Add number of UID record calculated\n         A     R2,BIEXTRUS         Add number of extra UID records\n         LA    R2,1(,R2)           One more to get past end of UIDs\n         STCM  R2,7,FREERBA        Store the result\nWRTF5WRT DS    0H\n         MVC   FSEARCH,FREERBA\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         LA    R2,1\n         ST    R2,NUMFMT5\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT5                BINARY FULLWORD NUMBER\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT5,CVDWORK           STORE AWAY FOR REPORTING\n         ST    R4,SAVER4A\n         L     R4,WRBCTCTR         Lower record count for BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR\n         L     R4,SAVER4A\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         C     R15,=F'8'           Check if end of extent.\n         BNE   GOSK051             No. Try if end of track.\n         MVI   EOJFLAG,X'FF'       Yes. Indicate preliminary end.\n         B     ENDCHECK            Finish now, but have to CHECK again.\nGOSK051  C     R15,=F'4'           Check if end of track.\n         BNE   GOCHE05             No. Still in middle of track.\nGOSK052  XR    R2,R2               Zero Register.\n         ST    R2,RECONTRK         Re-initialize Record Number on track\nGOCHE05  DS    0H\n         CHECK MDLDECB\n         DROP  R5\n         L     R5,SAVER5           Restore work register.\nWRTEFMT5 DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'05'  -  Free Search Record              *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMT1 DS    0H\n         LA    R2,0\n         ST    R2,NUMFMT1\n         ST    R5,SAVER5\n*                                GET NUMBER OF USERID RECORDS FOR BCT.\n         L     R6,BIUI2UR          Add number of UID record calculated\n         A     R6,BIEXTRUS         Add number of extra UID records\n         MVC   NEXTRBA(3),FSTURBA  Point to current RBA (from Header)\nWRTB1LUP DS    0H\n         LA    R2,0\n         ICM   R2,7,NEXTRBA        Increment Next RBA number.\n         LA    R2,1(,R2)\n         STCM  R2,7,NEXTRBA\n         C     R6,=F'1'            Last pass?\n         BNE   WRTB1NLS            No.\n         MVC   NEXTRBA(3),=X'000000' Zero Next RBA for last UID record.\nWRTB1NLS DS    0H                  Not last one.\n*                                  Write a blank Userid Record.\n         MVC   INREC(130),ZERRECX  Zero entire record, first.\n         MVI   INREC,X'01'         Show it is Userid record, X'01'\n         LA    R5,INREC+1          Point to F-130 record plus one.\n         USING USDIR,R5            Userid record layout.\n         MVI   USDREND,X'7F'       Fill in X'7F'\n         MVC   USDNEXT,NEXTRBA     Fill in Next RBA\n         DROP  R5\n         L     R5,SAVER5           Restore work register.\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         L     R2,NUMFMT1          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMFMT1            COUNT\n         ST    R4,SAVER4A\n         L     R4,WRBCTCTR         Lower record count for BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR\n         L     R4,SAVER4A\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         C     R15,=F'8'           Check if end of extent.\n         BNE   GOSK011             No. Try if end of track.\n         MVI   EOJFLAG,X'FF'       Yes. Indicate preliminary end.\n         B     ENDCHECK            Finish now, but have to CHECK again.\nGOSK011  C     R15,=F'4'           Check if end of track.\n         BNE   GOCHE01             No. Still in middle of track.\nGOSK012  XR    R2,R2               Zero Register.\n         ST    R2,RECONTRK         Re-initialize Record Number on track\nGOCHE01  DS    0H\n         CHECK MDLDECB\n         BCT   R6,WRTB1LUP\nWRTEFMT1 DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'01'  -  Userid Records                  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBFMTF DS    0H\n         LA    R2,0\n         ST    R2,NUMFMTF\n         ST    R5,SAVER5\nWRTBFLUP DS    0H\n         MVC   INREC(130),ZERRECX  Zero entire record, first.\n         MVI   INREC,X'FF'         Show it is Deleted message, X'FF'\n         LA    R5,INREC+1          Point to F-130 record plus one.\n*\n* - Code to count records - record number on track, etc.\n*\n         L     R2,RECONTRK         INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,RECONTRK           COUNT\n         L     R2,NUMBREC          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMBREC            COUNT\n         L     R2,NUMFMTF          INCREMENT\n         LA    R2,1(,R2)            THE\n         ST    R2,NUMFMTF            COUNT\n         XR    R2,R2               Zero Register for safety.\n         IC    R2,RECONTRK+3       Put R from TTR into record.\n         STC   R2,INREC+1\n*\n         WRITE MDLDECB,SF,BRODCOUT,INREC,'S',MF=E\n         C     R15,=F'8'           Check if end of extent.\n         BNE   GOSKFF1             No. Try if end of track.\n         MVI   EOJFLAG,X'FF'       Yes. Indicate preliminary end.\n         B     ENDCHECK            Finish now, but have to CHECK again.\nGOSKFF1  C     R15,=F'4'           Check if end of track.\n         BNE   GOCHEFF             No. Still in middle of track.\nGOSKFF2  XR    R2,R2               Zero Register.\n         ST    R2,RECONTRK         Re-initialize Record Number on track\nGOCHEFF  DS    0H\n         CHECK MDLDECB\n         L     R4,WRBCTCTR         Lower record count for next BCT.\n         BCTR  R4,0\n         ST    R4,WRBCTCTR         Store it away first.\n         LA    R4,1(,R4)           Restore it back.\n         BCT   R4,WRTBFLUP         Loop and write till done.\nWRTBFPRT DS    0H\nWRTBFLEN DS    0H\n         L     R5,SAVER5\nWRTEFMTF DS    0H\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*      End of Record Type X'FF'  -  Empty User Message Records      *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nENDCHECK DS    0H                  CHECK last record written.\n         CHECK MDLDECB\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT4                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT4,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT0                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT0,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT2                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT2,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMT1                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMT1,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMFMTF                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMFMTF,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         XR    R6,R6                     ZERO OUT WORK REGISTER\n         L     R6,NUMBREC                SAVE RECORDS PER TRACK COUNT\n         CVD   R6,CVDWORK                CONVERT TO DECIMAL\n         MVC   DEMBREC,CVDWORK           STORE AWAY FOR REPORTING\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGLOAD),MSGLOAD\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGLODD),MSGLODD\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMT4),MSGFMT4\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMT4+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMT0),MSGFMT0\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMT0+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMT2),MSGFMT2\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMT2+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMT5),MSGFMT5\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMT5+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMT1),MSGFMT1\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMT1+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGFMTF),MSGFMTF\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEMFMTF+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGNUMLD),MSGNUMLD\n         MVC   LINET+35(10),MASK10\n         ED    LINET+35(10),DEALREC+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTBCCLS DS    0H\n         CLOSE (BRODCOUT)\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nDUMMYREC DS    0CL130\n         DC    X'07'\n         DC    C'DUMMY'\n         DC    124X'00'\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nZERRECX  DS    0CL130\n         DC    130X'00'\nJFCBT    DC    CL10'JFCB +    '\nBLNKLINE DC    CL133' '\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n*     DEFAULT QUANTITIES FOR SYSIN KEYWORDS       *\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nDEFNOTFY DC    A(&DEFNOTF)\nDEFUSERS DC    A(&DEFUSER)\nDEFMESGS DC    A(&DEFMSGS)\nCHANOTFY DC    CL10'&DEFNOTF'\nCHAUSERS DC    CL10'&DEFUSER'\nCHAMESGS DC    CL10'&DEFMSGS'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMSGCYL   DC    C'Allocation of BRODUMMY DD must be in Cylinders.'\nMSGONEC  DC    C'Allocation of BRODUMMY DD must be 1 CYL primary.'\nMSGDSOR  DC    C'DSORG of BRODUMMY DD must be DA.  '\nMSGLREC  DC    C'LRECL of BRODUMMY DD must be 129. '\nMSGBLKS  DC    C'BLKSIZE of BRODUMMY DD must be 129. '\nMSGKEYL  DC    C'KEYLEN of BRODUMMY DD must be 1.   '\nMSGRFMT  DC    C'RECFM of BRODUMMY must be either F or FB.      '\nMSGMEAS  DC    C'Measured Quantities for this DASD Device: '\nMSGMDSH  DC    C'-------- ---------- --- ---- ---- ------- '\nMSGDOSY  DC    C'SYSIN Quantities Entered: '\nMSGDODH  DC    C'----- ---------- -------- '\nMSGCLCR  DC    C'Calculation Results:  (based only on SYSIN parameters x\n               that were entered)'\nMSGCLCD  DC    C'----------- --------      '\nMSGALCR  DC    C'Allocation Recommendations: '\nMSGALCD  DC    C'---------- ---------------  '\nMSGDEFV  DC    C'Default SYSIN Values - (that were not coded)'\nMSGDEFD  DC    C'------- ----- ------                      '\nMSGNOCAL DC    C'No SYSIN quantities entered. Therefore no calculationsx\n                were done.'\nMSGNOC0D DC    C'---------------------------------------------- '\nMSGNOC0T DC    C'SYSIN Keywords have to be entered in Column 1. '\nMSGNOC0A DC    C'  Admissible SYSIN Keywords:  '\nMSGNOCDA DC    C'  ---------- ----- ---------  '\nMSGNOC01 DC    C'NOTIFY=nnn      (number of Global Notify records)    '\nMSGNOC02 DC    C'USERIDS=nnnn    (number of Userids to be loaded)     '\nMSGNOC03 DC    C'MESSAGES=nnnnn  (number of User Messages in BRODCAST)'\nMSGNOC04 DC    C'EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST -X\n                new Userids / 9)'\nMSGNOC05 DC    C'RECORDS=nnnnnn  (total number of records in BRODCAST)'\nMSGNOC06 DC    C'TRACKS=nnnn     (total tracks in BRODCAST allocation)'\nMSGNOC07 DC    C'CYLINDERS=nnn   (total cylinders in BRODCAST allocatiox\n               n)'\nMSGCORRE DC    C'Please correct the indicated errors in the JCL and rer-\n               un the job.'\nMSGTR2BR DC    C'           Tracks     yield            BRODCAST  recorx\n               ds.'\nMSGCY2BR DC    C'           Cylinders  yield            BRODCAST  recorx\n               ds.'\nMSGRC2TR DC    C'           Records    yield            Tracks    allocx\n               ated for BRODCAST.'\nMSGRC2CY DC    C'           Records    yield            Cylinders allocx\n               ated for BRODCAST.'\nMSGUI2UR DC    C'           Userids    need             Userid records x\n               in BRODCAST.'\nMSGEU2UI DC    C'           Extra UID records contain space for        x\n                    Userids.'\nMSGNO2NI DC    C'           Notify records require            Notify inx\n               dex records.'\nMSGMSGRE DC    C'           User Message records will be created. '\nMSGNRROU DC    C'           Notify records round to           as a multx\n               iple of 25.'\nMSGNOTOT DC    C'           Notify records require            Total BROx\n               DCAST records.'\nMSGTOTB1 DC    C'Based on NOTIFY=, USERIDS=, MESSAGES=, EXTRAUSERIDRECSx\n               =, the number'\nMSGTOTB2 DC    C' of records required for a new BRODCAST Dataset would x\n               be:           '\nMSGTOTB3 DC    C'This requires an allocation of            Tracks or   x\n                        Cylinders.'\nMSGTOTB4 DC    C'Allocation for a BRODCAST Dataset must be in 1 extent x\n               only....'\nMSGTOTB5 DC    C'To satisfy specs, you can allocate anything larger thax\n               n this size.'\nMSGERRCY DC    C'Allocation of            cylinders is less than '\nMSGERRC1 DC    C' the calculated size of            cylinders.'\nMSGERRTR DC    C'Allocation of            tracks is less than '\nMSGERRT1 DC    C' the calculated size of            tracks.'\nMSGERATC DC    C'Allocation of BRODCOUT has to be in TRK or CYL.'\nMSGPRIAL DC    C'Primary allocation of BRODCOUT   :                    x\n                 '\nMSGCYLRE DC    C'(It is recommended to allocate space in Cylinders rathx\n               er than in Tracks.)'\nMSGNUMRC DC    C'Number of records in  BRODCOUT   :            (from dax\n               taset allocation)'\nMSGNUMLD DC    C'Total records loaded in BRODCOUT :            '\nMSGLOAD  DC    C'Number of Records Loaded by type :    (counted while bx\n               eing loaded)'\nMSGLODD  DC    C'------ -- ------- ------ -- ----              '\nMSGFMT4  DC    C'Number of Header Records Loaded  :            '\nMSGFMT0  DC    C'Number of Notice Index Records   :            '\nMSGFMT2  DC    C'Number of Notice Message Records :            '\nMSGFMT5  DC    C'Number of Free Search Records    :            '\nMSGFMT1  DC    C'Number of Userid Records Loaded  :            '\nMSGFMTF  DC    C'Number of User Message Records   :            '\nMSGBLDBR DC    C'Building the New BRODCAST Dataset - BRODCOUT '\nMSGBLDBD DC    C'-------- --- --- -------- -------   -------- '\nMSGEXKE1 DC    C'The TRACKS=, CYLINDERS=, and RECORDS= keywords'\nMSGEXKE2 DC    C' are for calculation purposes only, and are not used '\nMSGEXKE3 DC    C' in determining minimum BRODCAST Dataset size.       '\nMSGALSER DC    C'Allocation size error:  BRODCOUT dataset not loaded.'\nMSGREAL1 DC    C'Delete and Uncatalog Dataset: '\nMSGREAL2 DC    C'Which is on the DASD Volume : '\nMSGREAL3 DC    C'**** AND RERUN THIS JOB **** '\nRECPTRK  DC    C'Records per Track   : '\nTRKPCYL  DC    C'Tracks per Cylinder : '\nRECPCYL  DC    C'Records per Cylinder: '\nTRKWD    DC    C'Tracks.   '\nCYLWD    DC    C'Cylinders.'\nNEWPAGE  DC    C'1'\nNEXTLIN  DC    C' '\nTWOLINE  DC    C'0'\nTHRLINE  DC    C'-'\nNOLINE   DC    C'+'\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL60'&PGMNAME--  BRODCAST Dataset Calculation and Initiax\n               lization'\n         DC    C' ---'\n         DC    CL59' '\n*--------------------------------------------------------------------*\nJFCBDTIT DC    C'              JFCB  DIAGNOSTIC  HEX  DISPLAY  '\nMEASR30H DC    C'01      05        10        15        20        25    x\n                   30'\nRULER30H DC    C'--------++--------++--------++--------++--------++----x\n               ----++'\nMASK4    DC    XL4'40202120'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCOUT DCB   DDNAME=BRODCOUT,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=PS,           SEQUENTIAL....                      X\n               MACRF=(WL),         LOAD OF BDAM FILE                   X\n               RECFM=F,            FIXED LENGTH                        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               EXLST=JFCB1\n*\nBRODUMMY DCB   DDNAME=BRODUMMY,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=PS,           SEQUENTIAL....                      X\n               MACRF=(WL),         LOAD OF BDAM FILE                   X\n               RECFM=F,            FIXED LENGTH                        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               EXLST=JFCB1\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n*\nSYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X\n               EODAD=SYSINEND\n         SPACE 3\n         LTORG\n         SPACE\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         SPACE 1\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\n*-----------------------------------------------------------------*\nPACKWORK DC    D'0'              PACK WORK AREA\nCHARNUM  DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBINVALUE DS    F                 FULLWORD BINARY NUMBER\n*-----------------------------------------------------------------*\nCHNOTIFY DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBINOTIFY DS    F                 FULLWORD BINARY NUMBER\nCHUSERID DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIUSERID DS    F                 FULLWORD BINARY NUMBER\nCHMESAGE DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIMESAGE DS    F                 FULLWORD BINARY NUMBER\nCHTRACKS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBITRACKS DS    F                 FULLWORD BINARY NUMBER\nCHCYLIND DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBICYLIND DS    F                 FULLWORD BINARY NUMBER\nCHEXTRUS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIEXTRUS DS    F                 FULLWORD BINARY NUMBER\nCHRECORD DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854\nBIRECORD DS    F                 FULLWORD BINARY NUMBER\n*-----------------------------------------------------------------*\nBIRE2TR  DS    F                 FULLWORD BINARY NUMBER\nDERE2TR  DS    PL8\nBIRE2CY  DS    F                 FULLWORD BINARY NUMBER\nDERE2CY  DS    PL8\nBITO2TR  DS    F                 FULLWORD BINARY NUMBER\nDETO2TR  DS    PL8\nBITO2CY  DS    F                 FULLWORD BINARY NUMBER\nDETO2CY  DS    PL8\nBITRKTO  DS    F                 FULLWORD BINARY NUMBER\nDETRKTO  DS    PL8\nBICYLTO  DS    F                 FULLWORD BINARY NUMBER\nDECYLTO  DS    PL8\nBIUI2UR  DS    F                 FULLWORD BINARY NUMBER\nDEUI2UR  DS    PL8\nBIEU2UI  DS    F                 FULLWORD BINARY NUMBER\nDEEU2UI  DS    PL8\nBINOTFI  DS    F                 FULLWORD BINARY NUMBER\nDENOTFI  DS    PL8\nBINOTFR  DS    F                 FULLWORD BINARY NUMBER\nDENOTFR  DS    PL8\nBINOTOT  DS    F                 FULLWORD BINARY NUMBER\nDENOTOT  DS    PL8\nBITOTREC DS    F                 FULLWORD BINARY NUMBER\nDETOTREC DS    PL8\nBIALCYL  DS    F                 FULLWORD BINARY NUMBER\nDEALCYL  DS    PL8\nBIALTRK  DS    F                 FULLWORD BINARY NUMBER\nDEALTRK  DS    PL8\nBIALREC  DS    F                 FULLWORD BINARY NUMBER\nDEALREC  DS    PL8\nWRBCTCTR DS    F\nNUMBREC  DS    F                 COUNT OF RECORDS LOADED\nDEMBREC  DS    PL8\nNUMFMT4  DS    F                 COUNT OF RECORDS LOADED\nDEMFMT4  DS    PL8\nNUMFMT0  DS    F                 COUNT OF RECORDS LOADED\nDEMFMT0  DS    PL8\nNUMFMT2  DS    F                 COUNT OF RECORDS LOADED\nDEMFMT2  DS    PL8\nNUMFMT1  DS    F                 COUNT OF RECORDS LOADED\nDEMFMT1  DS    PL8\nNUMFMT5  DS    F                 COUNT OF RECORDS LOADED\nDEMFMT5  DS    PL8\nNUMFMTF  DS    F                 COUNT OF RECORDS LOADED\nDEMFMTF  DS    PL8\nFRESRBA  DS    XL3\nFSTURBA  DS    XL3\nFREERBA  DS    XL3\nNEXTRBA  DS    XL3\n*-----------------------------------------------------------------*\nHIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST\nRECONTRK DS    F                   COUNT RECORDS ON THIS TRACK\nRECPERTR DS    F                   RECORDS PER TRACK\nTRKPERCY DS    F                   COUNT TRACKS PER CYLINDER\nRECPERCY DS    F                   COUNT OF RECORDS PER CYLINDER\n*  ------   Calculated values  -  below\nBITRKREC DS    F                   RECORDS FROM TRACKS=\nDETRKREC DS    PL8                 RECORDS FROM TRACKS, DECIMAL\nBICYLREC DS    F                   RECORDS FROM CYLINDERS=\nDECYLREC DS    PL8                 RECORDS FROM CYLINDERS, DECIMAL\n*  ------   Calculated values  -  above\nRC15     DS    C                   STORE RETURN CODE FROM WRITE\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\n         DS    0F                  ALIGN ON FULLWORD\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nINHDR    DS    CL130\n         DS    XL2\nINREC    DS    CL130\n         DS    0F\nWRTWR    WRITE MDLDECB,SF,MF=L\nWRTWREND DS    0F\nWRTWRLEN EQU   *-WRTWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nEOJFLAG  DS    X\nNUMCFLG  DS    X\nINVNFLG  DS    X\nEOFWFLG  DS    X\nJFCBFLG  DS    X\nJFCKFLG  DS    X\nFLAG01   DS    X\n*                                  X'01' - NOTIFY CODED\n*                                  X'02' - USERIDS CODED\n*                                  X'04' - MESSAGES CODED\n*                                  X'08' - TRACKS CODED\n*                                  X'10' - CYLINDERS CODED\n*                                  X'20' - EXTRAUSERIDRECS CODED\n*                                  X'40' - RECORDS CODED\n*                                  X'80' - NOT YET USED\nFLAG02   DS    X                   NOT YET USED\n         DS    CL1\nFLAGSYST DS    X\nTRCYFLAG DS    X\n*                                  X'01' - BRODCOUT DD IS IN JCL\n*                                  X'02' - SYSIN    DD IS IN JCL\n*                                  X'04' - BRODUMMY DD IS IN JCL\nOUTLINE  DS    CL133\n         DS    CL9                 FILLER\n         DS    0D\nCVDWORK  DS    D\nDECREPTR DS    PL8\nDECREPCY DS    PL8\nDECTRPCY DS    PL8\nSTORWRK1 DS    PL12\nSAVE34   DS    2F\nSAVE45   DS    2F\nSAVER2   DS    F\nSAVER3   DS    F\nSAVER3A  DS    F\nSAVER4   DS    F\nSAVER4A  DS    F\nSAVER5   DS    F\nSAVER6   DS    F\nSAVER7   DS    F\nSAVER9   DS    F\nSAVER9A  DS    F\nSAVER9B  DS    F\nSAVER9C  DS    F\nSAVER9D  DS    F\nSAVER9E  DS    F\nSAVER9F  DS    F\nSAVER9G  DS    F\nSAVER9H  DS    F\nSAVER9I  DS    F\nSAVER9J  DS    F\nSAVER9K  DS    F\nSAVER9L  DS    F\nSTORR2   DS    F\nSTORR5   DS    F\nNOTMSGNO DS    H\nNOTMSGRG DS    F\nNOTRBANO DS    XL3\nNXTRBANO DS    XL3\nNOTRBARG DS    F\n         DS    C\nINSYSIN  DS    CL80\nWRKSYSIN DS    CL80\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJZT306 DSECT=YES\n         IEZBITS\n         CVT  DSECT=YES,LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMLIST": {"ttr": 7172, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00S\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x05}\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:53", "lines": 1405, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMLIST  TITLE 'BDMLIST - LIST BROADCAST MESSAGES FOR A USERID.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is meant to be run as a TSO-in-Batch *\n*                   command.   Need not be authorized.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMLIST USERID  MSGS(MM) SKIP(NN)                 *\n*                           USERID IS MANDATORY, OTHERS ARE           *\n*                           OPTIONAL                                  *\n*                                                                     *\n*       Function:   To list BRODCAST messages for a USERID without    *\n*                   deleting them.  If you invoke for special         *\n*                   \"USERID\" ALL$#@, then all userids which have      *\n*                   messages are displayed.  The special id for       *\n*                   displaying all userids can be changed at label    *\n*                   ALLSET.                                           *\n*                                                                     *\n*          Author:  Sam Golob               Version:   1.4.0B         *\n*                                                                     *\n*            Date:  April 28, 99                                      *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         Changes:  01/06/26  -  ADDED 2 KEYWORD PARAMETERS TO        *\n*                   (VER 2.0)    CONTROL WHICH MESSAGES ARE DISPLAYED *\n*                                                                     *\n*                                SKIP(NN) AND MSGS(MM)                *\n*                                                                     *\n*                                SKIP(NN) WILL SKIP NN RECORDS AT     *\n*                                THE BEGINNNG OF THE CHAIN.           *\n*                                                                     *\n*                                MESSAGES(MM) WILL DISPLAY MM         *\n*                                MESSAGES, AFTER THE SKIP, IF SKIP    *\n*                                WAS CODED, OR ELSE IT WILL DISPLAY   *\n*                                MM MESSAGES FROM THE BEGINNING OF    *\n*                                THE CHAIN.                           *\n*                                                                     *\n*                   99/04/28  -  TOOK OFF RESTRICTIONS OF OPER, ACCT. *\n*                   (VER 1.5)    OPEN SYS1.BRODCAST FOR INPUT INSTEAD *\n*                                OF UPDAT.  OK FOR GENERAL USERS.     *\n*                                                                     *\n*                   95/05/31  -  HAS COUNT OF MSGS AND ID DISPLAY     *\n*                                USERID ALL$#@ WILL DISPLAY ALL MSGS  *\n*                                                                     *\n*                   95/06/08  -  STRUCTURED SUBROUTINES AND COMMENTS  *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMLIST '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\nAFLG     DC    X'FF'\nALLCHAR  DC    C'ALL$#@'\n         DC    C'  '\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMLIST,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS2            ZERO, WRITE MESSAGE TO ENTER USERID\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n* ------------------------------------------------------------------ *\nTESTNONN DS    0H                  Test for non-numeric MSGS, SKIP\n         TM    BDMFLAG,X'01'\n         BO    TESTNMSG\n         TM    BDSFLAG,X'01'\n         BO    TESTNMSG\n         B     TESTNEND\nTESTNMSG DS    0H\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         LA    R0,44\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,45\n         MVC   LINE(45),=C'MSGS or SKIP keyword values were non-numericx\n               .'\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,35\n         MVC   LINE(35),=C'No User Messages have been listed. '\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  Return Code = 8 '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\nTESTNEND DS    0H\n* ------------------------------------------------------------------ *\nALLSET   DS    0H\n** -- >>\n         MVC   NEWIDU(8),NEWID\n         OC    NEWIDU(8),BLANKS\n         CLC   =C'MSGS(',NEWIDU\n         BE    WMESS3\n         CLC   =C'SKIP(',NEWIDU\n         BE    WMESS3\n** -- >>\n         CLC   NEWID(L'ALLCHAR),ALLCHAR    \"USERID\" FOR \"ALL USERIDS\"\n         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID\n         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING\n         CLI   ALLFLAG,X'FF'       IS IT X'FF'?\n         BNE   ONEID               NO. NOT REAL \"ALL\" PROCESSING\n         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.\n         B     DOBROD\nONEID    DS    0H\n         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    NOTITLHE            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nNOTITLHE DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n*\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n* -- >\n         XC    SAVER6B,SAVER6B\n         ST    R6,SAVER6B\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6B\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         CLC   SAVER6B,=F'1'\n         BE    TRYNEXTR\n* -- >\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\nTRYNEXTR DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?\n         BE    TRYMORE             YES. KEEP TRYING MORE ID'S\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7B          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7B          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         B     ZEROUT                  AND SCRAM\nTRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7B          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7B          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\nTRYMOREN B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                   WITH THE TOTAL COUNT\n         MVC   WK1ALL+50(10),MASK10            AND ENDING MESSAGE\n         ED    WK1ALL+50(10),TMSGCNT\n         MVC   LINE(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINE(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR                        DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 MSGS( AND SKIP( ARE\n         LA    R0,L'MESSAGE3+7                  INVALID IN USERID FIELD\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAGE4\n         LA    R0,L'MESSAGE4+7\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE2+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ0     LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9B\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\nLOOKKEYW DS    0H                  LOOK FOR KEYWORDS MSGS AND SKIP\n         LA    R7,1(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,1(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         MVC   MSGSWKL(5),BLANKS\n         MVC   MSGSWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    MSGSWKL(4),BLANKS   UPPERCASE FIELD\n         CLC   =C'MSGS(',MSGSWKL   MSGS KEYWORD THERE?\n         BE    MSGSCODD            YES. HANDLE IT.\n         MVC   SKIPWKL(5),BLANKS\n         MVC   SKIPWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    SKIPWKL(5),BLANKS   UPPERCASE FIELD\n         CLC   =C'SKIP(',SKIPWKL   SKIP KEYWORD THERE?\n         BE    SKIPCODD            YES. HANDLE IT.\n         B     LOOKKEYW            GO LOOP AND LOOK AT NEXT CHARACTER\nMSGSCODD DS    0H                  MSGS Coded\n         OI    MSGCFLG,X'01'       Show MSGS coded here\n         NI    SKPCFLG,X'FF'-X'01' Show SKIP not coded here\n         NI    MSGFLAG,X'FF'-X'01' Initialize MSGS error flag\n         NI    SKPFLAG,X'FF'-X'01' Initialize SKIP error flag\n         B     MSGSSKIP\nSKIPCODD DS    0H                  SKIP Coded\n         OI    SKPCFLG,X'01'       Show SKIP coded here\n         NI    MSGCFLG,X'FF'-X'01' Show MSGS not coded here\n         B     MSGSSKIP\nMSGSSKIP DS    0H                  Central Processing Station for both\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    MSGSNOPT            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nMSGSNOPT DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n         TM    MSGCFLG,X'01'\n         BO    DOMSGS\n         TM    SKPCFLG,X'01'\n         BO    DOSKIP\n* -- > One of the two flags should be on here - if not, error - below\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         MVC   LINE(43),=C'Error in Processing SKIP and MSGS Keywords.'\n         LA    R0,43\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\n* -- > One of the two flags should be on here - if not, error - above\nDOMSGS   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOMSGSL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOMSGSNO\n         CLI   0(R6),C')'\n         BE    DOMSGSNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOMSGSNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOMSGSNN            NOT NUMERIC\n         B     DOMSGSNU            NUMERIC\nDOMSGSNN DS    0H\n         MVI   0(R6),C'*'\n         NI    SKPFLAG,X'FF'-X'01'\n         OI    MSGFLAG,X'01'\n         OI    BDMFLAG,X'01'\nDOMSGSNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOMSGSNO\n         B     DOMSGSL\nDOMSGSNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    MSGFLAG,X'01'\n         BO    DOMSNNMR\nDOMSNRML DS    0H                     Good Message about MSGS number\n         EX    R6,PACKM\n         STM   R0,R1,SAVER0R1\n         OI    WORKM+7,X'0F'     SIGN NIBBLE\n         MVC   DATAMSGS+24(10),EDPAT\n         ED    DATAMSGS+24,WORKM+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATAMSGS\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGENT\nDOMSNNMR DS    0H                     Bad Message about MSGS number\n         EX    R6,MVSTRNGM\n         STM   R0,R1,SAVER0R1\n         MVC   DATAMSGS+26(10),STRNGM\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATAMSGS+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGERR\nDOMSGENT DS    0H\n         CVB   R0,WORKM\n         ST    R0,COUNTM\nDOMSGERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nDOSKIP   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOSKIPL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOSKIPNO\n         CLI   0(R6),C')'\n         BE    DOSKIPNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOSKIPNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOSKIPNN            NOT NUMERIC\n         B     DOSKIPNU            NUMERIC\nDOSKIPNN DS    0H\n         MVI   0(R6),C'*'\n         NI    MSGFLAG,X'FF'-X'01'\n         OI    SKPFLAG,X'01'\n         OI    BDSFLAG,X'01'\nDOSKIPNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOSKIPNO\n         B     DOSKIPL\nDOSKIPNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    SKPFLAG,X'01'\n         BO    DOSKNNMR\nDOSKNRML DS    0H                    Good Message about SKIP number\n         EX    R6,PACKS\n         STM   R0,R1,SAVER0R1\n         OI    WORKS+7,X'0F'     SIGN NIBBLE\n         MVC   DATASKIP+24(10),EDPAT\n         ED    DATASKIP+24,WORKS+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATASKIP\n         MVC   LINE(L'DATASKIP),DATASKIP\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPENT\nDOSKNNMR DS    0H                    Bad Message about SKIP number\n         EX    R6,MVSTRNGS\n         STM   R0,R1,SAVER0R1\n         MVC   DATASKIP+26(10),STRNGS\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATASKIP),DATASKIP\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATASKIP+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPERR\nDOSKPENT DS    0H\n         CVB   R0,WORKS\n         ST    R0,COUNTS\nDOSKPERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nGETIDEND DS    0H\n         L     R9,SAVER9B\n         BR    R9\nPACKM    PACK  WORKM,0(0,7)\nPACKS    PACK  WORKS,0(0,7)\nMVSTRNGM MVC   STRNGM(0),0(R7)\nMVSTRNGS MVC   STRNGS(0),0(R7)\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9C\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9D\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9D\n         BR    R9\n         SPACE\n* --------------------------------------------------------- *\nHEX      DS    0H\n         ST    R9,SAVER9A\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         L     R9,SAVER9A\n         BR    R9                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\nHEXSAVE  DS    3F                    Register save for HEX macro\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9E\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   SMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   MMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   STRNGM(10),BLANKS\n         MVC   STRNGS(10),BLANKS\n         MVI   ALLFLAG,X'00'\n         MVI   TITLFLG,X'00'       Title has not yet been printed.\n         MVI   BDMFLAG,X'00'\n         MVI   BDSFLAG,X'00'\n         MVI   MSGFLAG,X'00'\n         MVI   SKPFLAG,X'00'\n         MVI   MSGCFLG,X'00'\n         MVI   SKPCFLG,X'00'\n         MVC   WORKM,DUBLZERO\n         MVC   WORKS,DUBLZERO\n         MVC   COUNTM,FULLZERO\n         MVC   COUNTS,FULLZERO\n         MVC   DATAMSGS,TESTMSGS\n         MVC   DATASKIP,TESTSKIP\n         MVC   WKLBLNK(2),BLANKS\n         MVC   MSGSWKL(5),BLANKS\n         MVC   SKIPWKL(5),BLANKS\n         MVI   SKLSFLAG,X'00'\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9F\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9G\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9G\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9H\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9I\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n* -- >\n         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY\n         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6A\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         S     R6,SAVER6A              RECALCULATE BCT REGISTER\n* -- >\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        R5 AND R7 MUST BE SAVED BEFORE ENTERING THIS ROUTINE\n*        AND THEY MUST BE RESTORED RIGHT AFTER LEAVING THIS ROUTINE.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9J\n         NI    SKLSFLAG,X'FF'-X'07'   TURN OFF ALL FLAGS\n         XR    R5,R5               CLEAR R5 FOR REUSE IN THIS ROUTINE\n         XR    R7,R7               CLEAR R7 FOR REUSE IN THIS ROUTINE\n         CLC   COUNTS,=F'0'        HAVE WE CODED A SKIP COUNT?\n         BE    WRLOOPTM\n         OI    SKLSFLAG,X'01'      SHOW WE'RE SKIPPING\n         L     R5,COUNTS\nWRLOOPTM DS    0H\n         CLC   COUNTM,=F'0'\n         BE    WRLOOP\n         OI    SKLSFLAG,X'02'      SHOW WE'RE LIMITING MESSAGES\n         L     R7,COUNTM\n         TM    SKLSFLAG,X'01'      ARE WE ALSO SKIPPING?\n         BZ    WRLOOP              NO. R7 IS FINE. OTHERWISE,\n         LA    R7,1(,R7)           THEN COMPENSATE BCT REGISTER\nWRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0\n         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE\n         EX    R6,MOVEMSG\nWRLSKIP1 DS    0H\n         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\n         TM    SKLSFLAG,X'04'      LIMITING-AND HAVE PASSED THE LIMIT?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\nWRLLIMS1 DS    0H\n         TM    SKLSFLAG,X'02'      ARE WE LIMITING MESSAGES?\n         BZ    WRLLIMS2            NO. THEN PRINT THEM.\n         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?\n         BO    WRLLIMS3            YES, DON'T PRINT THIS MESSAGE\nWRLLIMS2 DS    0H\n         BAL   R9,MSG              WRITE MESSAGE OUT\nWRLLIMS3 DS    0H\nWRLSKIP2 DS    0H\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         CLC   USMNEXT(3),ZEROS\n         BE    WRITLEND\n         MVC   MESSRBA(3),USMNEXT\n         DROP  R2\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRLSKIP3 DS    0H\n         TM    SKLSFLAG,X'01'      SKIPPING, AND NOT FINISHED?\n         BZ    WRLSKIP4            FINISHED SKIPPING. NO BCT.\n         BCT   R5,WRLOOP\n         NI    SKLSFLAG,X'FF'-X'01'\nWRLSKIP4 DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED WRITING?\n         BO    WRLLIMS4            YEAH. BYPASS BCT.\n         BCT   R7,WRLOOP\n         OI    SKLSFLAG,X'04'      SHOW THAT YOU'VE FINISHED WRITING\nWRLLIMS4 DS    0H\n         B     WRLOOP\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9K\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINE(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINE,MESSEND                      END OF USER LINE\n         LA    R0,L'MESSEND\n         BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n         BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(55),LINE-1                 OF ASTERISKS.\n         BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9K\n         BR    R9\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9L\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H\n         ST    R9,SAVER9M\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME\n         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE\n         LA    R0,74                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER\n         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE\n         LA    R0,36                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R0,L'MESNOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R0,L'MESYOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30' BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*--------------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\nTESTMSGS DC    C'Limit  of MSGS to List                '\nTESTSKIP DC    C'Number of MSGS to Skip                '\nEDPAT    DC    X'40202020202020202120'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINE(*-*),USMTEXT   EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMESSBLNK DS    0CL133\nBLANKS   DC    CL10'          '    10 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'Please enter the USERID name after Command name'\nMESSAGE3 DC    C' A Userid cannot begin with MSGS( or SKIP( .   '\nMESSAGE4 DC    C' Please use MSGS( or SKIP( after the Userid.   '\nMESSEND  DC    C'* - - - - End of Messages for this User - - - - *'\nMESTOTAL DC    C'User         has           Deferred TSO Messages'\nMESALL   DC    CL60'Total Deferred TSO Messages in BRODCAST dataset.'\nMESNOUSR DC    C'* - - No USERID Record for User          - - *'\nMESPREND DC    C'?????  Preliminary End of USERID Records - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nWORKM    DS    D\nWORKS    DS    D\nSAVER0R1 DS    D\nSAVER5A  DS    F\nSAVER5B  DS    F\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7A  DS    F\nSAVER7B  DS    F\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nCOUNTM   DS    F\nCOUNTS   DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nSKLSFLAG DS    X\n*              X'01' MEANS WE ARE SKIPPING RECORDS\n*              X'02' MEANS WE ARE LIMITING RECORDS DISPLAYED\n*              X'04' MEANS WE HAVE PASSED THE DISPLAY LIMIT\nWKLBLNK  DS    CL2\nMSGSWKL  DS    CL5                 THIS ONE FIRST FOR INIT TO BLANKS\nSKIPWKL  DS    CL5\nDATAMSGS DS    CL38                TEST MSGS AREA\n         DC    CL45' '     PADDING\nDATASKIP DS    CL38                TEST SKIP AREA\n         DC    CL45' '     PADDING\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL8' '              PADDING\nNEWIDU   DC    C'        '         UPPERCASED USERID PARM\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nSMSGCNT  DC    PL5'0'              COUNT OF SKIPPED MESSAGES\nMMSGCNT  DC    PL5'0'              COUNT OF LISTED MESSAGES\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL   DC    CL60' '\nWK1NOUSR DC    C'                                              '\n         DC    C' '\nALLFLAG  DS    X\nTITLFLG  DS    X\nMSGFLAG  DS    X\nSKPFLAG  DS    X\nBDMFLAG  DS    X\nBDSFLAG  DS    X\nMSGCFLG  DS    X\nSKPCFLG  DS    X\nSTRNGM   DS    CL10\nSTRNGS   DS    CL10\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJEESCB DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMLRBA": {"ttr": 7687, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x05\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x05\\x83\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:05", "lines": 1411, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMLRBA  TITLE 'BDMLRBA - LIST BROADCAST MESSAGES FOR A USERID.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is meant to be run as a TSO-in-Batch *\n*                   command.   Need not be authorized.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMLRBA USERID  MSGS(MM) SKIP(NN)                 *\n*                           USERID IS MANDATORY, OTHERS ARE           *\n*                           OPTIONAL                                  *\n*                                                                     *\n*       Function:   To list BRODCAST messages for a USERID without    *\n*                   deleting them.  If you invoke for special         *\n*                   \"USERID\" ALL$#@, then all userids which have      *\n*                   messages are displayed.  The special id for       *\n*                   displaying all userids can be changed at label    *\n*                   ALLSET.                                           *\n*                                                                     *\n*          Author:  Sam Golob               Version:   1.4.0B         *\n*                                                                     *\n*            Date:  April 28, 99                                      *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         Changes:  01/06/26  -  ADDED 2 KEYWORD PARAMETERS TO        *\n*                   (VER 2.0)    CONTROL WHICH MESSAGES ARE DISPLAYED *\n*                                                                     *\n*                                SKIP(NN) AND MSGS(MM)                *\n*                                                                     *\n*                                SKIP(NN) WILL SKIP NN RECORDS AT     *\n*                                THE BEGINNNG OF THE CHAIN.           *\n*                                                                     *\n*                                MESSAGES(MM) WILL DISPLAY MM         *\n*                                MESSAGES, AFTER THE SKIP, IF SKIP    *\n*                                WAS CODED, OR ELSE IT WILL DISPLAY   *\n*                                MM MESSAGES FROM THE BEGINNING OF    *\n*                                THE CHAIN.                           *\n*                                                                     *\n*                   99/04/28  -  TOOK OFF RESTRICTIONS OF OPER, ACCT. *\n*                   (VER 1.5)    OPEN SYS1.BRODCAST FOR INPUT INSTEAD *\n*                                OF UPDAT.  OK FOR GENERAL USERS.     *\n*                                                                     *\n*                   95/05/31  -  HAS COUNT OF MSGS AND ID DISPLAY     *\n*                                USERID ALL$#@ WILL DISPLAY ALL MSGS  *\n*                                                                     *\n*                   95/06/08  -  STRUCTURED SUBROUTINES AND COMMENTS  *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMLRBA '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\nAFLG     DC    X'FF'\nALLCHAR  DC    C'ALL$#@'\n         DC    C'  '\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMLRBA,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS2            ZERO, WRITE MESSAGE TO ENTER USERID\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n* ------------------------------------------------------------------ *\nTESTNONN DS    0H                  Test for non-numeric MSGS, SKIP\n         TM    BDMFLAG,X'01'\n         BO    TESTNMSG\n         TM    BDSFLAG,X'01'\n         BO    TESTNMSG\n         B     TESTNEND\nTESTNMSG DS    0H\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         LA    R0,44\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,45\n         MVC   LINE(45),=C'MSGS or SKIP keyword values were non-numericx\n               .'\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,35\n         MVC   LINE(35),=C'No User Messages have been listed. '\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  Return Code = 8 '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\nTESTNEND DS    0H\n* ------------------------------------------------------------------ *\nALLSET   DS    0H\n** -- >>\n         MVC   NEWIDU(8),NEWID\n         OC    NEWIDU(8),BLANKS\n         CLC   =C'MSGS(',NEWIDU\n         BE    WMESS3\n         CLC   =C'SKIP(',NEWIDU\n         BE    WMESS3\n** -- >>\n         CLC   NEWID(L'ALLCHAR),ALLCHAR    \"USERID\" FOR \"ALL USERIDS\"\n         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID\n         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING\n         CLI   ALLFLAG,X'FF'       IS IT X'FF'?\n         BNE   ONEID               NO. NOT REAL \"ALL\" PROCESSING\n         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.\n         B     DOBROD\nONEID    DS    0H\n         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    NOTITLHE            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nNOTITLHE DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n*\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n* -- >\n         XC    SAVER6B,SAVER6B\n         ST    R6,SAVER6B\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6B\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         CLC   SAVER6B,=F'1'\n         BE    TRYNEXTR\n* -- >\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\nTRYNEXTR DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?\n         BE    TRYMORE             YES. KEEP TRYING MORE ID'S\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7B          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7B          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         B     ZEROUT                  AND SCRAM\nTRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7B          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7B          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\nTRYMOREN B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                   WITH THE TOTAL COUNT\n         MVC   WK1ALL+50(10),MASK10            AND ENDING MESSAGE\n         ED    WK1ALL+50(10),TMSGCNT\n         MVC   LINE(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINE(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR                        DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 MSGS( AND SKIP( ARE\n         LA    R0,L'MESSAGE3+7                  INVALID IN USERID FIELD\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAGE4\n         LA    R0,L'MESSAGE4+7\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE2+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ0     LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9B\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\nLOOKKEYW DS    0H                  LOOK FOR KEYWORDS MSGS AND SKIP\n         LA    R7,1(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,1(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         MVC   MSGSWKL(5),BLANKS\n         MVC   MSGSWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    MSGSWKL(4),BLANKS   UPPERCASE FIELD\n         CLC   =C'MSGS(',MSGSWKL   MSGS KEYWORD THERE?\n         BE    MSGSCODD            YES. HANDLE IT.\n         MVC   SKIPWKL(5),BLANKS\n         MVC   SKIPWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    SKIPWKL(5),BLANKS   UPPERCASE FIELD\n         CLC   =C'SKIP(',SKIPWKL   SKIP KEYWORD THERE?\n         BE    SKIPCODD            YES. HANDLE IT.\n         B     LOOKKEYW            GO LOOP AND LOOK AT NEXT CHARACTER\nMSGSCODD DS    0H                  MSGS Coded\n         OI    MSGCFLG,X'01'       Show MSGS coded here\n         NI    SKPCFLG,X'FF'-X'01' Show SKIP not coded here\n         NI    MSGFLAG,X'FF'-X'01' Initialize MSGS error flag\n         NI    SKPFLAG,X'FF'-X'01' Initialize SKIP error flag\n         B     MSGSSKIP\nSKIPCODD DS    0H                  SKIP Coded\n         OI    SKPCFLG,X'01'       Show SKIP coded here\n         NI    MSGCFLG,X'FF'-X'01' Show MSGS not coded here\n         B     MSGSSKIP\nMSGSSKIP DS    0H                  Central Processing Station for both\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    MSGSNOPT            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nMSGSNOPT DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n         TM    MSGCFLG,X'01'\n         BO    DOMSGS\n         TM    SKPCFLG,X'01'\n         BO    DOSKIP\n* -- > One of the two flags should be on here - if not, error - below\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         MVC   LINE(43),=C'Error in Processing SKIP and MSGS Keywords.'\n         LA    R0,43\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\n* -- > One of the two flags should be on here - if not, error - above\nDOMSGS   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOMSGSL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOMSGSNO\n         CLI   0(R6),C')'\n         BE    DOMSGSNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOMSGSNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOMSGSNN            NOT NUMERIC\n         B     DOMSGSNU            NUMERIC\nDOMSGSNN DS    0H\n         MVI   0(R6),C'*'\n         NI    SKPFLAG,X'FF'-X'01'\n         OI    MSGFLAG,X'01'\n         OI    BDMFLAG,X'01'\nDOMSGSNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOMSGSNO\n         B     DOMSGSL\nDOMSGSNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    MSGFLAG,X'01'\n         BO    DOMSNNMR\nDOMSNRML DS    0H                     Good Message about MSGS number\n         EX    R6,PACKM\n         STM   R0,R1,SAVER0R1\n         OI    WORKM+7,X'0F'     SIGN NIBBLE\n         MVC   DATAMSGS+24(10),EDPAT\n         ED    DATAMSGS+24,WORKM+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATAMSGS\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGENT\nDOMSNNMR DS    0H                     Bad Message about MSGS number\n         EX    R6,MVSTRNGM\n         STM   R0,R1,SAVER0R1\n         MVC   DATAMSGS+26(10),STRNGM\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATAMSGS+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGERR\nDOMSGENT DS    0H\n         CVB   R0,WORKM\n         ST    R0,COUNTM\nDOMSGERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nDOSKIP   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOSKIPL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOSKIPNO\n         CLI   0(R6),C')'\n         BE    DOSKIPNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOSKIPNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOSKIPNN            NOT NUMERIC\n         B     DOSKIPNU            NUMERIC\nDOSKIPNN DS    0H\n         MVI   0(R6),C'*'\n         NI    MSGFLAG,X'FF'-X'01'\n         OI    SKPFLAG,X'01'\n         OI    BDSFLAG,X'01'\nDOSKIPNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOSKIPNO\n         B     DOSKIPL\nDOSKIPNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    SKPFLAG,X'01'\n         BO    DOSKNNMR\nDOSKNRML DS    0H                    Good Message about SKIP number\n         EX    R6,PACKS\n         STM   R0,R1,SAVER0R1\n         OI    WORKS+7,X'0F'     SIGN NIBBLE\n         MVC   DATASKIP+24(10),EDPAT\n         ED    DATASKIP+24,WORKS+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATASKIP\n         MVC   LINE(L'DATASKIP),DATASKIP\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPENT\nDOSKNNMR DS    0H                    Bad Message about SKIP number\n         EX    R6,MVSTRNGS\n         STM   R0,R1,SAVER0R1\n         MVC   DATASKIP+26(10),STRNGS\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATASKIP),DATASKIP\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATASKIP+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPERR\nDOSKPENT DS    0H\n         CVB   R0,WORKS\n         ST    R0,COUNTS\nDOSKPERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nGETIDEND DS    0H\n         L     R9,SAVER9B\n         BR    R9\nPACKM    PACK  WORKM,0(0,7)\nPACKS    PACK  WORKS,0(0,7)\nMVSTRNGM MVC   STRNGM(0),0(R7)\nMVSTRNGS MVC   STRNGS(0),0(R7)\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9C\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9D\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9D\n         BR    R9\n         SPACE\n* --------------------------------------------------------- *\nHEX      DS    0H\n         ST    R9,SAVER9A\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         L     R9,SAVER9A\n         BR    R9                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\nHEXSAVE  DS    3F                    Register save for HEX macro\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9E\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   SMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   MMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   STRNGM(10),BLANKS\n         MVC   STRNGS(10),BLANKS\n         MVI   ALLFLAG,X'00'\n         MVI   TITLFLG,X'00'       Title has not yet been printed.\n         MVI   BDMFLAG,X'00'\n         MVI   BDSFLAG,X'00'\n         MVI   MSGFLAG,X'00'\n         MVI   SKPFLAG,X'00'\n         MVI   MSGCFLG,X'00'\n         MVI   SKPCFLG,X'00'\n         MVC   WORKM,DUBLZERO\n         MVC   WORKS,DUBLZERO\n         MVC   COUNTM,FULLZERO\n         MVC   COUNTS,FULLZERO\n         MVC   DATAMSGS,TESTMSGS\n         MVC   DATASKIP,TESTSKIP\n         MVC   WKLBLNK(2),BLANKS\n         MVC   MSGSWKL(5),BLANKS\n         MVC   SKIPWKL(5),BLANKS\n         MVI   SKLSFLAG,X'00'\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9F\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9G\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9G\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9H\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9I\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n* -- >\n         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY\n         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6A\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         S     R6,SAVER6A              RECALCULATE BCT REGISTER\n* -- >\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        R5 AND R7 MUST BE SAVED BEFORE ENTERING THIS ROUTINE\n*        AND THEY MUST BE RESTORED RIGHT AFTER LEAVING THIS ROUTINE.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9J\n         NI    SKLSFLAG,X'FF'-X'07'   TURN OFF ALL FLAGS\n         XR    R5,R5               CLEAR R5 FOR REUSE IN THIS ROUTINE\n         XR    R7,R7               CLEAR R7 FOR REUSE IN THIS ROUTINE\n         CLC   COUNTS,=F'0'        HAVE WE CODED A SKIP COUNT?\n         BE    WRLOOPTM\n         OI    SKLSFLAG,X'01'      SHOW WE'RE SKIPPING\n         L     R5,COUNTS\nWRLOOPTM DS    0H\n         CLC   COUNTM,=F'0'\n         BE    WRLOOP\n         OI    SKLSFLAG,X'02'      SHOW WE'RE LIMITING MESSAGES\n         L     R7,COUNTM\n         TM    SKLSFLAG,X'01'      ARE WE ALSO SKIPPING?\n         BZ    WRLOOP              NO. R7 IS FINE. OTHERWISE,\n         LA    R7,1(,R7)           THEN COMPENSATE BCT REGISTER\nWRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0\n         A     R0,=F'7'\n         ST    R0,SAVELEN\n         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE\n         MVC   LINE,LINE-1\n         HEX   LINE,3,MESSRBA\n         EX    R6,MOVEMSG\nWRLSKIP1 DS    0H\n         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\n         TM    SKLSFLAG,X'04'      LIMITING-AND HAVE PASSED THE LIMIT?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\nWRLLIMS1 DS    0H\n         TM    SKLSFLAG,X'02'      ARE WE LIMITING MESSAGES?\n         BZ    WRLLIMS2            NO. THEN PRINT THEM.\n         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?\n         BO    WRLLIMS3            YES, DON'T PRINT THIS MESSAGE\nWRLLIMS2 DS    0H\n         L     R0,SAVELEN          LENGTH TO WRITE\n         BAL   R9,MSG              WRITE MESSAGE OUT\nWRLLIMS3 DS    0H\nWRLSKIP2 DS    0H\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         CLC   USMNEXT(3),ZEROS\n         BE    WRITLEND\n         MVC   MESSRBA(3),USMNEXT\n         DROP  R2\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRLSKIP3 DS    0H\n         TM    SKLSFLAG,X'01'      SKIPPING, AND NOT FINISHED?\n         BZ    WRLSKIP4            FINISHED SKIPPING. NO BCT.\n         BCT   R5,WRLOOP\n         NI    SKLSFLAG,X'FF'-X'01'\nWRLSKIP4 DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED WRITING?\n         BO    WRLLIMS4            YEAH. BYPASS BCT.\n         BCT   R7,WRLOOP\n         OI    SKLSFLAG,X'04'      SHOW THAT YOU'VE FINISHED WRITING\nWRLLIMS4 DS    0H\n         B     WRLOOP\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9K\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINE(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINE,MESSEND                      END OF USER LINE\n         LA    R0,L'MESSEND\n         BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n         BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(55),LINE-1                 OF ASTERISKS.\n         BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9K\n         BR    R9\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9L\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H\n         ST    R9,SAVER9M\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME\n         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE\n         LA    R0,74                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER\n         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE\n         LA    R0,36                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R0,L'MESNOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R0,L'MESYOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30' BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*--------------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\nTESTMSGS DC    C'Limit  of MSGS to List                '\nTESTSKIP DC    C'Number of MSGS to Skip                '\nEDPAT    DC    X'40202020202020202120'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT   EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMESSBLNK DS    0CL133\nBLANKS   DC    CL10'          '    10 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'Please enter the USERID name after Command name'\nMESSAGE3 DC    C' A Userid cannot begin with MSGS( or SKIP( .   '\nMESSAGE4 DC    C' Please use MSGS( or SKIP( after the Userid.   '\nMESSEND  DC    C'* - - - - End of Messages for this User - - - - *'\nMESTOTAL DC    C'User         has           Deferred TSO Messages'\nMESALL   DC    CL60'Total Deferred TSO Messages in BRODCAST dataset.'\nMESNOUSR DC    C'* - - No USERID Record for User          - - *'\nMESPREND DC    C'?????  Preliminary End of USERID Records - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nWORKM    DS    D\nWORKS    DS    D\nSAVER0R1 DS    D\nSAVELEN  DS    F\nSAVER5A  DS    F\nSAVER5B  DS    F\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7A  DS    F\nSAVER7B  DS    F\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nCOUNTM   DS    F\nCOUNTS   DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nSKLSFLAG DS    X\n*              X'01' MEANS WE ARE SKIPPING RECORDS\n*              X'02' MEANS WE ARE LIMITING RECORDS DISPLAYED\n*              X'04' MEANS WE HAVE PASSED THE DISPLAY LIMIT\nWKLBLNK  DS    CL2\nMSGSWKL  DS    CL5                 THIS ONE FIRST FOR INIT TO BLANKS\nSKIPWKL  DS    CL5\nDATAMSGS DS    CL38                TEST MSGS AREA\n         DC    CL45' '     PADDING\nDATASKIP DS    CL38                TEST SKIP AREA\n         DC    CL45' '     PADDING\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL8' '              PADDING\nNEWIDU   DC    C'        '         UPPERCASED USERID PARM\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nSMSGCNT  DC    PL5'0'              COUNT OF SKIPPED MESSAGES\nMMSGCNT  DC    PL5'0'              COUNT OF LISTED MESSAGES\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL   DC    CL60' '\nWK1NOUSR DC    C'                                              '\n         DC    C' '\nALLFLAG  DS    X\nTITLFLG  DS    X\nMSGFLAG  DS    X\nSKPFLAG  DS    X\nBDMFLAG  DS    X\nBDSFLAG  DS    X\nMSGCFLG  DS    X\nSKPCFLG  DS    X\nSTRNGM   DS    CL10\nSTRNGS   DS    CL10\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJEESCB DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMMLOAD": {"ttr": 8202, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00C\\x01\\x066\\x1f\\x01\\x16&\\x9f\\x156\\x07\\xa7\\x04\\xac\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2006-12-27T00:00:00", "modifydate": "2016-09-25T15:36:43", "lines": 1959, "newlines": 1196, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMMLOAD TITLE 'BDMMLOAD - LOAD USER MESSAGES IN BULK TO SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program which bulk        *\n*                   loads a file of userid messages into a BRODCAST   *\n*                   Dataset.  The messages are checked against        *\n*                   userids which are already in the BRODCAST         *\n*                   dataset, before they are loaded.                  *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*       Batch Program - Execution JCL                                 *\n*                                                                     *\n*  //  JOB CARD                                                       *\n*  //*-----------------------------------------------------*//        *\n*  //*   BDMMLOAD EXECUTION - LOAD USER MESSAGES IN BULK   *//        *\n*  //*-----------------------------------------------------*//        *\n*  //BDMMLOAD EXEC PGM=BDMMLOAD                                       *\n*  //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB                 *\n*  //BRODCAST DD DISP=SHR,DSN=your.brodcast.dataset                   *\n*  //SYSPRINT DD SYSOUT=*                                             *\n*  //BDMMDUMP DD DISP=SHR,                                            *\n*  //            DSN=yourid.brodcast.msgdump                          *\n*  //BDMMREAD DD DISP=(NEW,PASS,DELETE),                              *\n*  //            DSN=yourid.msdump.MREAD,UNIT=SYSALLDA,               *\n*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=12000,LRECL=12),      *\n*  //            SPACE=(TRK,(5,5),RLSE)                               *\n*  //BDMUIDWK DD DISP=(NEW,PASS,DELETE),                              *\n*  //            DSN=yourid.msdump.UIDWK,UNIT=SYSALLDA,               *\n*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=17000,LRECL=17),      *\n*  //            SPACE=(TRK,(5,5),RLSE)                               *\n*  //BDMFRMAP DD DISP=(NEW,PASS,DELETE),                              *\n*  //            DSN=yourid.msdump.FRMAP,UNIT=SYSALLDA,               *\n*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=7000,LRECL=7),        *\n*  //            SPACE=(TRK,(5,5),RLSE)                               *\n*  //SYSIN    DD DUMMY                                                *\n*                                                                     *\n*  Function:   To load userid messages from a BDMMDUMP format file    *\n*              into a BRODCAST Dataset.                               *\n*                                                                     *\n*  Author:     Sam Golob               Version:   1.4.0B              *\n*                                                                     *\n*  Date:       Dec 27, 2006                                           *\n*                                                                     *\n*  Changes:    09/17/07 - Limit size of FRMAP when it is more than    *\n*                  &EXTRNUM bigger than the maximum total number      *\n*                  of messages to be loaded.  This is because you     *\n*                  can waste I/O's when the output BRODCAST dataset   *\n*                  has many free records, and you only need &EXTRNUM  *\n*                  more of them, than the total number of messages    *\n*                  in the BDMMDUMP dataset.                           *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        Register Equates\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n         LCLA  &EXTRNUM\n&EXTRNUM SETA  20\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMMLOAD'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)       Branch over Eyecatchers\nEXTRANUM DC    A(&EXTRNUM)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMMLOAD,R12,R11,R10,R8\n         LR    R12,R15              Set up base registers\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R8,4095(,R10)\n         LA    R8,1(,R8)\n         LR    R5,R1                Preserve PARM Pointer.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R5,SAVEPRM           PARM Pointer to Data Area Field\n         L     R1,SAVEPRM           Restore PARM Pointer\n         BAL   R9,INITCON           Initialize Constants in Data Area\n         SPACE 1\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of DD names in      06224\n*                             the JCL:  BRODCAST, BDMMDUMP, SYSIN,       06225\n*                                       BDMMREAD.                        06225\n* ----->                      Then OPEN them if there is JCL for them.   06226\n* ----->                      Then test the OPEN if it was good.         06226\n* ----->                      Set DDNFLAG on if the appropriate DD       06226\n* ----->                       was in the JCL.                           06226\n* ----->                      Set BDMNOFLG on if the appropriate OPEN    06226\n* ----->                       for the DD DIDN'T WORK!!!                 06226\n* ----------------------------------------------------------------- *    06227\n         MVI   DDNFLAG,X'00'        ZERO OUT DDNFLAG - Nothing OPEN\n         ST    R3,SAVER3A           Save work registers\n         ST    R5,SAVER5A\n         L     R5,16                R5=CVT                               06228\n         L     R5,0(,R5)            R5=TCB WORDS                         06229\n         L     R5,4(,R5)            R5=MY TCB                            06230\n         L     R5,12(,R5)           R5=TIOT                              06231\n         LA    R5,24(,R5)           R5=FIRST DD ENTRY                    06232\nTIOTLOOP CLC   0(4,R5),=XL4'00'     END OF TIOT?                         06233\n         BE    TIOTSEND             Yes. Go on with OPENs.               06234\n         CLC   4(8,R5),BRODCASN     BRODCAST DDNAME there?               06235\n         BNE   TIOTPRTN             No                                   06236\n         OI    DDNFLAG,X'01'        Show presence of BRODCAST DD         06237\n         B     TIOTNEXT             Try next entry                       06238\nTIOTPRTN CLC   4(8,R5),BDMMDUMN     BDMMDUMP DDNAME there?               06239\n         BNE   TIOTSYSN             No                                   06240\n         OI    DDNFLAG,X'02'        Show presence of BDMMDUMP DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTSYSN CLC   4(8,R5),SYSINM       SYSIN DDNAME there?                  06239\n         BNE   TIOTBDMR             No                                   06240\n         OI    DDNFLAG,X'04'        Show presence of SYSIN  DD           06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTBDMR CLC   4(8,R5),BDMMREAN     BDMMREAD DDNAME there?               06239\n         BNE   TIOTBDMU             No                                   06240\n         OI    DDNFLAG,X'08'        Show presence of BDMMREAD DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTBDMU CLC   4(8,R5),BDMUIDWN     BDMUIDWK DDNAME there?               06239\n         BNE   TIOTFRMP             No                                   06240\n         OI    DDNFLAG,X'10'        Show presence of BDMUIDWK DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTFRMP CLC   4(8,R5),BDMFRMAN     BDMFRMAP DDNAME there?               06239\n         BNE   TIOTSYSP             No                                   06240\n         OI    DDNFLAG,X'20'        Show presence of BDMFRMAP DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTSYSP CLC   4(8,R5),SYSPRINN     SYSPRINT DDNAME there?               06239\n         BNE   TIOTNEXT             No                                   06240\n         OI    DDNFLAG,X'40'        Show presence of SYSPRINT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)            R3=LENGTH OF DD ENTRY                06244\n         AR    R5,R3                R5=NEXT DD ENTRY                     06245\n         B     TIOTLOOP             GO CHECK IT                          06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3A           Restore work registers\n         L     R5,SAVER5A\n         B     CHEKSYSP             Jump over Constants\n* ---- >     - - - - - - - - - - - -\nBRODCASN DC    CL8'BRODCAST'        Literals for the DD names.\nBDMMDUMN DC    CL8'BDMMDUMP'\nBDMMREAN DC    CL8'BDMMREAD'\nBDMUIDWN DC    CL8'BDMUIDWK'\nBDMFRMAN DC    CL8'BDMFRMAP'\nSYSINM   DC    CL8'SYSIN   '\nSYSPRINN DC    CL8'SYSPRINT'\n* ---- >     - - - - - - - - - - - -\n* ---------------------------------------------------------------- *\n*                                                                  *\n*   OPEN FILES -                                                   *\n*                                                                  *\n*    When we're finished here, we should have a good idea about    *\n*    how the DD names were coded in the JCL, and which files were  *\n*    actually opened.  We use 2 flags:  DDNFLAG (if on) shows      *\n*    that the DD name was actually coded in the JCL.  BDMNOFLG     *\n*    (if on) shows that the actual file is NOT OPEN.  In either    *\n*    flag:                                                         *\n*                                                                  *\n*    BRODCAST DD  -  flag = X'01'                                  *\n*    BDMMDUMP DD  -  flag = X'02'                                  *\n*    SYSIN    DD  -  flag = X'04'                                  *\n*    BDMMREAD DD  -  flag = X'08'                                  *\n*    BDMUIDWK DD  -  flag = X'10'                                  *\n*    BDMFRMAP DD  -  flag = X'20'                                  *\n*    SYSPRINT DD  -  flag = X'40'                                  *\n*                                                                  *\n* ---------------------------------------------------------------- *\nCHEKSYSP DS    0H\n         TM    DDNFLAG,X'40'        SYSPRINT there?\n         BO    DOOPENS              Yes. Go OPEN it.\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'02'        BDMMDUMP there?\n         BO    TRYIFBRD\n         WTO   'BDMML10E     BDMMDUMP DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nTRYIFBRD DS    0H\n         TM    DDNFLAG,X'01'        BRODCAST there?\n         BO    TRYMREAD\n         WTO   'BDMML10E     BRODCAST DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nTRYMREAD DS    0H\n         TM    DDNFLAG,X'08'        BDMMREAD there?\n         BO    TRYUIDWK\n         WTO   'BDMML10E     BDMMREAD DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nTRYUIDWK DS    0H\n         TM    DDNFLAG,X'10'        BDMUIDWK there?\n         BO    TRYFRMAP\n         WTO   'BDMML10E     BDMUIDWK DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nTRYFRMAP DS    0H\n         TM    DDNFLAG,X'20'        BDMFRMAP there?\n         BO    NODELMSG\n         WTO   'BDMML10E     BDMFRMAP DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNODELMSG DS    0H\n         B     EOJ16                End right away.  Code 16.\nDOOPENS  DS    0H                   OPEN SYSPRINT and print titles\n         OPEN  (SYSPRINT,(OUTPUT))\n         PUT   SYSPRINT,TITLINE\n         PUT   SYSPRINT,CPYRLINE\n         PUT   SYSPRINT,ULOTITLE\n         PUT   SYSPRINT,BLNKLINE\n         TM    DDNFLAG,X'38'        BDMMREAD or BDMUIDWK or BDMFRMAP?\n         BNO   WMESS                Any missing?  Error messages.\n         TM    DDNFLAG,X'01'        Is BRODCAST DD in JCL?\n         BZ    NOBRODDD             No. Don't OPEN. Flag as Bad OPEN.\n         OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'    Did the OPEN work?\n         BO    TRYOOPN1             Yes. Go OPEN the other files.\nNOBRODDD DS    0H\n         OI    BDMNOFLG,X'01'       Flag that BRODCAST DD is not OPEN\nTRYOOPN1 DS    0H\n         TM    DDNFLAG,X'02'        Is BDMMDUMP DD in JCL?\n         BZ    NOUOUTDD             No. Don't OPEN. Flag as Bad OPEN.\n         TM    DDNFLAG,X'01'        BROADCAST DATASET IN JCL?\n         BZ    WMESS                No. Get out and do nothing.\n         TM    BDMNOFLG,X'01'       BRODCAST Dataset not OPEN?\n         BO    WMESS                If so, don't OPEN others.\n         MVC   BDMMDUMP+X'21'(3),=AL3(COUNDEND) Change EODAD Address\n         OPEN  (BDMMDUMP,(INPUT))\n         TM    BDMMDUMP+48,X'10'    Did the OPEN work?\n         BO    USOUTOPN             Yes. Don't flag that it didn't.\nNOUOUTDD DS    0H\n         OI    BDMNOFLG,X'02'       Flag that BDMMDUMP DD is not OPEN\n         B     WMESS                Go to the next DD name.\nUSOUTOPN DS    0H                   Report on BDMMDUMP Characteristics\n* ----------------------------------------------------------------- *\n*   BDMMDUMP has to be OPEN here, because we branched if not OPEN.  *\n* ----------------------------------------------------------------- *\n         RDJFCB BDMMDUMP\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'BDMMDUMP Properties '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'-------- ---------- '\n         PUT   SYSPRINT,LINE\n         BAL   R9,PRTJFCB\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nTRYOOPN2 DS    0H\n         B     TRYOOPNO             If so, no UID report. But go on.\nTRYOOPNO DS    0H\n         TM    DDNFLAG,X'03'        BRODCAST and BDMMDUMP there?\n         BO    TRYUSOUT             They are OPEN, so go on.\n         B     WMESS                They are not OPEN - Error & Exit.\nTRYUSOUT DS    0H\n*\n*\n* ------------------------------------------------------------------ *\nHREAD    DS    0H\n         BAL   R9,HEADREAD          Read Header Record and extract\n*                                   RBA of first UID record to search.\n*                                   This value is stored in SAVERBA(3).\n*                                   Might as well save everything.\nCNDUMP   DS    0H\n         BAL   R9,COUNDUMP\nDISPBROD DS    0H\n         RDJFCB BRODCAST\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'BRODCAST Properties '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'-------- ---------- '\n         PUT   SYSPRINT,LINE\n         BAL   R9,PRTJFCB\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nCFREE    DS    0H\n         BAL   R9,COUNTFRE\nUIDWORK  DS    0H\n         BAL   R9,GETUIDRS\n         BAL   R9,UIDTABLE\n         BAL   R9,PRELSCAN\n         CLC   SCNTBIN,FREEBIN\n         BH    NOROOM\n         CLC   SCNTBIN,=F'0'\n         BE    NOLOAD\n         BAL   R9,LOADMSGS\n         B     EOJ\n* ------------------------------------------------------------------ *\n* --  Normal End-of-job is just above here.                       -- *\n* ------------------------------------------------------------------ *\nNOROOM   DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(49),=C'Not enough free slots to hold eligible mess-\n               ages. '\n         MVC   LINET+49(21),=C' No messages loaded. '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'  Eligible messages :  '\n         MVC   LINET+23(10),MASK10\n         ED    LINET+23(10),SCNTCNT+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'  Free message slots:  '\n         MVC   LINET+23(10),MASK10\n         ED    LINET+23(10),FREEREC+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     Return Code = 8   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     EOJ8\n* ------------------------------------------------------------------ *\nNOLOAD   DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(30),=C'No eligible messages to load. '\n         MVC   LINET+30(21),=C' No messages loaded. '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'  Eligible messages :  '\n         MVC   LINET+23(10),MASK10\n         ED    LINET+23(10),SCNTCNT+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'  Free message slots:  '\n         MVC   LINET+23(10),MASK10\n         ED    LINET+23(10),FREEREC+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     Return Code = 4   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     EOJ4\n* ------------------------------------------------------------------ *\nBADEND   DS    0H                         COME HERE IF ID KEY NOT X'01'\n         MVC   LINE,LINE-1                 WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         PUT   SYSPRINT,LINE                     SO GOOD.\n* ------------------------------------------------------------------ *\n         SPACE 3\nWMESS    DS    0H                           Crucial DD names missing.\n         TM    DDNFLAG,X'3B'          BDMMREAD, BDMUIDWK, or BDMFRMAP?\n*                                     Also BRODCAST and BDMMDUMP\n         BNO   WMESS1                 Not all there? Report which one.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(32),=C'Don''t know why I exited here....'\n         PUT   SYSPRINT,LINE\n         B     EOJ0\nWMESS1   DS    0H                           Crucial DD names missing.\n         TM    DDNFLAG,X'01'                Is BRODCAST DD there?\n         BO    WMESS2                       Yes. Try BDMMDUMP next.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE1),MESSAGE1   Write OPEN Error message\n         PUT   SYSPRINT,LINE\nWMESS2   DS    0H\n         TM    DDNFLAG,X'02'                Is BDMMDUMP DD there?\n         BO    WMESS3                       Yes. Try work file DD's.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE2),MESSAGE2   Write OPEN Error message\n         PUT   SYSPRINT,LINE\nWMESS3   DS    0H\n         TM    DDNFLAG,X'08'\n         BO    TRYX10\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE3),MESSAGE3   No DD for BDMMREAD\n         PUT   SYSPRINT,LINE\nTRYX10   DS    0H\n         TM    DDNFLAG,X'10'\n         BO    TRYX20\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE4),MESSAGE4   No DD for BDMUIDWK\n         PUT   SYSPRINT,LINE\nTRYX20   DS    0H\n         TM    DDNFLAG,X'20'\n         BO    EXIT12\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINEM(L'MESSAGE5),MESSAGE5   No DD for BDMFRMAP\n         PUT   SYSPRINT,LINE\nEXIT12   DS    0H                           Fall to here, RC=12.\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINEM(47),=C'BDMML05E   ***  Please correct your JCL   *x\n               **  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     EOJ12                        Fall to here, RC=12.\nEXIT16   B     EOJ16                        Fall to here, RC=16.\nEOJ0     DS    0H                  BYE. CC = 0.\nEOJ      DS    0H                  BYE. CC = 0.\n         LA    R5,0                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ4     DS    0H                  Set CC = 4.\n         LA    R5,4                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ8     DS    0H                  Set CC = 8.\n         LA    R5,8                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ12    DS    0H                  Set CC = 12.\n         LA    R5,12               Set return code in R5 to load later.\n         B     EOJOUT\nEOJ16    DS    0H                  Set CC = 16.\n         LA    R5,16               Set return code in R5 to load later.\n         B     EOJOUT\nEOJOUT   DS    0H\n         CLOSE (BRODCAST)\nEOJUSCLS DS    0H                  Close SYSPRINT after everything.\n* - test - >\n*        MVC   LINE,LINE-1\n*        MVC   LINET+12(31),=C'Size of UIDWK Before FREEMAIN. '\n*        HEX   LINET,4,UIDGTSIZ\n*        PUT   SYSPRINT,LINE\n* - test - >\n         CLOSE (SYSPRINT)\n*        L     R1,USIDTBLA         Load address if UIDTABLE.\n*        L     R0,UIDGTSIZ\n*        FREEMAIN RU,LV=(R0),A=(R1),SP=SP000\n         LR    R1,R13              Restore address of GETMAINed area.\n         L     R0,DATALEN\n         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000\n         LR    R15,R5              Restore corrupted RC register\n         L     R13,4(,R13)         Prepare return to the system.\n         L     R14,12(,R13)        Restore R12\n         ST    R15,16(,R13)        Put RC into passed savearea\n         LM    R0,R12,20(R13)      Other registers\n         BR    R14                 Back to system\n         EJECT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - -           S  U  B  R  O  U  T  I  N  E  S               - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        Initialize Data Areas that have been GETMAINed.          *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         MVI   LINE-1,C' '                INITIALIZE BLANKER\n         MVI   LOADAIND,C'0'\n         MVI   LOADMIND,C'0'\n         MVC   LINE,LINE-1\n         MVC   BDMFRRBA,=X'000000'\n         MVC   BDMFRNXT,=X'000000'\n         MVC   STRTAREA(6),BLANKS\n         MVC   SCUSERID(7),BLANKS\n         MVC   SAVEDUI(8),BLANKS\n         MVC   USERID,BLANKS\n         MVI   IDSTRTFL,X'00'             Initialize ID Start Flag\n         MVI   KEYHOLD,X'00'              Initialize Key Holder\n         MVC   RECHOLD(129),KEYHOLD       Fill with X'00'\n         MVI   DHLKEY,X'00'               Same for Message Hold Area\n         MVC   DHLREC(129),DHLKEY\n         MVI   OUTLINE-1,X'40'            INITIALIZE BLANKER\n         MVC   OUTLINE(133),OUTLINE-1     CLEAR LINE AREA\n         MVC   PUTUIDRB(3),=X'000000'\n         MVI   PUTUIDUS,X'00'\n         XC    MSGQUANT,MSGQUANT\n         XC    SCGQUANT,SCGQUANT\n         XC    USERBIN,USERBIN\n         XC    MSGLBIN,MSGLBIN\n         XC    MSGTBIN,MSGTBIN\n         ZAP   LIMITREC,=P'0'\n         XC    LIMITBIN,LIMITBIN\n         ZAP   SCNLCNT,=P'0'\n         XC    SCNLBIN,SCNLBIN\n         ZAP   SCNTCNT,=P'0'\n         XC    SCNTBIN,SCNTBIN\n         ZAP   MSGLCNT,=P'0'              INITIALIZE COUNTER\n         ZAP   MSGTCNT,=P'0'              INITIALIZE COUNTER\n         ZAP   TECOUNT,=P'0'              INITIALIZE COUNTER\n         ZAP   USERCNT,=P'0'              INITIALIZE COUNTER\n         ZAP   UIDDCNT,=P'0'              INITIALIZE COUNTER\n         ZAP   SLOTCNT,=P'0'              INITIALIZE COUNTER\n         MVI   MYUSSLOT,X'00'\n         ZAP   FREEREC,=P'0'              INITIALIZE COUNTER\n         ZAP   USRMSG,=P'0'               INITIALIZE COUNTER\n         MVC   FREEBIN(4),=F'0'\n         MVC   UIDDBIN(4),=F'0'\n         MVC   UIDCBIN(4),=F'0'\n         MVC   UIDTBIN(4),=F'0'\n         MVC   UALLBIN(4),=F'0'\n         MVI   CFFFLAG,X'00'\n         MVI   BDMNOFLG,X'00'             MARK ALL FILES OPENABLE\n         XC    DWORK,DWORK                CLEAR WORK AREA\n         MVI   COUNDFLG,X'00'\n         MVI   BDMMDFLG,X'00'\n         MVI   FRLIMFLG,X'00'\n         MVI   JFCB1,X'87'                INITIALIZE JFCB HEADER\n         ZAP   UIDDMSG,=P'0'\n         ZAP   UIDTMSG,=P'0'\n         ZAP   UALLMSG,=P'0'\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9A\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             Addressability to Record 1 Mapping\n         MVC   SAVERBA(3),R1USPTR  Save RBA 1st Userid Directory Record\n         MVC   SAVUIDR(3),R1USPTR  SAVE RBA of First USER Dir Record\n         MVC   HIGHVAL(4),R1RECNUM Save get out value\n         MVC   SAVHDADR(4),R1RECNUM Save get out value\n         MVC   NOTEDRBA(3),R1BCPTR  Save Notify Directory Address\n         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA\n         MVC   INCORGEN(4),R1GENNUM Save Incore Notices Table Gen Numbr\n         MVC   NUMNOTCS(2),R1BCMAX  Number of Notice message records\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCOUNTFRE DS    0H\n         ST    R9,SAVER9B\n*--------------------------------------------------------------------*\n*        Read through all the BRODCAST Dataset records and count     *\n*        used message slots and free message slots.  Since we are    *\n*        reading through all the records anyway, when we come to     *\n*        the Free Search Record, we pull the initial RBA setting     *\n*        from it.                                                    *\n*--------------------------------------------------------------------*\n*    BLOCKNO has started with an RBA of X'000000' from the initial   *\n*     READ of the BRODCAST Header record, and it gets incremented    *\n*     by one, as we read through the entire BRODCAST Dataset.        *\n*--------------------------------------------------------------------*\n         SPACE\n         TM    DDNFLAG,X'20'\n         BZ    COUFEXIX\n         OPEN  (BDMFRMAP,(OUTPUT))\n         LA    R0,0                Zero out register\n         ICM   R0,7,BLOCKNO        Load with block number information\nCOUFLOOP DS    0H\n         ICM   R1,7,BLOCKNO        Get RBA processed previously.\n         LA    R1,1(,R1)           Increment by one.\n         STCM  R1,7,BLOCKNO        Store it back for the next READ.\n         CLC   BLOCKNO(3),HIGHVAL+1  Did we reach max?\n         BE    COUFEXIT            If we've read them all, exit.\n         CLC   LIMITBIN,FREEBIN    Is number of free records > limit?\n         BNH   COUFLIMT            Yes. Stop output in FRMAP.\n         B     COUFNLIM            No. Keep building FRMAP.\nCOUFLIMT DS    0H\n         OI    FRLIMFLG,X'01'      Flag that we are limiting FRMAP\n         B     COUFEXIT            And stop creating FRMAP\nCOUFNLIM DS    0H\n         SPACE\n         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK RECECB\n         SPACE\n         ST    R2,SAVER2C\n         L     R2,RECECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R2,SAVER2C\n         L     R3,RECECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         CLI   KEYHOLD,X'FF'       Is this an unused message record?\n         BE    COUNTFF             Yes. Count it.\n         CLI   KEYHOLD,X'03'       Is this a used message record?\n         BE    COUNT03             Yes. Count it.\n         CLI   KEYHOLD,X'05'       Info from the Free Search record?\n         BE    GETF05              Yes. Get it while we're here.\n         B     FREEB\nCOUNTFF  DS    0H                  Got a Type X'FF'\n         AP    FREEREC,=P'1'       Count it.\n         L     R1,FREEBIN\n         A     R1,=F'1'\n         ST    R1,FREEBIN\n         MVC   BDMFRKEY,KEYHOLD\n         MVC   BDMFRRBA,BDMFRNXT\n         MVC   BDMFRNXT,BLOCKNO\n         TM    CFFFLAG,X'01'       First time thru?\n         BZ    COUNTFFE            Yes. Don't PUT output.\n         PUT   BDMFRMAP,BDMFRMRC   PUT output record.\nCOUNTFFE DS    0H\n         OI    CFFFLAG,X'01'       Mark not first time.\n         B     FREEB               Get the next record.\nCOUNT03  DS    0H                  Got a Type X'03'\n         AP    USRMSG,=P'1'        Count it.\n         B     FREEB               Get the next record.\nGETF05   DS    0H                  Got the Type X'05'\n         USING FREESRCH,R3\n         MVC   FRSRCVAL(3),FSEARCH  Get Initial Free Search RBA.\n         DROP  R3\n         B     FREEB               Get the next record.\n         SPACE\n*--------------------------------------------------------------------*\nFREEB    DS    0H                  Every READ needs a FREEDBUF.         009\n         FREEDBUF RECECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         B     COUFLOOP            Read another BRODCAST record.\n         SPACE\n*--------------------------------------------------------------------*\nCOUFEXIT DS    0H\n* ---- >>>>>\n         MVC   LINE,LINE-1\n         MVC   LINET(21),=C'BRODCAST Analysis    '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(21),=C'-------- --------    '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(33),=C'Free Message Records in BRODCAST:'\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),FREEREC+3\n         TM    FRLIMFLG,X'01'\n         BZ    COUFPFRE\n         MVC   LINET+47(26),=C'Limited to Necessary Size '\nCOUFPFRE DS    0H\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(33),=C'User Messages Found  in BRODCAST:'\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),USRMSG+3\n         PUT   SYSPRINT,LINE\n         TM    DDNFLAG,X'20'\n         BZ    COUFEXIX\n         MVC   BDMFRKEY,KEYHOLD\n         MVC   BDMFRRBA,BDMFRNXT\n         MVC   BDMFRNXT,=X'000000'\n         PUT   BDMFRMAP,BDMFRMRC\n         CLOSE BDMFRMAP\n         MVC   LINE,LINE-1\n         MVC   LINET(37),=C'Free Message Mapping Table Loaded:-->'\n         PUT   SYSPRINT,LINE\nCOUFEXIX DS    0H\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETSYSIN DS    0H\nSYSINEND DS    0H\n         B     EOJ\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCOUNDUMP DS    0H\n         ST    R9,SAVER9E\n         TM    DDNFLAG,X'08'\n         BZ    COUNTEND\n         OPEN  (BDMMREAD,(OUTPUT))\n         ZAP   UALLMSG,=P'0'\n         ZAP   UIDDMSG,=P'0'\n         ZAP   UIDTMSG,=P'0'\n         MVC   BDMMRBIN,=F'0'\n         MVC   SAVEDUI(8),BLANKS\nCOUNDLUP DS    0H\n         GET   BDMMDUMP,DHL130\n         CLC   =C'./--- ',DHL130\n         BE    COUNDHUI\n         B     COUNDMSG\nCOUNDHUI DS    0H                         Header found\n         TM    COUNDFLG,X'01'\n         BZ    COUNDPAS\n         PUT   BDMMREAD,BDMMROUT\nCOUNDPAS DS    0H\n         OI    COUNDFLG,X'01'\n         AP    UIDDCNT,=P'1'              Count Userids Found\n         L     R0,UIDCBIN\n         A     R0,=F'1'\n         ST    R0,UIDCBIN\n         ZAP   UIDTMSG,UIDDMSG\n         MVC   UIDTBIN(4),UIDDBIN\n         ZAP   UIDDMSG,=P'0'\n         MVC   UIDDBIN(4),=F'0'\n         MVC   SAVEDUID(7),DHL130+6\n         MVC   BDMMRUID(7),DHL130+6\n         MVI   BDMMRUIF,X'40'\n         B     COUNDLUP\nCOUNDMSG DS    0H\n         CLI   DHL130,X'03'\n         BNE   COUNDERR\n         AP    UIDDMSG,=P'1'\n         L     R1,UIDDBIN\n         A     R1,=F'1'\n         ST    R1,UIDDBIN\n         AP    UALLMSG,=P'1'\n         L     R0,UALLBIN\n         A     R0,=F'1'\n         ST    R0,UALLBIN\n         MVC   BDMMRBIN,UIDDBIN\n         B     COUNDLUP\nCOUNDERR DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+2(130),DHL130\n         PUT   SYSPRINT,LINE\n         B     COUNTEND\nCOUNDEND DS    0H\n         PUT   BDMMREAD,BDMMROUT\n         OI    BDMMDFLG,X'01'\nCOUNTEND DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(18),=C'BDMMDUMP Analysis '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(18),=C'-------- -------- '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(33),=C'Number  of Userids   in BDMMDUMP:'\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),UIDDCNT+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(33),=C'Total # of Messages  in BDMMDUMP:'\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),UALLMSG+3\n         PUT   SYSPRINT,LINE\n         ST    R3,SAVER3C\n         XR    R3,R3\n         L     R3,EXTRANUM\n         A     R3,UALLBIN\n         ST    R3,LIMITBIN\n         CVD   R3,DWORK            Convert it to printable\n         ZAP   LIMITREC,DWORK      Store away as packed number\n         L     R3,SAVER3C\n         MVC   LINE,LINE-1\n         MVC   LINET(33),=C'Limit # of Free Recs in BDMFRMAP:'\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),LIMITREC+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         CLOSE BDMMREAD\n         CLOSE (BDMMDUMP,REREAD)\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* ------------------------------------------------------------------ *\n* ---    GET EACH USERID RECORD AND WRITE TO BDMUIDWK FILE       --- *\n* ------------------------------------------------------------------ *\nGETUIDRS DS    0H                  READ THROUGH USERID RECORDS\n         ST    R9,SAVER9D\n         TM    DDNFLAG,X'10'\n         BZ    GETUIDRE\n         MVC   BDMUIDWK+X'21'(3),=AL3(ENDUSER)  Change EODAD Address\n         OPEN  (BDMUIDWK,(OUTPUT))\n         MVC   GETUIDRC,GETUIDRC-1\nGETUIDRL DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         ZAP   SLOTCNT,=P'0'       NEW SLOT COUNT FOR NEW READ\n         MVI   MYUSSLOT,X'00'\n         LA    R2,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   UIDPRBA(3),SAVERBA  SAVE CURRENT RBA FOR UID REPORT\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         ST    R5,SAVER5B\n         LA    R5,0                INITIALIZE USERID SLOT COUNTER\nGETULOOP DS    0H\n         AP    SLOTCNT,=P'1'       COUNT WHICH SLOT THIS IS\n         ST    R1,SAVER1B          \\\n         XR    R1,R1                \\\n         IC    R1,MYUSSLOT           \\\n         LA    R1,1(,R1)           Same in Binary\n         STC   R1,MYUSSLOT           /\n         L     R1,SAVER1B           /\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    GETUTRYN            NOPE. JUST GO TO NEXT ENTRY\n         MVC   GETUIDRU(7),BLANKS\n         MVC   GETUIDRR(6),=X'000000000000'\n         MVC   GETUIDRU(7),USDID\n         MVC   GETUIDRR(3),USDRBA\n         MVC   GETUIDRN(3),USDEND\n         MVC   GETUIDRB(3),LASTRBA\n         MVC   GETUIDUS(1),MYUSSLOT\n         TM    DDNFLAG,X'10'       Is BDMUIDWK there?\n         BZ    GETUNUWK            Yes. Can't PUT anything to it.\n         PUT   BDMUIDWK,GETUIDRC   PUT OUT THIS ID TO OUTPUT FILE\nGETUNUWK DS    0H\n         L     R1,USERBIN\n         A     R1,=F'1'\n         ST    R1,USERBIN\n         AP    USERCNT,=P'1'       INCREMENT USER COUNTER      SG 05/99\n*\nGETUTRYN LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R5,1(,R5)           BUMP COUNTER WITHIN RECORD\n         BCT   R2,GETULOOP         TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     GETUIDRL            END OF RECORD? GET ANOTHER.\nGETUCONS DS    0H\n         DC    X'00'\nGETUIDRC DS    0XL17\nGETUIDRU DC    CL7' '\nGETUIDRR DC    XL3'00'\nGETUIDRN DC    XL3'00'\nGETUIDRB DC    XL3'00'\nGETUIDUS DC    XL1'00'\nGETUIDRE DS    0H\n         L     R5,SAVER5B\n         B     GETUIDRX\n*        *--------------------------------*\n*        *  GET HERE AT END OF USER RCDS  *\n*        *--------------------------------*\n* -- >      Put out the Summary Report line....\n*\nENDUSER  DS    0H\n         MVC   WK1ALL,USRALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+34(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+34(10),USERCNT+3\n         MVC   LINET(L'WK1ALL),WK1ALL\n         PUT   SYSPRINT,LINE                THEN\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         PUT   SYSPRINT,LINE                   LINES AT THE END\n         CLOSE (BDMUIDWK,REREAD)\nENDUEOJ  B     GETUIDRX                     Now get the heck out.\nGETUIDRX DS    0H\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* ------------ >  Do a run through BDMUIDWK File - below\n* ------------------------------------------------------------------- *\nUIDTABLE DS    0H                  Run through the BDMUIDWK file\n*                                   to create a GETMAINed table that\n*                                   can be searched repeatedly.\n* ------------------------------------------------------------------- *\n         ST    R9,SAVER9F\n         TM    DDNFLAG,X'10'       Is BDMUIDWK there?\n         BZ    UIDTABLN            No. Don't OPEN.\n         MVC   BDMUIDWK+X'21'(3),=AL3(ENUIDTBL) Change EODAD Address\n         OPEN  (BDMUIDWK,(INPUT))\n         TM    BDMUIDWK+48,X'10'   Is OPEN OK this time?\n         BNO   UIDTABNO            No. Say so.\nUIDTSTRT DS    0H                  Start setting up for table load.\n         ZAP   TECOUNT,=P'0'       Zero Table Entry count.\n         STM   R4,R5,SAVRG45       Save work registers\n         XR    R4,R4               Zero R4\n         XR    R5,R5               Zero R5\n         L     R5,USERBIN          Insert number of Userids defined\n         M     R4,=F'17'           Multiply by 5 bytes per entry\n         A     R5,=F'68'           Add 68 for UIHDR, UITLR, two extra.\n         LR    R0,R5               Dump this quantity into R0\n         ST    R0,UIDGTSIZ         Store quantity of bytes in table\n* - test - >\n*        MVC   LINE,LINE-1\n*        MVC   LINET+12(31),=C'Size of UIDWK After  GETMAIN.  '\n*        HEX   LINET,4,UIDGTSIZ\n*        PUT   SYSPRINT,LINE\n* - test - >\n         LM    R4,R5,SAVRG45       Restore work registers\n         L     R0,UIDGTSIZ         Load it back into R0 for GETMAIN\n         GETMAIN RU,LV=(0),LOC=BELOW,SP=SP000\n         ST    R1,USIDTBLA         Save address of GETMAINed storage\n         L     R3,USIDTBLA         Get it back for us to use now.\n         MVC   0(17,R3),=CL17'UIDHEADER'   Put in the table header\n         LA    R3,17(,R3)          Bump past header.\n         ST    R3,CUUIDTBL         Save address of start of real data.\n         L     R3,CUUIDTBL         Load it back so we can use it.\n         ST    R2,SAVER2A          Work Register\n         L     R2,USERBIN          Load for BCT loop\nMKUIDTBL DS    0H\n         GET   BDMUIDWK,PUTUIDRC   Read a UIDWK file record\n         MVC   0(17,R3),PUTUIDRC   Move it to the table\n         LA    R3,17(,R3)          Bump to next table entry slot\n         AP    TECOUNT,=P'1'       Count how many entries\n         BCT   R2,MKUIDTBL         Loop for number of userids only\nENUIDTBL DS    0H\n         MVC   0(17,R3),=CL17'UIDTRAILER' End GETMAINed table w/trailer\n         L     R2,SAVER2A\n         CLOSE BDMUIDWK\n         SPACE\n         B     UIDTABLX            Report how many entries were loaded\n         LTORG\nUIDTABLX DS    0H                  Report of table load.\n         MVC   LINE,LINE-1\n         MVC   LINET(37),=C'Userid Table Entries Loaded - Count: '\n         MVC   LINET+34(10),MASK10\n*        HEX   LINET+54,8,TECOUNT\n         ED    LINET+34(10),TECOUNT+3\n         MVC   LINET+30(6),=C'Count:'\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         B     UIDTABLN\nUIDTABNO DS    0H\n         MVC   LINET(27),=C'BDMUIDWK not OPEN for INPUT'\n         PUT   SYSPRINT,LINE\nUIDTABLN DS    0H                  Exit this routine.\n         L     R9,SAVER9F\n         BR    R9\n* ------------ >  Do a run through BDMUIDWK File - above\n* ------------------------------------------------------------------ *\nPRELSCAN DS    0H\n         ST    R9,SAVER9L                 Save BAL Register\n         ST    R7,SAVER7C\n         L     R7,UIDCBIN                 Load BCT Register\nPRELSMSG DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(25),=C'Preliminary Userid Scan  '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(25),=C'----------- ------ ----  '\n         PUT   SYSPRINT,LINE\nPRELSOPN DS    0H\n         MVC   BDMMREAD+X'21'(3),=AL3(PRELSRPT) Change EODAD Address\n         OPEN  (BDMMREAD,(INPUT))\n         XC    SCNTBIN,SCNTBIN\n         ZAP   SCNTCNT,=P'0'\n         XC    SCNLBIN,SCNLBIN\n         ZAP   SCNLCNT,=P'0'\nPRELSSUI DS    0H                        READ a record in MREAD\n         GET   BDMMREAD,SCNMROUT\n         MVC   SCUSERID(7),SCNMRUID      Save its Userid for Scan\n         L     R2,SCNMRBIN               Number of Messages in this ID\n         ST    R2,SCGQUANT               Store that number temporarily\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  We will now decide if this quantity of messages is eligible to be  *\n*  loaded in this run.  The quantity is ineligible if:                *\n*     1. There is no userid in BRODCAST corresponding to this userid. *\n*     2. This userid in BRODCAST already contains messages.           *\n*  To determine that, we run a scan through the UIDTABLE which is in  *\n*  storage, that was created by the UIDTABLE routine.                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRELMSTR DS    0H                         Scan this Userid\n         XC    SCNLBIN,SCNLBIN\n         ZAP   SCNLCNT,=P'0'\n         ST    R6,SAVER6A                 Save Work Register\n         L     R6,USIDTBLA                Point to Userid Record Table\n         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?\n         BNE   SCANME01                   No. Error.\n         B     SCANM1GO\nSCANME01 DS    0H\n         MVI   SCANMIND,C'1'              Diagnostic\n         B     SCANMERR\nSCANM1GO DS    0H\n         LA    R6,17(,R6)                 Point to real data\nSCANUCHK DS    0H                         Check userid against table.\n         CLC   0(17,R6),=CL17'UIDTRAILER'\n         BE    SCANME02\n         B     SCANM2GO\nSCANME02 DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'Userid '\n         MVC   LINET+7(7),SCNMRUID\n         MVC   LINET+15(39),=C' not to be loaded. Not in BRODCAST.    '\n         PUT   SYSPRINT,LINE\n         BCT   R7,PRELSSUI               GET another Userid and repeat\n         B     PRELSRPT\nSCANM2GO DS    0H\n         CLC   SCNMRUID(7),0(R6)          Userid matches?\n         BE    SCANUMAT\nSCANUTRY DS    0H                         Try next userid table entry.\n         LA    R6,17(,R6)                 Bump.\n         B     SCANUCHK                   Loop back for match.\nSCANUMAT DS    0H                         Userid match was found\n         CLC   7(6,R6),=X'000000000000'\n         BNE   SCANUNMP\nSCANULOD DS    0H                         Userid match was found\n         MVC   SCNLBIN,SCNMRBIN\n         ST    R5,SAVER5C          Save work register\n         L     R5,SCNLBIN          Get number for printout\n         CVD   R5,DWORK            Convert it to printable\n         ZAP   SCNLCNT,DWORK       Store away as packed number\n         MVC   LINE,LINE-1\n         MVC   LINET(19),=C'Userid         has '\n         MVC   LINET+7(7),SCNMRUID\n         MVC   LINET+19(10),MASK10\n         ED    LINET+19(10),DWORK+3       Make it pretty\n         MVC   LINET+30(18),=C'eligible messages.'\n         PUT   SYSPRINT,LINE\n         L     R1,SCNTBIN                 Previous total msgs eligible\n         A     R1,SCNMRBIN                Add current to total\n         ST    R1,SCNTBIN                 Store sum away\n         L     R5,SCNTBIN          Get number\n         CVD   R5,DWORK            Convert it to printable\n         ZAP   SCNTCNT,DWORK       Store total away as packed number\n         L     R5,SAVER5C          Restore work register\n         BCT   R7,PRELSSUI               GET another Userid and repeat\n         B     PRELSRPT\nSCANUNMP DS    0H                         Message if can't load.\n         MVC   LINE,LINE-1\n         MVC   LINET(36),=C'Userid         already has messages. '\n         MVC   LINET+7(7),SCNMRUID\n         MVC   LINET+37(30),=C'No messages eligible for load.'\n         PUT   SYSPRINT,LINE\n         BCT   R7,PRELSSUI               GET another Userid and repeat\n         B     PRELSRPT\n* ---- >\nPRELSUID DS    0H                         Protection from branch.\n         B     PRELSRPT\nSCANMERR DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(19),=C'I got to SCANMERR. '\n         MVC   LINET+22(1),SCANMIND\n         PUT   SYSPRINT,LINE\n         B     PRELSCND\nSCANMIND DC    C' '\n         DS    0H\nPRELSRPT DS    0H\n         L     R6,SAVER6A                 Restore UIDTABLE Register\n         L     R7,SAVER7C                 Restore BCT Register\n         MVC   LINE,LINE-1\n         MVC   LINET(37),=C'Number of messages eligible to load: '\n         MVC   LINET+37(10),MASK10\n         ED    LINET+37(10),SCNTCNT+3\n         PUT   SYSPRINT,LINE\nPRELSCND DS    0H\n         CLOSE BDMMREAD\n         FREEPOOL BDMMREAD\n         L     R9,SAVER9L                 Restore BAL Register\n         BR    R9\n* ------------------------------------------------------------------ *\nLOADMSGS DS    0H\n         ST    R9,SAVER9G                 Save BAL Register\n         MVC   BDMMREAD+X'21'(3),=AL3(MREADEND) Change EODAD Address\n         MVC   BDMMDUMP+X'21'(3),=AL3(MREADEND) Change EODAD Address\n         OPEN  (BDMMREAD,(INPUT))\n         OPEN  (BDMMDUMP,(INPUT))\n         OPEN  (BDMFRMAP,(UPDAT))\nLOADINGM DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'Loading Userids Now '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(20),=C'------- ------- --- '\n         PUT   SYSPRINT,LINE\nLOADMSTR DS    0H                         Start next Userid\n         XC    MSGLBIN,MSGLBIN\n         ZAP   MSGLCNT,=P'0'\n         ST    R6,SAVER6A                 Save Work Register\n         L     R6,USIDTBLA                Point to Userid Record Table\n         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?\n         BNE   LOADME01                   No. Error.\n         B     LOADM1GO\nLOADME01 DS    0H\n         MVI   LOADMIND,C'1'              Diagnostic\n         B     LOADMERR\nLOADM1GO DS    0H\n         LA    R6,17(,R6)                 Point to real data\nLOADMINI DS    0H                         Initialize Loops\n         GET   BDMMREAD,WRKMROUT\n         L     R2,WRKMRBIN                Number of Messages for ID\n         ST    R2,MSGQUANT\nLOADMDMP DS    0H                         Synchronize MREAD to MSGDUMP\n         GET   BDMMDUMP,WRK130\n         CLC   =C'./--- ',WRK130          Should be first msg header\n         BNE   LOADME02                   No. Error.\n         B     LOADM2GO\nLOADME02 DS    0H\n         MVI   LOADMIND,C'2'\n         B     LOADMERR\nLOADM2GO DS    0H\n* - <>\n         MVC   LINE,LINE-1\n         MVC   LINET(8),=C'Userid :'\n         MVC   LINET+10(7),WRKMRUID\n*        MVC   LINET+20(7),WRK130+6\n         PUT   SYSPRINT,LINE\n* - <>\n         CLC   WRK130+6(7),WRKMRUID       Do first userids match?\n         BNE   LOADME03                   No. Error.\n         B     LOADM3GO\nLOADME03 DS    0H\n         MVI   LOADMIND,C'3'\n         B     LOADMERR\nLOADM3GO DS    0H\nLOADUCHK DS    0H                         Check userid against table.\n         CLC   0(17,R6),=CL17'UIDTRAILER'\n         BE    LOADME04\n         B     LOADM4GO\nLOADME04 DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(7),=C'Userid '\n         MVC   LINET+7(7),WRKMRUID\n         MVC   LINET+15(39),=C' has no entry in the BRODCAST dataset. '\n         PUT   SYSPRINT,LINE\n* ---- >\nLOADURLP DS    0H                         Resynchronize message dump\n*                                          file to the next Userid.\n         GET   BDMMDUMP,WRK130\n         CLC   =C'./--- ',WRK130          At next id yet?\n         BNE   LOADURLP                   No. Loop till you get there.\n*                                         Resynchronize message summary\n         GET   BDMMREAD,WRKMROUT\n         L     R2,WRKMRBIN                Number of Messages for ID\n         ST    R2,MSGQUANT                Save the quantity for BCT\n         L     R6,USIDTBLA                Point to Userid Record Table\n         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?\n         BNE   LOADME01                   No. Error.\n         LA    R6,17(,R6)                 Point to real data\n         B     LOADM2GO                   Reinit this Userid.\n* ---- >\nLOADM4ER DS    0H\n         MVI   LOADMIND,C'4'\n         B     LOADMERR\nLOADM4GO DS    0H\n* - <>\n*        MVC   LINE,LINE-1\n*        MVC   LINET(7),0(R6)\n*        HEX   LINET+10,10,7(R6)\n*        PUT   SYSPRINT,LINE\n* - <>\n         MVC   PUTUIDRC(17),0(R6)\n         MVC   SAVUIDRC(17),PUTUIDRC\n* - <>\n*        MVC   LINE,LINE-1\n*        MVC   LINET(7),WRKMRUID\n*        MVC   LINET+10(7),0(R6)\n*        PUT   SYSPRINT,LINE\n* - <>\n         CLC   WRKMRUID(7),0(R6)          Userid matches?\n         BE    LOADUMAT\nLOADUTRY DS    0H                         Try next userid table entry.\n         LA    R6,17(,R6)                 Bump.\n         B     LOADUCHK                   Loop back for match.\nLOADUMAT DS    0H                         Userid match was found\n         CLC   7(6,R6),=X'000000000000'\n         BNE   LOADUNMP\n* - <>\n*        MVC   LINE,LINE-1\n*        MVC   LINET(7),SAVUIDRU\n*        HEX   LINET+10,3,SAVUIDRB\n*        HEX   LINET+20,1,SAVUIDUS\n*        PUT   SYSPRINT,LINE\n* - <>\nLOADULOD DS    0H                         Userid match was found\n         NI    IDSTRTFL,X'FF'-X'01'\n         BAL   R9,LOADALLM                Load messages for this id.\n         B     LOADMSTR                   Go initialize for next id.\nLOADUNMP DS    0H                         Message if can't load.\n         MVC   LINE,LINE-1\n         MVC   LINET(36),=C'Userid         already has messages. '\n         MVC   LINET+7(7),WRKMRUID\n         MVC   LINET+37(30),=C'No additional messages loaded.'\n         PUT   SYSPRINT,LINE\n* ---- >\nLOADUNLP DS    0H                         Resynchronize message dump\n*                                          file to the next Userid.\n         GET   BDMMDUMP,WRK130\n         CLC   =C'./--- ',WRK130          At next id yet?\n         BNE   LOADUNLP                   No. Loop till you get there.\n*                                         Resynchronize message summary\n         GET   BDMMREAD,WRKMROUT\n         L     R2,WRKMRBIN                Number of Messages for ID\n         ST    R2,MSGQUANT                Save the quantity for BCT\n         B     LOADM2GO                   Continue with this Userid.\n* ---- >\nLOADUEND DS    0H\n         B     LOADMSGE\nLOADMBDE DS    0H\n         MVI   LOADMIND,C'5'\nLOADMERR DS    0H\n*        CLOSE BDMMLOAD      TEST TEST TEST TEST TEST\n         MVC   LINE,LINE-1\n         MVC   LINET(19),=C'I got to LOADMERR. '\n         MVC   LINET+22(1),LOADMIND\n         PUT   SYSPRINT,LINE\n         B     LOADMSGE\nMREADEND DS    0H\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(64),=C'   -------  -------- ---- ---- ------ ---- x\n               --- -------- ------- '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(64),=C'            Messages have been loaded into x\n               the BRODCAST dataset.'\n         MVC   LINET(10),MASK10\n         ED    LINET(10),MSGTCNT+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(64),=C'   -------  -------- ---- ---- ------ ---- x\n               --- -------- ------- '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     Return Code = 0   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(23),=C'     ---------------   '\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\nLOADMSGE DS    0H\n         CLOSE BDMMREAD\n         CLOSE BDMMDUMP\n         CLOSE BDMFRMAP\n         L     R6,SAVER6A\n         L     R9,SAVER9G\n         BR    R9\n* ------------------------------------------------------------------ *\nLOADALLM DS    0H\n         ST    R9,SAVER9H\n         ST    R7,SAVER7A          Save previous R7 value\n         L     R7,MSGQUANT         Load R7 as BAL Register\nLOADALUP DS    0H\n         GET   BDMMDUMP,WRK130\n* --- >\n*        MVC   LINE,LINE-1\n*        MVC   LINE,WRK130\n*        PUT   SYSPRINT,LINE\n* --- >\n         MVI   LOADAIND,C'1'       Diagnostic\n         CLI   WRKKEY,X'03'\n         BNE   LOADALER\nLOADAFRC DS    0H\n         ST    R4,SAVER4A\nLOADAFRX DS    0H\n         GET   BDMFRMAP            Next free record to write into.\n         MVC   BDMFRMRC(7),0(R1)   TEST TEST TEST TEST TEST\n         MVC   SAVFRMRC(7),BDMFRMRC  Save entire Free Space Record\n         LR    R4,R1\n         USING BDMFRMRC,R4\n         CLI   BDMFRKEY,X'FF'\n         BNE   LOADAFRX\n         MVI   BDMFRKEY,X'88'        Show that this slot has been used\n         PUTX  BDMFRMAP            Show this free record is now used.\n         DROP  R4\n         L     R4,SAVER4A\n* --- >\n*        ST    R1,SAVER1C\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BDMFRRBA\n*        HEX   LINET+10,3,BDMFRNXT\n*        HEX   LINET+20,7,BDMFRMRC\n*        HEX   LINET+40,7,SAVFRMRC\n*        PUT   SYSPRINT,LINE\n*        L     R1,SAVER1C\n* --- >\n         MVC   BLOCKNO(3),SAVFRRBA   Move its block number for READ.\n         TM    IDSTRTFL,X'01'\n         BO    NOTFRST1\n         MVC   SVFSTRBA,SAVFRRBA\nNOTFRST1 DS    0H\n         OI    IDSTRTFL,X'01'\n         READ  LOADECB,            DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK LOADECB\n         SPACE\n         ST    R2,SAVER2B\n         MVI   LOADAIND,C'2'\n         L     R2,LOADECB+20       Address of Key\n         MVC   KEYHOLD(1),0(R2)    Look at the key data\n*        CLI   KEYHOLD,X'FF'       Is it a free record?\n*        BNE   LOADALER            No. Error.\n         MVI   0(R2),X'03'         Move new key in, from BDMMDUMP recd\n         L     R3,LOADECB+12       Address of Data\n         MVC   0(126,R3),WRKREC    Move the new message in.\n         MVC   126(3,R3),SAVFRNXT  Move the RBA of next message in.\n*        MVC   SVLSTRBA(3),SAVFRNXT    Last RBA for Userid Record\n         MVC   SVUPDFRE(3),SAVFRNXT    Save for Free Search Rcd Update\n* - >\n         C     R7,=F'1'                Last WRITE now?\n         BNE   LOADAAEN                No. Usual processing.\n         MVC   126(3,R3),=X'000000'    Yes. Move zeros for next RBA.\n         MVC   SVLSTRBA(3),SAVFRRBA    Current RBA for Userid Record\nLOADAAEN DS    0H                      Go on with WRITE.\n         ST    R3,LOADECB+12           Make sure update will take\n* - >\n         WRITE LOADECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK LOADECB\nLOADAMND FREEDBUF LOADECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R2,SAVER2B\n* --- >\n*        ST    R1,SAVER1C\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BDMFRRBA\n*        HEX   LINET+10,3,BDMFRNXT\n*        HEX   LINET+20,7,BDMFRMRC\n*        HEX   LINET+40,7,SAVFRMRC\n*        PUT   SYSPRINT,LINE\n*        L     R1,SAVER1C\n* --- >\n* - >\n         AP    MSGLCNT,=P'1'\n         AP    MSGTCNT,=P'1'\n         L     R0,MSGLBIN\n         A     R0,=F'1'\n         ST    R0,MSGLBIN\n         L     R0,MSGTBIN\n         A     R0,=F'1'\n         ST    R0,MSGTBIN\n* - >\n         BCT   R7,LOADALUP\n         L     R7,SAVER7A\n* - >\n         MVC   LINE,LINE-1\n         MVC   LINET(39),=C'            Messages Loaded for Userid '\n         MVC   LINET(10),MASK10\n         ED    LINET(10),MSGLCNT+3\n         MVC   LINET+39(7),WRKMRUID\n         PUT   SYSPRINT,LINE\n* - >\n         BAL   R9,UPDUIDRC                Update Userid Record\n         BAL   R9,UPDFRSRC                Update Free Search Record\n         B     LOADALEN\nLOADARWR DS    0H\nLOADALER DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(19),=C'I got to LOADALER. '\n         MVC   LINET+22(1),LOADAIND\n         PUT   SYSPRINT,LINE\n         B     LOADALEN\nLOADALEN DS    0H\n         L     R9,SAVER9H\n         BR    R9\n* ------------------------------------------------------------------ *\nUPDUIDRC DS    0H\n         ST    R9,SAVER9I\nUPDUFIND DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         MVC   BLOCKNO(3),SAVUIDRB    RBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n*        CLI   0(R2),X'01'         USERID RECORD?\n*        BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,SAVUIDUS            SLOT NUMBER\n         BCTR  R3,0                   LESS ONE THE WAY WE CALCULATE IT\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n         USING USDENTRY,R3\n         MVC   USDRBA(3),SVFSTRBA\n         MVC   USDEND(3),SVLSTRBA\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nUPDUIDRE DS    0H\n         L     R9,SAVER9I\n         BR    R9\n* ------------------------------------------------------------------ *\nUPDFRSRC DS    0H\n         ST    R9,SAVER9J\nUPDFRSRD DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         MVC   BLOCKNO(3),FRSRCRBA    RBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'05'         FREE SEARCH RECORD?\n         BNE   UPDFRSER\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING FREESRCH,R3\n         MVC   FSEARCH(3),SVUPDFRE\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     UPDFRSRE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nUPDFRSER DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET(38),=C'Free Search Record Update is in Error.'\n         PUT   SYSPRINT,LINE\nUPDFRSRE DS    0H\n         L     R9,SAVER9J\n         BR    R9\n* ------------------------------------------------------------------ *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTJFCB  DS    0H                         Print JFCB info for BDMUSIN\n         ST    R9,SAVER9K                 Save the BAL register\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGDSN       Move in message skeleton\n         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME\n         PUT   SYSPRINT,OUTLINE\nNOPRTU01 DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGMBR\n         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME\n         PUT   SYSPRINT,OUTLINE\nNOPRTU02 DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGVOLSR           VOLSER\n         MVC   OUTLINE+19(6),JFCBVOLS\n         MVC   OUTLINE+26(6),JFCBVOLS+6\n         MVC   OUTLINE+33(6),JFCBVOLS+12\n         MVC   OUTLINE+40(6),JFCBVOLS+18\n         MVC   OUTLINE+47(6),JFCBVOLS+24\n         PUT   SYSPRINT,OUTLINE\nNOPRTU03 DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGDSORG           DSORG\n         MVC   OUTLINE+19(3),=C'IS '\n         CLI   JFCDSRG1,JFCORGIS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'ISU'\n         CLI   JFCDSRG1,JFCORGIS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PS '\n         CLI   JFCDSRG1,JFCORGPS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PSU'\n         CLI   JFCDSRG1,JFCORGPS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DA '\n         CLI   JFCDSRG1,JFCORGDA\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DAU'\n         CLI   JFCDSRG1,JFCORGDA+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PO '\n         CLI   JFCDSRG1,JFCORGPO\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'POU'\n         CLI   JFCDSRG1,JFCORGPO+JFCORGU\n         BE    PUTDSRG\n         OI    FLAG1,X'01'                FLAG DSORG MISSING\n         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'\nPUTDSRG  PUT   SYSPRINT,OUTLINE\nRECFM    DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGRECFM           RECFM\n         LA    R4,OUTLINE+19\n         TM    JFCRECFM,JFCUND\n         BNO   NOTUND\n         MVI   0(R4),C'U'\n         OI    FLAG2,X'01'                FLAG RECFM=U\n         A     R4,ONE\n         B     CHKB\nNOTUND   TM    JFCRECFM,JFCFIX\n         BNO   NOTFIX\n         MVI   0(R4),C'F'\n         A     R4,ONE\nNOTFIX   TM    JFCRECFM,JFCVAR\n         BNO   CHKB\n         MVI   0(R4),C'V'\n         A     R4,ONE\nCHKB     TM    JFCRECFM,JFCRFB\n         BNO   NOTBLK\n         MVI   0(R4),C'B'\n         A     R4,ONE\nNOTBLK   TM    JFCRECFM,JFCRFS\n         BNO   NOTSCN\n         MVI   0(R4),C'S'\n         A     R4,ONE\nNOTSCN   TM    JFCRECFM,JFCASA\n         BNO   NOTASA\n         MVI   0(R4),C'A'\n         A     R4,ONE\nNOTASA   TM    JFCRECFM,JFCMAC\n         BNO   PUTRCFM\n         MVI   0(R4),C'M'\nPUTRCFM  PUT   SYSPRINT,OUTLINE\nLRECL    DS    0H\n         MVC   OUTLINE,OUTLINE-1          Clear line.\n         MVC   OUTLINE,MSGLRECL           Put LRECL skeleton into it.\n         SR    R4,R4                      Clear work register\n         LH    R4,JFCLRECL                Load LRECL in from JFCB\n         C     R4,=F'0'                   Is it zero?\n         BNE   LRECPRT                    No. Don't check for RECFM=U.\n         TM    FLAG2,X'01'                Is RECFM=U?\n         BO    LRECPRT                    Yes-0 is legitimate.\n         OI    FLAG1,X'04'\n         MVC   OUTLINE+19(7),=C'MISSING'\n         B     LRECPUT\nLRECPRT  DS    0H\n         CVD   R4,DECVALUE\n         MVC   OUTLINE+19(10),MASK10      LRECL\n         ED    OUTLINE+19(10),DECVALUE+3\nLRECPUT  PUT   SYSPRINT,OUTLINE\nBLKSIZE  MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGBLKSZ\n         SR    R4,R4\n         LH    R4,JFCBLKSI\n         C     R4,=F'0'\n         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD\n         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING\n         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'\n         B     BLKSZPUT\nBLKSIZEG CVD   R4,DECVALUE\n         MVC   OUTLINE+19(10),MASK10      BLKSIZE\n         ED    OUTLINE+19(10),DECVALUE+3\nBLKSZPUT PUT   SYSPRINT,OUTLINE\n         L     R9,SAVER9K\n         BR    R9\n* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n* ------------------------------------------------------------------ *\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133              Program Title on Report\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\nULOTITLE DS    0CL133              Userid Diagnostics Report Title\n         DC    C'0'\n         DC    CL11' '\n         DC    CL3'-  '\n         DC    CL79'&PGMNAME Program  -  Message Bulk Loader Program  -X\n                 '\n         DC    CL41' '\n*--------------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133              Copyright information for program\n         DC    C'0'\n         DC    CL3' '\n* -->                              Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL48' '\n         SPACE\n*--------------------------------------------------------------------*\nBLNKLINE DC    CL133' '            Blank Line sample\n*-----------------------------------------------------------------*\nFLAG1    DC    X'00'\n*              X'01'               DSORG IS MISSING\nFLAG2    DC    X'00'\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\nUIDGTSIZ DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nFF       EQU   X'FF'\nF16      DC    F'16'\nBLANKS   DC    C'        '         8 BLANKS\nF00      DC    F'0'\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGE1 DC    C'BDMML01E   ---  BRODCAST DD Name Missing  ---  '\nMESSAGE2 DC    C'BDMML01E   ---  BDMMDUMP DD Name Missing  ---  '\nMESSAGE3 DC    C'BDMML01E   ---  BDMMREAD DD Name Missing  ---  '\nMESSAGE4 DC    C'BDMML01E   ---  BDMUIDWK DD Name Missing  ---  '\nMESSAGE5 DC    C'BDMML01E   ---  BDMFRMAP DD Name Missing  ---  '\nUSRALL DC C'Total # of Userids   in BRODCAST:                         '\nMESPREND DC    C'?????  Preliminary end of USERID Records - - *'\nMSGDSN   DC    CL133'         DSNAME  ='\nMSGVOLSR DC    CL133'         VOLSER  ='\nMSGMBR   DC    CL133'         MEMBER  ='\nMSGDSORG DC    CL133'         DSORG   ='\nMSGBLKSZ DC    CL133'         BLKSIZE ='\nMSGLRECL DC    CL133'         LRECL   ='\nMSGRECFM DC    CL133'         RECFM   ='\n         DC    CL133' '\nMASK6    DC    XL6'402020202120'\nMASK7A   DC    XL7'40202020212020'\nMASK10   DC    XL10'40202020202020202120'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\nSYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\nBDMMDUMP DCB   DSORG=PS,DDNAME=BDMMDUMP,MACRF=GM,                      X\n               LRECL=130,RECFM=FB,EXLST=JFCB1\nBDMMREAD DCB   DSORG=PS,DDNAME=BDMMREAD,MACRF=(GM,PM),                 X\n               LRECL=12,RECFM=FB,EODAD=MREADEND\nBDMUIDWK DCB   DSORG=PS,DDNAME=BDMUIDWK,MACRF=(GM,PM),                 X\n               LRECL=17,RECFM=FB\nBDMFRMAP DCB   DSORG=PS,DDNAME=BDMFRMAP,MACRF=(GL,PM),                 X\n               LRECL=7,RECFM=FB\nSYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X\n               EODAD=SYSINEND\n         LTORG\n         SPACE\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORK    DC    D'0'\nUSERBIN  DC    F'0'\nUSERCNT  DC    PL8'0'              COUNT OF ALL MESSAGES DISPLAYED\nSLOTCNT  DC    PL8'0'              COUNT OF SLOT NUMBER IN UID RECORD\nFREEREC  DC    PL8'0'              CT FOR INACTIVE MAIL MSG RECS\nFREEBIN  DC    F'0'\nLIMITREC DC    PL8'0'              LIMIT SIZE OF FREE RECORD MAP FILE\nLIMITBIN DC    F'0'\nUSRMSG   DC    PL8'0'              CT FOR USER MAIL MSG RECS\nUIDDMSG  DC    PL8'0'\nUIDDBIN  DC    F'0'\nUIDTMSG  DC    PL8'0'\nUIDTBIN  DC    F'0'\nUALLMSG  DC    PL8'0'\nUALLBIN  DC    F'0'\nUIDDCNT  DC    PL8'0'\nUIDCBIN  DC    F'0'\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nUIDPRB   DS    0F\nUIDPRBAX DC    X'00'\nUIDPRBA  DC    X'000000'           STORE CURRENT RBA FOR DIAG PRINT\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nSAVUIDR  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDE  DS    C\n         DS    0F                  ALIGN ON FULLWORD\nSAVER1A  DS    F                   WORK REGISTER\nSAVER1B  DS    F                   WORK REGISTER\nSAVER1C  DS    F                   WORK REGISTER\nSAVER2A  DS    F                   WORK REGISTER\nSAVER2B  DS    F                   WORK REGISTER\nSAVER2C  DS    F                   WORK REGISTER\nSAVER3A  DS    F                   WORK REGS FOR TIOT SCAN\nSAVER3B  DS    F                   WORK REGS FOR TIOT SCAN\nSAVER3C  DS    F                   WORK REGS FOR LIMIT FRNUM\nSAVER4A  DS    F                   WORK REG\nSAVER5A  DS    F                   WORK REGISTER\nSAVER5B  DS    F                   WORK REGISTER\nSAVER5C  DS    F                   WORK REGISTER\nSAVER6A  DS    F                   BAL REGISTER SAVE AREA\nSAVER6B  DS    F                   BAL REGISTER SAVE AREA\nSAVER7A  DS    F                   WORK REGISTER\nSAVER7B  DS    F                   WORK REGISTER\nSAVER7C  DS    F                   WORK REGISTER\nSAVEPRM  DS    F                   TEMP SAVE FOR PARM POINTER\nSAVER9A  DS    F                   BAL REGISTER SAVE AREA\nSAVER9B  DS    F                   BAL REGISTER SAVE AREA\nSAVER9C  DS    F                   BAL REGISTER SAVE AREA\nSAVER9D  DS    F                   BAL REGISTER SAVE AREA\nSAVER9E  DS    F                   BAL REGISTER SAVE AREA\nSAVER9F  DS    F                   BAL REGISTER SAVE AREA\nSAVER9G  DS    F                   BAL REGISTER SAVE AREA\nSAVER9H  DS    F                   BAL REGISTER SAVE AREA\nSAVER9I  DS    F                   BAL REGISTER SAVE AREA\nSAVER9J  DS    F                   BAL REGISTER SAVE AREA\nSAVER9K  DS    F                   BAL REGISTER SAVE AREA\nSAVER9L  DS    F                   BAL REGISTER SAVE AREA\nSAVER9M  DS    F                   BAL REGISTER SAVE AREA\nSAVRG45  DS    2F\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\n* ------------------------------- *\n* --  Save Header Information  -- *\n* ------------------------------- *\nCURNOTBL DS    F       Address of beginning of data in Note dir table\nHIGHVAL  DS    F\nSAVHDADR DS    F                   SAVE HEADER ADDRESS\nINCORGEN DS    F\nCUUIDTBL DS    F\nNUMNOTCS DS    H\nNOTEDRBA DS    XL3\nFRSRCRBA DS    XL3\nFRSRCVAL DS    XL3\n* ------------------------- *\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\nLINEM    EQU   LINE+1\nOUTLINEB DS    C                   OUTLINE-1\nOUTLINE  DS    CL133\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nWK1ALL DC C'                                                          '\nBDMNOFLG DS    X\n*        EQU   X'01'               BRODCAST DD MISSING\n*        EQU   X'02'               BDMUSIN  DD MISSING\n*        EQU   X'04'               UIDDIAG  DD MISSING\n         SPACE 1\n* ------------------------- *\nFRLIMFLG DS    X\n* ------------------------- *\nDDNFLAG  DS    X\nIDSTRTFL DS    X\n         DS    C\n* ------------------------- *\nUSIDTBLA DS    F                   Address of GETMAINED Userid Table\n* ------------------------- *\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DS    XL1                 Key slot\nRECHOLD  DS    XL129               Data slot\n* ------------------------- *\nDHL130   DS    0CL130\nDHLKEY   DS    XL1\nDHLREC   DS    XL129\n* ------------------------- *\nSAVEDUI  DS    0CL8\nSAVEDUID DS    CL7\nSAVEDUIB DS    CL1\nSTRTAREA DS    CL6\n* ------------------------- *\nBDMMROUT DS    0CL12\nBDMMRUID DS    CL7\nBDMMRUIF DS    CL1\nBDMMRBIN DS    XL4\n* ------------------------- *\nBDMFRMRC DS    0CL7\nBDMFRKEY DS    X\nBDMFRRBA DS    XL3\nBDMFRNXT DS    XL3\n* ------------------------- *\n         DS    2F             PADDING\n* ------------------------- *\nSAVFRMRC DS    0CL7\nSAVFRKEY DS    X\nSAVFRRBA DS    XL3\nSAVFRNXT DS    XL3\n* ------------------------- *\n         DS    0F\nWRKMROUT DS    0CL12\nWRKMRUID DS    CL7\nWRKMRUIF DS    CL1\nWRKMRBIN DS    XL4\n* ------------------------- *\n         DS    2F             PADDING\n* ------------------------- *\n         DS    0F\nSCNMROUT DS    0CL12\nSCNMRUID DS    CL7\nSCNMRUIF DS    CL1\nSCNMRBIN DS    XL4\n* ------------------------- *\n         DS    2F             PADDING\n* ------------------------- *\nWRK130   DS    0CL130\nWRKKEY   DS    XL1\nWRKREC   DS    XL129\n* ------------------------- *\nCOUNDFLG DS    X\nBDMMDFLG DS    X\nCFFFLAG  DS    X\nLOADMIND DS    X\nLOADAIND DS    X\nMSGQUANT DS    F\nSCGQUANT DS    F\nTECOUNT  DS    PL8\nSCUSERID DS    CL7\n* ------------------------- *\nPUTUIDRC DS    0XL17\nPUTUIDRU DC    CL7' '\nPUTUIDRR DC    XL3'00'\nPUTUIDRN DC    XL3'00'\nPUTUIDRB DC    XL3'00'\nPUTUIDUS DC    XL1'00'\n* ------------------------- *\nSAVUIDRC DS    0XL17\nSAVUIDRU DC    CL7' '\nSAVUIDRR DC    XL3'00'\nSAVUIDRN DC    XL3'00'\nSAVUIDRB DC    XL3'00'\nSAVUIDUS DC    XL1'00'\n* ------------------------- *\nSVFSTRBA DC    XL3'00'\nSVLSTRBA DC    XL3'00'\nSVUPDFRE DC    XL3'00'\n* ------------------------- *\nMSGLCNT  DC    PL8'0'\nMSGLBIN  DC    F'0'\nMSGTCNT  DC    PL8'0'\nMSGTBIN  DC    F'0'\n* ------------------------- *\nSCNLCNT  DC    PL8'0'\nSCNLBIN  DC    F'0'\nSCNTCNT  DC    PL8'0'\nSCNTBIN  DC    F'0'\n* ------------------------- *\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IEZBITS\n         IKJZT301 DSECT=YES\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJZT306 DSECT=YES\n         CVT  DSECT=YES,LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BDMNLIST": {"ttr": 9217, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x06\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x02\\xe9\\x00\\x01\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:06", "lines": 745, "newlines": 1, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMNLIST TITLE 'BDMNLIST - LIST BROADCAST NOTICES TO ALL USERS.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM MAY BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMNLIST                                          *\n*                                                                     *\n*       FUNCTION:   TO LIST BROADCAST NOTICES FOR ALL USERS, ON       *\n*                   SYS1.BRODCAST, OR ON A COPY OF IT.                *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  APRIL 26, 05                                      *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*       NOTE:       BDMNLIST READS THE BRODCAST DATASET DIRECTLY,     *\n*                   AND REPORTS THE NOTICES ONLY FROM IT.  AT         *\n*                   PRESENT, IT DOES NOT READ THE INCORE COPY         *\n*                   OF THE NOTICES POINTED TO BY CVTTVT (THE TSO      *\n*                   VECTOR TABLE) AND THE NCT WHICH IS DESCRIBED      *\n*                   IN MACRO IKJTSVT.  (THE INCORE NOTICES TABLE)     *\n*                                                                     *\n*       COMMENTS:   THIS PROGRAM PRODUCES A LISTING OF NOTICES THAT   *\n*                   IS VERY SIMILAR TO THE LISTING PRODUCED BY THE    *\n*                   \"SEND LIST\" SUBCOMMAND OF THE \"OPER\" TSO COMMAND, *\n*                   EXCEPT THAT IF THERE ARE NO NOTICES, THERE IS     *\n*                   A \"BDM576I\" MESSAGE ID, INSTEAD OF \"IKJ576I\".     *\n*                                                                     *\n*       CHANGES:    07/25/01  -  CLEANED OUT A LOT OF THE BDMLIST     *\n*                   (VER 1.1)    CODE, AND ISSUED A MESSAGE IF A      *\n*                                \"NOTICES INDEX RECORD\" IS CORRUPTED. *\n*                                                                     *\n*                   04/10/05  -  REPRESENT MESSAGE NUMBERS IN DECIMAL *\n*                                INSTEAD OF IN HEX - LIKE LISTBC.     *\n*                                                                     *\n*                   04/26/05  -  FIX SITUATION IN WHICH INDEX RECORD  *\n*                   (VER 1.4)    MARKS A MESSAGE AS USED, BUT THE     *\n*                                MESSAGE LENGTH IS ZERO.              *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND  , */\n         MACRO\n         IKJZT303   &DSECT=YES\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND  , */\n         SPACE\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMNLIST'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         USING &PGMNAME,R12,R10\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         LA    R10,4095(,R12)      LOAD SECOND BASE\n         LA    R10,1(,R10)\n         LR    R11,R1              PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         SPACE 1\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R11,R11             ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R11)          PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n*        CH    R3,=H'4'            ANYTHING?\n*        BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n*        BC    8,WMESS2            ZERO, THIS PROGRAM IS RUN W/O PARAMS\n*        BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n* -- >  Title message - below\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R4,MSG\n* -- >  Title message - above\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST NOTICES RECORD, AND\n*                                  ALSO THE MAXIMUM NUMBER OF NOTICES\n*                                  IN THIS BROADCAST DATASET.\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH NOTICE RECORD.                   --- *\n* ---     FIRST, WE HAVE TO GO THRU THE INDEX RECORDS            --- *\n* ------------------------------------------------------------------ *\nINDEXBC  DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         MVC   SAVERBA(3),FSTNOTI    GET THE BALL ROLLING\nINDXLOOP DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES\n         BE    ENDINDEX            END OF NOTICE INDEX RECORDS. FINISH.\n*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    NOTICES AREN'T MISSED.\n         LA    R7,25               COUNT OF INDEXES PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+20       ADDRESS OF RECORD\n         CLI   0(R3),X'00'         NOTICE INDEX RECORD?\n         BNE   BADEND              NO. ERROR.\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING BCDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),BCDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE INDEX SLOT COUNTER\n         DROP  R3\n*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY\nBCILOOP  DS    0H\n         USING BCDENTRY,R3\n* --->\n*        MVC   LINE,LINE-1\n*        HEX   LINE,5,BCDENTRY\n*        LA    R0,20\n*        BAL   R4,MSG\n         MVC   LINE,LINE-1\n* --->\n         TM    0(R3),X'80'                   VALID NOTICE ?\n         BO    TRYNEXT                       NO. BUMP TO NEXT ONE.\n         CLC   BCDENTRY(5),=X'0000000000'    BLANK ENTRY?\n         BE    TRYNEXT                       IF SO, JUST BUMP.\n         MVC   SHOWNUMB(2),BCDMSGNO          SAVE NOTICE NUMBER\n         MVC   SHOWRBA(3),BCDMRBA            SAVE NOTICE RBA\n         ST    R9,SAVERG9\n         BAL   R9,SHOWNOTE                   WRITE NOTICE OUT\n         AP    BMSGCNT,=P'1'\n         L     R9,SAVERG9\nTRYNEXT  LA    R3,5(,R3)           BUMP LOCATION TO NEXT INDEX SLOT\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         BCT   R7,BCILOOP          TRY FOR ANOTHER NOTICE SLOT\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     INDXLOOP            END OF RECORD? GET ANOTHER.\n         SPACE 3\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR NOTICES                            --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R4,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDINDEX DS    0H                            END OF NOTICES, COME HERE.\n         CP    BMSGCNT,=P'0'\n         BE    ENDNONE\n         B     ZEROUT\nENDNONE  DS    0H                            NO NOTICES. ISSUE MESSAGE.\n         MVC   LINE,LINE-1\n         LA    R0,L'MESDONE\n         MVC   LINE(L'MESDONE),MESDONE       BDM576I MESSAGE\n         BAL   R4,MSG\n         B     EOJ0                          CODE = 0\nZEROUT   DS    0H\n         B     EOJ0                          CODE = 0\n         SPACE 3\nWMESS2   MVC   LINE,LINE-1                  NEVER EXECUTED IN\n         MVC   LINE,MESSAGE2                  THIS PROGRAM\n         LA    R0,L'MESSAGE2                    (NO KEYWORDS)\n         BAL   R4,MSG\n         B     EOJ4\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINE,MESSAGE1                  SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1                    TO DDNAME BRODCAST.\n         BAL   R4,MSG\n         B     EOJ4\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H                      Normal Close and Exit.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         LA    R0,DATALEN\n         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                 Go back to system.\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n*\nHEADREAD READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   FSTNOTI(3),R1BCPTR  SAVE RBA OF FIRST NOTICES INDEX\n         MVC   NUMNOTES(2),R1BCMAX  SAVE MAXIMUM NUMBER OF NOTES\n         DROP  R3\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSHOWNOTE DS    0H\n         MVC   MESSRBA(3),SHOWRBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'02'         IS THIS A GOOD NOTICE ?\n         BNE   SHOWNOTN            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING BCMSG,R2\n         XR    R0,R0\n         IC    R0,BCMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0               LOAD IT INTO R6\n         BCTR  R6,0                SUBTRACT ONE FOR EXECUTE\n*>BELOW<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         C     R6,=X'FFFFFFFF'     IS R6 EQUAL TO MINUS ONE?\n         BNE   SHOWNMIN            NO. THERE WON'T BE A PROBLEM.\n         LA    R6,0                YES. SET IT EQUAL TO ZERO.\n         MVC   LINE,LINE-1         DUPLICATE LINE BELOW.\n         B     SHOWNMWR            SKIP MESSAGE MOVE BUT REPORT NUMBER.\nSHOWNMIN DS    0H\n*>ABOVE<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         MVC   LINE,LINE-1         CLEAR MESSAGE LINE.\n         EX    R6,MOVEMSG          MOVE MESSAGE TEXT TO BRODCAST BUFFER\nSHOWNMWR DS    0H\n         A     R0,=F'10'           TSO MESSAGE LENGTH OF 10\n*        HEX   LINE+5,2,SHOWNUMB\n         LH    R1,SHOWNUMB         LOAD REGISTER WITH HEX NUMBER\n         CVD   R1,DWORD            CONVERT BLOCK COUNT TO DECIMAL\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   LINE+5(4),BLANKMSG       INITIALIZE AREA TO BLANKS\n         MVC   LINE(5),=C'MSGNO'        APPEND TITLE TO NUMBER\n         MVC   LINE+5(4),WORK10+6       Take last 4 digits.\n         CLI   LINE+6,C' '\n         BNE   ZEROA\n         MVI   LINE+6,C'0'\nZEROA    DS    0H\n         CLI   LINE+7,C' '\n         BNE   ZEROB\n         MVI   LINE+7,C'0'\nZEROB    DS    0H\n* ->\n         BAL   R4,MSG                   AND SHOW THE MESSAGE ON SCREEN\nSHOWNOTN DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         BR    R9\nMOVEMSG  MVC   LINE+10(*-*),BCMTEXT   EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         BR    R4\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n*\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1         BLANK THE MESSAGE LINE\n         MVC   WORK10(10),BLANKMSG\n         ZAP   BMSGCNT,=P'0'\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVI   ALLFLAG,X'00'\n         MVC   WKLBLNK(2),BLANKS\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R11\nCPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         BR    R9\n         DROP  R11\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R11\nSETIOPL  LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R11\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nBLANKMSG DC    CL125' '\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\nEDPAT    DC    X'40202020202020202120'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    CL10'     '         10 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'\nMESSEND  DC    C'* - - - - NO BRODCAST NOTICES - - - - *'\nMESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF NOTICES  - - - - - *'\nMESDONE  DC    C'BDM576I   NO BROADCAST MESSAGE '\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORD    DC    D'0'\nSAVER0R1 DS    D\nSAVE4    DS    F\nSAVERG4  DS    F\nSAVERG5  DS    F\nSAVERG7  DS    F\nSAVERG9  DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nWKLBLNK  DS    CL2\n         DS    CL72                PADDING\nBMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH NOTICE\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nNUMNOTES DC    X'0000'             MAX NUMBER OF NOTICE RECORDS\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nSHOWRBA  DC    X'000000'           STORE RBA OF NOTICE\nSHOWNUMB DC    X'0000'             STORE NUMBER OF NOTICE\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nFSTNOTI  DC    X'000000'           STORE RBA OF FIRST NOTICE INDEX\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER7   DS    F                   SAVE COUNT FOR USERID SCAN\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L     NOTICE READ\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nRDWI     READ  MDIDECB,DI,MF=L     INDEX READ\nRDWIEND  DS    0F\nRDWILEN  EQU   *-RDWI\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nALLFLAG  DS    X\nWORK10   DC    XL10'00'\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IEZBITS\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMNOTFY": {"ttr": 9476, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00&\\x00\\x95\\x15\\x0f\\x01\\x16&\\x9f\\x156\\x05U\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-30T00:00:00", "modifydate": "2016-09-25T15:36:26", "lines": 1365, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMNOTFY TITLE 'BDMNOTFY - SEND OR DELETE A BRODCAST NOTIFICATION MSG'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMNOTFY nnn 'text of message    '                *\n*             OR:   BDMNOTFY nnn \"text of message    \"                *\n*             OR:   BDMNOTFY nnn {text of message    }                *\n*             OR:   BDMNOTFY nnn =text of message    =                *\n*             OR:   BDMNOTFY nnn :text of message    :                *\n*             OR:   BDMNOTFY nnn #text of message    #                *\n*             OR:   BDMNOTFY nnn text of message                      *\n*             OR:   BDMNOTFY nnn -DEL(ETE)   (delete MSGNO nnn)       *\n*             OR:   BDMNOTFY nnn -BLA(NKS)   (30 blanks in MSGNO nnn) *\n*             OR:   BDMNOTFY CLEARALL (marks all Notices as deleted)  *\n*                     (use BDMCLEAN N afterwards to really clean up)  *\n*                                                                     *\n*       FUNCTION:   TO SEND A GLOBAL NOTIFICATION MESSAGE TO ALL      *\n*                   TSO USERS, THROUGH THE NOTIFICATION SECTION OF    *\n*                   SYS1.BRODCAST.  THIS REPLACES THE OPER SEND,SAVE  *\n*                   SUBCOMMAND, AND THE OPER SEND,DELETE SUBCOMMAND.  *\n*                                                                     *\n*       NOTE:       BDMNOTFY UPDATES THE BRODCAST DATASET DIRECTLY,   *\n*                   AND REPORTS THE NOTICES ONLY FROM IT.  AT         *\n*                   PRESENT, IT DOES NOT UPDATE THE INCORE COPY       *\n*                   OF THE NOTICES POINTED TO BY CVTTVT (THE TSO      *\n*                   VECTOR TABLE) AND THE NCT WHICH IS DESCRIBED      *\n*                   IN MACRO IKJTSVT.  (THE INCORE NOTICES TABLE)     *\n*                   FOR TSO/E VERSION 3 AND ABOVE, RUN THE AUTHORIZED *\n*                   COMMAND BDMNUPD AND THEN DO LISTBC.  THIS WILL    *\n*                   UPDATE THE INCORE NOTICES TABLE.                  *\n*                                                                     *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  APR 26, 05                                        *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         CHANGES:  04/26/05  -  ZERO THE BRODCAST TEXT RECORD        *\n*                   (VER 1.4)    BEFORE WRITING THE MESSAGE.          *\n*                                THIS HAS THE EFFECT OF CLEANING      *\n*                                OUT THE UNUSED PART OF THE           *\n*                                MESSAGE AND MAKING A BROWSE (OR      *\n*                                \"REVIEW\") OF THE SYS1.BRODCAST       *\n*                                DATASET EASIER TO READ.              *\n*                                                                     *\n*                   05/08/05  -  FIX A PROBLEM WHEN DELETING A        *\n*                   (VER 1.5)    NOTIFY MESSAGE WITH THE -DEL         *\n*                                KEYWORD.  FIX THE DISPLAY OF         *\n*                                CHANGED RECORDS TO MAKE IT MORE      *\n*                                READABLE.                            *\n*                                                                     *\n*                   12/04/06  -  Add CLEARALL option as one           *\n*                                parameter after BDMNOTFY, to mark    *\n*                                all NOTICES messages as deleted.     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT303   &DSECT=YES\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n***********************************************************************\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n         YREGS\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLA  &BLNKDFL                                                  01485\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&BLNKDFL SETA  30                                                        01490\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMNOTFY'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         USING &PGMNAME,R12,R11,R10\n         B     BEGINN-*(,R15)\nSTRTCHAR DC    X'C0'           OPEN CURLY BRACKET\nENDCHAR  DC    X'D0'           CLOSE CURLY BRACKET\nSTRTCHA1 DC    X'7A'           COLON\nENDCHA1  DC    X'7A'           COLON\nSTRTCHA2 DC    X'7B'           POUND SIGN\nENDCHA2  DC    X'7B'           POUND SIGN\nSTRTCHA3 DC    X'7D'           SINGLE QUOTE\nENDCHA3  DC    X'7D'           SINGLE QUOTE\nSTRTCHA4 DC    X'7F'           DOUBLE QUOTE\nENDCHA4  DC    X'7F'           DOUBLE QUOTE\nSTRTCHA5 DC    X'7E'           EQUAL SIGN\nENDCHA5  DC    X'7E'           EQUAL SIGN\nDEFBLNK  DC    F'&BLNKDFL'\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15             Load First Base Register\n         LA    R11,4095(,R12)      Load Second Base\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      Load Third Base\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         STH   R3,CMBLENG          SAVE COMMAND BUFFER LENGTH\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         STH   R3,OFFSETT          SAVE OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS3            ZERO, SEND MESSAGE.............\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n*                                  CLEARALL code is in here too.\n         B     DOGETMST            Skip title to get nice picture,\n*                                   for multiple executions.\n* -- >  Title message - below\n         ST    R7,SAVER7A\n         MVC   LINE,LINE-1                  Write Title Message\n         MVC   LINE(MSGTLEN),MESSAGET         for the package.\n         LA    R0,MSGTLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R7,SAVER7A\n* -- >  Title message - above\nDOGETMST DS    0H\nDOBROD   DS    0H\n         STM   R15,R1,SAVE1501     Save OPEN work registers\n         OPEN  (BRODCAST,(UPDAT))\n         LM    R15,R1,SAVE1501     Restore OPEN work registers\n         TM    BRODCAST+48,X'10'   Is BRODCAST DD OPEN?\n         BNO   WMESS1              No. Send message to allocate it.\n         BAL   R9,GETNUMB          Get the number of the message which\n*                                   you want to modify.\n         BAL   R9,GETMSGT          Get the message from second param.\n         BAL   R9,HEADREAD         Read header record and extract\n*                                  RBA of first notice record, and also\n*                                  the maximum number of notes in this\n*                                  particular SYS1.BRODCAST.\n* --- Make maximum number of notices displayable. - below\n*\n         ST    R5,SAVER5           Save work register\n         XR    R5,R5               Clear work register\n         LH    R5,NUMNOTES         Load maximum message number.\n         CVD   R5,DWORD            Convert message number to decimal.\n         L     R5,SAVER5           Restore work register\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   DISPMXNM,DISPMXNM-1      Initialize to blanks.\n         MVC   DISPMXNM(4),WORK10+6     Take last 4 digits.\n         MVC   MESS5NUM(4),DISPMXNM     And move to message.\n* ->\n*\n* --- Make maximum number of notices displayable. - above\n         CLC   NUMNOTES,MSGNHALF   Is requested number more than max?\n         BNL   MNUMBOK             No. Go on with processing.\n         B     WMESS5              Yes, put out message and end code 8.\nMNUMBOK  DS    0H\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n* ------------------------------------------------------------------ *\n* ---    MAIN ROUTINE TO UPDATE THE DESIRED NOTICES RECORD.      --- *\n* ------------------------------------------------------------------ *\n         BAL   R9,FINDNOTE         SEE IF YOU CAN FIND THE\n*                          NOTICES RECORD THAT CORRESPONDS TO THE\n*                          MSGNHALF.  IF FOUND, GO TO IT AND EITHER\n*                          UPDATE IT OR DELETE IT.\n* ------------------------------------------------------------------ *\n         MVC   RNAM(3),ZEROS       DEQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         B     EOJ\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN ROUTINE TO SEND MESSAGE                     --- *\n* ------------------------------------------------------------------ *\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 MESSAGE NUMBER IS MISSING\n         LA    R0,L'MESSAGE3+7\n         BAL   R9,MSG\n         B     EOJ4\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 MESSAGE TEXT IS MISSING\n         LA    R0,L'MESSAGE2+7\n         BAL   R9,MSG\n         B     EOJ4\nWMESS4   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE4                 MESSAGE NUMB NOT NUMERIC\n         LA    R0,L'MESSAGE4+7\n         BAL   R9,MSG\n         B     EOJ8\nWMESS5   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE5                 MESSAGE NUMB TOO HIGH\n         MVC   MESS5NUM(4),DISPMXNM\n         LA    R0,MESS5LEN+7\n         BAL   R9,MSG\n         B     EOJ8\nWMESS6   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE6                 NOTICES INDEX RECORD\n         LA    R0,L'MESSAGE6+7                  HAS WRONG KIND OF KEY\n         BAL   R9,MSG\n         B     EOJ8\nWMESS7   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE7                 WE HAVE REACHED END OF\n         LA    R0,L'MESSAGE7+7                  NOTICES INDEXES W/O HIT\n         BAL   R9,MSG\n         B     EOJ8\nWMESS8   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE8                 NOTICES MESSAGE RECORD\n         LA    R0,L'MESSAGE8+7                  HAS WRONG KIND OF KEY\n         BAL   R9,MSG\n         B     EOJ8\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         SPACE\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* ------------------------------------------------------------------ *\n* ---    FIND A PARTICULAR NOTICE RECORD AND SAVE ITS RBA.       --- *\n* ------------------------------------------------------------------ *\nFINDNOTE DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         ST    R9,SAVER9D\n         MVC   SAVERBA(3),FSTNOTI  GET THE BALL ROLLING\nINDXLOOP DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES\n         BE    WMESS7              END OF NOTICE INDEX RECORDS. FINISH.\n* ------------------------------------------------------------------ *\n*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    NOTICES AREN'T MISSED.\n* ------------------------------------------------------------------ *\n         LA    R7,25               COUNT OF INDEXES PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+20           ADDRESS OF KEY\n         CLI   0(R3),X'00'             NOTICES INDEX RECORD?\n         BNE   WMESS6                  NO. ERROR.\n         L     R3,MDIDECB+12           ADDRESS OF RECORD\n         USING BCDIR,R3\n         MVC   LASTRBA(3),SAVERBA      SAVE CURRENT RBA\n         MVC   SAVERBA(3),BCDNEXT      GET NEXT RECORD'S RBA\n         LA    R8,0                    INITIALIZE INDEX SLOT COUNTER\n         DROP  R3\n*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY\nBCILOOP  DS    0H\n         USING BCDENTRY,R3\n         MVC   MSGNCLR(2),BCDMSGNO     Save message number in index.\n         NC    MSGNCLR(2),=X'7FFF'     Clear leading X'80' for compare.\n         CLC   MSGNCLR,MSGNHALF        Correct message number?\n         BNE   TRYNEXT                 No. Bump to next one.\n         MVC   MSGNRBA(3),BCDMRBA      Save RBA of notice.\n         TM    DELFLAG,X'01'           Are we deleting this notice?\n         BO    YESDELN                 Yes.\n         NI    BCDMFLG,X'7F'           Mark MSGNO as used.\n         B     REWRINDX                Write the entire index record.\nYESDELN  DS    0H\n         OI    BCDMFLG,X'80'           Mark MSGNO as not being used.\n         B     REWRINDX                Write the entire index record.\nREWRINDX DS    0H\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         WRITE MDIDECB,                                                X\n               DI,                                                     X\n               BRODCAST,                                               X\n               'S',                                                    X\n               'S',                                                    X\n               'S',                                                    X\n               BLOCKNO,MF=E\n         CHECK MDIDECB\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         SPACE\n         ST    R9,SAVERG9              Save BAL register\n         BAL   R9,WRITNOTE             UPDATE NOTICE RECORD\n         L     R9,SAVERG9              Restore BAL register\n         B     FINDNTEN\nTRYNEXT  LA    R3,5(,R3)               Bump location to next index slot\n         LA    R8,1(,R8)               Bump counter within record\n         BCT   R7,BCILOOP              Try for another notice slot\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     INDXLOOP            END OF RECORD? GET ANOTHER.\nFINDNTEN DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         DROP  R3\n         L     R9,SAVER9D\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE MESSAGE NUMBER FROM THE PARM, CHECK IF NUMERIC.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETNUMB  DS    0H                Get the (usually) numeric first parm.\n         ST    R9,SAVER9B\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO EXPECTED NUMBER.\n         LA    R6,5                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF NUMBER\n*\n* -- >  Test for CLEARALL - below    But it might be CLEARALL.\nCLEATEST DS    0H                    Test if CLEARALL keyword coded\n         MVC   CLEARWRK(8),BLANKS    Blank out work area\n         MVC   CLEARWRK(8),0(R7)     Move 8 bytes of parameter there\n         OC    CLEARWRK(8),BLANKS    Uppercase them\n         CLC   CLEARWRK(8),CLEARALL  Test against C'CLEARALL'\n         BNE   CLEARGO1              Not equal. Do regular processing.\n* -- >  Title message - below\n         ST    R7,SAVER7A\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R7,SAVER7A\n* -- >  Title message - above\n         ST    R7,SAVER7B          Save R7 over all of this.\n         STM   R15,R1,SAVE1501     Save OPEN work registers\n         OPEN  (BRODCAST,(UPDAT))\n         LM    R15,R1,SAVE1501     Restore OPEN work registers\n         TM    BRODCAST+48,X'10'   Is BRODCAST DD OPEN?\n         BNO   WMESS1              No. Send message to allocate it.\n         BAL   R9,HEADREAD         Read header record and extract\n         BAL   R9,CLEARCYC         Nullify all Notice direntries\n         L     R7,SAVER7B          Restore R7 back.\n         B     EOJ0                And go end the program\nCLEARGO1 DS    0H\n* -- >  Test for CLEARALL - above\n*       Go on if normal numeric first parameter is coded.\n         LA    R8,0                INITIALIZE CHARACTER COUNT\n         ST    R7,SAVEBEGN         SAVE BEGINNING OF SEARCH ADDRESS\nTESTNUMR DS    0H                  Test parameter if all numeric.\n         CLI   0(R7),X'40'         Is this character a blank?\n         BE    NOMORCUT            Yes, we are at end of the number.\n         CLI   0(R7),X'6B'         Is this character a comma?\n         BE    NOMORCUT            Yes, we are at end of the number.\n         CLI   0(R7),X'F0'         Less than \"display 0\"?\n         BL    NOTNUMER            Yes. Send error message.\n         CLI   0(R7),X'F9'         Greater than \"display 9\"?\n         BH    NOTNUMER            Yes. Send error message.\n         B     CUTNMLEN\nNOTNUMER DS    0H\n         B     WMESS4              Number parameter is not numeric.\nCUTNMLEN DS    0H\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,TESTNUMR         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         S     R7,SAVEBEGN         REG 7 = Length of number\n         STC   R7,MSGNLENG         Store this message length for later.\n         BCTR  R7,0                One less for EXECUTE.\n         EX    R7,PACK             Convert to packed\n         CVB   R0,WORK             Convert to binary\n         ST    R0,SAVEMSGN         And shove it into a fullword.\n         LH    R7,MSGNHALF\n         CVD   R7,DWORD            Convert message number to decimal.\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   DISPNNUM,DISPNNUM-1      Initialize to blanks.\n         MVC   DISPNNUM(4),WORK10+6     Take last 4 digits.\n* ->\n         B     DISPHEX             Get message written.\nGETNUMEN DS    0H                  End of GETNUMB routine.\n         L     R9,SAVER9B\n         BR    R9                  Return to caller.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPACK     PACK  WORK,0(0,1)\nWORK     DC    D'0'                Doubleword work areas.\nDWORD    DC    D'0'\nDISPHEX  DS    0H\n*        MVC   LINE,LINE-1         Clear output line.\n*        MVC   LINET,DISPNNUM      Move number to correct place in msg.\n*        LA    R0,L'DISPNNUM+7     Load message length.\n*        BAL   R9,MSG              Write message out.\n         B     GETNUMEN            Go back to caller.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    WRITE OVER THE NOTICE MESSAGE IN SYS1.BRODCAST\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITNOTE DS    0H\n         ST    R9,SAVER9E\n         MVC   MESSRBA(3),MSGNRBA\n         MVC   RNAM(3),MESSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'02'         IS THIS A GOOD NOTICE ?\n         BNE   SHOWNOTX            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING BCMSG,R2\n         XR    R0,R0\n         L     R0,LENTHMSG         LENGTH FOR PUTLINE\n         STC   R0,BCMLNG\n         LR    R6,R0\n         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE\n         MVC   LINE,LINE-1\n         MVC   BCMTEXT(125),ZERREC   INITIALIZE MESSAGE TO HEXZEROS\n         TM    DELFLAG,X'01'\n         BO    SHOWNOTD\n         EX    R6,MOVEMSG\n         LR    R0,R6\n         A     R0,=F'11'\n*        HEX   LINE+5,2,MSGNCLR\n         LH    R7,MSGNCLR\n         CVD   R7,DWORD         CONVERT BLOCK COUNT TO DECIMAL\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   LINE+5(4),BLANKS         INITIALIZE TO BLANKS\n         MVC   LINE+5(4),WORK10+6       Take last 4 digits.\n* ->\n         MVC   LINE(5),=C'MSGNO'\n         EX    R6,MOVEMSGX\n         BAL   R9,MSG\n         B     SHOWNOTN\nSHOWNOTD DS    0H\n         MVC   LINE,LINE-1         Clear message line\n         LH    R7,MSGNHALF         Load message number as obtained.\n         CVD   R7,DWORD            Convert it to decimal.\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   LINE+5(4),BLANKS         INITIALIZE TO BLANKS\n         MVC   LINE+5(4),WORK10+6       Take last 4 digits.\n* ->\n         MVC   LINE(5),=C'MSGNO'         Supply message number literal.\n         MVC   LINE+9(8),=C' DELETED'    Mark number as deleted in msg.\n         LA    R0,18               Hard-code length of message.\n         BAL   R9,MSG              Write DELETED message out.\n         MVC   MSGTEXT(125),ZERREC   Put hexzeros in message text.\n         MVC   BCMTEXT(125),MSGTEXT  And move to output area.\nSHOWNOTN DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         MVC   RNAM(3),MESSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEMSG  MVC   BCMTEXT(*-*),MSGTEXT   EXECUTED\nMOVEMSGX MVC   LINE+10(*-*),BCMTEXT   EXECUTED\n         DROP  R2\nSHOWNOTX DS    0H\n         MVC   RNAM(3),MESSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     WMESS8\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE MESSAGE TEXT FOR THE MESSAGE TO BE SENT.         *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETMSGT  DS    0H                  Get message text to send to notice.\n         ST    R9,SAVER9F\n         ST    R7,SAVEWRK7         SAVE REGISTER CONTENTS\n         ST    R8,SAVEWRK8         SAVE REGISTER CONTENTS\n         XR    R7,R7               Zero reg so it doesn't go negative.\n         XR    R8,R8               Zero reg so it doesn't go negative.\n         L     R3,0(,R4)           Load address of command buffer.\n         LH    R8,CMBLENG          Total length of command buffer.\n         LA    R3,4(,R3)           Compensate for header.\n         SH    R8,=H'4'            And minus header length.\n         LH    R7,OFFSETT          Load offset value.\n         LA    R3,0(R7,R3)         Point to beginning of command.\n         SR    R8,R7               Command buffer length minus offset.\n         XR    R7,R7               Zero register.\n         IC    R7,MSGNLENG         Load length of message number.\n         LA    R3,0(R7,R3)         Point past message number.\n         SR    R8,R7               Subtract message number length.\n         BC    8,WMESS2            If zero, issue message.\n         BC    5,EOJ8              If less or overflow, get out.\n         LR    R7,R8               Initialize message length.\nFRSTBLNK DS    0H                  If non-blank, assume that the\n*                                   message starts here.\n         CLI   0(R3),X'40'         Are we at a blank?\n         BE    LEADBLNK            Yes, look for more blanks.\n         B     BLANKEND            No, assume the message starts here.\nLEADBLNK DS    0H                  Bump past any leading blanks.\n         CLI   0(R3),X'40'         Is this character a blank?\n         BNE   CLOSEBRK            No. End the loop.\n         LA    R3,1(,R3)           Bump to next character.\n         BCTR  R7,0                Message is 1 character shorter.\n         BCT   R8,LEADBLNK         Loop until first non-blank.\n* -- >  Test for leading quote(s) - below\nCLOSEBRK DS    0H\n         CLC   STRTCHAR(1),0(R3)   Is the Start Character here?\n         BE    CHAR00              Not the first non-blank\n         CLC   STRTCHA1(1),0(R3)   Is the Start Character here?\n         BE    CHAR01              Not the first non-blank\n         CLC   STRTCHA2(1),0(R3)   Is the Start Character here?\n         BE    CHAR02              Not the first non-blank\n         CLC   STRTCHA3(1),0(R3)   Is the Start Character here?\n         BE    CHAR03              Not the first non-blank\n         CLC   STRTCHA4(1),0(R3)   Is the Start Character here?\n         BE    CHAR04              Not the first non-blank\n         CLC   STRTCHA5(1),0(R3)   Is the Start Character here?\n         BE    CHAR05              Not the first non-blank\n         B     BLANKEND\nCHAR00   DS    0H\n         MVC   STCH(1),STRTCHAR\n         MVC   ENCH(1),ENDCHAR\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR01   DS    0H\n         MVC   STCH(1),STRTCHA1\n         MVC   ENCH(1),ENDCHA1\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR02   DS    0H\n         MVC   STCH(1),STRTCHA2\n         MVC   ENCH(1),ENDCHA2\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR03   DS    0H\n         MVC   STCH(1),STRTCHA3\n         MVC   ENCH(1),ENDCHA3\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR04   DS    0H\n         MVC   STCH(1),STRTCHA4\n         MVC   ENCH(1),ENDCHA4\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR05   DS    0H\n         MVC   STCH(1),STRTCHA5\n         MVC   ENCH(1),ENDCHA5\n         BAL   R9,CHSTREND\n         B     BLANKEND\nBLANKEND DS    0H                  Save message text now.\n* -- >  Test for leading quote(s) - above\n         MVC   BLNKTST(4),0(R3)    Move first 4 chars to staging area\n         OC    BLNKTST(4),BLANKS   And uppercase them.\n         CLC   =C'-BLA',BLNKTST    Is it -BLA for blanks?\n         BE    BLNKWRT             Yes. Make a blank message.\n* -- >  Test for DEL(ETE)  below\n         CLC   =C'-DEL',BLNKTST    Is it -DEL to delete the message?\n         BE    YSDELETE            Yes. Delete this message number.\n         B     NTDELETE            No. Go on with regular processing.\n*                          >>>>>>  MESSAGE DELETION ROUTINE.\nYSDELETE DS    0H                  Delete the current message number.\n         OI    DELFLAG,X'01'       Turn on \"message deleted\" flag\n         MVC   MSGTEXT(125),ZERREC   Put hexzeros in message text.\n         B     GETMSGTE            Get out of this routine.\nNTDELETE DS    0H\n* -- >  Test for DEL(ETE)  above\n         BCTR  R7,0                ONE LESS FOR EXECUTE\n         B     WRMSGTXT\nBLNKWRT  DS    0H\n         L     R7,DEFBLNK          30 Chars in blank msg is default.\n         BCTR  R7,0                One less for EXECUTE\n         EX    R7,MOVBLNKS           MOVE THEM IN\n         B     BLNKWRTX              SKIP MESSAGE MOVE\nWRMSGTXT DS    0H\n         C     R7,=F'122'          One less than maximum.\n         BH    TRUNCMSG            Too big, send error message.\n         B     NOTRUNCM            Not too big. Write msg to BRODCAST.\nTRUNCMSG DS    0H\n         MVC   LINE+5(40),=C'Message must be 123 characters or less. '\n         LA    R0,46               Load length of message.\n         BAL   R9,MSG              Write it out.\n         B     EOJ8                Error, condition code 8, and out.\nNOTRUNCM DS    0H\n         MVC   MSGTEXT(125),BLANKMSG   Blank SEND message area.\n         EX    R7,MOVEMSGG         Move the notice text into it.\nBLNKWRTX DS    0H\n*        MVC   LINE,LINE-1         Clear message line.\n*        MVC   LINE,MSGTEXT        Move notice text into message line.\n*        LA    R0,1(,R7)           Load true message length.\n*        BAL   R9,MSG              Go write the message text out.\n         LA    R7,1(,R7)           Restore true message length.\n         ST    R7,LENTHMSG         And store it away for later.\n         B     GETMSGTE\nGETMSGTE DS    0H\n         L     R7,SAVEWRK7         RESTORE REGISTER CONTENTS\n         L     R8,SAVEWRK8         RESTORE REGISTER CONTENTS\n         L     R9,SAVER9F\n         BR    R9\nMOVBLNKS MVC   MSGTEXT(0),BLANKMSG  << EXECUTED >>\nMOVEMSGG MVC   MSGTEXT(*-*),0(R3)   << EXECUTED >>\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9A\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   FSTNOTI(3),R1BCPTR  SAVE RBA OF FIRST NOTICES INDEX\n         MVC   NUMNOTES(2),R1BCMAX SAVE MAXIMUM NUMBER OF NOTES\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   NUMRECS(4),R1RECNUM   SAVE TOTAL NUMBER OF RECORDS\n         ST    R7,SAVER7           SAVE REGISTER\n         L     R7,NUMRECS          PUT NUMBER OF RECORDS IN\n         BCTR  R7,0                MINUS ONE\n         ST    R7,HIWATER          HIGHEST RBA PERMITTED\n         L     R7,SAVER7           RESTORE REGISTER\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9L\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* ------------------------------------------------------------------ *\n* ---    RUN THROUGH ALL NOTIFY DIRECTORY RECORDS AND MARK AS    --- *\n* ---     DELETED.  USED ONLY IF CLEARALL IS SPECIFIED.          --- *\n* ------------------------------------------------------------------ *\nCLEARCYC DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         ST    R9,SAVER9C\n         ST    R7,SAVER7C\n         MVC   SAVERBA(3),FSTNOTI  GET THE BALL ROLLING\nCLEALOOP DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES\n         BE    CLEANTEN            END OF NOTICE INDEX RECORDS. FINISH.\n* ------------------------------------------------------------------ *\n*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    NOTICES AREN'T MISSED.\n* ------------------------------------------------------------------ *\nCLEACLEA DS    0H\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R2,MDIDECB+20           ADDRESS OF KEY\n         CLI   0(R2),X'00'             NOTICES INDEX RECORD?\n         BNE   WMESS6                  NO. ERROR.\n         L     R3,MDIDECB+12           ADDRESS OF RECORD\n         USING BCDIR,R3\n         MVC   LASTRBA(3),SAVERBA      SAVE CURRENT RBA\n         MVC   SAVERBA(3),BCDNEXT      GET NEXT RECORD'S RBA\n         LA    R8,0                    INITIALIZE INDEX SLOT COUNTER\n         DROP  R3\n*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY\n         LA    R7,25               COUNT OF INDEXES PER RECORD\nCLELOOP  DS    0H\n         USING BCDENTRY,R3\n         CLC   BCDENTRY(5),=X'0000000000'    Blank entry?\n         BE    SKPCLEAR                      If so, don't mark empty.\n         OI    BCDMFLG,BCDNOMSG        Mark MSGNO as not being used.\n         AP    ZDIRCNT,=P'1'           Count how many dirs you zeroed.\nSKPCLEAR DS    0H\n         LA    R3,5(,R3)               Bump location to next index slot\n         LA    R8,1(,R8)               Bump counter within record\n         BCT   R7,CLELOOP              Try for another notice slot\n         DROP  R3\nCLWRINDX DS    0H\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         WRITE MDIDECB,                                                X\n               DI,                                                     X\n               BRODCAST,                                               X\n               'S',                                                    X\n               'S',                                                    X\n               'S',                                                    X\n               BLOCKNO,MF=E\n         CHECK MDIDECB\n         MVC   RNAM(3),BLOCKNO         USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         SPACE\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     CLEALOOP            END OF RECORD? GET ANOTHER.\nCLEANTEN DS    0H                  END OF NOTICE INDEX RECORDS\n         MVC   LINE,LINE-1\n         MVC   LINE(L'MESCLEAR),MESCLEAR\n         LA    R0,L'MESCLEAR\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(L'MESCOUNX),MESCOUNX\n         MVC   LINE+36(10),MASK10\n         ED    LINE+36(10),ZDIRCNT\n         LA    R0,L'MESCOUNX\n         BAL   R9,MSG\n         L     R7,SAVER7C\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        ROUTINE TO DISPLAY HEX VALUES                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9M\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9M\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9G\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1\n         MVC   WORK10(10),BLANKMSG\n         MVC   ZDIRCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS        ZERO OUT\n         MVC   FSRCRBA(3),ZEROS          ALL THE RBA\n         MVC   NEXTRBA(3),ZEROS            STORAGE AREAS\n         MVC   NFRERBA(3),ZEROS\n         MVC   MINRBA(3),=X'FFFFFF'    PUT A LARGE VALUE IN\n         MVI   FULLFLAG,X'00'\n         MVC   MSGTEXT(125),BLANKMSG   MOVE BLANKS TO MSG AREA\n         MVC   OFFSETT(2),ZEROS\n         MVC   CMBLENG(2),ZEROS\n         MVC   NUMRECS(4),ZEROS\n         MVC   HIWATER(4),ZEROS        PREVENT S0CX\n         MVC   NFRERBA(3),ZEROS\n         MVC   MESCOUNX(L'MESCOUNX),MESCOUNT\n         L     R9,SAVER9G\n         BR    R9\n* ------------------------------------------------------------------ *\nGETPSCB  DS    0H\n         ST    R9,SAVER9H\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              SAVE CPPL POINTERS                                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9I\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9I\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9J\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nCHSTREND DS    0H\n         ST    R9,SAVER9N\n         ST    R3,SAVER3A\n         ST    R7,SAVER7D\n         BCTR  R7,0                Yes it is. So Msg is one char less.\n         LA    R3,1(,R3)           Bump to real start character\n         ST    R5,SAVER5           Save work register\n         XR    R5,R5               Zero it to make sure\n         LA    R5,0(R7,R3)\n         BCTR  R5,0                Point to end character\n         CLC   ENCH(1),0(R5)       Is it equal to special character?\n         BNE   EGTMSG              No. Don't drop last char.\n         BCTR  R7,0                Lower msg length by one.\nEGTMSG   DS    0H\n         L     R5,SAVER5           Restore work register.\nCHSTRENE DS    0H\n         L     R9,SAVER9N\n         BR    R9\nSTCH     DS    X\nENCH     DS    X\n* ------------------------------------------------------------------- *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9K\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9K\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    C'        '         8 BLANKS\nBLANKMSG DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'You have to specify message text after the MSG Number,-\n                or -BLAnks or -DELete.'\nMESSAGE3 DC    C'You have to specify MSG Number after the command name.-\n               '\nMESSAGE4 DC    C'Message number parameter is not numeric.'\nMESSAGE5 DC    C'Message number greater than maximum of '\nMESS5NUM DC    C'    '\n         DC    C'. Request is not processed.'\nMESS5LEN EQU   *-MESSAGE5\nMESSAGE6 DC    C'Record pointed to, is not a NOTICES index record.'\nMESSAGE7 DC    C'End of NOTICES without finding the requested one.'\nMESSAGE8 DC    C'Record pointed to, is not a NOTICES message record.'\nMESCLEAR DC    C'All Notices have been marked as Deleted. '\nMESCOUNT DC    C'Count of Notices that were zeroed:            '\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nCLEARALL DC    CL8'CLEARALL'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nSAVEBEGN DC    F'0'\nSAVEMSGN DS    0F\n         DC    H'0'\nMSGNHALF DC    H'0'\nMSGNCLR  DC    H'0'\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nZDIRCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\n         DC    C' '\nDISPNNUM DC    CL4' '\n         DC    C' '\nDISPMXNM DC    CL4' '\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nDELFLAG  DC    X'00'\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nNUMNOTES DC    X'0000'             MAX NUMBER OF NOTICE RECORDS\nFSTNOTI  DC    X'000000'           STORE RBA OF FIRST NOTICE INDEX\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nMSGNLENG DC    X'00'               STORE MESSAGE NUMBER LENGTH HERE\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nPREVRBA  DC    X'000000'           RBA OF PREVIOUS MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nMSGNRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nFREERBA  DC    X'000000'           RBA OF FREE MESSAGE SLOT FOUND\nNEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMINRBA   DC    X'000000'\nNFRERBA  DC    X'000000'           NEW FREE SEARCH RBA FOR TYPE 5\nFSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYNUMB  DS    0CL8                STORE TEST USERID HERE\nTRYNUMBI DS    CL7                 STORE TEST USERID HERE\nTRYNUMBF DS    CL1                 8TH CHARACTER\nSAVEID   DS    CL8                 STORE USERID HERE\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVE1501 DS    3F                  SAVE R15 THRU R1\nSAVER3A  DS    F                   SAVE REGISTER\nSAVER4   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER5   DS    F                   SAVE REGISTER\nSAVER6   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7   DS    F                   SAVE REGISTER\nSAVER7A  DS    F                   SAVE REGISTER\nSAVER7B  DS    F                   SAVE REGISTER\nSAVER7C  DS    F                   SAVE REGISTER\nSAVER7D  DS    F                   SAVE REGISTER\nSAVER7E  DS    F                   SAVE REGISTER\nSAVER7F  DS    F                   SAVE REGISTER\nSAVER8   DS    F                   SAVE REGISTER\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L     NOTICE READ\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nRDWI     READ  MDIDECB,DI,MF=L     INDEX READ\nRDWIEND  DS    0F\nRDWILEN  EQU   *-RDWI\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nFULLFLAG DS    X\nOFFSETT  DS    H\nCMBLENG  DS    H\nMSGTEXT  DS    CL125\n         DS    CL130               Padding to 255 characters\nSAVEWRK7 DS    F\nSAVEWRK8 DS    F\nSAVERG9  DS    F\nLENTHMSG DS    F\nNUMRECS  DS    F\nHIWATER  DS    F\nQUOTSTRT DC    CL1' '\nQUOTEND  DC    CL1' '\nQUOTSTOR DC    F'0'\nCLEARWRK DS    CL8\nBLNKTST  DC    CL4' '\n         DC    C' '\nMESCOUNX DC    C'Count of Notices that were zeroed:            '\nWORK10   DC    XL10'00'\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IEZBITS\n         IKJZT301 DSECT=YES\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMNUPD": {"ttr": 9990, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00&\\x01\\x05\\x10O\\x01\\x16&\\x9f\\x156\\x02C\\x01\\xee\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2005-04-14T00:00:00", "modifydate": "2016-09-25T15:36:26", "lines": 579, "newlines": 494, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMNUPD TITLE 'BDMNUPD - AUTHORIZE UPDATE OF INCORE NOTICES TABLE'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*           NAME:   BDMNUPD                                           *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMNUPD     (AS A TSO COMMAND)                    *\n*                                                                     *\n*       FUNCTION:   To set the TSVTNCTU bit in the TSVT (TSO Vector   *\n*                   Table) which, when on, forces a reading of        *\n*                   SYS1.BRODCAST to update the incore Notices        *\n*                   table.  LISTBC tests this bit and updates the     *\n*                   incore Notices, so any changes make by BDMNOTFY   *\n*                   are made readable by LISTBC, as soon as LISTBC    *\n*                   is executed once, by anybody on the system.       *\n*                                                                     *\n*                   This is correct for TSO/E 3.3.0 and later.        *\n*                   At TSO/E 2.6.0 and below, in order to             *\n*                   force a read of the BRODCAST dataset, you         *\n*                   have to issue an OPER command with a SEND         *\n*                   ' ',SAVE subcommand to actually update a          *\n*                   message, after the TSVTNCTU bit has been set.     *\n*                                                                     *\n*                                                                     *\n*      OPERATION:   APF AUTHORIZED  -  SETCODE AC(1)                  *\n*                                                                     *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.5            *\n*                                                                     *\n*            DATE:  APR 26, 05                                        *\n*                                                                     *\n*         CHANGES:  04/26/05  -  Fix messages to correctly describe   *\n*          (Version 1.4)         the condition encountered.  If not   *\n*                                APF authorized, then say so.  If     *\n*                                there is no TSVT, and therefore no   *\n*                                need to do an update, then say so.   *\n*                                (This is for an old version of MVS.) *\n*                                Finally, if the bit has been updated *\n*                                successfully, then say accurately    *\n*                                under what conditions the incore     *\n*                                Notices table will be accurately     *\n*                                updated.                             *\n*                                                                     *\n*                                For z/OS 1.2 and below:  You need    *\n*                                an actual write request to BRODCAST  *\n*                                with an OPER SEND '  ',SAVE in order *\n*                                for the incore Notices to be rewrit- *\n*                                ten.  From z/OS 1.3 onward, a mere   *\n*                                execution of LISTBC by anyone, will  *\n*                                be enough, when the TSVTNCTU bit is  *\n*                                on.  This is for TSO/E 3.3.0.        *\n*                                                                     *\n*         CHANGES:  05/17/05  -  Include a message to indicate the    *\n*          (Version 1.5)         release of TSO/E that is currently   *\n*                                running.                             *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n***********************************************************************\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n         YREGS\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMNUPD '\n&PGMNAME AMODE 31\n&PGMNAME RMODE ANY\n&PGMNAME CSECT\n         USING BDMNUPD,R12,R10\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15             LOAD FIRST BASE REGISTER\n         LA    R10,4095(,R12)      LOAD SECOND BASE\n         LA    R10,1(,R10)\n         LR    R11,R1              PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R11,R11             ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R11)          PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         STH   R3,CMBLENG          SAVE COMMAND BUFFER LENGTH\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         STH   R3,OFFSETT          SAVE OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n* -----\n         ST    R4,SAVER4X          Save work register.\n         USING CVT,R4\n         L     R4,16               CVT\n         L     R4,CVTTVT           TSVT\n         DROP  R4\n         USING TSVT,R4             Use the IKJTSVT macro.\n         CLC   =C'TSVT'(4),0(R4)   Is the TSVT acronym there?\n         BNE   NOCORUPD            No. Report this must be an old MVS.\n*  ---  >                  Fill in current TSO/E release.   below\n         MVC   MSGT+27(1),TSVTLVER\n         MVC   MSGT+29(2),TSVTLREL\n         MVC   MSGT+32(1),TSVTLMOD\n*  ---  >                  Fill in current TSO/E release.   above\n         STM   R15,R1,SAVE1401     Now save registers and test if APF\n         XR    R15,R15                  authorized.\n         TESTAUTH FCTN=1           Are we authorized?\n         LTR   R15,R15             Test the return code.\n         BNZ   NOTAUTH             Not zero, tell not authorized.\n         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.\nKZ       MODESET KEY=ZERO\n         OI    TSVTFLG1,TSVTNCTU   Flag incore Notices need updating.\n         DROP  R4\n         L     R4,SAVER4X          Restore work register.\nNZ       MODESET KEY=NZERO\n*                          Write \"BIT SUCCESSFULLY UPDATED\" messages.\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGET\n         LA    R0,L'MESSAGET\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEC\n         LA    R0,L'MESSAGEC\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG00\n         LA    R0,L'MESSAG00\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG01\n         LA    R0,L'MESSAG01\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG02\n         LA    R0,L'MESSAG02\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG03\n         LA    R0,L'MESSAG03\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG04\n         LA    R0,L'MESSAG04\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG05\n         LA    R0,L'MESSAG05\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG06\n         LA    R0,L'MESSAG06\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG07\n         LA    R0,L'MESSAG07\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG08\n         LA    R0,L'MESSAG08\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG09\n         LA    R0,L'MESSAG09\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG10\n         LA    R0,L'MESSAG10\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG11\n         LA    R0,L'MESSAG11\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG12\n         LA    R0,L'MESSAG12\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG13\n         LA    R0,L'MESSAG13\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG14\n         LA    R0,L'MESSAG14\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG15\n         LA    R0,L'MESSAG15\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG16\n         LA    R0,L'MESSAG16\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAG17\n         LA    R0,L'MESSAG17\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MSGT\n         LA    R0,L'MSGT\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\n         B     UPDTEND\nNOTAUTH  DS    0H          Write \"COMMAND NOT AUTHORIZED\" message.\n         L     R4,SAVER4X          Restore work register.\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGET\n         LA    R0,L'MESSAGET\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEC\n         LA    R0,L'MESSAGEC\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEP\n         LA    R0,L'MESSAGEP\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\n         B     EOJ0\nNOCORUPD DS    0H          Write \"OLD MVS VERSION\" message.\n         L     R4,SAVER4X          Restore work register.\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGET\n         LA    R0,L'MESSAGET\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEC\n         LA    R0,L'MESSAGEC\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEO\n         LA    R0,L'MESSAGEO\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE,MESSAGEU\n         LA    R0,L'MESSAGEU\n         BAL   R4,MSG\nUPDTEND  DS    0H\n         B     EOJ0\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN ROUTINE TO SEND MESSAGE                     --- *\n* ------------------------------------------------------------------ *\nEOJ0     SR    R15,R15             SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R15,4               SET CC = 4.\n         B     EOJ\nEOJ8     LA    R15,8               SET CC = 8.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\nMSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         BR    R4\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        ROUTINE TO DISPLAY HEX VALUES                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   MSGTEXT(125),BLANKMSG   MOVE BLANKS TO MSG AREA\n         MVC   MSGT,MESSAGER\n         BR    R9\n* ------------------------------------------------------------------ *\nGETPSCB  L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              SAVE CPPL POINTERS                                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R11\nCPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         BR    R9\n         DROP  R11\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R11\nSETIOPL  LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R11\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    C'        '         8 BLANKS\nBLANKMSG DC    CL125' '\n*--------------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\nMESSAGET DC    CL72'&PGMNAME PROGRAM - &PKGTITL &VERTITL &VERSNUM'\nMESSAGEU DS    0CL72\n         DC    72C'-'\nMESSAGEP DC    C'TSVTNCTU bit has not been set because APF authorizatio-\n               n is needed.'\nMESSAGEO DC    C'TSVT is not present. This is an older MVS version.'\nMESSAGEC DS    0CL79                Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\nMESSAG00 DC   C'The purpose of the BDMNUPD program is to force an     '\nMESSAG01 DC   C'update to the Incore Notices Table which LISTBC reads.'\nMESSAG02 DC   C'The need for update is signalled by the TSVTNCTU bit  '\nMESSAG03 DC   C'in the TSO Vector Table, mapped by macro IKJTSVT.     '\nMESSAG04 DC   C'Once the TSVTNCTU bit has been set, it depends which  '\nMESSAG05 DC   C'TSO release you have, as to what program will interro-'\nMESSAG06 DC   C'gate the bit, and update the Incore Notices Table.    '\nMESSAG07 DC   C'     -  The TSVTNCTU bit has now been set  -          '\nMESSAG08 DC   C'At TSO/E Release 3 and above, running LISTBC alone    '\nMESSAG09 DC   C'will create a new Incore Notices Table.               '\nMESSAG10 DC   C'Below TSO/E Release 3, you have to do an              '\nMESSAG11 DC   C' OPER SEND '' '',SAVE first.                          '\nMESSAG12 DC   C'This means that z/OS 1.2 and below, will require the  '\nMESSAG13 DC   C' OPER SEND '' '',SAVE.                                '\nMESSAG14 DC   C'And z/OS 1.3 and above, only requires that someone    '\nMESSAG15 DC   C' somewhere in the system, will execute LISTBC, which  '\nMESSAG16 DC   C' means that all that is necessary is that someone will'\nMESSAG17 DC   C' LOGON to a TSO session.                              '\nMESSAGER DC    C'This release of TSO/E is:  x.xx.x .'\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nSAVE1401 DS    4F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\n         DS    CL72                PADDING\n         DC    C' '\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER4X  DS    F                   SAVE WORK REGISTER VALUE\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nOFFSETT  DS    H\nCMBLENG  DS    H\nMSGTEXT  DS    CL125\n         DS    CL130               Padding to 255 characters\nMSGT     DS    CL35\n         DS    0D                  Doubleword boundary\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJTSVT\n         IEZIOB   DSECT=YES\n         IEZBITS\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMNXPRT": {"ttr": 10246, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x01\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x03\\xa1\\x00\\x01\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:01", "lines": 929, "newlines": 1, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMNXPRT TITLE 'BDMNXPRT - Export BRODCAST Notices to VB-255 File.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM MAY BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*         SYNTAX:   BDMNXPRT                                          *\n*                                                                     *\n*       FUNCTION:   To export BRODCAST Notices to an external VB-255  *\n*                   format file, in BDMNOTFY format, so they can be   *\n*                   reloaded into a new copy of the BRODCAST Dataset. *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  May 15, 2007                                      *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*                   ALLOC F(EXPORT) DA(EXPORT.DATA) SPACE(5 5)        *\n*                     TRACKS RECFM(V B) LRECL(255) UNIT(SYSDA) REUSE  *\n*                                                                     *\n*       NOTE:       BDMNXPRT READS THE BRODCAST DATASET DIRECTLY,     *\n*                   AND REPORTS THE NOTICES ONLY FROM IT.  IT         *\n*                   DOES NOT READ THE INCORE COPY OF THE NOTICES      *\n*                   POINTED TO BY CVTTVT (THE TSO VECTOR TABLE)       *\n*                   AND THE NCT WHICH IS DESCRIBED IN MACRO           *\n*                   IKJTSVT.  (THE INCORE NOTICES TABLE)              *\n*                                                                     *\n*       COMMENTS:   This program produces an output file in VB-255    *\n*                   format, which dumps all Global Notices in the     *\n*                   BRODCAST Dataset.  The EXPORT file contains       *\n*                   records that are in the format:                   *\n*                                                                     *\n*                   BDMNOTFY nnnnn Message Text                       *\n*                                                                     *\n*                   which are suitable for reloading into another     *\n*                   BRODCAST Dataset.                                 *\n*                                                                     *\n*       CHANGES:    07/25/01  -  CLEANED OUT A LOT OF THE BDMLIST     *\n*                   (VER 1.1)    CODE, AND ISSUED A MESSAGE IF A      *\n*                                \"NOTICES INDEX RECORD\" IS CORRUPTED. *\n*                                                                     *\n*                   04/10/05  -  REPRESENT MESSAGE NUMBERS IN DECIMAL *\n*                                INSTEAD OF IN HEX - LIKE LISTBC.     *\n*                                                                     *\n*                   04/26/05  -  FIX SITUATION IN WHICH INDEX RECORD  *\n*                   (VER 1.4)    MARKS A MESSAGE AS USED, BUT THE     *\n*                                MESSAGE LENGTH IS ZERO.              *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND  , */\n         MACRO\n         IKJZT303   &DSECT=YES\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND  , */\n         SPACE\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMNXPRT'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         USING &PGMNAME,R12,R11,R10\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         SPACE 1\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n*        CH    R3,=H'4'            ANYTHING?\n*        BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n*        BC    8,WMESS3            ZERO, THIS PROGRAM IS RUN W/O PARAMS\n*        BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n* -- >  Title message - below\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(L'REPTLN01),REPTLN01\n         LA    R0,133\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n* -- >  Title message - above\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         OPEN  (EXPORT,(OUTPUT))\n         TM    EXPORT+48,X'10'\n         BNO   WMESS2\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST NOTICES RECORD, AND\n*                                  ALSO THE MAXIMUM NUMBER OF NOTICES\n*                                  IN THIS BROADCAST DATASET.\nPRMSGHED DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG20\n         LA    R0,L'MESSAG20+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG21\n         LA    R0,L'MESSAG21+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG22\n         LA    R0,L'MESSAG22+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n         BAL   R9,PROCOUT\n*\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH NOTICE RECORD.                   --- *\n* ---     FIRST, WE HAVE TO GO THRU THE INDEX RECORDS            --- *\n* ------------------------------------------------------------------ *\nINDEXBC  DS    0H                  READ THROUGH NOTICE INDEX RECORDS\n         MVC   SAVERBA(3),FSTNOTI    GET THE BALL ROLLING\nINDXLOOP DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES\n         BE    ENDINDEX            END OF NOTICE INDEX RECORDS. FINISH.\n*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR\n*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND\n*    NOTICES AREN'T MISSED.\n         LA    R7,25               COUNT OF INDEXES PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+20       ADDRESS OF RECORD\n         CLI   0(R3),X'00'         NOTICE INDEX RECORD?\n         BNE   BADEND              NO. ERROR.\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING BCDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),BCDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE INDEX SLOT COUNTER\n         DROP  R3\n*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY\nBCILOOP  DS    0H\n         USING BCDENTRY,R3\n* --->\n*        MVC   LINE,LINE-1\n*        HEX   LINE,5,BCDENTRY\n*        LA    R0,20\n*        BAL   R9,MSG\n         MVC   LINE,LINE-1\n* --->\n         TM    0(R3),X'80'                   VALID NOTICE ?\n         BO    TRYNEXT                       NO. BUMP TO NEXT ONE.\n         CLC   BCDENTRY(5),=X'0000000000'    BLANK ENTRY?\n         BE    TRYNEXT                       IF SO, JUST BUMP.\n         MVC   SHOWNUMB(2),BCDMSGNO          SAVE NOTICE NUMBER\n         MVC   SHOWRBA(3),BCDMRBA            SAVE NOTICE RBA\n         BAL   R9,SHOWNOTE                   WRITE NOTICE OUT\n         AP    BMSGCNT,=P'1'\nTRYNEXT  LA    R3,5(,R3)           BUMP LOCATION TO NEXT INDEX SLOT\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         BCT   R7,BCILOOP          TRY FOR ANOTHER NOTICE SLOT\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     INDXLOOP            END OF RECORD? GET ANOTHER.\n         SPACE 3\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR NOTICES                            --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDINDEX DS    0H                            ARE WE DOING ALL IDS ?\n         CP    BMSGCNT,=P'0'\n         BE    ENDNONE\n         B     ZEROUT\nENDNONE  DS    0H                            ARE WE DOING ALL IDS ?\n         MVC   LINE,LINE-1\n         LA    R0,L'MESDONE\n         MVC   LINE(L'MESDONE),MESDONE\n         BAL   R9,MSG\n         B     EOJ0                           GET THE HECK OUT\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 EXPORT.DATA NOT ALLOC'D\n         LA    R0,L'MESSAGE2+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 YOU HAVE TO ENTER THE\n         LA    R0,L'MESSAGE3+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nEOJ0     SR    R5,R5               SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT.\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\nEOJ12    LA    R5,12               SET CC = 12.\n         B     EOJ                 CONT\nEOJ16    LA    R5,16               SET CC = 16.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         CLOSE (EXPORT)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9A\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9B\n         READ  MDIDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDIDECB\n         L     R3,MDIDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   FSTNOTI(3),R1BCPTR  SAVE RBA OF FIRST NOTICES INDEX\n         MVC   NUMNOTES(2),R1BCMAX  SAVE MAXIMUM NUMBER OF NOTES\n         DROP  R3\n         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSHOWNOTE DS    0H\n         ST    R9,SAVER9C\n         MVC   MESSRBA(3),SHOWRBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'02'         IS THIS A GOOD NOTICE ?\n         BNE   SHOWNOTN            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING BCMSG,R2\n         XR    R0,R0\n         IC    R0,BCMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0               LOAD IT INTO R6\n         ST    R6,MSGLNGXX         Store true Message Length\n         A     R0,=F'29'\n         ST    R0,OUTLSTOR\n         BCTR  R6,0                SUBTRACT ONE FOR EXECUTE\n*>BELOW<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         C     R6,=X'FFFFFFFF'     IS R6 EQUAL TO MINUS ONE?\n         BNE   SHOWNMIN            NO. THERE WON'T BE A PROBLEM.\n         LA    R6,0                YES. SET IT EQUAL TO ZERO.\n         MVC   LINE,LINE-1         DUPLICATE LINE BELOW.\n         B     SHOWNMWR            SKIP MESSAGE MOVE BUT REPORT NUMBER.\nSHOWNMIN DS    0H\n*>ABOVE<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.\n         MVC   LINE,LINE-1         CLEAR MESSAGE LINE.\nSHOWNMWR DS    0H\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         EX    R6,MOVEMSG          MOVE MESSAGE TEXT TO BRODCAST BUFFER\n         EX    R6,MOVEEXP\n         L     R0,MSGLNGXX         Load true Message Length back\n         A     R0,=F'10'           TSO MESSAGE LENGTH OF 10\n*        HEX   LINE+5,2,SHOWNUMB\n         LH    R1,SHOWNUMB         LOAD REGISTER WITH HEX NUMBER\n         CVD   R1,DWORD            CONVERT BLOCK COUNT TO DECIMAL\n* ->\n         MVC   WORK10,MASK10            Move in mask.\n         ED    WORK10,DWORD+3           Make 10 digit number.\n         MVC   LINE+5(4),BLANKMSG       INITIALIZE AREA TO BLANKS\n         MVC   LINE(5),=C'MSGNO'        APPEND TITLE TO NUMBER\n         MVC   LINE+5(4),WORK10+6       Take last 4 digits.\n         CLI   LINE+6,C' '\n         BNE   ZEROA\n         MVI   LINE+6,C'0'\nZEROA    DS    0H\n         CLI   LINE+7,C' '\n         BNE   ZEROB\n         MVI   LINE+7,C'0'\nZEROB    DS    0H\n* ->\n***----->  Diagnostic  -  below\n*        L     R0,MSGLNGXX         Load true Message Length back\n*        A     R0,=F'30'           TSO MESSAGE LENGTH OF 10\n*        HEX   LINE+68,4,OUTLSTOR\n***----->  Diagnostic  -  above\n         BAL   R9,MSG                   AND SHOW THE MESSAGE ON SCREEN\n         BAL   R9,EXPROUT\nSHOWNOTN DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9C\n         BR    R9\nMOVEMSG  MVC   LINE+10(*-*),BCMTEXT   EXECUTED\nMOVEEXP  MVC   OUTMESSG(*-*),BCMTEXT   EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9D\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9D\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9E\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9E\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9F\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LINE,LINE-1         BLANK THE MESSAGE LINE\n         MVI   OUTSTCH1,C'{'\n         MVI   OUTENCH1,C'}'\n         MVC   WORK10(10),BLANKMSG\n         ZAP   BMSGCNT,=P'0'\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVI   ALLFLAG,X'00'\n         MVC   WKLBLNK(2),BLANKS\n         MVI   OUTFILL1,X'40'\n         MVC   OUTNUMBR,BLANKS\n         MVI   OUTFILL2,X'40'\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         XC    OUTLSTOR,OUTLSTOR\n         MVC   OUTLENG,=H'0'\n         MVC   OUTZERO,=H'0'\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9G\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9G\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9H\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9I\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9I\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEXPROUT  DS    0H\n         ST    R9,SAVER9J\n         ST    R3,SAVER3A\n         L     R3,OUTLSTOR\n         LA    R3,1(,R3)\n         ST    R3,OUTLSTOR\n         L     R3,SAVER3A\n         MVC   OUTLENG(2),OUTLSTOR+2\n         MVC   OUTZERO,=H'0'\n         MVC   OUTLIT(8),=C'BDMNOTFY'\n         MVC   OUTNUMBR(5),WORK10+5\n         MVI   OUTSTCH1,C'{'\n         ST    R3,SAVER3A\n         LA    R3,OUTMESSG\n         A     R3,MSGLNGXX\n         MVI   0(R3),C'}'\n         L     R3,SAVER3A\n         PUT   EXPORT,OUTLINE\n         L     R9,SAVER9J\n         BR    R9                  RETURN TO CALLER\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPROCOUT  DS    0H\n         ST    R9,SAVER9K\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         MVC   OUTLIT(6),=C'PROC 0'\n         MVC   OUTLENG,=H'21'\n         MVC   OUTZERO,=H'0'\n         PUT   EXPORT,OUTLINE\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         MVC   OUTLIT(12),=C'CONTROL ASIS'\n         MVC   OUTLENG,=H'27'\n         MVC   OUTZERO,=H'0'\n         PUT   EXPORT,OUTLINE\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         MVC   OUTLIT(8),=C'BDMNOTFY'\n         XC    OUTLSTOR,OUTLSTOR\n         MVC   OUTLENG,=H'0'\n         MVC   OUTZERO,=H'0'\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nBLANKMSG DC    CL125' '\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\nEDPAT    DC    X'40202020202020202120'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    CL10'     '         10 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C' '\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL51'&PGMNAME   ---   BRODCAST Notices Export Program  '\n         DC    C' ---'\n         DC    CL68' '\n*--------------------------------------------------------------------*\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'BAD OPEN - ALLOC F(EXPORT) DA(EXPORT.DATA) SPACE(5 45)X\n                TRACKS RECFM(V B) LRECL(255) UNIT(SYSDA) REUSE'\nMESSAGE3 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'\nMESSEND  DC    C'* - - - - NO BRODCAST NOTICES - - - - *'\nMESSAG20 DC    CL58'   &PGMNAME &PKGTITL &VERTITL &VERSNUM      '\nMESSAG21 DC    CL58'   -------  --------- ------  -------   ----- '\nMESSAG22 DC    CL58'&COPYRGT      '\nMESSAG30 DC    CL58' /*  Messages for USERID:                */ '\nMESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF NOTICES  - - - - - *'\nMESDONE  DC    C'BDM576I   NO BROADCAST MESSAGE '\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\nEXPORT   DCB   DSORG=PS,MACRF=PM,DDNAME=EXPORT,RECFM=VB,LRECL=255       00400\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORD    DC    D'0'\nSAVER0R1 DS    D\nSAVE4    DS    F\nSAVERG4  DS    F\nSAVERG5  DS    F\nSAVERG7  DS    F\nSAVERG9  DS    F\nSAVER3A  DS    F                   BAL Register Save Area\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nWKLBLNK  DS    CL2\n         DS    CL72                PADDING\nBMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH NOTICE\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nNUMNOTES DC    X'0000'             MAX NUMBER OF NOTICE RECORDS\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nSHOWRBA  DC    X'000000'           STORE RBA OF NOTICE\nSHOWNUMB DC    X'0000'             STORE NUMBER OF NOTICE\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nFSTNOTI  DC    X'000000'           STORE RBA OF FIRST NOTICE INDEX\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER7   DS    F                   SAVE COUNT FOR USERID SCAN\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L     NOTICE READ\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nRDWI     READ  MDIDECB,DI,MF=L     INDEX READ\nRDWIEND  DS    0F\nRDWILEN  EQU   *-RDWI\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nALLFLAG  DS    X\nWORK10   DC    XL10'00'\n         DC    CL16' '\nOUTENCH1 DC    CL1'}'\n         DS    F                   OUTLINE MUST BE ALIGNED.\nOUTLINE  DS    0CL255\nOUTLENG  DC    H'0'\nOUTZERO  DC    H'0'\nOUTDATA  DS    0CL251\nOUTBLANK DC    CL8' '\nOUTLIT   DC    CL8' '\nOUTFILL1 DC    CL1' '\nOUTNUMBR DC    CL5' '\nOUTFILL2 DC    CL1' '\nOUTSTCH1 DC    CL1'{'\nOUTMESSG DS    CL227\n         DC    C'   '\nOUTLSTOR DS    F\nMSGLNGXX DS    F\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IEZBITS\n         IKJZT302 DSECT=YES\n         IKJZT303 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMPUTL": {"ttr": 10753, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x16\\x01\\x055\\x0f\\x01\\x16&\\x9f\\x16\\x03\\x00\\xc8\\x00\\xc8\\x00\\x01\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2005-12-16T00:00:00", "modifydate": "2016-09-25T16:03:16", "lines": 200, "newlines": 200, "modlines": 1, "user": "SBGOLOB"}, "text": "BDMPUTL  TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nBDMPUTL  CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . BDMPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nBDMPUTL  CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nBDMPUTL  AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING BDMPUTL,R12        ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   BDMPUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BDMREST": {"ttr": 10757, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x002\\x00\\x99\\x12\\x9f\\x01\\x16&\\x9f\\x156\\x02\\xcd\\x03c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "1999-05-09T00:00:00", "modifydate": "2016-09-25T15:36:32", "lines": 717, "newlines": 867, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMREST  TITLE 'BDMREST - RESTORE BRODCAST DATASET FROM A BDMDUMP'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program to restore a      *\n*                   copy of the BRODCAST dataset from an FB-130       *\n*                   BDMDUMP backup.                                   *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*          This program tries to restore a copy of BRODCAST           *\n*          in such a way, so it will be usable, if renamed to         *\n*          SYS1.BRODCAST.  Therefore, the program only allows one     *\n*          extent.  If you allocate secondary extents in your         *\n*          creation JCL (as illustrated below), they will be          *\n*          ignored.  The program reports exactly how large you        *\n*          should allocate your new dataset, and you should make      *\n*          it exactly that large.  This is because the dataset is     *\n*          a direct access dataset, and it has a fixed number of      *\n*          slots.  As copied, you can't expand it.                    *\n*                                                                     *\n*                                                                     *\n*       Function:   To restore a SYS1.BRODCAST dataset or a copy      *\n*                   in the same format, from a BDMDUMP FB-130 file.   *\n*                                                                     *\n*          Author:  Sam Golob             Version 1.4.0               *\n*                                                                     *\n*            Date:  May 09, 99                                        *\n*                                                                     *\n*                                                                     *\n*       JCL to invoke:                                                *\n*                                                                     *\n* //BDMREST  EXEC PGM=BDMREST,REGION=3M                               *\n* //STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.LOAD                            *\n* //BRODCAST DD  DSN=SBGOLOB.BRODCAST.COPY,DISP=(NEW,CATLG,DELETE),   *\n* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *\n* //         SPACE=(TRK,(120,30),RLSE),UNIT=SYSDA                     *\n* //BRODDUMP DD  DISP=SHR,DSN=SBGOLOB.BRODCAST.DUMP                   *\n* //SYSPRINT DD  SYSOUT=*                                             *\n*                                                                     *\n*                                                                     *\n*         Changes:                                                    *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM                                            01470\n&NAME    DS    0H                                                        01471\n         ST    R4,SAV4HEX                                                01472\n         STM   R15,R1,HEXSAVE                                            01473\n         LA    R1,&FROM                                                  01474\n         LA    R0,&LEN                                                   01475\n         LA    R15,&TO                                                   01476\n         BAL   R4,HEX                                                    01477\n         L     R4,SAV4HEX                                                01478\n         LM    R15,R1,HEXSAVE                                            01479\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMREST '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)     SAVE REGISTERS\n         LR    R12,R15\n         USING BDMREST,R12,R10,R8  Establish addressability\n         LA    R10,4095(,R12)\n         LA    R10,1(,R10)\n         LA    R8,4095(,R10)\n         LA    R8,1(,R8)\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         SPACE 1\nDOBROD   OPEN  (BRODCAST,(OUTPUT))\n         OPEN  (BRODDUMP,(INPUT))\n         OPEN  (SYSPRINT,(OUTPUT))\n         BAL   R9,HEADREAD         READ HEADER RECORD OF BDMDUMP FILE\n*                                  AND EXTRACT ESSENTIAL DATASET INFO\n*                                  FOR THE RESTORE.................\n         L     R11,HIGHVAL         SAVE TOTAL RECORD COUNT\n         CVD   R11,CVDWORK         CONVERT TO DECIMAL\n         MVC   STORNUM1,CVDWORK    STORE AWAY FOR REPORTING\n         BCTR  R11,0               LOWER BY HEADREAD WRITE\n         BAL   R9,OUTHEADR         WRITE SYSPRINT HEADER\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO LOAD ALL THE BRODCAST RECORDS.             --- *\n* ------------------------------------------------------------------ *\nLOADBRD  DS    0H                  READ THROUGH USERID RECORDS\n         GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP\n         L     R7,RECONTRK         INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,RECONTRK           COUNT\n         L     R7,NUMBREC          INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,NUMBREC            COUNT\n*  DELETED USER MESSAGE RECORDS X'FF' IN THE KEY FIELD, HAVE\n*  TO HAVE THE \"R\" PART OF THE RECORD'S TTR OR CCHHR INSERTED\n*  INTO THE FIRST DATA BYTE OF THE RECORD.  IF THIS IS NOT\n*  DONE, THE TSO SEND COMMAND GOES HAYWIRE.  FOR THIS REASON,\n*  WHEN COPYING SYS1.BRODCAST BETWEEN TWO DIFFERENT DEVICE\n*  TYPES, THIS VALUE HAS TO BE FILLED IN FOR THE CURRENT\n*  DEVICE TYPE, OTHERWISE IT WILL GO OUT OF SYNCHRONIZATION.\n         CLI   INREC,X'FF'         IS THIS A DELETED RECORD?\n         BNE   GOWRITE             NO, DON'T HAVE TO PUT REC #\n         MVC   INREC+1(1),RECONTRK+3   MOVE IN RECORD NUMBER\nGOWRITE  DS    0H\n         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E\n         C     R15,=F'8'           CHECK IF END OF EXTENT\n         BNE   GOSKIP1             NO. TRY IF END OF TRACK\n         MVI   EOJFLAG,X'FF'       YES. INDICATE PRELIM END.\n         B     ENDCHECK            FINISH PREMATURELY BUT CHECK WRITE\nGOSKIP1  C     R15,=F'4'           CHECK IF END OF TRACK\n         BNE   GOCHECK             NO. STILL IN MID OF TRACK\n         CVD   R7,CVDWORK          CONVERT LAST TRACK NUMBER\n         CP    STORNUM2,=P'0'      NONZERO NUMBER?\n         BNE   GOSKIP2             YES. ONLY DO IT ONCE\n         MVC   STORNUM2,CVDWORK    STORE IT AWAY\nGOSKIP2  XR    R7,R7               ZERO REGISTER\n         ST    R7,RECONTRK         RE-INITIALIZE REC/TRK\nGOCHECK  DS    0H\n         CHECK MDLDECB\n         BCT   R11,LOADBRD         CYCLE THROUGH ALL RECORDS\n         B     EOJ\n* ------------------------------------------------------------------ *\nENDCHECK DS    0H                  CHECK last record written.\n         CHECK MDLDECB\nEOJ      DS    0H                  BYE.\n         L     R7,NUMBREC          REPORT NUMBER OF RECORDS\n         CVD   R7,CVDWORK            WHICH WERE ACTUALLY\n         MVC   STORNUM3,CVDWORK        LOADED.\n* -- >\n         CLC   STORNUM3,STORNUM1   Was it exact?\n         BNE   PRELMEND            No. Real preliminary end.\n         MVI   EOJFLAG,X'00'       Actually OK.  Mark normal end.\nPRELMEND DS    0H\n* -- >\n         BAL   R9,FINALRPT         Print the final report\n         CLI   EOJFLAG,X'FF'       Abnormal end ?\n         BNE   EOJGO1              No. Print that it's normal.\n         BAL   R9,EOJPREL          Yes. Print diagnostics.\n         B     EOJGO2\nEOJGO1   DS    0H                  Normal end.\n         BAL   R9,EOJNORM          Put out message for normal.\nEOJGO2   DS    0H\n         CLI   EOJFLAG,X'FF'       Preliminary end of load ?\n         BNE   EOJGO2A             No. Set RC = 0\n         LA    R5,8                Yes. Set RC = 8 and save in R5.\n         B     EOJGO2B\nEOJGO2A  DS    0H\n         LA    R5,0                Save RC in R5 past FREEMAIN.\nEOJGO2B  DS    0H\n         CLOSE (BRODCAST)\n         CLOSE (BRODDUMP)\n         CLOSE (SYSPRINT)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\nEOJGO3   DS    0H\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\nEOJN     BR    R14\n         LTORG\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n*\nHEADREAD GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP\n         L     R7,=F'1'            SHOW IT'S THE FIRST\n         ST    R7,RECONTRK           RECORD IN THE TRACK\n         SPACE\n         LA    R3,INREC+1          INFO THAT SHOULD BE ON HEADER\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   HIGHVAL(4),R1RECNUM  SAVE NUMBER OF RECDS IN BRODCAST\n         L     R7,NUMBREC          INCREMENT\n         LA    R7,1(,R7)            THE\n         ST    R7,NUMBREC            COUNT\n         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E\n         CHECK MDLDECB\n         DROP  R3\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *\n*   OF THE PROGRAM EXECUTION.                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nOUTHEADR DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,TITLINE\n         PUT   SYSPRINT,CPYRLINE\n         PUT   SYSPRINT,REPTLN01\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+19(49),SYSMSG01     PUT OUT DOC\n         PUT   SYSPRINT,OUTLINE             INSTRUCTIONS.\n         MVC   OUTLINE+19(49),SYSMSG02     (A BUNCH OF LINES)\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG03\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG04\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG05\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG06\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG07\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE+19(49),SYSMSG08\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,\n         PUT   SYSPRINT,OUTLINE            PREPARING FOR\n         BR    R9                          FINAL REPORT.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    NORMAL END OF JOB.  ALL RECORDS LOADED PROPERLY.             *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEOJNORM  DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG15      PUT OUT NORMAL EOJ\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE            MESSAGE.\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    ABNORMAL END.  PROBABLY NOT ENOUGH PRIMARY SPACE ALLOCATED   *\n*    TO FIT IN ALL THE RECORDS FROM THE COPIED SYS1.BRODCAST,     *\n*    INTO THE FIRST EXTENT.  THIS CODE REPORTS ON HOW MANY        *\n*    RECORDS WERE ACTUALLY LOADED, AND ON EXACTLY HOW MANY        *\n*    TRACKS HAVE TO BE ALLOCATED IN THE FIRST EXTENT, SO THE      *\n*    COPY WILL BE ABLE TO FUNCTION AS A NEW SYS1.BRODCAST         *\n*    DATASET.                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEOJPREL  DS    0H                     PUT OUT 'SPACE' MESSAGES\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         MVC   OUTLINE+9(49),SYSMSG16    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG17    MOVE MESSAGE TEXT\n         OI    STORNUM4+7,X'0F'          MOVE IN REQUIRED\n         UNPK  OUTLINE+40(8),STORNUM4      NUMBER OF TRACKS\n         BAL   R5,STRIPZ1                STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG18    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE+9(49),SYSMSG20    MOVE MESSAGE TEXT\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         PUT   SYSPRINT,OUTLINE          PRINT OUT\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    REPORT STATISTICS ON NUMBER OF RECORDS EXPECTED, NUMBER OF   *\n*    RECORDS ACTUALLY LOADED, NUMBER OF RECORDS PER TRACK, THAT   *\n*    WERE DETERMINED FOR THIS DEVICE TYPE, AND ACTUAL NUMBER OF   *\n*    TRACKS ON THIS DEVICE WHICH WERE NEEDED TO ACCOMMODATE ALL   *\n*    THE RECORDS FROM THE COPIED SYS1.BRODCAST DATASET.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFINALRPT DS    0H\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),THRLINE          SKIP 3\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG11      NUMBER OF RECORDS\n         OI    STORNUM1+7,X'0F'              EXPECTED\n         UNPK  OUTLINE+62(8),STORNUM1\n         BAL   R5,STRIPZ                   REMOVE LEADING ZROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG12      NUMBER OF RECORDS\n         OI    STORNUM3+7,X'0F'              ACTUALLY LOADED\n         UNPK  OUTLINE+62(8),STORNUM3\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG13      NUMBER OF RECORDS\n         OI    STORNUM2+7,X'0F'              THAT FIT ONTO ONE\n         UNPK  OUTLINE+62(8),STORNUM2          TRACK.\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT LINE\n         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE\n         MVC   OUTLINE(1),TWOLINE          SKIP 2\n         MVC   OUTLINE+9(49),SYSMSG14      NUMBER OF TRACKS\n         MVC   STORWRK1(4),=X'00000000'    CLEAR UPPER ORDER OF BIG #\n         MVC   STORWRK1+4(8),STORNUM1      LOAD SMALL # INTO BIG #\n         DP    STORWRK1+3(9),STORNUM2+5(3)   TO BE ALLOCATED\n         MVC   STORNUM4+3(5),STORWRK1+4        SO THAT ALL\n         MVC   STORNUM5+5(3),STORWRK1+9          RECORDS FIT\n         CP    STORNUM5,=P'0'                      EXACTLY.\n         BE    FINOADD                     CALCULATE NUMBER.\n         AP    STORNUM4,=P'1'\nFINOADD  MVC   OUTLINE+9(49),SYSMSG14\n         OI    STORNUM4+7,X'0F'\n         UNPK  OUTLINE+62(8),STORNUM4      REPORT THE NUMBER.\n         BAL   R5,STRIPZ                   STRIP LEADING ZEROS\n         PUT   SYSPRINT,OUTLINE            PUT OUT RECORD\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   ROUTINE TO STRIP LEADING ZEROS.  I'M DOING THIS TO AVOID A    *\n*   POSSIBLE OCCASION FOR A S0C7, WHICH CAN HAPPEN WHEN YOU DO    *\n*   AN ED INSTRUCTION THAT FAILS. UNPK DOESN'T HAVE THIS PROBLEM. *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSTRIPZ1  DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+40\n         B     STRIPZL\nSTRIPZ   DS    0H\n         LA    R11,7\n         LA    R4,OUTLINE+62\nSTRIPZL  CLC   0(1,R4),=C'0'\n         BNE   STRIPZE\n         MVI   0(R4),X'40'\n         LA    R4,1(,R4)\n         BCT   R11,STRIPZL\nSTRIPZE  BR    R5\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                                                        04224\n         MVC   1(1,R15),0(R1)        Move byte                           04225\n         UNPK  0(3,R15),1(2,R15)     Unpack                              04226\n         TR    0(2,R15),HEXTAB-240                                       04227\n         LA    R15,2(,R15)           Increment output pointer            04228\n         LA    R1,1(,R1)             Increment input pointer             04229\n         BCT   R0,HEX                Decrement length, then loop         04230\n         MVI   0(R15),C' '           Blank the trailing byte             04231\n         BR    R4                    Return to caller                    04232\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n         SPACE                                                           04234\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   LEVEL(7),BLANKS\n         MVI   OUTLINE-1,C' '        INITIALIZE BLANK\n         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA\n         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT\n         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER\n         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA\n         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA\n         MVI   RC15,X'00'            RETURN CODE AREA\n         MVI   EOJFLAG,X'00'\n         ZAP   STORNUM1,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM2,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM3,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM4,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM5,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM6,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM7,=P'0'        INITIALIZE PACKED FIELDS\n         ZAP   STORNUM8,=P'0'        INITIALIZE PACKED FIELDS\n         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nZERRECX  DS    0CL130\n         DC    130X'00'\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nNEWPAGE  DC    C'1'\nNEXTLIN  DC    C' '\nTWOLINE  DC    C'0'\nTHRLINE  DC    C'-'\nNOLINE   DC    C'+'\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Restore Program '\n         DC    C' ---'\n         DC    CL68' '\n*--------------------------------------------------------------------*\nSYSMSG01 DC    C'This program creates a copy of the BRODCAST      '\nSYSMSG02 DC    C'dataset from a BDMDUMP file, which had originally'\nSYSMSG03 DC    C'been created from a BRODCAST dataset or a copy.  '\nSYSMSG04 DC    C'The restored dataset must reside in one extent.  '\nSYSMSG05 DC    C'This program can restore BRODCAST across device  '\nSYSMSG06 DC    C'types of different geometry, and will report on  '\nSYSMSG07 DC    C'how many tracks exactly, should be used for the  '\nSYSMSG08 DC    C'allocation of the output dataset.                '\nSYSMSG09 DC    C'                                                 '\nSYSMSG10 DC    C'                                                 '\nSYSMSG1A DC    C'                                                 '\n*\nSYSMSG11 DC    C'Expected Number of Records in Copy, from Header :'\nSYSMSG12 DC    C'Number of Records Actually Loaded into the Copy :'\nSYSMSG13 DC    C'Number of Records per Track for this Device Type:'\nSYSMSG14 DC    C'Expected Number of Tracks to be Allocated       :'\nSYSMSG15 DC    C'  Loading Action Completed Successfully .        '\nSYSMSG16 DC    C'Loading Interrupted Unexpectedly....             '\nSYSMSG17 DC    C'Please rerun, and allocate                tracks '\nSYSMSG18 DC    C' in a single extent.                             '\nSYSMSG20 DC    C'WARNING - Output BRODCAST dataset is not usable !'\nMASK4    DC    XL4'40202120'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=PS,           SEQUENTIAL....                      X\n               MACRF=(WL),         LOAD OF BDAM FILE                   X\n               RECFM=F,            FIXED LENGTH                        X\n               KEYLEN=1            SIZE OF KEY\nBRODDUMP DCB   DSORG=PS,DDNAME=BRODDUMP,MACRF=GM,EODAD=EOJ,            X\n               RECFM=FB,LRECL=130\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\n         SPACE 3\n         LTORG\n         SPACE\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nHIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST\nNUMBREC  DS    F                   COUNT OF RECORDS LOADED\nRECONTRK DS    F                   COUNT RECORDS ON THIS TRACK\nRC15     DS    C                   STORE RETURN CODE FROM WRITE\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\n         DS    0F                  ALIGN ON FULLWORD\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\nINHDR    DS    CL130\n         DS    XL2\nINREC    DS    CL130\n         DS    0F\nWRTWR    WRITE MDLDECB,SF,MF=L\nWRTWREND DS    0F\nWRTWRLEN EQU   *-WRTWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nEOJFLAG  DS    X\n         DS    CL1\nOUTLINE  DS    CL133\n         DS    CL9                 FILLER\n         DS    0D\nCVDWORK  DS    D\nSTORNUM1 DS    PL8\nSTORNUM2 DS    PL8\nSTORNUM3 DS    PL8\nSTORNUM4 DS    PL8\nSTORNUM5 DS    PL8\nSTORNUM6 DS    PL8\nSTORNUM7 DS    PL8\nSTORNUM8 DS    PL8\nSTORWRK1 DS    PL12\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMSCAN": {"ttr": 11015, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x06\\x00\\x95\\x14\\x8f\\x01\\x16&\\x9f\\x156\\x0b\\xe5\\x03\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-28T00:00:00", "modifydate": "2016-09-25T15:36:06", "lines": 3045, "newlines": 798, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMSCAN  TITLE 'ANALYZE SYS1.BRODCAST DATASET'\n*------------------------------------------------------------------*\n*\n*          B D M S C A N   ( Scan BROADCAST )   Version  1.4.0B\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program analyzes the TSO Broadcast dataset.  It\n*        displays the number of available blocks and how they\n*        are used.  It also displays the TSO users who have\n*        messages waiting.  In addition it also does a validity\n*        check on records which are in the message pool to assure\n*        they are chained off of a user record.  According to\n*        documentation, instances occur which can result in these\n*        garbage records existing.\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*        RECORD TYPES in the BRODCAST Dataset:\n*\n*        The six record types and their keys are:\n*\n*        X'00'     BRODCAST 'NOTICES' Directory Record.\n*\n*        X'01'     User 'MAIL' Directory Record.\n*\n*        X'02'     BRODCAST 'NOTICES' Message Record.\n*\n*        X'03'     User 'MAIL' Message Record.\n*\n*        X'04'     Header Record of BRODCAST Dataset.\n*\n*        X'05'     RBA Address of First Record usable for a message.\n*\n*        X'FF'     Dummy Inactive 'MAIL' Message Record.\n*                   (First byte if data in this type must contain\n*                    the \"R\" value of CCHHR or TTR.  This is the\n*                    record number within the track, starting\n*                    from X'01' and going up to the maximum\n*                    number of BRODCAST records that fit into\n*                    a track (device dependent).)\n*\n*                  Examples:  max is X'32' for 3390s\n*                             max is X'35' for 3380s\n*                             max is X'30' for 3350s\n*\n*                  So, if you copy the BRODCAST dataset across\n*                  device types, you have to reset these numbers\n*                  to the correct \"R\" value for the CCHHR or TTR.\n*\n*        The 'BDAM' Access Method reads these records looking\n*        at the (one byte) key separately, and the (129 byte)\n*        data separately.\n*\n*\n*        JCL TO INVOKE:\n*\n*            //BRODCAST EXEC PGM=BDMSCAN,REGION=2M\n*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --\n*            //BRODMAP  DD  SYSOUT=A,DCB=BLKSIZE=133\n*            //BRODPRNT DD  SYSOUT=A\n*            //BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR\n*\n* INSTALLED:  30 Mar 95\n*\n* CHANGE LOG:\n*    05 Sep 2005 - Corrected CLOSE macro for closing DCBs that\n*                  are in the BDMPRINT program.\n*\n*    09 Aug 2005 - Added BDMPRINT program instead of the snap of\n*                  the Header record area.  With the BDMPRINT\n*                  program you can intelligently look at, and\n*                  format, any BRODCAST record.\n*\n*    17 Aug 2005 - Create an Incore Notices Directory Table which\n*                  can be interrogated by the program instead of\n*                  accessing the BRODCAST dataset directly.  The\n*                  BDMPRINT program needs this information to\n*                  determine both: if a notice message is active,\n*                  and, what the notice number is, for OPER SEND.\n*\n*                  When this table exists, its start address is\n*                  passed to BDMPRINT as the third parameter.  If\n*                  this table does not exist yet, as when reading\n*                  the header record for the first time, an address\n*                  of F'0' is passed to BDMPRINT as the third\n*                  parameter.  BDMPRINT can tell the difference.\n*\n*    21 Aug 2005 - Create a new report with DD name BRODUSER which\n*                  prints the Userid message chains.\n*\n*                  Protection of outputs if a DD name (other than\n*                  BRODMAP) is missing.  You can now eliminate\n*                  the BRODPRNT and/or BRODUSER reports by leaving\n*                  out either or both DD name(s) from the JCL.\n*\n*------------------------------------------------------------------*\n*\n*    Parameter list to call  BDMPRINT\n*\n*       0(R1)  -   Fullword containing 3-byte current RBA in low\n*                  order part of the fullword.\n*       4(R1)  -   130 byte area containing key+data of current\n*                  record being printed and formatted.\n*       8(R1)  -   Incore Notice Directory Table - address of\n*                  its beginning.  Zero if not EXECMODE=X'02'\n*      12(R1)  -   Address of Userid if EXECMODE=X'04'\n*      16(R1)  -   DDNFLAG   - which DD names are OPEN\n*      17(R1)  -   EXECMODE  - which part of the program is\n*                              calling BDMPRINT\n*      18(R1)  -   FFACTREC  - actual record number on track\n*      19(R1)  -   FFMRKREC  - marked record number in X'FF' record\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*        BELOW IS A PICTORIAL VIEW OF THE BROADCAST WHICH SHOULD\n*        HELP ONE TO BE ABLE TO NAVIGATE IT SUCCESSFULLY.\n*\n*            S Y S 1 . B R O D C A S T\n*  ===============================================================\n*  =                                                             =\n*  =   *--*--------*---------*----------------------------*---*  =\n*  =   *04*        * R1USPTR *  'SYS1.BRODCAST DATA SET'  *   *  =\n*  =   *--*--------*-----+---*----------------------------*---*  =\n*  =                     +                                       =\n*  =    ++++++++++++++++++                                       =\n*  =    +     1ST USER MAIL DIRECTORY RECORD  (EACH USERID       =\n*  =    +       ENTRY CONSISTS OF A 13 BYTE AREA; THE USERID,    =\n*  =    +       NEXT RBA POINTER AND ENDING RBA POINTER.         =\n*  =    +                                                        =\n*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =\n*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* RBA *      =\n*  =   *--*-------*---*----* /// *------*---*----*--*--+--*      =\n*  =                                                   +         =\n*  =    +++++++++++++++++++++++++++++++ //// +++++++++++         =\n*  =    +                                                        =\n*  =    +    LAST USER MAIL DIRECTORY RECORD                     =\n*  =    +                                                        =\n*  =    +    NOTE: '000' ENDS THE CHAIN OF X'01' RECORDS.        =\n*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =\n*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* 000 *      =\n*  =   *--*-------*---*----* /// *------*-+-*-+--*--*--+--*      =\n*  =                                      +   +                  =\n*  =    +++++++++++++++++++++++++++++++++++   +++++++++++++++++  =\n*  =    +                                                     +  =\n*  =    +     1ST MESSAGE RECORD FOR USER                     +  =\n*  =   *--*-----------------------------------------*-----*   +  =\n*  =   *03*                                         * RBA *   +  =\n*  =   *--*-----------------------------------------*--+--*   +  =\n*  =                                                   +      +  =\n*  =    ++++++++++++++++++++++++++ //// ++++++++++++++++      +  =\n*  =    +                                                     +  =\n*  =    +++++++++++++++++++++++++++++++++++++++++++++++++++++++  =\n*  =    ++    LAST MESSAGE RECORD FOR USER                       =\n*  =    ++   NOTE: '000' ENDS THE CHAIN OF X'03' RECORDS.        =\n*  =   *--*-----------------------------------------*-----*      =\n*  =   *03*                                         * 000 *      =\n*  =   *--*-----------------------------------------*-----*      =\n*  =                                                             =\n*  =             FREE  SPACE                                     =\n*  =   *--*-----------------------------------------------*      =\n*  =   *FF*                                               *      =\n*  =   *--*-----------------------------------------------*      =\n*  =                                                             =\n*  ===============================================================\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1            RESERVED\nR1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE\n*                               NOTICE TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT303   &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                  USED BY O.S.\nR1       EQU   1                  ADDR OF PARM LIST\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9                   PTR TO OUTPUT LINE FOR PUT\nR10      EQU   10                  BAL REGISTER\nR11      EQU   11\nR12      EQU   12                  BASE REGISTER\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMSCAN '\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R5,R1               Save PARM address\n         LR    R12,R15             Load entry address\n         USING BDMSCAN,R12,R11,R8  Establish addressability\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R8,4095(,R11)\n         LA    R8,1(,R8)\n         LR    R15,R13             Save caller's save address\n         LA    R13,SAVE            Get our savearea address\n         ST    R15,SAVE+4          Save off into low save\n         ST    R13,8(,R15)         Chain mine back\n         ST    R5,PARMSAVE         Store PARM address for reloading\n         XR    R9,R9               For possible debug purposes\n         XR    R10,R10             For possible debug purposes\nINITPGM  DS    0H\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         MVI   LINE-1,X'40'\n         MVI   BLANK44-1,X'40'     Initialize Blanks area\n         MVC   BLANK44(44),BLANK44-1\n         L     R0,=V(BDMPRINT)     Get BDMPRINT program entry point\n         ST    R0,BDMPRPGM         Store it for future use\n         L     R0,=V(BRODPRNT)     Get BRODPRNT DCB address\n         ST    R0,BRODPDCB         Store it for future use\n         L     R0,=V(BRODUSER)     Get BRODUSER DCB address\n         ST    R0,BRODUDCB         Store it for future use\n         SPACE\n         L     R1,PARMSAVE         Reload PARM address\n         L     R1,0(,R1)           See if PARM was coded\n         MVC   PWKAREA(3),2(R1)    Uppercase the parm for 3 bytes\n         OC    PWKAREA(3),BLANK44\n         CLC   =C'ALL',PWKAREA     Was ALL coded?\n         BNE   TIOTSCAN            No. Don't flip flag\n         OI    ALLPRINT,X'01'      Yes. Let the program know.\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  BRODPRNT, BRODUSER, SYSIN        06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n* --   DD NAME  -  IF THIS DD NAME IS PRESENT, THEN AS FOLLOWS   -- *    06227\n* --                                                             -- *    06227\n* --                  BRODPRNT  -  DDNFLAG = X'01'               -- *    06227\n* --                  BRODUSER  -  DDNFLAG = X'02'               -- *    06227\n* --                  SYSIN     -  DDNFLAG = X'04'               -- *    06227\n* --                  BRODCAST  -  DDNFLAG = X'08'               -- *    06227\n* --                  BRODMAP   -  DDNFLAG = X'10'               -- *    06227\n* ----------------------------------------------------------------- *    06227\n         MVI   DDNFLAG,X'00'        INITIALIZE FLAG\n* ----------------------------------------------------------------- *    06227\n         ST    R3,SAVER3\n         ST    R5,SAVER5\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),BRODPRNC     BRODPRNT DDNAME THERE?               06235\n         BNE   TIOTPRTN       NO                                         06236\n         OI    DDNFLAG,X'01'        SHOW PRESENCE OF BRODPRNT DD         06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTPRTN CLC   4(8,R5),BRODUSRC                                          06239\n         BNE   TIOTUSRN                                                  06240\n         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BRODUSER DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTUSRN CLC   4(8,R5),SYSINC                                            06239\n         BNE   TIOTBRCN                                                  06240\n         OI    DDNFLAG,X'04'        SHOW PRESENCE OF SYSIN    DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTBRCN CLC   4(8,R5),BRODCASC                                          06239\n         BNE   TIOTBRMN                                                  06240\n         OI    DDNFLAG,X'08'        SHOW PRESENCE OF BRODCAST DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTBRMN CLC   4(8,R5),BRODMAPC                                          06239\n         BNE   TIOTNEXT                                                  06240\n         OI    DDNFLAG,X'10'        SHOW PRESENCE OF BRODMAP  DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3\n         L     R5,SAVER5\n         B     CHECKDDS             BRANCH PAST CONSTANTS\n* -------------------------------------------------------- *\n* --   CONSTANTS   --                                   -- *\n* -------------------------------------------------------- *\nBRODPRNC DC    CL8'BRODPRNT'\nBRODUSRC DC    CL8'BRODUSER'\nSYSINC   DC    CL8'SYSIN   '\nBRODCASC DC    CL8'BRODCAST'\nBRODMAPC DC    CL8'BRODMAP '\n* -------------------------------------------------------- *\n*   Before trying the OPEN of the Required DD names,       *\n*   check to make sure they were coded in the JCL first.   *\n* -------------------------------------------------------- *\nCHECKDDS DS    0H\n         TM    DDNFLAG,X'18'     Both BRODCAST and BRODMAP DDs here?\n         BO    OPEN              Yes, then OPEN both files and proceed.\n* ----------------------------   No. Then messages, and RC=16.\n         TM    DDNFLAG,X'08'        BRODCAST there?\n         BO    BCASTIN              Yes. Try BRODMAP too.\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC10E     BRODCAST DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nBCASTIN  DS    0H\n         TM    DDNFLAG,X'10'        BRODMAP there?\n         BO    BMAPISIN             Yes. But RC = 16.\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC10E     BRODMAP  DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nBMAPISIN DS    0H\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC07I     BRODCAST and BRODMAP are      ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC07I      both Required DD Names....   ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC07I     BRODPRNT and BRODUSER are     ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC07I      both Optional DD Names....   ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ16                End right away.  Code 16.\n* -------------------------------------------------------- *\n*   OPEN files and print title lines in BRODPRNT report.   *\n* -------------------------------------------------------- *\n*     The BRODPRNT DCB is in the BDMPRINT program, but     *\n*     it is OPENed and CLOSEd by this program.             *\n* -------------------------------------------------------- *\nOPEN     DS    0H\n         TM    DDNFLAG,X'01'\n         BO    NOPRTMSG\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC06I     BRODPRNT DD Name is Optional..',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNOPRTMSG DS    0H\n         TM    DDNFLAG,X'02'\n         BO    NOUSRMSG\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC06I     BRODUSER DD Name is Optional..',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNOUSRMSG DS    0H\n         OPEN  (BRODCAST,(INPUT))\n         OPEN  (BRODMAP,(OUTPUT))\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n* ---- >>>>>>\n* --               OPEN the BRODPRNT DCB    -    below\n* --\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT001\n         ST    R6,SAVER6          SAVE R6 for OPEN purposes.\n         L     R6,BRODPDCB        Get DCB address from BDMPRINT program\n         OPEN  ((6),OUTPUT)       OPEN it.\n         MVC   LINE,LINE-1        Print title lines to that report.\n         PUT   (6),TITLINE\n         MVC   LINE,LINE-1\n         PUT   (6),CPYRLINE\n         MVC   LINE(133),REPTLN02\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         L     R6,SAVER6          Restore R6 for later use.\nNOPRT001 DS    0H\n* --\n* --               OPEN the BRODPRNT DCB    -    above\n* ---- >>>>>>\n* ---- >>>>>>\n* --               OPEN the BRODUSER DCB    -    below\n* --\n         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?\n         BZ    NOBRDUSR\n         ST    R6,SAVER6          SAVE R6 for OPEN purposes.\n         L     R6,BRODUDCB        Get DCB address from BDMPRINT program\n         OPEN  ((6),OUTPUT)       OPEN it.\n         MVC   LINE,LINE-1        Print title lines to that report.\n         PUT   (6),TITLINE\n         MVC   LINE,LINE-1\n         PUT   (6),CPYRLINE\n         MVC   LINE(133),REPTUL02\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         L     R6,SAVER6          Restore R6 for later use.\nNOBRDUSR DS    0H\n* --\n* --               OPEN the BRODUSER DCB    -    above\n* ---- >>>>>>\n         SPACE\n*--------------------------------------------------------------------*\n*        GET THE HEADER RECORD.  THIS IS A SPECIAL RECORD 1.\n*--------------------------------------------------------------------*\n         SPACE\n         READ  HDRECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK HDRECB\n         L     R2,HDRECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,HDRECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,BLOCKNO        Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         LA    R0,0                Third parameter address is a dummy,\n         ST    R0,8(,R1)           because the ND table isn't there yet\n         LA    R0,0                Fourth parameter address is a dummy,\n         ST    R0,12(,R1)          because no USERID is being passed.\n         LA    R0,DDNFLAG          EXECMODE flag is one after this\n         MVI   EXECMODE,X'01'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\n         USING R1BC,R3             Addressability to Record 1 Mapping\n         SPACE\n         AP    REC04,=P'1'         Add 1 to total                JDM0\n         MVC   SAVERBA(3),R1USPTR  Save RBA 1ST Mail Directory Record\n         MVC   HIGHVAL(4),R1RECNUM Save get out value\n         MVC   SAVHDADR(4),R1RECNUM Save get out value\n         MVC   NOTEDRBA(3),R1BCPTR  Save Notify Directory Address\n         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA\n         MVC   INCORGEN(4),R1GENNUM Save Incore Notices Table Gen Numbr\n         MVC   NUMNOTCS(2),R1BCMAX  Number of Notice message records\n         L     R5,HIGHVAL          Get number for printout\n         CVD   R5,CVDAREA          Convert it to printable\n         MVC   MAXCNT,MASK10       Move in the mask\n         ED    MAXCNT,CVDAREA+3    Make it pretty\n         LA    R9,TITLINE          Title line\n         BAL   R10,PRINT           Print it\n         LA    R9,CPYRLINE         Copyright line\n         BAL   R10,PRINT           Print it\n         LA    R9,REPTLN01         Line with name of report\n         BAL   R10,PRINT           Print it\n         MVC   DSNAMEN(44),JFCBDSNM\n         LA    R9,DSNAMET\n         BAL   R10,PRINT\n         MVC   DSVOLSN(6),JFCBVOLS\n         LA    R9,DSVOLST\n         BAL   R10,PRINT\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R9,LINE\n         BAL   R10,PRINT\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R9,LINE\n         BAL   R10,PRINT\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         LA    R9,MAXIMUM          Total blocks line\n         BAL   R10,PRINT           Print and tell how many\n         SPACE\n         LH    R5,R1BCMAX          Get number of notices from header\n         XR    R4,R4               Clear R4 to divide by 25\n         D     R4,=F'25'           Number if blocks for directory\n         AH    R5,R1BCMAX          Add total for Notices & directory\n         DROP  R3\n         LTR   R4,R4               Is there a remainder?\n         BZ    CVDNOT              No. Don't add.\n         LA    R5,1(,R5)           Yes, add one.\nCVDNOT   DS    0H\n         CVD   R5,CVDAREA          Convert block total to printable\n         MVC   NOTCNT,MASK10       Move in mask\n         ED    NOTCNT,CVDAREA+3    Make it pretty\n         LA    R9,NOTICES          Point to line to print\n         BAL   R10,PRINT           And print the line.\n         SPACE\n         FREEDBUF HDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         SPACE\n* ------------ >  Do a run through Notices Directory records - below\n* ------------------------------------------------------------------- *\nNDTABLE  DS    0H                  Run through the Notices directory\n*                                   records and create an incore table\n*                                   of the entries.\n* ------------------------------------------------------------------- *\n         STM   R4,R5,SAVRG45       Save work registers\n         XR    R4,R4               Zero R4\n         XR    R5,R5               Zero R5\n         ICM   R5,3,NUMNOTCS       Insert number of Notice entries\n         M     R4,=F'5'            Multiply by 5 bytes per entry\n         A     R5,=F'15'           Add 15 for NDHDR, NDTLR, one extra.\n         A     R5,=F'125'          Account for almost empty record.\n         LR    R0,R5               Dump this quantity into R0\n         LM    R4,R5,SAVRG45       Restore work registers\n         ST    R0,NOTGTSIZ         Store quantity of bytes in table\n         L     R0,NOTGTSIZ         Load it back into R0 for GETMAIN\n         GETMAIN RU,LV=(0),LOC=BELOW\n         ST    R1,NOTETBLA         Save address of GETMAINed storage\n         L     R1,NOTETBLA         Get it back for us to use now.\n         MVC   0(5,R1),=C'NDHDR'   Put in the table header\n         LA    R1,5(,R1)           Bump past header.\n         ST    R1,CURNOTBL         Save address of start of real data.\nMAKNOTBL DS    0H\n         READ  NDRECB,             ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               NOTEDRBA            RBA TO HOLD THE KEY\n         SPACE\n         CHECK NDRECB\n         L     R2,NDRECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,NDRECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         L     R1,CURNOTBL         Get (moving) address to begin\n         MVC   0(125,R1),RECHOLD   Move all the table entries there\n         LA    R1,125(,R1)         Bump the current table address\n         ST    R1,CURNOTBL         And store it away for next read.\n         CLC   RECHOLD+126(3),=X'000000'  Last Notice directory record?\n         BE    ENDNOTBL            Yes, go end up the table.\n         MVC   NOTEDRBA(3),RECHOLD+126    Update to RBA of next record\n         FREEDBUF NDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         B     MAKNOTBL            And do another READ.\nENDNOTBL DS    0H\n         MVC   0(5,R1),=C'NDTLR'   End the GETMAINed table with trailer\n         SPACE\n         FREEDBUF NDRECB,          DECB address used to READ           X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB for PROCESS Dataset\n         SPACE\n* ------------ >  Do a run through Notices Directory records - above\n* ----- >    Analyze Notices Directory Records Table  -  below\nANLNOTBL DS    0H                  Read the Incore Notices Directory.\n         LA    R9,NOTFYOUT         Notify messages information title\n         BAL   R10,PRINT           Print it in summary report\n         L     R7,NOTETBLA         Address of incore Notices directory\n         CLC   =C'NDHDR',0(R7)     Is this the proper header?\n         BNE   ANLNOTBB            No.\nANLNOTBP DS    0H\n         LA    R7,5(,R7)           Bump past header.\n         CLC   =C'NDTLR',0(R7)     Is this the trailer?\n         BE    ANLNOTBE            Yes. Get out if we're at the end.\n         CLC   =X'0000000000',0(R7)  Is this an empty entry?\n         BE    ANLNOTBP            Yes. Just bump past and try again.\nANLNOTBS DS    0H\n         TM    0(R7),X'80'         Is this an unused entry?\n         BZ    ANLACTIV            No. Count it as an active entry.\n         B     ANLINACT            Yes. Count it as unused.\nANLACTIV DS    0H\n         AP    ACTNOT,=P'1'        Count an active entry.\n         B     ANLPROCS            Go do the entry processing.\nANLINACT DS    0H\n         AP    INANOT,=P'1'        Count an inactive entry\nANLPROCS DS    0H                  Directory entry processing.\n         MVC   NOTNUM(2),0(R7)     Copy off the notice number.\n         NI    NOTNUM,X'7F'        Turn off the indicator after copy.\n         MVC   NOTRBA(3),2(R7)     Copy off this notice's RBA.\n         B     ANLNOTBP            Go to the next entry.\nANLNOTBB DS    0H                  If the header is wrong, come here.\n         LA    R9,NDCREERR         Read error message - header missing\n         BAL   R10,PRINT           Print it in summary report\n         B     ANLNOTBZ            Don't print Notices details.\nANLNOTBE DS    0H                  Time to get out and print totals.\n         MVC   ACTNNUM,MASK10      Move mask.\n         ED    ACTNNUM,ACTNOT      Edit total active notices.\n         LA    R9,ACTNOMSG         Point to line to print.\n         BAL   R10,PRINT           Print total active.\n         MVC   INANNUM,MASK10      Move mask.\n         ED    INANNUM,INANOT      Edit total inactive notices.\n         LA    R9,INANOMSG         Point to line to print.\n         BAL   R10,PRINT           Print total inactive.\nANLNOTBZ DS    0H\n         SPACE\n* ----- >    Analyze Notices Directory Records Table  -  above\nSKIPNOTE DS    0H\n         L     R0,SAVHDADR              GET MAXIMUM RECORDS    SG MAY99 005\n         A     R0,=F'1'                 ONE FOR GOOD LUCK      HD DEC97 005\nTYPEGET  GETMAIN RU,LV=(0),LOC=BELOW    GET STORAGE FOR TABLE  HD DEC97 005\n         ST    R1,TYPETBLA              SAVE ADDRESS           HD DEC97 005\n         LR    R0,R1                    SAVE ADDRESS           HD DEC97 005\n         L     R1,SAVHDADR              GET LENGTH             SG MAY99 005\n         LM    R14,R15,=D'0'            CLEAR FOR ICM          HD DEC97 006\n         ICM   R15,B'1000',=X'99'       PAD WITH X'99'         HD DEC97 006\n         MVCL  R0,R14                   CLEAR AREA             HD DEC97 006\n         L     R7,TYPETBLA                                     HD DEC97 006\n         MVI   1(R7),X'04'                                     HD DEC97 006\n         SPACE\n*--------------------------------------------------------------------*\n*        This is now our READ loop as we do a successive READ,\n*        incrementing the RBA number until we reach the BCNUMREC\n*        value saved in 'HIGHVAL'.  Once we have read all the\n*        records, we will go and analyze them.\n*--------------------------------------------------------------------*\n*    BLOCKNO has started with an RBA of X'000000' from the initial   *\n*     READ of the BRODCAST Header record.                            *\n*--------------------------------------------------------------------*\n         SPACE\nREADLOOP DS    0H\n         ICM   R1,7,BLOCKNO        Get RBA processed previously.\n         LA    R1,1(,R1)           Increment by one.\n         STCM  R1,7,BLOCKNO        Store it back for the next READ.\n         CLC   BLOCKNO(3),HIGHVAL+1  Did we reach max?           JDM0\n         BE    ANALYZE             If we've read them all, go analyze.\n         SPACE\n         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK RECECB\n         SPACE\n         L     R2,RECECB+20        Address of Key\n         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see\n         L     R3,RECECB+12        Address of Data\n         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible\n         ST    R2,SAVEKEYA         Save Key Address\n         L     R2,RECECB+16        Point to IOB\n         USING IOBSTDRD,R2\n         MVC   SAVEINF1(8),IOBSEEK Save CCHHR of record\n         DROP  R2\n         L     R2,SAVEKEYA         Restore Key Address\n* --- >    Check X'FF' records if \"R\" in Byte 1 is correct - below\n         CLI   KEYHOLD,X'FF'       Unused Broadcast Record?\n         BNE   PASSYSFF            No. Bypass Byte-1 test.\n         MVC   FFACTREC(1),SAVEINF1+7  Actual \"R\" from CCHHR\n         MVC   FFMRKREC(1),REC130+1    Marked \"R\" from Byte 1 of record\n         CLC   FFACTREC(1),FFMRKREC    Are they the same?\n         BE    PASSGOOD                Yes. Not a bad X'FF' record.\n         AP    BADFREC,=P'1'           No. Count this record as bad.\nPASSGOOD DS    0H\n         B     PASSALLR            Do this only for X'FF' records.\nPASSYSFF DS    0H\n         MVI   FFACTREC,X'00'      Not X'FF' record, then\n         MVI   FFMRKREC,X'00'        zero out these fields.\nPASSALLR DS    0H\n* --- >    Check X'FF' records if \"R\" in Byte 1 is correct - above\n         TM    ALLPRINT,X'01'      Has ALL been coded in the PARM?\n         BO    PRINTALL            Yes, bypass filtering and print all.\n         CLI   KEYHOLD,X'FF'       Is this an unused message record?\n         BE    PRNTSKP1            Yes. Don't print it.\n         CLI   KEYHOLD,X'03'       Is this a used message record?\n         BE    PRNTSKP1            Yes. Don't print it.\nPRINTALL DS    0H\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,BLOCKNO        Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         L     R0,NOTETBLA         Pass incore Notify Directory Table\n         ST    R0,8(,R1)           As third parameter\n         LA    R0,0                Zero out register\n         ST    R0,12(,R1)          Fourth parameter is zero, no USERID\n         LA    R0,DDNFLAG\n         MVI   EXECMODE,X'02'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\nPRNTSKP1 DS    0H                  Enter each record's key into table.\n         MVC   0(1,R7),0(R2)       Store key type into table entry.\n         LA    R7,1(,R7)           Increment table entry to next one.\n         SPACE\n*--------------------------------------------------------------------*\n*        Count the different record types for later reporting.\n*--------------------------------------------------------------------*\n         SPACE\n         CLI   0(R2),X'00'         Is this a NOTICE directory record?\n         BNE   CHK1                No. Try the next type.\n         AP    NOTDIR,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK1     DS    0H\n         CLI   0(R2),X'01'         Is this a USERID directory record?\n         BNE   CHK2                No. Try the next type.\n         AP    USRIND,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK2     DS    0H\n         CLI   0(R2),X'02'         Is this a NOTICES message record?\n         BNE   CHK3                No. Try the next type.\n         AP    NOTMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK3     DS    0H\n         CLI   0(R2),X'03'         Is this a USER message record?\n         BNE   CHK4                No. Try the next type.\n         AP    USRMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nCHK4     DS    0H\n         CLI   0(R2),X'05'         Is this the Free Search Record?\n         BNE   CHKFF               No. Try the next type.\n         AP    PTRMSG,=P'1'        Yes. Add one to total for this type.\n         B     FREEB\n         SPACE 1\nCHKFF    DS    0H\n         CLI   0(R2),X'FF'         Inactive unused USER mail Record?\n         BNE   UNKNOWN             No. Try the next type.\n         AP    FREEREC,=P'1'       Yes. Add one to total for this type.\n         B     FREEB\n         SPACE\nUNKNOWN  DS    0H                         Format any strange key\n         UNPK  ODDKEY+36(3),0(2,R2)       Print hex\n         TR    ODDKEY+36(2),HEXTAB-X'F0'     to\n         MVI   ODDKEY+38,C' '                   display.\n         LA    R9,ODDKEY                  Point to line to print\n         BAL   R10,PRINT\n         SPACE\nFREEB    DS    0H                  Every READ needs a FREEDBUF.         009\n         FREEDBUF RECECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         B     READLOOP            Read another BRODCAST record.\n         SPACE\n*--------------------------------------------------------------------*\n*        NOW, START TO ANALYZE ALL AND PRINT RESULTS TO THE REPORT.\n*--------------------------------------------------------------------*\n         SPACE\nANALYZE  DS    0H\n         LA    R9,BREAKOUT         Key breakout information title\n         BAL   R10,PRINT           PUT OUT THE SECTION HEADER\n         SPACE\n         MVC   KEYTYPE,TYPE04      MOVE IN DESCRIPTION           JDM0\n         MVC   KEYCNT,MASK10                                     JDM0\n         ED    KEYCNT,REC04                                      JDM0\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM0\n         BAL   R10,PRINT                                         JDM0\n         SPACE 1                                                 JDM0\n         MVC   KEYTYPE,TYPE00      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,NOTDIR\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE02      MOVE IN DESCRITPION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,NOTMSG\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE01      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,USRIND\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE03      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,USRMSG\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,TYPE05      MOVE IN DESCRIPTION           JDM1\n         MVC   KEYCNT,MASK10                                     JDM1\n         ED    KEYCNT,PTRMSG                                     JDM1\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM1\n         BAL   R10,PRINT                                         JDM1\n         SPACE 1                                                 JDM1\n         MVC   KEYTYPE,TYPEFF      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,FREEREC\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         MVC   KEYTYPE,BADRFF      MOVE IN DESCRIPTION\n         MVC   KEYCNT,MASK10\n         ED    KEYCNT,BADFREC\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n         CP    BADFREC,=P'0'\n         BE    NOERRPRT\n         MVC   LINE,LINE-1\n         LA    R9,LINE\n         BAL   R10,PRINT\n         MVC   KEYTYPE(51),BADRMSG     MOVE IN DESCRIPTION\n         MVC   KEYCNT+1(44),BLANK44\n         MVC   KEYCNT+3(6),=C'<<<<<<'\n         MVC   KEYCOUNT+2(6),=C'>>>>>>'\n         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         MVC   LINE,LINE-1\n         LA    R9,LINE\n         BAL   R10,PRINT\nNOERRPRT DS    0H\n         LA    R9,USERSOUT         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         LA    R9,USERDASH\n         BAL   R10,PRINT\n         SPACE\n*--------------------------------------------------------------------*\n*     In MVS, there is a change from having 12 Userids per block     *\n*     to 9 per block.                                                *\n*--------------------------------------------------------------------*\n         SPACE\n* ------------------------------------------------------------------- *\nINDEXLP  DS    0H               Loop through Userids and run          *\n*                               the chains of messages, to see        *\n*                               which Userids have messages           *\n*                               outstanding, and how many.            *\n* ------------------------------------------------------------------- *\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA\n         SPACE\n         READ  SCNECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO             RBA TO HOLD THE KEY\n         SPACE\n         CHECK SCNECB\n         SPACE\n         L     R3,SCNECB+12        ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   SAVERBA,USDNEXT     COPY NEXT INDEX RECORD NUMBER\n         SPACE\n*--------------------------------------------------------------------*\n*        YOU WILL GO THROUGH THIS LOOP 9 TIMES, BECAUSE 9 ENTRIES\n*        ARE HELD IN EVERY RECORD.\n*--------------------------------------------------------------------*\n         SPACE\nUSRLOOP  DS    0H\n         MVC   USERID(7),USDID     Copy who this is\n         CLC   USERID(7),ZEROS     Is this a real user?\n         BE    NOMSG               Nope, must have been deleted.\n         AP    USERS,=P'1'         Count how many users.\n         XR    R4,R4               Clear upper byte\n         ICM   R4,7,USDRBA         Get block position\n         BZ    NOMSG               NO.. JUST BUMP\n* --- >    Printing title of user with messages  -  below\n         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?\n         BZ    NOBRDUSP            No. Skip effort to print messages.\n         ST    R6,SAVER6           Save R6\n         L     R6,BRODUDCB         Load DCB address for BRODUSER\n         MVC   LINE,LINE-1\n         MVC   USERIDM(7),USDID\n         HEX   USERISTH,3,USDRBA\n         HEX   USERIENH,3,USDEND\n         MVC   LINE(133),USERIMSG\n         DROP  R3\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         L     R6,SAVER6           Restore R6\nNOBRDUSP DS    0H\n* --- >    Printing title of user with messages  -  above\nALTCODE  DS    0H                                              HD DEC97 013\n         SLR   R5,R5                    CLEAR FOR ADD          HD DEC97 013\n         L     R7,TYPETBLA              GET ADDRESS OF TYPETBL HD DEC97 013\n         LA    R5,0(R7,R4)              POINT TO TABLE ENTRY   HD DEC97 013\n         BCTR  R5,0                     ORIGIN ZERO            HD DEC97 013\n         CLI   0(R5),X'03'         JUST VERIFY WERE WE ARE\n         BE    TABLOK                   THIS IS A VALID ONE    HD DEC97 014\n         LA    R9,TABLERR          POINT TO LINE TO PRINT\n         BAL   R10,PRINT           JUST LET THEM KNOW I'M CONFUSED\n         B     BUMPUSR\n         SPACE\nTABLOK   DS    0H\n         MVI   0(R5),X'88'         SET THAT IT WAS A VALID MESSAGE\nBUMPUSR  DS    0H\n         AP    MSGCOUNT,=P'1'      INCREMENT HOW MANY MESSAGES\n         STCM  R4,7,MSGNUM\n         SPACE\n         READ  MSGECB,             DECB TO USE IN MACRO EXPANSION      X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MSGNUM              RBA TO HOLD THE KEY\n         SPACE\n         CHECK MSGECB\n         SPACE\n         L     R4,MSGECB+20        ADDRESS OF KEY\n         MVC   KEYHOLD(1),0(R4)    Move the key data where we can see\n         L     R4,MSGECB+12        Address of Data\n         MVC   RECHOLD(129),0(R4)  Move the data where it is accessible\n*\n* --- >    Printing message number for this USERID  below\n         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?\n         BZ    NOBRUSMN            No. Skip effort to print messages.\n         ST    R6,SAVER6           Save R6\n         L     R6,BRODUDCB         Load DCB address for BRODUSER\n         MVC   LINE,LINE-1\n         MVC   USERIDX(7),USERID\n         MVC   USERMSNO(6),MASK46\n         ED    USERMSNO(6),MSGCOUNT+2\n         MVC   LINE(133),USERMSNM\n         PUT   (6),LINE\n         MVC   LINE,LINE-1\n         L     R6,SAVER6           Restore R6\nNOBRUSMN DS    0H\n* --- >    Printing message number for this USERID  above\n*\n* --- >>\n*                                  Invoke BDMPRINT routine for record.\n         STM   R14,R2,SAV14TO2     Save all the end registers\n         LA    R1,PRMPRINT         Point to the parm area to be passed\n         LA    R0,0                Zero out register\n         ICM   R0,7,MSGNUM         Load with block number information\n         ST    R0,0(,R1)           Pass it to first word of parm\n         LA    R0,REC130           Address of data to be printed\n         ST    R0,4(,R1)           Store it in second word of parm\n         L     R0,0                Zero for third parameter\n         ST    R0,8(,R1)           Store null third parameter\n         LA    R0,USERID\n         ST    R0,12(,R1)          Fourth parameter is USERID\n         LA    R0,DDNFLAG\n         MVI   EXECMODE,X'04'\n         ST    R0,16(,R1)\n         L     R15,BDMPRPGM        Load entry point of print program\n         BALR  R14,R15             Pass control to it\n         LM    R14,R2,SAV14TO2     Restore all the end registers\n* --- >>\n         USING USMSG,R4\n         ICM   R4,7,USMNEXT        RRN OF NEXT MESSAGE\n         DROP  R4\n         SPACE\n         FREEDBUF MSGECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n*--------------------------------------------------------------------*\n*        TEST TO SEE IF THERE WILL BE ANOTHER RECORD AFTER THIS ONE\n*        IN THE CHAIN.  IF 'USMPTR' IS INDEED ZERO, THEN WE ARE\n*        FINISHED PROCESSING THIS CHAIN AND ARE READY TO DETERMINE\n*        IF WE SHOULD BUILD ENTRY 1, 2, OR 3 SHOWING HOW MANY MSGS\n*        A USER HAS OUTSTANDING.\n*--------------------------------------------------------------------*\n         SPACE\n         LTR   R4,R4\n         BNZ   ALTCODE\n         AP    RECCNT,=P'1'\n         CP    RECCNT,=P'2'        TEST MID RANGE\n         BL    LINE1               LOWER\n         BH    LINE3               HIGHER\n         BE    LINE2               .MIDRANGE\nLINE1    DS    0H\n         MVC   MSGCNT1,MASK10\n         MVC   USERID1,USERID\n         ED    MSGCNT1,MSGCOUNT\n         B     ZAPCNT\n         SPACE\nLINE2    DS    0H\n         MVC   MSGCNT2,MASK10\n         MVC   USERID2,USERID\n         ED    MSGCNT2,MSGCOUNT\n         B     ZAPCNT\n         SPACE\nLINE3    DS    0H\n         MVC   MSGCNT3,MASK10\n         MVC   USERID3,USERID\n         ED    MSGCNT3,MSGCOUNT\n         LA    R9,USERLINE\n         BAL   R10,PRINT\n         MVC   MSGCNT1,=CL10' '\n         MVC   MSGCNT2,=CL10' '\n         MVC   MSGCNT3,=CL10' '\n         MVC   USERID2,=CL7' '\n         MVC   USERID3,=CL7' '\n         ZAP   RECCNT,=P'0'\nZAPCNT   DS    0H\n         ZAP   MSGCOUNT,=P'0'\nNOMSG    DS    0H\n         LA    R3,13(R3)           BUMP TO NEXT ENTRY\n         BCT   R6,USRLOOP          REPEAT FOR NINE TIMES\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF INNER LOOP\n*--------------------------------------------------------------------*\n         SPACE\n         FREEDBUF SCNECB,          DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         SPACE\n         CLC   SAVERBA,=3X'00'     IS THIS LAST\n         BNE   INDEXLP             GO DO NEXT ONE\n         CP    RECCNT,=P'0'\n         BE    PUTUCNT\n         LA    R9,USERLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\nPUTUCNT  DS    0H\n         LA    R9,USERDASH\n         BAL   R10,PRINT\n         MVC   USERCNT,MASK10\n         ED    USERCNT,USERS       HOW MANY USERS ARE THERE\n         LA    R9,UTOTLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         L     R7,TYPETBLA              ONCE MORE THRU TYPETAB HD DEC97 018\nVERFLOOP DS    0H\n         CLI   0(R7),X'99'         END YET?\n         BE    ENDVERF\n         CLI   0(R7),X'03'         IS THIS STILL AN 03\n         LA    R7,1(R7)            BUMP EITHER WAY\n         BNE   VERFLOOP\n         AP    UNUSABL,=P'1'\n         B     VERFLOOP\n         SPACE\n*--------------------------------------------------------------------*\n*        END OF OUTER LOOP\n*--------------------------------------------------------------------*\n         SPACE\nENDVERF  DS    0H\n         MVC   UNUSDCNT,MASK10\n         ED    UNUSDCNT,UNUSABL\n         LA    R9,JUNKLINE         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         LA    R9,JUNKLIN2         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         LA    R9,JUNKLIN3         POINT TO LINE TO PRINT\n         BAL   R10,PRINT\n         SPACE\n*--------------------------------------------------------------------*\n*        TIME TO CLOSE AND END THE PROGRAM, BYE.\n*--------------------------------------------------------------------*\n         SPACE\nCLOSE    DS    0H\n         CLOSE BRODCAST\n         CLOSE BRODMAP\n         TM    DDNFLAG,X'01'      Is BRODPRNT DDNAME present?\n         BZ    NCBRDPRT\n         ST    R6,SAVER6\n         L     R6,BRODPDCB\n         CLOSE ((6))\n         L     R6,SAVER6\nNCBRDPRT DS    0H\n         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?\n         BZ    NCBRDUSR\n         ST    R6,SAVER6\n         L     R6,BRODUDCB\n         CLOSE ((6))\n         L     R6,SAVER6\nNCBRDUSR DS    0H\nFREENOTE DS    0H                                                       020\n         L     R1,NOTETBLA              Address of Table                020\n         L     R0,NOTGTSIZ              Length of Table                 020\n         FREEMAIN RU,LV=(0),A=(1)       Free Note Directory Table       020\nFREETYP  DS    0H                                              HD DEC97 020\n         L     R1,TYPETBLA              ADDRESS OF TABLE       HD DEC97 020\n         LH    R0,HIGHVAL               LENGTH OF TABLE        HD DEC97 020\n         AH    R0,=H'1'                 INCREMENT BY ONE       HD DEC97 020\n         FREEMAIN RU,LV=(0),A=(1)       FREE TYPE TABLE        HD DEC97 020\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H\n         L     R13,SAVE+4\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                 Go back to system.\n         SPACE\n*--------------------------------------------------------------------*\n*        PRINT OUTPUT SUBROUTINE.\n*--------------------------------------------------------------------*\n         SPACE\nPRINT    DS    0H\n         PUT   BRODMAP,(R9)        WRITE FROM AREA ADDRESS IN R9\n         BR    R10                 RETURN TO WHENCE WE CAME\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA CONTROL BLOCKS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=RISC,         3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE\nBRODMAP  DCB   DDNAME=BRODMAP,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA AREAS FOLLOW.\n*--------------------------------------------------------------------*\n         SPACE\nCVDAREA  DS    D\nSAVE     DC    18F'0'\nTYPETBLA DS    F       Address of GETMAINED Type Table         HD\nNOTETBLA DS    F       Address of GETMAINED Notice Directory Table\nNOTGTSIZ DS    F\nCURNOTBL DS    F       Address of beginning of data in Note dir table\nHIGHVAL  DS    F\nSAVHDADR DS    F                   SAVE HEADER ADDRESS         SG MAY99\nBDMPRPGM DS    F                   BDMPRINT entry point\nBRODPDCB DS    F                   BRODPRNT DCB in BDMPRINT program\nBRODUDCB DS    F                   BRODUSER DCB in BDMPRINT program\nSAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build\nSAVER1   DS    F                   Save Register 1\nSAVER3   DS    F                   Save Register 3\nSAVER5   DS    F                   Save Register 5\nSAVER5A  DS    F                   Save Register 5\nSAVER6   DS    F                   Preserve R6 during BRODPRNT handling\nSAVER6A  DS    F                   Save Register 6\nSAVER10  DS    F                   Save Register 10\nSAVEKEYA DS    F                   Save Key address\nPARMSAVE DS    F                   Save passed PARM address if any\nSAV14TO2 DC    6F'0'\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nSAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX\nNOTEDRBA DS    CL3                 Save RBA of Notify Directory f/headr\nFRSRCRBA DS    CL3                 Save RBA of Free Search Rcd f/header\nNUMNOTCS DS    CL2                 Number of Notices slots in BRODCAST\n         DC    C' '                Initialized at beginning of program\nBLANK44  DC    CL44' '             General Blanks if needed\nPWKAREA  DC    CL3' '              For uppercasing the PARM\nALLPRINT DC    X'00'\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   below\n*   Keep DDNFLAG and EXECMODE and FFACTREC and FFMRKREC together!\nDDNFLAG  DC    X'00'               Results of TIOT scan\n*              X'01'               BRODPRNT DD is coded in JCL\n*              X'02'               BRODUSER DD is coded in JCL\n*              X'04'               SYSIN    DD is coded in JCL\nEXECMODE DC    X'00'               Execution mode of BDMPRINT program\n*              X'01'               Header Record only\n*              X'02'               Notice Messages Directory Mode\n*              X'04'               BRODUSER mode\nFFACTREC DC    X'00'               FF actual record number on track\nFFMRKREC DC    X'00'               FF marked record number on track\n* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   above\nREC130   DS    0CL130              Dump Record made with Key+Data\nKEYHOLD  DC    XL1'00'             Key slot\nRECHOLD  DC    XL129'00'           Data slot\nINCORGEN DS    F\nZEROS    DC    XL7'00'             Zero Userid Entry\n*EXTAB   DC    CL16'0123456789ABCDEF'\n         DS    0F\nBLOCKNO  DC    X'000000'           BLOCK NUMBERS\nMSGNUM   DS    CL3                 SAVE LOCAL OF USER INDEX\nMASK3    DC    XL3'202120'\nMASK4    DC    XL4'40202120'\nMASK46   DC    XL6'402020202120'\nMASK46A  DC    XL6'404020202120'\nMASK7    DC    XL7'4020206B202120'\nMASK10   DC    XL10'40202020202020202120'\nRECCNT   DC    PL1'0'\nMSGCOUNT DC    PL5'0'\nNOTDIR   DC    PL5'0'              CT FOR NOTICE DIRECTORY RECS\nUSRIND   DC    PL5'0'              CT FOR USER MAIL DIRECTORY RECS\nNOTMSG   DC    PL5'0'              CT FOR NOTICE MSG RECS\nUSRMSG   DC    PL5'0'              CT FOR USER MAIL MSG RECS\nPTRMSG   DC    PL5'0'              CT FOR POINTER REC (ALWAYS 1) JDM1\nREC04    DC    PL5'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0\nFREEREC  DC    PL5'0'              CT FOR INACTIVE MAIL MSG RECS\nBADFREC  DC    PL5'0'              CT FOR BAD X'FF' RECORDS\nUNUSABL  DC    PL5'0'\nUSERS    DC    PL5'0'\nACTNOT   DC    PL5'0'              Number of active Notify messages\nINANOT   DC    PL5'0'              Number of inactive Nofify messages\nNOTRBA   DC    X'000000'           Current Notice RBA\nNOTNUM   DC    X'0000'             Current Notice Number\nHINRBA   DC    X'000000'           Hi Notices RBA\nLONRBA   DC    X'000000'           Lo Notices RBA\nTYPE00   DC    CL50'Number of BRODCAST \"Notices\" Directory Records'\nTYPE01   DC    CL50'Number of USER \"Mail\" Directory Records'\nTYPE02   DC    CL50'Number of BRODCAST \"Notices\" Message Records'\nTYPE03   DC    CL50'Number of USER \"Mail\" Message Records'\nTYPE04   DC    CL50'Count  of BRODCAST Header Record (Should be 1)'\nTYPE05   DC    CL50'Count  of Free Search Record (Should be 1)'\nTYPEFF   DC    CL50'Number of Empty USER \"Mail\" Record Slots'\nBADRFF   DC    CL50'Number of Bad  empty \"Mail\" Record Slots'\nBADRMSG  DC   CL51'(BRODCAST DATASET UNUSABLE! Fix with BDMDSFIX pgm.)'\nODDKEY   DC    CL133'  ** Unknown Key Type Encountered :    **'\nTABLERR  DC    CL133'  ** Keys have been updated during this run **'\nBREAKOUT DC    CL133'0< Record counts from the BRODCAST Keys       >'\nNOTFYOUT DC    CL133'0< Statistics about Global \"Notices\" Messages >'\nUSERSOUT DC    CL133'0< The Following Users Have Messages Waiting  >'\nUSERDASH DC    CL133'    ----------------------------------------------X\n               --------------------'\nNDCREERR DC    CL133'   Notify Directory Table Read Error  -  1'\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*\nUSERID   DS    CL7\n         SPACE\n*--------------------------------------------------------------------*\n*--              M E S S A G E   L A Y O U T S                     --*\n*--------------------------------------------------------------------*\n         SPACE\nUSERIMSG DS    0CL133\n         DC    CL8'-   *** '\nUSERITXT DC    CL31'Chain of Messages for USERID:  '\nUSERIDM  DC    CL7'       '\n         DC    CL5'  -- '\n         DC    CL8' Start: '\nUSERISTH DC    CL7'       '\n         DC    CL6' End: '\nUSERIENH DC    CL7'       '\n         DC    CL54' '\n         SPACE\n*--------------------------------------------------------------------*\nUSERMSNM DS    0CL133\n         DC    CL1' '\nUSERMTXT DC    CL15'Message Number '\nUSERMSNO DC    CL7'       '\n         DC    CL14' for Userid:  '\nUSERIDX  DC    CL7'       '\n         DC    CL89' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nACTNOMSG DS    0CL133\n         DC    CL10' '\nACTNMSG  DC    CL50'Number of Active BRODCAST Notices Messages    '\nACTNNUM  DC    CL10'       '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nINANOMSG DS    0CL133\n         DC    CL10' '\nINANMSG  DC    CL50'Number of Inactive BRODCAST Notices Messages  '\nINANNUM  DC    CL10'       '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nKEYCOUNT DS    0CL133\n         DC    CL10' '\nKEYTYPE  DC    CL50'Header Records'\nKEYCNT   DC    CL10'         1'\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nMAXIMUM  DS    0CL133\n         DC    CL60'0Total Available Blocks in Dataset'\nMAXCNT   DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30'-BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nNOTICES  DS    0CL133\n         DC    CL60' Blocks Required for Notify Service (Directory+MessX\n               ages)'\nNOTCNT   DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUSERLINE DS    0CL133\n         DC    CL4' '\nUSERID1  DS    CL7\n         DC    CL1' '\nMSGCNT1  DS    CL10\n         DC    CL6'  |   '\nUSERID2  DS    CL7\n         DC    CL1' '\nMSGCNT2  DS    CL10\n         DC    CL6'  |   '\nUSERID3  DS    CL7\n         DC    CL1' '\nMSGCNT3  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nUTOTLINE DS    0CL133\n         DC    CL60' Number of TSO Users Defined in this BRODCAST datasX\n               et:'\nUSERCNT  DS    CL10\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Summary Report  '\n         DC    C' ---'\n         DC    CL68' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL43'&PGMNAME   ---   BRODCAST Dataset - Record '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL60' '\n*--------------------------------------------------------------------*\n         SPACE\nREPTUL02 DS    0CL133\n         DC    C'-'\n         DC    CL2' '\n         DC    CL6'---'\n         DC    CL42'&PGMNAME   ---   BRODCAST Userid Messages '\n         DC    CL17'Display Report   '\n         DC    C'--- '\n         DC    CL61' '\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLINE DS    0CL133\n         DC    CL60'0Blocks found to be Orphaned (not connected to a UsX\n               erid):'\nUNUSDCNT DC    CL10' '\n         DC    CL63' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN2 DS    0CL133\n         DC    CL65' (Use the BDMDIAG TSO command to display and/or del-\n               ete these.)'\n         DC    CL2' '\n         DC    CL66' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nJUNKLIN3 DS    0CL133\n         DC    CL75' (BDMDIAG REPORT reports orphaned blocks, and BDMDI-\n               AG DELBAD deletes them.)'\n         DC    CL2' '\n         DC    CL56' '\n         SPACE\nPRMPRINT DS    0F\nPRMDRCNO DS    F                   RBA number of record in BRODCAST\nPRMDRCAD DS    F                   Address of 130-byte record to be\n*                                   printed and optionally formatted.\nPRMNDTBL DS    F                   Pointer to incore Notices Directory\n*                                   Table, zero if it isn't there.\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\n*--------------------------------------------------------------------*\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*\n*--------------------------------------------------------------------*\n         SPACE\n         EJECT\n*----------------------------------------------------------------*\n*        THE FOLLOWING IS TAKEN FROM AN OLD MVS MANUAL CALLED\n*        \"OS/VS2 MVS CONVERSION NOTEBOOK\" (GC28-0689-6) AND\n*        CONTAINS THE FOLLOWING REFERENCE TO HOW THE BROADCAST\n*        HAS CHANGED FROM OS/MVT AND SVS TO MVS:\n*\n*        'MODIFIED TO INCLUDE A CHANGE LEVEL INDICATOR IN THE\n*        HEADER RECORD AND A NEW FIELD FOR EACH USER ID IN THE\n*        MAIL DIRECTORY RECORDS. THIS FIELD CONTAINS THE\n*        ADDRESS OF THE LAST MESSAGE IN THE CHAIN OF MESSAGES\n*        ASSOCIATED WITH EACH NEW USER.'\n*\n*        NOTE: UNTIL I CAN DUMP RECORDS AND FIGURE OUT WHERE THE\n*              ABOVE STATEMENTS FIT INTO THE DSECTS BELOW, WILL\n*              LET IT TO THE READER TO HELP AND GET IT FIGURED\n*              OUT BEFORE I DO.\n*\n*----------------------------------------------------------------*\n         SPACE\n         IEZBITS\n         SPACE\n         IEZIOB   DSECT=YES\n         SPACE\n         IKJZT301 DSECT=YES\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n         IKJEESCB\n         END\nBDMPRINT TITLE 'PRINT AND FORMAT RECORDS FROM THE BRODCAST DATASET'\n*------------------------------------------------------------------*\n*\n*          B D M P R I N T                      VERSION  1.4.0B\n*\n*\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC\n*                 All Rights Reserved\n*\n*\n*        This program hex prints records from the BRODCAST dataset.\n*        It also formats the record, according to record type,\n*        after the record has been hex printed out.\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n*\n*        X'00'     BRODCAST 'NOTICES' DIRECTORY RECORD.\n*\n*        X'01'     USER 'MAIL' DIRECTORY RECORD.\n*\n*        X'02'     BROADCAST 'NOTICES' MESSAGE RECORD.\n*\n*        X'03'     USER 'MAIL' MESSAGE RECORD.\n*\n*        X'04'     FIRST RECORD OF BRODCAST DATA SET.\n*\n*        X'05'     RBA ADDRESS OF FIRST DUMMY RECORD AVAILABLE.\n*\n*        X'FF'     DUMMY INACTIVE 'MAIL' MESSAGE RECORD.\n*\n*                  (Note for X'FF' record types...)\n*                   The first \"record byte\" has to be the\n*                   record number in the track.  In other\n*                   words, it has to be the R from the\n*                   CCHHR or TTR of the particular block.\n*                   If the first byte of an unused message\n*                   record does not have this value, all\n*                   hell breaks loose.  Therefore, when\n*                   copying the BRODCAST dataset between\n*                   two different DASD device types, this\n*                   value has to be reset, otherwise the\n*                   whole dataset can't do its thing.\n*\n*------------------------------------------------------------------*\n*\n*        This program is invoked as a subroutine.\n*\n*------------------------------------------------------------------*\n*\n* CHANGE LOG:\n*\n*------------------------------------------------------------------*\n         EJECT\n*------------------------------------------------------------------*\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1            RESERVED\nR1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE\n*                               NOTICE TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT302  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        NOTICES DIRECTORY RECORD                     *\n*                                                                     *\n*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *\n*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *\n*        ASSOCIATED WITH EACH MSG. NUMBER.                            *\n*                                                                     *\n*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *\n*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *\n*              PREVIOUS TO CALLING THIS MACRO.                        *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCDIR    DSECT , -\n         AGO   .SKIP\n.NODSECT ANOP\nBCDIR    DS    0F\n.SKIP    ANOP\nBCDNENT  EQU   25             NUMBER OF ENTRIES\nBCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.\nBCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:\nBCDNOMSG EQU   BIT0\n*                               '1' = NO NOTICES MSG ASSIGNED\n*                                     TO THIS MSG NUMBER\n*                               '0' = NOTICES MSG FOR THIS NUMBER\n*                                     IS ASSIGNED\nBCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX\nBCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD\n         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES\n*                               IDENTICAL IN FORMAT TO 'BCDENTRY'\nBCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nBCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD\n*                               (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT303   &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                         NOTICES MESSAGE RECORD                      *\n*                                                                     *\n*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *\n*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *\n*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *\n*                                           10/1/72     LEVEL=1       *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nBCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nBCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD\n.SKIP    ANOP\nBCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT\nBCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\n         DS    XL3 -          RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R4,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         L     R4,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\nR0       EQU   0                   Work, system\nR1       EQU   1                   Address of PARM list\nR2       EQU   2\nR3       EQU   3                   USING for DSECTs\nR4       EQU   4                   Work, BAL Register for HEX routine\nR5       EQU   5                   Work\nR6       EQU   6                   Work\nR7       EQU   7                   BAL Register, usually\nR8       EQU   8                   Work - BCT\nR9       EQU   9                   Fourth Base Register\nR10      EQU   10                  Third Base Register\nR11      EQU   11                  Second Base Register\nR12      EQU   12                  First Base Register\nR13      EQU   13                  SAVE-AREA ADDRESS\nR14      EQU   14                  ULTIMATE RETURN ADDRESS\nR15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE\n         SPACE\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMPRINT'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)     Save Registers\n         LR    R5,R1               Save PARM address\n         LR    R12,R15             LOAD ENTRY ADDRESS\n         USING BDMPRINT,R12,R11,R10,R9  Establish Addressability\n         LA    R11,4095(,R12)           4 base registers\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R9,4095(,R10)\n         LA    R9,1(,R9)\n         LR    R15,R13             Save his save address\n         LA    R13,SAVE            Get our save area address\n         ST    R15,SAVE+4          Save off into low savearea\n         ST    R13,8(,R15)         Chain mine back to his\n         LR    R1,R5               Get PARM address\n         ST    R1,SAVPARMS         And save it.\n         MVI   BLANK44-1,X'40'\n         MVC   BLANK44,BLANK44-1\n         USING PRMDSECT,R5\n         MVI   DDNFLAG,X'00'\n         MVI   NTHRDFLG,X'00'      Initialize third parm flag to zero\n         MVI   ACTNTFLG,X'00'      Initialize Active Notice flag\n         L     R1,0(,R5)           Get hex RBA number from parm\n         ST    R1,SAVRNHEX         And save it to the program\n         L     R1,4(,R5)           Get 130-bytes of record\n         MVC   REC130A(130),0(R1)  And save it so we can see it\n         L     R1,8(,R5)           Look at third parm address\n         LTR   R1,R1               Is it zero?\n         BNZ   HASTHIRD            No. Don't flag that it's missing.\n         MVI   NTHRDFLG,X'01'      Yes. Flag third parm as missing.\nHASTHIRD DS    0H                  ND Table exists\n         ST    R1,NOTETBLB         Load Notify Directory Table address\n         L     R1,12(,R5)\n         LTR   R1,R1\n         BZ    NOTFORTH\n         MVC   USERID1(7),0(R1)\n         MVI   USERFLAG,X'01'\nNOTFORTH DS    0H\n         L     R1,16(,R5)\n         MVC   DDNFLAG(1),0(R1)\n         MVC   EXECMODE(1),1(R1)\n         MVC   FFACTREC(1),2(R1)\n         MVC   FFMRKREC(1),3(R1)\n         DROP  R5\n* -------------------------------------------------------- *\n         TM    USERFLAG,X'01'\n         BO    PRNTUSER\nPRNTSTRT DS    0H\n         MVI   LINE-1,X'40'        Initialize with\n         MVI   HEXPRTWK-1,X'40'       blanks\n         L     R1,SAVPARMS         Get address of the PARMs back\n         L     R5,0(,R1)           Get RBA number\n         CVD   R5,DWORK            Convert it to decimal\n         MVC   RECRDDEC,MASK7A     Move in the mask\n         ED    RECRDDEC,DWORK+5    Edit the number in\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT003\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         MVC   LINE(133),RECRDMSG  Print record number in decimal\n         PUT   BRODPRNT,LINE\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in\n         MVC   LINE(133),RECRDMHX     Move it to print message for hex.\n         PUT   BRODPRNT,LINE\n* --------------------------------------------------------- *            04690\nHEXPRINT DS    0H                  Hex Print from Tape Data (INAREA)     04691\n         ST    R5,R5HXPRT          Save register.                        04695\n         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696\n         USING TRTCSECT,R5                                               04697\n*                                                                        04702\nHEXPRNXX DS    0H                                                        04715\n         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717\nMOVESIZ1 DS    0H                                                        04720\n         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721\n         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723\n         EX    R2,MOVRULER         PUT IN HEX RULER                      04724\n         PUT   BRODPRNT,LINE                                             04725\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726\n         EX    R2,MOVDATIN         Move the data in.                     04729\n         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740\n         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741\n         PUT   BRODPRNT,LINE                                             04742\n         EX    R2,MOVDATIN         Move the data back in.                04745\n         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749\n         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750\n         PUT   BRODPRNT,LINE                                             04751\n         EX    R2,MOVDATIN         Move the data back in.                04754\n         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758\n         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759\n         PUT   BRODPRNT,LINE                                             04760\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODPRNT,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   below\n         ST    R7,SAVRG7\n         BAL   R7,FORMATRC\n         L     R7,SAVRG7\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODPRNT,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   above\nNOPRT003 DS    0H\n         B     HEXPREND                                                  04762\n*\nPRNTUSER DS    0H\n         TM    DDNFLAG,X'02'\n         BZ    NOUSR004\n         MVI   LINE-1,X'40'        Initialize with\n         MVI   HEXPRTWK-1,X'40'       blanks\n         L     R1,SAVPARMS         Get address of the PARMs back\n         L     R5,0(,R1)           Get RBA number\n         CVD   R5,DWORK            Convert it to decimal\n         MVC   RECRDDEC,MASK7A     Move in the mask\n         ED    RECRDDEC,DWORK+5    Edit the number in\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         MVC   LINE(133),RECRDMSG  Print record number in decimal\n         PUT   BRODUSER,LINE\n         MVC   LINE(133),LINE-1    Clear output line                     04726\n         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in\n         MVC   LINE(133),RECRDMHX     Move it to print message for hex.\n         PUT   BRODUSER,LINE\n* --------------------------------------------------------- *            04690\nHEXPRUSR DS    0H                  Hex Print from Tape Data (INAREA)     04691\n         ST    R5,R5HXPRT          Save register.                        04695\n         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696\n         USING TRTCSECT,R5                                               04697\n*                                                                        04702\nHEXPRUXX DS    0H                                                        04715\n         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717\nMOVESIZ2 DS    0H                                                        04720\n         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721\n         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723\n         EX    R2,MOVRULER         PUT IN HEX RULER                      04724\n         PUT   BRODUSER,LINE                                             04725\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726\n         EX    R2,MOVDATIN         Move the data in.                     04729\n         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740\n         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741\n         PUT   BRODUSER,LINE                                             04742\n         EX    R2,MOVDATIN         Move the data back in.                04745\n         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749\n         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750\n         PUT   BRODUSER,LINE                                             04751\n         EX    R2,MOVDATIN         Move the data back in.                04754\n         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758\n         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759\n         PUT   BRODUSER,LINE                                             04760\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODUSER,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   below\n         ST    R7,SAVRG7\n         BAL   R7,FORMATRC\n         L     R7,SAVRG7\n         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761\n         PUT   BRODUSER,LINE       Print blank line.                     04760\n** ---- >>>>>       Break in here to format header fields   -   above\nNOUSR004 DS    0H\n         B     HEXPREND                                                  04762\nMOVDATIN MVC   HEXPRTWK(*-*),REC130A      ***  EXECUTED  ***             04764\nMOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04765\nMOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04766\nTRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04768\nTRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04769\nTRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04770\nR5HXPRT  DC    F'0'\n         DC    C' '                                                      05250\nHEXPRTWK DC    CL133' '                                                  05249\n         DC    C' '                                                      05250\nLINE     DC    CL133' '                                                  05251\nHEXPREND DS    0H                                                        04771\n         L     R5,R5HXPRT                                                04774\n         DROP  R5                                                        04775\nRETURN   DS    0H                                                        04194\n         L     R13,4(,R13)                                               04214\n         MVC   16(4,R13),=F'0'          Return code 0     in R15         04215\n         LM    R14,R12,12(R13)                                           04217\n         BR    R14                                                       04218\n* --------------------------------------------------------- *            04777\n         LTORG\n         ENTRY BRODPRNT                                                  05425\nBRODPRNT DCB   MACRF=PM,DDNAME=BRODPRNT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\n         ENTRY BRODUSER                                                  05425\nBRODUSER DCB   MACRF=PM,DDNAME=BRODUSER,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\nSAVE     DS    9D\nDWORK    DC    D'0'\nSAVPARMS DC    F'0'\nSAVRECNO DC    F'0'\nSAVRECAD DC    F'0'\nSAVRG0   DC    F'0'\nSAVRG3   DC    F'0'\nSAVRG4   DC    F'0'\nSAVRG4A  DC    F'0'\nSAVRG6   DC    F'0'\nSAVRG7   DC    F'0'\nSAVRG7A  DC    F'0'\nSAVRG7B  DC    F'0'\nSAVRG7C  DC    F'0'\nSAVRG7SB DC    F'0'\nNOTETBLB DC    F'0'\nNTHRDFLG DC    X'00'\nUSERFLAG DC    X'00'\nACTNTFLG DC    X'00'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - >>>>>>>>\nDDNFLAG  DC    X'00'               Keep these four\nEXECMODE DC    X'00'                 together......\nFFACTREC DC    X'00'               FF actual record number on track\nFFMRKREC DC    X'00'               FF marked record number on track\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - >>>>>>>>\nUSERID1  DC    CL7' '\nNOTFMACT DC    CL8' ACTIVE '\nNOTFMINA DC    CL8'inactive'\nSAVRNHEX DC    F'0'\nMASK7A   DC    XL7'40202020212020'\nCURNDRBA DC    X'000000'           Current Notice RBA\nCURNDNUM DC    X'0000'             Current Notice Number\nNDNUMWRK DC    X'0000'             Work area for hi bit of notice numbr\nNDRBAWRK DC    X'000000'           Work area to hold notice RBA\n*\n         DC    C' '                Initialized at beginning of program\nBLANK44  DC    CL44' '             General Blanks if needed\n*\nFM001LST DC    CL43'This is the last Notices Directory Record. '\nFM001DLS DC    CL16'                '\nFM011LST DC    CL43'This is the last Userid Directory Record.  '\nFM011DLS DC    CL16'                '\n*\n         DC    X'00'\nREC130A  DC    130X'00'\nRULERHEX DS    0CL130                                                    05255\n         DC    C'K----+----1----+----2----+----3----+----4----+----5--'  05256\n         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  05257\n         DC    C'----1----+----2----+----3----+----4'                    05258\nRECRDMSG DS    0CL133\n         DC    C' '\n         DC    C'Relative Record Number in Decimal:  '\nRECRDDEC DC    CL7' '\n         DC    CL89' '\nRECRDMHX DS    0CL133\n         DC    C' '\n         DC    C'Relative Record Number in Hex:      '\nRECRDHEX DC    CL7' '\n         DC    CL89' '\n         SPACE\n* --------------------------------------------------------- *            04777\n* --       Record formatting print layout lines          -- *            04777\n* --------------------------------------------------------- *            04777\nFMT00LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL27'Format of BRODCAST Notices '\n         DC    CL27'Directory Record, Key X''00'''\n         DC    CL6' **** '\n         DC    CL61' '\n* --------------------------------------------------------- *            04777\nFMT00LN1 DS    0CL133\n         DC    CL3' '\nFM001NXT DC    CL43'RBA of next Notices Directory Record:      '\nFM001HEX DC    CL7' '\n         DC    CL4' '\nFM001DLT DC    CL16'Decimal Value:  '\nFM001DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT00LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL7'Slot #'\nFM002DS1 DC    CL7'  '\n         DC    CL3' '\n         DC    CL9'Notice # '\nFM002DN1 DC    CL7' '\n         DC    CL5' Hex '\nFM002HN1 DC    CL5' '\n         DC    CL2' '\nFM002AC1 DC    CL8' '\n         DC    CL2' '\n         DC    CL10'Hex RBA:  '\nFM002HR1 DC    CL7' '\n         DC    CL2' '\n         DC    CL14'Decimal RBA:  '\nFM002DR1 DC    CL7' '\n         DC    CL48' '\n* --------------------------------------------------------- *            04777\nFMT01LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL47'Format of BRODCAST Userid Dir Record, Key X''01'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT01LN1 DS    0CL133\n         DC    CL3' '\nFM011NXT DC    CL43'RBA of next Userid Directory Record:       '\nFM011HEX DC    CL7' '\n         DC    CL4' '\nFM011DLT DC    CL16'Decimal Value:  '\nFM011DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT01L1A DS    0CL133\n         DC    CL3' '\n         DC    CL30' '\nFMT01L1S DC    CL7' Start '\n         DC    CL2' '\nFMT01L1E DC    CL7'  End  '\n         DC    CL84' '\n* --------------------------------------------------------- *            04777\nFMT01LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL7'Slot #'\nFM012SL1 DC    CL2'  '\n         DC    CL3' '\n         DC    CL9'Userid:  '\nFM012US1 DC    CL7' '\n         DC    CL2' '\nFM012SH1 DC    CL7' '\n         DC    CL2' '\nFM012EH1 DC    CL7' '\n         DC    CL2' '\n         DC    CL16'Decimal Start:  '\nFM012DS1 DC    CL7' '\n         DC    CL14'Decimal End:  '\nFM012DE1 DC    CL7' '\n         DC    CL38' '\n* --------------------------------------------------------- *            04777\nFMT02LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL48'Format of BRODCAST Notices Msg Record, Key X''02'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT02LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'Length of this Notify Message :            '\nFM021HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM021DEC DC    CL7' '\n         DC    CL53' '\n* --------------------------------------------------------- *            04777\nFMT02LN2 DS    0CL133\n         DC    CL3' '\nFMT22MSG DC    CL25'This NOTIFY record is an '\nFMT22ACT DC    CL8'       '\nFMT22LIT DC    CL10' message. '\n         DC    CL87' '\n* --------------------------------------------------------- *            04777\nFMT02LN3 DS    0CL133\n         DC    CL3' '\n         DC    CL43'This Global Notice is Notice number:       '\nFM023HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM023DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT03LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n        DC    CL49'Format of BRODCAST User Message Record, Key X''03'''\n         DC    CL6' **** '\n         DC    CL66' '\n* --------------------------------------------------------- *            04777\nFMT03LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL43'Length of this User Message :              '\nFM031HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM031DEC DC    CL7' '\n         DC    CL53' '\n* --------------------------------------------------------- *            04777\nFMT03LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL43'RBA of next chained message for this user: '\nFM032HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM032DEC DC    CL7' '\n         DC    CL62' '\n* --------------------------------------------------------- *            04777\nFMT04LN0 DS    0CL133\n         DC    CL8' '\n         DC    CL6' **** '\n         DC    Cl43'Format of BRODCAST Header Record, Key X''04'''\n         DC    CL6' **** '\n         DC    CL70' '\n* --------------------------------------------------------- *            04777\nFMT04LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of First Notices Directory Record :  '\nFM041HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM041DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN2 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of First Userid Directory Record  :  '\nFM042HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM042DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN3 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Total Number of Records in BRODCAST   :  '\nFM043HEX DC    CL9' '\n         DC    CL2' '\n         DC    CL16'Decimal Value:  '\nFM043DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN4 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Maximum Record Number for Notices     :  '\nFM044HEX DC    CL5' '\n         DC    CL6' '\n         DC    CL16'Decimal Value:  '\nFM044DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN5 DS    0CL133\n         DC    CL3' '\n         DC    CL41'RBA of Free Search Record             :  '\nFM045HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM045DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT04LN6 DS    0CL133\n         DC    CL3' '\n         DC    CL41'Gen Number for Incore Notices Table   :  '\nFM046HEX DC    CL9' '\n         DC    CL2' '\n         DC    CL16'Decimal Value:  '\nFM046DEC DC    CL7' '\n         DC    CL55' '\n* --------------------------------------------------------- *            04777\nFMT05LN0 DS    0CL133\n         DC    CL6' '\n         DC    CL6' **** '\n         DC    CL48'Format of BRODCAST Free Search Record, Key X''05'''\n         DC    CL6' **** '\n         DC    CL67' '\n* --------------------------------------------------------- *            04777\nFMT05LN1 DS    0CL133\n         DC    CL3' '\n         DC    CL33'RBA to start Free Search at:     '\nFM051HEX DC    CL7' '\n         DC    CL4' '\n         DC    CL16'Decimal Value:  '\nFM051DEC DC    CL7' '\n         DC    CL63' '\n* --------------------------------------------------------- *            04777\nFMTFFLN0 DS    0CL133\nFFBAD    DC    CL6' '\n         DC    CL6' **** '\n         DC    CL47'This is an empty User Message Record, Key X''FF'''\n         DC    CL6' **** '\nFFBADA   DC    CL58' '\n         DC    CL2' '\nFFBADER  DC    CL8' '\n* --------------------------------------------------------- *            04777\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -    S  U  B  R  O  U  T  I  N  E  S                          - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R4.\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMATRC DS    0H                    Format BRODCAST Records\n*                                    ------ -------- -------\nFORMCHEK DS    0H\n         TM    DDNFLAG,X'01'\n         BZ    NOPRT005\n         CLI   REC130A,X'00'         Notices directory?\n         BE    FORMAT00              Go process it.\n         CLI   REC130A,X'01'         Userids?\n         BE    FORMAT01              Go process it.\n         CLI   REC130A,X'02'         Notices message?\n         BE    FORMAT02              Go process it.\n         CLI   REC130A,X'03'         User message?\n         BE    FORMAT03              Go process it.\n         CLI   REC130A,X'04'         BRODCAST Header?\n         BE    FORMAT04              Go process it.\n         CLI   REC130A,X'05'         Free Search Record?\n         BE    FORMAT05              Go process it.\n         CLI   REC130A,X'FF'         Blank user message slot?\n         BE    FORMATFF              Go process it.\nNOPRT005 DS    0H\n         B     FORMCHEE              Not normal type. Just end.\nFORMAT00 DS    0H                    NOTICES DIRECTORY RECORD\n         ST    R3,SAVRG3             Save mapping register for DSECT\n         PUT   BRODPRNT,FMT00LN0\n         LA    R3,REC130A+1          Get actual record image\n         USING BCDIR,R3\n         MVC   LINE,LINE-1           Clear line\n         HEX   FM001HEX+1,3,BCDNEXT\n         XR    R6,R6                 Zero work register\n         ICM   R6,7,BCDNEXT          Load it with RBA of next dir recd\n* --- Test for last record  -  below\n         LTR   R6,R6                 Is next record's RBA equal 000000?\n         BNZ   FORLST00              Yes, this is last record.\n         MVC   FM001NXT,FM001LST     Report it.\n         MVC   FM001DLT,FM001DLS     Blank out second literal.\nFORLST00 DS    0H\n* --- Test for last record  -  above\n         CVD   R6,DWORK              Convert to decimal\n         MVC   FM001DEC,MASK7A       Move in mask\n         ED    FM001DEC,DWORK+5      Edit value into report field\n* --- Test for last record  -  below\n         LTR   R6,R6                 R6 should still be zero if last.\n         BNZ   FORLSU00              Not zero. Go on as usual.\n         MVC   FM001DEC,BLANK44      Zero. Blank out the number value.\n         MVC   FM001HEX,BLANK44      Zero. Blank out the number value.\nFORLSU00 DS    0H\n* --- Test for last record  -  above\n         MVC   LINE,FMT00LN1         Prepare line for printing\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1           Clear line for next time\n         ST    R7,SAVRG7C\n         BAL   R7,FORMT00A\n         L     R7,SAVRG7C\n         L     R3,SAVRG3             Restore mapping register\n         DROP  R3\n         B     FORMCHEE\nFORMAT01 DS    0H                    USERIDS DIRECTORY RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT01LN0\n         LA    R3,REC130A+1\n         USING USDIR,R3\n         MVC   LINE,LINE-1\n         HEX   FM011HEX+1,3,USDNEXT\n         XR    R6,R6\n         ICM   R6,7,USDNEXT\n* --- Test for last record  -  below\n         LTR   R6,R6                 Is next record's RBA equal 000000?\n         BNZ   FORLST01              Yes, this is last record.\n         MVC   FM011NXT,FM011LST     Report it.\n         MVC   FM011DLT,FM011DLS     Blank out second literal.\nFORLST01 DS    0H\n* --- Test for last record  -  above\n         CVD   R6,DWORK\n         MVC   FM011DEC,MASK7A\n         ED    FM011DEC,DWORK+5\n* --- Test for last record  -  below\n         LTR   R6,R6                 R6 should still be zero if last.\n         BNZ   FORLSU01              Not zero. Go on as usual.\n         MVC   FM011DEC,BLANK44      Zero. Blank out the number value.\n         MVC   FM011HEX,BLANK44      Zero. Blank out the number value.\nFORLSU01 DS    0H\n* --- Test for last record  -  above\n         MVC   LINE,FMT01LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,FMT01L1A\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         ST    R7,SAVRG7A\n         BAL   R7,FORMT01A\n         L     R7,SAVRG7A\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT02 DS    0H                    NOTICES MESSAGE RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT02LN0\n         LA    R3,REC130A+1\n         USING BCMSG,R3\n         MVC   LINE,LINE-1\n         HEX   FM021HEX+1,1,BCMLNG\n         XR    R6,R6\n         ICM   R6,1,BCMLNG\n         CVD   R6,DWORK\n         MVC   FM021DEC,MASK7A\n         ED    FM021DEC,DWORK+5\n         MVC   LINE,FMT02LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         ST    R7,SAVRG7B\n         BAL   R7,FORMT02A\n         L     R7,SAVRG7B\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT03 DS    0H                    USERID MESSAGE RECORD\n         TM    EXECMODE,X'04'\n         BO    SKIPFMT3\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT03LN0\n         LA    R3,REC130A+1\n         USING USMSG,R3\n         MVC   LINE,LINE-1\n         HEX   FM031HEX+1,1,USMLNG\n         XR    R6,R6\n         ICM   R6,1,USMLNG\n         CVD   R6,DWORK\n         MVC   FM031DEC,MASK7A\n         ED    FM031DEC,DWORK+5\n         MVC   LINE,FMT03LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM032HEX+1,3,USMNEXT\n         XR    R6,R6\n         ICM   R6,7,USMNEXT\n         CVD   R6,DWORK\n         MVC   FM032DEC,MASK7A\n         ED    FM032DEC,DWORK+5\n         MVC   LINE,FMT03LN2\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\nSKIPFMT3 DS    0H\n         B     FORMCHEE\nFORMAT04 DS    0H                    BRODCAST HEADER RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT04LN0\n         LA    R3,REC130A+1\n         USING R1BC,R3\n         MVC   LINE,LINE-1\n         HEX   FM041HEX+1,3,R1BCPTR\n         XR    R6,R6\n         ICM   R6,7,R1BCPTR\n         CVD   R6,DWORK\n         MVC   FM041DEC,MASK7A\n         ED    FM041DEC,DWORK+5\n         MVC   LINE,FMT04LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM042HEX+1,3,R1USPTR\n         XR    R6,R6\n         ICM   R6,7,R1USPTR\n         CVD   R6,DWORK\n         MVC   FM042DEC,MASK7A\n         ED    FM042DEC,DWORK+5\n         MVC   LINE,FMT04LN2\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM043HEX+1,4,R1RECNUM\n         XR    R6,R6\n         ICM   R6,15,R1RECNUM\n         CVD   R6,DWORK\n         MVC   FM043DEC(7),MASK7A\n         ED    FM043DEC(7),DWORK+5\n         MVC   LINE,FMT04LN3\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM044HEX+1,2,R1BCMAX\n         XR    R6,R6\n         ICM   R6,3,R1BCMAX\n         CVD   R6,DWORK\n         MVC   FM044DEC,MASK7A\n         ED    FM044DEC,DWORK+5\n         MVC   LINE,FMT04LN4\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM045HEX+1,3,R1FRESRH\n         XR    R6,R6\n         ICM   R6,7,R1FRESRH\n         CVD   R6,DWORK\n         MVC   FM045DEC,MASK7A\n         ED    FM045DEC,DWORK+5\n         MVC   LINE,FMT04LN5\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         HEX   FM046HEX+1,4,R1GENNUM\n         XR    R6,R6\n         ICM   R6,15,R1GENNUM\n         CVD   R6,DWORK\n         MVC   FM046DEC(7),MASK7A\n         ED    FM046DEC(7),DWORK+5\n         MVC   LINE,FMT04LN6\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMAT05 DS    0H                    FREE SEARCH RECORD\n         ST    R3,SAVRG3\n         PUT   BRODPRNT,FMT05LN0\n         LA    R3,REC130A+1\n         USING FREESRCH,R3\n         MVC   LINE,LINE-1\n         HEX   FM051HEX+1,3,FSEARCH\n         XR    R6,R6\n         ICM   R6,7,FSEARCH\n         CVD   R6,DWORK\n         MVC   FM051DEC,MASK7A\n         ED    FM051DEC,DWORK+5\n         MVC   LINE,FMT05LN1\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\n         L     R3,SAVRG3\n         DROP  R3\n         B     FORMCHEE\nFORMATFF DS    0H                    EMPTY USER MESSAGE RECORD SLOT\n         ST    R3,SAVRG3\n         CLC   FFACTREC,FFMRKREC\n         BE    FORMFFOK\n         MVC   FFBAD(6),=C' -BAD-'\n         MVC   FFBADA(58),=C'1st Data Byte X''--'' not equal \"Track RecX\n               ord Number\" X''--'''\n         HEX   FFBADA+16,1,FFMRKREC\n         HEX   FFBADA+54,1,FFACTREC\n         MVI   FFBADA+18,X'7D'\n         MVI   FFBADA+56,X'7D'\n         MVI   FFBADA+57,X'4B'\n         MVC   FFBADER(8),=C' *Error*'\nFORMFFOK DS    0H\n         PUT   BRODPRNT,FMTFFLN0\n         MVC   FFBAD(6),BLANK44\n         MVC   FFBADER(8),BLANK44\n         MVC   LINE,LINE-1\n         MVC   FFBADA(58),LINE\n         L     R3,SAVRG3\n         B     FORMCHEE\nFORMCHEE DS    0H\nFORMATEN DS    0H\n         BR    R7\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMT00A DS    0H                    Format one Userid entry at a time.\n         LA    R3,REC130A+1          Point to image of current record.\n         USING BCDIR,R3\n         LA    R8,BCDNENT            BCTR register\n         LA    R0,0                  Register for counting slots.\n         ST    R0,SAVRG0             And initialize to 0.\nFORMT00B DS    0H\n         MVC   LINE,LINE-1           Clear line\n         L     R0,SAVRG0             Load current count\n         A     R0,=F'1'              Add one to it\n         ST    R0,SAVRG0             Save it back.\n         XR    R6,R6                 Clear register for decimal display\n         LR    R6,R0                 Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DS1(7),MASK7A    Load mask into print line\n         ED    FM002DS1(7),DWORK+5   Edit RBA number on top of mask\n         MVC   NDNUMWRK(2),BCDMSGNO  Message number to work area\n         MVC   NDRBAWRK(3),BCDMRBA   RBA number to work area\n         TM    BCDMFLG,BCDNOMSG      Check if this is active notice.\n         BO    F00ACTVT              Flag is on, inactive notice.\n         OI    ACTNTFLG,X'02'        Notice is ACTIVE......\nF00ACTVT DS    0H\n         NI    NDNUMWRK,X'7F'        Purify notice number for display\n         HEX   FM002HN1,2,NDNUMWRK\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,3,NDNUMWRK         Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DN1(7),MASK7A    Load mask into print line\n         ED    FM002DN1(7),DWORK+5   Edit RBA number on top of mask\n         TM    ACTNTFLG,X'02'\n         BZ    F00INACT\n         MVC   FM002AC1(8),=C' Active '\n         B     F00ACTGO\nF00INACT DS    0H\n         MVC   FM002AC1(8),=C'Inactive'\nF00ACTGO DS    0H\n         HEX   FM002HR1,3,NDRBAWRK\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,NDRBAWRK         Load it with slot count register\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM002DR1(7),MASK7A    Load mask into print line\n         ED    FM002DR1(7),DWORK+5   Edit RBA number on top of mask\nF00PRINT DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,FMT00LN2\n         PUT   BRODPRNT,LINE\n         MVC   FM002AC1(8),=C'        '\n         NI    ACTNTFLG,X'FD'        Turn off flag\n         LA    R3,5(,R3)             Bump to next entry in directory.\n         BCT   R8,FORMT00B\nFORMT00E DS    0H\n         NI    ACTNTFLG,X'FD'        Turn off flag in all cases.\n         BR    R7                    And go back to the caller.\n         DROP  R3\n* --------------------------------------------------------- *\n*    BAL REGISTER IS R7.\n* --------------------------------------------------------- *\nFORMT01A DS    0H                    Format one Userid entry at a time.\n         LA    R3,REC130A+1          Point to image of current record.\n         USING USDENTRY,R3\n         LA    R8,9                  BCTR register\n         LA    R0,0                  Register for counting slots.\n         ST    R0,SAVRG0             And initialize to 0.\nFORMT01B DS    0H\n         MVC   LINE,LINE-1           Clear line\n         L     R0,SAVRG0             Load current count\n         A     R0,=F'1'              Add one to it\n         ST    R0,SAVRG0             Save it back.\n         HEX   FM012SL1,1,SAVRG0+3   Take advantage of max of 9. Hex it\n         MVI   FM012SL1,X'40'        And blank the first hex digit.\nF01REALU DS    0H\n         MVC   FM012US1(7),USDID     Display current userid from entry\n         CLC   FM012US1(7),SEVENZRO  Is this a blank entry?\n         BNE   F01REALV              No. Don't mark as empty.\n         MVC   FM012US1(7),SEVENEMP  Yes. Mark it as empty.\nF01REALV DS    0H\n         HEX   FM012SH1,3,USDRBA     Display beginning RBA in hex\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,USDRBA           Load it with begin RBA\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM012DS1(7),MASK7A    Load mask into print line\n         ED    FM012DS1(7),DWORK+5   Edit RBA number on top of mask\n         HEX   FM012EH1,3,USDEND     Display ending RBA in hex\n         XR    R6,R6                 Clear register for decimal display\n         ICM   R6,7,USDEND           Load it with ending RBA\n         CVD   R6,DWORK              Convert to packed\n         MVC   FM012DE1(7),MASK7A    Load mask into print line\n         ED    FM012DE1(7),DWORK+5   Edit RBA number on top of mask\n         MVC   LINE,FMT01LN2         Load completely loaded print line\n         PUT   BRODPRNT,LINE\n         LA    R3,13(,R3)            Bump one userid entry forward\n         BCT   R8,FORMT01B           And do it until the end of record\nFORMT01E DS    0H\n         LA    R3,REC130A+1          Reset R3 before leaving.\n         BR    R7                    And go back to the caller.\n         DROP  R3\n* --------------------------------------------------------- *\nFORMT02A DS    0H                  Determine if Notices message Active,\n*                                   by reading the Incore Notices\n*                                   Directory Table we created before.\n         ST    R7,SAVRG7SB\n         NI    ACTNTFLG,X'FE'\nFT2NOTBL DS    0H                  Read the Incore Notices Directory.\n         L     R7,NOTETBLB         Address of incore Notices directory\n         LTR   R7,R7\n         BZ    FT2NOTBB\n         CLC   =C'NDHDR',0(R7)     Is this the proper header?\n         BNE   FT2NOTBB            No.\nFT2NOTBP DS    0H\n         LA    R7,5(,R7)           Bump past header.\n         CLC   =C'NDTLR',0(R7)     Is this the trailer?\n         BE    FT2NOTBE            Yes. Get out if we're at the end.\n         CLC   =X'0000000000',0(R7)  Is this an empty entry?\n         BE    FT2NOTBP            Yes. Just bump past and try again.\nFT2NOTBC DS    0H\n         MVC   CURNDNUM(2),0(R7)\n         MVC   CURNDRBA(3),2(R7)\n         CLC   CURNDRBA(3),SAVRNHEX+1\n         BNE   FT2NOTBP\nFT2NOTBS DS    0H\n         TM    0(R7),X'80'         Is this an unused entry?\n         BZ    FT2ACTIV            No. Count it as an active entry.\n         B     FT2INACT            Yes. Count it as unused.\nFT2ACTIV DS    0H\n         OI    ACTNTFLG,X'01'\n         MVC   FMT22ACT(8),NOTFMACT\n         B     FT2PRINT\nFT2INACT DS    0H\n         MVC   FMT22ACT(8),NOTFMINA\nFT2PRINT DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE,FMT02LN2\n         PUT   BRODPRNT,LINE\n         MVC   FMT22ACT(8),=C'        '\n* -- >  Put processing for Notice number here.\n         TM    ACTNTFLG,X'01'\n         BZ    FT2NOTNA\n         MVC   LINE,LINE-1\n         NI    CURNDNUM,X'7F'\n         HEX   FM023HEX+1,2,CURNDNUM\n         XR    R6,R6\n         ICM   R6,3,CURNDNUM\n         CVD   R6,DWORK\n         MVC   FM023DEC,MASK7A\n         ED    FM023DEC,DWORK+5\n         MVC   LINE,FMT02LN3\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\nFT2NOTNA DS    0H\n         B     FT2NOTBE\n* -- >  Put processing for Notice number here.\nFT2NOTBB DS    0H                  If the header is wrong, come here.\n         MVC   LINE,LINE-1\n         MVC   LINE,=CL133'   Notify Directory Table Read Error  -  2'\n         PUT   BRODPRNT,LINE\n         MVC   LINE,LINE-1\nFT2NOTBE DS    0H\nFORMT02E DS    0H\n         NI    ACTNTFLG,X'FE'\n         L     R7,SAVRG7SB\n         BR    R7\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         LTORG\nSEVENZRO DC    XL7'00000000000000'\nSEVENEMP DC    CL7'-Empty-'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nTRTCSECT CSECT                                                           05486\n* ------------------------------------------------------------------- *  05487\n*   The purpose of these translate tables is to do an ISPF-like       *  05488\n*   hex print on several lines.  TRTBL0 is EBCDIC printables.         *  05489\n* ------------------------------------------------------------------- *  05490\nTRTBL0   DS    0D                                                        05491\n         DC    XL16'40404040404040404040404040404040'                    05492\n         DC    XL16'40404040404040404040404040404040'                    05493\n         DC    XL16'40404040404040404040404040404040'                    05494\n         DC    XL16'40404040404040404040404040404040'                    05495\n         DC    XL16'404040404040404040404A4B4C4D4E4F'                    05496\n         DC    XL16'504040404040404040405A5B5C5D5E5F'                    05497\n         DC    XL16'606140404040404040406A6B6C6D6E6F'                    05498\n         DC    XL16'404040404040404040407A7B7C7D7E7F'                    05499\n         DC    XL16'40818283848586878889404040404040'                    05500\n         DC    XL16'40919293949596979899404040404040'                    05501\n         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    05502\n         DC    XL16'40404040404040404040404040404040'                    05503\n         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    05504\n         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    05505\n         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    05506\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05507\nTRTBL1   DS    0D                                                        05508\n         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    05509\n         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    05510\n         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    05511\n         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    05512\n         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    05513\n         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    05514\n         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    05515\n         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    05516\n         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    05517\n         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    05518\n         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    05519\n         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    05520\n         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    05521\n         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    05522\n         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    05523\n         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    05524\nTRTBL2   DS    0D                                                        05525\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05526\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05527\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05528\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05529\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05530\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05531\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05532\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05533\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05534\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05535\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05536\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05537\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05538\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05539\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05540\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05541\n         EJECT                                                           05593\nBDMPRINT CSECT\n         SPACE\n         IEZBITS\n         SPACE\n         IKJZT301\n         SPACE\n         IKJZT302\n         SPACE\n         IKJZT303\n         SPACE\n         IKJZT304\n         SPACE\n         IKJZT305\n         SPACE\n         IKJZT306\n         SPACE\n* ----------------------------------------------------------------- *\nPRMDSECT DSECT\nPRMDRCNO DS    F                   RBA number of record in BRODCAST\nPRMDRCAD DS    F                   Address of 130-byte record to be\n*                                   printed and optionally formatted.\nPRMNDTBL DS    F                   Pointer to incore Notices Directory\n*                                   Table, zero if it isn't there.\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMSEND": {"ttr": 12294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x14\\x00\\x95\\x15\\x0f\\x01\\x16&\\x9f\\x156\\x05\\x0f\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-30T00:00:00", "modifydate": "2016-09-25T15:36:14", "lines": 1295, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMSEND  TITLE 'BDMSEND - SEND A MESSAGE TO A USERID IN SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMSEND USERID MESSAGE TEXT                       *\n*                                                                     *\n*       FUNCTION:   TO SEND A USERID MESSAGE TO A TSO USERID WHO IS   *\n*                   DEFINED IN SYS1.BRODCAST.  WORKS ON SYS1.BRODCAST *\n*                   INTERNALLY, WITHOUT USING THE SEND COMMAND.       *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  JULY 31, 2005                                     *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         CHANGES:                                                    *\n*                                                                     *\n*       2007-06-07:  Rewrote program to speed it up.                  *\n*                    ENQ on all records that are accessed except      *\n*                     the second free record found (if it exists).    *\n*                    Got rid of instream IKJZT30x macros.             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\nBDMSEND  CSECT\n         USING BDMSEND,R12,R11,R10\n         B     BEGINN-*(,R15)\nSTRTCHAR DC    X'C0'           OPEN CURLY BRACKET\nENDCHAR  DC    X'D0'           CLOSE CURLY BRACKET\nSTRTCHA1 DC    X'7A'           COLON\nENDCHA1  DC    X'7A'           COLON\nSTRTCHA2 DC    X'7B'           POUND SIGN\nENDCHA2  DC    X'7B'           POUND SIGN\nSTRTCHA3 DC    X'7D'           SINGLE QUOTE\nENDCHA3  DC    X'7D'           SINGLE QUOTE\nSTRTCHA4 DC    X'7F'           DOUBLE QUOTE\nENDCHA4  DC    X'7F'           DOUBLE QUOTE\nSTRTCHA5 DC    X'7E'           EQUAL SIGN\nENDCHA5  DC    X'7E'           EQUAL SIGN\n         DC    C'BDMSEND Ver 1.4.0B '\n         DC    C'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n         DC    C' LLC - All Rights Reserved  '\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15             LOAD FIRST BASE REGISTER\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         STH   R3,CMBLENG          SAVE COMMAND BUFFER LENGTH\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         STH   R3,OFFSETT          SAVE OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS3            ZERO, SEND MESSAGE.............\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n         BAL   R9,GETMSGT          OBTAIN AND SAVE MSG TEXT\nALLSET   CLC   NEWID(6),=C'ALL$#@'\n         BNE   ONEID\n*   IF YOU WANT ALL$#@ TO WORK, THEN CHANGE X'00' TO X'FF'\n         MVI   ALLFLAG,X'00'\n*        MVI   ALLFLAG,X'FF'       SEND MESSAGE TO ALL USERIDS.\nONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n         MVC   RNAM(3),TYP5RBA     ENQUEUE ON FREE SEARCH RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,GETFRSR\n         BAL   R9,FINDFREE         FIND TWO FREE MESSAGE SLOTS\n         MVC   RNAM(3),FREERBA     ENQUEUE ON FIRST FREE RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n*        MVC   RNAM(3),FRE2RBA     ENQUEUE ON SECOND FREE RECORD\n*        ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n* - >\n*        MVC   LINE,LINE-1\n*        MVC   LINET(21),=C'I got past FINDFREE.'\n*        LA    R0,53\n*        BAL   R9,MSG\n* - >\n         BAL   R9,FINDUSER         FIND THE USERID RECORD\n         MVC   RNAM(3),MYUSRBA     ENQUEUE ON USERID RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         TM    CHAINFLG,X'01'\n         BZ    NOTCHAIN\n         BAL   R9,RECHAINO\nNOTCHAIN DS    0H\n         BAL   R9,WRITEMSG\n         MVC   RNAM(3),MYUSRBA     ENQUEUE ON USERID RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),FREERBA     ENQUEUE ON FIRST FREE RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n*        MVC   RNAM(3),FRE2RBA     ENQUEUE ON FIRST FREE RECORD\n*        DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         BAL   R9,WRTFRSR\n         MVC   RNAM(3),TYP5RBA     ENQUEUE ON FREE SEARCH RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       DEQ ON HEADER\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         BAL   R9,WRITEND\n         B     EOJ0\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN ROUTINE TO SEND MESSAGE                     --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  DS    0H\n         CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+46(10),TMSGCNT\n         MVC   LINET(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL+7\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR+7                      DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nFULLMESS MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSFULL                 SYS1.BRODCAST\n         LA    R0,L'MESSFULL+7                  IS\n         BAL   R9,MSG                             FULL\n         B     EOJ4                             AND GET OUT.\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE3+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE2+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              DUMP IN UNCORRUPTED RETURN CODE.\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)        R14 ALONE\n         LM    R0,R12,20(R13)      REST OF THE REGISTERS\n         BR    R14                 BACK TO THE SYSTEM\nEOJ0     SR    R5,R5               SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\nEOJ12    LA    R5,12               SET CC = 12.\n         B     EOJ                 CONT\nEOJ16    LA    R5,16               SET CC = 16.\n         B     EOJ                 CONT\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n*-----------------------------------------------------------------*\n*-- FEED THIS ROUTINE A USERID, AND IT WILL FIND OUT IF IT      --*\n*-- EXISTS IN SYS1.BRODCAST.  IF IT DOES, THE RBA OF ITS RECORD --*\n*-- IS RETURNED INTO MYUSRBA, THE USER SLOT IS RETURNED INTO    --*\n*-- MYUSSLOT, AND THE MESSAGE POINTERS ARE RETURNED INTO THE    --*\n*-- FIELD, SAVEPTRS.                                            --*\n*-----------------------------------------------------------------*\nFINDUSER DS    0H                  READ THROUGH USERID RECORDS\n         ST    R9,SAVER9A\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,SAVERBA\n*        MVC   LINET+10(18),=C'I got to FINDUSER.'\n*        LA    R0,53\n*        BAL   R9,MSG\n* - >\nFINDUSTR DS    0H\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(18),=C'Userid Record Read'\n*        LA    R0,53\n*        BAL   R9,MSG\n* - >\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nFUSRLOOP DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    FTRYNEXT            NOPE. JUST GO TO NEXT ENTRY\n         CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    FSAVPTRS            YEP. GO DEAL WITH IT\nFTRYNEXT LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         ST    R6,SAVER6           SAVE COUNT FOR RETRY (IF \"ALL\")\n         BCT   R6,FUSRLOOP         TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     FINDUSTR            END OF RECORD? GET ANOTHER.\n         SPACE 3\nFSAVPTRS DS    0H\n         MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,MYUSRBA\n*        HEX   LINET+10,1,MYUSSLOT\n*        HEX   LINET+15,3,SAVEPTRS\n*        HEX   LINET+25,3,SAVEPTRS+3\n*        MVC   LINET+35(19),=C'Found Userid Record'\n*        LA    R0,61\n*        BAL   R9,MSG\n* - >\n         CLC   USDRBA(3),=X'000000'\n         BE    FINDUNMS\n         OI    CHAINFLG,X'01'\n         MVC   PREVEND(3),USDEND\n         MVC   USDEND(3),FREERBA   RECHAIN USERID TO NEW MESSAGE\n         MVC   STOREND(3),FREERBA  STORE NEW END VALUE FOR THIS USERID\n         B     FINDUWRT            WRITE THE USERID RECORD BACK\nFINDUNMS DS    0H\n         MVC   USDRBA(3),FREERBA   RECHAIN USERID TO NEW MESSAGE\n         MVC   STORRBA(3),FREERBA  STORE NEW BEG VALUE FOR THIS USERID\n         MVC   USDEND(3),FREERBA   RECHAIN USERID TO NEW MESSAGE\n         MVC   STOREND(3),FREERBA  STORE NEW END VALUE FOR THIS USERID\nFINDUWRT DS    0H                  WRITE THE USERID RECORD BACK\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nFINDUSRX DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nFINDUSRE DS    0H\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,MYUSRBA\n*        HEX   LINET+10,1,MYUSSLOT\n*        HEX   LINET+15,3,USDRBA\n*        HEX   LINET+25,3,USDEND\n*        MVC   LINET+35(19),=C'Rewritten Pointers '\n*        LA    R0,61\n*        BAL   R9,MSG\n* - >\n         DROP  R3\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9O\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   SAVEID(8),NEWID\n         MVC   MESSENTU(7),NEWID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\n         L     R9,SAVER9O\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    FIND TWO FREE MESSAGE RECORDS\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFINDFREE DS    0H\n         ST    R9,SAVER9P          Save Work Registers.\n         ST    R8,SAVER8\n         ST    R7,SAVER7\n         ST    R6,SAVER6\n         MVC   BLOCKNO(3),FRSRRBA\n         CLC   TYP5RBA,ZEROS\n         BNE   SAVRGS01\n         MVC   BLOCKNO(3),=X'000001'\n         MVI   FULLFLAG,X'FF'\nSAVRGS01 DS    0H\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(13),=C'BLOCKNO Start'\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\n         L     R8,HIWATER          USE HIWATER AS FINISH AMT\n         L     R7,NUMRECS          LOAD TOTAL NUMBER OF RECS\n         XR    R6,R6               ENSURE EMPTY TO BEGIN\n         ICM   R6,7,BLOCKNO        LOAD STARTING POINT\n         SR    R7,R6               SET UP BCT FOR LOOP\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(13),=C'BLOCKNO Init '\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\nSTARTFSH DS    0H\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(13),=C'BLOCKNO Read '\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?\n         BE    FOUNDNEW            YES? FOUND ONE.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         XR    R6,R6\n         ICM   R6,7,BLOCKNO        LOAD AMOUNT INTO REGISTER\n         LA    R6,1(,R6)           ADD 1\n         CR    R6,R8               HIGHER THAN STOPPING POINT?\n         BH    FINDBEG             YES, START AT BEGINNING\n         STCM  R6,7,BLOCKNO        POINT TO NEXT BLOCK NUMBER\n         BCT   R7,STARTFSH         LOOP AND READ AGAIN\nFOUNDNEW DS    0H\n         TM    FREEFLAG,X'01'      GOT THE FIRST ONE ALREADY?\n         BO    FOUND2ND\n         OI    FREEFLAG,X'01'      TELL EM WE HAVE THE FIRST FREE\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(15),=C'BLOCKNO Found 1'\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\n         MVC   FREERBA(3),BLOCKNO  SAVE RBA OF FREE RECORD\n*  Increase by 1 for NFRERBA if you need to, here.\nFIND2ND  DS    0H\n         ICM   R6,7,BLOCKNO        LOAD AMOUNT INTO REGISTER\n         LA    R6,1(,R6)           ADD 1\n         CR    R6,R8               HIGHER THAN STOPPING POINT?\n         BH    FINDBEG             YES, START AT BEGINNING\n         STCM  R6,7,BLOCKNO        POINT TO NEXT BLOCK NUMBER\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(14),=C'BLOCKNO Find 2'\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\n         BCT   R7,STARTFSH         LOOP AND READ AGAIN\n         B     FINDFEND            AND DO IT AGAIN, SAM\nFOUND2ND DS    0H\n         TM    FREEFLAG,X'03'\n         BO    FINDFEND\n         OI    FREEFLAG,X'02'      TELL EM WE HAVE BOTH OF THEM\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(15),=C'BLOCKNO Found 2'\n*        LA    R0,33\n*        BAL   R9,MSG\n* - >\n         MVC   FRE2RBA(3),BLOCKNO  SAVE RBA OF FREE RECORD\n         B     FINDFENF\n* ----- >\nFINDBEG  DS    0H\n         TM    FREEFLAG,X'03'\n         BO    FINDFEND\n         CLI   FULLFLAG,X'FF'      CHECK IF WE WENT FROM BEGIN\n         BNE   FINDGOON            YES. WE KNOW BCAST IS FULL\n         L     R6,SAVER6           RESTORE REGISTER\n         L     R7,SAVER7           RESTORE REGISTER\n         L     R8,SAVER8           RESTORE REGISTER\n         TM    FREEFLAG,X'01'      DID WE FIND AT LEAST THE FIRST FREE?\n         BZ    FINDFULL\n         MVC   FRE2RBA(3),FREERBA\n         B     FINDFEND\nFINDFULL DS    0H\n         B     FULLMESS            BROADCAST FULL, AND OUT\nFINDGOON DS    0H\n         MVI   FULLFLAG,X'FF'      WE'RE NOW SEARCHING BEGINNG\n         ICM   R8,7,FRSRRBA        FINISH AT FREE SEARCH REC\n         LA    R7,1(,R8)           SET UP BCT REGISTER\n         LA    R6,1                START SEARCH AT RECORD 2\n         STCM  R6,7,BLOCKNO        LET READ KNOW ABOUT IT\n         SR    R7,R6               SET UP BCT FOR LOOP\n         B     STARTFSH            DO LOOP OVER AGAIN-1ST PART\nFINDFENF DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nFINDFEND DS    0H\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,FREERBA\n*        MVC   LINET+10(7),=C'FREERBA'\n*        LA    R0,30\n*        BAL   R9,MSG\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,FRE2RBA\n*        MVC   LINET+10(7),=C'FRE2RBA'\n*        LA    R0,30\n*        BAL   R9,MSG\n* - >\n         L     R6,SAVER6           RESTORE REGISTER\n         L     R7,SAVER7           RESTORE REGISTER\n         L     R8,SAVER8           RESTORE REGISTER\n         L     R9,SAVER9P\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    WRITE A MESSAGE, GIVEN THE RBA\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEMSG DS    0H\n         ST    R9,SAVER9Q\n         MVC   BLOCKNO(3),FREERBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?\n         BE    WRITEGO1            YES. GO ON PROCESSING IT\n* ---------------------------------------------------------\n*  TRYING TO WRITE ON THE WRONG TYPE OF RECORD.  BRODCAST\n*  PROBABLY IS FULL.  CHECK TO SEE IF WE LOOKED ENOUGH\n*  FOR A FREE RECORD.  TWO PASSES THROUGH BRODCAST.\n* ---------------------------------------------------------\n         CLI   FULLFLAG,X'FF'      WE TRIED FINDFREE TWICE?\n         BE    FULLMESS            YES. BRODCAST IS FULL-OUT\nWRITEGO1 MVI   0(R2),X'03'         SHOW IT'S A USED MESSAGE\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R3\n         ST    R7,SAVER7           SAVE WORK REGISTER\n         MVC   USMLNG(1),LENTHMSG+3  PLUG IN LENGTH OF MESSAGE\n         MVC   USMTEXT(125),BLANKMSG   FILL TEXT WITH BLANKS\n         MVC   USMNEXT(3),ZEROS    SHOW MSG IS LAST IN CHAIN\n         XR    R7,R7\n         IC    R7,LENTHMSG+3       SET UP EXECUTE\n         BCTR  R7,0                LOWER FOR MOVE\n         EX    R7,MOVEMESG         MOVE MESSAGE INTO RECORD\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nWRITEMND FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRITENDX L     R7,SAVER7\n         L     R9,SAVER9Q\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE MESSAGE TEXT FOR THE MESSAGE TO BE SENT.         *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETMSGT  DS    0H                  GET MESSAGE TEXT TO SEND\n         ST    R9,SAVER9C\n         ST    R7,SAVEWRK7         SAVE REGISTER CONTENTS\n         ST    R8,SAVEWRK8         SAVE REGISTER CONTENTS\n         L     R3,0(,R4)           LOAD ADDRESS OF CMD BUFFER\n         LH    R8,CMBLENG          TOTAL LENGTH OF CMD BUFFER\n         LA    R3,4(,R3)           COMPENSATE FOR HEADER\n         SH    R8,=H'4'            AND MINUS HEADER LENGTH\n         LH    R7,OFFSETT          LOAD OFFSET VALUE\n         LA    R3,0(R7,R3)         POINT TO BEGINNING OF CMD\n         SR    R8,R7               CMD BUFFER LNG MINUS OFFSET\n         XR    R7,R7               ZERO REGISTER\n         IC    R7,NEWPSCBL         LOAD LENGTH OF USERID\n         LA    R3,0(R7,R3)         POINT PAST USERID\n         SR    R8,R7               SUBTRACT USERID LENGTH\n         BC    8,WMESS2            ZERO, ISSUE MESSAGE.\n         BC    5,EOJ8              LESS, OVERFLOW, GET OUT\n         LR    R7,R8               INITIALIZE MESSAGE LENGTH\nFRSTBLNK DS    0H                  IF NON-BLANK,ASSUME MESSAGE\n*                                  STARTS HERE.\n         CLI   0(R3),X'40'         ARE WE AT A BLANK?\n         BE    LEADBLNK            YES, LOOK FOR MORE BLANKS\n         B     BLANKEND            NO, ASSUME MSG STARTS HERE\nLEADBLNK DS    0H                  BUMP PAST LEADING BLANKS\n         CLI   0(R3),X'40'         IS THIS CHAR A BLANK?\n         BNE   CLOSEBRK            NO, END LOOP\n         LA    R3,1(,R3)           BUMP TO NEXT CHARACTER\n         BCTR  R7,0                MESSAGE IS 1 CHAR SHORTER\n         BCT   R8,LEADBLNK         LOOP TILL 1ST NON-BLANK\nCLOSEBRK DS    0H\n         CLC   STRTCHAR(1),0(R3)   Is the Start Character here?\n         BE    CHAR00              Not the first non-blank\n         CLC   STRTCHA1(1),0(R3)   Is the Start Character here?\n         BE    CHAR01              Not the first non-blank\n         CLC   STRTCHA2(1),0(R3)   Is the Start Character here?\n         BE    CHAR02              Not the first non-blank\n         CLC   STRTCHA3(1),0(R3)   Is the Start Character here?\n         BE    CHAR03              Not the first non-blank\n         CLC   STRTCHA4(1),0(R3)   Is the Start Character here?\n         BE    CHAR04              Not the first non-blank\n         CLC   STRTCHA5(1),0(R3)   Is the Start Character here?\n         BE    CHAR05              Not the first non-blank\n         B     BLANKEND\nCHAR00   DS    0H\n         MVC   STCH(1),STRTCHAR\n         MVC   ENCH(1),ENDCHAR\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR01   DS    0H\n         MVC   STCH(1),STRTCHA1\n         MVC   ENCH(1),ENDCHA1\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR02   DS    0H\n         MVC   STCH(1),STRTCHA2\n         MVC   ENCH(1),ENDCHA2\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR03   DS    0H\n         MVC   STCH(1),STRTCHA3\n         MVC   ENCH(1),ENDCHA3\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR04   DS    0H\n         MVC   STCH(1),STRTCHA4\n         MVC   ENCH(1),ENDCHA4\n         BAL   R9,CHSTREND\n         B     BLANKEND\nCHAR05   DS    0H\n         MVC   STCH(1),STRTCHA5\n         MVC   ENCH(1),ENDCHA5\n         BAL   R9,CHSTREND\n         B     BLANKEND\nBLANKEND DS    0H                  SAVE MESSAGE TEXT NOW.\n         BCTR  R7,0                ONE LESS FOR EXECUTE\n         MVC   MSGTEXT(125),BLANKMSG   BLANK SEND MSG AREA\n         EX    R7,MOVEMSGG         MOVE THE MESSAGE INTO IT\n         MVC   LINE,LINE-1         CLEAR MESSAGE LINE\n         MVC   LINE,MSGTEXT        MOVE TEXT IN\n         LA    R0,1(,R7)           LOAD TRUE MESSAGE LENGTH\n         BAL   R9,MSG              GO WRITE MESSAGE TEXT\n         LA    R7,1(,R7)           LOAD TRUE MESSAGE LENGTH\n         ST    R7,LENTHMSG\n         L     R7,SAVEWRK7         RESTORE REGISTER CONTENTS\n         L     R8,SAVEWRK8         RESTORE REGISTER CONTENTS\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9L\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   NUMRECS(4),R1RECNUM   SAVE TOTAL NUMBER OF RECORDS\n         ST    R7,SAVER7           SAVE REGISTER\n         L     R7,NUMRECS          PUT NUMBER OF RECORDS IN\n         BCTR  R7,0                MINUS ONE\n         ST    R7,HIWATER          HIGHEST RBA PERMITTED\n         L     R7,SAVER7           RESTORE REGISTER\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9L\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9M\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9M\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        ROUTINE TO DISPLAY HEX VALUES                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9N\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9N\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9D\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   MESSENTU(8),BLANKS\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS        ZERO OUT\n         MVC   FSRCRBA(3),ZEROS          ALL THE RBA\n         MVC   NEXTRBA(3),ZEROS            STORAGE AREAS\n         MVC   NFRERBA(3),ZEROS\n         MVC   MINRBA(3),=X'FFFFFF'    PUT A LARGE VALUE IN\n         MVI   ALLFLAG,X'00'\n         MVI   FULLFLAG,X'00'\n         MVI   FREEFLAG,X'00'\n         MVI   CHAINFLG,X'00'\n         MVC   MSGTEXT(125),BLANKMSG   MOVE BLANKS TO MSG AREA\n         MVC   OFFSETT(2),ZEROS\n         MVC   CMBLENG(2),ZEROS\n         MVC   NUMRECS(4),ZEROS\n         XC    HIWATER(4),HIWATER      PREVENT S0CX\n         MVC   NFRERBA(3),ZEROS\n         L     R9,SAVER9D\n         BR    R9\n* ------------------------------------------------------------------ *\nGETPSCB  DS    0H\n         ST    R9,SAVER9E\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              SAVE CPPL POINTERS                                 *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9F\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9F\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9G\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9G\n         BR    R9\n* ------------------------------------------------------------------- *\nCHSTREND DS    0H\n         ST    R9,SAVER9B\n         ST    R3,SAVER3A\n         ST    R7,SAVER7A\n         BCTR  R7,0                Yes it is. So Msg is one char less.\n         LA    R3,1(,R3)           Bump to real start character\n         ST    R5,SAVER5           Save work register\n         XR    R5,R5               Zero it to make sure\n         LA    R5,0(R7,R3)\n         BCTR  R5,0                Point to end character\n         CLC   ENCH(1),0(R5)       Is it equal to special character?\n         BNE   EGTMSG              No. Don't drop last char.\n         BCTR  R7,0                Lower msg length by one.\nEGTMSG   DS    0H\n         L     R5,SAVER5           Restore work register.\nCHSTRENE DS    0H\n         L     R9,SAVER9B\n         BR    R9\nSTCH     DS    X\nENCH     DS    X\n* ------------------------------------------------------------------- *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9K\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINE,MESSENT                     END OF USER LINE\n         MVC   MESSENT+25(7),SAVEID\n         LA    R0,L'MESSENT+8\n         BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9L\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETFRSR  DS    0H\n         ST    R9,SAVER9S\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAS\n         BE    GETFRSRA\n         MVC   BLOCKNO,TYP5RBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING FREESRCH,R3\n         MVC   FRSRRBA(3),FSEARCH\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     GETFRSRE\nGETFRSRA DS    0H\n         MVC   FRSRRBA(3),=X'000001'\nGETFRSRE DS    0H\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,FRSRRBA\n*        LA    R0,30\n*        BAL   R9,MSG\n* - >\n         L     R9,SAVER9S\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nRECHAINO DS    0H\n         ST    R9,SAVER9T\n         MVC   RNAM(3),PREVEND     ENQUEUE ON PREVIOUS MESSAGE\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   BLOCKNO(3),PREVEND\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,BLOCKNO\n*        MVC   LINET+10(18),=C'Last Msg Rechained'\n*        LA    R0,53\n*        BAL   R9,MSG\n* - >\n         L     R2,MDLDECB+20       Address of Key\n         CLI   0(R2),X'03'\n         BNE   BADEND\n         L     R3,MDLDECB+12       Address of Record\n         USING USMSG,R3\n         MVC   USMNEXT(3),FREERBA\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         DROP  R3\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nRECHAINS DS    0H\n         MVC   RNAM(3),PREVEND     DEQUEUE ON PREVIOUS MESSAGE\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         L     R9,SAVER9T\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRTFRSR  DS    0H\n         ST    R9,SAVER9U\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAS\n         BE    WRTFRSRE\n         MVC   BLOCKNO,TYP5RBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING FREESRCH,R3\n         MVC   FSEARCH(3),FRE2RBA  REPLACE FREE SEARCH RBA\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRTFRSRE DS    0H\n* - >\n*        MVC   LINE,LINE-1\n*        HEX   LINET,3,FRE2RBA\n*        MVC   LINET+10(19),=C'New Free Search RBA'\n*        LA    R0,36\n*        BAL   R9,MSG\n* - >\n         DROP  R3\n         L     R9,SAVER9U\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R3\nMOVEMESG MVC   USMTEXT(*-*),MSGTEXT  EXECUTED\n         DROP  R3\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\nMOVEMSGG MVC   MSGTEXT(*-*),0(R3)  EXECUTED\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLANKS   DC    C'        '         8 BLANKS\nBLANKMSG DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'YOU HAVE TO SPECIFY MESSAGE TEXT AFTER THE USERID'\nMESSAGE3 DC    C'YOU HAVE TO SPECIFY A USERID AFTER THE COMMAND NAME'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESSENT  DC    C'MESSAGE SENT TO USERID: '\nMESSENTU DC    CL8'        '\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESSFULL DC    C'SYS1.BRODCAST IS FULL.  NO ROOM TO WRITE MESSAGES.'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nFRSRRBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nPREVRBA  DC    X'000000'           RBA OF PREVIOUS MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nFREERBA  DC    X'000000'           RBA OF FREE MESSAGE SLOT FOUND\nFRE2RBA  DC    X'000000'           RBA OF FREE MESSAGE SLOT FOUND\nNEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMINRBA   DC    X'000000'\nNFRERBA  DC    X'000000'           NEW FREE SEARCH RBA FOR TYPE 5\nFSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nSTORRBA  DC    X'000000'\nSTOREND  DC    X'000000'\nPREVEND  DC    X'000000'\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSAVEID   DS    CL8                 STORE USERID HERE\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER3A  DS    F                   SAVE REGISTER\nSAVER5   DS    F                   SAVE REGISTER\nSAVER6   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7   DS    F                   SAVE REGISTER\nSAVER7A  DS    F                   SAVE REGISTER\nSAVER8   DS    F                   SAVE REGISTER\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nSAVER9U  DS    F                   BAL Register Save Area\nSAVER9V  DS    F                   BAL Register Save Area\nSAVER9W  DS    F                   BAL Register Save Area\nSAVER9X  DS    F                   BAL Register Save Area\nSAVER9Y  DS    F                   BAL Register Save Area\nSAVER9Z  DS    F                   BAL Register Save Area\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nALLFLAG  DS    X\nFULLFLAG DS    X\nFREEFLAG DS    X\nCHAINFLG DS    X\nOFFSETT  DS    H\nCMBLENG  DS    H\nMSGTEXT  DS    CL125\nSAVEWRK7 DS    F\nSAVEWRK8 DS    F\nLENTHMSG DS    F\nNUMRECS  DS    F\nHIWATER  DS    F\n         DS    F                   FILLER\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJZT306 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMULOAD": {"ttr": 12807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01+\\x002\\x01\\x066\\x1f\\x01\\x16&\\x9f\\x156\\x05\\x19\\x04\\xac\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.43", "flags": 0, "createdate": "2006-12-27T00:00:00", "modifydate": "2016-09-25T15:36:32", "lines": 1305, "newlines": 1196, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMULOAD TITLE 'BDMULOAD - EXTRACT USERIDS DEFINED TO SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program which bulk        *\n*                   loads a file of userid names into a BRODCAST      *\n*                   Dataset.  The BRODCAST Dataset has to have        *\n*                   no userids in it currently.  For example,         *\n*                   if the BRODCAST Dataset was initialized by the    *\n*                   BDMINIT program, it is a candidate for loading    *\n*                   of userids by this BDMULOAD program.              *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*       Batch Program - Execution JCL                                 *\n*                                                                     *\n*  //  JOB CARD                                                       *\n*  //*----------------------------------------------------------*//   *\n*  //*   BDMULOAD EXECUTION - BULK LOAD OF USERIDS INTO EMPTY   *//   *\n*  //*                        BRODCAST DATASET                  *//   *\n*  //*----------------------------------------------------------*//   *\n*  //GETUSERS EXEC PGM=BDMULOAD                                       *\n*  //STEPLIB  DD DISP=SHR,DSN=SBGOLOB.BRODMSTR.LOADLIB                *\n*  //BRODCAST DD DISP=SHR,DSN=newly.initted.brodcast.dataset          *\n*  //SYSPRINT DD SYSOUT=*                                             *\n*  //UIDPRES  DD SYSOUT=*                                             *\n*  //BDMUSIN  DD DISP=SHR,DSN=input.sorted.userid.file                *\n*  //BDMUSOUT DD DSN=error.user.dump.file,DISP=(,CATLG,DELETE),       *\n*  //    UNIT=SYSALLDA,                                               *\n*  //    DCB=(RECFM=FB,LRECL=8,BLKSIZE=8000,DSORG=PS),                *\n*  //    SPACE=(TRK,(15,15),RLSE),VOL=SER=WORK04                      *\n*  //SYSUDUMP DD SYSOUT=*                                             *\n*                                                                     *\n*  Function:   To load all userids from a BDMUSOUT format file        *\n*              into an initialized BRODCAST Dataset.                  *\n*                                                                     *\n*  Author:     Sam Golob               Version:   1.4.0               *\n*                                                                     *\n*  Date:       Dec 17, 2006                                           *\n*                                                                     *\n*  Changes:    12/17/06 -                                             *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        Register Equates\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMULOAD'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)       Branch over Eyecatchers\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMULOAD,R12,R11,R10\n         LR    R12,R15              Set up base registers\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R5,R1                Preserve PARM Pointer.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R5,SAVEPRM           PARM Pointer to Data Area Field\n         L     R1,SAVEPRM           Restore PARM Pointer\n         BAL   R9,INITCON           Initialize Constants in Data Area\n         SPACE 1\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of DD names in      06224\n*                             the JCL:  BRODCAST, BDMUSIN, UIDPRES,      06225\n*                                       BDMUSOUT.                        06225\n* ----->                      Then OPEN them if there is JCL for them.   06226\n* ----->                      Then test the OPEN if it was good.         06226\n* ----->                      Set DDNFLAG on if the appropriate DD       06226\n* ----->                       was in the JCL.                           06226\n* ----->                      Set BDMNOFLG on if the appropriate OPEN    06226\n* ----->                       for the DD DIDN'T WORK!!!                 06226\n* ----------------------------------------------------------------- *    06227\n         MVI   DDNFLAG,X'00'        ZERO OUT DDNFLAG - Nothing OPEN\n         ST    R3,SAVER3            Save work registers\n         ST    R5,SAVER5\n         L     R5,16                R5=CVT                               06228\n         L     R5,0(,R5)            R5=TCB WORDS                         06229\n         L     R5,4(,R5)            R5=MY TCB                            06230\n         L     R5,12(,R5)           R5=TIOT                              06231\n         LA    R5,24(,R5)           R5=FIRST DD ENTRY                    06232\nTIOTLOOP CLC   0(4,R5),=XL4'00'     END OF TIOT?                         06233\n         BE    TIOTSEND             Yes. Go on with OPENs.               06234\n         CLC   4(8,R5),BRODCASN     BRODCAST DDNAME there?               06235\n         BNE   TIOTPRTN             No                                   06236\n         OI    DDNFLAG,X'01'        Show presence of BRODCAST DD         06237\n         B     TIOTNEXT             Try next entry                       06238\nTIOTPRTN CLC   4(8,R5),BDMUSINN     BDMUSIN DDNAME there?                06239\n         BNE   TIOTUSRN             No                                   06240\n         OI    DDNFLAG,X'02'        Show presence of BDMUSIN DD          06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTUSRN CLC   4(8,R5),UIDPRESN     UIDPRES DDNAME there?                06239\n         BNE   TIOTUSON             No                                   06240\n         OI    DDNFLAG,X'04'        Show presence of UIDPRES  DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTUSON CLC   4(8,R5),BDMUSOUN     BDMUSOUT DDNAME there?               06239\n         BNE   TIOTSYSP             No                                   06240\n         OI    DDNFLAG,X'08'        Show presence of BDMUSOUT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTSYSP CLC   4(8,R5),SYSPRINN     SYSPRINT DDNAME there?               06239\n         BNE   TIOTNEXT             No                                   06240\n         OI    DDNFLAG,X'10'        Show presence of SYSPRINT DD         06241\n         B     TIOTNEXT             Try next entry                       06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)            R3=LENGTH OF DD ENTRY                06244\n         AR    R5,R3                R5=NEXT DD ENTRY                     06245\n         B     TIOTLOOP             GO CHECK IT                          06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3            Restore work registers\n         L     R5,SAVER5\n         B     WTOULOAD             Jump over Constants\n* ---- >     - - - - - - - - - - - -\nBRODCASN DC    CL8'BRODCAST'        Literals for the DD names.\nBDMUSINN DC    CL8'BDMUSIN'\nBDMUSOUN DC    CL8'BDMUSOUT'\nUIDPRESN DC    CL8'UIDPRES '\nSYSPRINN DC    CL8'SYSPRINT'\n* ---- >     - - - - - - - - - - - -\nWTOULOAD DS    0H\n         HEX   DDNREPR,1,DDNFLAG\n         MVC   DIAGWTO+8(8),=C'BDMUL01I'\n         MVC   DIAGWTO+21(7),=C'DDNFLAG'\n         MVI   DIAGWTO+29,C'='\n         MVC   DIAGWTO+31(2),DDNREPR\n         TM    DDNFLAG,X'19'\n         BNO   DIAGGOON\n         MVC   DIAGWTO+40(9),=C' - OK -  '\nDIAGGOON DS    0H\nDIAGWTO  WTO   '                              * diagnosis *',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'01'\n         BO    NOUSERID\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL10E     BRODCAST DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNOUSERID DS    0H\n         TM    DDNFLAG,X'02'\n         BO    NOBDMUSI\n         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL07I     //BDMUSIN DD input is needed. ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL06I     Reports are for Diagnosis only',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X\n               ,DESC=7\nNOBDMUSI DS    0H\n         TM    DDNFLAG,X'04'\n         BO    NOUIDDIA\n         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL08I     //UIDPRES DD SYSOUT=* Optional',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X\n               ,DESC=7\nNOUIDDIA DS    0H\n         TM    DDNFLAG,X'08'\n         BO    NOBDMUSO\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL10E     BDMUSOUT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNOBDMUSO DS    0H\n         TM    DDNFLAG,X'10'\n         BO    NOSYSPRI\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nNOSYSPRI DS    0H\nTSTEOJ16 DS    0H\n         TM    DDNFLAG,X'19'    Change if testing more DD Names\n         BO    DOOPENS\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL09E     Please correct your JCL.......',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ16\n* ---------------------------------------------------------------- *\n*                                                                  *\n*   OPEN FILES -                                                   *\n*                                                                  *\n*    When we're finished here, we should have a good idea about    *\n*    how the DD names were coded in the JCL, and which files were  *\n*    actually opened.  We use 2 flags:  DDNFLAG (if on) shows      *\n*    that the DD name was actually coded in the JCL.  BDMNOFLG     *\n*    (if on) shows that the actual file is NOT OPEN.  In either    *\n*    flag:                                                         *\n*                                                                  *\n*    BRODCAST DD  -  flag = X'01'                                  *\n*    BDMUSIN  DD  -  flag = X'02'                                  *\n*    UIDPRES  DD  -  flag = X'04'                                  *\n*    BDMUSOUT DD  -  flag = X'08'                                  *\n*    SYSPRINT DD  -  flag = X'10'                                  *\n*                                                                  *\n* ---------------------------------------------------------------- *\nDOOPENS  DS    0H                   OPEN SYSPRINT and print titles\n         OPEN  (SYSPRINT,(OUTPUT))\n         PUT   SYSPRINT,TITLINE\n         PUT   SYSPRINT,CPYRLINE\n         PUT   SYSPRINT,ULOTITLE\n         PUT   SYSPRINT,BLNKLINE\n         TM    DDNFLAG,X'01'        Is BRODCAST DD in JCL?\n         BZ    NOBRODDD             No. Don't OPEN. Flag as Bad OPEN.\n         OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'    Did the OPEN work?\n         BO    TRYOOPN1             Yes. Go OPEN the other files.\nNOBRODDD DS    0H\n         OI    BDMNOFLG,X'01'       Flag that BRODCAST DD is not OPEN\n*        B     TRYOOPNO\nTRYOOPN1 DS    0H\n         TM    DDNFLAG,X'02'        Is BDMUSIN DD in JCL?\n         BZ    NOUOUTDD             No. Don't OPEN. Flag as Bad OPEN.\n         OPEN  (BDMUSIN,(INPUT))\n         TM    BDMUSIN+48,X'10'     Did the OPEN work?\n         BO    USOUTOPN             Yes. Don't flag that it didn't.\nNOUOUTDD DS    0H\n         OI    BDMNOFLG,X'02'       Flag that BDMUSIN DD is not OPEN\n         B     TRYOOPN2             Go to the next DD name.\nUSOUTOPN DS    0H                   Report on BDMUSIN Characteristics\n* ----------------------------------------------------------------- *\n*   BDMUSIN has to be OPEN here, because we branched if not OPEN.   *\n* ----------------------------------------------------------------- *\n         RDJFCB BRODCAST\n         MVC   OUTLINE,OUTLINE-1    Clear work area for output line\n         MVC   OUTLINE,MSGDSN       Move in message skeleton\n         TM    DDNFLAG,X'07'        3 DD'S are OPEN?\n         BO    TRYOOPN2             Yes-then don't print here yet.\n         BAL   R6,PRTJFCB           Has to be Diagnostics Only.\nTRYOOPN2 DS    0H\n         TM    DDNFLAG,X'04'        UIDPRES DD present?\n         BZ    NOUIDDDD             No. So don't try to OPEN it.\n         OPEN  (UIDPRES,(OUTPUT))\n         TM    UIDPRES+48,X'10'     Did the OPEN work?\n         BO    PUTUIDTL             Yes. So put out title information.\nNOUIDDDD DS    0H\n         OI    BDMNOFLG,X'04'       Flag that UIDPRES DD is not OPEN.\n         B     TRYOOPNO             If so, no UID report. But go on.\nPUTUIDTL DS    0H                   Begin printing UID Diagnostics.\n         PUT   UIDPRES,TITLINE\n         PUT   UIDPRES,CPYRLINE\n         PUT   UIDPRES,UIDTITLE\n         PUT   UIDPRES,BLNKLINE\n         TM    DDNFLAG,X'07'        3 DD'S are OPEN?\n         BNO   OUTNDIAG             Not all OPEN. Don't print JFCB here\n         BAL   R6,PRTJFCB           Print characteristics of BDMUSIN\nOUTNDIAG DS    0H                   Diagnostics only message.\n         TM    DDNFLAG,X'02'        BDMUSIN there?\n         BO    NOMSG3               Yes. No Diagnosis Only report.\n         TM    DDNFLAG,X'05'        BRODCAST and UIDPRES only?\n         BNO   NOMSG3               Not this combination. Omit message.\n         BAL   R6,DIAGONLY          Diagnostics report only, for UIDs.\nNOMSG3   DS    0H                   Finish up UID report Header.\n         PUT   UIDPRES,UIDDESCL\n         PUT   UIDPRES,UIDDASH\n         PUT   UIDPRES,BLNKLINE\nTRYOOPNO DS    0H\n         TM    DDNFLAG,X'03'        BRODCAST and BDMUSIN DDs there?\n         BO    TRYUSOUT             They are there, so go on.\n         TM    DDNFLAG,X'05'        BRODCAST and UIDPRES DDs there?\n         BO    TRYUSOUT             They are there, so go on.\n         B     WMESS                They are not there - Error & Exit.\nTRYUSOUT DS    0H\n         TM    DDNFLAG,X'08'        Is BDMUSOUT OPEN?\n         BZ    HREAD                No. Don't try to OPEN it.\n         OPEN  (BDMUSOUT,(OUTPUT))\n         TM    BDMUSOUT+48,X'10'    Did the OPEN work?\n         BO    BDMUSGUD             Yes, it was good. Go on.\n         OI    BDMNOFLG,X'08'       Mark that it was not OPENed.\nBDMUSGUD DS    0H\n*\n*\n* ------------------------------------------------------------------ *\nHREAD    DS    0H\n         BAL   R9,HEADREAD         Read Header Record and extract\n*                                  RBA of first UID record to search.\n*                                  This value is stored in SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---     Check that there are no USERIDs in BRODCAST now,       --- *\n* ---     and if there are any, dump them into BDMUSOUT          --- *\n* ---     and stop the program without doing any loading.        --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  Read through USERID records\n         CLC   SAVERBA(3),ZEROS    Are we at the end of USERID records?\n         BE    END1PASS            End of USERID record chain.\n         ZAP   SLOTCNT,=P'0'       New slot count for new READ.\n         LA    R7,9                Count of USERIDS per record.\n         MVC   BLOCKNO,SAVERBA     Get RBA for READ.\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       Address of Record\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  Save current RBA.\n         MVC   UIDPRBA(3),SAVERBA  Save current RBA for UID report.\n         MVC   SAVERBA(3),USDNEXT  Get next record's RBA.\n         LA    R8,0                Initialize USERID slot counter.\nUSRLOOP  DS    0H\n         AP    SLOTCNT,=P'1'       Count which slot this is.\n         MVC   USERID(8),BLANKS    Ensure blank in 8th place.\n         MVC   USERIDI(7),USDID    Copy who this is.\n         CLC   USERIDI(7),ZEROS    Is this a real user?\n         BE    GOTZERO             No. This is actually what we want.\n         OI    NONEMFLG,X'01'      Exist real id's here. Can't load.\n         TM    BDMNOFLG,X'08'      Is BDMUSOUT not OPEN?\n         BO    NXBDMUSO            Yes. Can't PUT anything to it.\n         PUT   BDMUSOUT,USERID     PUT out this ID to output file,\n*                                   so if we need to, we can reload\n*                                   it later.\nNXBDMUSO DS    0H\n         AP    USERCNT,=P'1'       Increment user counter.\n         TM    BDMNOFLG,X'04'        UIDPRES not OPEN?\n         BO    NOUIDPRT               Then we can't do UID print out.\n*\n* -- > This is the guts of the UID diagnostics report - below\n*\n         MVC   SLOTLINE(133),SLOTLINE-1    Clear slot line.\n         MVC   SLOTLINE+5(10),MASK10       Move in mask.\n         ED    SLOTLINE+5(10),USERCNT      Count of all Userids.\n         MVC   SLOTLINE+20(8),USERID       Name of this Userid.\n         HEX   SLOTLINE+30,3,UIDPRBA       Hex display of record's RBA\n         MVC   SLOTLINE+40(10),BLNKLINE    Prepare for Decimal display\n         L     R5,UIDPRB                   Get RBA number\n         CVD   R5,DWORK                    Convert it to decimal\n         MVC   SLOTLINE+40(7),MASK7A       Move in edit mask\n         ED    SLOTLINE+40(7),DWORK+5      Edit the Decimal number in\n         MVC   SLOTLINE+50(6),MASK6        Report which slot this is\n         ED    SLOTLINE+50(6),SLOTCNT+4    Edit the slot number\n         MVC   SLOTLINE+54(30),BLNKLINE    Clean out rest of the line.\n         PUT   UIDPRES,SLOTLINE\n         MVC   SLOTLINE(133),SLOTLINE-1    Clear the entire SLOT line.\nNOUIDPRT DS    0H\n*\n* -- > This is the guts of the UID diagnostics report - above\n*\nGOTZERO  DS    0H\n         AP    EMPTYCNT,=P'1'              Count empty slots we have.\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)            Bump location to next USERID.\n         LA    R8,1(,R8)             Bump counter within record.\n         BCT   R7,USRLOOP            Try for another user entry.\n*                           Free buffers before getting another record.\n         FREEDBUF MDLDECB,           DECB ADDR USED TO READ            X\n               D,                    USED BDAM READ                    X\n               BRODCAST              DCB FOR PROCESS DATA SET\n         B     INDEXUS               END OF RECORD? GET ANOTHER.\n         SPACE 3\n* ------------------------------------------------------------------ *\n* ---    END OF FIRST LOOP FOR USERIDS.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n*        LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         PUT   SYSPRINT,LINE                     SO GOOD.\n* ------------------------------------------------------------------ *\n*        *---------------------------------------------------*       *\n*        *  GET HERE AT END OF FIRST PASS THRU USER RECORDS  *       *\n*        *---------------------------------------------------*       *\n*        *  The idea was to measure how many empty slots we  *       *\n*        *   have, so we can see how many USERIDs fit in.    *       *\n*        *---------------------------------------------------*       *\n* -- >      Put out the Summary Report line....                      *\n* ------------------------------------------------------------------ *\nEND1PASS DS    0H                         End of pass thru UID slots.\n         MVC   LINE,LINE-1                Print blank line.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   WK1ALL,USRALL              Show how many real UIDs are\n         MVC   WK1ALL+46(10),MASK10         in BRODCAST. This is an\n         ED    WK1ALL+46(10),USERCNT        error condition for the\n         MVC   LINET(L'WK1ALL),WK1ALL       program if not zero.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   WK2ALL,EMTALL              Show how many empty slots\n         MVC   WK2ALL+46(10),MASK10         are in BRODCAST, available\n         ED    WK2ALL+46(10),EMPTYCNT       to contain new USERIDs.\n         MVC   LINET(L'WK2ALL),WK2ALL\n         PUT   SYSPRINT,LINE\n         TM    BDMNOFLG,X'04'             Also doing for UIDPRES?\n         BO    END1PEOJ                     Not there - don't do.\n         PUT   UIDPRES,BLNKLINE           Print blank line to UIDPRES.\n         PUT   UIDPRES,LINE\nEND1PEOJ DS    0H\n         TM    NONEMFLG,X'01'             Were there real USERIDs?\n         BO    END1NONE                   Yes. Send message.\n         TM    DDNFLAG,X'02'              Was BDMUSIN coded?\n         BZ    END1PERR                   No. End here.\n         TM    BDMNOFLG,X'02'             Was BDMUSIN OPENed?\n         BO    END1PERR                   No. End here.\n         TM    NONEMFLG,X'01'             Were there real USERIDs?\n         BZ    GO2PASS                    No. So we're good to go.\nEND1NONE DS    0H\n         MVC   LINE,LINE-1                Clear line.\n         PUT   SYSPRINT,LINE              Blank line.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAGE4),MESSAGE4   Show we can't load UIDs.\n         PUT   SYSPRINT,LINE\n         B     EOJ4                         Now get the heck out.\nEND1PERR DS    0H                         No BDMUSIN present.\n         MVC   LINE,LINE-1                Clear line.\n         PUT   SYSPRINT,LINE              Blank line.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAG14),MESSAG14   Show we can't load UIDs.\n         PUT   SYSPRINT,LINE\n         TM    BDMNOFLG,X'04'\n         BO    END1NOLO\n         PUT   UIDPRES,LINE\nEND1NOLO DS    0H\n         B     EOJ4                         Now get the heck out.\n* ------------------------------------------------------------------ *\n* ---    SECOND LOOP TO LOAD NEW USERIDS.                        --- *\n* ------------------------------------------------------------------ *\n*   This pass reads through the BDMUSIN file and checks if it is     *\n*    sorted, and that there are no duplicate records.  An error      *\n*    condition will stop the action at the indicated USERID count.   *\n* ------------------------------------------------------------------ *\nGO2PASS  DS    0H                           Initialize second pass.\n         MVC   LINE,LINE-1                  Print a blank line.\n         PUT   SYSPRINT,LINE\n         MVC   SVUIDIN(8),BLANKS            Initialize previous UID.\nCOUNTUID DS    0H                           See if there is an error.\n         GET   BDMUSIN,UIDIN                Get a new USERID.\n         CLC   SVUIDIN,UIDIN                Compare to previous one.\n         BL    GO2GOON                      Previous one is less-good!\n         BE    GO2DUPS                      Previous is equal-duplicate\n         BH    GO2NSRT                      Previous is high-unsorted\nGO2DUPS  DS    0H                           Report duplicate USERIDs.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   WK4ALL,LINE\n         MVC   WK4ALL,MESSAGE6              Duplicate User Message\n         MVC   LINET(L'WK4ALL),WK4ALL\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   WK5ALL,LINE\n         MVC   WK5ALL,MESSAGE7              Where in the file is it?\n         MVC   WK5ALL+32(10),MASK10\n         ED    WK5ALL+32(10),UIDSCNT\n         MVC   LINET(L'WK5ALL),WK5ALL\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAG10),MESSAG10   Run the program over.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         PUT   SYSPRINT,LINE\n         B     EOJ8\nGO2NSRT  DS    0H                           Report Non-sorted USERIDs.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   WK4ALL,LINE\n         MVC   WK4ALL,MESSAGE8              Not in sort order.\n         MVC   LINET(L'WK4ALL),WK4ALL\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   WK5ALL,LINE\n         MVC   WK5ALL,MESSAGE9              Where in the file\n         MVC   WK5ALL+32(10),MASK10          is the unsorted record?\n         ED    WK5ALL+32(10),UIDSCNT        Here.....\n         MVC   LINET(L'WK5ALL),WK5ALL       Move to print line.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAG10),MESSAG10   Run the program over.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line\n         PUT   SYSPRINT,LINE                Print blank line.\n         B     EOJ8\nGO2GOON  DS    0H                           UIDs are sorted-increasing.\n         MVC   SVUIDIN,UIDIN                Update the previous USERID\n         AP    UIDSCNT,=P'1'                And add 1 to the count.\n         B     COUNTUID                     Go get another one.\nEND2P    DS    0H                           EODAD address for BDMUSIN.\n         TM    END2PFLG,X'01'               Is this from the first OPEN\n         BO    END3P                        No. From the second OPEN.\n         OI    END2PFLG,X'01'               After first pass-prevent.\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAG11),MESSAG11   Enough slots for the UIDs.\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1                  Clear Line.\n         PUT   SYSPRINT,LINE                Blank line.\n         MVC   LINE,LINE-1                  Clear Line.\n         MVC   WK5ALL,LINE\n         MVC   WK5ALL,MESSAG13              Print number\n         MVC   WK5ALL+32(10),MASK10            of USERIDs in\n         ED    WK5ALL+32(10),UIDSCNT              the BDMUSIN file.\n         MVC   LINET(L'WK5ALL),WK5ALL\n         PUT   SYSPRINT,LINE\n         CP    UIDSCNT,EMPTYCNT             Compare to number of slots.\n         BNH   GO3PASS                      Enough. Go to 3rd pass.\n         MVC   LINE,LINE-1\n         MVC   WK3ALL,MESSAGE5              Print error message\n         MVC   WK3ALL+13(10),MASK10            that there are\n         ED    WK3ALL+13(10),EMPTYCNT             not enough slots.\n         MVC   WK3ALL+43(10),MASK10\n         ED    WK3ALL+43(10),UIDSCNT\n         MVC   LINET(L'WK3ALL),WK3ALL\n         PUT   SYSPRINT,LINE\n         B     EOJ8                         And return with code 8.\n* ------------------------------------------------------------------ *\nGO3PASS  DS    0H                           Good second pass thru UIDs.\n         TM    BDMNOFLG,X'02'      Was BDMUSIN DD never opened?\n         BO    GO3NCLUI            Then don't try to close it.\n         TM    DDNFLAG,X'02'\n         BZ    GO3NCLUI\n         CLOSE (BDMUSIN)                    So CLOSE the BDMUSIN file\nGO3NCLUI DS    0H\n         NI    BDMNOFLG,X'FE'               Show it is \"not not OPEN\"\n         TM    DDNFLAG,X'02'                BDMUSIN DD name there?\n         BZ    GO3NBDUI                     No. Don't try to OPEN it.\n         OPEN  (BDMUSIN,(INPUT))            And reopen it.\n         TM    BDMUSIN+48,X'10'             Did the OPEN work?\n         BO    GO3UINOP                 Yes. Don't flag that it didn't.\nGO3NBDUI DS    0H\n         OI    BDMNOFLG,X'02'           Mark BDMUSIN DD not opened.\n         B     EOJ16                        Go back with a code 16.\nGO3UINOP DS    0H                           The OPEN was good, so\n         BAL   R9,WRITUSID                  Insert the UIDs in BRODCAST\nGO3END   DS    0H                           Then....\n         B     EOJ                          Go to normal EOJ.\n* ------------------------------------------------------------------ *\n         SPACE 3\nWMESS    DS    0H                           Crucial DD names missing.\n         TM    BDMNOFLG,X'03'               BRODCAST and BDMUSIN  OPEN?\n         BZ    EOJ                          Both are, just get out.\n         TM    BDMNOFLG,X'01'               Is BRODCAST DD not OPEN?\n         BZ    WMESS2                       OPEN--Don't write message\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAGE1),MESSAGE1   Write OPEN Error message\n         PUT   SYSPRINT,LINE\nWMESS2   DS    0H\n         TM    BDMNOFLG,X'02'               Is BDMUSIN DD not OPEN?\n         BZ    EXIT16                       No message--just bad code\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   LINET(L'MESSAGE2),MESSAGE2   Write OPEN Error message\n         PUT   SYSPRINT,LINE\nEXIT16   B     EOJ16                        Fall to here, RC=16.\nEOJ0     DS    0H                  BYE. CC = 0.\nEOJ      DS    0H                  BYE. CC = 0.\n         LA    R5,0                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ4     DS    0H                  Set CC = 4.\n         LA    R5,4                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ8     DS    0H                  Set CC = 8.\n         LA    R5,8                Set return code in R5 to load later.\n         B     EOJOUT\nEOJ16    DS    0H                  Set CC = 16.\n         LA    R5,16               Set return code in R5 to load later.\n         B     NOCLNONE\nEOJOUT   DS    0H\n         TM    BDMNOFLG,X'01'      Was BRODCAST DD never opened?\n         BO    EOJBCCLS            Then don't try to close it.\n         TM    DDNFLAG,X'01'\n         BZ    EOJBCCLS\n         CLOSE (BRODCAST)\nEOJBCCLS DS    0H\n         TM    DDNFLAG,X'02'       Was BDMUSIN DDname never coded?\n         BZ    EOJBUCLS            Then don't try to close it.\n         TM    BDMNOFLG,X'02'      Was BDMUSIN DD never opened?\n         BO    EOJBUCLS            Then don't try to close it.\n         CLOSE (BDMUSIN)\nEOJBUCLS DS    0H\n         TM    BDMNOFLG,X'04'      Was UIDPRES DD never opened?\n         BO    EOJBOCLS            Then don't try to close it.\n         TM    DDNFLAG,X'04'       Was UIDPRES DDname never coded?\n         BZ    EOJBOCLS            Then don't try to close it.\n         CLOSE (UIDPRES)\nEOJBOCLS DS    0H\n         TM    BDMNOFLG,X'08'      Was BDMUSOUT DD never opened?\n         BO    EOJUSCLS            Then don't try to close it.\n         TM    DDNFLAG,X'08'       Was BDMUSOUT DDname never coded?\n         BZ    EOJUSCLS            Then don't try to close it.\n         CLOSE (BDMUSOUT)\nEOJUSCLS DS    0H                  Close SYSPRINT after everything.\n         TM    DDNFLAG,X'10'\n         BZ    NOCLNONE\n         CLOSE (SYSPRINT)\nNOCLNONE DS    0H\n         LR    R1,R13              Restore address of GETMAINed area.\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore corrupted RC register\n         L     R13,4(,R13)         Prepare return to the system.\n         L     R14,12(,R13)        Restore R12\n         ST    R15,16(,R13)        Put RC into passed savearea\n         LM    R0,R12,20(R13)      Other registers\n         BR    R14                 Back to system\n         EJECT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - -           S  U  B  R  O  U  T  I  N  E  S               - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        Initialize Data Areas that have been GETMAINed.          *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '                INITIALIZE BLANKER\n         MVI   OUTLINE-1,X'40'            INITIALIZE BLANKER\n         MVC   OUTLINE(133),OUTLINE-1     CLEAR LINE AREA\n         MVC   GETRCD(8),OUTLINE          BLANK GETRCD\n         MVC   USERCNT(5),PACKZER5        INITIALIZE COUNTER\n         MVC   USOPCNT(5),PACKZER5        INITIALIZE COUNTER\n         MVC   UIDSCNT(5),PACKZER5        INITIALIZE COUNTER\n         MVC   SLOTCNT(5),PACKZER5        INITIALIZE COUNTER\n         MVC   EMPTYCNT(5),PACKZER5       INITIALIZE COUNTER\n         MVI   BDMNOFLG,X'00'             MARK ALL FILES OPENABLE\n         MVI   SLOTLINE-1,X'40'           INITIALIZE BLANKER\n         MVC   SLOTLINE(133),SLOTLINE-1   CLEAR SLOT LINE\n         XC    DWORK,DWORK                CLEAR WORK AREA\n         MVI   NONEMFLG,X'00'\n         MVI   END2PFLG,X'00'\n         MVI   JFCB1,X'87'                INITIALIZE JFCB HEADER\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9A\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   SAVEUSP(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITUSID DS    0H                  Write the USERIDs into BRODCAST.\n         ST    R9,SAVER9C          Save BAL register.\nLOADINIT DS    0H                  LOAD USERID RECORDS WITH USERIDS\n         MVC   SAVERBA(3),SAVEUSP  START WITH FIRST USERID RECORD\n         ST    R3,SAVER3A\nLOADUSR  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    END3PASS            NO USERID LIKE THIS. DEAL WITH IT.\n         ZAP   SLOTCNT,=P'0'       NEW SLOT COUNT FOR NEW READ\n         LA    R7,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'\n         BNE   LOADUEND\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         ST    R3,OUTRECRD\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nLODLOOP  DS    0H\n         AP    SLOTCNT,=P'1'       COUNT WHICH SLOT THIS IS\n         MVC   GETRCD(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         STM   R14,R2,SAVE1402\n         GET   BDMUSIN,GETRCD      GET A USERID FROM THE FILE\n         LM    R14,R2,SAVE1402\n         MVC   USDID(7),GETUSIN    LOAD IT INTO A SLOT?\n         AP    USOPCNT,=P'1'       INCREMENT USER COUNTER\nLOOPNEXT DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         BCT   R7,LODLOOP          TRY FOR ANOTHER USER ENTRY\n         DROP  R3\nEND3PB   DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         TM    END2PFLG,X'02'\n         BO    END3PASS\n         B     LOADUSR             END OF RECORD? GET ANOTHER.\n         L     R3,SAVER3A\n         SPACE 3\nEND3PASS DS    0H\n         MVC   LINE,LINE-1                  Clear Line\n         MVC   WK5ALL,LINE\n         MVC   WK5ALL,MESSAG12\n         MVC   WK5ALL+32(10),MASK10\n         ED    WK5ALL+32(10),USOPCNT\n         MVC   LINET(L'WK5ALL),WK5ALL\n         PUT   SYSPRINT,LINE\n         TM    BDMNOFLG,X'04'\n         BO    LOADUEND\n         PUT   UIDPRES,LINE\nLOADUEND DS    0H\n         L     R9,SAVER9C\n         BR    R9\nEND3P    DS    0H\n         OI    END2PFLG,X'02'\n         B     END3PB\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTJFCB  DS    0H                         Print JFCB info for BDMUSIN\n         ST    R6,SAVER6                  Save the BAL register\n         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU01                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU01                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU01 DS    0H                         SKIP OVER UIDPRES PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGMBR\n         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU02                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU02                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU02 DS    0H                         SKIP OVER UIDPRES PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGVOLSR           VOLSER\n         MVC   OUTLINE+19(6),JFCBVOLS\n         MVC   OUTLINE+26(6),JFCBVOLS+6\n         MVC   OUTLINE+33(6),JFCBVOLS+12\n         MVC   OUTLINE+40(6),JFCBVOLS+18\n         MVC   OUTLINE+47(6),JFCBVOLS+24\n         PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU03                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU03                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU03 DS    0H                         SKIP OVER UIDPRES PRINT.\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGDSORG           DSORG\n         MVC   OUTLINE+19(3),=C'IS '\n         CLI   JFCDSRG1,JFCORGIS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'ISU'\n         CLI   JFCDSRG1,JFCORGIS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PS '\n         CLI   JFCDSRG1,JFCORGPS\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PSU'\n         CLI   JFCDSRG1,JFCORGPS+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DA '\n         CLI   JFCDSRG1,JFCORGDA\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'DAU'\n         CLI   JFCDSRG1,JFCORGDA+JFCORGU\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'PO '\n         CLI   JFCDSRG1,JFCORGPO\n         BE    PUTDSRG\n         MVC   OUTLINE+19(3),=C'POU'\n         CLI   JFCDSRG1,JFCORGPO+JFCORGU\n         BE    PUTDSRG\n         OI    FLAG1,X'01'                FLAG DSORG MISSING\n         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'\nPUTDSRG  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU04                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU04                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU04 DS    0H                         SKIP OVER UIDPRES PRINT.\nRECFM    DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGRECFM           RECFM\n         LA    R4,OUTLINE+19\n         TM    JFCRECFM,JFCUND\n         BNO   NOTUND\n         MVI   0(R4),C'U'\n         OI    FLAG2,X'01'                FLAG RECFM=U\n         A     R4,ONE\n         B     CHKB\nNOTUND   TM    JFCRECFM,JFCFIX\n         BNO   NOTFIX\n         MVI   0(R4),C'F'\n         A     R4,ONE\nNOTFIX   TM    JFCRECFM,JFCVAR\n         BNO   CHKB\n         MVI   0(R4),C'V'\n         A     R4,ONE\nCHKB     TM    JFCRECFM,JFCRFB\n         BNO   NOTBLK\n         MVI   0(R4),C'B'\n         A     R4,ONE\nNOTBLK   TM    JFCRECFM,JFCRFS\n         BNO   NOTSCN\n         MVI   0(R4),C'S'\n         A     R4,ONE\nNOTSCN   TM    JFCRECFM,JFCASA\n         BNO   NOTASA\n         MVI   0(R4),C'A'\n         A     R4,ONE\nNOTASA   TM    JFCRECFM,JFCMAC\n         BNO   PUTRCFM\n         MVI   0(R4),C'M'\nPUTRCFM  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU05                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU05                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU05 DS    0H                         Skip over UIDPRES print.\nLRECL    DS    0H\n         MVC   OUTLINE,OUTLINE-1          Clear line.\n         MVC   OUTLINE,MSGLRECL           Put LRECL skeleton into it.\n         SR    R4,R4                      Clear work register\n         LH    R4,JFCLRECL                Load LRECL in from JFCB\n         C     R4,=F'0'                   Is it zero?\n         BNE   LRECPRT                    No. Don't check for RECFM=U.\n         TM    FLAG2,X'01'                Is RECFM=U?\n         BO    LRECPRT                    Yes-0 is legitimate.\n         OI    FLAG1,X'04'\n         MVC   OUTLINE+19(7),=C'MISSING'\n         B     LRECPUT\nLRECPRT  DS    0H\n         CVD   R4,DECVALUE\n         MVC   OUTLINE+19(12),EDPAT       LRECL\n         ED    OUTLINE+19(12),DECVALUE+3\nLRECPUT  PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU06                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU06                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\nNOPRTU06 DS    0H                         SKIP OVER UIDPRES PRINT.\nBLKSIZE  MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE,MSGBLKSZ\n         SR    R4,R4\n         LH    R4,JFCBLKSI\n         C     R4,=F'0'\n         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD\n         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING\n         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'\n         B     BLKSZPUT\nBLKSIZEG CVD   R4,DECVALUE\n         MVC   OUTLINE+19(12),EDPAT       BLKSIZE\n         ED    OUTLINE+19(12),DECVALUE+3\nBLKSZPUT PUT   SYSPRINT,OUTLINE\n         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?\n         BZ    NOPRTU07                   No. Bypass printing to it.\n         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?\n         BO    NOPRTU07                   No. Don't print info to it.\n         PUT   UIDPRES,OUTLINE\n         PUT   UIDPRES,BLNKLINE\nNOPRTU07 DS    0H                         SKIP OVER UIDPRES PRINT.\n         L     R6,SAVER6\n         BR    R6\n* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *\nDIAGONLY DS    0H                  Diagnostics Only\n* - - - >\n         ST    R6,SAVER6\n         MVC   LINE,LINE-1                  Clear line.\n         MVC   LINET(L'MESSAGE3),MESSAGE3   Write no BDMUSIN output.\n         PUT   SYSPRINT,LINE\n         PUT   SYSPRINT,BLNKLINE\n         PUT   UIDPRES,LINE                 Also write to UIDPRES reprt\n         PUT   UIDPRES,BLNKLINE\n         L     R6,SAVER6                    Restore BAL register\n         BR    R6                           Go back to caller.\n* - - - >\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133              Program Title on Report\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\nULOTITLE DS    0CL133              Userid Diagnostics Report Title\n         DC    C'0'\n         DC    CL11' '\n         DC    CL3'-  '\n         DC    CL79'&PGMNAME Program  -  Userid Bulk Loader Program  - X\n                 '\n         DC    CL41' '\n*--------------------------------------------------------------------*\nUIDTITLE DS    0CL133              Userid Diagnostics Report Title\n         DC    C'0'\n         DC    CL11' '\n         DC    CL3'-  '\n         DC    CL79'&PGMNAME Program  -  Userids Already Present  -    X\n                 '\n         DC    CL41' '\n*--------------------------------------------------------------------*\nUIDDESCL DS    0CL133              Userid Diagnostics Report Header\n         DC    C'0'\n         DC    CL6' '\n         DC    CL9'UID Count'\n         DC    CL4' '\n         DC    CL8'Userid  '\n         DC    CL1' '\n         DC    CL8'RBA Hex '\n         DC    CL2' '\n         DC    CL8'RBA Dec '\n         DC    CL2' '\n         DC    CL8'Slot #'\n         DC    CL76' '\n*--------------------------------------------------------------------*\nUIDDASH  DS    0CL133              Dashes under Report Heading\n         DC    C' '\n         DC    CL6' '\n         DC    CL9'---------'\n         DC    CL4' '\n         DC    CL8'------  '\n         DC    CL1' '\n         DC    CL8'------- '\n         DC    CL2' '\n         DC    CL8'------- '\n         DC    CL2' '\n         DC    CL8'------'\n         DC    CL76' '\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133              Copyright information for program\n         DC    C'0'\n         DC    CL3' '\n* -->                              Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL48' '\n         SPACE\n*--------------------------------------------------------------------*\nBLNKLINE DC    CL133' '            Blank Line sample\n*-----------------------------------------------------------------*\nFLAG1    DC    X'00'\n*              X'01'               DSORG IS MISSING\nFLAG2    DC    X'00'\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nFF       EQU   X'FF'\nF16      DC    F'16'\nF00      DC    F'0'\nBLANKS   DC    C'        '         8 BLANKS\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGE1 DC    C'Bad Open - BRODCAST DD name is missing from the JCL  '\nMESSAGE2 DC    C'Bad Open - BDMUSIN DD name is missing from the JCL  '\nMESSAGE3 DC    C'Diagnostic Report Only - No BDMUSIN was present.    '\nMESSAGE4 DC    C'Real userids are in BRODCAST. Cannot load new ones. '\nMESSAGE5 DC    C'Empty slots:            not enough to load            x\n               Userids.'\nMESSAGE6 DC    C'Duplicate Userid exists in BDMUSIN dataset.  '\nMESSAGE7 DC    C'Duplicate Userid is at Record :              '\nMESSAGE8 DC    C'BDMUSIN Userids are not in EBCDIC sort order.'\nMESSAGE9 DC    C'Unsorted Userid is at Record  :              '\nMESSAG10 DC    C'Run the BDMUSORT program against the BDMUSIN file.'\nMESSAG11 DC    C'BRODCAST can contain all the Userids in BDMUSIN.  '\nMESSAG12 DC    C'Userids Successfully Loaded   :              '\nMESSAG13 DC    C'Userids in  BDMUSIN  Dataset  :              '\nMESSAG14 DC    C'BDMUSID was not present, so Userids were not loaded.'\nUSRALL DC C'Total # of Userids Present in BRODCAST DSNAME             '\nEMTALL DC C'Total # of Empty Slots in Brodcast available:             '\nMESPREND DC    C'?????  Preliminary end of USERID Records - - *'\nMSGDSN   DC    CL133'0   BRODCAST DSN ='\nMSGVOLSR DC    CL133'         VOLSER  ='\nMSGMBR   DC    CL133'         MEMBER  ='\nMSGDSORG DC    CL133'         DSORG   ='\nMSGBLKSZ DC    CL133'         BLKSIZE ='\nMSGLRECL DC    CL133'         LRECL   ='\nMSGRECFM DC    CL133'         RECFM   ='\n         DC    CL133' '\nMASK6    DC    XL6'402020202120'\nMASK7A   DC    XL7'40202020212020'\nMASK10   DC    XL10'40202020202020202120'\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\nSYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426\n               BLKSIZE=133                                               05427\nUIDPRES  DCB   MACRF=PM,DDNAME=UIDPRES,DSORG=PS,RECFM=FA,LRECL=133,    X 05426\n               BLKSIZE=133                                               05427\nBDMUSIN  DCB   DDNAME=BDMUSIN,MACRF=GM,DSORG=PS,RECFM=FB,EODAD=END2P,  X\n               LRECL=8\nBDMUSOUT DCB   DDNAME=BDMUSOUT,MACRF=PM,DSORG=PS,RECFM=FB,             X\n               LRECL=8,EXLST=JFCB1\n         LTORG\n         SPACE\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nDWORK    DC    D'0'\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUSERCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nUIDSCNT  DC    PL5'0'              COUNT OF USERIDS IN BDMUSIN\nUSOPCNT  DC    PL5'0'              COUNT OF USERIDS IN BDMUSIN\nSLOTCNT  DC    PL5'0'              COUNT OF SLOT NUMBER IN UID RECORD\nEMPTYCNT DC    PL5'0'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nUIDPRB   DS    0F\nUIDPRBAX DC    X'00'\nUIDPRBA  DC    X'000000'           STORE CURRENT RBA FOR DIAG PRINT\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nSAVEUSP  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\n         DS    0F                  ALIGN ON FULLWORD\nSAVER3   DS    F                   WORK REGS FOR TIOT SCAN\nSAVER3A  DS    F                   WORK REGS FOR TIOT SCAN\nSAVER5   DS    F                   WORK REGS FOR TIOT SCAN\nSAVEPRM  DS    F                   TEMP SAVE FOR PARM POINTER\nSAVER6   DS    F                   BAL REGISTER SAVE AREA\nSAVER9A  DS    F                   BAL REGISTER SAVE AREA\nSAVER9B  DS    F                   BAL REGISTER SAVE AREA\nSAVER9C  DS    F                   BAL REGISTER SAVE AREA\nSAVER9D  DS    F                   BAL REGISTER SAVE AREA\nSAVER9E  DS    F                   BAL REGISTER SAVE AREA\nSAVER9F  DS    F                   BAL REGISTER SAVE AREA\nSAVER9G  DS    F                   BAL REGISTER SAVE AREA\nSAVER9H  DS    F                   BAL REGISTER SAVE AREA\nSAVER9I  DS    F                   BAL REGISTER SAVE AREA\nSAVE1402 DS    5F\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\nOUTLINEB DS    C                   OUTLINE-1\nOUTLINE  DS    CL133\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nWK1ALL DC C'                                                          '\nWK2ALL DC C'                                                          '\nWK3ALL   DC    C'                                                      x\n                       '\nWK4ALL   DC    C'                                             '\nWK5ALL   DC    C'                                             '\nBDMNOFLG DS    X\n*        EQU   X'01'               BRODCAST DD MISSING\n*        EQU   X'02'               BDMUSIN  DD MISSING\n*        EQU   X'04'               UIDPRES  DD MISSING\n         SPACE 1\nDDNFLAG  DS    X\nDDNREPR  DS    2C\nNONEMFLG DS    X\nEND2PFLG DS    X\n         DS    CL6                 FILLER\n         DS    C\nSLOTLINE DS    CL133\nSVUIDIN  DS    CL8\nUIDIN    DS    CL8\nGETRCD   DS    0CL8\nGETUSIN  DS    CL7\nGETUSBLK DS    C\nOUTRECRD DS    F\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES,LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMUSADD": {"ttr": 13320, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00\\x11\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x04\\x96\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:11", "lines": 1174, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMUSADD TITLE 'BDMUSADD - ADD A USERID AND ITS MESSAGES.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMUSADD USERID                                   *\n*                                                                     *\n*       FUNCTION:   ADD A USERID TO THE BROADCAST DATASET.            *\n*                                                                     *\n*                   IF THE ID ALREADY EXISTS, THEN PUT OUT AN ERROR   *\n*                   MESSAGE ACCORDINGLY.  IF A NEW USERID RECORD      *\n*                   NEEDS TO BE CREATED TO MAKE ROOM FOR THE NEW      *\n*                   USERID, THEN CREATE IT.  ALSO, REUSE AN EMPTY     *\n*                   USERID SLOT, IF IT IS FOUND.                      *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0          *\n*                                                                     *\n*            DATE:  NOV. 26, 2006                                     *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*       BATCH EXECUTION:                                              *\n*                                                                     *\n*       //XXXXXXXX JOB ,'BDMUSADD',CLASS=B,                           *\n*       //    MSGCLASS=X,NOTIFY=&SYSUID                               *\n*       //*                                                           *\n*       //*      INSTRUCTIONS FOR BDMUSADD TSO COMMAND                *\n*       //*      ------------ --- -------- --- -------                *\n*       //*   BDMUSADD USERID  -  ADDS THE USERID TO BRODCAST.        *\n*       //*                                                           *\n*       //TSOBATCH EXEC PGM=IKJEFT01                                  *\n*       //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB            *\n*       //SYSTSPRT DD SYSOUT=*                                        *\n*       //BRODCAST DD DISP=SHR,DSN=name.of.brodcast.dataset           *\n*       //SYSTSIN DD *                                                *\n*       BDMUSADD USERID                                               *\n*       /*                                                            *\n*                                                                     *\n*       NOTE:       BDMUSADD READS THE BRODCAST DATASET DIRECTLY,     *\n*                   AND GOES THROUGH ALL THE USERID RECORDS TO SEE    *\n*                   IF IT FINDS A MATCH ON THE DESIRED USERID.        *\n*                   DURING THIS FIRST PASS, THE FIRST EMPTY USERID    *\n*                   SLOT IS ALSO NOTED, TO BE REUSED.  IF THE USERID  *\n*                   ALREADY EXISTS, THEN A NEW ONE IS NOT CREATED.    *\n*                   IF IT DOES NOT EXIST, THEN THE FIRST FREE SLOT    *\n*                   IS REUSED.  OTHERWISE, A NEW USERID RECORD IS     *\n*                   CREATED, AND THE NEW USERID IS PUT THERE, INTO    *\n*                   SLOT X'00'.                                       *\n*                                                                     *\n*       CHANGES:  06/11/27 - Converted BDMUSADD from BDMUSDEL.        *\n*                   No message deletes are required, because the new  *\n*                   userid added, does not have any messages attached *\n*                   to it yet.                                        *\n*                                                                     *\n*                   Correctly added a new Userid Record, Type X'01',  *\n*                   if all slots are full.  Put the new userid into   *\n*                   slot 0 of the new record.  Adjust Free Search     *\n*                   RBA accordingly.                                  *\n*                                                                     *\n*                 06/11/28 - Added ENQ and DEQ on all WRITEs.         *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGISTER EQUATES\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  'LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMUSADD'\nBDMUSADD CSECT\n         USING BDMUSADD,R12,R10\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C' '\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         LA    R10,4095(,R12)      LOAD SECOND BASE\n         LA    R10,1(,R10)\n         LR    R5,R1               PRESERVE CPPL POINTER OVER GETMAIN.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R5,CPPLPNTR         PUT CPPL POINTER INTO A SAFE PLACE\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         L     R2,PSCBPNTR         LOAD IT FROM ITS STORAGE LOCATION\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nTITLEOUT DS    0H\n         MVC   LINE,LINE-1                  WRITE TITLE MESSAGES.\n         MVC   LINE(MSGTLEN),MESSAGET\n         LA    R0,MSGTLEN\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R4,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R4,MSG\nCONT0    DS    0H\n         L     R5,CPPLPNTR         LOAD CPPL\n         LTR   R5,R5               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R5)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         XR    R5,R5               CLEAR R5 AS WORK REGISTER NOW\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS3            ZERO, MESSAGE TO ENTER USERID.\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\nONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ THROUGH THE USERID RECORDS.           --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    GOADDIT             NO USERID LIKE THIS. CAN ADD IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    FRSTZERO            NOPE. SEE IF FIRST ZERO & SAVE IT.\nNOTALL1  CLC   USERID(7),TRYID     IS THIS USERID ALREADY THERE?\n         BE    FOUNDEQU            YES. PUT OUT MESSAGE ACCORDINGLY.\nTRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         ST    R6,SAVER6           SAVE BCT COUNT JUST IN CASE\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\n         B     FREEDBA1\nFRSTZERO DS    0H\n         TM    FLAGFRST,X'01'      HAVE WE DONE THIS ALREADY?\n         BO    FRSPCEED            YES, SKIP SAVE OF RBA AND SLOT.\n         MVC   FZUSRBA(3),LASTRBA  SAVE RBA OF FIRST ZERO RECORD\n         STC   R8,FZUSSLOT         SAVE SLOT OF FIRST ZERO RECORD\n         OI    FLAGFRST,X'01'      SET FLAG TO DO ONLY ONCE\nFRSPCEED BCT   R6,TRYNEXT          GO FARTHER INTO USER RECORD\n         B     FREEDBA1            FREEDBUF ON THIS RECORD\nFOUNDEQU DS    0H                  USERID WAS ALREADY THERE?\n         MVC   FNUSRBA(3),LASTRBA  THEN STORE AWAY ITS LOCATION RBA\n         STC   R8,FNUSSLOT           AND ITS SLOT.\n         B     WMESS2              TELL THEM THAT WE CAN'T ADD IT.\nFREEDBA1 DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         DROP  R3\n*\nGOADDIT  DS    0H                  REUSE SLOT IF AVAILABLE\n         CLC   FZUSRBA(3),ZEROS    NO EMPTY SLOT FOUND?\n         BE    GOADDUSR\n* below >  Enqueue and add the new userid into the found open slot.\n         MVC   BLOCKNO(3),FZUSRBA  GET RBA FOR READ TO CONTINUE\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),FZUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,REFINDUS         FIND USER SLOT TO ADD THE USERID\n         USING USDIR,R3\n         MVC   USDID(7),TRYID      ADD THE ID\n         MVC   USDRBA(6),ZEROS     ZERO THE MESSAGE ENTRIES\n         DROP  R3\n         BAL   R9,REWRUSER         REWRITE THE RECORD\n         MVC   RNAM(3),FZUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         B     GOADDMSG\n* above >  Enqueue and add the new userid into the found open slot.\nGOADDUSR DS    0H                  ADD THE NEW USERID RECORD FIRST\n         BAL   R9,ADNEWREC         THEN HAVE TO ADD A NEW USERID TO IT.\n         MVC   FZUSRBA(3),FREERBA\n         MVI   FZUSSLOT,X'00'\nGOADDMSG DS    0H                             TELL EM YOU ADDED THE ID\n         MVC   LINE,LINE-1                    CLEAR OUTPUT LINE\n         MVC   MESAGADX+7(7),TRYID            MOVE IN USERID\n         HEX   MESAGADX+35,3,FZUSRBA          SHOW THE RBA\n         HEX   MESAGADX+48,1,FZUSSLOT         SHOW THE SLOT NUMBER\n         MVC   LINET(L'MESAGADX),MESAGADX     MOVE MESSAGE TO LINE\n         LA    R0,L'MESAGADX+7                LOAD LENGTH\n         BAL   R4,MSG                         WRITE IT OUT\n         B     ZEROUT                  AND SCRAM\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R4,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  DS    0H\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR+7                      DEALING WITH\n         BAL   R4,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nFULLMESS MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSFULL                 SYS1.BRODCAST\n         LA    R0,L'MESSFULL+7                  IS\n         BAL   R4,MSG                             FULL\n         B     EOJ4                             AND GET OUT.   SG 05/99\nWMESS4   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE4                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE4+7                  USERID NAME.\n         BAL   R4,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE3+7                  USERID NAME.\n         BAL   R4,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS2   DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   MESSAGX2+12(7),NEWID\n         MVC   LINET,MESSAGX2                 THE USERID ALREADY\n         LA    R0,L'MESSAGE2+7                  EXISTS IN BROADCAST.\n         BAL   R4,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R4,MSG\n         B     EOJ4\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              REAL RETURN CODE\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     DS    0H\n         LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     DS    0H\n         LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT.\nEOJ8     DS    0H\n         LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT.\nEOJ12    DS    0H\n         LA    R5,12               SET CC = 12.\n         B     EOJ                 CONT.\nEOJ16    DS    0H\n         LA    R5,16               SET CC = 16.\n         B     EOJ                 CONT.\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9A\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9B\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   NUMRECS(4),R1RECNUM   SAVE TOTAL NUMBER OF RECORDS\n         ST    R7,SAVER7           SAVE REGISTER\n         L     R7,NUMRECS          PUT NUMBER OF RECORDS IN\n         BCTR  R7,0                MINUS ONE\n         ST    R7,HIWATER          HIGHEST RBA PERMITTED\n         L     R7,SAVER7           RESTORE REGISTER\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         BR    R4\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS\n         MVC   FSRCRBA(3),ZEROS\n         MVC   NEXTRBA(3),ZEROS\n         MVC   NEWFRBA(3),ZEROS\n         MVC   MESDELUS(L'MESDELUS),MESUSRID\n         MVC   MESUSRDX(L'MESUSRDX),MESUSRDL\n         MVC   MESSAGX2(L'MESSAGX2),MESSAGE2\n         MVC   MESAGADX(L'MESAGADX),MESAGADS\n         MVI   FLAGFRST,X'00'\n         MVC   FZUSRBA(3),ZEROS\n         MVI   FZUSSLOT,X'00'\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9C\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         ST    R2,PSCBPNTR         STORE PSCB ADDRESS IN SAFE LOCATION\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R5\nCPPLPTRS DS    0H\n         ST    R9,SAVER9D\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R5,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9D\n         BR    R9\n         DROP  R5\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9E\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,FZUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n         L     R6,SAVER6           RESTORE R6 TO COUNT FOR BCT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nADNEWREC DS    0H                  ADD A NEW USERID RECORD IF POSSIBLE\n         ST    R9,SAVER9F\n         BAL   R9,FINDFREE    FIND FREE X'FF' RECORD IF IT EXISTS\n         BAL   R9,MAKNWUSR    CONVERT X'FF' RECORD TO X'01' & RECHAIN.\n         BAL   R9,REWRFRSR    REWRITE FREE SEARCH RECORD ACCORDINGLY.\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRUSER DS    0H            REWRITE RECORD WITH USER SLOT IN IT.\n         ST    R9,SAVER9G\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.\n         ST    R9,SAVER9H\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST\n         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2\nTYP5READ DS    0H\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       POINT TO RECORD\n         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA\n         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE\n         ST    R4,SAVER4           SAVE WORK REGISTER\n         ICM   R4,7,FREERBA        FREERBA IS THE ONE WE ARE CHANGING\n         LA    R4,1(,R4)           ADD ONE TO IT\n         STCM  R4,7,NEWFRBA        NEW VALUE OF FREE SEARCH RBA\n         C     R4,HIWATER          HIGHER THAN HIGHEST POSSIBLE?\n         BNH   NOADJFSR            NO. JUST USE THIS VALUE.\n         MVC   NEWFRBA,FREERBA     YES. USE FREERBA VALUE AS IS.\nNOADJFSR DS    0H\n         L     R4,SAVER4           RESTORE WORK REGISTER\n         MVC   0(3,R5),NEWFRBA     CHANGE FREE SEARCH RBA TO NEW VALUE\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nNOFRSR   DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nREWRFEND L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*    FIND A FREE MESSAGE RECORD TO REPLACE WITH A USERID RECORD.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        Result of this code is to either tell the user that      *\n*        there is no free record to make into a USERID record,    *\n*        or that the free record RBA is stored in FREERBA.        *\n*                                                                 *\n*            NFRERBA is normally FREERBA+1, to insert into        *\n*            the free search record.                              *\n*                                                                 *\n*        Error condition:  FREERBA = NFRERBA = HIWATER.           *\n*            In this case, the FULLMESS message is issued.        *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nFINDFREE DS    0H\n         ST    R9,SAVER9J          SAVE BAL REGISTER FOR RETURN\n         MVC   BLOCKNO(3),TYP5RBA\n         CLC   TYP5RBA,ZEROS\n         BNE   SAVRGS01\n         MVC   BLOCKNO(3),=X'000001'\n         MVI   FULLFLAG,X'FF'\nSAVRGS01 ST    R8,SAVER8\n         ST    R7,SAVER7\n         ST    R6,SAVER6\n         L     R8,HIWATER          USE HIWATER AS FINISH AMT\n         L     R7,NUMRECS          LOAD TOTAL NUMBER OF RECS\n         ICM   R6,7,BLOCKNO        LOAD STARTING POINT\n         SR    R7,R6               SET UP BCT FOR LOOP\nSTARTFSH DS    0H\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?\n         BE    FOUNDNEW            YES? FOUND ONE.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         ICM   R6,7,BLOCKNO        LOAD AMOUNT INTO REGISTER\n         LA    R6,1(,R6)           ADD 1\n         CR    R6,R8               HIGHER THAN STOPPING POINT?\n         BH    FINDBEG             YES, START AT BEGINNING\n         STCM  R6,7,BLOCKNO        POINT TO NEXT BLOCK NUMBER\n         BCT   R7,STARTFSH         LOOP AND READ AGAIN\nFOUNDNEW DS    0H\n         MVC   FREERBA(3),BLOCKNO  SAVE RBA OF FREE RECORD\n         ICM   R7,7,FREERBA        LOAD RBA VALUE\n         LA    R7,1(,R7)           INCREASE BY 1\n         STCM  R7,7,NFRERBA        PREPARE NEW FREE SEARCH RBA\n         C     R7,HIWATER          HIGHER THAN THE HIGHEST?\n         BNH   FINDFOUT            NO. JUST GET OUT OK\n         MVC   NFRERBA(3),FREERBA  WE CAN'T GO HIGHER, SO =\nFINDFOUT DS    0H\n         B     FINDFEND            GET OUT OF ROUTINE\nFINDBEG  DS    0H\n         CLI   FULLFLAG,X'FF'      CHECK IF WE WENT FROM BEGIN\n         BNE   FINDGOON            YES. WE KNOW BCAST IS FULL\n         L     R6,SAVER6           RESTORE REGISTER\n         L     R7,SAVER7           RESTORE REGISTER\n         L     R8,SAVER8           RESTORE REGISTER\n         B     FULLMESS            BROADCAST FULL, AND OUT\nFINDGOON MVI   FULLFLAG,X'FF'      WE'RE NOW SEARCHING BEGINNING\n         ICM   R8,7,TYP5RBA        FINISH AT FREE SEARCH REC\n         LA    R7,1(,R8)           SET UP BCT REGISTER\n         LA    R6,1                START SEARCH AT RECORD 2\n         STCM  R6,7,BLOCKNO        LET READ KNOW ABOUT IT\n         SR    R7,R6               SET UP BCT FOR LOOP\n         B     STARTFSH            DO LOOP OVER AGAIN-1ST PART\nFINDFEND L     R6,SAVER6           RESTORE REGISTER\n         L     R7,SAVER7           RESTORE REGISTER\n         L     R8,SAVER8           RESTORE REGISTER\n         L     R9,SAVER9J          RESTORE BAL REGISTER FOR RETURN\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  MAKE A NEW USERID RECORD AND RECHAIN THE LAST ONE TO THIS ONE  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMAKNWUSR DS    0H\n         ST    R9,SAVER9K\n         MVC   RNAM(3),FREERBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   BLOCKNO(3),FREERBA  GO TO FOUND FREE RBA\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?\n         BNE   MAKNWERR            NO. ERROR.\n         MVI   0(R2),X'01'         CONVERT IT TO A BLANK USERID RECORD\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   USDIR(129),ZERREC   CREATE THE NEW USERID RECORD\n         MVI   USDREND,X'7F'       STICK THE X'7F' IN\n         MVC   USDID(7),TRYID      ALREADY THERE, PUT USERID IN SLOT 0.\n         MVC   USDRBA(6),ZEROS     ZERO THE MESSAGE ENTRIES\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   RNAM(3),FREERBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\nMAKRECHN DS    0H                  RECHAIN LAST UID RECORD TO THIS ONE\n         MVC   RNAM(3),LASTRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   BLOCKNO(3),LASTRBA  MOVE RRA OF LAST USERID RECORD\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   USDNEXT(3),FREERBA  RECHAIN LAST UID RECORD TO NEW ONE\n         DROP  R3\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   RNAM(3),LASTRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         B     MAKNWEND\nMAKNWERR DS    0H\n         B     WMESS4            FREERBA IS NOT POINTING TO FREE RECORD\nMAKNWEND DS    0H\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R5\nSETIOPL  DS    0H\n         ST    R9,SAVER9I\n         L     R5,CPPLPNTR\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R5\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9I\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\nMESARROW DC    C'-->'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLNKLINE DS    0CL133\nBLANKS   DC    C'        '         8 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL129\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    122X'00'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESUSRID DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-\n               ASET.'\nMESUSRDL DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'\nMESSAGE2 DC    C'THIS USERID         ALREADY EXISTS IN BROADCAST'\nMESSAGE3 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'\nMESSAGE4 DC    C'FREE RECORD RBA IS NOT POINTING TO A FREE RECORD.'\nMESAGADS DC    C'USERID         WAS ADDED IN RECORD         SLOT      '\nMESSFULL DC    C'SYS1.BRODCAST is Full. No room to add a USERID Record.-\n               . Delete some user messages.'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nCPPLPNTR DS    F                   ADDRESS OF CPPL\nPSCBPNTR DS    F                   ADDRESS OF PSCB\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nFREERBA  DC    X'000000'           NEXT FREE RBA TO WRITE ONTO\nNFRERBA  DC    X'000000'           NEW FREE RBA FOR TYPE 5\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nNEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nNEWFRBA  DC    X'000000'           NEW FREE SEARCH RBA\nFSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFZUSRBA  DC    X'000000'           STORE RBA OF FIRST ZERO USERID\nFZUSSLOT DC    X'00'               STORE SLOT OF FIRST ZERO USERID\nFNUSRBA  DC    X'000000'           RBA OF USERID THAT WAS FOUND\nFNUSSLOT DC    X'00'               SLOT OF USERID THAT WAS FOUND\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER4   DS    F                   SAVE WORK REGISTER\nSAVER5   DS    F                   SAVE WORK REGISTER\nSAVER6   DS    F                   SAVE WORK REGISTER\nSAVER7   DS    F                   SAVE WORK REGISTER\nSAVER8   DS    F                   SAVE WORK REGISTER\nSAVER9   DS    F                   SAVE BAL REGISTER\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nHIWATER  DS    F                   HIGH RBA OF RECORDS IN BRODCAST\nNUMRECS  DS    F                   NUMBER OF RECORDS IN BRODCAST\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\n         DS    CL8\nFLAGFRST DS    X\n*        EQU   X'01'               FIRST ZEROED SLOT HAS BEEN FOUND\nFULLFLAG DS    X\n         DS    CL8\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nMESDELUS DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-\n               ASET.'\nMESUSRDX DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'\nMESSAGX2 DC    C'THIS USERID         ALREADY EXISTS IN BROADCAST'\nMESAGADX DC    C'USERID         WAS ADDED IN RECORD         SLOT      '\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BDMUSDEL": {"ttr": 13831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01*\\x00'\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x04m\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.42", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:27", "lines": 1133, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMUSDEL TITLE 'BDMUSDEL - DELETE A USERID AND ITS MESSAGES.'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMUSDEL USERID                                   *\n*                                                                     *\n*       FUNCTION:   DELETE A USERID FROM BRODCAST, AND DELETE ALL OF  *\n*                   ITS MESSAGES. THIS PROGRAM WORKS ON SYS1.BRODCAST *\n*                   INTERNALLY, WITHOUT USING LISTBC.                 *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0          *\n*                                                                     *\n*            DATE:  NOV. 26, 2006                                     *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*       BATCH EXECUTION:                                              *\n*                                                                     *\n*       //XXXXXXXX JOB ,'BDMUSDEL',CLASS=B,                           *\n*       //    MSGCLASS=X,NOTIFY=&SYSUID                               *\n*       //*                                                           *\n*       //*      INSTRUCTIONS FOR BDMUSDEL TSO COMMAND                *\n*       //*      ------------ --- -------- --- -------                *\n*       //*   BDMUSDEL USERID  -  DELETES THE USERID FROM BRODCAST.   *\n*       //*                                                           *\n*       //TSOBATCH EXEC PGM=IKJEFT01                                  *\n*       //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB            *\n*       //SYSTSPRT DD SYSOUT=*                                        *\n*       //BRODCAST DD DISP=SHR,DSN=name.of.brodcast.dataset           *\n*       //SYSTSIN DD *                                                *\n*       BDMUSDEL USERID                                               *\n*       /*                                                            *\n*                                                                     *\n*       NOTE:       BDMUSDEL READS THE BRODCAST DATASET DIRECTLY,     *\n*                   AND GOES THROUGH ALL THE USERID RECORDS UNTIL     *\n*                   IT FINDS A MATCH ON THE DESIRED USERID.  THEN,    *\n*                   IF THAT USERID HAS MESSAGES ATTACHED TO IT,       *\n*                   ALL OF THE MESSAGES ARE DELETED, AND THEN THE     *\n*                   USERID RECORD IS DELETED TOO.                     *\n*                                                                     *\n*       CHANGES:  06/11/26 - Rewrote old version of BCMDEL2 before    *\n*                   SKIP and MSGS keywords were put into it.  That    *\n*                   version invariably deleted all messages for a     *\n*                   given userid correctly, and this is what we have  *\n*                   to do here.  Of course, ALLFLAG was eliminated.   *\n*                   Then, of course, we completely delete the USERID  *\n*                   as well as its message pointers.                  *\n*                                                                     *\n*                   Messages added to show what messages had been     *\n*                   there for the deleted USERID, if any.  And then   *\n*                   a message was written, showing the USERID which   *\n*                   was deleted from the BROADCAST DATASET.           *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  'LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMUSDEL'\nBDMUSDEL CSECT\n         USING BDMUSDEL,R12,R10\n         B     BEGINN-*(,R15)\nAFLG     DC    X'FF'\nALLCHAR  DC    C'ALL$#@'\n         DC    C'  '\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C' '\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         LA    R10,4095(,R12)      LOAD SECOND BASE\n         LA    R10,1(,R10)\n         LR    R5,R1               PRESERVE CPPL POINTER OVER GETMAIN.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         ST    R5,CPPLPNTR         PUT CPPL POINTER INTO A SAFE PLACE\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         L     R2,PSCBPNTR         LOAD IT FROM ITS STORAGE LOCATION\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nTITLEOUT DS    0H\n         MVC   LINE,LINE-1                  WRITE TITLE MESSAGES.\n         MVC   LINE(MSGTLEN),MESSAGET\n         LA    R0,MSGTLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\nCONT0    DS    0H\n         L     R5,CPPLPNTR         LOAD CPPL\n         LTR   R5,R5               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R5)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         XR    R5,R5               CLEAR R5 AS WORK REGISTER NOW\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS2            ZERO, MESSAGE TO ENTER USERID.\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\nALLSET   CLC   NEWID(L'ALLCHAR),ALLCHAR    \"USERID\" FOR \"ALL USERIDS\"\n         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID\n         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING\n         CLI   ALLFLAG,X'FF'       IS IT X'FF'?\n         BNE   ONEID               NO. NOT REAL \"ALL\" PROCESSING\n         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.\n         B     DOBROD\nONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(UPDAT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n* -- >\n         XC    SAVER6B,SAVER6B\n         ST    R6,SAVER6B\n         CLC   SAVER6B,=F'1'\n         BE    TRYNEXTR\n* -- >\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\nTRYNEXTR DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  DS    0H\n         MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         BAL   R9,REWRFRSR         ADJUST FREE SEARCH RECORD\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         BAL   R9,REFINDUS         FIND USER SLOT TO ZERO HIM OUT\n         USING USDIR,R3\n         MVC   USDRBA(6),ZEROS     ZERO HIM OUT\n         MVC   USDID(7),ZEROS      ZERO OUT USERID ITSELF\n         DROP  R3\n         BAL   R9,REWRUSER         REWRITE THE RECORD\n         MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         CLI   ALLFLAG,X'FF'\n         BNE   ENDWRITE\n* -- >\n         XC    SAVER6A,SAVER6A     CLEAR WORK AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n         CLC   SAVER6A,=F'8'\n         BE    INDEXUS\n* -- >\n         B     TRYNEXT\nENDWRITE DS    0H\n         B     ZEROUT                  AND SCRAM\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  DS    0H\nNOTALL2  DS    0H\n         CLI   ALLFLAG,X'FF'\n         BE    NOUSRMSG\n         MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR+7                      DEALING WITH\n         BAL   R9,MSG\n         B     ZEROUT\nNOUSRMSG DS    0H\n         MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   LINET(L'MESALNOU),MESALNOU\n         LA    R0,L'MESALNOU+7                      DEALING WITH\n         BAL   R9,MSG\n         B     EOJ4\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER A\n         LA    R0,L'MESSAGE2+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              NON-CORRUPTED RETURN CODE\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT.\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9A\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         ST    R6,SAVER6C          SAVE BCT REGISTER\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         L     R6,SAVER6C          RESTORE BCT REGISTER\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9B\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO\n         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?\n         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS\n         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5\nSKIPFREE DS    0H\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9C\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9C\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9D\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9D\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9E\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVI   ALLFLAG,X'00'\n         MVC   NEWID,BLANKS\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   LEVEL(7),BLANKS\n         MVC   TYP5RBA(3),ZEROS\n         MVC   FSRCRBA(3),ZEROS\n         MVC   NEXTRBA(3),ZEROS\n         MVC   MINRBA(3),=X'0FFFFF'    PUT A LARGE VALUE IN\n         MVC   MESDELUS(L'MESDELUS),MESUSRID\n         MVC   MESUSRDX(L'MESUSRDX),MESUSRDL\n         XC    SAVER6A,SAVER6A\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9F\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         ST    R2,PSCBPNTR         STORE PSCB ADDRESS IN SAFE LOCATION\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nDELREC   DS    0H      THIS ROUTINE ASSUMES A READ WAS            *\n*                      DONE FIRST, AND A CHECK. THE RECORD        *\n*                      THAT WAS READ, WILL BE DELETED.            *\n*                      IF LEVEL OF SYS1.BRODCAST IS 2 OR MORE,    *\n*                      THEN THE RBA OF THE FREE SEARCH RECORD     *\n*                      WILL ALSO BE UPDATED IF NECESSARY.         *\n*                      THIS WILL NOT BE DONE HERE.  RATHER,       *\n*                      THE RBA OF ALL DELETED RECORDS WILL BE     *\n*                      MINIMIZED, AND THE UPDATING, IF THE        *\n*                      MINIMUM RBA IS LESS THAN THE FREE SEARCH   *\n*                      RECORD RBA, WILL BE DONE AT THE VERY END.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         ST    R9,SAVER9G\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         L     R2,MDLDECB+16           POINT TO IOB\n         USING IOBSTDRD,R2\n         MVC   SAVEINF1(8),IOBSEEK     SAVE CCHHR OF RECORD\n         DROP  R2\n         L     R2,MDLDECB+20           POINT TO THE KEY\n         MVI   0(R2),X'FF'             FIRST PART OF MARKING DELETED\n         L     R2,MDLDECB+12           POINT TO RECORD ITSELF\n         USING USMSG,R2\n         MVC   USMLNG(1),SAVEINF1+7    MOVE IN HEX RECORD NUMBER\n         MVC   USMTEXT(128),ZERREC     ZERO OUT THE MESSAGE AREA\n         CLC   MINRBA(3),MESSRBA       SEE IF CURRENT RBA IS LOWEST\n         BNH   CHGFRBA                 IT ISN'T, SO BRANCH AROUND.\n         MVC   MINRBA(3),MESSRBA       LOWER SAVED RBA IF NECESSARY\nCHGFRBA  DS    0H\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         L     R9,SAVER9G\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R5\nCPPLPTRS DS    0H\n         ST    R9,SAVER9H\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R5,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9H\n         BR    R9\n         DROP  R5\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9I\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9J\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n* -- >\n         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY\n         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n         S     R6,SAVER6A              RECALCULATE BCT REGISTER\n* -- >\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRUSER DS    0H            REWRITE RECORD WITH USER SLOT IN IT.\n         ST    R9,SAVER9K\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.\n         ST    R9,SAVER9L\n         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST\n         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2\nTYP5READ DS    0H\n         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       POINT TO RECORD\n         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA\n         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE\n         CLC   0(3,R5),MINRBA      SHOULD FREE SEARCH RECORD BE LOWERED\n         BNH   NOFRSR                NO. JUST GET OUT.\n         MVC   0(3,R5),MINRBA      YES. LOWER IT\n         WRITE MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               TYP5RBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\nNOFRSR   DS    0H\n         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD\n         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nREWRFEND DS    0H\n         L     R9,SAVER9L\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9M\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG                          BLANK OUTPUT LINE\n         MVC   LINE,LINE-1                     WRITE\n         MVC   MESUSRDX+39(7),TRYID    UPDATE USERID MESSAGES MESSAGE\n         MVC   LINET(L'MESUSRDX),MESUSRDX         END OF USER LINE\n         MVC   LINE+2(3),MESARROW\n         LA    R0,L'MESUSRDX+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG                          BLANK OUTPUT LINE\nWRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         ST    R6,SAVER6D          SAVE VALUE OF R6\n         LR    R6,R0               USE R6 TEMPORARILY FOR EX VALUE\n         BCTR  R6,0                ONE LESS FOR EXECUTE\n         EX    R6,MOVEMSG          EXECUTE\n         L     R6,SAVER6D          RESTORE VALUE OF R6\n         A     R0,=F'7'\n         HEX   LINE,3,MESSRBA\n         BAL   R9,MSG              WRITE MESSAGE OUT\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         CLC   USMNEXT(3),ZEROS    IS THIS THE LAST MESSAGE ?\n         BE    WRITLENX            YES, GO FINISH UP.\n         MVC   NEXTRBA(3),USMNEXT    NO. GET ADDRESS OF NEXT RECORD\n         DROP  R2\n         BAL   R9,DELREC           GO DELETE THE RECORD\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   MESSRBA(3),NEXTRBA   PREPARE TO READ NEXT RECORD\n         B     WRLOOP\nWRITLENX BAL   R9,DELREC           DELETE THE LAST RECORD\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9N\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINET(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINET,MESSEND                     END OF USER LINE\n         LA    R0,L'MESSEND+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG                          BLANK OUTPUT LINE\n         MVC   LINE,LINE-1                     WRITE\n         MVC   MESDELUS+7(7),TRYID     UPDATE \"USERID DELETED\" MESSAGE\n         MVC   LINET(L'MESDELUS),MESDELUS         END OF USER LINE\n         MVC   LINE+2(3),MESARROW\n         LA    R0,L'MESDELUS+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG                          BLANK OUTPUT LINE\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9N\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R5\nSETIOPL  DS    0H\n         ST    R9,SAVER9O\n         L     R5,CPPLPNTR\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R5\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9O\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\nMESARROW DC    C'-->'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLNKLINE DS    0CL133\nBLANKS   DC    C'        '         8 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERREC   DS    0CL128\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\n         DC    121X'00'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'\nMESUSRID DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-\n               ASET.'\nMESUSRDL DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESALNOU DC    C'* - NO USERIDS FOUND IN BROADCAST DATASET -  *'\nMESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'\nMESSAGE2 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         DS    0F\nQNAM     DC    CL8'SYSIKJBC'\nRNAME    DC    X'000000'\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\nENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nCPPLPNTR DS    F                   ADDRESS OF CPPL\nPSCBPNTR DS    F                   ADDRESS OF PSCB\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nALLFLAG  DS    X\nLEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST\nLEVELLIT DS    CL6                    LITERAL 'LEVEL'\nLEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nTYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nNEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMINRBA   DC    X'000000'\nFSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nRNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nSAVER9U  DS    F                   BAL Register Save Area\nSAVER9V  DS    F                   BAL Register Save Area\nSAVER9W  DS    F                   BAL Register Save Area\nSAVER9X  DS    F                   BAL Register Save Area\nSAVER9Y  DS    F                   BAL Register Save Area\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nSAVEINF1 DS    CL8                 PLACE TO STORE CCHHR\nLINEB    DS    C                   LINE-1\nLINE     DS    CL137\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nMESDELUS DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-\n               ASET.'\nMESUSRDX DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IEZIOB   DSECT=YES\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMUSERS": {"ttr": 14342, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00E\\x00\\x95\\x15\\x0f\\x01\\x16&\\x9f\\x156\\x04\\x1d\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1995-05-30T00:00:00", "modifydate": "2016-09-25T15:36:45", "lines": 1053, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMUSERS TITLE 'BDMUSERS - DISPLAY USERIDS DEFINED TO SYS1.BRODCAST'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO-IN-BATCH *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         SYNTAX:   BDMUSERS A(LL)      TO LIST ALL USERID RECORDS    *\n*                                                                     *\n*                   BDMUSERS            TO LIST ONLY NUMBER OF MSGS   *\n*                                       FOR EACH USER THAT HAS THEM.  *\n*                                                                     *\n*       FUNCTION:   TO LIST USERID RECORDS OF ALL TSO USERS DEFINED   *\n*                   TO THE SYS1.BRODCAST DATASET.                     *\n*                                                                     *\n*                   USERS WITHOUT MESSAGES WILL BE LISTED IN 1 LINE.  *\n*                   USERS WITH MESSAGES WILL BE LISTED IN 3 LINES.    *\n*                                                                     *\n*          AUTHOR:  SAM GOLOB               VERSION:   1.4.0B         *\n*                                                                     *\n*            DATE:  MAY 18, 99                                        *\n*                                                                     *\n*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *\n*                                                                     *\n*         CHANGES:  99/04/28  -  TOOK OFF RESTRICTIONS OF OPER, ACCT. *\n*                                OPEN SYS1.BRODCAST FOR INPUT INSTEAD *\n*                                OF UPDAT.  OK FOR GENERAL USERS.     *\n*                                                                     *\n*                   95/05/31  -  HAS COUNT OF MSGS AND ID DISPLAY     *\n*                                USERID ALL$#@ WILL DISPLAY ALL MSGS  *\n*                                                                     *\n*                   95/06/08  -  STRUCTURED SUBROUTINES AND COMMENTS  *\n*                                                                     *\n*                   06/11/28  -  TITLE LINES FOR COMMERCIAL PRODUCT.  *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMUSERS'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMUSERS,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    5,EOJ8            (ZERO) LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n*\nALLSET   DS    0H\n         MVI   ALLFLAG,X'FF'       DO YOUR STUFF FOR ALL USERIDS.\nONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         RDJFCB BRODCAST\n* ------------- Get the EESCB in a program -------------*  below\n* -----------------  This needs AMODE 31  --------------*\nGETEESCB DS    0H\n         CNOP  0,4\n         L     R15,CONST            Amode 31\n         BASSM R0,R15\nCONST    DC    X'80',AL3(CONST+4)\n         ST    R5,SAVER5A           R5 is temporary.\n         L     R5,X'10'             CVT\n         L     R5,X'9C'(,R5)        Point to TSVT\n         L     R5,X'4C'(,R5)        Point to TPVT\n         ST    R5,SAVETPVT          Save the TPVT for reference.\n         L     R5,X'20'(,R5)        Point to EESCB - R5\n         ST    R5,SAVEESCB          Store away the IKJEESCB address\n         L     R5,SAVER5A           Restore R5 quickly.\n         L     R2,SAVEESCB          Use work register here.\n         LTR   R2,R2                EESCB supported for this release?\n         BZ    ENDEESCB             No. Bypass EESCB stuff.\n         USING IKJEESCB,R2\nUSEEESCB DS    0H                   Save EESCB quantities.\n         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?\n         BNE   ENDEESCB             No. Can't do anything if not it.\n         MVC   EESIDENT(8),EESCB_IDENTIFIER\n         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number\n         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?\n         BL    ENDEESCB             No. Don't support fancy stuff.\n         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name\n         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr\n         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit\n         DROP  R2\n         CNOP  0,4\n         L     R15,CONSTX          Amode 24\n         BASSM R0,R15\nCONSTX   DC    A(CONSTX+4)\n         B     ENDEESCB\nSAVETPVT DC    F'0'                Needed for Get EESCB routine\nSAVEESCB DC    F'0'                Needed for Get EESCB routine\nEESDSN   DC    CL44' '             BRODCAST Dsname from EESCB\nEESVOL   DC    CL6' '              BRODCAST Volser from EESCB\nEESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB\nEESVERS  DC    X'00'               EESCB version number\nEESIDENT DC    CL8' '              EESCB Identifier, copied.\nLITEESCB DC    CL8'IKJEESCB'\nENDEESCB DS    0H\n* ------------- Get the EESCB in a program -------------*  above\n*\n         BAL   R9,PRTITLE\n*\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R7,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\n         AP    USERCNT,=P'1'       INCREMENT USER COUNTER      SG 05/99\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n         ST    R6,SAVER6           SAVE COUNT FOR RETRY (IF \"ALL\")\n         BCT   R7,USRLOOP          TRY FOR ANOTHER USER ENTRY\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n         CLC   SAVEPTRS(6),ZEROS\n         BE    SKIPSHOW\nMSGX1    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         MVC   LINE+1(7),TRYID\n         HEX   LINE+10,3,USDRBA\n         HEX   LINE+18,3,USDEND\n         MVC   LINE+26(21),=C'      USERID pointers'\n         CLI   SUMFLAG,X'FF'        SUMMARY ONLY?              SG 05/99\n         BE    GOGO2                YES. DON'T WRITE MESSAGE   SG 05/99\n         BAL   R9,MSG                 TAKE OUT\nGOGO2    DS    0H                                              SG 05/99\nSKIPSHOW DS    0H\nMSGX2    LA    R0,65                  TAKE OUT LATER\n         MVC   LINE,LINE-1            TAKE OUT\n         HEX   LINE,3,MYUSRBA         TAKE OUT LATER\n         HEX   LINE+8,1,MYUSSLOT\n         MVC   LINE+13(7),TRYID\n         MVC   LINE+24(31),=C'    Defined USERID in BRODCAST ' TAKE OUT\n         CLI   SUMFLAG,X'FF'      SUMMARY ONLY ?               SG 05/99\n         BE    GOGO1              YES. DON'T WRITE MESSAGE     SG 05/99\n         BAL   R9,MSG                 TAKE OUT\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\nGOGO1    DS    0H                                              SG 05/99\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?\n         BE    TRYMORE             YES. KEEP TRYING MORE ID'S\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         B     ZEROUT                  AND SCRAM\nTRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\nTRYMOREN B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT\n         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+46(10),TMSGCNT\n         MVC   LINET(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL+7\n         BAL   R9,MSG                       THEN\n         MVC   WK1ALL,USRALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+46(10),USERCNT\n         MVC   LINET(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL+7\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR+7                      DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              REAL RETURN CODE\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     DS    0H\n         LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     DS    0H\n         LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT.\nEOJ8     DS    0H\n         LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT.\nEOJ12    DS    0H\n         LA    R5,12               SET CC = 12.\n         B     EOJ                 CONT.\nEOJ16    DS    0H\n         LA    R5,16               SET CC = 16.\n         B     EOJ                 CONT.\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R9,SAVER9A\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\n         OI    0(R7),X'40'         UPPERCASE PARM LETTER       SG 05/99\n         CLI   0(R7),X'C1'         IS FIRST LETTER AN A ?      SG 06/00\n         BE    GETGO1              NO. NOT A SPECIAL PARM      SG 05/99\n         MVI   SUMFLAG,X'FF'       RUN SUMMARY IF NOT \"A\"      SG 06/00\nGETGO1   MVI   0(R7),X'C1'         FORCE A LETTER IN           SG 05/99\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         MVI   NEWID,C'A'                                      SG 05/99\n         MVI   OLDID,C'A'                                      SG 05/99\n         MVI   OLDPSCBL,X'01'      STUFF FIELD                 SG 05/99\n         DROP  R2\n         L     R9,SAVER9A\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9B\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9B\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9C\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9C\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9D\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9D\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9E\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   USERCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVI   ALLFLAG,X'00'\n         MVI   SUMFLAG,X'00'\n         MVI   EESVERS,X'00'       Don't assume EESCB exists.\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9F\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9G\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9G\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9H\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9I\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n         L     R6,SAVER6           RESTORE R6 TO COUNT FOR BCT\n         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9J\nWRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0\n         BCTR  R6,0\n         EX    R6,MOVEMSG\n         A     R0,=F'7'\n         HEX   LINE,3,MESSRBA\n*        BAL   R9,MSG              WRITE MESSAGE OUT\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         CLC   USMNEXT(3),ZEROS\n         BE    WRITLEND\n         MVC   MESSRBA(3),USMNEXT\n         DROP  R2\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         B     WRLOOP\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9K\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINET(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINET,MESSEND                     END OF USER LINE\n         LA    R0,L'MESSEND+7\n*        BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n*        BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(62),LINE-1                 OF ASTERISKS.\n*        BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9L\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H\n         ST    R9,SAVER9M\n         MVC   LINE,LINE-1                  WRITE TITLE MESSAGES.\n         MVC   LINE(MSGTLEN),MESSAGET\n         LA    R0,MSGTLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME\n         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE\n         LA    R0,74                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE\n         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER\n         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE\n         LA    R0,36                        LENGTH OF ENTIRE MESSAGE\n         BAL   R9,MSG                       WRITE THE MESSAGE\n*  EESCB stuff  -  below\n         CLC   EESIDENT(8),=C'IKJEESCB'\n         BNE   NOEESCB1\n         CLI   EESVERS,X'03'\n         BL    NOEESCB1\n         CLC   JFCBDSNM(44),EESDSN\n         BNE   NOTOFFIC\n         CLC   JFCBVOLS(6),EESVOL\n         BNE   NOTOFFIC\n         B     YESOFFIC\nNOTOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESNOFFL),MESNOFFL\n         LA    R0,L'MESNOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nYESOFFIC DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINE+10(L'MESYOFFL),MESYOFFL\n         LA    R0,L'MESYOFFL+10\n         BAL   R9,MSG\n         B     EESCBEND\nEESCBEND DS    0H\nNOEESCB1 DS    0H\n*  EESCB stuff  -  above\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\n*--------------------------------------------------------------------*\n         SPACE\nDSNAMET  DS    0CL133\n         DC    CL30' BRODCAST Dataset Name  : '\nDSNAMEN  DS    CL44\n         DC    CL59' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nDSVOLST  DS    0CL133\n         DC    CL30' BRODCAST Dataset Volser: '\nDSVOLSN  DS    CL6\n         DC    CL97' '\n         SPACE\n*--------------------------------------------------------------------*\nMESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'\nMESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'\n*--------------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nBLNKLINE DS    0CL133\nBLANKS   DC    C'        '         8 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSEND  DC    C'* - - - - End of Messages for this USER - - - - *'\nMESTOTAL DC    C'User         has           Deferred TSO Messages'\nMESALL DC C'Total Deferred TSO Messages in SYS1.BRODCAST              '\nUSRALL DC C'Total # of Userids Defined  in SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - No USERID Record for USER          - - *'\nMESPREND DC    C'?????  Preliminary end if USERID Records - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130,           KEYLEN + BLKSIZE                    X\n               EXLST=JFCB1\n         SPACE 3\n         DS    0F                  NEEDED FOR CORRECT EXLST\nJFCB1    DC    X'87'\n         DC    AL3(INFMJFCB)\n         IEFJFCBN LIST=YES\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL72                PADDING\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nUSERCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nSAVER5A  DS    F\nSAVER6   DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER9A  DS    F                   BAL Register Save Area\nSAVER9B  DS    F                   BAL Register Save Area\nSAVER9C  DS    F                   BAL Register Save Area\nSAVER9D  DS    F                   BAL Register Save Area\nSAVER9E  DS    F                   BAL Register Save Area\nSAVER9F  DS    F                   BAL Register Save Area\nSAVER9G  DS    F                   BAL Register Save Area\nSAVER9H  DS    F                   BAL Register Save Area\nSAVER9I  DS    F                   BAL Register Save Area\nSAVER9J  DS    F                   BAL Register Save Area\nSAVER9K  DS    F                   BAL Register Save Area\nSAVER9L  DS    F                   BAL Register Save Area\nSAVER9M  DS    F                   BAL Register Save Area\nSAVER9N  DS    F                   BAL Register Save Area\nSAVER9O  DS    F                   BAL Register Save Area\nSAVER9P  DS    F                   BAL Register Save Area\nSAVER9Q  DS    F                   BAL Register Save Area\nSAVER9R  DS    F                   BAL Register Save Area\nSAVER9S  DS    F                   BAL Register Save Area\nSAVER9T  DS    F                   BAL Register Save Area\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nALLFLAG  DS    X\nSUMFLAG  DS    X\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         IKJEESCB DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMUSORT": {"ttr": 14852, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x06\\x01\\x01\\x03O\\x01\\x16&\\x9f\\x156\\x02#\\x02N\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-03T00:00:00", "modifydate": "2016-09-25T15:36:06", "lines": 547, "newlines": 590, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMUSORT TITLE 'BDMUSORT - Sort userids and delete duplicates'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   This program is a batch program to feed userid    *\n*                   names into a BRODCAST dataset, in bulk.  The      *\n*                   lists of userids which are input to the program   *\n*                   are sorted, and all duplicates deleted, before    *\n*                   they are loaded into the BRODCAST dataset.        *\n*                                                                     *\n*    Copyright (C) 1995-2016 Sam Golob Systems Programming LLC        *\n*              All Rights Reserved                                    *\n*                                                                     *\n*    Function:   To load a new BRODCAST dataset with userids from     *\n*                a file, in bulk.  The program gets all the userid    *\n*                inputs, sorts them, and deletes duplicates.          *\n*                                                                     *\n*                Your SORT program is LINKed to and invoked, to sort  *\n*                all inputted 8-character Userid records in ascending *\n*                order.  Afterwards, duplicates are deleted and the   *\n*                remaining records are put out to the USRIDOUT DD.    *\n*                                                                     *\n*                Input to this program can be created by the BDMGTUID *\n*                program.                                             *\n*                                                                     *\n*                Output from this program can be fed into the         *\n*                BDMULOAD program.                                    *\n*                                                                     *\n*    Sample JCL:                                                      *\n*                                                                     *\n*  ALL of the following DD Names must be present:                     *\n*                                                                     *\n*   USERIDS, USRIDOUT, SORTIN, SORTOUT, SYSOUT, SYSPRINT              *\n*                                                                     *\n*  If any of these DD Names is missing, see the Diagnosis section     *\n*  below.                                                             *\n*                                                                     *\n*  //BDMUSORT EXEC PGM=BDMUSORT,REGION=3000K                          *\n*  //STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.BRODMSTR.LOADLIB               *\n*  //USERIDS  DD  DISP=SHR,DSN=SBGOLOB.NEW.USROUT                     *\n*  //         DD  DISP=SHR,DSN=SBGOLOB.SYS1.USROUT                    *\n*  //USRIDOUT DD  DISP=(NEW,CATLG,DELETE),DSN=SBGOLOB.NEW.USRSORT,    *\n*  //             DCB=(RECFM=FB,DSORG=PS,LRECL=8,BLKSIZE=8000),       *\n*  //             SPACE=(TRK,(5,5)),UNIT=SYSALLDA,VOL=SER=WORK04      *\n*  //SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=SYSALLDA,           *\n*  //             DCB=(RECFM=FB,LRECL=8,BLKSIZE=8000),                *\n*  //             SPACE=(TRK,(5,5))                                   *\n*  //SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN         *\n*  //SYSOUT   DD  SYSOUT=*                                            *\n*  //SYSPRINT DD  SYSOUT=*                                            *\n*                                                                     *\n*    Diagnosis:                                                       *\n*                                                                     *\n*  All DD Names must be present, otherwise a \"write to the JES LOG\"   *\n*  is written that a DD Name is missing, and the Return Code is 16.   *\n*                                                                     *\n*  A \"write to the JES LOG\" is always written with a Diagnosis        *\n*  message.  If correct, the following appears:                       *\n*                                                                     *\n*  BDMUS01I     DDNFLAG = 3F     *  - OK -   *                        *\n*  IEF142I SBGOLOBC BDMUSORT - STEP WAS EXECUTED - COND CODE 0000     *\n*                                                                     *\n*  If incorrect, something like the following appears instead:        *\n*                                                                     *\n*  BDMUS01I     DDNFLAG = 36     * diagnosis *                        *\n*  BDMUS00I     ----------------------------                          *\n*  BDMUS10E     USERIDS  DD Name is missing...                        *\n*  BDMUS00I     ----------------------------                          *\n*  BDMUS00I     ----------------------------                          *\n*  BDMUS10E     USRIDOUT DD Name is missing...                        *\n*  BDMUS00I     ----------------------------                          *\n*  BDMUS00I     ----------------------------                          *\n*  BDMUS09E     Please correct your JCL.......                        *\n*  BDMUS00I     ----------------------------                          *\n*  IEF142I SBGOLOBC BDMUSORT - STEP WAS EXECUTED - COND CODE 0016     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                                                                     *\n*    Date Written:  Dec. 16, 2006       Release:  1.4.0B              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R4,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         YREGS\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMUSORT'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         USING &PGMNAME,R15\n         B     BEGINN-*(,R15)\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nSAVE     DC    18F'0'                                                   00406\nBEGINN   DS    0H\n* ------\n         STM   R14,R12,12(R13)                                          00102\n         LR    R5,R1                     SAVE PARM POINTER\n         LA    R1,SAVE                   NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)                FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)                BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1                    NEW SAVE AREA ADDRESS\n         LR    R1,R5                     RESTORE PARM POINTER\n         DROP  R15\n* ------\n         LR    R12,R15                                                  00103\n         USING BDMUSORT,R12,R11,R10,R9   SET UP FOUR BASE REGISTERS     00104\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LA    R9,4095(,R10)\n         LA    R9,1(,R9)\n***********************************************************************\nINITEM   DS    0H\n         MVI   BLANK-1,X'40'\n         MVI   LINE-1,X'40'\n         MVC   BLANK,BLANK-1\n         MVC   LINE,LINE-1\n         MVC   BIRECIN,=F'0'\n         ZAP   DERECIN,=P'0'\n         MVC   BIRECSR,=F'0'\n         ZAP   DERECSR,=P'0'\n         MVC   BIRECOU,=F'0'\n         ZAP   DERECOU,=P'0'\n         MVI   DDNFLAG,X'00'\n* ----------------------------------------------------------------- *    06223\nTIOTSCAN DS    0H             Determine the presence of Optional         06224\n*                             DDNAMES:  BRODPRNT, BRODUSER, SYSIN        06225\n* ----->                      OPEN them if there is JCL for them.        06226\n* ----------------------------------------------------------------- *    06227\n* --   DD NAME  -  IF THIS DD NAME IS PRESENT, THEN AS FOLLOWS   -- *    06227\n* --                                                             -- *    06227\n* --                  USERIDS   -  DDNFLAG = X'01'               -- *    06227\n* --                  SORTIN    -  DDNFLAG = X'02'               -- *    06227\n* --                  SYSPRINT  -  DDNFLAG = X'04'               -- *    06227\n* --                  USRIDOUT  -  DDNFLAG = X'08'               -- *    06227\n* --                  SORTOUT   -  DDNFLAG = X'10'               -- *    06227\n* --                  SYSOUT    -  DDNFLAG = X'20'               -- *    06227\n* ----------------------------------------------------------------- *    06227\n         ST    R3,SAVER3A\n         ST    R5,SAVER5A\n         L     R5,16          R5=CVT                                     06228\n         L     R5,0(,R5)      R5=TCB WORDS                               06229\n         L     R5,4(,R5)      R5=MY TCB                                  06230\n         L     R5,12(,R5)     R5=TIOT                                    06231\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234\n         CLC   4(8,R5),USERIDSC     USERIDS DDNAME THERE?                06235\n         BNE   TIOTUSER       NO                                         06236\n         OI    DDNFLAG,X'01'        SHOW PRESENCE OF USERIDS DD          06237\n         B     TIOTNEXT       CONTINUE                                   06238\nTIOTUSER CLC   4(8,R5),SORTINC                                           06239\n         BNE   TIOTSRTI                                                  06240\n         OI    DDNFLAG,X'02'        SHOW PRESENCE OF SORTIN DD           06241\n         B     TIOTNEXT                                                  06242\nTIOTSRTI CLC   4(8,R5),SYSPRINC                                          06239\n         BNE   TIOTSYSP                                                  06240\n         OI    DDNFLAG,X'04'        SHOW PRESENCE OF SYSPRINT DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTSYSP CLC   4(8,R5),USRIDOUC                                          06239\n         BNE   TIOTSRTO                                                  06240\n         OI    DDNFLAG,X'08'        SHOW PRESENCE OF USRIDOUT DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTSRTO CLC   4(8,R5),SORTOUTC                                          06239\n         BNE   TIOTSYSO                                                  06240\n         OI    DDNFLAG,X'10'        SHOW PRESENCE OF SORTOUT  DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTSYSO CLC   4(8,R5),SYSOUTC                                           06239\n         BNE   TIOTNEXT                                                  06240\n         OI    DDNFLAG,X'20'        SHOW PRESENCE OF SYSOUT   DD         06241\n         B     TIOTNEXT                                                  06242\nTIOTNEXT SR    R3,R3                                                     06243\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244\n         AR    R5,R3          R5=NEXT DD ENTRY                           06245\n         B     TIOTLOOP       GO CHECK IT                                06246\nTIOTSEND DS    0H                                                        06247\n         L     R3,SAVER3A\n         L     R5,SAVER5A\n         B     OPENDDS              BRANCH PAST CONSTANTS\n* ----------------------------------------------------------------- *\nUSERIDSC DC    CL8'USERIDS '\nSORTINC  DC    CL8'SORTIN  '\nSYSPRINC DC    CL8'SYSPRINT'\nUSRIDOUC DC    CL8'USRIDOUT'\nSORTOUTC DC    CL8'SORTOUT '\nSYSOUTC  DC    CL8'SYSOUT  '\n*---------------------------------------------------------------------* 00112\nOPENDDS  DS    0H\n         HEX   DDNREPR,1,DDNFLAG\n         MVC   DIAGWTO+8(8),=C'BDMUS01I'\n         MVC   DIAGWTO+21(7),=C'DDNFLAG'\n         MVI   DIAGWTO+29,C'='\n         MVC   DIAGWTO+31(2),DDNREPR\n         TM    DDNFLAG,X'3F'\n         BNO   DIAGGOON\n         MVC   DIAGWTO+40(9),=C' - OK -  '\nDIAGGOON DS    0H\nDIAGWTO  WTO   '                              * diagnosis *',ROUTCDE=11X\n               ,DESC=7\n         TM    DDNFLAG,X'01'\n         BO    OPUSERID\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     USERIDS  DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     NOUSERID\nOPUSERID DS    0H\n         OPEN  (USERIDS,INPUT)                                          00109\nNOUSERID DS    0H\n         TM    DDNFLAG,X'02'\n         BO    OPSORTIN\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     SORTIN   DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     NOSORTIN\nOPSORTIN DS    0H\n         OPEN  (SORT,OUTPUT)                                            00110\nNOSORTIN DS    0H\n         TM    DDNFLAG,X'04'\n         BO    OPSYSPRI\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     NOSYSPRI\nOPSYSPRI DS    0H\n         OPEN  (SYSPRINT,OUTPUT)                                        00110\nNOSYSPRI DS    0H\n         TM    DDNFLAG,X'08'\n         BO    GOUSRIDO\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     USRIDOUT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nGOUSRIDO DS    0H\n         TM    DDNFLAG,X'10'\n         BO    GOSORTOU\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     SORTOUT  DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nGOSORTOU DS    0H\n         TM    DDNFLAG,X'20'\n         BO    GOSYSOUT\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS10E     SYSOUT   DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\nGOSYSOUT DS    0H\nTSTEOJ16 DS    0H\n         TM    DDNFLAG,X'3F'    Change if testing more DD Names\n         BO    TITLPRNT\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS09E     Please correct your JCL.......',ROUTCDE=11X\n               ,DESC=7\n         WTO   'BDMUS00I     ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ16\n*---------------------------------------------------------------------* 00112\nTITLPRNT DS    0H\n         MVC   LINE(133),LINE-1            BLANK OUTPUT LINE\n         PUT   SYSPRINT,TITLINE            Print Title and\n         PUT   SYSPRINT,CPYRLINE             Copyright notice.\n         PUT   SYSPRINT,REPTLN01           And name of which Report.\n         MVC   LINE(133),LINE-1            BLANK OUTPUT LINE\n         PUT   SYSPRINT,LINE\n         MVC   LINE(133),LINE-1            BLANK OUTPUT LINE\n         PUT   SYSPRINT,LINE\n*---------------------------------------------------------------------* 00112\nGETINPUT EQU   *                                                        00117\n         GET   USERIDS,INAREA                                           00367\n         OC    INAREA(8),BLANKS                                         00119\n         MVC   OUTUSID(8),INAREA\n         L     R2,BIRECIN\n         LA    R2,1(,R2)\n         ST    R2,BIRECIN\n         PUT   SORT,OUTUSID        WRITE THE RECORD                     00212\n         B     GETINPUT            BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n         CLOSE USERIDS                                                  00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (USRIDOUT,OUTPUT)                                        00238\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00251\n*                                      - Delete duplicate Userids -\n         MVC   HOLDUSID(8),BLANKS        Prime the hold area.\nPUTOUTPT DS    0H                        Loop to write out Userids\n         GET   SORT,OUTSORT              GET a sorted record.           00252\n         L     R2,BIRECSR                Count records out from SORT.\n         LA    R2,1(,R2)\n         ST    R2,BIRECSR\n         CLC   HOLDUSID(8),OUTSORT       Is this record a duplicate?\n         BE    PUTOUTPT                  Yes. Go read another one.\n         MVC   HOLDUSID(8),OUTSORT       No. Move for next compare.\n         L     R2,BIRECOU                Count records that remain.\n         LA    R2,1(,R2)\n         ST    R2,BIRECOU\n         PUT   USRIDOUT,OUTSORT          Put out all non-duplicates.\n         B     PUTOUTPT\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR USERIDS      00366\n         GET   USERIDS,INAREA                                           00367\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*---------------------------------------------------------------------* 00385\nENDSRT   DS    0H                                                       00353\n         XR    R2,R2                     ZERO OUT WORK REGISTER\n         L     R2,BIRECIN                SAVE RECORDS PER TRACK COUNT\n         CVD   R2,CVDWORK                CONVERT TO DECIMAL\n         MVC   DERECIN,CVDWORK           STORE AWAY FOR REPORTING\n         XR    R2,R2                     ZERO OUT WORK REGISTER\n         L     R2,BIRECSR                SAVE RECORDS PER TRACK COUNT\n         CVD   R2,CVDWORK                CONVERT TO DECIMAL\n         MVC   DERECSR,CVDWORK           STORE AWAY FOR REPORTING\n         XR    R2,R2                     ZERO OUT WORK REGISTER\n         L     R2,BIRECOU                SAVE RECORDS PER TRACK COUNT\n         CVD   R2,CVDWORK                CONVERT TO DECIMAL\n         MVC   DERECOU,CVDWORK           STORE AWAY FOR REPORTING\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRECIN),MSGRECIN\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DERECIN+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRECSR),MSGRECSR\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DERECSR+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         MVC   LINET(L'MSGRECOU),MSGRECOU\n         MVC   LINET+34(10),MASK10\n         ED    LINET+34(10),DERECOU+3\n         PUT   SYSPRINT,LINE\n         MVC   LINE,LINE-1\n         PUT   SYSPRINT,LINE\n         CLOSE SORT                                                     00355\n         CLOSE SYSPRINT                                                 00356\n         CLOSE USRIDOUT                                                 00356\n         B     EOJ0\n*---------------------------------------------------------------------* 00385\nEOJ0     DS    0H\n         LA    R5,0                    Zero Return Code\n         B     EOJ\nEOJ4     DS    0H\n         LA    R5,4                    RC = 4\n         B     EOJ\nEOJ8     DS    0H\n         LA    R5,8                    RC = 8\n         B     EOJ\nEOJ12    DS    0H\n         LA    R5,12                   RC = 12\n         B     EOJ\nEOJ16    DS    0H\n         LA    R5,16                   RC = 16\n         B     EOJ\nEOJ      DS    0H\n         L     R13,SAVE+4\n         LR    R15,R5              Load return code into R15.\n         ST    R15,16(,R13)        Put RC into passed save area.\n         LM    R14,R12,12(R13)\n         BR    R14                 Go back to system.\n         SPACE\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00385\n* --------------------------------------------------------- *\nHEX      DS    0H\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R4                    Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEXSAVE  DS    3F                    Register save for HEX macro\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nUSERIDS  DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=USERIDS,RECFM=FB,    X00394\n               LRECL=8                                                  00395\n         SPACE 3                                                        00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=8,  X00397\n               BLKSIZE=8000,EODAD=ENDSRT                                00398\n         SPACE 3                                                        00399\nUSRIDOUT DCB   DSORG=PS,MACRF=PM,EODAD=EOF,DDNAME=USRIDOUT,RECFM=FB,   X00394\n               LRECL=8                                                  00395\n         SPACE 3                                                        00396\nSYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,LRECL=133    00400\n         SPACE 3                                                        00402\nHOLDOUTS DS      0CL15            HOLD AREA FOR PREVIOUS SORT OUTPUT\nHOLDUSID DC      CL8' '           PREVIOUS PTF NAME\n         DC      CL8' '\nBLANKS   DC      CL8' '                                                 00418\n         DC      C' '\nBLANK    DC      CL8' '                                                 00418\n*\nINAREA   DS      CL8                                                    00416\n         DC      CL8' '\nOUTSORT  DS      0CL8             INPUT AREA FOR SORT OUTPUT RECORD\nOUTUSID  DC      CL8' '           SORT PTF NAME - 1ST 7 CHARACTERS      00417\n         DS      0F                                                     00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC    C' SORT FIELDS=(1,7,CH,A)'                               00431\nSORTEND  DC    C' '                                                     00432\nRECCARD  DC    C' RECORD LENGTH=8,TYPE=F'                               00433\nRECEND   DC    C' '                                                     00434\n         DC    CL4'    '                                                00442\n         DC    C' '\nLINE     DC    CL133' '\nLINET    EQU   LINE+7\nLINEM    EQU   LINE+1\n         DC    CL8' '\n*--------------------------------------------------------------------*\nTITLINE  DS    0CL133\n         DC    C'1'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X\n               --'\n         DC    CL46' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nCPYRLINE DS    0CL133\n         DC    C'0'\n         DC    CL3' '\n* -->                               Currently 77 characters\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n* -->\n         DC    CL52' '\n         SPACE\n*--------------------------------------------------------------------*\n         SPACE\nREPTLN01 DS    0CL133\n         DC    C'-'\n         DC    CL3' '\n         DC    CL6'---'\n         DC    CL50'&PGMNAME   ---   Userid Sort and Delete Duplicates'\n         DC    C' ---'\n         DC    CL69' '\n*--------------------------------------------------------------------*\n         DC    CL8' '\nMSGRECIN DC    C'Total Userids Read Into Program :'\nMSGRECSR DC    C'Total Userids Read Out from Sort:'\nMSGRECOU DC    C'Total Userids Without Duplicates:'\nMASK10   DC    XL10'40202020202020202120'\nDDNREPR  DS    2C\nCVDWORK  DS    D\nDDNFLAG  DS    X\n*--------------------------------------------------------------------*\nBIRECIN  DS    F                 FULLWORD BINARY NUMBER\nDERECIN  DS    PL8\nBIRECSR  DS    F                 FULLWORD BINARY NUMBER\nDERECSR  DS    PL8\nBIRECOU  DS    F                 FULLWORD BINARY NUMBER\nDERECOU  DS    PL8\nSAVER3A  DS    F\nSAVER5A  DS    F\n         END                                                            00478\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMUTIL": {"ttr": 15106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x008\\x01\\x01\\x18\\x0f\\x01\\x07\\x16O\\t\\x08\\x02O\\x023\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2001-06-29T00:00:00", "modifydate": "2007-06-13T09:08:38", "lines": 591, "newlines": 563, "modlines": 0, "user": "SBGOLOB"}, "text": "/********************** BDMUTIL  REXX/CLIST      *********************/\n/*  BDMUTIL                                                          */\n/*                                                                   */\n/*     This exec provides an ISPF interface to the following pgms:   */\n/*     BDMUSERS, BDMLIST and BDMDEL from the BRODMSTR load library.  */\n/*     The exec makes certain assumption about the output from these */\n/*     commands, therefore, may need to be revised when these cmds   */\n/*     change.                                                       */\n/*                                                                   */\n/*  SYNTAX: BDMUTIL DSN                                              */\n/*     DSN - Optional - used for testing against a copy of the       */\n/*         system BRODCAST data set.  Use the same syntax for any    */\n/*         TSO dataset, i.e. either use quotes or Data set will be   */\n/*         prefixed with your Userid Profile Prefix.  If not         */\n/*         provided, then use the default from BC_DSN variable.      */\n/*                                                                   */\n/*  Date-written:  12/28/2000 - Vinh Vu                              */\n/*                                                                   */\n/*  Customization:                                                   */\n/*     Change default setting in the \"CUSTOMIZATION BLOCK\" to        */\n/*     to reflect Panel names (if you decide to change them) and     */\n/*     BDMxx command names, BRODCAST data set name.                  */\n/*                                                                   */\n/*********************************************************************/\n/*                                                                   */\n/*  Change History:                                                  */\n/*                                                                   */\n/*     01/03/2001 - V_Vu - Change to move 'NUMERIC DIGITS 256' to    */\n/*         the body of main exec so that all 'C2D' calls will work   */\n/*         (thanks to Sam Golob and Bob Lamerand of StorageTek).     */\n/*                                                                   */\n/*     01/05/2001 - V_Vu - Change to add PRINT function.             */\n/*                                                                   */\n/*     01/08/2001 - V_Vu - Change to make PRINT function work better.*/\n/*         Also, add change to display the BRODCAST dsn plus data    */\n/*         set info...                                               */\n/*                                                                   */\n/*     01/09/2001 - V_Vu - Change to fix the row positioning after   */\n/*         a row is selected.                                        */\n/*                                                                   */\n/*     06/28/2001 - V_Vu - Change to allow for SKIP(nn) and MSGS(nn) */\n/*         in BCMLIST and BCMDEL2.  Also add CPU information display */\n/*         on the Primary Panel as well.                             */\n/*                                                                   */\n/*     04/19/2007 - SBG -  Adapt to BRODMSTR package.                */\n/*                                                                   */\n/*********************************************************************/\n\n/********************* CUSTOMIZATION BLOCK ***************************/\n\nTABLENM    = 'BDMTABL'         /* Main table name                    */\nTABLEMSG   = 'BDMMSGS'         /* Table used to display msgs         */\nTABPANEL   = 'BDMPNL1'         /* Panel name for main display        */\nMSGPANEL   = 'BDMPNL2'         /* Panel used to display msgs         */\nALERTPANEL = 'BDMPNL3'         /* Panel used to alert for DEL action */\nPRINTPANEL = 'BDMPNL4'         /* Panel used to print messages       */\nPROGRBAR   = 'PROGRBAR'        /* Program Bar Panel                  */\n\nOCLASS     = 'A'               /* Default SYSOUT for printing        */\nODEST      = '  '              /* Default DEST for printing          */\nOWRITER    = ' '               /* Default WRITER for printing        */\nMAX_LINES  = 50                /* Line/Count per page for printing   */\nEXTRA_LINES_AT_THE_END = 2\nLAST_LINE              = 1\n\nLST_USER_CMD = 'BDMUSERS'      /* TSO cmd to list userid w/msgs      */\nLST_USER_MSG = 'BDMLIST'       /* TSO cmd to list a specicic id msgs */\nDEL_USER_MSG = 'BDMDEL'        /* TSO cmd to delete msgs             */\n\nBC_DSN = \"'SYS1.BRODCAST'\"     /* Default DSN for the BROADCAST data */\n                               /* set. Overriden by PARM.            */\n\n/***************************** END ***********************************/\n\nIf Sysvar(SYSISPF) \u00ac='ACTIVE' Then Do\n   Parse Source . . EXEC_NAME .\n   Say '***' EXEC_NAME 'can only run under ISPF...'\n   Exit\n   End\n\nAddress ISPEXEC\n\nNUMERIC DIGITS 256\n\nMSG_X_AXIS  = 20                               /* 20 units on X-axis */\n                                               /* for the progr bar  */\n\nCOLOR.         = '\u00ac'           /* Default color = White              */\nCOLOR.RED      = '{'           /* These colors should match with     */\nCOLOR.BLUE     = '~'           /* what's being defined in the progr  */\nCOLOR.YELLOW   = '_'           /* bar panel.                         */\nCOLOR.TURQ     = '`'           /*                                    */\nCOLOR.WHITE    = '\u00ac'           /*                                    */\nCOLOR.PINK     = '!'           /*                                    */\nCOLOR.GREEN    = '#'           /*                                    */\n\nTEXT_COLOR     = '}'           /*                                    */\n\nZTDMARK = Center(' End Of List ',80,'-')\n\nCall DISPLAY_IN_PROGRESS_BAR 5 RED\n\nDELETED_TOTAL = 0\nDELETED_MSG   = 'Msgs have been deleted for id(s):'\n\nSORT_BY_ID    = 'TBSORT '||TABLENM||' FIELDS(UID,C,A)'\nSORT_BY_TOTAL = 'TBSORT '||TABLENM||' FIELDS(UTOTAL,N,A,UID,C,A)'\n\nSORT_STMT = SORT_BY_ID\nACTCMD = ''\n\nMSG_FOR_DELETE  = 'Following Broadcast Messages Have Been Deleted:'\nMSG_FOR_DISPLAY = 'Outstanding Broadcast Messages:'\n\nArg DSN .\nIf DSN = '' Then DSN = BC_DSN\n\nSay Current BRODCAST dataset is DSN\n\nX = Listdsi(DSN 'DIRECTORY NORECALL')\n\nAddress TSO 'ALLOC F(BRODCAST) DA('||DSN||') SHR REU'\nIf RC > 0 Then Do\n   Say '** Error Allocating '||DSN||'. Abort...'\n   Exit\n   End\n\n$DSNAME  =  SYSDSNAME\n$VOLUME  =  SYSVOLUME\n$DSORG   =  SYSDSORG\n$RECFM   =  SYSRECFM\n$LRECL   =  SYSLRECL\n$KEYL    =  SYSKEYLEN\n$BLKSIZE =  SYSBLKSIZE\n$UNIT    =  SYSUNIT\n$CRDATE  =  SYSCREATE\n\nMYCRP = 0\n\nCVT     = Get_Stor('10'x)\nASVT    = Get_Stor(CVT,'22C'x)\nMAXUSER = C2D(Get_Stor(ASVT,'204'x))\n\nSMCA    = Get_Stor(CVT,'C4'x)\nSMFID   = Get_Stor(SMCA,'10'x)\n\nCSD     = Get_Stor(CVT,'294'x)\nRCE     = Get_Stor(CVT,'490'x)\nRMCT    = Get_Stor(CVT,'25C'x)\nMACH    = C2X(Get_Stor(CVT,-6,2))\nNUM_CPU = C2D(Get_Stor(CSD,'A'x,2))\nCP      = NUM_CPU\nSU      = C2D(Get_Stor(RMCT,64))\nSUSEC   = Strip(Format((16000000/SU),8,2))\nRSTORE  = (C2D(Get_Stor(CVT,'358'x))/1024)||'M'\nESTORE  = (C2D(Get_Stor(RCE,'A0'x))*4)/1024||'M'\n\nPROCESS_ALL_IDS:\n\nCall DISPLAY_IN_PROGRESS_BAR 10 YELLOW\n\n'TBCREATE' TABLENM 'NAMES(UID UTOTAL USTAT) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_CMD 'X'\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLENM\n   Exit\n   End\nElse Do\n   Call DISPLAY_IN_PROGRESS_BAR 80 TURQ\n   Call SCAN_ASVT\n   Call DISPLAY_IN_PROGRESS_BAR 90 GREEN\n   Do I=1 To CMD.0\n      Parse Var CMD.I FIELD_01 FIELD_02 . FIELD_04 .\n      If FIELD_01 = 'User'\n      Then Do\n         UID = FIELD_02\n         UTOTAL = FIELD_04\n         CKID = Strip(UID)\n         If JOBNAME.CKID Then Do\n            USTAT = Strip(CKID)||'('||,\n                    Strip(JOBID.CKID)||') A('||,\n                    Strip(JOBASID.CKID)||') Active'\n            End\n         Else USTAT = ''\n         'TBADD' TABLENM\n         End             /* If FIELD_01     */\n      End                /* Do I=1          */\n   End\n\n'TBTOP' TABLENM\n\nSORT_TABLE:\n\nSORT_STMT\n\nDISPL_TABLE_AFTER_SORT:\n\nMYCMD = ''\nMYSEL = ''\n'TBDISPL' TABLENM  'PANEL('TABPANEL') POSITION(MYCRP)'\nTEMPRC = RC\nIf TEMPRC = 8 Then Signal IAMDONE\nElse If Temprc = 0 | Temprc = 4 Then Nop\nElse Do\n   ZEDSMSG = 'Err TBDISPL Rc:' TEMPRC\n   ZEDLMSG = 'Error occurs during TBDISPL - Check ISPF environment'\n   'SETMSG MSG(ISRZ001)'\n   'TBCLOSE' TABLENM\n   Exit\n   End\n\nParse Var MYCMD CMD1 .\nLIMITED_STRING = ' '\nSelect\n   When CMD1  = '' Then Do\n      Select\n         When MYSEL = 'S' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DISPLAY_A_SPECIFIC_ID\n            End\n         When MYSEL = 'P' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal PRINT_MESSAGES\n            End\n         When MYSEL = 'D' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DELETE_MESSAGES\n            End\n         Otherwise Nop\n         End                /*  Select */\n      End\n   When CMD1  = 'SORTID' Then Do\n      SORT_STMT = SORT_BY_ID\n      Signal SORT_TABLE\n      End\n   When CMD1  = 'SORTTOT' Then Do\n      SORT_STMT = SORT_BY_TOTAL\n      Signal SORT_TABLE\n      End\n   Otherwise Nop\nEnd    /* Select  */\n\nSignal PROCESS_ALL_IDS\n\n\nCHECK_PARM:\nNUMBER_OF_EXTRA_LINES = 0\nSKIP_STRING    = ' '\nMSGS_STRING    = ' '\nIf SKAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   SKIP_STRING = ' SKIP('||Strip(SKAMT)||')'\n   End\nIf MSAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   MSGS_STRING = ' MSGS('||Strip(MSAMT)||')'\n   End\nReturn SKIP_STRING||MSGS_STRING\n\n\nDISPLAY_A_SPECIFIC_ID:\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   If Substr(CMD.6,1,23) = '           This BRODCAST' Then\n   Do I=8 To (CMD.0-EXTRA_LINES_AT_THE_END)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   Else\n   Do I=7 To (CMD.0-EXTRA_LINES_AT_THE_END)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End              /* Do I=1   */\n   ACTION = MSG_FOR_DISPLAY\n   ACTCMD = '(DEL/PRT)'\n   MYCMD = ''\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   TEMPRC = RC\n   'TBCLOSE' TABLEMSG\n   'REMPOP'\n   If TEMPRC = 0 Then Do\n      If Strip(MYCMD) = 'DEL' Then Signal DELETE_MESSAGES\n      If Strip(MYCMD) = 'PRT' Then Signal PRINT_MESSAGES\n      End\n   End\nSignal DISPL_TABLE_AFTER_SORT\n\n\n\nDELETE_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('ALERTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nDEL_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   If Substr(CMD.6,1,23) = '           This BRODCAST' Then\n   Do I=8 To (CMD.0-LAST_LINE)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   Else\n   Do I=7 To (CMD.0-LAST_LINE)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   ACTION = MSG_FOR_DELETE\n   ACTCMD = ''\n   TMP_UID = Strip(UID)\n   ZEDSMSG = 'Msgs sucessfully deleted'\n   ZEDLMSG = 'Outstanding Msgs for '||TMP_UID||' have been deleted...'\n   'SETMSG MSG(ISRZ001)'\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   'REMPOP'\n   'TBCLOSE' TABLEMSG\n   If DELETED_TOTAL = 0 Then DELETED_MSG = DELETED_MSG||' '||TMP_UID\n   Else Do\n      If Index(DELETED_MSG,TMP_UID) = 0 Then Do\n         DELETED_MSG = DELETED_MSG||', '||TMP_UID\n         End                 /*  If Index   */\n      End\n   DELETED_TOTAL = DELETED_TOTAL +,\n      (CMD.0-EXTRA_LINES_AT_THE_END-NUMBER_OF_EXTRA_LINES)\n   End\nSignal PROCESS_ALL_IDS\n\n\nPRINT_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('PRINTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Call PRINT_ALL_LINES\n\nSignal DISPL_TABLE_AFTER_SORT\n\n\nPRINT_ALL_LINES:\n\nAddress TSO\nFILENAME = '$$'||Random(1000,9999)||'$$'\n'NEWSTACK'\nX = OUTTRAP('JUNK.')\n'FREE F('FILENAME')'\n'DELSTACK'\n\nIf ODEST   \u00ac= '' Then DEST_STRING    = 'DEST('||Strip(ODEST)||')'\nElse DEST_STRING = ''\nIf OWRITER \u00ac= '' Then WRITER_STRING  = 'WRITER('||Strip(OWRITER)||')'\nElse WRITER_STRING = ''\n'ALLOC FILE('||FILENAME||') '||,\n      'SYSOUT('OCLASS') LRECL(131) '||,\n      'RECFM(F B A) SPIN(UNALLOC) '||DEST_STRING||' '||WRITER_STRING\nTEMPRC = RC\nAddress ISPEXEC\nIf TEMPRC > 0 Then Do\n   ZEDSMSG = 'Error allocating SYSOUT'\n   ZEDLMSG = 'Cannot allocate SYSOUT data set for print. RC:' TEMPRC\n   'SETMSG MSG(ISRZ001)'\n   End\nElse Call PRINT_ROUTINE\n\nReturn\n\n\n\nPRINT_ROUTINE:\n\nPAGE_COUNT = 0\nCOUNTER = 0\nLINE_COUNT = 99\nHEAD1 =\nHEAD1 = '1'||'  SMF id: '||SMFID||,\n        Center('* Broadcast Msgs For '||Strip(UID)||' *',80)||,\n        'Page: '\nHEAD2 = '   Printed on '||Date(W)||', '||Date(U)||' - '||Time()\nHEAD3 = '   Broadcast Data Set Name: '||$DSNAME\nHEAD4 = '                 On Volume: '||$VOLUME\n\nAddress TSO\n'NEWSTACK'\nDo I=1 to CMD.0\n   If LINE_COUNT > MAX_LINES  Then Do\n      PAGE_COUNT = PAGE_COUNT + 1\n      Queue HEAD1||Format(PAGE_COUNT,2)\n      Queue\n      Queue HEAD2\n      Queue HEAD3\n      Queue HEAD4\n      Queue\n      COUNTER = COUNTER + 6\n      LINE_COUNT = 1\n      End                        /* If LINE_COUNT  */\n   Queue '   => ' CMD.I\n   COUNTER = COUNTER + 1\n   LINE_COUNT = LINE_COUNT + 1\n   End\n\n'EXECIO' COUNTER  'DISKW' FILENAME '(FINIS'\n'DELSTACK'\n'FREE F('FILENAME')'\nAddress ISPEXEC\nZEDSMSG = 'Msgs sucessfully printed'\nZEDLMSG = 'Outstanding msgs for '||Strip(UID)||' printed.'\n'SETMSG MSG(ISRZ000)'\nReturn\n\nIAMDONE:\n'TBCLOSE' TABLENM\nAddress TSO 'FREE F(BRODCAST)'\nIf DELETED_TOTAL > 0 Then Do\n   ZEDSMSG = ''\n   ZEDLMSG = Strip(Left(DELETED_MSG,500))\n   'SETMSG MSG(ISRZ000)'\n   End\n\nExit\n\n\nDISPLAY_IN_PROGRESS_BAR:\n\nArg P_PCT P_COLOR .\n\nTMP1     = (P_PCT*MSG_X_AXIS)%100\nTMP2     = MSG_X_AXIS-TMP1\nPGRBAR   = Copies(' ',TMP1)||Copies('.',TMP2)\nPGRMASK  = Copies(COLOR.P_COLOR,TMP1)||Copies(TEXT_COLOR,TMP2)\n'CONTROL DISPLAY LOCK'\n'ADDPOP COLUMN(62) ROW(-1)'\n'DISPLAY PANEL('PROGRBAR')'\n'REMPOP'\nReturn\n\n\n\nSCAN_ASVT:\n\nNUMTSU  = 0\nOFFSET  = 0+C2D('20C'x)\n\nJOBNAME.  = 0\nJOBID.    = ''\nJOBASID.  = ''\n\nDo MAXUSER\n   ASCB   = Get_Stor(ASVT,OFFSET)\n   OFFSET = OFFSET+4\n   If Bitand(Substr(ASCB,1,1),'80'X) = '80'X Then Iterate\n   If C2D(ASCB) = 0 Then Iterate\n   If Get_Stor(ASCB,0,4) \u00ac= 'ASCB' Then Iterate\n   If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then Iterate      /* TSU only */\n\n   JOBNI = Get_Stor(ASCB,172)\n   JOBNS = Get_Stor(ASCB,176)\n\n   If C2D(JOBNS) = 0 and C2D(JOBNI) = 0 Then Do\n      JOBN = 'INIT'                     /* 'Starting' */\n      End\n\n   If C2D(JOBNI) = 0 Then Do\n      If C2D(JOBNS) \u00ac=0 Then JOBN  = Get_Stor(JOBNS,,8)\n         Else JOBN = 'INIT'             /* '**Init**' */\n      If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then JTYPE = 'STC'\n         Else JTYPE = 'TSU'\n      End\n   Else Do\n      JOBN  = Get_Stor(JOBNI,,8)\n      JTYPE = 'BAT'\n      End\n   OUCB        = Get_Stor(ASCB,'90'x)\n   ASSB        = Get_Stor(ASCB,'150'x)\n   JSAB        = Get_Stor(ASSB,'A8'x)\n   JOBN        = Strip(JOBN)\n   JOBNAME.JOBN  = 1\n   JOBASID.JOBN  = C2X(Get_Stor(ASCB,'24'x,2))\n   If C2D(JSAB) \u00ac= 0 Then JOBID.JOBN = Get_Stor(JSAB,'14'x,8)\n   Else                   JOBID.JOBN = ''\n   NUMTSU = NUMTSU + 1\n   /* Say JOBN '-->' JOBNAME.JOBN JOBID.JOBN JOBASID.JOBN */\n   End   /* Do MAXUSER */\n\nReturn\n\nGet_Stor: PROCEDURE\n\n/*------------------------------------------------------------------*/\n/*                                                                  */\n/*      This procedure will extract data using the MVS Storage      */\n/*      function. Input arguments will be:                          */\n/*                                                                  */\n/*      1) Storage_Pointer or Literal, i.e. CVTPTR or '10'x, or     */\n/*         16 (like '10'x)                                          */\n/*      2) Offset in hex or dec (numnbe), i.e. 'FF'x or 256 or      */\n/*         D2C(256)                                                 */\n/*      3) Length of returned data in decimal, i.e. 256             */\n/*                                                                  */\n/*      NOTE - To make sure that this procedure will work all the   */\n/*      times, just include 'NUMERIC DIGITS 256' at the beginning   */\n/*      of the calling REXX exec.                                   */\n/*                                                                  */\n/*------------------------------------------------------------------*/\n\n\nParse Arg AREA,OFFSET,LENG\n\nIf Arg(2,'O') Then OFFSET=0\n\nIf Arg(3,'O') Then LENG=4\n\nIf DataType(AREA) = 'CHAR' Then Do\n   AREA =  C2D(AREA)\n   End\n\nIf DataType(OFFSET) = 'CHAR' Then Do\n   OFFSET =  C2D(OFFSET)\n   End\n\nReturn  Storage((D2X(AREA+OFFSET)),LENG)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMUTILD": {"ttr": 15361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00\"\\x01\\x01\\x18\\x0f\\x01\\x07\\x16O\\t\\x13\\x02O\\x023\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2001-06-29T00:00:00", "modifydate": "2007-06-13T09:13:22", "lines": 591, "newlines": 563, "modlines": 0, "user": "SBGOLOB"}, "text": "/********************** BDMUTIL  REXX/CLIST      *********************/\n/*  BDMUTIL                                                          */\n/*                                                                   */\n/*     This exec provides an ISPF interface to the following pgms:   */\n/*     BDMUSERS, BDMLIST and BDMDEL from the BRODMSTR load library.  */\n/*     The exec makes certain assumption about the output from these */\n/*     commands, therefore, may need to be revised when these cmds   */\n/*     change.                                                       */\n/*                                                                   */\n/*  SYNTAX: BDMUTIL DSN                                              */\n/*     DSN - Optional - used for testing against a copy of the       */\n/*         system BRODCAST data set.  Use the same syntax for any    */\n/*         TSO dataset, i.e. either use quotes or Data set will be   */\n/*         prefixed with your Userid Profile Prefix.  If not         */\n/*         provided, then use the default from BC_DSN variable.      */\n/*                                                                   */\n/*  Date-written:  12/28/2000 - Vinh Vu                              */\n/*                                                                   */\n/*  Customization:                                                   */\n/*     Change default setting in the \"CUSTOMIZATION BLOCK\" to        */\n/*     to reflect Panel names (if you decide to change them) and     */\n/*     BDMxx command names, BRODCAST data set name.                  */\n/*                                                                   */\n/*********************************************************************/\n/*                                                                   */\n/*  Change History:                                                  */\n/*                                                                   */\n/*     01/03/2001 - V_Vu - Change to move 'NUMERIC DIGITS 256' to    */\n/*         the body of main exec so that all 'C2D' calls will work   */\n/*         (thanks to Sam Golob and Bob Lamerand of StorageTek).     */\n/*                                                                   */\n/*     01/05/2001 - V_Vu - Change to add PRINT function.             */\n/*                                                                   */\n/*     01/08/2001 - V_Vu - Change to make PRINT function work better.*/\n/*         Also, add change to display the BRODCAST dsn plus data    */\n/*         set info...                                               */\n/*                                                                   */\n/*     01/09/2001 - V_Vu - Change to fix the row positioning after   */\n/*         a row is selected.                                        */\n/*                                                                   */\n/*     06/28/2001 - V_Vu - Change to allow for SKIP(nn) and MSGS(nn) */\n/*         in BCMLIST and BCMDEL2.  Also add CPU information display */\n/*         on the Primary Panel as well.                             */\n/*                                                                   */\n/*     04/19/2007 - SBG -  Adapt to BRODMSTR package.                */\n/*                                                                   */\n/*********************************************************************/\n\n/********************* CUSTOMIZATION BLOCK ***************************/\n\nTABLENM    = 'BDMTABL'         /* Main table name                    */\nTABLEMSG   = 'BDMMSGS'         /* Table used to display msgs         */\nTABPANEL   = 'BDMPNL1'         /* Panel name for main display        */\nMSGPANEL   = 'BDMPNL2'         /* Panel used to display msgs         */\nALERTPANEL = 'BDMPNL3'         /* Panel used to alert for DEL action */\nPRINTPANEL = 'BDMPNL4'         /* Panel used to print messages       */\nPROGRBAR   = 'PROGRBAR'        /* Program Bar Panel                  */\n\nOCLASS     = 'A'               /* Default SYSOUT for printing        */\nODEST      = '  '              /* Default DEST for printing          */\nOWRITER    = ' '               /* Default WRITER for printing        */\nMAX_LINES  = 50                /* Line/Count per page for printing   */\nEXTRA_LINES_AT_THE_END = 2\nLAST_LINE              = 1\n\nLST_USER_CMD = 'BDMUSERS'      /* TSO cmd to list userid w/msgs      */\nLST_USER_MSG = 'BDMLRBA'       /* TSO cmd to list a specicic id msgs */\nDEL_USER_MSG = 'BDMDEL'        /* TSO cmd to delete msgs             */\n\nBC_DSN = \"'SYS1.BRODCAST'\"     /* Default DSN for the BROADCAST data */\n                               /* set. Overriden by PARM.            */\n\n/***************************** END ***********************************/\n\nIf Sysvar(SYSISPF) \u00ac='ACTIVE' Then Do\n   Parse Source . . EXEC_NAME .\n   Say '***' EXEC_NAME 'can only run under ISPF...'\n   Exit\n   End\n\nAddress ISPEXEC\n\nNUMERIC DIGITS 256\n\nMSG_X_AXIS  = 20                               /* 20 units on X-axis */\n                                               /* for the progr bar  */\n\nCOLOR.         = '\u00ac'           /* Default color = White              */\nCOLOR.RED      = '{'           /* These colors should match with     */\nCOLOR.BLUE     = '~'           /* what's being defined in the progr  */\nCOLOR.YELLOW   = '_'           /* bar panel.                         */\nCOLOR.TURQ     = '`'           /*                                    */\nCOLOR.WHITE    = '\u00ac'           /*                                    */\nCOLOR.PINK     = '!'           /*                                    */\nCOLOR.GREEN    = '#'           /*                                    */\n\nTEXT_COLOR     = '}'           /*                                    */\n\nZTDMARK = Center(' End Of List ',80,'-')\n\nCall DISPLAY_IN_PROGRESS_BAR 5 RED\n\nDELETED_TOTAL = 0\nDELETED_MSG   = 'Msgs have been deleted for id(s):'\n\nSORT_BY_ID    = 'TBSORT '||TABLENM||' FIELDS(UID,C,A)'\nSORT_BY_TOTAL = 'TBSORT '||TABLENM||' FIELDS(UTOTAL,N,A,UID,C,A)'\n\nSORT_STMT = SORT_BY_ID\nACTCMD = ''\n\nMSG_FOR_DELETE  = 'Following Broadcast Messages Have Been Deleted:'\nMSG_FOR_DISPLAY = 'Outstanding Broadcast Messages:'\n\nArg DSN .\nIf DSN = '' Then DSN = BC_DSN\n\nSay Current BRODCAST dataset is DSN\n\nX = Listdsi(DSN 'DIRECTORY NORECALL')\n\nAddress TSO 'ALLOC F(BRODCAST) DA('||DSN||') SHR REU'\nIf RC > 0 Then Do\n   Say '** Error Allocating '||DSN||'. Abort...'\n   Exit\n   End\n\n$DSNAME  =  SYSDSNAME\n$VOLUME  =  SYSVOLUME\n$DSORG   =  SYSDSORG\n$RECFM   =  SYSRECFM\n$LRECL   =  SYSLRECL\n$KEYL    =  SYSKEYLEN\n$BLKSIZE =  SYSBLKSIZE\n$UNIT    =  SYSUNIT\n$CRDATE  =  SYSCREATE\n\nMYCRP = 0\n\nCVT     = Get_Stor('10'x)\nASVT    = Get_Stor(CVT,'22C'x)\nMAXUSER = C2D(Get_Stor(ASVT,'204'x))\n\nSMCA    = Get_Stor(CVT,'C4'x)\nSMFID   = Get_Stor(SMCA,'10'x)\n\nCSD     = Get_Stor(CVT,'294'x)\nRCE     = Get_Stor(CVT,'490'x)\nRMCT    = Get_Stor(CVT,'25C'x)\nMACH    = C2X(Get_Stor(CVT,-6,2))\nNUM_CPU = C2D(Get_Stor(CSD,'A'x,2))\nCP      = NUM_CPU\nSU      = C2D(Get_Stor(RMCT,64))\nSUSEC   = Strip(Format((16000000/SU),8,2))\nRSTORE  = (C2D(Get_Stor(CVT,'358'x))/1024)||'M'\nESTORE  = (C2D(Get_Stor(RCE,'A0'x))*4)/1024||'M'\n\nPROCESS_ALL_IDS:\n\nCall DISPLAY_IN_PROGRESS_BAR 10 YELLOW\n\n'TBCREATE' TABLENM 'NAMES(UID UTOTAL USTAT) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_CMD 'X'\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLENM\n   Exit\n   End\nElse Do\n   Call DISPLAY_IN_PROGRESS_BAR 80 TURQ\n   Call SCAN_ASVT\n   Call DISPLAY_IN_PROGRESS_BAR 90 GREEN\n   Do I=1 To CMD.0\n      Parse Var CMD.I FIELD_01 FIELD_02 . FIELD_04 .\n      If FIELD_01 = 'User'\n      Then Do\n         UID = FIELD_02\n         UTOTAL = FIELD_04\n         CKID = Strip(UID)\n         If JOBNAME.CKID Then Do\n            USTAT = Strip(CKID)||'('||,\n                    Strip(JOBID.CKID)||') A('||,\n                    Strip(JOBASID.CKID)||') Active'\n            End\n         Else USTAT = ''\n         'TBADD' TABLENM\n         End             /* If FIELD_01     */\n      End                /* Do I=1          */\n   End\n\n'TBTOP' TABLENM\n\nSORT_TABLE:\n\nSORT_STMT\n\nDISPL_TABLE_AFTER_SORT:\n\nMYCMD = ''\nMYSEL = ''\n'TBDISPL' TABLENM  'PANEL('TABPANEL') POSITION(MYCRP)'\nTEMPRC = RC\nIf TEMPRC = 8 Then Signal IAMDONE\nElse If Temprc = 0 | Temprc = 4 Then Nop\nElse Do\n   ZEDSMSG = 'Err TBDISPL Rc:' TEMPRC\n   ZEDLMSG = 'Error occurs during TBDISPL - Check ISPF environment'\n   'SETMSG MSG(ISRZ001)'\n   'TBCLOSE' TABLENM\n   Exit\n   End\n\nParse Var MYCMD CMD1 .\nLIMITED_STRING = ' '\nSelect\n   When CMD1  = '' Then Do\n      Select\n         When MYSEL = 'S' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DISPLAY_A_SPECIFIC_ID\n            End\n         When MYSEL = 'P' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal PRINT_MESSAGES\n            End\n         When MYSEL = 'D' Then Do\n            LIMITED_STRING = CHECK_PARM()\n            Signal DELETE_MESSAGES\n            End\n         Otherwise Nop\n         End                /*  Select */\n      End\n   When CMD1  = 'SORTID' Then Do\n      SORT_STMT = SORT_BY_ID\n      Signal SORT_TABLE\n      End\n   When CMD1  = 'SORTTOT' Then Do\n      SORT_STMT = SORT_BY_TOTAL\n      Signal SORT_TABLE\n      End\n   Otherwise Nop\nEnd    /* Select  */\n\nSignal PROCESS_ALL_IDS\n\n\nCHECK_PARM:\nNUMBER_OF_EXTRA_LINES = 0\nSKIP_STRING    = ' '\nMSGS_STRING    = ' '\nIf SKAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   SKIP_STRING = ' SKIP('||Strip(SKAMT)||')'\n   End\nIf MSAMT \u00ac= '' Then Do\n   NUMBER_OF_EXTRA_LINES = NUMBER_OF_EXTRA_LINES + 1\n   MSGS_STRING = ' MSGS('||Strip(MSAMT)||')'\n   End\nReturn SKIP_STRING||MSGS_STRING\n\n\nDISPLAY_A_SPECIFIC_ID:\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   If Substr(CMD.6,1,23) = '           This BRODCAST' Then\n   Do I=8 To (CMD.0-EXTRA_LINES_AT_THE_END)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   Else\n   Do I=7 To (CMD.0-EXTRA_LINES_AT_THE_END)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End              /* Do I=1   */\n   ACTION = MSG_FOR_DISPLAY\n   ACTCMD = '(DEL/PRT)'\n   MYCMD = ''\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   TEMPRC = RC\n   'TBCLOSE' TABLEMSG\n   'REMPOP'\n   If TEMPRC = 0 Then Do\n      If Strip(MYCMD) = 'DEL' Then Signal DELETE_MESSAGES\n      If Strip(MYCMD) = 'PRT' Then Signal PRINT_MESSAGES\n      End\n   End\nSignal DISPL_TABLE_AFTER_SORT\n\n\n\nDELETE_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('ALERTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nDEL_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Do\n   If Substr(CMD.6,1,23) = '           This BRODCAST' Then\n   Do I=8 To (CMD.0-LAST_LINE)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   Else\n   Do I=7 To (CMD.0-LAST_LINE)\n      UMSG1 = Substr(CMD.I,1,72)\n      UMSG2 = Substr(CMD.I,73,72)\n      'TBADD' TABLEMSG\n      End\n   ACTION = MSG_FOR_DELETE\n   ACTCMD = ''\n   TMP_UID = Strip(UID)\n   ZEDSMSG = 'Msgs sucessfully deleted'\n   ZEDLMSG = 'Outstanding Msgs for '||TMP_UID||' have been deleted...'\n   'SETMSG MSG(ISRZ001)'\n   'ADDPOP COLUMN(13)'\n   'TBTOP'   TABLEMSG\n   'TBDISPL' TABLEMSG 'PANEL('MSGPANEL')'\n   'REMPOP'\n   'TBCLOSE' TABLEMSG\n   If DELETED_TOTAL = 0 Then DELETED_MSG = DELETED_MSG||' '||TMP_UID\n   Else Do\n      If Index(DELETED_MSG,TMP_UID) = 0 Then Do\n         DELETED_MSG = DELETED_MSG||', '||TMP_UID\n         End                 /*  If Index   */\n      End\n   DELETED_TOTAL = DELETED_TOTAL +,\n      (CMD.0-EXTRA_LINES_AT_THE_END-NUMBER_OF_EXTRA_LINES)\n   End\nSignal PROCESS_ALL_IDS\n\n\nPRINT_MESSAGES:\n'ADDPOP COLUMN(14) ROW(5)'\n'DISPLAY PANEL('PRINTPANEL')'\nTEMPRC = RC\n'REMPOP'\nIf TEMPRC > 0 Then Signal DISPL_TABLE_AFTER_SORT\n\n'TBCREATE' TABLEMSG 'NAMES(UMSG1 UMSG2) REPLACE NOWRITE'\n\nAddress TSO\n'NEWSTACK'\nX = OUTTRAP('CMD.')\nLST_USER_MSG UID LIMITED_STRING\nTEMPRC = RC\n'DELSTACK'\nAddress ISPEXEC\n\nIf TEMPRC \u00ac= 0 Then Do\n   Do I=1 To CMD.0\n      Say 'Err' I ':' CMD.I\n      End\n   'TBCLOSE' TABLEMSG\n   Exit\n   End\nElse Call PRINT_ALL_LINES\n\nSignal DISPL_TABLE_AFTER_SORT\n\n\nPRINT_ALL_LINES:\n\nAddress TSO\nFILENAME = '$$'||Random(1000,9999)||'$$'\n'NEWSTACK'\nX = OUTTRAP('JUNK.')\n'FREE F('FILENAME')'\n'DELSTACK'\n\nIf ODEST   \u00ac= '' Then DEST_STRING    = 'DEST('||Strip(ODEST)||')'\nElse DEST_STRING = ''\nIf OWRITER \u00ac= '' Then WRITER_STRING  = 'WRITER('||Strip(OWRITER)||')'\nElse WRITER_STRING = ''\n'ALLOC FILE('||FILENAME||') '||,\n      'SYSOUT('OCLASS') LRECL(131) '||,\n      'RECFM(F B A) SPIN(UNALLOC) '||DEST_STRING||' '||WRITER_STRING\nTEMPRC = RC\nAddress ISPEXEC\nIf TEMPRC > 0 Then Do\n   ZEDSMSG = 'Error allocating SYSOUT'\n   ZEDLMSG = 'Cannot allocate SYSOUT data set for print. RC:' TEMPRC\n   'SETMSG MSG(ISRZ001)'\n   End\nElse Call PRINT_ROUTINE\n\nReturn\n\n\n\nPRINT_ROUTINE:\n\nPAGE_COUNT = 0\nCOUNTER = 0\nLINE_COUNT = 99\nHEAD1 =\nHEAD1 = '1'||'  SMF id: '||SMFID||,\n        Center('* Broadcast Msgs For '||Strip(UID)||' *',80)||,\n        'Page: '\nHEAD2 = '   Printed on '||Date(W)||', '||Date(U)||' - '||Time()\nHEAD3 = '   Broadcast Data Set Name: '||$DSNAME\nHEAD4 = '                 On Volume: '||$VOLUME\n\nAddress TSO\n'NEWSTACK'\nDo I=1 to CMD.0\n   If LINE_COUNT > MAX_LINES  Then Do\n      PAGE_COUNT = PAGE_COUNT + 1\n      Queue HEAD1||Format(PAGE_COUNT,2)\n      Queue\n      Queue HEAD2\n      Queue HEAD3\n      Queue HEAD4\n      Queue\n      COUNTER = COUNTER + 6\n      LINE_COUNT = 1\n      End                        /* If LINE_COUNT  */\n   Queue '   => ' CMD.I\n   COUNTER = COUNTER + 1\n   LINE_COUNT = LINE_COUNT + 1\n   End\n\n'EXECIO' COUNTER  'DISKW' FILENAME '(FINIS'\n'DELSTACK'\n'FREE F('FILENAME')'\nAddress ISPEXEC\nZEDSMSG = 'Msgs sucessfully printed'\nZEDLMSG = 'Outstanding msgs for '||Strip(UID)||' printed.'\n'SETMSG MSG(ISRZ000)'\nReturn\n\nIAMDONE:\n'TBCLOSE' TABLENM\nAddress TSO 'FREE F(BRODCAST)'\nIf DELETED_TOTAL > 0 Then Do\n   ZEDSMSG = ''\n   ZEDLMSG = Strip(Left(DELETED_MSG,500))\n   'SETMSG MSG(ISRZ000)'\n   End\n\nExit\n\n\nDISPLAY_IN_PROGRESS_BAR:\n\nArg P_PCT P_COLOR .\n\nTMP1     = (P_PCT*MSG_X_AXIS)%100\nTMP2     = MSG_X_AXIS-TMP1\nPGRBAR   = Copies(' ',TMP1)||Copies('.',TMP2)\nPGRMASK  = Copies(COLOR.P_COLOR,TMP1)||Copies(TEXT_COLOR,TMP2)\n'CONTROL DISPLAY LOCK'\n'ADDPOP COLUMN(62) ROW(-1)'\n'DISPLAY PANEL('PROGRBAR')'\n'REMPOP'\nReturn\n\n\n\nSCAN_ASVT:\n\nNUMTSU  = 0\nOFFSET  = 0+C2D('20C'x)\n\nJOBNAME.  = 0\nJOBID.    = ''\nJOBASID.  = ''\n\nDo MAXUSER\n   ASCB   = Get_Stor(ASVT,OFFSET)\n   OFFSET = OFFSET+4\n   If Bitand(Substr(ASCB,1,1),'80'X) = '80'X Then Iterate\n   If C2D(ASCB) = 0 Then Iterate\n   If Get_Stor(ASCB,0,4) \u00ac= 'ASCB' Then Iterate\n   If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then Iterate      /* TSU only */\n\n   JOBNI = Get_Stor(ASCB,172)\n   JOBNS = Get_Stor(ASCB,176)\n\n   If C2D(JOBNS) = 0 and C2D(JOBNI) = 0 Then Do\n      JOBN = 'INIT'                     /* 'Starting' */\n      End\n\n   If C2D(JOBNI) = 0 Then Do\n      If C2D(JOBNS) \u00ac=0 Then JOBN  = Get_Stor(JOBNS,,8)\n         Else JOBN = 'INIT'             /* '**Init**' */\n      If C2D(Get_Stor(ASCB,'3C'x)) = 0 Then JTYPE = 'STC'\n         Else JTYPE = 'TSU'\n      End\n   Else Do\n      JOBN  = Get_Stor(JOBNI,,8)\n      JTYPE = 'BAT'\n      End\n   OUCB        = Get_Stor(ASCB,'90'x)\n   ASSB        = Get_Stor(ASCB,'150'x)\n   JSAB        = Get_Stor(ASSB,'A8'x)\n   JOBN        = Strip(JOBN)\n   JOBNAME.JOBN  = 1\n   JOBASID.JOBN  = C2X(Get_Stor(ASCB,'24'x,2))\n   If C2D(JSAB) \u00ac= 0 Then JOBID.JOBN = Get_Stor(JSAB,'14'x,8)\n   Else                   JOBID.JOBN = ''\n   NUMTSU = NUMTSU + 1\n   /* Say JOBN '-->' JOBNAME.JOBN JOBID.JOBN JOBASID.JOBN */\n   End   /* Do MAXUSER */\n\nReturn\n\nGet_Stor: PROCEDURE\n\n/*------------------------------------------------------------------*/\n/*                                                                  */\n/*      This procedure will extract data using the MVS Storage      */\n/*      function. Input arguments will be:                          */\n/*                                                                  */\n/*      1) Storage_Pointer or Literal, i.e. CVTPTR or '10'x, or     */\n/*         16 (like '10'x)                                          */\n/*      2) Offset in hex or dec (numnbe), i.e. 'FF'x or 256 or      */\n/*         D2C(256)                                                 */\n/*      3) Length of returned data in decimal, i.e. 256             */\n/*                                                                  */\n/*      NOTE - To make sure that this procedure will work all the   */\n/*      times, just include 'NUMERIC DIGITS 256' at the beginning   */\n/*      of the calling REXX exec.                                   */\n/*                                                                  */\n/*------------------------------------------------------------------*/\n\n\nParse Arg AREA,OFFSET,LENG\n\nIf Arg(2,'O') Then OFFSET=0\n\nIf Arg(3,'O') Then LENG=4\n\nIf DataType(AREA) = 'CHAR' Then Do\n   AREA =  C2D(AREA)\n   End\n\nIf DataType(OFFSET) = 'CHAR' Then Do\n   OFFSET =  C2D(OFFSET)\n   End\n\nReturn  Storage((D2X(AREA+OFFSET)),LENG)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BDMXPORT": {"ttr": 15617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\t\\x01\\x01\\x05O\\x01\\x16&\\x9f\\x156\\x05\\x9a\\x02-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2016-09-25T15:36:09", "lines": 1434, "newlines": 557, "modlines": 0, "user": "SBGOLOB"}, "text": "BDMXPORT TITLE 'BDMXPORT - EXPORT BRODCAST MESSAGES FOR RESENDING'\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*  Documentation:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO-IN-BATCH *\n*                   COMMAND.   NEED NOT BE AUTHORIZED.                *\n*                                                                     *\n*                                                                     *\n*       Copyright (C) 1995-2016 Sam Golob Systems Programming LLC     *\n*                 All Rights Reserved                                 *\n*                                                                     *\n*                                                                     *\n*         Syntax:   BDMXPORT USERID MSGS(MM) SKIP(NN)                 *\n*                           USERID is mandatory, others are           *\n*                           optional                                  *\n*                                                                     *\n*          Needs:   ALLOC F(EXPORT) DA(EXPORT.DATA) SPACE(5 45)       *\n*                     TRACKS RECFM(V B) LRECL(255) UNIT(SYSDA) REUSE  *\n*                                                                     *\n*                   ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REUSE      *\n*                                                                     *\n*                                                                     *\n*       Function:   To export BRODCAST messages for a USERID to a VB  *\n*                   output file.  If you invoke BDMXPORT for special  *\n*                   \"USERID\" ALL$#@, then all USERIDs which have      *\n*                   messages are exported.  This special USERID for   *\n*                   displaying all USERIDs can be changed at label    *\n*                   ALLSET.                                           *\n*                                                                     *\n*                The new \"EXPORT\" DD name:                            *\n*                                                                     *\n*                   You can \"export\" messages from the BRODCAST       *\n*                   dataset, or a copy thereof, to a VB-255 CLIST     *\n*                   format file, using this program.                  *\n*                                                                     *\n*                   All these messages are formatted as BDMSEND       *\n*                   commands, to be re-sent as messages to a BRODCAST *\n*                   dataset.  Thus, if you are forced to do an        *\n*                   ACCOUNT SYNC for some reason, to clear out all    *\n*                   the user messages, you can take a backup of the   *\n*                   messages themselves, using this program and then  *\n*                   reload them into the empty BRODCAST dataset.      *\n*                                                                     *\n*                   This method can also be used if you are conver-   *\n*                   ting to TSO userlogs.  Just back up the messages  *\n*                   with this program, and re-send them later, to     *\n*                   the userlogs, after they have been created.       *\n*                                                                     *\n*                                                                     *\n*          Author:  Sam Golob                                         *\n*                                                                     *\n*            Date:  July 06, 01                                       *\n*                                                                     *\n*   TSO Execution:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST')  SH REUSE   *\n*                   ALLOC F(EXPORT) DA('MY.VB255.DATASET') SH REUSE   *\n*                                                                     *\n*   JCL Execution:                                                    *\n*                                                                     *\n*   //WSBGBDMX  JOB (ACCT#),S-GOLOB,                                  *\n*   // NOTIFY=&SYSUID,                                                *\n*   // CLASS=S,MSGCLASS=X                                             *\n*   //*                                                               *\n*   //TSOBATCH EXEC PGM=IKJEFT01                                      *\n*   //STEPLIB  DD DISP=SHR,DSN=WSBG.LOAD                              *\n*   //BRODCAST DD DISP=SHR,DSN=SYS1.BRODCAST     <-- OR A COPY        *\n*   //SYSTSPRT DD SYSOUT=*                                            *\n*   //EXPORT   DD DISP=SHR,DSN=WSBG.VB255.PDS(SECCOPY)                *\n*   //SYSTSIN DD *                                                    *\n*    BDMXPORT ALL$#@                                                  *\n*   /*                                                                *\n*                                                                     *\n* CHANGE LOG:                                                         *\n*    30 Aug 2005 - Added title in the SYSTSPRT report and a userid    *\n*                  name title ahead of the message images too.        *\n*                  Moved the EXPORT DD output 8 bytes to the right,   *\n*                  so that the output is directly executable in a     *\n*                  TSO-in-batch job.                                  *\n*                                                                     *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*       I N S T R E A M    M A C R O S                                *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MACRO\n         IKJZT301  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*        UPDATED                          31MAY95 SBG.\n*\n*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                                RECORD 1                             *\n*                                                                     *\n*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *\n*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *\n*        CONCERNING THE DATA SET.                                     *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nR1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET\n         AGO   .SKIP\n.NODSECT ANOP\nR1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET\n.SKIP    ANOP\nR1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW\nR1BCFLGS DS    B -            NOTICES FLAGS - NOT USED\nR1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               NOTICES DIRECTORY RECORD\nR1USPTRP DS    0A -           SAME AS R1USPTR BELOW\nR1USFLGS DS    B -            USER MAIL FLAGS - NOT USED\nR1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD\nR1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS\nR1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -\n*                               FROM MASTER SCHEDULER BASEA, BABCMAX\n*                                                                     *\nR1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =\n*                               ' SYS1.BRODCAST DATA SET '\nR1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS\n*                               A 1-DIGIT NUMBER\n         DS    CL1 -          RESERVED\nR1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD\nR1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE\n*                               TABLE\n         DS    CL76 -         RESERVED\n         MEND\n         MACRO\n         IKJZT304  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                       USER MAIL DIRECTORY RECORD                    *\n*                                                                     *\n*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *\n*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *\n*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *\n*        LAST MESSAGE FOR EACH USERID.                                *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSDIR    DSECT , -            USER MAIL DIRECTORY RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSDIR    DS    0F -           USER MAIL DIRECTORY RECORD\n.SKIP    ANOP\nUSDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID\nUSDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)\nUSDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST\n*                               MESSAGE FOR THIS USERID (ZERO IF NONE)\nUSDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID\n*                               (ZERO IF NONE)\n         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY\n*                               ENTRIES IDENTICAL IN FORMAT TO THE\n*                               PRECEDING 'USDENTRY'\n         DS    XL8 -          RESERVED\nUSDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'\nUSDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY\n*                               RECORD (ZERO IF LAST)\n         MEND\n         MACRO\n         IKJZT305  &DSECT=YES\n* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.\n*\n*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*                         SYS1.BRODCAST DATA SET                      *\n*                        USER MAIL MESSAGE RECORD                     *\n*                                                                     *\n*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *\n*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *\n*        INTENDED FOR A PARTICULAR USERID.                            *\n*                                           10/1/72    LEVEL=1        *\n***********************************************************************\n***********************************************************************\n         AIF   ('&DSECT' EQ 'NO').NODSECT\nUSMSG    DSECT , -            USER MAIL MESSAGE RECORD\n         AGO   .SKIP\n.NODSECT ANOP\nUSMSG    DS    0F -           USER MAIL MESSAGE RECORD\n.SKIP    ANOP\nUSMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT\nUSMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)\nUSMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD\n*                               FOR THIS USERID (ZERO IF LAST)\n         MEND\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\n         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV\n         LCLC  &PGMNAME\n&VERSNUM SETC  ' 1.4.0B'\n&PKGNAME SETC  'BRODMSTR'\n&PKGTITL SETC  'Broadcast Master'\n&VERTITL SETC  ' Version '\n&COPYRGT SETC  'Copyright (c) 1995-2016 Sam Golob Systems Programming'\n&COPYRSV SETC  ' LLC - All Rights Reserved  '\n&PGMNAME SETC  'BDMXPORT'\n&PGMNAME AMODE 24\n&PGMNAME RMODE 24\n&PGMNAME CSECT\n         B     BEGINN-*(,R15)\nAFLG     DC    X'FF'\nALLCHAR  DC    C'ALL$#@'\n         DC    C'  '\n         DC    CL8'&PGMNAME'\n         DC    C' '\n         DC    C'&PKGTITL'\n         DC    C'&VERTITL'\n         DC    C'&VERSNUM'\n         DC    C' '\n         DC    C'&COPYRGT'\n         DC    C'&COPYRSV'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL6'HLASM '\n         DC    C'&SYSVER'\n         DC    C' '\nBEGINN   DS    0H\n         STM   R14,R12,12(R13)\n         USING BDMXPORT,R12,R11,R10\n         LR    R12,R15\n         LA    R11,4095(,R12)      LOAD SECOND BASE\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)      LOAD THIRD BASE\n         LA    R10,1(,R10)\n         LR    R4,R1               PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\n*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?\nCONT0    LTR   R4,R4               ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R4)           PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,WMESS3            ZERO, WRITE MESSAGE TO ENTER USERID\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n* ------------------------------------------------------------------ *\nTESTNONN DS    0H                  Test for non-numeric MSGS, SKIP\n         TM    BDMFLAG,X'01'\n         BO    TESTNMSG\n         TM    BDSFLAG,X'01'\n         BO    TESTNMSG\n         B     TESTNEND\nTESTNMSG DS    0H\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         LA    R0,44\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,45\n         MVC   LINE(45),=C'MSGS or SKIP keyword values were non-numericx\n               .'\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,35\n         MVC   LINE(35),=C'No User Messages have been listed. '\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  Return Code = 8 '\n         LA    R0,18\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(18),=C'  --------------- '\n         LA    R0,18\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\nTESTNEND DS    0H\n* ------------------------------------------------------------------ *\nALLSET   DS    0H\n** -- >>\n         MVC   NEWIDU(8),NEWID\n         OC    NEWIDU(8),BLANKS\n         CLC   =C'MSGS(',NEWIDU\n         BE    WMESS4\n         CLC   =C'SKIP(',NEWIDU\n         BE    WMESS4\n** -- >>\n         CLC   NEWID(L'ALLCHAR),ALLCHAR    \"USERID\" FOR \"ALL USERIDS\"\n         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID\n         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING\n         CLI   ALLFLAG,X'FF'       IS IT X'FF'?\n         BNE   ONEID               NO. NOT REAL \"ALL\" PROCESSING\n         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.\n         B     DOBROD\nONEID    DS    0H\n         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID\nDOBROD   OPEN  (BRODCAST,(INPUT))\n         TM    BRODCAST+48,X'10'\n         BNO   WMESS1\n         OPEN  (EXPORT,(OUTPUT))\n         TM    EXPORT+48,X'10'\n         BNO   WMESS2\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    NOTITLHE            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nNOTITLHE DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n*\n* ------------------------------------------------------------------ *\n         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT\n*                                  RBA OF FIRST USER RECORD TO SEARCH\n*                                  FOR THE USERID SLOT FOR OUR USERID.\n*                                  THIS VALUE IS STORED IN SAVERBA(3).\n*\nPRMSGHED DS    0H\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG20\n         LA    R0,L'MESSAG20+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG21\n         LA    R0,L'MESSAG21+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAG22\n         LA    R0,L'MESSAG22+7\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,133\n         BAL   R9,MSG\n*\n* ------------------------------------------------------------------ *\n* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *\n* ------------------------------------------------------------------ *\nINDEXUS  DS    0H                  READ THROUGH USERID RECORDS\n         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS\n         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.\n         LA    R6,9                COUNT OF USERS PER RECORD\n         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING USDIR,R3\n         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA\n         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA\n         LA    R8,0                INITIALIZE USERID SLOT COUNTER\nUSRLOOP  DS    0H\n         MVC   USERIDI(7),USDID    COPY WHO THIS IS\n         MVC   SAVEUSRI(7),USDID    COPY WHO THIS IS\n         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?\n         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY\n         DROP  R3\n         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?\n         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)\n         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED\nNOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?\n         BE    SAVPTRS             YEP. GO DEAL WITH IT\nTRYNEXT  DS    0H\n         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID\n         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD\n* -- >\n         XC    SAVER6B,SAVER6B\n         ST    R6,SAVER6B\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6B\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         CLC   SAVER6B,=F'1'\n         BE    TRYNEXTR\n* -- >\n         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY\nTRYNEXTR DS    0H\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER\n         B     INDEXUS             END OF RECORD? GET ANOTHER.\n         SPACE 3\nSAVPTRS  DS    0H\n         USING USDIR,R3\n         MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID\n         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD\n         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES\n         DROP  R3\n*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nGOWRITE  DS    0H\n         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE\n         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?\n         BE    TRYMORE             YES. KEEP TRYING MORE ID'S\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7A          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7A          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID,\n         B     ZEROUT                  AND SCRAM\nTRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?\n         BE    TRYMOREN            NO. GO TO THE NEXT ID.\n* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED\n         ST    R5,SAVER5A          SAVE WORK REGISTER\n         ST    R7,SAVER7A          SAVE WORK REGISTER\n         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID\n         L     R5,SAVER5A          RESTORE REGISTER\n         L     R7,SAVER7A          RESTORE REGISTER\n* ----\n         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE\n         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE\n         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER\nTRYMOREN B     TRYNEXT             THEN GO FURTHER\n* ------------------------------------------------------------------ *\n* ---    END OF MAIN LOOP FOR USERID'S.                          --- *\n* ------------------------------------------------------------------ *\nBADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'\n         LA    R0,L'MESPREND               WRITE MESSAGE THAT\n         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT\n         BAL   R9,MSG                            SO GOOD.\n*                                         GET HERE AT END OF USER RCDS\nENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?\n         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.\n         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.\n         LA    R0,60                           WRITE A BUNCH OF\n         BAL   R9,MSG                          LINES AT THE END\n         MVC   WK1ALL,MESALL                      WITH THE TOTAL COUNT\n         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE\n         ED    WK1ALL+46(10),TMSGCNT\n         MVC   LINE(L'WK1ALL),WK1ALL\n         LA    R0,L'WK1ALL\n         BAL   R9,MSG                       THEN\n         B     EOJ0                           GET THE HECK OUT\nNOTALL2  MVC   LINE,LINE-1                  CLEAR LINE\n         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP\n         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT\n         MVC   LINE(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN\n         LA    R0,L'WK1NOUSR                        DEALING WITH\n         BAL   R9,MSG\nZEROUT   B     EOJ0                WE'RE DONE.\n         SPACE 3\nWMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D\n         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE2                 EXPORT.DATA NOT ALLOC'D\n         LA    R0,L'MESSAGE2+7                  TO DDNAME BRODCAST.\n         BAL   R9,MSG\n         B     EOJ4\nWMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE3                 YOU HAVE TO ENTER THE\n         LA    R0,L'MESSAGE3+7                  USERID NAME.\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\nWMESS4   MVC   LINE,LINE-1                  WRITE MESSAGE THAT\n         MVC   LINET,MESSAGE4                 MSGS( AND SKIP( ARE\n         LA    R0,L'MESSAGE4+7                  INVALID IN USERID FIELD\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINET,MESSAGE5\n         LA    R0,L'MESSAGE5+7\n         BAL   R9,MSG\n         B     EOJ4                                          PARS 06/99\n* --------------------------------------------------------------- *\nEOJ0     LA    R5,0                SET CC = 0.\n         B     EOJ                 CONT.\nEOJ4     LA    R5,4                SET CC = 4.\n         B     EOJ                 CONT.\nEOJ8     LA    R5,8                SET CC = 8.\n         B     EOJ                 CONT\nEOJ      DS    0H                  BYE.\n         CLOSE (BRODCAST)\n         CLOSE (EXPORT)\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n* -- >  Write a message which Userid these messages are for. - below\nWRITTITL DS    0H\n         ST    R9,SAVER9O\n         MVC   LINE,LINE-1\n         MVC   MESSAG30+27(7),USERID\n         MVC   LINET,MESSAG30\n         LA    R0,L'MESSAG30+7\n         BAL   R9,MSG\n         L     R9,SAVER9O\n         BR    R9\n* -- >  Write a message which Userid these messages are for. - above\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nGETIDS   DS    0H\n         ST    R6,SAVER6C\n         ST    R9,SAVER9B\n         AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         LA    R6,7                LOAD REG FOR BCT LOOP\n         LR    R7,R1               INITIALIZE POINTER\n         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID\n         LA    R8,0                INITIALIZE CHARACTER COUNT\nCUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?\n         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.\n         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER\n         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER\n         CR    R8,R5               END OF COMMAND BUFFER ?\n         BNL   NOMORCUT            YES. GET OUT NOW.\n         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN\nNOMORCUT DS    0H\n         MVC   NEWID(8),BLANKS     CLEAR FIELD\n         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE\n         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID\n         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS\n         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH\n         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID\n         MVC   OLDID(8),BLANKS     CLEAR FIELD\n         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID\n         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED\n         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD\n         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH\n         DROP  R2\nLOOKKEYW DS    0H                  LOOK FOR KEYWORDS MSGS AND SKIP\n         LA    R7,1(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,1(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         MVC   MSGSWKL(5),BLANKS\n         MVC   MSGSWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    MSGSWKL(4),BLANKS   UPPERCASE FIELD\n         CLC   =C'MSGS(',MSGSWKL   MSGS KEYWORD THERE?\n         BE    MSGSCODD            YES. HANDLE IT.\n         MVC   SKIPWKL(5),BLANKS\n         MVC   SKIPWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA\n         OC    SKIPWKL(5),BLANKS   UPPERCASE FIELD\n         CLC   =C'SKIP(',SKIPWKL   SKIP KEYWORD THERE?\n         BE    SKIPCODD            YES. HANDLE IT.\n         B     LOOKKEYW            GO LOOP AND LOOK AT NEXT CHARACTER\nMSGSCODD DS    0H                  MSGS Coded\n         OI    MSGCFLG,X'01'       Show MSGS coded here\n         NI    SKPCFLG,X'FF'-X'01' Show SKIP not coded here\n         NI    MSGFLAG,X'FF'-X'01' Initialize MSGS error flag\n         NI    SKPFLAG,X'FF'-X'01' Initialize SKIP error flag\n         B     MSGSSKIP\nSKIPCODD DS    0H                  SKIP Coded\n         OI    SKPCFLG,X'01'       Show SKIP coded here\n         NI    MSGCFLG,X'FF'-X'01' Show MSGS not coded here\n         B     MSGSSKIP\nMSGSSKIP DS    0H                  Central Processing Station for both\n         TM    TITLFLG,X'01'       Has the title been printed yet?\n         BO    MSGSNOPT            Yes. Don't print it now.\n         BAL   R9,PRTITLE          No. Print it.\nMSGSNOPT DS    0H\n         OI    TITLFLG,X'01'       Show title has been printed.\n         TM    MSGCFLG,X'01'\n         BO    DOMSGS\n         TM    SKPCFLG,X'01'\n         BO    DOSKIP\n* -- > One of the two flags should be on here - if not, error - below\n         STM   R0,R1,SAVER0R1\n         MVC   LINE,LINE-1\n         MVC   LINE(43),=C'Error in Processing SKIP and MSGS Keywords.'\n         LA    R0,43\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     EOJ8\n* -- > One of the two flags should be on here - if not, error - above\nDOMSGS   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOMSGSL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOMSGSNO\n         CLI   0(R6),C')'\n         BE    DOMSGSNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOMSGSNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOMSGSNN            NOT NUMERIC\n         B     DOMSGSNU            NUMERIC\nDOMSGSNN DS    0H\n         MVI   0(R6),C'*'\n         NI    SKPFLAG,X'FF'-X'01'\n         OI    MSGFLAG,X'01'\n         OI    BDMFLAG,X'01'\nDOMSGSNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOMSGSNO\n         B     DOMSGSL\nDOMSGSNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    MSGFLAG,X'01'\n         BO    DOMSNNMR\nDOMSNRML DS    0H                     Good Message about MSGS number\n         EX    R6,PACKM\n         STM   R0,R1,SAVER0R1\n         OI    WORKM+7,X'0F'     SIGN NIBBLE\n         MVC   DATAMSGS+24(10),EDPAT\n         ED    DATAMSGS+24,WORKM+3\n         MVC   LINE,LINE-1                 WRITE TEST MESSAGE\n         LA    R0,L'DATAMSGS\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGENT\nDOMSNNMR DS    0H                     Bad Message about MSGS number\n         EX    R6,MVSTRNGM\n         STM   R0,R1,SAVER0R1\n         MVC   DATAMSGS+26(10),STRNGM\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATAMSGS),DATAMSGS\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATAMSGS+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOMSGERR\nDOMSGENT DS    0H\n         CVB   R0,WORKM\n         ST    R0,COUNTM\nDOMSGERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nDOSKIP   DS    0H\n         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER\n         LA    R8,5(,R8)           BUMP CHARACTER COUNTER\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   GETIDEND            YES. DON'T LOOK ANY MORE\n         LR    R6,R7               GET START OF NUMBER\nDOSKIPL  DS    0H\n         CLI   0(R6),C' '\n         BE    DOSKIPNO\n         CLI   0(R6),C')'\n         BE    DOSKIPNO\n* -- >                  Check if the \"numbers\" are numeric - below\n         CLI   0(R6),X'F0'         LESS THAN C'0'?\n         BL    DOSKIPNN            NOT NUMERIC\n         CLI   0(R6),X'F9'         MORE THAN C'9'?\n         BH    DOSKIPNN            NOT NUMERIC\n         B     DOSKIPNU            NUMERIC\nDOSKIPNN DS    0H\n         MVI   0(R6),C'*'\n         NI    MSGFLAG,X'FF'-X'01'\n         OI    SKPFLAG,X'01'\n         OI    BDSFLAG,X'01'\nDOSKIPNU DS    0H\n* -- >                  Check if the \"numbers\" are numeric - above\n         LA    R8,1(,R8)\n         LA    R6,1(,R6)\n         CR    R8,R5               END OF COMMAND BUFFER?\n         BNL   DOSKIPNO\n         B     DOSKIPL\nDOSKIPNO DS    0H\n         SR    R6,R7\n         BCTR  R6,0\n         TM    SKPFLAG,X'01'\n         BO    DOSKNNMR\nDOSKNRML DS    0H                    Good Message about SKIP number\n         EX    R6,PACKS\n         STM   R0,R1,SAVER0R1\n         OI    WORKS+7,X'0F'     SIGN NIBBLE\n         MVC   DATASKIP+24(10),EDPAT\n         ED    DATASKIP+24,WORKS+3\n         MVC   LINE,LINE-1\n         LA    R0,L'DATASKIP               WRITE TEST MESSAGE\n         MVC   LINE(L'DATASKIP),DATASKIP\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPENT\nDOSKNNMR DS    0H                    Bad Message about SKIP number\n         EX    R6,MVSTRNGS\n         STM   R0,R1,SAVER0R1\n         MVC   DATASKIP+26(10),STRNGS\n         MVC   LINE,LINE-1\n         MVC   LINE(L'DATASKIP),DATASKIP\n         MVC   LINE+39(12),=C'Non-Numeric '\n         LA    R0,L'DATASKIP+12\n         BAL   R9,MSG\n         LM    R0,R1,SAVER0R1\n         B     DOSKPERR\nDOSKPENT DS    0H\n         CVB   R0,WORKS\n         ST    R0,COUNTS\nDOSKPERR DS    0H\n         LA    R6,1(,R6)           RESTORE R6\n         AR    R7,R6               GET READY TO GO ON LOOKING\n         MVC   STRNGM,BLANKS       Blank out error strings for\n         MVC   STRNGS,BLANKS         further searches\n         B     LOOKKEYW\nGETIDEND DS    0H\n         L     R6,SAVER6C\n         L     R9,SAVER9B\n         BR    R9\nPACKM    PACK  WORKM,0(0,7)\nPACKS    PACK  WORKS,0(0,7)\nMVSTRNGM MVC   STRNGM(0),0(R7)\nMVSTRNGS MVC   STRNGS(0),0(R7)\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEADREAD DS    0H\n         ST    R9,SAVER9C\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOKZERO,MF=E       RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R3,MDLDECB+12       ADDRESS OF RECORD\n         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP\n         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD\n         DROP  R3\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9C\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      DS    0H\n         ST    R9,SAVER9D\n         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         L     R9,SAVER9D\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nEXPROUT  DS    0H\n         ST    R9,SAVER9N\n         ST    R3,SAVER3A\n         L     R3,OUTLSTOR\n         LA    R3,2(,R3)\n         ST    R3,OUTLSTOR\n         L     R3,SAVER3A\n         MVC   OUTLENG(2),OUTLSTOR+2\n         MVI   OUTSTCH1,C'{'\n         MVC   OUTLIT(8),=C'BDMSEND '\n         MVC   OUTUSER(8),TRYID\n         ST    R3,SAVER3A\n         LA    R3,OUTMESSG\n         A     R3,MSGLNGXX\n         MVI   0(R3),C'}'\n         L     R3,SAVER3A\n         PUT   EXPORT,OUTLINE\n         L     R9,SAVER9N\n         BR    R9                  RETURN TO CALLER\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H\n         ST    R9,SAVER9A\n         MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         L     R9,SAVER9A\n         BR    R9                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nINITCON  DS    0H\n         ST    R9,SAVER9E\n         MVI   LINE-1,C' '         INITIALIZE BLANK\n         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE\n         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER\n         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   SMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   MMSGCNT(5),PACKZER5 INITIALIZE COUNTER\n         MVC   WK1TOTAL,MESTOTAL    INIT AREAS\n         MVC   WK1NOUSR,MESNOUSR\n         MVC   WK1ALL,MESALL\n         MVC   STRNGM(10),BLANKS\n         MVC   STRNGS(10),BLANKS\n         MVI   ALLFLAG,X'00'\n         MVI   TITLFLG,X'00'       Title has not yet been printed.\n         MVI   BDMFLAG,X'00'\n         MVI   BDSFLAG,X'00'\n         MVI   MSGFLAG,X'00'\n         MVI   SKPFLAG,X'00'\n         MVI   MSGCFLG,X'00'\n         MVI   SKPCFLG,X'00'\n         MVC   WORKM,DUBLZERO\n         MVC   WORKS,DUBLZERO\n         MVC   COUNTM,FULLZERO\n         MVC   COUNTS,FULLZERO\n         MVC   DATAMSGS,TESTMSGS\n         MVC   DATASKIP,TESTSKIP\n         MVC   WKLBLNK(2),BLANKS\n         MVC   MSGSWKL(5),BLANKS\n         MVC   SKIPWKL(5),BLANKS\n         MVI   SKLSFLAG,X'00'\n         MVC   OUTLENG,=H'0'\n         MVC   OUTZERO,=H'0'\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         XC    OUTLSTOR,OUTLSTOR\n         L     R9,SAVER9E\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  DS    0H\n         ST    R9,SAVER9F\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         L     R9,SAVER9F\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R4\nCPPLPTRS DS    0H\n         ST    R9,SAVER9G\n         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         L     R9,SAVER9G\n         BR    R9\n         DROP  R4\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*              TEST IF USER HAS PSCB AUTHORIZATION.               *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING PSCB,R2\nCHEKAUTH DS    0H\n         ST    R9,SAVER9H\n         TM    PSCBATR1,PSCBACCT   ACCT USER?\n         BO    CONT0               YES.  CONTINUE.\n         TM    PSCBATR1,PSCBCTRL   OPER USER?\n         BZ    EOJ4                NO.  GET OUT.\n         DROP  R2\n         L     R9,SAVER9H\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *\n*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nREFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #\n         ST    R9,SAVER9I\n         READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY                    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               BLOCKNO,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'01'         USERID RECORD?\n         BNE   BADEND\n         LA    R2,0\n         LA    R3,0\n         IC    R3,MYUSSLOT         RESET SLOT NUMBER\n         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY\n         M     R2,=F'13'\n         L     R5,MDLDECB+12       ADDRESS OF RECORD\n         LA    R2,0(R3,R5)         FIND OUR SLOT\n         LR    R3,R2               PUT IN R3 TO SET UP RETRY\n* -- >\n         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY\n         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA\n         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER\n* -                               Diagnostic print - below\n*        MVC   LINE,LINE-1\n*        HEX   LINET,4,SAVER6A\n*        LA    R0,45\n*        BAL   R9,MSG\n* -                               Diagnostic print - above\n         S     R6,SAVER6A          RECALCULATE BCT REGISTER\n* -- >\n         MVC   UMSGCNT(3),PACKZERO ZERO USERID MESSAGE COUNT\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9I\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *\n*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *\n*\n*        R5 AND R7 MUST BE SAVED BEFORE ENTERING THIS ROUTINE\n*        AND THEY MUST BE RESTORED RIGHT AFTER LEAVING THIS ROUTINE.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITLOOP DS    0H\n         ST    R9,SAVER9J\n         BAL   R9,WRITTITL\n         NI    SKLSFLAG,X'FF'-X'07'   TURN OFF ALL FLAGS\n         XR    R5,R5               CLEAR R5 FOR REUSE IN THIS ROUTINE\n         XR    R7,R7               CLEAR R7 FOR REUSE IN THIS ROUTINE\n         CLC   COUNTS,=F'0'        HAVE WE CODED A SKIP COUNT?\n         BE    WRLOOPTM\n         OI    SKLSFLAG,X'01'      SHOW WE'RE SKIPPING\n         L     R5,COUNTS\nWRLOOPTM DS    0H\n         CLC   COUNTM,=F'0'\n         BE    WRLOOP\n         OI    SKLSFLAG,X'02'      SHOW WE'RE LIMITING MESSAGES\n         L     R7,COUNTM\n         TM    SKLSFLAG,X'01'      ARE WE ALSO SKIPPING?\n         BZ    WRLOOP              NO. R7 IS FINE. OTHERWISE,\n         LA    R7,1(,R7)           THEN COMPENSATE BCT REGISTER\nWRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X\n               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X\n               BRODCAST,           DCB TO USE FOR READ                 X\n               'S',                DO DYNAMIC BUFFERING                X\n               'S',                GET LENGTH FROM DCB                 X\n               'S',                KEY + DATA ARE READ SEQUENTIALLY    X\n               MESSRBA,MF=E        RBA OF THE RECORD\n         SPACE\n         CHECK MDLDECB\n         L     R2,MDLDECB+20       ADDRESS OF KEY\n         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?\n         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE\n         L     R2,MDLDECB+12       ADDRESS OF RECORD\n         USING USMSG,R2\n         XR    R0,R0\n         IC    R0,USMLNG           LENGTH FOR PUTLINE\n         LR    R6,R0\n         ST    R6,MSGLNGXX         Store true Message Length\n         A     R0,=F'28'\n         ST    R0,OUTLSTOR\n*        STH   R0,OUTLENG\n         MVI   OUTDATA,X'40'\n         MVC   OUTDATA+1(250),OUTDATA    CLEAR AREA\n         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE\n         EX    R6,MOVEMSG\n         EX    R6,EXPTMSG\nWRLSKIP1 DS    0H\n         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\n         TM    SKLSFLAG,X'04'      LIMITING-AND HAVE PASSED THE LIMIT?\n         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.\nWRLLIMS1 DS    0H\n         TM    SKLSFLAG,X'02'      ARE WE LIMITING MESSAGES?\n         BZ    WRLLIMS2            NO. THEN PRINT THEM.\n         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?\n         BO    WRLLIMS3            YES, DON'T PRINT THIS MESSAGE\nWRLLIMS2 DS    0H\n         BAL   R9,MSG              WRITE MESSAGE OUT\n         BAL   R9,EXPROUT          WRITE EXPORT RECORD TOO\nWRLLIMS3 DS    0H\nWRLSKIP2 DS    0H\n         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT\n         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT\n         CLC   USMNEXT(3),ZEROS\n         BE    WRITLEND\n         MVC   MESSRBA(3),USMNEXT\n         DROP  R2\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\nWRLSKIP3 DS    0H\n         TM    SKLSFLAG,X'01'      SKIPPING, AND NOT FINISHED?\n         BZ    WRLSKIP4            FINISHED SKIPPING. NO BCT.\n         BCT   R5,WRLOOP\n         NI    SKLSFLAG,X'FF'-X'01'\nWRLSKIP4 DS    0H\n         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED WRITING?\n         BO    WRLLIMS4            YEAH. BYPASS BCT.\n         BCT   R7,WRLOOP\n         OI    SKLSFLAG,X'04'      SHOW THAT YOU'VE FINISHED WRITING\nWRLLIMS4 DS    0H\n         B     WRLOOP\nWRITLEND DS    0H\n         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X\n               D,                  USED BDAM READ                      X\n               BRODCAST            DCB FOR PROCESS DATA SET\n         L     R9,SAVER9J\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        FINISH WRITING END MESSAGES FOR USERID.                  *\n*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *\n*        JUST GET OUT.                                            *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nWRITEND  DS    0H\n         ST    R9,SAVER9K\n         MVC   LINE,LINE-1\n         MVC   WK1TOTAL,MESTOTAL               WRITE\n         MVC   WK1TOTAL+5(7),TRYID               TOTALS\n         MVC   WK1TOTAL+18(6),MASK6                LINE\n         ED    WK1TOTAL+18(6),UMSGCNT\n         MVC   LINE(L'WK1TOTAL),WK1TOTAL\n         LA    R0,L'WK1TOTAL\n         BAL   R9,MSG\n         MVC   LINE,LINE-1                     WRITE\n         MVC   LINE,MESSEND                      END OF USER LINE\n         LA    R0,L'MESSEND\n         BAL   R9,MSG\n         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS\n         BNE   NOTALL4                         JUST CLEAR LINE AND OUT\n         MVC   LINE,LINE-1\n         BAL   R9,MSG                          OTHERWISE SEPARATE\n         MVI   LINE-1,C'*'                     USERS WITH A LINE\n         MVC   LINE(55),LINE-1                 OF ASTERISKS.\n         BAL   R9,MSG\nNOTALL4  MVI   LINE-1,X'40'\n         MVC   LINE,LINE-1\n         L     R9,SAVER9K\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R4\nSETIOPL  DS    0H\n         ST    R9,SAVER9L\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R4\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         L     R9,SAVER9L\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nPRTITLE  DS    0H\n         ST    R9,SAVER9M\n         MVC   LINE,LINE-1                  WRITE MESSAGE WITH\n         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS\n         LA    R0,MSGTLEN                       THAT WERE ZEROED.\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         MVC   LINE(MSGCLEN),MESSAGEC\n         LA    R0,MSGCLEN\n         BAL   R9,MSG\n         MVC   LINE,LINE-1\n         LA    R0,20\n         BAL   R9,MSG\n         L     R9,SAVER9M\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nPACKZERO DC    PL3'0'\nPACKZER5 DC    PL5'0'\nDUBLZERO DC    D'0'\nFULLZERO DC    F'0'\nTESTMSGS DC    C'Limit  of MSGS to List                '\nTESTSKIP DC    C'Number of MSGS to Skip                '\nEDPAT    DC    X'40202020202020202120'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED\n         USING USMSG,R2\nMOVEMSG  MVC   LINE(*-*),USMTEXT         EXECUTED\nEXPTMSG  MVC   OUTMESSG(*-*),USMTEXT     EXECUTED\n         DROP  R2\n* - - - - - - - - - - - - - - - - - - - - - - - - *\nMESSBLNK DS    0CL133\nBLANKS   DC    CL10'          '    10 BLANKS\n         DC    CL125' '\nBLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER\nZEROS    DS    0CL8\nZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING\n         DC    X'0000'\nMESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '\nMSGTLEN  EQU   *-MESSAGET\nMESSAGEC DC    C'&COPYRGT &COPYRSV'\nMSGCLEN  EQU   *-MESSAGEC\nMESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'\nMESSAGE2 DC    C'BAD OPEN - ALLOC F(EXPORT) DA(EXPORT.DATA) SPACE(5 45)X\n                TRACKS RECFM(V B) LRECL(255) UNIT(SYSDA) REUSE'\nMESSAGE3 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'\nMESSAGE4 DC    C' A Userid cannot begin with MSGS( or SKIP( .   '\nMESSAGE5 DC    C' Please use MSGS( or SKIP( after the Userid.   '\nMESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'\nMESSAG20 DC    CL58'   &PGMNAME &PKGTITL &VERTITL &VERSNUM      '\nMESSAG21 DC    CL58'   -------  --------- ------  -------   ----- '\nMESSAG22 DC    CL58'&COPYRGT      '\nMESSAG30 DC    CL58' /*  Messages for USERID:                */ '\nMESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'\nMESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '\nMESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'\nMESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'\nMASK6    DC    XL6'402020202120'\nMASK10   DC    XL10'40202020202020202120'\nBPARM    DC    AL2(BPARME-BPARM,0),C'NON'\nBPARME   EQU   *\n         SPACE 3\nBRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X\n               BLKSIZE=129,        LENGTH OF FILES BLOCK               X\n               DSORG=DA,           IS DIRECT ACCESS FILE               X\n               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X\n               OPTCD=R,            3 BYTE RBA WILL BE USED             X\n               RECFM=F,            FIXED LENGTH                        X\n               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X\n               KEYLEN=1,           SIZE OF KEY                         X\n               BUFL=130            KEYLEN + BLKSIZE\n         SPACE 3\nEXPORT   DCB   DSORG=PS,MACRF=PM,DDNAME=EXPORT,RECFM=VB,LRECL=255       00400\n         SPACE 3\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\nWORKM    DS    D\nWORKS    DS    D\nSAVER0R1 DS    D\nSAVER3A  DS    F                   SAVE BAL REGISTER\nSAVER5A  DS    F\nSAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN\nSAVER7A  DS    F\nSAVER7B  DS    F\nSAVER9A  DS    F                   SAVE BAL REGISTER\nSAVER9B  DS    F                   SAVE BAL REGISTER\nSAVER9C  DS    F                   SAVE BAL REGISTER\nSAVER9D  DS    F                   SAVE BAL REGISTER\nSAVER9E  DS    F                   SAVE BAL REGISTER\nSAVER9F  DS    F                   SAVE BAL REGISTER\nSAVER9G  DS    F                   SAVE BAL REGISTER\nSAVER9H  DS    F                   SAVE BAL REGISTER\nSAVER9I  DS    F                   SAVE BAL REGISTER\nSAVER9J  DS    F                   SAVE BAL REGISTER\nSAVER9K  DS    F                   SAVE BAL REGISTER\nSAVER9L  DS    F                   SAVE BAL REGISTER\nSAVER9M  DS    F                   SAVE BAL REGISTER\nSAVER9N  DS    F                   SAVE BAL REGISTER\nSAVER9O  DS    F                   SAVE BAL REGISTER\nSAVER9P  DS    F                   SAVE BAL REGISTER\nSAVER9Q  DS    F                   SAVE BAL REGISTER\nSAVER9R  DS    F                   SAVE BAL REGISTER\nSAVER9S  DS    F                   SAVE BAL REGISTER\nCOUNTM   DS    F\nCOUNTS   DS    F\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\nSKLSFLAG DS    X\n*              X'01' MEANS WE ARE SKIPPING RECORDS\n*              X'02' MEANS WE ARE LIMITING RECORDS DISPLAYED\n*              X'04' MEANS WE HAVE PASSED THE DISPLAY LIMIT\nWKLBLNK  DS    CL2\nMSGSWKL  DS    CL5                 THIS ONE FIRST FOR INIT TO BLANKS\nSKIPWKL  DS    CL5\nDATAMSGS DS    CL38                TEST MSGS AREA\n         DC    CL45' '     PADDING\nDATASKIP DS    CL38                TEST SKIP AREA\n         DC    CL45' '     PADDING\nNEWID    DC    C'        '         STORE PARM USERID HERE\n         DS    CL8' '              PADDING\nNEWIDU   DC    C'        '         UPPERCASED USERID PARM\nADDADR   DS    0CL12\nUMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER\nTMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED\nSMSGCNT  DC    PL5'0'              COUNT OF SKIPPED MESSAGES\nMMSGCNT  DC    PL5'0'              COUNT OF LISTED MESSAGES\nNEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS\nOLDID    DC    C'        '         STORE OLD USERID HERE\n* ---\nSAVUSLOT DS    0CL13\nSAVEUSRI DS    CL7                 STORE FOUND USERID HERE\nSAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID\n* ---\nSVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nFINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID\nWRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE\nCMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN\nOLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE\nNEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE\nBLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ\nLASTRBA  DC    X'000000'           STORE CURRENT RBA\nSAVERBA  DC    X'000000'           STORE RBA FOR LATER READ\nMYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER\nNMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE\nMESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE\nMYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD\nNWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER\nNWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD\nFNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND\nFNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD\nUSERID   DS    0CL8                STORE FOUND USERID HERE\nUSERIDI  DS    CL7                 STORE FOUND USERID HERE\nUSERIDF  DS    CL1                 8TH CHARACTER\nFINDID   DS    0CL8                USERID NAME TO BE FOUND\nFINDIDI  DS    CL7                 FIRST 7 CHARACTERS\nFINDIDF  DS    CL1                 8TH CHARACTER\nTRYID    DS    0CL8                STORE TEST USERID HERE\nTRYIDI   DS    CL7                 STORE TEST USERID HERE\nTRYIDF   DS    CL1                 8TH CHARACTER\nSCANFLAG DC    X'00'               FLAG FOR USERID SCANS\nCOMPFLAG DC    X'00'               FLAG FOR USERID SCANS\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL133\nLINET    EQU   LINE+7\n         DS    0F\nRDWR     READ  MDLDECB,DI,MF=L\nRDWREND  DS    0F\nRDWRLEN  EQU   *-RDWR\nSTOR0001 DS    2F\nSTOR1415 DS    2F\nWK1TOTAL DC    C'                                                '\nWK1ALL DC C'                                                          '\nWK1NOUSR DC    C'                                              '\nALLFLAG  DS    X\nTITLFLG  DS    X\nMSGFLAG  DS    X\nSKPFLAG  DS    X\nBDMFLAG  DS    X\nBDSFLAG  DS    X\nMSGCFLG  DS    X\nSKPCFLG  DS    X\nSTRNGM   DS    CL10\nSTRNGS   DS    CL10\n         DC    CL16' '\nOUTENCH1 DC    CL1'}'\n         DS    F                     ALIGNMENT MUST BE PRESERVED\nOUTLINE  DS    0CL255\nOUTLENG  DC    H'0'\nOUTZERO  DC    H'0'\nOUTDATA  DS    0CL251\nOUTBLANK DC    CL8' '\nOUTLIT   DC    CL8' '\nOUTUSER  DC    CL8' '\nOUTSTCH1 DC    CL1'{'\nOUTMESSG DS    CL226\n         DC    C'   '\nOUTLSTOR DS    F\nMSGLNGXX DS    F\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         IKJZT301 DSECT=YES\n         IKJZT304 DSECT=YES\n         IKJZT305 DSECT=YES\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BPUT": {"ttr": 16133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00S\\x00\\x891\\x8f\\x01\\x055\\x0f\\x11\\x12\\x00\\x8a\\x00\\x8a\\x00\\x10\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "1989-11-14T00:00:00", "modifydate": "2005-12-16T11:12:53", "lines": 138, "newlines": 138, "modlines": 16, "user": "SBGOLOB"}, "text": "         MACRO\n&LABEL   BPUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    BDMPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE BDMPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR BDMPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) BPUT  'LITERAL'\n.*\n.*      2) BPUT  (R3),80\n.*\n.*      3) BPUT  LABEL\n.*\n.*      4) BPUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(BDMPUTL)          EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INCLUDE": {"ttr": 16136, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00E\\x01\\x04\\x18o\\x01\\x15(\\x1f\\x13\\x13\\x00\\x02\\x00\\x01\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2004-07-04T00:00:00", "modifydate": "2015-10-08T13:13:45", "lines": 2, "newlines": 1, "modlines": 0, "user": "SBGOLOB"}, "text": "   INCLUDE OBJECT\n   SETSSI BD140001\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INCLUDEA": {"ttr": 16138, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00S\\x01\\x04\\x18o\\x01\\x15(\\x1f\\x13\\x13\\x00\\x03\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2004-07-04T00:00:00", "modifydate": "2015-10-08T13:13:53", "lines": 3, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "   INCLUDE OBJECT\n   SETCODE AC(1)\n   SETSSI BD140001\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLLIB": {"ttr": 16140, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00G\\x01\\x16&\\x9f\\x01\\x16&\\x9f\\x16\\x01\\x02\\xb7\\x02\\xb7\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2016-09-25T00:00:00", "modifydate": "2016-09-25T16:01:47", "lines": 695, "newlines": 695, "modlines": 0, "user": "SBGOLOB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "JOBCARD": {"ttr": 16393, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00\\x18\\x01\\x062\\x8f\\x01\\x062\\x8f\\x107\\x00\\x05\\x00\\x03\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2006-11-24T00:00:00", "modifydate": "2006-11-24T10:37:18", "lines": 5, "newlines": 3, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBB JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*   BRODMSTR BATCH EXECUTION\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADLIB": {"ttr": 16395, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00\\x11\\x01\\x16&\\x9f\\x01\\x16&\\x9f\\x156\\n\\x06\\n\\x06\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2016-09-25T00:00:00", "modifydate": "2016-09-25T15:36:11", "lines": 2566, "newlines": 2566, "modlines": 0, "user": "SBGOLOB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT937/FILE937.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT937", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}