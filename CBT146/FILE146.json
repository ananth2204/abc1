{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011335000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2645370, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE146.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2645370, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2645370, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE146.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00*\\x06'", "DS1TRBAL": "b'p\\xc2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x08\\x00\\x0e\\x01\\x0b\\x00\\x0b\\x00+'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x00\\x00\\x00\\x00\\x893O\\x00\\x893O\\x15!\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe3\\xc1\\xf1\\xf5\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "00.00", "flags": 0, "createdate": "1989-11-30T00:00:00", "modifydate": "1989-11-30T15:21:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "TA15500"}, "text": "I ADDED 3 MEMBERS TO THIS PDS WHICH WERE ORIGINALLY SEPARATE FILES\nON THE TAPE I RECEIVED FROM BILL SMITH OF CHARLES SCHWAB. IT SAVES\nLOTS OF SPACE TO INCLUDE THIS HERE IN THIS FORMAT. THE FILES WERE\nORIGINALLY IEBCOPY FORMAT AND I CONVERTED THEM TO IEBUPDTE SYSIN\nFORMAT FILES AS A MEMBER IN THIS PDS\n          ARNOLD CASINGHINO\n          11/30/89\n\n FILE 001 IS NOW MEMBER $$FILE01 WHICH WAS KERMIT V40 CNTL FILE\n FILE 002 IS NOW MEMBER $$FILE02 WHICH WAS KERMIT V40 HELP FILE\n FILE 004 IS NOW MEMBER $$FILE04 WHICH WAS KERMIT V40 OBJECT FILE\n\nTHIS PDS WAS ORIGINALLY FILE 5 ON THE TAPE I RECEIVED AND IS THE\nKERMIT V40 SOURCE FILE\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$FILE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x00\\x00\\x00\\x00\\x893O\\x00\\x893O\\x11#\\x00\\xa7\\x00\\xa7\\x00\\x00\\xe3\\xc1\\xf1\\xf5\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "00.00", "flags": 0, "createdate": "1989-11-30T00:00:00", "modifydate": "1989-11-30T11:23:00", "lines": 167, "newlines": 167, "modlines": 0, "user": "TA15500"}, "text": "./       ADD   NAME=#HELP\n//SPGMMG01 JOB (0001,SYS1),'SF3057408--GRIFFITH',\n// MSGCLASS=T,NOTIFY=SPGMMG,CLASS=M,USER=SPGMMG,\n// MSGLEVEL=(1,1),TIME=1440,REGION=4096K\n/*ROUTE XEQ CS02\n/*ROUTE PRINT CS02\n//JSTEP001 EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=SYS4.KERMIT.V40.SOURCE,DISP=SHR\n//SYSUT2   DD DSN=SYS4.KERMIT.V40.HELP,DISP=SHR\n//SYSIN    DD *\n C I=SYSUT1,O=SYSUT2\n S M=((IKTKERHL,KERMIT,R))\n S M=((IKTGUPHL,GUPI,R))\n/*\n./       ADD   NAME=#INSTALL\n//SPGMMG01 JOB (0001,SYS1),'SF3057408--GRIFFITH',\n// MSGCLASS=T,NOTIFY=SPGMMG,CLASS=M,USER=SPGMMG,\n// MSGLEVEL=(1,1),TIME=1440,REGION=4096K\n/*ROUTE XEQ CS02\n/*ROUTE PRINT CS02\n//JOBLIB   DD DSN=SYS4.KERMIT.V40.LOADLIB,DISP=SHR\n//*\n//* INPUT:  SYS4.KERMIT.V40.SOURCE(IK****)\n//* INPUT:  SYS4.KERMIT.V40.SOURCE(IKTKERUP)\n//* OUTPUT: SYS4.KERMIT.V40.LOADLIB (PRE-ALLOCATED)\n//* OUTPUT: SYS4.KERMIT.V40.OBJECT (PRE-ALLOCATED)\n//*\n//KASM     PROC PRM=\n//ASM      EXEC PGM=IEV90,\n//            PARM='NORLD,NODECK,OBJECT,&PRM,XREF(SHORT)'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=23680\n//         DD DSN=SYS4.KERMIT.V40.SOURCE,DISP=SHR\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(4,4))\n//SYSLIN   DD DSN=SYS4.KERMIT.V40.OBJECT(&MEMBER),DISP=(OLD,PASS)\n//SYSIN    DD DSN=SYS4.KERMIT.V40.SOURCE(&SOURCE),DISP=SHR\n//         PEND\n//KLINK    PROC\n//LNK      EXEC PGM=IEWL,\n//            PARM='LIST,LET'\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(4,4))\n//SYSLMOD  DD DSN=SYS4.KERMIT.V40.LOADLIB,DISP=SHR\n//         PEND\n/*\n//*\n//* ---------------- CUT HERE AFTER 1ST SUBMISSION ----------------\n//*        CREATE EXIT ROUTINE FOR IEBGENER\n//*\n//CNVASM   EXEC KASM,SOURCE=#DUMMY,MEMBER=DUMMY\n//SYSLIN   DD DSN=&&UPDC,DISP=(,PASS),\n//            UNIT=VIO,SPACE=(CYL,(4,4)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//SYSIN    DD *\nUPDCNV0  START\n         SAVE  (14,12),,*\n         USING UPDCNV0,15\n         LM    1,2,0(1)      GET PARMS\n         LH    3,82(2)       LRECL\n         LH    4,62(2)       BLKSI\n         AR    4,1           END OF BUFFER\n         TM    36(2),X'40'   RECFM=V?\n         BO    QUIT          YES, ERROR\nCVTLP    CLC   =C'*COPY ',0(1)\n         BNE   NOTCOPY\n         CLC   5(48,1),6(1)\n         BNE   NOTCOPY\n         MVC   0(12,1),=C'./ ADD NAME='\n         MVC   12(8,1),54(1) COPY NAME INTO ADD STMT\nNOTCOPY  AR    1,3           SPACE OVER RECORD\n         CR    1,4\n         BL    CVTLP         FINISH BLOCK\n         SR    15,15\nQUIT     RETURN (1,12),RC=(15)\n         END   UPDCNV0\n/*\n//*\n//*   LINK INTO JOB LIBRARY\n//*\n//CNVLNK   EXEC KLINK\n//SYSLIN   DD DSN=&&UPDC,DISP=(OLD,DELETE)\n//         DD *\n NAME UPDCNV0(R)\n/*\n//*\n//*   ASSEMBLE DYNALC\n//*\n//DYNASM   EXEC KASM,SOURCE=IKTDYN,MEMBER=DYNALC\n/*\n//*\n//*   CREATE SEQUENTIAL FILE FOR GUPI MACRO LIBRARY\n//*\n//GUPCPY   EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=SYS4.KERMIT.V40.SOURCE(IK0MAC),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IKTMAC),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IKTGUP),DISP=SHR\n//SYSUT2   DD DSN=&&GUP,DISP=(,PASS),\n//            UNIT=VIO,SPACE=(CYL,(4,4)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4080)\n//SYSIN    DD *\n GENERATE\n EXITS DATA=UPDCNV0\n/*\n//*\n//*   CREATE GUPI MACRO LIBRARY\n//*\n//GUPLIB   EXEC PGM=IEBUPDTE,\n//            PARM=NEW\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DSN=&&GUPMAC,DISP=(,PASS),UNIT=TSODA,\n//            SPACE=(CYL,(4,4,14),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4080)\n//SYSIN    DD DSN=&&GUP,DISP=(OLD,PASS)\n/*\n//*\n//*   ASSEMBLE AND LINK GUPI\n//*\n//GUPASM   EXEC KASM,SOURCE=IK0GUP,MEMBER=GUPI\n//SYSLIB   DD\n//         DD\n//         DD DSN=&&GUPMAC,DISP=(OLD,PASS)\n/*\n//GUPLNK   EXEC KLINK\n//SYSLIN   DD DSN=SYS4.KERMIT.V40.OBJECT(GUPI),DISP=(OLD,PASS)\n//         DD DSN=SYS4.KERMIT.V40.OBJECT(DYNALC),DISP=(OLD,PASS)\n//         DD *\n NAME GUPI(R)\n/*\n//*\n//* ---------------------- END OF CUT ------------------------\n//*   CREATE UPDATED KERMIT ...\n//*\n//KRMUPD   EXEC PGM=GUPI\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=SYS4.KERMIT.V40.SOURCE(IK0DOC),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0MAC),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IKTMAC),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0DEF),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0MAI),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0COM),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0CMD),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IKTUTL),DISP=SHR\n//         DD DSN=SYS4.KERMIT.V40.SOURCE(IK0PRO),DISP=SHR\n//SYSUT2   DD DSN=&&UPDSRC,DISP=(,PASS),SPACE=(CYL,(4,4)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4080),UNIT=TSODA\n//SYSIN    DD DSN=SYS4.KERMIT.V40.SOURCE(IKTKERUP),DISP=SHR\n/*\n//KRMASM   EXEC KASM,SOURCE=#DUMMY,MEMBER=KERMIT\n//SYSIN    DD DSN=&&UPDSRC,DISP=(OLD,PASS)\n/*\n//KRMLNK   EXEC KLINK\n//SYSLIN   DD DSN=SYS4.KERMIT.V40.OBJECT(KERMIT),DISP=(OLD,PASS)\n//         DD DSN=SYS4.KERMIT.V40.OBJECT(DYNALC),DISP=(OLD,PASS)\n//         DD *\n ALIAS KERM40\n NAME KERMIT(R)\n/*\n//*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ*EOJ\n//\n./       ADD   NAME=#JOBCARD\n//SPGMMG01 JOB (0001,SYS1),'SF3057408--GRIFFITH',\n// MSGCLASS=T,NOTIFY=SPGMMG,CLASS=M,USER=SPGMMG,\n// MSGLEVEL=(1,1),TIME=1440,REGION=4096K\n/*ROUTE XEQ CS01\n/*ROUTE PRINT CS01\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$FILE02": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x00\\x00\\x00\\x00\\x893O\\x00\\x893O\\x11$\\x03)\\x03)\\x00\\x00\\xe3\\xc1\\xf1\\xf5\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "00.00", "flags": 0, "createdate": "1989-11-30T00:00:00", "modifydate": "1989-11-30T11:24:00", "lines": 809, "newlines": 809, "modlines": 0, "user": "TA15500"}, "text": "./       ADD   NAME=GUPI\n)F FUNCTION -\n\n  The GUPI command invokes GUPI-TSO, an assembly language program\nwhich performs updates on line-numbered source files using a control\nfile syntax similar to that of IBM's UPDATE program for CMS.  The\nmain difference is that GUPI performs multiple updates in a single\ninvocation by reading all the updates from a single, sequential, input\ncontrol file.\n\n)X SYNTAX -\n         GUPI 'source-dsn' 'update-dsn' 'output-dsn' MARK('mark')\n                   STOR/NOSTOR  SEQ8/NOSEQ8\n   Required - 'source-dsn', 'update-dsn', 'output-dsn'\n   Defaults - STOR, SEQ8\n\n)O OPERANDS -\n))SOURCE-DSN - fully or partially qualified DSN of base file.\n))UPDATE-DSN - fully or partially qualified DSN of update control file.\n))OUTPUT-DSN - fully or partially qualified DSN of output file.\n))STOR - specifies that the update is to be performed in memory.\n))NOSTOR - specifies that the update is to performed disk-to-disk.\n))SEQ8 - specifies that the sequence numbers occupy columns 73-80.\n))NOSEQ8 - specifies that the sequence numbers occupy columns 76-80.\n))MARK - gives the 3-byte string to fill columns 73-75 if NOSEQ8.\n\n./       ADD   NAME=KERMIT\n)F FUNCTION -\n\n  The KERMIT command invokes Kermit-TSO, an assembly language program\nwhich implements the Kermit file transfer protocol on IBM System/370\nand XA mainframe computers and compatibles running the MVS (Multiple\nVirtual Storage) operating system with the TSO (Time Sharing Option)\nsubsystem.  Kermit-TSO supports file transfer in both line-mode and\nfull-screen operation.\n\n  Line-mode supports asynchronous  half-duplex ASCII communications\nthrough 3705/3725 or equivalent front ends, while full-screen supports\nasynchronous full-duplex ASCII communications through the IBM Series/1\nrunning the Yale ASCII Communications System (or equivalent) or various\nother converters with graphics throughput option. See the SET CONTROLLER\nsubcommand for further details.\n\n)X SYNTAX -\n         KERMIT\n\n   Required - None\n   Defaults - None\n   Note     - The Kermit \"?\" help feature is available when entering\n              Kermit-TSO subcommands.  A subcommand followed by a space\n              and a question mark and entered with a carriage return\n              will display a brief description of what is expected or\n              possible at that point.\n\n            - When connecting in line-mode, several flags must first be\n              set on the local Kermit.  The following are the defaults\n              and other possibilities for those values:\n\n              Baud             whatever the site supports\n              Data bits        7\n              Flow-control     None\n              Handshake        XON \u00a6 None\n              Local-echo       on (half-duplex)\n              Parity           even \u00a6 mark \u00a6 odd\n\n            - When connecting in full-screen, several flags must first\n              be set on the local Kermit.  The following are the\n              defaults and other possibilities for those values:\n\n              Baud             whatever the site supports\n              Data bits        7 \u00a6 8\n              Flow-control     XON/XOFF \u00a6 None\n              Handshake        None\n              Local-echo       off (full-duplex)\n              Parity           even \u00a6 mark \u00a6 odd \u00a6 none\n\n            - When sending files to Kermit-TSO, any record longer than\n              the logical record length (LRECL) will be truncated to\n              that value.  If the record format is fixed (RECFM=F), any\n              shorter records will be padded to LRECL.  If the record\n              format is variable or undefined (RECFM=V or RECFM=U), the\n              block length can be as high as 32760, provided the disk\n              device tracksize is not exceeded.\n\n            - When sending files to Kermit-TSO, the local Kermit must\n              use a carriage return as the end-of-line (EOL) character.\n\n            - This version of Kermit-TSO does not support timeouts for\n              other than line-mode terminals.  Therefore, the user\n              should press the carriage return key on the microcomputer\n              after long periods of update inactivity during file\n              transfer, or rely on the timeout facility of the local\n              Kermit, if supported, to avoid indefinite delays.\n\n)O OPERANDS -\n         None\n\n)S SUBCOMMANDS -\n\n         BYE       - logs out other Kermit server.\n         CWd       - establishes a new working directory.\n         DIRectory - displays all or part of the disk directory.\n         ECho      - a line back to the user.\n         END       - a Kermit-TSO session\n         EXit      - from Kermit-370.\n         FINish    - other Kermit server.\n         Get       - file(s) from a Kermit server.\n         GIve      - saves changes to a translate table.\n         Help      - about Kermit-370.\n         HOst      - executes a system command.\n         KErmit    - executes a Kermit subcommand.\n         Quit      - from Kermit-370.\n         RECeive   - file(s) from other Kermit.\n         SENd      - file(s) to other Kermit.\n         SERver    - mode of remote operation.\n         SET       - various parameters.\n         SHow      - various parameters.\n         STatus    - inquiry.\n         TAke      - subcommands from a file.\n         TDump     - the contents of a chosen table.\n         TSo       - executes a system command.\n         TYPE      - a file.\n         XECHO     - echoes a line (transparently).\n         XTYPE     - displays a file (transparently).\n\n=BYE\n)F FUNCTION -\n           Log out a Kermit server on another system.\n\n)X SYNTAX -\n         BYE\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=CWD=CW\n)F FUNCTION -\n           Set a new prefix for dataset names used by Kermit.\n\n)X SYNTAX -\n         CWD 'string'\n               or\n         CWD 'pds-name()'\n\n   Required - None\n   Defaults - None\n   Alias    - SET PREFIX\n\n)O OPERANDS -\n))STRING   - Partially qualified DSN.\n))PDS-NAME - Fully qualified DSN of a PDS.  File names are assumed to be\n             member names.\n\n=DIRECTOR=DIRECTO=DIRECT=DIREC=DIRE=DIR\n)F FUNCTION -\n           Display dataset names from the catalog.\n\n)X SYNTAX -\n         DIRECTORY 'string'\n\n   Required - None\n   Defaults - All datasets belonging to the user.\n\n)O OPERANDS -\n))STRING   - Partially qualified DSN.\n\n=ECHO=ECH=EC\n)F FUNCTION -\n           Display a string of text at the terminal.\n\n)X SYNTAX -\n         ECHO 'string'\n\n   Required - 'string'\n   Defaults - None\n\n)O OPERANDS -\n))STRING - Text to be displayed.  May be mixed case.\n\n=END\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n\n)X SYNTAX -\n         END\n\n   Required - None\n   Defaults - None\n   Alias    - EXIT, QUIT\n\n)O OPERANDS -\n         None\n\n=EXIT=EXI=EX\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n)X SYNTAX -\n         EXIT\n\n   Required - None\n   Defaults - None\n   Alias    - END, QUIT\n\n)O OPERANDS -\n         None\n\n=FINISH=FINIS=FINI=FIN\n)F FUNCTION -\n           Terminate server mode in another Kermit.\n)X SYNTAX -\n         FINISH\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=GET=GE=G\n)F FUNCTION -\n           Request a file from another Kermit running in server mode.\n\n)X SYNTAX -\n         GET 'foreign-filespec' 'dataset-name'\n\n   Required - 'foreign-filespec'\n   Defaults - 'dataset-name' will match the 'foreign-filespec'\n\n)O OPERANDS -\n))FOREIGN-FILESPEC - The name of a file on the other system.\n))DATASET-NAME     - The name the file is to have on TSO.\n\n=GIVE=GIV=GI\n)F FUNCTION -\n           Save the current contents of a translation table in the form\n           of a TAKE file containing SET commands to change the default\n           into the current arrangement.\n\n)X SYNTAX -\n         GIVE 'table-name' 'take-dataset-name'\n\n   Required - 'table-name' 'take-dataset-name'\n   Defaults - file extension 'TAKE' for the 'take-dataset-name'\n\n)O OPERANDS -\n))TABLE-NAME - Specifies the name of the table to save.\n))TAKE-DATASET-NAME - Specifies the dataset in which to save the SET\n                      subcommands.  The file extension is automatically\n                      supplied as TAKE unless the last qualifier is\n                      KERMINI (or the name is fully qualified and\n                      quoted).\n\n=HELP=HEL=HE=H\n)F FUNCTION -\n           Display help information about Kermit-TSO subcommands.  This\n           is the standard TSO help facility and follows the same rules\n           and has the same operands.\n\n)X SYNTAX -\n         HELP 'subcommand-name' 'operands'\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n))SUBCOMMAND-NAME - Specifies the subcommand name to explain.\n))FUNCTION        - display the function of the subcommand\n))SYNTAX          - display the syntax of the subcommand\n))OPERANDS(LIST)  - display the list of operands\n))ALL             - display all operands\n\n=HOST=HOS=HO\n)F FUNCTION -\n           Execute a TSO command.\n\n)X SYNTAX -\n         HOST 'command'\n\n   Required - 'command'\n   Defaults - None\n   Alias    - TSO\n\n)O OPERANDS -\n))COMMAND - The text to be executed as a command.\n\n=KERMIT=KERMI=KERM=KER=KE\n)F FUNCTION -\n           Execute a Kermit subcommand.  This is useful particularly for\n           distinguishing Kermit subcommands from TSO commands.\n\n)X SYNTAX -\n         KERMIT 'subcommand'\n\n   Required - 'subcommand'\n   Defaults - None\n\n)O OPERANDS -\n))SUBCOMMAND - The text to be executed as a Kermit subcommand.\n\n=QUIT=QUI=QU=Q\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n)X SYNTAX -\n         QUIT\n\n   Required - None\n   Defaults - None\n   Alias    - END, EXIT\n\n)O OPERANDS -\n         None\n\n=RECEIVE=RECEIV=RECEI=RECE=REC\n)F FUNCTION -\n           Initiates file transfer to Kermit-TSO from the local Kermit.\n\n           - If the optional 'dataset-name' is not specified,\n             Kermit-TSO will use the name(s) provided by the local\n             Kermit.  If no dataset exists with this name, one will\n             be created using the file attribute and space values in\n             effect when the RECEIVE subcommand was entered.\n           - If the 'dataset-name' specified is the same as an existing\n             dataset, Kermit-TSO will prompt the user for the option to\n             overwrite the dataset.\n           - If the 'dataset-name' was not specified, but is the same\n             as an existing dataset,  Kermit-TSO will overwrite the\n             dataset if the WARNING parameter has been set to OFF, but\n             will attempt to create a new, unique name if WARNING is ON.\n\n)X SYNTAX -\n         RECEIVE 'dataset-name'\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the dataset where the file being received\n                 will be written.\n\n=SEND=SEN\n)F FUNCTION -\n           Initiates file transfer from Kermit-TSO to the local Kermit.\n\n           - One wildcard \"*\" may be used anywhere in the 'dataset-name'\n             to stand for a string of zero or more qualifiers, but no\n             wildcard is allowed in specifying a PDS member name.\n           - If the parameters are not specified, Kermit-TSO will\n             prompt for them.\n           - The 'dataset-name' must be cataloged.\n\n)X SYNTAX -\n         SEND 'dataset-name' 'foreign-filespec'\n\n   Required - 'dataset-name'\n   Defaults - Will prompt for both if neither is supplied.\n\n)O OPERANDS -\n))DATASET-NAME     - The name of the dataset(s) to be sent.\n))FOREIGN-FILESPEC - The name the file is to have on the other system.\n\n=SERVER=SERVE=SERV=SER\n)F FUNCTION -\n           Invokes Kermit-TSO server mode.\n\n           - Once Kermit-TSO enters server mode, it only accepts\n             subcommands entered at the local Kermit until a FINISH\n             command is executed.  Any non-default parameters must be\n             SET before invoking this mode if the local Kermit does\n             not offer the REMOTE KERMIT function.\n           - The local Kermit must support server subcommands to\n             communicate with Kermit-TSO in this mode.  The basic\n             server subcommands Kermit-TSO supports are as follows:\n\n             SEND   - Send a file to Kermit-TSO;\n             GET    - Get a file from Kermit-TSO;\n             FINISH - Terminate server mode and return to the\n                      Kermit-TSO prompt;\n             BYE    - Terminate server mode, exit Kermit-TSO and\n                      logoff TSO.\n\n           - Kermit-TSO also offers advanced server functions, including\n             the various REMOTE file manipulations, TSO commands, and\n             Kermit subcommands.\n\n)X SYNTAX -\n         SERVER\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=SET\n)F FUNCTION -\n           Modify parameters for file transfer.  The SHOW subcommand\n           may be used to examine these values.\n\n)X SYNTAX -\n         SET 'parameter' 'value'\n\n   Note: Many of the parameters are multi-level, as in SET FILE RECFM F.\n         The following list of operands includes all levels.\n\n   Required - 'parameter' 'value'\n   Defaults - None\n\n)O OPERANDS -\n))APPEND 'ON \u00a6 OFF' -\n                   Tells whether to append an incoming file to an\n                   existing dataset of the same name.  The default is\n                   OFF.  Note: there is no provision for appending to\n                   PDS members.\n\n))ATOE 'num1' 'num2' - Modifies the ASCII-to-EBCDIC translate table\n                       used by Kermit-TSO.  The table begins as the\n                       Kermit standard translate table (defined in\n                       the Kermit protocol specifications).  If the\n                       numeric values are omitted, the whole table is\n                       restored to its initial contents.  Tables ETOA,\n                       TATOE, and TETOA may be modified in the same way.\n       'num1' - A decimal number 0-255 for the value of the ASCII\n                character, i.e., the table offset.\n       'num2' - A decimal number 0-255 for the corresponding EBCDIC\n                character.\n\n))BLKSIZE 'number' - With FILE: specifies the block size for datasets\n                     created by Kermit-TSO.  Maximum is 32760.  The\n                     default is 6233.\n\n))BLOCK '1 \u00a6 2 \u00a6 3' - Specifies the type of block check used during\n                      file transfer.  The default is 1.\n                      '1' - A one character checksum.\n                      '2' - A two character checksum.\n                      '3' - A three character CRC.\n\n))CONTROLLER 'TTY \u00a6 SERIES1 \u00a6 GRAPHICS' -\n                   Kermit-TSO automatically determines whether you are\n                   connected via a Series/1-style emulation controller\n                   or a TTY line.  This command is provided, though, so\n                   you can change connections and because Kermit may not\n                   be able to distinguish between Series/1 and graphics\n                   throughput devices.  For both of those, Kermit\n                   attempts to disable the 3270 protocol conversion\n                   function by putting the controller into \"transparent\n                   mode\"; this allows Kermit packets to pass through\n                   intact.\n\n))DEBUG 'ON \u00a6 OFF \u00a6 RAW' - If ON, keep a journal of all packets sent\n                     and received in the file KER.LOG.  If OFF, stop\n                     logging the packets and close the file.  Default\n                     is OFF.  If RAW, record packets exactly as sent\n                     and received, rather than in EBCDIC.\n\n              Note:  KER.LOG is prefixed with the Kermit, rather than\n                     the TSO, prefix when debug mode is entered.  The\n                     log dataset thus created continues in use no\n                     matter what happens to the Kermit prefix.\n\n              Note:  Packets sent by Kermit-TSO are distinguished by\n                     a carriage return (X'0D') at the end; packets\n                     received have had it stripped by the front end\n                     (TTY) processor.\n\n))DELAY 'number' - Specifies the number of seconds Kermit-TSO will\n                   delay before beginning to send packets after the\n                   SEND subcommand has been entered.  Default is 10.\n                   Use a DELAY of 1 to abbreviate the usual greetings\n                   written on the screen at the start of protocol mode\n                   or a DELAY of 0 to suppress the greetings entirely\n                   (along with the attendant one-second pause).\n\n))ECHO 'ON \u00a6 OFF' - With TAKE:\n                   Controls whether the contents of TAKE command files\n                   are echoed during execution.\n\n))END-OF-LINE 'number' - With SEND or RECEIVE:\n                 Specifies the decimal value of the ASCII character\n                 used for the packet-terminator or end-of-line. The\n                 'number' must be 0-31.  The default is carriage return\n                 (13).\n\n))EOF 'ON \u00a6 OFF' - ON means incoming text files are to be cut off at\n                   first Ctrl-Z character within the data, OFF means\n                   accept incoming text files in their entirety.\n\n))ERROR-ACTION 'CONTINUE \u00a6 HALT' - With TAKE:\n                   Controls whether an error occuring during execution\n                   of a TAKE command file is fatal to the execution of\n                   that file.\n\n))ETOA 'num1' 'num2' - Modifies the EBCDIC-to-ASCII translate table\n                       used by Kermit-TSO.  See the description under\n                       ATOE.\n\n))FILE - Takes subparameters BLKSIZE, LRECL, RECFM, SPACE, TYPE, UNIT,\n         and VOLUME.\n\n))FOREIGN - Takes subparameters PREFIX and SUFFIX.\n\n))INITIAL 'num' - With RETRY:\n                   Establishes the limit for retrying the first packet\n                   in a transfer.  The default is 16.\n\n))LEFT 'column' - With MARGIN: sets the left margin for restricting the\n                  width of files to be sent. A value of zero disables\n                  the left margin.\n\n))LRECL 'number' - With FILE: Specifies the logical record length for\n                   incoming datasets.  The 'number' must be from 1 to\n                   32756 (32K) decimal.  Default is 80.\n\n             Note: The Kermit LRECL applies only to data bytes.  The\n                   MVS/TSO LRECL for varying-format files will be four\n                   larger to accommodate the record-descriptor words.\n\n))MARGIN - Takes subparameters LEFT and RIGHT.\n\n))PACKET 'num' - With RETRY:\n                   Establishes the limit for retrying a packet in a\n                   transfer.  The default is 5.\n\n))PACKET-SIZE 'num' - With RECEIVE:\n                   Use the specified \"num\" as the maximum length for\n                   incoming packets. The valid range is 26-9024, and\n                   80 is the default.  SET RECEIVE PACKET-SIZE 95 or\n                   greater causes Kermit-TSO to negotiate reception of\n                   extended length packets with other Kermit programs\n                   that support this option.\n\n))PAD-CHAR 'num' - With SEND or RECEIVE:\n                   Padding character to use between packets, NUL (ASCII\n                   0) by default.\n\n))PADDING 'num' - With SEND or RECEIVE:\n                   Number  of copies  of the  interpacket  padding\n                   character, zero by default.\n\n))PARITY 'MARK \u00a6 NONE' -\n                   Transparent-mode ASCII data from a SERIES1 or\n                   GRAPHICS device will typically have either all Mark\n                   parity (seven data bits with the eighth bit set) or\n                   no parity (eight data bits).  Kermit-TSO must know\n                   which kind of parity to expect in order to calculate\n                   checksums properly.\n\n))PREFIX 'string' - The specified string is used as the DSN prefix for\n                    Kermit.  See the CWD subcommand.\n\n))PREFIX 'string' - With FOREIGN:\n                   The specified string is added to the beginning of\n                   outbound filespecs.\n\n))PROMPT 'string' -\n                   This command defines the character  string that\n                   Kermit-TSO displays when asking for a command. The\n                   prompt may be any string of up to 20 characters. The\n                   default is \"Kermit-TSO>\".\n\n))QUOTE 'char' - With SEND or RECEIVE:\n                 Control character quoting prefix, normally #.\n                 This character must have an ASCII value in the\n                 range 33-62 or 96-126.\n          Note:  Do not change this parameter unless transferring\n                 a long file which contains many '#' characters.\n\n))RECFM 'F \u00a6 V \u00a6 U' - With FILE:\n            Specifies the record format for new files.  Default is V.\n                      F - Fixed (MVS RECFM=FB)\n                      V - Variable (MVS RECFM=VB)\n                      U - Undefined (MVS RECFM=U)\n\n))RETRY - Takes subparameters INITIAL and PACKET.\n\n))RIGHT 'column' - With MARGIN: sets the right margin for restricting\n                  the width of files to be sent. A value of zero\n                  disables the right margin.\n\n))SPACE 'number' - With FILE: Specifies the number of tracks for the\n                   space allocation for new files being received\n                   from the local Kermit.  Default is 5.\n\n))START-OF-PACKET 'num' - With SEND or RECEIVE:\n                Control character to mark start of packet, normally\n                Ctrl-A (ASCII 1).  May be 0-31.\n\n))SUFFIX 'string' - With FOREIGN:\n                   The specified string is added to the end of outbound\n                   filespecs.\n\n))SYSCMD 'ON \u00a6 OFF' -\n                   Determine whether non-Kermit commands are assumed to\n                   be TSO commands and passed to TSO for execution.\n\n))TABS 'OFF \u00a6 ON \u00a6 ON,tab-list' - Enables or disables tab expansion for\n                                  files being received. Default is OFF.\n                  OFF         - Disables expansion.\n                  ON          - Enables expansion and specifies tabs\n                                at columns 9, 17, 25, etc.\n                  ON,tab-list - Enables expansion and specifies use\n                                of tab stops listed in 'tab-list'.\n\n))TAKE - Takes subparameters ECHO and ERROR-ACTION.\n\n))TATOE 'num1' 'num2' - Modifies the ASCII-to-EBCDIC translate table\n                        used by Kermit-TSO.  See the description under\n                        ATOE.\n))TEST 'ON \u00a6 OFF' -\n                   Used for testing new versions, suppresses block check\n                   verification, allows start-of-packet to be set to\n                   anything at all.  The default if OFF.\n\n))TETOA 'num1' 'num2' - Modifies the EBCDIC-to-ASCII translate table\n                        used by Kermit-TSO.  See the description under\n                        ATOE.\n\n))TIMEOUT 'num' - With SEND or RECEIVE:\n                   Number of seconds to wait for a packet before\n                   retransmitting.\n\n))TIMER 'ON \u00a6 OFF' - Specifies whether Kermit-TSO is to attempt to\n                     time out from waiting for packets from the other\n                     Kermit.  The default is ON.\n\n))TTABLE 'ON \u00a6 OFF' -\n                   Controls whether ATOE/ETOA or TATOE/TETOA are used\n                   for counteracting the system translations on TTY\n                   lines.  The default is OFF (use ATOE/ETOA).\n\n))TYPE 'Binary \u00a6 Text \u00a6 V-binary \u00a6 D-binary' -\n                   With FILE: specifies the file type of the data and\n                   determines the type of translation, if any, to use.\n        Binary   - Specifies non-delimited, bit-stream data.  No trans-\n                   lation is performed, and no carriage return/linefeed\n                   pairs are added to outgoing records.  Incoming bytes\n                   are added successively to the current record, which\n                   is written out when the specified logical record\n                   length (LRECL) is reached.\n        Text     - Specifies textual data.  ASCII-to-EBCDIC and\n                   EBCDIC-to-ASCII translation is performed on the\n                   data using the defined translate tables.  Carriage\n                   return/linefeed pairs are used to delimit the\n                   records.  This is the default.\n        V-binary - Specifies variable-length binary records.  Like\n                   BINARY, except that a 2-byte length field precedes\n                   each outbound record, and is assumed for incoming\n                   records.  Incoming records are stripped of their\n                   prefixes and written out when the prefix value is\n                   reached.  This is useful when the record format is\n                   unformatted (RECFM=U) or variable (RECFM=V).\n        D-binary - Specifies variable-length binary records.  Like\n                   V-BINARY, except that the prefix field is a 5-byte\n                   ASCII decimal string.\n\n))UNIT 'name' - With FILE:\n                   Specifies the name of the device type or class for\n                   storing new files (e.g., received from the local\n                   Kermit).  The default is SYSDA.\n\n))VOLUME 'name' - With FILE:\n                   Specifies the name of the particular storage volume\n                   for storing new files (e.g., received from the local\n                   Kermit).  The default is blank (the system will\n                   choose any volume of the specified UNIT class).\n\n))WARNING 'ON \u00a6 OFF' - Specifies the course of action when a file\n                       being received from the local Kermit has the\n                       same name as a dataset which already exists.\n              - If ON, Kermit-TSO changes the incoming file name so as\n                not to obliterate the existing dataset, or requests\n                permission to overwrite it if the name was given by the\n                user.  This is the default.  Kermit-TSO attempts to\n                rename an incoming file by appending a digit to the\n                second qualifier of the dataset name.\n              - If OFF, Kermit-TSO will replace the existing dataset.\n\n))8-BIT-QUOTE 'ON \u00a6 OFF \u00a6 char' -\n                   Controls whether eighth-bit prefixing is done and\n                   specifies the character to be used.\n\n=SHOW=SHO=SH\n)F FUNCTION -\n           Displays the values of all parameters which can be changed\n           with the SET subcommand, except the translation tables.\n           See also the TDUMP subcommand.\n\n)X SYNTAX -\n         SHOW 'parameter'\n\n   Required - 'parameter'\n   Defaults - all\n\n)O OPERANDS -\n))PARAMETER - The parameter whose value is to be displayed.  If\n              the value is 'all', then the values of all parameters\n              are displayed.  If only one level of a multi-level\n              parameter family is given, then all subparameters will\n              be displayed.\n\n=STATUS=STATU=STAT=STA=ST\n)F FUNCTION -\n           Returns the status of the previous subcommand.  The response\n           will either display the message 'No Errors', or the message\n           for the last error encountered.\n\n)X SYNTAX -\n         STATUS\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=TAKE=TAK=TA\n)F FUNCTION -\n           Executes Kermit-TSO subcommands from the specified file.\n\n)X SYNTAX -\n         TAKE 'take-dataset-name'\n\n   Required - 'take-dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))TAKE-DATASET-NAME - Specifies the dataset from which to get the\n                      sequence of Kermit-TSO subcommands to execute.\n                      The file extension is automatically supplied as\n                      TAKE unless the last qualifier is KERMINI (or\n                      the name is fully qualified and quoted).\n\n=TDUMP=TDUM=TDU=TD\n)F FUNCTION -\n           Display the contents of the specified table.\n\n)X SYNTAX -\n         TDUMP 'table-name'\n\n   Required - 'table-name'\n   Defaults - None\n\n)O OPERANDS -\n))TABLE-NAME - Specifies the name of the table to display.\n\n     ATOE    - The ASCII-to-EBCDIC translate table.\n     ETOA    - The EBCDIC-to-ASCII translate table.\n     NAMES   - The list of datasets sent in the last transfer.\n     TATOE   - The ASCII-to-EBCDIC table (for undoing the front end).\n     TETOA   - The EBCDIC-to-ASCII table (for undoing the front end).\n\n=TSO=TS\n)F FUNCTION -\n           Execute a TSO command.\n\n)X SYNTAX -\n         TSO 'command'\n\n   Required - 'command'\n   Defaults - None\n   Alias    - HOST\n\n)O OPERANDS -\n))COMMAND - The text to be executed as a command.\n\n=TYPE\n)F FUNCTION -\n        Display the specified file at your terminal.\n\n)X SYNTAX -\n         TYPE 'dataset-name'\n\n   Required - 'dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the file to be displayed.\n\n=XECHO=XECH=XEC=XE\n)F FUNCTION -\n        Display a string of text at your Series/1-type terminal in\n        transparent mode (similar to ECHO).\n\n)X SYNTAX -\n         XECHO 'string'\n\n   Required - 'string'\n   Defaults - None\n\n)O OPERANDS -\n))STRING - Text to be displayed.  May be mixed case.  May contain\n           ASCII control characters using the '\u00ac' notation.\n\n=XTYPE=XTYP=XTY=XT\n)F FUNCTION -\n        Display the specified file at your Series/1-type terminal in\n        transparent mode.\n\n)X SYNTAX -\n         TYPE 'dataset-name'\n\n   Required - 'dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the file to be displayed.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$FILE04": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x00\\x00\\x00\\x00\\x893O\\x00\\x893O\\x11%\\x03\\x04\\x03\\x04\\x00\\x00\\xe3\\xc1\\xf1\\xf5\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "00.00", "flags": 0, "createdate": "1989-11-30T00:00:00", "modifydate": "1989-11-30T11:25:00", "lines": 772, "newlines": 772, "modlines": 0, "user": "TA15500"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "$INDEX": {"ttr": 1282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x15\\x0f\\x00\\x89\\x15\\x0f\\x16\\x17\\x00\\x18\\x00\\x18\\x00\\x00\\xe2\\xd7\\xc7\\xd4\\xd4\\xc7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-05-30T00:00:00", "modifydate": "1989-05-30T16:17:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "SPGMMG"}, "text": "   IKTDYN      Assembler source for DYNALC subroutine\n   IKTGUP      Assembler source for TSO-specific part of GUPI\n   IKTGUPHL    GUPI help file, TSO HELP format\n   IKTKERAN    Text of Kermit-TSO 4.0 Announcement\n   IKTKERBW    A \"beware\" file, listing known bugs and problems\n   IKTKERDO    Kermit User Guide chapter for TSO, plain text\n   IKTKERHL    Kermit-TSO help file, TSO HELP format\n   IKTKERIN    Kermit-TSO installation instructions (this file)\n   IKTKERMS    Scribe source for IKTKER.DOC\n   IKTKERUP    Updates for TSO version of Kermit-370\n   IKTMAC      Assembler source for TSO-specific macros\n   IKTUTL      Assembler source for TSO-specific routines\n   IK0CMD      Assembler source for command handler\n   IK0COM      Assembler source for global code\n   IK0CONHL    Notes on implementing alternate terminal controllers\n   IK0DEF      Assembler source for parameter definitions\n   IK0DOC      Assembler source with brief history\n   IK0GUP      Assembler source for generic update program GUPI\n   IK0KERDO    Kermit User Guide chapter for Kermit-370, plain text\n   IK0KERMS    Scribe source for IK0KER.DOC\n   IK0KERUP    Update history for Kermit-370\n   IK0MAC      Assembler source for generic Kermit macros\n   IK0MAI      Assembler source for storage initialization\n   IK0PRO      Assembler source for generic routines\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DUMMY": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x14?\\x00\\x89\\x14?\\x12\\x01\\x00\\x01\\x00\\x01\\x00\\x00\\xe2\\xd7\\xc7\\xd4\\xd4\\xc7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-05-23T00:00:00", "modifydate": "1989-05-23T12:01:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "SPGMMG"}, "text": "         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IKTDYN": {"ttr": 1286, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DYNA     TITLE 'DYNAMIC FILE ALLOCATION ROUTINE'\n***********************************************************************\n* DYNALC - J.F. Chandler - 1986 October                               *\n* TSO FORTRAN-callable routine based on version from KERMSRV          *\n*  e.g., CALL DYNALC(DSN,DDN,UNIT,VOL,DISP,SPACE,RC)                  *\n*    or  CALL DYNALC(DSN,DDN,UNIT,VOL,DISP,SPACE,RC,BUFF)             *\n*  with  DSN   52-char string of DSN + MEMBER (blank if none)         *\n*        DDN   8-char string of DDNAME or FORTRAN unit number         *\n*        UNIT  8-char string of device type                           *\n*        VOL   6-char string of volume name                           *\n*        DISP  1-byte code giving dataset disposition:                *\n*              80: SHR       08: KEEP       One bit must be set       *\n*              40: NEW  +    04: DELETE     in each HEX digit.        *\n*              20: MOD       02: CATLG                                *\n*              10: OLD       01: UNCATLG                              *\n*        SPACE fullword track allocation increment                    *\n*        RC    fullword returned completion (0 if ok, 1 if not)       *\n*        BUFF  (optional) 512-byte buffer for returned error message. *\n*              If not given, in case of error, display the message.   *\n***********************************************************************\nDYNALC   CSECT\n         PRINT NOGEN\n         SAVE  (14,12),,*\n         USING DYNALC,15\n         CNOP  0,4\n         BAL   12,*+76\n         USING *,13\n         DS    18F\n         ST    12,8(13)\n         ST    13,4(12)\n         LR    13,12\n         LM    4,11,0(1)     Get arguments                     @SC88119\n         TM    0(4),X'F0'\n         BNM   EXITBAD       Must be old\n         LR    1,4           Dsname ptr\n         LA    0,44\n         LA    3,TUDSN+2\n         BAL   14,GETTU\n         LA    1,44(4)       Possible member name\n         LA    0,8           Max length\n         LA    3,TUMEM+2\n         BAL   14,GETTU\n         LR    1,5           Ddname ptr\n         TM    0(1),X'F0'\n         BNZ   DDCHAR        Must be char string\n         L     0,0(1)        Numeric, get value\n         CVD   0,DBLWORD\n         OI    DBLWORD+7,15\n         LA    1,FTXXF001\n         UNPK  2(2,1),DBLWORD Convert to zoned\nDDCHAR   LA    0,8           Max length\n         LA    3,TUDDN+2\n         BAL   14,GETTU\n         SR    0,0\n         IC    0,0(8)        Get stat,disp\n         SRDL  0,4           Separate nybbles\n         SRL   1,28\n         STC   0,TUSTAT      Save values\n         STC   1,TUDISP\n         LR    1,6           Unit ptr\n         LA    0,8           Max length\n         LA    3,TUUNT+2\n         BAL   14,GETTU\n         LR    1,7           Volume ptr\n         LA    0,6           Max length\n         LA    3,TUVOL+2\n         BAL   14,GETTU\n         L     2,0(9)        Space value\n         STCM  2,7,TUPRIME   Use for both\n         STCM  2,7,TUSECOND\n         LA    1,TEXTTST\n         MVC   0(12,1),=A(TUUNT,TUVOL,TUMEM)\n         LA    3,3\nTSTSLP   L     2,0(1)\n         CLI   5(2),0        Is is specified?\n         BNE   *+10          Yes, keep it\n         XC    0(4,1),0(1)   No, exclude it from list\n         LA    1,4(1)        On to next\n         BCT   3,TSTSLP\n         LA    1,TEXTOLD     Determine which units to use\n         TM    TUSTAT,X'04'\n         BZ    DYNALLOC\n         LA    1,TEXTNEW\n         CLI   TUMEM+5,0     Any member given?\n         BE    DYNALLOC      No, that's fine\n         LA    1,TEXTNEWM    Yes, must allocate directory\nDYNALLOC ST    1,DYNTXTPP\n         LA    1,DYNRBPTR\n         DYNALLOC ,\n         LTR   15,15\n         BZ    EXITRC\n         NI    DFSWTCHS,X'9F'                                  @SC88119\n         LTR   10,10         Is there a message buffer?        @SC88119\n         BM    *+8           No                                @SC88119\n         OI    DFSWTCHS,X'40' Yes, set flag for filling it     @SC88119\n         STCM  11,7,DFBUFP+1 Pass pointer                      @SC88119\nDYNFAIL  ST    15,S99RC\n         LA    1,DFPARMS\n         LINK  EP=IKJEFF18\nEXITBAD  LA    15,1\nEXITRC   ST    15,0(10)      Save RC\n         L     13,4(13)\n         RETURN (14,12)\n*\n* Copy string+length into text unit. R1->string, R3->length field\nGETTU    LR    2,1           Save start of string\nGLLP     CLI   0(2),C' '     Find end\n         BE    GOTLEN\n         LA    2,1(2)\n         BCT   0,GLLP\nGOTLEN   SR    2,1           Length of token\n         STCM  2,3,2(3)      Save in text unit\n         BZR   14            Empty string\n         BCTR  2,0           Fix for execute\n         EX    2,COPYTU\n         BR    14\nCOPYTU   MVC   4(,3),0(1)    Move string to text unit\n         EJECT\n         DS    0F\nDYNRBPTR DC    X'80',AL3(DYNRB)\nDYNRB    DC    AL1(20,S99VRBAL)\n         DC    AL2(0,0,0)\nDYNTXTPP DC    AL4(*-*)\n         DC    AL4(0,0)\nS99RC    DC    F'0'\nTEXTNEWM DC    A(TUDIR)\nTEXTNEW  DC    A(TUTRK,TUPRI,TUSEC,TUREL)\nTEXTTST  DC    A(TUUNT,TUVOL)\nTEXTOLD  DC    A(TUMEM,TUDDN,TUDSN,TUSTA,TUDIS),X'80',AL3(TUFRE)\n*\nTUDDN    DC    AL2(DALDDNAM,1)   DDNAME\n         DS    AL2,CL8\nTUDSN    DC    AL2(DALDSNAM,1)   DSNAME\n         DS    AL2,CL44\nTUMEM    DC    AL2(DALMEMBR,1)   Member\n         DS    AL2,CL8\nTUDIR    DC    AL2(DALDIR,1)     Dir blks\n         DC    AL2(3),AL3(5)\nTUDIS    DC    AL2(DALNDISP,1,1) Disp\nTUDISP   DC    X'00'\nTUSTA    DC    AL2(DALSTATS,1,1) Status\nTUSTAT   DC    X'00'\nTUUNT    DC    AL2(DALUNIT,1)    Unit\n         DS    AL2,CL8\nTUVOL    DC    AL2(DALVLSER,1)   Volume\n         DS    AL2,CL6\nTUTRK    DC    AL2(DALTRK,0)     Tracks\nTUPRI    DC    AL2(DALPRIME,1,3) Primary\nTUPRIME  DC    AL3(*-*)\nTUSEC    DC    AL2(DALSECND,1,3) Secondary\nTUSECOND DC    AL3(*-*)\nTUREL    DC    AL2(DALRLSE,0)    Release\nTUFRE    DC    AL2(DALCLOSE,0)   FREE=CLOSE\nDFPARMS  DS    0D            DAIR fail plist\nDFS99RBP DC    A(DYNRB)      Adr of SVC 99 req blk\nDFRCP    DC    A(S99RC)      Adr of SVC 99 ret code\nDFJEFF02 DC    A(DFZEROES)   Adr of unknown writer\nDFIDP    DC    A(DFSWTCHS)   Adr of DAIRFAIL options\nDFCPPLP  DC    A(0)          Unknown CPPL address\nDFBUFP   DC    A(0)          Do not return message\nDFZEROES DC    A(0)\nDFSWTCHS DC    X'80',X'33'   WTP for DYNALLOC, please\nDBLWORD  DC    D'0'\nFTXXF001 DC    C'FTXXF001'   Place to build FORTRAN ddname\n         IEFZB4D0\n         IEFZB4D2\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IKTGUP": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 GUPVAR\n*          Specific variables\nEVCTR    DS    F             File sequence number                   TSO\nICPRGS   DS    4F            Saved registers for type-out      @SC88026\nFNAME    DS    CL130         Buffer for reading                     TSO\n*COPY                                                 GUPSPC\n*          Specific preliminaries\n*\nLFID     EQU   52            Filespec length                        TSO\nSTKDWDS  EQU   511           Requested stack length                 TSO\nXXBAT    EQU   X'04'         Special flag for batch mode       GUP1.1\n*\n         IKJCPPL ,                                             GUP1.1\n*COPY                                                 GUPFIN\n         LR    2,15          Save return code                  GUP1.1\n         CLOSE MSGFIL                                          GUP1.1\n         LR    15,2          Return code                       GUP1.1\n*COPY                                                 GUPNIT\n*          TSO user interface                                       TSO\n*\n         TM    0(1),X'80'    What kind of plist?               GUP1.1\n         BZ    GUPCP         Seems to be CP                    GUP1.1\n         MVC   SRCNAM(3*LFID+3),BATDDNS  Copy ddnames+mark     GUP1.1\n         LA    4,XXCOR+XX8+XXBAT Default flags                 GUP1.1\n         L     1,0(1)        Ptr to parm string                GUP1.1\n         LH    2,0(1)        Get length                        GUP1.1\nOPTLP    SR    0,0           Mask: zeroes                      GUP1.1\n         CH    2,EH2         Enough for a 'NO'?                GUP1.1\n         BL    OPTZ          No                                GUP1.1\n         CLC   =C'NO',2(1)   Is it?                            GUP1.1\n         BNE   OPTYES        No, assume positive option        GUP1.1\nEH2      EQU   *+2,2                                           GUP1.1\n         LA    1,2(1)        Yes, it is.  Space over the NO    GUP1.1\n         SH    2,EH2         Cut off the NO                    GUP1.1\n         BCTR  0,0           Mask: ones                        GUP1.1\nOPTYES   SH    2,EH4         See if room for option            GUP1.1\n         BL    OPTZ          No, done scan                     GUP1.1\n         CLC   =C'MARK=',2(1)                                  GUP1.1\n         BNE   OPTCK         Check flags                       GUP1.1\n         SH    2,EH4         See if mark field available       GUP1.1\n         BL    OPTZ          No, done scan                     GUP1.1\n         MVC   MRKD,7(1)     Copy in case NOSEQ8               GUP1.1\n         LA    1,8(1)        Space over option                 GUP1.1\n         B     OPTLQ                                           GUP1.1\nOPTCK    LA    3,XX8         Test for SEQ8                     GUP1.1\n         CLC   =C'SEQ8',2(1)                                   GUP1.1\n         BE    OPTOK         Found it                          GUP1.1\n         LA    3,XXCOR       Test for in-storage               GUP1.1\n         CLC   =C'STOR',2(1)                                   GUP1.1\n         BNE   OPTZ          None of these, give up            GUP1.1\nOPTOK    OR    4,3           Turn flag on                      GUP1.1\n         NR    3,0                                             GUP1.1\n         XR    4,3           Turn off if \"NO\"                  GUP1.1\n         LA    1,4(1)        Advance ptr over option           GUP1.1\nOPTLQ    LTR   2,2           Any more options?                 GUP1.1\n         BNP   OPTZ                                            GUP1.1\n         CLI   2(1),C','     Make sure there is a separator    GUP1.1\n         BNE   OPTZ          No, give up                       GUP1.1\n         LA    1,1(1)                                          GUP1.1\n         BCT   2,OPTLP                                         GUP1.1\nOPTZ     STC   4,FLG         Save current flags                GUP1.1\n         OPEN  (MSGFIL,OUTPUT)  Message data set               GUP1.1\n         TM    MSGFIL+FABOFLGS-FABD,X'10'                      GUP1.1\n         BZ    ERREX         Oops                              GUP1.1\n         B     OPN                                             GUP1.1\n*\n         USING CPPL,1                                          @SC86299\nGUPCP    MVI   SRCNAM,C' '                                     GUP1.1\n         MVC   SRCNAM+1(3*LFID+2),SRCNAM  Blank out parm area  GUP1.1\n         MVI   FLG,0                                           GUP1.1\n         L     3,CPPLUPT     Fill in parse parameter list      GUP1.1\n         L     4,CPPLECT                                       GUP1.1\n         STM   3,4,PPLAREA                                     GUP1.1\n         L     3,CPPLCBUF                                      GUP1.1\n         ST    3,PPLAREA+20                                    GUP1.1\n         DROP  1                                               GUP1.1\n         MVI   CPECB,0                                         GUP1.1\n         LINK  EP=IKJPARS,MF=(E,PPLAREA) Perform parsing serviceUP1.1\n         LTR   15,15         Any good?                         GUP1.1\n         BNZ   ERREX         No, exit with error               GUP1.1\n*          Interpret results                                   GUP1.1\n         L     8,RESULT      Address parsed data               GUP1.1\n         USING IKJPARMD,8                                      GUP1.1\n         LA    1,PRSSRC      -> Base dataset name info         GUP1.1\n         LA    6,SRCNAM      -> Destination field              GUP1.1\n         BAL   7,MOVDSN      Move dataset name                 GUP1.1\n         LA    1,PRSCTL      Do update DSN                     GUP1.1\n         LA    6,CTLNAM                                        GUP1.1\n         BAL   7,MOVDSN                                        GUP1.1\n         LA    1,PRSOUT      Do output DSN                     GUP1.1\n         LA    6,OUTNAM                                        GUP1.1\n         BAL   7,MOVDSN                                        GUP1.1\n         CLI   PRSSEQ8+1,1   SEQ8 option set?                  GUP1.1\n         BNE   *+8           No                                GUP1.1\n         OI    FLG,XX8       Yes, enable flag                  GUP1.1\n         CLI   PRSSTOR+1,1   STOR option set?                  GUP1.1\n         BNE   *+8           No                                GUP1.1\n         OI    FLG,XXCOR     Yes, enable flag                  GUP1.1\n         LA    1,PRSMRKV                                       GUP1.1\n         LA    6,MRKD                                          GUP1.1\n         BAL   7,MOVMEM      Move mark, if any                 GUP1.1\n         B     OPN           Done                              GUP1.1\n*\nMOVDSN   L     2,0(1)        --> dataset name                  GUP1.1\n         LH    3,4(1)        Length                            GUP1.1\n         BCTR  3,0                                             GUP1.1\n         EX    3,CPYTXT      Move dataset name                 GUP1.1\n         LA    6,44(6)       Point to member storage           GUP1.1\n         LA    1,8(1)                                          GUP1.1\nMOVMEM   L     2,0(1)        Member name                       GUP1.1\n         LTR   2,2           Test for member                   GUP1.1\n         BZR   7             None                              GUP1.1\n         LH    3,4(1)        Length                            GUP1.1\n         BCTR  3,0                                             GUP1.1\n         EX    3,CPYTXT      Move member name                  GUP1.1\n         BR    7                                               GUP1.1\nCPYTXT   MVC   0(,6),0(2)                                      GUP1.1\n         DROP  8                                               GUP1.1\n*\nWTEXT    STM   14,1,ICPRGS   Save registers                    GUP1.1\n         TM    FLG,XXBAT     Batch version?                    GUP1.1\n         BZ    WTXCP         No, just do a TPUT                GUP1.1\n         STH   0,MSGFIL+FABLRECL-FABD Save LRECL               GUP1.1\n         LR    0,1                                             GUP1.1\n         PUT   MSGFIL,(0)    And write it out                  GUP1.1\n         B     WTXRET                                          GUP1.1\nWTXCP    SVC   93                                              GUP1.1\nWTXRET   LM    14,1,ICPRGS   Restore and return                GUP1.1\n         BR    15                                              GUP1.1\n*\nMSGFIL   DCB   DDNAME=SYSPRINT,MACRF=PM,RECFM=U,BLKSIZE=130,DSORG=PS\n*\nBATDDNS  DC    CL52'+SYSUT1'                                   GUP1.1\n         DC    CL52'+SYSIN'                                    GUP1.1\n         DC    CL52'+SYSUT2'                                   GUP1.1\n         DC    C'   '        Leave sequence field blank        GUP1.1\n*\nPPLAREA  DC    A(0,0,CPECB,PRSPCL,RESULT,0,USERBLK)            GUP1.1\nCPECB    DS    F             GETLINE/PUTLINE/PUTGET ECB        @TS86001\nRESULT   DS    A             Parse PDL ptr                     GUP1.1\nUSERBLK  DS    D             Parse work area (not used)        GUP1.1\n*\nPRSPCL   IKJPARM ,                                             GUP1.1\nPRSSRC   IKJPOSIT DSNAME,USID,PROMPT='SOURCE DSNAME'           GUP1.1\nPRSCTL   IKJPOSIT DSNAME,USID,PROMPT='UPDATE DSNAME'           GUP1.1\nPRSOUT   IKJPOSIT DSNAME,USID,PROMPT='OUTPUT DSNAME'           GUP1.1\nPRSSEQ8  IKJKEYWD DEFAULT='SEQ8'                               GUP1.1\n         IKJNAME 'SEQ8'                                        GUP1.1\n         IKJNAME 'NOSEQ8'                                      GUP1.1\nPRSSTOR  IKJKEYWD DEFAULT='STOR'                               GUP1.1\n         IKJNAME 'STOR'                                        GUP1.1\n         IKJNAME 'NOSTOR'                                      GUP1.1\nPRSMARK  IKJKEYWD ,                                            GUP1.1\n         IKJNAME 'MARK',SUBFLD=PRS2MRK                         GUP1.1\nPRS2MRK  IKJSUBF ,                                             GUP1.1\nPRSMRKV  IKJIDENT 'SEQUENCE MARK',FIRST=ANY,OTHER=ANY,MAXLNTH=3 UP1.1\n         IKJENDP ,                                             GUP1.1\nGUPI     CSECT\n*                                                                   TSO\nOPNERR   LA    1,L'OPNEM                                            TSO\n         BAL   0,FILERR                                             TSO\nOPNEM    DC    C'FILE NOT FOUND: '                                  TSO\nDSKERR   LA    2,8(1)                                               TSO\n         LA    1,L'DSKEM                                            TSO\n         BAL   0,FILERR                                             TSO\nDSKEM    DC    C'DISK ERROR ON FILE '                               TSO\n*                                                                   TSO\nFILERR   LA    4,FNAME       Buffer to use                          TSO\n         LR    5,1                                                  TSO\n         MVCL  4,0           Copy message                           TSO\n         LA    3,LFID        Length of a name field                 TSO\n         LR    5,3                                                  TSO\n         MVCL  4,2           Copy name                              TSO\n         LA    1,FNAME       Start of buffer again                  TSO\n         SR    4,1                                                  TSO\n         WTEXT (1),(4)                                              TSO\n         B     ERREX                                                TSO\n*COPY                                                 GUPSUB\n         TITLE 'DISKIO Routine - performs disk I/O functions'\n* Function selected on entry by R0:\n* 1=> open (in): R1->pattern FDB, R2->name.  Returns R0->FAB, R1->FDB\n* 2=> open (out): (same, but no complete FDB if new file)\n* 4=> close file: R1->adr(FAB).\n* 9=> read: R1->FAB.  Returns R15=12 if EOF, 0 if ok; R0=# data\n* 10=> write: R1->FAB.  Returns R15=13 if disk full, 0 if ok.\nDISKIO   ENTER\n         USING FABD,3                                          @SC86295\n         SR    4,4           Signal no block assigned          @SC86295\n         LA    6,FDBTRKAL-FDBD(1) Use pattern TRKAL            @SC88026\n         ST    6,DYNPL+20    Set up calling sequence           GUP1.1\n         BCT   0,DSKOPNO                                       @SC86295\n*\n* Open for input file whose name is at (R2), FDB at (R1)\n         MVI   DYNDSP,X'88'  SHR,KEEP                          @SC86299\n         BAL   9,DSKALC      Get FAB                           @SC86295\n         BAL   2,DSKLKP      Get DSCB                          @SC86299\n         BNZ   DSKER1        Not found                         @SC86295\n         BAL   14,DSKVALS                                      @SC86295\n         BAL   9,DSKFABS     Set up FAB from FDB               @SC86299\n         CNOP  0,4                                             @SC86299\n         BAL   2,DSKOPT      Open and test                     @SC86299\n         OPEN  (0,INPUT),MF=L                                  @SC86299\n*\n* Open for output file whose name is at (R2), FDB at (R1)\nDSKOPNO  BCT   0,DSKTEST                                       @SC86295\n         MVI   DYNDSP,X'42'  NEW,CATLG                         @SC86299\n         BAL   9,DSKALC      Get FAB                           @SC86295\n         BAL   2,DSKLKP      Get DSCB                          @SC86299\n         BNZ   DSKOPN        Not found, just writing new       @SC86299\n         MVI   DYNDSP,X'18'  OLD,KEEP                          @SC86299\n         TM    DS1DSO,2      PDS?                              GUP1.1\n         BZ    DSKOPN        No, we just write over it         GUP1.1\n         BAL   14,DSKVALS    Yes, copy DCB info                GUP1.1\n         BAL   9,DSKFABS                                       GUP1.1\nDSKOPN   CNOP  0,4                                             @SC86299\n         BAL   2,DSKOPT      Open and test                     @SC86299\n         OPEN  (0,OUTPUT),MF=L                                 @SC86299\nDSKOPT   CLI   FABDSN,C'+'   Just DDNAME?                      GUP1.1\n         BE    DSKOPDZ       Yes, don't need to allocate       GUP1.1\n         KCALL DYNALC,DYNPL,EXT                                @SC86299\nDSKOPDZ  DS    0H                                              GUP1.1\n         OPEN  ((3)),MF=(E,(2))                                @SC86299\n         TM    FABOFLGS,X'10'                                  @SC86299\n         BZ    DSKER1        Didn't work                       @SC86299\n         B     RTRN0                                           @SC86295\n*\nDSKTEST  BCT   0,DSKCLOS                                       @SC86295\n         B     RTRN1                                           @SC86299\n*\n* Close file whose ticket is at (R1), release block\nDSKCLOS  BCT   0,DSKRED                                        @SC86295\n         ICM   3,15,0(1)     Get FAB ptr, if any               @SC86295\n         BZ    RTRN0         None, ignore                      @SC86295\n         XC    0(4,1),0(1)   Yes, now clear ticket             @SC86295\n         CLOSE ((3))                                           @SC86299\n      FREEPOOL (3)                                             @SC86299\n         LA    0,FABDWDS                                       @SC86295\n         LR    1,3                                             @SC86299\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         B     RTRN0                                           @SC86295\n*\n* Read from file whose ticket is at (R1)\nDSKRED   SH    0,=H'4'\n         BCT   0,DSKWRT                                        @SC86295\n         LTR   3,1           Get FAB ptr                       @SC86299\n         BNP   RTRN1         Not defined anymore               @SC86299\n         L     15,FABGET     I/O routine                       @SC86299\n         BALR  14,15         Go to it                          @SC86299\n         LM    4,5,FDBBUFF   Get buffer and size               @SC86299\n         LH    7,FABLRECL    Actual length                     @SC86299\n         AR    7,1           End of record                     @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   1,4(1)        Skip over SDW if V                @SC86299\n         SR    7,1           Revised length                    @SC86299\n         LR    6,1                                             @SC86299\n         CR    7,5                                             @SC86299\n         BNL   *+6                                             @SC86299\n         LR    5,7           Buffer not filled                 @SC86299\n         L     1,4(13)                                         @SC86299\n         ST    5,20(1)       Return length in R0               @SC86299\n         MVCL  4,6           Copy to buffer                    @SC86299\n         B     RTRN0                                           @SC86299\n* End of file on input. Don't close it yet.                    @SC86295\nDSKEOD   LA    15,12         End return code                   @SC86295\n         B     RTRN                                            @SC86295\n*\n* Write to file whose ticket is at (R1)\nDSKWRT   DS    0H\n         LTR   3,1           Get FAB ptr                       @SC86299\n         BNP   RTRN1         Not defined anymore               @SC86299\n         LM    4,5,FDBBUFF   Get buffer and size               @SC86299\n         LR    6,5           Copy for LRECL                    @SC86299\n         CH    6,FDBLRC                                        @SC86299\n         BNH   *+8                                             @SC86299\n         LH    6,FDBLRC      Don't allow more than LRECL if V  @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   6,4(5)        + 4 if RECFM=V                    @SC86299\n         STH   6,FABLRECL    Set up for output                 @SC86299\n         L     15,FABGET     I/O routine                       @SC86299\n         BALR  14,15         Do it                             @SC86299\n         XC    0(4,1),0(1)                                     @SC86299\n         STCM  6,3,0(1)      In case V                         @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   1,4(1)        V: space over SDW                 @SC86299\n         LR    6,1                                             @SC86299\n         LR    7,5                                             @SC86299\n         MVCL  6,4           Copy to output record             @SC86299\n         B     RTRN0                                           @SC86295\n*\nDSKTV    TM    FABRECFM,FABRECU                                @SC86299\n         BNM   4(2)          U                                 @SC86299\n         TM    FABRECFM,FABRECF                                @SC86299\n         BO    4(2)          F                                 @SC86299\n         BR    2             V                                 @SC86299\n* Return on error, release useless block, if any\nDSKER1   LTR   1,4           Any block assigned?               @SC86295\n         BZ    RTRN1         No                                @SC86295\n         LA    0,FABDWDS     Yes, release it                   @SC86295\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         B     RTRN1         Flag error                        @SC86295\n*\nDSKALC   LR    5,1           Save FDB ptr                      @SC86295\n         LA    6,1           Update counter                    @SC86299\n         A     6,EVCTR                                         @SC86299\n         ST    6,EVCTR                                         @SC86299\n         LA    0,FABDWDS                                       @SC86295\n       DMSFREE DWORDS=(0),ERR=DSKER1                           @SC86295\n         LR    3,1           New block ptr                     @SC86295\n         LR    4,1                                             @SC86295\n         L     1,4(13)                                         @SC86295\n         ST    3,20(1)       Return R0                         @SC86295\n         XC    0(8*FABDWDS,3),0(3)                             @SC86295\n         MVC   FDBD(FDBCOP),0(5) Copy user's FDB               @SC86295\n         MVC   FABDSN,0(2)                                     @SC86299\n         LR    15,2          Set up DSN ptr                    @SC86299\n         LA    0,FABDDNAM    Get DDN ptr                       @SC86299\n         LA    1,FDBUNT      Get UNIT ptr                      @SC86299\n         LA    2,FDBVOL      Get VOL ptr                       @SC86299\n         STM   15,2,DYNPL    Set up DYNALC                     @SC86299\n         MVI   FABBUFCB+3,1  Fill out DCB                      @SC86299\n         MVI   FABDSORG,X'40' =PS                              @SC86299\n         MVI   FABIOBAD+3,1                                    @SC86299\n         LA    0,DSKEOD                                        @SC86299\n         LA    1,DSKOPEX                                       @SC86299\n         STM   0,1,FABEODAD                                    @SC86299\n         UNPK  FABDDNAM,EVCTR(5)                               @SC86299\n         TR    FABDDNAM,TRHEX  Get unique DDNAME               @SC86299\n         MVI   FABDDNAM,C'K'                                   @SC86299\n         MVI   FABDDNAM+7,C'Z'                                 @SC86299\n         MVC   FABOFLGS(4),=X'02,00,48,48'                     @SC86299\n         MVI   FABCHECK+3,1                                    @SC86299\n         LA    1,RTRN1                                         @SC86299\n         ST    1,FABSYNAD    In case of error                  @SC86299\n         MVI   FABIOBA+3,1                                     @SC86299\n         MVI   FABEOBAD+3,1                                    GUP1.1\n         MVI   FABRECAD+3,1                                    GUP1.1\n         MVI   FABCNTRL+3,1                                    GUP1.1\n         MVI   FABEOB+3,1                                      @SC86299\nDSKFABS  LH    1,FDBLRC      Copy Info to DCB                  @SC86299\n         CLI   FABDSN,C'+'   Just DDNAME?                      GUP1.1\n         BE    DSKDDA        Yes, copy it to FAB               GUP1.1\n         STH   1,FABLRECL                                      @SC86299\n         MVC   FABBLKSI,FDBBLKSI                               @SC86299\n         MVI   FABRECFM,FABRECU                                @SC86299\n         CLI   FDBRCF,C'U'                                     @SC86299\n         BER   9                                               @SC86299\n         MVI   FABRECFM,FABRECF+FABRECBR                       @SC86299\n         CLI   FDBRCF,C'F'                                     @SC86299\n         BER   9                                               @SC86299\n         MVI   FABRECFM,FABRECV+FABRECBR                       @SC86299\n         LA    1,4(1)        Allow for RDW                     @SC86299\n         STH   1,FABLRECL                                      @SC86299\n         BR    9                                               @SC86299\nDSKDDA   MVC   FABDDNAM,FABDSN+1 Copy to DDNAME                GUP1.1\n         BR    9                                               GUP1.1\n*\n* Call with R15->name, return to R2 with CC set (Z if ok)\nDSKLKP   SR    0,0                                             @SC86299\n         CLI   0(15),C'+'    Just DDNAME?                      GUP1.1\n         BER   2             Yes, say we found it              GUP1.1\n         LA    1,CAMVOLS                                       @SC86299\n         LA    14,X'44'      Name code                         @SC86299\n         SLL   14,24                                           @SC86299\n         STM   14,1,CAMLOC   Save dsn ptr, etc                 @SC86299\n         LA    0,CAMVOLS+6                                     @SC86299\n         LA    1,CAMDSCB                                       @SC86299\n         LA    14,X'C1'      Search code                       @SC86299\n         SLL   14,24                                           @SC86299\n         STM   14,1,CAMOBT                                     @SC86299\n        LOCATE CAMLOC                                          @SC86299\n         LTR   6,15          Retain 1st code in R6             @SC86299\n         BNZR  2             Give up                           @SC86299\n        OBTAIN CAMOBT        Get DSCB                          @SC86299\n         LTR   15,15         Test return code                  @SC86299\n         BR    2                                               @SC86295\n*\nDSKVALS  LA    0,FDBD        Ptr to FDB                        @SC86295\n         L     1,4(13)                                         @SC86295\n         ST    0,24(1)       Return ptr to caller              @SC86295\n         CLI   FABDSN,C'+'   Just DDNAME?                      GUP1.1\n         BER   14            Yes, done: no DSCB                GUP1.1\n         MVC   FDBBLKSI,DS1BLK                                 @SC86299\n         MVC   FDBVOL,DS1VOL Copy volume name                  @SC86299\n         LH    1,DS1BLK      Use BLKSIZE if 'U'                @SC86299\n         MVI   FDBRCF,C'U'                                     @SC86299\n         TM    DS1RCF,FABRECU                                  @SC86299\n         BO    DSKVLR                                          @SC86299\n         LH    1,DS1LRC      Use LRECL if 'F'                  @SC86299\n         MVI   FDBRCF,C'F'                                     @SC86299\n         TM    DS1RCF,FABRECF                                  @SC86299\n         BO    DSKVLR                                          @SC86299\n         MVI   FDBRCF,C'V'                                     @SC86299\n         S     1,F4          Use LRECL-4 if 'V'                @SC86299\nDSKVLR   STH   1,FDBLRC                                        @SC86299\n         BR    14                                              @SC86299\n*\nDSKOPEX  DC    0F'0',X'85',AL3(DSKOPC) OPEN EXIT               @SC86299\n*\nDSKOPC   LR    3,1                                             @SC86299\n         LH    5,FABBLKSI                                      @SC86299\n         LTR   5,5                                             @SC86299\n         BP    *+8                                             @SC86299\n         LH    5,=H'6233'                                      @SC86299\n         LR    6,5                                             @SC86299\n         TM    FABRECFM,FABRECU                                @SC86299\n         BO    DSKOPS                                          @SC86299\n         LH    6,FABLRECL                                      @SC86299\n         BNZ   *+8                                             @SC86299\n         OI    FABRECFM,FABRECF+FABRECBR                       @SC86299\n         LTR   6,6                                             @SC86299\n         BP    DSKOPQ                                          @SC86299\n         LA    6,80                                            @SC86299\n         BAL   2,DSKTV                                         @SC88049\n          LA   6,4(6)        Allow LRECL=84 for VB             @SC88049\nDSKOPQ   TM    FABRECFM,FABRECF                                @SC86299\n         BZ    DSKOPV                                          @SC86299\n         SR    4,4                                             @SC86299\n         DR    4,6                                             @SC86299\n         LTR   5,5                                             @SC88104\n         BP    *+8                                             @SC88104\n         LA    5,1           BLKSIZE was less than LRECL!      @SC88104\n         MR    4,6                                             @SC86299\n         B     DSKOPS                                          @SC86299\nDSKOPV   LA    4,4(6)                                          @SC86299\n         CR    4,5                                             @SC86299\n         BNH   DSKOPS                                          @SC86299\n         LR    5,4                                             @SC86299\nDSKOPS   STH   6,FABLRECL                                      @SC86299\n         STH   5,FABBLKSI                                      @SC86299\n         BR    14                                              @SC86299\n*\nCAMLOC   DS    4F            Ptrs for locating dataset         @SC86299\nCAMOBT   DS    4F            Ptrs for getting DSCB             @SC86299\nCAMVOLS  DS    0D,XL265      Storage for volume list           @SC86299\nCAMDSCB  DS    0F,XL101      Storage for DSCB                  @SC88014\n         ORG   CAMDSCB+1                                       @SC88014\nDS1VOL   DS    CL6,XL2       Volume serial                     @SC86299\nDS1CRDT  DS    2XL3,3X,XL13  Creation date                     @SC86299\nDS1RFDT  DS    XL3,XL4       Reference date                    @SC86299\nDS1DSO   DS    XL2           Dataset org                       @SC86299\nDS1RCF   DS    X             Record format                     @SC86299\nDS1OPT   DS    X             Error option                      @SC86299\nDS1BLK   DS    H             Block size                        @SC86299\nDS1LRC   DS    H             Logical record length             @SC86299\n         ORG   ,                                               @SC86299\nDYNPL    DC    A(0,0,0,0,DYNDSP,0),X'80',AL3(DYNRC)            GUP1.1\nDYNRC    DS    F                                               @SC86299\nDYNDSP   DS    X                                               @SC86299\n         LOCALS ,                                              @SC86295\n         EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTGUPHL": {"ttr": 1540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")F FUNCTION -\n\n  The GUPI command invokes GUPI-TSO, an assembly language program\nwhich performs updates on line-numbered source files using a control\nfile syntax similar to that of IBM's UPDATE program for CMS.  The\nmain difference is that GUPI performs multiple updates in a single\ninvocation by reading all the updates from a single, sequential, input\ncontrol file.\n\n)X SYNTAX -\n         GUPI 'source-dsn' 'update-dsn' 'output-dsn' MARK('mark')\n                   STOR/NOSTOR  SEQ8/NOSEQ8\n   Required - 'source-dsn', 'update-dsn', 'output-dsn'\n   Defaults - STOR, SEQ8\n\n)O OPERANDS -\n))SOURCE-DSN - fully or partially qualified DSN of base file.\n))UPDATE-DSN - fully or partially qualified DSN of update control file.\n))OUTPUT-DSN - fully or partially qualified DSN of output file.\n))STOR - specifies that the update is to be performed in memory.\n))NOSTOR - specifies that the update is to performed disk-to-disk.\n))SEQ8 - specifies that the sequence numbers occupy columns 73-80.\n))NOSEQ8 - specifies that the sequence numbers occupy columns 76-80.\n))MARK - gives the 3-byte string to fill columns 73-75 if NOSEQ8.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IKTKERAN": {"ttr": 1542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Date: Wed, 1988 Mar 16   16:55 EST\nFrom: (John F. Chandler)   PEPMNT@CFAAMP.BITNET\nSubject: Announcing IBM Mainframe MVS/TSO Kermit Version 4.0\nKeywords: IBM 370 Kermit, MVS/TSO Kermit, TSO Kermit\nXref: IBM Mainframe, Also see IBM 370\nXref: MVS/TSO Kermit, Also see MVS/TSO Kermit, IBM 370\n\nThis is to announce TSO Kermit Release 4.0.  The program is now a member\nof the generic family Kermit-370 and appears in the Kermit distribution\nunder a new prefix: all TSO-specific files begin with IKT, while generic\nKermit-370 files begin with IK0 (I K Zero).  Kermit-TSO no longer\nconsists of just two source files.  Instead, the source is split into\nsub-files, some generic and some TSO-specific.  The separate pieces are\nto be recombined into a single composite source (or made into a macro\nlibrary) for installation.  See the file IKTKER.INS for instructions.\nGenerally, the files formerly known as TS*.* will be replaced by the new\nIKTKER.* files.  This TSO Kermit is still in the testing stage, but most\nof the features described in the documentation have already been\nverified.  Any bug reports should be sent to John Chandler\n<PEPMNT@CFAAMP.BITNET>.\n\nBelow is a list of the more important additions in Version 4.0:\n\n    --- generic features (same as announced for CMS last December) ---\n\n1.  Code reorganization into generic 370 and system-specific sections.\n\n2.  Optional separate translation tables for counteracting the system\n    conversion of terminal I/O.\n\n3.  New GIVE command for saving a modified translation table.\n\n4.  A new, RAW debug mode for recording the packet traffic as actually\n    sent and received on \"GRAPHICS\" and \"SERIES1\" devices.\n\n5.  Preservation of the case of commands as typed, with uppercase\n    conversion of only those words that must be uppercase.\n\n6.  New SET MARGIN command for limiting the width of a file to be sent.\n\n7.  Settable tab stops for Kermit's conversion of tabs to spaces\n    (alternative to the default 1, 9, 17, etc.).\n\n8.  Support for multiple terminal controller types.\n\n9.  New DIRECTORY and HOST subcommands following Kermit standard.\n\n10. Combination of file-attribute SET subcommands (FILE-TYPE, LRECL,\n    BLKSIZE, and RECFM) into a new group SET FILE.\n\n11. Separate retry limits for initial and subsequent packet exchanges.\n\n12. Pad binary records on disk with nulls, rather than blanks.\n\n13. Automatically tune packet length when sending long packets according\n    to heuristic optimum based on sparse Poisson statistics, provided\n    that transmission errors do occur.\n\n14. Expand STATUS report to include the number of files in the last\n    transfer, throughput statistics, heuristic optimum packet length\n    (when long packets are enabled), and the reason for any file\n    rejection based on A-packets.\n\n15. New command TDUMP NAMES to display the list of files sent in the\n    last transfer.\n\n16. Send and acknowledge attribute packets.  Add file creation date to\n    A-packet repertoire.\n\n17. REMOTE COPY and REMOTE RENAME commands to a server at the other end.\n\n18. Allow long packets through a 7171 with VTAM.\n\n19. New type D-BINARY for binary files with undelimited variable-length\n    records.\n\n20. SET 8-BIT-QUOTE.  Allow 8-bit data where possible via SET PARITY.\n\n21. SET SYSCMD, so that Kermit can be told to try \"illegal\" subcommands\n    as host system commands instead of just rejecting them.\n\n22. SET PROMPT subcommand.\n\n23. Remember parameters specified by the other Kermit in I-packets.\n\n24. Keep track of truncated records during a RECEIVE operation and\n    report the count in STATUS; also call truncation an error after\n    everything is received.\n\n25. SET HANDSHAKE subcommand to alter or suppress handshake character\n    Kermit-370 sends out after each packet (not available for 3705's).\n\n    --- features new to TSO Kermit ---\n\nSince Version 4.0 is the first release of Kermit-370 for TSO, some of\nthese \"new\" features are actually new only to the Columbia distribution\nfor TSO.\n\n26. Suppression of LINE and CHAR delete functions during protocol mode.\n\n27. Advanced server functions and subcommands for talking to another\n    Kermit running in server mode.\n\n28. Long packet protocol.\n\n29. TYPE, ECHO, XTYPE, and XECHO subcommands (the last two being\n    Series/1 analogs of the first two.)\n\n30. REMOTE KERMIT commands honored by TSO server, including SET, SHOW,\n    TAKE, TDUMP, STATUS, HOST, TSO, CWD, DIR, and TYPE.\n\n31. TEST mode for debugging.\n\n32. Multi-column, two-level, selective SHOW display.\n\n33. Optionally append to, rather than replace, old data sets with\n    duplicate names.\n\n34. Automatic detection of terminal controller type (TTY or SERIES1).\n\n35. SYNADAF message in cases of disk I/O error.\n\n------------------------------\n\nDate: Thu, 1988 Sep 8 23:21 EDT\nFrom: (John F. Chandler) PEPMNT@CFAAMP.BITNET\nSubject: Announcing a Partial Re-release of TSO Kermit\nKeywords: IBM 370 Kermit, 370 Kermit, TSO Kermit, MVS/TSO\n\nThis is to announce a number of modifications to release 4.0 of TSO\nKermit-370.  The most noticeable change is in the installation procedure --\nthe revised IKTKER.INS contains a batch job that can be submitted to install\nKermit from scratch all in one step (after allocating a pair of datasets by\nhand).  One by-product of the new procedure is a version of the update\nutility GUPI-TSO that can be used either interactively or in batch.  There\nis now a HELP file for GUPI.  Numerous bugs in Kermit have been fixed (as\npromised in a recent edition of IKTKER.BWR), and several new features have\nbeen added.  Among them are:\n\n1. A subcommand SET LONGLINE, to select the desired processing of lines\n   received by TSO that exceed the LRECL -- the options are to fold,\n   truncate or simply halt.\n\n2. LRECL is now treated by Kermit exactly the way MVS does -- it must be\n   four greater than the actual data length for RECFM=V files.\n\n3. File allocation error messages are now saved in Kermit and reported\n   as part of the STATUS text.\n\n4. Kermit-370 automatically detects three types of terminal connections\n   and sets CONTROLLER accordingly -- to TTY for line-mode terminals\n   (3705, 3708, etc.), to SERIES1 for terminals hooked through protocol\n   converters of the Yale ASCII family (Series/1, 7171, 4994, etc.), and\n   to GRAPHICS for any other kind of full-screen device.\n\nBy the way, items 1 and 4 will soon be available for CMS as well.\n\nThis revision of Kermit requires not only a fresh copy of IKTKER.UPD, but\nalso replacements for four of the source components: IKTDYN.ASM, IKTGUP.ASM,\nIK0GUP.ASM, and IKTMAC.ASM.  Note: if you try to install Kermit without\nthese new sources, the batch job will issue an error message in the update\nstep.\n\n\u00a2Ed. - Many thanks, John.  The new files have been installed in Kermit\nDistribution, along with a new file, IK0CON.HLP, that describes the\ntechnical aspects of supporting (or adding support for) the various 370\nconsole devices.|\n\n------------------------------\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERBW": {"ttr": 1546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "TSO Kermit 4.0 \"Beware File\" - Known Bugs, Problems, Limitations.\n\nAs of: Sat Nov  5 11:08:45 1988\n\nAll variants of Kermit-370,  including the TSO version, use ASCII/EBCDIC\ntranslation tables which conform to the ones given in the IBM System/370\nReference Summary.  If your site's translation  tables do not agree with\nthe ones Kermit uses,  enter  the appropriate  SET ATOE/ETOA/TATOE/TETOA\ncommands  in  the  SYSTEM  KERMINI  file.   Your  system's  ASCII/EBCDIC\ntranslation  tables need not be mutual inverses,  but if either table is\nnot invertible  at all, then Kermit will not and cannot  work unless you\nchange your system's  table.  See the Kermit-TSO  chapter  in the User's\nGuide for more information.\n\nWhen TSO Kermit  is to be used with a 7171, make sure the 7171 is set up\nwith its \"keyboard lock delay\" set to 0.  Otherwise, the \"terminal\" will\nhang whenever  TSO Kermit clears the screen.   This happens consistently\nwhen  the  parameter  is set to 10, and not at all  when  set to 0.  For\nnumbers in between, the higher the number, the more it happens.\n\n------------------------------------------------------------------------\n\nSome updates  have  been received  since  Kermit-TSO 4.0  was originally\ndesigned.   Any updates created later than your source should be applied\nbefore you make the executable  module.  In general, updates received at\nColumbia  will  not be applied  to the source  files  in the  TSO Kermit\ndistribution  until and unless \"major\" bugs are uncovered,  and then all\naccumulated  updates  will be applied at once.  The description  of each\nproblem  and  a pointer  to its  solution  will  always  be included  in\nIKTKER.BWR  (the present file),  but the  updates themselves  are  to be\nfound in IKTKER.UPD.\n\nRelease 4.0  is still a test release,  and there may be  further \"major\"\nupdates issued before  the sources are changed.   The problems that have\nbeen fixed are too numerous to mention.\n\nThe procedure to update your copy of TSO Kermit is as follows:\n\n1. Obtain  the latest  version  of IKTKER.UPD,  which  contains  all the\n   updates as a composite  file punctuated  by comment lines introducing\n   each update's name and briefly describing  its purpose.   Please note\n   that  some  modes  of file  transport  have  a side effect  of either\n   doubling  or removing any periods in the first column -- if your copy\n   of IKTKER.UPD  has records beginning with \"/\", then all instances  of\n   \"/\" in column 1 should be changed to \"./\".  Similarly,  any instances\n   of \"../\" in columns 1-3 should be changed to just \"./\".\n\n2. Determine  the date of your  sources.   If you received  them from  a\n   secondary supplier,  you  will need  to examine  the source  code  to\n   determine  the most recent  update  applied.   Just sort the combined\n   source by columns  67-71;  the last  line will be  labelled  with the\n   last-applied  update.   Note that  the date of the TSO-specific  code\n   (sections  IKTMAC  and  IKTUTL)  may be different  from  that  of the\n   generic  code,  so you  should  sort  the  two  parts  of the  source\n   separately to determine both dates.\n\n3. Discard all TSO-specific updates through the TSO date and all generic\n   updates  through  the generic  date.   Note  that  each  TSO-specific\n   update  is marked  as such in  its introductory  comment  line (which\n   begins  \"./ *\").   The  updates  are  in chronological  order  within\n   IKTKER.UPD,  so  discarding  updates  can  be done  by a simple  pass\n   through the dataset.\n\n4. Apply the  updates to your  composite source by  running GUPI,  which\n   will  prompt  for the names  of the relevant  files  (these  must  be\n   entered  as fully-qualified  dataset  names)  and for two operational\n   flags.  Both flags should be given default values by entering  just a\n   carriage return to the corresponding prompt.\n\n   The resulting  file, however  you name it, can then be assembled  and\n   tested.   It will be identical  to the current  composite  source  at\n   Columbia (including  updates).   You should not, however, discard the\n   original because the updating process is simplest if you always start\n   from the same base source.\n\n------------------------------------------------------------------------\nDate: Mon, 31 Aug 87 11:09:50 CST\nFrom: Mike Sorsen <SORSEN@WUVMD>\nSubject: 7171 Causes CMS Kermit Problems When Flow Control Used\n\nThere  is a bug in the 7171 that causes  CMS Kermit  file  transfers  to\nabort  in the middle  of a SEND after  a large  number  of retries  when\nXON/XOFF  flow  control  is used by the receiver  or when XON/XOFF  flow\ncontrol is used by hardware  in between the 7171 and the receiver.   The\nsymptom  of this failure  is that CMS Kermit  attempts  to retransmit  a\npacket before other Kermit has responded.\n\nThis bug was observed  using CMS KERMIT 3.1 running under VM/SP 3.1 (PUT\n8409  SLU 311)  through  a 7171 at EC A31864  to MS-DOS  Kermit  version\n2.29b.\n\nThe sequence of events is this:\n\nCMS Kermit  sends a packet using transparent  write/read.   The receiver\n(or other hardware in between the 7171 and the receiver)  sends a pacing\nstop (XOFF)  and then a pacing  start (XON) to the 7171 while the packet\nis being sent by the 7171.  The 7171 performs  the pacing, but then ends\nthe transparent  read prematurely,  returning X'93' (XOFF) to CMS as the\nreply to the packet sent out.  CMS Kermit  rejects  this and retransmits\nthe packet.   The SEND  then breaks  down because  the recieving  Kermit\nusually  starts  transmitting  an ACK to CMS while  the packet  is being\nretransmitted.\n\nCircumvention:\n\nSet  the  7171  flags  so that  XOFF  is not  a valid  termination  of a\ntransparent  read.   See page  4-20  of 'IBM 7171 Reference  Manual  and\nProgramming  Guide',  IBM publication  number GA27-0021.   This has been\ntested at our site and found to circumvent the bug even though the XOFFs\nare  being  transmitted   during  the  transparent  write  part  of  the\ntransparent write/read order and this flag concerns the transparent read\npart of the order.\n\n-------------------------------------------------------------------------\nIt is now possible to issue a subcommand  to TSO Kermit (SET ATTRIB OFF)\nto  suppress  the  exchange  of  attribute  packets.   This  feature  is\nimplemented in SC88071 (see IKTKER.UPD).\n\n-------------------------------------------------------------------------\nKermit-370 now has the feature of leaving protocol mode upon receiving a\n\"packet\" that consists of nothing  but the word STOP.   This  feature is\nimplemented in SC88074 (see IKTKER.UPD).\n\n-------------------------------------------------------------------------\nTSO Kermit, in talking  to another Kermit in server mode, would complain\nif a \"long reply\"  to a server command  began with an X-packet,  even if\nthe current block check type was 1.  Mutually  setting the check to 2 or\n3 would, of course, force the other Kermit to begin long replies with an\nS-packet.  The fix: SC88074 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nUploading  a member of an existing PDS would force the DCB attributes of\nthe PDS to whatever  Kermit-TSO  has  for  FILE  parameters.   The  fix:\nSC88083 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nKermit may hang when entering protocol mode over a protocol emulator  if\nthe screen is already full.  The fix: SC88083 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nHELP could not be invoked  twice within the same Kermit  session.   More\ngenerally,  TSO commands  might leave datasets  marked  \"in use\" so that\nthey were unavailable  for further  processing.   The fix: SC88087  (see\nIKTKER.UPD).\n\n------------------------------------------------------------------------\nThe DIR subcommand  could not be interrupted.   The same was true of any\nTSO command  invoked  from Kermit which didn't issue a STAX.  If you hit\nBREAK enough times, though, you could get back to the TMP.\n\n-------------------------------------------------------------------------\nTSO Kermit would perform the file name collision  procedure whenever the\nuser issued  a RECEIVE  subcommand  with a file name specified,  even if\nWARN  was set OFF (the  WARN  setting  was, however,  honored  for names\nobtained from the other Kermit).  The fix: SC88089 (see IKTKER.UPD).\n\n-------------------------------------------------------------------------\nTSO Kermit would ABEND while trying to upload a file if the BLKSIZE  was\nlarger  than  the  track  size  of the  disk.   The  fix:  SC88090  (see\nIKTKER.UPD).\n\n-------------------------------------------------------------------------\nTSO Kermit would not treat a NAK for packet n+1 as an ACK for packet  n.\nInstead,  it would retransmit  packet  n until and unless  the receiving\nKermit sent an explicit ACK.  The fix: SC88092 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nTSO Kermit now allows the user to define a logical  line delimiter  (via\nthe SET DELIM command)  that applies  to all subsequent  input  from the\nterminal  (including  stacked input from CLIST's, etc.) Also, the former\nhazard  of 0C4 ABEND from using a CLIST to stack Kermit subcommands  has\nbeen removed.  The fix: SC88095 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nTSO Kermit now allows a freer wildcard  notation  for SEND.  An asterisk\nmay now stand for any string  of zero or more characters  in either  the\ndataset name (for non-partitioned  datasets) or member name (for PDS's).\nThe fix: SC88096 (see IKTKER.UPD).\n\n-------------------------------------------------------------------------\nTSO Kermit  would often fail to return  the output from a REMOTE command\nwhile in server mode.  The fixes: SC88100 and SC88106 (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nTSO Kermit now allows TAKE files with imbedded  sequence  numbers.   Any\nnumeric  field in the last 8 columns of a TAKE file (if FB, or the first\n8 if VB) is ignored.  The fix: SC88101 (see IKTKER.UPD).\n\n-------------------------------------------------------------------------\nThere  are rumors  that this version  won't  work for TTY lines  through\nVTAM.  If this is true, a temporary  workaround  might be to issue a SET\nCON FULL by hand (or that might not work either).  In any case, if there\nis any truth to the rumors, I'd like to hear the details, and I have two\npossible fixes ready, just in case.\n\n------------------------------------------------------------------------\nIf you invoke a non-existant  TSO command  from Kermit,  there will be a\nsub-task  ABEND  and a READY message.   Just type a carriage  return  to\nresume Kermit operation.\n\n------------------------------------------------------------------------\nApplying  update  SC88106  had  a serious  side-effect:  issuing  a SEND\nsubcommand  without the wildcard  notation  would result in sending  the\nspecified file repeatedly.  The fix: SC88106X (see IKTKER.UPD).\n\n------------------------------------------------------------------------\nSome terminal emulators attached through VTAM apparently do not respond\ncorrectly without an explicit command to \"unlock the keyboard\" as part\nof the transparent I/O request.  In particular, this behavior has been\nseen with a PCI 276.  The following update appears to correct the\nproblem.\n\n./ * LP88187 - Unlock keybrd for S/1 xparent mode (TSO)\n./ R 01158000          $ 1158000 500                  07/06/88 10:39:35\n&S1CMD   SETC  'F1C2'        S/1 command prefix                @LP88187\n\n------------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERDO": {"ttr": 1551, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n\n\n1. IBM MVS/TSO KERMIT\n\nProgram:      John Chandler (Harvard/Smithsonian Center for Astrophysics); con-\n              tributions from Vace Kundakci and Daphne Tzoar (Columbia U),  Bob\n              Shields  (U.  Maryland),  Victor Lee (Queens U.), Gary Bjerke (U.\n              Texas  at  Austin),  Greg  Small  (UC  Berkeley),  Clark  Frazier\n              (Harvard  Bus. Sch.), Bob Bolch and Steve Blankinship (Triangle),\n              Ron Rusnak (U. Chicago), Roger Fajman and Dale White (NIH), Andre\n              Pirard (U. Liege)\nLanguage:     IBM/370 Assembler\nDocumentation:\n              John Chandler (CfA)\nVersion:      4.0 (88/1/31)\nDate:         1988 February\n\n\nKermit-TSO Capabilities At A Glance:\n\n  Local operation:                   No\n  Remote operation:                  Yes\n  Transfers text files:              Yes\n  Transfers binary files:            Yes\n  Wildcard send:                     Yes\n  \u00acX/\u00acZ interruption:                Yes (through micro)\n  Filename collision avoidance:      Yes\n  Can time out:                      Yes\n  8th-bit prefixing:                 Yes\n  Repeat count prefixing:            Yes\n  Alternate block checks:            Yes\n  Terminal emulation:                No\n  Communication settings:            No\n  Transmit BREAK:                    No\n  Transaction logging:               Yes\n  Session logging:                   No\n  Raw transmit:                      Yes (no prompts)\n  Sliding window:                    No\n  Long packets:                      Yes\n  Act as server:                     Yes\n  Talk to server:                    Yes\n  Advanced server functions:         Yes\n  Advanced commands for servers:     Yes\n  Local file management:             Yes\n  Handle Attribute Packets:          Yes\n  Command/init files:                Yes\n  Command macros:                    No\n\nKermit-TSO is a member of the generic Kermit-370 family and shares most of  the\nfeatures and capabilities of the group.  As its name implies, Kermit-TSO is the\nversion of Kermit-370 that runs  under  the  MVS/TSO  operating  system.    The\nprimary  documentation  for  Kermit-TSO  is actually the chapter on Kermit-370,\nwhich describes general properties; the present chapter assumes the  reader  is\nfamiliar  with  that material.  Only the details specific to TSO operation will\nbe discussed here, e.g., command syntax relating to the TSO file system or com-\nmands not offered in general by Kermit-370.\n\n\nTSO Specifics of Kermit-370:\n\n  Global INIT file:                  'SYS1.KERMINI'\n  User INIT file:                    KERMINI\n  Debug packet log:                  KER.LOG\n  Server reply log:                  KER.REPLY\n  Maximum packet size:               1913\n  Maximum disk LRECL:                32756\n\n\n1.1. The MVS/TSO File System\n\nThe  features  of  the TSO file system of greatest interest to Kermit users are\nthe format of file specifications (filespecs) and the concept of records.   The\nlatter is described in the Kermit-370 chapter.\n\nThe MVS/TSO filespec (called the data set name or DSN) takes the form of tokens\n(known as qualifiers) of up to 8 alphanumeric  characters  each,  separated  by\nperiods.    Each qualifier must begin with an alphabetic or national character.\nThe total length must be no more than 44 characters, including periods.  To  be\nprecise,  a  DSN may contain uppercase letters, digits, and the special charac-\nters \"$\" (dollar sign), \"#\" (pound sign), \"@\" (at sign), and  \"-\"  (hyphen)  in\naddition to the separating periods.  Other characters may be not be included.\n\nThere  is  another, structural restriction on data set names from the fact that\nTSO data sets are all cataloged.  In a standard MVS catalog, each qualifier  of\neach  DSN is associated with an index of the same name.  The index is a hierar-\nchical catalog component which points downward either to a list  of  next-level\nindices  or to a data set, but never to both.  Consequently, a cataloged DSN is\na chain of indices corresponding one-for-one with DSN qualifers, and  the  last\nindex  is  a  pointer  to the data set itself.  While there may be many indices\nwith the same name, no two such duplicates may both  be  chained  to  the  same\nnext-higher-level  index,  so  that,  if  DSN's  are  considered  as strings of\nqualifiers (not of characters), no DSN can be a major substring of  any  other.\nFor  example,  if  the  name  'A.BB.C'  exists  in the catalog, then 'A.BB' and\n'A.BB.C.X' are illegal, but 'A.B', 'A.BB.Y', 'A.BBB',  and  'A.BB.BB'  are  all\nlegal.\n\nA  DSN  given  in  its entirety (as in the foregoing examples) is called \"fully\nqualified\" and must be enclosed in single quotes when entered in TSO.  However,\nby  convention (and by definition) the first qualifier of each data set belong-\ning to a given user must be the user's logon ID, and, by default,  that  ID  is\nthe  assumed  prefix in TSO when a DSN is not enclosed in quotes.  In practice,\nthen, names are abbreviated by omitting the quotes and the prefix.    The  most\ncommon  type  of name, in fact, consists of the prefix plus two more qualifiers\ngiving the data set's name and type, respectively,  so  that  many  files  have\nDSN's  that  correspond  exactly  to  the  canonical Kermit representation of a\nfilespec.  For instance, TEST.FORT is the source of  a  Fortran  program  named\nTEST, and its fully qualified DSN would be '<userid>.TEST.FORT', where <userid>\nis the owner's logon ID.\n\nWhile this description is complete as far as it goes,  it  omits  an  important\nfeature  that is widely used in organizing files under MVS and TSO, namely, the\npartitioned data set (PDS).  A PDS is a data set like any other, except that it\nhas  members,  each of which can usually be treated as a file in its own right.\nIn fact, with QSAM (the file access method employed by Kermit  and  many  other\napplications),  only  members,  and  not the whole PDS, may be read or written.\nThus, the term \"file\", as used in this chapter and the Kermit-370 chapter,  may\nrefer  to  either  a PDS member or an ordinary data set, but not to a PDS.  The\nnotation for a PDS member consists of the member name enclosed  in  parentheses\nand  appended  to the DSN (and the whole enclosed in quotes if the DSN is fully\nqualified).  For example, if the Fortran program TEST were copied  into  a  PDS\ncalled DEBUG.FORT, it would then be known as\n\n    DEBUG.FORT(TEST)\n\nAlthough the member name is written together with the DSN, it and the surround-\ning parentheses are not really part of the DSN and are not counted  toward  the\n44-character  limit.   Still, a member name must conform to the rules for a DSN\nqualifier and, in addition, must not contain any hyphens.\n\nAll these properties of DSN's come into play when a file is being  received  by\nKermit-TSO because a valid DSN must be generated for the new data set.  For ex-\nample, any invalid character in the supplied filespec is replaced  by  a  pound\nsign  (or  converted  to  uppercase  if  it is a lowercase letter).  Also, each\nqualifier (and the member name, if any) is prefixed with a  pound  sign  if  it\ndoes  not already begin with an alphabetic or national character and then shor-\ntened, if necessary,  to  eight  characters.    If  no  filespec  is  supplied,\nKermit-TSO  creates  a  default DSN of \"$.$\".  The DSN is expanded to its fully\nqualified form and then truncated at 44 characters, if need be.\n\nThe DSN prefix, which defaults to the user's logon ID, is similar to  a  device\nspecification on microcomputer systems: it selects an area of disk storage, and\nit usually need not be specified.  In some ways, the prefix is also like a disk\ndirectory  designator,  since  the  file system structure is hierarchical.  For\nthis reason, the Kermit concept of the \"working directory\" is  equated  with  a\nparticular DSN prefix under Kermit-TSO.  The current \"working directory\" is the\ncollection of all data sets whose names begin with the current prefix, and file\ntransfers take place preferentially to and from that area (i.e., unless a fully\nqualified DSN is given).\n\nTo provide compatibility with other operating systems, when Kermit-TSO sends  a\nfile,  it  ordinarily  makes a file header with only the last two qualifiers of\nthe full DSN (or only the member name in the case of a PDS  member).    On  the\nother  hand,  extra  information may be added by way of the SET FOREIGN subcom-\nmand.\n\nKermit-TSO allows a group of files to be specified in a single filespec by  in-\ncluding  the  special  \"wildcard\"  character  \"*\",  which matches any string of\ncharacters (even a null string) starting at a new DSN qualifier.   Only  one  *\nmay  be used in a filespec.  Also, the * may not be used for the member name of\na PDS (nor for any part of a PDS name).  Here are some examples:\n\n  *.COBOL   All files of type COBOL (all COBOL source  files)  in  the  current\n            working directory.\n\n  BATCH*H.FORT\n            All files in the current directory which begin with  the  qualifier\n            BATCH   and  which  end  with  H.FORT.    This  would  not  include\n            BATCH.FORT, however.\n\nTSO files, like those in other IBM 370 systems, are  record-oriented  (see  the\nintroduction  to the Kermit-370 chapter).  In particular, TSO files are charac-\nterized by record format (RECFM), which may be fixed-length, varying-length, or\nundefined-length;  by  maximum record length (LRECL); and by maximum block size\n(BLKSIZE).  Fixed-length and varying-length may be (and, under  Kermit,  always\nare)  combined  into  blocks, but undefined-length records may not.  Indeed, by\nconvention, they have no logical record length,  only  a  maximum  block  size.\nRecords  in TSO files may be up to 32760 bytes long, but varying-length records\nuse four bytes to specify the length and have an effective limit of 32756.\n\nAnother file system feature of occasional interest is the  means  of  reporting\nerrors.  When Kermit-TSO encounters a disk error, it attempts to prepare an ex-\nplanatory message for inclusion in the STATUS report.  The  primary  method  is\nthe standard SYNADAF macro.\n\n\n1.2. Program Operation\n\nAt  startup time, Kermit-TSO looks for two initialization files, 'SYS1.KERMINI'\nand '<userid>.KERMINI' (where, as before, <userid> is  the  user's  logon  ID).\nThe  latter  file would also be known as just KERMINI.  The file 'SYS1.KERMINI'\nwould be maintained by a systems programmer, but KERMINI would be maintained by\nthe user.\n\nTwo parameters in the user's profile (the character delete and line delete) are\ndisabled during protocol mode (and restored afterwards) to prevent any conflict\nin  case either of these characters has been defined to be printable.  The set-\ntings in effect when Kermit starts up are saved as a sort  of  \"normal\"  status\nsnapshot  (as  opposed  to the \"protocol\" status just described).  The protocol\nstatus is selected whenever Kermit enters protocol mode, and the normal  status\nis  selected  when Kermit leaves protocol mode.  Note: if Kermit is interrupted\nin the midst of a transfer or while in server mode, these  parameters  will  be\nleft with peculiar settings (namely, the protocol status), and they may need to\nbe restored by hand.\n\nAlthough TSO does not allow an application program to take control of  terminal\nsynchronization  on  \"TTY\"  lines, the various full-screen emulation front ends\nare quite a different matter.  The standard IBM handshake (XON) is unnecessary,\nfor  example,  with  a 7171 or 4994 because the front end itself turns the line\naround with essentially no delay in transparent mode.  Thus, handshaking should\nbe suppressed for \"SERIES1\" devices (the micro Kermit should have HANDSHAKE set\nOFF, and Kermit-TSO should have  HANDSHAKE  set  to  0).    Since  the  generic\nKermit-370  default  handshake  (XON) is retained in Kermit-TSO, the subcommand\n\"SET HANDSHAKE 0\" is a good candidate for inclusion the  KERMINI  file  of  any\nuser who habitually uses \"SERIES1\" lines.\n\n\nInteractive Operation:\n\nTo  run Kermit-TSO interactively, invoke the program from TSO by typing KERMIT.\nWhen you see the prompt,\n\n    Kermit-TSO>\n\nyou may type a Kermit subcommand.  When the subcommand completes, Kermit issues\nanother  prompt.    The cycle repeats until you exit from the program.  For ex-\nample:\n\n    KERMIT\n\n    Kermit-TSO Version 4.0 (88/1/31)\n    Enter ? for a list of valid commands\n\n    Kermit-TSO>send foo.*\n\n      Files beginning with FOO are sent\n\n    Kermit-TSO>receive test.spss\n\n      File is received and called TEST.SPSS\n\n    Kermit-TSO>exit\n\n\nCommand Line Invocation:\n\nKermit-TSO may also be invoked with command line arguments from TSO.   The  ar-\nguments  are interpreted as a subcommand to be executed by Kermit after comple-\ntion of the initialization.  For instance:\n\n    KERMIT send test.fort\n\nKermit will exit and return to TSO after completing the specified subcommand.\n\n\nCLIST Operation:\n\nLike other TSO programs, Kermit-TSO may be invoked from a CLIST.    Subcommands\ncan  be  passed to Kermit using the program input stack and/or command line ar-\nguments.  For example, to start up Kermit-TSO and have it act as a server,  in-\nclude the line:\n\n    KERMIT server\n\nTo  pass  more  than one subcommand, they must be stacked in the order in which\nthey are to be executed.  To start up a Kermit-TSO server with a three  charac-\nter CRC, create and stack a file with the following:\n\n    set block 3\n    server\n\nand  then  invoke  Kermit.    Like  many  utility programs, Kermit-TSO uses the\nGETLINE/PUTLINE service routines for terminal I/O,  and  the  nominally  inter-\nactive  subcommands can thus be supplied under program control.  Another way of\nsetting up multiple subcommands would be to collect the subcommands into a TAKE\nfile  and  then  issue  the  TAKE  subcommand via the command line.  Of course,\nCLIST's may be executed from Kermit, either directly or from a TAKE  file,  and\nCLIST's  in turn may freely issue Kermit subcommands.  The subcommand KERMIT is\nespecially useful in this context for distinguishing  Kermit  subcommands  from\nTSO commands.\n\n\nServer mode:\n\nCommand  execution  in server mode is different in several respects from normal\noperation.  First of all, some Kermit subcommands are not allowed (see the list\nof  subcommands  in  the  Kermit-370 chapter).  Moreover, command errors always\nterminate any active TAKE file.  Also, commands run in  a  special  environment\nwith  the User Profile temporarily modified.  Another difference is that Kermit\nintercepts terminal I/O as much as possible and transmits the data to the local\nKermit as text packets.  The problem with this redirection is that some MVS/TSO\ncommands issue terminal I/O directly, so that some messages never appear to the\nlocal Kermit (except, perhaps, as bad packets).\n\n\n1.3. Kermit-TSO Subcommands\n\nKermit-TSO  supports all the subcommands described in the corresponding section\nof the Kermit-370 chapter.  In addition, there is the  system-specific  subcom-\nmand  TSO, which is just a synonym for the generic HOST subcommand.  TSO can be\nissued as a remote Kermit command when Kermit-TSO is in server mode.  Also, the\nEND subcommand is available as a synonym for EXIT and QUIT.\n\nThe remainder of this section concentrates on the subcommands that have special\nform or meaning for Kermit-TSO.  See also the chapter on Kermit-370 for further\ndetails.\n\n\n                              THE SEND SUBCOMMAND\n\nSyntax: SEND filespec \u00a2foreign-filespec|\n\nThe SEND subcommand causes a file or file group to be sent from TSO to the Ker-\nmit on the other system.  DSN prefixing is done on the filespec  in  the  usual\nway (see also the CWD subcommand).\n\nfilespec  may contain a wildcard \"*\".  If it does, then all matching files will\nbe sent, up to 711 files in all.\n\nThe foreign-filespec, if any, is used for the file header of the outgoing file,\nreplacing  the  usual  name.type  derived from the MVS/TSO filespec.  Normally,\nthis form of the SEND subcommand is used only  for  single  files  because  the\nforeign-filespec  is  used only for the first file of a group (subsequent files\nhaving default headers).\n\nAlthough the file transfer cannot be cancelled from the TSO side, Kermit-TSO is\ncapable of responding to \"cancel file\" or \"cancel batch\" signals from the local\nKermit; these are typically entered by typing Control-X or  Control-Z,  respec-\ntively.\n\n\n                            THE RECEIVE SUBCOMMAND\n\nSyntax: RECEIVE \u00a2filespec|\n\nThe  RECEIVE  subcommand  tells Kermit to receive a file or file group from the\nother system.  You should then issue a SEND subcommand to the other Kermit.\n\nA filespec in the subcommand indicates what name the incoming  file  should  be\ngiven.  Wildcards may not be used.  If the filespec is invalid, Kermit-TSO will\nsuppress the transfer.  If the optional filespec is omitted (and, in any  case,\nfor  all  files  after  the  first  in a group) Kermit-TSO will use the name(s)\nprovided by the other Kermit.  If a name is not a legal  DSN,  Kermit-TSO  will\ndelete  excess characters, change illegal characters to pound signs, and so on,\nto create a legal name.\n\nWhen the record format is \"F\", any received  record  longer  than  the  logical\nrecord  length  (LRECL)  will be truncated, and shorter records will be padded.\nThe padding character is a blank for text files and a null  for  binary  files.\nReceived  binary  (but  not  V-binary  or  D-binary)  files are treated as byte\nstreams and broken up into records all of the logical record length.   See  the\nSET  FILE  TYPE,  SET  FILE LRECL, SET FILE BLKSIZE, and SET FILE RECFM subcom-\nmands.\n\nIf an error occurs during the file  transfer,  as  much  of  the  file  as  was\nreceived  is  saved on disk.  If the sending of a file is cancelled by the user\nof the foreign system, Kermit-TSO will discard whatever had arrived, unless AP-\nPEND is ON or INCOMPLETE is KEEP.\n\nIf  the  incoming file has the same name as an existing file (either a data set\nor a PDS member), and WARNING is OFF, the original file  will  be  overwritten.\nIf WARNING is set ON, however, Kermit-TSO will protect the existing file in one\nof two ways.  If the filespec was entered  with  the  subcommand,  Kermit  will\nprompt  the  user  for  permission to overwrite the file.  If the filespec came\nfrom the foreign Kermit, Kermit-TSO will change the incoming name so as not  to\nobliterate the pre-existing file.  It attempts to find a unique name by succes-\nsively modifying the original and checking for the existence of such a file  at\neach  step.  The procedure operates on the second qualifier of the full DSN (or\nthe member name in the case of a PDS member) and begins  by  truncating  it  to\nseven  characters,  if necessary, and then appends \"0\".  If a file by that name\nexists, Kermit then replaces the \"0\" with a \"1\".  It continues in  this  manner\nup to \"9\", and if an unused name cannot be found, the transfer fails.\n\n\n                              THE SET SUBCOMMAND\n\nSyntax: SET parameter \u00a2value|\n\nThe  SET subcommand establishes or modifies various parameters controlling file\ntransfers.  The following SET parameters are available in Kermit-TSO,  but  not\nin Kermit-370 in general:\nFILE\n  BLKSIZE           Block size for incoming file.\n  LRECL             Logical Record length for incoming file.\n  RECFM             Record format for incoming files.\n  SPACE             Allocation unit (in tracks) for incoming files.\n  UNIT              Device type for incoming files.\n  VOLUME            Disk pack for incoming files.\nPREFIX              Default disk area.\nTIMER               Determine whether Kermit-TSO should time out.\n\n\nSET FILE BLKSIZE\n\nSyntax: SET FILE BLKSIZE number\n\nThis  sets  the  block size for incoming files to a number from 1 to 32760.  In\nthe case of fixed-format files, this number is just an upper bound; the  actual\nblock  size  is  taken  to  be the largest multiple of the LRECL which does not\nexceed this limit.  The default is 6233.\n\n\nSET FILE LRECL\n\nSyntax: SET FILE LRECL number\n\nThis sets the effective logical record length for incoming files  to  a  number\nfrom 1 to 32756.  This parameter is not used for files of undefined record for-\nmat.  Moreover, it is not exactly the same as the MVS/TSO LRECL, which is  four\nmore  than  the  actual  maximum  data  length for varying-length records.  The\ndefault is 80.\n\n\nSET FILE RECFM\n\nSyntax: SET FILE RECFM option\n\nThis sets the record format to use for  incoming  files.    Valid  options  are\n\"Fixed\",  \"Varying\"  (the  default),  and  \"Undefined\".  This parameter is thus\nlimited to a subset of the range of possibilities for the MVS/TSO  RECFM.    In\nKermit-TSO,  all  incoming  files  of fixed or varying format are automatically\nblocked according to the current block size.  Fixed-format records  are  padded\nor truncated, as needed, to the current LRECL.\n\n\nSET FILE SPACE\n\nSyntax: SET FILE SPACE number\n\nThis  sets  the  track allocation unit for incoming files to a number from 1 to\n32760.  The default is 5.  Since data sets are allowed as many as  15  extents,\nthis default provides for files up to 75 tracks.\n\n\nSET FILE UNIT\n\nSyntax: SET FILE UNIT type\n\nThis  sets  the  device  type  or  group for incoming files.  Valid options are\ninstallation-dependent.  The default is SYSDA, which is universally  available,\nbut  not necessarily desirable, since many installations restrict TSO data sets\nto a particular set of disk volumes.  In such cases, there is  usually  a  unit\nname  which  refers  only  to  those  TSO  volumes,  and  the  global INIT file\n'SYS1.KERMINI' should set the file unit parameter to that name.\n\n\nSET FILE VOLUME\n\nSyntax: SET FILE VOLUME name\n\nThis  sets  the  disk  volume  for  incoming   files.      Valid   namess   are\ninstallation-dependent,  but  are,  in  any case, no more than six alphanumeric\ncharacters.  The default is blank (none); in that case, the system chooses  one\nof the available volumes of the specified UNIT type.\n\n\nSET PREFIX\n\nSyntax: SET PREFIX \u00a2string|\n\nThis subcommand is equivalent to the CWD subcommand (q.v.).\n\n\nSET TIMER\n\nSyntax: SET TIMER ON or OFF\n\nThis specifies whether Kermit-TSO is to maintain a timer for each packet it ex-\npects to read.  The default is ON.  If the timer is enabled,  its  duration  is\nset  by the SET SEND TIMEOUT subcommand initially and then set according to the\nrequest of the other Kermit.\n\n\n                              THE CWD SUBCOMMAND\n\nSyntax: CWD \u00a2string or PDSname()|\n\nThe CWD (Change Working Directory) subcommand establishes  a  new  default  DSN\nprefix  or turns prefixing off.  This facility is similar to, but not quite the\nsame as, the prefix defined in the User Profile.   The  string,  if  specified,\nmust  consist  of  one or more DSN qualifiers, and the first must already be an\nindex in the disk catalog.  Subsequent file transfers take place  to  and  from\nthe  corresponding  disk  area  whenever a fully qualified DSN (one enclosed in\nquotes) is not given.  The initial prefix is the user's  logon  ID,  i.e.,  the\nsame  as the default prefix in the User Profile.  If no prefix is given in this\nsubcommand, then prefixing is no longer performed.  The user must be careful to\nremember  the  distinction  between  the prefix defined for Kermit and that for\nTSO.  Pure Kermit subcommands (like SEND and TAKE) always use the  former,  but\nTSO commands (and the TSO-related subcommand TYPE) use the latter.\n\nAn  alternative  form  of  the  CWD  subcommand allows specifying the full (but\nunquoted) name of a PDS followed by paired parentheses.  When such  a  \"working\ndirectory\"  is  in use, a filespec other than a fully qualified DSN is taken to\nbe a member name within the PDS.  For that reason, this  form  should  be  used\ncautiously,  since the Kermit-TSO log filespecs (such as KER.LOG and KER.REPLY)\nwould be treated the same way.  In particular, it is advisable to turn on debug\nmode  only  when  the Kermit prefix is a partially qualified DSN (once started,\nthe log continues to the same data  set  regardless  of  what  happens  to  the\nprefix).\n\n\n                           THE DIRECTORY SUBCOMMAND\n\nSyntax: DIRECTORY \u00a2filespec|\n\nThe  DIRECTORY  subcommand  uses the TSO LISTCAT command to display part of the\ndata set catalog, i.e., all data sets whose names begin with the qualifiers  in\nthe Kermit prefix (if any) concatenated with the given filespec (if any).\n\n\n                              THE TSO SUBCOMMAND\n\nSyntax: TSO text of command\n\nAlthough  Kermit-TSO does not have a full set of its own subcommands for manag-\ning TSO files, it provides those services through the operating  system.    You\ncan  issue  any  TSO command, e.g., to list, type, rename or delete files, send\nmessages, and so on.  The TSO subcommand under Kermit is  synonymous  with  the\nHOST subcommand.\n\n\n1.4. How to build an executable version of Kermit-TSO\n\nBefore  attempting  to  build Kermit-TSO, look in the Kermit distribution under\nboth IK0KER and IKTKER for an installation document, as well as \"beware\", help,\nand  update files, and read them first.  They will probably contain information\nthat is more current than what you see here.\n\nKermit-TSO consists at present of a large assembly (KERMIT.ASM, containing  the\nKermit  program)  and  a small one (DYNALC.ASM, containing a subroutine for al-\nlocating data sets).  Although DYNALC is a single file in the Kermit  distribu-\ntion,  the  source  for  Kermit  itself  is  in  many  pieces, some generic for\nKermit-370 and some specific to TSO.  All the necessary pieces are sequenced in\ncolumns  73-80 so that the numbers form a strictly increasing sequence when the\npieces are correctly \"pasted\" together.    It  is  important  to  preserve  the\noriginal  sequence  numbers  so  that  updates,  if  any, can be applied to the\nsource.\n\nTo create a runnable version:\n\n   1. Combine the following \"ASM\" files from the Kermit distribution  into\n      a  single file with RECFM=F(B) and LRECL=80: IK0DOC, IK0MAC, IKTMAC,\n      IK0DEF, IK0MAI, IK0CMD, IK0COM, IKTUTL, and IK0PRO.   The  resulting\n      file  is  the  composite  source  for Kermit-TSO, called KERMIT.ASM.\n      This source must retain the original  sequence  numbers  in  columns\n      73-80 (in other words, be sure not to resequence the source acciden-\n      tally by using the editor!)\n\n   2. Copy or rename IKTDYN.ASM from the Kermit  distribution  to  a  file\n      called DYNALC.ASM with RECFM=F(B) and LRECL=80.\n\n   3. Assemble the source file(s).\n\n   4. Create  the  executable load module KERMIT using the linkage editor.\n      Kermit is designed to run as a command processor, and so it must  be\n      placed  in  SYS1.CMDLIB or in a PDS concatenated to SYS1.CMDLIB (for\n      example, via the STEPLIB command).\n\n   5. If your site's ASCII/EBCDIC translation table for TTY lines does not\n      conform to the one listed in the appendix (which in turn conforms to\n      the one given in the IBM System/370 Reference Summary),  then  enter\n      the   appropriate   SET   ATOE/ETOA/TATOE/TETOA   subcommands   into\n      'SYS1.KERMINI'.  NOTE: If the ASCII/EBCDIC translation is not inver-\n      tible, Kermit will not and cannot work.\n\nIn order to verify the operation of a new version of Kermit-TSO, you may run it\nunder TEST using the CP parameter.\n\n\n1.5. What's New\n\nBelow is a list of the more important features in  Version  4.0  of  Kermit-TSO\nadded  since  the  release  of  TSO/3708 in May 1987.  Since Version 4.0 is the\nfirst release of Kermit-370 for TSO, some of the \"new\"  features  are  actually\nnew only to the Columbia TSO distribution.\n\n   1. Suppression of LINE and CHAR delete functions during protocol mode.\n\n   2. Advanced  server  functions  and  subcommands for talking to another\n      Kermit running in server mode.\n\n   3. Long packet protocol.\n\n   4. TYPE, ECHO,  XTYPE,  and  XECHO  subcommands  (the  last  two  being\n      Series/1 analogs of the first two.)\n\n   5. REMOTE  KERMIT  commands honored by TSO server, including SET, SHOW,\n      TAKE, TDUMP, STATUS, HOST, TSO, CWD, DIR, and TYPE.\n\n   6. TEST mode for debugging.\n\n   7. Multi-column, two-level, selective SHOW display.\n\n   8. Send and acknowledge attribute packets.\n\n   9. Optionally append to, rather than replace, old data sets with dupli-\n      cate names.\n\n  10. Automatic detection of terminal controller type (TTY or SERIES1).\n\n  11. SYNADAF message in cases of disk I/O error.\n\n\n1.6. What's Missing\n\nWork  on  Kermit-TSO will continue.  Features that need to be improved or added\ninclude:\n\n   - Detect file properties from Attribute packets  and  allow  overriding\n     current parameter settings.  Also implement file archiving.\n\n   - Add a SET REPEAT subcommand.\n\n   - Finish  SET  LINE,  so that Kermit-TSO can be used as a local Kermit,\n     connecting to a remote host over  an  alternate  communication  port.\n     Add a CONNECT subcommand.\n\n   - Compute file size for outgoing A-packets and implement the SPACE sub-\n     command.\n\n   - Reject files known (via  A-packets)  to  be  too  big  for  available\n     storage.\n\n   - Intercept all terminal output during protocol mode.\n\n   - Allow wildcard notation for PDS members.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERHL": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")F FUNCTION -\n\n  The KERMIT command invokes Kermit-TSO, an assembly language program\nwhich implements the Kermit file transfer protocol on IBM System/370\nand XA mainframe computers and compatibles running the MVS (Multiple\nVirtual Storage) operating system with the TSO (Time Sharing Option)\nsubsystem.  Kermit-TSO supports file transfer in both line-mode and\nfull-screen operation.\n\n  Line-mode supports asynchronous  half-duplex ASCII communications\nthrough 3705/3725 or equivalent front ends, while full-screen supports\nasynchronous full-duplex ASCII communications through the IBM Series/1\nrunning the Yale ASCII Communications System (or equivalent) or various\nother converters with graphics throughput option. See the SET CONTROLLER\nsubcommand for further details.\n\n)X SYNTAX -\n         KERMIT\n\n   Required - None\n   Defaults - None\n   Note     - The Kermit \"?\" help feature is available when entering\n              Kermit-TSO subcommands.  A subcommand followed by a space\n              and a question mark and entered with a carriage return\n              will display a brief description of what is expected or\n              possible at that point.\n\n            - When connecting in line-mode, several flags must first be\n              set on the local Kermit.  The following are the defaults\n              and other possibilities for those values:\n\n              Baud             whatever the site supports\n              Data bits        7\n              Flow-control     None\n              Handshake        XON \u00a6 None\n              Local-echo       on (half-duplex)\n              Parity           even \u00a6 mark \u00a6 odd\n\n            - When connecting in full-screen, several flags must first\n              be set on the local Kermit.  The following are the\n              defaults and other possibilities for those values:\n\n              Baud             whatever the site supports\n              Data bits        7 \u00a6 8\n              Flow-control     XON/XOFF \u00a6 None\n              Handshake        None\n              Local-echo       off (full-duplex)\n              Parity           even \u00a6 mark \u00a6 odd \u00a6 none\n\n            - When sending files to Kermit-TSO, any record longer than\n              the logical record length (LRECL) will be truncated to\n              that value.  If the record format is fixed (RECFM=F), any\n              shorter records will be padded to LRECL.  If the record\n              format is variable or undefined (RECFM=V or RECFM=U), the\n              block length can be as high as 32760, provided the disk\n              device tracksize is not exceeded.\n\n            - When sending files to Kermit-TSO, the local Kermit must\n              use a carriage return as the end-of-line (EOL) character.\n\n            - This version of Kermit-TSO does not support timeouts for\n              other than line-mode terminals.  Therefore, the user\n              should press the carriage return key on the microcomputer\n              after long periods of update inactivity during file\n              transfer, or rely on the timeout facility of the local\n              Kermit, if supported, to avoid indefinite delays.\n\n)O OPERANDS -\n         None\n\n)S SUBCOMMANDS -\n\n         BYE       - logs out other Kermit server.\n         CWd       - establishes a new working directory.\n         DIRectory - displays all or part of the disk directory.\n         ECho      - a line back to the user.\n         END       - a Kermit-TSO session\n         EXit      - from Kermit-370.\n         FINish    - other Kermit server.\n         Get       - file(s) from a Kermit server.\n         GIve      - saves changes to a translate table.\n         Help      - about Kermit-370.\n         HOst      - executes a system command.\n         KErmit    - executes a Kermit subcommand.\n         Quit      - from Kermit-370.\n         RECeive   - file(s) from other Kermit.\n         SENd      - file(s) to other Kermit.\n         SERver    - mode of remote operation.\n         SET       - various parameters.\n         SHow      - various parameters.\n         STatus    - inquiry.\n         TAke      - subcommands from a file.\n         TDump     - the contents of a chosen table.\n         TSo       - executes a system command.\n         TYPE      - a file.\n         XECHO     - echoes a line (transparently).\n         XTYPE     - displays a file (transparently).\n\n=BYE\n)F FUNCTION -\n           Log out a Kermit server on another system.\n\n)X SYNTAX -\n         BYE\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=CWD=CW\n)F FUNCTION -\n           Set a new prefix for dataset names used by Kermit.\n\n)X SYNTAX -\n         CWD 'string'\n               or\n         CWD 'pds-name()'\n\n   Required - None\n   Defaults - None\n   Alias    - SET PREFIX\n\n)O OPERANDS -\n))STRING   - Partially qualified DSN.\n))PDS-NAME - Fully qualified DSN of a PDS.  File names are assumed to be\n             member names.\n\n=DIRECTOR=DIRECTO=DIRECT=DIREC=DIRE=DIR\n)F FUNCTION -\n           Display dataset names from the catalog.\n\n)X SYNTAX -\n         DIRECTORY 'string'\n\n   Required - None\n   Defaults - All datasets belonging to the user.\n\n)O OPERANDS -\n))STRING   - Partially qualified DSN.\n\n=ECHO=ECH=EC\n)F FUNCTION -\n           Display a string of text at the terminal.\n\n)X SYNTAX -\n         ECHO 'string'\n\n   Required - 'string'\n   Defaults - None\n\n)O OPERANDS -\n))STRING - Text to be displayed.  May be mixed case.\n\n=END\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n\n)X SYNTAX -\n         END\n\n   Required - None\n   Defaults - None\n   Alias    - EXIT, QUIT\n\n)O OPERANDS -\n         None\n\n=EXIT=EXI=EX\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n)X SYNTAX -\n         EXIT\n\n   Required - None\n   Defaults - None\n   Alias    - END, QUIT\n\n)O OPERANDS -\n         None\n\n=FINISH=FINIS=FINI=FIN\n)F FUNCTION -\n           Terminate server mode in another Kermit.\n)X SYNTAX -\n         FINISH\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=GET=GE=G\n)F FUNCTION -\n           Request a file from another Kermit running in server mode.\n\n)X SYNTAX -\n         GET 'foreign-filespec' 'dataset-name'\n\n   Required - 'foreign-filespec'\n   Defaults - 'dataset-name' will match the 'foreign-filespec'\n\n)O OPERANDS -\n))FOREIGN-FILESPEC - The name of a file on the other system.\n))DATASET-NAME     - The name the file is to have on TSO.\n\n=GIVE=GIV=GI\n)F FUNCTION -\n           Save the current contents of a translation table in the form\n           of a TAKE file containing SET commands to change the default\n           into the current arrangement.\n\n)X SYNTAX -\n         GIVE 'table-name' 'take-dataset-name'\n\n   Required - 'table-name' 'take-dataset-name'\n   Defaults - file extension 'TAKE' for the 'take-dataset-name'\n\n)O OPERANDS -\n))TABLE-NAME - Specifies the name of the table to save.\n))TAKE-DATASET-NAME - Specifies the dataset in which to save the SET\n                      subcommands.  The file extension is automatically\n                      supplied as TAKE unless the last qualifier is\n                      KERMINI (or the name is fully qualified and\n                      quoted).\n\n=HELP=HEL=HE=H\n)F FUNCTION -\n           Display help information about Kermit-TSO subcommands.  This\n           is the standard TSO help facility and follows the same rules\n           and has the same operands.\n\n)X SYNTAX -\n         HELP 'subcommand-name' 'operands'\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n))SUBCOMMAND-NAME - Specifies the subcommand name to explain.\n))FUNCTION        - display the function of the subcommand\n))SYNTAX          - display the syntax of the subcommand\n))OPERANDS(LIST)  - display the list of operands\n))ALL             - display all operands\n\n=HOST=HOS=HO\n)F FUNCTION -\n           Execute a TSO command.\n\n)X SYNTAX -\n         HOST 'command'\n\n   Required - 'command'\n   Defaults - None\n   Alias    - TSO\n\n)O OPERANDS -\n))COMMAND - The text to be executed as a command.\n\n=KERMIT=KERMI=KERM=KER=KE\n)F FUNCTION -\n           Execute a Kermit subcommand.  This is useful particularly for\n           distinguishing Kermit subcommands from TSO commands.\n\n)X SYNTAX -\n         KERMIT 'subcommand'\n\n   Required - 'subcommand'\n   Defaults - None\n\n)O OPERANDS -\n))SUBCOMMAND - The text to be executed as a Kermit subcommand.\n\n=QUIT=QUI=QU=Q\n)F FUNCTION -\n           Terminate Kermit-TSO and return to TSO prompt.\n)X SYNTAX -\n         QUIT\n\n   Required - None\n   Defaults - None\n   Alias    - END, EXIT\n\n)O OPERANDS -\n         None\n\n=RECEIVE=RECEIV=RECEI=RECE=REC\n)F FUNCTION -\n           Initiates file transfer to Kermit-TSO from the local Kermit.\n\n           - If the optional 'dataset-name' is not specified,\n             Kermit-TSO will use the name(s) provided by the local\n             Kermit.  If no dataset exists with this name, one will\n             be created using the file attribute and space values in\n             effect when the RECEIVE subcommand was entered.\n           - If the 'dataset-name' specified is the same as an existing\n             dataset, Kermit-TSO will prompt the user for the option to\n             overwrite the dataset.\n           - If the 'dataset-name' was not specified, but is the same\n             as an existing dataset,  Kermit-TSO will overwrite the\n             dataset if the WARNING parameter has been set to OFF, but\n             will attempt to create a new, unique name if WARNING is ON.\n\n)X SYNTAX -\n         RECEIVE 'dataset-name'\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the dataset where the file being received\n                 will be written.\n\n=SEND=SEN\n)F FUNCTION -\n           Initiates file transfer from Kermit-TSO to the local Kermit.\n\n           - One wildcard \"*\" may be used anywhere in the 'dataset-name'\n             to stand for a string of zero or more qualifiers, but no\n             wildcard is allowed in specifying a PDS member name.\n           - If the parameters are not specified, Kermit-TSO will\n             prompt for them.\n           - The 'dataset-name' must be cataloged.\n\n)X SYNTAX -\n         SEND 'dataset-name' 'foreign-filespec'\n\n   Required - 'dataset-name'\n   Defaults - Will prompt for both if neither is supplied.\n\n)O OPERANDS -\n))DATASET-NAME     - The name of the dataset(s) to be sent.\n))FOREIGN-FILESPEC - The name the file is to have on the other system.\n\n=SERVER=SERVE=SERV=SER\n)F FUNCTION -\n           Invokes Kermit-TSO server mode.\n\n           - Once Kermit-TSO enters server mode, it only accepts\n             subcommands entered at the local Kermit until a FINISH\n             command is executed.  Any non-default parameters must be\n             SET before invoking this mode if the local Kermit does\n             not offer the REMOTE KERMIT function.\n           - The local Kermit must support server subcommands to\n             communicate with Kermit-TSO in this mode.  The basic\n             server subcommands Kermit-TSO supports are as follows:\n\n             SEND   - Send a file to Kermit-TSO;\n             GET    - Get a file from Kermit-TSO;\n             FINISH - Terminate server mode and return to the\n                      Kermit-TSO prompt;\n             BYE    - Terminate server mode, exit Kermit-TSO and\n                      logoff TSO.\n\n           - Kermit-TSO also offers advanced server functions, including\n             the various REMOTE file manipulations, TSO commands, and\n             Kermit subcommands.\n\n)X SYNTAX -\n         SERVER\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=SET\n)F FUNCTION -\n           Modify parameters for file transfer.  The SHOW subcommand\n           may be used to examine these values.\n\n)X SYNTAX -\n         SET 'parameter' 'value'\n\n   Note: Many of the parameters are multi-level, as in SET FILE RECFM F.\n         The following list of operands includes all levels.\n\n   Required - 'parameter' 'value'\n   Defaults - None\n\n)O OPERANDS -\n))APPEND 'ON \u00a6 OFF' -\n                   Tells whether to append an incoming file to an\n                   existing dataset of the same name.  The default is\n                   OFF.  Note: there is no provision for appending to\n                   PDS members.\n\n))ATOE 'num1' 'num2' - Modifies the ASCII-to-EBCDIC translate table\n                       used by Kermit-TSO.  The table begins as the\n                       Kermit standard translate table (defined in\n                       the Kermit protocol specifications).  If the\n                       numeric values are omitted, the whole table is\n                       restored to its initial contents.  Tables ETOA,\n                       TATOE, and TETOA may be modified in the same way.\n       'num1' - A decimal number 0-255 for the value of the ASCII\n                character, i.e., the table offset.\n       'num2' - A decimal number 0-255 for the corresponding EBCDIC\n                character.\n\n))BLKSIZE 'number' - With FILE: specifies the block size for datasets\n                     created by Kermit-TSO.  Maximum is 32760.  The\n                     default is 6233.\n\n))BLOCK '1 \u00a6 2 \u00a6 3' - Specifies the type of block check used during\n                      file transfer.  The default is 1.\n                      '1' - A one character checksum.\n                      '2' - A two character checksum.\n                      '3' - A three character CRC.\n\n))CONTROLLER 'TTY \u00a6 SERIES1 \u00a6 GRAPHICS' -\n                   Kermit-TSO automatically determines whether you are\n                   connected via a Series/1-style emulation controller\n                   or a TTY line.  This command is provided, though, so\n                   you can change connections and because Kermit may not\n                   be able to distinguish between Series/1 and graphics\n                   throughput devices.  For both of those, Kermit\n                   attempts to disable the 3270 protocol conversion\n                   function by putting the controller into \"transparent\n                   mode\"; this allows Kermit packets to pass through\n                   intact.\n\n))DEBUG 'ON \u00a6 OFF \u00a6 RAW' - If ON, keep a journal of all packets sent\n                     and received in the file KER.LOG.  If OFF, stop\n                     logging the packets and close the file.  Default\n                     is OFF.  If RAW, record packets exactly as sent\n                     and received, rather than in EBCDIC.\n\n              Note:  KER.LOG is prefixed with the Kermit, rather than\n                     the TSO, prefix when debug mode is entered.  The\n                     log dataset thus created continues in use no\n                     matter what happens to the Kermit prefix.\n\n              Note:  Packets sent by Kermit-TSO are distinguished by\n                     a carriage return (X'0D') at the end; packets\n                     received have had it stripped by the front end\n                     (TTY) processor.\n\n))DELAY 'number' - Specifies the number of seconds Kermit-TSO will\n                   delay before beginning to send packets after the\n                   SEND subcommand has been entered.  Default is 10.\n                   Use a DELAY of 1 to abbreviate the usual greetings\n                   written on the screen at the start of protocol mode\n                   or a DELAY of 0 to suppress the greetings entirely\n                   (along with the attendant one-second pause).\n\n))ECHO 'ON \u00a6 OFF' - With TAKE:\n                   Controls whether the contents of TAKE command files\n                   are echoed during execution.\n\n))END-OF-LINE 'number' - With SEND or RECEIVE:\n                 Specifies the decimal value of the ASCII character\n                 used for the packet-terminator or end-of-line. The\n                 'number' must be 0-31.  The default is carriage return\n                 (13).\n\n))EOF 'ON \u00a6 OFF' - ON means incoming text files are to be cut off at\n                   first Ctrl-Z character within the data, OFF means\n                   accept incoming text files in their entirety.\n\n))ERROR-ACTION 'CONTINUE \u00a6 HALT' - With TAKE:\n                   Controls whether an error occuring during execution\n                   of a TAKE command file is fatal to the execution of\n                   that file.\n\n))ETOA 'num1' 'num2' - Modifies the EBCDIC-to-ASCII translate table\n                       used by Kermit-TSO.  See the description under\n                       ATOE.\n\n))FILE - Takes subparameters BLKSIZE, LRECL, RECFM, SPACE, TYPE, UNIT,\n         and VOLUME.\n\n))FOREIGN - Takes subparameters PREFIX and SUFFIX.\n\n))INITIAL 'num' - With RETRY:\n                   Establishes the limit for retrying the first packet\n                   in a transfer.  The default is 16.\n\n))LEFT 'column' - With MARGIN: sets the left margin for restricting the\n                  width of files to be sent. A value of zero disables\n                  the left margin.\n\n))LRECL 'number' - With FILE: Specifies the logical record length for\n                   incoming datasets.  The 'number' must be from 1 to\n                   32756 (32K) decimal.  Default is 80.\n\n             Note: The Kermit LRECL applies only to data bytes.  The\n                   MVS/TSO LRECL for varying-format files will be four\n                   larger to accommodate the record-descriptor words.\n\n))MARGIN - Takes subparameters LEFT and RIGHT.\n\n))PACKET 'num' - With RETRY:\n                   Establishes the limit for retrying a packet in a\n                   transfer.  The default is 5.\n\n))PACKET-SIZE 'num' - With RECEIVE:\n                   Use the specified \"num\" as the maximum length for\n                   incoming packets. The valid range is 26-9024, and\n                   80 is the default.  SET RECEIVE PACKET-SIZE 95 or\n                   greater causes Kermit-TSO to negotiate reception of\n                   extended length packets with other Kermit programs\n                   that support this option.\n\n))PAD-CHAR 'num' - With SEND or RECEIVE:\n                   Padding character to use between packets, NUL (ASCII\n                   0) by default.\n\n))PADDING 'num' - With SEND or RECEIVE:\n                   Number  of copies  of the  interpacket  padding\n                   character, zero by default.\n\n))PARITY 'MARK \u00a6 NONE' -\n                   Transparent-mode ASCII data from a SERIES1 or\n                   GRAPHICS device will typically have either all Mark\n                   parity (seven data bits with the eighth bit set) or\n                   no parity (eight data bits).  Kermit-TSO must know\n                   which kind of parity to expect in order to calculate\n                   checksums properly.\n\n))PREFIX 'string' - The specified string is used as the DSN prefix for\n                    Kermit.  See the CWD subcommand.\n\n))PREFIX 'string' - With FOREIGN:\n                   The specified string is added to the beginning of\n                   outbound filespecs.\n\n))PROMPT 'string' -\n                   This command defines the character  string that\n                   Kermit-TSO displays when asking for a command. The\n                   prompt may be any string of up to 20 characters. The\n                   default is \"Kermit-TSO>\".\n\n))QUOTE 'char' - With SEND or RECEIVE:\n                 Control character quoting prefix, normally #.\n                 This character must have an ASCII value in the\n                 range 33-62 or 96-126.\n          Note:  Do not change this parameter unless transferring\n                 a long file which contains many '#' characters.\n\n))RECFM 'F \u00a6 V \u00a6 U' - With FILE:\n            Specifies the record format for new files.  Default is V.\n                      F - Fixed (MVS RECFM=FB)\n                      V - Variable (MVS RECFM=VB)\n                      U - Undefined (MVS RECFM=U)\n\n))RETRY - Takes subparameters INITIAL and PACKET.\n\n))RIGHT 'column' - With MARGIN: sets the right margin for restricting\n                  the width of files to be sent. A value of zero\n                  disables the right margin.\n\n))SPACE 'number' - With FILE: Specifies the number of tracks for the\n                   space allocation for new files being received\n                   from the local Kermit.  Default is 5.\n\n))START-OF-PACKET 'num' - With SEND or RECEIVE:\n                Control character to mark start of packet, normally\n                Ctrl-A (ASCII 1).  May be 0-31.\n\n))SUFFIX 'string' - With FOREIGN:\n                   The specified string is added to the end of outbound\n                   filespecs.\n\n))SYSCMD 'ON \u00a6 OFF' -\n                   Determine whether non-Kermit commands are assumed to\n                   be TSO commands and passed to TSO for execution.\n\n))TABS 'OFF \u00a6 ON \u00a6 ON,tab-list' - Enables or disables tab expansion for\n                                  files being received. Default is OFF.\n                  OFF         - Disables expansion.\n                  ON          - Enables expansion and specifies tabs\n                                at columns 9, 17, 25, etc.\n                  ON,tab-list - Enables expansion and specifies use\n                                of tab stops listed in 'tab-list'.\n\n))TAKE - Takes subparameters ECHO and ERROR-ACTION.\n\n))TATOE 'num1' 'num2' - Modifies the ASCII-to-EBCDIC translate table\n                        used by Kermit-TSO.  See the description under\n                        ATOE.\n))TEST 'ON \u00a6 OFF' -\n                   Used for testing new versions, suppresses block check\n                   verification, allows start-of-packet to be set to\n                   anything at all.  The default if OFF.\n\n))TETOA 'num1' 'num2' - Modifies the EBCDIC-to-ASCII translate table\n                        used by Kermit-TSO.  See the description under\n                        ATOE.\n\n))TIMEOUT 'num' - With SEND or RECEIVE:\n                   Number of seconds to wait for a packet before\n                   retransmitting.\n\n))TIMER 'ON \u00a6 OFF' - Specifies whether Kermit-TSO is to attempt to\n                     time out from waiting for packets from the other\n                     Kermit.  The default is ON.\n\n))TTABLE 'ON \u00a6 OFF' -\n                   Controls whether ATOE/ETOA or TATOE/TETOA are used\n                   for counteracting the system translations on TTY\n                   lines.  The default is OFF (use ATOE/ETOA).\n\n))TYPE 'Binary \u00a6 Text \u00a6 V-binary \u00a6 D-binary' -\n                   With FILE: specifies the file type of the data and\n                   determines the type of translation, if any, to use.\n        Binary   - Specifies non-delimited, bit-stream data.  No trans-\n                   lation is performed, and no carriage return/linefeed\n                   pairs are added to outgoing records.  Incoming bytes\n                   are added successively to the current record, which\n                   is written out when the specified logical record\n                   length (LRECL) is reached.\n        Text     - Specifies textual data.  ASCII-to-EBCDIC and\n                   EBCDIC-to-ASCII translation is performed on the\n                   data using the defined translate tables.  Carriage\n                   return/linefeed pairs are used to delimit the\n                   records.  This is the default.\n        V-binary - Specifies variable-length binary records.  Like\n                   BINARY, except that a 2-byte length field precedes\n                   each outbound record, and is assumed for incoming\n                   records.  Incoming records are stripped of their\n                   prefixes and written out when the prefix value is\n                   reached.  This is useful when the record format is\n                   unformatted (RECFM=U) or variable (RECFM=V).\n        D-binary - Specifies variable-length binary records.  Like\n                   V-BINARY, except that the prefix field is a 5-byte\n                   ASCII decimal string.\n\n))UNIT 'name' - With FILE:\n                   Specifies the name of the device type or class for\n                   storing new files (e.g., received from the local\n                   Kermit).  The default is SYSDA.\n\n))VOLUME 'name' - With FILE:\n                   Specifies the name of the particular storage volume\n                   for storing new files (e.g., received from the local\n                   Kermit).  The default is blank (the system will\n                   choose any volume of the specified UNIT class).\n\n))WARNING 'ON \u00a6 OFF' - Specifies the course of action when a file\n                       being received from the local Kermit has the\n                       same name as a dataset which already exists.\n              - If ON, Kermit-TSO changes the incoming file name so as\n                not to obliterate the existing dataset, or requests\n                permission to overwrite it if the name was given by the\n                user.  This is the default.  Kermit-TSO attempts to\n                rename an incoming file by appending a digit to the\n                second qualifier of the dataset name.\n              - If OFF, Kermit-TSO will replace the existing dataset.\n\n))8-BIT-QUOTE 'ON \u00a6 OFF \u00a6 char' -\n                   Controls whether eighth-bit prefixing is done and\n                   specifies the character to be used.\n\n=SHOW=SHO=SH\n)F FUNCTION -\n           Displays the values of all parameters which can be changed\n           with the SET subcommand, except the translation tables.\n           See also the TDUMP subcommand.\n\n)X SYNTAX -\n         SHOW 'parameter'\n\n   Required - 'parameter'\n   Defaults - all\n\n)O OPERANDS -\n))PARAMETER - The parameter whose value is to be displayed.  If\n              the value is 'all', then the values of all parameters\n              are displayed.  If only one level of a multi-level\n              parameter family is given, then all subparameters will\n              be displayed.\n\n=STATUS=STATU=STAT=STA=ST\n)F FUNCTION -\n           Returns the status of the previous subcommand.  The response\n           will either display the message 'No Errors', or the message\n           for the last error encountered.\n\n)X SYNTAX -\n         STATUS\n\n   Required - None\n   Defaults - None\n\n)O OPERANDS -\n         None\n\n=TAKE=TAK=TA\n)F FUNCTION -\n           Executes Kermit-TSO subcommands from the specified file.\n\n)X SYNTAX -\n         TAKE 'take-dataset-name'\n\n   Required - 'take-dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))TAKE-DATASET-NAME - Specifies the dataset from which to get the\n                      sequence of Kermit-TSO subcommands to execute.\n                      The file extension is automatically supplied as\n                      TAKE unless the last qualifier is KERMINI (or\n                      the name is fully qualified and quoted).\n\n=TDUMP=TDUM=TDU=TD\n)F FUNCTION -\n           Display the contents of the specified table.\n\n)X SYNTAX -\n         TDUMP 'table-name'\n\n   Required - 'table-name'\n   Defaults - None\n\n)O OPERANDS -\n))TABLE-NAME - Specifies the name of the table to display.\n\n     ATOE    - The ASCII-to-EBCDIC translate table.\n     ETOA    - The EBCDIC-to-ASCII translate table.\n     NAMES   - The list of datasets sent in the last transfer.\n     TATOE   - The ASCII-to-EBCDIC table (for undoing the front end).\n     TETOA   - The EBCDIC-to-ASCII table (for undoing the front end).\n\n=TSO=TS\n)F FUNCTION -\n           Execute a TSO command.\n\n)X SYNTAX -\n         TSO 'command'\n\n   Required - 'command'\n   Defaults - None\n   Alias    - HOST\n\n)O OPERANDS -\n))COMMAND - The text to be executed as a command.\n\n=TYPE\n)F FUNCTION -\n        Display the specified file at your terminal.\n\n)X SYNTAX -\n         TYPE 'dataset-name'\n\n   Required - 'dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the file to be displayed.\n\n=XECHO=XECH=XEC=XE\n)F FUNCTION -\n        Display a string of text at your Series/1-type terminal in\n        transparent mode (similar to ECHO).\n\n)X SYNTAX -\n         XECHO 'string'\n\n   Required - 'string'\n   Defaults - None\n\n)O OPERANDS -\n))STRING - Text to be displayed.  May be mixed case.  May contain\n           ASCII control characters using the '\u00ac' notation.\n\n=XTYPE=XTYP=XTY=XT\n)F FUNCTION -\n        Display the specified file at your Series/1-type terminal in\n        transparent mode.\n\n)X SYNTAX -\n         TYPE 'dataset-name'\n\n   Required - 'dataset-name'\n   Defaults - None\n\n)O OPERANDS -\n))DATASET-NAME - Specifies the file to be displayed.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERIN": {"ttr": 2308, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "IBM System/370 MVS/TSO Kermit 4.0 Installation Instructions:\n                 (Revised 1988 September)\n\n1. Get the necessary files from the Kermit distribution tape or from\n   BITNET KERMSRV or elsewhere into your disk area.  Note that many\n   of the files are generic for Kermit-370 and may already be locally\n   available to you from a VM/CMS site.  As distributed by Columbia,\n   the files are named as follows (all with prefix IKT or IK0).  Files\n   that are new or revised for this version of the installation guide\n   are noted with asterisks.\n\n * IKTDYN.ASM  Assembler source for DYNALC subroutine\n * IKTGUP.ASM  Assembler source for TSO-specific part of GUPI\n * IKTGUP.HLP  GUPI help file, TSO HELP format\n   IKTKER.ANN  Text of Kermit-TSO 4.0 Announcement\n   IKTKER.BWR  A \"beware\" file, listing known bugs and problems\n   IKTKER.DOC  Kermit User Guide chapter for TSO, plain text\n   IKTKER.HLP  Kermit-TSO help file, TSO HELP format\n * IKTKER.INS  Kermit-TSO installation instructions (this file)\n   IKTKER.MSS  Scribe source for IKTKER.DOC\n * IKTKER.UPD  Updates for TSO version of Kermit-370\n * IKTMAC.ASM  Assembler source for TSO-specific macros\n   IKTUTL.ASM  Assembler source for TSO-specific routines\n   IK0CMD.ASM  Assembler source for command handler\n   IK0COM.ASM  Assembler source for global code\n   IK0CON.HLP  Notes on implementing alternate terminal controllers\n   IK0DEF.ASM  Assembler source for parameter definitions\n   IK0DOC.ASM  Assembler source with brief history\n   IK0GUP.ASM  Assembler source for generic update program GUPI\n   IK0KER.DOC  Kermit User Guide chapter for Kermit-370, plain text\n   IK0KER.MSS  Scribe source for IK0KER.DOC\n   IK0KER.UPD  Update history for Kermit-370\n   IK0MAC.ASM  Assembler source for generic Kermit macros\n   IK0MAI.ASM  Assembler source for storage initialization\n   IK0PRO.ASM  Assembler source for generic routines\n\n2. Rename and reformat, if necessary, the source files on disk.  Collect\n   all the source files (those with extensions of \".ASM\") in your disk\n   area with names as shown above, and make sure that each one has\n   RECFM=FB,LRECL=80, and that all have the same block size.  You\n   will also need IKTKER.UPD.  Allocate datasets to contain the\n   assembled and executable code as follows:\n\n   ATTR K1OBJ RECFM(FB) LRECL(80) BLKSIZE(1680) DSORG(PO)\n   ALLOC DSN(KERMIT.OBJ) USING(K1OBJ) SPACE(10,20) TRACKS DIR(5)\n   ATTR K1LOD RECFM(U) BLKSIZE(6144) DSORG(PO)\n   ALLOC DSN(KERMIT.LOAD) USING(K1LOD) SPACE(10,20) TRACKS DIR(10)\n\n   Copy IKTKER.HLP into the system Help library with a member name of\n   KERMIT so that the TSO HELP KERMIT command and Kermit-TSO's built-in\n   HELP subcommand can find it.  Similarly, copy IKTGUP.HLP into member\n   GUPI.\n\n   The Kermit User Guide for TSO is distributed in two parts: IKTKER.DOC\n   and IK0KER.DOC; these may be kept wherever you keep online documenta-\n   tion files, renamed appropriately.\n\n   Note 1: If you prefer, you may elect to keep the source files in a\n   PDS.  If so, be sure to use RECFM=FB,LRECL=80.  Also change the DSN\n   references in the following job accordingly.\n\n   Note 2: The procedure given below assumes the availability of sources\n   contemporaneous with this file, in particular, IKTDYN, IKTMAC,\n   IKTGUP, and IK0GUP.\n\n   Note 3: The procedure given below preserves the sequence numbers in\n   columns 73-80 of the source files. If you elect to use an editor to\n   merge files, be absolutely sure that you don't inadvertantly lose the\n   original sequence numbers (something editors are prone to do).\n\n   Note 4: The resulting load library KERMIT.LOAD must be placed in the\n   link list so that the KERMIT load module will be treated as a COMMAND\n   PROCESSOR (if not in SYS1.LINKLIST, then either concatenated to the\n   STEPLIB for the default LOGON PROC or made known to all potential\n   Kermit users, so that they can do the concatenation themselves).  One\n   way of testing a newly installed Kermit is to invoke it under TEST\n   with the CP option.\n\n3. The Generic Update Program for IBM-370 (GUPI) handles standard update\n   information in the format found in IKTKER.UPD.  Like Kermit itself,\n   GUPI is composed of a generic part and a TSO-specific part.  The\n   former consists of IK0GUP.ASM plus parts of IK0MAC.ASM, and the\n   latter similarly consists of IKTGUP.ASM plus parts of IKTMAC.ASM.\n\n   The following batch job creates the executable program GUPI and uses\n   it to apply the available updates to Kermit and then creates the\n   executable load module KERMIT.  You must tailor the job to your site\n   by (1) supplying an appropriate JOB card and (2) changing the string\n   \"<user>\" into the top-level qualifier of your disk area.  The JOB\n   card should insure, if necessary, a region of at least 1024K to allow\n   execution of the assembler and GUPI.  Although the job is as generic\n   as possible, there may be other local variations, such as the choice\n   of assembler (along with the DDNAME for the object output).  An\n   abbreviated form of the job may be run to apply additional updates\n   after the initial installation (simply omit job steps CNVASM through\n   GUPLNK).  You will also wish to use a new ALIAS for each new version\n   of the load module.\n\n//JOBLIB   DD DSN=<user>.KERMIT.LOAD,DISP=OLD\n//* INPUT:  <user>.IK*.ASM, <user>.IKTKER.UPD\n//* OUTPUT: <user>.KERMIT.LOAD, <user>.KERMIT.OBJ  (both pre-allocated)\n//*\n//KASM   PROC PRM=,USRMAC='SYS1.AMODGEN',MEMBER=NULL\n//ASM    EXEC PGM=IFOX00,PARM='NORLD,NODECK,OBJECT,&PRM'\n//SYSIN    DD DSN=&SOURCE,DISP=(OLD,PASS)\n//* SYSGO    DD DDNAME=SYSLIN          (activate if assembler wants it)\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=&USRMAC,DISP=(SHR,PASS)\n//SYSLIN   DD DSN=<user>.KERMIT.OBJ(&MEMBER),DISP=(OLD,PASS)\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,2))\n//SYSUT2   DD UNIT=(SYSDA,SEP=SYSUT1),SPACE=(CYL,(5,2))\n//SYSUT3   DD UNIT=(SYSDA,SEP=SYSUT1),SPACE=(CYL,(5,2))\n//       PEND\n//KLINK  PROC\n//LNK    EXEC PGM=IEWL,PARM=LET\n//SYSLMOD  DD DSN=<user>.KERMIT.LOAD,DISP=OLD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,2))\n//       PEND\n//*\n//* ---------------- CUT HERE AFTER 1ST SUBMISSION ----------------\n//*        Create exit routine for IEBGENER\n//CNVASM EXEC KASM\n//SYSIN    DD *\nUPDCNV0  START\n         SAVE  (14,12),,*\n         USING UPDCNV0,15\n         LM    1,2,0(1)      Get parms\n         LH    3,82(2)       LRECL\n         LH    4,62(2)       BLKSI\n         AR    4,1           End of buffer\n         TM    36(2),X'40'   RECFM=V?\n         BO    QUIT          Yes, error\nCVTLP    CLC   =C'*COPY ',0(1)\n         BNE   NOTCOPY\n         CLC   5(48,1),6(1)\n         BNE   NOTCOPY\n         MVC   0(12,1),=C'./ ADD NAME='\n         MVC   12(8,1),54(1) Copy name into ADD stmt\nNOTCOPY  AR    1,3           Space over record\n         CR    1,4\n         BL    CVTLP         Finish block\n         SR    15,15\nQUIT     RETURN (1,12),RC=(15)\n         END   UPDCNV0\n//SYSLIN   DD DSN=&&UPDC,DISP=(NEW,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=1680)\n//*   Link into job library\n//CNVLNK EXEC KLINK\n//SYSLIN   DD DSN=&&UPDC,DISP=(OLD,DELETE)\n//         DD *\n         NAME UPDCNV0(R)\n//*   Assemble DYNALC\n//DYNASM EXEC KASM,SOURCE='<user>.IKTDYN.ASM',MEMBER=DYNALC\n//*   Create sequential file for GUPI macro library\n//GUPCPY EXEC PGM=IEBGENER\n//SYSIN    DD *\n     GENERATE\n        EXITS DATA=UPDCNV0\n//SYSPRINT DD DUMMY\n//SYSUT1   DD DSN=<user>.IK0MAC.ASM,DISP=SHR\n//         DD DSN=<user>.IKTMAC.ASM,DISP=SHR\n//         DD DSN=<user>.IKTGUP.ASM,DISP=SHR\n//SYSUT2   DD DSN=&&GUP,DISP=(NEW,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=2400)\n//*   Create GUPI macro library\n//GUPLIB EXEC PGM=IEBUPDTE,PARM=NEW\n//SYSIN    DD DSN=&&GUP,DISP=(OLD,DELETE)\n//SYSPRINT DD DUMMY\n//SYSUT2   DD DSN=&&GUPMAC,DISP=(NEW,PASS),UNIT=SYSDA,\n//            SPACE=(TRK,(1,1,10),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)\n//*   Assemble and link GUPI\n//GUPASM EXEC KASM,SOURCE='<user>.IK0GUP.ASM',MEMBER=GUPI,\n//            USRMAC='&&GUPMAC'\n//GUPLNK EXEC KLINK\n//SYSLIN   DD DSN=<user>.KERMIT.OBJ(GUPI),DISP=SHR\n//         DD DSN=<user>.KERMIT.OBJ(DYNALC),DISP=SHR\n//         DD *\n         NAME GUPI(R)\n//* ---------------------- END OF CUT ------------------------\n//*   Create updated Kermit ...\n//KRMUPD EXEC PGM=GUPI\n//SYSIN    DD DSN=<user>.IKTKER.UPD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=<user>.IK0DOC.ASM,DISP=SHR\n//         DD DSN=<user>.IK0MAC.ASM,DISP=SHR\n//         DD DSN=<user>.IKTMAC.ASM,DISP=SHR\n//         DD DSN=<user>.IK0DEF.ASM,DISP=SHR\n//         DD DSN=<user>.IK0MAI.ASM,DISP=SHR\n//         DD DSN=<user>.IK0COM.ASM,DISP=SHR\n//         DD DSN=<user>.IK0CMD.ASM,DISP=SHR\n//         DD DSN=<user>.IKTUTL.ASM,DISP=SHR\n//         DD DSN=<user>.IK0PRO.ASM,DISP=SHR\n//SYSUT2   DD DSN=&&UPDSRC,DISP=(NEW,PASS),SPACE=(CYL,(1,1)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),UNIT=SYSDA\n//*\n//KRMASM EXEC KASM,SOURCE='&&UPDSRC',MEMBER=KERMIT\n//*            ,USRMAC='SYS1.AMODGEN'   May be needed for STATUS\n//KRMLNK EXEC KLINK\n//SYSLIN   DD DSN=<user>.KERMIT.OBJ(KERMIT),DISP=SHR\n//         DD DSN=<user>.KERMIT.OBJ(DYNALC),DISP=SHR\n//         DD *\n        ALIAS KERM40\n         NAME KERMIT(R)\n//\n\n4. To run Kermit-TSO, simply type \"KERMIT\" to the TSO system prompt.\n\nThe IBM mainframe and its communications front end (3705, 7171, etc.)\nusually require that parity be used by any asynchronous ASCII device\nthat wishes to communicate with it.  Exactly which kind of parity is\nsite-dependent.  At Columbia, the 3705 requires Mark parity, and the\n7171 requires Even parity.  Make sure your users know to use the\nappropriate parity setting, as well as any other settings required for\nIBM mainframe communication (see p.36-39 of the Kermit book).\n\nKermit-TSO uses an ASCII/EBCDIC translation table which conforms to the\none given in the IBM System/370 Reference Summary.  If your site's\ntranslation table does not conform to the one Kermit uses, then enter\nthe appropriate SET ATOE/ETOA/TATOE/TETOA commands in the SYSTEM KERMINI\nfile.  If your system's ASCII/EBCDIC translation is not invertible,\nKermit will not and cannot work unless you change your system's table.\nSee the DOC files for more information.\n\nWhen TSO Kermit is to be used with a 7171, make sure the 7171 is set up\nwith its \"keyboard lock delay\" parameter set to 0.  Otherwise, the\n\"terminal\" will hang whenever TSO Kermit clears the screen.  This\nhappens consistently when the parameter is set to 10, and not at all\nwhen set to 0.  For numbers in between, the higher the number, the more\nit happens.\n\nWhen Kermit-370 is to be used with a 3708, some of the terminal ports\nwill need to be specially configured.  First, each line for Kermit use\nmust be set up for either \"protocol enveloping\" or \"dynamic\" mode.  In\nthe former, the port is permanently set for line-at-a-time operation,\nbut the latter permits (requires) the user to specify a mode at logon\ntime.  In any event, the whole session must be conducted in line mode\nfor Kermit to work.  Other important details of the terminal configura-\ntion are: (1) the terminal must be specified as a TWX device, (2) the\nline must be set for 8 data bits and 1 stop bit, (3) there should be no\n\"read prompt\", and (4) the so-called \"alternate\" translation table\n(number 3) should be selected.  Kermit-370 must also be configured\nbecause the normal packet character SOH (code 1, ctrl-A) may not be\npassed by the 3708.  A suitable substitute is HT (code 9, ctrl-I).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERMS": {"ttr": 2313, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "@Part(TSOKERMIT,root=\"kuser\")\n@string(-tsoversion=\"4.0\")\n@string(-tsodate=\"88/1/31\")\n@Chapter<IBM MVS/TSO KERMIT>\n@Begin<Description,Leftmargin +14,Indent -14,spread 0>\n@i(Program:)@\\John Chandler (Harvard/Smithsonian Center for\nAstrophysics); contributions from\nVace Kundakci and\nDaphne Tzoar (Columbia U),\nBob Shields (U. Maryland), Victor Lee (Queens U.), Gary Bjerke (U.\nTexas at Austin), Greg Small (UC Berkeley), Clark Frazier (Harvard\nBus. Sch.), Bob Bolch and Steve Blankinship (Triangle), Ron Rusnak\n(U. Chicago), Roger Fajman and Dale White (NIH),\nAndre Pirard (U. Liege)\n\n@i(Language:)@\\IBM/370 Assembler\n\n@i(Documentation:)@\\John Chandler (CfA)\n\n@i(Version:)@\\@value(-tsoversion) (@value<-tsodate>)\n\n@i(Date: )@\\1988 February\n@end<Description>\n\n@subheading<Kermit-TSO Capabilities At A Glance:>\n@begin<format,leftmargin +2,above 1,below 1>\n@tabclear()@tabset(3.5inches,4.0inches)\nLocal operation:@\\No\nRemote operation:@\\Yes\nTransfers text files:@\\Yes\nTransfers binary files:@\\Yes\nWildcard send:@\\Yes\n@q(\u00acX/\u00acZ) interruption:@\\Yes (through micro)\nFilename collision avoidance:@\\Yes\nCan time out:@\\Yes\n8th-bit prefixing:@\\Yes\nRepeat count prefixing:@\\Yes\nAlternate block checks:@\\Yes\nTerminal emulation:@\\No\nCommunication settings:@\\No\nTransmit BREAK:@\\No\nTransaction logging:@\\Yes\nSession logging:@\\No\nRaw transmit:@\\Yes (no prompts)\nSliding window:@\\No\nLong packets:@\\Yes\nAct as server:@\\Yes\nTalk to server:@\\Yes\nAdvanced server functions:@\\Yes\nAdvanced commands for servers:@\\Yes\nLocal file management:@\\Yes\nHandle Attribute Packets:@\\Yes\nCommand/init files:@\\Yes\nCommand macros:@\\No\n@end<format>\n\n@Index(IBM)\n@Index(MVS/TSO)@Index(TTY)@Index(Series/1)\nKermit-TSO is a member of the generic Kermit-370 family and shares most\nof the features and capabilities of the group.\nAs its name implies, Kermit-TSO is the\nversion of Kermit-370 that runs under the MVS/TSO operating system.\nThe primary documentation for Kermit-TSO is actually\nthe chapter on Kermit-370, which\ndescribes general properties; the present chapter assumes the\nreader is familiar with that material.  Only the details specific to\nTSO operation will be discussed here, e.g., command syntax\nrelating to the TSO file system or commands not offered in general\nby Kermit-370.\n\n@subheading<TSO Specifics of Kermit-370:>\n@begin<format,leftmargin +2,above 1,below 1>\n@tabclear()@tabset(3.5inches,4.0inches)\nGlobal INIT file:@\\'@q(SYS1.KERMINI)'\nUser INIT file:@\\@q(KERMINI)\nDebug packet log:@\\@q(KER.LOG)\nServer reply log:@\\@q(KER.REPLY)\nMaximum packet size:@\\1913\nMaximum disk LRECL:@\\32756\n@end<format>\n\n@Section<The MVS/TSO File System>\n\nThe features of the TSO file system of greatest interest to Kermit\nusers are the format of file specifications (@i<filespecs>)\nand the concept of\nrecords.  The latter is described in the Kermit-370 chapter.\n\n@Index(Qualifier)\nThe MVS/TSO @i<filespec> (called the data set name or DSN) takes the form\nof tokens (known as qualifiers) of up to 8 alphanumeric characters each,\nseparated by periods.  Each qualifier must begin with an alphabetic or\nnational character.  The total length must be no\nmore than 44 characters, including periods.\nTo be precise, a DSN may contain uppercase letters, digits, and\nthe special characters @qq<$> (dollar sign), @qq<#> (pound sign),\n@qq<@@> (at sign), and @qq<-> (hyphen) in addition to the separating\nperiods.  Other characters may be not be included.\n\n@Index(Catalog)\nThere is another, structural restriction on\ndata set names from the fact that TSO data sets are all cataloged.\nIn a standard\nMVS catalog, each qualifier of each DSN is associated with an\nindex of the same name.  The index is a hierarchical\ncatalog component which points downward either to a list of next-level\nindices or to a data set, but never to both.  Consequently, a\ncataloged DSN is a chain of indices corresponding one-for-one with\nDSN qualifers, and the last index is a pointer to the data set itself.\nWhile there may be many indices with the same name, no two such\nduplicates may both be chained to the same next-higher-level index,\nso that, if DSN's are considered as strings of qualifiers (not of\ncharacters),\nno DSN can be a major substring of any other.\nFor example, if the name '@q<A.BB.C>' exists in the\ncatalog, then '@q<A.BB>' and '@q<A.BB.C.X>' are illegal, but '@q<A.B>',\n'@q<A.BB.Y>', '@q<A.BBB>', and '@q<A.BB.BB>' are all legal.\n\nA DSN given in its entirety (as in the foregoing examples)\nis called \"fully qualified\" and must be enclosed in single\nquotes when entered in TSO.  However, by convention (and by definition)\nthe first qualifier of each data set\nbelonging to a given user must be the user's logon ID, and, by\ndefault, that ID is the assumed prefix in TSO when a DSN is @i(not)\nenclosed in quotes.  In practice, then, names are abbreviated by\nomitting the quotes and the prefix.  The most common type of name, in\nfact, consists of the prefix plus two more qualifiers giving the\ndata set's name and type, respectively, so that many files have DSN's\nthat correspond exactly to the canonical Kermit representation of a\n@i(filespec).  For instance, @q<TEST.FORT> is the\nsource of a Fortran program named TEST, and its fully qualified DSN\nwould be '@i(<userid>)@q<.TEST.FORT>', where @i(<userid>) is the owner's\nlogon ID.\n\n@Index(Partitioned data set)\nWhile this description is complete as far as it goes, it omits an\nimportant feature that is widely used in organizing files under MVS\nand TSO, namely, the partitioned data set (PDS).  A PDS is a data set\nlike any other, except that it has @i(members), each of which can\nusually be treated as a file in its own right.  In fact, with QSAM\n(the file access method employed by Kermit and many other applications),\nonly members, and not the whole PDS, may be read or written.  Thus,\nthe term \"file\", as used in this chapter and the Kermit-370 chapter, may\nrefer to either a PDS member or an ordinary data set, but not to a PDS.\nThe notation for a PDS member consists of the member name enclosed\nin parentheses and appended to the DSN (and the whole enclosed in\nquotes if the DSN is fully qualified).  For example, if the Fortran\nprogram @q<TEST> were copied into a PDS called @q<DEBUG.FORT>, it\nwould then be known as\n@example<DEBUG.FORT(TEST)>\nAlthough the member name is written together with the DSN, it and the\nsurrounding parentheses are not really part of the DSN and are not\ncounted toward the 44-character limit.  Still,\na member name must conform to the rules for a DSN qualifier and, in\naddition, must not contain any hyphens.\n\nAll these properties of DSN's come into play when a file\nis being received by Kermit-TSO because a valid DSN must be generated\nfor the new data set.  For example,\nany invalid character in the supplied @i(filespec) is replaced by\na pound sign (or converted to uppercase if it is a lowercase letter).\nAlso, each qualifier (and the member name, if any)\nis prefixed with a pound sign if it does not already\nbegin with an alphabetic or national character and then\nshortened, if necessary, to eight characters.  If\nno @i(filespec) is supplied,\nKermit-TSO creates a default DSN of @qq($.$).\nThe DSN is expanded to\nits fully qualified form and then truncated at 44 characters, if need be.\n\nThe DSN prefix, which defaults to the user's logon ID, is similar\nto a device specification on microcomputer systems: it selects an\narea of disk storage, and it usually need not be specified.\nIn some ways, the prefix is also like\na disk directory designator, since the file system structure is\nhierarchical.  For this reason, the Kermit\nconcept of the \"working\ndirectory\" is equated with a particular DSN prefix under\nKermit-TSO.  The current \"working directory\" is the\ncollection of all data sets whose names begin with the current prefix,\nand file transfers take place preferentially\nto and from that area (i.e., unless a fully qualified DSN is given).\n\nTo provide compatibility with other operating systems, when Kermit-TSO\nsends a file, it ordinarily makes a file header with\nonly the last two qualifiers of the full DSN (or only the member name in\nthe case of a PDS member).  On the other hand, extra information\nmay be added by way of the SET FOREIGN subcommand.\n\n@Index<Wildcard>\nKermit-TSO allows a group of files to be specified in a single\n@i(filespec) by including the special\n\"wildcard\" character @qq<*>, which\nmatches any string of characters (even a null\nstring) starting at a new DSN qualifier.  Only one @q(*) may be used in\na @i(filespec).  Also, the @q(*) may not be used for the member name of\na PDS (nor for any part of a PDS name).\nHere are some examples:\n\n@Begin(Description,spread 0.5,leftmargin +12, indent -10)\n@q<*.COBOL>@\\All files of type @q<COBOL> (all COBOL source files) in\nthe current working directory.\n\n@q<BATCH*H.FORT>@\\All files in the current directory which begin\nwith the qualifier @q(BATCH) and which end with @q(H.FORT).  This would\nnot include @q(BATCH.FORT), however.\n@End(Description)\n\nTSO files, like those in other IBM 370 systems, are record-oriented\n(see the introduction to the Kermit-370 chapter).\nIn particular, TSO files are characterized by record\nformat (RECFM), which may be fixed-length,\nvarying-length, or undefined-length;\nby maximum record length (LRECL); and\nby maximum block size (BLKSIZE).  Fixed-length\nand varying-length may be (and, under Kermit, always are) combined into\nblocks, but undefined-length records may not.  Indeed, by convention,\nthey have no logical record length, only a maximum block size.\nRecords in TSO files may be up to 32760 bytes\nlong, but varying-length records use four bytes to specify the length\nand have an effective limit of 32756.\n\nAnother file system feature of occasional interest is the means of\nreporting errors.  When Kermit-TSO encounters a disk error, it attempts\nto prepare an explanatory message for inclusion in the @q(STATUS)\nreport.  The primary method is the standard @q(SYNADAF) macro.\n\n@section<Program Operation>\n\n@Index(Initialization files)\nAt startup time, Kermit-TSO looks for two initialization\nfiles, '@q(SYS1.KERMINI)' and '@i(<userid>)@q(.KERMINI)'\n(where, as before, @i(<userid>) is the user's\nlogon ID).  The latter file would also be known as just @q(KERMINI).\nThe file '@q(SYS1.KERMINI)' would be maintained\nby a systems programmer, but\n@q(KERMINI) would be maintained by the user.\n\n@Index(User profile)\nTwo parameters in the user's profile (the character delete and line\ndelete) are disabled\nduring protocol mode\n(and restored afterwards) to prevent any conflict in case either of\nthese characters has been defined to be printable.\nThe settings in effect when Kermit starts up are saved as a sort of\n\"normal\" status snapshot (as opposed to the \"protocol\" status just\ndescribed).  The protocol status is selected whenever\nKermit enters protocol mode, and the normal status is selected when\nKermit leaves protocol mode.  Note: if Kermit is\ninterrupted in the midst of a transfer or while in server mode, these\nparameters will be left with peculiar settings (namely, the protocol\nstatus), and they may need\nto be restored by hand.\n\nAlthough TSO does not allow an application program to take control of\nterminal synchronization on @qq(TTY) lines, the various full-screen\nemulation front ends\nare quite a different matter.  The standard IBM handshake (XON) is\nunnecessary, for example, with a 7171 or 4994 because the front end\nitself turns the line around with essentially no delay in transparent\nmode.  Thus, handshaking should be suppressed for @qq(SERIES1) devices\n(the micro Kermit should have\nHANDSHAKE set OFF, and Kermit-TSO should have HANDSHAKE set to 0).\nSince the generic Kermit-370 default handshake (XON) is retained in\nKermit-TSO, the subcommand @qq(SET HANDSHAKE 0) is a good candidate\nfor inclusion the KERMINI file of any user who habitually uses\n@qq(SERIES1) lines.\n\n@subheading(Interactive Operation:)\n\nTo run Kermit-TSO interactively, invoke the program from TSO by\ntyping @q<KERMIT>.  When you see the prompt,\n@example(Kermit-TSO>)\nyou may type a Kermit subcommand.  When the subcommand completes, Kermit\nissues another prompt.  The cycle repeats\nuntil you exit from the program.  For example:\n@Begin(Example)\n@ux(KERMIT)\n\nKermit-TSO Version @value(-tsoversion) (@value<-tsodate>)\nEnter ? for a list of valid commands\n\nKermit-TSO>@ux(send foo.*)\n\n  @i(Files beginning with FOO are sent)\n\nKermit-TSO>@ux(receive test.spss)\n\n  @i(File is received and called TEST.SPSS)\n\nKermit-TSO>@ux(exit)\n@end(example)\n\n@subheading(Command Line Invocation:)\n\nKermit-TSO may also be invoked with command line arguments from TSO.\nThe arguments are interpreted as a subcommand to be executed\nby Kermit after completion of the initialization.\nFor instance:\n@Begin(Example)\n@ux(KERMIT send test.fort)\n@End(Example)\n\nKermit will exit and return to TSO after completing the specified\nsubcommand.\n\n@subheading(CLIST Operation:)\n\nLike other TSO programs, Kermit-TSO may be invoked from a CLIST.\nSubcommands can be passed to Kermit using the program input stack\nand/or command line arguments.  For example, to start up Kermit-TSO\nand have it act as a server, include the line:\n@Begin(Example)\n@ux(KERMIT server)\n@End(Example)\nTo pass more than one subcommand, they must be stacked in the order in\nwhich they are to be executed.  To start up a Kermit-TSO server with a\nthree character CRC, create and stack a file with the following:\n@Begin(Example)\n@ux(set block 3)\n@ux(server)\n@End(Example)\nand then invoke Kermit.  Like many utility programs, Kermit-TSO uses\nthe GETLINE/PUTLINE\nservice routines for terminal I/O, and the nominally\ninteractive subcommands can thus be supplied under program control.\nAnother way of setting up multiple subcommands would be to collect the\nsubcommands into a TAKE file and then issue the TAKE subcommand via the\ncommand line.\nOf course, CLIST's may be executed from Kermit, either directly or from\na TAKE file, and CLIST's in turn may freely issue Kermit subcommands.\nThe subcommand KERMIT is especially useful in this context for\ndistinguishing Kermit subcommands from TSO commands.\n\n@subheading(Server mode:)\n\nCommand execution in server mode is different in several respects\nfrom normal operation.  First of all, some Kermit subcommands\nare not allowed (see the list of subcommands in the Kermit-370 chapter).\nMoreover, command errors\nalways terminate any active TAKE file.\n@Index(User profile)\nAlso, commands run in a\nspecial environment with the User Profile temporarily modified.\nAnother difference is that Kermit intercepts\nterminal I/O as much as possible and transmits the data to the local\nKermit as text packets.  The problem with this redirection is that\nsome MVS/TSO commands issue terminal I/O directly, so\nthat some messages never appear to the local Kermit (except, perhaps,\nas bad packets).\n\n@Section<Kermit-TSO Subcommands>\n\nKermit-TSO supports all the subcommands\ndescribed in the corresponding section\nof the Kermit-370 chapter.  In addition, there is the system-specific\nsubcommand @q(TSO), which is just a synonym for\nthe generic @q(HOST) subcommand.  @q(TSO)\ncan be issued as a remote Kermit command when Kermit-TSO\nis in server mode.  Also, the @q(END) subcommand is available as a\nsynonym for @q(EXIT) and @q(QUIT).\n\nThe remainder of this section concentrates on\nthe subcommands that have special form or meaning for Kermit-TSO.\nSee also the chapter on Kermit-370 for further details.\n\n@Heading<The SEND Subcommand>\n@Index(SEND)\n\nSyntax: @q<SEND> @i(filespec) \u00a2@i(foreign-filespec)|\n\nThe SEND subcommand causes a file or file group to be sent from TSO\nto the Kermit on the other system.  DSN prefixing is done on the\n@i(filespec) in the usual way\n(see also the CWD subcommand).\n\n@Index(File matching)\n@i(filespec) may contain a wildcard @qq<*>.  If it does,\nthen all matching files will\nbe sent, up to 711 files in all.\n\nThe @i(foreign-filespec), if any, is used for the file header of the\noutgoing file, replacing the usual name.type derived from the\nMVS/TSO @i(filespec).\nNormally, this form of the SEND subcommand is used only for single files\nbecause the @i(foreign-filespec) is used only for the first file of a\ngroup (subsequent files having default headers).\n\n@Index<Cancelling a file transfer>\nAlthough the file transfer cannot be cancelled from the TSO side,\nKermit-TSO is capable of responding to\n\"cancel file\" or \"cancel batch\"\nsignals from the local Kermit;  these are typically entered by typing\nControl-X or Control-Z, respectively.\n\n@Heading<The RECEIVE Subcommand>\n\n@Index(RECEIVE)\nSyntax: @q<RECEIVE> \u00a2@i(filespec)|\n\nThe RECEIVE subcommand tells Kermit to receive a file or file group\nfrom the other system.  You should then issue a SEND subcommand to the\nother Kermit.\n\nA @i(filespec) in the subcommand indicates what name the incoming file\nshould be given.  Wildcards may not be used.\nIf the @i(filespec) is invalid, Kermit-TSO will suppress the transfer.\nIf the optional @i(filespec) is omitted (and, in any case, for all files\nafter the first in a group) Kermit-TSO will use the\nname(s) provided by the other Kermit.  If a name is not a legal\nDSN, Kermit-TSO will delete excess characters, change illegal\ncharacters to pound signs, and so on, to create a legal name.\n\n@Index(Binary files)\nWhen the record format is @qq(F), any received record\nlonger than the logical record length (LRECL) will be truncated,\nand shorter records will be padded.  The padding character is a blank\nfor text files and a null for binary files.\nReceived binary (but not V-binary or D-binary) files are treated as\nbyte streams and broken up into records all of the logical record\nlength.\nSee the SET FILE TYPE, SET FILE LRECL, SET FILE\nBLKSIZE, and SET FILE RECFM subcommands.\n\n@Index<Incomplete file>\nIf an error occurs during the file transfer, as much of the file as\nwas received is saved on disk.  If the sending of a file is\ncancelled by the user of the foreign system, Kermit-TSO will discard\nwhatever had arrived, unless APPEND is ON or INCOMPLETE is KEEP.\n\nIf the incoming file has the same name as an existing file\n(either a data set or a PDS member),\nand WARNING is OFF, the original file will be overwritten.\nIf WARNING is set ON, however, Kermit-TSO will protect the existing\nfile in one of two ways.  If the @i(filespec) was entered with the\nsubcommand, Kermit will prompt the user for permission to overwrite\nthe file.  If the @i(filespec) came from the foreign Kermit, Kermit-TSO\nwill change the incoming name\nso as not to obliterate the pre-@\u00a6existing file.  It attempts to find\na unique name by successively modifying the original and checking for\nthe existence of such a file at each step.  The procedure operates on\nthe second qualifier of the full DSN (or the member\nname in the case of a PDS member) and\nbegins by truncating it\nto seven characters, if necessary, and\nthen appends @qq(0).  If a file by that name exists,\nKermit then replaces the @qq(0) with a @qq(1).\nIt continues in this manner up to @qq(9), and if an unused name cannot\nbe found, the transfer fails.\n\n@Heading<The SET Subcommand>\n\nSyntax: @q<SET> @i(parameter) \u00a2@i(value)|\n\nThe SET subcommand establishes or modifies various parameters controlling\nfile transfers.\nThe following SET\nparameters are available in\nKermit-TSO, but not in Kermit-370 in general:\n@Begin(Format,spread 0)\n@tabclear()@tabset(2.0inches)\nFILE\n  BLKSIZE@\\Block size for incoming file.\n  LRECL@\\Logical Record length for incoming file.\n  RECFM@\\Record format for incoming files.\n  SPACE@\\Allocation unit (in tracks) for incoming files.\n  UNIT@\\Device type for incoming files.\n  VOLUME@\\Disk pack for incoming files.\nPREFIX@\\Default disk area.\nTIMER@\\Determine whether Kermit-TSO should time out.\n@End(format)\n\n@Subheading(SET FILE BLKSIZE)\n\nSyntax: @q<SET FILE BLKSIZE> @i(number)\n\nThis sets the block size for incoming files to a @i(number)\nfrom 1 to 32760.  In the case of fixed-format files, this number is just\nan upper bound; the actual block size is taken to be the largest\nmultiple of the LRECL which does not exceed this limit.\nThe default is 6233.\n\n@Subheading(SET FILE LRECL)\n\nSyntax: @q<SET FILE LRECL> @i(number)\n\nThis sets the effective logical record length for incoming files to a\n@i(number) from 1 to 32756.  This parameter is not used for files of\nundefined record format.  Moreover, it is not exactly the same as the\nMVS/TSO LRECL, which is four more than the actual maximum data\nlength for varying-length records.\nThe default is 80.\n\n@Subheading<SET FILE RECFM>\n\nSyntax: @q<SET FILE RECFM> @i(option)\n\nThis sets the record format to use for incoming files.  Valid\n@i<option>s are\n\"Fixed\", \"Varying\" (the default), and \"Undefined\".\nThis parameter is thus limited to a subset of the range of\npossibilities for the MVS/TSO RECFM.  In Kermit-TSO, all incoming files\nof fixed or varying format are automatically blocked according to the\ncurrent block size.\nFixed-format records are padded or truncated, as needed, to the current\nLRECL.\n\n@Subheading<SET FILE SPACE>\n\nSyntax: @q<SET FILE SPACE> @i(number)\n\nThis sets the track allocation unit for incoming files to a number from\n1 to 32760.  The default is 5.  Since data sets are allowed as many as\n15 extents, this default provides for files up to 75 tracks.\n\n@Subheading<SET FILE UNIT>\n\nSyntax: @q<SET FILE UNIT> @i(type)\n\nThis sets the device type or group for incoming files.  Valid\n@i<option>s are installation-dependent.  The default is @q(SYSDA), which\nis universally available, but not necessarily desirable, since many\ninstallations restrict TSO data sets to a particular set of disk\nvolumes.  In such cases, there is usually a unit name which refers only\nto those TSO volumes, and the global @q(INIT) file @q('SYS1.KERMINI')\nshould set the file unit parameter to that name.\n\n@Subheading<SET FILE VOLUME>\n\nSyntax: @q<SET FILE VOLUME> @i(name)\n\nThis sets the disk volume for incoming files.  Valid @i<names>s are\ninstallation-dependent, but are, in any case, no more than six\nalphanumeric characters.  The default is blank (none); in that\ncase, the system chooses one of the available volumes of the\nspecified UNIT type.\n\n@Subheading<SET PREFIX>\n\nSyntax: @q<SET PREFIX> \u00a2@i(string)|\n\nThis subcommand is equivalent to the CWD subcommand (q.v.).\n\n@Subheading<SET TIMER>\n\nSyntax: @q<SET TIMER ON @i(or) OFF>\n\nThis specifies whether Kermit-TSO is to maintain a timer for\neach packet it expects to read.  The default is ON.  If the\ntimer is enabled, its duration\nis set by the SET SEND TIMEOUT subcommand initially and then set\naccording to the request of the other Kermit.\n\n@Heading(The CWD Subcommand)\n\nSyntax: @q<CWD> \u00a2@i(string or PDSname)()|\n\n@Index(User profile)\nThe CWD (Change Working Directory)\nsubcommand establishes a new default DSN prefix or turns prefixing off.\nThis facility is similar to, but not quite the same as, the prefix\ndefined in the User Profile.  The\n@i(string), if specified, must consist of one or more DSN qualifiers,\nand the first must already be an index\nin the disk catalog.  Subsequent file transfers\ntake place to and from the corresponding disk area whenever a fully\nqualified DSN (one enclosed in quotes) is not given.  The initial\nprefix is the user's logon ID, i.e., the same as the default prefix\nin the User Profile.  If no prefix is given in this subcommand, then\nprefixing is no longer performed.  The user must be careful to\nremember the distinction between the prefix defined for Kermit and that\nfor TSO.  Pure Kermit subcommands (like @q<SEND> and @q<TAKE>) always\nuse the former, but TSO commands (and the TSO-related subcommand\n@q<TYPE>) use the latter.\n\nAn alternative form of the CWD subcommand allows specifying the full (but\nunquoted) name of a PDS followed by paired parentheses.  When such a\n\"working directory\" is in use, a @i(filespec) other than a fully\nqualified DSN is taken to be a member name within the PDS.  For\nthat reason, this form should be used cautiously, since the Kermit-TSO\nlog @i(filespecs) (such as @q<KER.LOG> and @q<KER.REPLY>) would be\ntreated the same way.  In particular, it is advisable to turn on debug\nmode only when the Kermit prefix is a partially qualified DSN (once\nstarted, the log continues to the same data set regardless of what\nhappens to the prefix).\n\n@Heading(The DIRECTORY Subcommand)\n\nSyntax: @q<DIRECTORY> \u00a2@i(filespec)|\n\nThe DIRECTORY subcommand uses the TSO LISTCAT command to display part\nof the data set catalog, i.e., all data sets whose names begin with the\nqualifiers in the Kermit prefix (if any) concatenated with the given\n@i(filespec) (if any).\n\n@Heading(The TSO Subcommand)\n\nSyntax: @q<TSO>  @i(text of command)\n\nAlthough Kermit-TSO does not have a full set of its own\nsubcommands for managing\nTSO files, it provides those services through the operating system.\nYou can issue any TSO command, e.g., to\nlist, type, rename or\ndelete files, send messages, and so on.\nThe @q(TSO) subcommand under Kermit is\nsynonymous with the @q(HOST) subcommand.\n\n@Section<How to build an executable version of Kermit-TSO>\n\nBefore attempting to build Kermit-TSO, look in the\nKermit distribution under both IK0KER and IKTKER for an\ninstallation document, as well as \"beware\", help, and update files, and\nread them first.  They will probably contain information that is more\ncurrent than what you see here.\n\nKermit-TSO consists at present of a large assembly\n(KERMIT.ASM, containing the Kermit program) and a small\none (DYNALC.ASM, containing a subroutine for allocating data sets).\nAlthough DYNALC is a single file in the Kermit distribution, the\nsource for Kermit itself is in many pieces, some generic for Kermit-370\nand some specific to TSO.  All the necessary pieces are sequenced in\ncolumns 73-80 so that the numbers form a strictly increasing\nsequence when the pieces are correctly \"pasted\" together.\nIt is important to preserve the original sequence numbers so that\nupdates, if any, can be applied to the source.\n\nTo create a runnable version:\n\n@begin(enumerate,spread 0.5)\nCombine the following @qq(ASM) files from the Kermit distribution into\na single file with @q<RECFM=F(B)> and @q<LRECL=80>: IK0DOC, IK0MAC,\nIKTMAC, IK0DEF, IK0MAI, IK0CMD, IK0COM, IKTUTL, and IK0PRO.\nThe resulting file is the composite source for Kermit-TSO, called\nKERMIT.ASM.  This source must retain the original sequence numbers\nin columns 73-80 (in other words, be sure not to resequence the source\naccidentally by using the editor!)\n\nCopy or rename IKTDYN.ASM from the Kermit distribution\nto a file called\nDYNALC.ASM with @q<RECFM=F(B)> and @q<LRECL=80>.\n\nAssemble the source file(s).\n\nCreate the executable load module @q<KERMIT> using the linkage editor.\nKermit is designed to run as a command processor, and so it must be\nplaced in SYS1.CMDLIB or in a PDS concatenated to SYS1.CMDLIB (for\nexample, via the STEPLIB command).\n\n@Index(Initialization files)\nIf your site's ASCII/EBCDIC translation table\nfor TTY lines does not conform\nto the one listed in the appendix (which in turn conforms to the\none given in the IBM System/370 Reference Summary), then enter\nthe appropriate SET ATOE/ETOA/TATOE/TETOA subcommands into 'SYS1.KERMINI'.\n@i<NOTE:> If the ASCII/EBCDIC translation is not invertible,\nKermit will not and cannot work.\n@end(enumerate)\nIn order to verify the operation of a new version of Kermit-TSO, you may\nrun it under TEST using the CP parameter.\n\n@Section<What's New>\nBelow is a list of the more important features in Version\n@value(-tsoversion) of Kermit-TSO added since the release of TSO/3708\nin May 1987.\nSince Version 4.0 is the first release of Kermit-370 for TSO, some of\nthe \"new\" features are actually new only to the Columbia TSO\ndistribution.\n\n@begin(enumerate,spread 0.5)\nSuppression of LINE and CHAR delete functions during\nprotocol mode.\n\nAdvanced server functions and subcommands for talking to another Kermit\nrunning in server mode.\n\nLong packet protocol.\n\n@q(TYPE), @q(ECHO), @q(XTYPE), and @q(XECHO)\nsubcommands (the last two being Series/1\nanalogs of the first two.)\n\nREMOTE KERMIT commands honored\nby TSO server, including @q(SET), @q(SHOW), @q(TAKE),\n@q(TDUMP), @q(STATUS), @q(HOST), @q(TSO), @q(CWD), @q(DIR), and @q(TYPE).\n\nTEST mode for debugging.\n\nMulti-column, two-level, selective SHOW display.\n\nSend and acknowledge attribute packets.\n\nOptionally append to, rather than replace, old data sets with duplicate\nnames.\n\nAutomatic detection of terminal controller type (@q<TTY> or @q<SERIES1>).\n\nSYNADAF message in cases of disk I/O error.\n\n@end(enumerate)\n\n@Section(What's Missing)\n\nWork on Kermit-TSO will continue.  Features that need to be\nimproved or added include:\n@begin(itemize)\nDetect file properties from Attribute packets and allow overriding\ncurrent parameter settings.  Also implement file archiving.\n\nAdd a @q(SET REPEAT) subcommand.\n\nFinish @q(SET LINE), so that Kermit-TSO can be used as a local\nKermit, connecting to a remote host over an alternate\ncommunication port.  Add a @q(CONNECT) subcommand.\n\nCompute file size for outgoing A-packets and implement the SPACE\nsubcommand.\n\nReject files known (via A-packets) to be too big for available storage.\n\nIntercept @i(all) terminal output during protocol mode.\n\nAllow wildcard notation for PDS members.\n@end(itemize)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTKERUP": {"ttr": 2569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "./ * SC88006 - Trim lines from TAKE files, count all bytes sent (even retry)\n./ * SC88018 - Support longer minimum abbreviation for TYPE (e.g., TSO)\n./ * SC88028 - Restore SHOW ALL\n./ * SC88035 - Implement END cmd for TSO, add prompting for SEND/GET\n./ * SC88042 - Use STCC to change CHARDEL+LINEDEL (TSO)\n./ * SC88043 - Default TAKE type, fix DIR + REMOTE utils, fix OPENF T for (TSO)\n./ * SC88048 - Set FDBACTV via TAKTAB instead of IKJDAIR (TSO)\n./ * SC88049 - More re-entrancy, etc. (TSO)\n./ * SC88050 - Trim blanks on SEND only for RECFM=F\n./ * SC88053 - Better error handling for name collisions and BINARY\n./ * SC88054 - Change def. UNIT, fix CWD, catch HOST cmds > 8 chars (TS\n./ * SC88063 - Full-screen greetings for protocol mode (TSO)\n./ * SC88070 - Treat PDS member names better (TSO)\n./ * SC88071 - Allow disabling A-packets\n./ * SC88074 - Fixes for talking to other Kermit server, honor STOP\n./ * SC88076 - Clean up file collision, OPEN, RECFM=V truncation (TSO)\n./ * SC88083 - Preserve existing PDS attributes; clear screen (TSO)\n./ * SC88087 - Mark datasets \"not in use\" after host command (TSO)\n./ * SC88089 - Suppress filename collision check when WARN is OFF\n./ * SC88090 - Avoid BLKSIZE > disk track size (TSO)\n./ * SC88091 - Tune up VTAM fix (TSO)\n./ * SC88092 - Treat NAK(n+1) as ACK(n); tabulate file-by-file status\n./ * SC88095 - Allow line delimiter on input, avoid STACK EOD ABEND (TSO)\n./ * SC88096 - Generalize wildcards to include members (TSO)\n./ * SC88100 - Skip wildcard setup if in-core file; clear NAK0 earlier\n./ * SC88101 - Ignore sequence numbers in TAKE files (TSO)\n./ * SC88104 - Avoid problem with 0 < BLKSIZE < LRECL (TSO)\n./ * SC88106 - Avoid msg when deleting KER.BUF + strip leading car.ctl (TSO)\n./ * SC88113 - Clean up implied file name extension for TAKE (TSO)\n./ *                  .....Updates.....\n./ * SC88006 - Trim lines from TAKE files, count all bytes sent (even retry)\n./ I 02300000          $ 2300100 100                  01/07/88 14:52:50\n         LR    3,1                                             @SC88006\n         AR    3,0           Get end of buffer                 @SC88006\n         BCTR  3,0                                             @SC88006\n         CLI   0(3),C' '     Find last non-blank               @SC88006\n         BE    *-6                                             @SC88006\n         LA    0,1(3)        One past end of buffer            @SC88006\n         SR    0,1           Get trimmed length                @SC88006\n         BNP   LOOP          Nothing there, ignore it          @SC88006\n./ D 08184000 08188000                                01/07/88 14:52:50\n./ I 08526000          $ 8526100 100                  01/07/88 14:52:50\n         LM    14,15,TOUTOT  Update send count                 @SC88006\n         ALR   15,8                                            @SC88006\n         BNO   *+8                                             @SC88006\n         AL    14,F1                                           @SC88006\n         STM   14,15,TOUTOT  Save new count                    @SC88006\n./ * SC88018 - Support longer minimum abbreviation for TYPE (e.g., TSO)\n./ R 03080000          $ 3080000 500                  01/20/88 15:17:14\n         KW    'TYPE',LUPHSTI,MIN=TYPMIN                       @SC88018\n./ R 05843000          $ 5843000 500                  01/19/88 19:33:45\n         L     3,4(8)        Ptr to AID                        @SC88019\n./ * SC88028 - Restore SHOW ALL\n./ I 03519000          $ 3519500 500                  01/28/88 18:44:09\n         KW    'ALL',SHOALL,MIN=3                              @SC88028\n./ I 03548000          $ 3548300 300                  01/28/88 18:44:09\n         CLI   SETXI,X'91'   SHOW?                             @SC88028\n         BNE   SHOBAD        No, kill it                       @SC88028\n./ * SC88035 - Implement END cmd for TSO, add prompting for SEND/GET\n./ R 01411000          $ 1411000 500                  02/04/88 18:44:38\n&KDATE   SETC  '88/1/31'                                       @SC88035\n./ I 03053000          $ 3053200 200                  02/04/88 18:44:38\n         AIF   ('&KSYS' NE 'TSO').TS0Z                         @SC88035\n         KW    'END',KRMXIT,MIN=3  Synonym for QUIT            @SC88035\n.TS0Z    ANOP\n./ R 03099000          $ 3099000 300                  02/04/88 18:44:38\nKRMGET   PTEXT 'Foreign filespec - ',AREG=1,LREG=0             @SC88035\n         BAL   2,USNASKA     Prompt if user omitted args       @SC88035\n         LA    0,FFGET+FFRCF                                   @SC88035\n./ I 03101000          $ 3101300 300                  02/04/88 18:44:38\n         PTEXT '&KSYS filespec - ',AREG=1,LREG=0               @SC88035\n         BAL   2,USNASKT     Prompt if necessary               @SC88035\n./ R 03135000          $ 3135000 300                  02/04/88 18:44:38\nKRMSND   PTEXT '&KSYS filespec - ',AREG=1,LREG=0               @SC88035\n         BAL   2,USNASKA     Prompt if necessary               @SC88035\n         LA    0,FFSND                                         @SC88035\n./ I 03137000          $ 3137300 300                  02/04/88 18:44:38\n         PTEXT 'Foreign filespec - ',AREG=1,LREG=0             @SC88035\n         BAL   2,USNASKT     Prompt if user omitted args       @SC88035\n./ I 03151000          $ 3151070 70                   02/04/88 18:44:38\n*\nUSNASKA  NI    KFLG,255-PRMP Assume no prompting               @SC88035\n         FTOKN N=USNASK      Check for some text waiting       @SC88035\n         BR    2             Ok, use it                        @SC88035\nUSNASKT  TM    KFLG,PRMP     Is prompting required?            @SC88035\n         BZR   2             No, ok                            @SC88035\nUSNASK   OI    KFLG,PRMP     Must prompt for both filespecs    @SC88035\n         LA    3,CMD         Use input buffer                  @SC88035\n         ST    3,ADR                                           @SC88035\n         RTEXT (3),PROMPT=((1),(0)) Ask for filespec           @SC88035\n         ST    0,LEN         Save string length                @SC88035\n         BR    2                                               @SC88035\n./ I 03198000          $ 3198500 500                  02/04/88 18:44:38\nPRMP     EQU   X'10'         Prompting for filespecs           @SC88035\n./ I 08655000          $ 8655500 500                  02/04/88 20:31:09\n         NI    FL2,255-PROTO End protocol mode                 @SC88035\n./ * SC88042 - Use STCC to change CHARDEL+LINEDEL (TSO)\n./ R 05905000          $ 5905000 1\nSTMOK    DS    0H                                              @SC88042\n./ R 05942000          $ 5942000 1\n         ICM   1,15,STMUOFF  Turn off, just in case            @SC88042\n./ R 05946000 05953000 $ 5946000 1000\n         ICM   1,3,STMUCH    Restore user's settings           @SC88042\n         ICM   1,12,STMUOFF  Set flags to modify CDEL+LDEL     @SC88042\nSTMD     LA    0,7                                             @SC88042\n         SLL   0,24          Set entry code for STCC           @SC88042\n         SVC   94                                              @SC88042\n         STC   0,STMUCH      Save previous LDEL                @SC88042\n         STC   1,STMUCH+1    and CDEL                          @SC88042\n         DROP  1,2                                             @SC88042\n./ R 05965000          $ 5965000 1\nSTMUOFF  DC    X'3000FFFF'   No char & line delete             @SC88042\n./ * SC88043 - Default TAKE type, fix DIR + REMOTE utils, fix OPENF T for PDS\n./ I 01085000          $ 1085500 500\nDESTL    DS    H'0'          Length                            @SC86299\n./ D 01088000\n./ R 05084000 05085000 $ 5084000 300\n         LA    1,LFID                                          @SC88043\n         LA    14,DEST       Default to prefix                 @SC88043\n         LH    15,DESTL                                        @SC88043\n         ICM   15,8,LOCASE+C' '                                @SC88043\n         MVCL  0,14          Copy with blank fill              @SC88043\n         LR    0,8           Restore ptr to name field         @SC88043\n./ R 05122000          $ 5122000 500\nFSPCP2   MVC   FSPCH1,0(6)   Save 1st char                     @SC88043\n         MVI   TRTBL+C'.',1  Set to intercept these            @SC88043\n./ I 05215000          $ 5215050 50\n         TM    FSPFLG,FFHDR  Parse for TAKE?                   @SC88043\n         BNZ   RTRN0         No, fine                          @SC88043\n         CLI   FSPCH1,C''''  Fully qualified?                  @SC88043\n         BE    RTRN0         Yes, honor it                     @SC88043\n         LA    1,44(8)       No, find end of name              @SC88043\n         LR    14,1                                            @SC88043\n         TRT   0(44,8),TRTBL Get ptr to end+1 in R1            @SC88043\n         SR    14,1          Length of name                    @SC88043\n         CH    14,=H'5'                                        @SC88043\n         BL    RTRN0         Too short anyway                  @SC88043\n         S     1,F8                                            @SC88043\n         CLC   0(8,1),SYSTAKE+5 Is it .KERMINI?                @SC88043\n         BE    RTRN0         Yes, that's ok                    @SC88043\n         CLC   =C'.TAKE',3(1) Or is is .TAKE?                  @SC88043\n         BE    RTRN0         That's ok too                     @SC88043\n         MVC   8(5,1),=C'.TAKE' No, use default type           @SC88043\n./ D 05269000\n./ I 05428000          $ 5428500 500\nFSPCH1   DS    C             Saved 1st char of spec.           @SC88043\n./ I 05431000          $ 5431500 500\n* On entry, R6->help command string\n./ R 05433000          $ 5433000 1\n         LR    8,6           Save ptr to command               @SC88043\n./ R 05441000 05447000 $ 5441000 1000\nKHLI     LM    6,7,SCANPTR   Rest of string                    @SC88043\n         AR    6,7           Ptr to end                        @SC88043\n         LR    0,8           Start of command                  @SC88043\n         SR    6,0           Total length                      @SC88043\n         NI    FL4,255-UCMD                                    @SC88043\n./ R 05519200 05519400 $ 5519200 50\n         CLI   ECTSCMD,C'H'  Is it HELP?                       @SC88043\n         BNE   *+12          It's not subcommand help          @SC88043\n         TM    FL4,UCMD      It might be (if generated)        @SC88043\n         BZ    *+10          ... yes, HELP as subcommand       @SC88043\n./ D 05907000 05910000\n./ I 05972000          $ 5972200 200\n*       (will say \"found\" if member given, but it's not a PDS) @SC88043\n*       (will say \"not found\" if given member of PDS is missing)\n./ I 06035000          $ 6035500 500\n         LR    5,2           Copy DSN ptr again                @SC88043\n./ R 06039000          $ 6039000 50\n         CLI   FABDSN+44,C' ' Did we want a member?            @SC88043\n         BE    DSKTE1        No, fine                          @SC88043\n         TM    DS1DSO,2      Was it a PDS?                     @SC88043\n         BZ    DSKTE1        No, ignore the conflict for now   @SC88043\n         MVI   FABDSN+44,0   Signal DSORG=PO                   @SC88043\n         OPENF I,FABDSN,FILFDB,DSKTKT,E=RTRN1                  @SC88043\n         L     1,DSKTKT                                        @SC88043\n         FIND  (1),44(5),D   See if member is there            @SC88043\n         LR    5,15          Save return code                  @SC88043\n         CLOSF DSKTKT        Close it up again                 @SC88043\n         LTR   5,5                                             @SC88043\n         BNZ   RTRN1         Wasn't there                      @SC88043\nDSKTE1   BAL   14,DSKVALS    Fill out FDB                      @SC88043\n./ I 06047000          $ 6047400 400\n         TM    FABBUFCB+3,1  Any buffers?                      @SC88043\n         BO    DSKFRPZ       No, fine                          @SC88043\n./ I 06048000          $ 6048500 500\nDSKFRPZ  DS    0H            Now free whole FAB                @SC88043\n./ I 06115000          $ 6115100 100\n         MVC   DSKPSAV(8),DESTL+1 Save Kermit prefix           @SC88043\n         L     14,ORGR1      Find User prefix                  @SC88043\n         USING CPPL,14                                         @SC88043\n         L     14,CPPLUPT                                      @SC88043\n         USING UPT,14                                          @SC88043\n         MVC   DESTL+1(1),UPTPREFL Use that for now            @SC88043\n         MVC   DEST(7),UPTPREFX                                @SC88043\n         DROP  14                                              @SC88043\n./ I 06122000          $ 6122050 50\n         LTR   0,0           Was it DIR?                       @SC88043\n         BNZ   DSKUTP        No, use filespec(s) as is         @SC88043\n         MVC   0(4,7),=C'LVL(' Yes, maybe need an option       @SC88043\n         MVC   4(44,7),0(1)  If so, need whole filespec        @SC88043\n         LA    0,4(7)                                          @SC88043\n         LA    1,44                                            @SC88043\n         LA    14,DEST       Comparand is user prefix          @SC88043\n         LH    15,DESTL                                        @SC88043\n         ICM   15,8,BLANK    Extended with blanks              @SC88043\n         CLCL  0,14                                            @SC88043\n         BE    DSKUTX        Just that - no options            @SC88043\n         LA    1,4+44(7)                                       @SC88043\n         TRT   4(44,7),TRTBL Find end of filespec              @SC88043\n         MVI   0(1),C')'     And complete the syntax           @SC88043\n         LA    7,1(1)        End of command string             @SC88043\n         B     DSKUTX        Do it                             @SC88043\nDSKUTP   DS    0H            Other utilities...                @SC88043\n./ I 06127000          $ 6127500 500\nDSKUTX   MVC   DESTL+1(8),DSKPSAV Restore Kermit prefix        @SC88043\n./ R 06131000          $ 6131000 1\n         NI    FL4,255-UCMD  Not user command: adr=(0),len=(6) @SC86295\n./ I 06180000          $ 6180500 500\n         MVI   FABMACR,X'48' MACRF=GL                          @SC88043\n./ R 06182000          $ 6182000 1\n         BNE   *+16          No                                @SC88043\n./ I 06183000          $ 6183500 500\n         MVI   FABMACR,X'24' ... and MACRF=R                   @SC88043\n./ I 06184000          $ 6184500 500\n         MVC   FABMACR+1(1),FABMACR                            @SC88043\n./ R 06193000          $ 6193000 1\n         MVI   FABOFLGS,2    Not open yet                      @SC88043\n./ I 06242000          $ 6242200 200\n         MVI   CIROPT,2      Get full names                    @SC87015\n         L     3,CIRWA       Initialize length ptrs            @SC87015\n         MVC   0(4,3),CIRWAL                                   @SC87015\n./ D 06270000\n./ I 06507000          $ 6507500 500\nDSKTKT   DS    A             Ptr for testing member            @SC88043\n./ I 06509000          $ 6509500 500\nDSKPSAV  EQU   DSKMNTH,8     Buffer for saved prefix           @SC88043\n./ * SC88048 - Set FDBACTV via TAKTAB instead of IKJDAIR (TSO)\n./ D 01031000\n./ D 01072000 01074000\n./ D 01181000\n./ D 05891000 05898000\n./ R 06412000 06427000 $ 6412000 1000\n         L     7,4(13)       Get previous stack frame          @SC88048\n         USING SERVERSV,7    Assume SERVER or USNTRF           @SC88048\n         ICM   0,15,TAKLEV   Any TAKE files open?              @SC88048\n         BNPR  14            No, that's fine                   @SC88048\n         CH    0,=Y(TAKMAX)  Be sure this is valid             @SC88048\n         BNLR  14            Oops, give up                     @SC88048\nDSKVACT  LR    6,0                                             @SC88048\n         SLA   6,2                                             @SC88048\n         L     6,TAKTAB-4(6) Fetch a file ticket               @SC88048\n         CLC   FABDSN,FABDSN-FABD(6) Does the name match?      @SC88048\n         BE    DSKVACS       Yes, this file is in use          @SC88048\n         BCT   0,DSKVACT     No, keep looking                  @SC88048\n         BR    14            No match, that's ok               @SC88048\nDSKVACS  OI    FDBFLGS,FDBACTV Yes, turn on flag               @SC88048\n         DROP  7                                               @SC88048\n./ * SC88049 - More re-entrancy, etc. (TSO)\n./ R 03099600          $ 3099600 100                  03/02/88 17:46:55\n         LA    0,FFGET                                         @SC88049\n./ R 03102000          $ 3102000 500                  03/02/88 17:46:55\n         LA    0,FFGET+FFRCF                                   @SC88049\n./ R 05058000 05059000 $ 5058000 1000                 03/02/88 17:50:49\n* Parse GET 1st                        X\n* Parse GET 2nd            X           X         set ROVR properly\n./ I 05070000          $ 5070200 200\n         LR    5,0                                             @SC88049\n         SRL   5,4           Convert flags to index            @SC88049\n./ R 05078000 05082000 $ 5078000 500\n         IC    5,FSP0(5)     Get dispatch adr                  @SC88049\n         B     FSP0(5)       Go to proper handler              @SC88049\n*               TAKE        GET 1st    SEND 1st    Generic     @SC88049\nFSP0    DC AL1(FSPCPY-FSP0,FSPSN2-FSP0,FSPASC-FSP0,FSPUTL-FSP0) SC88049\n*               RECEIVE     GET 2nd    SEND 2nd    F-packet    @SC88049\n        DC AL1(FSPRC-FSP0,FSPRC-FSP0,FSPSN2-FSP0,FSPHD-FSP0)   @SC88049\nFSPUTL   TM    FSPFLG,FFWLD  Utility: default to all files?    @SC88049\n./ D 05095000 05098000\n./ D 05105000 05109000\n./ R 05263000          $ 5263000 500                  02/24/88 18:55:31\n         OPENF I,FSPDSN,FILFDB,PDSPTR,E=FSPDERM                @SC88049\n./ R 05298000 05299000 $ 5298000 1000\n         TM    FSPFLG,FFGET  User typed it?                    @SC87015\n         BO    FSPRMP2       Yes                               @TS86001\n./ I 05305000          $ 5305080 80                   02/24/88 18:55:31\nFSPDERM  PTEXT '  File name collision'                         @SC88049\n         L     1,EMSGP       Explanatory message               @SC88049\n         MVC   0(21,1),0(3)                                    @SC88049\n         ST    4,EMSGL                                         @SC88049\n         B     FSP0H         Return ptrs and rc=1              @SC88049\n./ R 05322000          $ 5322000 500                  02/24/88 18:55:31\n         BNE   FSPDERM       No, abort operation               @SC88049\n./ I 05853000          $ 5853500  00000500\n         S     15,F3         Deduct AID length                 @SC88049\n./ R 06008000 06010000 $ 6008000 1000\n         MVI   DSKOPLS,X'80' Code for OPEN INPUT               @SC88049\n         B     DSKOPT        Open and test                     @SC88049\n./ R 06024000 06026000 $ 6024000 1\nDSKOPN   MVI   DSKOPLS,X'8F' Code for OPEN OUTPUT              @SC88049\n./ R 06028000          $ 6028000 1\n         OPEN  MF=(E,DSKOPLS)                                  @SC88049\n./ R 06046000 06047000 $ 6046000 400\n         MVI   0(1),X'80'    Flag for normal close             @SC88049\n         LR    2,1           Save ptr                          @SC88049\n         CLOSE MF=(E,(1))    Close it                          @SC88049\n         XC    0(4,2),0(2)   Ok, now clear ticket              @SC88049\n./ I 06166000          $ 6166500 500\n         ST    3,DSKOPLS     Save for OPEN plist               @SC88049\n./ R 06461000          $ 6461000 1\n         LR    6,5                                             @SC86299\n./ R 06464000          $ 6464000 1\n         LH    6,FABLRECL                                      @SC86299\n./ R 06467000 06470000 $ 6467000 500\n         LTR   6,6                                             @SC86299\n         BP    DSKOPQ                                          @SC86299\n         LA    6,80                                            @SC86299\n         BAL   2,DSKTV                                         @SC88049\n          LA   6,4(6)        Allow LRECL=84 for VB             @SC88049\nDSKOPQ   TM    FABRECFM,FABRECF                                @SC86299\n./ R 06473000 06474000 $ 6473000 1000\n         DR    4,6                                             @SC86299\n         MR    4,6                                             @SC86299\n./ R 06476000          $ 6476000 1\nDSKOPV   LA    4,4(6)                                          @SC86299\n./ R 06480000          $ 6480000 1\nDSKOPS   STH   6,FABLRECL                                      @SC86299\n./ I 06493000          $ 6493500 500\n         ORG   CAMVOLS+100   Do a little overlaying            @SC88049\n./ I 06507500          $ 6507600 100\nDSKOPLS  DS    F             Ptr to new FAB                    @SC88049\n./ * SC88050 - Trim blanks on SEND only for RECFM=F\n./ I 08760000          $ 8760300 300                  02/23/88 19:58:17\n         CLI   FRECF,C'F'                                      @SC88050\n         BNE   IBFTRUZ       Don't truncate if varying length  @SC88050\n./ R 08766000          $ 8766000 500                  02/23/88 19:58:17\nIBFTRUZ  BCTR  9,0           Point to last char of record      @SC88050\n./ * SC88053 - Better error handling for name collisions and BINARY\n./ I 02648000          $ 2648500 500                  02/23/88 20:16:43\nEMSGL    DS    F             Length of msg                     @BS86090\n./ D 02664000                                         02/23/88 20:16:43\n./ R 07556000          $ 7556000 500                  02/23/88 20:16:43\n         KCALL FSPEC,FILNAM,E=RECNER Check collisions          @SC88053\n./ I 07662000          $ 7662300 300                  02/23/88 20:16:43\nRECNER   LA    1,DSKSTT      Name error, point to dummy block  @SC88053\n         MVC   FABCOMM-FABD(8,1),=CL8'Collisn'  Indicate type  @SC88053\n./ D 08801000 08802000                                02/23/88 20:16:43\n./ R 08805000 08806000 $ 8805000 500                  02/23/88 20:16:43\n         BE    OBFLEN        Ok, do it                         @SC88053\n         L     1,FILPTR      Ptr to disk FAB                   @SC88053\n         MVC   FABCOMM-FABD(8,1),=CL8'Binary'                  @SC88053\n         B     OBFERR        No, give up                       @SC88053\n./ * SC88054 - Change def. UNIT, fix CWD, catch HOST cmds > 8 chars (TS\n./ R 01055000          $ 1055000 1\n&N&U     DC    CL8' '        Default unit                      @SC88054\n./ R 01175000 01178000 $ 1175000  00000050\n MNOTE '---        FREEPOOL, GETLINE, GETMAIN, GTSIZE, IDENTIFY,'\n MNOTE '---        IKJCPPL, IKJECT, IKJGTPB, IKJIOPL, IKJUPT,'\n MNOTE '---        LINK, LOAD, LOCATE, OBTAIN, OPEN, POST,'\n MNOTE '---        PUTLINE, SAVE, STAX, STIMER, STSIZE,'\n MNOTE '---        SYNADAF, SYNADRLS, TGET, TPUT, TTIMER, WAIT'\n./ D 01180000\n./ D 01185000\n./ I 05519000          $ 5519060 60\n         CLM   7,7,F0                                          @SC88054\n         BNE   ICPCMIL       Command name longer than 8        @SC88054\n./ R 06282000          $ 6282000 500\n         MVC   NXFN,0(1)     Copy name                         @SC88054\n         LA    15,NXFN       Temp name ptr                     @SC88054\n./ R 06285000 06287000 $ 6285000 1000\n         BNZ   RTRN0         No conflict, assume valid         @SC88054\n         TM    DS1DSO,2      Was a full DSN, check DSORG       @SC88054\n         BO    DSKCWD1       It's a PDS -- see if it matches   @SC88054\n./ R 06290000 06291000 $ 6290000 1\n         B     RTRN0                                           @SC88054\n./ * SC88063 - Full-screen greetings for protocol mode (TSO)\n./ I 05821000          $ 5821200 200\n         STFSMODE ON,INITIAL=YES,NOEDIT=YES Full-screen mode   @TS86001\n./ I 05824000          $ 5824200 200\n         STFSMODE OFF                                          @TS86001\n./ R 05848400          $ 5848400 10\nSCRWM    MVI   4(8),X'03'    Flags: FULLSCR code               @SC88063\n./ * SC88070 - Treat PDS member names better (TSO)\n./ R 05084900 05085200 $ 5084900 300                  03/10/88 13:02:57\n         BAL   2,FSPBPAD     Copy with blank fill              @SC88070\n./ R 05145000          $ 5145000 100                  03/10/88 13:02:57\n         BNE   FSPDOT        No, join with a dot               @SC88070\n         BAL   2,FSPBFIL     Yes, prefix is entire DSN         @SC88070\n         TM    FSPFLG,FFHDR  Reading from header packet?       @SC88070\n         BNO   FSPCPP        No, user must have entered it     @SC88070\n         BAL   9,FSPFDOT     Ok, find file type, if any        @SC88070\n         LR    7,1           And skip it                       @SC88070\n         B     FSPCPG                                          @SC88070\n./ R 05150000 05154000 $ 5150000 1000                 03/10/88 13:02:57\nFSPCPA   BAL   9,FSPFDOT     Find a break (dot or end)         @SC88070\n./ R 05181000 05187000 $ 5181000 1000                 03/10/88 13:02:57\nFSPCPF   BAL   2,FSPBFIL     Fill the rest with blanks         @SC88070\n./ I 05196000          $ 5196500 500                  03/10/88 13:02:57\n         LA    15,8          Length of member name, if any     @SC88070\n./ D 05198000                                         03/10/88 13:02:57\n./ R 05200000 05201000 $ 5200000 1000                 03/10/88 13:02:57\nFSPCPM   LR    14,0                                            @SC86299\n         ICM   7,8,BLANK                                       @SC86299\n./ I 05230000          $ 5230070 70                   03/10/88 13:02:57\n*\nFSPBFIL  LR    1,15          Length remaining                  @SC88070\n         SR    15,15         Set up just to pad                @SC88070\nFSPBPAD  ICM   15,8,BLANK                                      @SC88070\n         MVCL  0,14          Copy with blank fill              @SC88070\n         BR    2                                               @SC88070\n*\nFSPFDOT  LA    1,1(7)        End of string                     @SC88070\n         LA    2,2           In case no breaks                 @SC86299\n         SR    7,6                                             @SC86299\n         EX    7,FSPTRT      Find break                        @SC86299\n         AR    7,6           Restore ptr to last char          @SC86299\n         BR    9                                               @SC88070\n./ R 05333000 05337000 $ 5333000 200                  03/10/88 13:02:57\n         MVC   0(8,7),44(4)  Yes, use member name              @SC88070\n         LA    1,8(7)        Possible end                      @SC88070\n         TRT   0(8,7),TRTBL  Find end of name                  @SC88070\n         LR    5,1           Save                              @SC88070\n         BAL   9,FSPESCNS    Find last DSN qualifier           @SC88070\n         MVI   0(5),C'.'     Join to member name               @SC88070\n         MVC   1(8,5),0(3)   Copy the qualifier                @SC88070\n         SR    5,7           Length of member name             @SC88070\n         LA    1,1(5,1)      Adjust effective end of DSN       @SC88070\n         B     FSPENTR       Done, convert to ASCII            @SC88070\nFSPENT   BAL   9,FSPESCNS    Find last qualifier               @SC88070\n         BCTR  3,0           Move back to separating dot       @SC88070\n         BAL   9,FSPESCN     Back to previous qualifier        @SC88070\n         MVC   0(17,7),0(3)  At most 2 tokens + dot            @SC86299\n         B     FSPENTR       Done, convert to ASCII            @SC88070\n*\nFSPESCNS LA    1,44(4)                                         @SC86299\n./ D 05339000                                         03/10/88 13:02:57\n./ D 05346000                                         03/10/88 13:02:57\n./ R 05348000          $ 5348000 500                  03/10/88 13:02:57\n         BR    9                                               @SC88070\nFSPENTR  DS    0H            Translate and adjust ptr          @SC88070\n./ * SC88071 - Allow disabling A-packets\n./ I 03531000          $ 3531500 500                  03/14/88 22:41:57\n         KW    'ATTRIBUTES',SHOATT,MIN=3                       @SC88071\n./ I 03598000          $ 3598300 300                  03/14/88 22:41:57\nSHOATT   BAL   14,SHOOO      On or off                         @SC88071\n          OI   SCAPA,8                                         @SC88071\n./ I 07605000          $ 7605500 500                  03/14/88 22:41:57\n         DC    C'+',AL3(RECRJC) File disposition               @SC88071\n./ * SC88074 - Fixes for talking to other Kermit server, honor STOP\n./ R 01411000          $ 1411000 500                  03/14/88 18:44:38\n&KDATE   SETC  '88/3/14'                                       @SC88074\n./ R 01847000          $ 1847000 500                  03/16/88 22:22:51\nINPUTINR DS    0H                                              @SC88074\n./ I 01848000          $ 1848200 200                  03/16/88 22:22:51\n         TM    FL3,ZPRO                                        @SC88074\n         BO    INPUTQRT      Must stop pronto                  @SC88074\n         MVI   ERRNUM,ERRIPT Assume bad packet type            @SC88074\n./ R 01948000          $ 1948000 500                  03/16/88 22:22:51\n         B     12(8)         Skip over 3-entry table           @SC88074\n./ I 02600000          $ 2600500 500                  03/16/88 22:22:51\nZPRO     EQU   X'80'         Stop protocol mode pronto         @SC88074\n./ I 03110000          $ 3110500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(KRMGETAB) Stop                      @SC88074\n./ I 03128000          $ 3128500 500                  03/14/88 22:27:06\n         MVI   RTYPE,0       No packet read yet                @SC88074\n./ R 04191000          $ 4191000 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(GENRET)   Stop       these 3        @SC88074\n         DC    AL1(00),AL3(GENAB3)   Error      items.         @SC88074\n./ R 04196000          $ 4196000 300                  03/14/88 22:27:06\n         DC    AL1(AX),AL3(GENRPX)   Long reply already INIT   @SC88074\n         DC    AL1(AF),AL3(GENRPX)   Long reply already INIT   @SC88074\n         DC    XL1'FF',AL3(GENRET)   Stop                      @SC88074\n         DC    AL1(00),AL3(GENAB3)   Error                     @SC88074\n./ R 04221000          $ 4221000 300                  03/14/88 22:27:06\nGENRPX   CLI   BCTR,1        This works only with 1-byte check @SC88074\n         BNE   GENAB3                                          @SC88074\nGENRPL   DS    0H            Long reply                        @SC88074\n./ D 04224000                                         03/14/88 22:27:06\n./ I 04236000          $ 4236300 300                  03/14/88 22:27:06\n         B     GENABR                                          @SC88074\nGENAB3   IC    9,FL3         Save flags                        @SC88074\n./ I 07016000          $ 7016500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(SRVSTP)  Stop                       @SC88074\n./ I 07018000          $ 7018300 300                  03/16/88 22:22:51\n         TM    FL3,ZPRO      Must stop?                        @SC88074\n         BO    SRVXIT        Yes, return immediately           @SC88074\n./ I 07221000          $ 7221200 200                  03/16/88 22:22:51\n*\nSRVSTP   MVC   TIMOUT,SRVTIM Restore timeout                   @SC88074\n         B     SRVXIT                                          @SC88074\n./ I 07267000          $ 7267500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(SNDABR)   Stop                      @SC88074\n./ R 07514000          $ 7514000 200                  03/14/88 22:27:06\n         CLI   RTYPE,AF      Starting with file header packet? @SC88074\n         BE    RECFHD        Yes, skip INIT stuff              @SC88074\n         CLI   RTYPE,AX                                        @SC88074\n         BE    RECFHD        Yes, skip INIT stuff              @SC88074\n./ R 07518000 07519000 $ 7518000 500                  03/14/88 22:27:06\n         CLI   RTYPE,0                                         @SC88074\n         BNE   RECSRV        Skip read if already got packet   @SC88074\n         MVI   SEQ,0         Reset packet number               @SC88074\n./ R 07529000 07530000 $ 7529000 500                  03/14/88 22:27:06\nRECFIL   KCALL RPACK         Get header packet                 @SC88074\nRECFHD   LA    8,RECFNST     Next state table for RECEIVE F    @SC88074\n         SR    3,3           Clear retry counter for INPUTLUP  @SC88074\n         BAL   9,INPUTINR    Interpret header packet           @SC88074\n./ I 07673000          $ 7673500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(RECABR)   Stop                      @SC88074\n./ I 07677000          $ 7677500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(RECABR)   Stop                      @SC88074\n./ I 07681000          $ 7681500 500                  03/16/88 22:22:51\n         DC    XL1'FF',AL3(RECABR)   Stop                      @SC88074\n./ I 08288000          $ 8288500 500                  03/16/88 22:22:51\n         NI    RTYPE,X'7F'   Assure conventional ASCII char    @SC88074\n./ I 08372000          $ 8372040 40                   03/16/88 22:22:51\n         L     8,APKT        Ptr to packet                     @SC88074\n         MVC   STOPBUF,0(8)  Copy to work area                 @SC88074\n         LA    8,STOPBUF                                       @SC88074\n         L     7,RCVPKL                                        @SC88074\n         AR    7,8           Ptr to packet end in work area    @SC88074\n         CLC   RMARK,0(8)                                      @SC88074\n         BE    RPKNAK        Assume bad packet if SOH present  @SC88074\n         BCTR  7,0                                             @SC88074\n         CLC   REOL,0(7)                                       @SC88074\n         BNE   *+6                                             @SC88074\n          BCTR 7,0           Don't count closing EOL           @SC88074\n         TR    STOPBUF,ATOE                                    @SC88074\n         TR    STOPBUF,UPCASE                                  @SC88074\n         CLI   0(8),C'S'                                       @SC88074\n         BE    *+8                                             @SC88074\n          LA   8,1(8)        Allow one extra character in front@SC88074\n         S     7,F3          Back len(STOP) - 1                @SC88074\n         CR    7,8                                             @SC88074\n         BNE   RPKNAK        Doesn't match exactly             @SC88074\n         CLC   =C'STOP',0(8)                                   @SC88074\n         BE    RPKSTP        Exact match                       @SC88074\n./ I 08374000          $ 8374100 100                  03/16/88 22:22:51\n*                                                              @SC88074\nRPKSTP   OI    FL3,ZPRO      Indicate stopping protocol mode   @SC88074\n         MVI   ERRNUM,ERRTRC Transfer cancelled, if any        @SC88074\n         MVI   RTYPE,X'FF'   Special packet type for quitting  @SC88074\n         RET                                                   @SC88074\n./ I 08375000          $ 8375100 100                  03/16/88 22:22:51\nSTOPBUF  DS    CL8           Work area                         @SC88074\n./ I 08485000          $ 8485500 500                  03/14/88 22:27:06\n         MVI   RTYPE,0       Clear previous received packet    @SC88074\n./ R 08644000          $ 8644000 500                  03/16/88 22:22:51\nINTINICL NI    FL3,255-ZPRO  Now stopping protocol mode        @SC88074\n         TM    FL2,PROTO     Was line open?                    @SC88074\n./ * SC88076 - Clean up file collision, OPEN, RECFM=V truncation (TSO)\n./ R 05268000 05270000 $ 5268000 2000                 03/16/88 16:34:49\n         LA    9,FSPRMPT     Go if member is found             @SC88076\n         BALR  3,0           Set up any rechecking             @SC88076\n./ R 05280000          $ 5280000 1000                 03/16/88 16:34:49\n         BO    FSPDERM       Too bad                           @SC88076\n./ D 05305000                                         03/16/88 16:34:49\n./ R 05319000          $ 5319000 1000                 03/16/88 16:34:49\n         BNP   FSPDERR       If zero give up                   @SC88076\n./ R 05321000 05322000 $ 5321000 1000                 03/16/88 16:34:49\n         CLC   =C'OK',0(7)   Was reply \"ok\"?                   @SC88076\n         BNE   FSPDERR       No, abort operation               @SC88076\n./ I 05480850          $ 5480870 20                   03/16/88 16:34:49\n         MVI   CPECB,0       Clear ECB (for neatness)          @SC88076\n./ I 05486240          $ 5486260 20                   03/16/88 16:34:49\n         MVI   CPECB,0       Clear ECB (for neatness)          @SC88076\n./ R 06083000 06086000 $ 6083000 500                  03/16/88 16:34:49\n         CH    5,FDBLRC                                        @SC88076\n         BNH   DSKWR1        Length is ok                      @SC88076\n         LA    5,1                                             @SC88076\n         A     5,RECTRC      Remember truncations...           @SC88076\n         ST    5,RECTRC                                        @SC88076\n         LH    5,FDBLRC      Don't allow more than LRECL if V  @SC88076\nDSKWR1   LR    6,5           Copy for LRECL                    @SC88076\n./ I 06412000          $ 6412100 100                  03/16/88 16:34:49\n         L     1,4(7)        and the one before                @SC88076\n         CLC   ASERVER,16(1) Was the caller SERVER?            @SC88076\n         BE    *+12          Yes, ok                           @SC88076\n          CLC  AUSNTRF,16(1) No, was it USNTRF?                @SC88076\n          BNER 14            No, don't bother checking TAKE's  @SC88076\n./ * SC88083 - Preserve existing PDS attributes; clear screen (TSO)\n./ I 05821200          $ 5821600 400                  03/24/88 12:09:59\n         TPUT  CLRSPEC,CLRSPECL,FULLSCR  Clear the screen      @TS86001\n./ I 05854000          $ 5855000 1000                 03/24/88 12:09:59\n*\nCLRSPEC  DC    X'C2',AL1(SBA),X'4040',X'3C404000' Clear screen @TS86001\nCLRSPECL EQU   *-CLRSPEC     Length of clear screen            @TS86001\n./ I 06018000          $ 6018300 300                  03/24/88 12:09:59\n         TM    DS1DSO,2      PDS?                              @SC88083\n         BO    DSKOPVA       Yes, keep the other members!      @SC88083\n./ I 06020000          $ 6020300 300                  03/28/88 18:05:59\n         MVI   DYNDSP,X'28'  MOD,KEEP                          @SC88083\nDSKOPVA  DS    0H                                              @SC88083\n./ D 06023000                                         03/28/88 18:05:59\n./ * SC88087 - Mark datasets \"not in use\" after host command (TSO)\n./ I 05538000          $ 5538070 70                   03/29/88 16:40:06\n         LA    1,ATCTXP      Set up req blk ptr to text list   @SC88087\n         LA    4,ATCTXT      Text list follows RB              @SC88087\n         MVC   0(6,4),=H'1,1,4' Text unit type 1: TCB adr      @SC88087\n         LA    5,ATCDRB      RB ptr follows text list          @SC88087\n         ST    1,ATCDRB+8    Fill in RB                        @SC88087\n         STM   4,5,ATCTXP    Fill in text list + RB ptr        @SC88087\n         MVI   ATCTXP,X'80'  Only item in text list            @SC88087\n         MVC   0(2,5),=AL1(20,5) Finish up RB: length, type    @SC88087\n         MVI   ATCRBP,X'80'                                    @SC88087\n         LA    1,ATCRBP                                        @SC88087\n         SVC   99            DYNALLOC to free allocations      @SC88087\n./ I 05658000          $ 5658500 500                  03/29/88 16:40:06\nATCTXT   EQU   ATCHTCB-6,6   Prefix to TCB ptr (watch overlap!)@SC88087\n./ I 05659600          $ 5659660 60                   03/29/88 16:40:06\n         ORG   STKDYN        Overlay interception stuff        @SC88087\nATCDRB   DS    5F            DYNALLOC RB (init to zeroes)      @SC88087\nATCTXP   DS    A             Text unit list (ATCTXT)           @SC88087\nATCRBP   DS    A             Ptr to RB                         @SC88087\n         ORG   ,                                               @SC88087\n./ * SC88089 - Suppress filename collision check when WARN is OFF\n./ I 03105000          $ 3105300 300                  03/29/88 14:54:42\n         TM    FL1,REN+ROVR  Warning ON and name given?        @SC88089\n         BNO   USNGCK        No, don't check for collision yet @SC88089\n./ I 03107000          $ 3107500 500                  03/29/88 14:54:42\nUSNGCK   DS    0H                                              @SC88089\n./ I 03125000          $ 3125300 300                  03/29/88 14:54:42\n         TM    FL1,REN+ROVR  Warning ON and name given?        @SC88089\n         BNO   USNRCK        No, don't check for collision yet @SC88089\n./ I 03127000          $ 3127500 500                  03/29/88 14:54:42\nUSNRCK   DS    0H                                              @SC88089\n./ * SC88090 - Avoid BLKSIZE > disk track size (TSO)\n./ I 06027000          $ 6027100 100                  03/30/88 16:06:47\n         CLI   DYNDSP,X'42'  NEW dataset?                      @SC88090\n         BNE   DSKOPBZ       No, assume BLKSIZE is ok          @SC88090\n         DEVTYPE FABDDNAM,DYNPL  Yes, get max block            @SC88090\n         ICM   0,15,DYNPL+4                                    @SC88090\n         BNH   DSKOPBZ       Max not defined??                 @SC88090\n         CH    0,FABBLKSI                                      @SC88090\n         BNL   DSKOPBZ       Current BLKSIZE is ok             @SC88090\n         STH   0,FABBLKSI    Mustn't exceed physical limits!   @SC88090\nDSKOPBZ  DS    0H                                              @SC88090\n./ * SC88091 - Tune up VTAM fix (TSO)\n./ I 01096000          $ 1096500 500                  04/05/88 13:34:19\nSCRLST   DS    X             Flag for previous I/O op          @SC88091\n./ I 05821000          $ 5821100 100                  04/05/88 13:34:19\n         MVI   SCRLST,0      Clear op code                     @SC88091\n./ I 05831800          $ 5831900 100                  04/05/88 13:34:19\n         SR    2,2                                             @SC88091\n         IC    2,SCRLST      1=>Write, 2=>Read, 3=>Wr. msg.    @SC88091\n         STC   0,SCRLST      Save new code                     @SC88091\n./ I 05835000          $ 5835080 80                   04/05/88 13:34:19\n         C     2,F3          Was last operation a Write msg?   @SC88091\n         BNE   SCRRD1        No, fine                          @SC88091\n         TPG   =X'F6',1      Yes, must trigger a READ MOD      @SC88091\nSCRRD1   DS    0H                                              @SC88091\n./ * SC88092 - Treat NAK(n+1) as ACK(n); tabulate file-by-file status\n./ R 01565000          $ 1565490 490                  04/01/88 22:35:38\n         AH    1,=Y(MAXNSENT*(LFID+5)) Length of table         @SC88092\n./ R 01869000          $ 1869000 1000                 04/01/88 21:03:42\nINPUTACK MVI   RTYPE,AY      Fake an ACK                       @SC88092\n./ I 01875000          $ 1875100 100                  04/01/88 21:03:42\n         IC    2,SEQ         Expected packet number            @SC88092\n         LA    2,1(2)                                          @SC88092\n         N     2,MOD64       Get next number                   @SC88092\n         CLM   2,1,RSN       Is that what we got?              @SC88092\n         BE    INPUTACK      Yes, treat as an ACK              @SC88092\n./ R 02236000          $ 02236000 500\n         BC    12,*+8                                          @SC88092\n./ I 02453000          $ 2453500 500                  04/01/88 22:35:38\nFLFID1   DC    A(LFID+5)     Length of items in filespec table @SC88092\n./ R 04060000 04062000 $ 4060000 100                  04/01/88 22:35:38\n         LA    0,FFDSP                                         @SC88092\n         KCALL FSPEC,(5)     Copy name for display             @SC88092\n         MVC   0(2,15),=C' ('                                  @SC88092\n         LA    15,2(15)                                        @SC88092\n         ICM   4,15,LFID(5)  Get file size                     @SC88092\n         BAL   2,EDDEC       Format into message               @SC88092\n         MVC   0(2,15),=C'k)'                                  @SC88092\n         LA    15,2(15)                                        @SC88092\n         SR    2,2                                             @SC88092\n         ICM   2,1,LFID+4(5) Get corresponding error code      @SC88092\n         BZ    DMPNN         No error, that's fine             @SC88092\n         SLL   2,2                                             @SC88092\n         A     2,AERRTAB     Get ptr into error table          @SC88092\n         SR    3,3                                             @SC88092\n         IC    3,0(2)        Length of message                 @SC88092\n         L     2,0(2)        And message ptr                   @SC88092\n         MVC   0(4,15),=C' -- '                                @SC88092\n         MVC   4(50,15),0(2) Copy message                      @SC88092\n         LA    15,4(3,15)                                      @SC88092\nDMPNN    BAL   2,STAPM15     Display name (+ error)            @SC88092\n         A     5,FLFID1      Next filespec                     @SC88092\n./ R 06392000          $ 06392000 500\n         BC    12,*+8        No overflow                       @SC88092\n./ R 07283000          $ 7283000 500                  04/01/88 22:35:38\n         A     5,FLFID1      Next filespec                     @SC88092\n./ R 07341000          $ 7341000 500                  04/01/88 22:35:38\n         MH    3,FLFID1+2    Times length of items             @SC88092\n./ I 07343000          $ 7343500 500                  04/01/88 22:35:38\n         XC    LFID(5,3),LFID(3) Clear error code              @SC88092\n./ I 07445000          $ 7445500 500                  04/01/88 22:35:38\n         BAL   14,SERRCD     Save code in table                @SC88092\n./ I 07470000          $ 7470500 500                  04/01/88 22:35:38\n         MVI   ERRNUM,ERRNOE No error yet                      @SC88092\n./ I 07490000          $ 7490500 500                  04/01/88 22:35:38\n         BAL   14,SERRCD     Save code in table                @SC88092\n./ I 07495000          $ 7495060 60                   04/01/88 22:35:38\n*\nSERRCD   LM    2,3,DSKTOT    Current byte count                @SC88092\n         SL    3,SSVDSK+4    Get difference from this file     @SC88092\n         BC    3,*+6                                           @SC88092\n          BCTR 2,0                                             @SC88092\n         SL    2,SSVDSK                                        @SC88092\n         SRDL  2,10          Convert to Kbytes                 @SC88092\n         MVC   SSVDSK(8),DSKTOT                                @SC88092\n         ICM   2,15,NSENT    Calculate offset into table       @SC88092\n         BZR   14            Must not be counting              @SC88092\n         MH    2,FLFID1+2                                      @SC88092\n         A     2,TSENT       Ptr to next name slot             @SC88092\n         S     2,F5                                            @SC88092\n         STCM  3,15,0(2)     Save file size in Kbytes          @SC88092\n         MVC   4(1,2),ERRNUM Save error code for file          @SC88092\n         BR    14                                              @SC88092\n./ I 07501000          $ 7501100 100                  04/01/88 22:35:38\nSSVDSK   DS    D             Saved disk byte count             @SC88092\n./ I 07511000          $ 7511500 500                  04/01/88 22:35:38\n         XC    NSENT,NSENT   Clear count of files              @SC88092\n./ I 07565000          $ 7565090 90                   04/01/88 22:35:38\n         L     3,NSENT       Number of files sent so far       @SC88092\n         C     3,=A(MAXNSENT) Did we rcv more than countable?  @SC88092\n         BNL   RECCNT        Yes, cannot keep track of 'em     @SC88092\n         LA    4,1(3)        Ok, new number of rcvd files      @SC88092\n         ST    4,NSENT                                         @SC88092\n         MH    3,FLFID1+2    Times length of items             @SC88092\n         A     3,TSENT       Location in table                 @SC88092\n         MVC   0(LFID,3),FILNAM Save filespec                  @SC88092\n         XC    LFID(5,3),LFID(3) Clear error code              @SC88092\nRECCNT   DS    0H                                              @SC88092\n./ I 07644000          $ 7644300 300                  04/01/88 22:35:38\n         MVI   ERRNUM,ERRNOE No error yet                      @SC88092\n         BAL   14,RERRCD     Save code in table                @SC88092\n./ I 07664000          $ 7664500 500                  04/01/88 22:35:38\n         BAL   14,RERRCD     Save code in table                @SC88092\n./ I 07671000          $ 7671060 60                   04/01/88 22:35:38\n*\nRERRCD   LM    2,3,DSKTOT    Current byte count                @SC88092\n         SL    3,RSVDSK+4    Get difference from this file     @SC88092\n         BC    3,*+6                                           @SC88092\n          BCTR 2,0                                             @SC88092\n         SL    2,RSVDSK                                        @SC88092\n         SRDL  2,10          Convert to Kbytes                 @SC88092\n         MVC   RSVDSK(8),DSKTOT                                @SC88092\n         ICM   2,15,NSENT    Calculate offset into table       @SC88092\n         BZR   14            Must not be counting              @SC88092\n         MH    2,FLFID1+2                                      @SC88092\n         A     2,TSENT       Ptr to next name slot             @SC88092\n         S     2,F5                                            @SC88092\n         STCM  3,15,0(2)     Save file size in Kbytes          @SC88092\n         MVC   4(1,2),ERRNUM Save error code for file          @SC88092\n         BR    14                                              @SC88092\n./ I 07683000          $ 7683100 100                  04/01/88 22:35:38\nRSVDSK   DS    D             Saved disk byte count             @SC88092\n./ R 08259000          $ 08259000 500\n         BC    12,*+8                                          @SC88092\n./ R 08526300          $ 08526300 300\n         BC    12,*+8                                          @SC88092\n./ R 08722000          $ 08722000 500\n         BC    12,*+8                                          @SC88092\n./ R 08841000          $ 08841000 500\n         BC    12,*+8                                          @SC88092\n./ * SC88095 - Allow line delimiter on input, avoid STACK EOD ABEND (TSO)\n./ I 00807000          $ 807200 200\n         AIF   ('&KSYS' EQ '').NOCK                            @SC88095\n         KCALL SUPFNC,7,E=RTE&SYSNDX Skip prompt if stacked    @SC88095\n.NOCK    ANOP\n./ R 00809100          $ 809100 100\nRTE&SYSNDX KCALL GETLIN,&BUF,E=&E                              @SC88095\n./ I 00872000          $ 872500 500\n         KW    'DELIM',SHODLM,MIN=4                            @SC88095\n./ I 00883000          $ 883100 100\nSETDLM   NTOKN N=SETDLM1,H=SETDLMH                             @SC88095\n         LTR   7,7           Exactly one character?            @SC88095\n         BNZ   SETDLMH       No, explain it                    @SC88095\n         MVC   LNDLM,0(6)    Yes, use that character           @SC88095\n         B     RTRN0                                           @SC88095\nSETDLM1  MVI   LNDLM,C' '    Turn delimiter off                @SC88095\n         B     RTRN0                                           @SC88095\nSETDLMH  PTEXT 'Line delimiter: one char or none'              @SC88095\n         B     SUBERR                                          @SC88095\n./ I 00891000          $ 891200 200\nSHODLM   LA    8,LNDLM       Show delimiter                    @SC88095\n         BAL   14,SHOCHR                                       @SC88095\n          B    SETDLM                                          @SC88095\n./ I 01130000          $ 1130200 200\n&P.LNDLM DC    C' '          Initially no delimiter            @SC88095\n./ R 05597000 05598000 $ 5597000 500                  04/06/88 00:10:49\n         BNH   RTRN1         Got one now                       @SC88095\n         MVC   GTPBIBUF,F0   Clear it, just in case            @SC88095\n         B     RTRN0         Nothing stacked                   @SC88095\n./ R 05780000 05783000 $ 05780000 800\n         LR    8,1           Save buffer ptr                   @SC88095\n         LA    9,256         For copying                       @SC88095\n         LA    3,APGPB       Ptr to GETLINE block              @SC88095\n         USING GTPB,3                                          @SC88095\n         ICM   5,15,GTPBIBUF Already got something?            @SC88095\n./ R 05786000          $ 05786000 1000                04/08/88 16:40:27\n         GETLINE PARM=(3),TERMGET=(EDIT,WAIT),ENTRY=(15),      @SC88095+\n./ R 05788000          $ 05788000 1000\n         SR    2,2                                             @SC88095\n./ R 05791000 05799000 $ 05791000 100\n         L     5,GTPBIBUF    Ptr to input buffer               @SC88095\nGTL1     LH    1,0(5)        Length of stuff (inc. header)     @SC88095\n         AR    1,5           End of buffer                     @SC88095\n         LR    0,1           Save end                          @SC88095\n         LH    6,2(5)        Get starting offset (init. 0)     @SC88095\n         LA    6,4(6,5)      Ptr into buffer                   @SC88095\n         LR    2,1                                             @SC88095\n         SR    2,6           Length of text remaining          @SC88095\n         BNP   GTLFRE        None, return length 0             @SC88095\n         SR    4,4                                             @SC88095\n         IC    4,LNDLM       Get delimiter                     @SC88095\n         LA    4,TRTBL(4)    Ptr to delimiter char             @SC88095\n         MVI   0(4),1        Set up to snag delims             @SC88095\n         MVI   TRTBL+C' ',0  And ignore blanks                 @SC88095\n         CR    2,9           Get shorter of 256 and string     @SC88095\n         BNH   *+6                                             @SC88095\n          LR   2,9                                             @SC88095\n         BCTR  2,0           Set up for EX                     @SC88095\n         EX    2,GTLTRT                                        @SC88095\n         MVI   0(4),0        Now clear out table               @SC88095\n         MVI   TRTBL+C' ',1  And restore                       @SC88095\n         SR    1,6           Length of line                    @SC88095\n         LR    7,1           Set up MVCL                       @SC88095\n         CR    9,7           Get shorter of 256 and string     @SC88095\n         BNH   *+6                                             @SC88095\n          LR   9,7                                             @SC88095\n         LR    2,9           Length actually copied            @SC88095\n         MVCL  8,6                                             @SC88095\n         AR    6,7           In case we couldn't use it all    @SC88095\n         CR    6,0           Finished input?                   @SC88095\n         BNL   GTLFRE        Yes, release it                   @SC88095\n         S     6,F3          + 1 - 4: skip over linend char    @SC88095\n         SR    6,5           New offset ptr                    @SC88095\n         STH   6,2(5)                                          @SC88095\n         B     GTLZ          Return                            @SC88095\nGTLFRE   LR    1,5           This buffer is used up            @SC88095\n         LH    0,0(1)        Get total length                  @SC88095\n./ R 05802000 05804000 $ 5802000 1000\nGTLZ     L     1,4(13)                                         @SC88095\n         ST    2,20(1)       Return as R0                      @SC88095\n./ R 05806000 05807000 $ 5806000 1000\n         DROP  3                                               @SC88095\nGTLTRT   TRT   0(,6),TRTBL   Find a delimiter                  @SC88095\n./ * SC88096 - Generalize wildcards to include members (TSO)\n./ I 05209000          $ 5209100 100                  04/14/88 14:53:13\n         CLI   FSPFLG,FFUTL  DELETE?                           @SC88096\n         BE    FSPTCNV       Yes, allow '*'                    @SC88096\n         CLI   FSPFLG,FFSND  Send request?                     @SC88096\n         BE    FSPTCNV       Yes, allow '*'                    @SC88096\n         TR    0(52,8),FSPSTAB  Convert asterisk to pound sign @SC88096\nFSPTCNV  DS    0H                                              @SC88096\n./ R 05419000 05420000 $ 5420000 500                  04/13/88 16:11:13\n         DC    20AL1(*-FSPMTAB),C'#' hyphen                    @SC88096\n./ I 05422000          $ 5422200 200                  04/14/88 14:53:13\n* Replace asterisks if not a send request                      @SC88096\nFSPSTAB  DC    92AL1(*-FSPSTAB),C'#' asterisk                  @SC88096\n         DC    163AL1(*-FSPSTAB)                               @SC88096\n./ D 06007000 06008000                                04/05/88 15:41:07\n./ I 06166500          $ 6166600 100                  04/05/88 15:41:07\n         MVI   DYNDSP,X'88'  SHR,KEEP                          @SC86299\n         MVI   DSKOPLS,X'80' Code for OPEN INPUT               @SC88049\n./ I 06244000          $ 6244200 200                  04/05/88 15:41:07\n         LA    1,NXFN+52     End of member slot                @SC88096\n         TRT   NXFN+44(8),TRTBL Find end of member name        @SC88096\n         LR    5,1           Save ptr                          @SC88096\n./ I 06248000          $ 6248200 200                  04/05/88 15:41:07\n         LA    0,NXFN                                          @SC88096\n         LA    9,DSKNDIR     Where to go if no \"*\" in DSN      @SC88096\n         LA    14,DSKNCIR    Where to go if \"*\" found          @SC88096\n./ R 06250000 06251000 $ 6250000 1000                 04/05/88 15:41:07\nDSKNSW   BZR   9             Len=max, just use the one file    @SC88096\n./ R 06253000          $ 6253000 500                  04/05/88 15:41:07\n         BNER  9             No, just the end of the name      @SC88096\n         MVI   TRTBL+C'*',0                                    @SC88096\n./ D 06259000                                         04/05/88 15:41:07\n./ I 06261000          $ 6261090 90                   04/05/88 15:41:07\n         BR    14            Now get name list                 @SC88096\nDSKNCIR  CLI   NXFN+44,C' '  Insist no members if wild DSN     @SC88096\n         BNE   RTRN1                                           @SC88096\n         AR    1,0           End of prefix string              @SC88096\nDSKNPLP  BCTR  1,0           Scan back for a dot               @SC88096\n         CR    1,0           Must be one, else we scan universe@SC88096\n         BNH   RTRN1         None there, give up               @SC88096\n         CLI   0(1),C'.'                                       @SC88096\n         BNE   DSKNPLP       Keep looking                      @SC88096\n         SR    1,0           Count of bytes in whole qualifiers@SC88096\n./ R 06269000 06271000 $ 6269000 700                  04/05/88 15:41:07\n         LA    1,45-4        Skip count bytes, then back one   @SC88096\nDSKNRET  L     2,CIRWA       ADR OF RETURNED CATALOG BUFFER    @SC88096\n         SR    2,1           Back up one item                  @SC88096\n./ I 06273000          $ 6273010 10                   04/05/88 15:41:07\n*\nDSKNDIR  LR    3,5           Use end of member name            @SC88096\n         LA    0,NXFN+44     Start of member                   @SC88096\n         LA    9,RTRN0       Where to go if not wild           @SC88096\n         TRT   NXFN+44(8),TRTBL Find any '*'                   @SC88096\n         MVI   TRTBL+C'*',0  Now restore table                 @SC88096\n         BAL   14,DSKNSW     Return here if '*' found          @SC88096\n         LA    15,NXFN       Ptr to DSN for lookup of PDS      @SC88096\n         BAL   2,DSKLKP      Get DSCB                          @SC88096\n         BNZ   RTRN1         Not found                         @SC88096\n         TM    DS1DSO,2      Is it really a PDS?               @SC88096\n         BZ    RTRN1         No, give up                       @SC88096\n         SR    4,4           Clear FAB ptr                     @SC88096\n         LA    1,DSKDPAT     Sample DCB info                   @SC88096\n         LA    2,CAMVOLS     Reuse this area for the DSN       @SC88096\n         MVC   0(44,2),NXFN  Copy DSN                          @SC88096\n         MVI   44(2),C' '    And blank out member              @SC88096\n         BAL   9,DSKALC      Get a DCB (FAB)                   @SC88096\n         KCALL DYNALC,DYNPL,EXT Allocate file                  @SC88096\n         OPEN  MF=(E,DSKOPLS)   And open it to the directory   @SC88096\n         TM    FABOFLGS,X'10'   Ok?                            @SC88096\n         BZ    DSKER1        Too bad                           @SC88096\n         ST    4,DSKTKT      Save ptr to FAB                   @SC88096\n         L     2,CIRWA       Start of name buffer              @SC88096\n         LH    9,CIRWAL      Length                            @SC88096\n         AR    9,2           End of buffer                     @SC88096\n         S     9,FDBBSIZ     Back up one block                 @SC88096\nDSKDL1   READF DSKTKT,BUFFER=(2),E=DSKDLZ Read a block         @SC88096\n         SR    7,7                                             @SC88096\n         ICM   7,3,0(2)      Get length of block info          @SC88096\n         AR    7,2           End of block                      @SC88096\n         BCTR  7,0           Set up BXLE                       @SC88096\n         LA    8,2(2)        Point to member info              @SC88096\nDSKDL2   CLC   0(8,8),=8X'FF' End of directory?                @SC88096\n         BE    DSKDLZ        Yes, all done                     @SC88096\n         TM    11(8),X'80'   Alias member?                     @SC88096\n         BO    DSKDL3        Yes, ignore it                    @SC88096\n         MVI   0(2),C'A'     Create table entry                @SC88096\n         MVC   1(8,2),0(8)   with member name                  @SC88096\n         LA    2,9(2)                                          @SC88096\nDSKDL3   IC    6,11(8)       Get entry length                  @SC88096\n         N     6,=F'31'                                        @SC88096\n         LA    6,12(6,6)     In bytes                          @SC88096\n         BXLE  8,6,DSKDL2    On to next member                 @SC88096\n         CR    2,9           Room for another block in table?  @SC88096\n         BNH   DSKDL1        Ok                                @SC88096\nDSKDLZ   MVI   0(2),0        End of table                      @SC88096\n         CLOSF DSKTKT        Release the file                  @SC88096\n         C     2,CIRWA       Did we find anything?             @SC88096\n         BE    RTRN1         No??                              @SC88096\n         LA    1,9           Length of entries                 @SC88096\n         B     DSKNRET       Go init. ptr into table           @SC88096\nDSKDPAT  DC    A(0,256),C'F',X'0',H'256,0,0,256'               @SC88096\n./ I 06310000          $ 6310500 500                  04/05/88 15:41:07\n         MVC   FILNAM,NXFN                                     @SC87015\n./ D 06314000                                         04/05/88 15:41:07\n./ R 06319000          $ 6319000 100                  04/05/88 15:41:07\n         LA    7,NXFN+44     Start of member                   @SC88096\n         LA    8,8-1         Length of member name             @SC88096\n         C     7,NXSFPTR     Is suffix part of member name?    @SC88096\n         BL    *+12          Yes, we're set                    @SC88096\n          LA   7,NXFN        No, use start of DSN              @SC88096\n          LA   8,44-1        and length                        @SC88096\nNXFDS    LA    6,2(8,6)      Next                              @SC88096\n./ R 06325000          $ 6325000 500                  04/05/88 15:41:07\n         LR    14,7          Compare saved prefix              @SC88096\n./ R 06333000 06334000 $ 6333000 1000                 04/05/88 15:41:07\n         LA    1,1(8,3)      Limit of name field               @SC88096\n         EX    8,NXFTRT      Find end of name                  @SC88096\n./ R 06339000          $ 6339000 500                  04/05/88 15:41:07\n         BL    NXFDS         Shorter than prefix+suffix        @SC88096\n./ R 06344000 06346000 $ 6344000 1000                 04/05/88 15:41:07\nXL0002   SH    7,=Y(NXFN-FILNAM)  Transpose into FILNAM        @SC88096\n         EX    8,NXFCOP      Copy DSN (or member)              @SC88096\n./ I 06351000          $ 6351300 300                  04/05/88 15:41:07\nNXFTRT   TRT   0(,3),TRTBL   Find end of name                  @SC88096\nNXFCOP   MVC   0(,7),CATDNAME Copy name                        @SC88096\n./ * SC88100 - Skip wildcard setup if in-core file; clear NAK0 earlier\n./ R 00388000          $ 388000 500                   04/11/88 14:36:46\n.* Call a routine, fill R1 with a parm if any, and allow error branch\n./ I 07263000          $ 7263300 300                  04/11/88 14:36:46\n         TM    FL4,SFM                                         @SC88100\n         BO    SNDS8         Just sending from memory          @SC88100\n./ R 07265000          $ 7265000 500                  04/11/88 14:36:46\nSNDS8    BAL   8,SNDNXT      Set state table                   @SC86135\n./ I 08527000          $ 8527500 500                  04/11/88 14:36:46\n         NI    FL1,255-NAK0  Something sent now                @SC88100\n./ R 08553000          $ 8553000 500                  04/11/88 14:36:46\nSIOGOOD  DS    0H                                              @SC88100\n./ * SC88101 - Ignore sequence numbers in TAKE files (TSO)\n./ R 00848000 00849000 $ 848000 500                   04/15/88 21:50:29\n&LABEL   READF &TICK,&NONUM,&BUFFER=,&BSIZE=,&E=,&CODE=9\n.* Read from disk file (or write) (see WRITF, but also...)\n.*  &2: NONUM means chop off numbers\n./ I 00850000          $ 850100 100                   04/15/88 21:50:29\n         LCLA  &C                                              @SC88101\n&C       SETA  &CODE                                           @SC88101\n         AIF   (T'&NONUM EQ 'O').RDC                           @SC88101\n         AIF   ('&NONUM' NE 'NONUM').ER1                       @SC88101\n&C       SETA  0             Code 0 means exclude sequence nos.@SC88101\n.RDC     ANOP                                                  @SC88101\n./ R 00866000          $ 866000 500                   04/15/88 21:50:29\n.SZ      LA    0,&C                                            @SC88101\n./ I 00867000          $ 867300 300                   04/15/88 21:50:29\n         MEXIT\n.ER1     MNOTE 2,'INVALID PARAMETER ''&NONUM'''                @SC88101\n./ R 01411000          $ 1411000 500                  04/10/88 18:44:38\n&KDATE   SETC  '10 Apr 88'                                     @SC88101\n./ R 02299000          $ 2299000 500                  04/15/88 21:50:29\n         READF 0(2),NONUM,E=LUPRER                             @SC88101\n./ I 05969000          $ 5969300 300                  04/15/88 21:50:29\n* 0=> same as 9 (q.v.), but if ok, return R1->buffer,R0=# and remove\n*   the sequence number (if any) from the buffer (used for TAKE files)\n./ I 05989000          $ 5989500 500                  04/15/88 21:50:29\n         STC   0,DSKCOD      Save function code (for now)      @SC88101\n         LTR   0,0                                             @SC88101\n         BZ    DSKRED+4      0 => read NONUM                   @SC88101\n./ I 06061000          $ 6061500 500                  04/15/88 21:50:29\n         LR    0,7           Save length for number check      @SC88101\n./ I 06064000          $ 6064050 50                   04/15/88 21:50:29\n         CLI   DSKCOD,0      NONUM?                            @SC88101\n         BNE   DSKREDC       No, use everything                @SC88101\n         CLI   FDBRCF,C'F'   Fixed-length records?             @SC88101\n         BNE   DSKREDV       No, line numbers at start (if any)@SC88101\n         CH    0,=H'80'      See if F/80                       @SC88101\n         BNE   DSKREDC       No                                @SC88101\n         MVZ   CAMLOC(5),75(1)  See if 76-80 are all numeric   @SC88101\n         CLC   CAMLOC(5),=8C'0'                                @SC88101\n         BNE   DSKREDC       No                                @SC88101\n         S     7,F8          Yes, move the end back            @SC88101\n         B     DSKREDC                                         @SC88101\nDSKREDV  LA    0,8(1)        Is length at least 8?             @SC88101\n         CR    0,7                                             @SC88101\n         BNL   DSKREDC       No, can't be numbered             @SC88101\n         MVZ   CAMLOC(8),0(1)   See if 1-8 all numeric         @SC88101\n         CLC   CAMLOC(8),=8C'0'                                @SC88101\n         BNE   DSKREDC       No, not numbered                  @SC88101\n         LA    1,8(1)        Yes, skip over number             @SC88101\nDSKREDC  DS    0H                                              @SC88101\n./ I 06071000          $ 6071200 200                  04/15/88 21:50:29\n         CLI   DSKCOD,0      NONUM?                            @SC88101\n         BNE   *+8                                             @SC88101\n          ST   4,24(1)       Yes, return R1 ptr                @SC88101\n./ I 06492000          $ 6492500 500                  04/15/88 21:50:29\nDSKCOD   EQU   CAMOBT        Temp for function code            @SC88101\n./ * SC88104 - Avoid problem with 0 < BLKSIZE < LRECL (TSO)\n./ I 06473000          $ 6473200 200                  04/13/88 16:11:13\n         LTR   5,5                                             @SC88104\n         BP    *+8                                             @SC88104\n         LA    5,1           BLKSIZE was less than LRECL!      @SC88104\n./ * SC88106 - Avoid msg when deleting KER.BUF + strip leading car.ctl (TSO)\n./ I 00988000          $ 988500 500                   04/18/88 16:01:05\nFABRECCC EQU   X'06'         Control chars present             @SC88106\n./ I 01018000          $ 1018500 500                  04/18/88 17:48:35\nCCF      EQU   X'40'         Carriage control specified        @SC88106\n./ I 01024000          $ 1024500 500                  04/15/88 21:26:56\nFDBDEVT  DS    XL4           Device type (must precede VOL)    @SC88106\n./ R 05480400          $ 5480400 4                    04/15/88 21:26:56\n         USING FDBD,1        Yes, clear it                     @SC88106\n         SR    3,3                                             @SC88106\n         LA    4,FDBDEVT-2   Create volume list (n,type,vol)   @SC88106\n         MVC   0(2,4),F1+2   Just one volume                   @SC88106\n         STM   2,4,SFCDEL+4  Simulate CAMLST                   @SC88106\n         MVI   SFCDEL,X'0C'  Code for UNCAT                    @SC88106\n         CATALOG SFCDEL                                        @SC88106\n         MVI   SFCDEL,X'41'  Codes for SCRATCH                 @SC88106\n         MVI   SFCDEL+2,X'40'                                  @SC88106\n         SCRATCH SFCDEL                                        @SC88106\n         DROP  1                                               @SC88106\n./ R 05480650          $ 5480650 10                   04/15/88 21:26:56\n         LA    5,=X'42'      NEW,CATLG                         @SC88026\n./ I 05486360          $ 5486370 10                   04/18/88 16:01:05\n         L     3,STKTKT      Ptr to FAB                        @SC88106\n         USING FABD,3                                          @SC88106\n./ I 05486440          $ 5486450 10                   04/18/88 16:01:05\n         TM    FDBFLGS,CCF   Carriage control?                 @SC88106\n         BZ    *+8           No, that's fine                   @SC88106\n         MVI   0(5),C' '     Yes, blank it out                 @SC88106\n./ I 05487000          $ 5487500 500                  04/18/88 16:01:05\n         DROP  3                                               @SC88106\n./ I 05659000          $ 5659100 100                  04/15/88 21:26:56\nSFCDEL   DS    0F            CAMLST overlays...                @SC88106\n./ I 05659200          $ 5659300 100                  04/15/88 21:26:56\n*               - Also used for CAMLST UNCAT/SCRATCH & DYNALLOC@SC88106\n./ R 06359000          $ 6359000 500                  04/18/88 17:48:35\n         NI    FDBFLGS,255-PDSF-CCF                            @SC88106\n./ I 06399000          $ 6399500 500                  04/15/88 21:26:56\n         MVC   FDBDEVT,CAMDEVT Copy device type                @SC88106\n./ I 06400000          $ 6400200 200                  04/18/88 17:48:35\n         TM    DS1RCF,FABRECCC Any carriage control?           @SC88106\n         BZ    *+8           No, ok                            @SC88106\n         OI    FDBFLGS,CCF   Yes, remember it outside FABRECFM @SC88106\n./ I 06493000          $ 6493200 200                  04/15/88 21:26:56\nCAMDEVT  EQU   CAMVOLS+2,4   1st device type                   @SC88106\n./ * SC88113 - Clean up implied file name extension for TAKE (TSO)\n./ R 01120000          $ 1120000 500                  04/22/88 15:11:30\nSYSTAKE  DC    C'''SYS1'                                       @SC88113\nDKERMINI DC    C'.KERMINI'''                                   @SC88113\n./ R 05215600          $ 5215600 10                   04/22/88 15:11:30\n         CLC   0(8,1),DKERMINI Is it .KERMINI?                 @SC88113\n./ * SC88106X - Avoid multiple send caused by SC88106 (TSO)\n./ R 01018500          $ 1018500 200                  05/02/88 11:48:14\n* NXDON  EQU   X'40'         Catalog search done (see DSKFL)   @SC88106\n./ I 01019000          $ 1019500 500                  05/02/88 11:48:14\nCCF      EQU   X'04'         Carriage control specified        @SC88106\n./ * ---------------- more ---------------------\n./ * SC88105 - Avoid stray \"0\" in SERIES1 protocol mode; clear screen (TSO)\n./ * SC88118 - Make host commands always interruptible (TSO)\n./ * SC88119 - Capture DAIRFAIL msg; check PDS notation; setup new GUPI (TSO)\n./ * SC88120 - Allow choice of FOLD/TRUNC/HALT, make LRECL system-specific\n./ * SC88125 - Revise DSN properly from micro if WARN on (TSO)\n./ * SC88139 - Screenful packet in VTAM, document ERRNUM changes\n./ * SC88168 - New DEBUG options, restore ERRBPC (TSO)\n./ * SC88202 - Update list of TSO macros used (TSO)\n./ * SC88203 - Test for SERIES1 device if not TTY (TSO)\n./ * SC88235 - Allow attribute packets with time as well as date (TSO)\n./ * SC88246 - Preserve carriage control flags when appending (TSO)\n./ *                  .....Updates.....\n./ * SC88105 - Avoid stray \"0\" in SERIES1 protocol mode; clear screen (TSO)\n./ I 05824000          $ 5824100 100                  04/18/88 21:09:59\n         TPUT  CLRSPEC,CLRSPECL,FULLSCR  Clear the screen      @TS86001\n./ I 05832200          $ 5832400 200                  04/14/88 15:22:04\nSCRWM    DS    0H            Come back here for message        @SC88105\n./ D 05848200 05848800                                04/14/88 15:22:04\n./ * SC88118 - Make host commands always interruptible (TSO)\n./ D 01063000                                         04/27/88 22:43:02\n./ I 05530000          $ 5531000 1000                 03/28/88 18:56:12\n         STAX  SFCATTN,DEFER=NO,REPLACE=NO,MF=(E,SFCSTBL),     @SC88118+\n               USADDR=ATCHECB  In case subtask has no STAX     @SC88118\n./ R 05536000 05536200 $ 5536000 200                  03/28/88 18:56:12\n         BZ    *+12          Ok                                @SC88118\n          BAL  14,SFCATCLN   Restore everything                @SC88118\n./ R 05539500          $ 5539500 200                  03/28/88 18:56:12\n         BAL   14,SFCATCLN   Restore everything                @SC88118\n./ D 05543000                                         03/28/88 18:56:12\n./ I 05563000          $ 5563040 40                   03/28/88 18:56:12\n*\nSFCATCLN STAX  ,             Restore after ATTACH (saves R14)  @SC88118\n         MVC   ECTPCMD,SAVPCMD Restore ECT                     @SC88118\n         BR    14                                              @SC88118\n*\nSFCATTN  STM   14,12,12(13)  Save regs                         @SC88118\n         LR    3,15                                            @SC88118\n         USING SFCATTN,3                                       @SC88118\n         L     4,8(1)        Ptr to ECB                        @SC88118\n         LA    2,4(4)        Ptr to TCB                        @SC88118\n         TM    0(4),X'40'    Already finished?                 @SC88118\n         BO    SFCATTNR      Yes, we just missed it            @SC88118\n         STATUS STOP,TCB=(2) Suppress execution                @SC88118\n         POST  (4)           No, so we just drop it            @SC88118\nSFCATTNR LM    14,12,12(13)  Restore regs                      @SC88118\n         BR    14                                              @SC88118\n         DROP  3                                               @SC88118\n./ I 05653000          $ 5653500 500                  04/14/88 15:06:32\nSFCSTBL  STAX  MF=L          ATTN during subtask execution     @SC88118\n./ R 05674000          $ 5674490 490                  04/27/88 22:43:02\n         STAX  BR14,REPLACE=NO  Ingore attention interrupts    @SC88118\n./ D 05754000 05759000                                04/27/88 22:43:02\n./ R 05911000 05916000 $ 5911000 1000                 04/27/88 22:43:02\n         LA    5,READATTN    ATTN routine adr (just post ECB)  @SC88118\n         LA    6,CPECB       Ptr to ECB to post on ATTN        @SC88118\n         STAX  (5),MF=(E,STAXPLR),USADDR=(6)                   @SC88118\n./ I 05929000          $ 5929100 100                  04/27/88 22:43:02\n*\nREADATTN STM   14,12,12(13)  Save registers                    @SC88118\n         L     1,8(1)        Get ptr to term ECB               @SC88118\n         POST  (1)           Post it                           @SC88118\n         LM    14,12,12(13)  Restore registers                 @SC88118\n         BR    14                                              @SC88118\n./ * SC88119 - Capture DAIRFAIL msg; check PDS notation; setup new GUPI (TSO)\n./ D 00805500                                         04/28/88 11:24:55\n./ D 00807200                                         04/28/88 11:24:55\n./ D 00807600                                         04/28/88 11:24:55\n./ R 00809000          $ 809000 40                    04/28/88 11:24:55\n.NOPR    ANOP\n./ D 00809200 00809400                                04/28/88 11:24:55\n./ D 00967500                                         04/28/88 11:24:55\n./ D 00968500                                         04/28/88 11:24:55\n./ D 00969300 00969600                                04/28/88 11:24:55\n./ I 01032000          $ 1032050 50                   05/16/88 19:25:13\nFABDSMB  EQU   FABDSN+44,8   Member name                       @SC88119\n./ I 01071000          $ 1073000 2000                 04/28/88 11:24:55\nDFMSGP   DS    A             Ptr to DAIR message buffer        @SC88119\n./ I 01087000          $ 1087100 100                  04/28/88 11:24:55\nCAMLOC   DS    4F            Ptrs for locating dataset         @SC86299\nCAMOBT   DS    4F            Ptrs for getting DSCB             @SC86299\nDSKCOD   EQU   CAMOBT        Temp for function code            @SC88101\nCAMVOLS  DS    0D,XL265      Storage for volume list           @SC86299\nCAMDEVT  EQU   CAMVOLS+2,4   1st device type                   @SC88106\n         ORG   CAMVOLS+100   Do a little overlaying            @SC88049\nCAMDSCB  DS    0F,XL101      Storage for DSCB                  @SC88014\n         ORG   CAMDSCB+1                                       @SC88014\nDS1VOL   DS    CL6,XL2       Volume serial                     @SC86299\nDS1CRDT  DS    2XL3,3X,XL13  Creation date                     @SC86299\nDS1RFDT  DS    XL3,XL4       Reference date                    @SC86299\nDS1DSO   DS    XL2           Dataset org                       @SC86299\nDS1RCF   DS    X             Record format                     @SC86299\nDS1OPT   DS    X             Error option                      @SC86299\nDS1BLK   DS    H             Block size                        @SC86299\nDS1LRC   DS    H             Logical record length             @SC86299\n         ORG   ,                                               @SC86299\n./ I 01110000          $ 1110100 100                  04/28/88 16:58:17\n         MVI   CPECB,0       Clear ECB                         @SC88119\n./ I 01146000          $ 1146300 300                  04/28/88 11:24:55\n         ST    1,DFMSGP      DAIR message buffer               @SC88119\n         LA    1,512(1)                                        @SC88119\n./ I 01548000          $ 1548200 200                  05/02/88 16:50:14\n         TM    FL1,DEBUG                                       @SC88119\n         BZ    KRMXITG                                         @SC88119\n         CLOSF LOGPTR        Close                             @SC88119\nKRMXITG  DS    0H                                              @SC88119\n./ D 01551000 01553000                                05/02/88 16:50:14\n./ R 05262000          $ 5262000 500                  05/16/88 19:25:13\n         XC    FSPDSMB,FSPDSMB Signal DSORG=PO for allocation  @SC88119\n./ I 05480800          $ 5480820 20                   04/28/88 11:24:55\n         MVI   STKDYN+24,X'80'  No buffer ptr                  @SC88119\n./ I 05592000          $ 5592500 500                  04/28/88 16:58:17\n         MVI   CPECB,0       Clear ECB                         @SC88119\n./ I 05784000          $ 5784500 500                  04/28/88 16:58:17\n         MVI   CPECB,0       Clear ECB                         @SC88119\n./ R 05994000          $ 5994000 300                  04/28/88 11:24:55\n         L     8,DFMSGP      Ptr to message buffer             @SC88119\n         XC    0(4,8),0(8)   Clear out old message             @SC88119\n         STM   5,8,DYNPL+16  Set up calling sequence           @SC86345\n./ I 06000000          $ 6000500 500                  04/28/88 11:24:55\n         BAL   14,DSKTCON    Check PDS notation                @SC88119\n./ I 06017000          $ 6017500 500                  04/28/88 11:24:55\n         BAL   14,DSKTCON    Check PDS notation                @SC88119\n./ I 06027000          $ 6027030 30                   04/28/88 11:24:55\n         CLI   DYNRC+3,0                                       @SC88119\n         BNE   DSKERAL       Error on allocation               @SC88119\n./ R 06039000          $ 6039000 10                   05/16/88 19:25:13\n         CLI   FABDSMB,C' '  Did we want a member?             @SC88119\n./ R 06039200          $ 6039200 10                   05/16/88 19:25:13\n         XC    FABDSMB,FABDSMB Signal DSORG=PO                 @SC88119\n./ I 06152000          $ 6152090 90                   04/28/88 11:24:55\n* Check PDS notation -- must match DSORG.  Return via R14\nDSKTCON  TM    DS1DSO,2      Partitioned?                      @SC88119\n         BO    DSKTCOP       Yes, insist on member name        @SC88119\n         CLI   FABDSMB,C' '  Member name?                      @SC88119\n         BER   14            No, ok                            @SC88119\n         B     DSKER1                                          @SC88119\nDSKTCOP  CLI   FABDSMB,C' '  Member name?                      @SC88119\n         BNER  14            Yes, ok                           @SC88119\n         CLI   FABDSMB+1,0   No, but maybe just want directory?@SC88119\n         BER   14            Yes, ok                           @SC88119\n./ I 06158000          $ 6158040 40                   04/28/88 11:24:55\n*\nDSKERAL  L     1,DFMSGP      Ptr to DAIRFAIL buffer            @SC88119\n         SR    9,9                                             @SC88119\n         ICM   9,3,0(1)      Length of message                 @SC88119\n         BZ    DSKER1        None (why not?)                   @SC88119\n         LA    8,4(1)        Start of text                     @SC88119\n         CLC   =C'IKJ',0(8)  Has msg id?                       @SC88119\n         BNE   *+8                                             @SC88119\n          LA   8,10(8)       Yes, skip it                      @SC88119\n         S     8,F2                                            @SC88119\n         MVC   0(2,8),=C'  ' Make it begin with two blanks     @SC88119\n         AR    9,1           End of message                    @SC88119\n         SR    9,8           Length to use                     @SC88119\n         L     6,EMSGP       Explanation buffer                @SC88119\n         LA    7,LEMSG       Length of same                    @SC88119\n         CR    7,9                                             @SC88119\n         BNH   *+6                                             @SC88119\n          LR   7,9           Too long, use what we can         @SC88119\n         ST    7,EMSGL       Usable length                     @SC88119\n         MVCL  6,8           Copy to buffer                    @SC88119\n         B     DSKER1                                          @SC88119\n./ R 06181000          $ 6181000 500                  05/16/88 19:25:13\n         CLI   FABDSMB,0     Special case of PDS?              @SC88119\n./ R 06184000          $ 6184000 200                  05/16/88 19:25:13\n         MVI   FABDSMB,C' '  and blot out member               @SC88119\n./ D 06491000 06504000                                04/28/88 11:24:55\n./ I 06505000          $ 6506000 1000                 04/28/88 11:24:55\n         DS    A(0)          Ptr to message buffer             @SC88119\n./ * SC88120 - Allow choice of FOLD/TRUNC/HALT, make LRECL system-specific\n./ R 00916000          $ 916000 500                   05/03/88 21:59:35\nSETRECVF MVC   FILRCF,0(6)   Copy RECFM                        @SC88120\n./ R 00944000          $ 944000 500                   05/03/88 21:59:35\nSHORFM   LA    8,FILRCF                                        @SC88120\n./ I 01032100          $ 1032300 200                  04/29/88 16:58:04\nFABLRTR  DS    F             Record length for truncation      @SC88120\n./ R 01040500          $ 1040500 500                  05/03/88 21:31:08\n.*  &2: RECFM (1-char), &3: LRECL (skip rest of FDB if omitted)@SC88120\n./ R 02468000 02470000 $ 2468000 1000                 05/03/88 21:59:35\n         FDBPAT ,V,LPKT      Default disk RECFM, etc.          @SC88120\n./ R 02474000 02476000 $ 2474000 1000                 05/03/88 21:59:35\n         FDBPAT ,V,80        Default disk RECFM, etc.          @SC88120\n./ R 02480000          $ 2480000 500                  05/03/88 21:59:35\n         FDBPAT ,V           Default disk RECFM (no LRECL)     @SC88120\n./ I 02490000          $ 2490500 500                  04/29/88 16:58:04\nITRNCFL  DC    C'T'          Truncate by default (vs. F or H)  @SC88120\n./ I 02648000          $ 2648200 200                  04/29/88 16:58:04\nRECFLD   DS    F             Count of record foldings          @SC88120\n./ R 02688000 02691000 $ 2689000 1000                 05/03/88 21:59:35\n         FDBPAT LOG,V,LPKT   Default disk RECFM, etc.          @SC88120\n./ R 02695000 02698000 $ 2696000 1000                 05/03/88 21:59:35\n         FDBPAT FIL,V,80     Default disk RECFM, etc.          @SC88120\n./ R 02703000 02704000 $ 2703000 1000                 05/03/88 21:59:35\n         FDBPAT TAK,V        Default disk RECFM (no LRECL)     @SC88120\n./ I 02713000          $ 2713500 500                  04/29/88 16:58:04\nTRNCFL   DC    C'T'          Truncate or Fold or Halt          @SC88120\n./ I 03301000          $ 3301500 500                  04/29/88 16:58:04\n         KW    'LONGLINE',SHOLNG,MIN=2     **COMPAT**          @SC88120\n./ R 03312000 03315000 $ 3313000 1000                 05/03/88 21:59:35\nSETFLR   MVC   TYPFIL,0(6)   Save type                         @SC88120\n./ I 03319000          $ 3319100 100                  04/29/88 16:58:04\n*\nSETLNGKW KW    'FOLD',SETLNG                                   @SC88120\n         KW    'HALT',SETLNG                                   @SC88120\n         KW    'TRUNCATE',SETLNG                               @SC88120\n         KW    ,                                               @SC88120\nSETLNG   MVC   TRNCFL,0(6)   Save flag                         @SC88120\n         B     RTRN0                                           @SC88120\n./ I 03644000          $ 3644500 500                  04/29/88 16:58:04\n         KW    'LONGLINE',SHOLNG,MIN=2                         @SC88120\n./ I 03701000          $ 3701200 200                  04/29/88 16:58:04\nSHOLNG   LA    4,SETLNGKW    List of possibles                 @SC88120\n         LA    6,TRNCFL                                        @SC88120\n         BAL   14,SHOBRV     Get full name from abbrev.        @SC88120\n          NOP  0                                               @SC88120\n./ R 03704000          $ 3704000 500                  05/03/88 21:59:35\n         ICM   4,3,FILLRC                                      @SC88120\n./ R 03965000 03966000 $ 3965000 1000                 04/29/88 16:58:04\n         MVC   CMD(21),=C'Optimum packet size: '               @SC88120\n         LA    15,CMD+21                                       @SC88120\n./ I 03976000          $ 3976100 100                  04/29/88 16:58:04\n         ICM   4,15,RECFLD   Any folded records?               @SC88120\n         BZ    STATFDZ       No, ok                            @SC88120\n         LA    15,CMD        Yes, issue message                @SC88120\n         BAL   2,EDDEC                                         @SC88120\n         MVC   0(15,15),=C' records folded'                    @SC88120\n         LA    15,15(15)                                       @SC88120\n         BAL   2,STAPM15                                       @SC88120\nSTATFDZ  DS    0H                                              @SC88120\n./ R 04208000 04209000 $ 4208000 1000                 04/29/88 16:58:04\n         L     0,FABLRTR     Get effective record length       @SC88120\n         ST    0,MAXOUT      Save for folding (if need be)     @SC88120\n./ R 04214000          $ 4214000 1000                 04/29/88 16:58:04\n         ICM   1,15,WBUFL    Check length in buffer            @SC88120\n./ R 05971000          $ 5971000 500                  05/06/88 17:14:16\n* 2=> open (out): (same)\n./ I 06024000          $ 6024200 200                  04/29/88 16:58:04\n         LH    0,FDBLRC                                        @SC88120\n         BAL   2,DSKTV                                         @SC88120\n          S    0,F4          Deduct 4 for RDW if RECFM=V       @SC88120\n         ST    0,FABLRTR     Set effective record length       @SC88120\n./ D 06083000 06085500                                04/29/88 16:58:04\n./ R 06167000          $ 6167000 500                  05/06/88 17:14:16\n         LA    4,FDBD        FDB pointer                       @SC88120\n./ R 06169000          $ 6169000 500                  05/06/88 17:14:16\n         STM   3,4,20(1)     Return R0,R1                      @SC88120\n         LR    4,3           Indicate we have it               @SC88120\n./ R 06200000          $ 6200000 500                  05/03/88 21:31:08\nDSKFABS  LH    1,FDBBLKSI    Copy Info to DCB                  @SC88120\n         STH   1,FABBLKSI                                      @SC88120\n./ D 06202000                                         05/03/88 21:31:08\n./ I 06205000          $ 6205500 500                  05/03/88 21:31:08\n         MVC   FABLRECL,FDBLRC Use true LRECL after all        @SC88120\n./ D 06210000 06211000                                05/03/88 21:31:08\n./ D 06410000                                         05/03/88 21:31:08\n./ R 07568000 07570000 $ 7568000 1000                 04/29/88 16:58:04\n         L     2,FABLRTR     Get effective record length       @SC88120\n         ST    2,FSIZE       Copy LRECL                        @SC86295\n./ I 07572000          $ 7572100 100                  04/29/88 16:58:04\n         TM    FL1,BINF                                        @SC88120\n         BO    RECMAXO       Binary, just fold at LRECL        @SC88120\n         CLI   TRNCFL,C'H'   Test: F, H, or T                  @SC88120\n         BL    RECMAXO       F => fold at LRECL                @SC88120\n         LA    2,1(2)        Assume H => abort at LRECL+1      @SC88120\n         BE    RECMAXO                                         @SC88120\n         ICM   2,8,LOBIT+3   T => fold at \"infinity\", but trunc@SC88120\nRECMAXO  ST    2,MAXOUT                                        @SC88120\n./ R 07641000          $ 7641000 1000                 04/29/88 16:58:04\nRECWR    ICM   1,15,WBUFL    Check length in buffer            @SC88120\n./ R 08070000          $ 8070000 80                   04/29/88 16:58:04\n         BL    DECMORE       No, keep appending                @SC88120\n         KCALL OUTBUF,(9),E=RTRN1 Yes, write buffer            @SC88120\n         SR    9,9           Reset count and output pointer    @SC88120\n         L     1,WBUF                                          @SC88120\n         TM    FL1,BINF                                        @SC88120\n         BO    DECPUT        Binary always folds, no problem   @SC88120\n         CLI   CUR,CR        Exactly full just in time?        @SC88120\n         BE    DECIGN        Yes, don't create empty line      @SC88120\n         LA    0,1           Other, this is called folding     @SC88120\n         A     0,RECFLD                                        @SC88120\n         ST    0,RECFLD                                        @SC88120\n         B     DECPUT        Ok, now copy the new character    @SC88120\n./ R 08079000 08080000 $ 8080000 1000                 04/29/88 16:58:04\nDECWRT   KCALL OUTBUF,(9),E=RTRN1 Write buffer                 @SC88120\n./ D 08083000 08084000                                04/29/88 16:58:04\n./ I 08783000          $ 8783300 300                  04/29/88 16:58:04\n* Entry: R1=length of buffer (which starts where WBUF points)\n* Exit: R15=0 if ok, other if error (ERRNUM set)\n./ R 08785000 08787000 $ 8785000 1000                 04/29/88 16:58:04\n         LR    9,1           Save buffer length                @SC88120\n         L     6,FSIZE       Use to hold lrecl                 @SC88120\n./ R 08818000 08823000 $ 8820000 1000                 04/29/88 16:58:04\nOBFLEN   CR    9,6           Compare data len. to trunc len.   @SC88120\n./ I 08825000          $ 8825300 300                  04/29/88 16:58:04\n         CLI   FRECF,C'F'                                      @SC88120\n         BNE   OBFWRT        Go if variable format             @SC88120\n./ I 08837000          $ 8837200 200                  04/29/88 16:58:04\n         CLI   TRNCFL,C'H'   Do we halt here?                  @SC88120\n         BNE   OBFLRECL      Truncation allowed, ok            @SC88120\n         MVI   ERRNUM,ERRRTR Mark error and stop               @SC88120\n         B     RTRN1                                           @SC88120\n./ * SC88125 - Revise DSN properly from micro if WARN on (TSO)\n./ R 05253000          $ 5253000 500                  05/03/88 20:42:41\n         LA    5,10          Allowed retries (0-9)             @SC88125\n./ R 05268000 05270000 $ 5268000 1000                 05/03/88 20:42:41\n         BAL   3,FSPRMPT     Set up rechecking via R3          @SC88125\n./ R 05289200 05289400 $ 5289200 200                  05/03/88 20:42:41\n         CLI   FSPDSN+43,C' ' Exactly 44 bytes already?        @SC88125\n         BE    *+10          No, there's some room             @SC88125\n./ R 05300000 05301000 $ 5300000 1000                 05/03/88 20:42:41\nFSPSTA   STC   7,0(6)        Modify DSN                        @SC88125\n         BALR  9,3           See if still a conflict           @SC88125\n./ * SC88139 - Screenful packet in VTAM, document ERRNUM changes\n./ R 01411000          $ 1411000 500                  05/18/88 17:33:16\n&KDATE   SETC  '88/5/18'                                       @SC88139\n./ I 01455000          $ 1456000 1000                 05/18/88 17:33:16\nRTA      EQU   X'3C'         Repeat To Address (3270)          @SC88139\n./ R 04091000          $ 4091000 500                  05/18/88 17:33:16\n* Exit: R15=0 if ok, R15=1 if error or help needed.  ERRNUM set\n*       appropriately as long as command syntax is ok, else unchanged.\n./ R 05456000          $ 5456000 500                  05/18/88 17:35:47\n*       ERRNUM set appropriately (R1=1,3,4) or unchanged (2,5-11)\n./ I 05968000          $ 5968500 500                  05/18/88 17:35:47\n* ERRNUM unchanged unless there is a disk error\n./ I 06089000          $ 6089500 500                  05/18/88 17:35:47\n         IC    7,ERRNUM      Save previous error code, if any  @SC88139\n./ I 06095000          $ 6095500 500                  05/18/88 17:35:47\n         STC   7,ERRNUM      Restore previous error code       @SC88139\n./ I 07001000          $ 7001500 500                  05/18/88 17:33:16\n* Exit: ERRNUM set appropriately.\n./ I 08014000          $ 8014500 500                  05/18/88 17:33:16\n* Exit: ERRNUM left unchanged unless there is an error.\n./ R 08574000          $ 8574000 500                  05/18/88 17:33:16\n         DC    AL1(RTA),X'4040',C' '  Blanks to end of screen  @SC88139\n./ * SC88168 - New DEBUG options, restore ERRBPC (TSO)\n./ R 00312000          $ 312000 500                   07/12/88 00:41:47\n&LABEL   DC    AL1(254),AL3(&ADDR)                             @SC88168\n./ R 00316000          $ 316000 500                   07/12/88 00:41:47\n&LABEL   DC    AL1(&LEN.),AL3(&ADDR.),AL1(&MIN.-1),C&KW        @SC88168\n./ I 00868000          $ 868100 100                   07/30/88 00:07:36\n*COPY                                                 SAVEF\n         MACRO\n&LABEL   SAVEF &TICK,&E=                                       @SC88168\n.* Update disk directory for given file (ticket ptr in R1)\n.*  &1: adr of file access ticket (A), &E= branch on error\n&LABEL   L     1,&TICK                                         @SC88168\n         READF &TICK,E=&E,CODE=21                              @SC88168\n         MEND\n./ R 01867000          $ 1867000 500                  07/07/88 22:59:05\nINPUTQAB MVI   ERRNUM,ERRBPC Bad packet                        @SC88168\n         CLI   STYPE,AB                                        @SC88168\n./ R 02033000 02038000 $ 2033000 1000                 07/12/88 00:41:47\nSCANLUP  CLI   0(1),254                                        @SC88168\n         BH    4(14)         Return to caller if end           @SC88168\n         BL    *+12          Not a branch to new list          @SC88168\n          ICM  1,7,1(1)      Yes, get ptr to new list          @SC88168\n          B    SCANLUP       And resume search                 @SC87117\n./ R 02041000          $ 2041000 500                  07/12/88 00:41:47\n         CLM   7,1,0(1)      Compare token and kw lengths      @SC88168\n./ R 02045000          $ 2045000 500                  07/12/88 00:41:47\nSCANNO   IC    15,0(1)       KW length - 1                     @SC88168\n./ R 02052000          $ 2052000 500                  07/12/88 00:41:47\n         ICM   14,7,1(1)     No, get handler address           @SC88168\n./ R 02147000 02153000 $ 2147000 1000                 07/12/88 00:41:47\nHELPNT   CLI   0(4),254                                        @SC88168\n         BH    HELPEND       Return if end of tokens           @SC88168\n         BL    *+12          Not branch to other list          @SC88168\n          ICM  4,7,1(4)      Yes, get ptr to new list          @SC88168\n          B    HELPNT        And resume scan                   @SC87117\n         IC    7,0(4)        Length-1 of current token         @SC88168\n./ I 02621000          $ 2621100 100                  07/12/88 22:08:23\nDBGFLG   DS    X             Type of debug log                 @SC88168\nDBGON    EQU   X'80'         Logging on                        @SC88168\nDBGIO    EQU   X'40'         Logging of I/O info (SERIES1)     @SC88168\nDBGRW    EQU   X'20'         Logging raw packets, not EBCDIC   @SC88168\nDBGSV    EQU   X'10'         Log file closed after each entry  @SC88168\n./ D 02640000                                         07/12/88 22:08:23\n./ D 03219000 03220000                                07/12/88 00:41:47\n./ R 03323000 03326000 $ 3323000 500                  07/12/88 22:08:23\nSETDEB   BAL   4,SETSCN      Select among possibilities        @SC88168\n         KW    'ON',SETDON                                     @SC88168\n         KW    'OFF',SETDEND,MIN=2                             @SC88168\nSETRAW   KW    'RAW',SETDRAW                                   @SC88168\n         KW    'I/O',SETDIO                                    @SC88168\n         KW    'SAVE',SETDSV                                   @SC88168\n         KW    ,                                               @SC88168\n./ D 03328000                                         07/12/88 22:08:23\n./ R 03332000 03335000 $ 3332000 200                  07/12/88 22:08:23\nSETDRAW  OI    SHODBG,DBGON+DBGRW   RAW -> ON                  @SC88168\n         B     SETDB1                                          @SC88168\nSETDIO   OI    SHODBG,DBGON+DBGIO   I/O -> ON                  @SC88168\n         B     SETDB1                                          @SC88168\nSETDSV   OI    SHODBG,DBGON+DBGSV   SAVE-> ON                  @SC88168\n         B     SETDB1                                          @SC88168\nSETDON   OI    SHODBG,DBGON                                    @SC88168\nSETDB1   ICM   2,15,LEN      Any more options?                 @SC88168\n         BP    SETDEB        Yes, interpret them               @SC88168\nSETDEND  XC    SHODBG,DBGFLG Get changed flags in SHODBG       @SC88168\n         XC    DBGFLG,SHODBG Install new flags                 @SC88168\n         TM    SHODBG,DBGON  ON/OFF changed?                   @SC88168\n         BZ    RTRN0         No, done                          @SC88168\n         TM    DBGFLG,DBGON  Turned ON?                        @SC88168\n         BZ    SETDEBOF      No, turn it off                   @SC88168\n./ I 03344000          $ 3344500 500                  07/12/88 00:41:47\n         MVI   ERRNUM,ERRNOE Insist no errors                  @SC88168\n./ R 03564000 03569000 $ 3564000 1000                 07/12/88 22:08:23\n         BAL   14,SHOOO      1st get ON vs. OFF                @SC88168\n          OI   FL1,DEBUG                                       @SC88168\nSHODEBZ  MVC   SHODBG,DBGFLG Copy flags for decoding           @SC88168\n         LA    6,SETRAW      List of options                   @SC88168\n         BAL   4,SHOMULT     See if any extra flags on         @SC88168\n          NOP  0                                               @SC88168\n./ R 03692000          $ 3692000 1000                 07/12/88 22:08:23\n         ICM   14,7,1(1)     Ptr to 1st routine                @SC88168\n./ I 03782000          $ 3782050 50                   07/12/88 22:08:23\nSHOMULT  LR    5,1           Save ptr to current option        @SC88168\n         LR    1,6           Use ptr to list of suboptions     @SC88168\nSHOMULQ  ICM   14,7,1(1)     Get ptr to handler (assume OI x,y)@SC88168\n         BAL   2,SHOKW       Get ptrs to KW string, fix SETXI  @SC88168\n         EX    0,SETXI       TM x,y                            @SC88168\n         BNO   SHOMULP       Not this one                      @SC88168\n         MVI   0(15),C','    Yes, punctuate display            @SC88168\n         LA    15,1(15)                                        @SC88168\n         LR    8,6                                             @SC88168\n         LR    9,7                                             @SC88168\n         BAL   2,EDCHAR      Copy this KW to display           @SC88168\nSHOMULP  LA    1,0(7,6)      On to next in list                @SC88168\n         CLI   0(1),254      End of list?                      @SC88168\n         BL    SHOMULQ       No, keep checking                 @SC88168\n         LR    14,4          Proper place for return adr       @SC88168\n         LR    1,5           Restore ptr to current option     @SC88168\n         B     SHOZZZ        End of item                       @SC88168\n*\n./ R 03809000          $ 3809000 500                  07/12/88 00:41:47\n         IC    7,0(1)        Length (assumes high bytes clear) @SC88168\n./ R 03824000          $ 3824000 500                  07/12/88 00:41:47\n         PTEXT SETOOKW+5,3,AREG=8,LREG=9                       @SC88168\n./ R 03862000          $ 3862000 500                  07/12/88 00:41:47\n         IC    9,0(4)        Length of name                    @SC88168\n./ R 03865000 03866000 $ 3865000 1000                 07/12/88 00:41:47\n          LA   8,6(9,8)      Flag is on, advance               @SC86133\n          IC   9,6(9,4)                                        @SC88168\n./ R 03873000 03874000 $ 3873000 1000                 07/12/88 00:41:47\nSHOZZ    LA    1,0(7,6)      Advance to next option            @SC88168\nSHOZZZ   ST    15,SHOPTR     Save end of display buffer        @SC88168\n./ I 03877000          $ 3877300 300                  07/12/88 22:08:23\n         CLM   14,7,=AL3(SHODEBZ)                              @SC88168\n         BER   14            Special treatment for DEBUG, too  @SC88168\n./ I 03915000          $ 3915500 500                  07/12/88 22:08:23\nSHODBG   DS    X             Temp for DEBUG flags              @SC88168\n./ I 05840000          $ 5840300 300                  07/30/88 00:07:36\n         TM    DBGFLG,DBGIO  I/O log wanted?                   @SC88168\n         BZ    RTRN          No, skip it                       @SC88168\n./ I 05846000          $ 5846200 200                  07/30/88 00:07:36\n         TM    DBGFLG,DBGSV  Save log?                         @SC88168\n         BZ    SCRIOLZ       No, skip it                       @SC88168\n         SAVEF LOGPTR        Yes, close it                     @SC88168\nSCRIOLZ  DS    0H                                              @SC88168\n./ I 05986000          $ 5986500 500                  07/30/88 00:07:36\n* 21=> save file status in directory: R1->FAB.                 @SC88168\n./ I 06052000          $ 6052100 100                  07/30/88 00:07:36\n*\n* TClose file whose ticket is in (R1)                          @SC88168\nDSKTCLOS ST    1,DSKTKT                                        @SC88168\n         MVI   DSKTKT,X'80'  Flag for normal close             @SC88168\n         CLOSE MF=(E,DSKTKT),TYPE=T                            @SC88168\n         B     RTRN0                                           @SC88168\n./ I 06115000          $ 6115030 30                   07/30/88 00:07:36\n         CH    0,=Y(21-12)                                     @SC88168\n         BNL   DSKTCLOS      21 => TCLOSE it                   @SC88168\n./ R 08461000          $ 8461000 100                  07/12/88 22:08:23\nRIOLG1   SR    8,8           Assume raw not wanted             @SC88168\n         TM    DBGFLG,DBGRW                                    @SC88168\n         BO    *+8                                             @SC88168\n         LA    8,ATOE        Raw wanted                        @SC88168\n         CR    3,8           Correct type (raw/EBCDIC)?        @SC88168\n./ I 08478000          $ 8478300 300                  07/12/88 22:08:23\n         TM    DBGFLG,DBGSV  SAVE requested?                   @SC88168\n         BZR   9             No, skip closing log file         @SC88168\n         SAVEF LOGPTR        Update disk directory             @SC88168\n./ I 08526500          $ 8526700 200                  07/07/88 22:59:05\n         LR    6,8           Set up for log routine            @SC88168\n./ * SC88202 - Update list of TSO macros used (TSO)\n./ R 01174000          $ 1174000 500                  07/20/88 22:34:44\n MNOTE '---MACROs: ATTACH, CATALOG, CLOSE, DETACH, DEVTYPE,'\n MNOTE '---        ESTAI, FIND, FREEMAIN,'\n./ R 01175150 01175200 $ 1175150 50                   07/20/88 22:34:44\n MNOTE '---        PUTLINE, SAVE, SCRATCH, STATUS, STAX,'\n MNOTE '---        STFSMODE, STIMER, STSIZE, SYNADAF,'\n MNOTE '---        SYNADRLS, TGET, TPG, TPUT, TTIMER, WAIT'\n./ * SC88203 - Test for SERIES1 device if not TTY (TSO)\n./ I 05890000          $ 5890500 500                  07/21/88 00:04:05\n         MVI   TRMTP,C'T'    1st assume TTY                    @SC88203\n./ I 05902000          $ 5902050 50                   07/21/88 00:04:05\n         L     8,S1RDPL                                        @SC88203\n         XC    0(9,8),0(8)   Zero out buffer                   @SC88203\n         LA    0,1                                             @SC88203\n         KCALL SCRNIO        Clear screen and set up           @SC88203\n         LA    0,6                                             @SC88203\n         KCALL SCRNIO,STMS1ST Issue status request             @SC88203\n         LA    0,5                                             @SC88203\n         KCALL SCRNIO,S1RDPL Read back status                  @SC88203\n         LA    0,2                                             @SC88203\n         KCALL SCRNIO        Release screen                    @SC88203\n         CLI   0(8),X'E4'    Check for Yale status response    @SC88203\n         BNE   STMGRP        No, must be something else        @SC88203\n         CLI   3(8),X'11'                                      @SC88203\n         BNE   STMGRP        No, must be something else        @SC88203\n         CLC   =X'2B5B5B',6(8)                                 @SC88203\n         BE    STMOK         Yes, all set                      @SC88203\nSTMGRP   MVI   TRMTP,C'G'    Assume graphics device            @SC88203\n./ I 05965000          $ 5965200 200                  07/21/88 00:04:05\n*\nSTMS1ST  DC    A(STMS1ORD,L'STMS1ORD)                          @SC88203\nSTMS1ORD DC    X'F1C32B5BBC' WCC + Yale ASCII status request   @SC88203\n./ * SC88235 - Allow attribute packets with time as well as date (TSO)\n./ R 01029000          $ 1029000 1000                 08/22/88 20:00:49\nFDBDATE  DS    XL7,X         Time stamp: packed yyyymmddhhmmss @SC88235\n./ D 02580000                                         08/22/88 19:47:53\n./ I 02581000          $ 2581500 500                  08/22/88 19:47:53\nFDATE    DS    XL7           Date/time of current file         @SC88235\n./ I 07392000          $ 7392090 90                   08/22/88 19:47:53\n         CLC   FDATE+4(3),F0 Time defined too?                 @SC88235\n         BE    SNDAT4        No, just use date                 @SC88235\n         MVI   1(5),C'1'     Yes, add string length - hh:mm:ss @SC88235\n         MVC   10(9,5),TIMPLT and edit time                    @SC88235\n         ED    10(9,5),FDATE+4                                 @SC88235\n         CLI   11(5),C' '                                      @SC88235\n         BNE   *+8                                             @SC88235\n         MVI   11(5),C'0'    Insist on leading zeroes          @SC88235\n         LA    5,9(5)                                          @SC88235\nSNDAT4   DS    0H                                              @SC88235\n./ I 07500000          $ 7500300 300                  08/22/88 19:47:53\n*\nTIMPLT   DC    C' ',X'2120',C':',2X'20',C':',2X'20'  Time edit @SC88235\n./ * SC88246 - Preserve carriage control flags when appending (TSO)\n./ R 01019500 01020000 $ 1019500 500                  09/02/88 23:47:27\nWFN      EQU   X'08'         Filename contains wild chars      @SC88246\n*ABRECCC EQU   X'06'         Control chars present             @SC88246\n./ R 05486450          $ 5486450 5                    09/02/88 23:47:27\n         TM    FDBFLGS,FABRECCC Carriage control?              @SC88246\n./ R 06205000          $ 6205000 200                  09/02/88 23:47:27\n         BE    DSKFABCC                                        @SC88246\n./ R 06208000          $ 6208000 500                  09/02/88 23:47:27\n         BE    DSKFABCC                                        @SC88246\n./ I 06209000          $ 6209400 400                  09/02/88 23:47:27\nDSKFABCC XC    FABRECFM,FDBFLGS Copy carriage control flags    @SC88246\n         NI    FABRECFM,255-FABRECCC  And only those flags     @SC88246\n         XC    FABRECFM,FDBFLGS                                @SC88246\n./ R 06359000          $ 6359000 500                  09/02/88 23:47:27\n         NI    FDBFLGS,255-PDSF                                @SC87015\n./ R 06400200 06400600 $ 6400200 200                  09/02/88 23:47:27\n         XC    FDBFLGS,DS1RCF Copy carriage control flags      @SC88246\n         NI    FDBFLGS,255-FABRECCC  And only those flags      @SC88246\n         XC    FDBFLGS,DS1RCF                                  @SC88246\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTMAC": {"ttr": 3334, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 RTEXT\n         MACRO\n&LABEL   RTEXT  &BUF,&PROMPT=,&E=\n.* Read from the terminal, possible prompt.  Get length read in R0.\n.*  &1: read buffer (len=130) (LA), &PROMPT(1)= prompt buf. if any\n.*  (LA/R), &PROMPT(2)= prompt length (LA/R), &E= branch if error\n         GBLC  &KSYS                                           @SC88036\n&LABEL   DS    0H                                              @SC86299\n         AIF   (T'&PROMPT EQ 'O').NOPR                         @SC87268\n         TPUT  &PROMPT(1),&PROMPT(2),ASIS                      @SC87268\n.NOPR    ANOP\n         KCALL GETLIN,&BUF,E=&E                                @SC88036\n         MEXIT                                                 @SC88036\n.GUPI    TGET  &BUF,130                                        @SC88036\n         LR    0,1           Copy length read                  @SC88036\n         MEND\n*COPY                                                 DMSFREE\n         MACRO\n&LABEL   DMSFREE &DWORDS=(0),&ERR=\n.* Obtain free storage block: len=8*(R0).  Returns ptr in R1, but\n.*    preserves registers 2-14\n.*  &DWORDS= length in doublewords should be in R0,\n.*  &ERR= branch if failure\n&LABEL   LREG  0,&DWORDS                                       @SC86299\n         SLA   0,3                                             @SC86299\n         AIF   ('&ERR' NE '').COND                             @SC86345\n         GETMAIN R,LV=(0)                                      @SC86299\n         MEXIT\n.COND    GETMAIN RC,LV=(0)                                     @SC86345\n         LTR   15,15                                           @SC86345\n         BNZ   &ERR                                            @SC86345\n         MEND\n*COPY                                                 DMSFRET\n         MACRO\n&LABEL   DMSFRET &DWORDS=(0),&LOC=(1),&ERR=\n.* Return free storage block: len=8*(R0), adr=(R1).  Preserve R2-14.\n.*  &DWORDS= length in doublewords should be in R0, &LOC= adr (in R1),\n.*  &ERR= branch if failure\n&LABEL   LREG  0,&DWORDS                                       @SC86299\n         SLA   0,3                                             @SC86299\n         FREEMAIN R,LV=(0),A=&LOC                              @SC86299\n         MEND\n*COPY                                                 WRITF\n         MACRO\n&LABEL   WRITF &TICK,&BUFFER=,&BSIZE=,&E=\n.* Write to a disk file (ticket ptr in R1)\n.*  &1: adr of file access ticket returned by OPENF (A),\n.*  &BUFFER= data ptr (LA/R), &BSIZE= data length (LA/R) - if either is\n.*  given, it replaces FDB value (see OPENF), &E= branch on error\n&LABEL   READF &TICK,BUFFER=&BUFFER,BSIZE=&BSIZE,E=&E,CODE=10\n         MEND\n*COPY                                                 READF\n         MACRO\n&LABEL   READF &TICK,&BUFFER=,&BSIZE=,&E=,&CODE=9\n.* Read from disk file (or write) (see WRITF)\n         LCLC  &R                                              @SC86299\n&LABEL   L     1,&TICK                                         @SC86299\n         AIF   ('&BUFFER' EQ '').BZ                            @SC86299\n         AIF   ('&BUFFER'(1,1) NE '(').BLA                     @SC86299\n&R       SETC  '&BUFFER(1)'                                    @SC86299\n         AGO   .BST                                            @SC86299\n.BLA     LA    15,&BUFFER                                      @SC86299\n&R       SETC  '15'                                            @SC86299\n.BST     ST    &R,FDBBUFF-FABD(1)                              @SC86299\n.BZ      AIF   ('&BSIZE' EQ '').SZ                             @SC86299\n         AIF   ('&BSIZE'(1,1) NE '(').SLA                      @SC86299\n&R       SETC  '&BSIZE(1)'                                     @SC86299\n         AGO   .SST                                            @SC86299\n.SLA     LA    15,&BSIZE                                       @SC86299\n&R       SETC  '15'                                            @SC86299\n.SST     ST    &R,FDBBSIZ-FABD(1)                              @SC86299\n.SZ      LA    0,&CODE                                         @SC86299\n         KCALL DISKIO,E=&E                                     @SC86299\n         MEND\n*COPY                                                 KSETKW\n         MACRO\n         KSETKW ,                                              @SC87166\n.* Define system-specific SET/SHOW parameters (keywords)\n         KW    'PREFIX',SHODST,MIN=3                           @SC87166\n         KW    'TIMER',SHOTIM,MIN=2                            @SC87166\n         MEND\n*COPY                                                 KSETPRC\n         MACRO\n         KSETPRC\n.* System-specific SET handlers (in any order).  No operands.\n         PUSH  PRINT                                           @SC86355\n         PRINT GEN                                             @SC86355\nSETDST   KCALL CWDSET                                          @SC86164\n         B     RTRN          Preserve return code              @SC86295\n         POP   PRINT                                           @SC86355\n         MEND\n*COPY                                                 KSHOPRC\n         MACRO\n         KSHOPRC\n.* System-specific SHOW handlers (in same order as KW).  No operands.\n         PUSH  PRINT                                           @SC86355\n         PRINT GEN                                             @SC86355\nSHODST   LA    8,DEST                                          @SC86316\n         LH    9,DESTL       Get length                        @SC86316\n         BAL   14,SHOCHRN                                      @SC86295\n          B    SETDST                                          @SC87166\nSHOTIM   BAL   14,SHOOO                                        @SC87166\n          OI   FL5,TIMF      Timer flag                        @SC87166\n         POP   PRINT                                           @SC86355\n         MEND\n*COPY                                                 KFILKW\n         MACRO\n         KFILKW ,                                              @SC87166\n.* Define system-specific file attribute parameters (keywords)\n         KW    'BLKSIZE',SHOBSZ,MIN=2                          @SC87166\n         KW    'RECFM',SHORFM                                  @SC87166\n         KW    'SPACE',SHOTRK,MIN=2                            @SC87166\n         KW    'UNIT',SHOUNT                                   @SC87166\n         KW    'VOLUME',SHOVOL,MIN=2                           @SC87166\n         MEND\n*COPY                                                 KFILSET\n         MACRO\n         KFILSET\n.* Specific SET FILE handlers (any order).  No operands.\n         PUSH  PRINT                                           @SC87012\n         PRINT GEN                                             @SC87012\nSETRECVF MVC   RFM,0(6)      Copy RECFM                        @SC87012\n         B     RTRN0                                           @SC87012\n*                                                              @SC87012\nSETRFM   BAL   4,SETSCN                                        @SC87012\n         KW    'FIXED',SETRECVF                                @SC87012\n         KW    'VARIABLE',SETRECVF                             @SC87012\n         KW    'UNDEFINED',SETRECVF                            @SC86295\n         KW    ,                                               @SC87012\n*\nSETUNT   BAL   2,SETFSTR     Get fixed-format string           @SC86316\n         TR    FILUNT,UPCASE Should always be upper case       @SC88020\n         MVC   LOGUNT,FILUNT                                   @SC86316\n         B     RTRN0                                           @SC86316\n*\nSETVOL   BAL   2,SETFSTR     Get fixed-format string           @SC86295\n         TR    FILVOL,UPCASE Should always be upper case       @SC88020\n         MVC   LOGVOL,FILVOL                                   @SC86316\n         B     RTRN0                                           @SC86295\n         POP   PRINT                                           @SC87012\n         MEND\n*COPY                                                 KFILSHO\n         MACRO\n         KFILSHO\n.* Specific SHOW FILE handlers (same order as KW).  No operands.\n         PUSH  PRINT                                           @SC87012\n         PRINT GEN                                             @SC87012\nSHOBSZ   L     8,MAXBSZ      Limit                             @SC87166\n         LH    4,FILBLKSI                                      @SC87320\n         BAL   14,SHONUM     Print it                          @SC86295\n          B    RTRN0                                           @SC86295\nSHORFM   LA    8,RFM                                           @SC87012\n         BAL   14,SHOCHR                                       @SC87012\n          B    SETRFM                                          @SC87166\nSHOTRK   L     8,MAXBSZ      Limit                             @SC87166\n         L     4,FILTRKAL                                      @SC88026\n         BAL   14,SHONUM     Print it                          @SC86295\n          B    RTRN0                                           @SC87166\nSHOUNT   LA    8,FILUNT                                        @SC86316\n         LA    9,8                                             @SC86316\n         BAL   14,SHOCHRN                                      @SC86316\n          B    SETUNT                                          @SC87166\nSHOVOL   LA    8,FILVOL                                        @SC86295\n         LA    9,6                                             @SC86295\n         BAL   14,SHOCHRN                                      @SC86295\n          B    SETVOL                                          @SC87166\n         POP   PRINT                                           @SC87012\n         MEND\n*COPY                                                 WTEXT\n         MACRO\n&LABEL   WTEXT &ARG,&LEN\n.* Display some text, e.g., WTEXT 'Hi there' or WTEXT (3),(4)\n.* Preserves R2-R14\n.*  &1: 'text' (where text has no doubled ' or & characters)  OR\n.*  &1: adr of text (LA/R), &2: length of text (LA/R)\n         GBLC  &KSYS                                           @SC88036\n&LABEL   PTEXT &ARG,&LEN,AREG=1,LREG=0                         @SC86295\n.*\n         BAL   15,WTEXT      'TPUT'                            @SC87020\n         MEXIT                                                 @SC88036\n.GUPI    SVC   93            'TPUT'                            @SC88036\n         MEND\n*COPY                                                 FDBD\n         MACRO\n         FDBD\n.* Map of File Descriptor Block + File Access Block\nFABD     DSECT ,                                               @SC86295\nFABRELAD DS    17X           FAB maps DCB                      @SC86299\nFABREL   DS    AL3                                             @SC86299\nFABBUFNO DS    0BL1                                            @SC86299\nFABBUFCB DS    A                                               @SC86299\nFABBUFL  DS    H                                               @SC86299\nFABDSORG DS    BL2                                             @SC86299\nFABIOBAD DS    A                                               @SC86299\nFABEODAD DS    A                                               @SC86299\nFABRECFM DS    0BL1                                            @SC86299\nFABRECU  EQU   X'C0'         Undefined-length records          @SC86299\nFABRECF  EQU   X'80'         Fixed-length records              @SC86299\nFABRECV  EQU   X'40'         Varying-length records            @SC86299\nFABRECBR EQU   X'10'         Blocked records                   @SC86299\nFABEXLST DS    A                                               @SC86299\nFABDDNAM DS    CL8                                             @SC86299\nFABOFLGS DS    BL1                                             @SC86299\nFABIFLG  DS    BL1                                             @SC86299\nFABMACR  DS    BL2                                             @SC86299\n         ORG   FABDDNAM                                        @SC86299\nFABTIOT  DS    BL2                                             @SC86299\nFABMACRF DS    BL2                                             @SC86299\nFABDEBAD DS    A                                               @SC86299\nFABGET   DS    A                                               @SC86299\nFABCHECK DS    A                                               @SC86299\nFABSYNAD DS    A                                               @SC86299\nFABCIND1 DS    BL2                                             @SC86299\nFABBLKSI DS    H                                               @SC86299\nFABWCPO  DS    BL4                                             @SC86299\nFABIOBA  DS    A                                               @SC86299\nFABEOBAD DS    A                                               @SC86299\nFABRECAD DS    A                                               @SC86299\nFABDIRCT DS    H                                               @SC86299\nFABLRECL DS    H                                               @SC86299\nFABCNTRL DS    A                                               @SC86299\n         ORG   FABD+90                                         @SC86299\nFABPRECL DS    AL2                                             @SC86299\nFABEOB   DS    A                                               @SC86299\nFDBD     DS    0F            Beginning of short descriptor     @SC86295\nFDBBUFF  DS    A             Buffer ptr                        @SC86295\nFDBBSIZ  DS    F             Max record length                 @SC86295\nFDBRCF   DS    C             Record format                     @SC86295\nFDBFLGS  DS    X             Flags                             @SC86295\nFDBACTV  EQU   X'80'         File is already open              @SC86295\n* APPN   EQU   X'10'         DISP=MOD                          @SC86295\nWFN      EQU   X'02'         Filename contains wild chars\nPDSF     EQU   X'01'         Dataset is a PDS                  @SC87015\nFDBLRC   DS    H             File record length                @SC86295\nFDBTRKAL DS    F             File track allocation increment   @SC88026\nFDBBLKSI DS    H             File block size                   @SC86295\nFDBVOL   DS    CL6           File volume label                 @SC86295\nFDBUNT   DS    CL8           File unit name                    @SC86299\nFDBCOP   EQU   *-FDBD        Length to copy for OPEN           @SC86295\nFDBSIZE  DS    F             File size in Kbytes               @SC86299\nFDBDATE  DS    F             Creation date: packed yyyymmdd    @SC86295\nFABLDSN  DS    H             Name length                       @SC87351\nFABDSN   DS    CL52          Dataset name                      @SC86299\nFDBINFO  EQU   *-FDBD        Length of info returned           @SC86295\nFABCOMM  DS    CL8           Command name                      @SC87351\nFABDWDS  EQU   (*-FABD+7)/8                                    @SC86295\n         MEND\n*COPY                                                 FDBPAT\n         MACRO\n         FDBPAT &N,&RFM,&SIZ                                   @SC88120\n.* Define system-dependent part of output FDB patterns\n.*  &1: variable-name prefix (or null if defining init. values)\n.*  &2: RECFM (1-char), &3: LRECL (skip rest of FDB if omitted)@SC88120\n         LCLC  &T,&B,&V,&U,&Z                                  @SC87320\n         LCLC  &R,&F,&L,&P4                                    @SC88120\n         AIF   ('&N' EQ '').ALC                                @SC86316\n&R       SETC  'RCF'                                           @SC88120\n&F       SETC  'FLGS'                                          @SC88120\n&L       SETC  'LRC'                                           @SC88120\n&T       SETC  'TRKAL'                                         @SC87320\n&B       SETC  'BLKSI'                                         @SC87320\n&V       SETC  'VOL'                                           @SC86316\n&U       SETC  'UNT'                                           @SC86316\n.ALC     ANOP                                                  @SC86316\n&N&R     DC    C'&RFM'       RECFM                             @SC88120\n&N&F     DC    X'00'         Flags                             @SC88120\n         AIF   ('&SIZ' EQ '').DONE                             @SC88120\n         AIF   ('&RFM' NE 'V').OKL                             @SC88120\n&P4      SETC  '+4'          Add 4 for RDW                     @SC88120\n.OKL     ANOP                                                  @SC88120\n&N&L     DC    Y(&SIZ&P4)    LRECL                             @SC88120\n&N&T     DC    F'5'          Track allocation                  @SC88026\n&Z       SETC  '6233'        Default block size                @SC87320\n         AIF   ('&SIZ' NE 'LPKT').P1                           @SC88120\n&Z       SETC  'LPKT+8'      Block size for log file           @SC87320\n.P1      ANOP\n&N&B     DC    Y(&Z)                                           @SC87320\n&N&V     DC    CL6' '        No volume specified               @SC87320\n&N&U     DC    CL8'SYSDA'    Default unit                      @SC87320\n.DONE    ANOP                                                  @SC88120\n         MEND\n*COPY                                                 KSYSVAR\n         MACRO\n         KSYSVAR\n.* Define system-dependent globally-known variables\nCOMPTR   DS    2A            Common/storage ptrs               @SC87015\nAPGPB    GETLINE MF=L        Parameter block for GETLINE       @NW86330\nSTAXPL   STAX  0,MF=L        Parameter block for STAX          @NW86330\nSTAXPLR  STAX  0,MF=L        Parameter block for STAX (replace)@NW86330\nIOPLAREA DS    4F            IOPL                              @TS86001\nCPECB    DS    F             GETLINE/PUTLINE/PUTGET ECB        @TS86001\nECBREAD  DS    F                                               @NW86330\nTASKADD  DS    A             Async task adr                    @NW86330\nECBTGET  DS    F                                               @NW86330\nKTGETT   DS    2F            Adr and length of read request    @SC87015\nPUTLINAD DS    A             Adr of PUTLINE routine            @SC88026\nGETLINAD DS    A             Adr of GETLINE routine            @NW86330\nDAPLAREA DS    5F            DAIR plist block                  @SC87351\nDA00     DS    F             Parameter block                   @SC87351\nDA00PDSN DS    A,CL8,4X      DSN ptr                           @SC87351\nCATDSPTR DS    A             Catalog buffer ptr                @NW86330\nNXSFPTR  DS    A             Ptr to suffix comparand           @SC87015\nCIRPARM  DS    0F                                              @NW86330\nCIROPT   DS    X'02'         Get all matches                   @NW86330\n         DS    2AL1(0)       Reserved by system                @NW86330\nCIRLOCRC DS    AL1(0)        Locate return code                @NW86330\nCIRSRCH  DS    A             Search arg: adr of test DSN       @NW86330\nCIRCVOL  DS    F'0'          Vol adr=0 - force cat lookup      @NW86330\nCIRWA    DS    A             Ptr to user work area             @NW86330\nCIRSAVE  DS    A             Ptr to save area for macro        @NW86330\nCIRPSWD  DS    F'0'          Adr of password                   @NW86330\nDEST     DS    CL44          Default PREFIX                    @SC86299\nDESTP    DS    C' '          PDS indicator ('.' if so)         @SC86299\nDESTL    DS    H'0'          Length                            @SC86299\n         DS    0F                                              @SC86299\nDSKSTT   EQU   *-FDBD+FABD                                     @SC86299\n         DS    XL(FDBINFO)   Room for FDB                      @SC86299\nNXFN     DS    CL(LFID)      Pattern filespec for search       @SC87015\nDSNPFL   DS    H             Prefix length for search          @NW86330\nDSNSFL   DS    H             Suffix length for search          @NW86330\nICPRGS   DS    4F            Saved registers for type-out      @SC88026\nICPFL    DS    X             Flag for type-out interception    @SC87020\nSTMUCH   DS    XL2           Saved user profile values         @SC86299\nPTLLEN   DS    0F,2H         PUTLINE data descriptor           @SC88026\nPTLBUF   DS    CL133                                           @SC88026\nSTKDSN   DS    CL(LFID)      DSN for STACK                     @SC88026\n         MEND\n*COPY                                                 KSYSTF\n         MACRO\n         KSYSTF\n.* Define system-dependent globally-known constants and init. variables\n.*  symb .DS + label &P.DEFS mark start of variables/init. values\n         LCLC  &P\n         PUSH  PRINT\n         PRINT GEN\n         AIF   ('&SYSECT' EQ 'STORAG').DS\n&P       SETC  'I'           For initial values\nWTEXT    STM   14,1,ICPRGS   Save                              @SC88026\n         CLI   ICPFL,2       Intercepting?                     @SC88026\n         BE    WTXICP        Yes, do it                        @SC88026\n         MVC   PTLBUF,0(1)   Copy to buffer                    @SC88026\n         A     0,F4                                            @SC88026\n         STH   0,PTLLEN      And save length                   @SC88026\n         L     15,PUTLINAD                                     @SC88026\n         PUTLINE PARM=PTPB,MF=(E,IOPLAREA),ENTRY=(15)          @SC88026\n         B     WTXRET                                          @SC87020\nWTXICP   KCALL ICPTYP        Call interception routine         @SC87020\nWTXRET   LM    14,1,ICPRGS   Restore                           @SC88026\n         BR    15                                              @SC87020\nSYSATR   DC    C'.\"I2'       System type for A-packet          @SC86299\nLOGNAM   DC    C'KER.LOG'                                      @SC86299\nREPNAM   DC    C'KER.REPLY'                                    @SC86299\nSYSTAKE  DC    C'''SYS1.KERMINI'''                             @SC86299\nLSYST    EQU   *-SYSTAKE                                       @SC86299\nUSRTAKE  DC    C'KERMINI'    Init file                         @SC86299\nLUSRT    EQU   *-USRTAKE                                       @SC86299\n         ADCON GETLIN,ICPTYP Various routines                  @SC87020\nCIRWAL   DC    H'32004,0'    Length of catalog work area       @SC87015\n.DS      ANOP\n&P.DEFS  DS    0D\n&P.KPRPL DC    AL1(L'&P.KPRPT)                                 @SC87268\n&P.KPRPT DC    C'Kermit-TSO>'                                  @SC87268\n         ORG   &P.KPRPT+20                                     @SC87268\n         POP   PRINT\n&P.PTPB  PUTLINE MF=L,OUTPUT=(0,TERM,SINGLE,DATA)              @SC88026\n         MEND\n*COPY                                                 KSYSBUF\n         MACRO\n         KSYSBUF\n.* Store buffer ptrs from R1 and increment R1 for specific buffers\n         LA    0,4-1                                           @SC87015\n         AR    1,0                                             @SC87015\n         OR    1,0                                             @SC87015\n         XR    1,0                                             @SC87015\n         ST    1,CIRSAVE     Catalog scan save area            @SC87015\n         LA    1,72(1)                                         @SC87015\n         ST    1,CIRWA       Catalog info buffer               @SC87015\n         AH    1,CIRWAL                                        @SC87015\n         ST    1,CIRSRCH     Catalog search comparand          @SC87015\n         LA    1,44(1)                                         @SC87015\n         MEND\n*COPY                                                 SSYMS\n         MACRO\n         SSYMS\n.* Set global symbols for conditional assembly\n         GBLC  &KVRSN,&KSYS,&KDATE,&RTN,&TYPCMD,&S1CMD         @SC86355\n         GBLA  &MAXLR,&MAXBS                                   @SC86268\n&KSYS    SETC  'TSO'         System name                       @SC86299\n         MNOTE '*** Kermit-&KSYS release &KVRSN (&KDATE) ***'\n&MAXLR   SETA  32756         Max lrecl                         @SC86299\n&MAXBS   SETA  32760         Max blksize                       @SC86299\n&S1CMD   SETC  'F1F0'        S/1 order                         @SC86299\n         PUSH  PRINT\n         PRINT GEN\nMAXWT    EQU   1024          Max TPUT buffer                   @SC86299\nMAXRT    EQU   1024          Max TGET buffer                   @SC86299\nLFID     EQU   52            Max length of filespec            @SC86299\n&TYPCMD  SETC  'LIST'        Host command for TYPE             @SC86299\nTYPMIN   EQU   4             Min abbrv of system TYPE cmd or 2 @SC86299\nKMAXE    EQU   1920-7        < 9025  Kermit extended max pkt   @SC87351\nSTKDWDS  EQU   511           Size of save-area stack           @SC87012\n         POP   PRINT\n         MEND                                                  @SC86268\n*COPY                                                 SYSMACS\n         MACRO\n         SYSMACS\n.* Include system control block definition macros and list all macros\n MNOTE '---MACROs: ATTACH, CLOSE, DETACH, FIND, FREEMAIN,'\n MNOTE '---        FREEPOOL, GETLINE, GETMAIN, GTSIZE, IKJCPPL,'\n MNOTE '---        IKJCVT, IKJECT, IKJGTPB, IKJIOPL,'\n MNOTE '---        IKJPSCB, IKJUPT, LOCATE, OBTAIN, OPEN, POST,'\n MNOTE '---        SAVE, STAX, STIMER, TPUT, TGET, TTIMER, WAIT'\n         IKJCPPL ,                                             @SC86299\n*        CVT ,                                                 @SC88036\n         IKJDAPL ,                                             @SC87351\n         IKJECT ,                                              @SC86299\n         IKJGTPB ,                                             @NW86330\n         IKJIOPL ,                                             @TS86001\n         IKJPSCB ,                                             @SC86299\n         IKJUPT ,                                              @SC86299\n* DSECT for addressing catalog information work area\nCATDSET  DSECT                                                 @NW86330\nTYPEBYTE DS    XL1           Type byte we want only A's        @NW86330\nCATDNAME DS    44CL1         Data set name                     @NW86330\n         MEND                                                  @SC86268\n*COPY                                                 STRTMSGS\n         MACRO\n&LABEL   STRTMSGS\n.* Print system-dependent start-up messages\n&LABEL   CLI   S1HND,XON                                       @SC87338\n         BNE   STRT1Z                                          @SC87338\n         CLI   TRMTP,C'T'                                      @SC87338\n         BE    STRT1Z                                          @SC87338\n         WTEXT 'Handshake is XON -- not needed'                @SC87338\nSTRT1Z   DS    0H                                              @SC87338\n         MEND                                                  @SC87338\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKTUTL": {"ttr": 3588, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IKTUTL\n         TITLE 'CWDSET/DSPACE Routines - set/show working directory'\n* Set new 'working directory', i.e., DSN prefix\n* Entry: SCANPTR string has option\n* Exit: R15=0 if ok, R15=1 if error or help needed. ERRNUM unchanged.\nCWDSET   ENTER                                                 @SC86164\n         SR    5,5                                             @SC86299\n         MVI   IFILE+44,C' '                                   @SC86299\n         NTOKN N=CWDLEN,H=CWDERR                               @SC86299\n         LA    1,0(7,6)      End of string                     @SC86299\n         BCTR  1,0                                             @SC86299\n         CLC   =C'()',0(1)   Prefix is PDS name?               @SC86299\n         BNE   CWDTL         No                                @SC86299\n         S     7,F2          Yes, remove null member name      @SC86299\n         BM    CWDERR                                          @SC86299\n         MVI   IFILE+44,C'.' Indicate PDS wanted               @SC86299\nCWDTL    LA    7,1(7)        Token length                      @SC86299\n         CH    7,LA44+2      Suitable?                         @SC86299\n         BH    CWDERR        Too long                          @SC86299\n         LR    5,7                                             @SC86299\n         ICM   7,8,BLANK                                       @SC86299\n         LA    0,IFILE                                         @SC86299\nLA44     LA    1,44          Length of DSN alone               @SC86299\n         MVCL  0,6           Copy to filename buffer           @SC86299\n         TR    IFILE,UPCASE  And upcase it                     @SC87034\n       NXTFSET IFILE,CWD,E=CWDERR                              @SC86295\nCWDLEN   MVC   DEST(45),IFILE Save new prefix                  @SC86299\n         STH   5,DESTL                                         @SC86299\n         B     RTRN0                                           @SC86295\nCWDERR   PTEXT 'Must be valid file prefix'                     @SC86299\n         B     SUBERR                                          @SC86295\n*\n*        DSPACE Routine - display available disk space         @SC86164\n*\n* Show space available in 'working directory' or other area\n* Entry: SCANPTR string has option (none => working directory)\n* Exit: R15=0 if ok, R15=1 if error or help needed. ERRNUM unchanged\nDSPACE   ENTER ALT                                             @SC86164\n* * * * * * * * * * * * * * * * * * * * * *\n         PTEXT 'SPACE not implemented'                         @SC86299\n         B     SUBERR                                          @SC86299\n* * * * * * * * * * * * * * * * * * * * * *\n         B     RTRN0                                           @SC86295\n         LOCALS ,                                              @SC86295\n         EXIT  ,                                               @SC86295\n         TITLE 'FSPEC Routine - extract filespec from scan string'\n*\n* Entry: R1->name field, R0=flags selecting operation (see below)\n*        For parse operations, SCANPTR defines the input string.\n*        For getting foreign or display filespec, R7->output buffer\n* Exit: if not FFNEW, then R15=0 if ok, 1 if ?, 2 if bad.\n*        For R15=1 or 2 R3,R4 give message.  ERRNUM may be leftover.\n*\n*                                 Flags:                  Notes:\n*   Tasks:               FFRCF FFSND FFGET FFNEW\n* Parse RECV               X                     set ROVR properly\n* Parse SEND 1st                 X\n* Parse SEND 2nd           X     X\n* Parse GET 1st            X           X\n* Parse GET 2nd                        X         set ROVR properly\n* Parse F-packet   (FFHDR) X     X     X\n* Parse for Generic(FFUTL)       X     X         FFWLD: allow partial\n* Parse TAKE\n*\n* Get unique name                            X     R15: 0=>ok, 1=>bad\n* Interactive name check               X     X     R15: 0=>ok, 1=>bad\n* Get foreign name (FFENC) X                 X     R15->end of string\n* Get display form (FFDSP)       X           X     R15->end of string\n*\nFSPEC    ENTER                                                 @SC86295\n         STC   0,FSPFLG                                        @SC86295\n         LR    0,1           Copy ptr to filespec              @SC86295\n         TM    FSPFLG,FFNEW                                    @SC86295\n         BO    FSPWRN                                          @SC86295\n         LR    8,1           Save ptr to DSN field             @SC86299\n         XC    0(52,8),0(8)  Clear DSN field                   @SC86299\n         PTEXT 'Invalid DSN'                                   @SC86299\n         MVI   ERRNUM,ERRFNE Assume bad file name              @SC86158\n         TM    FSPFLG,FFHDR                                    @SC86295\n         BO    FSPHD                                           @SC86295\n         TM    FSPFLG,FFUTL                                    @SC86295\n         BNO   FSPTR                                           @SC86295\n         TM    FSPFLG,FFWLD  Utility: default to all files?    @SC86295\n         BZ    FSPASC        No                                @SC86295\n         MVI   0(1),C' '     Yes, allow missing DSN            @SC86299\n         MVC   1(51,1),0(1)                                    @SC86299\nFSPASC   TM    FL2,SRV       Server mode?                      @SC86295\n         BZ    FSPCPY        No, don't need to convert         @SC86295\n         ICM   15,15,LEN     Get length                        @SC86295\n         BZ    FSPCPY                                          @SC86295\n         BCTR  15,0          Correct for EX                    @SC86158\n         L     1,ADR         Get string ptr                    @SC86295\n         EX    15,TRATOE     Change to EBCDIC                  @SC86158\n         EX    15,TRUPCAS    Upcase                            @SC86299\n         B     FSPCPY                                          @SC86295\nFSPTR    TM    FSPFLG,FFRCF                                    @SC86295\n         BZ    FSPTS                                           @SC86295\n         TM    FSPFLG,FFSND+FFGET                              @SC86295\n         BNZ   FSPSN2        Foreign filespec for SEND or GET  @SC86295\nFSPRC    NI    FL1,255-ROVR  Setup for RECEIVE                 @SC86295\n         NI    FL4,255-NMOK  Collision not checked yet         @SC87012\n         MVI   0(1),C'$'     Allow missing DSN                 @SC86299\n         B     FSPCPY                                          @SC86295\nFSPHD    MVI   0(1),1        Use default if missing DSN        @SC86299\n         B     FSPCPY                                          @SC86299\nFSPTS    TM    FSPFLG,FFSND                                    @SC86295\n         BO    FSPASC                                          @SC86299\n         TM    FSPFLG,FFGET                                    @SC86299\n         BO    FSPRC                                           @SC86299\n         B     FSPCPY                                          @SC86299\nFSPSN2   NTOKN H=FSP2H,N=RTRN0                                 @SC86299\n         LA    1,L'JFNAM                                       @SC86295\n         CLM   7,3,*-2       Does it fit?                      @SC86224\n         BNH   *+6           Yes                               @SC86224\n         LR    7,1           Use what we can                   @SC86224\n         LR    3,0                                             @SC86295\n         STC   7,0(3)        Save length                       @SC86224\n         LA    0,1(3)                                          @SC86295\n         MVCL  0,6           Get fn, at least                  @SC86224\n         B     RTRN0                                           @SC86295\n*\nFSPCPY   NTOKN H=FSPH,N=FSPZ                                   @SC86299\nFSPCP2   MVI   TRTBL+C'.',1  Set to intercept these            @SC86299\n         MVI   TRTBL+C'(',2                                    @SC86299\n         LA    15,44         Length of DSN proper              @SC86299\n         AR    7,6           Last char of string               @SC86299\n         CLI   0(6),C''''    Full name?                        @SC86299\n         BNE   FSPPRE        No, add prefix                    @SC86299\n         LA    6,1(6)        Yes, skip over quote              @SC86299\n         CLI   0(7),C''''    Must have close quote as well     @SC86299\n         BNE   *+6                                             @SC86299\n         BCTR  7,0           Back up over it                   @SC86299\n         BE    *+8                                             @SC86299\n         BAL   9,FSPTU       Missing: quit if user typed this  @SC86299\n         B     FSPPREZ                                         @SC86299\nFSPPRE   CLI   0(7),C''''    Better not be trailing quote      @SC86299\n         BNE   *+10          Ok                                @SC86299\n          BAL  9,FSPTU       Error                             @SC86299\n          BCTR 7,0           Didn't quit, so patch it up       @SC86299\n         LH    1,DESTL       Length of prefix                  @SC86299\n         LTR   1,1           Any?                              @SC86299\n         BZ    FSPPREZ       No                                @SC86299\n         LA    14,DEST       Ptr to prefix string              @SC86299\n         MVCL  0,14          Copy prefix to name field         @SC86299\n         CLI   DESTP,C'.'    PDS?                              @SC86299\n         BE    FSPCPF        Yes, prefix is entire DSN         @SC86299\nFSPDOT   LA    14,LOCASE+C'.'                                  @SC86299\n         LA    1,1                                             @SC86299\n         MVCL  0,14          Append a dot                      @SC86299\nFSPPREZ  BAL   2,FSPANAT     Add '#' if numeric char next      @SC86299\nFSPCPA   LA    1,1(7)        End of string                     @SC86299\n         LA    2,2           In case no breaks                 @SC86299\n         SR    7,6                                             @SC86299\n         EX    7,FSPTRT      Find break                        @SC86299\n         AR    7,6           Restore ptr to last char          @SC86299\n         SR    1,6           Length of token                   @SC86299\n         BP    *+8                                             @SC86299\n          BAL  9,FSPTU       Null token                        @SC86299\n         LR    14,6          Save start of token               @SC86299\n         AR    6,1           Ptr to break                      @SC86299\n         CR    1,5           Max allowed for this token        @SC86299\n         BNH   *+10          Ok                                @SC86299\n          BAL  9,FSPTU       Too long                          @SC86299\n          LR   1,5           Use max                           @SC86299\n         CR    1,15          Room left in name field?          @SC86299\n         BNH   FSPCPC        Ok                                @SC86299\n         BAL   9,FSPTU       Overfilled                        @SC86299\n         MVI   TRTBL+C'.',0  Keep going, but ignore further tok@SC86299\n         LR    1,15                                            @SC86299\nFSPCPC   MVCL  0,14          Copy token                        @SC86299\n         BCT   2,FSPCPF      Go if reached end of name         @SC86299\n         LA    6,1(6)        Skip over dot                     @SC86299\n         CR    6,7           Was dot the last char?            @SC86299\n         BH    FSPCPE        Yes, oops                         @SC86299\n         C     15,F1         Room for another token?           @SC86299\n         BH    FSPDOT        Ok, keep going                    @SC86299\n         SR    5,5           No, suppress further tokens       @SC86299\n         BAL   9,FSPTU       Quit if user typed it             @SC86299\n         B     FSPCPA        Keep going                        @SC86299\nFSPTRT   TRT   0(,6),TRTBL   Find end of token                 @SC86299\nFSPCPE   BAL   9,FSPTU       Quit if user type it              @SC86299\nFSPCPF   LR    14,0          Output ptr                        @SC86299\n         SR    1,1                                             @SC86299\n         ICM   1,8,BLANK                                       @SC86299\n         MVCL  14,0          Pad with blanks                   @SC86299\n         LA    15,8          Length of member name, if any     @SC86299\n         CLI   DESTP,C'.'    PDS?                              @SC86299\n         BE    FSPCPP        Yes, member without parentheses   @SC86299\n         BCTR  6,0           Back up to last char of DSN       @SC86299\n         CR    6,7                                             @SC86299\n         BE    FSPCPG        No member name                    @SC86299\n         LA    6,2(6)        Ptr to member name                @SC86299\n         CLI   0(7),C')'     Must be matching paren            @SC86299\n         BE    FSPCPG        Ok                                @SC86299\n         BAL   9,FSPTU       Oops                              @SC86299\nFSPCPP   LA    7,1(7)        Pretend it's there                @SC86299\nFSPCPG   SR    7,6           Length of member name             @SC86299\n         BZ    FSPCPM        None, forget it                   @SC86299\n         LR    0,14          Copy output ptr                   @SC86299\n         BAL   2,FSPANAT     '#' if numeric char next          @SC86299\n         LR    14,0                                            @SC86299\nFSPCPM   ICM   7,8,BLANK                                       @SC86299\n         MVCL  14,6          Copy member name                  @SC86299\n         CLM   7,7,F0        Did it fit?                       @SC86299\n         BE    *+8                                             @SC86299\n          BAL  9,FSPTU       Oops                              @SC86299\n         MVC   FSPDSN,0(8)   Save raw name                     @SC86299\n         TR    FSPDSN,UPCASE Upcase it                         @SC87034\n         TR    0(52,8),FSPTAB Convert to valid chars, if nec.  @SC86299\n         TR    44(8,8),FSPMTAB Stricter limits on member name  @SC86299\n         CLC   FSPDSN,0(8)   Any conversions?                  @SC86299\n         BE    *+8           No, ok                            @SC86299\n          BAL  9,FSPTU       Yes, quit if user typed it        @SC86299\n         OI    FL1,ROVR      Found a name                      @SC86299\n         MVI   TRTBL+C'.',0  Restore table                     @SC86299\n         MVI   TRTBL+C'(',0                                    @SC86299\n         B     RTRN0                                           @SC87034\n*\nFSPZ     LA    6,=C'$.$'     In case we must use default       @SC87338\n         LA    7,3-1                                           @SC87338\n         CLI   0(8),1                                          @SC86299\n         BE    FSPCP2        Get default DSN 'prefix.$.$'      @SC87338\n         BH    RTRN0         Don't insist                      @SC86299\n         PTEXT 'Missing DSN'                                   @SC86299\n         B     FSPINV                                          @SC86299\nFSPTU    TM    FSPFLG,FFHDR                                    @SC86299\n         BOR   9             From other Kermit, accept it      @SC86299\nFSPINV   MVI   TRTBL+C'.',0  Restore table                     @SC86299\n         MVI   TRTBL+C'(',0                                    @SC86299\n         LA    15,2                                            @SC86299\n         B     FSPPTRS                                         @SC86295\n*\nFSPH     PTEXT 'Enter DSN'                                     @SC86299\n         B     FSP0H                                           @SC86295\nFSP2H    PTEXT 'Enter foreign filespec'                        @SC86295\nFSP0H    LA    15,1                                            @SC86295\nFSPPTRS  L     14,4(13)                                        @SC86295\n         STM   3,4,32(14)    Return msg ptrs                   @SC86295\nFSPRET   RET   ,                                               @SC86295\n*\n* Non-parsing functions . . .\n*\n* Get unique filespec\nFSPWRN   LR    4,1           Save name ptr                     @SC86295\n         TM    FSPFLG,FFENC                                    @SC86295\n         BO    FSPENC        Encode name into buffer           @SC86295\n         TM    FSPFLG,FFDSP                                    @SC86295\n         BO    FSPDSP        Copy name into buffer for display @SC86295\n         TM    FL4,NMOK      Already checked?                  @SC87012\n         BO    RTRN0         Yes, ok                           @SC87012\n* This routine checks to see if the old data set is a PDS.     @TS86001\n* If so, it then allocates and opens the data set and does a   @TS86001\n* FIND to determine if the member is present.                  @TS86001\n         LA    5,10+1        Allowed retries                   @BS86001\n         LA    7,C'0'        Extra character                   @BS86001\n         MVC   FSPDSN,0(4)                                     @SC87015\n         BAL   9,FSPTOPN                                       @SC87015\n         USING FDBD,1                                          @SC87015\n         CLI   FSPDSMB,C' '  Member specified?                 @SC87015\n         BE    FSPNOPDS      No, be sure it isn't a PDS        @SC87015\n         TM    FDBFLGS,PDSF  Yes, be sure it is                @SC87015\n         BZ    RTRN1         Too bad                           @SC87015\n         MVI   FSPDSMB,0     Signal DSORG=PO for allocation    @SC87015\n         OPENF I,FSPDSN,FILFDB,PDSPTR,E=RTRN1                  @SC87015\n         MVC   FSPDSMB,44(4) Copy requested member name        @SC87015\n         LA    1,FSPDSMB+7   Last char of member               @SC87015\n         TRT   FSPDSMB,TRTBL Find blank                        @SC87015\n         LR    6,1           Tentative byte to modify          @SC86299\n         LA    3,FSPTFND                                       @SC87015\n         BALR  9,3           See if member exists              @SC87015\n         B     FSPRMPT       Yes, resolve                      @SC87015\nFSPTFND  L     1,PDSPTR                                        @SC87015\n         FIND  (1),FSPDSMB,D Search for member name            @SC87015\n         B     *+4(15)       Branch on return code             @TS86001\n         B     0(9)          0  - member was found             @TS86001\n         B     FSPNOKM       4  - member not found             @TS86001\n         B     FSPDERR       8  - I/O error or lack of memory  @TS86001\nFSPTOPN  OPENF T,FSPDSN,E=FSPNOKD No collision                 @SC87015\n         BR    9                                               @SC87015\nFSPNOPDS TM    FDBFLGS,PDSF  Be sure it isn't a PDS            @SC87015\n         BO    RTRN1         Too bad                           @SC87015\n         LA    3,FSPTOPN     Just test DSN for existence       @SC87015\n         MVI   TRTBL+C'.',1                                    @SC87015\n         TRT   FSPDSN(9),TRTBL Find end of 1st index           @SC87015\n         LR    6,1                                             @SC87015\n         LA    1,8(6)        Last possible end of 2nd          @SC87015\n         TRT   2(7,6),TRTBL                                    @SC87015\n         MVI   TRTBL+C'.',0  Restore TRT                       @SC87015\n         LR    6,1           Byte to modify                    @SC87015\n         BZ    FSPRMPT       Index level was 8 bytes           @SC87015\n         CLI   FSPDSN+42,C'.' Is last level a 1-byte qualifier?@SC88020\n         BNE   *+10          No, ok                            @SC88020\n          BCTR 6,0           Yes, can't shift name over        @SC88020\n          B    FSPRMPT                                         @SC88020\n         LA    1,FSPDSN                                        @SC87015\n         MVC   1(43,1),0(4)  Shift name over one               @SC87015\n         SR    6,1                                             @SC87015\n         EX    6,FSPMVDS     And copy beginning back           @SC87015\n         AR    6,1                                             @SC87015\nFSPRMPT  TM    FL1,REN       Warning mode on?                  @SC87015\n         BZ    FSPNOK        No, just overwrite                @SC87015\n         TM    FL2,PROTO     User typed it?                    @SC88026\n         BZ    FSPRMP2       Yes                               @SC88026\nFSPSTA   BALR  9,3           See if still a conflict           @SC87015\n         STC   7,0(6)        Yes, modify DSN                   @SC86299\n         LA    7,1(7)        Bump counter                      @BS86001\n         BCT   5,FSPSTA                                        @BS86001\nFSPDERR  CLOSF PDSPTR        Close the data set                @SC87015\n         B     RTRN1         Failed                            @SC87015\nFSPMVDS  MVC   0(,1),0(4)                                      @SC88020\nFSPNOKM  MVC   44(8,4),FSPDSMB                                 @SC87015\nFSPNOKD  MVC   0(44,4),FSPDSN Copy name back                   @SC87015\nFSPNOK   OI    FL4,NMOK                                        @SC87015\n         CLOSF PDSPTR                                          @SC87015\n         B     RTRN0                                           @SC87015\nFSPRMP2  LA    7,CMD                                           @SC87015\n         LA    0,FFDSP                                         @SC87015\n         KCALL FSPEC,(4)     Format DSN for message            @SC87015\n         MVC   0(34,15),=C' exists.  Reply \"OK\" to overwrite:' @SC87015\n         LA    3,34(15)                                        @SC87015\n         SR    3,7                                             @SC87015\n         RTEXT (7),PROMPT=((7),(3))                            @SC87268\n         LTR   0,0           Length of reply                   @SC87015\n         BNP   RTRN1         If zero give up                   @TS86001\n         TR    0(2,7),UPCASE Upcase 1st 2 chars of reply       @SC87015\n         CLC   =C'OK',0(2)   Was reply \"ok\"?                   @TS86001\n         BNE   RTRN1         No, abort operation               @TS86001\n         B     FSPNOK                                          @SC87015\n*\n* Encode name at (R1) into (R7) buffer (in ASCII), possibly with\n*  substitution from JFSPEC, but disable subsequent subst.\n*  Return updated ptr in R15\nFSPENC   LA    1,JFSPEC      Complex string?                   @SC86224\n         BAL   14,PAKFOR                                       @SC86224\n         BNZ   FSPECPZ       Yes, name overridden              @SC86299\n         CLI   44(4),C' '    Member?                           @SC86299\n         BE    FSPENT        No, get name and type from DSN    @SC86299\n         LA    3,43(4)       Yes, ptr one before it            @SC86299\n         LA    1,9(3)        Utmost end                        @SC86299\n         TRT   1(8,3),TRTBL  Find end of name                  @SC86299\n         B     FSPECP                                          @SC86299\nFSPENT   LA    1,44(4)                                         @SC86299\n         TRT   0(44,4),TRTBL Find end of DSN                   @SC86299\n         LA    0,2                                             @SC86299\n         LR    3,1                                             @SC86299\nFSPESCN  BCTR  3,0           Scan back for dots                @SC86299\n         CR    3,4           Past beginning of DSN?            @SC86299\n         BL    FSPECP        Yes, use all                      @SC86299\n         CLI   0(3),C'.'     No, found dot?                    @SC86299\n         BNE   FSPESCN       No, keep looking                  @SC86299\n         BCT   0,FSPESCN     Also get 2nd dot                  @SC86299\nFSPECP   LA    3,1(3)        Stuff to copy                     @SC86299\n         MVC   0(17,7),0(3)  At most 2 tokens + dot            @SC86299\n         TR    0(17,7),ETOA                                    @SC86299\n         SR    1,3           Length of stuff copied            @SC86299\n         AR    7,1           Advance ptr                       @SC86299\nFSPECPZ  MVI   JFSPEC,0      Turn off string                   @SC86299\nFSPENR   LR    15,7          Save ptr                          @SC86295\n         B     FSPRET                                          @SC86295\n*\n* Copy name at (R1) into (R7) buffer in display form\n*  Return updated ptr in R15\nFSPDSP   LR    14,7          Copy output ptr                   @SC86299\n         LA    2,DEST        Check if prefix exists            @SC86299\n         LH    3,DESTL                                         @SC86299\n         LTR   3,3                                             @SC86299\n         BZ    FSPDCP        No prefix, skip quotes            @SC86299\n         LA    1,1(3)        One extra for dot                 @SC86299\n         ICM   3,8,LOCASE+C'.'                                 @SC86299\n         CLCL  0,2           Does it match prefix?             @SC86299\n         BE    FSPDCP        Yes, chop it off                  @SC86299\n         LR    0,4           No, use quotes for whole name     @SC86299\n         MVI   0(14),C''''                                     @SC86299\n         LA    14,1(14)                                        @SC86299\nFSPDCP   LA    1,44(4)                                         @SC86299\n         TRT   0(44,4),TRTBL Find end of name                  @SC86299\n         SR    1,0           Length                            @SC86299\n         LR    15,1                                            @SC86299\n         MVCL  14,0          Copy name to buffer               @SC86299\n         CLI   44(4),C' '    Member name, too?                 @SC86299\n         BE    FSPDCY        No, done                          @SC86299\n         MVI   0(14),C'('    Yes, insert in parens             @SC86299\n         MVC   1(8,14),44(4) Copy name to buffer               @SC86299\n         LA    1,9(14)                                         @SC86299\n         TRT   1(8,14),TRTBL Find end of member name           @SC86299\n         MVI   0(1),C')'     Close member name                 @SC86299\n         LA    14,1(1)                                         @SC86299\nFSPDCY   LR    15,14         Return output ptr                 @SC86299\n         CLI   0(7),C''''    Need close quote?                 @SC86299\n         BNE   *+12          No, that's all                    @SC86299\n         MVI   0(15),C''''   Yes, do it                        @SC86299\n         LA    15,1(15)                                        @SC86299\n         B     FSPRET                                          @SC86299\n*\n* Insert '#' if token would otherwise begin with a digit       @SC86299\nFSPANAT  LA    5,8           Tentative token length            @SC86299\n         CLI   0(6),C'0'     Digit?                            @SC86299\n         BLR   2             No, ok                            @SC86299\n         CLI   0(6),C'9'     Really?                           @SC86299\n         BHR   2             No, but illegal anyway            @SC86299\n         BAL   9,FSPTU       Bad form                          @SC86299\n         LA    14,LOCASE+C'#'                                  @SC86299\n         LA    1,1                                             @SC86299\n         MVCL  0,14          Copy '#'                          @SC86299\n         BCTR  5,0           Now allow only 7                  @SC86299\n         BR    2                                               @SC86299\n*\n* Valid DSN characters                                         @SC86299\nFSPTAB   DC    64C'#',C' '           space                     @SC86299\n         DC    10C'#',C'.'           dot                       @SC86299\n         DC    15C'#',C'$*'          dollar sign, asterisk     @SC86299\n         DC    03C'#',C'-'           hyphen                    @SC86299\n         DC    26C'#',C'#@'          pound sign, at sign       @SC86299\n         DC    04C'#',C'ABCDEFGHI'   a-i                       @SC86299\n         DC    07C'#',C'JKLMNOPQR'   j-r                       @SC86299\n         DC    08C'#',C'STUVWXYZ'    s-z                       @SC86299\n         DC    22C'#',C'{ABCDEFGHI'  {,A-I                     @SC86299\n         DC    07C'#',C'JKLMNOPQR'   J-R                       @SC86299\n         DC    08C'#',C'STUVWXYZ'    S-Z                       @SC86299\n         DC    06C'#',C'0123456789'  0-9                       @SC86299\n         DC    06C'#'                                          @SC86299\n* Valid member name characters                                 @SC86299\nFSPMTAB  DC    75AL1(*-FSPMTAB),C'#' dot                       @SC86299\n         DC    16AL1(*-FSPMTAB),C'#' asterisk                  @SC86299\n         DC    03AL1(*-FSPMTAB),C'#' hyphen                    @SC86299\n         DC    95AL1(*-FSPMTAB),C'#' {                         @SC86299\n         DC    63AL1(*-FSPMTAB)                                @SC86299\n         LOCALS ,                                              @SC86295\nPDSPTR   DS    A             Ticket for PDS testing            @SC87015\nFSPDSN   DS    0CL52         Temp for name field               @SC86299\nPDSNM    DS    CL44          Test DSN                          @SC87015\nFSPDSMB  DS    CL8           Test member                       @SC87015\nFSPFLG   DS    X             Filespec flags                    @SC86295\nFSPEC    EXIT                                                  @SC86295\n         TITLE 'KHELP routine - perform HELP command'\n* Handle HELP command, rest of string given by SCANPTR.\nKHELP    ENTER ,                                               @SC86355\n         LA    0,4           Length if no operands             @SC86355\n         NTOKN N=KHLI        See if subcommand given           @SC86355\n         L     1,=A(USNCMD)  Command table                     @SC87117\n         SCAN  (1),KHLF,NODISP                                 @SC86355\n         WTEXT 'Not a valid subcommand'   Not found            @SC86355\n         RET   ,                                               @SC86355\nKHLF     CLM   7,8,F0        Just '?'                          @SC86355\n         BE    RTRN          Yes, done                         @SC86355\n         MVC   CMD+5(30),5(1) Copy operand                     @SC86355\n         IC    7,4(1)        Get length from table             @SC86355\n         LA    0,5+1(7)      Total for SCAN                    @SC86355\nKHLI     LA    1,CMD         Command buffer                    @SC87007\n         MVC   0(5,1),=CL5'HELP'                               @SC86355\n         STM   0,1,SCANPTR   Set up for system                 @SC86355\n         OI    FL4,UCMD                                        @SC86355\n         KCALL SUPFNC,3      Do it                             @SC86355\n         RET   ,                                               @SC86355\n         LOCALS ,\nKHELP    EXIT  ,                                               @SC87007\n         TITLE 'SUPFNC Routine - various supervisor functions' @SC86158\nSUPFNC   ENTER                                                 @SC86295\n*  On entry, R1 = operation code, R0 = possible ptr            @SC86158\n* Exit: R15 set (0 => ok, <0 => illegal cmd, >0 => depends)\n*       ERRNUM set appropriately (R1=1,3,4) or unchanged (2,5-9)\n* 1 -> Start typeout interception.  N.B.  &MAXLR >> 2048 for this\n* 2 -> Clean up afterwards and stop interception\n* 3 -> Execute host command with or without interception\n*      If UCMD set, SCANPTR gives text, else R0->text,R6=len\n* 4 -> (not used)\n* 5 -> Stop interception if going\n* 6 -> Retrieve original cmd parm string into CBUF (R15=1 if null)\n* 7 -> Test for stacked lines, return number in R15\n* 8 -> Log off (must return to TMP)\n* 9 -> Wait specified time\n* 10-> Return clock time in R15 (centisec)\n* 11-> Setup up new prompt string at (R0)\n         BCT   1,ICPFIN                                        @SC86158\n* Start interception, initialize ptrs                          @SC86158\n         MVI   ERRNUM,ERRNOE OK                                @SC86158\n         LA    0,2048        Suitable offset                   @SC86158\n         A     0,WBUF        Output buffer                     @SC86158\n         L     1,TSENT       Limit                             @SC86158\n         LR    15,0                                            @SC86158\n         STM   15,0,TXTPTR   Save                              @SC86158\n         STM   0,1,SVCOPTR                                     @SC86158\n         SR    1,0           Get length                        @SC86158\n         L     15,=X'15000000'                                 @SC86158\n         MVCL  0,14          Fill with NL (X'15')              @SC86158\n* ------------ determine if SVC screen is possible             @SC88026\n* -            if so, then do it                               @SC88026\n         B     ICPSTK                                          @SC88026\n         MVI   ICPFL,2       Now intercepting subtask SVC's    @SC88026\n         B     RTRN0                                           @SC88026\n*          Can't screen SVC's, create a STACK element          @SC88026\nICPSTK   OPENF T,STKDSN,E=ICPST2 See if any previous output    @SC88026\n         ERASF STKDSN        Yes, clear it                     @SC88026\nICPST2   LA    1,STKDSN      Get ptrs to DYNALC arguments      @SC88026\n         LA    2,STKDD                                         @SC88026\n         LA    3,FILUNT                                        @SC88026\n         LA    4,FILVOL                                        @SC88026\n         LA    5,=X'42'                                        @SC88026\n         LA    6,FILTRKAL                                      @SC88026\n         LA    7,STKDRC                                        @SC88026\n         STM   1,7,STKDYN    Set up calling sequence           @SC88026\n         KCALL DYNALC,STKDYN,EXT Allocate output file          @SC88026\n         STACK MF=(E,IOPLAREA),PARM=STKA  Create STACK elt.    @SC88026\n         MVI   ICPFL,1       Now intercepting                  @SC87020\n         B     RTRN0                                           @SC86295\n* Clean up after interception                                  @SC86295\nICPFIN   BCT   1,ICPHST                                        @SC86158\n         L     5,SVCOPTR     End of text                       @SC86158\n         ST    5,TXTPTR+4    Save                              @SC86158\n         CLI   ICPFL,2       Were we intercepting SVC's?       @SC88026\n         BNE   ICPFINST      No, see if STACK                  @SC88026\n*---------- stop snagging SVC's                                @SC88026\n         B     ICPRST1       Ok                                @SC88026\nICPFINST CLI   ICPFL,1       Were we intercepting via STACK?   @SC88026\n         BNE   ICPRST1       No, fine                          @SC88026\n         STACK MF=(E,IOPLAREA),PARM=STKZ Yes, remove STACK elt.@SC88026\n*          Copy output to buffer                               @SC88026\n         OPENF I,STKDSN,FILFDB,STKTKT,E=ICPRST1                @SC88026\n         L     5,TXTPTR+4    Buffer ptr                        @SC88026\nICPSTLP  READF STKTKT,BUFFER=(5),BSIZE=255,E=ICPSTZ            @SC88026\n         AR    5,0           Space over data                   @SC88026\n         LA    5,1(5)        Leave one X'15'                   @SC88026\n         B     ICPSTLP       And read more                     @SC88026\nICPSTZ   CLOSF STKTKT        Done                              @SC88026\n         ST    5,TXTPTR+4    New end of output                 @SC88026\n         B     ICPRST1       Now restore interrupts            @SC86295\n* Restore SVC interrupt vector                                 @SC86158\nICPRST   BCT   1,SFCLIN                                        @SC86295\nICPRST1  MVI   ICPFL,0                                         @SC87020\n         B     RTRN0\n* Execute TSO command at (R0) with length (R6), unless UCMD set,\n*  in which case string given by SCANPTR\nICPHST   BCT   1,ICPCP                                         @SC86158\n         TM    FL4,UCMD      User command?                     @SC86295\n         BO    ICPCM0        Yes, scan already set up          @SC86355\nICPCMI   ST    0,ADR         Set scan string ptrs              @SC86355\n         ST    6,LEN                                           @SC86355\nICPCM0   LM    0,1,SCANPTR   Get length and adr                @SC87034\n         LTR   6,0           Copy length                       @SC87034\n         BNP   ICPCMIL       No good                           @SC87034\n         BCTR  6,0                                             @SC87034\n         EX    6,TRUPCAS                                       @SC87034\n         NTOKN N=ICPCMIL     No good                           @SC86355\n         MVC   SFCBUF+4(130),0(6)  Copy text to command buffer @SC86355\n         LR    5,6           Start of command name             @SC86355\n         LA    7,1(7)        Length of name                    @SC86355\n         ICM   7,8,BLANK     Set up for padding                @SC86355\n         L     2,ORGR1       Get address of kermit CPPL        @TS86001\n         MVC   ATCHCPPL(16),0(2)  initialize attach CPPL       @TS86001\n         LA    2,ATCHCPPL    Get address of attach CPPL        @TS86001\n         USING CPPL,2        Make attach CPPL addressable      @TS86001\n         LA    1,SFCBUF                                        @SC86355\n         ST    1,CPPLCBUF    Put the command buffer into CPPL  @TS86001\n         L     3,CPPLECT     Get the ECT address               @TS86001\n         USING ECT,3         Make it addressable               @TS86001\n         MVC   SAVPCMD,ECTPCMD Save it for restoring           @SC88026\n         LA    14,ECTSCMD                                      @SC86355\n         LA    15,L'ECTSCMD                                    @SC86355\n         MVCL  14,6          Copy to subcommand field          @SC86355\n         CLC   =C'HELP ',ECTSCMD                               @SC88026\n         BE    *+10                                            @SC88026\n          MVC  ECTPCMD,ECTSCMD This is really a command        @SC88026\n         LR    4,6           Default parameter ptr             @SC86355\n         LR    8,6           Default end of string             @SC86355\n         NTOKN N=SFCNPRM     Find parameters, if any           @SC86355\n         L     8,ADR                                           @SC86355\n         A     8,LEN         True end of string                @SC86355\n         LR    4,6           Start of parameters               @SC86355\nSFCNPRM  SR    4,5           Get offset to parameters          @SC86355\n         STH   4,SFCBUF+2    Save in command buffer            @SC86355\n         SR    8,5           Get total length                  @SC86355\n         LA    9,SFCBUF+4(8) Point past the buffer             @SC88022\n         MVI   0(9),C' '     Tack on a blank                   @SC88022\n         LA    8,4(8)        Plus prefix info                  @SC88022\n         STH   8,SFCBUF      Save in command buffer            @SC86355\n         ATTACH ECB=ATCHECB,EPLOC=ECTSCMD,SHSPV=78,SZERO=NO,           +\n               MF=(E,(2)),SF=(E,ATCBLK)                        @SC86355\n         LTR   15,15         Was attach successful?            @TS86001\n         BZ    *+14          Ok                                @SC88026\n          MVC  ECTPCMD,SAVPCMD Restore ECT                     @SC88026\n          B    ICPCMIL       No, must not exist                @SC88026\n         ST    1,ATCHTCB     Save TCB address                  @TS86001\n         WAIT  ECB=ATCHECB   Wait for subtask to finish        @TS86001\n         DETACH ATCHTCB      Detach the subtask                @TS86001\n         MVC   ECTPCMD,SAVPCMD Restore ECT                     @SC88026\n         SR    4,4                                             @SC86355\n         ICM   4,7,ATCHECB+1 Get return code                   @SC86355\n         DROP  3                                               @SC86355\n* Issue return code msg if needed                              @SC86295\n         BZ    SFCZRC        RC=0                              @SC86158\n         TM    FL4,UCMD      User cmd?                         @SC86316\n         BZ    SFCZRC        No, don't issue message           @SC86316\n         MVC   CMD(2),=C'R(' Set up message                    @SC86209\n         LA    15,CMD+2                                        @SC86209\n         BAL   2,EDDEC       Edit RC into msg                  @SC86295\n         MVI   0(15),C')'    Format is R(rc)                   @SC86209\n         LA    0,1(15)                                         @SC86268\n         LA    1,CMD         Start of edited string            @SC86209\n         SR    0,1           Length                            @SC86268\n         WTEXT (1),(0)                                         @SC86268\nSFCZRC   LR    15,4                                            @SC86295\n         MVI   ERRNUM,ERRNOE No errors                         @SC86295\n         B     RTRN                                            @SC86295\n* Unused, system-specific command type\nICPCP    BCT   1,ICPRST                                        @SC86158\nICPCMIL  MVI   ERRNUM,ERRSYS Illegal system command            @SC86295\n         B     RTRNM1                                          @SC86295\n*\nSFCLIN   BCT   1,SFCSTK                                        @SC86295\n* Retrieve original command line arguments, if any             @SC86295\n*   Return code =0 if yes, =1 if no                            @SC86295\n*   Leave string in CBUF buffer (up to 256), length in CLEN    @SC86295\n         L     2,ORGR1       Original R1                       @SC86355\n         L     1,CPPLCBUF    CBUF ptr                          @SC86355\n         LH    15,0(1)       PARM length                       @SC86299\n         S     15,F4                                           @SC86299\n         LH    14,2(1)       Parm offset                       @SC86355\n         SR    15,14                                           @SC86355\n         BNP   RTRN1         Nothing there                     @SC86299\n         LA    14,4(14,1)    Start of string                   @SC86299\n         L     0,CBUF                                          @SC86299\n         LA    1,256         Max length allowed                @SC86299\n         CR    1,15                                            @SC86299\n         BL    *+6                                             @SC86299\n         LR    1,15          Shorter than max                  @SC86299\n         ST    1,CLEN                                          @SC86299\n         MVCL  0,14                                            @SC86299\n         B     RTRN0                                           @SC86295\n*\n* Test for stacked commands                                    @SC86295\n*   return code = number of stacked lines                      @SC86295\nSFCSTK   BCT   1,SFCKIL                                        @SC86295\n         LA    2,APGPB                                         @NW86330\n         USING GTPB,2                                          @NW86330\n         ICM   1,15,GTPBIBUF Ptr to input buffer, if any       @SC87015\n         BNZ   RTRN1         Yes, line is stacked              @SC87015\n         L     15,GETLINAD   Entry point for GETLINE routine   @NW86330\n         GETLINE PARM=(2),TERMGET=(EDIT,NOWAIT),ENTRY=(15),            +\n               MF=(E,IOPLAREA)                                 @SC87015\n         C     15,F4         Check return code                 @SC87015\n         BH    RTRN0         Nothing stacked                   @SC87015\n         B     RTRN1         Got one now                       @SC87015\n*\n* Log out                                                      @SC86295\nSFCKIL   BCT   1,SFCWT                                         @SC86295\n         LR    3,13                                            @SC88026\n         L     3,4(3)        Look back through save areas      @SC88026\n         CLC   AUSNTRF,16(3) Find main loop                    @SC88026\n         BNE   *-10                                            @SC88026\n         L     3,8(3)        Ptr to main save area             @SC88026\n         OI    KFLG-USNTRFSV(3),CMDC Set flag to quit          @SC88026\n         PTEXT 'LOGOFF',AREG=0,LREG=6                          @SC88026\n         NI    FL4,255-UCMD  Internal                          @SC86355\n         B     ICPCMI        Do it                             @SC86355\n*\n* Wait specified time in R0 (sec)\nSFCWT    BCT   1,SFCCLK                                        @SC86295\n         MH    0,=H'100'     Convert to centisec               @SC86299\n         ST    0,TMPDW                                         @SC86299\n        STIMER WAIT,BINTVL=TMPDW                               @SC86299\n         B     RTRN0                                           @SC86295\n*\n* Return time in centisec in R15\nSFCCLK   BCT   1,SFCPRP                                        @SC87351\n         STCK  TMPDW         Store TOD clock                   @SC86295\n         LM    14,15,TMPDW                                     @SC86295\n         SLDL  14,8          Take mod 204 days                 @SC86295\n         SRDL  14,20         Get in microsec                   @SC86295\n         D     14,=F'10000'  Get in centisec                   @SC86295\n         B     RTRN                                            @SC86295\n*\nSFCPRP   B     RTRN0         No action for prompting           @SC87351\n         TITLE 'SVC interceptor,  executed in system protect key'\n         USING ICPTYP,15                                       @SC86283\nICPTYP   STM   12,14,SVCSV1  Save regs                         @SC86283\n         LR    13,15         Addressability                    @SC87020\n         DROP  15\n         USING ICPTYP,13                                       @SC87020\nICPTGO   LM    14,15,SVCOPTR Output ptrs                       @SC86158\n         SR    15,14         Length left                       @SC86158\n         LA    12,255        Limit                             @SC86158\n         CLR   12,0          Buffer length                     @SC87020\n         BNH   *+8           Too big                           @SC86158\n         LR    12,0          Ok, use it                        @SC87020\n         LTR   12,12                                           @SC86158\n         BNP   ICPTRET                                         @SC86283\n         CR    12,15         Enough room?                      @SC86283\n         BH    ICPTRET       No                                @SC86283\n         BCTR  12,0          Set up for mvc                    @SC86158\n         EX    12,SVCCOPY    Move to WBUF                      @SC86158\n         LA    14,2(12,14)   New end                           @SC86158\n         ST    14,SVCOPTR                                      @SC86158\nICPTRET  SR    15,15         Success                           @SC86283\n         LM    12,14,SVCSV1  Restore regs                      @SC86283\n         BR    14            Return                            @SC86283\nSVCCOPY  MVC   0(,14),0(1)                                     @SC87020\n*\n* Storage for SVC interception                                 @SC86158\nSVCSV1   DS    2F            Saved 12,13                       @SC86158\nSVCSV2   DS    2F            Saved 14,15                       @SC86158\nSVCOPTR  DS    2F            Buffer output and end ptrs        @SC86158\nSTKA     STACK MF=L,DATASET=(*,OUTDD=STKDD)                    @SC88026\nSTKZ     STACK MF=L,DELETE=TOP                                 @SC88026\nSTKDD    DC    CL8'K999999Y' DD name for STACK interception    @SC88026\n         LOCALS ,                                              @SC86295\nSAVPCMD  DS    CL8           Saved command name                @SC88026\nATCHCPPL DS    4F            Subtask CPPL area                 @TS86001\nATCBLK   ATTACH SF=L         ATTACH parameter list             @SC88022\nATCHECB  DS    F             Subtask ECB                       @TS86001\nATCHTCB  DS    F             Subtask TCB ptr                   @TS86001\nSFCBUF   DS    F,CL130       Command buffer                    @SC86355\nSTKDYN   DS    7F            DYNALC calling sequence           @SC88026\nSTKDRC   DS    F             DYNALC return code                @SC88026\nSTKTKT   DS    A             Ptr to STACK file FAB             @SC88026\nSUPFNC   EXIT                                                  @SC86158\n         TITLE 'TERMIO Routine - Handle terminal I/O'\n* R1 points to a pair of (adr,len) for read or write.  If I/O is\n* successfull, R15 returns transferred byte count (else returns -1).\n*               Command code is in R0:\n* 1 => Open line for I/O            4 => Write packet\n* 2 => Close line                   5 => Read packet\n* 3 => Reset line status after    ( 6 => Write message ) not used\n*      environment changes\n*\nTERMIO   ENTER\n         SR    15,15         OK                                @SC86295\n         BCT   0,TRMCLS                                        @SC86295\n* Open terminal line for protocol\n         STAX  BR14          Ingore attention interrupts\n         MVI   RIOC,X'80'    Nothing saved                     @SC86295\n         MVI   TRMFLG,X'FF'  Initialize w/r flag               @SC87275\n         B     RTRN0                                           @SC86295\n* Close terminal line after protocol transfer\nTRMCLS   BCT   0,TRMRSET                                       @SC86295\n         STAX\n         B     RTRN0                                           @SC86295\n* (Re)set terminal characteristics to suit environment\nTRMRSET  BCT   0,TRMRW                                         @SC86295\n         B     RTRN0                                           @SC86295\n*\n*  Perform I/O request\nTRMRW    BCT   0,TRMRD                                         @SC87015\n         CLI   WRRD,0        Write/read?                       @SC87275\n         BNE   *+8           Yes                               @SC87275\n         MVI   TRMFLG,0      Indicate no action on follow-up   @SC87275\n         L     0,4(1)        Get length                        @SC87015\n         L     1,0(1)        and address                       @SC87015\n         ICM   1,8,=X'02'    CONTROL                           @SC87317\n         CLI   TRMTP,C'F'                                      @SC87317\n         BNE   *+8                                             @SC87317\n         ICM   1,8,=X'03'    FULLSCR                           @SC87317\n         TPUT  (1),(0),R     Flags already set                 @SC87317\n         B     RTRN0                                           @SC87317\n*\n* Read from terminal\nTRMRD    MVC   KTGETT(8),0(1) Copy adr,len                     @SC87015\n         TS    TRMFLG                                          @SC87275\n         BZ    RTRN0         Just a follow-up. 0-length read   @SC87275\n         MVI   ECBTGET,0     Clear ECB                         @SC87015\n         SR    5,5           Set flag 'no timing'              @SC87015\n         TM    FL5,TIMF                                        @NW86330\n         BZ    TRMPST                                          @NW86330\n         ICM   5,1,TIMOUT    Any timing requested?             @SC87015\n         BZ    TRMPST        No, just wait                     @SC87015\n         MH    5,=H'100'                                       @SC87015\n         ST    5,TMPDW                                         @SC87015\n         ST    11,TRMSTRP    Set up addressibility             @SC87015\n         STIMER REAL,TIMEEXIT,BINTVL=TMPDW                     @NW86330\nTRMPST   POST  ECBREAD       Tell async sub to go for it       @NW86330\n         WAIT  ECB=ECBTGET                                     @NW86330\n         CLI   ECBTGET+3,0   Check return code                 @NW86330\n         BNE   TRMTIM                                          @NW86330\n         LTR   5,5           Timing enabled?                   @SC87015\n         BZ    TRMRET        No, fine                          @SC87015\n         TTIMER CANCEL       Yes, kill timer                   @SC87015\nTRMRET   L     15,KTGETT+4   Get length read                   @SC87015\n         B     RTRN                                            @SC87015\nTRMTIM   DETACH TASKADD      Blow off task                     @NW86330\n         MVI   ECBREAD,0     Zero out read ECB                 @NW86330\n         ATTACH EP=KERMTGET,MF=(E,COMPTR)                      @NW86330\n         ST    1,TASKADD     Save adr for detach               @NW86330\n         L     1,APKT        Ptr to data buffer                @SC87015\n         MVI   0(1),AT       Timed out                         @SC87015\n         B     RTRN1         Set count to one                  @SC87015\n*\n* Timer exit routine                                           @SC87015\n         USING *,15          Addressiblity                     @NW86330\nTIMEEXIT L     11,TRMSTRP                                      @SC87015\n         POST  ECBTGET,1     Post timer ECB                    @NW86330\n         BR    14            Return to OS                      @NW86330\nTRMSTRP  DS    A             Ptr to storage                    @SC87015\n         DROP  15                                              @SC87015\n         LOCALS ,                                              @SC86295\n         EXIT\n         TITLE 'KERMTGET Routine - Read from terminal (timed)'\n*  ECB's control timing flow                                   @NW86330\nKERMTGET CSECT                                                 @SC87015\n         USING *,15                                            @SC87015\n         SAVE  (14,12),,*                                      @SC87015\n         CNOP  0,4                                             @SC87015\n         BAL   12,*+76                                         @SC87015\n         DROP  15                                              @SC87015\n         USING *,13                                            @SC87015\n         DS    18F                                             @SC87015\n         ST    12,8(13)                                        @SC87015\n         ST    13,4(12)                                        @SC87015\n         LR    13,12                                           @SC87015\n         LM    10,11,0(1)    Set up addressibility             @SC87015\n         LA    5,BR14        Exit routine adr (do nothing)     @SC86299\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\nKTGLP0   WAIT  ECB=ECBREAD                                     @NW86330\n         MVI   ECBREAD,0     Zero ECB                          @NW86330\n         L     1,KTGETT      Adr of buffer to put in           @NW86330\n         L     0,KTGETT+4    Max TGET (although tcam's 4k)     @NW86330\n         TGET  (1),(0),ASIS                                    @NW86330\n         LTR   15,15                                           @NW86330\n         BZ    KTGLEN        Ok                                @NW86330\n         C     15,F12                                          @NW86330\n         BE    KTGLEN        Ok                                @NW86330\n         SR    1,1           Error                             @NW86330\n         BCTR  1,0                                             @NW86330\nKTGLEN   ST    1,KTGETT+4    Save length                       @SC87015\n         POST  ECBTGET       Tell em we read it                @NW86330\n         B     KTGLP0        Keep repeating                    @NW86330\n         LTORG                                                 @SC87015\n         DROP  13\n         TITLE 'GETLIN Routine - Get a line from terminal'     @SC87015\n* Entry: R1->buffer of length 256                              @SC87015\n* Exit: Buffer filled, R0=length, R15=0 if ok. Else R15=1.     @SC87015\nGETLIN   ENTER                                                 @SC87015\n         LR    7,1           Save buffer ptr                   @SC87015\n         LA    2,APGPB                                         @NW86330\n         USING GTPB,2                                          @NW86330\n         ICM   1,15,GTPBIBUF Already got something?            @SC87015\n         BNZ   GTL1          Yes, return it                    @SC87015\n         L     15,GETLINAD   Entry point for GETLINE routine   @NW86330\n         GETLINE PARM=(2),TERMGET=(EDIT,WAIT),ENTRY=(15),              +\n               MF=(E,IOPLAREA)                                 @SC87015\n         SR    0,0                                             @SC87015\n         C     15,F4         Problem?                          @SC87015\n         BH    GTLA          Yes, give up with len=0           @SC87015\n         L     1,GTPBIBUF                                      @NW86330\nGTL1     LH    5,0(1)        Length of stuff                   @NW86330\n         LR    0,5           Save it                           @SC87015\n         S     5,F5          Fix for EX                        @SC87015\n         BM    GTLA          Too short                         @SC87015\n         C     5,F256                                          @SC87015\n         BL    *+8                                             @SC87015\n         LA    5,255         Too long                          @SC87015\n         EX    5,GTLCMMV     Copy to buffer                    @SC87015\n         FREEMAIN RC,LV=(0),A=(1),SP=1 Free input buffer       @NW86330\nGTLA     MVC   GTPBIBUF,F0   Clear input indicator             @SC87015\n         L     1,4(13)                                         @SC87015\n         LA    0,1(5)        Buffer length                     @SC87015\n         ST    0,20(1)       Return as R0                      @SC87015\n         B     RTRN0                                           @SC87015\n         DROP  2                                               @NW86330\nGTLCMMV  MVC   0(,7),4(1)                                      @SC87015\n         LOCALS ,                                              @SC87015\nGETLIN   EXIT  ,                                               @SC87015\n         TITLE 'SCRNIO Routine - Handle screen I/O via Series/1'\n* R1 points to a pair of (adr,len) for read or write.  If I/O is\n* successfull, R15 returns transferred byte count (else returns -1).\n*               Command code is in R0:\n* 1 => Open screen for I/O            4 => Write packet\n* 2 => Close screen                   5 => Read packet\n* 3 => Reset screen status after      6 => Write message\n*      environment changes\n*\nSCRNIO   ENTER\n         BCT   0,SCRCLS                                        @SC86295\n* Set up for transparent I/O\n         B     RTRN0                                           @SC86295\nSCRCLS   BCT   0,SCRRSET                                       @SC86295\n* Clean up after I/O\n         B     RTRN0                                           @SC86295\n* (Re)set device characteristics to suit environment\nSCRRSET  BCT   0,SCRRW                                         @SC86295\n         B     RTRN0\n*\n*  Perform I/O request\nSCRRW    LA    8,SCRPLST     Get PLST ptr                      @SC88019\n         MVC   5(3,8),1(1)   Copy adr                          @SC88019\n         MVC   2(2,8),6(1)   Copy len                          @SC88019\n         BCT   0,SCRRD       Different handling for each       @SC88019\n         LR    1,8           WRITE: use new form of call       @SC88019\n         MVI   4(8),X'03'    Flags: FULLSCR/NOEDIT             @SC88019\n         MVI   12(8),X'81'   More flags: NOEDIT                @SC88019\n         ICM   0,8,=X'80'    Set hi bit of R0                  @SC88019\n         SVC   93            Issue TPUT                        @SC88019\n         B     RTRN0         Assume OK                         @SC88019\nSCRRD    BCT   0,SCRWM       Go if \"Write message\"             @SC88019\n         MVI   4(8),X'81'    Flags: TGET                       @SC88019\n         BAL   9,SCRNEX      Execute internal subr             @SC86295\n         TM    FL1,DEBUG     Logging in effect?                @SC87286\n         BZ    RTRN          No, that's all                    @SC87286\n         L     2,LOGBUF      Ptr to buffer                     @SC87286\n         MVI   0(2),C'A'     Set label                         @SC87286\n         L     3,0(8)        Ptr to AID                        @SC87286\n         MVC   2(3,2),0(3)   Copy into buffer                  @SC87286\n         LR    9,15          Save data length                  @SC87286\n         WRITF LOGPTR,BSIZE=5 Log it                           @SC87286\n         LR    15,9          Return data length                @SC87286\n         B     RTRN          Return                            @SC86299\n*                                                              @SC88019\nSCRWM    MVI   4(8),X'02'    Flags: CONTROL code               @SC88019\n         BAL   9,SCRNEX      Execute internal subr             @SC88019\n         B     RTRN0         Return OK                         @SC88019\n*\nSCRNEX   LM    0,1,0(8)                                        @SC88019\n         SVC   93                                              @SC86299\n         LR    15,1          Number of chars recv'd            @SC86299\n         BR    9                                               @SC86299\n         LOCALS ,                                              @SC86299\nSCRPLST  DS    4F            Plist for TPUT/TGET               @SC88019\nSCRNIO   EXIT  ,                                               @SC86299\n         TITLE 'SETMSG Routine - controls CP breakin'\n* Entry: R1 selects operation\n* Exit: R15=0 if ok\n* 1-> Analyze user environment, determine if suitable.\n*     Save quantities needed and condition line for entering commands.\n*     Perform any system-dependent initialization.\n* 2-> Condition line for protocol transfers.\n* 3-> Decondition line at end of transfer.\n* 4-> System-dependent clean-up at exit.\n* 5-> Reperform system-dependent initialization after SET LINE.\nSETMSG   ENTER ,                                               @SC87015\n         BCT   1,STM2                Go if R1 not 1, so no init\n         L     1,ORGR1       Get original R1                   @SC86299\n         TM    0(1),X'80'    Is this a command processor?      @SC86299\n         BO    NOTCP         No, then refuse user              @SC86299\n         USING CPPL,1                                          @SC86299\n         L     2,CPPLUPT     Get ptr to UPT                    @SC86299\n         USING UPT,2                                           @SC86299\n         XR    3,3                                             @SC86299\n         IC    3,UPTPREFL    Get length                        @SC86299\n         STH   3,DESTL       Save for later                    @SC86299\n         MVC   DEST(7),UPTPREFX Move prefix                    @SC86299\n         MVI   DESTP,C' '    Not a PDS                         @SC86299\n         LA    4,IOPLAREA    Get address of IOPL               @TS86001\n         USING IOPL,4        Make it addressable               @TS86001\n         MVC   IOPLUPT,CPPLUPT Copy UPT ptr                    @TS86001\n         MVC   IOPLECT,CPPLECT Copy ECT ptr                    @TS86001\n         LA    0,CPECB       Get address of ECB                @TS86001\n         ST    0,IOPLECB     Put into IOPL                     @TS86001\n         LA    4,DAPLAREA    Address of DAPL                   @SC87351\n         USING DAPL,4                                          @SC87351\n         MVC   DAPLUPT,CPPLUPT  Fill it in                     @SC87351\n         MVC   DAPLECT,CPPLECT                                 @SC87351\n         MVC   DAPLPSCB,CPPLPSCB                               @SC87351\n         ST    0,DAPLECB                                       @SC87351\n         LA    0,DA00        Ptr to parameter block            @SC87351\n         ST    0,DAPLDAPB                                      @SC87351\n         GTSIZE ,            Get terminal info                 @SC86299\n         LTR   0,0           Is this a graphics device?        @SC86299\n         BZ    STMSTY        No                                @SC86299\n         MVI   TRMTP,C'S'    Remember going via S/1            @SC87166\n         B     STMOK                                           @SC86299\nSTMSTY  STSIZE SIZE=130      Set up linesize                   @TS86001\nSTMOK    MVC   STMUCH,UPTCDEL                                  @SC86299\n         STM   10,11,COMPTR  Save ptrs for KERMTGET            @SC87015\n         MVI   CIROPT,2                                        @SC87015\n         L     1,CIRWA       Initialize length ptrs            @SC87015\n         MVC   0(2,1),CIRWAL                                   @SC87015\n         MVC   2(2,1),F0                                       @SC87015\n         LA    0,STKDSN      Set up DSN for STACK              @SC88026\n         LH    1,DESTL                                         @SC88026\n         LA    2,DEST        Get userid prefix                 @SC88026\n         LA    3,LFID                                          @SC88026\n         MVCL  0,2           Copy prefix                       @SC88026\n         LR    1,3                                             @SC88026\n         LA    2,=CL8'.KER.BUF'                                @SC88026\n         LA    3,8           Copy rest of name                 @SC88026\n         ICM   3,8,BLANK     Fill with blanks                  @SC88026\n         MVCL  0,2                                             @SC88026\n         LA    5,BR14        Exit routine adr (do nothing)     @SC86299\n         STAX  (5),DEFER=NO,REPLACE=YES,MF=(E,STAXPLR)         @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         STAX  (5),DEFER=NO,REPLACE=NO,MF=(E,STAXPL)           @NW86330\n         LOAD  EP=IKJGETL    Get line routine adr              @NW86330\n         ST    0,GETLINAD    Store it off                      @NW86330\n         LA    0,PTLLEN                                        @SC88026\n         ST    0,PTPB+4      Set up PUTLINE parameter block    @SC88026\n         LOAD  EP=IKJPUTL    PUTLINE routine adr               @SC88026\n         ST    0,PUTLINAD                                      @SC88026\n         L     5,=A(KERMTGET) Adr of TGET module               @NW86330\n         PTEXT 'IDENTIFY failed.' Just in case                 @SC87015\n         IDENTIFY EP=KERMTGET,ENTRY=(5)                        @NW86330\n         LTR   15,15                                           @NW86330\n         BNZ   SUBERR                                          @SC87015\n         PTEXT 'ATTACH failed.' Just in case                   @SC87015\n         ATTACH EP=KERMTGET,MF=(E,COMPTR)                      @SC87015\n         LTR   15,15                                           @NW86330\n         BNZ   SUBERR                                          @SC87015\n         ST    1,TASKADD     Save adr for detach               @NW86330\n         B     RTRN0                                           @SC86295\n*\nSTM2     BCT   1,STM3                Go if R1 was not 2, so not off\n         CLI   TRMTP,C'T'    TTY terminals can't change hndshk @SC87343\n         BNE   STM2X                                           @SC87343\n         CLI   S1HND,XON     User wants special one anyway?    @SC87343\n         BNE   STM2X                                           @SC87343\n         MVI   S1HND,0       System provides the handshake     @SC87343\nSTM2X    DS    0H                                              @SC87343\n         TM    FL1,TSTF                                        @SC86295\n         BO    RTRN0         Just testing, don't change it     @SC86295\n         CLI   TRMLIN,C' '   Alternate comm line?              @SC87300\n         BNE   RTRN1         Not allowed!                      @SC87300\n         LA    5,STMUOFF                                       @SC86299\n         B     STMD\n*\nSTM3     BCT   1,STM4                                          @SC86316\n         LA    5,STMUCH      Restore user's settings           @SC86299\nSTMD     L     1,ORGR1       Get original R1                   @SC86299\n         L     2,CPPLUPT     Get ptr to UPT                    @SC86299\n         MVC   UPTCDEL(2),0(5)                                 @SC86299\n         L     4,CPPLPSCB    Get ptr to PSCB                   @SC86299\n         USING PSCB,4                                          @SC86299\n*        MVC   PSCBCHAR(2),0(5)                                @SC87296\n         DROP  1,2,4                                           @SC86299\n         B     RTRN0\n*\nSTM4     BCT   1,STM5        Special clean-up                  @SC87351\n         DETACH TASKADD      Kill sub-task                     @SC87296\n         B     RTRN0         Special clean-up done             @SC87296\n*\nSTM5     B     RTRN1         Other lines not allowed           @SC87351\n*\nNOTCP    PTEXT 'Kermit-TSO must be a command processor'        @SC86299\n         B     SUBERR                                          @SC86299\n*\nSTMUOFF  DC    2X'0'         No char & line delete             @SC86299\n         LOCALS ,                                              @SC86295\nSETMSG   EXIT\n         TITLE 'DISKIO Routine - performs disk I/O functions'\n* Function selected on entry by R0:\n* 1=> open (in): R1->pattern FDB, R2->name.  Returns R0->FAB, R1->FDB\n* 2=> open (out): (same, but no complete FDB if new file)\n* 3=> test name: R2->name.  Returns R1->FDB if found (else R15=1)\n* 4=> close file: R1->adr(FAB).\n* 5=> set up search: R1->pattern name.\n* 6=> return next file in list:  Returns R1->FDB + sets up FILNAM\n* 7=> close search (if any).\n* 8=> test CWD string: R1->string.  Returns R15=0 if ok, else =1.\n* 9=> read: R1->FAB.  Returns R15=12 if EOF, 0 if ok; R0=# data\n* 10=> write: R1->FAB.  Returns R15=13 if disk full, 0 if ok.\n* 11=> test space: R1->adr(FAB), R2=est. Kbytes.  Return R15=0 if ok.\n* 12=> analyze R/W error, set ERRNUM, make EMSG: R1->FAB, TMPDW=code\n*      always returns R15=1\n* 13=> directory info on file: R1->name.  Returns R15=0 if ok.\n* 14=> delete file: R1->name.  Returns R15=0 if ok.\n* 15=> rename file: R1->name, R2->new name.  Returns R15=0 if ok.\n* 16=> copy file: R1->name, R2->new name.  Returns R15=0 if ok.\nDISKIO   ENTER\n         USING FABD,3                                          @SC86295\n         SR    4,4           Signal no block assigned          @SC86295\n         LA    5,DYNDSP                                        @SC86345\n         LA    6,FDBTRKAL-FDBD(1) Use pattern TRKAL            @SC88026\n         LA    7,DYNRC                                         @SC86345\n         STM   5,7,DYNPL+16  Set up calling sequence           @SC86345\n         BCT   0,DSKOPNO                                       @SC86295\n*\n* Open for input file whose name is at (R2), FDB at (R1)\n         BAL   9,DSKALC      Get FAB                           @SC86295\n         BAL   2,DSKLKP      Get DSCB                          @SC86299\n         BNZ   DSKER1        Not found                         @SC86295\n         BAL   14,DSKVALS                                      @SC86295\n         BAL   9,DSKFABS     Set up FAB from FDB               @SC86299\n         LH    0,FABLRECL                                      @SC86299\n         CH    0,FDBBSIZ+2   Too big?                          @SC86299\n         BNL   *+8           Yes, just read a buffer full      @SC86299\n         ST    0,FDBBSIZ     Set buffer size, in case RECFM=F  @SC86299\n         MVI   DYNDSP,X'88'  SHR,KEEP                          @SC86299\n         CNOP  0,4                                             @SC86299\n         BAL   2,DSKOPT      Open and test                     @SC86299\n         OPEN  (0,INPUT),MF=L                                  @SC86299\n*\n* Open for output file whose name is at (R2), FDB at (R1)\nDSKOPNO  BCT   0,DSKTEST                                       @SC86295\n         BAL   9,DSKALC      Get FAB                           @SC86295\n         MVI   DYNDSP,X'42'  NEW,CATLG                         @SC86299\n         BAL   2,DSKLKP      Get DSCB                          @SC86299\n         BNZ   DSKOPN        Not found, just writing new       @SC86299\n         MVI   DYNDSP,X'18'  OLD,KEEP                          @SC86299\n         TM    FDBFLGS,APPN                                    @SC86295\n         BZ    DSKOPN                                          @SC86299\n         BAL   14,DSKVALS                                      @SC86295\n         BAL   9,DSKFABS     Set up FAB from FDB               @SC86299\n         MVI   DYNDSP,X'28'  MOD,KEEP                          @SC86299\nDSKOPN   CNOP  0,4                                             @SC86299\n         BAL   2,DSKOPT      Open and test                     @SC86299\n         OPEN  (0,OUTPUT),MF=L                                 @SC86299\nDSKOPT   KCALL DYNALC,DYNPL,EXT                                @SC86299\n         OPEN  ((3)),MF=(E,(2))                                @SC86299\n         TM    FABOFLGS,X'10'                                  @SC86299\n         BZ    DSKER1        Didn't work                       @SC86299\n         B     RTRN0                                           @SC86295\n*\n* Test for existence of file whose name is at (R2)\nDSKTEST  BCT   0,DSKCLOS                                       @SC86295\n         LR    15,2          Copy DSN ptr                      @SC86299\n         LA    3,DSKSTT                                        @SC86295\n         MVC   FABDSN,0(2)   Copy DSN as well                  @SC88026\n         BAL   2,DSKLKP      Get DSCB                          @SC86299\n         BNZ   DSKER1        Not found                         @SC86299\n         BAL   14,DSKVALS                                      @SC86299\n         B     RTRN0                                           @SC86299\n*\n* Close file whose ticket is at (R1), release block\nDSKCLOS  BCT   0,DSKNSET                                       @SC86295\n         ICM   3,15,0(1)     Get FAB ptr, if any               @SC86295\n         BZ    RTRN0         None, ignore                      @SC86295\n         XC    0(4,1),0(1)   Yes, now clear ticket             @SC86295\n         CLOSE ((3))                                           @SC86299\n      FREEPOOL (3)                                             @SC86299\n         LA    0,FABDWDS                                       @SC86295\n         LR    1,3                                             @SC86299\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         B     RTRN0                                           @SC86295\n*\n* Read from file whose ticket is at (R1)\nDSKRED   BCT   0,DSKWRT                                        @SC86295\n         LTR   3,1           Get FAB ptr                       @SC86299\n         BNP   RTRN1         Not defined anymore               @SC86299\n         L     15,FABGET     I/O routine                       @SC86299\n         BALR  14,15         Go to it                          @SC86299\n         LM    4,5,FDBBUFF   Get buffer and size               @SC86299\n         LH    7,FABLRECL    Actual length                     @SC86299\n         AR    7,1           End of record                     @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   1,4(1)        Skip over SDW if V                @SC86299\n         SR    7,1           Revised length                    @SC86299\n         LR    6,1                                             @SC86299\n         CR    7,5                                             @SC86299\n         BNL   *+6                                             @SC86299\n         LR    5,7           Buffer not filled                 @SC86299\n         L     1,4(13)                                         @SC86299\n         ST    5,20(1)       Return length in R0               @SC86299\n         MVCL  4,6           Copy to buffer                    @SC86299\n         B     RTRN0                                           @SC86299\n* End of file on input. Don't close it yet.                    @SC86295\nDSKEOD   LA    15,12         End return code                   @SC86295\n         B     RTRN                                            @SC86295\n*\n* Write to file whose ticket is at (R1)\nDSKWRT   BCT   0,DSKTSP                                        @SC86316\n         LTR   3,1           Get FAB ptr                       @SC86299\n         BNP   RTRN1         Not defined anymore               @SC86299\n         LM    4,5,FDBBUFF   Get buffer and size               @SC86299\n         LR    6,5           Copy for LRECL                    @SC86299\n         CH    6,FDBLRC                                        @SC86299\n         BNH   *+8                                             @SC86299\n         LH    6,FDBLRC      Don't allow more than LRECL if V  @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   6,4(5)        + 4 if RECFM=V                    @SC86299\n         STH   6,FABLRECL    Set up for output                 @SC86299\n         MVI   ERRNUM,0      Clear error number                @SC86299\n         L     15,FABGET     I/O routine                       @SC86299\n         BALR  14,15         Do it                             @SC86299\n         SR    15,15                                           @SC86299\n         ICM   15,1,ERRNUM   See if deadly error               @SC86299\n         BNZ   RTRN          Yes, pass return code             @SC86299\n         XC    0(4,1),0(1)                                     @SC86299\n         STCM  6,3,0(1)      In case V                         @SC86299\n         BAL   2,DSKTV                                         @SC86299\n          LA   1,4(1)        V: space over SDW                 @SC86299\n         LR    6,1                                             @SC86299\n         LR    7,5                                             @SC86299\n         MVCL  6,4           Copy to output record             @SC86299\n         B     RTRN0                                           @SC86295\n*\n* Analyze error: packed dec. code in TMPDW\nDSKXXX   BCT   0,DSKUTL                                        @SC86316\n         MVI   ERRNUM,ERRDIE Set Kermit error code             @SC87338\n         L     2,EMSGP       Ptr to msg buffer                 @SC87338\n         CLC   =C'  ',0(2)   Proper SYNAD message?             @SC87338\n         BE    *+10          Yes, ok                           @SC87338\n         XC    EMSGL,EMSGL   No, clear length                  @SC87338\n         B     RTRN1                                           @SC87338\n*\n* Disk utility for file(s) at (R1) and (R2)\nDSKUTL   LR    8,0           Save code-12                      @SC86316\n         BCTR  0,0           Code-13: DIR,DEL,REN,COP          @SC86316\n         SLA   0,3                                             @SC86295\n         LA    5,DSKCMDS                                       @SC86295\n         AR    5,0           Ptr to command name               @SC86295\n         LA    7,CMD         Buffer for system command         @SC86299\n         MVC   0(8,7),0(5)                                     @SC86299\n         LA    7,8(7)                                          @SC86299\n         BAL   3,DSKUTCP                                       @SC86295\n         SRA   0,4                                             @SC86295\n         BZ    *+10                                            @SC86295\n         LR    1,2           2nd file                          @SC86295\n         BAL   3,DSKUTCP                                       @SC86295\n         LA    0,CMD                                           @SC86295\n         LR    6,7                                             @SC86299\n         SR    6,0                                             @SC86299\n         NI    FL4,255-UCMD  Not user command: already tokens  @SC86295\n         KCALL SUPFNC,3      Execute it                        @SC86295\n         B     RTRN                                            @SC86295\n*\nDSKUTCP  LR    4,0           Save ID                           @SC86299\n         LA    0,FFDSP                                         @SC86299\n         KCALL FSPEC                                           @SC86299\n         MVI   0(15),C' '                                      @SC86299\n         LA    7,1(15)       New output ptr                    @SC86299\n         LR    0,4                                             @SC86299\n         BR    3                                               @SC86295\n*\nDSKCMDS  DC    C'LISTCAT '   Utility command names             @SC86299\n         DC    C'DELETE  '                                     @SC86299\n         DC    C'RENAME  '                                     @SC86299\n         DC    C'COPY    '                                     @SC86299\n*\nDSKTV    TM    FABRECFM,FABRECU                                @SC86299\n         BNM   4(2)          U                                 @SC86299\n         TM    FABRECFM,FABRECF                                @SC86299\n         BO    4(2)          F                                 @SC86299\n         BR    2             V                                 @SC86299\n* Return on error, release useless block, if any\nDSKER1   LTR   1,4           Any block assigned?               @SC86295\n         BZ    RTRN1         No                                @SC86295\n         LA    0,FABDWDS     Yes, release it                   @SC86295\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         B     RTRN1         Flag error                        @SC86295\n*\nDSKALC   LR    5,1           Save FDB ptr                      @SC86295\n         LA    6,1           Update counter                    @SC86299\n         A     6,EVCTR                                         @SC86299\n         ST    6,EVCTR                                         @SC86299\n         LA    0,FABDWDS                                       @SC86295\n       DMSFREE DWORDS=(0),ERR=DSKER1                           @SC86295\n         LR    3,1           New block ptr                     @SC86295\n         LR    4,1                                             @SC86295\n         L     1,4(13)                                         @SC86295\n         ST    3,20(1)       Return R0                         @SC86295\n         XC    0(8*FABDWDS,3),0(3)                             @SC86295\n         MVC   FDBD(FDBCOP),0(5) Copy user's FDB               @SC86295\n         MVC   FABDSN,0(2)                                     @SC86299\n         LA    15,FABDSN     Set up DSN ptr                    @SC86299\n         LA    0,FABDDNAM    Get DDN ptr                       @SC86299\n         LA    1,FDBUNT      Get UNIT ptr                      @SC86299\n         LA    2,FDBVOL      Get VOL ptr                       @SC86299\n         STM   15,2,DYNPL    Set up DYNALC                     @SC86299\n         MVI   FABBUFCB+3,1  Fill out DCB                      @SC86299\n         MVI   FABDSORG,X'40' =PS                              @SC86299\n         CLI   FABDSN+44,0   Special case of PDS?              @SC86299\n         BNE   *+12          No                                @SC86299\n         MVI   FABDSORG,X'02' Yes, set DSORG=PO                @SC86299\n         MVI   FABDSN+44,C' ' and blot out member              @SC86299\n         MVI   FABIOBAD+3,1                                    @SC86299\n         LA    0,DSKEOD                                        @SC86299\n         LA    1,DSKOPEX                                       @SC86299\n         STM   0,1,FABEODAD                                    @SC86299\n         UNPK  FABDDNAM,EVCTR(5)                               @SC86299\n         TR    FABDDNAM,TRHEX  Get unique DDNAME               @SC86299\n         MVI   FABDDNAM,C'K'                                   @SC86299\n         MVI   FABDDNAM+7,C'Z'                                 @SC86299\n         MVC   FABOFLGS(4),=X'02,00,48,48'                     @SC86299\n         MVI   FABCHECK+3,1                                    @SC86299\n         LA    1,DSKSYN                                        @SC87338\n         ST    1,FABSYNAD    In case of error                  @SC86299\n         MVI   FABIOBA+3,1                                     @SC86299\n         MVC   FABEOBAD(16),FABIOBA                            @SC87314\n         MVI   FABEOB+3,1                                      @SC86299\nDSKFABS  LH    1,FDBLRC      Copy Info to DCB                  @SC86299\n         STH   1,FABLRECL                                      @SC86299\n         MVC   FABBLKSI,FDBBLKSI                               @SC86299\n         MVI   FABRECFM,FABRECU                                @SC86299\n         CLI   FDBRCF,C'U'                                     @SC86299\n         BER   9                                               @SC86299\n         MVI   FABRECFM,FABRECF+FABRECBR                       @SC86299\n         CLI   FDBRCF,C'F'                                     @SC86299\n         BER   9                                               @SC86299\n         MVI   FABRECFM,FABRECV+FABRECBR                       @SC86299\n         LA    1,4(1)        Allow for RDW                     @SC86299\n         STH   1,FABLRECL                                      @SC86299\n         BR    9                                               @SC86299\n*\n* Call with R15->name, return to R2 with CC set (Z if ok)\nDSKLKP   SR    0,0                                             @SC86299\n         LA    1,CAMVOLS                                       @SC86299\n         LA    14,X'44'      Name code                         @SC86299\n         SLL   14,24                                           @SC86299\n         STM   14,1,CAMLOC   Save dsn ptr, etc                 @SC86299\n         LA    0,CAMVOLS+6                                     @SC86299\n         LA    1,CAMDSCB                                       @SC86299\n         LA    14,X'C1'      Search code                       @SC86299\n         SLL   14,24                                           @SC86299\n         STM   14,1,CAMOBT                                     @SC86299\n        LOCATE CAMLOC                                          @SC86299\n         LTR   6,15          Retain 1st code in R6             @SC86299\n         BNZR  2             Give up                           @SC86299\n        OBTAIN CAMOBT        Get DSCB                          @SC86299\n         LTR   15,15         Test return code                  @SC86299\n         BR    2                                               @SC86295\n*\n* Handle synchronous disk I/O errors\nDSKSYN   SYNADAF ACSMETH=QSAM Get system to do the work        @SC87338\n         L     2,EMSGP       Ptr to msg buffer                 @SC87338\n         MVC   0(80,2),48(1) Copy message (inc. 2 blanks)      @SC87338\n         LA    2,80                                            @SC87338\n         ST    2,EMSGL       Length of string                  @SC87338\n         SYNADRLS            Clean up                          @SC87338\n         B     RTRN1                                           @SC87338\n*\n* Set up search through list of files, pattern at (R1)\nDSKNSET  BCT   0,DSKNXT                                        @SC86295\n         NI    DSKFL,255-WFN-NXDON                             @SC87015\n         MVC   NXFN,0(1)     Copy name                         @SC87015\n         LA    1,NXFN+44                                       @SC87015\n         TRT   NXFN(44),TRTBL                                  @SC87015\n         LR    3,1           End of name                       @SC87015\n         MVI   TRTBL+C'*',1                                    @SC87015\n         TRT   NXFN(44),TRTBL Check for wild card              @SC87015\n         MVI   TRTBL+C'*',0                                    @SC87015\n         BZ    RTRN0         Len=44, just use the one file     @SC87015\n         CLI   0(1),C'*'     Did we find an asterisk           @SC87015\n         BNE   RTRN0         No, just the end of the name      @SC87015\n         OI    DSKFL,WFN     Mark it wild                      @SC87015\n         LA    4,1(1)                                          @SC87015\n         ST    4,NXSFPTR     Save ptr to suffix                @SC87015\n         SR    3,4                                             @SC87015\n         STH   3,DSNSFL      and length                        @SC87015\n         LA    0,NXFN                                          @SC87015\n         SR    1,0                                             @SC87015\n         STH   1,DSNPFL      Length of prefix                  @SC87015\n         L     14,CIRSRCH    Argument ptr                      @SC87015\n         LA    15,44                                           @SC87015\n         ICM   1,8,BLANK                                       @SC87015\n         MVCL  14,0          Copy with blank fill              @SC87015\n         LINK  EP=IKJEHCIR,MF=(E,CIRPARM) Call catalog routine @NW86330\n         LTR   15,15                                           @SC87015\n         BNZ   RTRN1         Not found                         @SC87015\n         L     2,CIRWA       Adr of returned catalog buffer    @NW86330\n         MVC   2(2,2),F0     Zero out length in cat buffer     @NW86330\n         SH    2,=Y(45-4)    Skip count bytes, then back one   @SC87015\n         ST    2,CATDSPTR    Save ptr to buffer                @NW86330\n         B     RTRN0                                           @SC86295\n*\n* Flush previous file pattern\nDSKXSET  BCT   0,DSKCWDF                                       @SC86295\n         OI    DSKFL,NXDON                                     @SC87015\n         B     RTRN0                                           @SC87015\n*\n* Check CWD string, return code in R15\nDSKCWDF  BCT   0,DSKRED                                        @SC86295\n         LR    15,1          Copy name ptr                     @SC87015\n         LR    5,1                                             @SC87015\n         BAL   2,DSKLKP      Check name                        @SC87015\n         BZ    DSKCWD1       Was a full DSN, not a prefix      @SC87015\n         CR    6,15                                            @SC87015\n         BNE   RTRN1         ditto                             @SC87015\n         CLI   44(5),C'.'    PDS requested?                    @SC87015\n         BE    RTRN1         Yes, but file not found           @SC87015\n         SH    15,=H'12'     RC of 12 means was a prefix       @SC87015\n         B     RTRN                                            @SC87015\nDSKCWD1  CLI   44(5),C'.'    PDS requested?                    @SC87015\n         BNE   RTRN1         No, but file was found            @SC87015\n         B     RTRN0         Yes, ok                           @SC87015\n*\n* Check disk space for proposed file: FAB ptr at (R1)\nDSKTSP   BCT   0,DSKXXX                                        @SC86316\n* - - - get size of available space in R0,R1                   @SC87015\n         LA    0,1023        For now, claim 4 Tbyte            @SC87015\n         SRDA  0,10          Convert to Kbytes                 @SC86316\n         CLR   1,2                                             @SC87012\n         BL    RTRN1         No room                           @SC86316\n         B     RTRN0         Ok                                @SC86316\n*\nDSKNXT   BCT   0,DSKXSET                                       @SC86295\n* Check against prefix and suffix criteria and return next match,\n*   if any\n* Also return info in a File Descriptor Block                  @SC86151\n         TM    DSKFL,NXDON                                     @SC87015\n         BO    RTRN1         Nothing more                      @SC87015\n         TM    DSKFL,WFN     Are we scanning?                  @SC87015\n         BO    NXFBEG        Yes, do it                        @SC87015\n         OI    DSKFL,NXDON   No, that's the only one           @SC87015\n         MVC   FILNAM,NXFN                                     @SC87015\n         LA    2,FILNAM                                        @SC87015\n         B     DSKTEST+4     Now return file info              @SC87015\nNXFBEG   L     6,CATDSPTR    Ptr to place in catalog           @NW86330\n         USING CATDSET,6                                       @NW86330\nNXFDS    LA    6,45(6)       Next                              @SC87015\n         CLI   TYPEBYTE,C'A'                                   @NW86330\n         BNE   NXFZ          Assume end of list                @SC87015\n         LH    2,DSNPFL      Get prefix length                 @SC87015\n         LTR   2,2                                             @NW86330\n         BNP   XL0092                                          @NW86330\n         LA    14,NXFN       Compare saved prefix              @SC87015\n         LA    3,CATDNAME     against this name                @SC87015\n         LA    5,0(2,3)      End of possible match             @SC87015\n         BCTR  2,0           Set up for CLC                    @SC87015\n         EX    2,NXFCMP                                        @SC87015\n         BNE   NXFDS         No match                          @SC87015\nXL0092   CLC   DSNSFL,F0                                       @SC87015\n         BNH   XL0002        Don't check suffix                @NW86330\n         LA    1,44(3)       Limit of name field               @SC87015\n         TRT   0(44,3),TRTBL Find end of name                  @SC87015\n         LR    3,1                                             @SC87015\n         LH    4,DSNSFL                                        @SC87015\n         SR    3,4           Ptr to start of suffix            @SC87015\n         CR    3,5                                             @SC87015\n         BNH   NXFDS         Not longer than prefix+suffix     @SC87015\n         BCTR  4,0                                             @SC87015\n         L     14,NXSFPTR    Ptr to comparison suffix          @SC87015\n         EX    4,NXFCMP                                        @SC87015\n         BNE   NXFDS         No match                          @SC87015\nXL0002   MVC   FILNAM(44),CATDNAME   Copy name                 @SC87015\n         MVI   FILNAM+44,C' '                                  @SC87015\n         MVC   FILNAM+45(7),FILNAM+44                          @SC87015\n         ST    6,CATDSPTR    Save ptr for next time            @NW86330\n         LA    2,FILNAM                                        @SC87015\n         B     DSKTEST+4     Now return file info              @SC87015\n*\nNXFCMP   CLC   0(,3),0(14)                                     @SC87015\n*\nNXFZ     OI    DSKFL,NXDON                                     @SC87015\n         B     RTRN1         Ran out of names                  @SC87015\n*\nDSKVALS  LA    0,FDBD        Ptr to FDB                        @SC86295\n         L     1,4(13)                                         @SC86295\n         ST    0,24(1)       Return ptr to caller              @SC86295\n         NI    FDBFLGS,255-PDSF                                @SC87015\n         TM    DS1DSO,2      ORG=PO?                           @SC87015\n         BZ    *+8           No                                @SC87015\n         OI    FDBFLGS,PDSF  Yes, it's a PDS                   @SC87015\n         SR    7,7                                             @SC87296\n         IC    7,DS1CRDT     Get year in binary                @SC87296\n         CVD   7,TMPDW                                         @SC87296\n         MVO   FDBDATE+1(2),TMPDW Copy year                    @SC87296\n         ICM   7,3,DS1CRDT+1 Get day-of-year in binary         @SC87296\n         MVC   DSKMNTH,=AL1(30,31,30,31,31,30,31,30,31,28,31)  @SC86299\n         TM    DS1CRDT,3                                       @SC87296\n         BNZ   *+8                                             @SC87296\n         MVI   DSKMNTH+9,29  Leap year, change Feb.            @SC86299\n         LA    6,11                                            @SC86299\n         SR    0,0                                             @SC86299\nDSKVMDL  IC    0,DSKMNTH-1(6)                                  @SC86299\n         SR    7,0           Test if passed the right month    @SC86299\n         BNP   DSKVMDM       Got it                            @SC86299\n         BCT   6,DSKVMDL                                       @SC86299\n         SR    0,0           Hit December                      @SC86299\nDSKVMDM  AR    7,0           Get day of month                  @SC86299\n         LCR   6,6                                             @SC86299\n         LA    6,12(6)       Get month                         @SC86299\n         MH    6,=H'100'                                       @SC86299\n         AR    6,7           Combine MMDD                      @SC86299\n         MH    6,=H'10'                                        @SC86299\n         CVD   6,TMPDW                                         @SC86299\n         MVC   FDBDATE+2(2),TMPDW+5                            @SC86299\n* = = = = = get file size in bytes in R6,R7 - - -\n         SR    6,6           Return 0 for now (i.e., unknown)  @SC87015\n         SR    7,7                                             @SC87015\n         AL    7,=F'1023'    Round up                          @SC87007\n         BNO   *+8           No overflow                       @SC86239\n         LA    6,1(6)                                          @SC86239\n         SRDA  6,10                                            @SC86239\n         ST    7,FDBSIZE                                       @SC86299\n         MVI   FDBDATE,X'19' Assume 20th Cent                  @SC86295\n         CLI   FDBDATE+1,X'50'                                 @SC86295\n         BH    *+8           Ok                                @SC86295\n         MVI   FDBDATE,X'20' Must be 21st                      @SC86295\n         MVC   FDBBLKSI,DS1BLK                                 @SC86299\n         MVC   FDBVOL,DS1VOL Copy volume name                  @SC86299\n         LH    1,DS1BLK      Use BLKSIZE if 'U'                @SC86299\n         MVI   FDBRCF,C'U'                                     @SC86299\n         TM    DS1RCF,FABRECU                                  @SC86299\n         BO    DSKVLR                                          @SC86299\n         LH    1,DS1LRC      Use LRECL if 'F'                  @SC86299\n         MVI   FDBRCF,C'F'                                     @SC86299\n         TM    DS1RCF,FABRECF                                  @SC86299\n         BO    DSKVLR                                          @SC86299\n         MVI   FDBRCF,C'V'                                     @SC86299\n         S     1,F4          Use LRECL-4 if 'V'                @SC86299\nDSKVLR   STH   1,FDBLRC                                        @SC86299\n         XC    DA00(20),DA00 Clear parameter block             @SC87351\n         LA    6,FABLDSN     Ptr to halfword at beginning      @SC87351\n         ST    6,DA00PDSN    Set up parameter block            @SC87351\n         LA    1,FABDSN+44   End of DSN                        @SC88026\n         TRT   FABDSN,TRTBL  Find 1st blank, if any            @SC88026\n         LA    6,FABDSN      Start                             @SC88026\n         SR    1,6           Get length in bytes               @SC87351\n         STH   1,FABLDSN                                       @SC87351\n         LR    6,14          Save return adr                   @SC87351\n         LINK  EP=IKJDAIR,MF=(E,DAPLAREA)                      @SC88036\n         LR    14,6                                            @SC87351\n         TM    DA00+2,2      Dataset allocated?                @SC87351\n         BZR   14            No                                @SC87351\n         OI    FDBFLGS,FDBACTV Yes                             @SC86295\n         BR    14                                              @SC86299\n*\nDSKOPEX  DC    0F'0',X'05',AL3(DSKOPC) OPEN EXIT               @SC86299\n         DC    X'91',AL3(DSKABEND)  DCB ABEND exit             @TS86001\n*\n* Look for x37 abends                                          @TS86001\nDSKABEND MVI   ERRNUM,ERRFUL Assume full                       @SC86355\n         XC    EMSGL,EMSGL   Clear extra message               @SC87338\n         CLC   =X'B370',0(1) B37 abend?                        @TS86001\n         BE    DSKABX        Yes                               @SC86355\n         CLC   =X'D370',0(1) D37 abend?                        @TS86001\n         BE    DSKABX        Yes                               @SC86355\n         CLC   =X'E370',0(1) E37 abend?                        @TS86001\n         BE    DSKABX        Yes                               @SC86355\n* Look for 013 abend                                           @TS86001\n         MVI   ERRNUM,ERRDIE Assume I/O error                  @SC86355\n         CLC   =X'0130',0(1) 013 abend?                        @TS86001\n         BNE   DSKABX        No, assume worst                  @SC86355\n         CLI   2(1),X'14'    Mismatch DSORG?                   @TS86001\n         BNE   *+12          No                                @SC86355\n         MVI   ERRNUM,ERRFNE Yes, member invalid or missing    @SC86355\n         B     DSKABX                                          @SC86355\n         CLI   2(1),X'18'    Unknown member name?              @TS86001\n         BNE   DSKABX        No, assume worst                  @SC86355\n         MVI   ERRNUM,ERRFNF Yes, say \"not found\"              @SC86355\nDSKABX   MVI   3(1),X'04'    Ignore if possible                @SC86355\n         BR    14            Return                            @TS86001\n*\nDSKOPC   LR    3,1                                             @SC86299\n         LH    5,FABBLKSI                                      @SC86299\n         LTR   5,5                                             @SC86299\n         BP    *+8                                             @SC86299\n         LH    5,=H'6233'                                      @SC86299\n         LR    2,5                                             @SC86299\n         TM    FABRECFM,FABRECU                                @SC86299\n         BO    DSKOPS                                          @SC86299\n         LH    2,FABLRECL                                      @SC86299\n         BNZ   *+8                                             @SC86299\n         OI    FABRECFM,FABRECV+FABRECBR                       @SC86299\n         LTR   2,2                                             @SC86299\n         BP    *+8                                             @SC86299\n         LA    2,80                                            @SC86299\n         TM    FABRECFM,FABRECF                                @SC86299\n         BZ    DSKOPV                                          @SC86299\n         SR    4,4                                             @SC86299\n         DR    4,2                                             @SC86299\n         MR    4,2                                             @SC86299\n         B     DSKOPS                                          @SC86299\nDSKOPV   LA    4,4(2)                                          @SC86299\n         CR    4,5                                             @SC86299\n         BNH   DSKOPS                                          @SC86299\n         LR    5,4                                             @SC86299\nDSKOPS   STH   2,FABLRECL                                      @SC86299\n         STH   5,FABBLKSI                                      @SC86299\n         BR    14                                              @SC86299\n*\nDSKFL    EQU   DSKSTT+FDBFLGS-FABD   Flags for operation       @SC86295\n* Flags in addition to those defined for FDBFLGS:              @SC87015\nNXDON    EQU   X'40'         Catalog search done               @SC87015\n*\n         DROP  6                                               @SC87015\n*\n         LOCALS ,                                              @SC86295\nCAMLOC   DS    4F            Ptrs for locating dataset         @SC86299\nCAMOBT   DS    4F            Ptrs for getting DSCB             @SC86299\nCAMVOLS  DS    0D,XL265      Storage for volume list           @SC86299\nCAMDSCB  DS    0F,XL101      Storage for DSCB                  @SC88014\n         ORG   CAMDSCB+1                                       @SC88014\nDS1VOL   DS    CL6,XL2       Volume serial                     @SC86299\nDS1CRDT  DS    2XL3,3X,XL13  Creation date                     @SC86299\nDS1RFDT  DS    XL3,XL4       Reference date                    @SC86299\nDS1DSO   DS    XL2           Dataset org                       @SC86299\nDS1RCF   DS    X             Record format                     @SC86299\nDS1OPT   DS    X             Error option                      @SC86299\nDS1BLK   DS    H             Block size                        @SC86299\nDS1LRC   DS    H             Logical record length             @SC86299\n         ORG   ,                                               @SC86299\nDYNPL    DS    A(0,0,0,0,DYNDSP,0,DYNRC)                       @SC88026\nDYNRC    DS    F                                               @SC86299\nDYNDSP   DS    X                                               @SC86299\nDSKMNTH  DS    XL11          Month length table                @SC86299\n         EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0AAAHL": {"ttr": 4105, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "KERMIT-370 4.0 RELEASE NOTES, June 28, 1988\n\nKermit-370 4.0 has been beta-tested under both MVS/TSO and VM/CMS at various\nsites, and success has been reported with the following models:\n\n  IBM Series/1 with Yale IUP\n  IBM 7171\n  IBM 4994\n  Leedata 8010 (Lee Data Corp)\n  Leedata 8030\n  Leedata 874\n  Micom 7400   (Micom Systems Inc)\n  PCI 1076     (Protocol Computers Inc)\n  PCI 276\n  Renex TMS-1  (Renex Corp)\n\n(Leedata is also the new name for Datastream.)  We also have indirect reports\nthat a product called the \"Hydra II\" works OK with Kermit-370.\n\nKermit-370 should work with any protocol converter that supports some kind of\n\"transparent mode\" or \"passthrough mode\".  Sometimes this takes the form\nof \"graphics mode\".  Kermit-370 cannot tell what kind of protocol converter\nit's going through, so it assumes it to be an IBM model, and issues the IBM\ncommand for transparent mode.  If this doesn't work, the user can try the\nKermit-370 command SET CONTROLLER GRAPHICS.\n\nCertain models are known not to work with Kermit-370.  These include:\n\n  Any PC board that attaches to coax cable, like the Irma board or the\n  IBM 3270 emulation board.\n\n  SIM3278 (a software emulator on the VM system).\n\n  Adacom\n\n  The IBM 3708.\n\nThe program includes code to use the 3708, but it apparently does not work.\nSince sources are provided, customers are encouraged to make fixes, add support\nfor additional protocol converters, and send their work back to us for further\ndistribution.\n\nModels not mentioned above may or may not work with Kermit; we just have not\nhad any feedback about them.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0CMD": {"ttr": 4107, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IK0CMD\n         TITLE 'USNTRF Routine - execute main loop'\n* Execute Kermit commands (beginning with default TAKE files)\n* Entry: environment already set up\n* Exit: R15=0\n*       ERRNUM set appropriately\nUSNTRF   ENTER\n         LA    0,KRMPROT                                       @SC86295\n         LA    1,USNCMD      Full list of commands             @SC87117\n         BAL   14,LOOPS      Set up loop return                @SC86295\n         LA    2,USRTAKE\n         LA    1,LUSRT       Length of name                    @SC86295\n         BAL   9,LUPTIN      Test user KERMINI                 @SC86295\n           NOP 0             Not found, skip it                @SC86295\n         LA    2,SYSTAKE                                       @SC86135\n         LA    1,LSYST       Length of name                    @SC86295\n         BAL   9,LUPTIN      Test system KERMINI               @SC86295\n           NOP 0             Not found, skip it                @SC86295\n         MVI   ERRNUM,ERRNFT No transfers yet                  @SC86295\n         KCALL SUPFNC,6,E=LOOP                                 @SC86295\n         OI    KFLG,CMDL+SIGN Got command line, suppress banner@SC86295\n         B     LOOP                                            @SC86295\n*\nKRMININC WTEXT 'Kermit-&KSYS Version &KVRSN (&KDATE.)'         @SC86268\n         WTEXT 'Enter ? for a list of valid commands'\n         STRTMSGS ,          Any system-specific messages...   @SC87338\n         OI    KFLG,SIGN     Banner done                       @SC86295\nKRMPROB  PTEXT BLANK,1               And leave a blank line\n         B     LUPWRT        Not an error                      @SC86295\n*\nKRMPROT  TM    KFLG,CMDL                                       @SC86295\n         BZ    KRMPROCL              Go if Not cmd line\n         NI    KFLG,255-CMDL Turn off command line             @SC86295\n         OI    KFLG,CMDC     Command from cmd line             @SC86295\n         L     1,CBUF                address of cmd\n         L     0,CLEN        Length                            @SC86171\n         B     LUPPRS        Go process it                     @SC86295\n*\nKRMPROCL TM    KFLG,CMDC                                       @SC86295\n         BZ    KRMPROR               Go if not cmd line\n         KCALL SUPFNC,7,E=(KRMXITQ,Z) Go if nothing stacked    @SC86295\nKRMPROR  TM    KFLG,SIGN     Already printed banner?           @SC86295\n         BO    KRMPROX       Yes, or suppressed                @SC86295\n         KCALL SUPFNC,7,E=(KRMININC,Z) Go if nothing stacked   @SC86295\nKRMPROX  LA    3,CMD                                           @SC86295\n         LA    4,KPRPT       Current prompt                    @SC87268\n         SR    0,0                                             @SC87268\n         IC    0,KPRPL       Prompt length                     @SC87268\n         RTEXT (3),PROMPT=((4),(0))                            @SC87268\n         LA    1,CMD         Ptr to command                    @SC86171\n         B     LUPPRS        Go process it                     @SC86295\n*\nUSNCMD   KW    'EXIT',KRMXIT,MIN=2\n         KW    'QUIT',KRMXIT\nUSNCMDX  KW    'BYE',KRMBYE,MIN=3                              @SC86155\n         KW    'DIRECTORY',KRMDIR,MIN=3                        @SC86295\n         KW    'ECHO',KRMECO,MIN=2\n         KW    'FINISH',KRMFIN,MIN=3                           @SC86155\n         KW    'GET',KRMGET                                    @SC86155\n         KW    'HELP',KRMHLP\n         KW    'LOCAL',LUPTOK,MIN=3                            @SC86295\n         KW    'RECEIVE',KRMREC,MIN=3\n         KW    'REMOTE',KRMREM,MIN=3                           @SC86155\n         KW    'SEND',KRMSND,MIN=3\n         KW    'SERVER',KRMSRV,MIN=3\n         KW    'XECHO',KRMXPE,MIN=2                            @SC86204\n         KW    'XTYPE',KRMNPS,MIN=2                            @SC86204\nSRVKCMD  KW    '&KSYS.',LUPHST,MIN=2  Valid in Server mode ... @SC86295\n         AIF   ('&KSYS' NE 'CMS').CM0Z                         @SC86355\n         KW    'CP',LUPCP,MIN=2                                @SC86295\n.CM0Z    KW    'CWD',LUPCWD,MIN=2                              @SC86295\n         KW    'GIVE',LUPGIV,MIN=2                             @SC87117\n         KW    'HOST',LUPHST,MIN=2                             @SC87253\n         KW    'KERMIT',LUPTOK                                 @SC87343\n         KW    'SET',LUPSET,MIN=3                              @SC86295\n         KW    'SHOW',LUPSHO,MIN=2                             @SC86295\n         KW    'SPACE',LUPSPA,MIN=2                            @SC86295\n         KW    'STATUS',LUPSTA,MIN=2                           @SC86295\n         KW    'TAKE',LUPTAK,MIN=2                             @SC86295\n         KW    'TDUMP',LUPDMP,MIN=2                            @SC86295\n         KW    'TYPE',LUPHSTI,MIN=2                            @SC86295\n         KW\n*\nKRMECO   L     3,ADR                 Pick rest of line\n         ICM   4,B'1111',LEN         Remaining data length\n         BNP   KRMPROB               Go if nothing left in cmd\n         B     LUPWRT        Else, print the rest              @SC86295\n*                                                              @SC86155\nKRMREM   KCALL GENCMD,0,E=LUPERK Send remote command           @SC86295\n         B     KRMXFZ                                          @SC87300\n*                                                              @SC86155\nKRMBYE   BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         KCALL GENCMD,AL     Send Logout command               @SC86155\n         B     KRMXFZ                                          @SC87300\n*\nKRMFIN   BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         KCALL GENCMD,AF     Send Finish command               @SC86155\n         B     KRMXFZ                                          @SC87300\n*\nKRMGET   LA    0,FFGET+FFRCF                                   @SC86295\n         KCALL FSPEC,JFSPEC  Get foreign filespec              @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         LA    0,FFGET                                         @SC86295\n         KCALL FSPEC,FILNAM  Get native filespec, if any       @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         LA    0,FFNEW+FFGET                                   @SC87012\n         KCALL FSPEC,FILNAM,E=LUPWRTE Avoid collisions         @SC87012\n         BAL   8,IPKSET      Set state table, exchange parms   @SC86295\n* Init packet  Rpack interpret input tables                    @SC86155\n         DC    AL1(AY),AL3(0)        ACK'ed                    @SC86155\n         DC    AL1(00),AL3(KRMGETAB) Error                     @SC86155\n         BAL   9,PAKFIL      Copy file specification to buffer @HF86223\n         BAL   9,ENCODEN     Encode file-spec                  @SC86295\n         MVI   STYPE,AR      Packet type = receive initiate    @SC86155\n         KCALL SPACK,E=KRMGETAB Send name                      @SC86155\n         KCALL RECEIV                                          @SC86155\n         B     KRMXFZ                                          @SC86239\n*\nKRMGETAB KCALL INTINI,0                                        @SC86155\n         B     KRMXFZ                                          @SC87300\n*\nKRMREC   LA    0,FFRCF                                         @SC86295\n         KCALL FSPEC,FILNAM  Get filespec                      @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         LA    0,FFNEW+FFGET                                   @SC87012\n         KCALL FSPEC,FILNAM,E=LUPWRTE Avoid collisions         @SC87012\n         KCALL INTINI,3,E=KRMXFZ  Initialize for receive       @SC87300\n         KCALL RECEIV\n         B     KRMXFZ                                          @SC86239\n*\nKRMNPS   OI    FL4,NPS                                         @SC86165\n         MVI   TCTLQ,0       Turn off control quoting          @SC86165\n*\nKRMSND   LA    0,FFSND                                         @SC86295\n         KCALL FSPEC,IFILE   Get filespec                      @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         LA    0,FFSND+FFRCF                                   @SC86295\n         KCALL FSPEC,JFSPEC  Get filespec                      @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         BAL   14,LUPCNF     Check for illegal extras          @SC86295\nKRMSNDBG KCALL SEND\nKRMXFZ   SR    3,3                                             @SC86355\n         ICM   3,1,ERRNUM    Ok?                               @SC86355\n         BZ    LOOP          Yes, get next command             @SC86355\n         SLL   3,2           No, convert error number          @SC86355\n         A     3,AERRTAB     Ptr into message table            @SC86355\n         SR    4,4                                             @SC86355\n         IC    4,0(3)        Length                            @SC86355\n         ICM   3,7,1(3)      Message ptr                       @SC86355\n         B     LUPWRTE       Display it and go on              @SC86355\n*\nKRMXPE   L     5,ADR         Pointer to rest of line           @HF86150\n         ICM   4,15,LEN      Remaining data length             @HF86150\n         BNP   KRMXPEH       Go if nothing specified           @HF86150\n         L     3,RBUF                                          @HF86150\n         MVC   0(256,3),0(5) Copy to disk read buffer          @HF86150\n         AR    4,3           Get end                           @HF86150\n         STM   3,4,TXTPTR    Point to text to copy             @HF86150\n         OI    FL4,SFM+NPS   Data source: text string          @SC86165\n         MVI   TCTLQ,AUP     Turn on control quoting           @SC86165\n         B     KRMSNDBG                                        @SC86165\n*\nKRMXPEH  PTEXT 'Text string with \u00acX for cntl-X'                @SC86165\n         B     LUPWRT                                          @SC86295\n*\nKRMSRV   BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         KCALL SERVER        Call SERVER routine               @SC86295\n         B     KRMXFZ        Return to normal mode             @SC86355\n*\nKRMDIR   LA    0,FFUTL+FFWLD                                   @SC86295\n         KCALL FSPEC,FILNAM  Get pattern filespec              @SC86295\n         BAL   14,LUPCKFN    Make sure ok                      @SC86295\n         LA    0,13                                            @SC86295\n         KCALL DISKIO,FILNAM Do a DIR on it                    @SC86295\n         B     LOOP                                            @SC86295\n*\nKRMHLP   KCALL KHELP         Issue help request                @SC86355\n         B     LOOP                                            @SC86355\n*\nKRMXIT   FTOKN N=KRMXITQ,H=LUPCRH Check for illegal extras     @SC86295\n         B     LUPBAD        Not just QUIT, maybe system Q     @SC86295\n*\nKRMXITQ  NXTFSET ,END        Flush pending file list           @SC86355\n         L     2,TAKLEVK                                       @SC86295\nKRMXITL  BCTR  2,0                                             @SC86295\n         LTR   3,2           Any pending TAKE files?           @SC86295\n         BM    RTRN0         No                                @SC86295\n         SLA   3,2                                             @SC86295\n         CLOSF TAKTABK(3)    Close the open file               @SC86295\n         B     KRMXITL       Keep checking                     @SC86295\n         LOCALS ,                                              @SC86295\n* See SERVER for mapping                                       @SC86295\n         DS    A             Return adr if no more TAKE stuff  @SC86295\n         DS    A             Adr of command table              @SC86295\nTAKLEVK  DS    F             Take file level                   @SC86295\nTAKTABK  DS    (TAKMAX)F     Tickets for I/O                   @SC86295\nKFLG     DS    X             Local flags in main program       @SC86295\nSIGN     EQU   X'04'         Already printed Kermit banner     @SC86295\nCMDC     EQU   X'02'         Command gotten from cmd\nCMDL     EQU   X'01'         Data on cmd line\nUSNTRF   EXIT\n         TITLE 'SET Routine - perform SET command options'\n* Set/change values in STORAG.\n* Entry: SCANPTR string has option\n* Exit: R15=0 if ok, 1 if help needed, 2 if bad parameter name\n*       ERRNUM unchanged\nSET      ENTER\n         MVI   SETXI,X'97'   XI instruction                    @SC86273\n         NTOKN N=RTRN2                                         @SC86171\n         NI    FL3,255-PXCH  Make sure server renegotiates     @SC86295\n         SCAN  SETCMDKW,RTRN1                                  @SC86295\n         B     RTRN2                                           @SC86295\n*\nSETOOKW  KW    'OFF',SETOFF,MIN=2                              @SC87166\n         KW    'ON',SETON,MIN=2                                @SC87166\n         KW    ,                                               @SC87166\n*\nSETROFF  KW    'OFF',0,MIN=2                                   @SC87166\nSETRAW   KW    'RAW',SETDEBRW                                  @SC86316\nSETCMDOO KW    'OFF',SETOFFS,MIN=2                             @SC87166\nSETONKW  KW    'ON',SETONS,MIN=2                               @SC87166\n         KW    ,                                               @SC86171\n*\nSETOFF   EX    0,0(9)        Yes, first turn flag on...        @SC87166\n         EX    0,SETXI       Then off                          @SC86273\n         B     RTRN0                                           @SC87166\n*\nSETON    EX    0,0(9)        Turn flag on                      @SC87166\n         B     RTRN0                                           @SC87166\n*\nSETOFFS  B     4(9)                                            @SC87166\n*\nSETONS   BR    9             Go to ON handler                  @SC87166\n*\nSETTRKW  KW    'TTY',SETT                                      @SC87166\n         KW    'SERIES1',SETT                                  @SC87166\n         KW    'GRAPHICS',SETT                                 @SC87166\n         KW    'FULLSCREEN',SETT                               @SC87300\n         KW    ,                                               @SC87166\n*\nSETT     MVC   TRMTP,0(6)                                      @SC87166\n         B     RTRN0                                           @SC87166\n*\nSETSWT   KW    'CONTINUE',SETOFF                               @SC86171\n         KW    'HALT',SETON                                    @SC86171\n         KW    ,                                               @SC86171\n*\nSETDSC   KW    'DISCARD',SETOFF                                @SC86225\n         KW    'KEEP',SETON                                    @SC86225\n         KW    ,                                               @SC86225\n*\nSETPAR   KW    'MARK',SETOFF                                   @SC86316\n         KW    'NONE',SETON                                    @SC86316\n         KW    ,                                               @SC86316\n*\nSETTABS  LA    4,SETCMDOO                                      @SC87166\n         BAL   14,SETSCN                                       @SC87166\n          B    SETTBON       Turn on                           @SC86355\n         NI    FL2,255-TABS  Turn off                          @SC86355\n         MVC   TABCNT,F0     Clear count                       @SC86355\n         B     RTRN0                                           @SC86295\nSETTBON  OI    FL2,TABS      Turn on                           @SC86355\n         MVC   TABCNT,F0     Clear count                       @SC86355\n         SR    0,0           Init previous tab                 @SC86355\n         LA    3,TABTBL      Point to start of tab table       @TS86100\n         LA    8,255         Limit on tab stops                @SC86355\n         LA    5,TABCNT      End of table                      @SC86355\nSETTBLP  ICM   2,15,LEN      Any more tokens?                  @SC86355\n         BNP   SETTBN        No, done                          @SC86355\n         STC   0,0(3)        Save previous tab                 @SC86355\n         BAL   2,SETNUM      Read number                       @SC86355\n         CLM   0,1,0(3)      Is this tab higher than previous? @SC86355\n         BNH   SETTBSEQ      No, tab out of sequence           @TS86100\n         CR    3,5           Exceeded capacity?                @SC86355\n         BNL   SETTBHI       Yes                               @TS86100\n         STC   0,0(3)        Save tab setting                  @TS86100\n         LA    3,1(3)        Bump counter                      @SC86355\n         B     SETTBLP                                         @SC86355\nSETTBN   LA    0,TABTBL      Point to start of tab table       @SC86355\n         SR    3,0           Get length of table               @SC86355\n         STH   3,TABCNT      Save the tab count                @TS86100\n         B     RTRN0                                           @SC86355\nSETTBHI  PTEXT 'Too many tabs'                                 @SC86355\n         B     SETTBER       Return error                      @SC86355\nSETTBSEQ PTEXT 'Tabs out of sequence'                          @TS86100\nSETTBER  NI    FL2,255-TABS  Turn off                          @SC86355\n         B     SUBERR        Return error                      @TS86100\n*\nSETLIN   BAL   2,SETFSTR     Get fixed-format string           @SC86166\n         PTEXT 'Bad line'                                      @SC87351\n         KCALL SETMSG,5,E=SUBERR Make sure it's ok             @SC87351\n         B     RTRN0                                           @SC86166\n*\nSETPRP   LA    0,KPRPT       Ptr to new prompt string          @SC87351\n         KCALL SUPFNC,11     Ok it with system                 @SC87351\n         B     RTRN0                                           @SC87351\n*\n         KSETPRC ,           System-specific options           @SC86355\n*\nSETFKW   KW    'LRECL',SHOLR               **COMPAT**          @SC87166\n         KW    'T',SETFT                   **COMPAT**          @SC87166\n         KW    'TYPE',SHOFILT              **COMPAT**          @SC87166\n        KFILKW ,                           **COMPAT**          @SC87166\nSETFIL   KW    'TEXT',SETFILET                                 @SC86133\n         KW    'BINARY',SETFILEB                               @SC86262\nSETDBIN  KW    'D-BINARY',SETFILEB                             @SC86262\n         KW    'V-BINARY',SETFILEB                             @SC86151\n         KW\n*\nSETFILEB OI    FL1,BINF              Set binary on\nSETFLR   SR    0,0                                             @SC87012\n         ICM   0,3,LRECL     Record length                     @SC86295\n         ST    0,MAXOUT      Max output buffer size            @SC86295\n         MVC   TYPFIL,0(6)   Save type                         @SC86151\n         B     RTRN0                                           @SC86295\n*\nSETFILET NI    FL1,255-BINF          Set it OFF\n         B     SETFLR                                          @SC87012\n*\n         KFILSET ,                                             @SC87012\n*\nSETDEB   LA    0,ATOE        EBCDIC log                        @SC86316\n         LA    4,SETRAW                                        @SC86316\n         BAL   14,SETSCN                                       @SC86316\n          B    SETDEBON                                        @SC86273\nSETDEBOF NI    FL1,255-DEBUG         Set it OFF\n         ST    0,DBGTYP      Save indicator                    @SC86316\n         CLOSF LOGPTR        Done logging                      @SC86135\n         B     RTRN0                                           @SC86295\n*\nSETDEBRW SR    0,0           No translation for log            @SC86316\nSETDEBON ST    0,DBGTYP      Save indicator                    @SC86316\n         TM    FL1,DEBUG     Already on?                       @SC87012\n         BO    RTRN0         Yes                               @SC87012\n         NI    LOGFLGS,255-APPN                                @SC86295\n         LA    0,L'LOGNAM    Name string length                @SC86295\n         LA    1,LOGNAM      and address                       @SC86295\n         STM   0,1,SCANPTR                                     @SC86295\n         LA    0,FFRCF                                         @SC86295\n         KCALL FSPEC,IFILE   Convert to filespec               @SC86295\n         PTEXT 'DEBUG error'                                   @SC87012\n         OPENF O,IFILE,LOGFDB,LOGPTR,E=SUBERR                  @SC87012\n         OI    FL1,DEBUG     Enable logging                    @SC87012\n         B     RTRN0                                           @SC86295\n*\nSET8B    NTOKN N=SET8BH,H=SET8BH                               @SC87008\n         LA    4,AAMP        Default value                     @SC87008\n         LA    9,SET8BS                                        @SC87008\n         SCAN  SETONKW,RTRN2\n         SR    4,4           Zero value means OFF              @SC87008\n         LTR   7,7           Length=1?                         @SC87008\n         BNZ   SET8BS        No, can't be ON                   @SC87008\n         BAL   2,SETQCH2     Make sure it's valid              @SC87008\nSET8BS   STC   4,EBQC        New value                         @SC87008\n         B     RTRN0                                           @SC87008\nSET8BH   PTEXT 'Must be ON, OFF, or a character'               @SC87008\n         B     SUBERR                                          @SC87008\n*\nSETSTR   LR    2,14                                            @SC87268\n         MVI   0(8),0        Default to blank                  @SC87166\n         BAL   9,WSP         Remaining data length             @SC86224\n          B    RTRN0         Null string                       @SC86295\n         LR    1,4           Max length allowed                @SC87268\n         CR    6,1                                             @SC86345\n         BH    SETSTRH       Too long                          @SC86345\n         STC   6,0(8)        Save length                       @SC87166\n         LA    8,1(8)        Skip over length byte             @SC87268\n         XR    6,7           Exchange ptr and length           @SC87268\n         XR    7,6                                             @SC87268\n         XR    6,7                                             @SC87268\n         B     SETFST1       Go copy string                    @SC87268\n*\nSETRCTLQ BAL   2,SETQCHR             Get a char for Receive-Ctl-quote\n         STC   4,RCTLQ(5)    Set receive ctl quote             @SC86164\n         LTR   5,5           Done if SEND                      @SC86223\n         BNZ   RTRN0                                           @SC86295\n         STC   4,DEFPARM+5   Set default for SPAR              @SC86120\n         B     RTRN0                                           @SC86295\n*\nSETQCHR  NTOKN H=SETQCHRH,N=SETQCHRH\n         LTR   7,7                   Token length - 1\n         BP    SETQCHRH              Pos: token is too long\nSETQCH2  SR    4,4                                             @SC87008\n         IC    4,0(6)        Get the quote char                @SC86120\n         IC    4,ETOA(4)     Get ASCII form                    @SC86120\n         NOTQR SETQCHRH      Go if not 33-62 or 96-126         @SC86120\n         BR    2\n*\nSETQCHRH PTEXT 'One char with ASCII value 33-62 or 96-126'     @SC86224\n         B     SUBERR                                          @SC86295\n*\nSETLR    ST    0,MAXOUT      Max output buffer size            @SC87166\n         B     RTRN0                                           @SC86295\n*\nSETTIMO  BCT   5,RTRN0       Done if rec                       @SC87166\n         TOCHR 0,,DEFPARM+1  Set default for SPAR              @SC86164\n         B     RTRN0                                           @SC86295\n*\nSETPADN  BCT   5,RTRN0       Done if rec                       @SC87166\n         TOCHR 0,,DEFPARM+2  Set default for SPAR              @SC86164\n         B     RTRN0                                           @SC86295\n*\nSETPADC  BCT   5,RTRN0       Done if rec                       @SC87166\n         CTL   0,,DEFPARM+3  Set default for SPAR              @SC86164\n         B     RTRN0                                           @SC86295\n*\nSETEOL   BCT   5,RTRN0       Done if rec                       @SC87166\n         STC   0,S1EOL       Extra copy for prompting          @SC87274\n         TOCHR 0,,DEFPARM+4          Set default for SPAR\n         B     RTRN0                                           @SC86295\n*\nSETSIZ   C     0,AKMIN       Less than min Kermit size?        @SC87166\n         BL    SETKSIZH      Yes, error                        @SC86164\n         C     0,AKMAX       More than max Kermit size?        @SC86164\n         BNH   SETRPS1       No, skip message call             @TB86196\n         LTR   5,5           SEND?                             @SC86224\n         BNZ   SETKSIZH      Yes, can't set it long            @SC86224\n         LR    6,0           Save value across WTEXT           @SC86316\n         WTEXT 'Type 0 long packets specified'                 @SC86202\n         LR    0,6                                             @SC86316\nSETRPS1  DS    0H                                              @TB86196\n         BCT   5,RTRN0       Done if recv                      @SC86295\n         TOCHR 0,,DEFPARM+0          Set default for SPAR\n         B     RTRN0                                           @SC86295\n*\nSETKSIZH PTEXT 'Operand must be 20-94 for SEND' KMIN-KMAX      @SC86295\n         B     SUBERR                                          @SC86295\n*\nSETETOA  LA    3,ETOA        Address of table to change        @SC86265\n         B     SETTET2                                         @SC87117\nSETTET   LA    3,TETOA       Address of table to change        @SC87117\nSETTET2  LA    2,ETOAD       Address of original               @SC87117\nSETTR0   ICM   0,15,LEN      Any more tokens?                  @SC87117\n         BP    SETTR1        Yes, must be numeric              @SC87117\n         MVC   0(256,3),0(2) No, just reset table              @SC87117\n         B     RTRN0                                           @SC87117\nSETTR1   LA    8,255         Limit for each                    @SC87117\n         BAL   2,SETNUM      Get a number for table offset     @SC86295\n         AR    3,0           Save table offset here            @SC86295\n         BAL   2,SETNUM      Get a number for value            @SC86295\n         STC   0,0(3)        Change value                      @SC86295\n         B     RTRN0         All done                          @SC86295\n*\nSETATOE  LA    3,ATOE        Adr of table to edit              @SC86265\n         B     SETTAT2                                         @SC87117\nSETTAT   LA    3,TATOE       Address of table to change        @SC87117\nSETTAT2  LA    2,ATOED       Address of original               @SC87117\n         B     SETTR0                Use common routine\n*\n*\n* R6 points to token, R7 has length-1.  Convert to binary in R0.\n* Return via R2\nSETNUM2  LR    2,14          Save return                       @SC87166\nSETNUM   NTOKN H=SETNUMH,N=SETNUMH                             @SC86295\n         LA    7,1(7)        Length                            @SC86316\n         BAL   14,GETNUM                                       @SC86316\n          B    SETNUMH                                         @SC86316\n         CLR   0,8           Within limit?                     @SC86295\n         BH    SETNUMH       Too big                           @SC87166\n         CLI   0(2),X'47'    Entered at SETNUM2?               @SC87166\n         BNER  2             No, return immediately            @SC87166\n         LR    14,2          Ptr to caller                     @SC87166\n         S     14,F8         Back up to the LOAD instr         @SC87166\n         MVC   SETXI,0(14)   Copy and modify op instr          @SC87166\n         NC    SETXI(2),=X'F60F'                               @SC87166\n         CLI   SETXI,X'B6'   Was is ICM?                       @SC87166\n         BNE   *+8           No, ok                            @SC87166\n         MVI   SETXI,X'BE'   Yes, make into STCM               @SC87166\n         EX    0,SETXI       Store value                       @SC87166\n         BR    2             Return                            @SC87166\n*\nSETNUMH  LA    15,CMD+16                                       @SC86295\nSETMAXH  MVC   CMD(26),=C'Operand must be of length '          @SC86295\n         MVI   0(15),C'<'                                      @SC86295\n         LA    15,1(15)                                        @SC86295\n         LR    4,8                                             @SC86345\n         A     4,F1                                            @SC86345\n         BAL   2,EDDEC       Put limit into message            @SC86295\n         LR    4,15          End                               @SC86295\n         LA    3,CMD                                           @SC86295\n         SR    4,3                                             @SC86295\n         B     SUBERR                                          @SC86295\n*\nSETFSTR  LR    1,9           Save length                       @SC87166\n         NTOKN N=SETFST0,H=SETSTRH                             @SC87166\n         LA    7,1(7)                                          @SC86295\n         CR    7,1           Name too long?                    @SC86295\n         BNH   SETFST1       No, do it                         @SC86295\nSETSTRH  LR    8,1           Copy max length                   @SC86295\n         LA    15,CMD+26     Base message size                 @SC86295\n         B     SETMAXH                                         @SC86295\nSETFST0  SR    7,7           Empty string                      @SC86295\nSETFST1  ICM   7,8,BLANK     Set for blank fill                @SC86295\n         LR    9,1                                             @SC87166\n         MVCL  8,6           Copy name                         @SC87166\n         BR    2                                               @SC86295\n         TITLE 'SHOW Routine - performs SHOW command options'\n* Display current values in STORAG.\n* Entry: SCANPTR string has option\n* Exit: R15=0 if ok, 1 if help needed, 2 if bad parameter name\n*       ERRNUM unchanged\nSHOW     ENTER ALT                                             @SC86133\n         LA    0,CMD                                           @SC86227\n         ST    0,SHOPTR      Initialize output ptr             @SC86227\n         MVI   SETXI,X'91'   TM instruction                    @SC87166\n         NTOKN N=SHOALL                                        @SC86133\n         SCAN  SHOCMDS,RTRN1                                   @SC86295\nSHOBAD   B     RTRN2         Invalid operand                   @SC86295\n*\nSETCMDKW DS    0H                                              @SC87166\n         KW    'ATOE',SETATOE,MIN=4                            @SC87166\n         KW    'ETOA',SETETOA,MIN=4                            @SC87166\n         KW    'FILE-TYPE',SHOFILT,MIN=5                       @SC87166\n         KW    'TATOE',SETTAT,MIN=5                            @SC87166\n         KW    'TETOA',SETTET,MIN=5                            @SC87166\n*\nSHOCMDS  KW    'RECFM',SHORFM,MIN=4                            @SC87012\n         KW    'LRECL',SHOLR                                   @SC86133\nSHOCMDKW EQU   *             Must match order of code\n         KW    'TABS-EXPAND',SHOTABS                           @SC86133\n         KW    'EOF',SHOEOF,MIN=3                              @SC86133\n         KW    'DEBUG',SHODEB                                  @SC86133\n         KW    'BLOCK-CHECK',SHOBLK                            @SC86133\n         KW    '8-BIT-QUOTE',SHO8B                             @SC87008\n         KW    'PROMPT',SHOPRP,MIN=2                           @SC87268\n         KW    'LINE',SHOLIN,MIN=3                             @SC87166\n         KW    'CONTROLLER',SHOTRM,MIN=3                       @SC87268\n         KW    'HANDSHAKE',SHOHND                              @SC87274\n         KW    'PARITY',SHOPRTY                                @SC86316\n         KW    'WARNING',SHOWARN                               @SC86133\n         KW    'SYSCMD',SHOSYS,MIN=2                           @SC86295\n         KW    'TTABLE',SHOTTB,MIN=2                           @SC87117\n         KW    'DELAY',SHODLY,MIN=3                            @SC86164\n         KW    'APPEND',SHOAPP,MIN=3                           @SC86203\n         KW    'INCOMPLETE',SHOINC,MIN=3                       @SC86225\n         KW    'TEST',SHOTST,MIN=4                             @SC87166\n        KSETKW ,             Specific parameters               @SC87166\n         KW    'FILE',SHOFIL                                   @SC86295\n         KW    'MARGIN',SHOMRG                                 @SC87253\n         KW    'FOREIGN',SHOFOR,MIN=3                          @HF86223\n         KW    'RETRY',SHORETR,MIN=3                           @SC86345\n         KW    'TAKE',SHOTAK,MIN=3                             @SC86171\n         KW    'RECEIVE',SHORECV,MIN=3                         @SC86133\n         KW    'SEND',SHOSEND,MIN=3                            @SC86224\n         KW    ,                                               @SC86133\n*\nSHOALL   OI    SFLG,ALLF     Do all                            @SC86295\n         LA    1,SHOCMDKW    Start at beginning                @SC86133\n*\n*          Each routine begins with R1-> keyword item          @SC86133\nSHOTABS  CLI   SETXI,X'97'   SET or SHOW?                      @SC87166\n         BE    SETTABS                                         @SC87166\n         BAL   14,SHOOO      On or off                         @SC86133\n          OI   FL2,TABS                                        @SC87166\nSHOTABSZ LH    5,TABCNT      Count of tabs                     @SC86355\n         LA    3,TABTBL      Ptr to table of tabs              @SC86355\n         BAL   14,SHOLIST    Display list of tab stops, if any @SC86355\n          NOP  0                                               @SC87166\nSHOEOF   BAL   14,SHOOO      On or off                         @SC86133\n          OI   FL2,EOFZ                                        @SC87166\nSHODEB   CLI   SETXI,X'97'   SET or SHOW?                      @SC87166\n         BE    SETDEB                                          @SC87166\n         LA    4,SETCMDOO                                      @SC86345\n         CLC   DBGTYP,F0     EBCDIC log?                       @SC86345\n         BNE   *+8           Yes, it's ON or OFF               @SC87166\n         LA    4,SETROFF     No, it's RAW                      @SC87166\n         BAL   14,SHOXY                                        @SC86345\n          OI   FL1,DEBUG                                       @SC87166\nSHOBLK   SR    4,4                                             @SC86133\n         LA    8,3           Limit                             @SC87166\n         IC    4,BCTC        Get block check type              @SC86133\n         BAL   14,SHONUM     Print it                          @SC86133\n          B    RTRN0         OK                                @SC87166\nSHO8B    LA    8,EBQC                                          @SC87008\n         BAL   14,SHOCHRA    Display ASCII char                @SC87008\n          B    SET8B                                           @SC87166\nSHOPRP   LA    8,KPRPL       Ptr to prompt                     @SC87268\n         LA    4,20          Max length                        @SC87268\n         BAL   14,SHOSTR                                       @SC87268\n          B    SETPRP        Do any system-dependent setup     @SC87351\nSHOLIN   LA    8,TRMLIN                                        @SC87166\n         LA    9,L'TRMLIN                                      @SC87166\n         BAL   14,SHOCHRN                                      @SC87166\n          B    SETLIN                                          @SC87166\nSHOTRM   LA    4,SETTRKW                                       @SC87166\n         LA    6,TRMTP                                         @SC87166\n         BAL   14,SHOBRV     Get full name from abbrev.        @SC87166\n          NOP  0                                               @SC87166\nSHOHND   SR    4,4                                             @SC87274\n         IC    4,S1HND                                         @SC87274\n         BAL   14,SHOCTL     Print it                          @SC87274\n          B    RTRN0                                           @SC87274\nSHOPRTY  LA    4,SETPAR                                        @SC87166\n         BAL   14,SHOXY                                        @SC86316\n          OI   FL2,DAT8                                        @SC87166\nSHOWARN  BAL   14,SHOOO      On or off                         @SC86133\n          OI   FL1,REN                                         @SC87166\nSHOSYS   BAL   14,SHOOO      On or off                         @SC86295\n          OI   FL2,PASS                                        @SC87166\nSHOTTB   BAL   14,SHOOO      On or off                         @SC87117\n          OI   FL4,TTAB                                        @SC87166\nSHODLY   L     4,LCLDLY                                        @SC86164\n         BAL   14,SHONBIG    Print it                          @SC86164\n          B    RTRN0                                           @SC87166\nSHOAPP   BAL   14,SHOOO      On or off                         @SC86203\n          OI   FL3,APPN                                        @SC87166\nSHOINC   LA    4,SETDSC      List of possibles                 @SC87166\n         BAL   14,SHOXY                                        @SC86225\n          OI   FL5,KEEP                                        @SC87166\nSHOTST   BAL   14,SHOOO                                        @SC87166\n          OI   FL1,TSTF      Turn on                           @SC87166\n*\n         KSHOPRC ,           System-specific options           @SC86355\n*\nSHOFIL   LA    4,SHOFILKW    Ptr to sublist                    @SC87166\n         CLI   SETXI,X'97'   SET or SHOW   **COMPAT**          @SC87166\n         BNE   *+8           SHOW          **COMPAT**          @SC87166\n         LA    4,SETFKW      SET           **COMPAT**          @SC87166\n         BAL   14,SHOGRP                                       @SC86295\nSHOMRG   LA    4,SHOMRGKW    Ptr to sublist                    @SC87253\n         BAL   14,SHOGRP                                       @SC87253\nSHOFOR   LA    4,SHOFORKW    Ptr to sublist                    @SC87166\n         BAL   14,SHOGRP                                       @SC86224\nSHORETR  LA    4,SHORETKW    Ptr to sublist                    @SC87166\n         BAL   14,SHOGRP                                       @SC86345\nSHOTAK   LA    4,SHOTAKKW    Ptr to sublist                    @SC87166\n         BAL   14,SHOGRP                                       @SC86224\nSHORECV  SR    5,5           Index for recv                    @SC86224\n         BAL   14,SHOGRPR                                      @SC86224\nSHOSEND  LA    5,1           Index for send                    @SC86224\n         LA    14,SHOZZW                                       @SC87166\nSHOGRPR  LA    4,SHORECKW    Ptr to common sublist             @SC87166\nSHOGRP   LR    2,14          Save return adr                   @SC87166\n         STM   1,4,SHOTMP    Save top level ptr, return adr    @SC87166\nSETSCN   LR    2,14          Copy return adr (again)           @SC87166\n         TM    SFLG,ALLF     Doing all?                        @SC86295\n         BO    SHORAL2       Yes                               @SC86133\n         NTOKN N=SHORALL                                       @SC86133\n         LR    9,2           ???                               @SC87166\n         SCAN  (4),RTRN1                                       @SC87166\nSHOHLP   HELP  (4),RTRN1                                       @SC87166\n*\nSHOFILKW KW    'TYPE',SHOFILT                                  @SC86295\n         KW    'LRECL',SHOLR                                   @SC86133\n        KFILKW                                                 @SC87166\n         KW    ,                                               @SC87012\n*\nSHOMRGKW KW    'LEFT',SHOLFT                                   @SC87253\n         KW    'RIGHT',SHORGT                                  @SC87253\n         KW    ,                                               @SC87253\n*\nSHORECKW KW    'END-OF-LINE',SHOEOL                            @SC86133\n         KW    'END-OF-PACKET',SHOEOL                          @SC86133\n         KW    'EOL',SHOEOL,MIN=3                              @SC86133\nSHOPSKW  KW    'PACKET-SIZE',SHOSIZ                            @SC86133\n         KW    'PAD-CHAR',SHOPADC,MIN=5                        @SC86164\n         KW    'PADDING',SHOPADN,MIN=3                         @SC86164\n         KW    'QUOTE',SHOQUO                                  @SC86133\n         KW    'START-OF-PACKET',SHOMARK                       @SC86133\n         KW    'TIMEOUT',SHOTIMO                               @SC86164\n         KW    ,                                               @SC86133\n*\nSHOTAKKW KW    'ECHO',SHOECO,MIN=3                             @SC86171\n         KW    'ERROR-ACTION',SHOHLT,MIN=3                     @SC86171\n         KW    ,                                               @SC86171\n*\nSHOFORKW KW    'PREFIX',SHOPFX                                 @HF86223\n         KW    'SUFFIX',SHOSFX                                 @HF86223\n         KW    ,                                               @HF86223\n*\nSHORETKW KW    'INITIAL',SHORETI                               @SC86345\n         KW    'PACKETS',SHORETN                               @SC86345\n         KW    ,                                               @SC86345\n*\nSHORALL  OI    SFLG,ALLF+ASRF Do just all send/recv items      @SC86295\n         LA    14,SHOHLP     Just help if SET                  @SC87166\nSHORAL2  BAL   2,SHOKW       Get ptr to kw send or receive     @SC86133\n         BER   14            Help for SET                      @SC87166\n         L     15,SHOPTR     Output line buffer ptr            @SC86227\n         LA    1,CMD                                           @SC86227\n         SR    15,1          Anything there?                   @SC86227\n         BNP   SHORAL3       No                                @SC86227\n         ST    1,SHOPTR      Yes, reset ptr                    @SC86227\n         WTEXT (1),(15)      And write it out                  @SC86227\nSHORAL3  DS    0H                                              @SC86227\n         MVC   CMD(2),=C'  '                                   @SC86133\n         MVC   CMD+2(7),0(6) Copy send or receive              @SC86133\n         LA    0,CMD+2(7)    Point past category               @SC86316\n         ST    0,SHOPTR      Save output ptr                   @SC86316\n         L     1,SHOTMP+12   Start at beginning                @SC87166\n         ICM   14,7,0(1)     Ptr to 1st routine                @SC86171\n         BR    14                                              @SC86171\n*\nSETFT    ICM   15,15,LEN     SET F T ...   **COMPAT**          @SC87166\n         BNP   SETFILET      Nothing after: 'SET FILE-TYPE T'  @SC87166\n*\nSHOFILT  LA    4,SETFIL      List of possibles                 @SC86151\n         LA    6,TYPFIL                                        @SC87166\n         BAL   14,SHOBRV     Get full name from abbrev.        @SC87166\n          NOP  0                                               @SC87166\nSHOLR    SR    4,4                                             @SC86133\n         L     8,MAXLRC      Upper limit                       @SC87166\n         ICM   4,3,LRECL                                       @SC86133\n         BAL   14,SHONUM     Print it                          @SC86133\n          B    SETLR                                           @SC87166\n         KFILSHO ,                                             @SC87012\n         B     SHOGRPZ                                         @SC86295\n*\nSHOLFT   L     4,LMARG                                         @SC87253\n         BAL   14,SHONBIG    Print it                          @SC87253\n          B    RTRN0                                           @SC87253\nSHORGT   L     4,RMARG                                         @SC87253\n         BAL   14,SHONBIG    Print it                          @SC87253\n          B    RTRN0                                           @SC87253\n         B     SHOGRPZ                                         @SC87253\n*\nSHOECO   BAL   14,SHOOO      On or off                         @SC86171\n          OI   FL2,ECHO                                        @SC87166\nSHOHLT   LA    4,SETSWT      List of possibles                 @SC87166\n         BAL   14,SHOXY                                        @SC86171\n          OI   FL5,TKHLT                                       @SC87166\n         B     SHOGRPZ                                         @SC86171\n*\nSHOPFX   LA    8,PREFIX      Point to prefix                   @HF86223\n         LA    4,FORMAXL     Max length                        @SC87268\n         BAL   14,SHOSTR     Print message                     @SC86224\n          B    RTRN0                                           @SC87268\nSHOSFX   LA    8,SUFFIX      Point to suffix                   @HF86223\n         LA    4,FORMAXL     Max length                        @SC87268\n         BAL   14,SHOSTR     Print message                     @SC86224\n          B    RTRN0                                           @SC87268\n         B     SHOGRPZ                                         @HF86223\n*\nSHORETI  L     4,MAXTNT      Initial retry limit               @SC86345\n         BAL   14,SHONBIG    Print it                          @SC87166\n          B    RTRN0                                           @SC87166\nSHORETN  L     4,MAXTRY      Normal retry limit                @SC86345\n         BAL   14,SHONBIG    Print it                          @SC87166\n          B    RTRN0                                           @SC87166\n         B     SHOGRPZ                                         @SC86345\n*\nSHOEOL   SR    4,4                                             @SC86133\n         IC    4,REOL(5)                                       @SC86133\n         BAL   14,SHOCTL     Print it                          @SC87166\n          B    SETEOL                                          @SC87166\n         LA    1,SHOPSKW     Skip aliases                      @SC86133\nSHOSIZ   L     8,=A(KMAXE)   Limit                             @SC87166\n         LR    3,5                                             @SC87166\n         SLA   3,2           Get fullword index                @SC87166\n         L     4,RPSIZ(3)                                      @SC87166\n         BAL   14,SHONUM     Print number                      @SC86133\n          B    SETSIZ                                          @SC87166\nSHOPADC  SR    4,4                                             @SC86164\n         IC    4,RPADC(5)    Pad character                     @SC86164\n         BAL   14,SHOCTL                                       @SC87166\n          B    SETPADC                                         @SC87166\nSHOPADN  SR    4,4                                             @SC86164\n         LA    8,KMAX        Same upper limit as packets       @SC87166\n         IC    4,RPADN(5)    Pad count                         @SC86164\n         BAL   14,SHONUM                                       @SC86164\n          B    SETPADN                                         @SC87166\nSHOQUO   LA    8,RCTLQ(5)                                      @SC86133\n         BAL   14,SHOCHRA    Print as ascii                    @SC86133\n          B    SETRCTLQ                                        @SC87166\nSHOMARK  SR    4,4                                             @SC86133\n         IC    4,RMARK(5)                                      @SC86133\n         BAL   14,SHOCTL                                       @SC87166\n          B    RTRN0                                           @SC87166\nSHOTIMO  SR    4,4                                             @SC86164\n         IC    4,RTIMO(5)    Timeout limit                     @SC86164\n         BAL   14,SHONBIG                                      @SC87166\n          B    SETTIMO                                         @SC87166\n*\nSHOGRPZ  TM    SFLG,ASRF     Doing just receive/send?          @SC86295\n         BO    SHOZZW        Yes, write last line              @SC86227\n         LM    1,2,SHOTMP    Get top level ptr, return adr     @SC87166\n         LR    14,2                                            @SC86224\n         BAL   2,SHOKW       Get ptr to name                   @SC86133\n         LA    1,0(7,6)      Advance to next                   @SC86133\n         BR    14                                              @SC86224\n*\nSHOLIST  LTR   5,5           Length of list                    @SC86355\n         BZ    SHOZZ         Empty, we're done                 @SC86355\n         LA    0,CMD+75      Set right margin                  @SC86355\n         MVI   0(15),C' '    Start with blank                  @SC86355\n         B     *+8                                             @SC86355\nSHOLSLP  MVI   0(15),C','    Insert delimiter                  @SC86355\n         LA    15,1(15)                                        @SC86355\n         CR    15,0          Any room?                         @SC86355\n         BL    SHOLSED       Yes, ok                           @SC86355\n         LA    1,CMD         No, dump line                     @SC86355\n         SR    15,1                                            @SC86355\n         WTEXT (1),(15)                                        @SC86355\n         MVI   CMD,C' '                                        @SC86355\n         LA    15,CMD+1      Start indented                    @SC86355\n         LA    0,CMD+75                                        @SC86355\nSHOLSED  SR    4,4                                             @SC86355\n         IC    4,0(3)        Get 1-byte item                   @SC86355\n         BAL   2,EDDEC       Format it                         @SC86355\n         LA    3,1(3)        Point to next item in list        @SC86355\n         BCT   5,SHOLSLP                                       @SC86355\n         B     SHOZZ         Finished list                     @SC86355\n*\nSHOKW    MVC   SETXI+1(3),1(14) Copy instr operands            @SC87166\n         CLI   SETXI,X'97'   'OI' if SET, but 'TM' if SHOW     @SC87166\n         LA    6,5(1)        Ptr to name                       @SC86133\n         LA    7,0           Preserve CC                       @SC86133\n         IC    7,3(1)        Length (assumes high bytes clear) @SC86133\n         LA    7,1(7)                                          @SC86133\n         BR    2                                               @SC86133\n*\nSHOCTL   LA    8,ABL-1       Max control character (ASCII)     @SC87166\n         TM    FL1,TSTF                                        @SC86295\n         BZ    SHONUM                                          @SC87166\nSHONBIG  L     8,=F'999999998' Almost anything                 @SC87166\nSHONUM   BAL   2,SHOKW                                         @SC86133\n         BE    SETNUM2       Get value for SET                 @SC87166\n         BAL   2,SHONAM      Copy option name                  @SC86209\n         BAL   2,EDDEC       Edit (R4) as decimal              @SC86295\n         B     SHOZZ                                           @SC86133\n*\nSHOCHRA  MVC   TMP,0(8)      Copy ascii char                   @SC86133\n         PTEXT SETCMDOO+5,3,AREG=8,LREG=9                      @SC87008\n         TM    TMP,X'60'     Is it printable?                  @SC87008\n         BZ    SHOCHRN       No, say it's OFF                  @SC87008\n         TR    TMP,ATOE      Convert to ebcdic                 @SC86133\n         LA    8,TMP                                           @SC86133\n         B     SHOCHR                                          @SC86224\nSHOSTR   BAL   2,SHOKW       Get ptrs to name                  @SC87268\n         BE    SETSTR        Branch to dispatch for SET        @SC87268\n         SR    9,9           Variable-length string            @SC86224\n         IC    9,0(8)        Get length                        @SC86224\n         LA    8,1(8)        Ptr to text                       @SC86224\n         B     SHOCHRD                                         @SC87268\nSHOCHR   LA    9,1           Length is 1                       @SC86224\nSHOCHRN  BAL   2,SHOKW       Get ptrs to name                  @SC86224\n         BER   14            Branch to dispatch for SET        @SC87166\nSHOCHRD  BAL   2,SHONAM      Copy option name                  @SC87268\n         BAL   2,EDCHAR      Append string at (R8)             @SC87034\n         B     SHOZZ         Print message                     @SC87034\n*\nSHOBRV   CLI   SETXI,X'97'   SET or SHOW?                      @SC87166\n         BE    SETSCN                                          @SC87166\n         LR    9,14          Save return adr                   @SC87166\n         LR    8,1           Save list ptr                     @SC87166\n         LR    1,4           Use list of suboptions            @SC87166\n         SR    7,7           Assume 1-char abbrev              @SC87166\n         ICM   7,8,*         Indicate just search              @SC87166\n         BAL   14,SCAN                                         @SC87166\n          CR   0,0           These two skipped                 @SC87166\n          LR   4,1            if bad value                     @SC87166\n         LR    1,8           Retrieve ptrs                     @SC87166\n         LR    14,9                                            @SC87166\n         B     SHOXY         Display it                        @SC87166\n*\nSHOOO    LA    4,SETOOKW     Ptr to on/off                     @SC87166\nSHOXY    BAL   2,SHOKW       Set up name                       @SC86133\n         BE    SETSCN        Parse value for SET               @SC87166\n         LA    8,5(4)        Value if off                      @SC86133\n         SR    9,9                                             @SC87166\n         IC    9,3(4)        Length of name                    @SC86133\n         EX    0,SETXI       Test bit                          @SC87166\n         BZ    *+12                                            @SC86133\n         LA    8,6(9,8)      Flag is on, advance               @SC86133\n         IC    9,9(9,4)                                        @SC86133\n         LA    9,1(9)                                          @SC86133\nSHOXL    BAL   2,SHONAM      Copy option name                  @SC86209\n         BAL   2,EDCHAR      Append string at (R8)             @SC86295\n         SR    15,9          Back up to string                 @SC87034\n         TR    0(30,15),LOCASE And make it lower case          @SC87034\n         AR    15,9          Resume                            @SC87034\nSHOZZ    ST    15,SHOPTR     Save end address                  @SC86227\n         LA    1,0(7,6)      Advance to next                   @SC86345\n         LA    14,4(14)      Skip over SET branch              @SC87166\n         CLM   14,7,=AL3(SHOTABSZ)                             @SC86355\n         BER   14            Special treatment for tabs        @SC86355\n         TM    SFLG,ALLF     Doing all?                        @SC86295\n         BOR   14            And resume if yes                 @SC86227\nSHOZZW   LA    1,CMD         No, get address of buffer         @SC86227\n         SR    15,1          Get length                        @SC86227\n         WTEXT (1),(15)      Write it out                      @SC86227\n         B     RTRN0         That's all                        @SC86295\n*\nSHONAM   LA    15,CMD        Output message buffer             @SC86209\n         L     0,SHOPTR      End of prev. msg                  @SC86227\n         CR    0,15          Empty?                            @SC86227\n         BE    SHON1         Yes, start here                   @SC86227\n         LA    1,CMD+23      2nd column                        @SC86227\n         SR    1,0           Far enough?                       @SC86227\n         BP    SHONF         Yes, blank fill                   @SC86227\n         AH    1,=H'23'      Try 3rd column                    @SC86227\n         BP    SHONF         OK                                @SC86227\n         SR    0,15          No room, dump line                @SC86227\n         WTEXT (15),(0)                                        @SC86227\n         LA    15,CMD        And start over                    @SC86227\n         B     SHON1                                           @SC86227\nSHONF    SR    15,15                                           @SC86295\n         ICM   15,8,BLANK                                      @SC86295\n         MVCL  0,14          Fill with blanks to next column   @SC86227\n         LR    15,0          New output ptr                    @SC86227\nSHON1    MVC   0(40,15),0(6) Copy option name                  @SC87034\n         TR    1(39,15),LOCASE And beautify it                 @SC87034\n         AR    15,7          Space over it                     @SC86209\n         MVC   0(4,15),=C' is '                                @SC87034\n         LA    15,4(15)      Space over 'is'                   @SC86209\n         BR    2                                               @SC86209\n*\n         LOCALS ,                                              @SC86295\nSHOTMP   DS    4F                                              @SC87166\nSHOPTR   DS    A             More temporaries                  @SC86227\nSETXI    DS    F             XI executable instr               @SC86273\nSFLG     DS    X             Local flags                       @SC86295\nALLF     EQU   X'80'         Doing SHOW ALL                    @SC86295\nASRF     EQU   X'40'         Doing SHOW REC or SHOW SEND       @SC86295\nSHOW     EXIT\n         TITLE 'STATUS Routine - display latest error, etc.'   @SC86295\n* Exit: R15=0.  ERRNUM unchanged.\nSTATUS   ENTER                                                 @SC86156\n         CLI   ERRNUM,ERRNFT Actual error?                     @BS86090\n         BNH   STAMSG        No                                @BS86090\n         CLI   ERRNUM,ERRKCE Last command invalid?             @SC86295\n         BE    STAMSG        Yes, do not show last file        @HF86232\n         CLI   FILNAM,0      File name defined?                @BS86090\n         BE    STAMSG        No                                @BS86090\n         MVC   CMD(16),=CL16'Last file used:'                  @BS86090\n         LA    7,CMD+16      Fill in name                      @BS86090\n         LA    1,FILNAM                                        @SC86295\n         BAL   2,STAFSP      Copy name and print               @SC86295\nSTAMSG   ICM   4,15,NSENT    Number of files sent              @SC86295\n         BZ    STASNTZ                                         @SC86295\n         LA    15,CMD        Start of message buffer           @SC86295\n         BAL   2,EDDEC       Format number as decimal          @SC86295\n         LA    0,17(15)      Tentative end of message          @SC86295\n         MVC   0(17,15),=C' files sent last.'                  @SC86295\n         BCT   4,STAPLR                                        @SC86295\n         MVC   5(11,15),6(15) Only one file, make singular     @SC86295\n         BCTR  0,0                                             @SC86295\nSTAPLR   BAL   2,STAPMSG     Show message                      @SC86295\nSTASNTZ  ICM   0,15,PAKCNT   Any transfer statistics?          @SC86295\n         BZ    STADATR       No, skip it                       @SC86316\n         ICM   6,7,=C'pkt'                                     @SC86295\n         BAL   3,STADPR      Format msg                        @SC86295\n         ICM   0,15,SECTOT   Any duration?                     @SC86295\n         BZ    STADATR       No, must have been very short     @SC86316\n         ICM   6,7,=C'sec'                                     @SC86295\n         BAL   3,STADPR      Format msg                        @SC86295\n         MVC   CMD(16),=C'Disk bytes/sec: '                    @SC86295\n         LA    15,CMD+16                                       @SC86295\n         L     0,SECTOT                                        @SC86295\n         LM    4,5,DSKTOT                                      @SC86295\n         BAL   2,STAVB       Format ratio                      @SC86295\n         BAL   2,STAPM15     Print line                        @SC86295\nSTADATR  ICM   4,15,RTRCNT   Any retries?                      @SC86316\n         BZ    STADATZ       No                                @SC86316\n         LA    15,CMD        Yes, issue message                @SC86316\n         BAL   2,EDDEC                                         @SC86316\n         MVC   0(20,15),=C' repeat packets sent'               @SC86316\n         LA    15,20(15)                                       @SC86316\n         BAL   2,STAPM15     Print line                        @SC86316\n         L     1,SECTOT                                        @SC86345\n         BAL   9,OPTPKT      Get best packet size              @SC86345\n         LTR   4,15          Valid?                            @SC86345\n         BNP   STADATZ       No, skip it                       @SC86345\n         MVC   CMD(23),=C'Optimumum packet size: '             @SC86345\n         LA    15,CMD+23                                       @SC86345\n         BAL   2,EDDEC       Format it                         @SC86345\n         BAL   2,STAPM15                                       @SC86345\nSTADATZ  ICM   4,15,RECTRC   Any truncated records?            @SC87268\n         BZ    STATRCZ       No, ok                            @SC87268\n         LA    15,CMD        Yes, issue message                @SC87268\n         BAL   2,EDDEC                                         @SC87268\n         MVC   0(18,15),=C' records truncated'                 @SC87268\n         LA    15,18(15)                                       @SC87268\n         BAL   2,STAPM15                                       @SC87268\nSTATRCZ  DS    0H                                              @SC87268\n         SR    5,5                                             @SC86156\n         IC    5,ERRNUM      Get offset into error table       @SC86156\n         SLL   5,2           Get fullword index                @SC86156\n         A     5,AERRTAB     Pointer address                   @SC86156\n         L     1,0(5)        Msg ptr                           @SC86156\n         SR    0,0                                             @SC86268\n         SLDL  0,8           Msg length                        @SC86316\n         SRL   1,8           Realign adr                       @SC86316\n         WTEXT (1),(0)       Print message                     @SC86268\n         CLI   ERRNUM,ERRTRC Cancelled?                        @SC86316\n         BNE   STACKAB       No                                @SC86316\n         SR    1,1                                             @SC86316\n         CLI   REASON,15     Within table?                     @SC86316\n         BH    *+8           No, must be new                   @SC86316\n         IC    1,REASON      Ok, get the complaint code        @SC86316\n         SLL   1,3           Index into table                  @SC86316\n         LA    1,STACNTB(1)                                    @SC86316\n         LA    0,8           Length of items                   @SC86316\n         WTEXT (1),(0)                                         @SC86316\nSTACKAB  CLI   ERRNUM,ERRABO Micro aborted?                    @BS86090\n         BE    *+12          Yes                               @SC87338\n         CLI   ERRNUM,ERRDIE No, disk I/O error?               @SC87338\n         BNE   STARET        No                                @BS86090\n         ICM   0,15,EMSGL    Yes, any message?                 @SC86268\n         BZ    STARET        No                                @BS86090\n         L     1,EMSGP                                         @BS86090\n         WTEXT (1),(0)       Yes, show it                      @SC86268\nSTARET   RET                                                   @SC86295\n*\nSTADPR   MVC   CMD(13),=C'Bytes/pkt: S='                       @SC86295\n         LA    15,CMD+13                                       @SC86295\n         STCM  6,7,CMD+6                                       @SC86295\n         LM    4,5,TOUTOT                                      @SC86295\n         BAL   2,STAVB       Format ratio                      @SC86295\n         MVC   0(3,15),=C' R='                                 @SC86295\n         LA    15,3(15)                                        @SC86295\n         LM    4,5,TINTOT                                      @SC86295\n         BAL   2,STAVB       Format ratio                      @SC86295\n         MVC   0(11,15),=C' requiring '                        @SC86295\n         LA    15,11(15)                                       @SC86295\n         LR    4,0                                             @SC86295\n         BAL   2,EDDEC       Format number of units            @SC86295\n         MVI   0(15),C' '                                      @SC86295\n         STCM  6,7,1(15)                                       @SC86295\n         LA    0,4(15)       End of msg                        @SC86295\n         BAL   2,STAPMSG     Print it                          @SC86295\n         BR    3                                               @SC86295\n*\nSTAVB    DR    4,0           Get ratio                         @SC86295\n         AR    4,4                                             @SC86295\n         CR    4,0                                             @SC86295\n         BL    *+8                                             @SC86295\n         A     5,F1          Round up                          @SC86295\n         LR    4,5                                             @SC86295\n         B     EDDEC         Format it                         @SC86295\n*\n* Table of reasons for rejecting Attribute packet              @SC86316\nSTACNTB  DC    C'-Unknown-Length -Type   -Date   '             @SC86316\n         DC    C'-Creator-Account-Area   -Passwrd'             @SC86316\n         DC    C'-Blksize-Access -Coding -Disp   '             @SC86316\n         DC    C'-Protect-Protect-Origin -Format '             @SC86316\n         TITLE 'DUMP Routine - print translation table'\n* Display current values in STORAG.\n* Entry: SCANPTR string has option\n* Exit: R15=0 if ok, R15=1 if error or help needed. ERRNUM unchanged.\nDUMP     ENTER ALT                                             @SC86156\n         NTOKN N=DUMPH       A or E?                           @SC86156\n         SCAN  DUMPKW,RTRN1                                    @SC86295\nDUMPH    HELP  DUMPKW,RTRN1                                    @SC86295\n*\nDUMPKW   KW    'ATOE',DUMPA                                    @SC86156\n         KW    'ETOA',DUMPE                                    @SC86156\n         KW    'NAMES',DMPN                                    @SC86295\n         KW    'TATOE',DUMPTA,MIN=2                            @SC87117\n         KW    'TETOA',DUMPTE,MIN=2                            @SC87117\n         KW    ,                                               @SC86156\n*\nDMPN     L     5,TSENT       Table ptr                         @SC86295\n         ICM   6,15,NSENT    Number of files sent              @SC86295\n         BNZ   DMPNL                                           @SC86295\n         WTEXT 'No files sent'                                 @SC86295\n         B     RTRN0                                           @SC86295\nDMPNL    LA    7,CMD         Start of message buffer           @SC86295\n         LR    1,5                                             @SC86295\n         BAL   2,STAFSP      Show filespec                     @SC86295\n         LA    5,LFID(5)     Advance ptr to next               @SC86295\n         BCT   6,DMPNL                                         @SC86295\n         B     RTRN0                                           @SC86295\n*\nDUMPA    LA    3,ATOE                                          @SC86156\n         B     DUMPAE                                          @SC86156\nDUMPE    LA    3,ETOA                                          @SC86156\n         B     DUMPAE                                          @SC87117\nDUMPTA   LA    3,TATOE                                         @SC87117\n         B     DUMPAE                                          @SC87117\nDUMPTE   LA    3,TETOA                                         @SC87117\nDUMPAE   LA    4,4           Bytes per word                    @SC86156\n         LA    5,15(3)       End of 1st line                   @SC86156\n         LA    6,16          Bytes per line                    @SC86156\n         LA    7,256(3)      2 before end of table             @SC86156\nDUMPLL   LA    2,CMD         Output buffer                     @SC86156\nDUMPLW   UNPK  0(9,2),0(5,3) Convert a word                    @SC86156\n         TR    0(8,2),TRHEX  Hex notation                      @SC86156\n         MVI   8(2),C' '     Leave a space between words       @SC86156\n         LA    2,9(2)                                          @SC86156\n         BXLE  3,4,DUMPLW    Do next word                      @SC86156\n         LA    1,CMD         Done line of 4                    @SC86156\n         LA    0,35                                            @SC86268\n         WTEXT (1),(0)       Print it                          @SC86268\n         BXLE  5,6,DUMPLL    Done line, go to next             @SC86156\n         B     RTRN0\n         TITLE 'GIVTAB Routine - save translation table'\n* Save current values in STORAG into a TAKE file on disk\n* Entry: SCANPTR string has option\n* Exit: R15=0 if ok, R15=1 if error or help needed. ERRNUM unchanged.\nGIVTAB   ENTER ALT                                             @SC87117\n         NTOKN N=GIVH       A or E?                            @SC87117\n         SCAN  GIVKW,RTRN1                                     @SC87117\nGIVH     HELP  GIVKW,RTRN1                                     @SC87117\n*\nGIVKW    KW    'ATOE',GIVA                                     @SC87117\n         KW    'ETOA',GIVE                                     @SC87117\n         KW    'TATOE',GIVTA,MIN=2                             @SC87117\n         KW    'TETOA',GIVTE,MIN=2                             @SC87117\n         KW    ,                                               @SC87117\n*\nGIVA     LA    6,ATOE-1                                        @SC87117\n         B     GIVA1                                           @SC87117\nGIVE     LA    6,ETOA-1                                        @SC87117\n         B     GIVE1                                           @SC87117\nGIVTA    LA    6,TATOE-1                                       @SC87117\nGIVA1    LA    0,ATOED                                         @SC87117\n         B     GIVAE                                           @SC87117\nGIVTE    LA    6,TETOA-1                                       @SC87117\nGIVE1    LA    0,ETOAD                                         @SC87117\nGIVAE    SR    15,15                                           @SC87117\n         IC    15,3(1)       Get length of name                @SC87117\n         MVC   GIVBUF(4),=C'SET '                              @SC87117\n         MVC   GIVBUF+4(10),5(1)  Copy name to command         @SC87117\n         LA    15,GIVBUF+5(15)                                 @SC87117\n         MVI   0(15),C' '                                      @SC87117\n         LA    15,1(15)      Get ptr for 1st argument          @SC87117\n         LR    1,0                                             @SC87117\n         BCTR  0,0           Back up to start at \"difference\"  @SC87117\n         STM   15,1,GIVSV    Save ptrs: cmd, table, table start@SC87117\n         LA    7,257         Table length + 1                  @SC87117\n         LA    0,FFGIV                                         @SC87117\n         KCALL FSPEC,FILNAM,E=GIVFNE  Error                    @SC87117\n         MVI   ERRNUM,ERRNOE Ok now                            @SC87117\n         OPENF O,FILNAM,LOGFDB,GIVPTR,E=GIVOPERR               @SC87117\nGIVLP    LM    15,0,GIVSV    Get output ptr, table scan ptr    @SC87117\n         LA    6,1(6)        Skip last difference              @SC87117\n         AH    0,*-2                                           @SC87117\n         BCTR  7,0           New length left                   @SC87117\n         LR    1,7           Copy length                       @SC87117\n         CLCL  0,6           Find next difference              @SC87117\n         BE    GIVFIN        All done                          @SC87117\n         ST    0,GIVSV+4     Save new ptr                      @SC87117\n         LR    4,0           Get offset                        @SC87117\n         S     4,GIVSV+8                                       @SC87117\n         BAL   2,EDDEC       Write as decimal                  @SC87117\n         MVI   0(15),C' '    Leave space                       @SC87117\n         LA    15,1(15)                                        @SC87117\n         IC    4,0(6)        Get tailored character            @SC87117\n         BAL   2,EDDEC       Write as decimal                  @SC87117\n         LA    2,GIVBUF                                        @SC87117\n         SR    15,2          Length of line                    @SC87117\n         WRITF GIVPTR,BUFFER=(2),BSIZE=(15),E=GIVWRERR         @SC87117\n         B     GIVLP                                           @SC87117\nGIVWRERR CLOSF GIVPTR        Close output file                 @SC87117\nGIVOPERR PTEXT 'Unable to write file'                          @SC87117\nGIVFNE   WTEXT (3),(4)       Show message                      @SC87117\n         B     RTRN1                                           @SC87117\nGIVFIN   CLOSF GIVPTR,E=GIVOPERR Close output file             @SC87117\n         B     RTRN0                                           @SC86295\n         LOCALS ,                                              @SC86295\nGIVSV    DS    3F            Saved ptrs for saving table       @SC87117\nGIVPTR   DS    A             Ticket for disk I/O               @SC87117\nGIVBUF   DS    CL25          Buffer for new file               @SC87117\n         EXIT                                                  @SC86164\n         TITLE 'GENCMD Routine - send a Generic command'       @SC86155\n* Entry: SCANPTR has string\n* Exit: R15=0 if ok, 1 if help needed, 2 if bad parameter\n*       ERRNUM set appropriately\nGENCMD   ENTER                                                 @SC86155\n         LA    8,1           One operand                       @SC86295\n         LTR   1,1                                             @SC86295\n         BZ    REMCMD        Parse REMOTE command              @SC86295\n         LA    0,AG          Packet type = generic command     @SC86155\nGENNUL   SR    5,5           NO ARGUMENTS                      @SC86316\nGENFILL  STC   0,STYPE       Set packet type                   @SC86155\n         L     3,RBUF        Put string here                   @SC86155\n         CLI   STYPE,AG      Generic?                          @SC86155\n         BNE   GENOTH1       No subcommand                     @SC86155\n         STC   1,0(3)        Save subcommand byte              @SC86155\n         LA    3,1(3)        Move to next character position   @SC86155\n         B     GENOTH1                                         @SC86295\nGENNXT   NTOKN N=RTRN1       Get next argument                 @SC86295\n         LA    5,1(7)        Length                            @SC86295\n         LR    4,6           Address                           @SC86295\nGENOTH1  LTR   1,5           Any argument?                     @SC86155\n         BZ    GENFILZ       No, done                          @SC86155\n         CLI   STYPE,AG      Generic?                          @SC86155\n         BNE   GENOTH2       No, skip length indicator         @SC86155\n         TOCHR 1,,0(3)       Yes, do it                        @SC86155\n         LA    3,1(3)                                          @SC86155\nGENOTH2  MVC   0(96,3),0(4)  Copy argument                     @SC86155\n         TR    0(96,3),ETOA  in ASCII                          @SC86155\n         AR    3,5           Advance ptr                       @SC86155\n         BCT   8,GENNXT                                        @SC86295\nGENFILZ  S     3,RBUF        Length of buffer                  @SC86155\n         ST    3,RBUFL       Set buffer size                   @SC86155\n         BAL   8,IPKSET      Set state table, exchange parms   @SC86155\n         DC    AL1(AY),AL3(0)        ACK'ed     Must be just   @SC86155\n         DC    AL1(00),AL3(GENABR)   Error.    these 2 items.  @SC86155\n         BAL   8,GENSET      Set state table                   @SC86155\n* Server cmd Rpack interpret input table                       @SC86155\n         DC    AL1(AY),AL3(0)        ACK'ed                    @SC86155\n         DC    AL1(AS),AL3(GENRPL)   Long reply                @SC86155\n         DC    AL1(00),AL3(GENABR)   Error                     @SC86155\nGENSET   BAL   9,ENCODEN     Encode command                    @SC86295\n         BAL   9,INPUTSPK    Send, get response                @SC86295\n         MVI   ERRNUM,ERRNOE No errors                         @SC86155\n         ICM   0,15,DATL     Any short reply?                  @SC86155\n         BZ    GENRET        No, done                          @SC86155\n         NI    FL1,255-EOF   Yes, set flags                    @SC86155\n         XC    WBUFL,WBUFL   Clear old data                    @SC86155\n         OI    LOGFLGS,APPN  DISP=MOD                          @SC86295\n         BAL   2,GENRPS      Set up file name                  @SC86295\n         OPENF O,REPNAM,LOGFDB,FILPTR,E=GENABR                 @SC86295\n         USING FDBD,1                                          @SC86295\n         SR    0,0                                             @SC86295\n         ICM   0,3,FDBLRC                                      @SC86295\n         ST    0,FSIZE       Copy LRECL                        @SC86295\n         MVC   FRECF,FDBRCF  Copy RECFM                        @SC86295\n         DROP  1                                               @SC86155\nGENOPN   KCALL DECODE,E=GENAB2 Copy message to output          @SC86155\n         CLC   WBUFL,F0      Any more?                         @SC86155\n         BE    GENRPZ                                          @SC86155\n         KCALL OUTBUF,E=GENAB2  Yes, copy that as well         @SC86155\nGENRPZ   CLOSF FILPTR                                          @SC86295\n         MVI   ERRNUM,ERRNOE No errors                         @SC86155\n         B     GENFIN                                          @SC86295\n*\nGENRPL   OI    FL2,SRV       Pretend this is server mode       @SC86155\n         BAL   2,GENRPS      Set up file name                  @SC86295\n         KCALL RECEIV                                          @SC86155\n         NI    FL2,255-SRV                                     @SC86155\n         B     GENFIN                                          @SC86155\n*\nGENRPS   LA    0,L'REPNAM    Name string length                @SC86295\n         LA    1,REPNAM      and address                       @SC86295\n         STM   0,1,SCANPTR                                     @SC86295\n         LA    0,FFRCF                                         @SC86295\n         KCALL FSPEC,FILNAM  Convert to filespec               @SC86295\n         IC    9,FL3         Save flags                        @SC86295\n         OI    FL3,APPN      Don't erase it                    @SC86295\n         BR    2                                               @SC86295\n*\nGENAB2   CLOSF FILPTR                                          @SC86295\nGENABR   KCALL ERPACK                                          @SC86155\nGENFIN   STC   9,FL3         Restore flags                     @SC86295\nGENRET   KCALL INTINI,0                                        @SC86155\n         B     RTRN0                                           @SC86295\n*\n* Make foreign Kermit execute command\nREMCMD   NTOKN N=RTRN2                                         @SC86295\n         SCAN  REMCMDKW,RTRN1                                  @SC86295\n         B     RTRN2                                           @SC86295\n*\nREMCMDKW KW    'COPY',REMCOP,MIN=2                             @SC86295\n         KW    'CWD',REMARG,MIN=3                              @SC86295\n         KW    'DIRECTORY',REMARG,MIN=3                        @SC86155\n         KW    'ERASE',REMARG                                  @SC86155\n         KW    'HELP',REMARG                                   @SC86155\n         KW    'HOST',REMHST,MIN=2                             @SC86155\n         KW    'KERMIT',REMKRM                                 @SC86155\n         KW    'RENAME',REMREN                                 @SC86295\n         KW    'SPACE',REMSPA,MIN=2                            @SC86155\n         KW    'TYPE',REMARG,MIN=2                             @SC86155\n         KW    ,                                               @SC86155\n*\nREMHST   LA    0,AC          Host command                      @SC86155\n         B     REMPRS                                          @SC86155\n*\nREMKRM   LA    0,AK          KERMIT command                    @SC86155\nREMPRS   FTOKN N=RTRN1       See if anything given             @SC86295\n         LR    4,7                                             @SC86295\n         LR    5,6           Use whole string                  @SC86295\n         B     GENFILL                                         @SC86295\n*\nREMSPA   LA    1,AU          Space command                     @SC86155\n         B     REMPRSG                                         @SC86155\n*\nREMCOP   LA    8,2           Copy: two files                   @SC86295\n         LA    1,AK                                            @SC86295\n         B     REMPRSG                                         @SC86295\nREMREN   LA    8,2           Rename: two files                 @SC86295\n*\nREMARG   SR    1,1                                             @SC86155\n         IC    1,0(6)        1st letter is abbrev              @SC86155\n         IC    1,ETOA(1)     ASCII                             @SC86155\nREMPRSG  LA    0,AG          (generic)                         @SC86155\n         NTOKN N=GENNUL      Skip any blanks                   @SC86295\n         LA    5,1(7)        Save length                       @SC86295\n         LR    4,6           Save ptr                          @SC86295\n         B     GENFILL       Copy to output                    @SC86155\n         LOCALS ,                                              @SC86295\nREMCMD   EXIT  ,                                               @SC86155\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0COM": {"ttr": 4865, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IK0COM\n         TITLE 'COMMON - Kermit-370 common routines/data areas'\nCOMMON   CSECT\n* Translat - translates data.  On entry R2->buffer, R3=length  @SC86202\n*   R14 = return address, R15->translate table                 @SC86202\n*   R1-R3 are destroyed, R15 is set to 0                       @SC86202\nTRANSLAT LTR   3,3           Anything to do?                   @SC86202\n         BNP   TRANSRET      No, quit                          @SC86202\n         ALR   2,3           End of source                     @SC86202\nTRLOOP   LR    1,2                                             @SC86202\n         SR    1,3           Ptr to remaining bytes            @SC86202\n         BCTR  3,0           Count for EX                      @SC86202\n         EX    3,TREX        Translate the input segment       @SC86202\n         N     3,=F'-256'    Remove count done                 @SC86202\n         BNZ   TRLOOP        Loop thru source                  @SC86202\nTRANSRET SR    15,15         Done, set RC=0                    @SC86202\n         BR    14                                              @SC86202\nTREX     TR    0(,1),0(15)                                     @SC86202\n*\n* Subroutine to test for undelimited v-binary format           @SC86151\nRDWSET   XC    RDWLEN,RDWLEN Usual format                      @SC86151\n         LA    0,5           Header length of 5 for D-binary   @SC86262\n         CLI   TYPFIL,C'D'   Is it?                            @SC86262\n         BE    RDWSOK        Yes, use it                       @SC86262\n         LA    0,2           Header length of 2 for V-binary   @SC86262\n         CLI   TYPFIL,C'V'   Test for special type             @SC86151\n         BNER  14            Not V-binary                      @SC86151\nRDWSOK   DS    0H                                              @SC86262\n         ST    0,MAXOUT      Init for decoding                 @SC86151\n         ST    0,RDWLEN                                        @SC86151\n         BR    14                                              @SC86151\n*\n* Subroutine to increment pkt sequence number\nINCRSEQ  IC    3,SEQ                                           @SC86135\n         LA    3,1(3)\n         N     3,MOD64\n         STC   3,SEQ                                           @SC86135\n         LA    3,1                                             @SC86295\n         AL    3,PAKCNT                                        @SC86295\n         ST    3,PAKCNT      Update packet count               @SC86295\n         BR    14\n*\n* Subroutines to interpret RPACK data\nINPUTSPK SR    3,3           Clear counter                     @SC86276\n         KCALL SPACK,E=INPUTRTY                                @SC86276\nINPUT    SR    3,3                   Clear loop counter\nINPUTLUP KCALL RPACK         Read data\nINPUTINR MVI   ERRNUM,ERRIPT Assume bad packet type            @SC86158\n         IC    4,RTYPE       Test byte                         @SC86158\n         BAL   2,CLKP        Look up in list                   @SC86158\n* Standard packet types for special treatment                  @SC86158\nINPUTST  DC    AL1(AE),AL3(INPUTERR) Error packet              @SC86158\n         DC    AL1(AN),AL3(INPUTNAK) NAK packet                @SC86158\n         DC    AL1(AQ),AL3(INPUTQAB) RPACK error               @SC86158\n         DC    AL1(AT),AL3(INPUTTIM) Time out                  @SC86355\n         DC    AL1(00),AL3(INPUTCNT) OK so far                 @SC86158\n*\nINPUTCNT DS    0H                                              @SC86158\n         CLC   SEQ,RSN\n         BNE   INPUTMIS              Go if pkt num mismatch\nINPUTQRT LR    2,8                   Get next-state table address\n         LR    14,9          For in-line return                @SC86295\n         B     CLKP          Look up in expected list          @SC86158\n*\nINPUTMIS MVI   ERRNUM,ERRMIS Missing pkt                       @SC86156\n         B     INPUTRTY              Retry\n*\nINPUTQAB CLI   STYPE,AB\n         BNE   INPUTRTY              Retry if not a BRK pkt\n         MVI   RTYPE,AY              Fake an ACK\n         IC    4,RTYPE                                         @SC86158\n         B     INPUTQRT              And go handle the ACK\n*\nINPUTTIM MVI   ERRNUM,ERRTIM Timed out                         @SC86355\n         B     INPUTRTY                                        @SC86355\nINPUTNAK MVI   ERRNUM,ERRNAK Micro NAK'ed                      @SC86156\nINPUTRTY BAL   2,SENDRTY     Resend to the limit               @SC86276\n         B     INPUTLUP              And interpret response\n*\nINPUTERR MVI   ERRNUM,ERRABO Micro aborted                     @SC86156\n         LR    2,9           Save return                       @SC86295\n         BAL   9,DECODEN     Decode error message              @SC86295\n         LR    9,2                                             @SC86295\n         L     0,WBUF        Ptr to decoded message            @BS86090\n         L     1,WBUFL                                         @BS86090\n         L     14,EMSGP      Ptr to msg buffer                 @BS86090\n         LA    15,LEMSG                                        @BS86090\n         CR    1,15                                            @BS86090\n         BNH   *+6                                             @BS86090\n         LR    1,15          Truncate msg                      @BS86090\n         ST    1,EMSGL       Save effective length             @BS86090\n         MVCL  14,0          Save in buffer                    @BS86090\n         L     1,EMSGP                                         @BS86090\n         TR    0(LEMSG,1),ATOE Convert to EBCDIC               @BS86090\nINPUTABR SR    4,4           Look for end of table             @SC86158\n         B     INPUTQRT                                        @SC86158\n*\n* CLKP - Subroutine to dispatch to routine from table lookup   @SC86158\n*  R2->table, R4=char, R14->return if null entry in table      @SC86158\n*  Each entry has AL1(char),AL3(adr), last char=00             @SC86158\nCLKNXT   LA    2,4(2)        Next state                        @SC86158\nCLKP     CLM   4,1,0(2)      Match?                            @SC86158\n         BE    CLKF          Yes, go do it                     @SC86158\n         CLI   0(2),0\n         BNE   CLKNXT        Not at the end yet                @SC86158\nCLKF     ICM   2,7,1(2)      Pick routine address              @SC86158\n         BNZR  2             Go to that routine if any         @SC86295\n         BR    14            Or fall down to caller            @SC86158\n*\n* Retry sending same packet until success or abort             @SC86276\nSENDRTY  LA    3,1(3)        Increment retry counter           @SC86276\n         CL    3,LIMTRY      Did we retry enough?              @SC86276\n         BNL   INPUTABR      Yes, abort if limit reached       @SC86276\n         LA    15,1                                            @SC86276\n         AL    15,RTRCNT                                       @SC86276\n         ST    15,RTRCNT     Update retry count                @SC86276\n         TM    FL1,NAK0                                        @SC86276\n         BO    SENDNAK       Haven't sent anything yet         @SC86276\n         KCALL SIO,E=SENDRTY Resend the same packet            @SC86276\n         BR    2             Success, return                   @SC86276\n*\n* Subroutine to send a NAK\nSENDNAK  MVI   STYPE,AN              A NAK pkt\n         XC    DATL,DATL             no data\n         B     SENDPK        Send the packet                   @SC86276\n*\n* Subroutine to send an ACK\nSENDACK  XC    DATL,DATL             no data length\nSENDACKL MVI   STYPE,AY              an ACK pkt\n         SR    3,3           Clear counter                     @SC86276\nSENDPK   KCALL SPACK,E=SENDRTY Send the packet                 @SC86276\n         BR    2                     return\n*\n* Set up command to foreign server. Trade parms if necessary\nIPKSET   KCALL INTINI,4,E=INPUTABR Initialize for sending      @SC87300\n         TM    FL3,PXCH                                        @SC86155\n         BO    IPKFIN                                          @SC86155\n         MVI   SEQ,0                                           @SC86155\n         MVC   LIMTRY,MAXTNT Limit for INIT retries            @SC86345\n         KCALL RPARSET                                         @SC86155\n         KCALL RPAR          Our I packet to send              @SC86155\n         ICM   8,8,STYPE     Save packet type                  @SC86295\n         MVI   STYPE,AI      Packet type = initialize          @SC86155\n         BAL   9,INPUTSPK    Send RPAR and interpret response  @SC86295\n         STCM  8,8,STYPE     Restore packet type               @SC86295\n         KCALL SPAR          Interpret reply to our I packet   @SC86155\nIPKFIN   MVI   SEQ,0         Reset packet number               @SC86155\n         MVC   LIMTRY,MAXTRY Nominal retry limit               @SC86295\n         B     8(8)          Skip over 2-entry table           @SC86295\n*\n* Subroutine to skip over white-space\nWSP      LM    6,7,LEN               Length and address of input\n         LTR   6,6                   Any more data left to scan?\n         BNPR  9             Nope, fail                        @SC86135\nWSPLUP   CLI   0(7),C' '                                       @SC86115\n         BE    WSPNXT                Skip a blank\n         CLI   0(7),NL\n         BNE   WSPEND                Skip a new-line char\nWSPNXT   LA    7,1(7)                next char\n         BCT   6,WSPLUP              decrement length\n         BR    9\n*\nWSPEND   STM   6,7,LEN               Save new non-white spot\n         B     4(9)                  Skip return\n*\n* Subroutine to get next token from commands\nTOK      LM    6,7,LEN               Length and address of input\n         LTR   6,6                   Any more data to tokenize?\n         BNPR  9             No, error return                  @SC86135\n*\nTOKLUP   CLI   0(7),C' '                                       @SC86115\n         BE    TOKSKP                Found a blank terminator\n         CLI   0(7),NL\n         BE    TOKSKP                Found a new-line terminator\n         CLI   0(7),C','                                       @SC86115\n         BNE   TOKNXT                Not a comma\n         C     7,ADR                 Is comma the first char?\n         BNE   TOKSKP                No, must be a token itself\nTOKNXT   LA    7,1(7)                Next char\n         BCT   6,TOKLUP              decrement remaining length\nTOKSKP   BCTR  6,0                   remaining length of input\n         ST    6,LEN                 Save it for next time\n         LA    6,1(7)        Next spot to scan                 @SC86224\n         S     7,ADR                 Length of token\n         ST    6,ADR         Next spot to scan                 @SC86224\n         SR    6,7                                             @SC86224\n         BCTR  6,0           Address of token                  @SC86224\n         BCTR  7,0                   Token length - 1\n         B     4(9)                  Skip return\n*\n* Subroutine to skip white-space and pick next token\nWSPTOK   BAL   9,WSP\n          B    0(14)         Ran off the end                   @SC86135\n         BAL   9,TOK\n          B    0(14)         No more tokens                    @SC86135\n         B     4(14)                 Skip return\n*\n* Interpret decimal number from string at (R6) of length=(R7)\n*   Clobber R4,R7,R15.  Return value in R0 and skips if ok.\nGETNUM   LR    4,7           Copy length                       @SC86316\n         C     4,F           Length must be <16                @SC87012\n         BHR   14                                              @SC87012\n         BCTR  7,0           Change for EX                     @SC86316\n         LR    15,6          Don't lose pointer to input       @SC86316\nGETNUML  CLI   0(15),C'0'                                      @SC86316\n         BLR   14            Go if not numeric                 @SC86316\n         CLI   0(15),C'9'                                      @SC86316\n         BHR   14            Go if not numeric                 @SC86316\n         LA    15,1(15)      Bump input pointer                @SC86316\n         BCT   4,GETNUML     Go if more                        @SC86316\n         EX    7,GETNUMPK    Pack the input                    @SC86316\n         CVB   0,TMPDW       Convert to binary                 @SC86316\n         B     4(14)         Return and skip                   @SC86316\nGETNUMPK PACK  TMPDW,0(,6)                                     @SC86316\n*\n* Test for Ascii char range of 33-62 and 96-126, skip on return if ok\n*  Character must be in low byte of R4\nCHKQR    CLM   4,1,SPACE+3                                     @SC86120\n         BNHR  14            Cannot use control char or blank  @SC86120\n         CLM   4,1,MOD64+3                                     @SC86120\n         BL    4(14)         OK, 33-62                         @SC86120\n         CLM   4,1,LOCASE+96                                   @SC86295\n         BLR   14                                              @SC86120\n         CLM   4,1,LOCASE+127                                  @SC86295\n         BNLR  14                                              @SC86120\n         B     4(14)         OK, 96-126                        @SC86120\n*\n* Subroutine to scan a parse table built by KW macro\nSCAN     CLI   0(6),C'?'                                       @SC86115\n         BE    HELPKW\n         MVC   OPRND,0(6)    Copy token for lookup             @SC87034\n         TR    OPRND,UPCASE  And convert to upper case         @SC87034\n         SR    15,15\nSCANLUP  CLI   0(1),255                                        @SC87117\n         BE    4(14)         Return to caller if end           @SC87117\n         CLI   3(1),255      Branch to other list?             @SC87117\n         BNE   *+12          No                                @SC87117\n         ICM   1,7,0(1)      Yes, get ptr to new list          @SC87117\n         B     SCANLUP       And resume search                 @SC87117\n         CLM   7,1,4(1)      Compare token length vs min abbr\n         BL    SCANNO                Go if < min\n         CLM   7,B'0001',3(1)        Compare token and kw lengths\n         BH    SCANNO                Go if length of token > kw's\n         EX    7,SCANCLC\n         BE    SCANYES\nSCANNO   IC    15,3(1)               KW length - 1\n         LA    1,6(15,1)             add 3+1+1+1 to it\n         B     SCANLUP       Continue checking\n*\nSCANYES  CLM   7,8,F0        Flagged just to find entry?       @SC86355\n         BNER  14            Yes, got it                       @SC86355\n         TR    0(1,6),UPCASE Upcase 1st letter, just in case   @SC87034\n         ICM   14,7,0(1)     No, get handler address           @SC86355\n         BR    14\n*\nSCANCLC  CLC   5(,1),OPRND   Compare token to KW               @SC87034\n*\n* Utility routine to set up linkage\nSUBENT   LR    12,15         CSECT addressibility              @SC86295\n         L     15,STKPTR     Current end of stack              @SC86295\n         AR    0,15          Our needs                         @SC86295\n         C     0,STKLIM      Does it fit?                      @SC86295\n         BH    SUBDIE        No, (that's incredible)           @SC86295\n         ST    0,STKPTR      New end                           @SC86295\n         ST    13,4(15)      Link subroutines                  @SC86295\n         ST    15,8(13)                                        @SC86295\n         LR    13,15                                           @SC86295\n         LR    1,0           End of local variables            @SC87012\n         LA    0,72(15)      Start=end of save area            @SC87012\n         SR    1,0                                             @SC87012\n         BNP   *+8           No locals                         @SC87012\n         SR    15,15                                           @SC87012\n         MVCL  0,14          Zero-fill all locals              @SC87012\n         L     15,4(13)                                        @SC87012\n         LM    0,1,20(15)    Restore R0,R1                     @SC87012\n         BR    14            Go                                @SC86295\nSUBDIE   LM    14,12,12(13)                                    @SC86295\n         LA    15,1                                            @SC87012\n         LCR   15,15         Set return code = -1              @SC87012\n         BR    14            Go                                @SC86295\n*\n* Common exit code\nRETSNRC  MVI   BCTU,1        Reset chksum at end of transfer   @SC86295\n         KCALL INTINI,0      Close line for transfer           @SC86295\n         KCALL SUPFNC,10     Get time                          @SC86295\n         S     15,SECTOT     Take elapsed time                 @SC86295\n         BNM   *+8           Ok, no wrap                       @SC86345\n         A     15,=F'1759218604'  Wraps by 2**44/10000         @SC86345\n         ST    15,CSECTOT    Save elapsed time in csec         @SC86345\n         SR    14,14                                           @SC86295\n         LA    0,100                                           @SC86295\n         DR    14,0          Convert to sec                    @SC86295\n         AR    14,14         Check remainder                   @SC86295\n         CR    14,0                                            @SC86295\n         BL    *+8                                             @SC86295\n         A     15,F1         Round up                          @SC86295\n         ST    15,SECTOT                                       @SC86295\n         B     RTRN0                                           @SC86295\nRTRNUM   BAL   14,LDERR      Fetch error code                  @SC87117\n         B     RTRN                                            @SC87117\nRTRN2    LA    15,2          Indicate error                    @SC86295\n         B     RTRN                                            @SC86295\nRTRNM1   SR    15,15         Error = -1                        @SC86295\n         BCTR  15,0                                            @SC86295\n         B     RTRN                                            @SC86295\nRTRN0    SR    15,15         No errors                         @SC86295\n         B     RTRN                                            @SC86295\nSUBERR   WTEXT (3),(4)       Print prepared message            @SC86295\nRTRN1    LA    15,1          Indicate error                    @SC86295\nRTRN     ST    13,STKPTR     Free the storage                  @SC86295\n         L     13,4(13)      Unlink                            @SC86295\n         L     14,12(13)     Restore registers                 @SC86295\n         LM    0,12,20(13)                                     @SC86295\n         LTR   15,15         Test return code                  @SC86295\n         BR    14                                              @SC86295\n*\n* Subroutine to fetch error code (but 0 if no transfers yet)\nLDERR    SR    15,15\n         CLI   ERRNUM,ERRNFT No file transfer isn't an error   @HF86157\n         BER   14                                              @HF86157\n         IC    15,ERRNUM     Return status code                @HF86157\n         BR    14                                              @HF86157\n*\n* Subroutine to decode without disk-write\nDECODEN  NI    FL1,255-EOF           No EOF yet\n         XC    WBUFL,WBUFL           No data in WBUF yet\n         OI    FL1,NAME              No disk-writes\n         KCALL DECODE        Decode data into WBUF             @SC86135\n         NI    FL1,255-NAME          Turn this off\n         BR    9                                               @SC86295\n*\n* Subroutine to encode without disk-read\nENCODEN  XC    RBUFP,RBUFP           Start encoding at beg of RBUF\n         OI    FL1,NAME              Indicate not to do disk reads\n         KCALL ENCODE        Encode it into DATA               @SC86135\n         NI    FL1,255-NAME          Turn this off\n         BR    9                                               @SC86295\n*\n* Subroutine to display the contents of the KW tables\nHELPKW   SR    7,7                   token length holder\n         LA    2,16          Tab width for display             @SC86295\n         LA    3,CMD+79      Display buffer limit offset       @SC86295\n         LR    4,1                   KW table address\n         WTEXT 'One of the following:'\nHELPNL   LA    1,CMD+1       Display buffer offset             @SC86295\n         MVI   CMD,C' '      Start blanking it                 @SC86115\n         MVC   CMD+1(79),CMD         blank 80 chars\nHELPNT   CLI   0(4),255\n         BE    HELPEND               return if end of tokens\n         CLI   3(4),255      Branch to other list?             @SC87117\n         BNE   *+12          No                                @SC87117\n         ICM   4,7,0(4)      Yes, get ptr to new list          @SC87117\n         B     HELPNT        And resume scan                   @SC87117\n         IC    7,3(4)                length-1 of current token\n         IC    15,4(4)               min abbreviation length - 1\n         EX    7,HELPMVC             move it to display buffer\n         LA    4,6(4,7)              skip to next token in KW table\n         MVI   15(1),C' '    Move a blank separator            @SC86115\n         TR    0(15,1),LOCASE Make everthing lower case        @SC86295\n         EX    15,TRUPCAS    Upper case the minimum            @SC86295\n         BXLE  1,2,HELPNT    Loop if more room on line         @SC86295\n         WTEXT CMD,80                display one line of tokens\n         B     HELPNL                and continue with next line\n*\nHELPEND  LA    0,CMD+1                                         @SC86295\n         CR    6,0           Is there anything accumulated?    @SC86295\n         BER   14            No, display buffer empty          @SC86135\n         WTEXT CMD,80\nBR14     BR    14\n*\nHELPMVC  MVC   0(,1),5(4)    Copy KW                           @SC86295\n*\n* Subroutine to compress a file specification                  @HF86223\nPAKFIL   LA    1,PREFIX      Start with prefix                 @HF86223\n         L     7,RBUF        Put FN here for encode            @SC86155\n         BAL   14,PAKFOR                                       @SC86295\n         LA    0,FFENC                                         @SC86295\n         KCALL FSPEC,FILNAM  Copy name with possible override  @SC86295\n         LR    7,15          New output ptr                    @SC86295\n         LA    1,SUFFIX      Finish with suffix                @SC86224\n         BAL   14,PAKFOR                                       @SC86295\n         S     7,RBUF        Length of buffer                  @SC86155\n         ST    7,RBUFL                                         @SC86155\n         BR    9                                               @HF86223\n*\n* Subroutine to append characters to the filespec              @HF86223\nPAKFOR   SR    2,2           Number of characters to append    @HF86223\n         ICM   2,1,0(1)      Probably none                     @HF86223\n         BZR   14                                              @SC86295\n         BCTR  2,0           Copy into buffer                  @HF86223\n         EX    2,PAKRMV                                        @HF86223\n         EX    2,PAKRTR      And ASCII it                      @HF86223\n         LA    7,1(2,7)      New end of string                 @HF86223\n         BR    14                                              @SC86295\n*\nPAKRMV   MVC   0(0,7),1(1)                                     @HF86223\nPAKRTR   TR    0(0,7),ETOA                                     @HF86223\n*\n* Routines to add decimal and string arguments to a buffer     @SC86209\n* Input: R15->insert point, R4=dec. value, R2->return          @SC86209\nEDDEC    CVD   4,TMPDW       Get packed decimal                @SC86209\n         MVC   0(10,15),=X'40202020202020202120'               @SC86209\n         LA    9,10(15)      End of possible string            @SC86209\n         LA    1,9(15)       Last possible start of signif.    @SC86209\n         EDMK  0(10,15),TMPDW+3                                @SC86209\n         LTR   4,4           Check sign                        @SC86209\n         BNM   EDDPOS                                          @SC86209\n         BCTR  1,0           Back up and insert minus          @SC86209\n         MVI   0(1),C'-'                                       @SC86209\nEDDPOS   LR    8,1           Start                             @SC86209\n         SR    9,8           Length                            @SC86209\n*   R8->argument string, R9=length                             @SC86209\nEDCHAR   EX    9,EDCHRMV     Copy string to buffer (1 extra)   @HF86223\n         AR    15,9          Update output ptr                 @SC86209\n         BR    2                                               @SC86295\nEDCHRMV  MVC   0(0,15),0(8)  Copy string to buffer             @HF86223\n*\n* Enter here with R7->position in CMD, R1->filespec. Return to (R2).\nSTAFSP   LA    0,FFDSP                                         @SC86295\n         KCALL FSPEC         Copy name for display             @SC86295\nSTAPM15  LR    0,15          Output ptr                        @BS86090\nSTAPMSG  LA    1,CMD         Start of string                   @SC86295\n         SR    0,1           Get length                        @SC86295\n         WTEXT (1),(0)                                         @SC86295\n         BR    2                                               @SC86295\n*\nTRATOE   TR    0(,1),ATOE                                      @SC86158\nTRUPCAS  TR    0(,1),UPCASE  Upcase                            @SC86158\n*\n* Return optimum packet size (in R15) based on previous transfer, or 0\n*  Uses R2,R3,R4,R5,R14.  Returns via R9.\nOPTPKT   SR    15,15         Indicate no good                  @SC86345\n         ICM   4,15,RTRCNT   Get error count                   @SC86345\n         BZR   9             None, give up                     @SC86345\n         LM    2,3,TINTOT    Get byte count                    @SC86345\n         AL    3,TOUTOT+4                                      @SC86345\n         BNO   *+8                                             @SC86345\n         AL    2,F1                                            @SC86345\n         AL    2,TOUTOT                                        @SC86345\n         SLDL  2,1                                             @SC86345\n         CR    2,4           Avoid overflow                    @SC86345\n         BL    OPTL1         Ok                                @SC86345\n         L     3,=XL4'2D414' No, use max.                      @SC86345\n         B     SQRX                                            @SC86345\nOPTL1    SRDL  2,1                                             @SC86345\n         DR    2,4           Compute mean bytes/error          @SC86345\n         SR    2,2                                             @SC86345\n         SLDL  2,4           x 16                              @SC86345\n*  Compute sq rt of value in (2,3), return in 15.  Uses 2,3,4,5,14.\nSQRT     LR    14,2          Copy for sqrt                     @SC86345\n         LR    15,3                                            @SC86345\n         LA    4,31          Count bits                        @SC86345\nSQRL1    CL    2,=XL4'10000000'                                @SC86345\n         BNL   SQRL2         Justified now                     @SC86345\n         SLDL  2,2           Keep shifting                     @SC86345\n         BCT   4,SQRL1                                         @SC86345\nSQRL2    LCR   4,4                                             @SC86345\n         AL    2,=XL4'10000000'  1st guess at sqrt             @SC86345\n         SRDL  2,62(4)       Shift back                        @SC86345\n         LTR   3,3                                             @SC86345\n         BNP   SQRX          Too small anyway                  @SC86345\n         LA    2,3                                             @SC86345\nSQRL3    LR    4,14                                            @SC86345\n         LR    5,15                                            @SC86345\n         DR    4,3           Get next guess                    @SC86345\n         AR    3,5                                             @SC86345\n         SRA   3,1                                             @SC86345\n         BCT   2,SQRL3                                         @SC86345\nSQRX     LR    15,3                                            @SC86345\n         BR    9                                               @SC86345\n*\n* Main command loop implementation of TAKE files\n         USING SERVERSV,13   Uses locals of caller, e.g. SERVER@SC86295\nLOOPS    STM   0,1,RETADR    Initialize for main loop          @SC86295\n         BR    14                                              @SC86295\n*\nLUPERK   BCT   15,LUPBAD     Go if bad operand: try on system  @SC86171\n         MVI   ERRNUM,ERRKCE Kermit command error\n         OI    FL5,CMERR     Note error                        @SC86295\n         B     LOOP                                            @SC86295\nLOOP0    CLI   ERRNUM,ERRKCE Stale error?                      @SC86295\n         BNE   LOOP          No, keep old error code           @SC86295\n         MVI   ERRNUM,ERRNOE Clear old error condition         @SC86295\n         B     LOOP                                            @SC86295\nLUPFNF   MVI   ERRNUM,ERRFNF File not found                    @SC86295\n         B     LUPWRTE                                         @SC86239\nLUPINV   MVI   ERRNUM,ERRKCE Invalid command                   @SC86239\nLUPWRTE  OI    FL5,CMERR     Note error                        @SC86171\nLUPWRT   WTEXT (3),(4)                                         @SC86355\n*\nLOOP     MVC   OLDERR,ERRNUM                                   @SC86171\n         ICM   2,15,TAKLEV   Get current TAKE level            @SC86295\n         BZ    LUPEX                                           @SC86295\n         BCTR  2,0                                             @SC86295\n         SLA   2,2           Get offset into table             @SC86295\n         LA    2,TAKTAB(2)   Point into TAKE file table        @SC86295\n         TM    FL5,CMERR+TKHLT                                 @SC86239\n         BO    LUPREX        Quit reading on error             @SC86239\n         NI    FL5,255-CMERR-TKMSG Clear error flag            @SC86239\n         READF 0(2),E=LUPRER                                   @SC87034\n         LA    1,CMD         Ptr to buffer, R0 = length        @SC86171\n         B     LUPPRS        Go parse\n*\nLUPRER   C     15,F12        EOF code?\n         BE    LUPCLO        Yes, close the file\n         ERRF  ,             Analyze the error                 @SC87338\nLUPREX   OI    FL5,CMERR     Note error                        @SC86171\n         TM    FL5,TKMSG     Already issued message?           @SC86239\n         BO    LUPCLO        Don't overdo it                   @SC86239\n         WTEXT 'Error reading TAKE file'                       @SC86239\n         OI    FL5,TKMSG                                       @SC86239\nLUPCLO   CLOSF (2)           Close the file                    @SC86135\n         L     2,TAKLEV      Get TAKE level\n         BCTR  2,0           And decrement it\n         ST    2,TAKLEV\n         B     LOOP\n*\nLUPEX    NI    FL5,255-CMERR-TKMSG Clear error flag            @SC86239\n         L     14,RETADR                                       @SC86295\n         BR    14\n*\nLUPPRS   DS    0H                                              @SC87034\n         STM   0,1,SCANPTR   Save for parser                   @SC86171\n         LTR   2,2                                             @SC86171\n         BZ    LUPTOK        Not from TAKE                     @SC86171\n         TM    FL2,ECHO                                        @SC86171\n         BNO   LUPTOK        Not echoing                       @SC86171\n         WTEXT (1),(0)       Echo to terminal                  @SC86171\nLUPTOK   MVC   SCANSV,SCANPTR Save for system                  @SC86295\n         NTOKN N=LOOP\n         CLI   0(6),C'*'                                       @SC86115\n         BE    LOOP          Go if comment\n         L     1,CMDPTR                                        @SC86295\n         SCAN  (1),LOOP                                        @SC86295\nLUPBAD   PTEXT 'Invalid Kermit command'\n         TM    FL2,PASS                                        @SC86295\n         BZ    LUPINV        Don't try as system cmd           @SC86295\n         MVC   SCANPTR,SCANSV Restore string ptrs              @SC86295\n         OI    FL4,UCMD                                        @SC86295\n         KCALL SUPFNC,3,E=(LOOP,NM) And execute it             @SC86295\n         B     LUPINV                                          @SC86295\n*\nLUPSET   KCALL SET,E=LUPERK  Call SET routine                  @SC86295\n         B     LOOP0                                           @SC86295\n*\nLUPSHO   KCALL SHOW,E=LUPERK Call SHOW routine                 @SC86295\n         B     LOOP0                                           @SC86295\n*\nLUPCWD   KCALL CWDSET,E=LUPERK                                 @SC86295\n         B     LOOP0                                           @SC86295\n*\nLUPGIV   KCALL GIVTAB,E=LUPERK                                 @SC87117\n         B     LOOP0                                           @SC87117\n*\nLUPTAK   BAL   9,LUPTINS     Look for file                     @SC86295\n           B   LUPFNF        Not found                         @SC86295\n         MVI   ERRNUM,ERRNOE No error                          @SC86295\n         B     LOOP          OK                                @SC86295\n*\nLUPTIN   STM   1,2,SCANPTR   Set up scan                       @SC86295\nLUPTINS  SR    0,0           Flags for TAKE parsing            @SC86295\n         KCALL FSPEC,FILNAM  Get filespec                      @SC86295\n         BAL   14,LUPCKFN                                      @SC86295\n         LR    3,9           Save return                       @SC86295\n         BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         LR    9,3                                             @SC86295\n         PTEXT 'Past maximum nesting level for TAKE command'\n         L     5,TAKLEV      Current TAKE level                @SC86295\n         LA    14,TAKMAX                                       @SC86295\n         CR    5,14                                            @SC86295\n         BNL   LUPINV                                          @SC86239\n         SLA   5,2           Offset into table                 @SC86295\n         LA    5,TAKTAB(5)   Point into table of TAKE files    @SC86295\n         PTEXT 'File not found' In case of error\n         MVI   ERRNUM,ERRFNF In case of error                  @SC86171\n         OPENF I,FILNAM,TAKFDB,0(5),E=0(9)                     @SC86295\n         PTEXT 'TAKE file loop'                                @SC86239\n         USING FDBD,1                                          @SC86295\n         TM    FDBFLGS,FDBACTV Check for file active already   @SC86295\n         DROP  1                                               @HF86232\n         BZ    LUPTIOK                                         @SC86295\n         CLOSF (5)                                             @SC86295\n         BR    9                                               @SC86295\nLUPTIOK  L     3,TAKLEV      Get current take level\n         LA    3,1(3)        And increment\n         ST    3,TAKLEV\n         B     4(9)                                            @SC86295\n*\nLUPCKFN  LTR   15,15                                           @SC86295\n         BZR   14            No problem, R15=0                 @SC86295\n         BCT   15,LUPINV     Error, R15>1                      @SC86295\n         B     LUPWRTE       Help requested, R15=1             @SC86295\n*\nLUPSTA   BAL   14,LUPCNF     Check for illegal extras          @SC86295\n         MVC   ERRNUM,OLDERR Restore from last command         @SC86158\n         KCALL STATUS        Write error message               @SC86156\n         B     LOOP0                                           @SC86295\n*\nLUPSPA   KCALL DSPACE                                          @SC86164\n         B     LOOP0                                           @SC86295\n*\nLUPDMP   KCALL DUMP,E=LUPERK Dump translation table            @SC86156\n         B     LOOP0                                           @SC86295\n*\nLUPHSTI  DS    0H                                              @SC86295\n         AIF   ('&TYPCMD' EQ 'TYPE').TYPOK                     @SC86295\n         MVC   0(,6),=CL16'&TYPCMD' Use right name             @SC86295\n         EX    7,*-6                                           @SC86295\n.TYPOK   A     7,LEN         Add remaining to token length\n         LA    5,2(7)        Plus one for separator            @SC86171\n         STM   5,6,SCANPTR   Reset for tokenizer               @SC86171\nLUPHST   PTEXT 'Specify a &KSYS command to issue'              @SC86295\n         FTOKN H=LUPWRTE,N=LUPINV Point to command             @SC86239\n         LA    1,3           Execute host command              @SC86316\nLUPSYS   OI    FL4,UCMD      User command, check for EXEC's    @SC86316\n         PTEXT 'Illegal system command'                        @SC86295\n         KCALL SUPFNC,E=(LUPWRTE,M) Execute it                 @SC86295\n         B     LOOP\n         AIF   ('&KSYS' NE 'CMS').CM1Z                         @SC86355\n*\nLUPCP    PTEXT 'Specify a CP command to issue'\n         FTOKN N=LUPINV,H=LUPWRTE                              @SC86295\n         LR    0,7                                             @SC86295\n         LA    1,4                                             @SC86295\n         B     LUPSYS                                          @SC86295\n.CM1Z    ANOP\n*\nLUPCNF   FTOKN N=0(14),H=LUPCRH                                @SC86295\n         PTEXT 'Extra operand'                                 @SC86295\n         B     LUPINV                                          @SC86295\nLUPCRH   PTEXT 'No operands needed'                            @SC86295\n         B     LUPWRTE                                         @SC86295\n         DROP  13\nXONCHAR  DC    AL1(XON)                                        @SC86121\nGRDATA   DC    X'&S1CMD',X'70'                                 @SC87215\nGRDL     EQU   *-GRDATA                                        @SC87215\nXLFCT    DC    A(KMAXF)      Extended packet size base         @SC86202\nAKMIN    DC    A(KMIN)       Packet min size                   @SC86295\nAMAXWT   DC    A(MAXWT)      Longest terminal write            @SC86295\nAMAXRT   DC    A(MAXRT)      Longest terminal read             @SC86295\nF64KP    DC    A(((&MAXLR+7+5+4)/8)*8) Size of disk buffers    @SC87351\nF0       DC    F'0'\nF1       DC    F'1'\nF2       DC    F'2'\nF3       DC    F'3'                                            @SC86295\nF4       DC    F'4'                                            @SC86295\nF5       DC    F'5'\nF8       DC    F'8'\nF12      DC    F'12'\nF64      DC    F'64'\nBLANK    EQU   F64+3         EBCDIC blank                      @SC86295\nF        DC    F'15'\nMOD64    DC    F'63'\nF256     DC    F'256'\nSPACE    DC    A(ABL)                ASCII SPACE\n         ADCON CRCCLC,CWDSET,DECODE,DISKIO,DSPACE,DUMP\n         ADCON ENCODE,ERPACK,ERRTAB,FSPEC,GENCMD,GIVTAB,INBUF\n         ADCON INTINI,KHELP,NPREAD,OUTBUF,RECEIV\n         ADCON RIO,RPACK,RPAR,RPARSET,SCRNIO,SEND\n         ADCON SERVER,SET,SETMSG,SHOW\n         ADCON SIO,SPACK,SPAR,SPARSET,STATUS,SUPFNC,TERMIO\n         ADCON USNTRF\nLOBIT    DC    X'0000007F'\n* Parameter defaults.  Must map directly into DEFPARM etc.\n         KSYSTF ,                                              @SC86295\n         DS    0F --------Init for LOG file                    @SC86295\n         DC    A(0)          Buffer ptr                        @SC86295\n         DC    A(LPKT)       Buffer length                     @SC86295\n         DC    C'V',X'00'    RECFM, FLGS                       @SC86295\n         DC    Y(LPKT)       LRECL\n         FDBPAT ,                                              @SC86316\n         DS    0F --------Init for SEND/RECEIVE file           @SC86295\n         DC    A(0)          Addr of FSWRITE buffer            @SC86295\nMAXLRC   DC    F'&MAXLR'     Max lrecl                         @SC86316\n         DC    C'V',X'00'    RECFM,FLGS                        @SC86295\n         DC    H'80'         Lrecl for disk write              @SC86295\n         FDBPAT ,                                              @SC86316\n         DS    0F --------Init for TAKE file (read-only)       @SC86295\n         DC    A(0)          Buffer ptr (CMD)                  @SC86295\n         DC    F'256'        Max buffer size                   @SC86295\n         DC    C'V',X'00'    RECFM, FLGS                       @SC86295\n*\nIMAXTNT  DC    F'16'         Retry limit during setup          @SC86345\nIMAXTRY  DC    F'5'          Retry limit during transfer       @SC86164\nILCLDLY  DC    F'10'         Time to wait before sending       @SC86164\nIRPSIZ   DC    A(KMAX)       Max receive size                  @SC86295\nAKMAX    EQU   IRPSIZ,4      Normal packet maximum             @SC86295\nISPSIZ   DC    A(KDEF)       Max send size                     @SC86295\nIMAXOUT  DC    F'&MAXLR'     Max output buffer                 @SC86268\nITRMLIN  DC    CL8' '        Current data line                 @SC87166\nITYPFIL  DC    C'T'          Type of file (T,B,V,D),see BINF   @SC86151\nIDEFPRM  DC    AL1(KDEF+ABL,ABL,ABL,64,CR+ABL,A#,AN,A1,ABL,ABL) SC86149\n         DC    AL1(ABL,ABL,ABL,ABL)  Extended size defaults    @TB86196\n         DC    X'0'          Capabilities of micro      RCAPA  @SC86295\n         DC    X'8'          Capabilities I have        SCAPA  @SC86295\nLONGP    EQU   X'02'         LONGP bit in CAPAS flags          @TB86196\nMORCAPAS EQU   X'01'         More CAPAS bytes exist            @TB86196\n         DC    AL1(CR)       EOL char I need (cr)       REOL   @SC86295\n         DC    AL1(CR)       EOL I'll send              SEOL   @SC86295\n         DC    AL1(SOH)      Incoming pkt start char    RMARK  @SC86295\n         DC    AL1(SOH)      Outbound pkt start char    SMARK  @SC86295\n         DC    AL1(A#)       Micro's ctl-quote char     RCTLQ  @SC86295\n         DC    AL1(A#)       Ctl-quote char we'll use   SCTLQ  @SC86295\n         DC    AL1(AAMP)     Orig 8-bit quote char      EBQC   @SC86295\n         DC    AL1(5)        Time limit - micro to wait RTIMO  @SC86295\n         DC    AL1(0)        Timeout, if we can do it   TIMOUT @SC86295\n         DC    AL1(1)        User requested chk type    BCTC   @SC86295\n         DC    AL1(ATIL)     Original repeat prefix     RPTQC  @SC86295\n         DC    A(0,S1ORDL+2) For sending prompt         S1XOPL @SC87274\n         DC    X'&S1CMD',AL1(SBA),X'5D7F',AL1(SBA),X'0005' ON  @SC87274\n         DC    AL1(CR)       In case micro lost one     S1EOL  @SC87274\n         DC    AL1(XON)      Handshake for micro        S1HND  @SC87274\nMAXBSZ   DC    F'&MAXBS'     Max blksiz                        @SC86268\nBUFSIZ   DC    Y(LPKT)       Length of packet buffers          @SC86190\n*\n* Constants for COMMON\n         LTORG\n* Translation for conversion to hex notation                   @SC86156\nTRHEX    EQU   *-240                                           @SC86156\n         DC    C'0123456789ABCDEF'                             @SC86156\n* ASCII to EBCDIC translate table\nATOED    DC    X'00,01,02,03,37,2D,2E,2F,16,05,25,0B,0C,0D,0E,0F'\n         DC    X'10,11,12,13,3C,3D,32,26,18,19,3F,27,1C,1D,1E,1F'\n         DC    X'40,5A,7F,7B,5B,6C,50,7D,4D,5D,5C,4E,6B,60,4B,61'\n         DC    X'F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,7A,5E,4C,7E,6E,6F'\n         DC    X'7C,C1,C2,C3,C4,C5,C6,C7,C8,C9,D1,D2,D3,D4,D5,D6'\n         DC    X'D7,D8,D9,E2,E3,E4,E5,E6,E7,E8,E9,AD,E0,BD,5F,6D'\n         DC    X'79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96'\n         DC    X'97,98,99,A2,A3,A4,A5,A6,A7,A8,A9,C0,4F,D0,A1,07'\n         DC    X'00,01,02,03,37,2D,2E,2F,16,05,25,0B,0C,0D,0E,0F'\n         DC    X'10,11,12,13,3C,3D,32,26,18,19,3F,27,1C,1D,1E,1F'\n         DC    X'40,5A,7F,7B,5B,6C,50,7D,4D,5D,5C,4E,6B,60,4B,61'\n         DC    X'F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,7A,5E,4C,7E,6E,6F'\n         DC    X'7C,C1,C2,C3,C4,C5,C6,C7,C8,C9,D1,D2,D3,D4,D5,D6'\n         DC    X'D7,D8,D9,E2,E3,E4,E5,E6,E7,E8,E9,AD,E0,BD,5F,6D'\n         DC    X'79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96'\n         DC    X'97,98,99,A2,A3,A4,A5,A6,A7,A8,A9,C0,4F,D0,A1,07'\n* EBCDIC to ASCII translate table\nETOAD    DC    X'00,01,02,03,00,09,00,7F,00,00,00,0B,0C,0D,0E,0F'\n         DC    X'10,11,12,13,00,00,08,00,18,19,00,00,1C,1D,1E,1F'\n         DC    X'00,00,00,00,00,0A,17,1B,00,00,00,00,00,05,06,07'\n         DC    X'00,00,16,00,00,00,00,04,00,00,00,00,14,15,00,1A'\n         DC    X'20,00,00,00,00,00,00,00,00,00,5C,2E,3C,28,2B,7C'\n         DC    X'26,00,00,00,00,00,00,00,00,00,21,24,2A,29,3B,5E'\n         DC    X'2D,2F,00,00,00,00,00,00,00,00,7C,2C,25,5F,3E,3F'\n         DC    X'00,00,00,00,00,00,00,00,00,60,3A,23,40,27,3D,22'\n         DC    X'00,61,62,63,64,65,66,67,68,69,00,7B,00,00,00,00'\n         DC    X'00,6A,6B,6C,6D,6E,6F,70,71,72,00,7D,00,00,00,00'\n         DC    X'00,7E,73,74,75,76,77,78,79,7A,00,00,00,5B,00,00'\n         DC    X'00,00,00,00,00,00,00,00,00,00,00,00,00,5D,00,00'\n         DC    X'7B,41,42,43,44,45,46,47,48,49,00,00,00,00,00,00'\n         DC    X'7D,4A,4B,4C,4D,4E,4F,50,51,52,00,00,00,00,00,00'\n         DC    X'5C,00,53,54,55,56,57,58,59,5A,00,00,00,00,00,00'\n         DC    X'30,31,32,33,34,35,36,37,38,39,7C,00,00,00,00,00'\n* Table to remove 8th bit (overlaps LOCASE following)          @SC87253\nOFF80    DC    128AL1(*-OFF80)                                 @SC87253\n* Table to convert EBCDIC text to lower case\nLOCASE   DC    192AL1(*-LOCASE)                                @SC86209\n         DC    X'C0,81,82,83,84,85,86,87,88,89,CA,CB,CC,CD,CE,CF'\n         DC    X'D0,91,92,93,94,95,96,97,98,99,DA,DB,DC,DD,DE,DF'\n         DC    X'E0,E1,A2,A3,A4,A5,A6,A7,A8,A9,EA,EB,EC,ED,EE,EF'\n         DC    016AL1(*-LOCASE)                                @SC86209\n         TITLE 'Variable storage for Kermit-370'\nSTORAG   DSECT\n* - - - Translate tables (user-settable or program-modified)\nTRTBL    DS    CL256         For finding blanks                @SC86295\nATOE     DS    CL256         For converting to EBCDIC          @SC86295\nETOA     DS    CL256         For converting to ASCII           @SC86295\nTATOE    DS    CL256         For converting packets to EBCDIC  @SC87117\nTETOA    DS    CL256         For retrieving input ASCII        @SC87117\nUPCASE   DS    CL256         For upcasing EBCDIC               @SC86295\n*OFF80    DS    CL256         For removing x'80' bits          @SC87253\n* - - - Variables initialized to zeroes\nSCANPTR  DS    0D            Len and address of parse buffer\nLEN      DS    F\nADR      DS    F\nSCANSV   DS    D             Saved len and adr                 @SC86295\nCMD      DS    CL256         Buffer                            @SC86121\nCBUF     DS    A             Address of CP response buffer     @SC86121\nDATL     DS    F             Send packet size                  @SC86121\nFDATE    DS    F             Date of current file              @SC86295\nKBYTES   DS    F             Size of current file              @SC86158\n* Program flags                                                @SC86316\nFL1      DS    X                                               @SC86316\nTSTF     EQU   X'80'         Special option for debugging      @SC86295\nROVR     EQU   X'40'         Overwrite sent filename\nREN      EQU   X'20'         Rename incoming file\nNAK0     EQU   X'10'         Send NAK during Resend\nNAME     EQU   X'08'         Encoding/decoding a name\nBINF     EQU   X'04'         Binary data\nEOF      EQU   X'02'         End-of-file\nDEBUG    EQU   X'01'         Debug mode ON\nFL2      DS    X                                               @SC86316\nTABS     EQU   X'40'         Expand tabs\nEOFZ     EQU   X'20'         Truncate at \u00acZ for EOF\nSRV      EQU   X'10'         In SERVER mode\nPASS     EQU   X'08'         Try 'illegal' cmds on system      @SC86295\nECHO     EQU   X'04'         Echo TAKE files                   @SC86171\nPROTO    EQU   X'02'         Line ready for transfers          @SC86295\nDAT8     EQU   X'01'         8-bit data line                   @SC86316\nFL3      DS    X                                               @SC86316\nPXCH     EQU   X'20'         Parameters exchanged              @SC86152\nAPPN     EQU   X'10'         Append to existing files          @SC86203\nFL4      DS    X                                               @SC86316\nTTAB     EQU   X'80'         Use separate tables for terminal  @SC87117\nSFM      EQU   X'20'         Sending from memory               @SC86158\nTXT      EQU   X'10'         Xmitting text to micro            @SC86158\nNPS      EQU   X'08'         Xmitting without protocol         @SC86165\nUCMD     EQU   X'02'         User command entered              @SC86158\nNMOK     EQU   X'01'         Filename collsion already checked @SC87012\nFL5      DS    X                                               @SC86316\nCMERR    EQU   X'80'         Syntax error on last command      @SC86171\nTKHLT    EQU   X'40'         Quit TAKE file on error           @SC86171\nTIMF     EQU   X'20'         Enable packet-reception timer     @SC86355\nKEEP     EQU   X'10'         Keep incomplete files             @SC86225\nSALL     EQU   X'08'         Search all disks for SEND         @SC86209\nTKMSG    EQU   X'04'         Already issued TAKE error msg     @SC86239\n*\nSEQ      DS    X             Current pkt number                @SC86135\nRSN      DS    X             Received pkt number               @SC86135\nTRMFLG   DS    X             Flag(s) for terminal I/O          @SC87275\nTRMTP    DS    C             Type of terminal line             @SC87166\nRBUF     DS    A             Addr of FSREAD buffer             @SC86121\nCLEN     DS    A             Length of non-tokenized parm      @SC86121\nNSENT    DS    F             Number of files sent              @SC86121\nTSENT    DS    F             Pointer to sent files table       @SC86121\nIOERC    DS    F             Error count to detect loops       @SC86158\nTXTPTR   DS    2F            Ptrs to start and end of text     @SC86158\nRBUFL    DS    F             Record len (if recfm = V)         @SC86121\nRDWLEN   DS    F             Record descriptor length          @SC86151\nSNDPKL   DS    F             SNDPKT length for I/O             @SC86295\nRCVPKL   DS    F             RCVPKT length after I/O           @SC86295\nAPKT     DS    A             Ptr to packet buffer              @SC86190\nASPKT    DS    A             Ptr to effective send packet      @SC86190\nAASPKT   DS    A             Ptr to send packet                @SC86190\nASDATA   DS    A             Ptr to data to send               @SC86190\nARPKT    DS    A             Ptr to receive packet buffer      @SC86190\nARDATA   DS    A             Ptr to received data              @SC86190\nFILPTR   DS    A             Ticket for FILNAM file I/O        @SC86295\nLOGPTR   DS    A             Ticket for LOG file I/O           @SC86295\nDBGTYP   DS    A             Ptr to translation table          @SC86316\nTOUTOT   DS    2F            I*8 count of bytes sent           @SC86295\nTINTOT   DS    2F            I*8 count of bytes received       @SC86295\nDSKTOT   DS    2F            I*8 count of disk I/O bytes       @SC86295\nPAKCNT   DS    F             Number of packets sent/received   @SC86295\nRTRCNT   DS    F             Number of retries                 @SC86295\nSECTOT   DS    F             Duration of transfer (sec)        @SC86295\nCSECTOT  DS    F             Duration of transfer (csec)       @SC86345\nRECTRC   DS    F             Count of record truncations       @SC87268\nLSTATS   EQU   *-TOUTOT      Size of area to initialize        @SC86295\nPREFIX   DS    X,CL(FORMAXL) Prefix count and buffer           @HF86223\nSUFFIX   DS    X,CL(FORMAXL) Suffix count and buffer           @HF86223\nJFSPEC   DS    X             Length of foreign filespec        @SC86224\nJFNAM    DS    CL47          Filespec                          @SC86224\nFILNAM   DS    CL(LFID)      SEND/REC filename                 @SC86295\n         DS    0F                                              @SC86295\nIFILE    DS    CL(LFID)      Name of file(s) to send           @SC86295\nLIMTRY   DS    F             Max packet retries\nFREEDW   DS    F             Size of aux. storage              @SC86295\nFREEPTR  DS    A             Ptr to aux. storage               @SC87286\nSTKPTR   DS    F             Current stack end                 @SC86295\nSTKLIM   DS    F             End of stack storage              @SC86295\nEVCTR    DS    F             Count of files opened             @SC86295\nEMSGP    DS    A             Ptr to micro message              @BS86090\nEMSGL    DS    F             Length of msg                     @BS86090\nLEMSG    EQU   80            Max msg length kept               @SC87338\nLMARG    DS    F             Left margin for SEND (0=>none)    @SC87253\nRMARG    DS    F             Right margin (0=>none)            @SC87253\nRBUFP    DS    F             RBUF pointer\nWBUFL    DS    F             Data length in WBUF\nMAXSIZ   DS    2A(KDEF-16)   Max pkt size sent\nORGR0    DS    F             Saved R0 at main entry            @SC87253\nORGR1    DS    F             Saved R1 at main entry            @SC86295\n*  Plists for reading and writing in protocol mode\nS1WRPL   DS    2F            Address, length of data to send   @SC86295\nS1RDPL   DS    A(0,LPKT+3)   For reading data (max length)     @SC86295\n*\nTYWRPL   DS    2F            Address, length of data to send   @SC86295\nTYRDPL   DS    A(0,LPKT)     For reading data (max length)     @SC86295\n*\nRIOC     DS    F             Saved data length from prev read  @SC86295\nPREV     DS    C             Previous char decoded\n* - - - Variables initialized via block MVC's\n         KSYSTF ,                                              @SC86295\n* Specifications for LOG file                                  @SC86295\nLOGFDB   DS    0F                                              @SC86295\nLOGBUF   DS    A             Buffer ptr                        @SC86295\n         DS    A(LPKT)       Buffer size                       @SC86295\n         DS    C'V'          RECFM                             @SC86295\nLOGFLGS  DS    X'00'                                           @SC86295\n         DS    Y(LPKT)       LRECL                             @SC86295\n        FDBPAT LOG           Default disk volume, unit, etc.   @SC86316\n* Specifications for SEND/RECEIVE file                         @SC86295\nFILFDB   DS    0F                                              @SC86295\nWBUF     DS    A,F           Adr,length of FSWRITE buffer      @SC86121\nRFM      DS    C'V'          Default recfm for disk write\nFILFLGS  DS    X'00'                                           @SC86295\nLRECL    DS    H'80'         Lrecl for disk write\n        FDBPAT FIL           Default disk volume, unit, etc.   @SC86316\n* Specifications for TAKE file (read-only)                     @SC86295\nTAKFDB   DS    0F                                              @SC86295\nTAKBUF   DS    A             Buffer ptr (CMD)                  @SC86295\n         DS    F'256'        Max buffer size                   @SC86295\n         DS    C'V'          RECFM                             @SC86295\n         DS    X'00'                                           @SC86295\n*\nMAXTNT   DS    F'16'         Retry limit during setup          @SC86345\nMAXTRY   DS    F'5'          Retry limit during transfer       @SC86164\nLCLDLY   DS    F'10'         Time to wait before sending       @SC86164\nRPSIZ    DS    A(KMAX)       Max receive size                  @SC86295\nSPSIZ    DS    A(KDEF)       Max send size                     @SC86295\nMAXOUT   DS    F'&MAXLR'     Max output buffer                 @SC86268\nTRMLIN   DS    CL8' '        Current data line                 @SC87166\nTYPFIL   DS    C'T'          Type of file (T,B,V,D),see BINF   @SC86151\n*\nDEFPARM  DS    AL1(KDEF+ABL,ABL,ABL,64,CR+ABL,A#,AN,A1,ABL,ABL) SC86149\n         DS    AL1(ABL,ABL,ABL,ABL)  Extended size defaults    @TB86196\nRCAPA    DS    X'0'          Capabilities of micro             @SC86149\nSCAPA    DS    X'8'          Capabilities I have (A-packets)   @SC86149\nREOL     DS    AL1(CR)       EOL char I need (cr)\nSEOL     DS    AL1(CR)       EOL I'll send\nRMARK    DS    AL1(SOH)      Incoming pkt start char\nSMARK    DS    AL1(SOH)      Outbound pkt start char\nRCTLQ    DS    AL1(A#)       Micro's ctl-quote char\nSCTLQ    DS    AL1(A#)       Ctl-quote char we'll use\nEBQC     DS    AL1(AAMP)     Orig 8-bit quote char\nRTIMO    DS    AL1(5)        Time limit - micro to wait for us @SC86164\nTIMOUT   DS    AL1(0)        Timeout, if we can implement it   @SC86164\nBCTC     DS    AL1(1)        User requested chksum length\nRPTQC    DS    AL1(ATIL)     Original repeat prefix\nS1XOPL   DS    A(0,S1ORDL+2) For sending prompt                @SC87274\nS1XON    DS    X'&S1CMD',AL1(SBA),X'5D7F',AL1(SBA),X'0005'     @SC87274\nS1ORDL   EQU   *-S1XON                                         @SC86295\nS1EOL    DS    AL1(CR)       In case micro lost one            @SC87274\nS1HND    DS    AL1(XON)      Handshake for micro               @SC87274\nLDEFS    EQU   *-DEFS                                          @SC86295\n*\nS1DATA   DS    XL(S1ORDL)    Write or write/read orders        @SC86295\nWRRD     EQU   *-1           Zap this to 0 for just write      @SC86295\n*                   ... but ONLY if we really won't read again @SC87343\nSVHND    DS    X             Saved value of HANDSHAKE char     @SC87343\n* - - - Initialized to zeroes\nRPTQ     DS    X             Repeat prefix\nEBQ      DS    X             8-bit quoting char (off)\nBCTU     DS    X             Checksum length in use\nBCTR     DS    X             Other Kermit's chksum length\nRPADN    DS    X             Receive padding count\nSPADN    DS    X             Send pad count                    @SC86164\nRPADC    DS    X             Receive pad char\nSPADC    DS    X             Send pad char                     @SC86164\nTMP      DS    X\nTMPDW    DS    D             Work double word\nFSIZE    DS    F             Record length                     @SC86203\nFRECF    DS    C             Record format flag                @SC86151\nSTYPE    DS    C             Type of packet sent               @SC86295\nRTYPE    DS    C             Type of packet received           @SC86295\nERRNUM   DS    X             Error number                      @SC86156\nOLDERR   DS    X             Saved error number in loop        @SC86171\nREASON   DS    X             Reason for rejecting A-pkt        @SC86316\nOPRND    DS    CL32          Upcased operand for table lookup  @SC87034\nTCTLQ    DS    X             XECHO control character escape    @SC86165\nTABTBL   DS    XL20          Tab stops                         @SC86355\nTABCNT   DS    H             Current number of tabs            @SC86355\n         KSYSVAR ,           Specific variables                @SC87012\n         DS    0D                                              @SC86295\nSTODWDS  EQU   (*-STORAG)/8                                    @SC86295\n         TITLE 'ERRMSG - List of error messages'               @SC86135\n* Table of error messages                                      @SC86156\n         MSGDF NOE,'No errors'                    Err #0       @SC86156\n         MSGDF NFT,'No file transfers yet'        Err #1       @SC86156\n         MSGDF TRC,'Transfer cancelled'           Err #2       @SC86156\n         MSGDF USC,'Invalid server command'       Err #3       @SC86156\n         MSGDF TIE,'Terminal I/O error'           Err #4       @SC86156\n         MSGDF BPC,'Bad packet count or chksum'   Err #5       @SC86156\n         MSGDF IPS,'Invalid packet syntax'        Err #6       @SC86158\n         MSGDF IPT,'Invalid packet type'          Err #7       @SC86156\n         MSGDF MIS,'Lost a packet'                Err #8       @SC86156\n         MSGDF NAK,'Micro sent a NAK'             Err #9       @SC86156\n         MSGDF ABO,'Micro aborted'                Err #10      @SC86156\n         MSGDF FNE,'Invalid file name'            Err #11      @SC86156\n         MSGDF FNF,'File not found'               Err #12      @SC86156\n         MSGDF FUL,'Disk or file is full'         Err #13      @SC86345\n         MSGDF DIE,'Disk I/O error'               Err #14      @SC86345\n         MSGDF MOP,'Missing operand'              Err #15      @SC86158\n         MSGDF SYS,'Illegal system command'       Err #16      @SC86268\n         MSGDF KCE,'Kermit command error'         Err #17      @SC86171\n         MSGDF TIM,'No packet received'           Err #18      @SC86355\n         MSGDF RTR,'Records truncated'            Err #19      @SC87268\n         MSGDF COM,'Bad communication line'       Err #20      @SC87300\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0CONHL": {"ttr": 5128, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Notes on implementing terminal controller types in portable IBM/370\nKermit.\n\n1. Many Kermit subroutines, particularly the system-specific ones, are\n   called with a command code in register 0 or 1.  The code selects\n   which of several possible operations the routine is to perform.\n   Routines that require other arguments besides the command code, i.e.,\n   FSPEC, DISKIO, TERMIO, and SCRNIO, find the command code in R0, but\n   routines SUPFNC and SETMSG find it in R1.  See the comments at the\n   beginning of each routine for a description of the parameters and\n   the meanings of the command codes.  Any new terminal I/O handlers\n   will be expected to have the same calling sequences as TERMIO and\n   SCRNIO.\n\n2. The controller names are generic, i.e., common to all operating\n   systems, but the corresponding handlers are system-specific.  Thus,\n   it may require some coordination among the various versions of\n   Kermit-370 to get a new controller type properly implemented.  If,\n   for example, a new handler demanded a change in the shared calling\n   sequence, all handlers in all versions would probably need to be\n   modified accordingly.\n\n3. A new controller name can be implemented by simply adding it to the\n   list of names at SETTRKW.  Handling the new controller type requires\n   a bit more work.\n\n4. The currently selected controller name is saved internally by Kermit\n   as a one-character abbreviation (in TRMTP).  Hence, names must have\n   unique first letters.\n\n5. If there exists a means of detecting a particular type of controller\n   from within Kermit-370, the test should be made in routine SETMSG\n   (called with code 1) in order to initialize TRMTP properly.  At\n   present, the tests can distinguish TTY from SERIES1 (by checking if\n   the terminal has full screen capability) and SERIES1 from GRAPHICS\n   (by issuing a Yale ASCII status request and assuming that only\n   SERIES1-type controllers will respond).\n\n6. Routines RIO, SIO, INTINI, and RPAR (all generic) have logic based on\n   TRMTP for deciding which system-dependent handler to call at various\n   points and for inserting the proper transparent-mode commands, if\n   any, into the packet buffer.  The handlers have a shared calling\n   sequence.  If a new controller type is similar enough to existing\n   ones, it may be able to share an existing handler.  Otherwise, a new\n   handler modelled along the lines of TERMIO and SCRNIO should be\n   added.  In that case, an ADCON for the new routine must be added to\n   the COMMON section.\n\n7. Uses of TRMTP:\n   a. selecting I/O handlers in SIO, RIO, INTINI, RPAR\n   b. controlling system-specific setup in SETMSG\n   c. limiting packet size for TTY terminals\n   d. controlling generic I/O operations as needed\n   e. initialized in SETMSG, if possible\n\n8. Support for a new controller type must cover all the usual require-\n   ments for the Kermit protocol:  there must be some sequence of\n   commands to place the controller in transparent mode, such that\n   inbound characters are not echoed and are presented to Kermit-370 \"as\n   is\" (or at worst converted to EBCDIC), and outbound characters are\n   similarly presented to the terminal.  Such a command sequence might\n   be \"once-only\", but is more likely required for each outbound packet.\n   The behavior of the SERIES1 type is illustrative.\n\n9. Once a transfer is started, the succession of calls to the device\n   handlers is entirely regimented.  In the absence of I/O errors, the\n   transfer consists entirely of pairs of calls to the appropriate\n   handler, first with code 4 (write) and then code 5 (read).  Errors\n   can interrupt the sequence with other calls as needed for recovery.\n   During a transfer, the flag WRRD has the value 5, indicating that\n   every Write operation is followed immediately by a Read.  However,\n   depending on the type of transfer, the last packet may be either\n   inbound or outbound.  In the latter case, WRRD is set to 0 for the\n   last 4/5 pair of calls, indicating that the Read call need not return\n   any data.\n\n------------------------------------------------------------------------\nKermit-370 has been reported or rumored to work with CONTROLLER set to:\nTTY      - IBM 3705; IBM 3725; Comten; IBM 3708.\nSERIES1  - Yale ASCII system on IBM Series/1 or IBM 4994; IBM 7171; IBM\n           937x ASCII subsystem; Hydra II; Commtex Cx-80.\nGRAPHICS - Datastream/Leedata 8010, 8030, or 874; Micom 7400; PCI 1076\n           or 276 (see below); Renex TMS-1; KMW.\n\nFailure has been reported for SIM3278 and for Adacom.\n\nNote: The Commtex Cx-80 requires that all ASCII data have the high bit\n      set on output and is seen by Kermit as a GRAPHICS device.\n\nAnother note: The PCI protocol converters require updates to CMS and TSO\nKermit that were issued in November 1988, and are listed in the .BWR files:\n\"Some terminal emulators attached through VTAM apparently do not respond\ncorrectly without an explicit command to \"unlock the keyboard\" as part\nof the transparent I/O request.  In particular, this behavior has been\nseen with a PCI 276.  The following update appears to correct the\nproblem (listed in IKTKER.BWR, and included in IKCKER.BWR and IKCKER.UPD).\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0DEF": {"ttr": 5131, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IK0DEF\n         TITLE 'Kermit-370 Control blocks and constants'       @SC86268\n         PRINT NOGEN\n         FDBD  ,                                               @SC86295\n         USING COMMON,10                                       @SC86316\n         USING STORAG,11                                       @SC86316\n         SYSMACS ,           System-dependent macros           @SC86268\n*\n         GBLC  &KVRSN,&KSYS,&KDATE,&RTN,&TYPCMD,&S1CMD         @SC86355\n         GBLA  &MAXLR,&MAXBS                                   @SC86268\n&KVRSN   SETC  '4.0'                                           @SC87320\n&KDATE   SETC  '87/12/17'                                      @SC87351\n         SSYMS ,                                               @SC86268\n* EBCDIC constants\nSOH      EQU   X'01'                 ctl-A in Ascii/Ebcdic\nXON      EQU   X'11'                 xon in Ascii/Ebcdic\nNL       EQU   X'15'\nCR       EQU   X'0D'                 CR in Ascci and Ebcdic\nLF       EQU   X'25'                 LF in Ebcdic\nTAB      EQU   X'05'                 Ebcdic tab\nSUB      EQU   X'3F'                 Ebcdic ctl-Z\n* Ascii constants\n*   1st, all letters and digits:                               @SC86262\n         ASCSYM ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789           @SC86262\n*   and a few others:\nA#       EQU   35                    Ascii #\nALF      EQU   10                    Ascii LF\nADOT     EQU   46                    Ascii dot\nAAMP     EQU   38                    Ascii ampersand\nABL      EQU   32                    Ascii space\nAUP      EQU   94            Ascii up-arrow (\u00ac)                @SC86165\nADEL     EQU   127                   Ascii delete/rubout\nATIL     EQU   126                   Ascii Tilde\n* Flags for extracting filespec                                @SC86295\nFFRCF    EQU   X'40'         RECEIVE or foreign filespec       @SC86295\nFFSND    EQU   X'20'         SEND                              @SC86295\nFFGET    EQU   X'10'         GET                               @SC86295\nFFWLD    EQU   X'08'         Treat incomplete filespec as wild @SC86295\nFFNEW    EQU   X'02'         Get unique name (in place)        @SC86295\nFFUTL    EQU   FFSND+FFGET   Extract for file utility          @SC86295\nFFHDR    EQU   FFUTL+FFRCF   Decode Kermit file header         @SC86295\nFFENC    EQU   FFNEW+FFRCF   Encode Kermit file header         @SC86295\nFFDSP    EQU   FFNEW+FFSND   Copy name in standard print form  @SC86295\nFFGIV    EQU   FFWLD         Like TAKE, but use for output     @SC87117\n* Miscellaneous constants\nKMIN     EQU   20                    Kermit protocol minimum pkt size\nKMAX     EQU   94                    Kermit protocol maximum pkt size\nKMAXF    EQU   KMAX+1        Kermit xtended pkt base           @TB86196\nKMAXESIZ EQU   KMAXE+7 SOH+LEN+NUM+TYPE+LENX1+LENX2+HCHECK     @TB86196\nKDEF     EQU   80                    Kermit protocol default pkt size\nLPKT     EQU   KMAXESIZ+KMAX+1 Packet buffer size (with pad)   @SC86202\nMAXNSENT EQU   512           Size of 'sent' table              @SC86190\nTAKMAX   EQU   10                    Max TAKE nesting level\nFORMAXL  EQU   31            Maximum file prefix/suffix size   @HF86223\n* 3270 orders:\nSBA      EQU   X'11'                 Set Buffer Address (3270)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0DOC": {"ttr": 5133, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "KERMIT   TITLE 'Kermit for IBM 370'                            @SC86268\n* Kermit for IBM 370.  Major revision:  1987 November          @SC87320\n* See the version and system symbols below under 'Constants'   @SC86268\n* Copyright (C) 1982, 1985 Columbia University\n*\n* Permission is granted to any individual or institution to copy or\n* use this program, except for explicitly commercial purposes.\n*\n* This program is the IBM 370 side of a file transfer system.  It\n* can be used to transfer files between a micro and a system running\n* under various operating systems.  See the KERMIT User's Guide\n* and Protocol manual for the complete program specifications.\n*\n* All assembly-language Kermits for IBM 370's are derivatives of\n* Kermit-CMS 1.00, although some (including the current version) have\n* passed through more-or-less complete rewriting.  The following is a\n* summary of the versions leading to the present one, which is actually\n* a generic family of Kermits with specific members for various\n* operating systems.\n*\n* Daphne Tzoar, Columbia University Center for Computing Activities\n* March 1982, Kermit-CMS Versions 1.00-2.01\n*\n* Ronald J. Rusnak, University of Chicago Computation Center\n* May 1984, Kermit-TSO 1.0\n*\n* Charles Painter, University of Toronto Computing Services\n* December 1984, Series/1 support added to Kermit-TSO\n*\n* Vace Kundakci, Columbia University Center for Computing Activities\n* December 1985, Kermit-CMS Versions 2.02-3.0\n*\n* Steve Blankinship, Triangle Universities Computation Center\n* January 1986, Kermit-TSO 2.10 (derived from Kermit-CMS 2.01)\n*\n* John Chandler, Smithsonian Astrophysical Observatory\n* July 1986, Kermit-CMS/Kermit-370 Versions 3.1-\n*\n* Dale White and Roger Fajman, National Institutes of Health\n* December 1986, NIH TSO Kermit (rewritten in ALP)\n*\n* Please address all comments and questions to:\n*\n*    Columbia University Center for Computing Activities\n*    Sytems Integration Group\n*    Watson Building, 7th floor\n*    612 West 115th Street\n*    New York, NY  10025\n*    Tel: (212) 280-3703\n*\n* Version 3.2 (Dec 86)\n*    Extensive revisions from version 3.1 - separation into generic\n*    and system-specific sections.  New features: D-binary file type,\n*    DIR command, give number of files sent in STATUS report, TDUMP\n*    NAMES command to report names of files sent, give throughput\n*    statistics in STATUS report, support REMOTE COPY and RENAME to\n*    micro server, optional implied system commands, binary file record\n*    padded with 0 (not blank), add file date to A-packets, reject file\n*    if A-pkt says it's too big, display reason for A-pkt rejection in\n*    STATUS report, SET PARITY to allow 8-bit data through S/1, allow\n*    debug log of raw data, allow setting initial retry limit,\n*    allow SET 8-BIT-QUOTE, use input case for XECHO + foreign files,\n*    implement separate terminal anti-translation (TATOE/TETOA),\n*    GIVE command to save translation table to disk as a TAKE file,\n*    interface to allow Kermit subcommand execution from CMS EXEC's,\n*    left and right margins for SEND,\n*    SET PROMPT, SET MARGIN, SET HANDSHAKE, no page break in buffers,\n*    automatic length-tuning of long packets.\n*    Settable tab stops - S. Blankinship\n*    Fix to allow long packets through 7171 VTAM - R. Bolch\n*\n* Version 3.1 (Jul 86)\n*    Extensive revisions from version 3.0 - including new SET/SHOW;\n*    non-delimited V binary transmission; Generic, CP/CMS, and Kermit\n*    commands in Server mode; packet padding; capability mask;\n*    A-packets with file size, system tag, F/V, and Text/Bin;\n*    SPACE cmd; SET/SHOW: APPEND,DESTINATION,DELAY,RETRY,SEARCH-ALL;\n*    symbolic error numbers; 'Discard' indicator on Z-packet;\n*    optional remote file name for SEND + micro GET; optional echo and\n*    halt-on-error for TAKE files; default ft=TAKE for TAKE command;\n*    commands to micro Server; selective or universal SHOW;\n*    non-zero return codes for error conditions.\n*    XTYPE/XECHO commands - C. Frazier at Harvard Bus. Sch.\n*    Long packet protocol - R. Bolch at Triangle\n*\n* Version 3.0\n*    Almost a full rewrite.\n*\n* Version 2.02 (Dec 85)\n*    Add a SLEEP command after server/receive mode greetings.\n*    Fix Logout hanging in Series1 mode - P. DiCamillio.\n*    Hand-code HNDINT to allow non-009 console - B. Verser, D. Elbon\n*    Add SET EOF ON/OFF command to truncate file at \u00acZ.\n*    Add SET TABS-EXPAND ON/OFF command to expand tabs in TEXT.\n*    Do not change MAXOUT if not BINARY - Greg Small.\n*    Blk-3 chksum calculation begins at pkt len field - G. Small\n*    Initial setting of status: no file tranfer yet - G. Small\n*    Use max packet size of 60 for 7171 - P. Di Camillio\n*    SHOW command defaults to SHOW ALL\n*\n* Version 2.01 (May 85)\n*    If virtual console is not a TTY, assume 3270.\n*\n* Version 2.0\n* Sep 83: 8-bit quoting to allow binary file transfer.\n* Sep 83: Don't restrict disk lrecl to 256.\n* Aug 84: Pack as much data into a packet as possible.\n* Aug 84: Use common routines SPAR and RPAR for init packets.\n* Sep 84: Add repeat count prefixing.\n* Sep 84: Add support for two char checksum and three char CRC.\n* Oct 84: Add SET/SHOW DEBUG mode.\n* Feb 85: Add support for Series/1 front end.  Bob Shields\n* Mar 85: Add server support including only basic functions.\n*         Put send-error-packet code in one place only.\n* Mar 85: If debugging is on, log packets in a file.\n* Mar 85: Upon startup, read commands from two init files:\n*         SYSTEM KERMINI and (USERID) KERMINI.  Lines with * as\n*         the first character are comments.  Add TAKE command.\n*         Lrecl for these files must be 130 or less.\n* Mar 85: Implement skip file or file group when receiving.\n* Apr 85: Add a SHOW ALL command.\n* Apr 85: Add SET WARNING ON/OFF in case incoming file has the\n*         same name as an existing one.  If ON, rename incoming\n*         file.  If OFF, overwrite existing file.\n* Apr 85: Modify SPACK and RPACK cosole I/O to use plists with\n*         flags to bypass user translate tables.  Bob Shields\n* Apr 85: Add SET ETOA and SET ATOE to allow user to modify the\n*         translate tables so they conform to his system.  Display\n*         tables with new command: TDUMP.  Have SET routines use\n*         common code to get decimal input.\n* Apr 85: Encode outgoing filename, decode incoming one.\n         TITLE 'MACRO definitions'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0GUP": {"ttr": 5379, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "GUPI     TITLE 'Generic Update Program for IBM 370'\n*\n* (c) 1987, J. F. Chandler\n*\n* Permission is granted to any individual or institution to copy or\n* use this program, except for explicitly commercial purposes.\n*\n* This program consists of two parts: generic (the present file\n* IK0GUP.ASM plus some macros shared with Kermit-370) and system-\n* specific (the file IKxGUP.ASM plus some more shared macros).  Here,\n* \"x\" represents the target system code, such as \"T\" for TSO.  IKxGUP\n* is composed of \"COPY\" elements (designed to be fetched from a macro\n* library) plus, perhaps, some specialized GUPI macros.  The simplest\n* method of assembling this program is to make a macro library out of\n* IKxGUP or to include its members in the Kermit-370 library, if any.\n* Like the corresponding Kermit files IKxMAC.ASM, the specific part of\n* GUPI is divided into members by lines beginning  \"*COPY\" and\n* containing the member name in columns 55-62.  If the Kermit-370\n* macros are not kept in a library, the ones needed by GUPI can be\n* inserted by hand before the first EJECT.\n*\n* Kermit macros used in the generic code:\n*  ADCON, CLOSF, DSMFREE, DMSFRET, ENTER, EXIT, FDBD, FDBPAT, KCALL,\n*  LOCALS, LREG, OPENF, PTEXT, READF, RET, WRITF, WTEXT        @SC88111\n*\n* 1. System-specific code is responsible for the interface between the\n*    program on the one hand and the user and operating system on the\n*    other.  The user interface consists of supplying the following\n*    information:\n*        SRCNAM - file spec of the base source\n*        CTLNAM - file spec of the update controls\n*        OUTNAM - file spec of the output new source\n*        MRKD   - 3-character sequence label to be placed in columns\n*                 73-75 of inserted or renumbered records in 5-column\n*                 updating mode.\n*        FLG    - byte of flags governing the options of in-core vs.\n*                 disk-to-disk updates and 5- vs. 8-column mode.\n*    The system-specific code must also include subroutine DISKIO and\n*    any other system-interface routines for error message, memory\n*    management, and the like.\n*\n* 2. Generic code carries out the update function, reading the source\n*    and control files and writing the updated output.  In disk-to-disk\n*    mode, GUPI makes a single pass (reading and writing in parallel\n*    with minimal buffering), and the control commands must form a\n*    non-overlapping monotonic sequence, but in-core update mode allows\n*    any number of sub-sequences to be applied cumulatively by making\n*    three passes: (1) read the entire source, (2) apply updates, and\n*    (3) write out the new source.\n*\n*    The update control file consists of control cards and data cards.\n*    All control cards begin with './' in columns 1-2 followed by\n*    free-form fields in columns 4-50, and all other cards are\n*    considered data cards.  In the following, parentheses denote\n*    optional items, upper-case items are verbatim, and lower-case\n*    items are 'variables' to be filled in.\n*\n*    Comment:  ./ *   remarks\n*        Annotates the update file.  No other function.\n*\n*    Sequence: ./ S   seq1 inc (mark)\n*        Resequences the entire source file.  The output starts with\n*        number 'seq1' and steps by 'inc'.  If a 'mark' is supplied, it\n*        replaces the default contents of columns 73-75.\n*\n*    Delete:   ./ D   line1 (line2)\n*        Removes source line 'line1' or lines 'line1' through 'line2'\n*        inclusive.  The starting and ending line numbers must exist\n*        in the source file.\n*\n*    Insert:   ./ I   line1  ($ seq1 inc)\n*        Inserts the immediately following data cards after line\n*        'line1' (which must exist) in the source.  The inserted cards\n*        are resequenced from 'seq1' by 'inc' and must fit strictly\n*        between line 'line1' and its successor.\n*\n*    Replace:  ./ R   line1  (line2)  ($ seq1 inc)\n*        Deletes source lines as in the Delete command and then inserts\n*        as in the Insert command except that the new cards are added\n*        in place of the deleted range.\n*\n         SPACE 4                                               @SC88111\n*  Update history:                                             @SC88111\n* Version 1.1 - 88/8/31 - Implement system-specific epilog,    @SC88111\n*                         allow RECFM=V control file, use new  @SC88111\n*                         FDBPAT macro                         @SC88111\n         EJECT\n         PRINT NOGEN\n*          Generic preliminaries\n         FDBD\n*\n         USING STORAG,11\n         USING COMMON,10\n*\n         COPY  GUPSPC\n*\nGUPI     ENTER MAIN\n         COPY  GUPNIT\n         TITLE 'Update: process control cards'\nOPN      DS    0H\n         MVC   MRK,MRKD      Default label field\n         LA    3,CTLBUF\n         ST    3,INSBP       Set up control buffer\n         MVC   VARS(LVARS),IVARS\n         OPENF I,SRCNAM,FDBP,SRC,E=OPNERR\n         OPENF I,CTLNAM,FDBP,CTL,E=OPNERR\n         OPENF O,OUTNAM,FDBP,OUT,E=OPNERR\n         OI    FLG,XXTOP     Start at top of file\n         ZAP   LSTNO,=P'0'   Clear sequence numbers\n         ZAP   OUTNO,=P'0'\n         SR    6,6\n         TM    FLG,XXCOR     In-core?\n         BZ    CTLP          No, just start reading\n*\n*          Read entire file into core\n         BAL   9,GBLK\n         LA    3,4(1)\n         ST    3,INSBP       Set up control buffer\n         LA    6,SPTR\nRLP      BAL   9,GBLK        Get buffer\n         LA    3,4(1)        Start of card\n         LR    4,1           Save ptr\n         READF SRC,BUFFER=(3),E=RLPZ\n         ST    4,0(6)        Add to chain\n         LR    6,4\n         B     RLP\nRLPZ     C     15,=F'12'     Eof?\n         BNE   DSKERR        No, quit\n*\n*          Main loop - read a control card\nCTLP     L     3,INSBP       Ptr to control buffer\n         READF CTL,BUFFER=(3),E=CTLZ\n         CLC   =C'./ ',0(3)  Control card?\n         BNE   ERR0          No, too bad\nCTLQ     CH    0,*+10        R0 has length read                @SC88244\n         BNH   *+8                                             @SC88244\n          LA   0,50          Ignore anything after col 50      @SC88244\n         AR    0,3                                             @SC88244\n         LA    1,80(,3)      End of card buffer                @SC88244\n         SR    1,0           Length to blank                   @SC88244\n         SR    15,15                                           @SC88244\n         ICM   15,8,=C' '                                      @SC88244\n         MVCL  0,14                                            @SC88244\n         LA    0,2(3)\n         ST    0,COL         Set up scan\n         BAL   14,SCANN      Find command\n          NOP  0\n         MVC   CMD,0(3)\n         CLI   1(3),C' '     Should be 1 char\n         BNE   ERR1          No, bad syntax\n         CLI   CMD,C'*'      Comment?\n         BE    CTLP          Yes, ignore it\n         LA    1,4\nCMDLP    IC    0,CMDTB-1(1)  Get next command\n         CLM   0,1,CMD       Match?\n         BE    CMDF          Ok\n         BCT   1,CMDLP\n         B     ERR1          Bad command\nCMDTB    DC    C'SDIR'\nCMDF     BCT   1,PROC        Go if not sequence\n*          Resequence source deck\n         ZAP   INCNO,=P'10'  Default increment\n         TM    FLG,XX8       5-column?\n         BZ    *+10          Yes\n         ZAP   INCNO,=P'1000' 8-column default\n         MVC   NXTNO,INCNO\n         MVC   MRK,MRKD      Default label field\n         BAL   14,SCANN      Get start value\n          B    SEQ1          Use defaults\n         MVC   NXTNO,ARGNO\n         BAL   14,SCANN      Get increment value\n          B    SEQ1          Use default\n         MVC   INCNO,ARGNO\n         BAL   14,SCANN      Check for label field\n          NOP  0\n         CLI   0(3),C' '\n         BE    SEQ1\n         MVC   MRK,0(3)      Use it\nSEQ1     ZAP   ARGNO,=P'0'   At start of file?\n         BAL   14,SEQCHK\n         BAL   14,NEXT       Get a card\n         LTR   3,3           End?\n         BZ    CTLP          Yes, back to control stream\n         BAL   14,SNUM       Renumber it\n         MVC   LSTNO,INSNO   Output card number\n         B     SEQ1\n*\n*          Process an editing card\nPROC     BAL   14,SCANN      Get seqno 1\n          B    ERR1          Missing\n         MVC   NXTNO,ARGNO   Default start\n         LM    0,1,NXTNO\n         SRL   1,24          Remove garbage\n         LA    2,X'10'       Default increment =P'1'\n         LA    3,5           Max for checking\nPROCDL   SRDL  0,4           Check next digit\n         LTR   1,1           Found non-zero?\n         BNZ   PROCDF        Yes, got it\n         SLL   2,4           No, try * 10\n         BCT   3,PROCDL\nPROCDF   ST    2,TMPDW+4\n         OI    TMPDW+7,15    Fix sign\n         ZAP   INCNO,TMPDW+4(4)\n         AP    NXTNO,INCNO   Default start\n         BAL   14,SEQCHK     Check order\n         BAL   14,FIND       Get proper source card\n         ST    6,SAV6        Save current card ptr\n         CLI   CMD,C'I'\n         BE    *+8           No deletion\n         OI    FLG,XXKIL     Delete\n         BAL   14,SCANN      Get end of range\n          B    PRC2          Just one card\n         BAL   14,FIND       Find end of range\n         BAL   14,SCANN      Should be followed by '$'\n          B    PRC2          Ok\n         B     ERR1          Oops, extra number there\nPRC2     BAL   14,NEXT       Skip over this card\n         BAL   14,KILL       Delete, if necessary\n         CLI   CMD,C'D'\n         BE    CTLP          Done if delete\n         BAL   14,SCANN      Insert starting number?\n          B    INSRT         No, use defaults\n         MVC   NXTNO,ARGNO   Yes\n         CLC   OUTNO,NXTNO   Is it ok?\n         BNL   ERR3          Out of sequence\n         BAL   14,SCANN      Increment?\n          B    INSRT         No, use default\n         MVC   INCNO,ARGNO\nINSRT    L     3,INSBP       Ptr to buffer\nINS3     READF CTL,BUFFER=(3),E=CTLZ\n         CLC   =C'./ ',0(3)\n         BE    CTLQ          End of insertion\n         AR    0,3                                             @SC88244\n         LA    1,72(,3)      Must fill to col 72               @SC88244\n         SR    1,0           Length to blank, if any           @SC88244\n         BNP   INS3A         No need to fill                   @SC88244\n         SR    15,15                                           @SC88244\n         ICM   15,8,=C' '                                      @SC88244\n         MVCL  0,14          Fill with blanks                  @SC88244\nINS3A    DS    0H                                              @SC88244\n         BAL   14,SNUM       Sequence new card\n         OI    FLG,XXINS     Now inserting\n         MVC   OUTNO,INSNO   Write it\n         TM    FLG,XXCOR     In-core?\n         BZ    INS4          No, write it out\n         SH    3,EH4         Get chain ptr for buffer\n         MVC   0(4,3),0(6)   Insert into file\n         ST    3,0(6)\n         LR    6,3           New card is before 'current' one\n         BAL   9,GBLK        Get buffer\nEH4      EQU   *+2           Offset to card\n         LA    3,4(1)\n         ST    3,INSBP\n         B     INS3\nINS4     WRITF OUT,BUFFER=(3),E=DSKERR\n         B     INS3\n*\n*          END OF CONTROL FILE INPUT\nCTLZ     CLOSF CTL\n         TM    FLG,XXCOR     In-core?\n         BZ    RDMP          No, copy rest of source to output\n*          Write out file and release storage\n         LA    6,SPTR        Start of file\nDMPLP    ICM   6,15,0(6)     Get next card\n         BZ    DMPZ          Done\n         LA    3,4(6)\n         WRITF OUT,BUFFER=(3),E=DSKERR\n         B     DMPLP\nDMPZ     L     6,BPTR        Start of blocks\nFRELP    LTR   1,6           Reached end of chain?\n         BZ    FREZ          Yes, all released\n         ICM   6,15,0(6)     Ptr to next\n         LA    0,(99*84+4)/8\n         DMSFRET DWORDS=(0),LOC=(1)\n         B     FRELP\n*\nRDMP     BAL   14,NEXT       Get a card\n         LTR   3,3\n         BNZ   RDMP          Keep copying\n*        B     FREZ\nFREZ     CLOSF OUT           Close files\n         CLOSF SRC\n         SR    15,15         Ok\nQUIT     DS    0H                                              @SC88111\n         COPY  GUPFIN                                          @SC88111\n         RET   MAIN                                            @SC88111\n         TITLE 'Update: various subroutines'\n*          Renumber a source or inserted record\nSNUM     UNPK  72(8,3),NXTNO Replace sequence field\n         OI    79(3),C'0'    Fix zone\n         TM    FLG,XX8       Is it 8-col?\n         BO    *+10          Yes\n         MVC   72(3,3),MRK   Just 5\n         MVC   INSNO,NXTNO   Note current number (inserted)\n         AP    NXTNO,INCNO\n         BR    14\n*\n*          Check sequence numbers.  if out of order, assume new batch\nSEQCHK   CP    LSTNO,ARGNO   Sequence ok?\n         BNHR  14            Ok\n         TM    FLG,XXCOR     In-core?\n         BZ    ERR2          No, can't back up\n         OI    FLG,XXTOP     Yes, start at top\n         ZAP   LSTNO,=P'0'\n         BR    14\n*\n*          Remove deleted cards (if in-core)\nKILL     TM    FLG,XXKIL\n         BZR   14            Not deleting\n         NI    FLG,255-XXKIL Now turn it off\n         TM    FLG,XXCOR     In-core?\n         BZR   14            No, cards were flushed already\n         L     1,SAV6        -> start of range\n         L     2,0(1)        Start\n         MVC   0(4,1),0(6)   Unchain card(s)\n         MVC   0(4,6),FPTR   Put on free chain\n         ST    2,FPTR\n         LR    6,1           Fix current ptr\n         BR    14\n*\n*          Find desired sequence number\nFIND     CP    LSTNO,ARGNO   Match?\n         BER   14            Ok\n         BH    ERR6          Went too far\n         ST    14,FNDSV                                        @SC88111\n         BAL   9,NEXTA       Get next\n         L     14,FNDSV                                        @SC88111\n         LTR   3,3\n         BZ    ERR6          Not found\n         B     FIND\n*\n*          Get next card\nNEXT     LR    9,14          Direct return\nNEXTA    TM    FLG,XXKIL+XXTOP\n         BNZ   NEXTB         Nothing for output\n         TM    FLG,XXINS     Insertion?\n         BZ    NEXTOK        No, don't insist\n         CLC   OUTNO,LSTNO   Are we in order?\n         BNL   ERR5          No, give up\nNEXTOK   MVC   OUTNO,LSTNO   Save output sequence\nNEXTB    TM    FLG,XXCOR     In-core?\n         BZ    RNEXT         No, read it\n         TM    FLG,XXTOP\n         BZ    NEXTN\n         LA    6,SPTR        Start at top\n         B     NEXTS         Rejoin with predecessor of new\nNEXTN    ICM   3,15,0(6)     Get ptr to current card, if any\n         BZR   9             At eof\n         LR    6,3           Move to next\nNEXTS    ICM   3,15,0(6)     Get ptr to new card, if any\n         BZR   9             At eof\n         LA    3,4(3)        Ptr to card itself\nNEXTP    NI    FLG,255-XXINS-XXTOP Started down file\n         MVC   TMPDW,72(3)   Copy sequence field\n         TM    FLG,XX8\n         BO    *+10\n         MVC   TMPDW(3),=C'000'  Only 5 digits used\n         TRT   TMPDW,NUMB    Valid?\n         BNZR  9\n         PACK  LSTNO,TMPDW   Save value\n         BR    9             Return\n*\nRNEXT    TM    FLG,XXEOF     Already hit end?\n         BO    RNXZ          Yes, don't read again\n         LA    3,SRCBUF\n         TM    FLG,XXKIL+XXTOP\n         BNZ   RNXA          No current card, or killing anyway\n         WRITF OUT,BUFFER=(3),E=DSKERR\nRNXA     READF SRC,BUFFER=(3),E=RNXE\n         B     NEXTP\nRNXE     C     15,=F'12'     Eof?\n         BNE   DSKERR        No, quit\nRNXZ     SR    3,3           Indicate eof\n         OI    FLG,XXEOF     Remember it\n         BR    9             Return\n*\n*          Add a block of buffers to free chain, then get one\nGMORE    LA    0,(99*84+4)/8 Get 99 at once\n         DMSFREE DWORDS=(0),ERR=ERR4\n         MVC   0(4,1),BPTR   Add to block chain\n         ST    1,BPTR\n         LA    1,4(1)        First new buffer\n         LA    0,99          Counter\nGCHN     MVC   0(4,1),FPTR   Add to chain\n         ST    1,FPTR\n         LA    1,84(1)\n         BCT   0,GCHN\n*          Get a free buffer (GBLK) ptr in R1\nGBLK     ICM   1,15,FPTR\n         BZ    GMORE         Need to get some more\n         MVC   FPTR,0(1)\n         XC    0(4,1),0(1)   Clear chain ptr\n         BR    9             AND RETURN\n*\n*          Find next numeric field in card, skip if ok\nSCANN    SR    1,1\n         L     3,COL         Current position\n         TRT   0(30,3),NBLNK Next non-blank\n         BZR   14            Nothing\n         LR    3,1           Ptr to field\n         TRT   0(10,3),BLNK  End of field\n         BZR   14            Too long\n         ST    1,COL         New position\n         CLI   0(3),C'0'     Numeric?\n         BLR   14            No, skip it\n         BCTR  1,0           Last char\n         SR    1,3           Count - 1\n         EX    1,TRTN        Check valid digits\n         BNZ   ERR1          Oops\n         EX    1,PCKA\n         OI    ARGNO+4,15    Fix sign, just in case\n         B     4(14)         Got it\nPCKA     PACK  ARGNO,0(,3)\nTRTN     TRT   0(,3),NUMB\n         TITLE 'Update: error messages'\nERR0     PTEXT 'MISSING CONTROL CARD'\n         B     ERPNC\nERR1     PTEXT 'INVALID CONTROL CARD'\n         B     ERPRT\nERR2     PTEXT 'CONTROL CARD OUT OF ORDER, DISK-TO-DISK MODE'\n         B     ERPNC\nERR3     MVC   LSTNO,NXTNO   Get bad number\n         B     ERR5\nERR4     PTEXT 'FREE STORAGE EXHAUSTED, TRY DISK-TO-DISK UPDATE'\nERRMSG   WTEXT (3),(4)       Type it\n         B     ERREX\nERR5     UNPK  MSGS2,LSTNO   Set up message\n         OI    MSGS2+7,C'0'\n         UNPK  MSGS1,OUTNO\n         OI    MSGS1+7,C'0'\n         PTEXT MSGSQ,LMSGSQ\n         B     ERPNC\nERR6     PTEXT 'SEQUENCE NUMBER NOT FOUND'\n         B     ERPRT\nERPNC    XC    COL,COL       No column indicator\nERPRT    WTEXT (3),(4)\n         L     5,INSBP\n         WTEXT (5),80\n         ICM   3,15,COL      Any column to mark\n         BZ    ERREX         No\n         MVI   0(5),C' '     Blank out buffer\n         MVC   1(79,5),0(5)\n         MVI   0(3),C'*'\n         WTEXT (5),80\nERREX    LA    15,20\n         B     QUIT\n         LOCALS\nQUPDT    EXIT\n         TITLE 'Update: Common code, constants, and variables'\nCOMMON   CSECT\n*\n* Utility routine to set up linkage\nSUBENT   LR    12,15         CSECT addressibility              @SC86295\n         L     15,STKPTR     Current end of stack              @SC86295\n         AR    0,15          Our needs                         @SC86295\n         C     0,STKLIM      Does it fit?                      @SC86295\n         BH    SUBDIE        No, (that's incredible)           @SC86295\n         ST    0,STKPTR      New end                           @SC86295\n         ST    13,4(15)      Link subroutines                  @SC86295\n         ST    15,8(13)                                        @SC86295\n         L     0,20(13)      Restore R0                        @SC86295\n         LR    13,15                                           @SC86295\n         BR    14            Go                                @SC86295\nSUBDIE   LM    14,12,12(13)                                    @SC86295\n         SR    15,15                                           @SC86295\n         BCTR  15,0          Set return code = -1              @SC86295\n         BR    14            Go                                @SC86295\n*\nRTRN2    LA    15,2          Indicate error                    @SC86295\n         B     RTRN                                            @SC86295\nRTRN0    SR    15,15         No errors                         @SC86295\n         B     RTRN                                            @SC86295\nRTRN1    LA    15,1          Indicate error                    @SC86295\nRTRN     ST    13,STKPTR     Free the storage                  @SC86295\n         L     13,4(13)      Unlink                            @SC86295\n         L     14,12(13)     Restore registers                 @SC86295\n         LM    0,12,20(13)                                     @SC86295\n         LTR   15,15         Test return code                  @SC86295\n         BR    14                                              @SC86295\n*\n*          Constants\nNBLNK    DC    64X'1',X'0',191X'1'   Find non-blank, if any\nBLNK     DC    64X'0',X'1',191X'0'   Find blank, if any\nNUMB     DC    240X'1',10X'0',6X'1'  Find non-digit, if any\nTRHEX    EQU   *-240\n         DC    C'0123456789ABCDEF'   Convert to characters\nF4       DC    F'4'\nF8       DC    F'8'\n         ADCON DISKIO\nFDBP     DS    0F            Pattern for file FDB\n         DC    A(0,80)       Buffer ptr, length\n         FDBPAT ,F,80        F/80 file                         @SC88111\nIVARS    DS    0D\nIMSGSQ   DC    C'SEQUENCE ERROR: '\n         DC    CL8' ',C' TO '\n         DC    CL8' '\n*          Variables\nSTORAG   DSECT\nTMPDW    DS    D             For conversions\nSTKPTR   DS    A             Save area stack\nSTKLIM   DS    A             ditto\nSPTR     DS    A             Ptr to start of file\nFPTR     DS    A             Ptr to free list\nBPTR     DS    A             Allocation block list\nINSBP    DS    A             Ptr to control buffer\nCOL      DS    A             Current scan column ptr\nSAV6     DS    A             Saved card ptr\nFNDSV    DS    F             Return address for FIND           @SC88111\n         DS    0F\nNXTNO    DS    PL5           Next sequence number for insert/reseq\nINCNO    DS    PL5           Sequencing increment\nLSTNO    DS    PL5           Current sequence number\nOUTNO    DS    PL5           Last card written\nARGNO    DS    PL5           Number read from control card\nINSNO    DS    PL5           Last card resequenced\nCTL      DS    F             Ticket to control input\nSRC      DS    F             Ticket to input source\nOUT      DS    F             Ticket to output file\nCTLBUF   DS    CL80          Buffers\nSRCBUF   DS    CL80\nCMD      DS    C             Control command\nMRK      DS    CL3           Sequence label field\n         COPY  GUPVAR        System-specific variables\nVARS     DS    0D\nMSGSQ    DC    C'SEQUENCE ERROR: '\nMSGS1    DC    CL8' ',C' TO '\nMSGS2    DC    CL8' '\nLMSGSQ   EQU   *-MSGSQ\nLVARS    EQU   *-VARS\n*\n*          User interface information\nSRCNAM   DS    CL(LFID)      Input file name\nCTLNAM   DS    CL(LFID)      Control file name\nOUTNAM   DS    CL(LFID)      Output file name\nMRKD     DS    CL3           Default sequence label field\nFLG      DS    X             Flags\nXXKIL    EQU   X'80'         Deleting source records\nXXTOP    EQU   X'40'         At top of file\nXXINS    EQU   X'20'         Latest card is inserted\nXXEOF    EQU   X'10'         Reached end of source\nXX8      EQU   X'02'         8-column sequence field\nXXCOR    EQU   X'01'         Perform update in-core\n         DS    0D\nSTODWDS  EQU   (*-STORAG)/8  Length of storage\n         COPY  GUPSUB\n*\n         END   GUPI\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0IKTBA": {"ttr": 5633, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "cd \\ik0\ncopy \\ind\\indsl1us\n\\ind\\send ik0aaa.hlp c:'spgmmg.private.filexfer(ik0aaahl)' ascii crlf\n\\ind\\send ik0cmd.asm c:'spgmmg.private.filexfer(ik0cmdas)' ascii crlf\n\\ind\\send ik0com.asm c:'spgmmg.private.filexfer(ik0comas)' ascii crlf\n\\ind\\send ik0con.hlp c:'spgmmg.private.filexfer(ik0conhl)' ascii crlf\n\\ind\\send ik0def.asm c:'spgmmg.private.filexfer(ik0defas)' ascii crlf\n\\ind\\send ik0doc.asm c:'spgmmg.private.filexfer(ik0docas)' ascii crlf\n\\ind\\send ik0gup.asm c:'spgmmg.private.filexfer(ik0gupas)' ascii crlf\n\\ind\\send ik0ikt.bat c:'spgmmg.private.filexfer(ik0iktba)' ascii crlf\n\\ind\\send ik0ker.bwr c:'spgmmg.private.filexfer(ik0kerbw)' ascii crlf\n\\ind\\send ik0ker.doc c:'spgmmg.private.filexfer(ik0kerdo)' ascii crlf\n\\ind\\send ik0ker.mss c:'spgmmg.private.filexfer(ik0kerms)' ascii crlf\n\\ind\\send ik0ker.ps  c:'spgmmg.private.filexfer(ik0kerps)' ascii crlf\n\\ind\\send ik0ker.upd c:'spgmmg.private.filexfer(ik0kerup)' ascii crlf\n\\ind\\send ik0mac.asm c:'spgmmg.private.filexfer(ik0macas)' ascii crlf\n\\ind\\send ik0mai.asm c:'spgmmg.private.filexfer(ik0maias)' ascii crlf\n\\ind\\send ik0pro.asm c:'spgmmg.private.filexfer(ik0proas)' ascii crlf\n*\\ind\\send ikcboo.asm c:'spgmmg.private.filexfer(ikcbooas)' ascii crlf\n*\\ind\\send ikcker.ann c:'spgmmg.private.filexfer(ikckeran)' ascii crlf\n*\\ind\\send ikcker.bwr c:'spgmmg.private.filexfer(ikckerbw)' ascii crlf\n*\\ind\\send ikcker.doc c:'spgmmg.private.filexfer(ikckerdo)' ascii crlf\n*\\ind\\send ikcker.hlp c:'spgmmg.private.filexfer(ikckerhl)' ascii crlf\n*\\ind\\send ikcker.ins c:'spgmmg.private.filexfer(ikckerin)' ascii crlf\n*\\ind\\send ikcker.mss c:'spgmmg.private.filexfer(ikckerms)' ascii crlf\n*\\ind\\send ikcker.upd c:'spgmmg.private.filexfer(ikckerup)' ascii crlf\n*\\ind\\send ikcmac.asm c:'spgmmg.private.filexfer(ikcmacas)' ascii crlf\n*\\ind\\send ikcutl.asm c:'spgmmg.private.filexfer(ikcutlas)' ascii crlf\n\\ind\\send iktdyn.asm c:'spgmmg.private.filexfer(iktdynas)' ascii crlf\n\\ind\\send iktgup.asm c:'spgmmg.private.filexfer(iktgupas)' ascii crlf\n\\ind\\send iktgup.hlp c:'spgmmg.private.filexfer(iktguphl)' ascii crlf\n\\ind\\send iktker.ann c:'spgmmg.private.filexfer(iktkeran)' ascii crlf\n\\ind\\send iktker.bwr c:'spgmmg.private.filexfer(iktkerbw)' ascii crlf\n\\ind\\send iktker.doc c:'spgmmg.private.filexfer(iktkerdo)' ascii crlf\n\\ind\\send iktker.hlp c:'spgmmg.private.filexfer(iktkerhl)' ascii crlf\n\\ind\\send iktker.ins c:'spgmmg.private.filexfer(iktkerin)' ascii crlf\n\\ind\\send iktker.mss c:'spgmmg.private.filexfer(iktkerms)' ascii crlf\n\\ind\\send iktker.upd c:'spgmmg.private.filexfer(iktkerup)' ascii crlf\n\\ind\\send iktmac.asm c:'spgmmg.private.filexfer(iktmacas)' ascii crlf\n\\ind\\send iktutl.asm c:'spgmmg.private.filexfer(iktutlas)' ascii crlf\ndel indsl1us\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0KERBW": {"ttr": 5635, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Kermit-370 4.0 \"Beware File\" - Known Bugs, Problems, Limitations.\n\nAs of: Tue Dec  6 10:16:53 1988\n\nKermit-370  uses ASCII/EBCDIC  translation  tables which conform  to the\nones  given  in the IBM System/370  Reference  Summary.   If your site's\ntranslation tables do not conform to the one Kermit uses, then enter the\nappropriate  SET ATOE/ETOA/TATOE/TETOA  commands  in the system  KERMINI\nfile.  Your system's ASCII/EBCDIC  translation tables need not be mutual\ninverses, but if either table is not invertible at all, then Kermit will\nnot and cannot work unless you change your system's table.\n\nWhen Kermit-370  is to be used with a 7171, make sure the 7171 is set up\nwith its \"keyboard lock delay\" set to 0.  Otherwise, the \"terminal\" will\nhang whenever  Kermit-370 clears the screen.   This happens consistently\nwhen  the  parameter  is set to 10, and not at all  when  set to 0.  For\nnumbers in between, the higher the number, the more it happens.\n\n------------------------------------------------------------------------\nThere is a problem  with using the SET PROMPT subcommand  in a TAKE file\n-- it takes  as its argument  the remainder  of the input  line from the\nTAKE file.  In other words, SET PROMPT should  not be used in TAKE files\nwith fixed-length  records unless you are willing  to right-justify  the\nprompt string in the record.\n\nA blank after SET TABS ON is also significant because there is an option\nof putting  a list of tab columns  after  the 'ON'.   The warning  about\nRECFM F for TAKE files applies here as well as for SET PROMPT.\n\n----> The fix: SC88006.   Trailing  blanks  are trimmed  off the command\nlines read from TAKE files.\n------------------------------------------------------------------------\nRelease 4.0 inadvertantly omitted the SHOW ALL subcommand.   Typing just\nSHOW gets the same effect, however.\n\n----> The fix: SC88028.  SHOW ALL is re-implemented.\n------------------------------------------------------------------------\nRelease 4.0 required a syntax for the SEND and GET subcommands with both\nthe mainframe and foreign filespecs on one line.  There was no option of\nentering just \"SEND\" and being prompted for the filespecs.\n\n----> The fix: SC88035.  A new syntax is implemented.\n------------------------------------------------------------------------\nRelease 4.0 failed  to turn off the  \"protocol mode active\" flag after a\ntransfer.  No harmful effects accrued, but the terminal would seem to be\nhung after trying to SEND a  non-existent file from command mode *after*\na successful transfer.\n\n----> The fix: SC88035.\n------------------------------------------------------------------------\nWhen the file  TYPE was set to TEXT,  release  4.0 would  trim  trailing\nblanks from each record before sending it, whether  fixed-length  or not\n(there seems to be a consensus that varying-length records should not be\ntrimmed).\n\n----> The fix: SC88050.  Varying-length records are not trimmed.\n------------------------------------------------------------------------\nFor a file  very  close  in size  to the amount  of free storage  on the\ntarget  system,  the  exchange  of attribute  packets  might  cause  the\nreceiving Kermit to conclude incorrectly  that the file would not fit in\nstorage and, therefore,  to reject the transfer.   It might, in fact, be\nimpossible  to transfer  such a file without  increasing  the amount  of\nstorage.   It is now possible  to issue a subcommand  to Kermit-370 (SET\nATTRIB OFF) to suppress the exchange of attribute packets.  This feature\nis implemented in SC88071.\n\n------------------------------------------------------------------------\nKermit-370 now has the feature of leaving protocol mode upon receiving a\n\"packet\" that consists of nothing  but the word STOP.   This  feature is\nimplemented in SC88074.\n\n------------------------------------------------------------------------\nKermit-370, in talking  to another Kermit in server mode, would complain\nif a \"long reply\"  to a server command  began with an X-packet,  even if\nthe current block check type was 1.  Mutually  setting the check to 2 or\n3 would, of course, force the other Kermit to begin long replies with an\nS-packet.\n\n----> The fix: SC88074.   Kermit-370 accepts long replies beginning with\nan X-packet.\n------------------------------------------------------------------------\nKermit-370 would not treat a NAK for packet n+1 as an ACK for packet  n.\nInstead,  it would retransmit  packet  n until and unless  the receiving\nKermit sent an explicit ACK.\n\n----> The fix: SC88092.  Kermit-370 now treats NAK(n+1) as ACK(n).\n------------------------------------------------------------------------\nKermit-370  now allows TAKE files with imbedded  sequence numbers.  This\nfeature is implemented in SC88101.\n\n------------------------------------------------------------------------\nKermit-370  originally  offered  no choice  about how to treat lines too\nlong for the established  LRECL of an uploaded  file.   The new SET FILE\nLONGLINE subcommand  allows a choice of folding or truncating the lines,\nor halting the transfer.  The fix: SC88120.\n\n------------------------------------------------------------------------\nKermit  operation  is possible  through  a 3708,  but only with a rather\nspecific configuration.  First, the terminal line must be set for either\n\"protocol  enveloping\"  or \"dynamic\"  mode.  In the former,  the port is\npermanently  set for line-at-a-time  operation,  but the latter  permits\n(requires)  the user to specify a mode at logon time.  In any event, the\nwhole session must be conducted  in line mode for Kermit to work.  Other\nimportant  details of the terminal  configuration  are: (1) the terminal\nmust be specified  as a TWX device,  (2) the line must be set for 8 data\nbits and 1 stop bit, (3) there should  be no \"read prompt\",  and (4) the\nso-called \"alternate\"  translation  table (number 3) should be selected.\nKermit-370  must also be configured  because the normal packet character\nSOH (code 1, ctrl-A)  is not passed by the 3708.  A suitable  substitute\nis VT (code  9, ctrl-I).\n\nThe requirement that a whole session must be set for protocol enveloping\nis obviously  not ideal,  but it seems  to be inescapable.   It has been\nrumored  that REAL support for a 3708 is possible,  but the details have\nnot been forthcoming.\n\n------------------------------------------------------------------------\nKermit-370 has been reported or rumored to work with CONTROLLER set to:\nTTY      - IBM 3705, IBM 3725, Comten, IBM 3708.\nSERIES1  - Yale ASCII system on IBM Series/1 or IBM 4994, IBM 7171, IBM\n           937x ASCII subsystem, Hydra II.\nGRAPHICS - Datastream/Leedata 8010 or 8030 or 874, Micom 7400, PCI 1076\n           or 276, Renex TMS-1, KMW.\nFULLSCR  - (same as TTY, so far)\n\nFailure has been reported for SIM3278 and for Adacom.\n\n------------------------------------------------------------------------\nAs for SIM3278,  the latest  word (as of September  of 1987) was that it\nstill doesn't support transparent  WRITE/READ, but it will someday soon.\nUntil it does, it obviously can't support Kermit.\n\n------------------------------------------------------------------------\nMore on SIM3278:\n\nDate: Mon, 05 Dec 88 16:14:34 EST\nFrom: \"Herbert A. Huston\" <XRHAH@SCFVM.BITNET>\nSubject: SIM3278\n\nJust recently I was handed the installation tape for SIM3278/VM, Version 3.6.\nTo check transparency I brought up the module on the tape in a test virtual\nmachine and found that it did not work correctly using CMS Kermit 4.0 and\nMS-DOS Kermit 2.31.  I have not had time to investigate.  However, for every-\none's edification I am appending an extract from the installation guide.\nSIM3278/VM is marketed by SIMWARE, Inc., 20 Colonnade Road, Ottawa, Ontario,\nCanada  K2E 7M6.  Their telephone number is (613)727-1779.\n\n-- Herb\n\n     APPENDIX C. DATA TRANSPARENCY\n     _____________________________\n\n     You may wish to  use  data  transparency  for  one  of  the  following\n     reasons:\n\n     .   To send non-protocol converted data to an ASCII terminal.\n\n     .   Your terminal may permit incoming data to go directly to a printer\n         port, or your terminal may have graphic capabilities which require\n         special ASCII control codes to draw complex screen images.\n\n> Note that both of these are purely for downloading.  No mention is made\n> of uploading anything!\n\n     In  either  case,  the  SIM3278/VM conversion software must not tamper\n     with the ASCII data.  A signal can be used  to  inform  SIM3278/VM  to\n     leave  the  data \"as is\", and let it pass transparently through to the\n     terminal or PC.\n\n     SIM3278/VM uses a special 3270 screen address sequence to  invoke  the\n     data  transparency mode of operation.  All data following this special\n     screen address will be routed directly through to  the  output  device\n     without  going  through the 3270 to ASCII protocol conversion process.\n     This feature is  useful  for  downloading  special  control  codes  or\n     functions  to  program  function  (PF)  keys  or  softkeys.   Although\n     SIM3278/VM  performs   optional   downloading   of   softkeys   during\n     connection,  the  data  transparency  feature allows softkey or PF key\n     loading anytime during the  SIM3278/VM  session.    Information  about\n     downloading softkeys is contained in Appendix D of this manual.\n\n     Simware   has   chosen   to   be   compatible  with  a  suggested  IBM\n     implementation of data transparency as defined for  the  IBM  Series/1\n     YALE  IUP  emulation  system.    The IBM/YALE system defines a special\n     screen address sequence which is impossible to  use  on  a  real  3278\n     terminal,  but  is  easily  detectable  by  a  3270  emulation system,\n     including SIM3278/VM.\n\n     Your own module may be created using VM/CMS  software  such  as  IBM's\n     DMS/CMS  product,  or,  you  could  write  your own assembler language\n     program using the documented IBM 3270 interface called DIAGNOSE  X'58'\n     (see the VM/SP System Programmer's Guide for more information).\n\n     The special screen address sequence must precede the transparent data,\n     so  that SIM3278/VM will not interfere with it as it passes through to\n     the terminal or PC.   The special  screen  address  is  the  six  byte\n     hexadecimal string X'115D7F110000'.\n\n> Note that both of these are purely for downloading.  No mention is made\n> of uploading anything!\n\n                                          The last three bytes are actually\n     the \"impossible\" screen address (the IBM/YALE sequence).\n\n> Note that this is the string defined in the Yale ASCII system for Write\n> only, not Write/Read.\n                                                               If you write\n     your  own  program,  it will have to issue a fullscreen output command\n     with a buffer that begins the 3270  opcode  (for  example,  WRITE,  or\n     ERASE  WRITE),  a  Write Control Character (WCC), and the special data\n     transparency sequence, followed by the transparent data itself.\n\n\n     Appendix C. Data Transparency                                       79\n\n\n     An example of the command might be:\n\n       opcode  WCC  X'115D7F110000'  special-data\n        ...... which in assembler language might be ......\n       BUFFER DC X'F1',X'C2',X'115D7F110000',X'0227ADF7950E27ADF18303'\n\n     All transparent data or groups of data containing transparency sent by\n     the host must be preceded by the special data  transparency  sequence.\n     SIM3278/VM  returns  to normal mode upon completion of transmission of\n     the datastream; therefore, data transparency only applies to a  single\n     buffer of data.\n\n     Note  that  SIM3278/VM will perform EBCDIC-to-ASCII translation on the\n     data in the file.  This translation to ASCII is the only  modification\n     of the data done by SIM3278/VM.\n\n> This is specifically INcompatible with the Yale ASCII implementation.\n> Say it ain't so!  (Note that there are no examples in the text of what\n> comes out to the terminal).  If this is true, then all the Series/1-type\n> transparent utilities, including Kermit and Yale's TPRINT will fail\n> when going through SIM3270.\n                                      It is useful to note that the special\n     screen address transparency sequence is not passed on to the terminal.\n\n     In  the  case  where  a  printer  is  attached,  the  terminal permits\n     \"print-through\" by means of some type of Escape or Control code, so  a\n     code  that  turns the terminal's printer port on must be supplied.  An\n     EXEC called SIMPRINT can now be used to transfer host data files  onto\n     a PC-attached printer or plotter.\n\n     The  following  represents  the  contents  of a sample data file to be\n     transmitted to a PC-attached printer:\n\n       X'F1C3115D7F110000'      (begin-transparency sequence)\n       X'27C3AD03'          (a sample print-through sequence)\n        ...data for the attached printer...\n\n     A screen CLEAR (pressing Clear or the assigned key sequence) should be\n     issued following a transparent screen write.  SIM3278/VM assumes  that\n     the  data sent to the ASCII line is going to a terminal.  The state of\n     the virtual screen is somewhat unpredictable once transparent mode  is\n     entered, and may vary from terminal to terminal.\n\n> (Comments from John Chandler)\n\n------------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0KERDO": {"ttr": 5640, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n\n\n1. IBM 370 KERMIT\n\nProgram:      John Chandler (Harvard/Smithsonian Center for Astrophysics); con-\n              tributions from Vace Kundakci and Daphne Tzoar (Columbia U),  Bob\n              Shields  (U.  Maryland),  Victor Lee (Queens U.), Gary Bjerke (U.\n              Texas  at  Austin),  Greg  Small  (UC  Berkeley),  Clark  Frazier\n              (Harvard  Bus. Sch.), Bob Bolch and Steve Blankinship (Triangle),\n              Ron Rusnak (U. Chicago), Roger Fajman and Dale White (NIH), Andre\n              Pirard (U. Liege)\nLanguage:     IBM 370 Assembler\nDocumentation:\n              John Chandler (CfA)\nVersion:      4.0\nDate:         1988 February\n\nKermit-370 is a family  of  programs  implementing  the  KERMIT  file  transfer\nprotocol for IBM 370-series mainframes (System/370, 303x, 43xx, 308x, etc.) un-\nder a variety of operating systems.  Kermit-370 operates over asynchronous  AS-\nCII communication lines attached to 3705-style front ends (\"TTY\" devices), to a\nSeries/1 or 4994 running the Yale ASCII Terminal Communication  System  or  the\nIBM  7171  ASCII  Device Control Unit or a 9370 with ASCII subsystem (\"SERIES1\"\ndevices), or to SNA-type front-ends with graphics pass-through  mode,  such  as\nthe MICOM 7400, Datastream/Leedata 8010, and PCI 1076 (\"GRAPHICS\" devices), or,\nin some configurations, to an IBM 3708 (\"FULLSCREEN\" device).  As of this writ-\ning,  the  pending  implementation  of  full  7171 compatibility in the program\nproduct SIM3278 has not been completed.  For more details  on  front-ends,  see\nthe section SET CONTROLLER.\n\nThe  source is coded in IBM 370 assembly language and is divided into sections,\nsome generic and some specific to an individual operating system.    While  the\ndetails of file-system and supervisor interaction vary widely among the systems\navailable for IBM 370's, the basic features are essentially  the  same.    This\nchapter  will describe the features common to all variants of Kermit-370, and a\nseparate chapter will deal with the system-specific details for each variant.\n\nIBM 370 systems have some peculiarities that users should be aware of.   First,\nthey  are  essentially  half-duplex  systems; the communication line must \"turn\naround\" before any data can be sent to it.   The  \"TTY\"  devices  are  strictly\nhalf-duplex, and even the \"SERIES1\" and \"GRAPHICS\" devices, although they main-\ntain full-duplex communication with the terminal, must transmit a  block  at  a\ntime  to  the mainframe.  The fact that a packet has been received from the IBM\nsystem through a \"TTY\" device is no guarantee that it is  ready  for  a  reply;\ngenerally,  the  true  indicator  of readiness is the line turnaround character\n(XON), which the operating system sends immediately before issuing a  read  re-\nquest.  On some systems, however, it is possible for Kermit to do away with the\nsystem-supplied turnaround and schedule read  requests  immediately  after  the\ncorresponding  writes.    It is up to the user to tell the other Kermit that it\nmust conform to the requirements of the IBM mainframe.\n\nSecond, disk files are encoded using the EBCDIC character set.    Consequently,\nthere are three layers of character translation on packets exchanged on a \"TTY\"\ndevice.  For an incoming packet, the outer layer is provided by  the  operating\nsystem,  which translates all characters from ASCII to EBCDIC.  Kermit-370 must\nthen translate the packets back to ASCII (the middle layer) in  order  to  cal-\nculate  and  verify  the  checksum.    Data  arriving  through  a  \"SERIES1\" or\n\"GRAPHICS\" device are still in ASCII and therefore bypass the two outer layers.\nIn  any  case,  Kermit-370 translates everything finally into EBCDIC (the inner\nlayer) before storing on disk (except BINARY files).  When Kermit-370  sends  a\nfile,  the  opposite translations occur.  In translation, EBCDIC characters not\nrepresentable in ASCII are replaced by nulls.  In some  cases,  several  EBCDIC\ncharacters  are  mapped  into  a single ASCII character, but no two 7-bit ASCII\ncharacters are translated into the same EBCDIC  character.    The  middle-layer\ntables  used  by  Kermit  must be the inverses of the corresponding outer-layer\nones used by the host operating system if file transfers are to  work  at  all.\nIf   necessary,   the   system   programmer  should  add  the  appropriate  SET\nTATOE/TETOA/TTABLE subcommands (q.v.)  to the global \"INIT\" file (see the  next\nsection).    Indeed,  it  is usually a good idea to set TTABLE ON in the global\n\"INIT\" file to force using different built-in sets of tables for the inner  and\nmiddle   layers,   whenever  the  system  has  \"TTY\"  devices.    The  standard\nASCII-to-EBCDIC translations can be found in the Appendix or the IBM System/370\nReference Card.\n\nAnother  distinction  of  IBM  370's  is  that they store and retrieve files as\nrecords rather than byte streams.  Records may be either fixed-length with some\nsort  of  padding  (as  needed)  or varying-length with some sort of (generally\nhidden) delimiters.  Thus, Kermit-370 must assemble incoming data packets  into\nrecords  by  stripping  off carriage return-linefeed pairs (CRLF's) and padding\nwith blanks or truncating as needed and must strip trailing blanks  and  append\nCRLF's  to  outgoing  records.   Further, disk files typically have the records\ncombined into blocks for efficiency.  One consequence of this form  of  storage\nis  that files have attributes describing the component records: maximum record\nlength (LRECL), record format (RECFM), and sometimes block size (BLKSIZE).\n\nAs mentioned before, Kermit-370 is a family of programs.  At present, only  the\nCMS  and  TSO  versions  are operational.  Versions for DOS/VSE and MTS have at\nleast reached the \"drawing board,\"  but  no  others  have  even  been  started.\nVolunteers  are always welcome to port Kermit-370 to other operating systems or\nadd new features to the existing family.  Anyone interested should first get in\ntouch  with  the Center for Computing Activities at Columbia University to find\nout what projects of a similar nature are already pending (and thereby  prevent\nunnecessary duplication of effort).\n\n\n1.1. Program Operation\n\nKermit-370  can  be  invoked  directly  or from a command procedure.  In either\ncase, it reads and executes subcommands sequentially until directed to quit and\nthen returns.  A subcommand consists of one or more fields (words) separated by\nspaces.\n\nUpon initial startup, the  program  looks  for  two  (optional)  initialization\nfiles,  one system-wide and a second specific to the user.  Both filespecs are,\nof course, system-dependent.  The purpose of these files is to allow Kermit  to\nbe  customized for a particular system and for a user's specific settings with-\nout changing the source code.  The system-wide file, which is maintained  by  a\nsystems programmer, should contain Kermit subcommands that all users would need\nto issue in order for Kermit to run on  the  system,  such  as  subcommands  to\nmodify  the ASCII/EBCDIC tables used by Kermit-370.  The user-specific file, if\nany, should contain subcommands that the user generally issues every time  Ker-\nmit is run.  Kermit-370 executes any subcommands found in these files as though\nthey were typed at the terminal.  Here is a sample \"INIT\" file:\n\n    * Asterisk in column one is a comment.\n    set debug on\n    set warning on\n    set block 3\n\nDuring interactive execution, you may  use  the  built-in  help  feature  while\ntyping Kermit-370 subcommands.  A question mark (\"?\") typed at almost any point\nin a subcommand, followed by a carriage return, produces a brief description of\nwhat  is  expected or possible at that point.  Moreover, mistyping a subcommand\nwill generally produce a helpful error message or a list of possible options at\nthe   point  of  error.    Keywords  in  such  lists  are  displayed  with  the\nminimum-length abbreviation in upper case and the remainder, if any,  in  lower\ncase.  In entering Kermit subcommands, any keyword may be shortened to any sub-\nstring that contains the minimum abbreviation.\n\n\n1.2. Kermit-370 Subcommands\n\nThe following is a brief summary of Kermit subcommands.   The  starred  subcom-\nmands can be issued as remote Kermit commands to Kermit-370 when it is in serv-\ner mode.  System-specific subcommands are omitted from this list.\n\n          BYE      logs out other Kermit server.\n          CWD*     establishes a new working directory.\n    DIRECTORY*     displays all or part of the disk directory.\n         ECHO      a line back to the user.\n         EXIT      from Kermit-370.\n       FINISH      other Kermit server.\n          GET      file(s) from a Kermit server.\n         HELP      about Kermit-370.\n         HOST*     executes a system command.\n       KERMIT*     executes a Kermit subcommand.\n         QUIT      from Kermit-370.\n      RECEIVE      file(s) from other Kermit.\n         SEND      file(s) to other Kermit.\n       SERVER      mode of remote operation.\n          SET*     various parameters.\n         SHOW*     various parameters.\n        SPACE*     displays disk storage allocation.\n       STATUS*     inquiry.\n         TAKE*     subcommands from file.\n        TDUMP*     dumps the contents of a table.\n         TYPE*     a file.\n        XECHO      echoes a line (transparently).\n        XTYPE      displays a file (transparently).\n\nAlthough Kermit-370 is generally a remote Kermit, it has the capability of com-\nmunicating  with another Kermit in server mode.  In that situation, the subcom-\nmand prefixes REMOTE and LOCAL refer  to  the  Kermit  server  and  Kermit-370,\nrespectively,  even  when  Kermit-370 is, strictly speaking, the remote Kermit.\nAny replies from the Kermit server are added to a disk file (whose filespec is,\nof  course,  system-dependent).  Such a transaction can be carried out, for ex-\nample, under control of a TAKE file if Kermit-370 is not operating locally.  If\nthe  local  Kermit  has a \"magic\" character sequence that switches it from ter-\nminal emulation to server mode, then an entire session could be controlled from\nthe mainframe, possibly in response to a single command issued by a naive user.\nFor example,\n\n    grab\n\n         Kermit-370 is invoked and executes the following TAKE file\n\n    ECHO Serve Me!        the local Kermit switches to server mode\n    GET file.a            the server uploads file.a\n    FINISH                the server switches back to terminal mode\n\nThe remainder of this section concentrates on the subcommands that have special\nform or meaning for Kermit-370, but neglects those with highly system-dependent\nsyntax or use.\n\n\n                              THE SEND SUBCOMMAND\n\nSyntax: SEND \u00a2filespec \u00a2foreign-filespec||\n\nThe SEND subcommand tells Kermit-370 to send a file or file group to the  other\nKermit.    If  no such file exists, Kermit-370 simply displays an error message\nand issues another prompt.  If one or more files  are  sent,  their  names  are\nrecorded  in  memory and may be viewed later via the TDUMP subcommand (but with\nno indication of whether any of them were rejected or cancelled  by  the  other\nKermit).    If this subcommand is issued without any arguments, Kermit-370 will\nprompt the user for both native and foreign filespecs (and will insist on  get-\nting the former, but will do without the latter).\n\nWhen Kermit-370 sends files using long packets (longer than 96), the throughput\nis especially sensitive to the level of noise on the line because  retries  are\nso  time-consuming.   Therefore, Kermit-370 adds an extra, heuristic size limit\nfor packets when retries have been found necessary.  When  that  is  the  case,\nafter  every 20 packets, Kermit computes the packet size for maximum throughput\nassuming that the transmission errors were due to  sparse,  Poisson-distributed\nnoise  bursts.  The result of this calculation is then used as another limit on\nthe size of outgoing packets besides the one specified by the other Kermit.  If\nno  retries  are required, then Kermit-370 assumes the line to be noiseless and\nsends packets of the maximum length the other Kermit allows.  For more  details\non  the  SEND  subcommand  syntax and operation, see the chapter on the desired\nsystem-specific version of Kermit-370.\n\n\n                            THE RECEIVE SUBCOMMAND\n\nSyntax: RECEIVE \u00a2filespec|\n\nThe RECEIVE subcommand tells Kermit-370 to accept a file or file  group.    The\nuser  must  issue the corresponding SEND subcommand to the other Kermit.  Under\nsome circumstances, the records of the received file(s) may be truncated;  when\nthis  happens,  Kermit  does  not  stop, but notes the fact as an error (unless\nsomething more serious happens later).  For more details on the RECEIVE subcom-\nmand  syntax and operation, see the chapter on the desired system-specific ver-\nsion of Kermit-370.\n\n\n                              THE GET SUBCOMMAND\n\nSyntax: GET \u00a2foreign-filespec \u00a2filespec||\n\nThe GET subcommand tells Kermit to request a file or file group from the  other\nsystem,  which  must  have a Kermit running in server mode.  Provided the other\nKermit complies, the effect is the same as if SEND  foreign-filespec  had  been\nissued  directly  to  the  other  Kermit  and RECEIVE \u00a2filespec| to Kermit-370.\nother Kermit).  If this subcommand is issued without any arguments,  Kermit-370\nwill  prompt the user for both foreign and native filespecs (and will insist on\ngetting the former, but will do without the latter).  See the  respective  SEND\nand RECEIVE subcommands for a description of the each filespec.\n\n\n                              THE TAKE SUBCOMMAND\n\nSyntax: TAKE filespec\n\nExecute Kermit subcommands from the specified file, usually called a TAKE file.\nThe TAKE file may in turn include TAKE subcommands to a nesting depth  of  ten.\nIf  a  TAKE  file  includes  the  subcommand SERVER, however, the nesting count\nstarts over again in server mode.  The user has the option of seeing  the  sub-\ncommands  echoed from the TAKE file as they are executed and also the option of\nautomatically exiting from a TAKE file on error.  See the subcommand  SET  TAKE\nfor details.\n\n\n                             THE SERVER SUBCOMMAND\n\nKermit-370  is  capable  of acting as a server.  In server mode, Kermit-370 can\nsend and receive files, execute host commands, execute a restricted set of Ker-\nmit  subcommands,  and perform a variety of generic Kermit functions.  The fol-\nlowing list shows the typical local Kermit commands along with the server func-\ntions  they  elicit.    When Kermit-370 is talking to another Kermit running in\nserver mode, these same subcommands may be used in the other direction.\n\nBYE                 log out the Kermit server.\nFINISH              server mode.\nGET                 a file or files from the server.\nREMOTE\n  COPY              a file or files.\n  CWD               set new working directory.\n  DIRECTORY         display file attributes.\n  ERASE             a file or files.\n  HELP              display this command summary.\n  HOST              execute a system command.\n  KERMIT            execute a Kermit-370 subcommand.\n  RENAME            a file or files.\n  SPACE             display disk space.\n  TYPE              a file.\nSEND                a file or files to the server.\n\nIf your local Kermit does not support the REMOTE KERMIT command, you  may  need\nto  issue  SET  subcommands  to select various options before typing the SERVER\nsubcommand.  Once in server mode, Kermit-370 will await  all  further  instruc-\ntions from the user Kermit on the other end of the connection until a FINISH or\nBYE command is given.\n\nCommand execution in server mode is different  in  some  respects  from  normal\noperation.  First of all, some Kermit subcommands are not allowed (see the list\nat the beginning of this section).  Moreover, command errors  always  terminate\nany  active  TAKE file.  Also, all commands will be run in the special environ-\nment that Kermit sets up during protocol transfers.  Among other things, Kermit\nintercepts  all  terminal  I/O  (if  possible)  in this environment in order to\ntransmit the data to the local Kermit as text packets.\n\nNote that some operations can be requested by several different commands.    If\nfor  example,  the  IBM 370 system has a command \"PRT\" for displaying a file, a\nuser interacting with a Kermit-370 server can choose to display a file  by  is-\nsuing  any  of  the commands: REMOTE TYPE, REMOTE HOST PRT, REMOTE KERMIT TYPE,\nREMOTE KERMIT HOST PRT, or (if SYSCMD has been set ON) REMOTE KERMIT PRT.   The\nfirst  form  simply transfers the requested file as text, but the others invoke\nthe \"PRT\" command with any specified options, intercept  the  terminal  output,\nand return the results to the local Kermit.\n\n\n                              THE SET SUBCOMMAND\n\nSyntax: SET parameter \u00a2value|\n\nThe  SET subcommand establishes or modifies various parameters controlling file\ntransfers.  The values can, in turn, be  examined  with  the  SHOW  subcommand.\nSome  parameters  have two levels.  In particular, there are two matching lists\nof SEND and RECEIVE sub-parameters corresponding to  the  values  exchanged  by\nKermits  in  the  Send-Init/ACK sequence.  For each of these SEND/RECEIVE pairs\none element is encoded in outgoing parameter packets, and the other is  decoded\nfrom incoming ones.  Setting the latter by hand may be needed to establish con-\ntact and also has the effect of redefining the default value for decoding  from\nsubsequent  parameter  packets.    Generally,  the distinction between SEND and\nRECEIVE parameters is unambiguous, the only  exception  being  TIMEOUT  (q.v.).\nThe following SET subcommands are available in Kermit-370:\n\nAPPEND              Append if file name collision.\nATOE                Modify the Kermit-370 ASCII-to-EBCDIC table.\nBLOCK-CHECK         Level of error checking for file transfer.\nCONTROLLER          Indicate type of terminal connection.\nDEBUG               Log packet traffic during file transfer.\nDELAY               Length of pause before a SEND subcommand.\nEOF                 Text file truncation at CTRL-Z.\nETOA                Modify the Kermit-370 EBCDIC-to-ASCII table.\nFILE                Attributes for incoming or outgoing files...\n  TYPE              ... text or binary.\n  other             ... system-specific attributes.\nFOREIGN             Strings added to outgoing filespec...\n  PREFIX\n  SUFFIX\nINCOMPLETE          Determine the action on an aborted file transfer.\nLINE                Specify alternate communication line.\nMARGIN              for sending files...\n  LEFT\n  RIGHT\nPARITY              Indicate if 7-bit or 8-bit data.\nRETRY               Maximum retry count...\n  INIT              ... for initial packet exchange.\n  PACKET            ... per packet for ongoing transfer.\nSYSCMD              Try apparently invalid Kermit subcommands on host system.\nTABS-EXPAND         Determine tab-to-space conversion on reception.\nTAKE\n  ECHO              Echo subcommands read from TAKE files.\n  ERROR-ACTION      Exit from TAKE file on command error.\nTEST                Facilitate testing of Kermit.\nTATOE               Modify the Kermit-370 ASCII-to-EBCDIC table.\nTETOA               Modify the Kermit-370 EBCDIC-to-ASCII table.\nTTABLE              Determine which tables undo the terminal translation.\nWARNING             Rename if filename collision.\n8-BIT-QUOTE         Determine state of 8th-bit prefixing.\nSEND or RECEIVE\n  END-OF-LINE       Packet terminator.\n  PACKET-SIZE       Maximum packet size.\n  PAD-CHAR          Character to insert before each packet.\n  PADDING           Number of pad characters to insert.\n  QUOTE             Use to quote control characters in packets.\n  START-OF-PACKET   Packet beginning marker.\n  TIMEOUT           Time limit for response.\n\n\nSET APPEND\n\nSyntax: SET APPEND ON or OFF\n\nON      If  an incoming file has the same name as an existing one, the new file\n        is appended to the old one.  This option supersedes SET WARNING.\n\nOFF     Filename collision is  handled  according  to  the  WARNING  parameter.\n        (Default.)\n\n\nSET ATOE etc.\n\nSyntax: SET table \u00a2num1 num2|\n\nThis  modifies  one  of  the ASCII/EBCDIC translation tables used by Kermit-370\n(for example, to conform to your system).  The  valid  table  names  are  ATOE,\nETOA, TATOE, and TETOA.  The arguments are, respectively, the offset within the\nnamed table and the new value for that offset.  If the arguments  are  omitted,\nthe table is restored to its initial arrangement.  Both num1 and num2 should be\nin the range 0-255 (decimal).  For example, in ATOE or TATOE, the offset is the\nASCII  character  code,  and  the new value is the new EBCDIC result code.  In-\nitially, ATOE and TATOE each contain two identical copies of  the  7-bit  ASCII\ncharacter table.  Note: the meaning of the tables depends on the TTABLE setting\n-- if TTABLE is OFF, the TATOE and TETOA tables are not used.\n\n\nSET BLOCK-CHECK\n\nSyntax: SET BLOCK-CHECK number\n\nThis determines the type of block check used during file transfer, provided the\nother  Kermit  agrees.    Valid  options for number are: 1 (for a one-character\nchecksum), 2 (for a two-character checksum) and 3 (for a three-character  CRC).\nThis  is one of only two Send-Init parameters that cannot be SET separately for\nSEND and RECEIVE.\n\n\nSET CONTROLLER\n\nSyntax: SET CONTROLLER type\n\nThe type may be TTY, SERIES1, GRAPHICS, or FULLSCREEN.    Kermit-370  automati-\ncally  determines  whether you are connected via a Series/1 (or similar) emula-\ntion controller or a TTY line.  This subcommand is provided, though,  to  allow\nthat choice to be superseded, and because Kermit may not be able to distinguish\nbetween Series/1-type and other 3270-emulation controllers.  When CONTROLLER is\nset  to SERIES1 or GRAPHICS, Kermit disables the 3270 protocol conversion func-\ntion by putting the terminal controller into \"transparent mode\",  which  allows\nKermit packets to pass through intact.\n\n\nSET DEBUG\n\nSyntax: SET DEBUG ON or RAW or OFF\n\nON      Keep  a journal of all packets sent and received in a log file on disk.\n        If the file already exists, it is erased and overwritten.  The filespec\n        of  the log is, of course, system-dependent.  All packets are logged in\n        EBCDIC for legibility, even  when  CONTROLLER  is  set  to  SERIES1  or\n        GRAPHICS.    In  addition to the packets themselves, which are labelled\n        \"S\" or \"R\" for packets sent or  received,  the  log  includes  any  ad-\n        ditional status information (labelled \"A\"), such as the AID returned by\n        a SERIES1 device.\n\nRAW     The same as ON, but packets are logged in the form that is passed to or\n        from  the  operating  system, i.e., EBCDIC for TTY terminals, and ASCII\n        for SERIES1 and GRAPHICS terminals.\n\nOFF     Stop logging packets and close the the log file.  (Default.)\n\n\nSET DELAY\n\nSyntax: SET DELAY number\n\nNormally, Kermit-370 waits 10 seconds after the SEND subcommand before starting\nthe  transfer,  but this delay may be SET to any non-negative value.  Two DELAY\nvalues have special meaning.  When DELAY is 1, the usual two-line greeting dis-\nplayed during protocol mode is abbreviated to a short message (the default Ker-\nmit prompt with three dots...), and when DELAY is 0, the greeting is suppressed\nentirely, along with the extra one-second pause for the RECEIVE and SERVER sub-\ncommands.\n\n\nSET EOF\n\nSyntax: SET EOF ON or OFF\n\nON      Scan each incoming TEXT file for the first occurrence of CTRL-Z and ig-\n        nore  the remainder of the file (but continue decoding up to the actual\n        end of the file).  BINARY files are not affected.\n\nOFF     Accept incoming files in their entirety.  (Default.)\n\n\nSET FILE TYPE\n\nSyntax: SET FILE TYPE TEXT or BINARY or V-BINARY or D-BINARY\n\nTEXT       Specifies ordinary text.  ASCII-to-EBCDIC or EBCDIC-to-ASCII  trans-\n           lation  is  performed on the data.  Trailing blanks are removed, and\n           CRLF's are appended to outgoing records. CRLF's are used,  in  turn,\n           to  determine  the  end  of  incoming records, which are padded with\n           blanks if necessary to fill buffers.  (Default.)\n\nBINARY     Specifies bit-stream data.  No translation is performed,  no  CRLF's\n           are  added  to  outgoing  records,  and blanks are neither added nor\n           removed.  Incoming bytes  are  added  successively  to  the  current\n           record  buffer,  which  is  written  out  when  the current LRECL is\n           reached.  Padding, if necessary, is done with nulls.\n\nV-BINARY   Specifies varying-length-record binary data.  This type is like  BI-\n           NARY, except that a two-byte binary prefix is added to each outgoing\n           record giving the number of data bytes, and incoming records are set\n           off by (and stripped of) their prefixes on receipt.\n\nD-BINARY   Is  like  V-BINARY  except  that  the  length prefixes are five-byte\n           ASCII-encoded decimal (right-justified with leading zeroes).\n\n\nSET FOREIGN\n\nSyntax: SET FOREIGN PREFIX string\n\nThis defines a prefix string to be added to the outgoing filespec generated  by\nthe  SEND  subcommand.  For example, the string might be set to \"B:\" to specify\noutput to the B disk drive on the other Kermit's system.  The default is a null\nstring.  There is also a FOREIGN SUFFIX handled in the same manner.\n\n\nSET HANDSHAKE\n\nSyntax: SET HANDSHAKE number\n\nThis defines the character, if any, that Kermit-370 should send (or cause to be\nsent) immediately before reading each packet.  The character is  given  as  the\ndecimal  of  an  ASCII  control  character, or as zero if no handshake is to be\nsent.  The default is 17 (XON), and any value in the range 0-31 is  valid,  but\n13 (CR) should not be used because it is generally the end-of-packet character.\nWhen Kermit-370  is  running  through  a  full-duplex  connection  (such  as  a\n\"SERIES1\"),  the  traditional  IBM  handshaking is not necessary, and HANDSHAKE\nshould be set to 0 (as long as the other Kermit can be instructed not to expect\na  handshake).  Note the distinction between SET HANDSHAKE in Kermit-370 (where\nit defines a character to be sent) and in many micro Kermits (where it  defines\na character to be expected).\n\n\nSET INCOMPLETE\n\nSyntax: SET INCOMPLETE DISCARD or KEEP\n\nDISCARD   Specifies that incomplete files (that is, files partially received in\n          a transfer cancelled by the other Kermit) are to be erased.  This  is\n          the default.  Note that when APPEND is ON, incomplete files are never\n          erased, lest pre-existing data be lost.\n\nKEEP      Specifies that incomplete files are to be kept.\n\n\nSET LINE\n\nSyntax: SET LINE \u00a2name|\n\nThis specifies an alternate communication line for file transfers.  If the name\nis omitted, the default line (the user's terminal) is used.  The format of name\nis, of course, system-dependent, and some versions of Kermit-370 do not support\nany alternate lines.  No version currently allows Kermit-370 to CONNECT over an\nalternate line.\n\n\nSET MARGIN\n\nSyntax: SET MARGIN side column\n\nWhen Kermit-370 sends a text file, each line may be truncated on  the  left  or\nright (or both) at fixed column numbers.  Only the text from the left margin to\nthe right margin (inclusive) will be sent, and any trailing blanks in the trun-\ncated lines will be stripped.  A value of zero for either margin disables trun-\ncation on that side.\n\n\nSET PARITY\n\nSyntax: SET PARITY MARK or NONE\n\nTransparent-mode ASCII data received from a \"SERIES1\" or \"GRAPHICS\" device will\ntypically have either all Mark parity (seven data bits with the eighth bit set)\nor no parity (eight data bits).  Kermit-370 must know which kind of  parity  to\nexpect in order to calculate checksums properly.  Since Kermit-370 does not ac-\ntually verify parity, the other possible variants (ODD, EVEN,  and  SPACE)  are\nlumped  together  with  MARK  parity  for the purpose of this subcommand, which\nmerely chooses between 7-bit and 8-bit data transfer.  The default is MARK.\n\n\nSET PROMPT\n\nSyntax: SET PROMPT string\n\nThis defines the character string that Kermit-370 displays when  asking  for  a\nsubcommand.   The prompt may be any string of up to 20 characters.  The default\nis the name of the system-specific version of  Kermit-370  followed  by  a  \">\"\nsign, e.g., Kermit-CMS>.\n\n\nSET RETRY\n\nSyntax: SET RETRY INITIAL or PACKETS number\n\nKermit-370  resends its last packet after receiving a NAK or bad packet, but it\neventually gives up after repeated failures or the same packet.  The  limit  on\nretries  can  be  set  separately for the initial packet exchange (Send-Init or\nserver-mode command) and for ordinary packets.  The default for INITIAL  is  16\nand for PACKETS, 5.  Either limit can be set to any positive value.\n\n\nSET SYSCMD\n\nSyntax: SET SYSCMD ON or OFF\n\nON      If the user enters a command string which is not a valid Kermit subcom-\n        mand, Kermit-370 will pass the string along to the host operating  sys-\n        tem  for  execution.   If the string is rejected by the system as well,\n        Kermit will report it as an invalid Kermit subcommand.  Otherwise, Ker-\n        mit  will  assume  the  string  was intended as a host command and will\n        simply report the completion code if non-zero.\n\nOFF     Invalid Kermit subcommands are simply rejected as such.    System  com-\n        mands  may  be  executed, of course, but only by specifying the generic\n        prefix \"HOST\" or the appropriate system-specific prefix, such as CMS or\n        TSO.  (Default.)\n\n\nSET TABS-EXPAND\n\nSyntax: SET TABS-EXPAND ON \u00a2list| or OFF\n\nON      Tab  characters  in  incoming  TEXT  files  are replaced by one or more\n        blanks to bring the record size up to the next higher multiple of eight\n        for  each  tab.   If tab settings other than columns 1, 9, 17, etc. are\n        desired, they may be specified  explicitly  in  a  list  following  the\n        keyword \"ON\".  Items in the list may be separated by spaces or commas.\n\nOFF     Incoming tabs are retained.  (Default.)\n\n\nSET TAKE ECHO\n\nSyntax: SET TAKE ECHO ON or OFF\n\nON      Subcommands are echoed to the terminal as they are executed from a TAKE\n        file.\n\nOFF     Subcommands from a TAKE file are executed \"silently.\"  (Default.)\n\n\nSET TAKE ERROR-ACTION\n\nSyntax: SET TAKE ERROR-ACTION CONTINUE or HALT\n\nCONTINUE   Execution continues in a TAKE file regardless of  illegal  commands,\n           except in server mode.  This is the default.\n\nHALT       A  command error in a TAKE file causes immediate exit to Kermit sub-\n           command level.\n\n\nSET TEST\n\nSyntax: SET TEST ON or OFF\n\nON      Allow setting the START-OF-PACKET and other special characters  to  any\n        value, and suppress checksum testing on received packets.\n\nOFF     Normal operation.  (Default.)\n\n\nSET TTABLE\n\nSyntax: SET TTABLE ON or OFF\n\nON      The translation that undoes the terminal controller's ASCII/EBCDIC con-\n        version comes from the TATOE and TETOA tables, rather than the ATOE and\n        ETOA tables (which are used only for translating disk files).  This op-\n        tion has no effect when there is no translation  built  into  the  con-\n        troller, i.e., with SERIES1 and GRAPHICS connections.\n\nOFF     The  ATOE  and ETOA tables are used for all translations by Kermit-370.\n        (Default.)\n\n\nSET WARNING\n\nSyntax: SET WARNING ON or OFF\n\nON      If an incoming file has the same filespec as an existing file on  disk,\n        Kermit  will  attempt  to rename the incoming file so as not to destroy\n        (overwrite) the pre-existing one.\n\nOFF     Upon filename collision, the existing file will be erased and  replaced\n        by the incoming file.  (Default.)\n\n\nSET 8-BIT-QUOTE\n\nSyntax: SET 8-BIT-QUOTE char or ON or OFF\n\nThis  controls  whether eighth-bit prefixing is done and can be used to specify\nthe character to be used.  This is one of only two  Send-Init  parameters  that\ncannot be SET separately for SEND and RECEIVE.\n\nchar    Eighth-bit prefixing will be done using char, provided the other Kermit\n        agrees.\n\nON      Eighth-bit prefixing will be done, provided the other Kermit explicitly\n        requests it (and specifies the character).\n\nOFF     Eighth-bit prefixing will not be done.  (Default.)\n\n\nSET SEND/RECEIVE\n\nThe  following  parameters  can be set either as SEND or RECEIVE options.  As a\nrule, in each pair, one is the operational value, and  the  other  is  used  to\nchange  the default for Send-Init packets received from the other Kermit and to\nset up parameter values as if the other Kermit had specified them on  the  pre-\nvious  exchange.    When both values are described, the operational one will be\nfirst.  After a transfer, the operational values will  be  unchanged,  but  the\nothers  (as  displayed  by  SHOW)  will reflect the parameters specified by the\nother Kermit.  The underlying defaults established by previous SET  subcommands\nwill still be in effect.  In the syntax descriptions, mode is SEND or RECEIVE.\n\n\nEND-OF-LINE\n\nSyntax: SET mode END-OF-LINE number\n\nRECEIVE should not be changed.\n\nSEND  may be needed to establish contact.  If the other system needs packets to\nbe terminated by anything other than carriage return, specify the decimal value\nof  the  desired  ASCII character.  number must be in the range 0-31 (decimal).\nThe default is 13 (CR).\n\n\nPACKET-SIZE\n\nSyntax: SET mode PACKET-SIZE number\n\nRECEIVE defines number as the maximum length for incoming packets.   The  valid\nrange  is  26-9024,  but 94 is the limit for normal short-packet protocol.  The\ndefault is 80.  In practice, the size may be limited by hardware  and  program-\nming considerations.  See the system-specific chapters for details.\n\nSEND  might  be  needed  for  sending  files  to  a minimal Kermit that neither\nspecifies a buffer size in the Send-Init sequence nor can  accept  the  default\n(80).  This parameter has no other function and is meaningful only in the range\n26-94.\n\n\nPAD-CHAR\n\nSyntax: SET mode PAD-CHAR number\n\nRECEIVE defines number as the character to be used by the other Kermit for pad-\nding  packets.   The character must be an ASCII control character (in the range\n0-31).  The default is 0 (NULL).  This option is seldom useful.\n\nSEND may be needed to establish contact if the other Kermit (or  the  transmis-\nsion line) needs padded packets.\n\n\nPADDING\n\nSyntax: SET mode PADDING number\n\nRECEIVE  defines  the  number  of pad characters to be used for padding packets\nfrom the other Kermit.  This number may be anywhere from 0 to 94.  The  default\nis 0.  This option is seldom useful.\n\nSEND  may  be needed to establish contact if the other Kermit (or the transmis-\nsion line) needs padded packets.\n\n\nQUOTE\n\nSyntax: SET mode QUOTE char\n\nSEND indicates a printable character for prefixing (quoting) control characters\nand  other prefix characters.  The only good reason to change this would be for\nsending a file that contains many \"#\" characters (the normal control prefix) as\ndata.    It  must  be  a  single  character  with  ASCII  value 33-62 or 96-126\n(decimal).\n\nRECEIVE would be needed only for talking to  a  crippled  Kermit  that  uses  a\nnon-standard quoting character, but does not admit it.\n\n\nSTART-OF-PACKET\n\nSyntax: SET mode START-OF-PACKET number\n\nRECEIVE  defines  number  as  the character to be expected to mark the start of\npackets from the other Kermit.  The character must be an ASCII control  charac-\nter (in the range 0-31).  The default is 1 (SOH).  This may be needed to estab-\nlish contact.\n\nSEND may also be needed to establish contact.  It defines number as the charac-\nter to be used to mark outgoing packets.\n\n\nTIMEOUT\n\nSyntax: SET mode TIMEOUT time\n\nRECEIVE  defines the time in seconds the other Kermit is to wait for a response\nfrom Kermit-370 before resending a packet.  The default is 5.   A  value  of  0\nmeans the other Kermit should wait indefinitely.\n\nSEND  defines the time in seconds Kermit-370 is to wait for a response from the\nother Kermit before resending a packet.  The default is 0.\n\n\n                              THE SHOW SUBCOMMAND\n\nSyntax: SHOW \u00a2option|\n\nThe SHOW subcommand displays the values of all parameters that can  be  changed\nwith  the  SET  subcommand, except for ATOE, ETOA, TATOE, and TETOA (for those,\nsee the TDUMP subcommand).  If specified, option can be a particular  parameter\nor the keyword \"ALL\" (the default).  Groups of parameters, such as SEND, can be\ndisplayed by requesting the group name, or  individual  sub-parameters  can  be\ndisplayed by specifying the complete name.  For example,\n\n    SHOW RECEIVE EOL\n\nwill  display  the  decimal value of the packet terminator that Kermit-370 cur-\nrently expects, i.e., 13.  Similarly,\n\n    SHOW FOREIGN\n\nwill display the character strings currently in use for prefix  and  suffix  on\neach outgoing filespec.\n\n\n                             THE STATUS SUBCOMMAND\n\nSyntax: STATUS\n\nThis  subcommand displays information about the previously executed subcommand.\nThe response will include either the appropriate error message or  the  message\n\"No  errors\".    The  initial status is \"No file transfers yet\".  If the status\nreflects an error condition, the name of the last  file  used  (excluding  TAKE\nfiles)  will be displayed as well.  If the error was detected by the other Ker-\nmit, the message will be \"Micro aborted\" followed by the text  from  the  Error\npacket.    Conversely, if Kermit-370 detected the error, the text of the status\nmessage will have constituted the error packet sent out.  In any case,  if  the\nlast  file transfer was cancelled (by virtue of an attribute mismatch or manual\nintervention), the reason for cancellation is displayed.  Also,  if  the  error\noccurred in disk I/O, any available explanatory information is displayed.  Nor-\nmally, the error status is altered only when a  transfer-initiating  subcommand\n(SEND  or RECEIVE) is executed, but in server mode every subcommand is received\nthrough a transfer from the other Kermit and may affect the status (except  the\nSTATUS subcommand itself, of course).  When Kermit-370 has been forced to trun-\ncate one or more records in a RECEIVE operation (because of the current maximum\nrecord  length),  the number of records truncated is reported.  The status dis-\nplay also includes throughput statistics for the last transfer: number of files\nsent,  duration,  number  of  packets,  number  of  retries,  and  averages  of\nbytes/packet and bytes/second.    These  last  two  quantities  are  calculated\nseparately for bytes sent and received on the communication (including padding,\nif any), and the last quantity is also calculated on the basis of the number of\nbytes read from or written to disk.\n\nFinally, if retries were necessary, Kermit-370 computes the optimum packet size\nassuming the retries to have been due to sparse, Poisson-distributed bursts  of\nnoise.  This is the same heuristic optimum that Kermit-370 computes and uses as\nan alternative packet-size limit when sending long packets.\n\n\n                             THE TDUMP SUBCOMMAND\n\nSyntax: TDUMP table-name or NAMES\n\nThis displays the contents of table-name.  The same table can be modified using\nthe  SET  subcommand.  The ATOE, ETOA, TATOE, and TETOA tables can presently be\ndisplayed and changed.  Alternatively, the filespec of each file  sent  in  the\nlast transfer can be displayed.\n\n\n                              THE GIVE SUBCOMMAND\n\nSyntax: GIVE table-name filespec\n\nThis compares the named table with its default values and saves the differences\nin the form of a TAKE file consisting of SET subcommands that would convert the\ndefault  into  the  current  arrangement.  ATOE, ETOA, TATOE, and TETOA are the\navailable tables.  The details of the filespec are system-dependent, but  those\ndetails will, in general, be the same as for the TAKE subcommand.\n\n\n                              THE HOST SUBCOMMAND\n\nSyntax: HOST text of command\n\nThis  issues  a  command  to the host operating system from Kermit-370.  When a\ncommand returns a  non-zero  completion  code,  the  code  will  be  displayed.\nGenerally,  the  name of the system (e.g., CMS) is treated as a synonym for the\nHOST subcommand.\n\n\n                             THE KERMIT SUBCOMMAND\n\nSyntax: KERMIT text of subcommand\n\nThis is provided for redundancy as the  counterpart  of  the  HOST  subcommand.\nKermit-370  executes  the  specified text as a Kermit subcommand just as if the\nLOCAL prefix had been entered.\n\n\n                        THE ECHO AND XECHO SUBCOMMANDS\n\nSyntax: \u00a2X|ECHO line\n\nThese subcommands type the line back at the user.  The line may contain control\ncharacters  or  any desired text, including upper or lower case.  These subcom-\nmands may be used, for example, to test the ASCII/EBCDIC translate tables or to\nissue coded commands to the user's terminal.  XECHO differs from ECHO primarily\nin that it uses transparent mode if CONTROLLER is SERIES1 or GRAPHICS.  It also\noffers  its  own brand of control-character quoting, using the \"\u00ac\" character to\nindicate that only the five low-order bits of the ASCII codes are to  be  used.\nThus,  \"\u00aca\",  \"\u00acA\", and \"\u00ac!\" are all translated to SOH (CTRL-A), while \"\u00ac\u00a2\" be-\ncomes ESC.  However, there must be one exception for \"\u00ac\" itself: \"\u00ac>\" and  \"\u00ac~\"\nare both translated to RS (CTRL-\u00ac), but \"\u00ac\u00ac\" becomes just \"\u00ac\".\n\n\n                        THE TYPE AND XTYPE SUBCOMMANDS\n\nSyntax: \u00a2X|TYPE filespec\n\nThese  subcommands  type  the named file.  XTYPE differs from TYPE primarily in\nthat it uses transparent mode if CONTROLLER is SERIES1 or GRAPHICS,  and  sends\nthe data in bursts no larger than the current SEND PACKET-SIZE.  TYPE is effec-\ntively a synonym for (and allows the same options as) the host  system  command\nfor listing files, but XTYPE merely sends the file \"raw\".\n\n\n1.3. Before Connecting to the Mainframe\n\nSeveral  flags  must be set on the micro version of Kermit before connecting to\nan IBM 370 system as a \"TTY\" device.  You should set the LOCAL-ECHO flag to  ON\n(to  indicate  half-duplex).  This is the norm but not true in absolutely every\ncase; if each  character  appears  twice  on  your  terminal  screen,  set  the\nLOCAL-ECHO  flag  OFF.  FLOW-CONTROL should be set to NONE, and on some systems\nHANDSHAKE should be set to XON.  The parity should  be  set  according  to  the\nsystem's specifications.  On some micro versions of Kermit, all of the above is\ndone in one step using the DO IBM macro (or SET IBM ON).  Set the baud rate  to\ncorrespond to the line speed.\n\nConnecting  through a \"SERIES1\" or \"GRAPHICS\" device also requires that certain\nflags be set on the micro version of Kermit.  You  should  set  the  LOCAL-ECHO\nflag to OFF (to indicate full-duplex).  FLOW-CONTROL should be set to XON/XOFF,\nand HANDSHAKE should be set to OFF.  For many systems, the PARITY should be set\nto EVEN.  Set the baud rate to correspond to the line speed.\n\nOne  exception  to these rules is the case where the micro Kermit is attempting\nautomated  file  transfer,  e.g.,  downloading  several  separate  files   from\nKermit-370  running  in server mode.  In fact, under those circumstances, hand-\nshaking is necessary even with \"SERIES1\" connections, and the two Kermits  must\nbe  instructed to adopt a common handshake character (e.g., by SET HANDSHAKE 10\nto Kermit-370 and SET HANDSHAKE LF to the micro).\n\nIn any case, you should make sure that either the micro  Kermit  or  Kermit-370\nwill  provide  timeouts  during file transfers (if not both).  Some versions of\nKermit-370 (notably CMS) cannot provide timeouts, and you may need to  set  the\nTIMER to ON in the micro.\n\n\n1.4. After Returning from Kermit-370\n\nWhen  Kermit-370  receives a QUIT or EXIT subcommand or finishes the subcommand\nor subcommands specified in the original command string  that  invoked  Kermit,\ncontrol is returned to the caller.  Before returning, Kermit-370 closes any ac-\ntive TAKE files (the EXIT or QUIT subcommand may be issued from a  TAKE  file).\nOn  return,  the completion code is set from the current error status according\nto the codes in Table 1-0.\n\n-------------------------------------------------------------------------------\n\nCode  Symbol  Error Message\n 0    NOE     No errors\n 1    NFT     No file transfers yet\n 2    TRC     Transfer cancelled\n 3    USC     Invalid server command\n 4    TIE     Terminal I/O error\n 5    BPC     Bad packet count or chksum\n 6    IPS     Invalid packet syntax\n 7    IPT     Invalid packet type\n 8    MIS     Lost a packet\n 9    NAK     Micro sent a NAK\n10    ABO     Micro aborted\n11    FNE     Invalid file name\n12    FNF     File not found\n13    FUL     Disk or file is full\n14    DIE     Disk I/O error\n15    MOP     Missing operand\n16    SYS     Illegal system command\n17    KCE     Kermit command error\n18    TIM     No packet received\n19    RTR     Records truncated\n20    COM     Bad communication line\n\n             Table 1-1:   Error messages and codes for Kermit-370\n\n-------------------------------------------------------------------------------\n\n\n1.5. What's New\n\nBelow is a list of the additions in Version 4.0 of Kermit-370:\n\n   1. Code reorganization into generic 370 and system-specific sections.\n\n   2. Optional separate translation tables for  counteracting  the  system\n      conversion of terminal I/O.\n\n   3. New GIVE subcommand for saving a modified translation table.\n\n   4. A  new,  RAW debug mode for recording the packet traffic as actually\n      sent and received on \"GRAPHICS\" and \"SERIES1\" devices.\n\n   5. Preservation of the case of subcommands  as  typed,  with  uppercase\n      conversion of only those words that must be uppercase.\n\n   6. New  SET  MARGIN  subcommand  for limiting the width of a file to be\n      sent.\n\n   7. Settable tab  stops  for  Kermit's  conversion  of  tabs  to  spaces\n      (alternative to the default 1, 9, 17, etc.).\n\n   8. Replace SET SERIES1 subcommand with new SET CONTROLLER.  Support for\n      multiple terminal controller types.\n\n   9. New DIRECTORY and HOST subcommands following Kermit standard.\n\n  10. Combination of file-attribute SET subcommands (FILE-TYPE, LRECL, and\n      RECFM) into a new group SET FILE.\n\n  11. Separate retry limits for initial and subsequent packet exchanges.\n\n  12. Pad binary records on disk with nulls, rather than blanks.\n\n  13. Automatically tune packet length when sending long packets according\n      to heuristic optimum based on sparse  Poisson  statistics,  provided\n      that transmission errors do occur.\n\n  14. Expand  STATUS  report  to  include  the number of files in the last\n      transfer, throughput statistics,  heuristic  optimum  packet  length\n      (when  long packets are enabled), and the reason for any file rejec-\n      tion based on A-packets.\n\n  15. New subcommand TDUMP NAMES to display the list of files sent in  the\n      last transfer.\n\n  16. Add file creation date to A-packet repertoire.\n\n  17. REMOTE COPY and REMOTE RENAME commands to a server at the other end.\n\n  18. Allow long packets through a 7171 with VTAM.\n\n  19. New  type D-BINARY for binary files with undelimited variable-length\n      records.\n\n  20. SET 8-BIT-QUOTE.  Allow 8-bit data where possible via SET PARITY.\n\n  21. SET SYSCMD, so that Kermit can be told to try \"illegal\"  subcommands\n      as host system commands instead of just rejecting them.\n\n  22. SET PROMPT subcommand.\n\n  23. Do not forget parameters specified by the other Kermit in I-packets.\n\n  24. Keep  track  of  truncated  records  during  a RECEIVE operation and\n      report the count in STATUS; also  call  truncation  an  error  after\n      everything is received.\n\n  25. SET  HANDSHAKE  subcommand  to alter or suppress handshake character\n      Kermit-370 sends out after each packet.\n\nBoth SEND and GET prompt the user for native and foreign filespecs  if  no  ar-\nguments are entered.\n\n\n1.6. What's Missing\n\nWork  on  Kermit-370 will continue.  Features that need to be improved or added\ninclude:\n\n   - Detect file properties from Attribute packets  and  allow  overriding\n     current parameter settings.  Also implement file archiving.\n\n   - Add SET REPEAT subcommand.\n\n   - Improve Kermit-370 operation as a local Kermit.\n\n   - Recover  from sudden line degradation by retransmitting partial pack-\n     ets.\n\n   - System-specific upgrades; see the respective chapters for details.\n\n\u00a2End of IK0KER.DOC|\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0KERMS": {"ttr": 6149, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "@Part(I370KERMIT,root=\"kuser\")\n@string(-ikvrsn=\"4.0\")\n@Chapter<IBM 370 KERMIT>\n@Begin<Description,Leftmargin +14,Indent -14,spread 0>\n@i(Program:)@\\John Chandler (Harvard/Smithsonian Center for\nAstrophysics); contributions from\nVace Kundakci and\nDaphne Tzoar (Columbia U),\nBob Shields (U. Maryland), Victor Lee (Queens U.), Gary Bjerke (U.\nTexas at Austin), Greg Small (UC Berkeley), Clark Frazier (Harvard\nBus. Sch.), Bob Bolch and Steve Blankinship (Triangle), Ron Rusnak\n(U. Chicago), Roger Fajman and Dale White (NIH), Andre Pirard (U. Liege)\n\n@i(Language:)@\\IBM 370 Assembler\n\n@i(Documentation:)@\\John Chandler (CfA)\n\n@i(Version:)@\\@value(-ikvrsn)\n\n@i(Date:)@\\1988 February\n@end<Description>\n\n@Index(IBM)\n@index(TTY)@index(Series/1)@Index(SNA)\nKermit-370 is a family of programs\nimplementing the KERMIT file transfer\nprotocol for IBM 370-series mainframes (System/370, 303x, 43xx, 308x,\netc.) under a variety of operating systems.\nKermit-370 operates over asynchronous ASCII communication\nlines attached to 3705-style front ends (@qq<TTY> devices),\nto a Series/1 or 4994 running the\nYale ASCII Terminal Communication System or\nthe IBM 7171 ASCII Device Control Unit or a 9370 with ASCII subsystem\n(@qq<SERIES1> devices), or\nto SNA-type front-ends with graphics pass-through mode, such as the\nMICOM 7400, Datastream/Leedata 8010, and PCI 1076\n(@qq<GRAPHICS> devices), or, in some configurations, to an IBM 3708\n(@qq<FULLSCREEN> device).  As of this writing, the pending\nimplementation of full 7171 compatibility in the program product\nSIM3278 has not been completed.\nFor more details on front-ends, see the section SET CONTROLLER.\n\nThe source is coded in IBM 370\nassembly language and is divided into sections, some generic and some\nspecific to an individual operating system.  While the details of\nfile-system and supervisor interaction vary widely among the systems\navailable for IBM 370's, the basic features are essentially the same.\nThis chapter will describe the features common to all variants of\nKermit-370, and a separate chapter will deal with the system-specific\ndetails for each variant.\n\nIBM 370 systems have some peculiarities that users should be aware\nof.  First, they are essentially half-duplex\nsystems; the communication line must \"turn\naround\" before any data can be sent to it.\nThe @qq<TTY> devices are strictly half-duplex,\nand even the @qq<SERIES1> and @qq<GRAPHICS>\ndevices, although they maintain full-duplex communication with the\nterminal, must transmit a block at a time to the mainframe.\nThe fact that a packet has\nbeen received from the IBM system through a @qq<TTY> device\nis no guarantee that it is ready for\na reply; generally, the true indicator of readiness is the\nline turnaround character (XON), which the operating system sends\nimmediately before issuing a read request.  On some systems, however,\nit is possible for Kermit to do away with the system-supplied\nturnaround and schedule read requests immediately after the\ncorresponding writes.\nIt is up to the user to tell the other Kermit that it must conform to\nthe requirements of the IBM mainframe.\n\n@index(Binary files)@Index(Translation)\nSecond, disk files are encoded using\nthe EBCDIC character set.  Consequently, there are three layers of\ncharacter translation on packets exchanged on a @qq(TTY) device.  For\nan incoming packet, the outer layer is provided by the\noperating system, which translates all characters\nfrom ASCII to EBCDIC.  Kermit-370 must then translate\nthe packets back to ASCII (the middle layer)\nin order to calculate and verify\nthe checksum.  Data arriving through\na @qq(SERIES1) or @qq(GRAPHICS) device are still in\nASCII and therefore bypass the two outer layers.\nIn any case, Kermit-370 translates everything finally into EBCDIC\n(the inner layer)\nbefore storing on disk (except BINARY files).\nWhen Kermit-370 sends a file, the opposite translations occur.  In\ntranslation, EBCDIC characters not representable in ASCII\nare replaced by nulls.  In some cases, several EBCDIC characters are\nmapped into a single ASCII character, but no two 7-bit ASCII characters\nare translated into the same EBCDIC character.\nThe middle-layer tables used by Kermit must be the inverses of the\ncorresponding outer-layer ones used by the host operating system if\nfile transfers are to work at all.  If necessary, the system programmer\nshould add the appropriate SET TATOE/TETOA/TTABLE subcommands (@i<q.v.>)\nto the global @qq(INIT) file (see the next section).  Indeed,\nit is usually a good idea to set TTABLE ON in the global @qq(INIT)\nfile to force using different built-in sets of tables for the\ninner and middle layers, whenever the system has @qq(TTY) devices.\nThe standard ASCII-to-EBCDIC translations can be\nfound in the Appendix or the IBM System/370 Reference Card.\n\nAnother distinction of IBM 370's is that they store and retrieve files\nas records rather than byte streams.  Records may be either\nfixed-length with some sort of padding (as needed) or varying-length\nwith some sort of (generally hidden) delimiters.  Thus,\nKermit-370 must assemble incoming\ndata packets into records by stripping off carriage return-linefeed\npairs (CRLF's) and padding with blanks or truncating as needed\nand must strip trailing blanks and append CRLF's\nto outgoing records.@Index(Records)@Index(CRLF)@Index(LRECL)@Index(RECFM)\nFurther, disk files typically have the records combined into blocks\nfor efficiency.  One consequence of this form of storage is that files\nhave attributes describing the component records: maximum record\nlength (LRECL), record format (RECFM), and sometimes block size\n(BLKSIZE).@Index(BLKSIZE)\n\nAs mentioned before, Kermit-370 is a family of programs.  At present,\nonly the CMS and TSO versions are operational.\nVersions for DOS/VSE and MTS have at least reached the \"drawing board,\"\nbut no others have even been started.  Volunteers are always\nwelcome to port Kermit-370 to other operating systems or add new\nfeatures to the existing family.  Anyone interested should first get\nin touch with the Center for Computing Activities at Columbia\nUniversity to find out what projects of a similar nature are already\npending (and thereby prevent unnecessary duplication of effort).\n\n@section<Program Operation>\n\nKermit-370 can be invoked directly or from a command procedure.\nIn either case, it reads and executes subcommands sequentially until\ndirected to quit and then returns.\nA subcommand consists of one or more fields (words) separated by spaces.\n\n@index(Initialization files)\nUpon initial startup, the program looks for two (optional) initialization\nfiles, one system-wide and a second specific to the user.  Both\n@i<filespecs>\nare, of course, system-dependent.\nThe purpose of these files is to allow Kermit to be customized for a\nparticular system and for a user's specific settings without changing\nthe source code.\nThe system-wide file, which is maintained by a systems programmer,\nshould contain Kermit subcommands\nthat all users would need to issue in order for\nKermit to run on the system, such as subcommands to modify the\nASCII/EBCDIC tables used by Kermit-370.  The\nuser-specific file, if any,\nshould contain subcommands that the user generally\nissues every time Kermit is run.  Kermit-370 executes any subcommands\nfound in these files as though they were typed at the terminal.\nHere is a sample @qq(INIT) file:\n@begin(example)\n* Asterisk in column one is a comment.\nset debug on\nset warning on\nset block 3\n@end(example)\n\nDuring interactive execution,\nyou may use the built-in help feature while typing\nKermit-370 subcommands.  A question mark (\"?\") typed at almost any point\nin a subcommand, followed by a carriage return, produces a brief\ndescription of what is expected or possible at that point.  Moreover,\nmistyping a subcommand will generally produce a helpful error message or\na list of possible options at the point of error.  Keywords in such lists\nare displayed with the minimum-length abbreviation in upper case and the\nremainder, if any, in lower case.  In entering Kermit subcommands,\nany keyword may be shortened to any substring that contains the minimum\nabbreviation.\n\n@Section<Kermit-370 Subcommands>\n\nThe following is a brief summary of Kermit subcommands.  The starred\nsubcommands can be issued as\nremote Kermit commands to Kermit-370 when it is in\nserver mode.  System-specific subcommands are omitted from this list.\n@Begin(Format,spread 0)\n@tabclear()@tabset(1.25inches,1.4inches,1.65inches)\n@>BYE@\\ @\\  logs out other Kermit server.\n@>CWD@\\*@\\  establishes a new working directory.\n@>DIRECTORY@\\*@\\  displays all or part of the disk directory.\n@>ECHO@\\ @\\  a line back to the user.\n@>EXIT@\\ @\\  from Kermit-370.\n@>FINISH@\\ @\\  other Kermit server.\n@>GET@\\ @\\  file(s) from a Kermit server.\n@>HELP@\\ @\\  about Kermit-370.\n@>HOST@\\*@\\  executes a system command.\n@>KERMIT@\\*@\\  executes a Kermit subcommand.\n@>QUIT@\\ @\\  from Kermit-370.\n@>RECEIVE@\\ @\\  file(s) from other Kermit.\n@>SEND@\\ @\\  file(s) to other Kermit.\n@>SERVER@\\ @\\  mode of remote operation.\n@>SET@\\*@\\  various parameters.\n@>SHOW@\\*@\\  various parameters.\n@>SPACE@\\*@\\  displays disk storage allocation.\n@>STATUS@\\*@\\  inquiry.\n@>TAKE@\\*@\\  subcommands from file.\n@>TDUMP@\\*@\\  dumps the contents of a table.\n@>TYPE@\\*@\\  a file.\n@>XECHO@\\ @\\  echoes a line (transparently).\n@>XTYPE@\\ @\\  displays a file (transparently).\n@End(format)\n\n@index(Remote)@index(Local)\nAlthough Kermit-370 is generally a remote Kermit, it has\nthe capability of communicating with another Kermit in server mode.\nIn that situation, the\nsubcommand prefixes REMOTE and LOCAL refer to the Kermit server and\nKermit-370, respectively, even when Kermit-370 is, strictly speaking,\nthe remote Kermit.  Any replies from the Kermit server are\nadded to a disk file (whose @i<filespec> is,\nof course, system-dependent).\nSuch a transaction can be carried out, for example, under control of\na TAKE file if Kermit-370 is not operating locally.\nIf the local Kermit has a \"magic\" character sequence that switches it\nfrom terminal emulation to server mode, then an entire session\ncould be controlled from the mainframe, possibly in response to a\nsingle command issued by a naive user.  For example,\n@Begin(example)\n@ux(grab)\n\n     @i(Kermit-370 is invoked and executes the following TAKE file)\n\nECHO Serve Me!        @i(the local Kermit switches to server mode)\nGET file.a            @i(the server uploads file.a)\nFINISH                @i(the server switches back to terminal mode)\n@End(example)\n\nThe remainder of this section concentrates on\nthe subcommands that have special form or meaning for Kermit-370, but\nneglects those with highly system-dependent syntax or use.\n\n@Heading<The SEND Subcommand>\n\n@Index(SEND)@Index(Long packets)\nSyntax: @q<SEND \u00a2@i(filespec) \u00a2@i(foreign-filespec)||>\n\nThe SEND subcommand tells Kermit-370 to send a file or file group to the\nother Kermit.  If no such file exists, Kermit-370 simply displays an\nerror message and issues another prompt.  If one or more files\nare sent, their names are recorded in memory and may be viewed later\nvia the TDUMP subcommand (but with no\nindication of whether any of them were rejected or cancelled by the\nother Kermit).  If this subcommand is issued without any arguments,\nKermit-370 will prompt the user for both native and foreign\n@i<filespecs> (and will insist on getting the former, but will do\nwithout the latter).\n\nWhen Kermit-370 sends files using long packets (longer than 96), the\nthroughput is especially sensitive to the level of noise on the line\nbecause retries are so time-consuming.  Therefore, Kermit-370 adds an\nextra, heuristic size limit for packets when retries have been found\nnecessary.  When that is the case, after every 20 packets, Kermit\ncomputes the packet size for maximum throughput assuming that the\ntransmission errors were due to sparse, Poisson-distributed noise bursts.\nThe result of this calculation is then used as another limit on the\nsize of outgoing packets besides the one specified by the other Kermit.\nIf no retries are required, then Kermit-370 assumes the line to be\nnoiseless and sends packets of the maximum length the\nother Kermit allows.\nFor more details on the SEND\nsubcommand syntax and operation,\nsee the chapter on the desired system-specific version of Kermit-370.\n\n@Heading<The RECEIVE Subcommand>\n\n@Index(RECEIVE)\nSyntax: @q<RECEIVE \u00a2@i(filespec)|>\n\nThe RECEIVE subcommand tells Kermit-370 to accept a file or file group.\nThe user must issue the corresponding\nSEND subcommand to the other Kermit.  Under\nsome circumstances, the records of the received file(s) may be\ntruncated; when this happens, Kermit does not stop, but notes the fact\nas an error (unless something more serious happens later).\nFor more details on the RECEIVE\nsubcommand syntax and operation,\nsee the chapter on the desired system-specific version of Kermit-370.\n\n@Heading<The GET Subcommand>\n\n@Index(GET)\n@Index(SEND)@index(RECEIVE)\nSyntax: @q<GET \u00a2@i(foreign-filespec) \u00a2@i(filespec)||>\n\nThe GET subcommand tells Kermit to request a file or file group\nfrom the other system, which must have a Kermit running in server mode.\nProvided the other Kermit complies, the effect is the same as if\nSEND @i(foreign-filespec) had been issued directly to the other Kermit\nand RECEIVE \u00a2@i(filespec)| to Kermit-370.\nother Kermit).  If this subcommand is issued without any arguments,\nKermit-370 will prompt the user for both foreign and native\n@i<filespecs> (and will insist on getting the former, but will do\nwithout the latter).  See the respective SEND and RECEIVE\nsubcommands for a description of the each @i<filespec>.\n\n@Heading<The TAKE Subcommand>\n@Index(TAKE)@Index(Echo mode)@Index(Error exit)\n\nSyntax: @q<TAKE @i(filespec)>\n\nExecute Kermit subcommands from the specified file, usually called a\nTAKE file.  The TAKE file may in turn include TAKE\nsubcommands to a nesting depth of ten.  If a TAKE file includes the\nsubcommand SERVER, however, the nesting count starts over again in server\nmode.\nThe user has the option of seeing\nthe subcommands echoed from the TAKE file as they are executed and also\nthe option of automatically exiting from a TAKE file on error.  See\nthe subcommand SET TAKE for details.\n\n@Heading<The SERVER Subcommand>\n@Index(SERVER)\n\nKermit-370 is capable of acting as a server.  In server mode,\nKermit-370 can send and receive files, execute host commands,\nexecute a restricted set of Kermit subcommands, and perform a variety of\ngeneric Kermit functions.  The following list shows the typical local\nKermit commands along with the server functions they elicit.\nWhen Kermit-370 is talking to another Kermit running in server mode,\nthese same subcommands may be used in the other direction.\n@begin(format,spread 0)\n@tabclear()@tabset(2.0inches)\nBYE@\\log out the Kermit server.\nFINISH@\\server mode.\nGET@\\a file or files from the server.\nREMOTE\n  COPY@\\a file or files.\n  CWD@\\set new working directory.\n  DIRECTORY@\\display file attributes.\n  ERASE@\\a file or files.\n  HELP@\\display this command summary.\n  HOST@\\execute a system command.\n  KERMIT@\\execute a Kermit-370 subcommand.\n  RENAME@\\a file or files.\n  SPACE@\\display disk space.\n  TYPE@\\a file.\nSEND@\\a file or files to the server.\n@end(format)\n\nIf your local Kermit does not support the REMOTE KERMIT command,\nyou may need to issue SET\nsubcommands to select various options before typing the SERVER\nsubcommand.  Once in server mode,\nKermit-370 will await all further instructions from the user Kermit\non the other end of the connection until a FINISH or BYE command is\ngiven.\n\nCommand execution in server mode is different in some respects\nfrom normal operation.  First of all, some Kermit subcommands\nare not allowed (see the list at the beginning of this section).\nMoreover, command errors\nalways terminate any active TAKE file.\nAlso, all commands will be run in the\nspecial environment that Kermit sets up during protocol transfers.\nAmong other things, Kermit intercepts all\nterminal I/O (if possible) in this environment in order to\ntransmit the data to the local\nKermit as text packets.\n\n@index(Type)\nNote that some operations can be requested by several different\ncommands.  If for example, the IBM 370 system has a command @qq(PRT) for\ndisplaying a file, a user interacting with a Kermit-370 server\ncan choose to display a file by issuing any\nof the commands: REMOTE TYPE, REMOTE HOST PRT, REMOTE KERMIT TYPE,\nREMOTE KERMIT HOST PRT, or (if SYSCMD has been set ON) REMOTE KERMIT\nPRT.  The first form simply transfers the\nrequested file as text, but the others invoke the @qq(PRT) command\nwith any specified options, intercept the terminal output,\nand return the results to the local Kermit.\n\n@Heading<The SET Subcommand>\n\nSyntax: @q<SET @i(parameter) \u00a2@i(value)|>\n\nThe SET subcommand establishes or modifies various parameters controlling\nfile transfers.  The values can, in turn, be\nexamined with the SHOW subcommand.\nSome parameters have two levels.  In particular, there are two\nmatching lists of SEND and RECEIVE sub-parameters corresponding to\nthe values exchanged by Kermits in the Send-Init/ACK sequence.\nFor each of these SEND/RECEIVE pairs one element is encoded in\noutgoing parameter packets, and the other is decoded from incoming ones.\nSetting the latter by hand may be needed to establish contact and also\nhas the effect of redefining the default value for decoding from\nsubsequent parameter packets.\nGenerally, the distinction between SEND and RECEIVE parameters is\nunambiguous, the only exception being TIMEOUT (q.v.).\nThe following SET\nsubcommands are available in Kermit-370:\n@Begin(Format,spread 0)\n@tabclear()@tabset(2.0inches)\nAPPEND@\\Append if file name collision.\nATOE@\\Modify the Kermit-370 ASCII-to-EBCDIC table.\nBLOCK-CHECK@\\Level of error checking for file transfer.\nCONTROLLER@\\Indicate type of terminal connection.\nDEBUG@\\Log packet traffic during file transfer.\nDELAY@\\Length of pause before a SEND subcommand.\nEOF@\\Text file truncation at CTRL-Z.\nETOA@\\Modify the Kermit-370 EBCDIC-to-ASCII table.\nFILE@\\Attributes for incoming or outgoing files...\n  TYPE@\\... text or binary.\n  @i(other)@\\... system-specific attributes.\nFOREIGN@\\Strings added to outgoing filespec...\n  PREFIX\n  SUFFIX\nINCOMPLETE@\\Determine the action on an aborted file transfer.\nLINE@\\Specify alternate communication line.\nMARGIN@\\for sending files...\n  LEFT\n  RIGHT\nPARITY@\\Indicate if 7-bit or 8-bit data.\nRETRY@\\Maximum retry count...\n  INIT@\\... for initial packet exchange.\n  PACKET@\\... per packet for ongoing transfer.\nSYSCMD@\\Try apparently invalid Kermit subcommands on host system.\nTABS-EXPAND@\\Determine tab-to-space conversion on reception.\nTAKE\n  ECHO@\\Echo subcommands read from TAKE files.\n  ERROR-ACTION@\\Exit from TAKE file on command error.\nTEST@\\Facilitate testing of Kermit.\nTATOE@\\Modify the Kermit-370 ASCII-to-EBCDIC table.\nTETOA@\\Modify the Kermit-370 EBCDIC-to-ASCII table.\nTTABLE@\\Determine which tables undo the terminal translation.\nWARNING@\\Rename if filename collision.\n8-BIT-QUOTE@\\Determine state of 8th-bit prefixing.\nSEND or RECEIVE\n  END-OF-LINE@\\Packet terminator.\n  PACKET-SIZE@\\Maximum packet size.\n  PAD-CHAR@\\Character to insert before each packet.\n  PADDING@\\Number of pad characters to insert.\n  QUOTE@\\Use to quote control characters in packets.\n  START-OF-PACKET@\\Packet beginning marker.\n  TIMEOUT@\\Time limit for response.\n@End(format)\n\n@Subheading<SET APPEND>\n@Index<File warning>\n\nSyntax: @q<SET APPEND ON @i(or) OFF>\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\If an incoming file has the same name as an existing one, the new\nfile is appended to the old one.  This option supersedes SET WARNING.\n\nOFF@\\Filename collision is handled according to the WARNING parameter.\n(Default.)\n@End(Description)\n\n@Subheading<SET ATOE etc.>\n@Index<ASCII-to-EBCDIC>@Index<EBCDIC-to-ASCII>\n\nSyntax: @q<SET @i(table) \u00a2@i(num1) @i(num2)|>\n\nThis modifies one of the ASCII/EBCDIC translation tables\nused by Kermit-370 (for example,\nto conform to your system).  The valid table names are ATOE, ETOA,\nTATOE, and TETOA.  The arguments are, respectively,\nthe offset within the named table and\nthe new value for that offset.  If the arguments are omitted, the table\nis restored to its initial arrangement.\nBoth @i(num1) and @i(num2) should be in the range 0-255 (decimal).\nFor example, in ATOE or TATOE, the offset is the\nASCII character code, and the new value is the new EBCDIC result code.\nInitially, ATOE and TATOE each\ncontain two identical copies of the 7-bit ASCII character table.\nNote: the meaning of the tables depends on the TTABLE setting -- if\nTTABLE is OFF, the TATOE and TETOA tables are not used.\n\n@Subheading<SET BLOCK-CHECK>\n@Index<Block check>\n\nSyntax: @q<SET BLOCK-CHECK @i(number)>\n\nThis determines the type of block check used during file transfer,\nprovided the other Kermit agrees.  Valid\noptions for @i(number) are: 1 (for a one-character checksum), 2 (for\na two-character checksum) and 3 (for a three-character CRC).  This is\none of only two\nSend-Init parameters that cannot be SET separately for SEND\nand RECEIVE.\n\n@Subheading<SET CONTROLLER>\n@Index<Series/1>@Index(TTY)@Index(SNA)\n\nSyntax: @q<SET CONTROLLER @i(type)>\n\nThe @i(type) may be TTY, SERIES1, GRAPHICS, or FULLSCREEN.\nKermit-370 automatically determines whether you are connected via a\nSeries/1 (or similar) emulation controller\nor a TTY line.  This subcommand is provided,\nthough, to allow that choice to be superseded,\nand because Kermit may not be\nable to distinguish between Series/1-type and other 3270-emulation\ncontrollers.  When CONTROLLER is set to SERIES1 or GRAPHICS,\nKermit disables the 3270 protocol conversion function by putting the\nterminal controller into \"transparent mode\",\nwhich allows Kermit packets to pass through intact.\n\n@Subheading<SET DEBUG>\n@Index<Debugging>\n\nSyntax: @q<SET DEBUG ON @i(or) RAW @i(or) OFF>\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\Keep a journal of all packets sent and received in a log file on\ndisk.  If the file already exists, it is erased and overwritten.  The\n@i<filespec> of the log is, of course, system-dependent.  All packets\nare logged in EBCDIC for legibility, even when CONTROLLER is set to\nSERIES1 or GRAPHICS.  In addition to the packets themselves, which are\nlabelled \"S\" or \"R\" for packets sent or received, the log includes any\nadditional status information (labelled \"A\"), such as the AID returned\nby a SERIES1 device.\n\nRAW@\\The same as ON, but packets are logged in the form that is passed\nto or from\nthe operating system, i.e., EBCDIC for TTY terminals, and ASCII for\nSERIES1 and GRAPHICS terminals.\n\nOFF@\\Stop logging packets and close the the log file.\n(Default.)\n@End(Description)\n\n@Subheading<SET DELAY>\n@Index<SEND delay>\n\nSyntax: @q<SET DELAY @i(number)>\n\nNormally, Kermit-370 waits 10 seconds after the SEND subcommand before\nstarting the transfer, but this delay may be SET to any non-negative\nvalue.  Two DELAY values have special meaning.  When DELAY is 1, the\nusual two-line greeting displayed during protocol mode is\nabbreviated to a short message (the default\nKermit prompt with three dots...),\nand when DELAY is 0, the greeting is suppressed entirely, along with\nthe extra one-second pause for the RECEIVE and SERVER subcommands.\n\n@Subheading<SET EOF>\n@Index<File truncation>\n\nSyntax: @q<SET EOF ON @i(or) OFF>\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\Scan each incoming TEXT file for the first\noccurrence of CTRL-Z and ignore the remainder of the file (but\ncontinue decoding up to the actual end of the file).  BINARY files\nare not affected.\n\nOFF@\\Accept incoming files in their entirety.\n(Default.)\n@End(Description)\n\n@Subheading(SET FILE TYPE)\n@index(Binary files)@Index<CRLF>\n\nSyntax: @q<SET FILE TYPE TEXT @i(or) BINARY @i(or) V-BINARY @i(or) D-BINARY>\n\n@Begin(Description,leftmargin +11,indent -11,spread 0.5)\nTEXT@\\Specifies ordinary text.  ASCII-to-EBCDIC\nor EBCDIC-to-ASCII translation is performed on the data.  Trailing\nblanks are removed, and CRLF's\nare appended to outgoing records. CRLF's are used, in turn, to\ndetermine the end of incoming records, which are padded with blanks\nif necessary to fill buffers.\n(Default.)\n\n@Index(LRECL)\nBINARY@\\Specifies bit-stream data.  No translation is performed,\nno CRLF's are added to outgoing records, and blanks are neither added\nnor removed.  Incoming bytes are added successively to\nthe current record buffer, which is written out when the current\nLRECL is reached.  Padding, if necessary, is done with nulls.\n\nV-BINARY@\\Specifies varying-length-record binary data.  This type is\nlike BINARY, except that a\ntwo-byte binary prefix is added to each outgoing record\ngiving the number of data bytes, and incoming records are set off by\n(and stripped of) their prefixes on receipt.\n\nD-BINARY@\\Is like V-BINARY except that the length prefixes are five-byte\nASCII-encoded decimal (right-justified with leading zeroes).\n@End(Description)\n\n@Subheading(SET FOREIGN)\n\nSyntax: @q<SET FOREIGN PREFIX @i(string)>\n\nThis defines a prefix string to be added to the outgoing\n@i(filespec) generated by the SEND subcommand.  For example, the string\nmight be set to @qq(B:) to specify output to the B disk drive on the\nother Kermit's system.  The default is a null string.  There is also a\nFOREIGN SUFFIX handled in the same manner.\n\n@Subheading(SET HANDSHAKE)\n@Index(Handshake)\n\nSyntax: @q<SET HANDSHAKE @i(number)>\n\nThis defines the character, if any, that Kermit-370 should\nsend (or cause to be sent) immediately\nbefore reading each packet.  The character is given as the decimal\nof an ASCII control character, or as zero if no handshake is to be\nsent.\nThe default is 17 (XON), and any value in the range\n0-31 is valid, but 13 (CR) should not be used because it is generally\nthe end-of-packet character.  When Kermit-370 is running through a\nfull-duplex connection (such as a @qq<SERIES1>), the traditional IBM\nhandshaking is not necessary, and HANDSHAKE should be set to 0\n(as long as the other Kermit can be\ninstructed not to expect a handshake).\nNote the distinction between @q(SET\nHANDSHAKE) in Kermit-370 (where it defines a character to be sent) and\nin many micro Kermits (where it defines a character to be expected).\n\n@Subheading(SET INCOMPLETE)\n@index(Incomplete files)\n\nSyntax: @q<SET INCOMPLETE DISCARD @i(or) KEEP>\n\n@Begin(Description,leftmargin +10,indent -10,spread 0.5)\nDISCARD@\\Specifies that incomplete files (that is, files partially\nreceived in a transfer cancelled by the other Kermit)\nare to be erased.  This is\nthe default.  Note that when APPEND is ON, incomplete files are never\nerased, lest pre-existing data be lost.\n\nKEEP@\\Specifies that incomplete files are to be kept.\n@End(Description)\n\n@Subheading(SET LINE)\n@index(Margins)\n\nSyntax: @q<SET LINE \u00a2@i(name)|>\n\nThis specifies an alternate communication line for file\ntransfers.  If the @i(name) is omitted, the default line (the user's\nterminal) is used.  The format of @i(name) is, of course,\nsystem-dependent, and some versions of Kermit-370 do not support any\nalternate lines.  No version currently allows Kermit-370 to CONNECT\nover an alternate line.\n\n@Subheading(SET MARGIN)\n@index(Margins)\n\nSyntax: @q<SET MARGIN @i(side) @i(column)>\n\nWhen Kermit-370 sends a text file, each line may be truncated on the\nleft or right (or both) at fixed column numbers.  Only the text from\nthe left margin to the right margin (inclusive) will be sent, and any\ntrailing blanks in the truncated lines will be stripped.  A value of\nzero for either margin disables truncation on that side.\n\n\n@Subheading(SET PARITY)\n@index(Parity)\n\nSyntax: @q<SET PARITY MARK @i(or) NONE>\n\nTransparent-mode ASCII data received from a\n@qq(SERIES1) or @qq(GRAPHICS) device will\ntypically have either all Mark parity (seven data bits with the eighth\nbit set) or no parity (eight data bits).  Kermit-370 must know which\nkind of parity to expect in order to calculate checksums properly.\nSince Kermit-370 does not actually verify parity, the other possible\nvariants (ODD, EVEN, and SPACE) are lumped together with MARK parity\nfor the purpose of this subcommand, which merely chooses between 7-bit\nand 8-bit data transfer.  The default is MARK.\n\n@Subheading(SET PROMPT)\n@index(Parity)\n\nSyntax: @q<SET PROMPT @i(string)>\n\nThis defines the character string that Kermit-370 displays\nwhen asking for a subcommand.  The prompt may be any string of up to 20\ncharacters.  The default is the name of the system-specific version of\nKermit-370 followed by a \">\" sign, e.g., @q(Kermit-CMS>).\n\n@Subheading(SET RETRY)\n\nSyntax: @q<SET RETRY  INITIAL @i(or) PACKETS  @i(number)>\n\nKermit-370 resends its last packet after receiving a NAK or bad packet,\nbut it eventually gives up after repeated failures or the same\npacket.  The limit on retries\ncan be set separately for the initial\npacket exchange (Send-Init or server-mode command) and for ordinary\npackets.  The default for INITIAL\nis 16 and for PACKETS, 5.  Either limit can be set to any positive\nvalue.\n\n@Subheading<SET SYSCMD>\n@Index<Host commands>\n\nSyntax: @q<SET SYSCMD ON @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\If the user enters a command string which is not a valid\nKermit subcommand, Kermit-370 will pass the string along to the host\noperating system for execution.  If the string is rejected by the system\nas well, Kermit will report it as an invalid @i(Kermit) subcommand.\nOtherwise, Kermit will assume the string was intended as a host command\nand will simply report the completion code if non-zero.\n\nOFF@\\Invalid Kermit subcommands are simply rejected as such.  System\ncommands may be executed, of course, but only by specifying the\ngeneric prefix @qq(HOST) or the appropriate system-specific prefix,\nsuch as CMS or TSO.\n(Default.)\n@End(Description)\n\n@Subheading<SET TABS-EXPAND>\n\nSyntax: @q<SET TABS-EXPAND ON \u00a2@i(list)| @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\Tab characters in incoming TEXT files are replaced by one or more\nblanks to bring the record size up to the next higher multiple of eight\nfor each tab.  If tab settings other than columns 1, 9, 17, etc. are\ndesired, they may be specified explicitly in a list following the\nkeyword @qq(ON).  Items in the list may be separated by spaces or\ncommas.\n\nOFF@\\Incoming tabs are retained.\n(Default.)\n@End(Description)\n\n@Subheading<SET TAKE ECHO>\n@index(Command echoing)\n\nSyntax: @q<SET TAKE ECHO ON @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\Subcommands are echoed to the terminal as they are executed from\na TAKE file.\n\nOFF@\\Subcommands from a TAKE file are executed \"silently.\"\n(Default.)\n@End(Description)\n\n@Subheading<SET TAKE ERROR-ACTION>\n\nSyntax: @q<SET TAKE ERROR-ACTION CONTINUE @i(or) HALT>\n\n@Begin(Description,leftmargin +11,indent -11,spread 0.5)\nCONTINUE@\\Execution continues in a TAKE file regardless of illegal\ncommands, except in server mode.  This is the default.\n\nHALT@\\A command error in a TAKE file causes immediate exit to Kermit\nsubcommand level.\n@End(Description)\n\n@Subheading<SET TEST>\n@Index<TEST>\n\nSyntax: @q<SET TEST ON @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\Allow setting the START-OF-PACKET and other special characters\nto any value, and suppress checksum testing on received packets.\n\nOFF@\\Normal operation.\n(Default.)\n@End(Description)\n\n@Subheading<SET TTABLE>\n@Index<Translation>\n\nSyntax: @q<SET TTABLE ON @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\The translation that undoes the terminal controller's\nASCII/EBCDIC conversion comes from the TATOE and TETOA tables, rather\nthan the ATOE and ETOA tables (which are used only for translating\ndisk files).  This option has no effect when there is no translation\nbuilt into the controller, i.e., with SERIES1 and GRAPHICS connections.\n\nOFF@\\The ATOE and ETOA tables are used for all translations by\nKermit-370.  (Default.)\n@End(Description)\n\n@Subheading<SET WARNING>\n@Index<File warning>@Index(File renaming)@index(Warning)\n\nSyntax: @q<SET WARNING ON @i(or) OFF>\n\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nON@\\If an incoming file has the same @i(filespec) as an existing file on\ndisk, Kermit will attempt to rename the incoming file so\nas not to destroy (overwrite) the pre-@\u00a6existing one.\n\nOFF@\\Upon filename collision, the existing file will be erased\nand replaced by the incoming file.  (Default.)\n@End(Description)\n\n@Subheading<SET 8-BIT-QUOTE>\n\nSyntax: @q<SET 8-BIT-QUOTE @i(char or) ON @i(or) OFF>\n\nThis controls whether eighth-bit prefixing is done and can be\nused to specify the character to be used.  This is\none of only two\nSend-Init parameters that cannot be SET separately for SEND\nand RECEIVE.\n@Begin(Description,leftmargin +8,indent -8,spread 0.5)\nchar@\\Eighth-bit prefixing will be done using @i(char), provided the\nother Kermit agrees.\n\nON@\\Eighth-bit prefixing will be done, provided the other Kermit\nexplicitly requests it (and specifies the character).\n\nOFF@\\Eighth-bit prefixing will not be done.  (Default.)\n@End(Description)\n\n@Subheading(SET SEND/RECEIVE)\n\nThe following parameters can be set either as SEND or RECEIVE options.\nAs a rule, in each pair, one is the operational value, and the other\nis used to change the default for Send-Init packets received from the\nother Kermit and to set up parameter values as if the other Kermit\nhad specified them on the previous exchange.\nWhen both values are described, the operational one will be first.\nAfter a transfer, the operational values will be unchanged, but the\nothers (as displayed by SHOW) will reflect the parameters specified\nby the other Kermit.  The underlying defaults established by previous\nSET subcommands will still be in effect.\nIn the syntax descriptions, @i(mode) is SEND or RECEIVE.\n\n@Subheading(END-OF-LINE)\n\nSyntax: @q<SET @i(mode) END-OF-LINE @i(number)>\n\nRECEIVE should not be changed.\n\nSEND may be needed to establish contact.\nIf the other system needs packets to be terminated\nby anything other than carriage return, specify the\ndecimal value of the desired ASCII character.\n@i(number) must be in the range 0-31 (decimal).  The default is 13\n(CR).\n\n@Subheading(PACKET-SIZE)\n\nSyntax: @q<SET @i(mode) PACKET-SIZE @i(number)>\n\nRECEIVE defines @i(number) as the maximum length for incoming\npackets.  The valid range is 26-9024, but 94 is the limit for normal\nshort-packet protocol.  The default is 80.@Index(Long packets)\nIn practice, the size may be limited by hardware and programming\nconsiderations.  See the system-specific chapters for details.\n\nSEND might be needed for sending files to a minimal Kermit that\nneither specifies a buffer size in the Send-Init sequence nor can\naccept the default (80).  This parameter has no other function and is\nmeaningful only in the range 26-94.\n\n@Subheading(PAD-CHAR)\n\nSyntax: @q<SET @i(mode) PAD-CHAR @i(number)>\n\nRECEIVE defines @i(number) as the character to be used by the other\nKermit for padding\npackets.  The character must be an ASCII control\ncharacter (in the range 0-31).  The default is 0 (NULL).\nThis option is seldom useful.\n\nSEND may be needed to establish contact if the other Kermit\n(or the transmission line) needs padded packets.\n\n@Subheading(PADDING)\n\nSyntax: @q<SET @i(mode) PADDING @i(number)>\n\nRECEIVE defines the @i(number) of pad characters to be used for padding\npackets from the other Kermit.  This number may be anywhere from 0 to\n94.  The default is 0.  This option is seldom useful.\n\nSEND may be needed to establish contact if the other Kermit\n(or the transmission line) needs padded packets.\n\n@Subheading(QUOTE)\n\nSyntax: @q<SET @i(mode) QUOTE @i(char)>\n\nSEND indicates a printable character for prefixing (quoting) control\ncharacters and other prefix characters.\nThe only good reason to change this would be for sending a file\nthat contains many @qq(#) characters (the\nnormal control prefix) as data.  It must be a single character with\nASCII value 33-62 or 96-126 (decimal).\n\nRECEIVE would be needed only for talking to a crippled Kermit that\nuses a non-standard quoting character, but does not admit it.\n\n@Subheading(START-OF-PACKET)\n\nSyntax: @q<SET @i(mode) START-OF-PACKET @i(number)>\n\nRECEIVE defines @i(number) as the character to be expected to mark the\nstart of packets from the other Kermit.  The character must be an\nASCII control\ncharacter (in the range 0-31).  The default is 1 (SOH).  This may be\nneeded to establish contact.\n\nSEND may also be needed to establish contact.\nIt defines @i(number) as the character to be used to mark outgoing\npackets.\n\n@Subheading(TIMEOUT)\n\nSyntax: @q<SET @i(mode) TIMEOUT @i(time)>\n\nRECEIVE defines the @i(time) in seconds the other Kermit is to wait for\na response from Kermit-370 before resending a packet.  The default is 5.\nA value of 0 means the other Kermit should wait indefinitely.\n\nSEND defines the @i(time) in seconds Kermit-370 is to wait for a\nresponse from the other Kermit before resending a packet.  The\ndefault is 0.\n\n@Heading(The SHOW Subcommand)\n\nSyntax: @q<SHOW \u00a2@i(option)|>\n\nThe SHOW subcommand displays the values of all\nparameters that can be changed with\nthe SET subcommand, except for ATOE, ETOA, TATOE, and TETOA\n(for those, see the TDUMP subcommand).  If specified,\n@i(option) can be a particular parameter or the keyword @qq<ALL>\n(the default).\nGroups of parameters, such as SEND, can be displayed by requesting\nthe group name, or individual sub-parameters can be displayed\nby specifying the complete name.  For example,\n@example(SHOW RECEIVE EOL)\nwill display the decimal value of the packet terminator that Kermit-370\ncurrently expects, i.e., 13.  Similarly,\n@example(SHOW FOREIGN)\nwill display the character strings currently in use for prefix and\nsuffix on each outgoing @i(filespec).\n\n@Heading(The STATUS Subcommand)\n\nSyntax: @q<STATUS>\n\nThis subcommand displays information about the previously executed\nsubcommand.\nThe response will include either the appropriate error message or\nthe message @qq<No errors>.\nThe initial status is @qq(No file transfers yet).\nIf the status reflects an error condition, the name of the last file\nused (excluding TAKE files) will be displayed as well.  If\nthe error was detected by the other Kermit, the message will be\n@qq(Micro aborted) followed by the text from the Error packet.\nConversely, if Kermit-370 detected the error, the text of the status\nmessage will have constituted the error packet sent out.\nIn any case, if the last file transfer was cancelled (by virtue of an\nattribute mismatch or manual intervention), the reason for\ncancellation is displayed.  Also, if the error occurred in disk I/O,\nany available explanatory information is displayed.\nNormally, the error status is altered only when a transfer-initiating\nsubcommand (SEND or RECEIVE) is executed, but in server mode @i(every)\nsubcommand is received through a transfer from the other Kermit and\nmay affect the status (except the STATUS subcommand itself, of course).\nWhen Kermit-370 has been forced to truncate one or more records in a\nRECEIVE operation (because of the current maximum record length), the\nnumber of records truncated is reported.\nThe status display also includes throughput statistics for the last\ntransfer: number of files sent, duration, number of packets, number of\nretries, and averages of bytes/packet and\nbytes/second.  These last two quantities are calculated separately\nfor bytes sent and received on the communication (including padding, if\nany), and the last quantity is also calculated on the basis of the\nnumber of bytes read from or written to disk.\n\nFinally, if retries were\nnecessary, Kermit-370 computes the optimum packet size assuming the\nretries to have been due to sparse, Poisson-distributed bursts\nof noise.  @Index(Long packets)This is the\nsame heuristic optimum that Kermit-370 computes and uses as\nan alternative packet-size limit when sending long packets.\n\n@Heading(The TDUMP Subcommand)\n\nSyntax: @q<TDUMP @i(table-name) @i(or) NAMES>\n\nThis\ndisplays the contents of @i(table-name).  The same table can be modified\nusing the SET subcommand.  The ATOE, ETOA, TATOE, and TETOA\ntables can presently be displayed and changed.  Alternatively, the\n@i<filespec> of each file sent in the last transfer can be displayed.\n\n@Heading(The GIVE Subcommand)\n\nSyntax: @q<GIVE @i(table-name) @i(filespec)>\n\nThis\ncompares the named table with its default values and\nsaves the differences\nin the form of a TAKE file consisting of SET subcommands that would\nconvert the default into the current arrangement.\nATOE, ETOA, TATOE, and TETOA are the available\ntables.\nThe details of the @i<filespec> are system-dependent, but those details\nwill, in general, be the same as for the TAKE subcommand.\n\n@Heading(The HOST Subcommand)\n\nSyntax: @q<HOST @i(text of command)>\n\nThis issues a command to the host operating\nsystem from Kermit-370.\nWhen a command returns a non-zero completion code, the\ncode will be displayed.\nGenerally, the name of the system (e.g., CMS)\nis treated as a synonym for the\nHOST subcommand.\n\n@Heading(The KERMIT Subcommand)\n\nSyntax: @q<KERMIT @i(text of subcommand)>\n\nThis is provided for redundancy as the counterpart of the\nHOST subcommand.  Kermit-370 executes the specified text as a Kermit\nsubcommand just as if the LOCAL prefix had been entered.\n\n@Heading(The ECHO and XECHO Subcommands)\n\nSyntax: @q<\u00a2X|ECHO @i(line)>\n\nThese subcommands type the @i(line) back at the user.\nThe @i(line) may contain control characters or any desired\ntext, including upper or lower case.  These\nsubcommands may be used, for example, to test the ASCII/EBCDIC translate\ntables or to issue coded commands to the user's terminal.\nXECHO differs from ECHO primarily in that it\nuses transparent mode if CONTROLLER is\nSERIES1 or GRAPHICS.  It also offers its own\nbrand of control-character quoting, using the @qq<\u00ac> character to\nindicate that only the five low-order bits of the ASCII codes are\nto be used.\nThus, @qq(\u00aca), @qq(\u00acA), and @qq(\u00ac!) are all translated to SOH (CTRL-A),\nwhile @qq(\u00ac\u00a2) becomes ESC.  However, there must be one exception for\n@qq(\u00ac) itself: @qq(\u00ac>) and @qq(\u00ac~) are both translated to RS\n(CTRL-@q<\u00ac>), but @qq(\u00ac\u00ac) becomes just @qq(\u00ac).\n\n@Heading(The TYPE and XTYPE Subcommands)\n\nSyntax: @q<\u00a2X|TYPE @i(filespec)>\n\nThese subcommands type the named file.\nXTYPE differs from TYPE primarily in that it\nuses transparent mode if CONTROLLER is\nSERIES1 or GRAPHICS, and sends the data in bursts\nno larger than the current SEND PACKET-SIZE.\nTYPE is effectively a synonym for (and allows the same options as) the\nhost system command for listing files, but\nXTYPE merely sends the file \"raw\".\n\n@Section<Before Connecting to the Mainframe>\n\n@index(TTY)@index(LOCAL-ECHO)@index(Flow control)@Index(Handshake)\nSeveral flags must be set on the micro version of Kermit before\nconnecting to an IBM 370 system as a @qq(TTY) device.\nYou should set the LOCAL-ECHO flag to ON (to indicate\nhalf-duplex).  This is the norm but not true in absolutely\nevery case; if each\ncharacter appears twice on your terminal screen,\nset the LOCAL-ECHO flag OFF.\nFLOW-CONTROL should be set to NONE, and on some systems\nHANDSHAKE should be set to XON.\nThe parity should be set according to the system's specifications.  On\nsome micro versions of Kermit, all of the above is done in one step\nusing the DO IBM macro (or SET IBM ON).  Set the baud rate to\ncorrespond to the line speed.\n\n@index(SERIES1)@index(PARITY)\nConnecting through a\n@qq(SERIES1) or @qq(GRAPHICS) device also\nrequires that certain flags be set\non the micro version of Kermit.  You should set the LOCAL-ECHO flag to\nOFF (to indicate full-duplex).  FLOW-CONTROL should be set to XON/XOFF,\nand HANDSHAKE should be set to OFF.  For many systems,\nthe PARITY should be set to EVEN.  Set the baud rate to correspond to\nthe line speed.\n\nOne exception to these rules is the case where\nthe micro Kermit is attempting automated file transfer, e.g.,\ndownloading several separate files from Kermit-370 running in server\nmode.  In fact, under those circumstances, handshaking is necessary\neven with @qq(SERIES1) connections, and the two Kermits must be\ninstructed to adopt a common handshake character (e.g., by SET HANDSHAKE\n10 to Kermit-370 and SET HANDSHAKE LF to the micro).\n\nIn any case, you should make sure that either the micro Kermit or\nKermit-370 will provide timeouts during file transfers (if not\nboth).  Some versions of Kermit-370 (notably CMS) cannot provide\ntimeouts, and you may need to set the TIMER to ON in the micro.\n\n@Section<After Returning from Kermit-370>\n\nWhen Kermit-370 receives a QUIT or EXIT subcommand or finishes the\nsubcommand or subcommands\nspecified in the original command string that invoked\nKermit, control is returned to the caller.  Before returning,\nKermit-370 closes any active TAKE files (the EXIT or QUIT subcommand may\nbe issued from a TAKE file).  On return, the completion code is set\nfrom the current error status according to the codes in Table\n@ref<-ikcodes>.\n\n@begin<table,leftmargin +0,use format>\n@tabclear()@tabset(0.6in,1.4in)\n@bar()\n@blankspace(1)\n@u(Code)@\\@u<Symbol>@\\@ux<Error Message>\n 0@\\NOE@\\No errors\n 1@\\NFT@\\No file transfers yet\n 2@\\TRC@\\Transfer cancelled\n 3@\\USC@\\Invalid server command\n 4@\\TIE@\\Terminal I/O error\n 5@\\BPC@\\Bad packet count or chksum\n 6@\\IPS@\\Invalid packet syntax\n 7@\\IPT@\\Invalid packet type\n 8@\\MIS@\\Lost a packet\n 9@\\NAK@\\Micro sent a NAK\n10@\\ABO@\\Micro aborted\n11@\\FNE@\\Invalid file name\n12@\\FNF@\\File not found\n13@\\FUL@\\Disk or file is full\n14@\\DIE@\\Disk I/O error\n15@\\MOP@\\Missing operand\n16@\\SYS@\\Illegal system command\n17@\\KCE@\\Kermit command error\n18@\\TIM@\\No packet received\n19@\\RTR@\\Records truncated\n20@\\COM@\\Bad communication line\n@tag<-ikcodes>\n@caption<Error messages and codes for Kermit-370>\n@blankspace(1)\n@bar()\n@end<table>\n\n@Section<What's New>\nBelow is a list of the additions in Version @value(-ikvrsn) of\nKermit-370:\n\n@begin(enumerate,spread 0.5)\nCode reorganization into generic 370 and system-specific sections.\n\nOptional separate translation tables for counteracting the system\nconversion of terminal I/O.\n\nNew @q<GIVE> subcommand for saving a modified translation table.\n\nA new, RAW debug mode for recording the packet traffic as\nactually sent and received on @qq(GRAPHICS) and\n@qq(SERIES1) devices.\n\nPreservation of the case of subcommands as typed, with uppercase\nconversion of only those words that must be uppercase.\n\nNew @q<SET MARGIN> subcommand for\nlimiting the width of a file to be sent.\n\nSettable tab stops for Kermit's conversion of tabs to spaces\n(alternative\nto the default 1, 9, 17, etc.).\n\nReplace @q<SET SERIES1> subcommand with new @q<SET CONTROLLER>.  Support\nfor multiple terminal controller types.\n\nNew @q<DIRECTORY> and @q<HOST> subcommands following Kermit standard.\n\nCombination of file-attribute @q<SET> subcommands (FILE-TYPE, LRECL, and\nRECFM) into a new group @q<SET FILE>.\n\nSeparate retry limits for initial and subsequent packet exchanges.\n\nPad binary records on disk with nulls, rather than blanks.\n\nAutomatically tune packet length when sending long packets according\nto heuristic optimum based on sparse Poisson statistics, provided\nthat transmission errors do occur.\n\nExpand STATUS report to include the number of files in the last\ntransfer, throughput statistics, heuristic optimum packet length\n(when long packets are enabled), and the reason for any file rejection\nbased on A-packets.\n\nNew subcommand @q<TDUMP NAMES> to display the list of\nfiles sent in the last transfer.\n\nAdd file creation date to A-packet repertoire.\n\n@q<REMOTE COPY> and @q<REMOTE RENAME>\ncommands to a server at the other end.\n\nAllow long packets through a 7171 with VTAM.\n\nNew type @q<D-BINARY> for binary files with undelimited variable-length\nrecords.\n\n@q<SET 8-BIT-QUOTE>.  Allow 8-bit data where possible\nvia @q<SET PARITY>.\n\n@q<SET SYSCMD>, so that Kermit can be told to try \"illegal\" subcommands\nas host system commands instead of just rejecting them.\n\n@q<SET PROMPT> subcommand.\n\nDo not forget parameters specified by the other Kermit in I-packets.\n\nKeep track of truncated records during a RECEIVE operation and report\nthe count in STATUS; also call truncation an error after everything is\nreceived.\n\n@q<SET HANDSHAKE> subcommand to alter or suppress handshake character\nKermit-370 sends out after each packet.\n@end(enumerate)\n\nBoth @q(SEND) and @q(GET) prompt the user for native and foreign\n@i<filespecs> if no arguments are entered.\n\n\n@Section(What's Missing)\n\nWork on Kermit-370 will continue.  Features that need to be\nimproved or added include:\n@begin(itemize)\nDetect file properties from Attribute packets and allow overriding\ncurrent parameter settings.  Also implement file archiving.\n\nAdd @q<SET REPEAT> subcommand.\n\nImprove Kermit-370 operation as a local Kermit.\n\nRecover from sudden line degradation by retransmitting partial packets.\n\nSystem-specific upgrades; see the respective chapters for details.\n@end(itemize)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0KERPS": {"ttr": 6661, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%!PS-Adobe-1.0\n%%Title: IK0HDR.MSS.1\n%%DocumentFonts: (atend)\n%%Creator: SY.FDC and Scribe 5(1500)\n%%CreationDate: 13 August 1988 11:17\n%%Pages: (atend)\n%%EndComments\n% PostScript Prelude for Scribe.\n/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def\n/ES {showpage SV restore} bind def\n/SC {setrgbcolor} bind def\n/FMTX matrix def\n/RDF {WFT SLT 0.0 eq\n  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}\n  {SSZ 0.0 SLT sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}\n  ifelse makefont setfont} bind def\n/SLT 0.0 def\n/SI { /SLT exch cvr def RDF} bind def\n/WFT /Courier findfont def\n/SF { /WFT exch findfont def RDF} bind def\n/SSZ 1000.0 def\n/SS { /SSZ exch 100.0 mul def RDF} bind def\n/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def\n/MT /moveto load def\n/XM {currentpoint exch pop moveto} bind def\n/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto\n   setlinewidth 0.0 rlineto stroke grestore} bind def\n/LH {gsave newpath moveto setlinewidth\n   0.0 rlineto\n   gsave stroke grestore} bind def\n/LV {gsave newpath moveto setlinewidth\n   0.0 exch rlineto\n   gsave stroke grestore} bind def\n/BX {gsave newpath moveto setlinewidth\n   exch\n   dup 0.0 rlineto\n   exch 0.0 exch neg rlineto\n   neg 0.0 rlineto\n   closepath\n   gsave stroke grestore} bind def\n/BX1 {grestore} bind def\n/BX2 {setlinewidth 1 setgray stroke grestore} bind def\n/PB {/PV save def translate 100.0 -100.0 scale pop} bind def\n/PE {PV restore} bind def\n/SH /show load def\n/MX {exch show 0.0 rmoveto} bind def\n/W {0 32 4 -1 roll widthshow} bind def\n/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def\n%%EndProlog\n%%Page: 0 1\nBS\n0 SI\n15 /Times-Bold AF\n18092 28325 MT\n(PORTABLE 370 KERMIT USER GUIDE)SH\n13 SS\n16314 31684 MT\n(For the IBM System/370 with VM/CMS and MVS/TSO)SH\n28538 35043 MT\n(Version 4.0)SH\n10 /Times-Roman AF\n28777 39122 MT\n(John Chandler)SH\n22500 41514 MT\n(Harvard/Smithsonian Center for Astrophysics)SH\n28402 42710 MT\n(Cambridge, MA)SH\n/Times-Italic SF\n29097 46298 MT\n(March, 1988)SH\n/Times-Roman SF\n26610 51082 MT\n(Copyright \\050C\\051 1981,1988)SH\n20111 52278 MT\n(Trustees of Columbia University in the City of New York)SH\n/Times-Italic SF\n18429 54670 MT\n(Permission is granted to any individual or institution to use, copy,)SH\n18178 55866 MT\n(or redistribute this document so long as it is not sold for profit, and)SH\n23291 57062 MT\n(provided this copyright notice is retained.)SH\nES\n%%Page: 1 2\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1. IBM 370 KERMIT)SH\n10 /Times-Italic AF\n52275 XM\n(Page 1)SH\n46800 50 8280 6252 UL\n16 /Times-Bold AF\n8280 8272 MT\n(1. IBM 370 KERMIT)SH\n10 /Times-Italic AF\n8280 10566 MT\n(Program:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler \\050Harvard/Smithsonian Center for Astrophysics\\051; contribution\n31 W( Kundakci)30 W\n15280 11671 MT\n(and Daphne Tzoar \\050Columbia)\n211 W( U\\051, Bob Shields \\050U. Maryland\\051, Victor Lee \\050Queens U.\\051, Gar\n15280 12776 MT\n(Bjerke \\050U.  Texas at Austin\\051, Greg Small \\050UC Berkeley\\051, Clark Frazi\n67 W( Bus. Sch.\\051, Bob)66 W\n15280 13881 MT\n(Bolch and Steve Blankinship \\050Triangle\\051, Ron Rusnak \\050U. Chicago\\051, Ro\n19 W( Dale White)20 W\n15280 14986 MT\n(\\050NIH\\051, Andre Pirard \\050U. Liege\\051)SH\n/Times-Italic SF\n8280 16091 MT\n(Language:)SH\n/Times-Roman SF\n15280 XM\n(IBM 370 Assembler)SH\n/Times-Italic SF\n8280 17196 MT\n(Documentation:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler \\050CfA\\051)SH\n/Times-Italic SF\n8280 18301 MT\n(Version:)SH\n/Times-Roman SF\n15280 XM\n(4.0)SH\n/Times-Italic SF\n8280 19406 MT\n(Date:)SH\n/Times-Roman SF\n15280 XM\n(1988 February)SH\n8280 21197 MT\n(Kermit-370 is a family of)\n344 W( programs implementing the KERMIT file transfer protocol for IBM 370-serie\n8280 22393 MT\n(mainframes \\050System/370, 303x, 43xx, 308x, etc.\\051 under)\n81 W( a variety of operating systems.  Kermit-370 operates over)82 W\n8280 23589 MT\n(asynchronous ASCII communication lines attached to 3705-style)\n27 W( front ends \\050``)26 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' devices\\051, to a Series/1 or 4994)26 W\n8280 24785 MT\n(running the Yale ASCII Terminal Communication System or the IBM)\n68 W( 7171 ASCII Device Control Unit or a 9370)69 W\n8280 25981 MT\n(with ASCII subsystem \\050``)4 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' devices\\051, or to SNA-type front-ends with)\n4 W( graphics pass-through mode, such as)3 W\n8280 27177 MT\n(the MICOM 7400, Datastream/Leedata 8010, and PCI 1076 \\050``)18 W\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' devices\\051,)\n18 W( or, in some configurations, to)19 W\n8280 28373 MT\n(an IBM 3708 \\050``)19 W\n/Courier SF\n(FULLSCREEN)SH\n/Times-Roman SF\n('' device\\051.  As of this writing, the pending implementation of full 7171)\n19 W( compatibility)18 W\n8280 29569 MT\n(in the program product SIM3278 has not been)\n146 W( completed.  For more details on front-ends, see the section SET)147 W\n8280 30765 MT\n(CONTROLLER.)SH\n8280 33157 MT\n(The source is coded in IBM 370 assembly language and is divided)\n37 W( into sections, some generic and some specific to)36 W\n8280 34353 MT\n(an individual operating system.  While the details of file-system)\n69 W( and supervisor interaction vary widely among the)70 W\n8280 35549 MT\n(systems available for IBM 370's, the basic features are essentially the same.)\n33 W( This)\n315 W( chapter will describe the features)32 W\n8280 36745 MT\n(common to all variants of Kermit-370, and a separate chapter will deal with)\n129 W( the system-specific details for each)130 W\n8280 37941 MT\n(variant.)SH\n8280 40333 MT\n(IBM 370 systems have some peculiarities that users should be aware of.)\n154 W( First,)\n556 W( they are essentially half-duplex)153 W\n8280 41529 MT\n(systems; the communication line must \"turn around\" before any data can be sent\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' devices)\n127 W( are)128 W\n8280 42725 MT\n(strictly half-duplex, and even the ``)174 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' and ``)174 W\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' devices, although)\n174 W( they maintain full-duplex)173 W\n8280 43921 MT\n(communication with the terminal,)\n23 W( must transmit a block at a time to the mainframe.  The fact that a packet\n8280 45117 MT\n(received from the IBM system through a ``)83 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' device is)\n83 W( no guarantee that it is ready for a reply; generally, the)82 W\n8280 46313 MT\n(true indicator of readiness is the)\n94 W( line turnaround character \\050XON\\051, which the operating system sends im\n8280 47509 MT\n(before issuing a read request.  On some systems, however, it is possible for Ke\n291 W( the)290 W\n8280 48705 MT\n(system-supplied turnaround and schedule read requests immediately after the)\n76 W( corresponding writes.  It is up to the)77 W\n8280 49901 MT\n(user to tell the other Kermit that it must conform to the requirements of the I\n8280 52293 MT\n(Second, disk files are encoded using the EBCDIC character set.  Consequently, t\n8280 53489 MT\n(translation on packets exchanged on a ``)75 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' device.  For an incoming packet, the outer layer is provided by)\n75 W( the)76 W\n8280 54685 MT\n(operating system, which translates)\n186 W( all characters from ASCII to EBCDIC.  Kermit-370 must then translate the)\n8280 55881 MT\n(packets back to ASCII \\050the middle layer\\051 in order to calculate and verify\n104 W( a)105 W\n8280 57077 MT\n(``)SH\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' or ``)92 W\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' device are still in)\n92 W( ASCII and therefore bypass the two outer layers.  In any case,)91 W\n8280 58273 MT\n(Kermit-370 translates)\n144 W( everything finally into EBCDIC \\050the inner layer\\051 before storing on\n8280 59469 MT\n(files\\051. When)\n650 W( Kermit-370 sends a file, the opposite translations occur.  In)\n200 W( translation, EBCDIC characters not)199 W\n8280 60665 MT\n(representable in ASCII are replaced by nulls.)\n63 W( In)\n377 W( some cases, several EBCDIC characters are mapped into a single)64 W\n8280 61861 MT\n(ASCII character, but)\n305 W( no two 7-bit ASCII characters are translated into the same EBCDIC charact\n8280 63057 MT\n(middle-layer tables used by Kermit must be the inverses of the corresponding)\n137 W( outer-layer ones used by the host)138 W\n8280 64253 MT\n(operating system if file transfers are to work at all.  If necessary,)\n24 W( the system programmer should add the appropriate)23 W\n8280 65449 MT\n(SET TATOE/TETOA/TTABLE subcommands \\050)15 W\n/Times-Italic SF\n(q.v.)SH\n/Times-Roman SF\n(\\051 to)\n281 W( the global ``)16 W\n/Courier SF\n(INIT)SH\n/Times-Roman SF\n('' file \\050see the next section\\051.  Indeed, it is)16 W\n8280 66645 MT\n(usually a good idea to set TTABLE ON in the global ``)29 W\n/Courier SF\n(INIT)SH\n/Times-Roman SF\n('' file to)\n29 W( force using different built-in sets of tables for)28 W\n8280 67841 MT\n(the inner and middle layers, whenever the system has ``)2 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' devices.  The standard ASCII-to-EBCDIC translations)3 W\n8280 69037 MT\n(can be found in the Appendix or the IBM System/370 Reference Card.)SH\n8280 71429 MT\n(Another distinction of IBM 370's is that they store and retrieve files as recor\n75 W( rather than byte streams.  Records)74 W\nES\n%%Page: 2 3\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 2)SH\n12 /Times-Bold AF\n31652 XM\n(Kermit User Guide: IBM 370 KERMIT 1)SH\n46800 50 6120 5709 UL\n10 /Times-Roman AF\n6120 7886 MT\n(may be either fixed-length with some sort of padding)\n114 W( \\050as needed\\051 or varying-length with some sort of \\050generally)115 W\n6120 9082 MT\n(hidden\\051 delimiters.  Thus, Kermit-370 must assemble incoming data packets in\n89 W( carriage)88 W\n6120 10278 MT\n(return-linefeed pairs \\050CRLF's\\051 and padding with blanks)\n81 W( or truncating as needed and must strip trailing blanks and)82 W\n6120 11474 MT\n(append CRLF's to outgoing records.)\n235 W( Further,)\n719 W( disk files typically have the records combined into blocks for)234 W\n6120 12670 MT\n(efficiency. One)\n370 W( consequence of this)\n60 W( form of storage is that files have attributes describing the component rec\n6120 13866 MT\n(maximum record length \\050LRECL\\051, record format \\050RECFM\\051, and sometimes\n6120 16258 MT\n(As mentioned before, Kermit-370 is a family of programs.  At present, only the\n210 W( versions are)209 W\n6120 17454 MT\n(operational. Versions)\n390 W( for DOS/VSE and MTS have)\n70 W( at least reached the \"drawing board,\" but no others have even)71 W\n6120 18650 MT\n(been started.  Volunteers are always welcome to port)\n44 W( Kermit-370 to other operating systems or add new features to)43 W\n6120 19846 MT\n(the existing family.  Anyone interested should)\n223 W( first get in touch with the Center for Computing Activities at)224 W\n6120 21042 MT\n(Columbia University to find out what projects of a similar nature are already p\n259 W( \\050and thereby prevent)258 W\n6120 22238 MT\n(unnecessary duplication of effort\\051.)SH\n14 /Times-Bold AF\n6120 25840 MT\n(1.1. Program Operation)SH\n10 /Times-Roman AF\n6120 27958 MT\n(Kermit-370 can be invoked directly or from a command)\n307 W( procedure.  In either case, it reads and executes)308 W\n6120 29154 MT\n(subcommands sequentially until)\n107 W( directed to quit and then returns.  A subcommand consists of one or more\n6120 30350 MT\n(\\050words\\051 separated by spaces.)SH\n6120 32742 MT\n(Upon initial startup, the program looks for two \\050optional\\051 initialization\n36 W( files, one system-wide and a second specific)37 W\n6120 33938 MT\n(to the user.  Both)98 W\n/Times-Italic SF\n13721 XM\n(filespecs)SH\n/Times-Roman SF\n17513 XM\n(are, of course, system-dependent.  The purpose of these files is to allow Kermi\n98 W( be)97 W\n6120 35134 MT\n(customized for a particular system and for a)\n230 W( user's specific settings without changing the source code.  The)231 W\n6120 36330 MT\n(system-wide file, which)\n23 W( is maintained by a systems programmer, should contain Kermit subcommands t\n6120 37526 MT\n(would need to issue in order for Kermit to run on the system, such as)\n42 W( subcommands to modify the ASCII/EBCDIC)43 W\n6120 38722 MT\n(tables used by Kermit-370.  The user-specific file, if any, should contain subc\n6120 39918 MT\n(every time Kermit is run.)\n30 W( Kermit-370)\n312 W( executes any subcommands found in these files as though they were typed a\n6120 41114 MT\n(the terminal.  Here is a sample ``)SH\n/Courier SF\n(INIT)SH\n/Times-Roman SF\n('' file:)SH\n/Courier SF\n8520 42769 MT\n(* Asterisk in column one is a comment.)SH\n8520 43800 MT\n(set debug on)SH\n8520 44831 MT\n(set warning on)SH\n8520 45862 MT\n(set block 3)SH\n/Times-Roman SF\n6120 48254 MT\n(During interactive execution, you may use the built-in help feature while)\n167 W( typing Kermit-370 subcommands.  A)166 W\n6120 49450 MT\n(question mark \\050\"?\"\\051 typed at almost any point in a subcommand, followed b\n123 W( brief)124 W\n6120 50646 MT\n(description of what is expected or possible at that point.  Moreover, mistyping\n6120 51842 MT\n(a helpful)\n42 W( error message or a list of possible options at the point of error.  Keywor\n6120 53038 MT\n(the minimum-length abbreviation in upper case and the remainder, if any, in low\n211 W( Kermit)210 W\n6120 54234 MT\n(subcommands, any keyword may be shortened to any substring that contains the mi\n14 /Times-Bold AF\n6120 57836 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Roman AF\n6120 59954 MT\n(The following is a brief summary)\n135 W( of Kermit subcommands.  The starred subcommands can be issued as remote)1\n6120 61150 MT\n(Kermit commands to Kermit-370 when)\n84 W( it is in server mode.  System-specific subcommands are omitted from this)8\n6120 62346 MT\n(list.)SH\n13120 63956 MT\n(BYE)SH\n16700 XM\n(logs out other Kermit server.)SH\n12787 65061 MT\n(CWD)SH\n(*)SH\n16700 XM\n(establishes a new working directory.)SH\n9398 66166 MT\n(DIRECTORY)SH\n(*)SH\n16700 XM\n(displays all or part of the disk directory.)SH\n12398 67271 MT\n(ECHO)SH\n16700 XM\n(a line back to the user.)SH\n12843 68376 MT\n(EXIT)SH\n16700 XM\n(from Kermit-370.)SH\n11898 69481 MT\n(FINISH)SH\n16700 XM\n(other Kermit server.)SH\n13176 70586 MT\n(GET)SH\n16700 XM\n(file\\050s\\051 from a Kermit server.)SH\n12620 71691 MT\n(HELP)SH\n16700 XM\n(about Kermit-370.)SH\nES\n%%Page: 3 4\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n52275 XM\n(Page 3)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n14669 7886 MT\n(HOST)SH\n(*)SH\n18860 XM\n(executes a system command.)SH\n13447 8991 MT\n(KERMIT)SH\n(*)SH\n18860 XM\n(executes a Kermit subcommand.)SH\n14892 10096 MT\n(QUIT)SH\n18860 XM\n(from Kermit-370.)SH\n13058 11201 MT\n(RECEIVE)SH\n18860 XM\n(file\\050s\\051 from other Kermit.)SH\n14669 12306 MT\n(SEND)SH\n18860 XM\n(file\\050s\\051 to other Kermit.)SH\n13446 13411 MT\n(SERVER)SH\n18860 XM\n(mode of remote operation.)SH\n15502 14516 MT\n(SET)SH\n(*)SH\n18860 XM\n(various parameters.)SH\n14336 15621 MT\n(SHOW)SH\n(*)SH\n18860 XM\n(various parameters.)SH\n14168 16726 MT\n(SPACE)SH\n(*)SH\n18860 XM\n(displays disk storage allocation.)SH\n13502 17831 MT\n(STATUS)SH\n(*)SH\n18860 XM\n(inquiry.)SH\n14614 18936 MT\n(TAKE)SH\n(*)SH\n18860 XM\n(subcommands from file.)SH\n13780 20041 MT\n(TDUMP)SH\n(*)SH\n18860 XM\n(dumps the contents of a table.)SH\n14780 21146 MT\n(TYPE)SH\n(*)SH\n18860 XM\n(a file.)SH\n13836 22251 MT\n(XECHO)SH\n18860 XM\n(echoes a line \\050transparently\\051.)SH\n14058 23356 MT\n(XTYPE)SH\n18860 XM\n(displays a file \\050transparently\\051.)SH\n8280 25748 MT\n(Although Kermit-370 is)\n72 W( generally a remote Kermit, it has the capability of communicating with ano\n8280 26944 MT\n(server mode.  In that situation, the subcommand)\n138 W( prefixes REMOTE and LOCAL refer to the Kermit server and)137 W\n8280 28140 MT\n(Kermit-370, respectively, even when Kermit-370 is, strictly speaking, the remot\n146 W( Kermit.  Any replies from the)147 W\n8280 29336 MT\n(Kermit server are added to a disk file \\050whose)75 W\n/Times-Italic SF\n27200 XM\n(filespec)SH\n/Times-Roman SF\n30580 XM\n(is, of course, system-dependent\\051.  Such a)\n75 W( transaction can be)74 W\n8280 30532 MT\n(carried out, for example, under control of a TAKE file if Kermit-370 is not ope\n4 W( local Kermit has)5 W\n8280 31728 MT\n(a \"magic\" character sequence that switches it from)\n59 W( terminal emulation to server mode, then an entire session could)58 W\n8280 32924 MT\n(be controlled from the mainframe, possibly in response to a single command issu\n/Courier SF\n10680 34579 MT\n(grab)SH\n2400 50 10680 34779 UL\n/Times-Italic SF\n13680 36294 MT\n(Kermit-370 is invoked and executes the following TAKE file)SH\n/Courier SF\n10680 38009 MT\n(ECHO Serve Me!)SH\n/Times-Italic SF\n23880 XM\n(the local Kermit switches to server mode)SH\n/Courier SF\n10680 39040 MT\n(GET file.a)SH\n/Times-Italic SF\n23880 XM\n(the server uploads file.a)SH\n/Courier SF\n10680 40071 MT\n(FINISH)SH\n/Times-Italic SF\n23880 XM\n(the server switches back to terminal mode)SH\n/Times-Roman SF\n8280 42463 MT\n(The remainder of)\n41 W( this section concentrates on the subcommands that have special form or mea\n8280 43659 MT\n(but neglects those with highly system-dependent syntax or use.)SH\n13 /Times-Bold AF\n24708 47018 MT\n(The SEND Subcommand)SH\n10 /Times-Roman AF\n8280 49391 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SEND \u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n18841 XM\n(\u00a2)SH\n/Times-Italic SF\n(foreign-filespec)SH\n/Courier SF\n(||)SH\n/Times-Roman SF\n8280 51783 MT\n(The SEND subcommand)\n112 W( tells Kermit-370 to send a file or file group to the other Kermit.  If no\n8280 52979 MT\n(Kermit-370 simply displays an)\n49 W( error message and issues another prompt.  If one or more files are sent, t\n8280 54175 MT\n(are recorded in memory)\n55 W( and may be viewed later via the TDUMP subcommand \\050but with no indicatio\n8280 55371 MT\n(any of them were rejected or cancelled by the other Kermit\\051.  If this subcom\n8280 56567 MT\n(Kermit-370 will prompt the user for both native and foreign)34 W\n/Times-Italic SF\n32839 XM\n(filespecs)SH\n/Times-Roman SF\n36566 XM\n(\\050and will insist on getting the former, but will)33 W\n8280 57763 MT\n(do without the latter\\051.)SH\n8280 60155 MT\n(When Kermit-370 sends files)\n40 W( using long packets \\050longer than 96\\051, the throughput is especially se\n8280 61351 MT\n(of noise on the line because retries are so time-consuming.  Therefore, Kermit-\n19 W( an extra, heuristic size limit)18 W\n8280 62547 MT\n(for packets when retries have been found necessary.)\n13 W( When)\n277 W( that is the case, after every 20 packets, Kermit computes)14 W\n8280 63743 MT\n(the packet size for maximum throughput assuming that the transmission errors)\n536 W( were due to sparse,)535 W\n8280 64939 MT\n(Poisson-distributed noise bursts.)\n53 W( The)\n358 W( result of this calculation is then used as another limit on the size of o\n8280 66135 MT\n(packets besides the one specified by the other Kermit.  If no retries)\n2 W( are required, then Kermit-370 assumes the line to)1 W\n8280 67331 MT\n(be noiseless and sends packets of the maximum length the other Kermit allows.\n124 W( details on the SEND)125 W\n8280 68527 MT\n(subcommand syntax and operation, see the chapter on the desired system-specific\nES\n%%Page: 4 5\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 4)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.2)SH\n46800 50 6120 5981 UL\n13 SS\n21320 8071 MT\n(The RECEIVE Subcommand)SH\n10 /Times-Roman AF\n6120 10444 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(RECEIVE \u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 12836 MT\n(The RECEIVE subcommand tells Kermit-370 to accept a file)\n50 W( or file group.  The user must issue the corresponding)49 W\n6120 14032 MT\n(SEND subcommand to the other Kermit.  Under some circumstances, the records of\n134 W( received file\\050s\\051 may be)135 W\n6120 15228 MT\n(truncated; when this happens, Kermit does not stop, but notes the fact as an er\n6120 16424 MT\n(happens later\\051.)\n10 W( For)\n272 W( more details on the RECEIVE subcommand syntax and operation, see the chap\n6120 17620 MT\n(system-specific version of Kermit-370.)SH\n13 /Times-Bold AF\n22910 20979 MT\n(The GET Subcommand)SH\n10 /Times-Roman AF\n6120 23352 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(GET \u00a2)SH\n/Times-Italic SF\n(foreign-filespec)SH\n/Courier SF\n19303 XM\n(\u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n(||)SH\n/Times-Roman SF\n6120 25744 MT\n(The GET subcommand tells)\n37 W( Kermit to request a file or file group from the other system, which must h\n6120 26940 MT\n(running in server mode.  Provided the other Kermit complies, the)\n23 W( effect is the same as if SEND)24 W\n/Times-Italic SF\n44925 XM\n(foreign-filespec)SH\n/Times-Roman SF\n51476 XM\n(had)SH\n6120 28136 MT\n(been issued directly to the other Kermit and RECEIVE \u00a2)327 W\n/Times-Italic SF\n(filespec)SH\n/Times-Roman SF\n(| to Kermit-370.  other Kermit\\051.)\n327 W( If)\n902 W( this)326 W\n6120 29332 MT\n(subcommand is issued without)\n13 W( any arguments, Kermit-370 will prompt the user for both foreign and native\n/Times-Italic SF\n49476 XM\n(filespecs)SH\n/Times-Roman SF\n6120 30528 MT\n(\\050and will insist on getting the former, but will do without the latter\\051.\n152 W( RECEIVE)151 W\n6120 31724 MT\n(subcommands for a description of the each)SH\n/Times-Italic SF\n23533 XM\n(filespec)SH\n/Times-Roman SF\n(.)SH\n13 /Times-Bold AF\n22440 35083 MT\n(The TAKE Subcommand)SH\n10 /Times-Roman AF\n6120 37456 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(TAKE)SH\n/Times-Italic SF\n12426 XM\n(filespec)SH\n/Times-Roman SF\n6120 39848 MT\n(Execute Kermit subcommands from the specified file, usually called)\n140 W( a TAKE file.  The TAKE file may in turn)141 W\n6120 41044 MT\n(include TAKE subcommands to a nesting depth of ten.  If a TAKE file includes)\n206 W( the subcommand SERVER,)205 W\n6120 42240 MT\n(however, the nesting)\n84 W( count starts over again in server mode.  The user has the option of seeing\n6120 43436 MT\n(echoed from the TAKE file as they are executed and also the option of automatic\n60 W( file on)59 W\n6120 44632 MT\n(error. See)\n250 W( the subcommand SET TAKE for details.)SH\n13 /Times-Bold AF\n21645 47991 MT\n(The SERVER Subcommand)SH\n10 /Times-Roman AF\n6120 50364 MT\n(Kermit-370 is capable of acting as a server.  In server)\n92 W( mode, Kermit-370 can send and receive files, execute host)93 W\n6120 51560 MT\n(commands, execute a restricted set of Kermit subcommands,)\n136 W( and perform a variety of generic Kermit functions.)135 W\n6120 52756 MT\n(The following list)\n151 W( shows the typical local Kermit commands along with the server functions t\n6120 53952 MT\n(Kermit-370 is talking to another Kermit running in server mode, these same)\n22 W( subcommands may be used in the other)21 W\n6120 55148 MT\n(direction.)SH\n6120 56758 MT\n(BYE)SH\n20520 XM\n(log out the Kermit server.)SH\n6120 57863 MT\n(FINISH)SH\n20520 XM\n(server mode.)SH\n6120 58968 MT\n(GET)SH\n20520 XM\n(a file or files from the server.)SH\n6120 60073 MT\n(REMOTE)SH\n6620 61178 MT\n(COPY)SH\n20520 XM\n(a file or files.)SH\n6620 62283 MT\n(CWD)SH\n20520 XM\n(set new working directory.)SH\n6620 63388 MT\n(DIRECTORY)SH\n20520 XM\n(display file attributes.)SH\n6620 64493 MT\n(ERASE)SH\n20520 XM\n(a file or files.)SH\n6620 65598 MT\n(HELP)SH\n20520 XM\n(display this command summary.)SH\n6620 66703 MT\n(HOST)SH\n20520 XM\n(execute a system command.)SH\n6620 67808 MT\n(KERMIT)SH\n20520 XM\n(execute a Kermit-370 subcommand.)SH\n6620 68913 MT\n(RENAME)SH\n20520 XM\n(a file or files.)SH\n6620 70018 MT\n(SPACE)SH\n20520 XM\n(display disk space.)SH\n6620 71123 MT\n(TYPE)SH\n20520 XM\n(a file.)SH\nES\n%%Page: 5 6\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n52275 XM\n(Page 5)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n8280 7886 MT\n(SEND)SH\n22680 XM\n(a file or files to the server.)SH\n8280 10278 MT\n(If your local Kermit does not support the REMOTE KERMIT command,)\n24 W( you may need to issue SET subcommands)25 W\n8280 11474 MT\n(to select various options)\n40 W( before typing the SERVER subcommand.  Once in server mode, Kermit-370 will\n8280 12670 MT\n(further instructions from the user Kermit on the other end of the)\n99 W( connection until a FINISH or BYE command is)100 W\n8280 13866 MT\n(given.)SH\n8280 16258 MT\n(Command execution in server mode is different in some respects from normal oper\n51 W( Kermit)50 W\n8280 17454 MT\n(subcommands are not allowed)\n130 W( \\050see the list at the beginning of this section\\051.  Moreover, command\n8280 18650 MT\n(terminate any active TAKE file.  Also, all commands will be run in the special\n117 W( up)116 W\n8280 19846 MT\n(during protocol transfers.  Among other)\n9 W( things, Kermit intercepts all terminal I/O \\050if possible\\051 in this envi\n8280 21042 MT\n(order to transmit the data to the local Kermit as text packets.)SH\n8280 23434 MT\n(Note that)\n7 W( some operations can be requested by several different commands.  If for exa\n8280 24630 MT\n(a command ``)29 W\n/Courier SF\n(PRT)SH\n/Times-Roman SF\n('' for displaying a file, a)\n29 W( user interacting with a Kermit-370 server can choose to display a file by)\n8280 25826 MT\n(issuing any of)\n165 W( the commands: REMOTE TYPE, REMOTE HOST PRT, REMOTE KERMIT TYPE, REMOTE)16\n8280 27022 MT\n(KERMIT HOST PRT, or \\050if SYSCMD has been set ON\\051 REMOTE KERMIT PRT.  The f\n26 W( simply transfers)27 W\n8280 28218 MT\n(the requested file as text, but the others invoke the ``)169 W\n/Courier SF\n(PRT)SH\n/Times-Roman SF\n('' command with)\n169 W( any specified options, intercept the)168 W\n8280 29414 MT\n(terminal output, and return the results to the local Kermit.)SH\n13 /Times-Bold AF\n25214 32773 MT\n(The SET Subcommand)SH\n10 /Times-Roman AF\n8280 35146 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(parameter)SH\n/Courier SF\n18752 XM\n(\u00a2)SH\n/Times-Italic SF\n(value)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n8280 37538 MT\n(The SET)\n20 W( subcommand establishes or modifies various parameters controlling file tra\n8280 38734 MT\n(be examined with the SHOW subcommand.  Some parameters have two)\n231 W( levels.  In particular, there are two)230 W\n8280 39930 MT\n(matching lists of)\n114 W( SEND and RECEIVE sub-parameters corresponding to the values exchanged by\n8280 41126 MT\n(Send-Init/ACK sequence.  For each)\n62 W( of these SEND/RECEIVE pairs one element is encoded in outgoing parameter)6\n8280 42322 MT\n(packets, and the other is decoded from incoming ones.  Setting the latter by)\n15 W( hand may be needed to establish contact)16 W\n8280 43518 MT\n(and also has the effect of redefining the default value for decoding from)\n53 W( subsequent parameter packets.  Generally,)52 W\n8280 44714 MT\n(the distinction between SEND)\n168 W( and RECEIVE parameters is unambiguous, the only exception being TIMEOUT)1\n8280 45910 MT\n(\\050q.v.\\051. The)\n250 W( following SET subcommands are available in Kermit-370:)SH\n8280 47520 MT\n(APPEND)SH\n22680 XM\n(Append if file name collision.)SH\n8280 48625 MT\n(ATOE)SH\n22680 XM\n(Modify the Kermit-370 ASCII-to-EBCDIC table.)SH\n8280 49730 MT\n(BLOCK-CHECK)SH\n22680 XM\n(Level of error checking for file transfer.)SH\n8280 50835 MT\n(CONTROLLER)SH\n22680 XM\n(Indicate type of terminal connection.)SH\n8280 51940 MT\n(DEBUG)SH\n22680 XM\n(Log packet traffic during file transfer.)SH\n8280 53045 MT\n(DELAY)SH\n22680 XM\n(Length of pause before a SEND subcommand.)SH\n8280 54150 MT\n(EOF)SH\n22680 XM\n(Text file truncation at CTRL-Z.)SH\n8280 55255 MT\n(ETOA)SH\n22680 XM\n(Modify the Kermit-370 EBCDIC-to-ASCII table.)SH\n8280 56360 MT\n(FILE)SH\n22680 XM\n(Attributes for incoming or outgoing files...)SH\n8780 57465 MT\n(TYPE)SH\n22680 XM\n(... text or binary.)SH\n/Times-Italic SF\n8780 58570 MT\n(other)SH\n/Times-Roman SF\n22680 XM\n(... system-specific attributes.)SH\n8280 59675 MT\n(FOREIGN)SH\n22680 XM\n(Strings added to outgoing filespec...)SH\n8780 60780 MT\n(PREFIX)SH\n8780 61885 MT\n(SUFFIX)SH\n8280 62990 MT\n(INCOMPLETE)SH\n22680 XM\n(Determine the action on an aborted file transfer.)SH\n8280 64095 MT\n(LINE)SH\n22680 XM\n(Specify alternate communication line.)SH\n8280 65200 MT\n(MARGIN)SH\n22680 XM\n(for sending files...)SH\n8780 66305 MT\n(LEFT)SH\n8780 67410 MT\n(RIGHT)SH\n8280 68515 MT\n(PARITY)SH\n22680 XM\n(Indicate if 7-bit or 8-bit data.)SH\n8280 69620 MT\n(RETRY)SH\n22680 XM\n(Maximum retry count...)SH\n8780 70725 MT\n(INIT)SH\n22680 XM\n(... for initial packet exchange.)SH\n8780 71830 MT\n(PACKET)SH\n22680 XM\n(... per packet for ongoing transfer.)SH\nES\n%%Page: 6 7\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 6)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.2)SH\n46800 50 6120 5709 UL\n10 /Times-Roman AF\n6120 7886 MT\n(SYSCMD)SH\n20520 XM\n(Try apparently invalid Kermit subcommands on host system.)SH\n6120 8991 MT\n(TABS-EXPAND)SH\n20520 XM\n(Determine tab-to-space conversion on reception.)SH\n6120 10096 MT\n(TAKE)SH\n6620 11201 MT\n(ECHO)SH\n20520 XM\n(Echo subcommands read from TAKE files.)SH\n6620 12306 MT\n(ERROR-ACTION)SH\n20520 XM\n(Exit from TAKE file on command error.)SH\n6120 13411 MT\n(TEST)SH\n20520 XM\n(Facilitate testing of Kermit.)SH\n6120 14516 MT\n(TATOE)SH\n20520 XM\n(Modify the Kermit-370 ASCII-to-EBCDIC table.)SH\n6120 15621 MT\n(TETOA)SH\n20520 XM\n(Modify the Kermit-370 EBCDIC-to-ASCII table.)SH\n6120 16726 MT\n(TTABLE)SH\n20520 XM\n(Determine which tables undo the terminal translation.)SH\n6120 17831 MT\n(WARNING)SH\n20520 XM\n(Rename if filename collision.)SH\n6120 18936 MT\n(8-BIT-QUOTE)SH\n20520 XM\n(Determine state of 8th-bit prefixing.)SH\n6120 20041 MT\n(SEND or RECEIVE)SH\n6620 21146 MT\n(END-OF-LINE)SH\n20520 XM\n(Packet terminator.)SH\n6620 22251 MT\n(PACKET-SIZE)SH\n20520 XM\n(Maximum packet size.)SH\n6620 23356 MT\n(PAD-CHAR)SH\n20520 XM\n(Character to insert before each packet.)SH\n6620 24461 MT\n(PADDING)SH\n20520 XM\n(Number of pad characters to insert.)SH\n6620 25566 MT\n(QUOTE)SH\n20520 XM\n(Use to quote control characters in packets.)SH\n6620 26671 MT\n(START-OF-PACKET)SH\n20520 XM\n(Packet beginning marker.)SH\n6620 27776 MT\n(TIMEOUT)SH\n20520 XM\n(Time limit for response.)SH\n12 /Times-Bold AF\n6120 30364 MT\n(SET APPEND)SH\n10 /Times-Roman AF\n6120 31778 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET APPEND ON)SH\n/Times-Italic SF\n17826 XM\n(or)SH\n/Courier SF\n19315 XM\n(OFF)SH\n/Times-Roman SF\n6120 33569 MT\n(ON)SH\n10120 XM\n(If an)\n78 W( incoming file has the same name as an existing one, the new file is append\n10120 34674 MT\n(option supersedes SET WARNING.)SH\n6120 36332 MT\n(OFF)SH\n10120 XM\n(Filename collision is handled according to the WARNING parameter.  \\050Default.\n12 /Times-Bold AF\n6120 38920 MT\n(SET ATOE etc.)SH\n10 /Times-Roman AF\n6120 40334 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET)SH\n/Times-Italic SF\n11826 XM\n(table)SH\n/Courier SF\n14426 XM\n(\u00a2)SH\n/Times-Italic SF\n(num1 num2)350 W\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 42726 MT\n(This modifies one of the ASCII/EBCDIC)\n93 W( translation tables used by Kermit-370 \\050for example, to conform to your)\n6120 43922 MT\n(system\\051. The)\n496 W( valid table names are ATOE, ETOA, TATOE, and TETOA.  The arguments)\n123 W( are, respectively, the)122 W\n6120 45118 MT\n(offset within the named table and the new value for that offset.  If the argume\n24 W( is restored to)25 W\n6120 46314 MT\n(its initial arrangement.  Both)95 W\n/Times-Italic SF\n18317 XM\n(num1)SH\n/Times-Roman SF\n20884 XM\n(and)SH\n/Times-Italic SF\n22673 XM\n(num2)SH\n/Times-Roman SF\n25240 XM\n(should be)\n95 W( in the range 0-255 \\050decimal\\051.  For example, in ATOE or)94 W\n6120 47510 MT\n(TATOE, the offset is the ASCII character code, and the new value)\n15 W( is the new EBCDIC result code.  Initially, ATOE)16 W\n6120 48706 MT\n(and TATOE each contain two identical copies of the 7-bit ASCII character table.\n72 W( of the tables)71 W\n6120 49902 MT\n(depends on the TTABLE setting -- if TTABLE is OFF, the TATOE and TETOA tables a\n12 /Times-Bold AF\n6120 52490 MT\n(SET BLOCK-CHECK)SH\n10 /Times-Roman AF\n6120 53904 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET BLOCK-CHECK)SH\n/Times-Italic SF\n19026 XM\n(number)SH\n/Times-Roman SF\n6120 56296 MT\n(This determines the type of block check used during file transfer, provided the\n60 W( other Kermit agrees.  Valid options)61 W\n6120 57492 MT\n(for)SH\n/Times-Italic SF\n7666 XM\n(number)SH\n/Times-Roman SF\n11101 XM\n(are: 1 \\050for a one-character checksum\\051, 2 \\050for a two-character checksum\n130 W( three-character)129 W\n6120 58688 MT\n(CRC\\051. This)\n250 W( is one of only two Send-Init parameters that cannot be SET separately for\n12 /Times-Bold AF\n6120 61276 MT\n(SET CONTROLLER)SH\n10 /Times-Roman AF\n6120 62690 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET CONTROLLER)SH\n/Times-Italic SF\n18426 XM\n(type)SH\n/Times-Roman SF\n6120 65082 MT\n(The)SH\n/Times-Italic SF\n8006 XM\n(type)SH\n/Times-Roman SF\n10003 XM\n(may be TTY, SERIES1, GRAPHICS, or FULLSCREEN.  Kermit-370 automatically determi\n81 W( whether)82 W\n6120 66278 MT\n(you are connected via a Series/1 \\050or similar\\051 emulation controller or)\n107 W( a TTY line.  This subcommand is provided,)106 W\n6120 67474 MT\n(though, to allow that choice to be superseded, and because)\n261 W( Kermit may not be able to distinguish between)262 W\n6120 68670 MT\n(Series/1-type and)\n193 W( other 3270-emulation controllers.  When CONTROLLER is set to SERIES1 or G\n6120 69866 MT\n(Kermit disables the 3270 protocol conversion function by putting the)\n100 W( terminal controller into \"transparent mode\",)101 W\n6120 71062 MT\n(which allows Kermit packets to pass through intact.)SH\nES\n%%Page: 7 8\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n52275 XM\n(Page 7)SH\n46800 50 8280 5890 UL\n12 /Times-Bold AF\n8280 8004 MT\n(SET DEBUG)SH\n10 /Times-Roman AF\n8280 9418 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET DEBUG ON)SH\n/Times-Italic SF\n19386 XM\n(or)SH\n/Courier SF\n20875 XM\n(RAW)SH\n/Times-Italic SF\n23275 XM\n(or)SH\n/Courier SF\n24764 XM\n(OFF)SH\n/Times-Roman SF\n8280 11209 MT\n(ON)SH\n12280 XM\n(Keep a journal of all packets sent and received in a log file on disk.  If the\n51 W( it is erased)50 W\n12280 12314 MT\n(and overwritten.  The)189 W\n/Times-Italic SF\n21895 XM\n(filespec)SH\n/Times-Roman SF\n25389 XM\n(of the)\n189 W( log is, of course, system-dependent.  All packets are logged in)190 W\n12280 13419 MT\n(EBCDIC for legibility, even when CONTROLLER is set to SERIES1 or GRAPHICS.  In\n57 W( the)56 W\n12280 14524 MT\n(packets themselves, which are labelled \"S\" or \"R\")\n191 W( for packets sent or received, the log includes any)192 W\n12280 15629 MT\n(additional status information \\050labelled \"A\"\\051, such as the AID returned by\n8280 17287 MT\n(RAW)SH\n12280 XM\n(The same as ON, but packets are logged in the form that is)\n81 W( passed to or from the operating system, i.e.,)80 W\n12280 18392 MT\n(EBCDIC for TTY terminals, and ASCII for SERIES1 and GRAPHICS terminals.)SH\n8280 20050 MT\n(OFF)SH\n12280 XM\n(Stop logging packets and close the the log file.  \\050Default.\\051)SH\n12 /Times-Bold AF\n8280 22638 MT\n(SET DELAY)SH\n10 /Times-Roman AF\n8280 24052 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET DELAY)SH\n/Times-Italic SF\n17586 XM\n(number)SH\n/Times-Roman SF\n8280 26444 MT\n(Normally, Kermit-370 waits 10 seconds after the SEND subcommand before starting\n5 W( transfer, but this delay may)6 W\n8280 27640 MT\n(be SET to any non-negative value.  Two DELAY values have special meaning.  When\n148 W( is 1, the usual)147 W\n8280 28836 MT\n(two-line greeting displayed during protocol mode is abbreviated to a short mess\n26 W( with)27 W\n8280 30032 MT\n(three dots...\\051, and when DELAY is 0, the greeting is suppressed entirely, al\n45 W( for)44 W\n8280 31228 MT\n(the RECEIVE and SERVER subcommands.)SH\n12 /Times-Bold AF\n8280 33816 MT\n(SET EOF)SH\n10 /Times-Roman AF\n8280 35230 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET EOF ON)SH\n/Times-Italic SF\n18186 XM\n(or)SH\n/Courier SF\n19675 XM\n(OFF)SH\n/Times-Roman SF\n8280 37021 MT\n(ON)SH\n12280 XM\n(Scan each incoming TEXT file for the first)\n101 W( occurrence of CTRL-Z and ignore the remainder of the file)102 W\n12280 38126 MT\n(\\050but continue decoding up to the actual end of the file\\051.  BINARY files a\n8280 39784 MT\n(OFF)SH\n12280 XM\n(Accept incoming files in their entirety.  \\050Default.\\051)SH\n12 /Times-Bold AF\n8280 42372 MT\n(SET FILE TYPE)SH\n10 /Times-Roman AF\n8280 43786 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FILE TYPE TEXT)SH\n/Times-Italic SF\n22986 XM\n(or)SH\n/Courier SF\n24475 XM\n(BINARY)SH\n/Times-Italic SF\n28675 XM\n(or)SH\n/Courier SF\n30164 XM\n(V-BINARY)SH\n/Times-Italic SF\n35564 XM\n(or)SH\n/Courier SF\n37053 XM\n(D-BINARY)SH\n/Times-Roman SF\n8280 45577 MT\n(TEXT)SH\n13780 XM\n(Specifies ordinary text.)\n3 W( ASCII-to-EBCDIC)\n255 W( or EBCDIC-to-ASCII translation is performed on the data.)2 W\n13780 46682 MT\n(Trailing blanks are removed, and CRLF's are appended to outgoing records. CRLF'\n22 W( are used, in turn,)23 W\n13780 47787 MT\n(to determine the)\n100 W( end of incoming records, which are padded with blanks if necessary to fil\n13780 48892 MT\n(\\050Default.\\051)SH\n8280 50550 MT\n(BINARY)SH\n13780 XM\n(Specifies bit-stream)\n38 W( data.  No translation is performed, no CRLF's are added to outgoing record\n13780 51655 MT\n(blanks are neither added)\n103 W( nor removed.  Incoming bytes are added successively to the current record\n13780 52760 MT\n(buffer, which is written out when the current LRECL is reached.  Padding, if ne\n62 W( is done with)63 W\n13780 53865 MT\n(nulls.)SH\n8280 55523 MT\n(V-BINARY)SH\n13780 XM\n(Specifies varying-length-record binary data.  This type is like BINARY, except\n34 W( two-byte binary)33 W\n13780 56628 MT\n(prefix is added to each outgoing record giving the number of data bytes, and in\n13780 57733 MT\n(off by \\050and stripped of\\051 their prefixes on receipt.)SH\n8280 59391 MT\n(D-BINARY)SH\n13780 XM\n(Is like V-BINARY except that the length prefixes)\n3 W( are five-byte ASCII-encoded decimal \\050right-justified)2 W\n13780 60496 MT\n(with leading zeroes\\051.)SH\n12 /Times-Bold AF\n8280 63084 MT\n(SET FOREIGN)SH\n10 /Times-Roman AF\n8280 64498 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FOREIGN PREFIX)SH\n/Times-Italic SF\n22986 XM\n(string)SH\n/Times-Roman SF\n8280 66890 MT\n(This defines a prefix string to)\n11 W( be added to the outgoing)12 W\n/Times-Italic SF\n30599 XM\n(filespec)SH\n/Times-Roman SF\n33916 XM\n(generated by the SEND subcommand.  For example,)12 W\n8280 68086 MT\n(the string might be set to ``)29 W\n/Courier SF\n(B:)SH\n/Times-Roman SF\n('' to specify output to the B disk drive on)\n29 W( the other Kermit's system.  The default is a)28 W\n8280 69282 MT\n(null string.  There is also a FOREIGN SUFFIX handled in the same manner.)SH\nES\n%%Page: 8 9\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 8)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.2)SH\n46800 50 6120 5890 UL\n6120 8004 MT\n(SET HANDSHAKE)SH\n10 /Times-Roman AF\n6120 9418 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET HANDSHAKE)SH\n/Times-Italic SF\n17826 XM\n(number)SH\n/Times-Roman SF\n6120 11810 MT\n(This defines)\n4 W( the character, if any, that Kermit-370 should send \\050or cause to be sent\\\n6120 13006 MT\n(packet. The)\n274 W( character is)\n12 W( given as the decimal of an ASCII control character, or as zero if no hands\n6120 14202 MT\n(The default is 17 \\050XON\\051, and any value in the range 0-31 is valid, but 13\n111 W( because it is)112 W\n6120 15398 MT\n(generally the end-of-packet character.  When Kermit-370 is running through a fu\n132 W( as a)131 W\n6120 16594 MT\n(``)SH\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n(''\\051, the traditional IBM handshaking is not necessary, and HANDSHAKE should\n37 W( to 0 \\050as long as)38 W\n6120 17790 MT\n(the other Kermit can be instructed not to expect a handshake\\051.  Note the dis\n/Courier SF\n43988 XM\n(SET HANDSHAKE)52 W\n/Times-Roman SF\n52142 XM\n(in)SH\n6120 18986 MT\n(Kermit-370 \\050where it defines a character to be sent\\051 and)\n54 W( in many micro Kermits \\050where it defines a character to be)55 W\n6120 20182 MT\n(expected\\051.)SH\n12 /Times-Bold AF\n6120 22770 MT\n(SET INCOMPLETE)SH\n10 /Times-Roman AF\n6120 24184 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET INCOMPLETE DISCARD)SH\n/Times-Italic SF\n23226 XM\n(or)SH\n/Courier SF\n24715 XM\n(KEEP)SH\n/Times-Roman SF\n6120 25975 MT\n(DISCARD)SH\n11120 XM\n(Specifies that incomplete)\n214 W( files \\050that is, files partially received in a transfer cancelled by th\n11120 27080 MT\n(Kermit\\051 are to be erased.  This is the)\n115 W( default.  Note that when APPEND is ON, incomplete files are)116 W\n11120 28185 MT\n(never erased, lest pre-existing data be lost.)SH\n6120 29843 MT\n(KEEP)SH\n11120 XM\n(Specifies that incomplete files are to be kept.)SH\n12 /Times-Bold AF\n6120 32431 MT\n(SET LINE)SH\n10 /Times-Roman AF\n6120 33845 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET LINE \u00a2)SH\n/Times-Italic SF\n(name)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 36237 MT\n(This specifies an alternate communication line for file transfers.  If the)53 W\n/Times-Italic SF\n35222 XM\n(name)SH\n/Times-Roman SF\n37691 XM\n(is omitted, the)\n53 W( default line \\050the user's)52 W\n6120 37433 MT\n(terminal\\051 is used.  The format of)106 W\n/Times-Italic SF\n20082 XM\n(name)SH\n/Times-Roman SF\n22604 XM\n(is, of course, system-dependent, and some versions of Kermit-370 do not)107 W\n6120 38629 MT\n(support any alternate lines.  No version currently allows Kermit-370 to CONNECT\n12 /Times-Bold AF\n6120 41217 MT\n(SET MARGIN)SH\n10 /Times-Roman AF\n6120 42631 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET MARGIN)SH\n/Times-Italic SF\n16026 XM\n(side column)350 W\n/Times-Roman SF\n6120 45023 MT\n(When Kermit-370 sends a)\n1 W( text file, each line may be truncated on the left or right \\050or both\\051\n6120 46219 MT\n(Only the text from the left margin to the right margin \\050inclusive\\051 will b\n1 W( any trailing blanks in the truncated)2 W\n6120 47415 MT\n(lines will be stripped.  A value of zero for either margin disables truncation\n12 /Times-Bold AF\n6120 50003 MT\n(SET PARITY)SH\n10 /Times-Roman AF\n6120 51417 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET PARITY MARK)SH\n/Times-Italic SF\n19026 XM\n(or)SH\n/Courier SF\n20515 XM\n(NONE)SH\n/Times-Roman SF\n6120 53809 MT\n(Transparent-mode ASCII)\n43 W( data received from a ``)42 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' or ``)42 W\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' device will typically have either all)42 W\n6120 55005 MT\n(Mark parity \\050seven)\n3 W( data bits with the eighth bit set\\051 or no parity \\050eight data bits\\051.\n6120 56201 MT\n(of parity to expect in order to calculate checksums)\n64 W( properly.  Since Kermit-370 does not actually verify parity, the)63 W\n6120 57397 MT\n(other possible variants \\050ODD, EVEN, and SPACE\\051 are lumped together with M\n62 W( of this)63 W\n6120 58593 MT\n(subcommand, which merely chooses between 7-bit and 8-bit data transfer.  The de\n12 /Times-Bold AF\n6120 61181 MT\n(SET PROMPT)SH\n10 /Times-Roman AF\n6120 62595 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET PROMPT)SH\n/Times-Italic SF\n16026 XM\n(string)SH\n/Times-Roman SF\n6120 64987 MT\n(This defines the character string that Kermit-370 displays when asking for a su\n28 W( be any)27 W\n6120 66183 MT\n(string of up to 20 characters.  The default is the name of the system-specific\n75 W( followed by a)76 W\n6120 67379 MT\n(\">\" sign, e.g.,)SH\n/Courier SF\n11861 XM\n(Kermit-CMS>)SH\n/Times-Roman SF\n(.)SH\nES\n%%Page: 9 10\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n52275 XM\n(Page 9)SH\n46800 50 8280 5890 UL\n12 /Times-Bold AF\n8280 8004 MT\n(SET RETRY)SH\n10 /Times-Roman AF\n8280 9418 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET RETRY INITIAL)SH\n/Times-Italic SF\n22386 XM\n(or)SH\n/Courier SF\n23875 XM\n(PACKETS)SH\n/Times-Italic SF\n28675 XM\n(number)SH\n/Times-Roman SF\n8280 11810 MT\n(Kermit-370 resends its last packet after receiving a NAK or)\n115 W( bad packet, but it eventually gives up after repeated)114 W\n8280 13006 MT\n(failures or the same packet.  The)\n69 W( limit on retries can be set separately for the initial packet exchange \\05\n8280 14202 MT\n(server-mode command\\051 and for ordinary packets.)\n17 W( The)\n282 W( default for INITIAL is 16 and for PACKETS, 5.  Either limit)16 W\n8280 15398 MT\n(can be set to any positive value.)SH\n12 /Times-Bold AF\n8280 17986 MT\n(SET SYSCMD)SH\n10 /Times-Roman AF\n8280 19400 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET SYSCMD ON)SH\n/Times-Italic SF\n19986 XM\n(or)SH\n/Courier SF\n21475 XM\n(OFF)SH\n/Times-Roman SF\n8280 21191 MT\n(ON)SH\n12280 XM\n(If the user enters)\n89 W( a command string which is not a valid Kermit subcommand, Kermit-370 will p\n12280 22296 MT\n(string along to the host operating system for execution.  If the string is reje\n117 W( as well,)116 W\n12280 23401 MT\n(Kermit will report it as an)\n112 W( invalid)113 W\n/Times-Italic SF\n26704 XM\n(Kermit)SH\n/Times-Roman SF\n29845 XM\n(subcommand. Otherwise,)\n476 W( Kermit will assume the string was)113 W\n12280 24506 MT\n(intended as a host command and will simply report the completion code if non-ze\n8280 26164 MT\n(OFF)SH\n12280 XM\n(Invalid Kermit)\n14 W( subcommands are simply rejected as such.  System commands may be executed,\n12280 27269 MT\n(but only by specifying)\n19 W( the generic prefix ``)20 W\n/Courier SF\n(HOST)SH\n/Times-Roman SF\n('' or the appropriate system-specific prefix, such as CMS)20 W\n12280 28374 MT\n(or TSO.  \\050Default.\\051)SH\n12 /Times-Bold AF\n8280 30962 MT\n(SET TABS-EXPAND)SH\n10 /Times-Roman AF\n8280 32376 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET TABS-EXPAND ON \u00a2)SH\n/Times-Italic SF\n(list)SH\n/Courier SF\n(|)SH\n/Times-Italic SF\n26009 XM\n(or)SH\n/Courier SF\n27498 XM\n(OFF)SH\n/Times-Roman SF\n8280 34167 MT\n(ON)SH\n12280 XM\n(Tab characters in incoming TEXT files are replaced by one or more blanks to bri\n56 W( record size up to)55 W\n12280 35272 MT\n(the next higher multiple of eight for each tab.  If tab settings other than col\n37 W( are desired,)38 W\n12280 36377 MT\n(they may be specified explicitly in a list following the keyword ``)29 W\n/Courier SF\n(ON)SH\n/Times-Roman SF\n(''. Items)\n308 W( in the list may be)\n29 W( separated)28 W\n12280 37482 MT\n(by spaces or commas.)SH\n8280 39140 MT\n(OFF)SH\n12280 XM\n(Incoming tabs are retained.  \\050Default.\\051)SH\n12 /Times-Bold AF\n8280 41728 MT\n(SET TAKE ECHO)SH\n10 /Times-Roman AF\n8280 43142 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET TAKE ECHO ON)SH\n/Times-Italic SF\n21786 XM\n(or)SH\n/Courier SF\n23275 XM\n(OFF)SH\n/Times-Roman SF\n8280 44933 MT\n(ON)SH\n12280 XM\n(Subcommands are echoed to the terminal as they are executed from a TAKE file.)S\n8280 46591 MT\n(OFF)SH\n12280 XM\n(Subcommands from a TAKE file are executed \"silently.\"  \\050Default.\\051)SH\n12 /Times-Bold AF\n8280 49179 MT\n(SET TAKE ERROR-ACTION)SH\n10 /Times-Roman AF\n8280 50593 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET TAKE ERROR-ACTION CONTINUE)SH\n/Times-Italic SF\n30186 XM\n(or)SH\n/Courier SF\n31675 XM\n(HALT)SH\n/Times-Roman SF\n8280 52384 MT\n(CONTINUE)SH\n13780 XM\n(Execution continues in a TAKE file regardless of illegal commands, except in se\nSH( the)1 W\n13780 53489 MT\n(default.)SH\n8280 55147 MT\n(HALT)SH\n13780 XM\n(A command error in a TAKE file causes immediate exit to Kermit subcommand level\n12 /Times-Bold AF\n8280 57735 MT\n(SET TEST)SH\n10 /Times-Roman AF\n8280 59149 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET TEST ON)SH\n/Times-Italic SF\n18786 XM\n(or)SH\n/Courier SF\n20275 XM\n(OFF)SH\n/Times-Roman SF\n8280 60940 MT\n(ON)SH\n12280 XM\n(Allow setting the START-OF-PACKET and other special characters to)\n24 W( any value, and suppress checksum)23 W\n12280 62045 MT\n(testing on received packets.)SH\n8280 63703 MT\n(OFF)SH\n12280 XM\n(Normal operation.  \\050Default.\\051)SH\nES\n%%Page: 10 11\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 10)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.2)SH\n46800 50 6120 5890 UL\n6120 8004 MT\n(SET TTABLE)SH\n10 /Times-Roman AF\n6120 9418 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET TTABLE ON)SH\n/Times-Italic SF\n17826 XM\n(or)SH\n/Courier SF\n19315 XM\n(OFF)SH\n/Times-Roman SF\n6120 11209 MT\n(ON)SH\n10120 XM\n(The translation that undoes the terminal)\n48 W( controller's ASCII/EBCDIC conversion comes from the TATOE)49 W\n10120 12314 MT\n(and TETOA tables, rather than the ATOE and ETOA tables \\050which are used only\n153 W( disk)152 W\n10120 13419 MT\n(files\\051. This)\n378 W( option has no effect)\n64 W( when there is no translation built into the controller, i.e., with SERIES1\n10120 14524 MT\n(and GRAPHICS connections.)SH\n6120 16182 MT\n(OFF)SH\n10120 XM\n(The ATOE and ETOA tables are used for all translations by Kermit-370.  \\050Defa\n12 /Times-Bold AF\n6120 18770 MT\n(SET WARNING)SH\n10 /Times-Roman AF\n6120 20184 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET WARNING ON)SH\n/Times-Italic SF\n18426 XM\n(or)SH\n/Courier SF\n19915 XM\n(OFF)SH\n/Times-Roman SF\n6120 21975 MT\n(ON)SH\n10120 XM\n(If an incoming file has the same)113 W\n/Times-Italic SF\n23992 XM\n(filespec)SH\n/Times-Roman SF\n27410 XM\n(as an existing)\n113 W( file on disk, Kermit will attempt to rename the)112 W\n10120 23080 MT\n(incoming file so as not to destroy \\050overwrite\\051 the pre-existing one.)SH\n6120 24738 MT\n(OFF)SH\n10120 XM\n(Upon filename collision, the existing file will be erased and replaced by the i\n12 /Times-Bold AF\n6120 27326 MT\n(SET 8-BIT-QUOTE)SH\n10 /Times-Roman AF\n6120 28740 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET 8-BIT-QUOTE)SH\n/Times-Italic SF\n19026 XM\n(char or)SH\n/Courier SF\n22598 XM\n(ON)SH\n/Times-Italic SF\n24398 XM\n(or)SH\n/Courier SF\n25887 XM\n(OFF)SH\n/Times-Roman SF\n6120 31132 MT\n(This controls whether eighth-bit prefixing is done and can be used to specify t\n10 W( This)\n272 W( is one of)11 W\n6120 32328 MT\n(only two Send-Init parameters that cannot be SET separately for SEND and RECEIV\n6120 34119 MT\n(char)SH\n10120 XM\n(Eighth-bit prefixing will be done using)SH\n/Times-Italic SF\n25953 XM\n(char)SH\n/Times-Roman SF\n(, provided the other Kermit agrees.)SH\n6120 35777 MT\n(ON)SH\n10120 XM\n(Eighth-bit prefixing will)\n223 W( be done, provided the other Kermit explicitly requests it \\050and specifi\n10120 36882 MT\n(character\\051.)SH\n6120 38540 MT\n(OFF)SH\n10120 XM\n(Eighth-bit prefixing will not be done.  \\050Default.\\051)SH\n12 /Times-Bold AF\n6120 41128 MT\n(SET SEND/RECEIVE)SH\n10 /Times-Roman AF\n6120 42542 MT\n(The following parameters can be set either as SEND or RECEIVE options.  As a ru\n152 W( each pair, one is the)153 W\n6120 43738 MT\n(operational value, and the)\n69 W( other is used to change the default for Send-Init packets received from th\n6120 44934 MT\n(and to set up parameter values as if the other Kermit had specified)\n122 W( them on the previous exchange.  When both)123 W\n6120 46130 MT\n(values are)\n10 W( described, the operational one will be first.  After a transfer, the opera\n6120 47326 MT\n(the others \\050as displayed by SHOW\\051 will reflect the parameters specified b\n178 W( other Kermit.  The underlying)179 W\n6120 48522 MT\n(defaults established by previous SET subcommands will still be in effect.  In t\n14 W( descriptions,)13 W\n/Times-Italic SF\n46950 XM\n(mode)SH\n/Times-Roman SF\n49379 XM\n(is SEND)13 W\n6120 49718 MT\n(or RECEIVE.)SH\n12 /Times-Bold AF\n6120 52306 MT\n(END-OF-LINE)SH\n10 /Times-Roman AF\n6120 53720 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET)SH\n/Times-Italic SF\n11826 XM\n(mode)SH\n/Courier SF\n14592 XM\n(END-OF-LINE)SH\n/Times-Italic SF\n21792 XM\n(number)SH\n/Times-Roman SF\n6120 56112 MT\n(RECEIVE should not be changed.)SH\n6120 58504 MT\n(SEND may be needed to establish contact.  If the other system needs packets to\nSH( other than)1 W\n6120 59700 MT\n(carriage return, specify the decimal value of)\n197 W( the desired ASCII character.)196 W\n/Times-Italic SF\n38246 XM\n(number)SH\n/Times-Roman SF\n41747 XM\n(must be in the range 0-31)196 W\n6120 60896 MT\n(\\050decimal\\051. The)\n250 W( default is 13 \\050CR\\051.)SH\n12 /Times-Bold AF\n6120 63484 MT\n(PACKET-SIZE)SH\n10 /Times-Roman AF\n6120 64898 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET)SH\n/Times-Italic SF\n11826 XM\n(mode)SH\n/Courier SF\n14592 XM\n(PACKET-SIZE)SH\n/Times-Italic SF\n21792 XM\n(number)SH\n/Times-Roman SF\n6120 67290 MT\n(RECEIVE defines)46 W\n/Times-Italic SF\n13822 XM\n(number)SH\n/Times-Roman SF\n17173 XM\n(as the maximum)\n46 W( length for incoming packets.  The valid range is 26-9024, but 94 is the)47\n6120 68486 MT\n(limit for normal short-packet protocol.  The default)\n123 W( is 80.  In practice, the size may be limited by hardware and)122 W\n6120 69682 MT\n(programming considerations.  See the system-specific chapters for details.)SH\nES\n%%Page: 11 12\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 11)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n8280 7886 MT\n(SEND might be needed for sending files to a minimal Kermit that neither specifi\n105 W( a buffer size in the Send-Init)106 W\n8280 9082 MT\n(sequence nor can accept)\n40 W( the default \\05080\\051.  This parameter has no other function and is meani\n8280 10278 MT\n(26-94.)SH\n12 /Times-Bold AF\n8280 12866 MT\n(PAD-CHAR)SH\n10 /Times-Roman AF\n8280 14280 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(mode)SH\n/Courier SF\n16752 XM\n(PAD-CHAR)SH\n/Times-Italic SF\n22152 XM\n(number)SH\n/Times-Roman SF\n8280 16672 MT\n(RECEIVE defines)36 W\n/Times-Italic SF\n15962 XM\n(number)SH\n/Times-Roman SF\n19303 XM\n(as the character to be used by the other Kermit for padding packets.  The chara\n8280 17868 MT\n(be an ASCII control character \\050in the range 0-31\\051.  The default is 0 \\050\n8280 20260 MT\n(SEND may be needed to establish contact if the other Kermit \\050or the transmis\n12 /Times-Bold AF\n8280 22848 MT\n(PADDING)SH\n10 /Times-Roman AF\n8280 24262 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(mode)SH\n/Courier SF\n16752 XM\n(PADDING)SH\n/Times-Italic SF\n21552 XM\n(number)SH\n/Times-Roman SF\n8280 26654 MT\n(RECEIVE defines the)14 W\n/Times-Italic SF\n17404 XM\n(number)SH\n/Times-Roman SF\n20723 XM\n(of pad characters to)\n14 W( be used for padding packets from the other Kermit.  This number)13 W\n8280 27850 MT\n(may be anywhere from 0 to 94.  The default is 0.  This option is seldom useful.\n8280 30242 MT\n(SEND may be needed to establish contact if the other Kermit \\050or the transmis\n12 /Times-Bold AF\n8280 32830 MT\n(QUOTE)SH\n10 /Times-Roman AF\n8280 34244 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(mode)SH\n/Courier SF\n16752 XM\n(QUOTE)SH\n/Times-Italic SF\n20352 XM\n(char)SH\n/Times-Roman SF\n8280 36636 MT\n(SEND indicates a printable character for prefixing \\050quoting\\051 control)\nSH( characters and other prefix characters.  The only)1 W\n8280 37832 MT\n(good reason to change this would be for sending a file that contains many ``)16\n/Courier SF\n(#)SH\n/Times-Roman SF\n('' characters \\050the normal control)159 W\n8280 39028 MT\n(prefix\\051 as data.  It must be a single character with ASCII value 33-62 or 96\n8280 41420 MT\n(RECEIVE would be needed only for talking to)\n109 W( a crippled Kermit that uses a non-standard quoting character, but)110 W\n8280 42616 MT\n(does not admit it.)SH\n12 /Times-Bold AF\n8280 45204 MT\n(START-OF-PACKET)SH\n10 /Times-Roman AF\n8280 46618 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(mode)SH\n/Courier SF\n16752 XM\n(START-OF-PACKET)SH\n/Times-Italic SF\n26352 XM\n(number)SH\n/Times-Roman SF\n8280 49010 MT\n(RECEIVE defines)59 W\n/Times-Italic SF\n16008 XM\n(number)SH\n/Times-Roman SF\n19372 XM\n(as the character to be expected to mark the start)\n59 W( of packets from the other Kermit.  The)58 W\n8280 50206 MT\n(character must be an ASCII control character \\050in the range 0-31\\051.  The de\n57 W( needed to)58 W\n8280 51402 MT\n(establish contact.)SH\n8280 53794 MT\n(SEND may also be needed to establish contact.)\n123 W( It)\n494 W( defines)122 W\n/Times-Italic SF\n33014 XM\n(number)SH\n/Times-Roman SF\n36441 XM\n(as the character to be used to mark outgoing)122 W\n8280 54990 MT\n(packets.)SH\n12 /Times-Bold AF\n8280 57578 MT\n(TIMEOUT)SH\n10 /Times-Roman AF\n8280 58992 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(mode)SH\n/Courier SF\n16752 XM\n(TIMEOUT)SH\n/Times-Italic SF\n21552 XM\n(time)SH\n/Times-Roman SF\n8280 61384 MT\n(RECEIVE defines)\n8 W( the)9 W\n/Times-Italic SF\n17388 XM\n(time)SH\n/Times-Roman SF\n19369 XM\n(in seconds the other Kermit is to wait for a response from Kermit-370 before re\n8280 62580 MT\n(packet. The)\n250 W( default is 5.  A value of 0 means the other Kermit should wait indefinite\n8280 64972 MT\n(SEND defines the)94 W\n/Times-Italic SF\n16033 XM\n(time)SH\n/Times-Roman SF\n18099 XM\n(in seconds Kermit-370 is to wait for a response from the)\n94 W( other Kermit before resending a)93 W\n8280 66168 MT\n(packet. The)\n250 W( default is 0.)SH\nES\n%%Page: 12 13\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 12)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.2)SH\n46800 50 6120 5981 UL\n13 SS\n22260 8071 MT\n(The SHOW Subcommand)SH\n10 /Times-Roman AF\n6120 10444 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SHOW \u00a2)SH\n/Times-Italic SF\n(option)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 12836 MT\n(The SHOW subcommand displays the values of all parameters)\n135 W( that can be changed with the SET subcommand,)136 W\n6120 14032 MT\n(except for ATOE, ETOA, TATOE, and TETOA \\050for)\n27 W( those, see the TDUMP subcommand\\051.  If specified,)26 W\n/Times-Italic SF\n48700 XM\n(option)SH\n/Times-Roman SF\n51532 XM\n(can)SH\n6120 15228 MT\n(be a particular parameter or the keyword ``)178 W\n/Courier SF\n(ALL)SH\n/Times-Roman SF\n('' \\050the default\\051.  Groups of parameters, such)\n178 W( as SEND, can be)179 W\n6120 16424 MT\n(displayed by requesting the group name, or individual sub-parameters)\n58 W( can be displayed by specifying the complete)57 W\n6120 17620 MT\n(name. For)\n250 W( example,)SH\n/Courier SF\n8520 19275 MT\n(SHOW RECEIVE EOL)SH\n/Times-Roman SF\n6120 20992 MT\n(will display the decimal value of the packet terminator that Kermit-370 current\n/Courier SF\n8520 22647 MT\n(SHOW FOREIGN)SH\n/Times-Roman SF\n6120 24364 MT\n(will display the character strings currently in use for prefix and suffix on ea\n/Times-Italic SF\n41308 XM\n(filespec)SH\n/Times-Roman SF\n(.)SH\n13 /Times-Bold AF\n21753 27723 MT\n(The STATUS Subcommand)SH\n10 /Times-Roman AF\n6120 30096 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(STATUS)SH\n/Times-Roman SF\n6120 32488 MT\n(This subcommand displays information about the previously executed subcommand.\n160 W( will include)161 W\n6120 33684 MT\n(either the appropriate error message or the message ``)362 W\n/Courier SF\n(No errors)362 W\n/Times-Roman SF\n(''. The)\n974 W( initial status is ``)362 W\n/Courier SF\n(No file)361 W\n6120 34880 MT\n(transfers yet)29 W\n/Times-Roman SF\n(''. If)\n308 W( the status reflects)\n29 W( an error condition, the name of the last file used \\050excluding TAKE file\n6120 36076 MT\n(will be displayed as well.  If the error was detected by the)\n30 W( other Kermit, the message will be ``)29 W\n/Courier SF\n(Micro aborted)29 W\n/Times-Roman SF\n('')SH\n6120 37272 MT\n(followed by the)\n144 W( text from the Error packet.  Conversely, if Kermit-370 detected the error\n6120 38468 MT\n(message will have constituted the error packet sent out.  In any case, if the l\n27 W( file transfer was cancelled \\050by virtue)26 W\n6120 39664 MT\n(of an attribute mismatch or manual intervention\\051, the reason for cancellatio\n6 W( displayed.  Also, if the error occurred)7 W\n6120 40860 MT\n(in disk I/O, any available explanatory information is displayed.  Normally, the\n96 W( is altered only when a)95 W\n6120 42056 MT\n(transfer-initiating subcommand \\050SEND or RECEIVE\\051 is executed, but)\n271 W( in server mode)272 W\n/Times-Italic SF\n43711 XM\n(every)SH\n/Times-Roman SF\n46398 XM\n(subcommand is)272 W\n6120 43252 MT\n(received through a transfer from the other Kermit and may affect the status \\05\n2 W( subcommand itself,)1 W\n6120 44448 MT\n(of course\\051.  When Kermit-370 has been forced to truncate one or)\n19 W( more records in a RECEIVE operation \\050because of)20 W\n6120 45644 MT\n(the current maximum record length\\051, the number of records truncated)\n66 W( is reported.  The status display also includes)65 W\n6120 46840 MT\n(throughput statistics for the last transfer: number of files)\n78 W( sent, duration, number of packets, number of retries, and)79 W\n6120 48036 MT\n(averages of bytes/packet and bytes/second.  These last)\n112 W( two quantities are calculated separately for bytes sent and)111 W\n6120 49232 MT\n(received on)\n2 W( the communication \\050including padding, if any\\051, and the last quantity\n6120 50428 MT\n(number of bytes read from or written to disk.)SH\n6120 52820 MT\n(Finally, if retries were necessary, Kermit-370 computes the optimum packet size\n61 W( been)60 W\n6120 54016 MT\n(due to sparse, Poisson-distributed bursts of noise.  This is the same heuristic\n3 W( and)4 W\n6120 55212 MT\n(uses as an alternative packet-size limit when sending long packets.)SH\n13 /Times-Bold AF\n21899 58571 MT\n(The TDUMP Subcommand)SH\n10 /Times-Roman AF\n6120 60944 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(TDUMP)SH\n/Times-Italic SF\n13026 XM\n(table-name or)350 W\n/Courier SF\n19614 XM\n(NAMES)SH\n/Times-Roman SF\n6120 63336 MT\n(This displays the contents of)8 W\n/Times-Italic SF\n17854 XM\n(table-name)SH\n/Times-Roman SF\n(. The)\n265 W( same table can be modified using the SET subcommand.  The ATOE,)7 W\n6120 64532 MT\n(ETOA, TATOE, and TETOA tables can presently be displayed and changed.  Alternat\n/Times-Italic SF\n45045 XM\n(filespec)SH\n/Times-Roman SF\n48374 XM\n(of each file)24 W\n6120 65728 MT\n(sent in the last transfer can be displayed.)SH\nES\n%%Page: 13 14\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.2. Kermit-370 Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 13)SH\n46800 50 8280 5981 UL\n13 /Times-Bold AF\n24781 8071 MT\n(The GIVE Subcommand)SH\n10 /Times-Roman AF\n8280 10444 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(GIVE)SH\n/Times-Italic SF\n14586 XM\n(table-name filespec)350 W\n/Times-Roman SF\n8280 12836 MT\n(This compares the named table with its default values and saves the differences\n214 W( in the form of a TAKE file)213 W\n8280 14032 MT\n(consisting of SET subcommands that would convert the default into the current a\n198 W( ATOE,)\n648 W( ETOA,)199 W\n8280 15228 MT\n(TATOE, and TETOA are the available tables.  The details of the)100 W\n/Times-Italic SF\n35585 XM\n(filespec)SH\n/Times-Roman SF\n38990 XM\n(are system-dependent, but)\n100 W( those details)99 W\n8280 16424 MT\n(will, in general, be the same as for the TAKE subcommand.)SH\n13 /Times-Bold AF\n24636 19783 MT\n(The HOST Subcommand)SH\n10 /Times-Roman AF\n8280 22156 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(HOST)SH\n/Times-Italic SF\n14586 XM\n(text of command)SH\n/Times-Roman SF\n8280 24548 MT\n(This issues a command to)\n197 W( the host operating system from Kermit-370.  When a command returns a non-\n8280 25744 MT\n(completion code, the code will be displayed.  Generally, the name of)\n13 W( the system \\050e.g., CMS\\051 is treated as a synonym)12 W\n8280 26940 MT\n(for the HOST subcommand.)SH\n13 /Times-Bold AF\n23734 30299 MT\n(The KERMIT Subcommand)SH\n10 /Times-Roman AF\n8280 32672 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(KERMIT)SH\n/Times-Italic SF\n15786 XM\n(text of subcommand)SH\n/Times-Roman SF\n8280 35064 MT\n(This is provided for redundancy as the counterpart of the HOST subcommand.  Ker\n73 W( the specified)74 W\n8280 36260 MT\n(text as a Kermit subcommand just as if the LOCAL prefix had been entered.)SH\n13 /Times-Bold AF\n20519 39619 MT\n(The ECHO and XECHO Subcommands)SH\n10 /Times-Roman AF\n8280 41992 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(\u00a2X|ECHO)SH\n/Times-Italic SF\n16386 XM\n(line)SH\n/Times-Roman SF\n8280 44384 MT\n(These subcommands type the)118 W\n/Times-Italic SF\n20805 XM\n(line)SH\n/Times-Roman SF\n22672 XM\n(back at the user.  The)117 W\n/Times-Italic SF\n32177 XM\n(line)SH\n/Times-Roman SF\n34044 XM\n(may contain control characters or any desired text,)117 W\n8280 45580 MT\n(including upper or lower case.  These subcommands)\n24 W( may be used, for example, to test the ASCII/EBCDIC translate)25 W\n8280 46776 MT\n(tables or to issue)\n128 W( coded commands to the user's terminal.  XECHO differs from ECHO primarily\n8280 47972 MT\n(transparent mode if CONTROLLER is SERIES1 or GRAPHICS.  It)\n76 W( also offers its own brand of control-character)77 W\n8280 49168 MT\n(quoting, using the ``)108 W\n/Courier SF\n(\u00ac)SH\n/Times-Roman SF\n('' character to indicate that only the five low-order bits of)\n108 W( the ASCII codes are to be used.)107 W\n8280 50364 MT\n(Thus, ``)64 W\n/Courier SF\n(\u00aca)SH\n/Times-Roman SF\n('', ``)64 W\n/Courier SF\n(\u00acA)SH\n/Times-Roman SF\n('', and ``)64 W\n/Courier SF\n(\u00ac!)SH\n/Times-Roman SF\n('' are all translated to SOH \\050CTRL-A\\051,)\n64 W( while ``)65 W\n/Courier SF\n(\u00ac\u00a2)SH\n/Times-Roman SF\n('' becomes ESC.  However, there)65 W\n8280 51560 MT\n(must be one exception for ``)89 W\n/Courier SF\n(\u00ac)SH\n/Times-Roman SF\n('' itself: ``)89 W\n/Courier SF\n(\u00ac>)SH\n/Times-Roman SF\n('' and ``)89 W\n/Courier SF\n(\u00ac~)SH\n/Times-Roman SF\n('' are both translated to RS \\050CTRL-)88 W\n/Courier SF\n(\u00ac)SH\n/Times-Roman SF\n(\\051, but ``)88 W\n/Courier SF\n(\u00ac\u00ac)SH\n/Times-Roman SF\n('' becomes)88 W\n8280 52756 MT\n(just ``)SH\n/Courier SF\n(\u00ac)SH\n/Times-Roman SF\n(''.)SH\n13 /Times-Bold AF\n20880 56115 MT\n(The TYPE and XTYPE Subcommands)SH\n10 /Times-Roman AF\n8280 58488 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(\u00a2X|TYPE)SH\n/Times-Italic SF\n16386 XM\n(filespec)SH\n/Times-Roman SF\n8280 60880 MT\n(These subcommands type the)\n64 W( named file.  XTYPE differs from TYPE primarily in that it uses transparent\n8280 62076 MT\n(CONTROLLER is SERIES1 or GRAPHICS, and sends the data in bursts no larger)\n264 W( than the current SEND)263 W\n8280 63272 MT\n(PACKET-SIZE. TYPE)\n298 W( is effectively a synonym)\n24 W( for \\050and allows the same options as\\051 the host system command for)25\n8280 64468 MT\n(listing files, but XTYPE merely sends the file \"raw\".)SH\nES\n%%Page: 14 15\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 14)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.3)SH\n46800 50 6120 6071 UL\n14 SS\n6120 8138 MT\n(1.3. Before Connecting to the Mainframe)SH\n10 /Times-Roman AF\n6120 10256 MT\n(Several flags must be set on the micro version of Kermit before connecting)\n123 W( to an IBM 370 system as a ``)122 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('')SH\n6120 11452 MT\n(device. You)\n408 W( should set the LOCAL-ECHO flag to ON \\050to indicate half-duplex\\051.  Th\n79 W( is the norm but not true in)80 W\n6120 12648 MT\n(absolutely every case; if each)\n114 W( character appears twice on your terminal screen, set the LOCAL-ECHO flag\n6120 13844 MT\n(FLOW-CONTROL should be set to NONE, and)\n7 W( on some systems HANDSHAKE should be set to XON.  The parity)8 W\n6120 15040 MT\n(should be set according to the system's specifications.  On some micro versions\n46 W( above is done)45 W\n6120 16236 MT\n(in one step using the DO IBM macro \\050or SET IBM ON\\051.  Set the baud rate to\n6120 18628 MT\n(Connecting through a ``)120 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' or ``)120 W\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' device also requires that certain flags be set on the micro)120 W\n6120 19824 MT\n(version of Kermit.  You should set the LOCAL-ECHO flag to OFF \\050to indicate f\n92 W( FLOW-CONTROL)433 W\n6120 21020 MT\n(should be set to XON/XOFF, and HANDSHAKE should be set to)\n30 W( OFF.  For many systems, the PARITY should be)31 W\n6120 22216 MT\n(set to EVEN.  Set the baud rate to correspond to the line speed.)SH\n6120 24608 MT\n(One exception)\n256 W( to these rules is the case where the micro Kermit is attempting automated\n6120 25804 MT\n(downloading several separate files from Kermit-370 running in server mode.  In)\n113 W( fact, under those circumstances,)114 W\n6120 27000 MT\n(handshaking is necessary even with ``)82 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' connections, and the two Kermits must be instructed to adopt a)81 W\n6120 28196 MT\n(common handshake character \\050e.g., by SET)\n105 W( HANDSHAKE 10 to Kermit-370 and SET HANDSHAKE LF to the)106 W\n6120 29392 MT\n(micro\\051.)SH\n6120 31784 MT\n(In any case, you should make sure that either the micro Kermit or Kermit-370)\n133 W( will provide timeouts during file)132 W\n6120 32980 MT\n(transfers \\050if not both\\051.  Some versions of Kermit-370 \\050notably CMS\\051\n35 W( cannot provide timeouts, and you may need to)36 W\n6120 34176 MT\n(set the TIMER to ON in the micro.)SH\n14 /Times-Bold AF\n6120 37778 MT\n(1.4. After Returning from Kermit-370)SH\n10 /Times-Roman AF\n6120 39896 MT\n(When Kermit-370 receives a)\n1 W( QUIT or EXIT subcommand or finishes the subcommand or subcommands specified\n6120 41092 MT\n(the original command string that invoked Kermit,)\n114 W( control is returned to the caller.  Before returning, Kermit-370)115 W\n6120 42288 MT\n(closes any active TAKE files \\050the EXIT or QUIT subcommand may be issued)\n77 W( from a TAKE file\\051.  On return, the)76 W\n6120 43484 MT\n(completion code is set from the current error status according to the codes in\n14 /Times-Bold AF\n6120 47086 MT\n(1.5. What's New)SH\n10 /Times-Roman AF\n6120 49204 MT\n(Below is a list of the additions in Version 4.0 of Kermit-370:)SH\n8120 50995 MT\n(1.)SH\n9120 XM\n(Code reorganization into generic 370 and system-specific sections.)SH\n8120 52653 MT\n(2.)SH\n9120 XM\n(Optional separate translation tables for counteracting the system conversion of\n8120 54311 MT\n(3.)SH\n9120 XM\n(New)SH\n/Courier SF\n11258 XM\n(GIVE)SH\n/Times-Roman SF\n13908 XM\n(subcommand for saving a modified translation table.)SH\n8120 55969 MT\n(4.)SH\n9120 XM\n(A new, RAW debug mode for recording)\n346 W( the packet traffic as actually sent and received on)347 W\n9120 57074 MT\n(``)SH\n/Courier SF\n(GRAPHICS)SH\n/Times-Roman SF\n('' and ``)SH\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' devices.)SH\n8120 58732 MT\n(5.)SH\n9120 XM\n(Preservation of the case of subcommands as typed, with uppercase conversion)\n6 W( of only those words that)5 W\n9120 59837 MT\n(must be uppercase.)SH\n8120 61495 MT\n(6.)SH\n9120 XM\n(New)SH\n/Courier SF\n11258 XM\n(SET MARGIN)SH\n/Times-Roman SF\n17508 XM\n(subcommand for limiting the width of a file to be sent.)SH\n8120 63153 MT\n(7.)SH\n9120 XM\n(Settable tab stops for Kermit's conversion of tabs to spaces \\050alternative to\n8120 64811 MT\n(8.)SH\n9120 XM\n(Replace)SH\n/Courier SF\n12637 XM\n(SET SERIES1)46 W\n/Times-Roman SF\n19579 XM\n(subcommand with new)46 W\n/Courier SF\n29244 XM\n(SET CONTROLLER)46 W\n/Times-Roman SF\n(. Support)\n342 W( for multiple terminal)46 W\n9120 65916 MT\n(controller types.)SH\n8120 67574 MT\n(9.)SH\n9120 XM\n(New)SH\n/Courier SF\n11258 XM\n(DIRECTORY)SH\n/Times-Roman SF\n16908 XM\n(and)SH\n/Courier SF\n18602 XM\n(HOST)SH\n/Times-Roman SF\n21252 XM\n(subcommands following Kermit standard.)SH\n7620 69232 MT\n(10.)SH\n9120 XM\n(Combination of file-attribute)200 W\n/Courier SF\n21525 XM\n(SET)SH\n/Times-Roman SF\n23775 XM\n(subcommands \\050FILE-TYPE, LRECL, and)\n200 W( RECFM\\051 into a new)199 W\n9120 70337 MT\n(group)SH\n/Courier SF\n11703 XM\n(SET FILE)SH\n/Times-Roman SF\n(.)SH\n7620 71995 MT\n(11.)SH\n9120 XM\n(Separate retry limits for initial and subsequent packet exchanges.)SH\nES\n%%Page: 15 16\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(1.5. What's New)SH\n10 /Times-Italic AF\n51775 XM\n(Page 15)SH\n46800 50 8280 5709 UL\n46800 50 8280 8086 UL\n/Times-Roman SF\n8280 10315 MT\n(Code)SH\n12600 XM\n(Symbol)SH\n18360 XM\n(Error Message)SH\n2111 50 8280 10515 UL\n3112 50 12600 10515 UL\n5859 50 18360 10515 UL\n8530 11420 MT\n(0)SH\n12600 XM\n(NOE)SH\n18360 XM\n(No errors)SH\n8530 12525 MT\n(1)SH\n12600 XM\n(NFT)SH\n18360 XM\n(No file transfers yet)SH\n8530 13630 MT\n(2)SH\n12600 XM\n(TRC)SH\n18360 XM\n(Transfer cancelled)SH\n8530 14735 MT\n(3)SH\n12600 XM\n(USC)SH\n18360 XM\n(Invalid server command)SH\n8530 15840 MT\n(4)SH\n12600 XM\n(TIE)SH\n18360 XM\n(Terminal I/O error)SH\n8530 16945 MT\n(5)SH\n12600 XM\n(BPC)SH\n18360 XM\n(Bad packet count or chksum)SH\n8530 18050 MT\n(6)SH\n12600 XM\n(IPS)SH\n18360 XM\n(Invalid packet syntax)SH\n8530 19155 MT\n(7)SH\n12600 XM\n(IPT)SH\n18360 XM\n(Invalid packet type)SH\n8530 20260 MT\n(8)SH\n12600 XM\n(MIS)SH\n18360 XM\n(Lost a packet)SH\n8530 21365 MT\n(9)SH\n12600 XM\n(NAK)SH\n18360 XM\n(Micro sent a NAK)SH\n8280 22470 MT\n(10)SH\n12600 XM\n(ABO)SH\n18360 XM\n(Micro aborted)SH\n8280 23575 MT\n(11)SH\n12600 XM\n(FNE)SH\n18360 XM\n(Invalid file name)SH\n8280 24680 MT\n(12)SH\n12600 XM\n(FNF)SH\n18360 XM\n(File not found)SH\n8280 25785 MT\n(13)SH\n12600 XM\n(FUL)SH\n18360 XM\n(Disk or file is full)SH\n8280 26890 MT\n(14)SH\n12600 XM\n(DIE)SH\n18360 XM\n(Disk I/O error)SH\n8280 27995 MT\n(15)SH\n12600 XM\n(MOP)SH\n18360 XM\n(Missing operand)SH\n8280 29100 MT\n(16)SH\n12600 XM\n(SYS)SH\n18360 XM\n(Illegal system command)SH\n8280 30205 MT\n(17)SH\n12600 XM\n(KCE)SH\n18360 XM\n(Kermit command error)SH\n8280 31310 MT\n(18)SH\n12600 XM\n(TIM)SH\n18360 XM\n(No packet received)SH\n8280 32415 MT\n(19)SH\n12600 XM\n(RTR)SH\n18360 XM\n(Records truncated)SH\n8280 33520 MT\n(20)SH\n12600 XM\n(COM)SH\n18360 XM\n(Bad communication line)SH\n/Times-Bold SF\n20779 35130 MT\n(Table 1-1:)SH\n/Times-Roman SF\n25890 XM\n(Error messages and codes for Kermit-370)SH\n46800 50 8280 38464 UL\n9780 39922 MT\n(12.)SH\n11280 XM\n(Pad binary records on disk with nulls, rather than blanks.)SH\n9780 41580 MT\n(13.)SH\n11280 XM\n(Automatically tune packet)\n29 W( length when sending long packets according to heuristic optimum based on)3\n11280 42685 MT\n(sparse Poisson statistics, provided that transmission errors do occur.)SH\n9780 44343 MT\n(14.)SH\n11280 XM\n(Expand STATUS report to include the number of files in the last transfer, throu\n11280 45448 MT\n(heuristic optimum packet length \\050when)\n31 W( long packets are enabled\\051, and the reason for any file rejection)32 W\n11280 46553 MT\n(based on A-packets.)SH\n9780 48211 MT\n(15.)SH\n11280 XM\n(New subcommand)SH\n/Courier SF\n19001 XM\n(TDUMP NAMES)SH\n/Times-Roman SF\n25851 XM\n(to display the list of files sent in the last transfer.)SH\n9780 49869 MT\n(16.)SH\n11280 XM\n(Add file creation date to A-packet repertoire.)SH\n9780 51527 MT\n(17.)SH\n/Courier SF\n11280 XM\n(REMOTE COPY)SH\n/Times-Roman SF\n18130 XM\n(and)SH\n/Courier SF\n19824 XM\n(REMOTE RENAME)SH\n/Times-Roman SF\n27874 XM\n(commands to a server at the other end.)SH\n9780 53185 MT\n(18.)SH\n11280 XM\n(Allow long packets through a 7171 with VTAM.)SH\n9780 54843 MT\n(19.)SH\n11280 XM\n(New type)SH\n/Courier SF\n15390 XM\n(D-BINARY)SH\n/Times-Roman SF\n20440 XM\n(for binary files with undelimited variable-length records.)SH\n9780 56501 MT\n(20.)SH\n/Courier SF\n11280 XM\n(SET 8-BIT-QUOTE)SH\n/Times-Roman SF\n(. Allow)\n250 W( 8-bit data where possible via)SH\n/Courier SF\n35528 XM\n(SET PARITY)SH\n/Times-Roman SF\n(.)SH\n9780 58159 MT\n(21.)SH\n/Courier SF\n11280 XM\n(SET SYSCMD)127 W\n/Times-Roman SF\n(, so that Kermit can be told to try \"illegal\" subcommands as)\n127 W( host system commands)126 W\n11280 59264 MT\n(instead of just rejecting them.)SH\n9780 60922 MT\n(22.)SH\n/Courier SF\n11280 XM\n(SET PROMPT)SH\n/Times-Roman SF\n17530 XM\n(subcommand.)SH\n9780 62580 MT\n(23.)SH\n11280 XM\n(Do not forget parameters specified by the other Kermit in I-packets.)SH\n9780 64238 MT\n(24.)SH\n11280 XM\n(Keep track)\n77 W( of truncated records during a RECEIVE operation and report the count in ST\n11280 65343 MT\n(call truncation an error after everything is received.)SH\n9780 67001 MT\n(25.)SH\n/Courier SF\n11280 XM\n(SET HANDSHAKE)59 W\n/Times-Roman SF\n19448 XM\n(subcommand to alter or suppress)\n59 W( handshake character Kermit-370 sends out after)58 W\n11280 68106 MT\n(each packet.)SH\n8280 70498 MT\n(Both)SH\n/Courier SF\n10475 XM\n(SEND)SH\n/Times-Roman SF\n13125 XM\n(and)SH\n/Courier SF\n14819 XM\n(GET)SH\n/Times-Roman SF\n16869 XM\n(prompt the user for native and foreign)SH\n/Times-Italic SF\n32338 XM\n(filespecs)SH\n/Times-Roman SF\n36032 XM\n(if no arguments are entered.)SH\nES\n%%Page: 16 17\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 16)SH\n12 /Times-Bold AF\n30752 XM\n(Kermit User Guide: IBM 370 KERMIT 1.6)SH\n46800 50 6120 6071 UL\n14 SS\n6120 8138 MT\n(1.6. What's Missing)SH\n10 /Times-Roman AF\n6120 10256 MT\n(Work on Kermit-370 will continue.  Features that need to be improved or added i\n/Symbol SF\n7910 12161 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Detect file properties from Attribute packets and allow overriding current para\n8620 13266 MT\n(implement file archiving.)SH\n/Symbol SF\n7910 15255 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Add)SH\n/Courier SF\n10592 XM\n(SET REPEAT)SH\n/Times-Roman SF\n16842 XM\n(subcommand.)SH\n/Symbol SF\n7910 17244 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Improve Kermit-370 operation as a local Kermit.)SH\n/Symbol SF\n7910 19233 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Recover from sudden line degradation by retransmitting partial packets.)SH\n/Symbol SF\n7910 21222 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(System-specific upgrades; see the respective chapters for details.)SH\nES\n%%Page: 17 18\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(2. IBM VM/CMS KERMIT)SH\n10 /Times-Italic AF\n51775 XM\n(Page 17)SH\n46800 50 8280 6252 UL\n16 /Times-Bold AF\n8280 8272 MT\n(2. IBM VM/CMS KERMIT)SH\n10 /Times-Italic AF\n8280 10566 MT\n(Program:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler \\050Harvard/Smithsonian Center for Astrophysics\\051; contribution\n31 W( Kundakci)30 W\n15280 11671 MT\n(and Daphne Tzoar \\050Columbia)\n211 W( U\\051, Bob Shields \\050U. Maryland\\051, Victor Lee \\050Queens U.\\051, Gar\n15280 12776 MT\n(Bjerke \\050U.  Texas at Austin\\051, Greg Small \\050UC Berkeley\\051, Clark Frazi\n67 W( Bus. Sch.\\051, Bob)66 W\n15280 13881 MT\n(Bolch and Steve Blankinship \\050Triangle\\051, Ron Rusnak \\050U. Chicago\\051, An\n/Times-Italic SF\n8280 14986 MT\n(Language:)SH\n/Times-Roman SF\n15280 XM\n(IBM/370 Assembler)SH\n/Times-Italic SF\n8280 16091 MT\n(Documentation:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler \\050CfA\\051)SH\n/Times-Italic SF\n8280 17196 MT\n(Version:)SH\n/Times-Roman SF\n15280 XM\n(4.0 \\05088/1/31\\051)SH\n/Times-Italic SF\n8280 18301 MT\n(Date:)SH\n/Times-Roman SF\n15280 XM\n(1988 February)SH\n12 /Times-Bold AF\n8280 20889 MT\n(Kermit-CMS Capabilities At A Glance:)SH\n10 /Times-Roman AF\n9280 22680 MT\n(Local operation:)SH\n34480 XM\n(No)SH\n9280 23785 MT\n(Remote operation:)SH\n34480 XM\n(Yes)SH\n9280 24890 MT\n(Transfers text files:)SH\n34480 XM\n(Yes)SH\n9280 25995 MT\n(Transfers binary files:)SH\n34480 XM\n(Yes)SH\n9280 27100 MT\n(Wildcard send:)SH\n34480 XM\n(Yes)SH\n/Courier SF\n9280 28205 MT\n(\u00acX/\u00acZ)SH\n/Times-Roman SF\n12530 XM\n(interruption:)SH\n34480 XM\n(Yes \\050through micro\\051)SH\n9280 29310 MT\n(Filename collision avoidance:)SH\n34480 XM\n(Yes)SH\n9280 30415 MT\n(Can time out:)SH\n34480 XM\n(No)SH\n9280 31520 MT\n(8th-bit prefixing:)SH\n34480 XM\n(Yes)SH\n9280 32625 MT\n(Repeat count prefixing:)SH\n34480 XM\n(Yes)SH\n9280 33730 MT\n(Alternate block checks:)SH\n34480 XM\n(Yes)SH\n9280 34835 MT\n(Terminal emulation:)SH\n34480 XM\n(No)SH\n9280 35940 MT\n(Communication settings:)SH\n34480 XM\n(No)SH\n9280 37045 MT\n(Transmit BREAK:)SH\n34480 XM\n(No)SH\n9280 38150 MT\n(Transaction logging:)SH\n34480 XM\n(Yes)SH\n9280 39255 MT\n(Session logging:)SH\n34480 XM\n(No)SH\n9280 40360 MT\n(Raw transmit:)SH\n34480 XM\n(Yes \\050no prompts\\051)SH\n9280 41465 MT\n(Sliding window:)SH\n34480 XM\n(No)SH\n9280 42570 MT\n(Long packets:)SH\n34480 XM\n(Yes)SH\n9280 43675 MT\n(Act as server:)SH\n34480 XM\n(Yes)SH\n9280 44780 MT\n(Talk to server:)SH\n34480 XM\n(Yes)SH\n9280 45885 MT\n(Advanced server functions:)SH\n34480 XM\n(Yes)SH\n9280 46990 MT\n(Advanced commands for servers:)SH\n34480 XM\n(Yes)SH\n9280 48095 MT\n(Local file management:)SH\n34480 XM\n(Yes)SH\n9280 49200 MT\n(Handle Attribute Packets:)SH\n34480 XM\n(Yes)SH\n9280 50305 MT\n(Command/init files:)SH\n34480 XM\n(Yes)SH\n9280 51410 MT\n(Command macros:)SH\n34480 XM\n(No)SH\n8280 53201 MT\n(Kermit-CMS is a member of the generic Kermit-370 family and)\n66 W( shares most of the features and capabilities of the)67 W\n8280 54397 MT\n(group. As)\n538 W( its name implies, Kermit-CMS is the version of)\n144 W( Kermit-370 that runs under the VM/CMS operating)143 W\n8280 55593 MT\n(system. The)\n690 W( primary documentation for Kermit-CMS is actually the chapter)\n220 W( on Kermit-370, which describes)221 W\n8280 56789 MT\n(general properties; the present)\n35 W( chapter assumes the reader is familiar with that material.  Only the detai\n8280 57985 MT\n(CMS operation will be discussed here, e.g., command syntax relating to the)\n140 W( CMS file system or commands not)141 W\n8280 59181 MT\n(offered in general by Kermit-370.)SH\n12 /Times-Bold AF\n8280 61769 MT\n(CMS Specifics of Kermit-370:)SH\n10 /Times-Roman AF\n9280 63560 MT\n(Global INIT file:)SH\n/Courier SF\n34480 XM\n(SYSTEM KERMINI *)SH\n/Times-Roman SF\n9280 64665 MT\n(User INIT file:)SH\n/Courier SF\n34480 XM\n(<userid> KERMINI *)SH\n/Times-Roman SF\n9280 65770 MT\n(Debug packet log:)SH\n/Courier SF\n34480 XM\n(KER LOG A1)SH\n/Times-Roman SF\n9280 66875 MT\n(Server reply log:)SH\n/Courier SF\n34480 XM\n(KER REPLY A1)SH\n/Times-Roman SF\n9280 67980 MT\n(Maximum packet size:)SH\n34480 XM\n(1913)SH\n9280 69085 MT\n(Maximum disk LRECL:)SH\n34480 XM\n(65535)SH\nES\n%%Page: 18 19\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 18)SH\n12 /Times-Bold AF\n27553 XM\n(Kermit User Guide: IBM VM/CMS KERMIT 2.1)SH\n46800 50 6120 6071 UL\n14 SS\n6120 8138 MT\n(2.1. The VM/CMS File System)SH\n10 /Times-Roman AF\n6120 10256 MT\n(The features of the CMS file system of greatest interest to Kermit users are)\n135 W( the format of file specifications \\050or)134 W\n/Times-Italic SF\n6120 11452 MT\n(filespecs)SH\n/Times-Roman SF\n(\\051 and the concept of records.  The latter is described in the Kermit-370 cha\n6120 13844 MT\n(The VM/CMS)SH\n/Times-Italic SF\n12176 XM\n(filespec)SH\n/Times-Roman SF\n15481 XM\n(takes the form)SH\n/Courier SF\n8520 15499 MT\n(filename filetype filemode)SH\n/Times-Roman SF\n6120 17216 MT\n(\\050often abbreviated FN FT FM\\051.  The filename and filetype are one to eight\n69 W( the)70 W\n6120 18412 MT\n(primary identifier for the file,)\n98 W( and the type is an indicator which, by convention, tells what kind of file\n6120 19608 MT\n(instance,)SH\n/Courier SF\n9920 XM\n(TEST FORTRAN)23 W\n/Times-Roman SF\n17416 XM\n(is the source of a Fortran)\n23 W( program named TEST.)24 W\n/Courier SF\n37564 XM\n(MODULE)SH\n/Times-Roman SF\n41438 XM\n(is the filetype for executable)24 W\n6120 20804 MT\n(programs \\050as distinct from object code, which has a filetype of)29 W\n/Courier SF\n31712 XM\n(TEXT)SH\n/Times-Roman SF\n(!\\051. Although)\n308 W( some)\n29 W( operating systems consider)28 W\n6120 22000 MT\n(the filetype optional,)\n3 W( VM/CMS requires a type for each file.  Therefore, Kermit-CMS supplies a def\n/Courier SF\n($)SH\n/Times-Roman SF\n('')SH\n6120 23196 MT\n(for any received file if no type is provided by the remote system.  The same de\n47 W( for a missing filename.)46 W\n6120 24392 MT\n(At the same time, the FN and FT are forced to conform to CMS rules in)\n147 W( other respects.  The FN and FT may)148 W\n6120 25588 MT\n(contain, in any order, uppercase letters, digits, and the special characters ``\n/Courier SF\n($)SH\n/Times-Roman SF\n('' \\050dollar)\n19 W( sign\\051, ``)18 W\n/Courier SF\n(#)SH\n/Times-Roman SF\n('' \\050pound sign\\051, ``)18 W\n/Courier SF\n(@)SH\n/Times-Roman SF\n('')SH\n6120 26784 MT\n(\\050at sign\\051, ``)1 W\n/Courier SF\n(+)SH\n/Times-Roman SF\n('' \\050plus\\051, ``)1 W\n/Courier SF\n(-)SH\n/Times-Roman SF\n('' \\050hyphen\\051, ``)1 W\n/Courier SF\n(:)SH\n/Times-Roman SF\n('' \\050colon\\051, and ``)1 W\n/Courier SF\n(_)SH\n/Times-Roman SF\n('' \\050underscore\\051.  Other characters may be not be included.)2 W\n6120 27980 MT\n(If an invalid character is found in the FN or FT field, it is replaced by an un\n6120 29176 MT\n(is a lowercase letter\\051.  Also, both FN and FT are truncated, if necessary, t\n6120 31568 MT\n(The filemode, which consists of a letter and a number, is similar to a)\n209 W( device specification on microcomputer)210 W\n6120 32764 MT\n(systems:)SH\n/Courier SF\n10000 XM\n(FN FT FM)185 W\n/Times-Roman SF\n15605 XM\n(would translate to)185 W\n/Courier SF\n23576 XM\n(FM:FN.FT)SH\n/Times-Roman SF\n28811 XM\n(in CP/M or MS-DOS if the filemode number is ignored.)185 W\n6120 33960 MT\n(Indeed, the filemode number is more properly an attribute of a file than part o\n38 W( co-exist)39 W\n6120 35156 MT\n(with names that match all but the filemode number.  Even the filemode letter is\n139 W( the)138 W\n/Times-Italic SF\n49865 XM\n(filespec)SH\n/Times-Roman SF\n6120 36352 MT\n(because the)\n87 W( same mini-disk could be accessed under a different mode letter.  In some w\n6120 37548 MT\n(also like a disk directory designator, since)\n9 W( many such mini-disks may reside on the same disk drive.  For this reason,)8\n6120 38744 MT\n(the Kermit concept of the \"working directory\" is equated with a particular disk\n10 W( mode letter under Kermit-CMS.  The)11 W\n6120 39940 MT\n(current \"working directory\" is, thus, the \"home\" filemode \\050normally ``)10 W\n/Courier SF\n(A)SH\n/Times-Roman SF\n('', which is the primary user)\n10 W( mini-disk under)9 W\n6120 41136 MT\n(CMS\\051, and file transfers take place preferentially to and from the \"home\" di\n91 W( filemode is omitted from a)92 W\n/Times-Italic SF\n6120 42332 MT\n(filespec)SH\n/Times-Roman SF\n9480 XM\n(when sending, the \"home\")\n55 W( disk is normally used, but there is an option for using a default of ``)54\n/Courier SF\n(*)SH\n/Times-Roman SF\n('' instead.)54 W\n6120 43528 MT\n(In this case, the user's disks are scanned according to the search order and th\n43 W( of the file is the one)44 W\n6120 44724 MT\n(that is sent.  If the filemode is omitted from a)123 W\n/Times-Italic SF\n25804 XM\n(filespec)SH\n/Times-Roman SF\n29231 XM\n(when receiving, the \"home\" disk is used with a filemode)122 W\n6120 45920 MT\n(number of ``)SH\n/Courier SF\n(1)SH\n/Times-Roman SF\n(''.)SH\n6120 48312 MT\n(To provide compatibility with other operating systems, when Kermit-CMS sends a\n109 W( ordinarily makes a file)110 W\n6120 49508 MT\n(header with only the filename and filetype.  It also converts the intervening b\n73 W( the other hand,)72 W\n6120 50704 MT\n(extra information may be added by way of the SET FOREIGN subcommand.)SH\n6120 53096 MT\n(VM/CMS allows a group of files to be specified in a single)67 W\n/Times-Italic SF\n30812 XM\n(filespec)SH\n/Times-Roman SF\n34185 XM\n(by including the special \"wildcard\" characters)68 W\n6120 54292 MT\n(``)SH\n/Courier SF\n(*)SH\n/Times-Roman SF\n('' and ``)40 W\n/Courier SF\n(%)SH\n/Times-Roman SF\n(''. A)\n330 W( ``)40 W\n/Courier SF\n(*)SH\n/Times-Roman SF\n('' matches any string of characters \\050even a null string\\051 from)\n40 W( the current position to the end of)39 W\n6120 55488 MT\n(the field; a ``)SH\n/Courier SF\n(%)SH\n/Times-Roman SF\n('' matches any single character.  Here are some examples:)SH\n/Courier SF\n7120 57279 MT\n(* COBOL A)SH\n/Times-Roman SF\n13120 XM\n(All files of type)SH\n/Courier SF\n19675 XM\n(COBOL)SH\n/Times-Roman SF\n22925 XM\n(\\050all COBOL source files\\051 on the A disk.)SH\n/Courier SF\n7120 58937 MT\n(F* * *)SH\n/Times-Roman SF\n13120 XM\n(All files whose names start with F.)SH\n/Courier SF\n7120 60595 MT\n(% * B)SH\n/Times-Roman SF\n13120 XM\n(All B-disk files with one-character FN's.)SH\n6120 62386 MT\n(CMS files, like)\n230 W( those in other IBM 370 systems, are record-oriented \\050see the introduct\n6120 63582 MT\n(chapter\\051. In)\n578 W( particular, CMS files are characterized by record)\n164 W( format \\050RECFM\\051, which may be fixed-length or)163 W\n6120 64778 MT\n(varying-length, and by maximum record length \\050LRECL\\051.  The size of)\n19 W( record blocks is irrelevant, however, because)20 W\n6120 65974 MT\n(CMS performs)\n97 W( the blocking and deblocking operations automatically and transparently, in\n6120 67170 MT\n(records across block boundaries.  Records in CMS files may be up to 65535 bytes\n6120 69562 MT\n(Another file system feature of)\n24 W( occasional interest is the means of reporting errors.  When Kermit-CMS enc\n6120 70758 MT\n(disk error, it records the function)\n14 W( and error code for inclusion in the)13 W\n/Courier SF\n33566 XM\n(STATUS)SH\n/Times-Roman SF\n37429 XM\n(report. The)\n276 W( explanations can be found)13 W\n6120 71954 MT\n(in the CMS reference manual under the FSREAD and FSWRITE macros \\050which corre\n130 W( to the RDBUF and)131 W\nES\n%%Page: 19 20\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(2.1. The VM/CMS File System)SH\n10 /Times-Italic AF\n51775 XM\n(Page 19)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n8280 7886 MT\n(WRBUF functions\\051.)SH\n14 /Times-Bold AF\n8280 11488 MT\n(2.2. Program Operation)SH\n10 /Times-Roman AF\n8280 13606 MT\n(At startup)\n233 W( time, Kermit-CMS looks for two initialization files,)232 W\n/Courier SF\n35508 XM\n(SYSTEM KERMINI)232 W\n/Times-Roman SF\n44622 XM\n(and)SH\n/Times-Italic SF\n46548 XM\n(<userid>)SH\n/Courier SF\n50880 XM\n(KERMINI)SH\n/Times-Roman SF\n8280 14802 MT\n(\\050where)SH\n/Times-Italic SF\n11394 XM\n(<userid>)SH\n/Times-Roman SF\n15582 XM\n(is the user's logon ID\\051.)\n88 W( If)\n428 W( either of these files exists on more than one disk, it will be read and)8\n8280 15998 MT\n(executed from the first copy in the search order.  The file)152 W\n/Courier SF\n33180 XM\n(SYSTEM KERMINI)151 W\n/Times-Roman SF\n42132 XM\n(should be placed on a publicly)151 W\n8280 17194 MT\n(accessible disk by a systems programmer, preferably the same disk where the Ker\n113 W( kept.)114 W\n8280 18390 MT\n(The file)SH\n/Times-Italic SF\n11668 XM\n(<userid>)SH\n/Courier SF\n15768 XM\n(KERMINI)SH\n/Times-Roman SF\n20218 XM\n(can be maintained by the user on any convenient disk.)SH\n8280 20782 MT\n(One important distinction between Kermit-CMS and other Kermits is that a progra\n126 W( running under VM/CMS is)125 W\n8280 21978 MT\n(unable to interrupt a read on its \"console\".  This means)\n167 W( that the CMS version of Kermit cannot time out after)168 W\n8280 23174 MT\n(sending a packet.  The only way to time out is from the other side:  typing a c\n115 W( return to the local Kermit)114 W\n8280 24370 MT\n(causing it to retransmit its last packet, or an automatic timeout as provided b\n8280 26762 MT\n(Five CP SET parameters \\050MSG, IMSG, WNG, ACNT, and TIMER\\051 are set OFF)\n3 W( during protocol mode \\050and restored)4 W\n8280 27958 MT\n(afterwards\\051 to prevent CP from interrupting any I/O in progress, and RUN is\n145 W( that Kermit can)144 W\n8280 29154 MT\n(recover from accidental attention interrupts.  Also, on a TTY)\n15 W( line, the TERMINAL LINESIZE is set OFF to prevent)16 W\n8280 30350 MT\n(CP from inserting carriage return-linefeed pairs into packets, TERMINAL SCROLL\n8280 31546 MT\n(pauses, LINEDIT is set OFF to ensure that all characters are taken)\n63 W( literally, and the CMS user terminal translation)64 W\n8280 32742 MT\n(tables \\050established via the CMS SET INPUT and OUTPUT commands\\051)\n93 W( are temporarily suppressed for both short)92 W\n8280 33938 MT\n(and long packet protocols.  The settings in effect when Kermit starts up are sa\n159 W( as a sort of \"normal\" status)160 W\n8280 35134 MT\n(snapshot \\050as opposed to the \"protocol\" status just described\\051.  The proto\n8280 36330 MT\n(protocol mode and also after Kermit executes a CP)\n72 W( command in server mode.  Similarly, normal status is selected)73 W\n8280 37526 MT\n(when Kermit leaves protocol)\n58 W( mode and before Kermit executes a CP command in server mode.  Note: if Ker\n8280 38722 MT\n(interrupted in the midst)\n106 W( of a transfer or while in server mode, these parameters will be left with\n8280 39918 MT\n(\\050namely, the protocol status\\051, and they may need to be restored by hand.)\n8280 42310 MT\n(CMS is different from some other IBM mainframe systems in that allows a program\n88 W( of prompting)87 W\n8280 43506 MT\n(and synchronization on ``)224 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' lines.  Kermit-CMS takes advantage of this option, and it is not,)\n224 W( in general,)225 W\n8280 44702 MT\n(necessary to enable handshaking on the micro Kermit before connecting to CMS.)\n148 W( In)\n544 W( other words, handshaking)147 W\n8280 45898 MT\n(should be suppressed for both ``)26 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' and ``)26 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' devices \\050the micro Kermit should have)\n26 W( HANDSHAKE set)27 W\n8280 47094 MT\n(OFF, and Kermit-CMS should have HANDSHAKE set to 0\\051.  Since the generic Kerm\n8280 48290 MT\n(\\050XON\\051 is retained in Kermit-CMS, the subcommand ``)52 W\n/Courier SF\n(SET HANDSHAKE 0)52 W\n/Times-Roman SF\n('' is a good candidate for inclusion)\n52 W( in)53 W\n/Courier SF\n8280 49486 MT\n(SYSTEM KERMINI)SH\n/Times-Roman SF\n(.)SH\n12 /Times-Bold AF\n8280 52074 MT\n(Interactive Operation:)SH\n10 /Times-Roman AF\n8280 53488 MT\n(To run Kermit-CMS interactively, invoke the program from CMS by typing)SH\n/Courier SF\n38945 XM\n(KERMIT)SH\n/Times-Roman SF\n(. When)\n250 W( you see the prompt,)SH\n/Courier SF\n10680 55143 MT\n(Kermit-CMS>)SH\n/Times-Roman SF\n8280 56860 MT\n(you may type a Kermit subcommand.  When the subcommand completes, Kermit issues\n28 W( The)\n304 W( cycle)27 W\n8280 58056 MT\n(repeats until you exit from the program.  For example:)SH\n/Courier SF\n10680 59711 MT\n(KERMIT)SH\n3600 50 10680 59911 UL\n10680 61366 MT\n(Kermit-CMS Version 4.0 \\05088/1/31\\051)SH\n10680 62397 MT\n(Enter ? for a list of valid commands)SH\n10680 64052 MT\n(Kermit-CMS>send foo *)SH\n6000 50 17280 64252 UL\n/Times-Italic SF\n11880 65767 MT\n(Files with fn FOO are sent)SH\n/Courier SF\n10680 67422 MT\n(Kermit-CMS>receive test spss)SH\n10200 50 17280 67622 UL\n/Times-Italic SF\n11880 69137 MT\n(File is received and called TEST SPSS A1)SH\n/Courier SF\n10680 70792 MT\n(Kermit-CMS>exit)SH\n2400 50 17280 70992 UL\nES\n%%Page: 20 21\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 20)SH\n12 /Times-Bold AF\n27553 XM\n(Kermit User Guide: IBM VM/CMS KERMIT 2.2)SH\n46800 50 6120 5709 UL\n10 /Times-Roman AF\n6120 7886 MT\n(The prompt string under CMS is truly interactive.  In other words, the string \\\n94 W( carriage return or linefeed\\051)95 W\n6120 9082 MT\n(appears only when fresh input is)\n217 W( needed from the terminal.  If, for example, Kermit is invoked after sever\n6120 10278 MT\n(subcommands have been stacked up, the stack is read and executed before the fir\n12 /Times-Bold AF\n6120 12866 MT\n(Command Line Invocation:)SH\n10 /Times-Roman AF\n6120 14280 MT\n(Kermit-CMS may also be invoked with command line arguments from CMS.  The argum\n31 W( one)32 W\n6120 15476 MT\n(or more subcommands to be executed by Kermit after completion of the initializa\n/Courier SF\n8520 17131 MT\n(KERMIT send test fortran)SH\n14400 50 8520 17331 UL\n/Times-Roman SF\n6120 18433 MT\n(or)SH\n/Courier SF\n8520 19673 MT\n(KERMIT set debug on # set file binary # server)SH\n27600 50 8520 19873 UL\n/Times-Roman SF\n6120 22065 MT\n(Kermit will exit and return)\n22 W( to CMS after completing the specified subcommand or subcommands.  Note tha\n6120 23261 MT\n(commands may)\n106 W( be given on the command line as long as they are separated by the LINEND\n6120 24457 MT\n(pound sign in this case.  Note that the LINEND is a concept of CP, rather than\n6120 25653 MT\n(commands entered from the terminal and only when LINEDIT is)\n153 W( on.  A command line may contain up to 130)154 W\n6120 26849 MT\n(characters.)SH\n12 /Times-Bold AF\n6120 29437 MT\n(EXEC Operation:)SH\n10 /Times-Roman AF\n6120 30851 MT\n(Like other CMS)\n138 W( programs, Kermit-CMS may be invoked from a CMS EXEC.  Subcommands can be\n6120 32047 MT\n(Kermit using the program stack and/or command line arguments.  For example, to\n29 W( up Kermit-CMS and have it)30 W\n6120 33243 MT\n(act as a server, include the line:)SH\n/Courier SF\n8520 34898 MT\n(KERMIT server)SH\n7800 50 8520 35098 UL\n/Times-Roman SF\n6120 36615 MT\n(To pass more than one subcommand, they must be)\n8 W( stacked in the order in which they are to be executed.  To start up)7 W\n6120 37811 MT\n(a Kermit-CMS server with a three character CRC, include:)SH\n/Courier SF\n8520 39466 MT\n(&STACK set block 3)SH\n10800 50 8520 39666 UL\n8520 40497 MT\n(&STACK server)SH\n7800 50 8520 40697 UL\n8520 41528 MT\n(KERMIT)SH\n3600 50 8520 41728 UL\n/Times-Roman SF\n6120 43245 MT\n(Another way of setting up multiple subcommands)\n44 W( would be to collect the subcommands into a TAKE file and then)45 W\n6120 44441 MT\n(issue the TAKE subcommand via the command line or program stack.)\n70 W( Of)\n389 W( course, EXEC's may be executed from)69 W\n6120 45637 MT\n(Kermit, either directly or from a)\n11 W( TAKE file, and Kermit subcommands, in turn, may be issued from EXEC's as l\n6120 46833 MT\n(as Kermit is active.  See the TAKE subcommand for more details.)SH\n12 /Times-Bold AF\n6120 49421 MT\n(Server mode:)SH\n10 /Times-Roman AF\n6120 50835 MT\n(Command execution in server mode is different in several respects from normal o\n11 W( some Kermit)10 W\n6120 52031 MT\n(subcommands are not)\n8 W( allowed \\050see the list of subcommands in the Kermit-370 chapter\\051.  Mor\n6120 53227 MT\n(always terminate any active TAKE file.)\n102 W( Also,)\n453 W( commands other than CP commands run in a special environment)101 W\n6120 54423 MT\n(with RUN ON, TIMER OFF, and so forth.  Another difference is)\n1 W( that Kermit intercepts all SVC instructions in order)2 W\n6120 55619 MT\n(to catch console I/O and transmit the data to)\n84 W( the local Kermit as text packets.  Since Kermit does not emulate the)83 W\n6120 56815 MT\n(substitution functions of the LINEDIT macro, some messages will appear rather c\n78 W( A)\n407 W( more serious problem)79 W\n6120 58011 MT\n(with this redirection is that some VM/CMS system commands may issue console I/O\n80 W( some)79 W\n6120 59207 MT\n(messages never appear to the local Kermit \\050except,)\n248 W( perhaps, as bad packets\\051.  For non-TTY terminals, such)249 W\n6120 60403 MT\n(messages are stacked up in the console output queue and appear all at once when\nES\n%%Page: 21 22\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(2.3. Kermit-CMS Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 21)SH\n46800 50 8280 6071 UL\n14 /Times-Bold AF\n8280 8138 MT\n(2.3. Kermit-CMS Subcommands)SH\n10 /Times-Roman AF\n8280 10256 MT\n(Kermit-CMS supports)\n88 W( all the subcommands described in the corresponding section of the Kermit-3\n8280 11452 MT\n(addition, there)\n121 W( are two more, both of which can be issued as remote Kermit commands when\n8280 12648 MT\n(server mode.  The first is)101 W\n/Courier SF\n19134 XM\n(CMS)SH\n/Times-Roman SF\n(, which is just a synonym)\n101 W( for the generic HOST subcommand.  The second is)100 W\n/Courier SF\n53630 XM\n(CP)SH\n/Times-Roman SF\n(,)SH\n8280 13844 MT\n(which specifically issues a command to CP.  In most circumstances, the latter i\n80 W( not needed, since CMS will pass)81 W\n8280 15040 MT\n(along CP commands to CP.)SH\n8280 17432 MT\n(The remainder of this section concentrates on the subcommands that have)\n4 W( special form or meaning for Kermit-CMS.)3 W\n8280 18628 MT\n(See also the chapter on Kermit-370 for further details.)SH\n13 /Times-Bold AF\n24708 21987 MT\n(The SEND Subcommand)SH\n10 /Times-Roman AF\n8280 24360 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SEND)SH\n/Times-Italic SF\n14586 XM\n(filespec)SH\n/Courier SF\n18241 XM\n(\u00a2)SH\n/Times-Italic SF\n(foreign-filespec)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n8280 26752 MT\n(The SEND subcommand causes a file or file group to be sent from CMS to the Kerm\n15 W( system.)16 W\n/Times-Italic SF\n52025 XM\n(filespec)SH\n/Times-Roman SF\n8280 27948 MT\n(takes the form:)SH\n/Courier SF\n10680 29603 MT\n(filename filetype \u00a2filemode|)SH\n/Times-Roman SF\n8280 31320 MT\n(but the filemode if optional only if the)SH\n/Times-Italic SF\n23835 XM\n(foreign-filespec)SH\n/Times-Roman SF\n30362 XM\n(is omitted.)SH\n/Times-Italic SF\n8280 33712 MT\n(filespec)SH\n/Times-Roman SF\n11589 XM\n(may contain the wildcard characters ``)4 W\n/Courier SF\n(*)SH\n/Times-Roman SF\n('' or)\n4 W( ``)3 W\n/Courier SF\n(%)SH\n/Times-Roman SF\n(''. If)256 W\n/Times-Italic SF\n33178 XM\n(filespec)SH\n/Times-Roman SF\n36486 XM\n(contains wildcard characters then all matching)3 W\n8280 34908 MT\n(files will be)\n16 W( sent.  If, however, a file exists by the same name on more than one disk,\n8280 36104 MT\n(encounters, according to the disk search order, is sent.  See also the CWD subc\n8280 38496 MT\n(The)SH\n/Times-Italic SF\n10216 XM\n(foreign-filespec)SH\n/Times-Roman SF\n(, if any, is used for the file header of the outgoing file, replacing the)\n131 W( usual filename.filetype)130 W\n8280 39692 MT\n(copied from the CMS)SH\n/Times-Italic SF\n17224 XM\n(filespec)SH\n/Times-Roman SF\n(. It)\n250 W( may take one of two forms:)SH\n/Courier SF\n10680 41347 MT\n(filename filetype)SH\n/Times-Roman SF\n8280 43064 MT\n(or)SH\n/Courier SF\n10680 44719 MT\n(arbitrary-string)SH\n/Times-Roman SF\n8280 46436 MT\n(Normally, this form of the SEND subcommand is used only for)\n18 W( single files because the)19 W\n/Times-Italic SF\n43718 XM\n(foreign-filespec)SH\n/Times-Roman SF\n50264 XM\n(is used only)19 W\n8280 47632 MT\n(for the first file of a group \\050subsequent files)\n185 W( having default headers\\051.  However, in the two-token form of the)184 W\n/Times-Italic SF\n8280 48828 MT\n(foreign-filespec)SH\n/Times-Roman SF\n14833 XM\n(either the name or type may be an Equals sign ``)27 W\n/Courier SF\n(=)SH\n/Times-Roman SF\n('' to signify that the corresponding CMS name or)27 W\n8280 50024 MT\n(type is to be retained in the file header.  In that case, the partial renaming\n26 W( through an entire group of files.  It)25 W\n8280 51220 MT\n(is the user's responsibility to prevent such partial renaming from sending dupl\n8280 53612 MT\n(Although the file transfer cannot be cancelled from)\n36 W( the CMS side, Kermit-CMS is capable of responding to \"cancel)37 W\n8280 54808 MT\n(file\" or \"cancel batch\")\n58 W( signals from the local Kermit; these are typically entered by typing Contr\n8280 56004 MT\n(respectively.)SH\n13 /Times-Bold AF\n23480 59363 MT\n(The RECEIVE Subcommand)SH\n10 /Times-Roman AF\n8280 61736 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(RECEIVE \u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n8280 64128 MT\n(The RECEIVE subcommand tells Kermit to receive a file)\n112 W( or file group from the other system.  You should then)113 W\n8280 65324 MT\n(issue a SEND subcommand to the other Kermit.)SH\n8280 67716 MT\n(The format of)SH\n/Times-Italic SF\n14084 XM\n(filespec)SH\n/Times-Roman SF\n17389 XM\n(is:)SH\n/Courier SF\n10680 69371 MT\n(filename filetype \u00a2filemode|)SH\n/Times-Roman SF\n8280 71763 MT\n(If the optional)55 W\n/Times-Italic SF\n14360 XM\n(filespec)SH\n/Times-Roman SF\n17719 XM\n(is omitted, Kermit-CMS will use the name\\050s\\051 provided by the other Kermit.\nES\n%%Page: 22 23\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 22)SH\n12 /Times-Bold AF\n27553 XM\n(Kermit User Guide: IBM VM/CMS KERMIT 2.3)SH\n46800 50 6120 5709 UL\n10 /Times-Roman AF\n6120 7886 MT\n(not a legal CMS file name, Kermit-CMS will delete excess characters and will ch\n264 W( to)265 W\n6120 9082 MT\n(underscores. A)414 W\n/Times-Italic SF\n12864 XM\n(filespec)SH\n/Times-Roman SF\n16251 XM\n(in the subcommand indicates what name the incoming file should be given.)\n82 W( The)412 W\n/Times-Italic SF\n49865 XM\n(filespec)SH\n/Times-Roman SF\n6120 10278 MT\n(may include a filemode to designate the)\n53 W( destination disk.  If none is provided, the file will be saved on the \"hom\n6120 11474 MT\n(disk with filemode number ``)53 W\n/Courier SF\n(1)SH\n/Times-Roman SF\n(''. If)\n356 W( you want to use the same name but a different filemode,)\n53 W( specify ``)52 W\n/Courier SF\n(= = FM)52 W\n/Times-Roman SF\n(''.)SH\n6120 12670 MT\n(Wildcards may not be used.)SH\n6120 15062 MT\n(If the optional)173 W\n/Times-Italic SF\n12555 XM\n(filespec)SH\n/Times-Roman SF\n16033 XM\n(is provided, but more)\n173 W( than one file arrives, the first file will be stored under the given)174\n/Times-Italic SF\n6120 16258 MT\n(filespec)SH\n/Times-Roman SF\n(, and the remainder will be stored under)\n63 W( their own names on the \"home\" disk.  If, however, ``)62 W\n/Courier SF\n(= = FM)62 W\n/Times-Roman SF\n('' is)62 W\n6120 17454 MT\n(used, all files will be placed onto the specified disk.)SH\n6120 19846 MT\n(When the record format is \"F\", any received record longer than the logical reco\n12 W( truncated,)13 W\n6120 21042 MT\n(and shorter records will be padded.)\n165 W( The)\n578 W( padding character is a blank for text files and a null for binary files.)\n6120 22238 MT\n(Received binary \\050but not V-binary or D-binary\\051 files are treated as byte\n6120 23434 MT\n(logical record length.  See the SET FILE TYPE, SET FILE LRECL, and SET FILE REC\n6120 25826 MT\n(If an error occurs during the file transfer, as much of the file)\n63 W( as was received is saved on disk.  If the sending of a)62 W\n6120 27022 MT\n(file is cancelled by the user of the foreign system, Kermit-CMS will discard wh\n36 W( APPEND)37 W\n6120 28218 MT\n(is ON or INCOMPLETE is KEEP.)SH\n6120 30610 MT\n(If the incoming file has the)\n216 W( same name as an existing file, and WARNING is OFF, the original file will\n6120 31806 MT\n(overwritten. If)\n292 W( WARNING is set ON,)\n21 W( however, Kermit-CMS will change the incoming name so as not to obliterate)\n6120 33002 MT\n(the pre-existing file.  It attempts to find a)\n43 W( unique name by successively modifying the original and checking for the)42\n6120 34198 MT\n(existence of)\n48 W( such a file at each step.  The procedure begins by truncating the filetype\n6120 35394 MT\n(and then appending ``)30 W\n/Courier SF\n($0)SH\n/Times-Roman SF\n(''. If)\n310 W( a file by that name exists, Kermit then replaces the ``)30 W\n/Courier SF\n(0)SH\n/Times-Roman SF\n('' with a ``)30 W\n/Courier SF\n(1)SH\n/Times-Roman SF\n(''. It)\n310 W( continues in)29 W\n6120 36590 MT\n(this manner up to ``)SH\n/Courier SF\n(9)SH\n/Times-Roman SF\n('', and if an unused name cannot be found, the transfer fails.)SH\n13 /Times-Bold AF\n22910 39949 MT\n(The GET Subcommand)SH\n10 /Times-Roman AF\n6120 42322 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(GET)SH\n/Times-Italic SF\n11826 XM\n(foreign-filespec)SH\n/Courier SF\n18703 XM\n(\u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 44714 MT\n(The GET subcommand tells Kermit to request a file or file group from the other\n36 W( have a Kermit)37 W\n6120 45910 MT\n(running in server)\n19 W( mode.  The syntax is complicated by the allowance of two forms for the)18\n/Times-Italic SF\n42533 XM\n(foreign-filespec)SH\n/Times-Roman SF\n(, just as in)18 W\n6120 47106 MT\n(the SEND subcommand.  Here the parsing is based on the number of \"words\" \\050bl\n179 W( in the)180 W\n6120 48302 MT\n(subcommand argument,)\n288 W( which can be anything from one to five.  If the number is anything but fo\n6120 49498 MT\n(interpretation is unambiguous, but when there are four words, the first word pl\n49 W( than)50 W\n6120 50694 MT\n(eight characters or contains a ``)54 W\n/Courier SF\n(.)SH\n/Times-Roman SF\n('' or ``)54 W\n/Courier SF\n(/)SH\n/Times-Roman SF\n('', it is assumed to be the whole)54 W\n/Times-Italic SF\n36345 XM\n(foreign-filespec)SH\n/Times-Roman SF\n(; otherwise, it is)\n54 W( assumed)53 W\n6120 51890 MT\n(to be the first of two words that, when joined by a ``)SH\n/Courier SF\n(.)SH\n/Times-Roman SF\n('', make up the)SH\n/Times-Italic SF\n33882 XM\n(filespec)SH\n/Times-Roman SF\n37187 XM\n(on the other system.)SH\n13 /Times-Bold AF\n22440 55249 MT\n(The TAKE Subcommand)SH\n10 /Times-Roman AF\n6120 57622 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(TAKE)SH\n/Times-Italic SF\n12426 XM\n(filespec)SH\n/Times-Roman SF\n6120 60014 MT\n(Execute Kermit subcommands from the specified file, where)24 W\n/Times-Italic SF\n30890 XM\n(filespec)SH\n/Times-Roman SF\n34219 XM\n(has the format)24 W\n/Courier SF\n40263 XM\n(fn \u00a2ft \u00a2fm||)25 W\n/Times-Roman SF\n(. The)\n300 W( default)25 W\n6120 61210 MT\n(filetype is ``)SH\n/Courier SF\n(TAKE)SH\n/Times-Roman SF\n('', and the default filemode is ``)SH\n/Courier SF\n(*)SH\n/Times-Roman SF\n(''.)SH\n6120 63602 MT\n(Kermit subcommands may also be executed from CMS EXEC's, so that the TAKE subco\n139 W( in a sense,)138 W\n6120 64798 MT\n(superfluous under VM/CMS.  In CMS terminology, Kermit establishes)\n134 W( a Kermit subcommand environment, and)135 W\n6120 65994 MT\n(EXEC's written in EXEC 2 or)\n43 W( REXX may invoke subcommands within that environment.  For example, to disp\n6120 67190 MT\n(the current packet checksum type, an EXEC 2 would issue)SH\n/Courier SF\n8520 68845 MT\n(&SUBCOMMAND KERMIT SHOW BLOCK-CHECK)SH\n/Times-Roman SF\n6120 70562 MT\n(and a REXX macro would issue)SH\nES\n%%Page: 23 24\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(2.3. Kermit-CMS Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 23)SH\n46800 50 8280 5709 UL\n/Courier SF\n10680 7824 MT\n(Address KERMIT 'SHOW BLOCK-CHECK')SH\n/Times-Roman SF\n8280 9541 MT\n(There is one important difference between executing a TAKE file and an)\n73 W( EXEC: the former may issue a QUIT or)74 W\n8280 10737 MT\n(EXIT subcommand, but the latter)\n10 W( may not.  Also, a Kermit subcommand issued from an EXEC returns a completi\n8280 11933 MT\n(code according to the current error status \\050see)\n22 W( the table under \"After Kermit Completes\" in the Kermit-370 chapter\\051.)23\n8280 13129 MT\n(An EXEC could therefore be set up to react appropriately to file transmission e\n13 /Times-Bold AF\n25214 16488 MT\n(The SET Subcommand)SH\n10 /Times-Roman AF\n8280 18861 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET)SH\n/Times-Italic SF\n13986 XM\n(parameter)SH\n/Courier SF\n18752 XM\n(\u00a2)SH\n/Times-Italic SF\n(value)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n8280 21253 MT\n(The SET subcommand establishes or modifies various parameters controlling file\n143 W( following SET)142 W\n8280 22449 MT\n(parameters are available in Kermit-CMS, but not in Kermit-370 in general:)SH\n8280 24059 MT\n(DESTINATION)SH\n22680 XM\n(\"Home\" disk.)SH\n8280 25164 MT\n(FILE)SH\n8780 26269 MT\n(LRECL)SH\n22680 XM\n(Logical Record length for incoming file.)SH\n8780 27374 MT\n(RECFM)SH\n22680 XM\n(Record format for incoming files.)SH\n8280 28479 MT\n(SEARCH-ALL)SH\n22680 XM\n(Determine the default disk search scope.)SH\n12 /Times-Bold AF\n8280 31067 MT\n(SET DESTINATION)SH\n10 /Times-Roman AF\n8280 32481 MT\n(Syntax: SET DESTINATION)SH\n/Times-Italic SF\n20529 XM\n(letter)SH\n/Times-Roman SF\n8280 34873 MT\n(This subcommand is equivalent to the CWD subcommand \\050q.v.\\051.)SH\n12 /Times-Bold AF\n8280 37461 MT\n(SET FILE LRECL)SH\n10 /Times-Roman AF\n8280 38875 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FILE LRECL)SH\n/Times-Italic SF\n20586 XM\n(number)SH\n/Times-Roman SF\n8280 41267 MT\n(This sets the logical record length for incoming files to a)78 W\n/Times-Italic SF\n32052 XM\n(number)SH\n/Times-Roman SF\n35435 XM\n(from 1 to 65535 \\05064K-1\\051.  This variable is)\n78 W( used)79 W\n8280 42463 MT\n(only for fixed format and binary files.  The default is 80.)SH\n12 /Times-Bold AF\n8280 45051 MT\n(SET FILE RECFM)SH\n10 /Times-Roman AF\n8280 46465 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FILE RECFM)SH\n/Times-Italic SF\n20586 XM\n(option)SH\n/Times-Roman SF\n8280 48857 MT\n(This sets the record format to use for incoming files.  Valid)192 W\n/Times-Italic SF\n34553 XM\n(option)SH\n/Times-Roman SF\n(s are \"Fixed\" and)\n192 W( \"Variable\" \\050the default\\051.)191 W\n8280 50053 MT\n(Fixed-format records are padded or truncated, as needed, to the current LRECL.)\n12 /Times-Bold AF\n8280 52641 MT\n(SET SEARCH-ALL)SH\n10 /Times-Roman AF\n8280 54055 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET SEARCH-ALL ON)SH\n/Times-Italic SF\n22386 XM\n(or)SH\n/Courier SF\n23875 XM\n(OFF)SH\n/Times-Roman SF\n8280 55846 MT\n(ON)SH\n12280 XM\n(If the user omits the filemode from)\n220 W( a SEND subcommand \\050or a GET request to the other Kermit\\051,)221 W\n12280 56951 MT\n(Kermit-CMS will search all accessed disks for the named file or files.)SH\n8280 58609 MT\n(OFF)SH\n12280 XM\n(If the)\n118 W( filemode is not specified, only the \"home\" disk and its read-only extensi\n12280 59714 MT\n(matching files.  \\050Default.\\051)SH\nES\n%%Page: 24 25\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 24)SH\n12 /Times-Bold AF\n27553 XM\n(Kermit User Guide: IBM VM/CMS KERMIT 2.3)SH\n46800 50 6120 5981 UL\n13 SS\n22693 8071 MT\n(The CWD Subcommand)SH\n10 /Times-Roman AF\n6120 10444 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(CWD)SH\n/Times-Italic SF\n11826 XM\n(letter)SH\n/Times-Roman SF\n6120 12836 MT\n(The CWD \\050Change Working Directory\\051 subcommand establishes a new default \\\n46 W( disk.)47 W\n/Times-Italic SF\n47549 XM\n(letter)SH\n/Times-Roman SF\n49957 XM\n(may be)47 W\n6120 14032 MT\n(the mode letter of any accessed disk.  Subsequent file transfers take place pre\n12 W( disk.)11 W\n6120 15228 MT\n(The initial home disk is ``)SH\n/Courier SF\n(A)SH\n/Times-Roman SF\n(''. Note:)\n250 W( setting the home disk in Kermit has no effect on the CMS search order.)SH\n13 /Times-Bold AF\n20309 18587 MT\n(The DIRECTORY Subcommand)SH\n10 /Times-Roman AF\n6120 20960 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(DIRECTORY \u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 23352 MT\n(Under Kermit-CMS, the DIRECTORY subcommand is identical to the CMS LISTFILE com\n13 /Times-Bold AF\n22151 26711 MT\n(The SPACE Subcommand)SH\n10 /Times-Roman AF\n6120 29084 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SPACE \u00a2)SH\n/Times-Italic SF\n(letter)SH\n/Courier SF\n(|)SH\n/Times-Roman SF\n6120 31476 MT\n(This subcommand displays the storage)\n87 W( allocation on the specified CMS disk.  If)88 W\n/Times-Italic SF\n39480 XM\n(letter)SH\n/Times-Roman SF\n41929 XM\n(is omitted, the default disk)88 W\n6120 32672 MT\n(specified by the CWD subcommand is displayed.  Aside from this default,)\n59 W( the subcommand is identical with CMS)58 W\n6120 33868 MT\n(QUERY DISK.)SH\n13 /Times-Bold AF\n22621 37227 MT\n(The GIVE Subcommand)SH\n10 /Times-Roman AF\n6120 39600 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(GIVE)SH\n/Times-Italic SF\n12426 XM\n(table-name filespec)350 W\n/Times-Roman SF\n6120 41992 MT\n(This subcommand compares the named table with its default values and saves the\n17 W( TAKE file named)18 W\n/Times-Italic SF\n6120 43188 MT\n(filespec)SH\n/Times-Roman SF\n(. The)\n358 W( format of)54 W\n/Times-Italic SF\n15999 XM\n(filespec)SH\n/Times-Roman SF\n19358 XM\n(is)SH\n/Courier SF\n20329 XM\n(fn \u00a2ft)\n54 W( \u00a2fm||)53 W\n/Times-Roman SF\n(. The)\n356 W( default filetype is ``)53 W\n/Courier SF\n(TAKE)SH\n/Times-Roman SF\n('', and the default filemode is)53 W\n6120 44384 MT\n(that of the \"home\" disk.  See the CWD subcommand.)SH\n13 /Times-Bold AF\n20345 47743 MT\n(The CP and CMS Subcommands)SH\n10 /Times-Roman AF\n6120 50116 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(CP)SH\n/Times-Italic SF\n11226 XM\n(or)SH\n/Courier SF\n12715 XM\n(CMS)SH\n/Times-Italic SF\n15115 XM\n(text of command)SH\n/Times-Roman SF\n6120 52508 MT\n(Although Kermit-CMS does not have a full set of its own subcommands for)\n52 W( managing local files, it provides those)53 W\n6120 53704 MT\n(services through the operating system.  You can issue any)\n147 W( CP or CMS command, but if Kermit-CMS has been)146 W\n6120 54900 MT\n(invoked as a normal user-area program, rather than as a high-memory)\n153 W( \"resident\" program or nucleus extension,)154 W\n6120 56096 MT\n(other user-area)\n86 W( CMS commands \\050such as COPYFILE\\051 are illegal.  Even then, you can lis\n6120 57292 MT\n(files, send messages, and so on.  The)SH\n/Courier SF\n21090 XM\n(CMS)SH\n/Times-Roman SF\n23140 XM\n(subcommand under Kermit is synonymous with the)SH\n/Courier SF\n44056 XM\n(HOST)SH\n/Times-Roman SF\n46706 XM\n(subcommand.)SH\n14 /Times-Bold AF\n6120 60894 MT\n(2.4. How to build an executable version of Kermit-CMS)SH\n10 /Times-Roman AF\n6120 63012 MT\n(Before attempting to build Kermit-CMS, look in the Kermit distribution under bo\n83 W( for an)84 W\n6120 64208 MT\n(installation document, as well as \"beware\", help, and update files, and read th\n63 W( They)\n375 W( will probably contain)62 W\n6120 65404 MT\n(information that is more current than what you see here.)SH\n6120 67796 MT\n(Kermit-CMS consists at present of a large assembly and a small optional one.  T\n178 W( assembly \\050KERMIT)179 W\n6120 68992 MT\n(ASSEMBLE\\051 contains the Kermit program, and the)\n52 W( small one \\050KERMBOOT ASSEMBLE\\051 is a bootstrap program)51 W\n6120 70188 MT\n(for loading Kermit into high memory and running it.  Although KERMBOOT is)\n188 W( all in one file in the Kermit)189 W\n6120 71384 MT\n(distribution, the source for Kermit itself is in many pieces, some generic for\n28 W( some specific to CMS.)27 W\nES\n%%Page: 25 26\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(2.4. How to build an executable version of Kermit-CMS)SH\n10 /Times-Italic AF\n51775 XM\n(Page 25)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n8280 7886 MT\n(All the necessary pieces)\n104 W( are sequenced in columns 73-80 so that the numbers form a strictly increa\n8280 9082 MT\n(when the pieces are correctly \"pasted\" together.  It is important to)\n88 W( preserve the original sequence numbers so that)87 W\n8280 10278 MT\n(updates, if any, can be applied to the source.)SH\n8280 12670 MT\n(To create a runnable version:)SH\n10280 14461 MT\n(1.)SH\n11280 XM\n(Combine the following ``)10 W\n/Courier SF\n(ASM)SH\n/Times-Roman SF\n('' files from the Kermit distribution into a single file with)10 W\n/Courier SF\n46664 XM\n(RECFM F)11 W\n/Times-Roman SF\n51136 XM\n(and)SH\n/Courier SF\n11280 15566 MT\n(LRECL 80)76 W\n/Times-Roman SF\n(: IK0DOC, IK0MAC, IKCMAC,)\n76 W( IK0DEF, IK0MAI, IK0CMD, IK0COM, IKCUTL, and)75 W\n11280 16671 MT\n(IK0PRO. The)\n390 W( resulting file is the composite source for)\n70 W( Kermit-CMS, called KERMIT ASSEMBLE.)71 W\n11280 17776 MT\n(This source must retain the original sequence numbers in)\n63 W( columns 73-80 \\050in other words, be sure not)62 W\n11280 18881 MT\n(to resequence the source accidentally by using the editor!\\051)SH\n10280 20539 MT\n(2.)SH\n11280 XM\n(Copy or rename IKCBOO ASM from the Kermit distribution)\n18 W( \\050if desired\\051 to a file called KERMBOOT)19 W\n11280 21644 MT\n(ASSEMBLE with)SH\n/Courier SF\n18781 XM\n(RECFM F)SH\n/Times-Roman SF\n23231 XM\n(and)SH\n/Courier SF\n24925 XM\n(LRECL 80)SH\n/Times-Roman SF\n(.)SH\n10280 23302 MT\n(3.)SH\n11280 XM\n(GLOBAL the)\n121 W( necessary MACLIBs.  Under VM/SP, these are DMSSP, CMSLIB, OSMACRO, and)12\n11280 24407 MT\n(TSOMAC.)SH\n10280 26065 MT\n(4.)SH\n11280 XM\n(Assemble the source file\\050s\\051.)SH\n10280 27723 MT\n(5.)SH\n11280 XM\n(Load one file into memory via:)35 W\n/Courier SF\n24211 XM\n(LOAD KERMIT)35 W\n/Times-Roman SF\n31131 XM\n(or)SH\n/Courier SF\n32249 XM\n(LOAD KERMBOOT)35 W\n/Times-Roman SF\n(. In)\n320 W( the former case, the entire)36 W\n11280 28828 MT\n(Kermit program is now loaded;)\n22 W( in the latter, only a bootstrap program which expects to find the object)2\n11280 29933 MT\n(file)SH\n/Courier SF\n13008 XM\n(KERMIT TEXT)145 W\n/Times-Roman SF\n20148 XM\n(at run time.  Under)\n145 W( CMS/SP Release 4 and above, there is a third and better)146 W\n11280 31038 MT\n(option, namely,)SH\n/Courier SF\n17780 XM\n(LOAD KERMIT \\050RLDSAVE\\051)SH\n/Times-Roman SF\n(.)SH\n10280 32696 MT\n(6.)SH\n11280 XM\n(Create the executable called)302 W\n/Courier SF\n23984 XM\n(KERMIT MODULE)302 W\n/Times-Roman SF\n32638 XM\n(via:)SH\n/Courier SF\n34689 XM\n(GENMOD KERMIT)301 W\n/Times-Roman SF\n(. Alternatively)\n852 W( \\050under)301 W\n11280 33801 MT\n(CMS/SP Release 3)\n112 W( and below\\051, create both KERMIT and KERMBOOT modules to give the user a\n11280 34906 MT\n(choice of user-area or high-memory execution.  Since Kermit-CMS is)\n193 W( serially reusable, it can be)192 W\n11280 36011 MT\n(reinvoked in the user area with the)\n42 W( START command, but the high-memory version must be reloaded)43 W\n11280 37116 MT\n(each time.  If Kermit is loaded using the RLDSAVE option \\050Release 4 and abov\n31 W( can, in)30 W\n11280 38221 MT\n(fact, be)\n26 W( run either way; the command)27 W\n/Courier SF\n26631 XM\n(NUCXLOAD KERMIT)27 W\n/Times-Roman SF\n35935 XM\n(will load Kermit \"permanently\" into high)27 W\n11280 39326 MT\n(memory as a nucleus extension for)\n9 W( invocation at need.  Note: the nucleus extension can be removed by)8 W\n11280 40431 MT\n(the command)SH\n/Courier SF\n16946 XM\n(NUCXDROP KERMIT)SH\n/Times-Roman SF\n(.)SH\n10280 42089 MT\n(7.)SH\n11280 XM\n(If your site's ASCII/EBCDIC)\n35 W( translation table for TTY lines does not conform to the one listed in the)\n11280 43194 MT\n(appendix \\050which in turn conforms to the one given in the IBM)\n28 W( System/370 Reference Summary\\051, then)27 W\n11280 44299 MT\n(enter the appropriate SET ATOE/ETOA/TATOE/TETOA)\n92 W( subcommands in the SYSTEM KERMINI)93 W\n11280 45404 MT\n(file, which should reside on)\n65 W( the same disk as KERMIT MODULE \\050and KERMIT TEXT\\051.)64 W\n/Times-Italic SF\n48711 XM\n(NOTE:)SH\n/Times-Roman SF\n51914 XM\n(If)SH\n11280 46509 MT\n(the ASCII/EBCDIC translation is not invertible, Kermit will not and cannot work\n14 /Times-Bold AF\n8280 50111 MT\n(2.5. What's New)SH\n10 /Times-Roman AF\n8280 52229 MT\n(Below is a list of the more important CMS-specific features in Version 4.0)\n12 W( of Kermit-CMS added since the previous)13 W\n8280 53425 MT\n(release, Version 3.1, in September 1986.  For the list of generic additions, se\n10280 55216 MT\n(1.)SH\n11280 XM\n(System commands issued)\n227 W( through Kermit via the)226 W\n/Courier SF\n32780 XM\n(CMS)SH\n/Times-Roman SF\n35056 XM\n(or)SH\n/Courier SF\n36365 XM\n(HOST)SH\n/Times-Roman SF\n39241 XM\n(subcommands are automatically)226 W\n11280 56321 MT\n(passed on to CP if \\050a\\051 CMS rejects them and \\050b\\051 IMPCP is set ON.)SH\n10280 57979 MT\n(2.)SH\n11280 XM\n(Kermit subcommands may be executed directly from CMS EXEC's.)SH\n10280 59637 MT\n(3.)SH\n11280 XM\n(Reject files known \\050via A-packets\\051 to be too big for available storage.)S\n10280 61295 MT\n(4.)SH\n11280 XM\n(Bypass user translation tables and set TERMINAL SCROLL CONT for protocol mode o\n10280 62953 MT\n(5.)SH\n11280 XM\n(KERMBOOT avoids the loading problem \\050)108 W\n/Courier SF\n(VIRTUAL STORAGE CAPACITY EXCEEDED)109 W\n/Times-Roman SF\n(\\051 due to)109 W\n11280 64058 MT\n(large GLOBAL TXTLIB's and preserves the untokenized command line so that Kermit\n42 W( may be given)41 W\n11280 65163 MT\n(mixed-case or long words as part of the initial command.)SH\nES\n%%Page: 26 27\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 26)SH\n12 /Times-Bold AF\n27553 XM\n(Kermit User Guide: IBM VM/CMS KERMIT 2.6)SH\n46800 50 6120 6071 UL\n14 SS\n6120 8138 MT\n(2.6. What's Missing)SH\n10 /Times-Roman AF\n6120 10256 MT\n(Work on Kermit-CMS will continue.  Features that need to be improved or added i\n/Symbol SF\n7910 12161 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Allow timeouts so Kermit-CMS does not wait forever if a packet does)\n96 W( not arrive in a timely fashion.)97 W\n8620 13266 MT\n(This is not possible under CMS at present.)SH\n/Symbol SF\n7910 15255 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Detect file properties from Attribute packets and allow overriding current para\n8620 16360 MT\n(implement file archiving.)SH\n/Symbol SF\n7910 18349 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Add a)SH\n/Courier SF\n11286 XM\n(SET REPEAT)SH\n/Times-Roman SF\n17536 XM\n(subcommand.)SH\n/Symbol SF\n7910 20338 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Finish)SH\n/Courier SF\n11372 XM\n(SET LINE)1 W\n/Times-Roman SF\n(, so that)\n1 W( Kermit-CMS can be used as a local Kermit, connecting to a remote host over)\n8620 21443 MT\n(an alternate communication port.  Add a)SH\n/Courier SF\n25006 XM\n(CONNECT)SH\n/Times-Roman SF\n29456 XM\n(subcommand.)SH\n/Symbol SF\n7910 23432 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Intercept CP messages during protocol mode, rather than)\n54 W( just suppressing them.  Display the messages)53 W\n8620 24537 MT\n(later or log them or send in packets as appropriate.)SH\n/Symbol SF\n7910 26526 MT\n(\\267)SH\n/Times-Roman SF\n8620 XM\n(Define EXEC variables from Kermit by analogy with the XEDIT EXTRACT subcommand.\nES\n%%Page: 27 28\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(3. IBM MVS/TSO KERMIT)SH\n10 /Times-Italic AF\n51775 XM\n(Page 27)SH\n46800 50 8280 6252 UL\n16 /Times-Bold AF\n8280 8272 MT\n(3. IBM MVS/TSO KERMIT)SH\n10 /Times-Italic AF\n8280 10566 MT\n(Program:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler)\n30 W( \\050Harvard/Smithsonian Center for Astrophysics\\051; contributions from Va\n15280 11671 MT\n(and Daphne Tzoar \\050Columbia U\\051, Bob Shields \\050U. Maryland\\051, Victor Le\n212 W( \\050Queens U.\\051, Gary)211 W\n15280 12776 MT\n(Bjerke \\050U.  Texas)\n66 W( at Austin\\051, Greg Small \\050UC Berkeley\\051, Clark Frazier \\050Harvard B\n15280 13881 MT\n(Bolch and Steve)\n20 W( Blankinship \\050Triangle\\051, Ron Rusnak \\050U. Chicago\\051, Roger Fajman\n15280 14986 MT\n(\\050NIH\\051, Andre Pirard \\050U. Liege\\051)SH\n/Times-Italic SF\n8280 16091 MT\n(Language:)SH\n/Times-Roman SF\n15280 XM\n(IBM/370 Assembler)SH\n/Times-Italic SF\n8280 17196 MT\n(Documentation:)SH\n/Times-Roman SF\n15280 XM\n(John Chandler \\050CfA\\051)SH\n/Times-Italic SF\n8280 18301 MT\n(Version:)SH\n/Times-Roman SF\n15280 XM\n(4.0 \\05088/1/31\\051)SH\n/Times-Italic SF\n8280 19406 MT\n(Date:)SH\n/Times-Roman SF\n15280 XM\n(1988 February)SH\n12 /Times-Bold AF\n8280 21994 MT\n(Kermit-TSO Capabilities At A Glance:)SH\n10 /Times-Roman AF\n9280 23785 MT\n(Local operation:)SH\n34480 XM\n(No)SH\n9280 24890 MT\n(Remote operation:)SH\n34480 XM\n(Yes)SH\n9280 25995 MT\n(Transfers text files:)SH\n34480 XM\n(Yes)SH\n9280 27100 MT\n(Transfers binary files:)SH\n34480 XM\n(Yes)SH\n9280 28205 MT\n(Wildcard send:)SH\n34480 XM\n(Yes)SH\n/Courier SF\n9280 29310 MT\n(\u00acX/\u00acZ)SH\n/Times-Roman SF\n12530 XM\n(interruption:)SH\n34480 XM\n(Yes \\050through micro\\051)SH\n9280 30415 MT\n(Filename collision avoidance:)SH\n34480 XM\n(Yes)SH\n9280 31520 MT\n(Can time out:)SH\n34480 XM\n(Yes)SH\n9280 32625 MT\n(8th-bit prefixing:)SH\n34480 XM\n(Yes)SH\n9280 33730 MT\n(Repeat count prefixing:)SH\n34480 XM\n(Yes)SH\n9280 34835 MT\n(Alternate block checks:)SH\n34480 XM\n(Yes)SH\n9280 35940 MT\n(Terminal emulation:)SH\n34480 XM\n(No)SH\n9280 37045 MT\n(Communication settings:)SH\n34480 XM\n(No)SH\n9280 38150 MT\n(Transmit BREAK:)SH\n34480 XM\n(No)SH\n9280 39255 MT\n(Transaction logging:)SH\n34480 XM\n(Yes)SH\n9280 40360 MT\n(Session logging:)SH\n34480 XM\n(No)SH\n9280 41465 MT\n(Raw transmit:)SH\n34480 XM\n(Yes \\050no prompts\\051)SH\n9280 42570 MT\n(Sliding window:)SH\n34480 XM\n(No)SH\n9280 43675 MT\n(Long packets:)SH\n34480 XM\n(Yes)SH\n9280 44780 MT\n(Act as server:)SH\n34480 XM\n(Yes)SH\n9280 45885 MT\n(Talk to server:)SH\n34480 XM\n(Yes)SH\n9280 46990 MT\n(Advanced server functions:)SH\n34480 XM\n(Yes)SH\n9280 48095 MT\n(Advanced commands for servers:)SH\n34480 XM\n(Yes)SH\n9280 49200 MT\n(Local file management:)SH\n34480 XM\n(Yes)SH\n9280 50305 MT\n(Handle Attribute Packets:)SH\n34480 XM\n(Yes)SH\n9280 51410 MT\n(Command/init files:)SH\n34480 XM\n(Yes)SH\n9280 52515 MT\n(Command macros:)SH\n34480 XM\n(No)SH\n8280 54306 MT\n(Kermit-TSO is a)\n78 W( member of the generic Kermit-370 family and shares most of the features an\n8280 55502 MT\n(group. As)\n526 W( its name implies, Kermit-TSO is the version of Kermit-370 that runs under\n8280 56698 MT\n(system. The)\n264 W( primary documentation for Kermit-TSO)\n7 W( is actually the chapter on Kermit-370, which describes general)8 W\n8280 57894 MT\n(properties; the present chapter assumes the reader is familiar with that materi\n93 W( the details specific to TSO)92 W\n8280 59090 MT\n(operation will be discussed here,)\n44 W( e.g., command syntax relating to the TSO file system or commands not offer\n8280 60286 MT\n(general by Kermit-370.)SH\n12 /Times-Bold AF\n8280 62874 MT\n(TSO Specifics of Kermit-370:)SH\n10 /Times-Roman AF\n9280 64665 MT\n(Global INIT file:)SH\n34480 XM\n(')SH\n/Courier SF\n(SYS1.KERMINI)SH\n/Times-Roman SF\n(')SH\n9280 65770 MT\n(User INIT file:)SH\n/Courier SF\n34480 XM\n(KERMINI)SH\n/Times-Roman SF\n9280 66875 MT\n(Debug packet log:)SH\n/Courier SF\n34480 XM\n(KER.LOG)SH\n/Times-Roman SF\n9280 67980 MT\n(Server reply log:)SH\n/Courier SF\n34480 XM\n(KER.REPLY)SH\n/Times-Roman SF\n9280 69085 MT\n(Maximum packet size:)SH\n34480 XM\n(1913)SH\n9280 70190 MT\n(Maximum disk LRECL:)SH\n34480 XM\n(32756)SH\nES\n%%Page: 28 29\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 28)SH\n12 /Times-Bold AF\n27151 XM\n(Kermit User Guide: IBM MVS/TSO KERMIT 3.1)SH\n46800 50 6120 6071 UL\n14 SS\n6120 8138 MT\n(3.1. The MVS/TSO File System)SH\n10 /Times-Roman AF\n6120 10256 MT\n(The features of the TSO)\n234 W( file system of greatest interest to Kermit users are the format of file s\n6120 11452 MT\n(\\050)SH\n/Times-Italic SF\n(filespecs)SH\n/Times-Roman SF\n(\\051 and the concept of records.  The latter is described in the Kermit-370 cha\n6120 13844 MT\n(The MVS/TSO)37 W\n/Times-Italic SF\n12583 XM\n(filespec)SH\n/Times-Roman SF\n15925 XM\n(\\050called the data set name or DSN\\051 takes the form of tokens \\050known as q\n37 W( up to 8)38 W\n6120 15040 MT\n(alphanumeric characters)\n205 W( each, separated by periods.  Each qualifier must begin with an alphabetic\n6120 16236 MT\n(character. The)\n530 W( total length must be no more than 44 characters,)\n140 W( including periods.  To be precise, a DSN may)141 W\n6120 17432 MT\n(contain uppercase letters, digits, and the special characters ``)24 W\n/Courier SF\n($)SH\n/Times-Roman SF\n('' \\050dollar sign\\051,)\n24 W( ``)23 W\n/Courier SF\n(#)SH\n/Times-Roman SF\n('' \\050pound sign\\051, ``)23 W\n/Courier SF\n(@)SH\n/Times-Roman SF\n('' \\050at sign\\051, and)23 W\n6120 18628 MT\n(``)SH\n/Courier SF\n(-)SH\n/Times-Roman SF\n('' \\050hyphen\\051 in addition to the separating periods.  Other characters may\n6120 21020 MT\n(There is another, structural restriction on data set names from the fact that T\n111 W( sets are all cataloged.  In a)112 W\n6120 22216 MT\n(standard MVS catalog, each qualifier of each DSN is associated with)\n88 W( an index of the same name.  The index is a)87 W\n6120 23412 MT\n(hierarchical catalog component which)\n132 W( points downward either to a list of next-level indices or to a data set,\n6120 24608 MT\n(never to both.  Consequently, a cataloged DSN is)\n35 W( a chain of indices corresponding one-for-one with DSN qualifers,)34 W\n6120 25804 MT\n(and the last index is a pointer to the data set itself.  While there may be man\n59 W( two)60 W\n6120 27000 MT\n(such duplicates may both be chained)\n24 W( to the same next-higher-level index, so that, if DSN's are considered as s\n6120 28196 MT\n(of qualifiers \\050not of characters\\051, no DSN can be a major substring of any\n/Courier SF\n(A.BB.C)SH\n/Times-Roman SF\n(')SH\n6120 29392 MT\n(exists in the catalog, then ')82 W\n/Courier SF\n(A.BB)SH\n/Times-Roman SF\n(' and ')82 W\n/Courier SF\n(A.BB.C.X)SH\n/Times-Roman SF\n(' are illegal, but ')82 W\n/Courier SF\n(A.B)SH\n/Times-Roman SF\n(', ')82 W\n/Courier SF\n(A.BB.Y)SH\n/Times-Roman SF\n(', ')82 W\n/Courier SF\n(A.BBB)SH\n/Times-Roman SF\n(', and)\n82 W( ')81 W\n/Courier SF\n(A.BB.BB)SH\n/Times-Roman SF\n(')SH\n6120 30588 MT\n(are all legal.)SH\n6120 32980 MT\n(A DSN given in its entirety \\050as in the foregoing examples\\051 is called \"ful\n6120 34176 MT\n(quotes when entered in TSO.  However,)\n203 W( by convention \\050and by definition\\051 the first qualifier of each data\n6120 35372 MT\n(belonging to a given user must be the user's logon ID, and, by default, that)\n25 W( ID is the assumed prefix in TSO when a)26 W\n6120 36568 MT\n(DSN is)35 W\n/Times-Italic SF\n9357 XM\n(not)SH\n/Times-Roman SF\n10920 XM\n(enclosed in quotes.  In practice, then, names)\n35 W( are abbreviated by omitting the quotes and the prefix.  The)34 W\n6120 37764 MT\n(most common type of name, in fact, consists of the prefix plus two more qualifi\n68 W( and)69 W\n6120 38960 MT\n(type, respectively, so that many files have DSN's that correspond exactly to th\n7 W( Kermit representation of a)6 W\n/Times-Italic SF\n6120 40156 MT\n(filespec)SH\n/Times-Roman SF\n(. For)\n408 W( instance,)79 W\n/Courier SF\n15657 XM\n(TEST.FORT)SH\n/Times-Roman SF\n21386 XM\n(is the source)\n79 W( of a Fortran program named TEST, and its fully qualified DSN)80 W\n6120 41352 MT\n(would be ')SH\n/Times-Italic SF\n(<userid>)SH\n/Courier SF\n(.TEST.FORT)SH\n/Times-Roman SF\n(', where)SH\n/Times-Italic SF\n23773 XM\n(<userid>)SH\n/Times-Roman SF\n27873 XM\n(is the owner's logon ID.)SH\n6120 43744 MT\n(While this description is complete as far as it goes, it omits an important fea\n78 W( that is widely used in organizing)77 W\n6120 44940 MT\n(files under)\n28 W( MVS and TSO, namely, the partitioned data set \\050PDS\\051.  A PDS is a dat\n6120 46136 MT\n(has)SH\n/Times-Italic SF\n7787 XM\n(members)SH\n/Times-Roman SF\n(, each of which can usually be treated as a file in)\n84 W( its own right.  In fact, with QSAM \\050the file access)83 W\n6120 47332 MT\n(method employed by Kermit and many other applications\\051, only)\n55 W( members, and not the whole PDS, may be read or)56 W\n6120 48528 MT\n(written. Thus,)\n268 W( the term \"file\", as used in this chapter and the Kermit-370 chapter, may\n9 W( PDS member)8 W\n6120 49724 MT\n(or an ordinary data set, but not)\n21 W( to a PDS.  The notation for a PDS member consists of the member name enclo\n6120 50920 MT\n(parentheses and appended to the DSN)\n204 W( \\050and the whole enclosed in quotes if the DSN is fully qualified\\051.\n6120 52116 MT\n(example, if the Fortran program)SH\n/Courier SF\n19173 XM\n(TEST)SH\n/Times-Roman SF\n21823 XM\n(were copied into a PDS called)SH\n/Courier SF\n34154 XM\n(DEBUG.FORT)SH\n/Times-Roman SF\n(, it would then be known as)SH\n/Courier SF\n8520 53771 MT\n(DEBUG.FORT\\050TEST\\051)SH\n/Times-Roman SF\n6120 55488 MT\n(Although the member name is written together with the DSN, it and the surroundi\n43 W( parentheses are not really part)44 W\n6120 56684 MT\n(of the DSN and are not counted toward the 44-character limit.  Still, a member\n6120 57880 MT\n(DSN qualifier and, in addition, must not contain any hyphens.)SH\n6120 60272 MT\n(All these properties of DSN's come into play)\n96 W( when a file is being received by Kermit-TSO because a valid DSN)97 W\n6120 61468 MT\n(must be generated for the new data set.  For example, any invalid character in\n/Times-Italic SF\n43209 XM\n(filespec)SH\n/Times-Roman SF\n46554 XM\n(is replaced)\n40 W( by a)39 W\n6120 62664 MT\n(pound sign \\050or)\n6 W( converted to uppercase if it is a lowercase letter\\051.  Also, each qualifi\n6120 63860 MT\n(is prefixed with a pound sign if it does not already begin with an alphabetic)\n6 W( or national character and then shortened,)5 W\n6120 65056 MT\n(if necessary, to eight characters.  If no)6 W\n/Times-Italic SF\n21663 XM\n(filespec)SH\n/Times-Roman SF\n24974 XM\n(is supplied, Kermit-TSO creates a default DSN of ``)6 W\n/Courier SF\n($.$)SH\n/Times-Roman SF\n(''. The)\n263 W( DSN)7 W\n6120 66252 MT\n(is expanded to its fully qualified form and then truncated at 44 characters, if\n6120 68644 MT\n(The DSN prefix, which defaults to the user's logon ID, is similar to a device s\n193 W( on microcomputer)192 W\n6120 69840 MT\n(systems: it selects an area)\n27 W( of disk storage, and it usually need not be specified.  In some ways, the\n6120 71036 MT\n(a disk directory designator, since the file system structure is hierarchical.\nES\n%%Page: 29 30\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(3.1. The MVS/TSO File System)SH\n10 /Times-Italic AF\n51775 XM\n(Page 29)SH\n46800 50 8280 5709 UL\n/Times-Roman SF\n8280 7886 MT\n(\"working directory\" is equated with a)\n26 W( particular DSN prefix under Kermit-TSO.  The current \"working directory\" i\n8280 9082 MT\n(the collection of all data sets whose names begin with the current prefix, and\n53 W( transfers take place preferentially)52 W\n8280 10278 MT\n(to and from that area \\050i.e., unless a fully qualified DSN is given\\051.)SH\n8280 12670 MT\n(To provide compatibility with other operating systems, when Kermit-TSO sends a\n123 W( makes a file)124 W\n8280 13866 MT\n(header with only the last two qualifiers of the full DSN \\050or only the member\n66 W( the case of a PDS member\\051.)65 W\n8280 15062 MT\n(On the other hand, extra information may be added by way of the SET FOREIGN sub\n8280 17454 MT\n(Kermit-TSO allows a group of files to be specified in a)\n30 W( single)31 W\n/Times-Italic SF\n33583 XM\n(filespec)SH\n/Times-Roman SF\n36919 XM\n(by including the special \"wildcard\" character)31 W\n8280 18650 MT\n(``)SH\n/Courier SF\n(*)SH\n/Times-Roman SF\n('', which matches any string of)\n47 W( characters \\050even a null string\\051 starting at a new DSN qualifier.  On\n/Courier SF\n52462 XM\n(*)SH\n/Times-Roman SF\n53358 XM\n(may)SH\n8280 19846 MT\n(be used in a)13 W\n/Times-Italic SF\n13332 XM\n(filespec)SH\n/Times-Roman SF\n(. Also,)\n278 W( the)14 W\n/Courier SF\n21054 XM\n(*)SH\n/Times-Roman SF\n21918 XM\n(may not be used for the member name of a PDS \\050nor for any part of a PDS name\n8280 21042 MT\n(Here are some examples:)SH\n/Courier SF\n9280 22833 MT\n(*.COBOL)SH\n/Times-Roman SF\n14280 XM\n(All files of type)SH\n/Courier SF\n20835 XM\n(COBOL)SH\n/Times-Roman SF\n24085 XM\n(\\050all COBOL source files\\051 in the current working directory.)SH\n/Courier SF\n9280 24491 MT\n(BATCH*H.FORT)SH\n/Times-Roman SF\n14280 25596 MT\n(All files in the current directory which begin with)\n21 W( the qualifier)22 W\n/Courier SF\n39760 XM\n(BATCH)SH\n/Times-Roman SF\n43032 XM\n(and which end with)22 W\n/Courier SF\n51230 XM\n(H.FORT)SH\n/Times-Roman SF\n(.)SH\n14280 26701 MT\n(This would not include)SH\n/Courier SF\n23780 XM\n(BATCH.FORT)SH\n/Times-Roman SF\n(, however.)SH\n8280 28492 MT\n(TSO files, like those in other)\n9 W( IBM 370 systems, are record-oriented \\050see the introduction to the Kermit\n8280 29688 MT\n(In particular, TSO files are characterized by record format \\050RECFM\\051, whic\n15 W( fixed-length, varying-length, or)16 W\n8280 30884 MT\n(undefined-length; by maximum record length \\050LRECL\\051; and by maximum block\n8 W( Fixed-length)\n265 W( and)7 W\n8280 32080 MT\n(varying-length may be \\050and, under Kermit, always)\n7 W( are\\051 combined into blocks, but undefined-length records may not.)8 W\n8280 33276 MT\n(Indeed, by convention, they have no logical record length, only a maximum)\n56 W( block size.  Records in TSO files may)55 W\n8280 34472 MT\n(be up to 32760 bytes long, but varying-length records use four bytes to)\n8 W( specify the length and have an effective limit)9 W\n8280 35668 MT\n(of 32756.)SH\n8280 38060 MT\n(Another file system feature of occasional interest is the means of reporting er\n38 W( encounters a)37 W\n8280 39256 MT\n(disk error, it attempts to prepare an explanatory message)\n48 W( for inclusion in the)49 W\n/Courier SF\n39626 XM\n(STATUS)SH\n/Times-Roman SF\n43525 XM\n(report. The)\n348 W( primary method)49 W\n8280 40452 MT\n(is the standard)SH\n/Courier SF\n14307 XM\n(SYNADAF)SH\n/Times-Roman SF\n18757 XM\n(macro.)SH\n14 /Times-Bold AF\n8280 44054 MT\n(3.2. Program Operation)SH\n10 /Times-Roman AF\n8280 46172 MT\n(At startup time, Kermit-TSO looks for two initialization files,)\n251 W( ')250 W\n/Courier SF\n(SYS1.KERMINI)SH\n/Times-Roman SF\n(' and ')250 W\n/Times-Italic SF\n(<userid>)SH\n/Courier SF\n(.KERMINI)SH\n/Times-Roman SF\n(')SH\n8280 47368 MT\n(\\050where, as before,)11 W\n/Times-Italic SF\n15726 XM\n(<userid>)SH\n/Times-Roman SF\n19837 XM\n(is the user's)\n11 W( logon ID\\051.  The latter file would also be known as just)12 W\n/Courier SF\n46956 XM\n(KERMINI)SH\n/Times-Roman SF\n(. The)\n274 W( file)12 W\n8280 48564 MT\n(')SH\n/Courier SF\n(SYS1.KERMINI)SH\n/Times-Roman SF\n(' would be maintained by a systems programmer, but)154 W\n/Courier SF\n38752 XM\n(KERMINI)SH\n/Times-Roman SF\n43356 XM\n(would be maintained)\n154 W( by the)153 W\n8280 49760 MT\n(user.)SH\n8280 52152 MT\n(Two parameters in the user's profile \\050the)\n88 W( character delete and line delete\\051 are disabled during protocol mode \\05\n8280 53348 MT\n(restored afterwards\\051 to prevent any conflict in case either of these charact\n52 W( been defined to be printable.  The)51 W\n8280 54544 MT\n(settings in effect when)\n19 W( Kermit starts up are saved as a sort of \"normal\" status snapshot \\050as op\n8280 55740 MT\n(status just described\\051.  The protocol)\n40 W( status is selected whenever Kermit enters protocol mode, and the normal st\n8280 56936 MT\n(is selected when Kermit leaves protocol mode.  Note: if)\n59 W( Kermit is interrupted in the midst of a transfer or while in)60 W\n8280 58132 MT\n(server mode, these parameters will be left with peculiar settings \\050namely, t\n8280 59328 MT\n(be restored by hand.)SH\n8280 61720 MT\n(Although TSO does not allow an application)\n57 W( program to take control of terminal synchronization on ``)58 W\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n('' lines,)58 W\n8280 62916 MT\n(the various full-screen emulation front ends are quite a different matter.  The\n110 W( IBM handshake \\050XON\\051 is)109 W\n8280 64112 MT\n(unnecessary, for example, with a 7171 or 4994 because the front end itself turn\n41 W( no)42 W\n8280 65308 MT\n(delay in transparent mode.  Thus, handshaking should be suppressed for ``)98 W\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' devices \\050the micro)\n98 W( Kermit)97 W\n8280 66504 MT\n(should have HANDSHAKE set OFF, and Kermit-TSO should have HANDSHAKE set to 0\\05\n137 W( Since)\n525 W( the generic)138 W\n8280 67700 MT\n(Kermit-370 default handshake \\050XON\\051 is retained)\n96 W( in Kermit-TSO, the subcommand ``)95 W\n/Courier SF\n(SET HANDSHAKE 0)95 W\n/Times-Roman SF\n('' is a)95 W\n8280 68896 MT\n(good candidate for inclusion the KERMINI file of any user who habitually uses `\n/Courier SF\n(SERIES1)SH\n/Times-Roman SF\n('' lines.)SH\nES\n%%Page: 30 31\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 30)SH\n12 /Times-Bold AF\n27151 XM\n(Kermit User Guide: IBM MVS/TSO KERMIT 3.2)SH\n46800 50 6120 5890 UL\n6120 8004 MT\n(Interactive Operation:)SH\n10 /Times-Roman AF\n6120 9418 MT\n(To run Kermit-TSO interactively, invoke the program from TSO by typing)SH\n/Courier SF\n36339 XM\n(KERMIT)SH\n/Times-Roman SF\n(. When)\n250 W( you see the prompt,)SH\n/Courier SF\n8520 11073 MT\n(Kermit-TSO>)SH\n/Times-Roman SF\n6120 12790 MT\n(you may type a)\n27 W( Kermit subcommand.  When the subcommand completes, Kermit issues another p\n6120 13986 MT\n(repeats until you exit from the program.  For example:)SH\n/Courier SF\n8520 15641 MT\n(KERMIT)SH\n3600 50 8520 15841 UL\n8520 17296 MT\n(Kermit-TSO Version 4.0 \\05088/1/31\\051)SH\n8520 18327 MT\n(Enter ? for a list of valid commands)SH\n8520 19982 MT\n(Kermit-TSO>send foo.*)SH\n6000 50 15120 20182 UL\n/Times-Italic SF\n9720 21697 MT\n(Files beginning with FOO are sent)SH\n/Courier SF\n8520 23352 MT\n(Kermit-TSO>receive test.spss)SH\n10200 50 15120 23552 UL\n/Times-Italic SF\n9720 25067 MT\n(File is received and called TEST.SPSS)SH\n/Courier SF\n8520 26722 MT\n(Kermit-TSO>exit)SH\n2400 50 15120 26922 UL\n12 /Times-Bold AF\n6120 29310 MT\n(Command Line Invocation:)SH\n10 /Times-Roman AF\n6120 30724 MT\n(Kermit-TSO may also)\n117 W( be invoked with command line arguments from TSO.  The arguments are inter\n6120 31920 MT\n(subcommand to be executed by Kermit after completion of the initialization.  Fo\n/Courier SF\n8520 33575 MT\n(KERMIT send test.fort)SH\n12600 50 8520 33775 UL\n/Times-Roman SF\n6120 35967 MT\n(Kermit will exit and return to TSO after completing the specified subcommand.)S\n12 /Times-Bold AF\n6120 38555 MT\n(CLIST Operation:)SH\n10 /Times-Roman AF\n6120 39969 MT\n(Like other TSO programs, Kermit-TSO may be invoked from a CLIST.  Subcommands c\n111 W( to Kermit)112 W\n6120 41165 MT\n(using the program input stack and/or command line arguments.  For example, to s\n6 W( have it act)5 W\n6120 42361 MT\n(as a server, include the line:)SH\n/Courier SF\n8520 44016 MT\n(KERMIT server)SH\n7800 50 8520 44216 UL\n/Times-Roman SF\n6120 45733 MT\n(To pass more than one subcommand, they must be stacked in the order in which th\n7 W( are to be executed.  To start up)8 W\n6120 46929 MT\n(a Kermit-TSO server with a three character CRC, create and stack a file with th\n/Courier SF\n8520 48584 MT\n(set block 3)SH\n6600 50 8520 48784 UL\n8520 49615 MT\n(server)SH\n3600 50 8520 49815 UL\n/Times-Roman SF\n6120 51332 MT\n(and then invoke Kermit.  Like)\n82 W( many utility programs, Kermit-TSO uses the GETLINE/PUTLINE service routine\n6120 52528 MT\n(for terminal I/O, and the nominally interactive subcommands can thus be supplie\n6120 53724 MT\n(way of)\n33 W( setting up multiple subcommands would be to collect the subcommands into a\n6120 54920 MT\n(TAKE subcommand via the command line.  Of course, CLIST's may be executed)\n93 W( from Kermit, either directly or)94 W\n6120 56116 MT\n(from a TAKE file, and)\n138 W( CLIST's in turn may freely issue Kermit subcommands.  The subcommand KERM\n6120 57312 MT\n(especially useful in this context for distinguishing Kermit subcommands from TS\n12 /Times-Bold AF\n6120 59900 MT\n(Server mode:)SH\n10 /Times-Roman AF\n6120 61314 MT\n(Command execution in)\n10 W( server mode is different in several respects from normal operation.  First\n6120 62510 MT\n(subcommands are not allowed \\050see the list of subcommands in the Kermit-370 c\n9 W( command errors)8 W\n6120 63706 MT\n(always terminate any active TAKE file.)\n202 W( Also,)\n656 W( commands run in a special environment with the User Profile)203 W\n6120 64902 MT\n(temporarily modified.  Another difference is that Kermit intercepts)\n70 W( terminal I/O as much as possible and transmits)69 W\n6120 66098 MT\n(the data to the local Kermit as text packets.  The)\n74 W( problem with this redirection is that some MVS/TSO commands)75 W\n6120 67294 MT\n(issue terminal)\n225 W( I/O directly, so that some messages never appear to the local Kermit \\050\n6120 68490 MT\n(packets\\051.)SH\nES\n%%Page: 31 32\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(3.3. Kermit-TSO Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 31)SH\n46800 50 8280 6071 UL\n14 /Times-Bold AF\n8280 8138 MT\n(3.3. Kermit-TSO Subcommands)SH\n10 /Times-Roman AF\n8280 10256 MT\n(Kermit-TSO supports)\n101 W( all the subcommands described in the corresponding section of the Kermit-\n8280 11452 MT\n(addition, there is the system-specific subcommand)376 W\n/Courier SF\n31006 XM\n(TSO)SH\n/Times-Roman SF\n(, which)\n376 W( is just a synonym for the generic)375 W\n/Courier SF\n52680 XM\n(HOST)SH\n/Times-Roman SF\n8280 12648 MT\n(subcommand.)SH\n/Courier SF\n14363 XM\n(TSO)SH\n/Times-Roman SF\n16413 XM\n(can be issued as a remote)\nSH( Kermit command when Kermit-TSO is in server mode.  Also, the)1 W\n/Courier SF\n53280 XM\n(END)SH\n/Times-Roman SF\n8280 13844 MT\n(subcommand is available as a synonym for)SH\n/Courier SF\n25750 XM\n(EXIT)SH\n/Times-Roman SF\n28400 XM\n(and)SH\n/Courier SF\n30094 XM\n(QUIT)SH\n/Times-Roman SF\n(.)SH\n8280 16236 MT\n(The remainder of this section concentrates on the subcommands that)\n18 W( have special form or meaning for Kermit-TSO.)17 W\n8280 17432 MT\n(See also the chapter on Kermit-370 for further details.)SH\n13 /Times-Bold AF\n24708 20791 MT\n(The SEND Subcommand)SH\n10 /Times-Roman AF\n8280 23164 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SEND)SH\n/Times-Italic SF\n14236 XM\n(filespec)SH\n/Times-Roman SF\n17541 XM\n(\u00a2)SH\n/Times-Italic SF\n(foreign-filespec)SH\n/Times-Roman SF\n(|)SH\n8280 25556 MT\n(The SEND subcommand causes a file or file group to be sent from TSO to the Kerm\n73 W( the other system.  DSN)74 W\n8280 26752 MT\n(prefixing is done on the)SH\n/Times-Italic SF\n18029 XM\n(filespec)SH\n/Times-Roman SF\n21334 XM\n(in the usual way \\050see also the CWD subcommand\\051.)SH\n/Times-Italic SF\n8280 29144 MT\n(filespec)SH\n/Times-Roman SF\n11585 XM\n(may contain a wildcard ``)SH\n/Courier SF\n(*)SH\n/Times-Roman SF\n(''. If)\n250 W( it does, then all matching files will be sent, up to 711 files in all.)SH\n8280 31536 MT\n(The)SH\n/Times-Italic SF\n10177 XM\n(foreign-filespec)SH\n/Times-Roman SF\n(, if any, is)\n92 W( used for the file header of the outgoing file, replacing the usual name.ty\n8280 32732 MT\n(from the MVS/TSO)72 W\n/Times-Italic SF\n16746 XM\n(filespec)SH\n/Times-Roman SF\n(. Normally,)\n394 W( this form of the SEND)\n72 W( subcommand is used only for single files because)73 W\n8280 33928 MT\n(the)SH\n/Times-Italic SF\n9752 XM\n(foreign-filespec)SH\n/Times-Roman SF\n16279 XM\n(is used only for the first file of a group \\050subsequent files having default\n8280 36320 MT\n(Although the file transfer cannot be cancelled from the TSO side, Kermit-TSO is\n63 W( responding to \"cancel)62 W\n8280 37516 MT\n(file\" or \"cancel batch\" signals from the local Kermit; these are typically ente\n57 W( Control-X or Control-Z,)58 W\n8280 38712 MT\n(respectively.)SH\n13 /Times-Bold AF\n23480 42071 MT\n(The RECEIVE Subcommand)SH\n10 /Times-Roman AF\n8280 44444 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(RECEIVE)SH\n/Times-Roman SF\n16036 XM\n(\u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Times-Roman SF\n(|)SH\n8280 46836 MT\n(The RECEIVE subcommand tells Kermit to receive a file or file group)\n113 W( from the other system.  You should then)112 W\n8280 48032 MT\n(issue a SEND subcommand to the other Kermit.)SH\n8280 50424 MT\n(A)SH\n/Times-Italic SF\n9290 XM\n(filespec)SH\n/Times-Roman SF\n12633 XM\n(in the subcommand indicates what name the incoming file should be given.  Wildc\n8280 51620 MT\n(If the)21 W\n/Times-Italic SF\n10710 XM\n(filespec)SH\n/Times-Roman SF\n14036 XM\n(is invalid, Kermit-TSO will suppress the transfer.  If the optional)21 W\n/Times-Italic SF\n40459 XM\n(filespec)SH\n/Times-Roman SF\n43785 XM\n(is omitted \\050and,)\n21 W( in any case,)20 W\n8280 52816 MT\n(for all files after the first in a group\\051 Kermit-TSO will use the name\\050s\\\n59 W( other Kermit.  If a name is)60 W\n8280 54012 MT\n(not a legal DSN, Kermit-TSO will delete excess characters,)\n64 W( change illegal characters to pound signs, and so on, to)63 W\n8280 55208 MT\n(create a legal name.)SH\n8280 57600 MT\n(When the record format is ``)228 W\n/Courier SF\n(F)SH\n/Times-Roman SF\n('', any received record longer than the logical record length \\050LRECL\\051)\n228 W( will be)229 W\n8280 58796 MT\n(truncated, and)\n70 W( shorter records will be padded.  The padding character is a blank for text\n8280 59992 MT\n(files. Received)\n278 W( binary \\050but not V-binary or D-binary\\051 files are treated as byte str\n14 W( into records all)15 W\n8280 61188 MT\n(of the logical record length.  See the SET)\n94 W( FILE TYPE, SET FILE LRECL, SET FILE BLKSIZE, and SET FILE)93 W\n8280 62384 MT\n(RECFM subcommands.)SH\n8280 64776 MT\n(If an error occurs during the file transfer, as much of the file as)\n62 W( was received is saved on disk.  If the sending of a)63 W\n8280 65972 MT\n(file is cancelled by)\n50 W( the user of the foreign system, Kermit-TSO will discard whatever had arriv\n8280 67168 MT\n(is ON or INCOMPLETE is KEEP.)SH\n8280 69560 MT\n(If the incoming file has the same name as an existing file \\050either a data se\n68 W( or a PDS member\\051, and WARNING is)69 W\n8280 70756 MT\n(OFF, the original file will be overwritten.  If WARNING is set ON,)\n42 W( however, Kermit-TSO will protect the existing)41 W\n8280 71952 MT\n(file in one of two ways.  If the)212 W\n/Times-Italic SF\n22519 XM\n(filespec)SH\n/Times-Roman SF\n26037 XM\n(was entered with the subcommand, Kermit will prompt the user for)213 W\nES\n%%Page: 32 33\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 32)SH\n12 /Times-Bold AF\n27151 XM\n(Kermit User Guide: IBM MVS/TSO KERMIT 3.3)SH\n46800 50 6120 5709 UL\n10 /Times-Roman AF\n6120 7886 MT\n(permission to overwrite the file.  If the)229 W\n/Times-Italic SF\n23644 XM\n(filespec)SH\n/Times-Roman SF\n27178 XM\n(came from the foreign Kermit, Kermit-TSO will)\n229 W( change the)228 W\n6120 9082 MT\n(incoming name so as not to obliterate the pre-existing file.  It attempts to fi\n6120 10278 MT\n(modifying the original and checking for the existence of such a file at)\n109 W( each step.  The procedure operates on the)108 W\n6120 11474 MT\n(second qualifier of the full DSN \\050or the member name in the case of a PDS me\n44 W( and begins by truncating it to)45 W\n6120 12670 MT\n(seven characters, if necessary, and then)\n62 W( appends ``)61 W\n/Courier SF\n(0)SH\n/Times-Roman SF\n(''. If)\n372 W( a file by that name exists, Kermit then replaces the ``)61 W\n/Courier SF\n(0)SH\n/Times-Roman SF\n('')SH\n6120 13866 MT\n(with a ``)SH\n/Courier SF\n(1)SH\n/Times-Roman SF\n(''. It)\n250 W( continues in this manner up to ``)SH\n/Courier SF\n(9)SH\n/Times-Roman SF\n('', and if an unused name cannot be found, the transfer fails.)SH\n13 /Times-Bold AF\n23054 17225 MT\n(The SET Subcommand)SH\n10 /Times-Roman AF\n6120 19598 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET)SH\n/Times-Italic SF\n11476 XM\n(parameter)SH\n/Times-Roman SF\n15892 XM\n(\u00a2)SH\n/Times-Italic SF\n(value)SH\n/Times-Roman SF\n(|)SH\n6120 21990 MT\n(The SET subcommand)\n142 W( establishes or modifies various parameters controlling file transfers.  T\n6120 23186 MT\n(parameters are available in Kermit-TSO, but not in Kermit-370 in general:)SH\n6120 24796 MT\n(FILE)SH\n6620 25901 MT\n(BLKSIZE)SH\n20520 XM\n(Block size for incoming file.)SH\n6620 27006 MT\n(LRECL)SH\n20520 XM\n(Logical Record length for incoming file.)SH\n6620 28111 MT\n(RECFM)SH\n20520 XM\n(Record format for incoming files.)SH\n6620 29216 MT\n(SPACE)SH\n20520 XM\n(Allocation unit \\050in tracks\\051 for incoming files.)SH\n6620 30321 MT\n(UNIT)SH\n20520 XM\n(Device type for incoming files.)SH\n6620 31426 MT\n(VOLUME)SH\n20520 XM\n(Disk pack for incoming files.)SH\n6120 32531 MT\n(PREFIX)SH\n20520 XM\n(Default disk area.)SH\n6120 33636 MT\n(TIMER)SH\n20520 XM\n(Determine whether Kermit-TSO should time out.)SH\n12 /Times-Bold AF\n6120 36224 MT\n(SET FILE BLKSIZE)SH\n10 /Times-Roman AF\n6120 37638 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET FILE BLKSIZE)SH\n/Times-Italic SF\n19276 XM\n(number)SH\n/Times-Roman SF\n6120 40030 MT\n(This sets the block size for incoming files to a)138 W\n/Times-Italic SF\n26165 XM\n(number)SH\n/Times-Roman SF\n29608 XM\n(from 1 to 32760.)\n138 W( In)\n524 W( the case of fixed-format files, this)137 W\n6120 41226 MT\n(number is just an upper bound;)\n8 W( the actual block size is taken to be the largest multiple of the LRECL whic\n6120 42422 MT\n(exceed this limit.  The default is 6233.)SH\n12 /Times-Bold AF\n6120 45010 MT\n(SET FILE LRECL)SH\n10 /Times-Roman AF\n6120 46424 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET FILE LRECL)SH\n/Times-Italic SF\n18076 XM\n(number)SH\n/Times-Roman SF\n6120 48816 MT\n(This sets the effective logical record length)\n55 W( for incoming files to a)54 W\n/Times-Italic SF\n33436 XM\n(number)SH\n/Times-Roman SF\n36795 XM\n(from 1 to 32756.  This parameter is not)54 W\n6120 50012 MT\n(used for files of undefined record format.  Moreover, it is not exactly the sam\n50 W( is)51 W\n6120 51208 MT\n(four more than the actual maximum data length for varying-length records.  The\n12 /Times-Bold AF\n6120 53796 MT\n(SET FILE RECFM)SH\n10 /Times-Roman AF\n6120 55210 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET FILE RECFM)SH\n/Times-Italic SF\n18076 XM\n(option)SH\n/Times-Roman SF\n6120 57602 MT\n(This sets the record)\n188 W( format to use for incoming files.  Valid)187 W\n/Times-Italic SF\n32336 XM\n(option)SH\n/Times-Roman SF\n(s are \"Fixed\", \"Varying\" \\050the default\\051, and)187 W\n6120 58798 MT\n(\"Undefined\". This)\n326 W( parameter is thus limited to a subset of the range of possibilities for t\n38 W( MVS/TSO RECFM.  In)39 W\n6120 59994 MT\n(Kermit-TSO, all incoming files of fixed)\n46 W( or varying format are automatically blocked according to the current block\n6120 61190 MT\n(size. Fixed-format)\n250 W( records are padded or truncated, as needed, to the current LRECL.)SH\n12 /Times-Bold AF\n6120 63778 MT\n(SET FILE SPACE)SH\n10 /Times-Roman AF\n6120 65192 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(SET FILE SPACE)SH\n/Times-Italic SF\n18076 XM\n(number)SH\n/Times-Roman SF\n6120 67584 MT\n(This sets the track allocation unit for incoming files to a number from 1 to 32\n31 W( 5.  Since data sets)32 W\n6120 68780 MT\n(are allowed as many as 15 extents, this default provides for files up to 75 tra\nES\n%%Page: 33 34\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(3.3. Kermit-TSO Subcommands)SH\n10 /Times-Italic AF\n51775 XM\n(Page 33)SH\n46800 50 8280 5890 UL\n12 /Times-Bold AF\n8280 8004 MT\n(SET FILE UNIT)SH\n10 /Times-Roman AF\n8280 9418 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FILE UNIT)SH\n/Times-Italic SF\n19636 XM\n(type)SH\n/Times-Roman SF\n8280 11810 MT\n(This sets the device type or group for incoming files.  Valid)159 W\n/Times-Italic SF\n34324 XM\n(option)SH\n/Times-Roman SF\n(s are installation-dependent.  The default)\n159 W( is)158 W\n/Courier SF\n8280 13006 MT\n(SYSDA)SH\n/Times-Roman SF\n(, which is)\n38 W( universally available, but not necessarily desirable, since many installat\n8280 14202 MT\n(to a particular set)\n136 W( of disk volumes.  In such cases, there is usually a unit name which refer\n8280 15398 MT\n(volumes, and the global)SH\n/Courier SF\n18085 XM\n(INIT)SH\n/Times-Roman SF\n20735 XM\n(file)SH\n/Courier SF\n22318 XM\n('SYS1.KERMINI')SH\n/Times-Roman SF\n30968 XM\n(should set the file unit parameter to that name.)SH\n12 /Times-Bold AF\n8280 17986 MT\n(SET FILE VOLUME)SH\n10 /Times-Roman AF\n8280 19400 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET FILE VOLUME)SH\n/Times-Italic SF\n20836 XM\n(name)SH\n/Times-Roman SF\n8280 21792 MT\n(This sets the disk volume for incoming files.  Valid)23 W\n/Times-Italic SF\n29315 XM\n(names)SH\n/Times-Roman SF\n(s are)\n23 W( installation-dependent, but are, in any case, no more)24 W\n8280 22988 MT\n(than six alphanumeric characters.)\n42 W( The)\n332 W( default is blank \\050none\\051; in that case, the system chooses one of th\n8280 24184 MT\n(volumes of the specified UNIT type.)SH\n12 /Times-Bold AF\n8280 26772 MT\n(SET PREFIX)SH\n10 /Times-Roman AF\n8280 28186 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET PREFIX)SH\n/Times-Roman SF\n17836 XM\n(\u00a2)SH\n/Times-Italic SF\n(string)SH\n/Times-Roman SF\n(|)SH\n8280 30578 MT\n(This subcommand is equivalent to the CWD subcommand \\050q.v.\\051.)SH\n12 /Times-Bold AF\n8280 33166 MT\n(SET TIMER)SH\n10 /Times-Roman AF\n8280 34580 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(SET TIMER ON)SH\n/Times-Italic SF\n19386 XM\n(or)SH\n/Courier SF\n20875 XM\n(OFF)SH\n/Times-Roman SF\n8280 36972 MT\n(This specifies whether Kermit-TSO is to maintain a timer for each packet it exp\n44 W( read.  The default is ON.  If)45 W\n8280 38168 MT\n(the timer is enabled, its duration)\n5 W( is set by the SET SEND TIMEOUT subcommand initially and then set according\n8280 39364 MT\n(the request of the other Kermit.)SH\n13 /Times-Bold AF\n24853 42723 MT\n(The CWD Subcommand)SH\n10 /Times-Roman AF\n8280 45096 MT\n(Syntax:)SH\n/Courier SF\n11586 XM\n(CWD)SH\n/Times-Roman SF\n13636 XM\n(\u00a2)SH\n/Times-Italic SF\n(string or PDSname)SH\n/Times-Roman SF\n(\\050\\051|)SH\n8280 47488 MT\n(The CWD \\050Change)\n79 W( Working Directory\\051 subcommand establishes a new default DSN prefix or t\n8280 48684 MT\n(This facility is similar to, but not quite the same as, the)\n56 W( prefix defined in the User Profile.  The)55 W\n/Times-Italic SF\n47415 XM\n(string)SH\n/Times-Roman SF\n(, if specified,)55 W\n8280 49880 MT\n(must consist)\n44 W( of one or more DSN qualifiers, and the first must already be an index in t\n8280 51076 MT\n(file transfers take)\n83 W( place to and from the corresponding disk area whenever a fully qualified D\n8280 52272 MT\n(quotes\\051 is not given.  The initial prefix is the user's logon ID, i.e.,)\n31 W( the same as the default prefix in the User Profile.)32 W\n8280 53468 MT\n(If no prefix)\n169 W( is given in this subcommand, then prefixing is no longer performed.  The\n8280 54664 MT\n(remember the distinction between the prefix)\n37 W( defined for Kermit and that for TSO.  Pure Kermit subcommands \\050like)38\n/Courier SF\n8280 55860 MT\n(SEND)SH\n/Times-Roman SF\n11047 XM\n(and)SH\n/Courier SF\n12857 XM\n(TAKE)SH\n/Times-Roman SF\n(\\051 always use the former, but TSO commands \\050and the TSO-related subcommand\n/Courier SF\n49060 XM\n(TYPE)SH\n/Times-Roman SF\n(\\051 use the)116 W\n8280 57056 MT\n(latter.)SH\n8280 59448 MT\n(An alternative form of the CWD subcommand allows specifying the full \\050but un\n8280 60644 MT\n(paired parentheses.  When such a \"working directory\" is in use, a)47 W\n/Times-Italic SF\n35154 XM\n(filespec)SH\n/Times-Roman SF\n38506 XM\n(other than a fully qualified)\n47 W( DSN is taken)46 W\n8280 61840 MT\n(to be a member name within the)\n52 W( PDS.  For that reason, this form should be used cautiously, since the Kerm\n8280 63036 MT\n(log)SH\n/Times-Italic SF\n9856 XM\n(filespecs)SH\n/Times-Roman SF\n13598 XM\n(\\050such as)48 W\n/Courier SF\n17193 XM\n(KER.LOG)SH\n/Times-Roman SF\n21691 XM\n(and)SH\n/Courier SF\n23433 XM\n(KER.REPLY)SH\n/Times-Roman SF\n(\\051 would be)\n48 W( treated the same way.  In particular, it is advisable to)47 W\n8280 64232 MT\n(turn on debug mode only when the Kermit prefix is a partially qualified DSN)\n33 W( \\050once started, the log continues to the)34 W\n8280 65428 MT\n(same data set regardless of what happens to the prefix\\051.)SH\nES\n%%Page: 34 35\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 34)SH\n12 /Times-Bold AF\n27151 XM\n(Kermit User Guide: IBM MVS/TSO KERMIT 3.3)SH\n46800 50 6120 5981 UL\n13 SS\n20309 8071 MT\n(The DIRECTORY Subcommand)SH\n10 /Times-Roman AF\n6120 10444 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(DIRECTORY)SH\n/Times-Roman SF\n15076 XM\n(\u00a2)SH\n/Times-Italic SF\n(filespec)SH\n/Times-Roman SF\n(|)SH\n6120 12836 MT\n(The DIRECTORY subcommand uses the TSO LISTCAT command to display part of)\n82 W( the data set catalog, i.e., all)81 W\n6120 14032 MT\n(data sets whose names begin with the qualifiers)\n20 W( in the Kermit prefix \\050if any\\051 concatenated with the given)21 W\n/Times-Italic SF\n48650 XM\n(filespec)SH\n/Times-Roman SF\n51976 XM\n(\\050if)SH\n6120 15228 MT\n(any\\051.)SH\n13 /Times-Bold AF\n22982 18587 MT\n(The TSO Subcommand)SH\n10 /Times-Roman AF\n6120 20960 MT\n(Syntax:)SH\n/Courier SF\n9426 XM\n(TSO)SH\n/Times-Italic SF\n11476 XM\n(text of command)SH\n/Times-Roman SF\n6120 23352 MT\n(Although Kermit-TSO does not have a full set of its own subcommands for managin\n68 W( files, it provides those)67 W\n6120 24548 MT\n(services through the operating system.  You)\n52 W( can issue any TSO command, e.g., to list, type, rename or delete files,)53\n6120 25744 MT\n(send messages, and so on.  The)SH\n/Courier SF\n18868 XM\n(TSO)SH\n/Times-Roman SF\n20918 XM\n(subcommand under Kermit is synonymous with the)SH\n/Courier SF\n41834 XM\n(HOST)SH\n/Times-Roman SF\n44484 XM\n(subcommand.)SH\n14 /Times-Bold AF\n6120 29346 MT\n(3.4. How to build an executable version of Kermit-TSO)SH\n10 /Times-Roman AF\n6120 31464 MT\n(Before attempting to build Kermit-TSO, look in the Kermit distribution)\n101 W( under both IK0KER and IKTKER for an)100 W\n6120 32660 MT\n(installation document, as well as)\n62 W( \"beware\", help, and update files, and read them first.  They will probably\n6120 33856 MT\n(information that is more current than what you see here.)SH\n6120 36248 MT\n(Kermit-TSO consists at present of a large assembly \\050KERMIT.ASM, containing t\n89 W( small)88 W\n6120 37444 MT\n(one \\050DYNALC.ASM, containing a subroutine for allocating data sets\\051.  Alth\n83 W( a single file in the)84 W\n6120 38640 MT\n(Kermit distribution, the source for Kermit itself is in many pieces, some)\n2 W( generic for Kermit-370 and some specific to)1 W\n6120 39836 MT\n(TSO. All)\n588 W( the necessary pieces are sequenced in columns 73-80 so that the numbers f\n6120 41032 MT\n(sequence when the pieces are correctly \"pasted\" together.)\n33 W( It)\n314 W( is important to preserve the original sequence numbers)32 W\n6120 42228 MT\n(so that updates, if any, can be applied to the source.)SH\n6120 44620 MT\n(To create a runnable version:)SH\n8120 46411 MT\n(1.)SH\n9120 XM\n(Combine the following ``)4 W\n/Courier SF\n(ASM)SH\n/Times-Roman SF\n('' files from the Kermit distribution into a single file with)4 W\n/Courier SF\n44420 XM\n(RECFM=F\\050B\\051)SH\n/Times-Roman SF\n9120 47516 MT\n(and)SH\n/Courier SF\n10911 XM\n(LRECL=80)SH\n/Times-Roman SF\n(: IK0DOC,)\n97 W( IK0MAC, IKTMAC, IK0DEF, IK0MAI, IK0CMD, IK0COM, IKTUTL,)96 W\n9120 48621 MT\n(and IK0PRO.  The resulting)\n14 W( file is the composite source for Kermit-TSO, called KERMIT.ASM.  This)15 W\n9120 49726 MT\n(source must retain the original sequence numbers in columns 73-80 \\050in other\n9120 50831 MT\n(resequence the source accidentally by using the editor!\\051)SH\n8120 52489 MT\n(2.)SH\n9120 XM\n(Copy or rename IKTDYN.ASM from the Kermit distribution)\n149 W( to a file called DYNALC.ASM with)150 W\n/Courier SF\n9120 53594 MT\n(RECFM=F\\050B\\051)SH\n/Times-Roman SF\n15370 XM\n(and)SH\n/Courier SF\n17064 XM\n(LRECL=80)SH\n/Times-Roman SF\n(.)SH\n8120 55252 MT\n(3.)SH\n9120 XM\n(Assemble the source file\\050s\\051.)SH\n8120 56910 MT\n(4.)SH\n9120 XM\n(Create the executable load)\n75 W( module)74 W\n/Courier SF\n23573 XM\n(KERMIT)SH\n/Times-Roman SF\n27497 XM\n(using the linkage editor.  Kermit is designed to run as a)74 W\n9120 58015 MT\n(command processor, and so it must be placed)\n266 W( in SYS1.CMDLIB or in a PDS concatenated to)267 W\n9120 59120 MT\n(SYS1.CMDLIB \\050for example, via the STEPLIB command\\051.)SH\n8120 60778 MT\n(5.)SH\n9120 XM\n(If your site's ASCII/EBCDIC translation table for TTY lines does not conform to\n36 W( listed in the)35 W\n9120 61883 MT\n(appendix \\050which in turn conforms)\n27 W( to the one given in the IBM System/370 Reference Summary\\051, then)28 W\n9120 62988 MT\n(enter the appropriate SET)\n318 W( ATOE/ETOA/TATOE/TETOA subcommands into 'SYS1.KERMINI'.)317 W\n/Times-Italic SF\n9120 64093 MT\n(NOTE:)SH\n/Times-Roman SF\n12259 XM\n(If the ASCII/EBCDIC translation is not invertible, Kermit will not and cannot w\n6120 66485 MT\n(In order to)\n213 W( verify the operation of a new version of Kermit-TSO, you may run it under\n6120 67681 MT\n(parameter.)SH\nES\n%%Page: 35 36\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(Portable 370 Kermit)SH\n10 /Times-Italic AF\n51775 XM\n(Page 35)SH\n46800 50 8280 5709 UL\n14 /Times-Bold AF\n8280 8138 MT\n(3.5. What's New)SH\n10 /Times-Roman AF\n8280 10256 MT\n(Below is a list of the more important features in Version)\n20 W( 4.0 of Kermit-TSO added since the release of TSO/3708 in)19 W\n8280 11452 MT\n(May 1987.)\n89 W( Since)\n430 W( Version 4.0 is the first release of Kermit-370 for TSO, some of the \"new\"\n8280 12648 MT\n(new only to the Columbia TSO distribution.)SH\n10280 14439 MT\n(1.)SH\n11280 XM\n(Suppression of LINE and CHAR delete functions during protocol mode.)SH\n10280 16097 MT\n(2.)SH\n11280 XM\n(Advanced server functions and subcommands for talking to another Kermit running\n10280 17755 MT\n(3.)SH\n11280 XM\n(Long packet protocol.)SH\n10280 19413 MT\n(4.)SH\n/Courier SF\n11280 XM\n(TYPE)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n14180 XM\n(ECHO)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n17080 XM\n(XTYPE)SH\n/Times-Roman SF\n(, and)SH\n/Courier SF\n22274 XM\n(XECHO)SH\n/Times-Roman SF\n25524 XM\n(subcommands \\050the last two being Series/1 analogs of the first two.\\051)SH\n10280 21071 MT\n(5.)SH\n11280 XM\n(REMOTE KERMIT commands honored by TSO server, including)276 W\n/Courier SF\n40402 XM\n(SET)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n42978 XM\n(SHOW)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n46154 XM\n(TAKE)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n49330 XM\n(TDUMP)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n11280 22176 MT\n(STATUS)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n15380 XM\n(HOST)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n18280 XM\n(TSO)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n20580 XM\n(CWD)SH\n/Times-Roman SF\n(,)SH\n/Courier SF\n22880 XM\n(DIR)SH\n/Times-Roman SF\n(, and)SH\n/Courier SF\n26874 XM\n(TYPE)SH\n/Times-Roman SF\n(.)SH\n10280 23834 MT\n(6.)SH\n11280 XM\n(TEST mode for debugging.)SH\n10280 25492 MT\n(7.)SH\n11280 XM\n(Multi-column, two-level, selective SHOW display.)SH\n10280 27150 MT\n(8.)SH\n11280 XM\n(Send and acknowledge attribute packets.)SH\n10280 28808 MT\n(9.)SH\n11280 XM\n(Optionally append to, rather than replace, old data sets with duplicate names.)\n9780 30466 MT\n(10.)SH\n11280 XM\n(Automatic detection of terminal controller type \\050)SH\n/Courier SF\n(TTY)SH\n/Times-Roman SF\n32827 XM\n(or)SH\n/Courier SF\n33910 XM\n(SERIES1)SH\n/Times-Roman SF\n(\\051.)SH\n9780 32124 MT\n(11.)SH\n11280 XM\n(SYNADAF message in cases of disk I/O error.)SH\n14 /Times-Bold AF\n8280 35726 MT\n(3.6. What's Missing)SH\n10 /Times-Roman AF\n8280 37844 MT\n(Work on Kermit-TSO will continue.  Features that need to be improved or added i\n/Symbol SF\n10070 39749 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Detect file properties from Attribute packets and allow overriding current para\n10780 40854 MT\n(implement file archiving.)SH\n/Symbol SF\n10070 42843 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Add a)SH\n/Courier SF\n13446 XM\n(SET REPEAT)SH\n/Times-Roman SF\n19696 XM\n(subcommand.)SH\n/Symbol SF\n10070 44832 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Finish)SH\n/Courier SF\n13546 XM\n(SET LINE)15 W\n/Times-Roman SF\n(, so)\n15 W( that Kermit-TSO can be used as a local Kermit, connecting to a remote host\n10780 45937 MT\n(an alternate communication port.  Add a)SH\n/Courier SF\n27166 XM\n(CONNECT)SH\n/Times-Roman SF\n31616 XM\n(subcommand.)SH\n/Symbol SF\n10070 47926 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Compute file size for outgoing A-packets and implement the SPACE subcommand.)SH\n/Symbol SF\n10070 49915 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Reject files known \\050via A-packets\\051 to be too big for available storage.)S\n/Symbol SF\n10070 51904 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Intercept)SH\n/Times-Italic SF\n14584 XM\n(all)SH\n/Times-Roman SF\n15890 XM\n(terminal output during protocol mode.)SH\n/Symbol SF\n10070 53893 MT\n(\\267)SH\n/Times-Roman SF\n10780 XM\n(Allow wildcard notation for PDS members.)SH\nES\n%%Page: 36 37\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 36)SH\n12 /Times-Bold AF\n43052 XM\n(Kermit User Guide)SH\n46800 50 6120 6252 UL\nES\n%%Page: 37 38\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(Portable 370 Kermit)SH\n10 /Times-Italic AF\n51775 XM\n(Page 37)SH\n46800 50 8280 6252 UL\n16 /Times-Bold AF\n8280 8272 MT\n(Index)SH\n8 /Times-Roman AF\n12280 10429 MT\n(ASCII-to-EBCDIC 6)400 W\n31720 XM\n(TTY 1,)\n400 W( 6, 14, 17, 19, 27)SH\n31720 11353 MT\n(Type 5)400 W\n12280 12277 MT\n(Batch operation)\nSH( 20)400 W\n12280 13201 MT\n(Binary files)\nSH( 1,)\n400 W( 7, 22, 31)SH\n31720 XM\n(User area)\nSH( 24,)\n400 W( 25)SH\n12280 14125 MT\n(BLKSIZE 2)400 W\n31720 XM\n(User profile)\nSH( 29,)\n400 W( 30, 33)SH\n12280 15049 MT\n(Block check)\nSH( 6)400 W\n31720 15973 MT\n(VM/CMS 17)400 W\n12280 16897 MT\n(Cancelling a file transfer)\nSH( 21,)\n400 W( 31)SH\n12280 17821 MT\n(Catalog 28)400 W\n31720 XM\n(Warning 10)400 W\n12280 18745 MT\n(Command echoing)\nSH( 9)400 W\n31720 XM\n(Wildcard 18,)\n400 W( 29)SH\n12280 19669 MT\n(CRLF 2,)\n400 W( 7)SH\n12280 21517 MT\n(Debugging 7)400 W\n12280 23365 MT\n(EBCDIC-to-ASCII 6)400 W\n12280 24289 MT\n(Echo mode)\nSH( 4)400 W\n12280 25213 MT\n(Error exit)\nSH( 4)400 W\n12280 27061 MT\n(File matching)\nSH( 21,)\n400 W( 31)SH\n12280 27985 MT\n(File renaming)\nSH( 10)400 W\n12280 28909 MT\n(File truncation)\nSH( 7)400 W\n12280 29833 MT\n(File warning)\nSH( 6,)\n400 W( 10)SH\n12280 30757 MT\n(Flow control)\nSH( 14,)\n400 W( 19)SH\n12280 32605 MT\n(GET 4,)\n400 W( 22)SH\n12280 34453 MT\n(Handshake 8,)\n400 W( 14, 19)SH\n12280 35377 MT\n(Home disk)\nSH( 18,)\n400 W( 23, 24)SH\n12280 36301 MT\n(Host commands)\nSH( 9)400 W\n12280 38149 MT\n(IBM 1,)\n400 W( 17, 27)SH\n12280 39073 MT\n(Incomplete file)\nSH( 31)400 W\n12280 39997 MT\n(Incomplete files)\nSH( 8,)\n400 W( 22)SH\n12280 40921 MT\n(Initialization files)\nSH( 2,)\n400 W( 19, 25, 29, 34)SH\n12280 42769 MT\n(KERMBOOT 24,)\n400 W( 25)SH\n12280 44617 MT\n(Local 3)400 W\n12280 45541 MT\n(LOCAL-ECHO 14)400 W\n12280 46465 MT\n(Long packets)\nSH( 3,)\n400 W( 10, 12, 19)SH\n12280 47389 MT\n(LRECL 2,)\n400 W( 7)SH\n12280 49237 MT\n(MACLIB 25)400 W\n12280 50161 MT\n(Margins 8)400 W\n12280 51085 MT\n(MVS/TSO 27)400 W\n12280 52933 MT\n(Parity 8,)\n400 W( 14)SH\n12280 53857 MT\n(Partitioned data set)\nSH( 28)400 W\n12280 55705 MT\n(Qualifier 28)400 W\n12280 57553 MT\n(RECEIVE 4,)\n400 W( 21, 31)SH\n12280 58477 MT\n(RECFM 2)400 W\n12280 59401 MT\n(Records 2)400 W\n12280 60325 MT\n(Remote 3)400 W\n12280 62173 MT\n(Search order)\nSH( 21)400 W\n12280 63097 MT\n(SEND 3,)\n400 W( 4, 21, 31)SH\n12280 64021 MT\n(SEND delay)\nSH( 7)400 W\n12280 64945 MT\n(Series/1 1,)\n400 W( 6, 17, 27)SH\n12280 65869 MT\n(SERIES1 14)400 W\n12280 66793 MT\n(SERVER 4)400 W\n12280 67717 MT\n(SNA 1,)\n400 W( 6)SH\n12280 69565 MT\n(TAKE 4,)\n400 W( 22)SH\n12280 70489 MT\n(TEST 9)400 W\n12280 71413 MT\n(Translation 1,)\n400 W( 10)SH\nES\n%%Page: 38 39\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page 38)SH\n12 /Times-Bold AF\n43052 XM\n(Kermit User Guide)SH\n46800 50 6120 6252 UL\nES\n%%Page: i 40\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(Portable 370 Kermit)SH\n10 /Times-Italic AF\n52497 XM\n(Page i)SH\n46800 50 8280 5709 UL\n16 /Times-Bold AF\n25591 8272 MT\n(Table of Contents)SH\n12 SS\n8280 10684 MT\n(1. IBM 370 KERMIT)SH\n54480 XM\n(1)SH\n10 SS\n9780 12074 MT\n(1.1. Program Operation)SH\n54580 XM\n(2)SH\n9780 13154 MT\n(1.2. Kermit-370 Subcommands)SH\n54580 XM\n(2)SH\n9780 14234 MT\n(1.3. Before Connecting to the Mainframe)SH\n54080 XM\n(14)SH\n9780 15314 MT\n(1.4. After Returning from Kermit-370)SH\n54080 XM\n(14)SH\n9780 16394 MT\n(1.5. What's New)SH\n54080 XM\n(14)SH\n9780 17474 MT\n(1.6. What's Missing)SH\n54080 XM\n(16)SH\n12 SS\n8280 18998 MT\n(2. IBM VM/CMS KERMIT)SH\n53880 XM\n(17)SH\n10 SS\n9780 20388 MT\n(2.1. The VM/CMS File System)SH\n54080 XM\n(18)SH\n9780 21468 MT\n(2.2. Program Operation)SH\n54080 XM\n(19)SH\n9780 22548 MT\n(2.3. Kermit-CMS Subcommands)SH\n54080 XM\n(21)SH\n9780 23628 MT\n(2.4. How to build an executable version of Kermit-CMS)SH\n54080 XM\n(24)SH\n9780 24708 MT\n(2.5. What's New)SH\n54080 XM\n(25)SH\n9780 25788 MT\n(2.6. What's Missing)SH\n54080 XM\n(26)SH\n12 SS\n8280 27312 MT\n(3. IBM MVS/TSO KERMIT)SH\n53880 XM\n(27)SH\n10 SS\n9780 28702 MT\n(3.1. The MVS/TSO File System)SH\n54080 XM\n(28)SH\n9780 29782 MT\n(3.2. Program Operation)SH\n54080 XM\n(29)SH\n9780 30862 MT\n(3.3. Kermit-TSO Subcommands)SH\n54080 XM\n(31)SH\n9780 31942 MT\n(3.4. How to build an executable version of Kermit-TSO)SH\n54080 XM\n(34)SH\n9780 33022 MT\n(3.5. What's New)SH\n54080 XM\n(35)SH\n9780 34102 MT\n(3.6. What's Missing)SH\n54080 XM\n(35)SH\n12 SS\n8280 35626 MT\n(Index)SH\n53880 XM\n(37)SH\nES\n%%Page: ii 41\nBS\n0 SI\n10 /Times-Italic AF\n6120 4404 MT\n(Page ii)SH\n12 /Times-Bold AF\n43052 XM\n(Kermit User Guide)SH\n46800 50 6120 6252 UL\nES\n%%Page: iii 42\nBS\n0 SI\n12 /Times-Bold AF\n8280 4404 MT\n(Portable 370 Kermit)SH\n10 /Times-Italic AF\n51941 XM\n(Page iii)SH\n46800 50 8280 6252 UL\n16 /Times-Bold AF\n27013 8272 MT\n(List of Tables)SH\n10 SS\n9780 10550 MT\n(Table 1-1:)\nSH( Error)\n500 W( messages and codes for Kermit-370)SH\n54080 XM\n(15)SH\nES\n%%Trailer\n%%Pages: 42\n%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier Symbol\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0KERUP": {"ttr": 9734, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "---------\nKermit updates: labels matching columns 65-71 of the source, with\nbrief descriptions of the changes made.  Changes up to Kermit-CMS\n3.0 (never released) were not so labeled.  Includes all variants\nof Kermit-370.\n------------------------------------------------------------\nColumn 65: institution\n  B-UC Berkeley, C-U of Chicago, H-Harvard, K-Kentucky, L-Liege,\n  M-Maryland, N-NIH, S-Smithsonian AO, T-Triangle U CC, 0-Columbia,\n  1-Brown\nColumn 66: author/originator\n  MS: Bob Shields\n  BS: Greg Small\n  CR: Ron Rusnak\n  HF: Clark Frazier\n  KE: Dave Elbon\n  LP: Andre Pirard\n  NW: Dale White\n  SC: John Chandler\n  TB: Bob Bolch\n  TS: Steve Blankinship\n  0K: Vace Kundakci\n  0T: Daphne Tzoar\n  1D: Peter DiCamillo\nColumns 66-71: date in form YYDDD\n------------------------------------------------------ From CMS 2.0\n                Description\n-------   -----------------------------------------------------------\n0T83Sep - 8-bit quoting to allow binary file transfer.\n0T83Sep - Don't restrict disk lrecl to 256.\n0T84Aug - Pack as much data into a packet as possible.\n0T84Aug - Use common routines SPAR and RPAR for init packets.\n0T84Sep - Add repeat count prefixing.\n0T84Sep - Add support for two char checksum and three char CRC.\n0T84Oct - Add SET/SHOW DEBUG mode.\nMS85Feb - Add support for Series/1 front end.\n0T85Mar - Add basic server support.  Consolidate send-error-packet code.\n0T85Mar - If debugging is on, log packets in a file.\n0T85Mar - Read SYSTEM KERMINI and (USERID) KERMINI at start.  TAKE.\n0T85Mar - Implement skip file or file group when receiving.\n0T85Apr - Add a SHOW ALL command.\n0T85Apr - Add SET WARNING ON/OFF in case file name collisions.\nMS85Apr - Bypass user translate tables for SPACK,RPACK.\n0T85Apr - Add SET ETOA, SET ATOE and TDUMP.\n0T85Apr - Encode outgoing filename, decode incoming one.\n------------------------------------------------------ From CMS 2.01\n                Description\n-------   -----------------------------------------------------------\n0K85    - If virtual console is not a TTY, assume 3270.\n0K85    - Add a SLEEP command after server/receive mode greetings.\n1D85    - Fix Logout hanging in Series1 mode.\nKR85    - Hand-code HNDINT to allow non-009 console.\n0K85    - Add SET EOF ON/OFF command to truncate file at \u00acZ.\n0K85    - Add SET TABS-EXPAND ON/OFF command to expand tabs in TEXT.\nBS85    - Do not change MAXOUT if not BINARY.\nBS85    - Blk-3 chksum calculation begins at pkt len field.\nBS85    - Initial setting of status: no file tranfer yet.\n1D85    - Use max packet size of 60 for 7171.\n0K85    - SHOW command defaults to SHOW ALL\n------------------------------------------------------ From CMS 2.02\n                Description\n-------   -----------------------------------------------------------\n0K86    - Almost a full rewrite.\n------------------------------------------------------ From CMS 3.0\n Label          Description\n-------   -----------------------------------------------------------\nBS86001 - Assorted ideas from Berkeley\nTS86001 - TUCC Kermit-TSO\nBS86090 - Augmented status print (Berkeley idea)\nTS86100 - Add definable tab columns\nSC86115 - Replace symbols w/ self-def terms\nSC86119 - Fix bugs in 3.0\nSC86120 - Revise SPAR/RPAR + parameter SET/SHOW\nSC86121 - Rearrange COMMON: separate constants from variables\nSC86125 - Add DROP indicator if aborting transfer\nSC86133 - Replace SET/SHOW\nSC86135 - Change error-exit mechanism in macros\nSC86141 - Modify ENTER/RET to allow alternates\nSC86148 - Replace SETMSG code\nSC86149 - Add A-packets\nHF86150 - Add transparent type and echo\nSC86151 - Add V-binary file-type\nSC86152 - Add SPARSET/RPARSET\nSC86153 - Revise RPACK loop\nSC86154 - Add padding\nSC86155 - Add commands to foreign server\nSC86156 - Systematize error codes + reporting same\nHF86157 - Add return code from Kermit\nSC86158 - Revise packet-recognition stuff\nSC86159 - Watch for S/1 errors\nSC86163 - Streamline ENCODE\nSC86164 - Add SET DELAY + SET RETRY\nSC86165 - Fix up transparent type/echo stuff\nSC86171 - Add SET ECHO\nSC86184 - Add short S/1 greeting\nSC86190 - Move buffers out of COMMON\nSC86191 - Skip padding for non-protocol stuff\nTB86196 - Add long packets\nSC86202 - Preliminaries for long packets\nSC86203 - Add APPEND option\nSC86204 - Assign names XECHO/XTYPE\nSC86205 - Add limits from RDTERM/WRTERM\nSC86206 - Add SET TEST\nSC86209 - Replace LINEDIT by internal calls\nTB86218 - Tune long packets for TTY line\nSC86222 - Search R/O extensions\nHF86223 - Add foreign filespec\nSC86223 - Fix up foreign filespec\nSC86224 - Tokenizing, foreign filenames, SET/SHOW, search R/O ext.\nSC86225 - SET INCOMPLETE KEEP \u00a6 DISCARD\nSC86227 - Columnar SHOW\nHF86232 - Fix up foreign filespec\nHF86233 - Synchronize S/1 screen\nSC86239 - Assorted changes\n------------------------------------------------------ From CMS 3.1\n Label          Description - generic unless noted otherwise\n-------   -----------------------------------------------------------\nSC86262 - Reorganize macros, add D-binary file-type\nSC86265 - Fix bug in SET ATOE/ETOA\nSC86268 - Prepare for generic version\nSC86273 - Improve SET\nSC86276 - Get around S/1 I/O errors\nSC86283 - Add type-out snagging\nSC86295 - Create generic version + CMS code\nSC86299 - Disk I/O for generic TSO version (TSO)\nSC86301 - Reorganize SIO\nSC86316 - Reorganize generic Kermit\nCR86321 - Idea from TSOS1: Skip setting LINEDIT+LINESIZE if S/1 (CMS)\nNW86330 - NIH Kermit-TSO (TSO)\nSC86345 - Reorganize generic Kermit\nSC86355 - Reorganize generic Kermit\nSC87007 - Tune up a bit\nSC87008 - Add 8-bit quote setting\nTB87009 - Revised VTAM fix\nSC87012 - More generic stuff\nSC87015 - Make disk stuff more like NIH (TSO)\nSC87020 - Implement type-out interception (TSO)\nSC87034 - Allow lower case stuff\nSC87117 - Implement new translation tables TATOE/TETOA + CMS EXEC SUBCOM\nSC87166 - Change to SET TERMINAL, consolidate SET and SHOW code\nSC87169 - Fix Server forgetting I-packet info\nSC87201 - Avoid problems with INPUT/OUTPUT translations (CMS)\nSC87215 - Implement GRAPH controller\nSC87253 - Margins for SEND, no extra XON, fix ext.plist, HOST, no delay.\nSC87268 - TERMINAL -> CONTROLLER, truncation count, SET PROMPT\nLP87272 - Make debug log record extra chars (except padding)\nSC87274 - Add SET HANDSHAKE\nSC87275 - Reinstate chained Write/Read for TTY lines (CMS)\nSC87281 - Keep terminal buffers within 1 page each, fix translation\nSC87286 - Log AID from S/1 reads, clean up DMSFRET, clean RIOLOG\nSC87295 - Add control for CP TERM SCROLL (CMS)\nSC87296 - Fix exceptions: PSCB is protected, date is YDD (binary) (TSO)\nSC87300 - Allow for error setting up comm line, FULLSCR support\nSC87309 - Prime GRAPH controller with an extra NAK\nSC87314 - Initialize FABEOBAD (TSO)\nSC87317 - Use CON FULLSCR for 3708 support (TSO)\nSC87320 - Remove traces of CMS version from TSO and vv.\nSC87338 - Add disk I/O error analysis\nSC87343 - KERMIT subcmd, extra XON to cover micro\nSC87351 - Separate LINE initialization, fix V-BINARY\n------------------------------------------------------ From IK 4.0\n Label          Description - generic unless noted otherwise\n-------   -----------------------------------------------------------\nSC88006 - Trim lines from TAKE files, count all bytes sent (even retry)\nSC88018 - Support longer minimum abbreviation for TYPE (e.g., TSO)\nSC88019 - Use NOEDIT option for TPUT on SERIES1 and GRAPHICS (TSO)\nSC88020 - Protect 44-byte DSN when WARN is ON. upcase VOL,UNIT. (TSO)\nSC88022 - Fix up ATTACH (TSO)\nSC88026 - Clean up HELP, LOGOFF, and interception (TSO)\nSC88028 - Restore SHOW ALL\nSC88034 - Allow micro to send header w/ FN.FT.FM  (CMS)\nSC88035 - Implement END cmd for TSO, add prompting for SEND/GET\nSC88036 - Back off from CALLTSSR, add GUPI hooks (TSO)\nSC88042 - Use STCC to change CHARDEL+LINEDEL (TSO)\nSC88043 - Default TAKE type, fix DIR + REMOTE utils, fix OPENF T for PDS (TSO)\nSC88047 - Use TPUT NOEDIT for TTY (TSO)\nSC88048 - Set FDBACTV via TAKTAB instead of IKJDAIR (TSO)\nSC88049 - More re-entrancy, etc.\nSC88050 - Trim blanks on SEND only for RECFM=F\nSC88053 - Better error handling for name collisions and BINARY\nSC88054 - Change def. UNIT, fix CWD, catch HOST cmds > 8 chars (TSO)\nSC88063 - Full-screen greetings for protocol mode (TSO)\nSC88070 - Treat PDS member names better (TSO)\nSC88071 - Allow disabling A-packets\nSC88074 - Fixes for talking to other Kermit server, honor STOP\nSC88076 - Clean up file collision, OPEN, RECFM=V truncation (TSO)\nTB88078 - Allow S/1 connection under VM/XA (CMS)\nSC88083 - Preserve existing PDS attributes; clear screen (TSO)\nSC88087 - Mark datasets \"not in use\" after host command (TSO)\nSC88089 - Suppress filename collision check when WARN is OFF\nSC88090 - Avoid BLKSIZE > disk track size (TSO)\nSC88091 - Tune up VTAM fix (TSO)\nSC88092 - Treat NAK(n+1) as ACK(n); tabulate file-by-file status\nSC88095 - Allow line delimiter on input, avoid STACK EOD ABEND (TSO)\nSC88096 - Generalize wildcards to include members (TSO)\nSC88100 - Skip wildcard setup if in-core file; clear NAK0 earlier\nSC88101 - Suppress line numbers in TAKE files\nSC88104 - Avoid problem with 0 < BLKSIZE < LRECL (TSO)\nSC88105 - Avoid stray \"0\" in SERIES1 protocol mode; clear screen (TSO)\nSC88106 - Avoid msg when deleting KER.BUF + strip leading car.ctl (TSO)\nSC88113 - Clean up implied file name extension for TAKE (TSO)\nSC88118 - Make host commands always interruptible (TSO)\nSC88119 - Close LOG file before freeing all buffers\nSC88119 - Capture DAIRFAIL msg; check PDS notation; setup new GUPI (TSO)\nSC88120 - Allow choice of FOLD/TRUNC/HALT, make LRECL system-specific\nSC88125 - Revise DSN properly from micro if WARN on (TSO)\nSC88139 - Screenful packet in VTAM, document ERRNUM changes\nSC88168 - New DEBUG options, restore ERRBPC\nLP88186 - Add S/1 style hex I/O trace. Reworked I/O logic (CMS)\nLP88187 - Unlock keybrd for S/1 xparent mode (CMS)\nLP88188 - Recovery from 7171 misbehavior on comm. line error (CMS)\nSC88194 - Set LINEDIT off for xfer through all controller types (CMS)\nSC88202 - Update list of TSO macros used (TSO)\nSC88203 - Test for SERIES1 device if not TTY\nSC88209 - Use invariant internal xlate for attribute info\nSC88235 - Allow attribute packets with time as well as date\nSC88246 - Preserve carriage control flags when appending (TSO)\nSC88264 - Return filespec used when ACK'ing F-packet\nSC88273 - Eliminate lurking A-E bugs in A-packets, etc.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IK0MAC": {"ttr": 9739, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 KW\n         MACRO\n&LABEL   KW    &KW,&ADDR,&MIN=1\n.* Define a KW for the parser\n.*  &1: 'keyword' or GOTO (to define ptr to next keyword item) or nil\n.*  (to end a list), &2: address of handler (if &1 is a 'keyword') or\n.*  of next item (if &1 is GOTO) (A), &MIN=length of min. abrv\n         LCLA  &LEN\n         AIF   ('&KW' NE '').KW\n&LABEL   DC    X'FF'\n         AGO   .DONE\n.KW      AIF   ('&KW' NE 'GOTO').KWN\n&LABEL   DC    AL3(&ADDR),AL1(255)                             @SC87117\n         MEXIT\n.KWN     ANOP\n&LEN     SETA  K'&KW-3\n&LABEL   DC    AL3(&ADDR.),AL1(&LEN.),AL1(&MIN.-1),C&KW\n.DONE    MEND\n*COPY                                                 SCAN\n         MACRO\n&LABEL   SCAN  &TABLE,&HELP,&NODISP                            @SC87320\n.* Parse input using a KW table. Setup already done via NTOKN or CTOKN.\n.* Dispatch to proper handler if found in table, else return.\n.*  &1: adr of relevant table (LA/R), &2: handler if '?' (LA),\n.*  &3: if 'NODISP', then dispatch to HELP handler with high byte of\n.*  R7 not 0 and (R1)-> KW entry (if found)\n&LABEL   LREG  1,&TABLE                                        @SC86295\n         AIF   ('&NODISP' EQ '').CALL                          @SC87320\n         AIF   ('&NODISP' NE 'NODISP').ERR                     @SC87320\n         ICM   7,8,*                                           @SC87320\n.CALL    BAL   14,SCAN                                         @SC87320\n          B    &HELP                                           @SC86135\n         MEXIT                                                 @SC87320\n.ERR     MNOTE 2,'Invalid positional parameter &NODISP'        @SC87320\n         MEND\n*COPY                                                 HELP\n         MACRO\n&LABEL   HELP  &TABLE,&RETURN\n.* Display acceptable keywords, then branch\n.*  &1: ptr to table (LA/R), &2: place to branch (LA)\n&LABEL   LREG  1,&TABLE                                        @SC86295\n         BAL   14,HELPKW\n          B    &RETURN                                         @SC86135\n         MEND\n*COPY                                                 NTOKN\n         MACRO\n&LABEL   NTOKN &H=,&N=\n.* Pick next token, optionally test for ?\n.*  &H= handler if '?' (LA), &N= handler if none (LA)\n&LABEL   BAL   14,WSPTOK\n          B    &N                                              @SC86135\n         AIF   ('&H' EQ '').H\n         CLI   0(6),C'?'                                       @SC86115\n         BE    &H\n.H       MEND\n*COPY                                                 FTOKN\n         MACRO\n&LABEL   FTOKN &H=,&N=\n.* Find start of next token, optionally test for ?\n.*  &H= handler if '?' (LA), &N= handler if none (LA)\n&LABEL   BAL   9,WSP                                           @SC86295\n          B    &N                                              @SC86224\n         AIF   ('&H' EQ '').H                                  @SC86224\n         CLI   0(7),C'?'\n         BE    &H\n.H       MEND\n*COPY                                                 PTEXT\n         MACRO\n&LABEL   PTEXT &TEXT,&LEN,&AREG=3,&LREG=4\n.* Set up 2 registers to point to some text and contain the length\n.*  &1: 'text' (where text has no doubled ' or & characters)  OR\n.*  &1: text (LA/R), &2: length of text (LA/R),\n.*  &AREG= reg for ptr, &LREG= reg for len\n         LCLA  &TEXTL\n         AIF   ('&TEXT'(1,1) EQ '''').TEXT                     @SC86355\n&LABEL   LREG  &AREG,&TEXT                                     @SC86295\n         AGO   .LEN                                            @SC86355\n.TEXT    ANOP\n&TEXTL   SETA  K'&TEXT-2\n&LABEL   LA    &AREG,=C&TEXT\n         AIF   ('&LEN' NE '').LEN                              @SC86355\n         LA    &LREG,&TEXTL\n         MEXIT\n.LEN     LREG  &LREG,&LEN                                      @SC86295\n         MEND\n*COPY                                                 KCALL\n         MACRO\n&LABEL   KCALL &NAME,&VALUE,&EXT,&E=\n* Call a routine, fill R1 with a parm if any, and allow error branch\n.*  &1: routine name or (reg), &2: argument (LA/R) (opt),      @SC87275\n.*  &3: EXT if non-Kermit,                                     @SC87275\n.*  &E= branch if R15 NZ (LA) or (branch,cc) with cc=suffix of B instr\n         LCLC  &CC                                             @SC86135\n&CC      SETC  'NZ'          Default condition                 @SC86135\n&LABEL   LREG  1,&VALUE                                        @SC86295\n         AIF   ('&EXT' NE 'EXT').INTRN                         @SC86295\n         L     15,=V(&NAME)                                    @SC86295\n         AGO   .BAL                                            @SC87012\n.INTRN   AIF   ('&NAME'(1,1) NE '(').INTRNL                    @SC87275\n         LREG  15,&NAME                                        @SC87275\n         AGO   .BAL                                            @SC87275\n.INTRNL  L     15,A&NAME                                       @SC86295\n.BAL     BALR  14,15                                           @SC87012\n         AIF   ('&E' EQ '').NOERR\n         AIF   ('&EXT' NE 'EXT').NOLT                          @SC87012\n         LTR   15,15                                           @SC87012\n.NOLT    AIF   (N'&E LT 2).NCC                                 @SC87012\n&CC      SETC  '&E(2)'                                         @SC86135\n.NCC      B&CC &E(1)                                           @SC86135\n.NOERR   MEND\n*COPY                                                 ADCON\n         MACRO\n         ADCON\n.* Define address constants for subroutine calls, etc.  Takes a list.\n         LCLA  &N                                              @SC86295\n.LUP     AIF   (&N GE N'&SYSLIST).DUN                          @SC86295\n&N       SETA  &N+1                                            @SC86295\nA&SYSLIST(&N) DC A(&SYSLIST(&N))                               @SC87201\n         AGO   .LUP                                            @SC86295\n.DUN     MEND\n*COPY                                                 LREG\n         MACRO\n&LABEL   LREG  &R,&VAL                                         @SC86295\n.* Load register with parameter\n.*  &1: reg, &2: value (LA) or (reg) or omitted\n         AIF   ('&VAL' EQ '').OKREG                            @SC86295\n         AIF   ('&VAL'(1,1) EQ '(').REG                        @SC86295\n&LABEL   LA    &R,&VAL                                         @SC86295\n         MEXIT                                                 @SC86295\n.REG     AIF   ('&VAL' EQ '(&R)').OKREG                        @SC86295\n&LABEL   LR    &R,&VAL(1)                                      @SC86295\n         MEXIT                                                 @SC86295\n.OKREG   AIF   ('&LABEL' EQ '').Z                              @SC86295\n&LABEL   DS    0H                                              @SC86295\n.Z       MEND                                                  @SC86295\n*COPY                                                 OPENF\n         MACRO\n&LABEL   OPENF &MODE,&NAME,&FDB,&FID,&E=\n.* Open file for input or output or test existence\n.*  &1: I\u00a6O\u00a6T, &2: file name (LA/R), &3: pattern FDB (LA/R),\n.*  &4: file ticket (LA) (opt), &E= error branch (see KCALL)\n         LCLA  &CODE                                           @SC86295\n         AIF   ('&MODE' NE 'I').CKO                            @SC86295\n&CODE    SETA  1                                               @SC86295\n         AGO   .MOK                                            @SC86295\n.CKO     AIF   ('&MODE' NE 'O').CKT                            @SC86295\n&CODE    SETA  2                                               @SC86295\n         AGO   .MOK                                            @SC86295\n.CKT     AIF   ('&MODE' NE 'T').ILLM                           @SC86295\n&CODE    SETA  3                                               @SC86295\n         AIF   ('&FID' NE '').ILLF                             @SC86295\n.MOK     ANOP  ,                                               @SC86295\n&LABEL   LA    0,&CODE                                         @SC86295\n         LREG  2,&NAME                                         @SC86295\n         KCALL DISKIO,&FDB,E=&E                                @SC86295\n         AIF   ('&FID' EQ '').Z                                @SC86295\n         ST    0,&FID                                          @SC86295\n.Z       MEXIT                                                 @SC86295\n.ILLM    MNOTE 2,'ILLEGAL MODE ''&MODE'''\n         MEXIT                                                 @SC86295\n.ILLF    MNOTE 2,'FID NOT ALLOWED WITH MODE ''&MODE'''\n         MEND\n*COPY                                                 CLOSF\n         MACRO\n&LABEL   CLOSF &FID,&E=\n.* Call DSKIO to close a file and zero ticket.  NOP if already 0.\n.*  &1: file ticket (LA) (opt), &E= error branch (see KCALL)\n&LABEL   LA    0,4                                             @SC86295\n.CAL     KCALL DISKIO,&FID,E=&E                                @SC86295\n         MEND\n*COPY                                                 ERRF\n         MACRO\n&LABEL   ERRF\n.* Call DISKIO to analyze an error code in R15 (no options)\n.* Clobbers TMPDW\n&LABEL   LA    0,12                                            @SC87338\n         CVD   15,TMPDW      Save error code                   @SC87338\n         KCALL DISKIO        Keep registers same               @SC87338\n         MEND\n*COPY                                                 ERASF\n         MACRO\n&LABEL   ERASF &NAME,&E=\n.* Call DISKIO to erase a file\n.*  &1: file name (LA/R), &E= error branch (see KCALL)\n&LABEL   LA    0,14                                            @SC86295\n         KCALL DISKIO,&NAME,E=&E                               @SC86295\n         MEND\n*COPY                                                 NXTFSET\n         MACRO\n&LABEL   NXTFSET &NAME,&TYPE,&E=\n.* Call DISKIO to set up search for files\n.*  &1: file name (LA/R), &2: CWD => checking validity for CWD,\n.*  END => closing file name search,\n.*  &E= error branch (see KCALL)\n         LCLA  &CODE                                           @SC86295\n&CODE    SETA  5             Ordinary setup                    @SC86295\n         AIF   ('&TYPE' EQ '').TOK                             @SC86295\n&CODE    SETA  7             End of search                     @SC86355\n         AIF   ('&TYPE' EQ 'END').TOK                          @SC86355\n&CODE    SETA  8             Check CWD string                  @SC86295\n.TOK     ANOP\n&LABEL   LA    0,&CODE                                         @SC86295\n         KCALL DISKIO,&NAME,E=&E  Init for NXTFST call         @SC86295\n         MEND\n*COPY                                                 NXTF\n         MACRO\n&LABEL   NXTF  &E=\n.* Call DISKIO to get next file name in FILNAM\n.*  &E= error branch (see KCALL)\n&LABEL   LA    0,6                                             @SC86295\n         KCALL DISKIO,E=&E   Find next file                    @SC86295\n         MEND\n*COPY                                                 RET\n         MACRO\n&LABEL   RET   &TYPE\n.* Generate return from subroutines.\n.*  &1: MAIN if return from Kermit main code\n         AIF   ('&TYPE' EQ 'MAIN').RMAIN                       @SC86295\n&LABEL   B     RTRN                                            @SC86295\n         MEXIT\n.RMAIN   ANOP\n&LABEL   L     13,4(13)      Unlink                            @SC86295\n         ST    15,16(13)     Save return code                  @SC86295\n         LA    0,STODWDS+STKDWDS                               @SC87012\n         LR    1,11                                            @SC86316\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         LM    14,12,12(13)  Restore registers                 @SC86295\n         BR    14                                              @SC86295\n         MEND\n*COPY                                                 ENTER\n         MACRO\n&LABEL   ENTER &TYPE                                           @SC86295\n.* Establish routine entry code\n.*  &1: ALT if 2ndary entry or MAIN if main program\n         GBLC  &RTN                                            @SC86295\n         AIF   ('&TYPE' EQ 'ALT').ALT                          @SC86141\n&RTN     SETC  '&LABEL'\n&LABEL   CSECT\n         USING &RTN.SV,13                                      @SC86295\n         USING &LABEL,12                                       @SC86295\n         SAVE  (14,12),,&LABEL                                 @SC86141\n         AIF   ('&TYPE' NE 'MAIN').ORD                         @SC86295\n         LR    12,15                                           @SC86295\n         L     10,=A(COMMON) Common code addressibility        @SC86316\n         LA    0,STODWDS+STKDWDS                               @SC87012\n       DMSFREE DWORDS=(0)    Get storage for vars + stack      @SC86295\n         LR    11,1          Get addressibility                @SC86295\n         LR    0,1                                             @SC86295\n         LA    1,8*STODWDS   Length of storage                 @SC86295\n         SR    15,15         Zero fill                         @SC86295\n         MVCL  0,14                                            @SC86295\n         LR    15,0          Start of stack                    @SC86295\n         A     0,=A(8*STKDWDS) End of stack                    @SC87012\n         STM   15,0,STKPTR                                     @SC86295\n         LM    15,1,16(13)   Restore registers                 @SC86295\n         AGO   .ORD                                            @SC86141\n.ALT     ENTRY &LABEL                                          @SC86141\n&LABEL   SAVE  (14,12),,*                                      @SC86141\n         L     15,A&RTN                                        @SC86295\n.ORD     LA    0,&RTN.LX                                       @SC86295\n         BAL   14,SUBENT                                       @SC86295\n         MEND\n*COPY                                                 EXIT\n         MACRO\n         EXIT\n.* Assembler stuff for end of routine and end of local temporaries\n         GBLC  &RTN                                            @SC86295\n         DS    0D                                              @SC86295\n&RTN.LX  EQU   *-&RTN.SV                                       @SC86295\n         DROP  13,12                                           @SC86295\n         MEND\n*COPY                                                 LOCALS\n         MACRO\n         LOCALS\n.* Define storage for save area.  Follow with temporaries\n         GBLC  &RTN                                            @SC86295\n.LT      LTORG                                                 @SC86141\n&RTN.SV  DSECT                                                 @SC86295\n         DS    18F                                             @SC86295\n         MEND\n*COPY                                                 ASCSYM\n         MACRO\n         ASCSYM &LIST\n.* Define symbols (of form 'Ax') for ASCII upper-case & digits\n         LCLA  &I,&N\n         LCLC  &C\n&N       SETA  K'&LIST       Number of chars\n&I       SETA  0\n.LP      AIF   (&I GE &N).DONE\n&I       SETA  &I+1\n&C       SETC  '&LIST'(&I,1)\n         AIF   ('&C' LT 'A').LP\n         AIF   ('&C' GT 'I').TRJR\nA&C      EQU   C'&C'-128\n         AGO   .LP\n.TRJR    AIF   ('&C' GT 'R').TRSZ\nA&C      EQU   C'&C'-135\n         AGO   .LP\n.TRSZ    AIF   ('&C' GT 'Z').TRNUM\nA&C      EQU   C'&C'-143\n         AGO   .LP\n.TRNUM   AIF   ('&C' GT '9').LP\nA&C      EQU   C'&C'-192\n         AGO   .LP\n.DONE    MEND\n*COPY                                                 NOTQR\n         MACRO\n&LABEL   NOTQR &BRANCH                                         @SC86120\n.* Test for an Ascii char range of 33-62 and 96-126\n.*  &1: branch if out of range (LA)\n&LABEL   BAL   14,CHKQR                                        @SC86120\n          B    &BRANCH                                         @SC86120\n         MEND\n*COPY                                                 UNCHR\n         MACRO\n&LABEL   UNCHR &REG,&DATA,&TO\n.* UnChr: Subtract an ASCII space.  Set cc=M if too small.\n.*  &1: reg for value, &2: source (LA) if not &1, &3: dest (LA) (opt)\n&LABEL   CCHAR &REG,&DATA,&TO,S,SPACE\n         MEND\n*COPY                                                 TOCHR\n         MACRO\n&LABEL   TOCHR &REG,&DATA,&TO\n.* ToChr: Add an ASCII space\n.*  &1: reg for value, &2: source (LA) if not &1, &3: dest (LA) (opt)\n&LABEL   CCHAR &REG,&DATA,&TO,A,SPACE\n         MEND\n*COPY                                                 CTL\n         MACRO\n&LABEL   CTL   &REG,&DATA,&TO\n.* CTL: Reverse bit 6 to make a ctl char printable and vice versa\n.*  &1: reg for value, &2: source (LA) if not &1, &3: dest (LA) (opt)\n&LABEL   CCHAR &REG,&DATA,&TO,X,F64                            @SC86120\n         MEND\n*COPY                                                 CCHAR\n         MACRO\n&LABEL   CCHAR &REG,&DATA,&TO,&OP,&VALUE\n.* CCHAR: Used by CTL/UNCHR/TOCHR to add/subtract number\n.*  &1: reg for value, &2: source (LA) if not &1, &3: dest (LA) (opt),\n.*  &4: opcode for change, &5: operand\n         AIF   ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   AIF   ('&DATA' EQ '').NODATA\n         SR    &REG,&REG                                       @SC86120\n         IC    &REG,&DATA\n.NODATA  &OP   &REG,&VALUE\n         AIF   ('&TO' EQ '').TO\n         STC   &REG,&TO\n.TO      MEND\n*COPY                                                 MSGDF\n         MACRO\n         MSGDF &NM,&TEXT\n.* Define error message table entry and pointer\n.*  &1: 3-letter error code, &2: 'text of message'\nERRTAB   CSECT\nERR&NM   EQU   (*-ERRTAB)/4  Symbolic error number\n         DC    AL1(L'MSG&NM),AL3(MSG&NM)\nERRMSGS  CSECT\nMSG&NM   DC    C&TEXT\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0MAI": {"ttr": 9990, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IK0MAI\n         TITLE 'Kermit-370 main code'                          @SC86268\nKERMIT   ENTER MAIN                                            @SC86295\n         STM   0,1,ORGR0     Save R0,R1                        @SC87253\n* Initialize STORAG section\n         OI    FL5,TIMF      Set timer on                      @SC86355\n         MVC   DEFS(LDEFS),IDEFS Init. values                  @SC86295\n         MVC   S1DATA,S1XON  Series/1 orders                   @SC86295\n         LA    1,S1XON                                         @SC87274\n         ST    1,S1XOPL      Set up prompt plist               @SC87274\n         MVI   TRTBL+C' ',1  Set up blank finder               @SC86295\n         MVI   TRMTP,C'T'    Assume going via TTY line         @SC87166\n         MVC   ETOA,ETOAD    Init translators                  @SC86295\n         MVC   ATOE,ATOED                                      @SC86295\n         MVC   TETOA,ETOAD                                     @SC87117\n         MVC   TATOE,ATOED                                     @SC87117\n*        MVC   OFF80(128),LOCASE                               @SC87253\n*        MVC   OFF80+128(128),LOCASE                           @SC87253\n         LA    1,255                                           @SC86295\n         STC   1,UPCASE(1)                                     @SC86295\n         BCT   1,*-4                                           @SC86295\n         MVC   UPCASE+C'a'(9),ATOE+AA                          @SC86295\n         MVC   UPCASE+C'j'(9),ATOE+AJ                          @SC86295\n         MVC   UPCASE+C's'(8),ATOE+AS                          @SC86295\n         LA    1,CMD                                           @SC86295\n         ST    1,TAKBUF                                        @SC86295\n         SR    1,1                                             @SC86295\n         LA    5,4095        For page boundaries...            @SC87281\n         BAL   14,STPTRS     Get length of storage needed      @SC86295\n         LA    0,7(1,5)      Round up                          @SC87281\n         SRA   0,3                                             @SC86295\n         ST    0,FREEDW      Number of dw's to get             @SC86295\n       DMSFREE DWORDS=(0),ERR=KRMXITS                          @SC86295\n         ST    1,FREEPTR     Save start of area                @SC87286\n         BAL   9,KRMPG       Round up to next page             @SC87281\n         BAL   14,STPTRS     Set up ptrs                       @SC86295\n         LH    1,BUFSIZ                                        @SC86295\n         ST    1,TYRDPL+4    Set up read lists                 @SC86295\n         A     1,F3                                            @SC86295\n         ST    1,S1RDPL+4                                      @SC86295\n         L     1,LOGBUF                                        @SC86295\n         MVI   1(1),C':'     Set up prefix                     @SC86190\n         KCALL SETMSG,1,E=KRMXITF Get user's settings\n         KCALL SPARSET                                         @SC86152\n         MVC   DATL,F0                                         @SC87012\n         KCALL SPAR          Set defaults for other Kermit     @SC87012\n         KCALL USNTRF        Call main loop                    @SC87117\n*\nKRMXITF  KCALL SETMSG,4      System-dependent clean-up         @SC86316\n         LM    0,1,FREEDW    Number of dw's, ptr to area       @SC87286\n       DMSFRET DWORDS=(0),LOC=(1)                              @SC86295\n         TM    FL1,DEBUG                                       @SC86295\n         BZ    KRMXITQQ                                        @SC86295\n         CLOSF LOGPTR        Close                             @SC86295\nKRMXITQQ BAL   14,LDERR      Get error code                    @SC87117\n         RET   MAIN                                            @SC86295\n*\nKRMXITS  WTEXT 'Unable to allocate buffers'\n         B     KRMXITQQ\n*\nSTPTRS   ST    1,RBUF        Addr of first buffer\n         A     1,F64KP               Second buffer\n         ST    1,WBUF                Away from first\n         A     1,F64KP\n         ST    1,TSENT               address of sent files\n         AH    1,=Y(MAXNSENT*LFID) Length of table             @SC86190\n         ST    1,CBUF        Ptr to CP answer buffer           @SC86295\n         A     1,F256                                          @SC86295\n         ST    1,EMSGP       Ptr to saved micro error msg      @SC86295\n         LA    1,LEMSG(1)                                      @SC86295\n         ST    1,LOGBUF      Ptr to LOG buffer                 @SC86295\n         LA    1,2(1)        Data record overlays S/1 orders   @SC86190\n         LA    2,S1ORDL(1)                                     @SC87281\n         BAL   9,KRMPGTB     Round up if necessary             @SC87281\n         ST    1,S1WRPL                                        @SC86295\n         LA    1,S1ORDL(1)   Ptr to output data                @SC86190\n         ST    1,TYWRPL                                        @SC86190\n         AH    1,BUFSIZ      Ptr to input buffer               @SC86190\n         LA    2,3(1)                                          @SC87281\n         BAL   9,KRMPGTB     Round up if necessary             @SC87281\n         LR    2,1                                             @SC86190\n         LA    1,3(1)        Allow S/1 screen info             @SC87281\n         ST    2,S1RDPL                                        @SC86295\n         ST    1,APKT                                          @SC86190\n         ST    1,TYRDPL      Read plist                        @SC86295\n         AH    1,BUFSIZ      Ptr to output holding buffer      @SC86190\n         ST    1,ASPKT                                         @SC86190\n         ST    1,AASPKT                                        @SC86190\n         LA    2,7(1)        Skip over extended header         @SC86190\n         ST    2,ASDATA                                        @SC86190\n         AH    1,BUFSIZ      Ptr to input decoding buffer      @SC86190\n         ST    1,ARPKT                                         @SC86190\n         AH    1,BUFSIZ      Ptr to take table                 @SC86190\n         KSYSBUF ,           Other buffers                     @SC86355\n         BR    14            Return with R1 -> end             @SC86295\n*\n* Round up R1 to next page if (R1)-(R2) would cross boundary.  @SC87281\n* (R5) = page size - 1 (should be 4095), return to (R9)        @SC87281\nKRMPGTB  AH    2,BUFSIZ      Tentative end of buffer           @SC87281\nKRMPGT   BCTR  2,0           Last byte                         @SC87281\n         XR    2,1           Same page as first?               @SC87281\n         NR    2,5                                             @SC87281\n         BZR   9             Same page, ok                     @SC87281\nKRMPG    AR    1,5           Round up to next page             @SC87281\n         OR    1,5                                             @SC87281\n         XR    1,5                                             @SC87281\n         BR    9\n         LOCALS ,                                              @SC86295\nKERMIT   EXIT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IK0PRO": {"ttr": 9993, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*COPY                                                 IK0PRO\n         TITLE 'SERVER Routine - performs Server mode functions'\nSERVER   ENTER\n         LA    0,SRVKFIN                                       @SC86295\n         L     1,=A(SRVKCMD)                                   @SC87012\n         BAL   14,LOOPS      Set up command loop               @SC86295\n         KCALL INTINI,1,E=SRVXIT Initialize for server         @SC87300\n         OI    FL2,SRV               Server is on\n         MVI   ERRNUM,ERRNOE No errors yet                     @SC86156\n         BAL   8,SRVLUP      Set state table                   @SC86135\n* Server mode Rpack interpret input table                      @SC86135\n         DC    AL1(AS),AL3(SRVREC)  Micro wants to send a file @SC86135\n         DC    AL1(AC),AL3(SRVHST)  A host command             @SC86171\n         DC    AL1(AI),AL3(0)       Micro sent parms           @SC86135\n         DC    AL1(AG),AL3(SRVGEN)  A generic command          @SC86135\n         DC    AL1(AK),AL3(SRVKRM)  A KERMIT command           @SC86158\n         DC    AL1(AR),AL3(SRVSND)  Micro wants to get a file  @SC86135\n         DC    AL1(00),AL3(SRVILL)  Error routine              @SC86355\nSRVLUP   MVI   SEQ,0         Reset packet number               @SC86135\n         OI    FL1,NAK0              Resend NAK during retry\n         MVC   SRVTIM,TIMOUT Save time-out limit               @SC86355\n         MVI   TIMOUT,120    Set to 2 minutes                  @SC86355\n         MVC   LIMTRY,F5     Error loop 5 times for command    @SC86355\n         MVC   OLDERR,ERRNUM Save for STATUS                   @SC86158\n         BAL   9,INPUT       Read a packet and interpret       @SC86295\n         MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         KCALL SPARSET       Set up for exchange               @SC86152\n         KCALL SPAR          Interpret I packet from other\n         KCALL RPAR          Reply to the I packet\n         BAL   2,SENDACKL            Send an ACK, length set\n         MVI   ERRNUM,ERRNOE OK                                @SC86158\n         B     SRVLUP        Loop again no matter what\n*\nSRVREC   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         XC    SCANPTR,SCANPTR                                 @SC86295\n         LA    0,FFRCF                                         @SC86295\n         KCALL FSPEC,FILNAM  Get filespec                      @SC86295\n         KCALL INTINI,3,E=SRVXIT                               @SC87300\n         KCALL RECEIV        Get the file\n         B     SRVLUP                End of file protocol\n*\nSRVSND   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         BAL   9,DECODEN     Decode the file name              @SC86295\n         ICM   0,B'1111',WBUFL       decoded name length\n         BNP   SRVIPS                                          @SC86158\n         L     1,WBUF                Decoded data\nSRVSNT   STM   0,1,SCANPTR                                     @SC86295\n         LA    0,FFSND                                         @SC86295\n         KCALL FSPEC,IFILE,E=SRVERP   Get filespec             @SC86295\n         XC    SCANPTR,SCANPTR                                 @SC86295\n         LA    0,FFSND+FFRCF                                   @SC86295\n         KCALL FSPEC,JFSPEC,E=SRVERP  Get filespec             @SC86295\nSRVSNC   KCALL SEND\n         B     SRVLUP                Go around again\n*\nSRVGEN   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         BAL   9,DECODEN     Decode the command                @SC86295\n         ICM   0,15,WBUFL    Decoded command length            @SC86158\n         BNP   SRVIPS                                          @SC86158\n         MVI   ERRNUM,ERRNOE OK so far                         @SC86171\n         BCTR  0,0           Remove command from data length   @SC86158\n         L     1,WBUF        Decoded data                      @SC86158\n         IC    4,0(1)                                          @SC86158\n         BAL   2,CLKP        Dispatch on command               @SC86158\n         DC    AL1(AC),AL3(SRVCWD)  cwd                        @SC86158\n         DC    AL1(AD),AL3(SRVDIR)  directory                  @SC86158\n         DC    AL1(AE),AL3(SRVDEL)  erase                      @SC86158\n         DC    AL1(AF),AL3(SRVFIN)  finish                     @SC86158\n         DC    AL1(AH),AL3(SRVHLP)  help                       @SC86158\n         DC    AL1(AK),AL3(SRVCPY)  copy                       @SC86158\n         DC    AL1(AL),AL3(SRVFIN)  bye                        @SC86158\n         DC    AL1(AR),AL3(SRVREN)  rename                     @SC86158\n         DC    AL1(AT),AL3(SRVTYP)  type                       @SC86158\n         DC    AL1(AU),AL3(SRVQDS)  space                      @SC86158\n         DC    AL1(00),AL3(SRVERS)  Unknown command            @SC86158\n*\nSRVILL   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\nSRVERS   MVI   ERRNUM,ERRUSC Unknown Server command            @SC86156\nSRVERP   KCALL SUPFNC,5                                        @SC86158\n         KCALL ERPACK        Send an error packet              @SC86158\n         L     0,IOERC       I/O error count                   @SC86158\n         CL    0,F5          Lots of consecutive errors?       @SC86158\n         BL    SRVLUP        Not yet, OK                       @SC86158\n         B     SRVXIT        Yes, give up now                  @SC86158\n*\nSRVIPS   MVI   ERRNUM,ERRIPS Invalid syntax                    @SC86158\n         B     SRVERP                                          @SC86158\n*\nSRVHST   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         BAL   9,DECODEN     Get command for host              @SC86171\n         BAL   9,SRVGPRW     To EBCDIC, start interception     @SC86295\n         B     LUPHST        Do it                             @SC86295\n*\nSRVKRM   MVC   TIMOUT,SRVTIM Restore timeout setting           @SC86355\n         BAL   9,DECODEN     Get command for Kermit            @SC86295\n         BAL   9,SRVGPRW     To EBCDIC, start interception     @SC86295\n         B     LUPTOK        Parse command                     @SC87012\n*\nSRVKF0   MVI   ERRNUM,ERRNOE No errors                         @SC86295\nSRVKFIN  MVC   OLDERR,ERRNUM Save error code                   @SC86295\n         KCALL SUPFNC,2      Clean up after interception       @SC86295\nSRVKFTX  LM    4,5,TXTPTR                                      @SC86158\n         SR    5,4           Any?                              @SC86158\n         LA    2,SRVLUP      Return adr                        @SC86158\n         BNP   SENDACK       No, just ACK command              @SC86158\n         LA    3,1023(5)     Round up                          @SC86158\n         SRA   3,10          Convert to kbytes                 @SC86158\n         ST    3,KBYTES                                        @SC86158\n         OI    FL4,SFM+TXT                                     @SC86158\n         KCALL SEND          Send all                          @SC86158\n         CLI   ERRNUM,ERRNOE Problem with SEND?                @SC86295\n         BNE   SRVLUP        Yes, remember that                @SC86295\n         MVC   ERRNUM,OLDERR No, use code from commands        @SC86295\n         B     SRVLUP        Get another command               @SC86158\n*\nSRVTYP   OI    FL4,TXT       Send disk file to remote display  @SC86158\n         BAL   9,SRVGSTR     Get file-spec                     @SC86295\n          B    SRVERP        None, error                       @SC86158\n         B     SRVSNT                                          @SC86158\n*\n*        Send remote help message to other system              @SC86158\nSRVHLP   LA    4,RMHTXT      Where to copy HELP TEXT from      @SC86158\n         LA    5,RMHTXTZ     End of text                       @SC86158\n         STM   4,5,TXTPTR                                      @SC86158\n         B     SRVKFTX                                         @SC86158\n*\nSRVDIR   BAL   3,SRVUTL                                        @SC86295\n         DC    AL1(13,4+1)   Wild matches                      @SC86295\n*\nSRVDEL   BAL   3,SRVUTL                                        @SC86295\n         DC    AL1(14,0+1)   No wild matches                   @SC86295\n*\nSRVREN   BAL   3,SRVUTL                                        @SC86295\n         DC    AL1(15,4+2)   Wild matches                      @SC86295\n*\nSRVCPY   BAL   3,SRVUTL                                        @SC86295\n         DC    AL1(16,0+2)   No wild matches                   @SC86295\n*\nSRVCWD   BAL   9,SRVGSTR     Get operand                       @SC86295\n          B    SRVERP                                          @SC86158\n         BAL   9,SRVGPRM     Convert to plist                  @SC86295\n         MVI   ERRNUM,ERRFNF In case of error                  @SC86158\n         KCALL CWDSET,E=SRVERP                                 @SC86158\n         B     SRVKF0        No errors                         @SC86295\n*\nSRVQDS   BAL   9,SRVGSTR     Extract letter                    @SC86295\n          LA   0,0           None, use default                 @SC86158\n         BAL   9,SRVGPRM                                       @SC86295\n         B     LUPSPA                                          @SC86295\n* Generate command PLIST: R3-> parms                           @SC86158\nSRVUTL   LA    2,FILNAM      1st or only filespec              @SC86295\n         LH    4,0(3)                                          @SC86295\n         N     4,F3          Get number of names               @SC86295\nSRVUTLP  XC    SCANPTR,SCANPTR                                 @SC86295\n         BAL   9,SRVGSTR     Extract file-spec                 @SC86295\n          B    SRVUT1        None, check if wildcard allowed   @SC86158\n         STM   0,1,SCANPTR                                     @SC86295\nSRVUT1   LA    0,FFUTL                                         @SC86295\n         TM    1(3),4        Test flag                         @SC86295\n         BZ    *+8                                             @SC86295\n         LA    0,FFUTL+FFWLD Wild match if part omitted        @SC86295\n         KCALL FSPEC,(2),E=SRVERP  Get filespec into command   @SC86295\n         LR    0,6           Length remaining                  @SC86158\n         LR    1,7           Next field                        @SC86158\n         LA    2,IFILE       2nd ptr                           @SC86158\n         BCT   4,SRVUTLP     Loop over file-specs              @SC86158\n         KCALL SUPFNC,1      Start interception                @SC86158\n         CLC   0(1,3),SRVDIR+4                                 @SC86158\n         BE    SRVUT6        Don't issue STATE if DIR cmd      @SC86158\n         MVI   ERRNUM,ERRFNF Assume not found                  @SC86158\n         OPENF T,FILNAM,E=SRVERP                               @SC86295\nSRVUT6   LA    1,FILNAM      1st or only filespec              @SC86295\n         LA    2,IFILE       Possible 2nd                      @SC86295\n         XR    0,0                                             @SC86295\n         IC    0,0(3)                                          @SC86295\n         KCALL DISKIO                                          @SC86295\n         CLI   ERRNUM,ERRNOE Problem?                          @SC86295\n         BNE   SRVERP        Yes, too bad                      @SC86295\n         B     SRVKFIN                                         @SC86295\n* Get substring from Generic command                           @SC86158\n* R0= no. of chars left in packet excluding substr count byte  @SC86158\n* R1-> one before count byte                                   @SC86158\nSRVGSTR  MVI   ERRNUM,ERRMOP Assume missing operand            @SC86158\n         BCTR  0,0           Remove operand length field       @SC86158\n         LA    7,1(1)        ditto                             @SC86158\n         LTR   6,0           If no operands                    @SC86158\n         BNPR  9              then return error                @SC86295\n         UNCHR 0,1(1)        Operand size                      @SC86158\n         BZR   9             Error if zero length field        @SC86295\n         BM    SRVIPS        Really bad                        @SC86158\n         LA    1,2(1)        Location of operand               @SC86158\n         AR    7,0           Get ptr to next field             @SC86158\n         SR    6,0           Length remaining                  @SC86158\n         BM    SRVIPS        Inconsistant                      @SC86158\n         B     4(9)                                            @SC86295\n* Set up copy\nSRVGPRW  ICM   0,15,WBUFL                                      @SC86171\n         BNP   SRVIPS        No text                           @SC86171\n         L     1,WBUF        Ptr to text                       @SC86171\n* Copy parameter at (R1), length in R0 and set up interception @SC86158\nSRVGPRM  LTR   15,0          Any chars?                        @SC86171\n         BNP   SRVGPS        No                                @SC86171\n         BCTR  15,0          Yes, translate                    @SC86171\n         EX    15,TRATOE                                       @SC86171\n         EX    15,TRUPCAS                                      @SC86171\nSRVGPS   STM   0,1,SCANPTR   Save string ptrs                  @SC86158\n         KCALL SUPFNC,1      Start intercepting                @SC86158\n         BR    9                                               @SC86295\n*\nSRVFIN   MVI   WRRD,0                Just write (no read) when ending\n         MVC   S1HND,SVHND   Always use requested handshake    @SC87343\n         BAL   2,SENDACK             Send an ACK\n         L     1,WBUF        Ptr to decoded data               @SC86190\n         CLI   0(1),AL                                         @SC86190\n         BNE   SRVNOLOG      Skip logging out                  @SC86295\n         CLOSF LOGPTR        Close debug-log                   @SC86135\n         KCALL SUPFNC,8      Log out                           @SC86295\nSRVNOLOG DS    0H            (or fall through just in case)    @SC86295\n         MVC   ERRNUM,OLDERR Copy back error number            @SC86171\nSRVXIT   NI    FL2,255-SRV   Turn off SERVER mode              @SC86158\n         KCALL INTINI,0      Clear interrupt trapping\n         RET\n*\nRMHTXT   DC    C'Kermit-&KSYS. Server handles the following:'  @SC86268\n         DC    X'1515'                                         @SC86158\n         DC C'Function          Standard command',X'15'        @SC86158\n         DC C'--------          ----------------',X'1515'      @SC86158\n         DC C'Send a file       SEND file',X'15'               @SC86158\n         DC C'Retrieve a file   GET file',X'15'                @SC86158\n         DC C'Log off system    BYE or LOGOUT',X'15'           @SC86158\n         DC C'Exit from server  FINISH',X'15'                  @SC86158\n         DC C'Issue Kermit cmd  REMOTE KERMIT cmd',X'15'       @SC86158\n         DC C'Issue system cmd  REMOTE HOST \u00a2CP| cmd',X'15'    @SC86268\n         DC C'List directory    REMOTE DIRECTORY file',X'15'   @SC86158\n         DC C'Type a file       REMOTE TYPE file',X'15'        @SC86158\n         DC C'Copy a file       REMOTE COPY f1 f2',X'15'       @SC86158\n         DC C'Rename a file     REMOTE RENAME f1 f2',X'15'     @SC86158\n         DC C'Erase a file      REMOTE DELETE file',X'15'      @SC86158\n         DC C'Change disk area  REMOTE CWD area',X'15'         @SC86158\n         DC C'Show disk space   REMOTE SPACE area',X'15'       @SC86158\nRMHTXTZ  EQU   *                                               @SC86158\n         LOCALS ,                                              @SC86295\nRETADR   DS    A             Return adr if no more TAKE stuff  @SC86295\nCMDPTR   DS    A             Adr of command table              @SC86295\nTAKLEV   DS    F             Take file level                   @SC86121\nTAKTAB   DS    (TAKMAX)F     Tickets for I/O                   @SC86295\nSRVTIM   DS    X             Saved timeout limit               @SC86355\nSERVER   EXIT\n         TITLE 'SEND Routine - sends a file'\n* Send file(s) and set ERRNUM appropriately\n* Entry: filespec pattern in IFILE\nSEND     ENTER\n         XC    TOUTOT(LSTATS),TOUTOT Clear statistics          @SC86295\n         KCALL SUPFNC,10                                       @SC86295\n         ST    15,SECTOT     Save start time                   @SC86295\n         TM    FL4,SFM                                         @SC86295\n         BO    *+10          From memory: keep old file list   @SC86295\n         XC    NSENT,NSENT           Number of files sent\n         MVI   SNFLG,FIRST   Haven't started yet               @SC86295\n         XC    FDATE,FDATE   Clear file date                   @SC86295\n         LA    0,30          Tune up after 30 packets          @SC86345\n         STH   0,SNPKCT                                        @SC86345\n         MVI   REASON,0      Not rejected yet                  @SC86316\n         MVI   SEQ,0         Reset packet number               @SC86135\n       NXTFSET IFILE,E=SNDNON Init for NXTFST call             @SC87012\n         BAL   8,SNDNXT      Set state table                   @SC86135\n* Send mode Rpack interpret input table                        @SC86135\nSNDNST   DC    AL1(AY),AL3(0)        Micro ACK'd               @SC86295\n         DC    AL1(00),AL3(SNDABR)   Error routine             @SC86135\nSNDNXT   CLI   CXZ,AZ\n         BE    SNDBRK        Stop file group send\n         MVI   FRECF,C'F'    Just in case                      @SC86151\n         TM    FL4,SFM                                         @SC86158\n         BO    SNDNOW        Just sending from memory          @SC86158\n         NXTF  E=SNDNON      Get next/first file               @SC86295\n         MVI   CXZ,0                 In case aborted last file\n         MVI   REASON,0      Not rejected yet                  @SC86316\n         L     5,TSENT               TABLE W/FILES SENT SO FAR\n         ICM   4,B'1111',NSENT       Number of files sent so far\n         AIF   ('&KSYS' NE 'CMS').SOPN                         @SC86295\n         BZ    SNDOPN        Go if none sent yet               @SC86295\nSNDTBL   CLC   0(16,5),FILNAM                                  @SC86295\n         BE    SNDNXT                Go if sent already\n         LA    5,LFID(5)     Next file                         @SC86295\n         BCT   4,SNDTBL\n.SOPN    ANOP\nSNDOPN   OPENF I,FILNAM,FILFDB,FILPTR,E=SNDFNF                 @SC87012\n         USING FDBD,1                                          @SC86295\n         MVC   FRECF,FDBRCF  Save format and file size         @SC86295\n         MVC   KBYTES,FDBSIZE                                  @SC86295\n         MVC   FDATE,FDBDATE Save file date                    @SC86295\n         DROP  1                                               @SC86295\n         CLI   TRMLIN,C' '   Alt. line?                        @SC87300\n         BE    SNDNOW        No, be quiet                      @SC87300\n         MVC   CMD(8),=CL8'Sending '  Yes, display message     @SC87300\n         LA    7,CMD+8                                         @SC87300\n         LA    1,FILNAM                                        @SC87300\n         BAL   2,STAFSP      Format name and show it           @SC87300\nSNDNOW   TM    SNFLG,FIRST                                     @SC86295\n         BZ    SNDFIL                Go if not first file\n         NI    SNFLG,255-FIRST No first file flag              @SC86295\n         MVC   LIMTRY,MAXTNT Limit for INIT retries            @SC86345\n         TM    FL4,NPS       Non-protocol?                     @HF86232\n         BZ    SNDPRO        No, normal send message           @HF86232\n         KCALL INTINI,5,E=SNDRET  Initialize for non-protocol  @SC87300\n         B     SNDATZ        Skip protocol stuff               @HF86232\nSNDPRO   KCALL INTINI,2,E=SNDRET  Initialize for send          @SC87300\n         TM    FL2,SRV\n         BO    SNDINI                Go if Server mode\n         L     0,LCLDLY      Time to wait                      @SC86164\n         KCALL SUPFNC,9                                        @SC86295\nSNDINI   DS    0H                                              @SC86152\n         KCALL RPARSET       Set up for exchange               @SC86152\n         KCALL RPAR          Our S packet to send              @SC86152\n         MVI   STYPE,AS              PACKET TYPE = SEND INITIATE\n         BAL   9,INPUTSPK    Send RPAR and Interpret response  @SC86295\n         KCALL SPAR          Interpret reply to our S packet\n         MVC   BCTU,BCTR             Switch chksum to negotiated one\n         MVC   LIMTRY,MAXTRY Reset limit                       @SC86164\n         BAL   14,INCRSEQ\nSNDFIL   MVI   STYPE,AX      Text transmission?                @SC86158\n         TM    FL4,TXT                                         @SC86158\n         BO    *+8           Yes                               @SC86158\n         MVI   STYPE,AF      Packet type = file header         @SC86158\n         XC    DATL,DATL     Null file spec.                   @SC86158\n         TM    FL4,SFM                                         @SC86158\n         BNZ   SNDCNTH       From memory, no file name         @SC86158\n         BAL   9,PAKFIL      Compress to buffer with appends   @HF86223\n         CLI   TRMLIN,C' '   Alt. line?                        @SC87300\n         BE    SNDFIL2       No, be quiet                      @SC87300\n         MVC   CMD(5),=CL5'  as '  Yes, display message        @SC87300\n         L     1,RBUF        Ptr to name in ASCII              @SC87300\n         MVC   CMD+5(250),0(1)                                 @SC87300\n         TR    CMD+5(250),ATOE Back to EBCDIC                  @SC87300\n         LA    0,CMD+5(7)    End of msg + name                 @SC87300\n         BAL   2,STAPMSG     Show sending name                 @SC87300\nSNDFIL2  DS    0H                                              @SC87300\n         L     3,NSENT               Number of files sent so far\n         LR    4,3                   Ditto\n         C     3,=A(MAXNSENT) Did we send more than countable? @SC86135\n         BNL   SNDCNT                Yes, cannot keep track of 'em\n         MH    3,=Y(LFID)    Times length of items             @SC86295\n         A     3,TSENT               Loc in sent-table\n         MVC   0(LFID,3),FILNAM Save fn ft sent                @SC86295\n         LA    4,1(4)                Incr number of sent files\n         ST    4,NSENT               Keep it\nSNDCNT   BAL   9,ENCODEN     Encode fn                         @SC86295\nSNDCNTH  BAL   9,INPUTSPK    Send name and interpret response  @SC86295\n         BAL   14,INCRSEQ\n         MVC   TMP,SCAPA     Copy my flags                     @SC86149\n         NI    TMP,8         Attributes                        @SC86149\n         NC    TMP,RCAPA     Check if both on                  @SC86149\n         BZ    SNDATZ        No, skip it                       @SC86149\n         L     5,ASDATA                                        @SC86295\n         ICM   4,15,KBYTES   File length known?                @SC86295\n         BZ    SNDAT0        No, skip it                       @SC86316\n         MVI   0(5),C'!'     Yes                               @SC86295\n         LA    15,2(5)                                         @SC86295\n         BAL   2,EDDEC       Format it                         @SC86295\n         SR    15,5                                            @SC86295\n         IC    4,ATOE+ABL-2(15) Indicate number of digits      @SC86295\n         STC   4,1(5)                                          @SC86295\n         AR    5,15          End of string                     @SC86295\nSNDAT0   MVC   0(L'SYSATR,5),SYSATR                            @SC86316\n         LA    5,L'SYSATR(5) System code                       @SC86295\n         MVC   0(3,5),=C'\"!B' Say it's binary                  @SC86316\n         TM    FL1,BINF      Binary file?                      @SC86149\n         BO    SNDAT1        Yes                               @SC86316\n         MVC   2(4,5),=C'A*!A'  No, also say it's ASCII        @SC86316\n         LA    5,3(5)        Advance over extra item           @SC86316\nSNDAT1   LA    5,3(5)                                          @SC86316\n         IC    4,TYPFIL      Specific file type                @SC86295\n         BAL   2,CLKP        Dispatch via table                @SC86295\n         DC    C'T',AL3(SNDATT)  Text                          @SC86295\n         DC    C'D',AL3(SNDATD)  D-binary                      @SC86295\n         DC    C'V',AL3(SNDATV)  V-binary                      @SC86295\n         DC    X'0',AL3(SNDAT3)  Must be Binary                @SC86295\nSNDATT   BAL   2,SNDAT2                                        @SC86295\n         DC    AL1(3),C'AMJ' Format is delimited               @SC86295\nSNDATD   BAL   2,SNDAT2                                        @SC86295\n         DC    AL1(2),C'D%'  Format is undelimited             @SC86316\nSNDATV   BAL   2,SNDAT2                                        @SC86295\n         DC    AL1(2),C'V\"'  Format is 2-byte binary prefix    @SC86295\nSNDAT2   MVI   0(5),C'/'     Format                            @SC86295\n         MVC   1(9,5),0(2)   Copy string                       @SC86295\n         TR    1(1,5),ATOE+ABL Convert to char                 @SC86295\n         SR    4,4                                             @SC86295\n         IC    4,0(2)        Get length                        @SC86295\n         LA    5,2(4,5)      Update string ptr                 @SC86295\nSNDAT3   CLI   FDATE,0       File date defined?                @SC86295\n         BE    SNDAT9        No, skip it                       @SC86295\n         MVC   0(2,5),=C'#(' Yes, use yyyymmdd                 @SC86295\n         UNPK  2(9,5),FDATE(5) Insert zones                    @SC86295\n         LA    5,10(5)       Update ptr                        @SC86295\nSNDAT9   L     15,ASDATA                                       @SC86295\n         SR    5,15                                            @SC86295\n         TR    0(256,15),ETOA Convert to ASCII                 @SC86295\n         ST    5,DATL        Set length                        @SC86295\n         LA    8,SNDNST      Restore state ptr                 @SC86295\n         MVI   STYPE,AA                                        @SC86149\n         BAL   9,INPUTSPK    Send it                           @SC86295\n         BAL   14,INCRSEQ                                      @SC86149\n         CLC   DATL,F0       Any objections?                   @SC86149\n         BE    SNDATZ        Ok                                @SC86149\n         L     1,ARDATA                                        @SC86316\n         CLI   0(1),AN       Refused?                          @SC86149\n         BE    SNDCAN        Sigh                              @SC86149\nSNDATZ   DS    0H                                              @SC86149\n         NI    FL1,255-EOF           Not end of file yet\n         BAL   14,RDWSET     Check for special format          @SC86151\n         XC    RBUFL,RBUFL           No data in input buffer\n         TM    FL4,NPS       Non-protocol?                     @SC86165\n         BO    SNDNPS        Yes, do it                        @SC86165\nSNDENC   KCALL ENCODE,E=SNDENX Encode the data and more\nSNDDAT   MVI   STYPE,AD              PACKET TYPE = DATA\n         BAL   9,INPUTSPK    Send data and interpret reply     @SC86295\n         BAL   14,INCRSEQ\n         LH    15,SNPKCT                                       @SC86345\n         BCT   15,SNDTUNZ    No tuning yet                     @SC86345\n         CLC   MAXSIZ+4,AKMAX Long packets selected?           @SC86345\n         BNP   SNDTUNY       No                                @SC86345\n         BAL   9,OPTPKT      Calculate optimum size            @SC86345\n         LTR   15,15         Valid?                            @SC86345\n         BNP   SNDTUNY       No                                @SC86345\n         C     15,MAXSIZ+4   Other Kermit's limit              @SC86345\n         BNH   *+8                                             @SC86345\n         L     15,MAXSIZ+4                                     @SC86345\n         C     15,AKMAX                                        @SC86345\n         BNL   *+8                                             @SC86345\n         L     15,AKMAX      Don't get too small               @SC86345\n         ST    15,MAXSIZ     Set send limit                    @SC86345\nSNDTUNY  LA    15,20         Repeat after 20 more              @SC86345\nSNDTUNZ  STH   15,SNPKCT                                       @SC86345\n         CLC   DATL,F1\n         BNE   SNDENC                Go if no Data in ack\n         L     1,ARDATA                                        @SC86190\n         CLI   0(1),AX                                         @SC86190\n         BE    SNDCAN                Go if Abort sending file\n         CLI   0(1),AZ                                         @SC86190\n         BNE   SNDENC                Go if not Abort sending grp\nSNDCAN   MVC   CXZ,0(1)      Pick up data                      @SC86190\n         MVI   ERRNUM,ERRTRC Send cancelled                    @SC86156\n         CLC   DATL,F2       Any reason given (if A-pkt)       @SC86316\n         BL    SNDEOF        None                              @SC86316\n         UNCHR 2,1(1),REASON Yes, save it                      @SC86316\nSNDEOF   BAL   9,SNDCLS      Close file                        @SC86295\n         MVI   STYPE,AZ              PACKET TYPE = EOF\n         XC    DATL,DATL\n         L     9,ASDATA                                        @SC86295\n         MVI   0(9),AD       In case of discard                @SC86295\n         CLI   CXZ,0         Aborting this file?               @SC86125\n         BE    *+8           No, ok                            @SC86125\n         MVI   DATL+3,1      Yes, send 'D'                     @SC86125\n         BAL   9,INPUTSPK    Send EOF and Interpret response   @SC86295\n         BAL   14,INCRSEQ\n         TM    FL4,SFM                                         @SC86158\n         BO    SNDBRK        Memory has only one 'file'        @SC86158\n         B     SNDNXT                else GET-NEXT-FILE\n*\nSNDNPS   MVI   WRRD,0        Set for send only                 @SC86165\nSNDNPSL  KCALL NPREAD,E=(SNDABR,P)                             @SC86165\n         CLC   SNDPKL,F0     OK, any data?                     @SC86165\n         BE    SNDNPZ        No, must be done                  @SC86165\n         KCALL SIO,E=SNDABR  Send what we got                  @SC86165\n         TM    FL1,EOF       Any more?                         @SC86165\n         BZ    SNDNPSL       Yes, get it                       @SC86165\nSNDNPZ   BAL   9,SNDCLS      Reached end                       @SC86295\n         B     SNDBR2        All done                          @SC86165\n*\nSNDENX   LTR   15,15                 Positive or negative error?\n         BP    SNDABR                Pos: error from ENCODE, not EOF\n         CLC   DATL,F0\n         BE    SNDEOF                No more data to send\n         B     SNDDAT                Send last chunk\n*\nSNDNON   TM    SNFLG,FIRST                                     @SC86295\n         BZ    SNDBRK                Go if not first file\nSNDFNF   MVI   ERRNUM,ERRFNF Not found                         @SC87012\n         TM    FL2,SRV\n         BO    SNDABR                Go if server\n         B     SNDRET                                          @SC86295\n*\nSNDBRK   MVI   STYPE,AB              PACKET TYPE = BREAK\n         XC    DATL,DATL\n         BAL   9,INPUTSPK    Send BRK and Interpret response   @SC86295\nSNDBR2   DS    0H                                              @SC86165\n         MVI   ERRNUM,ERRNOE Reset error (OK)                  @SC86156\n         CLI   CXZ,0\n         BE    SNDRET                Go if x-fer not stopped\n         MVI   ERRNUM,ERRTRC Set this anyway                   @SC86156\nSNDABR   BAL   9,SNDCLS      Close disk file                   @SC86295\n         TM    FL4,NPS       Non-protocol?                     @SC86165\n         BO    SNDRET        Yes, skip error packet            @SC86165\n         KCALL ERPACK        Send error packet\nSNDRET   NI    FL4,255-NPS-SFM-TXT                             @SC86165\n         B     RETSNRC       Close statistics and return       @SC86295\n*\nSNDCLS   TM    FL4,SFM       Text xmit?                        @SC86158\n         BOR   9             Yes, no disk file                 @SC86295\n         CLOSF FILPTR        Close it                          @SC86158\n         BR    9                                               @SC86295\n         LOCALS ,                                              @SC86295\nSNPKCT   DS    H             Cyclic counter for tuning         @SC86345\nCXZ      DS    X             Flag for aborted transmission     @SC86295\nSNFLG    DS    X             More local flags                  @SC86295\nFIRST    EQU   X'80'         File is the first one             @SC86295\nSEND     EXIT\n         TITLE 'RECEIV Routine - receives a file'\n* Receive file(s) and set ERRNUM appropriately\n* Entry: filespec in FILNAM if ROVR is set\nRECEIV   ENTER\n         XC    TOUTOT(LSTATS),TOUTOT Clear statistics          @SC86295\n         KCALL SUPFNC,10                                       @SC86295\n         ST    15,SECTOT     Save start time                   @SC86295\n         MVI   SEQ,0         Reset packet number               @SC86135\n         KCALL SPARSET       Set up for exchange               @SC86152\n         LA    8,RECINST             Next state table for RECEIVE I\n         MVC   LIMTRY,MAXTNT Limit for INIT retries            @SC86345\n         TM    FL2,SRV\n         BO    RECSRV                Go if in server\n         KCALL RPACK         Get init info\nRECSRV   SR    3,3                   Clear retry counter for INPUTLUP\n         BAL   9,INPUTINR    Interpret response to RPAC        @SC86295\n         KCALL SPAR          Interpret his S packet\n         KCALL RPAR          Reply to the S packet\n         BAL   2,SENDACKL            Send an ACK, length set\n         MVC   BCTU,BCTR             Restore desired chksum\n         MVC   LIMTRY,MAXTRY Set retry limit                   @SC86164\n         BAL   14,INCRSEQ\nRECFIL   LA    8,RECFNST             Next state table for RECEIVE F\n         BAL   9,INPUT       Read a packet and interpret       @SC86295\n         NI    RFLG,255-RTRC-RRJC Clear each time              @SC86316\n         MVI   REASON,0\n         NI    FL1,255-EOF           Turn of EOF = no ctl-z seen\n         TM    FL1,ROVR\n         BO    RECOVR                Overwrite the name sent?\n         BAL   9,DECODEN     Decode the input                  @SC86295\n         L     1,WBUF                Start of data\n         L     0,WBUFL               Data length decoded\n         TR    0(256,1),ATOE         First to EBCDIC\n         STM   0,1,SCANPTR   Set up scan                       @SC86295\n         MVC   CMD+5(250),0(1)  Extra copy for display         @SC87300\n         LA    0,FFHDR                                         @SC86295\n         KCALL FSPEC,FILNAM                                    @SC86295\n         CLI   TRMLIN,C' '   Alt. line?                        @SC87300\n         BE    RECOVR        No, be quiet                      @SC87300\n         MVC   CMD(5),=CL5'File '  Yes, display message        @SC87300\n         LA    0,CMD+5                                         @SC87300\n         A     0,WBUFL                                         @SC87300\n         BAL   2,STAPMSG     Show name                         @SC87300\nRECOVR   LA    3,FILNAM              Point to fn\n         TM    FL3,APPN      Appending to old files?           @SC86203\n         BO    RECOPN        Yes, just do it                   @SC86295\n         TM    FL1,REN\n         BZ    RECOPN        No, just do it                    @SC86295\n         LA    0,FFNEW                                         @SC86295\n         KCALL FSPEC,FILNAM,E=RECRER Check collisions          @SC86295\n         CLI   TRMLIN,C' '   Alt. line?                        @SC87300\n         BE    RECOPN        No, be quiet                      @SC87300\n         MVC   CMD(9),=CL9'  Rcv as '  Yes, display message    @SC87300\n         LA    7,CMD+9                                         @SC87300\n         LA    1,FILNAM                                        @SC87300\n         BAL   2,STAFSP      Format name and show it           @SC87300\nRECOPN   XC    FILFLGS,FL3   Set flag for DISP                 @SC86295\n         NI    FILFLGS,255-APPN                                @SC86295\n         XC    FILFLGS,FL3                                     @SC86295\n         OPENF O,FILNAM,FILFDB,FILPTR,E=RECRER                 @SC86295\n         USING FDBD,1                                          @SC86295\n         SR    0,0                                             @SC86295\n         ICM   0,3,FDBLRC                                      @SC86295\n         ST    0,FSIZE       Copy LRECL                        @SC86295\n         MVC   FRECF,FDBRCF  Save info                         @SC86295\n         DROP  1                                               @SC86295\n         BAL   14,RDWSET     Check for special format          @SC86295\n         BAL   2,SENDACK\n         XC    WBUFL,WBUFL           Data length in WBUF\n         MVI   PREV,0                Char previously decoded\n         LA    8,RECANST     State table: REC D or A           @SC86149\nRECDAT   BAL   14,INCRSEQ                                      @SC86316\n         BAL   9,INPUT       Read a packet and interpret       @SC86295\n         LA    8,RECDNST     Next state table: REC D only      @SC86149\n         KCALL DECODE,E=RECABR Decode and write to file        @SC86316\nRECDAK   BAL   2,SENDACK     Send an ack                       @SC86149\n         B     RECDAT\n*\nRECCKA   L     2,ARDATA      Attributes                        @SC86316\n         LR    5,2           Save start                        @SC86316\n         L     3,DATL        Get length                        @SC86316\n         LA    15,ATOE                                         @SC86316\n         BAL   14,TRANSLAT   Convert to EBCDIC                 @SC86316\n         LR    3,2           Save end                          @SC86316\n         MVI   ERRNUM,ERRIPS In case of error                  @SC86316\nRECCKL   CR    5,3           Another attribute?                @SC86316\n         BNL   RECDAK        No, done                          @SC86316\n         LR    6,5                                             @SC86316\n         IC    4,0(6)        Get code                          @SC86316\n         SR    5,5                                             @SC86316\n         IC    5,1(6)        Get length of value               @SC86316\n         UNCHR 7,ETOA(5)                                       @SC86316\n         BM    RECABR        Invalid: length was <0            @SC86316\n         LA    6,2(6)        Space over code+length            @SC86316\n         LA    5,0(7,6)      Next field                        @SC86316\n         CR    5,3           Does it match?                    @SC86316\n         BH    RECABR        Overflows data                    @SC86316\n         BAL   2,CLKP                                          @SC86316\n         DC    C'!',AL3(RECALN) File length                    @SC86316\n         DC    X'0',AL3(RECCKL) Other                          @SC86316\nRECALN   BAL   14,GETNUM     Get file length                   @SC86316\n          B    RECABR                                          @SC86316\n         LR    2,0                                             @SC86316\n         LA    0,11          Ask for length check              @SC86316\n         KCALL DISKIO,FILPTR,E=RECRJC                          @SC86316\n         B     RECCKL        Ok, keep looking                  @SC86316\n*\nRECRJC   LA    8,RECZNST     Now accept only EOF pkt           @SC86316\n         L     9,ASDATA      Output buffer                     @SC86316\n         MVI   0(9),C'N'     Mark it rejected                  @SC86316\n         S     6,F2          Back up to attribute code         @SC86316\n         MVC   1(1,9),0(6)   Copy to output                    @SC86316\n         TR    0(2,9),ETOA   ASCIIify                          @SC86316\n         UNCHR 0,1(9),REASON                                   @SC86316\n         OI    RFLG,RRJC     Mark it rejected                  @SC86316\n         MVC   DATL,F2       Data = 'N' + code                 @SC86316\n         BAL   2,SENDACKL    Acknowledge                       @SC86316\n         B     RECDAT        And wait for EOF                  @SC86316\n*\nRECEOF   CLC   DATL,F1\n         BNE   RECWR                 One piece of data\n         L     1,ARDATA                                        @SC86190\n         CLI   0(1),AD                                         @SC86190\n         BNE   RECWR                 Go if not discard\n         CLOSF FILPTR        Close the file                    @SC86135\n         TM    FL3,APPN      Appending to old file?            @SC86225\n         BO    RECKEP        Yes, keep what we got             @SC86225\n         TM    FL5,KEEP                                        @SC86225\n         BO    RECKEP        Don't delete it anyway            @SC86225\n         ERASF FILNAM        And delete it                     @SC86295\nRECKEP   MVI   ERRNUM,ERRTRC Receive cancelled                 @SC86225\n         OI    RFLG,RTRC     Remember that                     @SC86295\n         B     RECACK                Pick up later on\n* If data left in buffer when we get EOF, write remaining data.\nRECWR    CLC   WBUFL,F0\n         BE    RECCLO                No data in WBUF, send Ack\n         KCALL OUTBUF,E=RECABR Write out buffer\nRECCLO   CLOSF FILPTR        Close it                          @SC86135\nRECACK   BAL   2,SENDACK             Send an ACK\n         BAL   14,INCRSEQ\n         NI    FL1,255-ROVR          Only change first file\n         B     RECFIL\n*\nRECBRK   TM    FL2,SRV       Server will read another command  @SC87343\n         BO    *+8            so don't zap write/read flag     @SC87343\n         MVI   WRRD,0        No read for Ack'ing BRK pkt       @SC87343\n         BAL   2,SENDACK             Send an ACK\n         MVI   ERRNUM,ERRNOE Reset error                       @SC86156\n         TM    RFLG,RTRC+RRJC                                  @SC86295\n         BZ    RECRET        OK                                @SC86295\n         MVI   ERRNUM,ERRTRC Receive cancelled                 @SC86156\n         B     RECABR\n*\nRECBAD   MVI   ERRNUM,ERRFNE Illegal filename                  @SC86156\n         B     RECABR\n*\nRECRER   ERRF  ,             Cannot write. Analyze error       @SC87338\nRECABR   CLOSF FILPTR        Close open file                   @SC86135\n         KCALL ERPACK        Send error packet                 @SC86316\nRECRET   ICM   0,15,RECTRC   Any records truncated?            @SC87268\n         BZ    RETSNRC       None                              @SC87268\n         CLI   ERRNUM,0                                        @SC87268\n         BNE   *+8           Already got some (worse) error    @SC87268\n         MVI   ERRNUM,ERRRTR Indicate error                    @SC87268\n         B     RETSNRC       Close statistics and return       @SC87268\n* Receive mode Rpack interpret input tables\nRECINST  DC    AL1(AS),AL3(0)        Micro sent parm\n         DC    AL1(00),AL3(RECABR)   Error routine\nRECFNST  DC    AL1(AF),AL3(0)        Micro sent a filename\n         DC    AL1(AX),AL3(0)        Micro sent a filename     @SC86155\n         DC    AL1(AB),AL3(RECBRK)   Micro sent end of transaction\n         DC    AL1(00),AL3(RECABR)   Error return\nRECANST  DC    AL1(AA),AL3(RECCKA)   Micro sent A-packet       @SC86316\nRECDNST  DC    AL1(AD),AL3(0)        Micro sent data\nRECZNST  DC    AL1(AZ),AL3(RECEOF)   Micro sent EOF            @SC86316\n         DC    AL1(00),AL3(RECABR)   Error return\n         LOCALS ,                                              @SC86295\nRFLG     DS    X             Local flags                       @SC86295\nRTRC     EQU   X'80'         Other side cancelled              @SC86295\nRRJC     EQU   X'40'         I cancelled                       @SC86316\nRECEIV   EXIT\n         TITLE 'SPAR Routine - use parms from other host in DATA'\nSPAR     ENTER\n         L     7,DATL        Data length                       @SC86120\n         L     5,ARDATA      Point to data                     @SC86190\n         LA    8,DEFPARM                                       @SC86190\n         SR    8,5           Set up offset for defaults        @SC86190\n         BCTR  5,0           Point one before data             @SC86190\n         LA    6,1           Set up BXH                        @SC86120\n         AR    7,5           Point to last data char           @SC86120\n         BAL   14,SPARFTCH   Get a char                        @SC86120\n         UNCHR 4             Max send packet size              @SC86120\n         C     4,AKMIN       Less than min Kermit size?        @SC86295\n         BNL   SPARSPM               No, it's OK\n         LA    4,KMIN                Else, use the min value\nSPARSPM  C     4,AKMAX       More than max Kermit size?        @SC86295\n         BNH   SPARSPS               No, it's OK\n         LA    4,KMAX\nSPARSPS  ST    4,SPSIZ               Save max send packet size\n         BAL   14,SPARFTCH   Get a char                        @SC86120\n         UNCHR 4,,TIMOUT     Timeout micro wants us to do      @SC86120\n         BAL   14,SPARFTCH   Get a char                        @SC86120\n         UNCHR 4,,SPADN      Pad count micro wants             @SC86120\n         BAL   14,SPARFTCH                                     @SC86120\n         CTL   4,,SPADC      Pad char micro wants              @SC86120\n         BAL   14,SPARFTCH                                     @SC86120\n         UNCHR 4,,SEOL       EOL char we have to use           @SC86120\n         CLC   SEOL,SMARK\n         BE    SPARCR                Use CR if EOL=MARK char\n         CLI   SEOL,ABL\n         BL    SPAREOL2      OK if within ctl range            @SC87274\nSPARCR   MVI   SEOL,CR               Send a CR to that crazy micro\nSPAREOL2 MVC   S1EOL,SEOL    Make extra copy                   @SC87274\nSPARCTL  BAL   14,SPARFTCH                                     @SC86120\n         NOTQR *+8           Go if not 33-62 or 96-126         @SC86120\n          LA   4,A#          Default ctl-quote                 @SC86120\n         STC   4,RCTLQ       Save ctl-quote micro's using      @SC86120\n         BAL   14,SPARFTCH                                     @SC86120\n         CLI   EBQC,0                                          @SC87008\n         BE    SPARNB        8-bit is off                      @SC87008\n         CLM   4,1,=AL1(AY)                                    @SC86120\n         BNE   *+8                                             @SC86120\n         IC    4,EBQC        Micro agrees                      @SC86120\n         BAL   14,SPARCKQX                                     @SC86120\n          B    SPARNB        Micro says no 8-bit quoting       @SC86120\n         CLI   EBQ,0\n         BE    SPAREBQ               Use it if we agree\n         CLM   4,1,EBQ                                         @SC86120\n         BE    SPAREBQ               Or we match\nSPARNB   SR    4,4                   Otherwise cannot do it\nSPAREBQ  STC   4,EBQ                 Set 8-bit-quoting char/flag\n         BAL   14,SPARFTCH                                     @SC86120\n         S     4,=A(A0)                                        @SC86120\n         BNP   SPARBCD       Go if less than 1, use 1          @SC86120\n         C     4,F3                                            @SC86295\n         BH    SPARBCD               Go if over 3, use 1\n         CLM   4,B'0001',BCTR        Requested and our BCT same?\n         BE    SPARBCT               Yes, they are the same\n         CLI   BCTR,0\n         BE    SPARBCT               We'll accept anything\nSPARBCD  LA    4,1                   We don't match, use 1\nSPARBCT  STC   4,BCTR                Micro's chksum length\n         BAL   14,SPARFTCH                                     @SC86120\n         BAL   14,SPARCKQX   See if valid                      @SC86120\n          B    SPARNR        No good                           @SC86120\n         CLM   4,1,EBQ                                         @SC86120\n         BE    SPARNR                Go if same prefix\n         CLI   RPTQ,0\n         BE    SPARRQ                We can use anything\n         CLM   4,1,RPTQ                                        @SC86120\n         BE    SPARRQ                We match\nSPARNR   SR    4,4                   No repeat quoting\nSPARRQ   STC   4,RPTQ                Use negotiated repeat quote\n         BAL   14,SPARFTCH   Get capabilities                  @SC86149\n         UNCHR 4,,RCAPA                                        @SC86149\n         TM    RCAPA,LONGP   Test for long packet bit          @TB86196\n         BZ    SPARNX        No extended packets               @TB86196\n         MVC   TMP,RCAPA                                       @SC86202\nSPARNS1  TM    TMP,MORCAPAS  Test for more CAPAS bytes         @SC86202\n         BZ    SPARNS2       No more                           @TB86196\n         BAL   14,SPARFTCH   Get capabilities                  @TB86196\n         UNCHR 4,,TMP                                          @TB86196\n         B     SPARNS1                                         @TB86196\nSPARNS2  BAL   14,SPARFTCH   Skip window byte                  @SC86202\n         BAL   14,SPARFTCH   Get next header byte              @TB86196\n         LR    1,4                                             @TB86196\n         UNCHR 1             MAXLX1 byte                       @TB86196\n         MH    1,XLFCT+2     Times the factor                  @SC86202\n         BAL   14,SPARFTCH   Get next header byte              @TB86196\n         UNCHR 4             MAXLX2 byte                       @TB86196\n         AR    1,4           Compute total length              @TB86196\n         BNP   SPARNX        If zero, use default              @TB86196\n         ST    1,SPSIZ       New SPSIZ for extended            @TB86196\nSPARNX   DS    0H                                              @TB86196\n* Now compute MAXSIZ\n         L     5,SPSIZ               Maximum send packet size\n         C     5,AKMAX       Check max packet size             @TB86196\n         BNH   SPARNY        Not long                          @TB86196\n         S     5,F3          Extended header length            @TB86196\n         CLI   TRMTP,C'T'                                      @SC87166\n         BNE   SPARNY        Not TTY ==> not limited           @SC87166\n         C     5,AMAXWT                                        @SC86205\n         BNH   *+8                                             @SC86205\n         L     5,AMAXWT      Biggest we can send               @SC86205\nSPARNY   DS    0H                                              @SC86205\n         S     5,F5                  Minus control information\n         IC    4,BCTR                Get user's negotiated BCT\n         SR    5,4                   Minus checksum length\n         CLI   EBQ,0\n         BE    SPARNEBQ              Go if no 8-Bit quoting\n         BCTR  5,0                   Another one for 8-bit quoting\nSPARNEBQ CLI   RPTQ,0\n         BE    SPARNRQ               Go if no repeat char quoting\n         BCTR  5,0\n         BCTR  5,0                   Minus two for repeat prefix\nSPARNRQ  ST    5,MAXSIZ              Save max length for data field\n         ST    5,MAXSIZ+4    Static extra copy (for tuning)\nSPARBAK  RET                                                   @SC86152\nSPARCKQX CLM   4,1,RCTLQ                                       @SC86120\n         BER   14            Cannot use same prefix            @SC86120\n         CLM   4,1,SCTLQ                                       @SC86120\n         BER   14                                              @SC86120\n         B     CHKQR         Test if 33-62 or 96-126           @SC86120\nSPARFTCH L     4,SPACE       Default                           @SC86120\n         BXH   5,6,*+8       Check for more data               @SC86120\n         IC    4,0(5)        OK, use it                        @SC86120\n         C     4,SPACE       Default?                          @SC86120\n         BNER  14                                              @SC86120\n         IC    4,0(5,8)      Yes, get default value            @SC86190\n         BR    14                                              @SC86120\n*\n*        SPARSET Routine - set up for exchange (SPAR 1st)      @SC86152\n*\nSPARSET  ENTER ALT                                             @SC86152\n         MVI   BCTR,0        Use whatever micro wants          @SC86152\n         MVI   EBQ,0                                           @SC86152\n         MVI   RPTQ,0                                          @SC86152\n         MVI   BCTU,1        Must start at 1                   @SC86295\n         B     SPARBAK                                         @SC86152\n         LOCALS ,                                              @SC86295\nSPAR     EXIT\n         TITLE 'RPAR Routine - sets up parms to send to other host'\nRPAR     ENTER\n         OI    FL3,PXCH      Parameters exchanged now          @SC87012\n         L     9,ASDATA                                        @SC86295\n         TOCHR 5,RPSIZ+3,0(9)  Receive packet size limit       @SC86295\n         TOCHR 5,RTIMO,1(9)  Time limit for micro to wait      @SC86295\n         TOCHR 5,RPADN,2(9)  Number of padding chars.          @SC86295\n         CTL   5,RPADC,3(9)  Pad character                     @SC86295\n         TOCHR 5,REOL,4(9)   EOL char I need                   @SC86295\n         MVC   5(1,9),SCTLQ                                    @SC86295\n         MVC   6(1,9),EBQ                                      @SC86295\n         CLI   EBQ,0\n         BNE   RPARBCT               It's OK if not null\n         MVI   6(9),AN       Else, use an N                    @SC86295\nRPARBCT  MVC   7(1,9),BCTR   Negotiated checksum               @SC86295\n         OI    7(9),A0       Make into a real digit            @SC86295\n         MVC   8(1,9),RPTQ                                     @SC86295\n         CLI   RPTQ,0\n         BNE   *+8           It's ok if not null               @SC86149\n         MVI   8(9),ABL      Else, use a blank                 @SC86295\n         LA    0,10          Size of data                      @SC86149\n         NI    SCAPA,255-LONGP No long packets                 @TB86196\n         LA    5,KMAX        Largest old KERMIT size           @TB86196\n         C     5,RPSIZ       Check max packet size             @TB86196\n         BNL   RPARNEX       KMAX >= RPSIZ                     @TB86196\n         TOCHR 5,,0(9)       Set largest packet size           @SC86295\n         OI    SCAPA,LONGP   Long packets                      @TB86196\n         MVI   10(9),ABL     Window size is blank              @SC86295\n         L     5,RPSIZ       Packet size                       @SC86205\n         CLI   TRMTP,C'T'                                      @SC87166\n         BNE   RPARS1        Not TTY ==> not limited           @SC87166\n         C     5,AMAXRT                                        @SC86205\n         BNH   *+8                                             @SC86205\n         L     5,AMAXRT      Biggest we can send               @SC86205\nRPARS1   SR    4,4                                             @SC86205\n         D     4,XLFCT       Compute extended size bytes       @TB86196\n         TOCHR 5,,11(9)      Extended size 1                   @SC86295\n         TOCHR 4,,12(9)      Extended size 2                   @SC86295\n         LA    0,13          Size of data                      @TB86196\nRPARNEX  DS    0H                                              @TB86196\n         TOCHR 5,SCAPA,9(9)  Capabilities                      @SC86295\n         ST    0,DATL        Return it                         @SC86149\n         LA    0,3           Reset function                    @SC86295\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    RPARSTT       3708/fullscreen                   @SC87300\n         CLI   TRMTP,C'T'                                      @SC87166\n         BE    RPARSTT       TTY                               @SC87166\n         KCALL SCRNIO                                          @SC86295\n         B     RPARBAK                                         @SC86295\nRPARSTT  KCALL TERMIO                                          @SC86295\nRPARBAK  RET                                                   @SC86152\n*\n*        RPARSET Routine - set up for exchange (RPAR 1st)      @SC86152\n*\nRPARSET  ENTER ALT                                             @SC86152\n         MVI   BCTU,1        Must start at 1                   @SC86295\n         TM    FL2,SRV       Possible I-packet exchange?       @SC87169\n         BZ    RPSCLR        Not in Server mode                @SC87169\n         TM    FL3,PXCH      Any exchange since last SET?      @SC87169\n         BO    RPARBAK       Yes, keep latest settings         @SC87169\nRPSCLR   MVC   BCTR,BCTC     Use what user set                 @SC87169\n         MVC   EBQ,EBQC      Set what we want otherwise        @SC86152\nRPSEBQ   CLI   RPTQ,0                                          @SC86152\n         BNE   RPARBAK       If RPTQ is set leave it alone     @SC86152\n         MVC   RPTQ,RPTQC    Set what we want otherwise        @SC86152\n         B     RPARBAK                                         @SC86152\n         LOCALS ,                                              @SC86295\nRPAR     EXIT\n         TITLE 'ENCODE Routine - encode pkts from RBUF into DATA'\nENCODE   ENTER\n         L     6,MAXSIZ                                        @SC86295\n         L     9,ASDATA      Pointer to data to fill           @SC86190\n         AR    6,9           Limit on output                   @SC86295\nENCAGAIN L     8,RBUFP               Index of next char in RBUF\n         L     5,RBUFL       Data length in RBUF               @SC86163\n         L     1,RBUF                Point to start of buffer\n         AR    5,1                   Point to char after last one\n         AR    8,1           Point to char to encode           @SC86163\nENCNXT   CR    8,5           Are we past the last char?        @SC86163\n         BL    ENCPKT        No, not exhausted RBUF yet        @SC86163\n         TM    FL1,NAME                                        @SC86163\n         BO    ENCEMPT       No more disk read if file name    @SC86163\n         KCALL INBUF,E=ENCRET                                  @SC86163\n         B     ENCAGAIN                                        @SC86163\nENCPKT   CLI   RPTQ,0\n         BE    ENCEBQ                Go if no repeat quoting\n         LA    14,3(8)       Point to 3 chars past current     @SC86163\n         CR    14,5          Is this past the last char?       @SC86163\n         BNL   ENCEBQ                Yes, not enough to use repeat\n         CLC   0(2,8),1(8)   At least 3 of these?              @SC86163\n         BNE   ENCEBQ        No, not enough                    @SC86163\n         LR    2,8           Start of string                   @SC86163\n         LA    3,KMAX(8)     Max allowed by notation           @SC86163\n         CR    3,5           Watch for end of data             @SC86163\n         BNH   *+6                                             @SC86163\n         LR    3,5           Truncate at max                   @SC86163\n         LR    15,3          Same limit                        @SC86163\n         SR    3,2           Get lengths                       @SC86163\n         SR    15,14         Length of shorter string          @SC86163\n         ICM   15,8,0(8)     Use starting char for fill        @SC86163\n         CLCL  2,14          Find end of match                 @SC86163\n         SR    14,8          Get repeat count                  @SC86163\n         AR    8,14          Advance ptr to                    @SC86163\n         BCTR  8,0             last matching char              @SC86163\n         MVC   0(1,9),RPTQ   Put repeat quote into DATA        @SC86163\n         TOCHR 14,,1(9)                                        @SC86163\n         LA    9,2(9)        Count 2 for RPTQ and rpt count    @SC86295\nENCEBQ   TM    0(8),128                                        @SC86163\n         BZ    ENCCTL                no 8th bit\n         CLI   EBQ,0\n         BE    ENCCTL                cannot use 8bit quoting\n         NI    0(8),127      Get rid of 8th bit                @SC86163\n         MVC   0(1,9),EBQ            Move EBQ into DATA\n         LA    9,1(9)        Count for it                      @SC86295\nENCCTL   IC    7,0(8)        Load desired char                 @SC86163\n         CLI   0(8),ABL                                        @SC86163\n         BL    ENCSCTL               within control range\n         CLI   0(8),ADEL                                       @SC86163\n         BNE   ENCNCTL               not a control char\nENCSCTL  CTL   7             Convert to non-control            @SC86163\n         B     ENCMVCTL\n*\nENCNCTL  CLM   7,1,SCTLQ                                       @SC86163\n         BE    ENCMVCTL              send prefix if ctl quote char\n         CLM   7,1,EBQ                                         @SC86163\n         BE    ENCMVCTL              ditto if 8bit quote\n         CLM   7,1,RPTQ                                        @SC86163\n         BNE   ENCNOCTL              not so if not repeat quote\nENCMVCTL MVC   0(1,9),SCTLQ          Move a ctl quote\n         LA    9,1(9)                incr for it\nENCNOCTL STC   7,0(9)        Move the char, finally!           @SC86163\n         LA    9,1(9)                incr for it\n         LA    8,1(8)        Incr RBUF pointer                 @SC86163\n         CR    9,6           Did we reach max pkt size?        @SC86295\n         BL    ENCNXT        Test for more data                @SC86295\n*\nENCFULL  CR    8,5           Are we past the last char?        @SC86163\n         BL    ENCGOOD       No, not exhausted RBUF data yet   @SC86163\nENCEMPT  XC    RBUFL,RBUFL   Zap data length for next time     @SC86163\nENCGOOD  SR    15,15\n         S     8,RBUF        Get current index                 @SC86163\n         ST    8,RBUFP               Save RBUF index\nENCRET   S     9,ASDATA      Get length                        @SC86295\n         ST    9,DATL        Save encoded DATA length          @SC86295\n         RET   ,                                               @SC86295\n         LOCALS ,                                              @SC86295\nENCODE   EXIT\n         TITLE 'NPREAD Routine - copy from RBUF to SDATA'      @HF86150\nNPREAD   ENTER                                                 @HF86150\n         L     6,SPSIZ       Max packet length                 @SC86295\n         LR    4,6           Save                              @SC86295\n         L     9,ASPKT       Fill pointer (includes header)    @SC86165\n         SR    7,7                                             @SC86165\n         IC    7,TCTLQ       Fetch control quote               @SC86165\nNPRAGAIN L     8,RBUFP       Index of next char in RBUF        @SC86165\n         L     5,RBUFL       Data length in RBUF               @SC86165\n         L     1,RBUF        Start of buffer                   @SC86165\n         AR    5,1           Point to char after last one      @SC86165\n         AR    8,1           Point to char to encode           @SC86165\nNPRNXT   CR    8,5           Are we past the last char?        @SC86165\n         BL    NPRTCT        No, not exhausted RBUF yet        @SC86165\nNPRRD    KCALL INBUF,E=NPRRET                                  @HF86150\n         B     NPRAGAIN                                        @SC86165\nNPRTCT   LTR   7,7           Test for quoting                  @SC86165\n         BZ    NPRNOCTL      Not enabled                       @HF86150\n         CLM   7,1,0(8)      Is it a quote character?          @HF86150\n         BNE   NPRNOCTL      No, copy it                       @HF86150\n         LA    8,1(8)        Check next                        @HF86150\n         CR    8,5                                             @HF86150\n         BNL   NPRRD         Ran out of data, ignore the quote @HF86150\n         CLM   7,1,0(8)      If repeat of quote character      @HF86150\n         BE    NPRNOCTL       send that character              @HF86150\n         NI    0(8),X'1F'    Make control character            @HF86150\nNPRNOCTL MVC   0(1,9),0(8)   Copy the char                     @HF86150\n         LA    9,1(9)        Incr for it                       @HF86150\n         LA    8,1(8)        Incr RBUF pointer                 @HF86150\n         BCT   6,NPRNXT      Get next character if any room    @SC86295\n*\nNPRGOOD  SR    15,15                                           @HF86150\n         S     8,RBUF        Convert to index                  @SC86165\n         ST    8,RBUFP       Save it                           @SC86165\nNPRRET   SR    4,6           Get DATA length                   @SC86295\n         ST    4,SNDPKL      Save it                           @HF86150\n         RET                                                   @HF86150\n         LOCALS ,                                              @SC86295\nNPREAD   EXIT                                                  @HF86150\n         TITLE 'DECODE Routine - decode pkts from DATA to WBUF'\nDECODE   ENTER\n         ICM   5,B'1111',DATL        Data length to decode\n         BNP   RTRN1         No data to decode                 @SC86295\n         TM    FL1,EOF\n         BO    DECNULL               Ignore if ctl-z caused EOF\n         L     1,WBUF                Point to output buffer\n         L     9,WBUFL               Number of chars in it\n         AR    1,9                   Point to next spot to fill\n         L     8,ARDATA      Data to be decoded                @SC86190\n         AR    5,8           Point one past the last char\nDECLOOP  LA    3,1           Repeat count                      @SC86316\n         CLI   RPTQ,0\n         BE    DECEBQ                Not doing repeats\n         CLC   RPTQ,0(8)\n         BNE   DECEBQ                Not the repeat quote\n         UNCHR 3,1(8)        Get number of repeats             @SC86316\n         LA    8,2(8)                skip to char to decode\nDECEBQ   MVI   CUR,0                 No 8th bit yet\n         CLI   EBQ,0\n         BE    DECCTL                Not doing 8bit quoting\n         CLC   EBQ,0(8)\n         BNE   DECCTL                Not the 8bit quote\n         LA    8,1(8)                point to char to decode\n         MVI   CUR,128               8th bit seen\nDECCTL   CLC   RCTLQ,0(8)\n         BNE   DECCHR                not the ctl quote\n         LA    8,1(8)                point to char to decode\n         CLI   0(8),63\n         BL    DECCHR                skip if not in ctl range\n         CLI   0(8),95\n         BH    DECCHR                skip if not in ctl range\n         CTL   4,0(8),0(8)           Ctl it\nDECCHR   OC    0(1,8),CUR            put in the parity\n         MVC   CUR,0(8)              move it here also\n         TR    CUR,ATOE              keep the EBCDIC version here\nDECRLOOP TM    FL1,NAME\n         BO    DECPUT                skip if not writing to disk\n         LTR   7,9           Started yet?                      @SC86316\n         BZ    DECTFUL       No                                @SC86151\n         C     9,RDWLEN                                        @SC86151\n         BNE   DECTFUL                                         @SC86151\n         L     6,WBUF        Just finished RDW                 @SC86316\n         SR    14,14                                           @SC86151\n         ICM   14,3,0(6)     Get expected length               @SC86316\n         C     9,F2          Short?                            @SC86262\n         BE    DECVLEN       Yes, we got it                    @SC86262\n         TR    0(5,6),ATOE   No, must be 5-byte ASCII prefix   @SC86316\n         MVI   ERRNUM,ERRBPC Look out for bad field            @SC86262\n         BAL   14,GETNUM     Read length field                 @SC86316\n          B    RTRN1         Bad                               @SC86316\n         LR    14,0                                            @SC86316\nDECVLEN  DS    0H                                              @SC86262\n         AR    14,9               + RDW length                 @SC86151\n         ST    14,MAXOUT     Reset byte limit                  @SC86151\nDECTFUL  C     9,MAXOUT      Max write buffer size reached?    @SC86151\n         BNL   DECWRT                Yes, write the buffer\nDECMORE  TM    FL1,BINF\n         BO    DECPUT                No special test in binary mode\n         CLI   CUR,CR\n         BE    DECWRT                A cr means end of record\n         CLI   CUR,LF\n         BNE   DECTAB                Not an LF\n         CLI   PREV,CR\n         BE    DECIGN                A cr/lf together = ignre the LF\nDECWRT   ST    9,WBUFL               Buffer length to write\n         KCALL OUTBUF,E=RTRN1 Dump it                          @SC86295\n         SR    9,9                   Reset length to resume decoding\n         L     1,WBUF                Reset pointer also\n         CLC   WBUFL,MAXOUT\n         BNL   DECMORE               Resume decoding if max\n         B     DECIGN\n*\nDECTAB   TM    FL2,TABS\n         BZ    DECCTLZ               Skip if not expanding tabs\n         CLI   CUR,TAB\n         BNE   DECCTLZ               Not a tab\n         LR    0,1           Save output ptr                   @SC86355\n         LH    2,TABCNT      Get count of tabs that are set    @TS86100\n         LTR   2,2           Any?                              @SC86355\n         BZ    DECTL8        No, use every 8 cols              @SC86355\n         LA    7,TABTBL      Yes, point to table of tabs       @TS86100\n         SR    1,1                                             @TS86100\nDECTLP   IC    1,0(7)        Get tab column from table         @TS86100\n         BCTR  1,0           Adjust for displacement compare   @TS86100\n         CR    1,9           Where is this tab compared to buf @TS86100\n         BH    DECTLX        Above buffer position             @TS86100\n         LA    7,1(7)        Point to next tab position        @TS86100\n         BCT   2,DECTLP      Continue with next tab            @TS86100\nDECTL8   DS    0H                                              @SC86355\n         LA    1,8(9)        Buffer pointer + 8                @SC86355\n         SRL   1,3                                             @SC86355\n         SLL   1,3           Round up to multiple of 8         @SC86355\nDECTLX   C     1,MAXLRC                                        @SC86355\n         BL    *+8                                             @SC86355\n         L     1,MAXLRC      Don't go past end of buffer       @SC86355\n         SR    1,9           Number of blanks to add           @SC86355\n         AR    9,1           Advance the count                 @SC86355\n         LA    15,ABL                                          @SC86355\n         SLL   15,24         Set for ASCII blank fill          @SC86355\n         MVCL  0,14          Jump to tab stop                  @SC86355\n         LR    1,0           Restore output ptr                @SC86355\n         B     DECIGN                skip to the end of this\n*\nDECCTLZ  TM    FL2,EOFZ\n         BZ    DECPUT                Skip if EOF is off\n         CLI   CUR,SUB\n         BNE   DECPUT                Skip if not a ctl-z\n         OI    FL1,EOF               Fake an end-of-file\n         B     DECEOF                all done\n*\nDECPUT   C     9,MAXLRC      Still within disk buffer?         @SC86355\n         BNL   *+10          No, don't copy                    @SC86355\n         MVC   0(1,1),0(8)   Yes, put the data in buffer       @SC86355\n         LA    9,1(9)                Increment count\n         LA    1,1(1)                Increment pointer\nDECIGN   MVC   PREV,CUR              copy the decoded char\n         BCT   3,DECRLOOP    Repeat it repeat count times      @SC86316\n         LA    8,1(8)                Increment decoded data pointer\n         CR    8,5                   Did we reach end of DATA?\n         BL    DECLOOP               No, More data left to decode\nDECEOF   ST    9,WBUFL               Save buffer length\nDECNULL  B     RTRN0         Good return code                  @SC86295\n         LOCALS ,                                              @SC86295\nCUR      DS    C             Char being decoded                @SC86295\nDECODE   EXIT\n         TITLE 'ERPACK Routine - send error packet with errnum'\nERPACK   ENTER\n         CLI   ERRNUM,ERRABO                                   @SC86295\n         BE    RTRN0         Skip it if the micro died         @SC86295\n         CLI   ERRNUM,ERRTRC                                   @SC86295\n         BE    RTRN0         Skip it if other cancelled        @SC86295\n         MVI   STYPE,AE              Error packet\n         MVC   SEQ,RSN               Synch packet numbers\n         SR    5,5\n         IC    5,ERRNUM              Get right message number\n         SLL   5,2           Pointer offset = ERRNUM * 4       @SC86156\n         A     5,AERRTAB     Pointer address                   @SC86156\n         L     3,0(5)        Msg ptr                           @SC86156\n         SR    4,4                                             @SC86156\n         IC    4,0(5)        Msg length                        @SC86156\n         TM    FL2,PROTO                                       @SC87300\n         BZ    RTRN0         Skip packet if never started      @SC87300\n         TM    FL2,SRV       Server will read another command  @SC87343\n         BO    *+8            so don't zap write/read flag     @SC87343\n         MVI   WRRD,0        No read ncessary for Err pkt      @SC87300\n         ST    4,RBUFL       Save length to encode             @SC86156\n         L     1,RBUF\n         MVC   0(50,1),0(3)  Put data in RBUF (and some extra) @SC86156\n         TR    0(50,1),ETOA  Ascii it                          @SC86156\n         BAL   9,ENCODEN                                       @SC86295\n         KCALL SPACK         Send error packet                 @SC86135\n         RET\n         LOCALS ,                                              @SC86295\nERPACK   EXIT\n         TITLE 'SPACK Routine - sends DATA buffer'\nSPACK    ENTER\n         SR    3,3                   Zero out IC register\n         L     8,AASPKT      SNDPKT address                    @SC86295\nSPKNX3   LA    8,3(8)        Remove LX1, LX2, HCHECK from hdr  @SC86295\n         L     9,DATL                Data size\n         IC    3,BCTU                CHK len\n         LA    9,2(3,9)              Data, CHK, SEQ, TYP lengths\n         LA    1,3(9)        Plus SOH, LEN, EOL lengths        @SC86202\n         C     9,AKMAX       Check packet length byte          @SC86202\n         BNH   SPKNXDL1      No extended data len              @SC86202\n         LA    1,3(1)        Plus LX1,LX2,HCHECK for ext. hdr  @SC86202\n         SR    9,9           Set 'Type 0' extended hdr         @SC86202\n         SH    8,SPKNX3+2    Remove LX1, LX2, HCHECK from hdr  @SC86295\nSPKNXDL1 ST    1,SNDPKL      SNDPKT length                     @SC86202\n         LM    14,15,TOUTOT  Update send count                 @SC86295\n         ALR   15,1                                            @SC86295\n         BNO   *+8                                             @SC86295\n         AL    14,F1                                           @SC86295\n         STM   14,15,TOUTOT  Save new count                    @SC86295\n         ST    8,ASPKT       Ptr to buffer                     @SC86295\n         MVC   0(1,8),SMARK  Add mark to packet                @SC86295\n         TOCHR 9,,1(8)       Add it to packet                  @SC86295\n         TOCHR 4,SEQ,2(8)    Get packet number                 @SC86295\n         AR    9,4                   And add to checksum\n         IC    3,STYPE               Type\n         STC   3,3(8)        Store in buffer                   @SC86295\n         AR    9,3                   Add to checksum\n         CLI   1(8),ABL      Chk 'Type 0' extended hdr         @SC86295\n         BNE   SPKNXDL3      No extended data len              @TB86196\n         L     7,DATL        Data size                         @TB86196\n         IC    3,BCTU        CHK len                           @TB86196\n         AR    7,3           Sum = extended length             @TB86196\n         SR    6,6                                             @TB86196\n         D     6,XLFCT       Get two parts                     @TB86196\n         TOCHR 7,,4(8)       Add LENX1 to packet               @SC86295\n         AR    9,7           And add to checksum               @TB86196\n         TOCHR 6,,5(8)       Add LENX2 to packet               @SC86295\n         AR    9,6           And add to checksum               @TB86196\n         LR    6,9           Chksum thru LENX2 byte            @TB86196\n         SRL   6,6           High 2 bits of total              @TB86196\n         N     6,F3          Get just 2 bits                   @SC86295\n         AR    6,9           Get type-1 check value            @TB86196\n         N     6,MOD64                                         @TB86196\n         TOCHR 6,,6(8)       Make printable                    @SC86295\n         AR    9,6           And add to checksum               @TB86196\nSPKNXDL3 DS    0H                                              @TB86196\n         L     8,ASDATA                                        @SC86295\n         BCTR  8,0           Ptr one before data               @SC86295\n         ICM   6,B'1111',DATL        Data length\n         BZ    SPKCHK                Go if no data\n         LR    5,6                                             @SC86135\nSPKCHAR  IC    3,0(5,8)      Pick up char                      @SC86295\n         AR    9,3                   Add to checksum\n         BCT   5,SPKCHAR     Yes, there's more data            @SC86135\nSPKCHK   LA    6,1(6,8)      Point to where chksum goes        @SC86295\n         LR    7,9                   Need copy of chksum\n         CLI   BCTU,2\n         BE    SPKCHK2               Go if 2 char chksum\n         BH    SPKCHK3               Go if 3 char CRC\n         SRL   9,6                   High 2 bits of total\n         N     9,F3          Get just 2 bits                   @SC86295\n         AR    7,9                   Add the two values\n         B     SPKCHK1               Go add chksum to data\n*\nSPKCHK3  L     5,ASPKT                                         @SC86190\n         LA    5,1(5)        Where checksum starts             @SC86190\n         KCALL CRCCLC        Calculate the CRC\n         LR    7,15                  Keep in here\n         SRL   15,12                 High 4 bits of high byte\n         TOCHR 15,,0(6)              Make char printable\n         LA    6,1(6)                Bump output pointer\nSPKCHK2  LR    15,7                  total\n         SRL   15,6          Next 6 bits of total              @SC86295\n         N     15,MOD64      Get just 6 bits                   @SC86295\n         TOCHR 15,,0(6)              Make char printable\n         LA    6,1(6)                Bump pointer\nSPKCHK1  N     7,MOD64               Get low order 6 bits\n         TOCHR 7,,0(6)               Make printable\nSPKEOL   MVC   1(2,6),S1EOL  Add micro's EOL char + handshake  @SC87274\n         KCALL SIO           Write the SNDPKT                  @SC86135\n         RET   ,             Return with SIO's rc              @SC86295\n         LOCALS ,                                              @SC86295\nSPACK    EXIT\n         TITLE 'RPACK Routine - Reads data into DATA buffer'\nRPACK    ENTER\n         KCALL RIO,E=RPKNAK\n         L     7,RCVPKL              Length of data read\n         LM    14,15,TINTOT  Update recv count                 @SC86295\n         ALR   15,7                                            @SC86295\n         BNO   *+8                                             @SC86295\n         AL    14,F1                                           @SC86295\n         STM   14,15,TINTOT  Save new count                    @SC86295\n         L     14,ARPKT      Point to recv buffer              @SC86295\n         L     8,APKT        Point to PKT                      @SC86190\n         MVI   RTYPE,AT      In case of time-out               @SC87012\n         C     7,F1          Time-out signal is ASCII T        @SC87012\n         BNE   *+12                                            @SC87012\n         CLI   0(8),AT                                         @SC87012\n         BE    RTRN          Yes, timed out                    @SC87012\n         AR    7,8           Point past last char\nRPKBEG   SR    3,3                   Use this for IC's\nRPKLOOP  CLC   RMARK,0(8)\n         LA    8,1(8)        Try next character                @SC86135\n         BE    RPKSOH                Go if a Control-A\n         CR    8,7                   Are we within the received pkt?\n         BL    RPKLOOP               Yes, keep on looking for SOH\n         B     RPKERR\n*\nRPKSOH   LA    9,4(14)       Skip over usual header            @SC86295\n         MVC   1(3,14),0(8)  Copy usual header to RCVPKT       @SC86295\n         UNCHR 3,0(8)                Length\n         BM    RPKBEG        Invalid length, try again         @SC86153\n         LA    5,ABL(3)              Chksum accumulator\n         LR    4,3                   Keep length to compute DATA len\n         LA    15,0(3,8)             pkt len + beg\n         CR    15,7                  Is it within received pkt?\n         BNL   RPKBEG                too long, look for another SOH\n         IC    3,2(8)        Pick up packet type               @SC86153\n         STC   3,RTYPE       Save value here                   @SC86153\n         AR    5,3           Add to checksum                   @SC86153\n         BCTR  4,0                   -1 for Seq #\n         BCTR  4,0                   -1 for Type\n         UNCHR 3,1(8)        Pick up packet number             @SC86153\n         BM    RPKBEG        Invalid char                      @SC86153\n         LA    5,ABL(3,5)            Add to checksum\n         STC   3,RSN         Received packet number            @SC86135\n         LA    8,3(8)        Go to putative data               @SC86153\n         CLI   1(14),ABL     Is this an extended pkt?          @SC86295\n         BNE   RPKEXT2       No                                @TB86196\n         LA    15,3(8)       Past LENX1,LENX2,HCHECK           @TB86196\n         CR    15,7          Is it within rcvd pkt?            @TB86196\n         BNL   RPKBEG        Too long, try for another SOH     @TB86196\n         MVC   4(3,14),0(8)  Copy extended pkt hdr             @SC86295\n         UNCHR 1,0(8)        Pick up LENX1 byte                @TB86196\n         LA    5,ABL(1,5)    Add to check                      @SC86202\n         MH    1,XLFCT+2     High digit of size                @SC86202\n         UNCHR 3,1(8)        Pick up LENX2 byte                @TB86196\n         LA    5,ABL(3,5)    Add to chksum                     @SC86202\n         AR    1,3           Total extended pkt size           @TB86196\n         UNCHR 3,2(8)        Pick up HCHECK byte               @TB86196\n         LR    6,5           Keep chksum copy here             @TB86196\n         SRL   6,6           High 2 bits of total              @TB86196\n         N     6,F3          Get just 2 bits                   @SC86295\n         AR    6,5           Add the two values                @TB86196\n         N     6,MOD64       Get low order 6 bits              @TB86196\n         CR    6,3           Chk computed vs received          @TB86196\n         BNE   RPKERR        Err if chksums no match           @TB86196\n         LA    5,ABL(3,5)    Add HCHECK to chksum              @SC86202\n         LA    8,3(8)        Update input+output ptrs          @SC86202\n         LA    9,3(9)        Past LX1,LX2,HCHECK               @SC86202\n         LR    4,1           Save length of data+check         @SC86202\n         AR    1,8           Expected end of packet            @SC86202\n         CR    1,7           Is it within pkt?                 @SC86202\n         BH    RPKBEG        Too long, chk for SOH             @SC86202\nRPKEXT2  DS    0H                                              @SC86202\n         IC    3,BCTU        Chksum length                     @SC86202\n         SR    4,3           Minus chksum length               @SC86202\n         BM    RPKBEG        Can't have negative data length   @SC86202\n         ST    4,DATL        Save data length                  @SC86202\n         ST    9,ARDATA      Save ptr                          @SC86202\n         LTR   4,4                   Any data to send?\n         BZ    RPKCHK                Nope\nRPKCHAR  IC    3,0(8)                Get next data char\n         STC   3,0(9)                Move it to DATA\n         AR    5,3                   Add to checksum\n         LA    8,1(8)                Bump input buffer pointer\n         LA    9,1(9)                Bump output buffer pointer\n         BCT   4,RPKCHAR             Decrement amount of input\nRPKCHK   UNCHR 3,0(8)                Get checksum\n         LR    6,9           CRC calc ends here                @SC86135\n         LA    8,1(8)                Bump input pointer\n         LR    4,5                   Keep chksum copy here\n         CLI   BCTU,2\n         BE    RPKCHK2               Go if using 2 char chksum\n         BH    RPKCHK3               Three character CRC\n         SRL   5,6                   High 2 bits of total\n         N     5,F3          Get just 2 bits                   @SC86295\n         AR    4,5                   Add the two values\n         B     RPKCHK1               compare it\n*\nRPKCHK3  LA    5,1(14)       Start of data for CRC             @SC86295\n         KCALL CRCCLC        Calculate the CRC\n         LR    4,15                  Keep computed value here also\n         SRL   15,12                 High 4 bits of high byte\n         CR    15,3                  compare computed and received\n         BNE   RPKERR                skip if chksums don't match\n         UNCHR 3,0(8)                Get next char of checksum\n         LA    8,1(8)                Bump input pointer\nRPKCHK2  LR    15,4                  Get back the CRC\n         SRL   15,6          Next 6 bits of total              @SC86295\n         N     15,MOD64      Get just 6 bits                   @SC86295\n         CR    15,3                  compare computed and received\n         BNE   RPKERR                skip if chksums don't match\n         UNCHR 3,0(8)                Get checksum\n         LA    8,1(8)                Bump input pointer\nRPKCHK1  N     4,MOD64               Get low order 6 bits\n         CR    4,3                   Compare computed and received\n         BE    RPKRET                skip if chksums match\n         TM    FL1,TSTF                                        @SC86295\n         BO    RPKRET        Just testing, anything goes       @SC86295\nRPKERR   MVI   ERRNUM,ERRBPC Rpack error                       @SC86156\n         CR    8,7                                             @BS86001\n         BL    RPKBEG        More stuff, see if it's a packet  @BS86001\nRPKNAK   MVI   RTYPE,AQ              Return a Q pkt\nRPKRET   RET\n         LOCALS ,                                              @SC86295\nRPACK    EXIT\n         TITLE 'CRCCLC Routine - calculates CRC'\n* Calculate the CRC and return it in R15.  Expects R5 to point to the\n* start of the data on which the CRC is calculated, and R6 to the\n* char after the last one.\n*\nCRCCLC   ENTER\n         SR    15,15                 Initial CRC value is zero\nCRCLUP   IC    4,0(5)        Get the next character            @SC86295\n         XR    4,15          XOR char and CRC low byte         @SC86295\n         LR    7,4                   same as above\n         SRL   7,4                   High 4 bits of low byte\n         N     4,F                   Low 4 bits of low byte\n         N     7,F           High 4 bits of low byte           @SC86295\n         ALR   4,4                   Double to get index into table\n         LH    4,CRCTAB2(4)          CRC for low 4 bits\n         ALR   7,7                   Double to get another index\n         LH    7,CRCTAB1(7)          CRC for high 4 bits\n         XR    4,7                   XOR the two\n         SRL   15,8                  Shift prev CRC 8 bits to right\n         XR    15,4                  XOR current char's CRC into it\n         N     15,=XL4'FFFF' Drop negative stuff               @SC86295\n         LA    5,1(5)                Bump input pointer\n         CR    5,6                   Did we reach the end?\n         BL    CRCLUP                Nope, loop for whole pkt\nCRCRET   RET\n* Table to use for CRC calculation\nCRCTAB1  DC    X'00,00,10,81,21,02,31,83,42,04,52,85,63,06,73,87'\n         DC    X'84,08,94,89,A5,0A,B5,8B,C6,0C,D6,8D,E7,0E,F7,8F'\n*\nCRCTAB2  DC    X'00,00,11,89,23,12,32,9B,46,24,57,AD,65,36,74,BF'\n         DC    X'8C,48,9D,C1,AF,5A,BE,D3,CA,6C,DB,E5,E9,7E,F8,F7'\n*\n         LOCALS ,                                              @SC86295\nCRCCLC   EXIT\n         TITLE 'RIO Routine - Read packet into RCVPKT'\nRIO      ENTER\n         MVI   SIORIO,C'R'   Set type                          @SC86316\n         L     7,APKT        Ptr to data                       @SC86316\n         L     15,RIOC       Previous read count               @SC86295\n         MVI   RIOC,X'80'    Nothing left in read buffer       @SC86295\n         CLI   TRMTP,C'T'                                      @SC87166\n         BE    RIOTTY        Go if not a S/1?                  @SC87166\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    RIOTTY        Go if not a S/1?                  @SC87300\n         LA    5,OFF80       Turn off all X'80' bits           @SC86316\n         TM    FL2,DAT8      Unless 8-bit line                 @SC86316\n         BZ    *+6           Not 8-bit                         @SC86316\n         SR    5,5           Yes, use all bits                 @SC86316\n         LTR   15,15         Any previous?                     @SC86295\n         BNM   RIOCOM        Yes, use it                       @SC86295\n         CLI   TRMTP,C'G'                                      @SC87215\n         BE    RIOS1R        Skip prompt if graphics mode      @SC87215\n         LA    0,4           Write                             @SC86295\n         KCALL SCRNIO,S1XOPL,E=(RIOER,M) Send a prompt         @SC86295\nRIOS1R   DS    0H                                              @SC87215\n         LA    0,5           Read                              @SC86295\n         KCALL SCRNIO,S1RDPL,E=(RIOER,M) perform read          @SC86295\n         BP    RIOCOM                                          @SC86355\nRIOER    MVI   ERRNUM,ERRTIE Terminal I/O error                @SC86156\n         B     RTRN1         Error, return to caller           @SC86295\n*\nRIOTTY   LA    5,ETOA        Translate to ASCII                @SC86316\n         TM    FL4,TTAB      Using separate terminal tables?   @SC87117\n         BZ    *+8           No                                @SC87117\n         LA    5,TETOA       Yes                               @SC87117\n         LTR   15,15         Any previous data?                @SC86295\n         BNM   RIOCOM        Yes, use it                       @SC86295\n         LA    0,5           No, read some now                 @SC86295\n         KCALL TERMIO,TYRDPL,E=(RIOER,M)                       @SC86295\nRIOCOM   LR    6,15          Copy byte count                   @SC86295\n         ST    6,RCVPKL      Save\n         BAL   9,RIORAW      Log raw data                      @SC86316\n         LR    2,7                                             @SC86316\n         LR    3,6           Length                            @SC86202\n         LTR   15,5          Copy table ptr                    @SC86316\n         BZ    *+8           Don't translate after all         @SC86316\n         BAL   14,TRANSLAT   Do the translate                  @SC86202\n         BAL   9,RIOLOG      Write to log                      @SC86190\n         B     RTRN0                                           @SC86295\n*  Write record to log buffer, R7->data, R6=length             @SC87286\n*  Clobbers R0,R1,R2,R3,R8,R14,R15, return to (R9)             @SC87286\nRIORAW   SR    3,3           Write raw data                    @SC86316\n         B     RIOLG1                                          @SC86316\nRIOLOG   LA    3,ATOE        Write data in EBCDIC              @SC86316\nRIOLG1   C     3,DBGTYP      Correct type?                     @SC86316\n         BNER  9             No, skip this one                 @SC86316\n         TM    FL1,DEBUG                                       @SC86316\n         BZR   9             Skip if no debugging              @SC86190\n         LA    8,2(6)        Two extra for R:, etc.            @SC87286\n         L     2,LOGBUF      LOG buffer                        @SC86316\n         MVC   0(1,2),SIORIO Indicate log type                 @SC86316\n         LA    2,2(2)        Skip over prefix                  @SC86190\n         LR    0,2           Buffer ptr                        @SC86190\n         LR    1,8           Data length                       @SC86316\n         LR    14,7          Data ptr                          @SC86316\n         LR    15,8                                            @SC86316\n         MVCL  0,14          Copy to log buffer                @SC86316\n         LTR   15,3          Check if translation needed       @SC86316\n         BZ    *+10          No                                @SC86316\n         LR    3,8           Data length                       @SC86316\n         BAL   14,TRANSLAT   Do the translate                  @SC86202\n         WRITF LOGPTR,BSIZE=(8),E=RIOLQU                       @SC87034\n         BR    9             Done                              @SC86190\nRIOLQU   CLOSF LOGPTR        Turn off DEBUG, it fails          @SC86355\n         NI    FL1,255-DEBUG                                   @SC86355\n         BR    9                                               @SC86355\n         TITLE 'SIO Routine - Send packet in SNDPKT'\nSIO      ENTER ALT                                             @SC86190\n         MVI   SIORIO,C'S'   Set type                          @SC86316\n         MVI   RIOC,X'80'    Set no read count                 @SC86295\n         L     6,SNDPKL              Length of SNDPKT to be sent\n         TM    FL4,NPS       Non-protocol?                     @SC86239\n         BO    SIOPLEN       Yes, no handshake at all          @LP87272\n         CLI   WRRD,0        Only writing?                     @LP87272\n*        BE    SIOPLEN       Yes, handshake done next Read     @LP87272\n         CLI   S1HND,0       Handshake desired at all?         @SC87275\n         BE    SIOPLEN       No, skip it                       @SC87275\n         LA    6,1(6)        Allow for handshake character     @LP87272\nSIOPLEN  DS    0H                                              @SC86239\n         L     7,ASPKT       Ptr to send data                  @SC86316\n         BAL   9,RIOLOG      Write to log                      @SC86190\n         L     2,S1WRPL      Final output buffer               @SC86154\n         LR    1,2           Save start                        @SC86154\n         SR    3,3                                             @SC86154\n         TM    FL4,NPS       Non-protocol?                     @SC86191\n         BO    *+8           Yes, skip padding                 @SC86191\n         IC    3,SPADN       Pad count                         @SC86154\n         LA    4,S1DATA                                        @SC86154\n         LA    5,S1ORDL      Length of Series/1 stuff          @SC86154\n         CLI   TRMTP,C'G'    Graphics?                         @SC87215\n         BNE   SIOPAD                                          @SC87215\n         LA    4,GRDATA      Yes, use separate command         @SC87215\n         LA    5,GRDL                                          @SC87215\nSIOPAD   DS    0H                                              @SC87215\n         AR    3,5           Total padding + Series/1          @SC86154\n         ICM   5,8,SPADC     Get padding character             @SC86154\n         MVCL  2,4           Copy to buffer with padding       @SC86154\n         LR    3,6           Packet length                     @SC86154\n         LR    5,6                                             @SC86154\n         LR    4,7           Ptr to packet                     @SC86316\n         MVCL  2,4           Copy packet to buffer             @SC86154\n         CLI   TRMTP,C'T'                                      @SC87166\n         BE    SIOTTY        Go if not S/1?                    @SC87166\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    SIOTTY        Go if not S/1?                    @SC87300\n         SR    2,1           Total length                      @SC86154\n         ST    2,S1WRPL+4    Store len in CCW                  @SC86154\n         L     4,ASCRNIO     I/O routine for fullscreen        @SC87275\n         LA    5,S1WRPL      1st plist                         @SC87275\nSIOGO    LM    7,8,0(5)                                        @SC87275\n         BAL   9,RIORAW      Log it                            @SC86316\n         LA    0,4           Write                             @SC86295\n         KCALL (4),(5),E=(RIOER,M)                             @SC87275\n         CLI   TRMTP,C'G'                                      @SC87215\n         BE    SIOGOOD       No immediate answer if graphics   @SC87215\n         LA    0,5                                             @SC86295\n         KCALL (4),8(5),E=(RIOER,M) Read it now                @SC87275\n         CLI   WRRD,0        Write/read?                       @SC86301\n         BE    SIOGOOD       No, ignore bare status            @SC86301\n         LTR   15,15                                           @TB87009\n         BP    SIOCOM                                          @TB87009\n         CLI   TRMTP,C'T'                                      @SC87275\n         BE    SIOCOM        No problem if TTY                 @SC87275\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    SIOCOM        No problem if TTY                 @SC87300\n* If only 3 bytes (AID and cursor) come in, VTAM has caused    @TB87009\n* the S/1 to discard its transparent data. Fill the screen and @TB87009\n* read it back in protocol conversion mode to cause VTAM       @TB87009\n* to put up a longer READ MODIFIED CCW at its next read.       @TB87009\n         LA    0,6           Message (Leave Transparent Mode)  @TB87009\n         KCALL SCRNIO,SIORTPL,E=(SIORTY,M)                     @TB87009\n         LA    0,5                                             @TB87009\n         KCALL SCRNIO,S1RDPL,E=(RIOER,M) Rdmod to prime VTAM.  @TB87009\nSIORTY   SR    15,15         No data actually seen.            @TB87009\nSIOCOM   DS    0H                                              @TB87009\n         ST    15,RIOC               save residual byte count\nSIOGOOD  NI    FL1,255-NAK0  Something sent now                @SC86295\n         B     RTRN0                                           @SC86295\n*\nSIOTTY   L     1,TYWRPL      Skip S/1 stuff                    @SC86295\n         SR    2,1           Length to write                   @SC86154\n         ST    2,TYWRPL+4    Length                            @SC86295\n         LA    15,ATOE       Send in EBCDIC                    @SC86202\n         TM    FL4,TTAB      Using separate terminal tables?   @SC87117\n         BZ    *+8           No                                @SC87117\n         LA    15,TATOE      Yes                               @SC87117\n         LR    3,2           Length                            @SC87281\n         LR    2,1                                             @SC86202\n         BAL   14,TRANSLAT   Do the translate                  @SC86202\n         L     4,ATERMIO     I/O routine for TTY               @SC87275\n         LA    5,TYWRPL      1st plist                         @SC87275\n         B     SIOGO         Now do it                         @SC87275\n*                                                              @TB87009\nSIORTPL  DC    A(SIOMSGXX,SIOMSL)                              @TB87009\n* Greetings for ERROR mode                                     @TB87009\nSIOMSGXX DC    X'&S1CMD',AL1(SBA),X'4040'                      @TB87009\n         DC    C'S/1 VTAM Error Recovery '                     @TB87009\n         DC    X'3C5D7F40'   Repeat blanks to end of screen    @TB87009\nSIOMSL   EQU   *-SIOMSGXX                                      @TB87009\n         LOCALS ,                                              @SC86295\nSIORIO   DS    C             Operation code                    @SC86316\nSIO      EXIT\n         TITLE 'INTINI Routine - Initialize console for protocol'\n* If R1 is 0, reset the traps unless in Server mode.\n* If R1 is positive, set up console traps for protocol:\n*  1 for SERVER, 2 for SEND, 3 for RECEIVE, 4 for short msg    @SC86184\n* R15 = 0 on return if ok\n*\nINTINI   ENTER\n         MVI   WRRD,5        Reset w/r flag                    @SC86184\n         TM    FL2,SRV\n         BO    INTINIR               Return if server running\n         LTR   3,1           Call type: 0 or 1-5               @HF86232\n         BZ    INTINICL              If R1 is 0 clear traps\n         OI    FL2,PROTO     Line open for transfer            @SC86295\n         ICM   5,15,LCLDLY   No delay?                         @HF86232\n         BNZ   INTINIDL                                        @HF86232\n         LA    1,5           Yes, use no message               @HF86232\nINTINIDL C     1,F5          No delay or non-protocol send?    @HF86232\n         BE    INTINIMS      Yes                               @HF86232\n         BCT   5,INTINIMS    Short delay?                      @HF86232\n         LA    1,4           Yes, use short message anyway     @SC86184\nINTINIMS SLL   1,3           8-byte indexing                   @HF86232\n         LA    5,INTCCWSR-8(1)  Get ptr to correct CCW         @SC86184\n         MVC   SVHND,S1HND   Save handshake character          @SC87343\n         KCALL SETMSG,2,E=INTINERR Prepare line for transfer   @SC87300\n         LA    0,2                                             @SC87309\n         SR    0,3                                             @SC87309\n         LPR   0,0           Get ABS(code-2)                   @SC87309\n         BCT   0,*+8         Test for Serve or Rec codes (1,3) @SC87309\n         OI    FL1,NAK0      Send NAK during retry, if any     @SC87309\n         MVI   RIOC,X'80'    Clr any prev byte count           @SC86295\n         CLI   TRMTP,C'T'                                      @SC87166\n         BE    INTINITY      Go if TTY                         @SC87166\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    INTINITY      Go if TTY                         @SC87300\n         LA    0,1           Open screen                       @SC86295\n         KCALL SCRNIO                                          @SC86295\n         LA    0,6           Simple write                      @SC86316\n         KCALL SCRNIO,(5),E=(INTINIR,M)  Message               @SC86295\n         C     3,F2          Was this SEND?                    @SC86184\n         BE    INTINIR               SEND does sleep anyway\n         ICM   0,15,LCLDLY   See if speed wanted               @SC87253\n         BZ    INTINIP       Yes, no greetings anyway          @SC87309\n         LA    0,1           Wait 1 sec                        @SC86295\n         KCALL SUPFNC,9      This seems essential              @SC86295\nINTINIP  CLI   TRMTP,C'G'    Graphics terminal?                @SC87309\n         BNE   INTINIR       No, go ahead                      @SC87309\n         TM    FL1,NAK0      Will we receive?                  @SC87309\n         BZ    *+8           No, fine                          @SC87309\n         BAL   2,SENDNAK     Yes, must prompt hardware         @SC87309\n         B     INTINIR\n*\nINTINITY L     1,0(5)        Text address from ccw             @SC86184\n         LH    4,6(5)        Get total length                  @SC86184\n         LA    3,INTPRL(1)   Skip over WCC and SBA             @SC86184\n         SH    4,*-2          and deduct that from length      @SC86184\n         C     4,F64                                           @SC86184\n         BL    INTINIT2      Just one (short) line             @SC86184\n         LA    4,80                  Length to type\n         WTEXT (3),(4)\n         LA    3,80(3)               Next line\nINTINIT2 WTEXT (3),(4)                                         @SC86184\n         LA    0,1                                             @SC86295\n         KCALL TERMIO        Open line                         @SC86295\n         B     INTINIR\n*\nINTINICL TM    FL2,PROTO     Was line open?                    @SC86295\n         BZ    INTINIR       No                                @SC86295\n         LA    0,2                                             @SC86295\n         L     15,ATERMIO                                      @SC87300\n         CLI   TRMTP,C'T'                                      @SC87300\n         BE    INTINIK       Go if TTY                         @SC87300\n         CLI   TRMTP,C'F'                                      @SC87300\n         BE    INTINIK       Go if 3708/fullscreen             @SC87300\n         L     15,ASCRNIO                                      @SC87300\nINTINIK  KCALL (15)          Release line                      @SC87300\n         KCALL SETMSG,3                                        @SC86316\n         MVC   S1HND,SVHND   Restore handshake character       @SC87343\nINTINIR  B     RTRN0                                           @SC87300\n*\nINTINERR NI    FL2,255-PROTO Turn off protocol mode            @SC87300\n         MVI   ERRNUM,ERRCOM Bad comm line                     @SC87300\n         B     RTRN1                                           @SC87300\n*\n         DS    0D\nINTCCWSR DC    A(INTMSGSR,INTPRL+80+80)                        @SC86295\nINTCCWSN DC    A(INTMSGSN,INTPRL+80+80)                        @SC86295\nINTCCWRC DC    A(INTMSGRC,INTPRL+80+80)                        @SC86295\nINTCCWQU DC    A(INTMSGQU,INTQL)                               @SC86295\nINTCCWNL DC    A(INTMSGQU,INTPRL)                              @SC86295\n* Short greetings                                              @SC86184\nINTMSGQU DC    X'&S1CMD',AL1(SBA),X'4040'                      @SC86295\nINTPRL   EQU   *-INTMSGQU    Length of prefix                  @SC86295\nINTMSGQ2 DC    C'Kermit-&KSYS....'                             @SC86268\nINTQL    EQU   *-INTMSGQU                                      @SC86184\n* Greetings for RECEIVE mode\nINTMSGRC DC    X'&S1CMD',AL1(SBA),X'4040'                      @SC86295\n DC CL80'Kermit-&KSYS ready to receive.'                       @SC86268\n DC CL80'Please escape to local Kermit now to SEND the file(s).'\n* Greetings for SEND mode\nINTMSGSN DC    X'&S1CMD',AL1(SBA),X'4040'                      @SC86295\n DC CL80'Kermit-&KSYS ready to send.'                          @SC86268\n DC CL80'Please escape to local Kermit now to RECEIVE the file(s).'\n* Greetings for SERVER mode\nINTMSGSR DC    X'&S1CMD',AL1(SBA),X'4040'                      @SC86295\n DC CL80'Entering server mode.  Please escape to local Kermit now.'\n DC CL80'To terminate the server use the BYE or FINISH commands.'\n*\n         LOCALS ,                                              @SC86295\nINTINI   EXIT\n         TITLE 'INBUF Routine - read next disk record into WBUF'\n* Exit: R15=0 if ok, -1 if EOF, 1 if read error (ERRNUM set)\nINBUF    ENTER\n         TM    FL1,EOF\n         BO    RTRNM1        Go if hit eof already             @SC86295\n         SR    15,15         In case reading from memory       @SC86158\n         ST    15,RBUFP      Clear read buffer pointer         @SC86158\n         ST    15,RBUFL      Clear read buffer length          @SC86158\n         L     9,RBUF        Read into this buffer             @SC86158\n         TM    FL4,SFM       Source is memory?                 @SC86158\n         BZ    IBFDSK        No, read disk                     @SC86158\n         LM    4,5,TXTPTR    Yes, copy to buffer               @SC86158\n         CR    4,5           Any left?                         @SC86158\n         BNL   IBFEOF        No, quit                          @SC86158\n         XC    CMD,CMD                                         @SC86158\n         MVI   CMD+X'15',1   Set up TRT                        @SC86158\n         MVC   0(256,9),0(4) Copy one line or so               @SC86158\n         LA    1,256(4)      In case no NL                     @SC86158\n         TRT   0(256,4),CMD  Scan for NL                       @SC86158\n         CR    1,5           No X'15'?                         @SC86158\n         BNH   *+6           OK                                @SC86158\n         LR    1,5           Limit is end of data              @SC86158\n         SR    1,4           Length of line                    @SC86158\n         LA    4,1(1,4)                                        @SC86158\n         ST    4,TXTPTR      Update ptr                        @SC86158\n         LR    0,1           Save length                       @SC86158\n         B     IBFXLAT       Go change to ASCII                @SC86158\nIBFDSK   DS    0H                                              @SC86158\n         ICM   2,15,RDWLEN   Special format?                   @SC86151\n         BZ    *+6           No                                @SC86151\n         AR    9,2           Space over record descriptor      @SC86151\n         READF FILPTR,BUFFER=(9),E=IBFERR                      @SC87034\n         LM    14,15,DSKTOT  Update disk count                 @SC86295\n         ALR   15,0                                            @SC86295\n         BNO   *+8                                             @SC86295\n         AL    14,F1                                           @SC86295\n         STM   14,15,DSKTOT  Save new count                    @SC86295\n         LTR   2,2           Special format?                   @SC86151\n         BZ    IBFNRM        No                                @SC86151\n         SR    9,2           Back up to start of buffer        @SC86151\n         STCM  0,3,0(9)      Store length                      @SC86151\n         C     2,F2          Short?                            @SC86262\n         BE    IBFVLEN       Yes                               @SC86262\n         CVD   0,TMPDW       No, use 5-byte ASCII              @SC86262\n         OI    TMPDW+7,15                                      @SC86262\n         UNPK  0(5,9),TMPDW                                    @SC86262\n         TR    0(5,9),ETOA                                     @SC86262\nIBFVLEN  DS    0H                                              @SC86262\n         AR    0,2                                             @SC86151\n         B     IBFLEN        Must be binary                    @SC86151\nIBFNRM   DS    0H                                              @SC86151\n         TM    FL1,BINF\n         BO    IBFLEN                No trans for binary file\n         ICM   1,15,RMARG    Text file: check margins          @SC87253\n         BZ    IBFCKLM       No right margin specified         @SC87253\n         CR    0,1                                             @SC87253\n         BNH   IBFCKLM       Record is shorter than margin     @SC87253\n         LR    0,1           Truncate record at margin         @SC87253\nIBFCKLM  L     1,LMARG                                         @SC87253\n         S     1,F1                                            @SC87253\n         BNP   IBFXLAT       No left margin, or start in col 1 @SC87253\n         SR    0,1           See if record is long enough      @SC87253\n         BNP   IBFEMPT       Too short, make empty record      @SC87253\n         LR    2,9           Ptr to record                     @SC87253\n         LR    3,0           Shortened length                  @SC87253\n         LA    4,0(1,2)                                        @SC87253\n         LR    5,3                                             @SC87253\n         MVCL  2,4           Eliminate stuff before margin     @SC87253\nIBFXLAT  LA    15,ETOA       Change to ASCII                   @SC86202\n         LR    2,9           Address                           @SC86202\n         LR    3,0           Length                            @SC86202\n         BAL   14,TRANSLAT   Do the translate                  @SC86202\n         AR    9,0           Point one past last char\nIBFTRUNC BCTR  9,0                   Back up one\n         CLI   0(9),ABL\n         BNE   IBFLCHAR              Found non-blank\n         BCT   0,IBFTRUNC            FIND LAST CHAR\nIBFEMPT  SR    0,0           Record is empty                   @SC87253\n         BCTR  9,0           Empty record                      @SC86119\nIBFLCHAR MVI   1(9),CR       Add CR                            @SC86135\n         MVI   2(9),ALF      Add LF                            @SC86135\n         A     0,F2                  Two extra bytes of data\nIBFLEN   ST    0,RBUFL               LRECL or LRECL + 2 (FOR CRLF)\n         B     RTRN0\n*\nIBFEOF   OI    FL1,EOF\n         B     RTRNM1                                          @SC86295\n*\nIBFERR   C     15,F12                EOF code?\n         BE    IBFEOF                Yes\n         ERRF  ,             Disk read error, analyze it       @SC87338\n         CLOSF FILPTR        Close file                        @SC86295\n         B     RTRN1                                           @SC86295\n         LOCALS ,                                              @SC86295\nINBUF    EXIT\n         TITLE 'OUTBUF Routine - write WBUF to a disk file'\nOUTBUF   ENTER\n         L     9,WBUFL               Amount of data to write\n         SR    6,6                                             @SC86295\n         ICM   6,3,LRECL     Use to hold lrecl                 @SC86295\n         L     7,WBUF                Address of buffer\n         ICM   2,15,RDWLEN                                     @SC86151\n         BZ    OBFNRM                                          @SC86151\n         SR    1,1           Special format                    @SC86151\n         ICM   1,3,0(7)      Get true record length            @SC86151\n         C     2,F2          Short?                            @SC86262\n         BE    OBFVLEN       Yes                               @SC86262\n         PACK  TMPDW,0(5,7)  No, must be 5-byte ASCII          @SC86262\n         OI    TMPDW+7,15    Get + sign                        @SC86262\n         CVB   1,TMPDW       Convert back to binary            @SC86262\nOBFVLEN  DS    0H                                              @SC86262\n         AR    7,2           Skip over descriptor              @SC86151\n         SR    9,2           Correct length                    @SC86151\n         L     15,FILPTR     Ptr to disk FAB                   @SC87351\n         MVC   FABCOMM-FABD(8,15),=CL8'Binary'                 @SC87351\n         LA    15,15         Suitable disk error               @SC86151\n         CR    1,9           Match?                            @SC86151\n         BNZ   OBFERR        No, give up                       @SC86151\n         B     OBFLEN        Do it                             @SC87351\nOBFNRM   DS    0H                                              @SC86151\n         TM    FL1,BINF\n         BO    OBFLEN                Go if binary data file\n         LTR   9,9                   Any data to write?\n         BNZ   OBFTR                 Yes, there's data\n         MVI   0(7),ABL              Make first char a space\n         LA    9,1                   Length of one\nOBFTR    LA    15,ATOE       Change to EBCDIC                  @SC86202\n         LR    2,7                                             @SC86202\n         LR    3,9           Length                            @SC86202\n         BAL   14,TRANSLAT   Do the translate                  @SC86202\nOBFLEN   CLI   FRECF,C'F'                                      @SC87012\n         BNE   OBFWRT        Go if variable format             @SC87012\n         TM    FL3,APPN      Appending to old file?            @SC86203\n         BZ    *+8           No, use LRECL                     @SC86203\n         L     6,FSIZE       Yes, use old size                 @SC86203\n         CR    9,6                   Compare data length and lrecl\n         BE    OBFWRT        Go if lrecl exactly               @SC87268\n         BH    OBFTRNC       Go if must truncate               @SC87268\n         LR    1,6                   Else, get lrecl size\n         SR    1,9                   Pad with this many spaces\n         LA    0,0(9,7)              Where to start padding\n         SR    15,15                                           @SC86295\n         TM    FL1,BINF                                        @SC86295\n         BO    *+8                                             @SC86295\n         ICM   15,8,BLANK    Pad with spaces                   @SC86295\n         MVCL  0,14                  Do it\n         B     OBFLRECL      And note new length               @SC87268\nOBFTRNC  LA    0,1                                             @SC87268\n         A     0,RECTRC                                        @SC87268\n         ST    0,RECTRC      Increment count of truncations    @SC87268\nOBFLRECL LR    9,6                   Length has to be this size\nOBFWRT   LM    14,15,DSKTOT  Update disk count                 @SC86295\n         ALR   15,9                                            @SC86295\n         BNO   *+8                                             @SC86295\n         AL    14,F1                                           @SC86295\n         STM   14,15,DSKTOT  Save new count                    @SC86295\n         WRITF FILPTR,BUFFER=(7),BSIZE=(9)                     @SC87034\n         LTR   15,15                 Any disk write errors?\n         BZ    OBFRET                Nope, all OK\n         MVI   ERRNUM,ERRFUL Maybe disk is full                @SC86345\n         CLM   15,1,ERRNUM   Is it?                            @SC86345\n         BE    OBFRET        Yes, too bad                      @SC86345\nOBFERR   ERRF  ,             General write error, analyze it   @SC87338\nOBFRET   RET\n         LOCALS ,                                              @SC86295\nOUTBUF   EXIT\n         END   KERMIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT146/FILE146.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT146", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}