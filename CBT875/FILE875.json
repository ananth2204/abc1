{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013152000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 10405122, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE875.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 10405122, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 10405122, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE875.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x9f\\x05'", "DS1TRBAL": "b'\\x90\\xe6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07|\\x00\\r\\x07\\x87\\x00\\x07\\x00\\xa0'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00C\\x01\\x13\\t\\x0f\\x01\\x13\\t\\x0f\\x14#\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-03-31T00:00:00", "modifydate": "2013-03-31T14:23:43", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  875\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE875\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3200    PO\n\n   PDS117I 20 MEMBERS COUNTED; CUMULATIVE SIZE IS 98,513 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/31/13    14:23:43    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$LNDSTOB": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00@\\x01\\x06\\t\\x0f\\x01\\x13\\x06\\x7f\\x14\\x12\\x00\\x0e\\x00\\x11\\x00\\x00\\xd3\\xd5\\xd2\\xc5\\xc4\\xc9\\xe3@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2006-03-31T00:00:00", "modifydate": "2013-03-08T14:12:40", "lines": 14, "newlines": 17, "modlines": 0, "user": "LNKEDIT"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.CBT486.FILE875(DISTOBJ#)\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n SETSSI CB486875\n NAME   PDSUNPK(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE875": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x007\\x01\\x13\\t\\x0f\\x01\\x13\\t\\x0f\\x14#\\x00%\\x00%\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-03-31T00:00:00", "modifydate": "2013-03-31T14:23:37", "lines": 37, "newlines": 37, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 875 is from Chris Cheney and contains the ALGOL 68C       *   FILE 875\n//*           compiler and library.                                 *   FILE 875\n//*                                                                 *   FILE 875\n//*           FILE 875 contains the means to build the Algol68C     *   FILE 875\n//*           software that corresponds (approximately) to that     *   FILE 875\n//*           in use at Cambridge University's academic             *   FILE 875\n//*           computing service on its IBM 3084 in 1995.  This      *   FILE 875\n//*           software supersedes the earlier pre-release           *   FILE 875\n//*           version, which has been on the CBT tape for           *   FILE 875\n//*           a while.                                              *   FILE 875\n//*                                                                 *   FILE 875\n//*           The 15 files of the AWS-format tape were unloaded     *   FILE 875\n//*           as members of this pds, with the ISPF statistics      *   FILE 875\n//*           marking which tape file was which.  The material is   *   FILE 875\n//*           otherwise presented here, in the format in which it   *   FILE 875\n//*           was originally distributed, except for that change.   *   FILE 875\n//*                                                                 *   FILE 875\n//*           I am hoping to re-package the install procedure       *   FILE 875\n//*           soon, so the job directly reads these pds members,    *   FILE 875\n//*           instead of reading tape files.  (SBG)                 *   FILE 875\n//*                                                                 *   FILE 875\n//*       The following copyright notice must be honored.           *   FILE 875\n//*                                                                 *   FILE 875\n//*     (C) 2012 Copyright C.J. Cheney, S.R. Bourne and others      *   FILE 875\n//*                                                                 *   FILE 875\n//*     Revised and updated to Release 1.3039.                      *   FILE 875\n//*                                                                 *   FILE 875\n//*     Copyright is asserted for the software comprising and       *   FILE 875\n//*     installed from this tape.  Permission is granted for        *   FILE 875\n//*     this software to be downloaded, installed and used,         *   FILE 875\n//*     subject to the conditions that:                             *   FILE 875\n//*                                                                 *   FILE 875\n//*     1) all use of this software is at the user's own risk;      *   FILE 875\n//*     2) that no person or organisation involved in the           *   FILE 875\n//*        development or distribution of this software has any     *   FILE 875\n//*        liability whatsoever arising from its supply or use.     *   FILE 875\n//*                                                                 *   FILE 875\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "AL68CAWS": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06\\x9f\\x01\\x13\\x06\\x9f\\x16F\\xbf\\x96\\xbf\\x96\\x00\\x00\\xc1\\xe6\\xe2\\xe3\\xc1\\xd7\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-10T00:00:00", "modifydate": "2013-03-10T16:46:00", "lines": 49046, "newlines": 49046, "modlines": 0, "user": "AWSTAPE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "A68COBJ": {"ttr": 20483, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x19`\\x19`\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 6496, "newlines": 6496, "modlines": 0, "user": "FILE07"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DISTOBJ": {"ttr": 23046, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x02\\x8b\\x02\\x8b\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 651, "newlines": 651, "modlines": 0, "user": "FILE02"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INSTJOB": {"ttr": 23303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x13\\x06o\\x01\\x13\\x06\\x7f\\x14\\x16\\x02\\x08\\x02\\x04\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf1@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-08T14:16:09", "lines": 520, "newlines": 516, "modlines": 0, "user": "FILE01"}, "text": "//A68C3039 JOB MSGCLASS=A,MSGLEVEL=(1,1),CLASS=A\n//*\n//* ###################################################################\n//* # NB Bash scripting users beware the use of $ below               #\n//* ###################################################################\n//*\n//*********************************************************************\n//*                                                                   *\n//* (C) 2012 Copyright C.J. Cheney, S.R. Bourne and others            *\n//*                                                                   *\n//* Copyright is asserted for the software comprising and installed   *\n//* from this tape. Permission is granted for this software to be     *\n//* downloaded, installed and used, subject to the conditions that:   *\n//* 1) all use of this software is at the user's own risk;            *\n//* 2) that no person or organisation involved in the development or  *\n//*    distribution of this software has any liability whatsoever     *\n//*    arising from its supply or use.                                *\n//*                                                                   *\n//*********************************************************************\n//*\n//* ###################################################################\n//* # Output dasd volume serial: A68C01                               #\n//* # Input tape volume serial: 01A68C with standard labels (SL)      #\n//* # All datasets on the AWS tape are RECFM=FB,LRECL=80,BLKSIZE=3200 #\n//* # --------------------------------------------------------------- #\n//* # This job should be modified so that the datasets in the install #\n//* # procedure come from this pds, instead of from the tape files.   #\n//* # --------------------------------------------------------------- #\n//* #                                                                 #\n//* #     tape   -------DASD------                                    #\n//* #Seq DSNAME  DSORG RECFM LRECL Description                        #\n//* #  1 INSTJOB   PS   FB     80  JCL for the job to install the     #\n//* #                              contents of this tape              #\n//* #  2 DISTOBJ   PS   FB     80  Object modules for utility         #\n//* #                              programs only used for unpacking   #\n//* #                              the distribution                   #\n//* #  3 MISCDOC   PO   FB     80  miscellaneous documents including  #\n//* #                              copyright notice, installation     #\n//* #                              instructions, character set        #\n//* #                              information, change log, bug list, #\n//* #                              etc.                               #\n//* #  4 ZLIBOBJ   PO   FB     80  Algol68C runtime system object     #\n//* #                              modules                            #\n//* #  5 USEROBJ   PO   FB     80  Algol68C standard prelude object   #\n//* #                              modules                            #\n//* #  6 Z370OBJ   PO   FB     80  ZCODE translator object modules    #\n//* #  7 A68COBJ   PO   FB     80  Algol68C compiler object modules   #\n//* #  8 SYS       PO   VB    136  Algol68C initialisation and        #\n//* #                              environment files                  #\n//* #  9 ZLIBSRC   PO   FB     80  Algol68C runtime system source     #\n//* #                              code (assembler)                   #\n//* # 10 USERSRC   PO   VB    136  Algol68C standard prelude source   #\n//* #                              code (Algol68C)                    #\n//* # 11 TESTSRC   PO   VB    136  Algol68C test suite code           #\n//* # 12 TESTOUT   PS   VBA   137  Output from the Algol68C the test  #\n//* #                              suite                              #\n//* # 13 MISCSRC   PO   VB    136  Miscellaneous Algol68C programs    #\n//* #                              (including the Algol68C            #\n//* #                              crossreference program)            #\n//* # 14 MISCJCL   PO   FB     80  Miscellaneous JCL:                 #\n//* #                               - catalogued procedures           #\n//* #                               - job to run the test suite       #\n//* #                               - job to rebuild the Algol68C     #\n//* #                                 runtime system from source code #\n//* #                                 (assembler)                     #\n//* #                               - job to rebuild the Algol68C     #\n//* #                                 standard  prelude from source   #\n//* #                                 code (Algol68C)                 #\n//* #                               - job showing use of the          #\n//* #                                 crossreference program.         #\n//* # 15 LANGREF   PO   FB     80  Algol68C Language Reference Manual #\n//* #                              (XHTML and CSS)                    #\n//* #                                                                 #\n//* # Note that certain text files are RECFM=VB(A) with a LRECL that  #\n//* # exceeds 80.                                                     #\n//* ###################################################################\n//*\n//* ===================================================================\n//ALLOC    PROC PFX=A68CLIB,VER=3039,\n//             DISCVOL=A68C01,U=SYSDA,\n//             SCRATCH='NEW,PASS',CATALOG='NEW,PASS',INIT='OLD,PASS',\n//             VB='RECFM=VB,LRECL=136,BLKSIZE=2498',   good for 3330\n//             VBX='RECFM=VB,LRECL=137,BLKSIZE=2498',  good for 3330\n//             VBA='RECFM=VB,LRECL=137,BLKSIZE=2498',  good for 3330\n//             FB='RECFM=FB,LRECL=80,BLKSIZE=2480',    good for 3330\n//             UNDF='RECFM=U,BLKSIZE=4096',             ok for 3330\n//             SMALL='TRK,(15,5,5)',                    ok for 3330\n//             MEDIUM='TRK,(30,5,15)',                  ok for 3330\n//             LARGE='TRK,(120,10,30)',                 ok for 3330\n//             TESTOUT='TRK,(30,5)', n.b. SEQ not PDS - ok for 3330\n//             UMEDIUM='TRK,50' for LKED SYSUT1  35 was ok for 3330\n//* -------------------------------------------------------------------\n//ALLOC    EXEC PGM=IEFBR14\n//* the 3 following are only to allow for DCB referback\n//VB       DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VB)\n//VBX      DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VBX)\n//VBA      DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VBA)\n//FB       DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&FB)\n//UNDF     DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&UNDF)\n//* the next 3 are used in the install process but are not KEPT\n//DISTOBJ  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//DISTMOD  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&MEDIUM),DCB=(&UNDF)\n//LKEDUT1  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&UMEDIUM),DCB=(&UNDF)\n//* the remainder are distribution target datasets\n//MISCDOC  DD  DSN=&PFX..MISC.DOC,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//SYS      DD  DSN=&PFX..SYS,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//INIT     DD  DSN=&PFX..SYS(INIT),\n//             DISP=(&INIT),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//MOD      DD  DSN=&PFX..MOD,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&UNDF)\n//ZLIBOBJ  DD  DSN=&PFX..ZLIB.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//USEROBJ  DD  DSN=&PFX..USER.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//Z370OBJ  DD  DSN=&PFX..Z370.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//A68COBJ  DD  DSN=&PFX..A68C.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//ZLIBSRC  DD  DSN=&PFX..ZLIB.TXT3039,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//USERSRC  DD  DSN=&PFX..USER.TXT3039,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&VB)\n//TESTSRC  DD  DSN=&PFX..TEST.TXT&VER,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&VB)\n//TESTOUT  DD  DSN=&PFX..TEST.OUT&VER,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&TESTOUT),  n.b. not a PDS\n//             DCB=(&VBX)         VBA is forced later\n//MISCSRC  DD  DSN=&PFX..MISC.SRC,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//MISCJCL  DD  DSN=&PFX..MISC.JCL,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//LANGREF  DD  DSN=&PFX..ALGOL68C.LANGREF,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//EPILOG   PROC REF='*.ALLOC.ALLOC',\n//             CATALOG='OLD,CATLG',INIT='OLD,KEEP',SCRATCH='OLD,DELETE'\n//* -------------------------------------------------------------------\n//EPILOG   EXEC PGM=IEFBR14\n//VB       DD  DISP=(&SCRATCH),DSN=&REF..VB\n//VBX      DD  DISP=(&SCRATCH),DSN=&REF..VBX\n//VBA      DD  DISP=(&SCRATCH),DSN=&REF..VBA\n//FB       DD  DISP=(&SCRATCH),DSN=&REF..FB\n//UNDF     DD  DISP=(&SCRATCH),DSN=&REF..UNDF\n//*\n//DISTOBJ  DD  DISP=(&SCRATCH),DSN=&REF..DISTOBJ\n//DISTMOD  DD  DISP=(&SCRATCH),DSN=&REF..DISTMOD\n//*\n//MISCDOC  DD  DISP=(&CATALOG),DSN=&REF..MISCDOC\n//SYS      DD  DISP=(&CATALOG),DSN=&REF..SYS\n//INIT     DD  DISP=(&INIT),DSN=&REF..INIT\n//MOD      DD  DISP=(&CATALOG),DSN=&REF..MOD\n//ZLIBOBJ  DD  DISP=(&SCRATCH),DSN=&REF..ZLIBOBJ\n//USEROBJ  DD  DISP=(&SCRATCH),DSN=&REF..USEROBJ\n//Z370OBJ  DD  DISP=(&SCRATCH),DSN=&REF..Z370OBJ\n//A68COBJ  DD  DISP=(&SCRATCH),DSN=&REF..A68COBJ\n//ZLIBSRC  DD  DISP=(&CATALOG),DSN=&REF..ZLIBSRC\n//USERSRC  DD  DISP=(&CATALOG),DSN=&REF..USERSRC\n//TESTSRC  DD  DISP=(&CATALOG),DSN=&REF..TESTSRC\n//TESTOUT  DD  DISP=(&CATALOG),DSN=&REF..TESTOUT\n//MISCSRC  DD  DISP=(&CATALOG),DSN=&REF..MISCSRC\n//MISCJCL  DD  DISP=(&CATALOG),DSN=&REF..MISCJCL\n//LANGREF  DD  DISP=(&CATALOG),DSN=&REF..LANGREF\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//BUILD    PROC CONDP='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             MOD=MOD,REF='*.ALLOC.ALLOC',\n//             REGP=150K,MODE=PDS,USPACE='TRK,(150,10,20)',\n//             PGML=IEWL,CONDL='0,LT,IEBUPDTE',\n//             REGL=350K,SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//PDSUNPK  EXEC PGM=PDSUNPK,REGION=&REGP,COND=(&CONDP),PARM='/&MODE'\n//STEPLIB  DD  DSN=&REF..DISTMOD,DISP=(OLD,PASS)\n//SYSPRINT DD  SYSOUT=A\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(&USPACE),DCB=(&REF..FB),\n//            DISP=(NEW,PASS)         n.b. NEW ensures the PDS is empty\n//SYSUT1   DD  DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//*\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  SYSOUT=A\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//OBJ      DD  DSN=*.PDSUNPK.SYSUT2,DISP=(OLD,DELETE,DELETE)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//PDSUNPK  PROC CONDP='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REGP=150K,MODE=PDS,REF='*.ALLOC.ALLOC'\n//* -------------------------------------------------------------------\n//PDSUNPK  EXEC PGM=PDSUNPK,REGION=&REGP,COND=(&CONDP),PARM='/&MODE'\n//STEPLIB  DD  DSN=&REF..DISTMOD,DISP=(OLD,PASS)\n//SYSPRINT DD  SYSOUT=A\n//SYSUT2   DD  DSN=&REF..&NAME,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//IEBGENER PROC CONDI='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REF='*.ALLOC.ALLOC'\n//* -------------------------------------------------------------------\n//IEBGENER EXEC PGM=IEBGENER,REGION=100K,COND=(&CONDI)\n//SYSPRINT DD   SYSOUT=A\n//SYSIN    DD   DUMMY\n//SYSUT1   DD   DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//SYSUT2   DD  DSN=&REF..&NAME,DISP=(OLD,PASS)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//LKED     PROC CONDL='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REF='*.ALLOC.ALLOC',\n//             PGML=IEWL,REGL=350K,SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  SYSOUT=A\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//SYSLIN   DD  DSNAME=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//         DD  DDNAME=SYSIN\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//MISCCL   PROC NAME=XXXX,REF='*.ALLOC.ALLOC',MOD=MOD,\n//             A68C=,REGC=250K,PRINTC='SYSOUT=A',OPTC=,\n//             Z370=,REGT=250K,PRINTT='SYSOUT=A',CONDT='4,LT,A68C',\n//             PGML=IEWL,REGL=350K,PRINTL='SYSOUT=A',\n//             CONDL='(4,LT,A68C),(4,LE,Z370)',SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//A68C     EXEC PGM=A68C&A68C,REGION=&REGC,\n//             PARM='F40K/SOURCE \"P(&NAME)\" CASESTROP &OPTC'\n//STEPLIB  DD   DSN=&REF..&MOD,DISP=(SHR,PASS)\n//SYSPRINT DD   &PRINTC\n//INIT     DD   DSN=&REF..INIT,DISP=(SHR,PASS)\n//SYSENV   DD   DSN=&REF..SYS,DISP=(SHR,PASS)\n//P        DD   DSN=&REF..MISCSRC,DISP=(SHR,PASS)\n//CODE     DD   UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(NEW,PASS)\n//* -------------------------------------------------------------------\n//Z370     EXEC PGM=Z370&Z370,REGION=&REGT,COND=(&CONDT)\n//STEPLIB  DD   DSN=&REF..&MOD,DISP=(SHR,PASS)\n//SYSPRINT DD   &PRINTT\n//ZCODE    DD   DSN=*.A68C.CODE,DISP=(OLD,DELETE,DELETE)\n//SYSGO    DD   UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(NEW,PASS),\n//             DCB=(&REF..FB)\n//* -------------------------------------------------------------------\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  &PRINTL\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//*SYSLIB  DD  DSN=&REF..&MOD,DISP=(SHR,PASS) as can't receive DS twice\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//SYSLIN   DD  DSN=*.Z370.SYSGO,DISP=(OLD,DELETE,DELETE)\n//         DD  DDNAME=SYSIN\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//* ###################################################################\n//* # Delete datasets if any exist, then allocate permanent and       #\n//* # temporary datasets                                              #\n//* ###################################################################\n//*\n//DELETE   EXEC ALLOC,\n//             SCRATCH='MOD,DELETE,DELETE', so may pre-exist or not\n//             CATALOG='MOD,DELETE,DELETE', so may pre-exist or not\n//             INIT='MOD,DELETE,DELETE',    so may pre-exist or not\n//           SMALL='TRK,(1,,1)',MEDIUM='TRK,(1,,1)',LARGE='TRK,(1,,1)'\n//*\n//ALLOC    EXEC ALLOC,COND=(0,LT)\n//*\n//* ###################################################################\n//* # Link-edit distribution utilities:                               #\n//* #   PDSUNPK    to unpack PDS members where RECFM=VB(A)            #\n//* ###################################################################\n//*\n//INSTDIST EXEC LKED,COND=(0,LT),\n//             NAME=DISTOBJ,L=2,MOD=DISTMOD,ATTL='NORENT,NOREUS'\n//*\n//* ###################################################################\n//* # Copy miscellaneous documentation into MISC.DOC dataset          #\n//* ###################################################################\n//*\n//INSTDOC  EXEC PDSUNPK,COND=(0,LT),\n//             NAME=MISCDOC,L=3\n//*\n//* ###################################################################\n//* # Linkedit the run-time system (ZLIB, not to be confused with the #\n//* # compression program of that name)                               #\n//* ###################################################################\n//*\n//INSTZLIB EXEC BUILD,COND=(0,LT),\n//             NAME='ZLIBOBJ',L=4,\n//             CAL=NCAL\n//LKED.SYSIN DD *\n  INCLUDE OBJ(ZLIB)\n    ALIAS ZLIB\n    NAME $LIB3039(R)\n  INCLUDE OBJ(RAND)\n    ALIAS $$$$0073,$$$$0074,$$$$0075,$$$$0076\n    ALIAS RAND\n    NAME $RAN3039(R)\n  INCLUDE OBJ(XPLG)\n    ALIAS $$$$0042,$$$$0043,$$$$0044\n    ALIAS XPLG\n    NAME $XPL3039(R)\n  INCLUDE OBJ(CNVT)\n    ALIAS $$$$0041\n    ALIAS CNVT\n    NAME $CON3039(R)\n  INCLUDE OBJ(NIOP)\n    ALIAS $NIOP\n    ALIAS NIOP\n    NAME $NIO3039(R)\n//*\n//* ###################################################################\n//* # Linkedit the standard prelude (a.k.a. user library), making     #\n//* # merged load modules (to speed up subsequent link-editing)       #\n//* ###################################################################\n//*\n//INSTUSER EXEC BUILD,COND=(4,LT),\n//             NAME='USEROBJ',L=5,\n//             CAL=NCAL\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(ZLIB,NIOP)\n  INCLUDE OBJ(MACH)\n    ALIAS MACH\n    NAME $MCH3039(R)\n  INCLUDE SYSLMOD(MACH)\n  INCLUDE OBJ(BASE)\n    ALIAS BASE\n    NAME $BAS3039(R)\n  INCLUDE SYSLMOD(BASE,CNVT,RAND)\n  INCLUDE OBJ(ROUT)\n    ALIAS ROUT\n    NAME $ROU3039(R)\n  INCLUDE SYSLMOD(ROUT,XPLG)\n  INCLUDE OBJ(MATH)\n    ALIAS MATH\n    NAME $MAT3039(R)\n  INCLUDE SYSLMOD(MATH)\n  INCLUDE OBJ(REAL)\n    ALIAS REAL\n    NAME $REA3039(R)\n  INCLUDE SYSLMOD(REAL)\n  INCLUDE OBJ(CMPX)\n    ALIAS CMPX\n    ALIAS USER3039\n    ALIAS USER\n    NAME $CPX3039(R)\n//*\n//* ###################################################################\n//* # Linkedit the ZCODE translator                                   #\n//* ###################################################################\n//*\n//INSTZ370 EXEC BUILD,COND=(4,LT),\n//             NAME='Z370OBJ',L=6,\n//             ATTL=OVLY\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(MACH,ZLIB,NIOP)\n  INCLUDE OBJ(L,A)\n    OVERLAY ONE\n  INCLUDE OBJ(B,F,G,Q,R)\n    OVERLAY ONE\n  INCLUDE OBJ(C,P)\n    ENTRY $A68INIT\n    ALIAS Z370\n    NAME Z3703039(R)\n//*\n//* ###################################################################\n//* # Linkedit the Algol68C compiler                                  #\n//* ###################################################################\n//*\n//INSTA68C EXEC BUILD,COND=(4,LT),\n//             NAME=A68COBJ,L=7,\n//             ATTL=OVLY\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(MACH,ZLIB,NIOP)\n  INCLUDE OBJ(SYS,SYSR,M1,V1,S1)\n    OVERLAY ONE\n  INCLUDE OBJ(Y1,HERCULES,N1,T1,Z1,R1,I1,L1,K1,P1,Q1)\n    OVERLAY ONE\n  INCLUDE OBJ(D2)\n    OVERLAY TWO\n  INCLUDE OBJ(R2,M2,P2,T2,E2,I2,S2,X2,B2)\n    OVERLAY TWO\n  INCLUDE OBJ(A3,Z3,P3)\n    OVERLAY THREE\n  INCLUDE OBJ(M3,V3,Q3,Y3,O3,R3,E3,C3,B3,N3,F3,D3)\n    OVERLAY THREE\n  INCLUDE OBJ(D4)\n    ENTRY $A68INIT\n    ALIAS A68C\n    NAME A68C3039(R)\n//*\n//* ###################################################################\n//* # Copy initialisation and environment file(s) into SYS dataset    #\n//* ###################################################################\n//*\n//INSTSYS  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=SYS,L=8\n//*\n//* ###################################################################\n//* # Copy the runtime system source code (assembler)                 #\n//* ###################################################################\n//*\n//ZLIBSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=ZLIBSRC,L=9\n//*\n//* ###################################################################\n//* # Copy the Algol68C Standard Prelude source code (Algol68C)       #\n//* ###################################################################\n//*\n//USERSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=USERSRC,L=10\n//*\n//* ###################################################################\n//* # Copy the Algol68C test suite source code (Algol68C)             #\n//* ###################################################################\n//*\n//TESTSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=TESTSRC,L=11\n//*\n//* ###################################################################\n//* # Copy the output from the Algol68C test suite                    #\n//* ###################################################################\n//*\n//TESTOUT  EXEC PDSUNPK,MODE=SEQ,COND=(4,LT),\n//             NAME=TESTOUT,L=12\n//*\n//TESTOUTA EXEC PGM=IEBGENER to force RECFM to VBA\n//SYSPRINT DD   SYSOUT=A\n//SYSIN    DD   DUMMY\n//SYSUT1   DD   UNIT=SYSDA,SPACE=(TRK,0),DISP=(NEW,DELETE,DELETE),\n//             DCB=(*.ALLOC.ALLOC.VBA)\n//SYSUT2   DD   DSN=*.TESTOUT.PDSUNPK.SYSUT2,DISP=(MOD,PASS),\n//             DCB=RECFM=VBA\n//*\n//* ###################################################################\n//* # Miscellaneous programs source code (Algol68C)                   #\n//* ###################################################################\n//*\n//MISCSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=MISCSRC,L=13\n//*\n//* ###################################################################\n//* # Miscellaneous JCL                                               #\n//* ###################################################################\n//*\n//MISCJCL  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=MISCJCL,L=14\n//*\n//* ###################################################################\n//* # Algol68C Language Reference Manual                              #\n//* ###################################################################\n//*\n//LANGREF  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=LANGREF,L=15\n//*\n//* ###################################################################\n//* # Compile and link various programs in .MISC.SRC                  #\n//* ###################################################################\n//*\n//XREF     EXEC MISCCL,COND=(4,LT),\n//             NAME=XREF,OPTC='NAME \"XREF\"'        single module xref\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(USER) explicit because of JCL refer-back issues\n  NAME XREF(R)\n//*\n//BIGXREF  EXEC MISCCL,COND=(4,LT),\n//             NAME=BIGXREF,OPTC='NAME \"BIGXREF\"'  multi-module xref\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(BASE) explicit because of JCL refer-back issues\n  NAME BIGXREF(R)\n//*\n//ENVMGE   EXEC MISCCL,COND=(4,LT),\n//             NAME=ENVMGE,OPTC='NAME \"ENVMGE\"'  environment merging\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(USER) explicit because of JCL refer-back issues\n  NAME ENVMGE(R)\n//*\n//* ###################################################################\n//* # Wrap up: catalog permanent datasets, delete temporary datasets  #\n//* ###################################################################\n//*\n//EPILOG   EXEC EPILOG,COND=(4,LT)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INSTJOB#": {"ttr": 23558, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06\\x7f\\x01\\x13\\x06\\x7f\\x14\\x17\\x02\\x04\\x02\\x04\\x00\\x00\\xd6\\xd9\\xc9\\xc7\\xf0\\xf1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-08T00:00:00", "modifydate": "2013-03-08T14:17:00", "lines": 516, "newlines": 516, "modlines": 0, "user": "ORIG01"}, "text": "//A68C3039 JOB MSGCLASS=A,MSGLEVEL=(1,1),CLASS=A\n//*\n//* ###################################################################\n//* # NB Bash scripting users beware the use of $ below               #\n//* ###################################################################\n//*\n//*********************************************************************\n//*                                                                   *\n//* (C) 2012 Copyright C.J. Cheney, S.R. Bourne and others            *\n//*                                                                   *\n//* Copyright is asserted for the software comprising and installed   *\n//* from this tape. Permission is granted for this software to be     *\n//* downloaded, installed and used, subject to the conditions that:   *\n//* 1) all use of this software is at the user's own risk;            *\n//* 2) that no person or organisation involved in the development or  *\n//*    distribution of this software has any liability whatsoever     *\n//*    arising from its supply or use.                                *\n//*                                                                   *\n//*********************************************************************\n//*\n//* ###################################################################\n//* # Output dasd volume serial: A68C01                               #\n//* # Input tape volume serial: 01A68C with standard labels (SL)      #\n//* # All datasets on the AWS tape are RECFM=FB,LRECL=80,BLKSIZE=3200 #\n//* #                                                                 #\n//* #     tape   -------DASD------                                    #\n//* #Seq DSNAME  DSORG RECFM LRECL Description                        #\n//* #  1 INSTJOB   PS   FB     80  JCL for the job to install the     #\n//* #                              contents of this tape              #\n//* #  2 DISTOBJ   PS   FB     80  Object modules for utility         #\n//* #                              programs only used for unpacking   #\n//* #                              the distribution                   #\n//* #  3 MISCDOC   PO   FB     80  miscellaneous documents including  #\n//* #                              copyright notice, installation     #\n//* #                              instructions, character set        #\n//* #                              information, change log, bug list, #\n//* #                              etc.                               #\n//* #  4 ZLIBOBJ   PO   FB     80  Algol68C runtime system object     #\n//* #                              modules                            #\n//* #  5 USEROBJ   PO   FB     80  Algol68C standard prelude object   #\n//* #                              modules                            #\n//* #  6 Z370OBJ   PO   FB     80  ZCODE translator object modules    #\n//* #  7 A68COBJ   PO   FB     80  Algol68C compiler object modules   #\n//* #  8 SYS       PO   VB    136  Algol68C initialisation and        #\n//* #                              environment files                  #\n//* #  9 ZLIBSRC   PO   FB     80  Algol68C runtime system source     #\n//* #                              code (assembler)                   #\n//* # 10 USERSRC   PO   VB    136  Algol68C standard prelude source   #\n//* #                              code (Algol68C)                    #\n//* # 11 TESTSRC   PO   VB    136  Algol68C test suite code           #\n//* # 12 TESTOUT   PS   VBA   137  Output from the Algol68C the test  #\n//* #                              suite                              #\n//* # 13 MISCSRC   PO   VB    136  Miscellaneous Algol68C programs    #\n//* #                              (including the Algol68C            #\n//* #                              crossreference program)            #\n//* # 14 MISCJCL   PO   FB     80  Miscellaneous JCL:                 #\n//* #                               - catalogued procedures           #\n//* #                               - job to run the test suite       #\n//* #                               - job to rebuild the Algol68C     #\n//* #                                 runtime system from source code #\n//* #                                 (assembler)                     #\n//* #                               - job to rebuild the Algol68C     #\n//* #                                 standard  prelude from source   #\n//* #                                 code (Algol68C)                 #\n//* #                               - job showing use of the          #\n//* #                                 crossreference program.         #\n//* # 15 LANGREF   PO   FB     80  Algol68C Language Reference Manual #\n//* #                              (XHTML and CSS)                    #\n//* #                                                                 #\n//* # Note that certain text files are RECFM=VB(A) with a LRECL that  #\n//* # exceeds 80.                                                     #\n//* ###################################################################\n//*\n//* ===================================================================\n//ALLOC    PROC PFX=A68CLIB,VER=3039,\n//             DISCVOL=A68C01,U=SYSDA,\n//             SCRATCH='NEW,PASS',CATALOG='NEW,PASS',INIT='OLD,PASS',\n//             VB='RECFM=VB,LRECL=136,BLKSIZE=2498',   good for 3330\n//             VBX='RECFM=VB,LRECL=137,BLKSIZE=2498',  good for 3330\n//             VBA='RECFM=VB,LRECL=137,BLKSIZE=2498',  good for 3330\n//             FB='RECFM=FB,LRECL=80,BLKSIZE=2480',    good for 3330\n//             UNDF='RECFM=U,BLKSIZE=4096',             ok for 3330\n//             SMALL='TRK,(15,5,5)',                    ok for 3330\n//             MEDIUM='TRK,(30,5,15)',                  ok for 3330\n//             LARGE='TRK,(120,10,30)',                 ok for 3330\n//             TESTOUT='TRK,(30,5)', n.b. SEQ not PDS - ok for 3330\n//             UMEDIUM='TRK,50' for LKED SYSUT1  35 was ok for 3330\n//* -------------------------------------------------------------------\n//ALLOC    EXEC PGM=IEFBR14\n//* the 3 following are only to allow for DCB referback\n//VB       DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VB)\n//VBX      DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VBX)\n//VBA      DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&VBA)\n//FB       DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&FB)\n//UNDF     DD  UNIT=SYSDA,DISP=(&SCRATCH),SPACE=(TRK,0),DCB=(&UNDF)\n//* the next 3 are used in the install process but are not KEPT\n//DISTOBJ  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//DISTMOD  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&MEDIUM),DCB=(&UNDF)\n//LKEDUT1  DD  DISP=(&SCRATCH),UNIT=&U,VOL=SER=&DISCVOL,\n//             SPACE=(&UMEDIUM),DCB=(&UNDF)\n//* the remainder are distribution target datasets\n//MISCDOC  DD  DSN=&PFX..MISC.DOC,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//SYS      DD  DSN=&PFX..SYS,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//INIT     DD  DSN=&PFX..SYS(INIT),\n//             DISP=(&INIT),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//MOD      DD  DSN=&PFX..MOD,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&UNDF)\n//ZLIBOBJ  DD  DSN=&PFX..ZLIB.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//USEROBJ  DD  DSN=&PFX..USER.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//Z370OBJ  DD  DSN=&PFX..Z370.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&FB)\n//A68COBJ  DD  DSN=&PFX..A68C.OBJ&VER,\n//             DISP=(&SCRATCH),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//ZLIBSRC  DD  DSN=&PFX..ZLIB.TXT3039,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//USERSRC  DD  DSN=&PFX..USER.TXT3039,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&MEDIUM),DCB=(&VB)\n//TESTSRC  DD  DSN=&PFX..TEST.TXT&VER,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&VB)\n//TESTOUT  DD  DSN=&PFX..TEST.OUT&VER,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&TESTOUT),  n.b. not a PDS\n//             DCB=(&VBX)         VBA is forced later\n//MISCSRC  DD  DSN=&PFX..MISC.SRC,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&VB)\n//MISCJCL  DD  DSN=&PFX..MISC.JCL,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&SMALL),DCB=(&FB)\n//LANGREF  DD  DSN=&PFX..ALGOL68C.LANGREF,\n//             DISP=(&CATALOG),VOL=SER=&DISCVOL,UNIT=&U,\n//             SPACE=(&LARGE),DCB=(&FB)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//EPILOG   PROC REF='*.ALLOC.ALLOC',\n//             CATALOG='OLD,CATLG',INIT='OLD,KEEP',SCRATCH='OLD,DELETE'\n//* -------------------------------------------------------------------\n//EPILOG   EXEC PGM=IEFBR14\n//VB       DD  DISP=(&SCRATCH),DSN=&REF..VB\n//VBX      DD  DISP=(&SCRATCH),DSN=&REF..VBX\n//VBA      DD  DISP=(&SCRATCH),DSN=&REF..VBA\n//FB       DD  DISP=(&SCRATCH),DSN=&REF..FB\n//UNDF     DD  DISP=(&SCRATCH),DSN=&REF..UNDF\n//*\n//DISTOBJ  DD  DISP=(&SCRATCH),DSN=&REF..DISTOBJ\n//DISTMOD  DD  DISP=(&SCRATCH),DSN=&REF..DISTMOD\n//*\n//MISCDOC  DD  DISP=(&CATALOG),DSN=&REF..MISCDOC\n//SYS      DD  DISP=(&CATALOG),DSN=&REF..SYS\n//INIT     DD  DISP=(&INIT),DSN=&REF..INIT\n//MOD      DD  DISP=(&CATALOG),DSN=&REF..MOD\n//ZLIBOBJ  DD  DISP=(&SCRATCH),DSN=&REF..ZLIBOBJ\n//USEROBJ  DD  DISP=(&SCRATCH),DSN=&REF..USEROBJ\n//Z370OBJ  DD  DISP=(&SCRATCH),DSN=&REF..Z370OBJ\n//A68COBJ  DD  DISP=(&SCRATCH),DSN=&REF..A68COBJ\n//ZLIBSRC  DD  DISP=(&CATALOG),DSN=&REF..ZLIBSRC\n//USERSRC  DD  DISP=(&CATALOG),DSN=&REF..USERSRC\n//TESTSRC  DD  DISP=(&CATALOG),DSN=&REF..TESTSRC\n//TESTOUT  DD  DISP=(&CATALOG),DSN=&REF..TESTOUT\n//MISCSRC  DD  DISP=(&CATALOG),DSN=&REF..MISCSRC\n//MISCJCL  DD  DISP=(&CATALOG),DSN=&REF..MISCJCL\n//LANGREF  DD  DISP=(&CATALOG),DSN=&REF..LANGREF\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//BUILD    PROC CONDP='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             MOD=MOD,REF='*.ALLOC.ALLOC',\n//             REGP=150K,MODE=PDS,USPACE='TRK,(150,10,20)',\n//             PGML=IEWL,CONDL='0,LT,IEBUPDTE',\n//             REGL=350K,SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//PDSUNPK  EXEC PGM=PDSUNPK,REGION=&REGP,COND=(&CONDP),PARM='/&MODE'\n//STEPLIB  DD  DSN=&REF..DISTMOD,DISP=(OLD,PASS)\n//SYSPRINT DD  SYSOUT=A\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(&USPACE),DCB=(&REF..FB),\n//            DISP=(NEW,PASS)         n.b. NEW ensures the PDS is empty\n//SYSUT1   DD  DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//*\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  SYSOUT=A\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//OBJ      DD  DSN=*.PDSUNPK.SYSUT2,DISP=(OLD,DELETE,DELETE)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//PDSUNPK  PROC CONDP='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REGP=150K,MODE=PDS,REF='*.ALLOC.ALLOC'\n//* -------------------------------------------------------------------\n//PDSUNPK  EXEC PGM=PDSUNPK,REGION=&REGP,COND=(&CONDP),PARM='/&MODE'\n//STEPLIB  DD  DSN=&REF..DISTMOD,DISP=(OLD,PASS)\n//SYSPRINT DD  SYSOUT=A\n//SYSUT2   DD  DSN=&REF..&NAME,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//IEBGENER PROC CONDI='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REF='*.ALLOC.ALLOC'\n//* -------------------------------------------------------------------\n//IEBGENER EXEC PGM=IEBGENER,REGION=100K,COND=(&CONDI)\n//SYSPRINT DD   SYSOUT=A\n//SYSIN    DD   DUMMY\n//SYSUT1   DD   DSN=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//SYSUT2   DD  DSN=&REF..&NAME,DISP=(OLD,PASS)\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//LKED     PROC CONDL='0,LT',NAME='xxxx',L=1,LAB=SL,TAPEVOL=01A68C,\n//             REF='*.ALLOC.ALLOC',\n//             PGML=IEWL,REGL=350K,SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  SYSOUT=A\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//SYSLIN   DD  DSNAME=&NAME,LABEL=(&L,&LAB),\n//             DISP=(OLD,KEEP),UNIT=TAPE,VOL=(,RETAIN,SER=&TAPEVOL)\n//         DD  DDNAME=SYSIN\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//MISCCL   PROC NAME=XXXX,REF='*.ALLOC.ALLOC',MOD=MOD,\n//             A68C=,REGC=250K,PRINTC='SYSOUT=A',OPTC=,\n//             Z370=,REGT=250K,PRINTT='SYSOUT=A',CONDT='4,LT,A68C',\n//             PGML=IEWL,REGL=350K,PRINTL='SYSOUT=A',\n//             CONDL='(4,LT,A68C),(4,LE,Z370)',SIZEL='999K,18K',\n//             LISTL=LIST,MAPL=NOMAP,CAL=CALL,ATTL='RENT,REUS'\n//* -------------------------------------------------------------------\n//A68C     EXEC PGM=A68C&A68C,REGION=&REGC,\n//             PARM='F40K/SOURCE \"P(&NAME)\" CASESTROP &OPTC'\n//STEPLIB  DD   DSN=&REF..&MOD,DISP=(SHR,PASS)\n//SYSPRINT DD   &PRINTC\n//INIT     DD   DSN=&REF..INIT,DISP=(SHR,PASS)\n//SYSENV   DD   DSN=&REF..SYS,DISP=(SHR,PASS)\n//P        DD   DSN=&REF..MISCSRC,DISP=(SHR,PASS)\n//CODE     DD   UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(NEW,PASS)\n//* -------------------------------------------------------------------\n//Z370     EXEC PGM=Z370&Z370,REGION=&REGT,COND=(&CONDT)\n//STEPLIB  DD   DSN=&REF..&MOD,DISP=(SHR,PASS)\n//SYSPRINT DD   &PRINTT\n//ZCODE    DD   DSN=*.A68C.CODE,DISP=(OLD,DELETE,DELETE)\n//SYSGO    DD   UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(NEW,PASS),\n//             DCB=(&REF..FB)\n//* -------------------------------------------------------------------\n//LKED     EXEC PGM=&PGML,REGION=&REGL,COND=(&CONDL),\n//             PARM='&LISTL,&MAPL,NOXREF,&CAL,DCBS,&ATTL,SIZE=(&SIZEL)'\n//SYSPRINT DD  &PRINTL\n//SYSLMOD  DD  DSN=&REF..&MOD,DISP=(OLD,PASS)\n//*SYSLIB  DD  DSN=&REF..&MOD,DISP=(SHR,PASS) as can't receive DS twice\n//SYSUT1   DD  DSN=&REF..LKEDUT1,DISP=(OLD,PASS)\n//SYSLIN   DD  DSN=*.Z370.SYSGO,DISP=(OLD,DELETE,DELETE)\n//         DD  DDNAME=SYSIN\n//* -------------------------------------------------------------------\n//         PEND\n//* ===================================================================\n//*\n//* ###################################################################\n//* # Delete datasets if any exist, then allocate permanent and       #\n//* # temporary datasets                                              #\n//* ###################################################################\n//*\n//DELETE   EXEC ALLOC,\n//             SCRATCH='MOD,DELETE,DELETE', so may pre-exist or not\n//             CATALOG='MOD,DELETE,DELETE', so may pre-exist or not\n//             INIT='MOD,DELETE,DELETE',    so may pre-exist or not\n//           SMALL='TRK,(1,,1)',MEDIUM='TRK,(1,,1)',LARGE='TRK,(1,,1)'\n//*\n//ALLOC    EXEC ALLOC,COND=(0,LT)\n//*\n//* ###################################################################\n//* # Link-edit distribution utilities:                               #\n//* #   PDSUNPK    to unpack PDS members where RECFM=VB(A)            #\n//* ###################################################################\n//*\n//INSTDIST EXEC LKED,COND=(0,LT),\n//             NAME=DISTOBJ,L=2,MOD=DISTMOD,ATTL='NORENT,NOREUS'\n//*\n//* ###################################################################\n//* # Copy miscellaneous documentation into MISC.DOC dataset          #\n//* ###################################################################\n//*\n//INSTDOC  EXEC PDSUNPK,COND=(0,LT),\n//             NAME=MISCDOC,L=3\n//*\n//* ###################################################################\n//* # Linkedit the run-time system (ZLIB, not to be confused with the #\n//* # compression program of that name)                               #\n//* ###################################################################\n//*\n//INSTZLIB EXEC BUILD,COND=(0,LT),\n//             NAME='ZLIBOBJ',L=4,\n//             CAL=NCAL\n//LKED.SYSIN DD *\n  INCLUDE OBJ(ZLIB)\n    ALIAS ZLIB\n    NAME $LIB3039(R)\n  INCLUDE OBJ(RAND)\n    ALIAS $$$$0073,$$$$0074,$$$$0075,$$$$0076\n    ALIAS RAND\n    NAME $RAN3039(R)\n  INCLUDE OBJ(XPLG)\n    ALIAS $$$$0042,$$$$0043,$$$$0044\n    ALIAS XPLG\n    NAME $XPL3039(R)\n  INCLUDE OBJ(CNVT)\n    ALIAS $$$$0041\n    ALIAS CNVT\n    NAME $CON3039(R)\n  INCLUDE OBJ(NIOP)\n    ALIAS $NIOP\n    ALIAS NIOP\n    NAME $NIO3039(R)\n//*\n//* ###################################################################\n//* # Linkedit the standard prelude (a.k.a. user library), making     #\n//* # merged load modules (to speed up subsequent link-editing)       #\n//* ###################################################################\n//*\n//INSTUSER EXEC BUILD,COND=(4,LT),\n//             NAME='USEROBJ',L=5,\n//             CAL=NCAL\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(ZLIB,NIOP)\n  INCLUDE OBJ(MACH)\n    ALIAS MACH\n    NAME $MCH3039(R)\n  INCLUDE SYSLMOD(MACH)\n  INCLUDE OBJ(BASE)\n    ALIAS BASE\n    NAME $BAS3039(R)\n  INCLUDE SYSLMOD(BASE,CNVT,RAND)\n  INCLUDE OBJ(ROUT)\n    ALIAS ROUT\n    NAME $ROU3039(R)\n  INCLUDE SYSLMOD(ROUT,XPLG)\n  INCLUDE OBJ(MATH)\n    ALIAS MATH\n    NAME $MAT3039(R)\n  INCLUDE SYSLMOD(MATH)\n  INCLUDE OBJ(REAL)\n    ALIAS REAL\n    NAME $REA3039(R)\n  INCLUDE SYSLMOD(REAL)\n  INCLUDE OBJ(CMPX)\n    ALIAS CMPX\n    ALIAS USER3039\n    ALIAS USER\n    NAME $CPX3039(R)\n//*\n//* ###################################################################\n//* # Linkedit the ZCODE translator                                   #\n//* ###################################################################\n//*\n//INSTZ370 EXEC BUILD,COND=(4,LT),\n//             NAME='Z370OBJ',L=6,\n//             ATTL=OVLY\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(MACH,ZLIB,NIOP)\n  INCLUDE OBJ(L,A)\n    OVERLAY ONE\n  INCLUDE OBJ(B,F,G,Q,R)\n    OVERLAY ONE\n  INCLUDE OBJ(C,P)\n    ENTRY $A68INIT\n    ALIAS Z370\n    NAME Z3703039(R)\n//*\n//* ###################################################################\n//* # Linkedit the Algol68C compiler                                  #\n//* ###################################################################\n//*\n//INSTA68C EXEC BUILD,COND=(4,LT),\n//             NAME=A68COBJ,L=7,\n//             ATTL=OVLY\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(MACH,ZLIB,NIOP)\n  INCLUDE OBJ(SYS,SYSR,M1,V1,S1)\n    OVERLAY ONE\n  INCLUDE OBJ(Y1,HERCULES,N1,T1,Z1,R1,I1,L1,K1,P1,Q1)\n    OVERLAY ONE\n  INCLUDE OBJ(D2)\n    OVERLAY TWO\n  INCLUDE OBJ(R2,M2,P2,T2,E2,I2,S2,X2,B2)\n    OVERLAY TWO\n  INCLUDE OBJ(A3,Z3,P3)\n    OVERLAY THREE\n  INCLUDE OBJ(M3,V3,Q3,Y3,O3,R3,E3,C3,B3,N3,F3,D3)\n    OVERLAY THREE\n  INCLUDE OBJ(D4)\n    ENTRY $A68INIT\n    ALIAS A68C\n    NAME A68C3039(R)\n//*\n//* ###################################################################\n//* # Copy initialisation and environment file(s) into SYS dataset    #\n//* ###################################################################\n//*\n//INSTSYS  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=SYS,L=8\n//*\n//* ###################################################################\n//* # Copy the runtime system source code (assembler)                 #\n//* ###################################################################\n//*\n//ZLIBSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=ZLIBSRC,L=9\n//*\n//* ###################################################################\n//* # Copy the Algol68C Standard Prelude source code (Algol68C)       #\n//* ###################################################################\n//*\n//USERSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=USERSRC,L=10\n//*\n//* ###################################################################\n//* # Copy the Algol68C test suite source code (Algol68C)             #\n//* ###################################################################\n//*\n//TESTSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=TESTSRC,L=11\n//*\n//* ###################################################################\n//* # Copy the output from the Algol68C test suite                    #\n//* ###################################################################\n//*\n//TESTOUT  EXEC PDSUNPK,MODE=SEQ,COND=(4,LT),\n//             NAME=TESTOUT,L=12\n//*\n//TESTOUTA EXEC PGM=IEBGENER to force RECFM to VBA\n//SYSPRINT DD   SYSOUT=A\n//SYSIN    DD   DUMMY\n//SYSUT1   DD   UNIT=SYSDA,SPACE=(TRK,0),DISP=(NEW,DELETE,DELETE),\n//             DCB=(*.ALLOC.ALLOC.VBA)\n//SYSUT2   DD   DSN=*.TESTOUT.PDSUNPK.SYSUT2,DISP=(MOD,PASS),\n//             DCB=RECFM=VBA\n//*\n//* ###################################################################\n//* # Miscellaneous programs source code (Algol68C)                   #\n//* ###################################################################\n//*\n//MISCSRC  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=MISCSRC,L=13\n//*\n//* ###################################################################\n//* # Miscellaneous JCL                                               #\n//* ###################################################################\n//*\n//MISCJCL  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=MISCJCL,L=14\n//*\n//* ###################################################################\n//* # Algol68C Language Reference Manual                              #\n//* ###################################################################\n//*\n//LANGREF  EXEC PDSUNPK,COND=(4,LT),\n//             NAME=LANGREF,L=15\n//*\n//* ###################################################################\n//* # Compile and link various programs in .MISC.SRC                  #\n//* ###################################################################\n//*\n//XREF     EXEC MISCCL,COND=(4,LT),\n//             NAME=XREF,OPTC='NAME \"XREF\"'        single module xref\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(USER) explicit because of JCL refer-back issues\n  NAME XREF(R)\n//*\n//BIGXREF  EXEC MISCCL,COND=(4,LT),\n//             NAME=BIGXREF,OPTC='NAME \"BIGXREF\"'  multi-module xref\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(BASE) explicit because of JCL refer-back issues\n  NAME BIGXREF(R)\n//*\n//ENVMGE   EXEC MISCCL,COND=(4,LT),\n//             NAME=ENVMGE,OPTC='NAME \"ENVMGE\"'  environment merging\n//LKED.SYSIN DD *\n  INCLUDE SYSLMOD(USER) explicit because of JCL refer-back issues\n  NAME ENVMGE(R)\n//*\n//* ###################################################################\n//* # Wrap up: catalog permanent datasets, delete temporary datasets  #\n//* ###################################################################\n//*\n//EPILOG   EXEC EPILOG,COND=(4,LT)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LANGREF": {"ttr": 23813, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\"\\xed\"\\xed\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 8941, "newlines": 8941, "modlines": 0, "user": "FILE15"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MISCDOC": {"ttr": 27399, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x0f[\\x0f[\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 3931, "newlines": 3931, "modlines": 0, "user": "FILE03"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MISCJCL": {"ttr": 28938, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x04\\x9f\\x04\\x9f\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 1183, "newlines": 1183, "modlines": 0, "user": "FILE14"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MISCSRC": {"ttr": 29449, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x04\\xc5\\x04\\xc5\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 1221, "newlines": 1221, "modlines": 0, "user": "FILE13"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SYS": {"ttr": 29961, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x08)\\x08)\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 2089, "newlines": 2089, "modlines": 0, "user": "FILE08"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "TESTOUT": {"ttr": 30979, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x0f\\x88\\x0f\\x88\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 3976, "newlines": 3976, "modlines": 0, "user": "FILE12"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "TESTSRC": {"ttr": 32518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x1bu\\x1bu\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 7029, "newlines": 7029, "modlines": 0, "user": "FILE11"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "USEROBJ": {"ttr": 35336, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x03/\\x03/\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 815, "newlines": 815, "modlines": 0, "user": "FILE05"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "USERSRC": {"ttr": 35841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x06M\\x06M\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf0@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 1613, "newlines": 1613, "modlines": 0, "user": "FILE10"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ZLIBOBJ": {"ttr": 36360, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x02}\\x02}\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 637, "newlines": 637, "modlines": 0, "user": "FILE04"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ZLIBSRC": {"ttr": 36617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190!A!A\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 8513, "newlines": 8513, "modlines": 0, "user": "FILE09"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "Z370OBJ": {"ttr": 40197, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x13\\x06o\\x01\\x13\\x06o\\x190\\x04\\xf9\\x04\\xf9\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-07T00:00:00", "modifydate": "2013-03-07T19:30:00", "lines": 1273, "newlines": 1273, "modlines": 0, "user": "FILE06"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT875/FILE875.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT875", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}