)F FUNCTION - The MODLIST exec is used to determine what library
              a load module resides in and also displays Link-Edit
              (Binder) information about the load module.
              The information is displayed in ISPF BROWSE mode if
              the exec is invoked from the TSO foreground.
)X SYNTAX   -

         MODLIST    MODULENAME { DUP      }
         ML                    { ALL      }
                               { LPA      }
                               { LINK     }
                               { LIST     }
                               { LIB(dsname)  }
                               { DA(dsname)   }
                               { DSN(dsname)  }
                                      {VOL(vvvvvv)     }
                                      {UNIT(xxxxxxxx)  }


      Modulename - The modulename to be searched.  This parameter
                   must always be specified and must precede the
                   subparameters.


      Subparameter Values and Explanations:

      DUP        - Include duplicate entries.  Look for the module
                   more than one load library. If the LPA and LINK
                   subparameters are not included, the facility
                   will look for all modules having this name in the
                   scope of the LPA libraries and in the Linklist.

      ALL        - Same as DUP.

      LPA        - Look for the module in the LPA list of load
                   libraries.  If the subparameter DUP or ALL is
                   also included, it will list all of the entries
                   with this modulename within the scope of the
                   LPA List of load libraries.

      LINK       - Look for the module in the LinkList of load
                   libraries.  If the subparameter DUP or ALL is
                   also included, it will list all of the entries
                   with this modulename within the scope of the
                   LinkList of load libraries.

      LIST       - This subparameter will list all of the LPA
                   libraries and LinkList libraries.  When this
                   subparamter is specified, the modulename must
                   also be included ahead of the LIST parameter.
                   However, the modulename parameter is ignored, so
                   it can be a dummy modulename such as 'X'.

      LIB(dsname)- This subparameter tells the facilitiy to search
                   only this Load Library for the modulename.

      DA(dsname) - Same as LIB(dsname) - Alternate Keyword parm

      DSN(dsname)- Same as LIB(dsname) - Alternate Keyword parm

      VOL(vvvvvv)- This subparameter can be used with the LIB
                   subparameter to specify the Volser that the
                   specified library resides on.

      UNIT(xxxxx)- This subparameter can be used with the LIB and
                   VOL subparameters to specify the UNIT of the
                   specified Volser of the library.

      Valid OPTIONAL parameters:
                   'DUP' or 'ALL' (list all duplicate entries),
                   'LIST' (List all LPA & LINKLIST libraries),
                   'LIB(mylib)' (Check only this libarary),
                   'VOL(xxxxxx)' (Use this volser for mylib
                   allocation), 'UNIT(xxxxx)' (Use this unit for
                   mylib allocation.  Note, if the library name
                   is passed as a non-keyword parameter, it must
                   be at least eight characters in length.

    Example TSO Foreground Exec Calls:

    MODLIST m LPA (search only the LPALIST for member 'm' - display
                   the first hit against an LPA library).
    ML m LPA     (same as the previous example above).
    ML m LNK     (search only the LINKLIST libs for member 'm' -
                  display the first hit against an LINKLIST library).
    ML m LINK    (same as LNK)
    ML m         (search both LPALIST and LINKLIST libs for 'm' -
                  display the first hit against an LPA or a
                  LINKLIST library).
    ML m DUP     (search both LPALIST and LINKLIST libs for all
                   occurances of member 'm' - display all hits).
    ML m ALL     (same as DUP)
    ML m LIST    (List all of the LPA and LINKLIST libraries)
    ML m LIB(SYS1.LINKLIB) - (List member 'm' - look at library
                   'SYS1.LINKLIB' only)
    ML m LIB(SYS1.LINKLIB VOL(SYHRS1) - (List member 'm' - look at
                   library 'SYS1.LINKLIB' on volume 'SYHRS1' only)
    ML m SYS1.LOADLIB - (List member 'm' - look at library
                   'SYS1.LOADLIB' only.  Note, the load library
                   must be at least eight characters in length if
                   specified this way without a keyword.

   06/23/2006:

   Added support for calling MODLISTR as a subroutine from
   another program.  The first parm is the membername to be
   queried.  The second parm (optional), if included, will cause
   program MODLISTR to return the results in a 100 byte user data
   return area (See RETURN_INFO) in lieu of displaying the
   results in file SYSPRINT.

   SUPPORTED METHODS TO INVOKE MODLISTR:

   1>    FROM REXX OR CLIST IN TSOE ENVIRONMENT:
         "ALLOC FI(SYSPRINT) DA(*) REUSE"
         "ALLOC FI(IEWLIB)   DA('MY.LOADLIB') SHR REUSE"

         "CALL 'MODLISTR.LOADLIB(MODLISTR)' '"MEMBERNAME"'"
         MODLISTR_RC  = RC

   2>    FROM REXX TSOE ENVIRONMENT AS LINKMVS:
         "ALLOC FI(SYSPRINT) DA(*) REUSE"
         "ALLOC FI(IEWLIB)   DA('MY.LOADLIB') SHR REUSE"

         ADDRESS "LINKMVS" 'MODLISTR MEMBERNAME'
         MODLISTR_RC  = RC

   3>    FROM REXX TSOE ENVIRONMENT AND RETURN THE RESULTS IN A
         REXX VARIABLE (SEE WS-MODLISTR-RETURN-AREA FIELD BELOW
         FOR THE VARIABLE STRING FORMAT) AS LINKPGM:

         "ALLOC FI(SYSPRINT) DA(*) REUSE"
         "ALLOC FI(IEWLIB)   DA('MY.LOADLIB') SHR REUSE"

         ADDRESS "LINKPGM" 'MODLISTR MEMBERNAME RETURN_AREA'
         MODLISTR_RC  = RC

   4>    CALL 'MODLISTR' DIRECTLY AS A BATCH PROGRAM:
         //STEPX    EXEC PGM=MODLISTR,PARM=MODULENAME
         //SYSPRINT DD  SYSOUT=*
         //IEWLIB   DD  DISP=SHR,DSN=MY.LOADLIB

   5>    FROM AN APPLICATION PROGRAM CALLING 'MODLISTR' AS A
         SUBROUTINE WITH ONE PARAMETER:
         //STEPX    EXEC PGM=YOURPGM
         //SYSPRINT DD  SYSOUT=*
         //IEWLIB   DD  DISP=SHR,DSN=MY.LOADLIB
      WHERE YOURPGM DOES...
          01 WS-MODLISTR          PIC X(8)  VALUE 'MODLISTR'.
          01 WS-MODULE-NAME       PIC X(8).
          CALL WS-MODLISTR USING WS-MODULE-NAME.
      (WS-MODULE-NAME MUST BE PADDED WITH TRAILING BLANKS)
      RESULTS ARE WRITTEN TO FILE SYSPRINT

      From an Assembler program:
          MODNAME   DS  CL8
          CALL MODLISTR,(MODNAME),VL
      RESULTS ARE WRITTEN TO FILE SYSPRINT


   6>    FROM AN APPLICATION PROGRAM CALLING 'MODLISTR' AS A
         SUBROUTINE WITH TWO PARAMETERS:
         //SYSPRINT DD  SYSOUT=*
         //IEWLIB   DD  DISP=SHR,DSN=MY.LOADLIB
      where YOURPGM does...
          01 WS-MODLISTR          PIC X(8)  VALUE 'MODLISTR'.
          01 WS-MODULE-NAME       PIC X(8).
          01 WS-MODLISTR-RETURN-AREA.
             05 WS-RA-MODNAME-LEN PIC S9(4) COMP.
             05 WS-RA-MODNAME     PIC X(8).
             05 WS-RA-LK-GR-DATE  PIC X(10).
             05 WS-RA-LK-JUL-DATE PIC X(8).
             05 WS-RA-LK-TIME     PIC X(8).
             05 WS-RA-MODULE-LEN  PIC X(8).
             05 WS-RA-AMODE       PIC X(3).
             05 WS-RA-RMODE       PIC X(3).
             05 WS-RA-APFCD       PIC X(2).
             05 WS-RA-RENT        PIC X(2).
             05 WS-RA-REUS        PIC X(2).
             05 WS-RA-REFR        PIC X(2).
             05 WS-RA-TTR         PIC X(6).
             05 WS-RA-EPA         PIC X(8).
             05 WS-RA-ORG-POE     PIC X(1).
             05 WS-RA-TRUE-NAME   PIC X(8).
             05 WS-RA-SSI         PIC X(8).
             05 FILLER            PIC X(11).

          CALL WS-MODLISTR USING WS-MODULE-NAME,
                                 WS-MODLISTR-RETURN-AREA.

      (WS-MODULE-NAME must be padded with trailing blanks)
      RESULTS ARE NOT WRITTEN TO FILE SYSPRINT
      Instead, the results are returned in WS-MODLISTR-RETURN-AREA
      (a 100 byte return parameter from MODLISTR).

      From an Assembler program:
          MODNAME   DS  CL8
          RETNAREA  DS  CL100
          CALL MODLISTR,(MODNAME,RETNAREA),VL



