         MACRO ,
&NAME    HOWCALLD &PARMCALL=
.********************************************************************
.*  Determine the caller's method of calling.  If called as a
.*  subroutine then exit the macro.  If called as an Execute
.*  Parameter, then branch to the Label &PARMCALL.
.*
.*  Reg 1 must contain the original address value that it contained
.*  on entry to the program calling this macro. Reg 1 is not
.*  modified by this macro.  This macro generates reentrant code.
.*
.*  Assumptions:
.*    1) This macro will only be able to distinguish the calling
.*       method if the first parameter's first two bytes are
.*       EBCDIC characters.  If the first two characters are not
.*       EBCDIC (i.e Binary or Packed Decimal or some other format),
.*       this logic will not function properly and the resultant
.*       branching will be subject to error.
.*    2) This macro assumes that the user proper has R1 set to the
.*       value that it contained on entry to the program issueing
.*       this macro.  Otherwise, the resultant branching will be
.*       subject to error.
.*
.*  Required Operands:
.*    1) PARMCALL - The branch-to procedure label to branch to if
.*                  the macro determines that the present program
.*                  was called via an execution parameter linkage
.*                  convention. This operand must not be omitted.
.*
.*  Example Call:
.*         HOWCALLD PARMCALL=LABEL1
.*
.*  Registers Used:
.*    R0       - Work register. It will be set to 0 on exit.
.*    R1       - must have the same value as R1 on entry to the
.*               present program. It is not altered by this macro.
.*    R2-R14   - not used.
.*    R15      - work register altered by this macro. It will be
.*               set to 0 on exit.
.*
.********************************************************************
.*
         AIF   ('&PARMCALL' EQ '').MNOTE1
.*
         L     15,0(,1)             Load the address of the exec parm
.*                                  exec parm or subroutine call ?
         SR    0,0                  Zero Reg  0
         ICM   0,B'0011',0(15)      Got Parameter or Ex parm Length ?
         N     0,=X'FFFF7FFF'       Turn off the high order sign bit
.*                                  since the first 2 bytes of the
.*                                  EBCDIC parm would be a negative
.*                                  number as viewed as a binary
.*                                  number.  Make it a positive value.
         CH    0,=H'1024'           If hw > 1024, then assume you are
.*                                  called as a subroutine using
.*                                  standard subroutine parm list.
.*                                  If hw value is < 1024 then assume
.*                                  that you are called using an
.*                                  Execute parm (ll + parameters).
         LA    0,0                  Zero Reg  0 w/o affecting cond code
         LA    15,0                 Zero Reg 15 w/o affecting cond code
         BNH   &PARMCALL            We have an Execute Parm Call
.********************************************************************
.*  I WAS WAS CALLED USING JCL-PARM STYLE LINKAGE
.*  R1    => ADDRESS OF LINKAGE PARAMETER WHICH POINTS TO:
.*         1 . A 2-BYTE HW LINKAGE LENGTH (LENGTH OF PARM)
.*             Followed by the PARM DATA
.*             EXEC PGM=XXXXXXXX,PARM=
.*        |
.*        ------> FullWord1 Address of the Linkage Parameter
.*                    |
.*                    ------->  Half-word_Len + PARM (1 - 100 bytes)
.********************************************************************
.*  OTHERWISE, I WAS CALLED USING STANDARD SUBROUTINE LINKAGE
.*  R1    => ADDRESS OF PARM ADDRESS LIST WHICH POINTS TO
.*           AN ARRAY OF PARM ADDRESSES:
.*   |
.*   -------> FullWord1 (PARM ADDRESS for Parameter 1)
.*   ------->     FullWord2 (PARM ADDRESS for Parameter 2)
.*                     |   | etc.
.*                     |   |
.*                     |   ---> Parameter 2
.*                     ----> Parameter 1
.*********************************************************************
         MEXIT
.MNOTE1  MNOTE 8,'PARMCALL BRANCH-TO PROCEDURE LABEL WAS OMITTED'
         MEXIT
.*
         MEND
