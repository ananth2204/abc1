{"INMR01": {"INMLRECL": 80, "INMFNODE": "ORIGNODE", "INMFUID": "ORIGUID", "INMTNODE": "DESTNODE", "INMTUID": "DESTUID", "INMFTIME": "20110613192458000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6160, "INMRECFM": "FB", "INMDIR": 44, "INMDSNAM": "PDPCLIB.DOC", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 6176, "INMBLKSZ": 6180, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"PDPCLIB.DOC": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6160, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 6180, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0, "DS1REFD": "000000", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x00\\x00\\x00\\x00'", "DS1LSTAR": "b'\\x00\\x00\\x00'", "DS1TRBAL": "b''"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0cvD\\x04\\xa5\\x0c\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0cvD\\x04\\xa5\\x0c\\xd8'", "b'X\\x00/\\xb0\\x00\\x00\\x00l\\x00\\x0e\\x00m\\x00\\x06\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"MVS": {"ttr": 257, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Design of MVS i/o routines\n\nin/out function rec-type mode   method\nin     fread    fixed    bin    loop reading, remember remainder\nin     fread    fixed    text   loop reading + truncing, remember rem\nin     fread    var      bin    loop reading (+ len), remember remainder\nin     fread    var      text   loop reading (+ len), remember remainder\nin     fgets    fixed    bin    read, scan, remember remainder\nin     fgets    fixed    text   read, trunc, remember remainder\nin     fgets    var      bin    read, scan, rr\nin     fgets    var      text   read, rr\nin     fgetc    fixed    bin    read, rr\nin     fgetc    fixed    text   read, trunc, rr\nin     fgetc    var      bin    read, rr\nin     fgetc    var      text   read, rr\n\nout    fwrite   fixed    bin    loop doing put, rr\nout    fwrite   fixed    text   search newline, copy + pad, put, rr\nout    fwrite   var      bin    if nelem != 1 copy to max lrecl\nout    fwrite   var      text   loop search nl, put, rr\nout    fputs    fixed    bin    loop doing put, rr\nout    fputs    fixed    text   search newline, copy + pad, put, rr\nout    fputs    var      bin    put\nout    fputs    var      text   search newline, put, copy rem\nout    fputc    fixed    bin    copy to rr until rr == lrecl\nout    fputc    fixed    text   copy to rr until newline, then pad\nout    fputc    var      bin    copy to rr until rr == lrecl\nout    fputc    var      text   copy to rr until newline\n\noptimize for fread on binary files (read matching record length),\nespecially fixed block files, and fgets on text files, especially\nvariable blocked files.\n\nbinary, variable block files are not a file type supported by this\nlibrary as part of the conforming implementation.  Instead, they\nare considered to be record-oriented processing, similar to unix\nsystems reading data from a pipe, where you can read less bytes\nthan requested, without reaching EOF.  ISO 7.9.8.1 doesn't give you\nthe flexibility of calling either of these things conforming.\nBasically, the C standard doesn't have a concept of operating\nsystem maintained length binary records, you have to do that\nyourself, e.g. by writing out the lengths yourself.  You can do\nthis in a fixed block dataset on MVS, and if you're concerned\nabout null-padding at the end of your data, use a lrecl of 1\n(and suffer the consequences!).  You could argue that this\nnon-conformance should only be initiated if fopen has a parameter\nincluding \",type=record\" or whatever.  Another option would\nbe to make VB binary records include the record size as part of\nthe stream.  Hmmm, sounds like that's the go actually.\n\nfread: if quickbin, if read elem size == lrecl, doit\nfgets: if variable record + no remainder\n       if buffer > record size, copy + add newline\n\nchar *fgets(char *buf, size_t szbuf, FILE *stream)\n{\n    char *dptr;\n    size_t len;\n\n    if (stream->quickText)\n    {\n        if (szbuf > (stream->lrecl + 1))\n        {\n            __aread(&dptr, &len, stream->hfile);\n            memcpy(buf, dptr, len);\n            memcpy(buf + len, \"\\n\", 2);\n        }\n    }\n    return (buf);\n}\n\nchar *fputs(char *buf, FILE *stream)\n{\n    char *p;\n\n    p = strchr(buf, '\\n');\n    __awrite(buf, p - buf, stream->hfile);\n    return (buf);\n}\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OUTPUT": {"ttr": 260, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\r\f                               PPPPPPPPPPP   DDDDDDDDD     PPPPPPPPPPP   MM\n                              PPPPPPPPPPPP  DDDDDDDDDD    PPPPPPPPPPPP  MMM\n                             PP        PP  DD       DD   PP        PP  MMMM    M\n                            PP        PP  DD        DD  PP        PP  MM MM  MM\n                           PP        PP  DD        DD  PP        PP  MM  MMMM  M\n                          PPPPPPPPPPPP  DD        DD  PPPPPPPPPPPP  MM   MM   MM\n                         PPPPPPPPPPP   DD        DD  PPPPPPPPPPP   MM        MM\n                        PP            DD        DD  PP            MM        MM\n                       PP            DD        DD  PP            MM        MM\n                      PP            DD       DD   PP            MM        MM\n                     PP            DDDDDDDDDD    PP            MM        MM\n                    PP            DDDDDDDDD     PP            MM        MM\n\n\n\n                    JJJJJJJJJJ       11\n                    JJJJJJJJJJ      111\n                        JJ         1111\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                  JJ    JJ           11\n                  JJ    JJ           11\n                  JJJJJJJJ       1111111111\n                   JJJJJJ        1111111111\n\n\n****A  START  JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A  START  JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A  START  JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A  START  JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n\r\f                                                J E S 2   J O B   L O G\n\n\n19.43.18 JOB    1  $HASP373 PDPMVS   STARTED - INIT  3 - CLASS C - SYS BSP1\n19.43.18 JOB    1  IEF403I PDPMVS - STARTED - TIME=19.43.18\n19.43.20 JOB    1  IEFACTRT - Stepname  Procstep  Program   Retcode\n19.43.20 JOB    1  PDPMVS     CREATE              IEFBR14   RC= 0000\n19.43.20 JOB    1  PDPMVS     PDPTOP              IEBGENER  RC= 0000\n19.43.20 JOB    1  PDPMVS     PDPPRLG             IEBGENER  RC= 0000\n19.43.20 JOB    1  PDPMVS     PDPEPIL             IEBGENER  RC= 0000\n19.43.20 JOB    1  PDPMVS     MVSMACS             IEBGENER  RC= 0000\n19.43.23 JOB    1  PDPMVS     MVSSTART  ASM       ASMA90    RC= 0000\n19.43.23 JOB    1  PDPMVS     MVSSTART  LKED      IEWL      RC= 0004\n19.43.28 JOB    1  PDPMVS     MVSSUPA   ASM       ASMA90    RC= 0000\n19.43.28 JOB    1  PDPMVS     MVSSUPA   LKED      IEWL      RC= 0000\n19.43.29 JOB    1  PDPMVS     START     ASM       ASMA90    RC= 0000\n19.43.29 JOB    1  PDPMVS     START     LKED      IEWL      RC= 0004\n19.43.33 JOB    1  PDPMVS     STDIO     ASM       ASMA90    RC= 0000\n19.43.33 JOB    1  PDPMVS     STDIO     LKED      IEWL      RC= 0004\n19.43.33 JOB    1  PDPMVS     STDLIB    ASM       ASMA90    RC= 0000\n19.43.33 JOB    1  PDPMVS     STDLIB    LKED      IEWL      RC= 0004\n19.43.34 JOB    1  PDPMVS     CTYPE     ASM       ASMA90    RC= 0000\n19.43.34 JOB    1  PDPMVS     CTYPE     LKED      IEWL      RC= 0000\n19.43.34 JOB    1  PDPMVS     STRING    ASM       ASMA90    RC= 0000\n19.43.34 JOB    1  PDPMVS     STRING    LKED      IEWL      RC= 0000\n19.43.35 JOB    1  PDPMVS     TIME      ASM       ASMA90    RC= 0000\n19.43.35 JOB    1  PDPMVS     TIME      LKED      IEWL      RC= 0004\n19.43.35 JOB    1  PDPMVS     ERRNO     ASM       ASMA90    RC= 0000\n19.43.35 JOB    1  PDPMVS     ERRNO     LKED      IEWL      RC= 0000\n19.43.35 JOB    1  PDPMVS     ASSERT    ASM       ASMA90    RC= 0000\n19.43.35 JOB    1  PDPMVS     ASSERT    LKED      IEWL      RC= 0004\n19.43.35 JOB    1  PDPMVS     LOCALE    ASM       ASMA90    RC= 0000\n19.43.35 JOB    1  PDPMVS     LOCALE    LKED      IEWL      RC= 0004\n19.43.36 JOB    1  PDPMVS     MATH      ASM       ASMA90    RC= 0000\n19.43.36 JOB    1  PDPMVS     MATH      LKED      IEWL      RC= 0004\n19.43.36 JOB    1  PDPMVS     SETJMP    ASM       ASMA90    RC= 0000\n19.43.36 JOB    1  PDPMVS     SETJMP    LKED      IEWL      RC= 0004\n19.43.36 JOB    1  PDPMVS     SIGNAL    ASM       ASMA90    RC= 0000\n19.43.36 JOB    1  PDPMVS     SIGNAL    LKED      IEWL      RC= 0004\n19.43.37 JOB    1  PDPMVS     @@MEMMGR  ASM       ASMA90    RC= 0000\n19.43.37 JOB    1  PDPMVS     @@MEMMGR  LKED      IEWL      RC= 0004\n19.43.37 JOB    1  PDPMVS     PDPTEST   ASM       ASMA90    RC= 0000\n19.43.37 JOB    1  PDPMVS     PDPTEST   LKED      IEWL      RC= 0004\n19.43.39 JOB    1  PDPMVS     LKED                IEWL      RC= 0000\n19.43.39 JOB    1  PDPMVS     PDPTEST             PDPTEST   RC= 0000\n19.43.39 JOB    1  IEF404I PDPMVS - ENDED - TIME=19.43.39\n19.43.39 JOB    1  $HASP395 PDPMVS   ENDED\n\n\n------ JES2 JOB STATISTICS ------\n\n\n 23 MAY 11 JOB EXECUTION DATE\n\n\n    24,507 CARDS READ\n\n\n     2,089 SYSOUT PRINT RECORDS\n\n\n         0 SYSOUT PUNCH RECORDS\n\n\n      0.34 MINUTES EXECUTION TIME\n\r\f    1     //PDPMVS   JOB CLASS=C,REGION=0K\n          ***\n          //PDPASM   PROC MEMBER=''\n          //ASM      EXEC PGM=ASMA90,\n          //   PARM='DECK,NOLIST'\n          //SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n          //         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n          //         DD DSN=SYS1.MODGEN,DISP=SHR\n          //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n          //SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n          //SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n          //SYSPRINT DD SYSOUT=*\n          //SYSLIN   DD DUMMY\n          //SYSGO    DD DUMMY\n          //SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          //            DISP=(,PASS)\n          //*\n          //LKED     EXEC PGM=IEWL,PARM='NCAL',\n          //            COND=(4,LT,ASM)\n          //SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n          //SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n          //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n          //SYSPRINT DD SYSOUT=*\n          //         PEND\n    2     //CREATE   EXEC PGM=IEFBR14\n    3     //DD12     DD DSN=&&NCALIB,DISP=(,PASS),\n          // DCB=(RECFM=U,LRECL=0,BLKSIZE=3200),\n          // SPACE=(CYL,(10,10,20)),UNIT=SYSALLDA\n    4     //DD13     DD DSN=&&LOADLIB,DISP=(,PASS),\n          // DCB=(RECFM=U,LRECL=0,BLKSIZE=3200),\n          // SPACE=(CYL,(10,10,20)),UNIT=SYSALLDA\n    5     //DD14     DD DSN=&&MACLIB,DISP=(,PASS),\n          // DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),\n          // SPACE=(CYL,(10,10,20)),UNIT=SYSALLDA\n          ***\n    6     //PDPTOP   EXEC PGM=IEBGENER\n    7     //SYSUT2   DD  DSN=&&MACLIB(PDPTOP),DISP=(OLD,PASS)\n    8     //SYSUT1   DD  *\n    9     //SYSPRINT DD  SYSOUT=*\n   10     //SYSIN    DD  DUMMY\n          ***\n   11     //PDPPRLG  EXEC PGM=IEBGENER\n   12     //SYSUT2   DD  DSN=&&MACLIB(PDPPRLG),DISP=(OLD,PASS)\n   13     //SYSUT1   DD  *\n   14     //SYSPRINT DD  SYSOUT=*\n   15     //SYSIN    DD  DUMMY\n          ***\n   16     //PDPEPIL  EXEC PGM=IEBGENER\n   17     //SYSUT2   DD  DSN=&&MACLIB(PDPEPIL),DISP=(OLD,PASS)\n   18     //SYSUT1   DD  *\n   19     //SYSPRINT DD  SYSOUT=*\n   20     //SYSIN    DD  DUMMY\n          ***\n   21     //MVSMACS  EXEC PGM=IEBGENER\n   22     //SYSUT2   DD  DSN=&&MACLIB(MVSMACS),DISP=(OLD,PASS)\n   23     //SYSUT1   DD  *\n   24     //SYSPRINT DD  SYSOUT=*\n   25     //SYSIN    DD  DUMMY\n          ***\n   26     //MVSSTART EXEC PDPASM,MEMBER=MVSSTART\n   27     ++PDPASM   PROC MEMBER=''\n   28     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n   29     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n   30     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n   31     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n   32     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   33     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   34     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   35     ++SYSPRINT DD SYSOUT=*\n   36     ++SYSLIN   DD DUMMY\n   37     ++SYSGO    DD DUMMY\n   38     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n   39     //SYSIN  DD  *\n   40     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n   41     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n   42     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n   43     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n   44     ++SYSPRINT DD SYSOUT=*\n   45     //MVSSUPA  EXEC PDPASM,MEMBER=MVSSUPA\n   46     ++PDPASM   PROC MEMBER=''\n   47     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n   48     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n   49     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n   50     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n   51     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   52     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   53     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   54     ++SYSPRINT DD SYSOUT=*\n   55     ++SYSLIN   DD DUMMY\n   56     ++SYSGO    DD DUMMY\n   57     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n   58     //SYSIN  DD  *\n   59     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n   60     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n   61     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n   62     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n   63     ++SYSPRINT DD SYSOUT=*\n   64     //START    EXEC PDPASM,MEMBER=START\n   65     ++PDPASM   PROC MEMBER=''\n   66     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n   67     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n   68     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n   69     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n   70     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   71     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   72     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   73     ++SYSPRINT DD SYSOUT=*\n   74     ++SYSLIN   DD DUMMY\n   75     ++SYSGO    DD DUMMY\n   76     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n   77     //SYSIN  DD *\n   78     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n   79     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n   80     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n   81     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n   82     ++SYSPRINT DD SYSOUT=*\n   83     //STDIO    EXEC PDPASM,MEMBER=STDIO\n   84     ++PDPASM   PROC MEMBER=''\n   85     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n   86     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n   87     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n   88     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n   89     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   90     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   91     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n   92     ++SYSPRINT DD SYSOUT=*\n   93     ++SYSLIN   DD DUMMY\n   94     ++SYSGO    DD DUMMY\n   95     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n   96     //SYSIN  DD *\n   97     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n   98     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n   99     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  100     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  101     ++SYSPRINT DD SYSOUT=*\n  102     //STDLIB   EXEC PDPASM,MEMBER=STDLIB\n  103     ++PDPASM   PROC MEMBER=''\n  104     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  105     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  106     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  107     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  108     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  109     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  110     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  111     ++SYSPRINT DD SYSOUT=*\n  112     ++SYSLIN   DD DUMMY\n  113     ++SYSGO    DD DUMMY\n  114     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  115     //SYSIN  DD  *\n  116     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  117     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  118     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  119     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  120     ++SYSPRINT DD SYSOUT=*\n  121     //CTYPE    EXEC PDPASM,MEMBER=CTYPE\n  122     ++PDPASM   PROC MEMBER=''\n  123     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  124     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  125     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  126     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  127     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  128     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  129     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  130     ++SYSPRINT DD SYSOUT=*\n  131     ++SYSLIN   DD DUMMY\n  132     ++SYSGO    DD DUMMY\n  133     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  134     //SYSIN  DD  *\n  135     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  136     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  137     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  138     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  139     ++SYSPRINT DD SYSOUT=*\n  140     //STRING   EXEC PDPASM,MEMBER=STRING\n  141     ++PDPASM   PROC MEMBER=''\n  142     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  143     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  144     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  145     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  146     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  147     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  148     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  149     ++SYSPRINT DD SYSOUT=*\n  150     ++SYSLIN   DD DUMMY\n  151     ++SYSGO    DD DUMMY\n  152     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  153     //SYSIN  DD  *\n  154     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  155     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  156     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  157     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  158     ++SYSPRINT DD SYSOUT=*\n  159     //TIME     EXEC PDPASM,MEMBER=TIME\n  160     ++PDPASM   PROC MEMBER=''\n  161     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  162     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  163     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  164     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  165     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  166     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  167     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  168     ++SYSPRINT DD SYSOUT=*\n  169     ++SYSLIN   DD DUMMY\n  170     ++SYSGO    DD DUMMY\n  171     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  172     //SYSIN  DD  *\n  173     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  174     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  175     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  176     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  177     ++SYSPRINT DD SYSOUT=*\n  178     //ERRNO    EXEC PDPASM,MEMBER=ERRNO\n  179     ++PDPASM   PROC MEMBER=''\n  180     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  181     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  182     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  183     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  184     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  185     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  186     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  187     ++SYSPRINT DD SYSOUT=*\n  188     ++SYSLIN   DD DUMMY\n  189     ++SYSGO    DD DUMMY\n  190     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  191     //SYSIN  DD  *\n  192     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  193     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  194     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  195     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  196     ++SYSPRINT DD SYSOUT=*\n  197     //ASSERT   EXEC PDPASM,MEMBER=ASSERT\n  198     ++PDPASM   PROC MEMBER=''\n  199     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  200     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  201     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  202     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  203     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  204     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  205     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  206     ++SYSPRINT DD SYSOUT=*\n  207     ++SYSLIN   DD DUMMY\n  208     ++SYSGO    DD DUMMY\n  209     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  210     //SYSIN  DD  *\n  211     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  212     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  213     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  214     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  215     ++SYSPRINT DD SYSOUT=*\n  216     //LOCALE   EXEC PDPASM,MEMBER=LOCALE\n  217     ++PDPASM   PROC MEMBER=''\n  218     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  219     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  220     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  221     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  222     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  223     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  224     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  225     ++SYSPRINT DD SYSOUT=*\n  226     ++SYSLIN   DD DUMMY\n  227     ++SYSGO    DD DUMMY\n  228     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  229     //SYSIN  DD  *\n  230     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  231     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  232     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  233     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  234     ++SYSPRINT DD SYSOUT=*\n  235     //MATH     EXEC PDPASM,MEMBER=MATH\n  236     ++PDPASM   PROC MEMBER=''\n  237     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  238     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  239     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  240     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  241     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  242     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  243     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  244     ++SYSPRINT DD SYSOUT=*\n  245     ++SYSLIN   DD DUMMY\n  246     ++SYSGO    DD DUMMY\n  247     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  248     //SYSIN  DD  *\n  249     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  250     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  251     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  252     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  253     ++SYSPRINT DD SYSOUT=*\n  254     //SETJMP   EXEC PDPASM,MEMBER=SETJMP\n  255     ++PDPASM   PROC MEMBER=''\n  256     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  257     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  258     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  259     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  260     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  261     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  262     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  263     ++SYSPRINT DD SYSOUT=*\n  264     ++SYSLIN   DD DUMMY\n  265     ++SYSGO    DD DUMMY\n  266     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  267     //SYSIN  DD  *\n  268     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  269     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  270     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  271     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  272     ++SYSPRINT DD SYSOUT=*\n  273     //SIGNAL   EXEC PDPASM,MEMBER=SIGNAL\n  274     ++PDPASM   PROC MEMBER=''\n  275     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  276     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  277     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  278     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  279     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  280     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  281     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  282     ++SYSPRINT DD SYSOUT=*\n  283     ++SYSLIN   DD DUMMY\n  284     ++SYSGO    DD DUMMY\n  285     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  286     //SYSIN  DD  *\n  287     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  288     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  289     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  290     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  291     ++SYSPRINT DD SYSOUT=*\n  292     //@@MEMMGR EXEC PDPASM,MEMBER=@@MEMMGR\n  293     ++PDPASM   PROC MEMBER=''\n  294     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  295     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  296     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  297     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  298     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  299     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  300     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  301     ++SYSPRINT DD SYSOUT=*\n  302     ++SYSLIN   DD DUMMY\n  303     ++SYSGO    DD DUMMY\n  304     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  305     //SYSIN  DD  *\n  306     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  307     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  308     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  309     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  310     ++SYSPRINT DD SYSOUT=*\n  311     //PDPTEST EXEC PDPASM,MEMBER=PDPTEST\n  312     ++PDPASM   PROC MEMBER=''\n  313     ++ASM      EXEC PGM=ASMA90,\n          ++   PARM='DECK,NOLIST'\n  314     ++SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n  315     ++         DD DSN=&&MACLIB,DISP=(OLD,PASS)\n  316     ++         DD DSN=SYS1.MODGEN,DISP=SHR\n  317     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  318     ++SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  319     ++SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))\n  320     ++SYSPRINT DD SYSOUT=*\n  321     ++SYSLIN   DD DUMMY\n  322     ++SYSGO    DD DUMMY\n  323     ++SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(9000,9000)),\n          ++            DISP=(,PASS)\n          ***\n  324     //SYSIN  DD  *\n  325     ++LKED     EXEC PGM=IEWL,PARM='NCAL',\n          ++            COND=(4,LT,ASM)\n  326     ++SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)\n  327     ++SYSLMOD  DD DSN=&&NCALIB(&MEMBER),DISP=(OLD,PASS)\n  328     ++SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  329     ++SYSPRINT DD SYSOUT=*\n  330     //LKED     EXEC PGM=IEWL,PARM='MAP,LIST'\n  331     //SYSLIN   DD DDNAME=SYSIN\n  332     //SYSLIB   DD DSN=&&NCALIB,DISP=(OLD,PASS)\n  333     //SYSLMOD  DD DSN=&&LOADLIB(PDPTEST),DISP=(OLD,PASS)\n  334     //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n  335     //SYSPRINT DD SYSOUT=*\n  336     //SYSIN DD *\n          ***\n  337     //PDPTEST  EXEC PGM=PDPTEST,PARM='aBc DeF'\n  338     //STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)\n  339     //SYSPRINT DD  SYSOUT=*\n  340     //SYSTERM  DD  SYSOUT=*\n  341     //SYSABEND DD  SYSOUT=*\n  342     //SYSIN    DD  DUMMY\n          //\n\r\f STMT NO. MESSAGE\n-\n   42     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(MVSSTART),DISP=(OLD,PASS)\n   61     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(MVSSUPA),DISP=(OLD,PASS)\n   80     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(START),DISP=(OLD,PASS)\n   99     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(STDIO),DISP=(OLD,PASS)\n  118     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(STDLIB),DISP=(OLD,PASS)\n  137     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(CTYPE),DISP=(OLD,PASS)\n  156     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(STRING),DISP=(OLD,PASS)\n  175     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(TIME),DISP=(OLD,PASS)\n  194     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(ERRNO),DISP=(OLD,PASS)\n  213     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(ASSERT),DISP=(OLD,PASS)\n  232     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(LOCALE),DISP=(OLD,PASS)\n  251     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(MATH),DISP=(OLD,PASS)\n  270     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(SETJMP),DISP=(OLD,PASS)\n  289     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(SIGNAL),DISP=(OLD,PASS)\n  308     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(@@MEMMGR),DISP=(OLD,PASS)\n  327     IEF653I SUBSTITUTION JCL - DSN=&&NCALIB(PDPTEST),DISP=(OLD,PASS)\nIEF236I ALLOC. FOR PDPMVS CREATE\nIEF237I 1A0  ALLOCATED TO DD12\nIEF237I 140  ALLOCATED TO DD13\nIEF237I 152  ALLOCATED TO DD14\nIEF142I PDPMVS CREATE - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *--------0\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.LOADLIB        PASSED        *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF373I STEP /CREATE  / START 11143.1943\nIEF374I STEP /CREATE  / STOP  11143.1943 CPU    0MIN 00.00SEC SRB    0MIN 00.00S\nIEF236I ALLOC. FOR PDPMVS PDPTOP\nIEF237I 152  ALLOCATED TO SYSUT2\nIEF237I JES2 ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSIN\nIEF142I PDPMVS PDPTOP - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------5\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SI0101                         SYSIN\nIEF285I   JES2.JOB00001.SO0122                         SYSOUT\nIEF373I STEP /PDPTOP  / START 11143.1943\nIEF374I STEP /PDPTOP  / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*     2. Jobstep of job: PDPMVS      Stepname: PDPTOP      Program name: IEBGENE\n*         elapsed time  00:00:00,02                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:     44K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     52\n*     152.......5 DMY.......0 DMY.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS PDPPRLG\nIEF237I 152  ALLOCATED TO SYSUT2\nIEF237I JES2 ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSIN\nIEF142I PDPMVS PDPPRLG - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------4\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SI0102                         SYSIN\nIEF285I   JES2.JOB00001.SO0123                         SYSOUT\nIEF373I STEP /PDPPRLG / START 11143.1943\nIEF374I STEP /PDPPRLG / STOP  11143.1943 CPU    0MIN 00.01SEC SRB    0MIN 00.00S\n********************************************************************************\n*     3. Jobstep of job: PDPMVS      Stepname: PDPPRLG     Program name: IEBGENE\n*         elapsed time  00:00:00,02                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,01               Virtual Storage used:     44K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     34\n*     152.......4 DMY.......0 DMY.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS PDPEPIL\nIEF237I 152  ALLOCATED TO SYSUT2\nIEF237I JES2 ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSIN\nIEF142I PDPMVS PDPEPIL - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------4\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SI0103                         SYSIN\nIEF285I   JES2.JOB00001.SO0124                         SYSOUT\nIEF373I STEP /PDPEPIL / START 11143.1943\nIEF374I STEP /PDPEPIL / STOP  11143.1943 CPU    0MIN 00.01SEC SRB    0MIN 00.00S\n********************************************************************************\n*     4. Jobstep of job: PDPMVS      Stepname: PDPEPIL     Program name: IEBGENE\n*         elapsed time  00:00:00,02                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,01               Virtual Storage used:     44K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     18\n*     152.......4 DMY.......0 DMY.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS MVSMACS\nIEF237I 152  ALLOCATED TO SYSUT2\nIEF237I JES2 ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSIN\nIEF142I PDPMVS MVSMACS - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------9\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SI0104                         SYSIN\nIEF285I   JES2.JOB00001.SO0125                         SYSOUT\nIEF373I STEP /MVSMACS / START 11143.1943\nIEF374I STEP /MVSMACS / STOP  11143.1943 CPU    0MIN 00.01SEC SRB    0MIN 00.00S\n********************************************************************************\n*     5. Jobstep of job: PDPMVS      Stepname: MVSMACS     Program name: IEBGENE\n*         elapsed time  00:00:00,02                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,01               Virtual Storage used:     44K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:    214\n*     152.......9 DMY.......0 DMY.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM MVSSTART\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I 170  ALLOCATED TO SYSUT2\nIEF237I 140  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM MVSSTART - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------37\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *-------10\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *-------19\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000001       DELETED       *------178\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000002       DELETED       *-------37\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000003       DELETED       *-------16\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0126                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------13\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0105                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.28SEC SRB    0MIN 00.02S\n********************************************************************************\n*     6. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:02,68                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,30               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:    187\n*     148......37 152......10 248......19 1B0.....178 170......37 140......16 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED MVSSTART\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED MVSSTART - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------14\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------10\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000004       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0127                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*     7. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,04                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0......14 1A0......10 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM MVSSUPA\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I 140  ALLOCATED TO SYSUT2\nIEF237I 170  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM MVSSUPA - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *------153\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *-------21\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *-------39\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000005       DELETED       *----1,427\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000006       DELETED       *------153\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000007       DELETED       *-------64\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0128                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------151\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0106                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 01.23SEC SRB    0MIN 00.09S\n********************************************************************************\n*     8. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:05,42                      CPU-Identifier:  BSP1\n*             CPU time  00:00:01,32               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   2263\n*     148.....153 152......21 248......39 1B0....1427 140.....153 170......64 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED MVSSUPA\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED MVSSUPA - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------152\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------15\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000008       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0129                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*     9. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,07                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0.....152 1A0......15 170.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM START\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 140  ALLOCATED TO SYSUT1\nIEF237I 1B0  ALLOCATED TO SYSUT2\nIEF237I 170  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM START - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000009       DELETED       *-------52\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000010       DELETED       *-------11\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000011       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0130                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------64\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0107                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.14SEC SRB    0MIN 00.01S\n********************************************************************************\n*    10. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,22                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,15               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:    639\n*     148......15 152.......8 248.......0 140......52 1B0......11 170.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED START\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 140  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED START - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------65\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------12\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000012       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0131                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    11. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,05                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0......65 1A0......12 140.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM STDIO\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I 1A0  ALLOCATED TO SYSUT2\nIEF237I 140  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 170  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM STDIO - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000013       DELETED       *------736\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000014       DELETED       *-------91\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000015       DELETED       *-------36\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0132                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------887\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SI0108                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.84SEC SRB    0MIN 00.08S\n********************************************************************************\n*    12. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:03,98                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,92               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:  10947\n*     148......15 152.......8 248.......0 1B0.....736 1A0......91 140......36 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED STDIO\nIEF237I 170  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED STDIO - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------888\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------42\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000016       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0133                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.12SEC SRB    0MIN 00.04S\n********************************************************************************\n*    13. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,20                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,16               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     170.....888 1A0......42 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM STDLIB\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 1B0  ALLOCATED TO SYSUT2\nIEF237I 1A0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 140  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM STDLIB - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000017       DELETED       *------354\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000018       DELETED       *-------37\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000019       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SO0134                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------175\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SI0109                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.29SEC SRB    0MIN 00.03S\n********************************************************************************\n*    14. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,42                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,32               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   1909\n*     148......15 152.......8 248.......0 170.....354 1B0......37 1A0.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED STDLIB\nIEF237I 140  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED STDLIB - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------176\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------17\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000020       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0135                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.04SEC SRB    0MIN 00.01S\n********************************************************************************\n*    15. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,07                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,05               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     140.....176 1A0......17 170.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM CTYPE\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 1A0  ALLOCATED TO SYSUT2\nIEF237I 140  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1B0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM CTYPE - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000021       DELETED       *------172\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000022       DELETED       *-------15\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000023       DELETED       *-------10\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0136                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------79\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SI0110                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.20SEC SRB    0MIN 00.02S\n********************************************************************************\n*    16. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,30                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,22               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   1209\n*     148......15 152.......8 248.......0 170.....172 1A0......15 140......10 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED CTYPE\nIEF237I 1B0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 140  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED CTYPE - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------80\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000024       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0137                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*    17. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,06                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1B0......80 1A0......11 140.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM STRING\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 1A0  ALLOCATED TO SYSUT2\nIEF237I 1B0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 140  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM STRING - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000025       DELETED       *------274\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000026       DELETED       *-------13\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000027       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SO0138                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------118\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SI0111                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.22SEC SRB    0MIN 00.02S\n********************************************************************************\n*    18. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,32                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,24               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   1262\n*     148......15 152.......8 248.......0 170.....274 1A0......13 1B0.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED STRING\nIEF237I 140  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED STRING - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------119\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------14\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000028       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SO0139                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*    19. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,06                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     140.....119 1A0......14 1B0.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM TIME\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1A0  ALLOCATED TO SYSUT1\nIEF237I 140  ALLOCATED TO SYSUT2\nIEF237I 170  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1B0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM TIME - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000029       DELETED       *------280\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000030       DELETED       *-------19\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000031       DELETED       *-------12\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0140                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------191\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SI0112                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.27SEC SRB    0MIN 00.03S\n********************************************************************************\n*    20. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,39                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,30               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   2227\n*     148......15 152.......8 248.......0 1A0.....280 140......19 170......12 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED TIME\nIEF237I 1B0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED TIME - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------192\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------17\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000032       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0141                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*    21. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,08                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1B0.....192 1A0......17 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM ERRNO\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I 140  ALLOCATED TO SYSUT2\nIEF237I 170  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM ERRNO - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000033       DELETED       *-------42\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000034       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000035       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0142                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *--------6\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0113                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.10SEC SRB    0MIN 00.01S\n********************************************************************************\n*    22. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,17                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,11               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     34\n*     148......15 152.......8 248.......0 1B0......42 140.......9 170.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED ERRNO\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED ERRNO - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *--------7\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000036       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0143                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.01SEC SRB    0MIN 00.00S\n********************************************************************************\n*    23. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,04                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,01               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0.......7 1A0......11 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM ASSERT\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1A0  ALLOCATED TO SYSUT1\nIEF237I 170  ALLOCATED TO SYSUT2\nIEF237I 140  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1B0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM ASSERT - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000037       DELETED       *-------42\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000038       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000039       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0144                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------10\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SI0114                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.10SEC SRB    0MIN 00.01S\n********************************************************************************\n*    24. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,19                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,11               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     46\n*     148......15 152.......8 248.......0 1A0......42 170.......9 140.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED ASSERT\nIEF237I 1B0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED ASSERT - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------11\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000040       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0145                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    25. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,06                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1B0......11 1A0......11 170.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM LOCALE\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I 140  ALLOCATED TO SYSUT2\nIEF237I 170  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM LOCALE - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000041       DELETED       *-------52\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000042       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000043       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0146                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------15\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0115                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.10SEC SRB    0MIN 00.01S\n********************************************************************************\n*    26. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,18                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,11               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:    109\n*     148......15 152.......8 248.......0 1B0......52 140.......9 170.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED LOCALE\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 140  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED LOCALE - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------16\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000044       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0147                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    27. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,04                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0......16 1A0......11 140.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM MATH\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 140  ALLOCATED TO SYSUT1\nIEF237I 170  ALLOCATED TO SYSUT2\nIEF237I 1B0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM MATH - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000045       DELETED       *------426\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000046       DELETED       *-------17\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000047       DELETED       *-------12\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SO0148                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *------152\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0116                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.27SEC SRB    0MIN 00.03S\n********************************************************************************\n*    28. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,38                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,30               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   1702\n*     148......15 152.......8 248.......0 140.....426 170......17 1B0......12 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED MATH\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED MATH - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------153\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------16\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000048       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0149                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*    29. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,07                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0.....153 1A0......16 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM SETJMP\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 1B0  ALLOCATED TO SYSUT2\nIEF237I 140  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1A0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM SETJMP - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000049       DELETED       *-------40\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000050       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000051       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0150                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *--------6\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SI0117                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.10SEC SRB    0MIN 00.01S\n********************************************************************************\n*    30. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,18                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,11               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     37\n*     148......15 152.......8 248.......0 170......40 1B0.......9 140.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED SETJMP\nIEF237I 1A0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED SETJMP - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *--------7\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------10\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000052       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   JES2.JOB00001.SO0151                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    31. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,04                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1A0.......7 1A0......10 170.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM SIGNAL\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 1A0  ALLOCATED TO SYSUT1\nIEF237I 170  ALLOCATED TO SYSUT2\nIEF237I 1B0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 140  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM SIGNAL - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000053       DELETED       *-------78\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000054       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000055       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SO0152                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------21\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SI0118                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.12SEC SRB    0MIN 00.01S\n********************************************************************************\n*    32. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,21                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,13               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:    155\n*     148......15 152.......8 248.......0 1A0......78 170.......9 1B0.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED SIGNAL\nIEF237I 140  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 1B0  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED SIGNAL - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------22\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000056       DELETED       *--------0\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SO0153                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    33. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,04                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     140......22 1A0......11 1B0.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM @@MEMMGR\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 1B0  ALLOCATED TO SYSUT2\nIEF237I 1A0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 140  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM @@MEMMGR - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000057       DELETED       *------144\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000058       DELETED       *-------11\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000059       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SO0154                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------99\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SI0119                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.19SEC SRB    0MIN 00.02S\n********************************************************************************\n*    34. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,29                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,21               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:   1233\n*     148......15 152.......8 248.......0 170.....144 1B0......11 1A0.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED @@MEMMGR\nIEF237I 140  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED @@MEMMGR - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *------100\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------14\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000060       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0155                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.03SEC SRB    0MIN 00.01S\n********************************************************************************\n*    35. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,05                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,04               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     140.....100 1A0......14 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS ASM PDPTEST\nIEF237I 148  ALLOCATED TO SYSLIB\nIEF237I 152  ALLOCATED TO\nIEF237I 248  ALLOCATED TO\nIEF237I 170  ALLOCATED TO SYSUT1\nIEF237I 140  ALLOCATED TO SYSUT2\nIEF237I 1A0  ALLOCATED TO SYSUT3\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I DMY  ALLOCATED TO SYSLIN\nIEF237I DMY  ALLOCATED TO SYSGO\nIEF237I 1B0  ALLOCATED TO SYSPUNCH\nIEF237I JES2 ALLOCATED TO SYSIN\nIEF142I PDPMVS ASM PDPTEST - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS1.MACLIB                                  KEPT          *-------15\nIEF285I   VOL SER NOS= MVSRES.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         PASSED        *--------8\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS1.MODGEN                                  KEPT          *--------0\nIEF285I   VOL SER NOS= MVSDLB.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000061       DELETED       *-------40\nIEF285I   VOL SER NOS= WORK01.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000062       DELETED       *--------9\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000063       DELETED       *--------8\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   JES2.JOB00001.SO0156                         SYSOUT\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   JES2.JOB00001.SI0120                         SYSIN\nIEF373I STEP /ASM     / START 11143.1943\nIEF374I STEP /ASM     / STOP  11143.1943 CPU    0MIN 00.10SEC SRB    0MIN 00.01S\n********************************************************************************\n*    36. Jobstep of job: PDPMVS      Stepname: ASM         Program name: ASMA90\n*         elapsed time  00:00:00,18                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,11               Virtual Storage used:   2108K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     86\n*     148......15 152.......8 248.......0 170......40 140.......9 1A0.......8 DM\n*     DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED PDPTEST\nIEF237I 1B0  ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED PDPTEST - STEP WAS EXECUTED - COND CODE 0004\nIEF285I   SYS11143.T194318.RA000.PDPMVS.OBJSET         DELETED       *-------12\nIEF285I   VOL SER NOS= WORK03.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *-------11\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000064       DELETED       *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0157                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.02SEC SRB    0MIN 00.00S\n********************************************************************************\n*    37. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:00,05                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,02               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     1B0......12 1A0......11 152.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS LKED\nIEF237I JES2 ALLOCATED TO SYSLIN\nIEF237I 1A0  ALLOCATED TO SYSLIB\nIEF237I 140  ALLOCATED TO SYSLMOD\nIEF237I 152  ALLOCATED TO SYSUT1\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF142I PDPMVS LKED - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   JES2.JOB00001.SI0121                         SYSIN\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         PASSED        *------192\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.LOADLIB        PASSED        *-------99\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.R0000065       DELETED       *-------40\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   JES2.JOB00001.SO0158                         SYSOUT\nIEF373I STEP /LKED    / START 11143.1943\nIEF374I STEP /LKED    / STOP  11143.1943 CPU    0MIN 00.07SEC SRB    0MIN 00.02S\n********************************************************************************\n*    38. Jobstep of job: PDPMVS      Stepname: LKED        Program name: IEWL\n*         elapsed time  00:00:02,16                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,09               Virtual Storage used:    196K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:     17\n*     DMY.......0 1A0.....192 140......99 152......40 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF236I ALLOC. FOR PDPMVS PDPTEST\nIEF237I 140  ALLOCATED TO STEPLIB\nIEF237I JES2 ALLOCATED TO SYSPRINT\nIEF237I JES2 ALLOCATED TO SYSTERM\nIEF237I JES2 ALLOCATED TO SYSABEND\nIEF237I DMY  ALLOCATED TO SYSIN\nIEF142I PDPMVS PDPTEST - STEP WAS EXECUTED - COND CODE 0000\nIEF285I   SYS11143.T194318.RA000.PDPMVS.LOADLIB        PASSED        *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   JES2.JOB00001.SO0159                         SYSOUT\nIEF285I   JES2.JOB00001.SO0160                         SYSOUT\nIEF285I   JES2.JOB00001.SO0161                         SYSOUT\nIEF373I STEP /PDPTEST / START 11143.1943\nIEF374I STEP /PDPTEST / STOP  11143.1943 CPU    0MIN 00.01SEC SRB    0MIN 00.00S\n********************************************************************************\n*    39. Jobstep of job: PDPMVS      Stepname: PDPTEST     Program name: PDPTEST\n*         elapsed time  00:00:00,03                      CPU-Identifier:  BSP1\n*             CPU time  00:00:00,01               Virtual Storage used:    380K\n*     I/O Operation\n*     Number of records read via DD * or DD DATA:      0\n*     140.......0 DMY.......0 DMY.......0 DMY.......0 DMY.......0\n*\n*                                          Charge for step (w/o SYSOUT):\n********************************************************************************\nIEF237I 1A0  ALLOCATED TO SYS00001\nIEF285I   SYS11143.T194339.RA000.PDPMVS.R0000001       KEPT          *--------0\nIEF285I   VOL SER NOS= WORK02.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.NCALIB         DELETED\nIEF285I   VOL SER NOS= WORK02.\nIEF237I 140  ALLOCATED TO SYS00003\nIEF285I   SYS11143.T194339.RA000.PDPMVS.R0000003       KEPT          *--------0\nIEF285I   VOL SER NOS= WORK00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.LOADLIB        DELETED\nIEF285I   VOL SER NOS= WORK00.\nIEF237I 152  ALLOCATED TO SYS00005\nIEF285I   SYS11143.T194339.RA000.PDPMVS.R0000005       KEPT          *--------0\nIEF285I   VOL SER NOS= HASP00.\nIEF285I   SYS11143.T194318.RA000.PDPMVS.MACLIB         DELETED\nIEF285I   VOL SER NOS= HASP00.\nIEF375I  JOB /PDPMVS  / START 11143.1943\nIEF376I  JOB /PDPMVS  / STOP  11143.1943 CPU    0MIN 05.17SEC SRB    0MIN 00.54S\n\r\fDATA SET UTILITY - GENERATE\n\n\n\nPROCESSING ENDED AT EOD\r\r\fDATA SET UTILITY - GENERATE\n\n\n\nPROCESSING ENDED AT EOD\r\r\fDATA SET UTILITY - GENERATE\n\n\n\nPROCESSING ENDED AT EOD\r\r\fDATA SET UTILITY - GENERATE\n\n\n\nPROCESSING ENDED AT EOD\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  @@SETM31\nIEW0461  @@START\nIEW0461  @@SETM24\n****MVSSTART  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\n****MVSSUPA   DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  @@MEMMGR\nIEW0461  @@MMDEF\nIEW0461  @@MMINIT\nIEW0461  @@DOPERM\nIEW0461  FOPEN\nIEW0461  @@GTOUT\nIEW0461  @@EXITA\nIEW0461  @@GTERR\nIEW0461  PRINTF\nIEW0461  FCLOSE\nIEW0461  @@GTIN\nIEW0461  FPRINTF\nIEW0461  STRCHR\nIEW0461  @@USERFI\nIEW0461  MAIN\nIEW0461  FFLUSH\nIEW0461  @@MMTERM\nIEW0461  @@LASTSU\nIEW0461  @@FREEM\n****START     DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  MALLOC\nIEW0461  FREE\nIEW0461  STRCPY\nIEW0461  STRNCMP\nIEW0461  @@GET@ER\nIEW0461  STRCHR\nIEW0461  @@TOUP\nIEW0461  STRCAT\nIEW0461  STRLEN\nIEW0461  @@DYNAL\nIEW0461  STRCSPN\nIEW0461  @@TSO\nIEW0461  @@AOPEN\nIEW0461  @@ACLOSE\nIEW0461  @@ISBUF\nIEW0461  MEMCHR\nIEW0461  @@IDCAMS\nIEW0461  @@AWRITE\nIEW0461  @@AREAD\nIEW0461  MEMSET\nIEW0461  @@SVC99\n****STDIO     DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  @@MEMMGR\nIEW0461  @@MMALLO\nIEW0461  @@GETM\nIEW0461  @@MMSUPP\nIEW0461  MEMSET\nIEW0461  @@MMREAL\nIEW0461  @@MMFREE\nIEW0461  RAISE\nIEW0461  @@EXIT\nIEW0461  @@ISBUF\nIEW0461  @@TOUP\nIEW0461  STRNCPY\nIEW0461  STRLEN\nIEW0461  STRCHR\nIEW0461  @@TSO\nIEW0461  @@SYSTEM\n****STDLIB    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\n****CTYPE     DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\n****STRING    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  @@GETCLK\nIEW0461  SPRINTF\nIEW0461  @@GETTZ\n****TIME      DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\n****ERRNO     DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  @@GTERR\nIEW0461  FPRINTF\nIEW0461  ABORT\n****ASSERT    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  STRCMP\n****LOCALE    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  @@GET@ER\n****MATH      DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  @@LONGJ\n****SETJMP    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,55296)\nIEW0461  EXIT\n****SIGNAL    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  EXIT\n****@@MEMMGR  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED NCAL\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0461  @@CRT0\nIEW0461  PRINTF\n****PDPTEST   DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\n\n\n\n                                             DIAGNOSTIC MESSAGE DIRECTORY\n   IEW0461 WARNING - SYMBOL PRINTED IS AN UNRESOLVED EXTERNAL REFERENCE; NCAL WA\n           MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.\n\n F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED MAP,LIST\n          DEFAULT OPTION(S) USED -  SIZE=(165888,65536)\nIEW0000     INCLUDE SYSLIB(MVSSTART)\nIEW0000     INCLUDE SYSLIB(START)\nIEW0000     INCLUDE SYSLIB(MVSSUPA)\nIEW0000     INCLUDE SYSLIB(STDIO)\nIEW0000     INCLUDE SYSLIB(STDLIB)\nIEW0000     INCLUDE SYSLIB(CTYPE)\nIEW0000     INCLUDE SYSLIB(STRING)\nIEW0000     INCLUDE SYSLIB(TIME)\nIEW0000     INCLUDE SYSLIB(ERRNO)\nIEW0000     INCLUDE SYSLIB(ASSERT)\nIEW0000     INCLUDE SYSLIB(LOCALE)\nIEW0000     INCLUDE SYSLIB(MATH)\nIEW0000     INCLUDE SYSLIB(SETJMP)\nIEW0000     INCLUDE SYSLIB(SIGNAL)\nIEW0000     INCLUDE SYSLIB(@@MEMMGR)\nIEW0000     INCLUDE SYSLIB(PDPTEST)\nIEW0000     ENTRY @@MAIN\n\n\n\n                                                      MODULE MAP\n\n\n  CONTROL SECTION                       ENTRY\n\n    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION\n $PRIVATE       00     198\n                                        @@CRT0         8    @@EXITA      134\n $PRIVATE      198     9E0\n                                        @@TSO        198    @@UPSI       19C\n                                        @@EPLIST     B70    @@PLIST      B74\n $PRIVATE      B78    1D1D\n                                        @@AOPEN      B78    @@ALINE     1434\n                                        @@ANOTE     1C36    @@APOINT    1CB0\n                                        @@FREEM     2054    @@GETCLK    2094\n                                        @@IDCAMS    231C    @@DYNAL     2590\n                                        @@LONGJ     2874    @@SETM24    2882\n $PRIVATE     2898    AAA0\n                                        @@DOPERM    28C8    @@STDIN     28D0\n                                        @@STDPCH    28E4    @@GTIN      28E8\n                                        PRINTF      29F4    FPRINTF     2A98\n                                        FCLOSE      42D0    FPUTC       59D0\n                                        SPRINTF     5CE8    VSPRINTF    5D7C\n                                        FSEEK       5F94    FTELL       635C\n                                        REWIND      64BC    CLEARERR    6530\n                                        SETBUF      66F8    FREOPEN     67C4\n                                        TMPFILE     6B9C    FSCANF      6C0C\n                                        GETS        852C    PUTS        861C\n                                        GETCHAR     87BC    PUTCHAR     8830\n                                        FGETS       8960    FPUTS       8DC8\n                                        @@USERFI    CAE0\n $PRIVATE     D338    1C9C\n                                        @@LASTSU    D338    MALLOC      D33C\n\n    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION\n                                        FREE        D6B8    ABORT       D758\n                                        SRAND       DBB8    RAND        DC14\n                                        ATOI        E0D0    ATOL        E14C\n                                        MBLEN       E5B4    MBTOWC      E644\n                                        WCSTOMBS    E828    ABS         E8E0\n                                        LDIV        EA68    ATEXIT      EB30\n                                        BSEARCH     EE48    @@USEREX    EF54\n $PRIVATE     EFD8     C70\n                                        @@ISBUF     F5E0    @@TOLOW     F5E4\n                                        ISALPHA     F668    ISCNTRL     F6E8\n                                        ISLOWER     F868    ISPRINT     F8E8\n                                        ISUPPER     FA68    ISXDIGIT    FAE8\n $PRIVATE     FC48    124C\n                                        MEMMOVE     FC48    STRCPY      FD68\n                                        STRNCAT     FFB8    MEMCMP     100AC\n                                        STRNCMP    102F4    STRXFRM    103F8\n                                        STRCSPN    1061C    STRPBRK    106F8\n                                        STRSTR     10980    STRTOK     10A98\n                                        STRLEN     10D58    MEMCPY     10DE8\n $PRIVATE    10E98    20A2\n                                        TIME       11414    CLOCK      11498\n                                        ASCTIME    11784    CTIME      11870\n                                        STRFTIME   12280\n $PRIVATE    12F40      64\n                                        @@ERRNO    12F40    @@GET@ER   12F44\n $PRIVATE    12FA8      E0\n                                        @@ASSERT   12FE4\n $PRIVATE    13088     15C\n                                        SETLOCAL   130C0    LOCALECO   13188\n $PRIVATE    131E8    19D8\n                                        CEIL       13230    FABS       132FC\n                                        ACOS       13530    ASIN       13654\n                                        COS        13C50    SIN        13DA4\n                                        SINH       14064    TANH       140F4\n                                        LOG10      14410    POW        14488\n                                        LDEXP      1495C    MODF       14AB0\n $PRIVATE    14BC0      80\n                                        LONGJMP    14BC0\n $PRIVATE    14C40     240\n                                        SIGNAL     14C5C    RAISE      14CC8\n                                        @@SIGIGN   14E30\n $PRIVATE    14E80    1248\n                                        @@MMDEF    14E80    @@MMINIT   14ED0\n                                        @@MMALLO   15198    @@MMFREE   1550C\n                                        @@MMTOTS   15A58    @@MMDEBU   15B08\n                                        @@MEMMGR   160C0\n $PRIVATE    160C8     134\n                                        @@MAIN     160F8    MAIN       16104\n\n ENTRY ADDRESS    160F8\n\n TOTAL LENGTH     16200\n****PDPTEST   DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET\nAUTHORIZATION CODE IS         0.\n\r\r\fhello there\nargc = 3\narg 0 is <PDPTEST>\narg 1 is <aBc>\narg 2 is <DeF>\n\r\f                               PPPPPPPPPPP   DDDDDDDDD     PPPPPPPPPPP   MM\n                              PPPPPPPPPPPP  DDDDDDDDDD    PPPPPPPPPPPP  MMM\n                             PP        PP  DD       DD   PP        PP  MMMM    M\n                            PP        PP  DD        DD  PP        PP  MM MM  MM\n                           PP        PP  DD        DD  PP        PP  MM  MMMM  M\n                          PPPPPPPPPPPP  DD        DD  PPPPPPPPPPPP  MM   MM   MM\n                         PPPPPPPPPPP   DD        DD  PPPPPPPPPPP   MM        MM\n                        PP            DD        DD  PP            MM        MM\n                       PP            DD        DD  PP            MM        MM\n                      PP            DD       DD   PP            MM        MM\n                     PP            DDDDDDDDDD    PP            MM        MM\n                    PP            DDDDDDDDD     PP            MM        MM\n\n\n\n                    JJJJJJJJJJ       11\n                    JJJJJJJJJJ      111\n                        JJ         1111\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                        JJ           11\n                  JJ    JJ           11\n                  JJ    JJ           11\n                  JJJJJJJJ       1111111111\n                   JJJJJJ        1111111111\n\n\n****A   END   JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A   END   JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A   END   JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n****A   END   JOB    1  PDPMVS                          ROOM        7.43.39 PM 2\n\r\f                 TTTTTTTTTTTT  EEEEEEEEEEEE  RRRRRRRRRRR   MM        MM  HH\n                TTTTTTTTTTTT  EEEEEEEEEEEE  RRRRRRRRRRRR  MMM      MMM  HH\n                    TT       EE            RR        RR  MMMM    MMMM  HH\n                   TT       EE            RR        RR  MM MM  MM MM  HH\n                  TT       EE            RR        RR  MM  MMMM  MM  HH        H\n                 TT       EEEEEEEE      RRRRRRRRRRRR  MM   MM   MM  HHHHHHHHHHHH\n                TT       EEEEEEEE      RRRRRRRRRRR   MM        MM  HHHHHHHHHHHH\n               TT       EE            RR    RR      MM        MM  HH        HH\n              TT       EE            RR     RR     MM        MM  HH        HH  E\n             TT       EE            RR      RR    MM        MM  HH        HH  EE\n            TT       EEEEEEEEEEEE  RR       RR   MM        MM  HH        HH  EEE\n           TT       EEEEEEEEEEEE  RR        RR  MM        MM  HH        HH  EEEE\n\n\n\n                    JJJJJJJJJJ   2222222222\n                    JJJJJJJJJJ  222222222222\n                        JJ      22        22\n                        JJ                22\n                        JJ                22\n                        JJ               22\n                        JJ             22\n                        JJ           22\n                  JJ    JJ         22\n                  JJ    JJ       22\n                  JJJJJJJJ      222222222222\n                   JJJJJJ       222222222222\n\n\n****A  START  JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A  START  JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A  START  JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A  START  JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n\r\fThat's all folks\n\r\f                 TTTTTTTTTTTT  EEEEEEEEEEEE  RRRRRRRRRRR   MM        MM  HH\n                TTTTTTTTTTTT  EEEEEEEEEEEE  RRRRRRRRRRRR  MMM      MMM  HH\n                    TT       EE            RR        RR  MMMM    MMMM  HH\n                   TT       EE            RR        RR  MM MM  MM MM  HH\n                  TT       EE            RR        RR  MM  MMMM  MM  HH        H\n                 TT       EEEEEEEE      RRRRRRRRRRRR  MM   MM   MM  HHHHHHHHHHHH\n                TT       EEEEEEEE      RRRRRRRRRRR   MM        MM  HHHHHHHHHHHH\n               TT       EE            RR    RR      MM        MM  HH        HH\n              TT       EE            RR     RR     MM        MM  HH        HH  E\n             TT       EE            RR      RR    MM        MM  HH        HH  EE\n            TT       EEEEEEEEEEEE  RR       RR   MM        MM  HH        HH  EEE\n           TT       EEEEEEEEEEEE  RR        RR  MM        MM  HH        HH  EEEE\n\n\n\n                    JJJJJJJJJJ   2222222222\n                    JJJJJJJJJJ  222222222222\n                        JJ      22        22\n                        JJ                22\n                        JJ                22\n                        JJ               22\n                        JJ             22\n                        JJ           22\n                  JJ    JJ         22\n                  JJ    JJ       22\n                  JJJJJJJJ      222222222222\n                   JJJJJJ       222222222222\n\n\n****A   END   JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A   END   JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A   END   JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n****A   END   JOB    2  TERMHERC                        ROOM        7.43.39 PM 2\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDPCLIB": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "            Public Domain C runtime library\n            -------------------------------\n\nVersion : 3.10\nReleased: 2011-01-01\n\nWritten by Paul Edwards.\nReleased to the public domain.\nYou may use this entire package for any purpose whatsoever without\nrestriction.\n\nHere is a more formal wording governing the software:\n\nI, the copyright holder of this work, hereby release it into the\npublic domain. This applies worldwide.\n\nIn case this is not legally possible, I grant any entity the right\nto use this work for any purpose, without any conditions, unless\nsuch conditions are required by law.\n\n\n\nINTRODUCTION\n------------\n\nThis project is to create a public domain runtime library which\nconforms to ISO/IEC 9899:1990.  Although originally intended\nto be OS-specific (based on the principle that it is the C\nlibrary's job to do unportable but fast processing rather than\nthe application developer), but not compiler-specific, an enormous\namount of the C library turned out to be sharable, with the\nnotable exception that the I/O is mostly divided into mainframe\nand non-mainframe versions.\n\nAnyone wishing to contribute to this project, please contact\nPaul Edwards at fight.subjugation@gmail.com.\n\nThe official method for obtaining PDPCLIB is to download it from:\nhttp://pdos.sourceforge.net\n\n\n\nMAIN DESIGN GOALS\n-----------------\n\n1. Application developers should not have to resort to DosOpen, open et al\n   in order to get better performance for binary files.\n\n2. Application developers should not have to resort to using binary mode to\n   get better performance for fgets in text mode.\n\n\n\nCURRENT STATUS\n--------------\n\nAll routines have been implemented according to the\nISO C90 standard on all environments, although there\nare restrictions on some operations, such as opening\na file for update or append. However, these restrictions\ndo not prevent it from being a conforming implementation.\nI believe the DOS version doesn't do full long arithmetic\nso that environment is possibly non-conforming.\n\n\nThe following environments have been used:\n\nWin32 for:\ngcc 3.4.4\n\nDOS for:\nTurbo C++ 1.01\nOpen Watcom 1.6\n\nMVS for:\nIBM C/370 v2r1m0\nGCCMVS 3.2.3\n\nCMS for:\nGCCCMS 3.2.3\n\nOS/2 for:\nEMX 0.9b\nWatcom C++ 10.0b\nIBM CSET++ 2.0\nBorland C++ 1.5\n\nPDOS for:\nEMX 0.9d\n\n\n\nWHO WANTS IT?\n-------------\n\nIt is expected that this archive will interest the following groups of\npeople:\n\n1. People who have a commercial compiler, such as IBM CSET (OS/2),\nbut would like to have the source code to the C runtime library,\nso that they can have control over it.\n\n2. People who have a commercial compiler, such as Borland, where\nalthough they have the runtime source, Borland have some restrictions\non the use of their object code, saying that the resultant executable\nmust have either their copyright notice on it, or yours, or some such\nrubbish.\n\n3. People who have EMX 0.9d, but would like to be able to modify the\nruntime library code without being bound by any of EMX's licensing\nrestrictions on doing that.\n\n4. People who are interested in the internal workings of a runtime\nlibrary, and would like unrestricted use of any useful code they\nmay find whilst investigating that.\n\n5. Someone who wants to write their own commercial C compiler and\nlibrary, and wants something to use as a base.  This at least gives\nyou the library, there are no public domain C compilers available\nto the best of my knowledge, on any platform.\n\n6. People who have ISO text-processing programs that want a significant\nspeed improvement.\n\n7. Mainframe users who don't have any other choice to use with GCC.\n\n\n\nUSAGE\n-----\n\nThere are makefiles for all the different compilers supported.  Choose\nthe one you want, and compile it, creating a library if you want, and\nthen compiling your programs in the same way that the \"pdptest\" program\nis compiled.  Note that code that refers to __32BIT__ is for compiling\nprograms using EMX 0.9d for DOS.\n\nFor 16-bit DOS, the default is to use the free C Turbo C++ 1.01\n(in order to get the C compiler) and the free Open Watcom 1.6\n(in order to get the assembler), so that you have a totally free\n16-bit DOS development system. Just type \"compile\" to use this\ncombination.\n\nFor 32-bit Windows (pdpclib-win32), the default is to use\nthe (free) gcc compiler and the (free) jwasm as the assembler.\nUse a decent \"make\" that doesn't need tabs (e.g. Borland's make\nor Microsoft's nmake) and then go \"make -f makefile.w32\".\n\n\n\nPERFORMANCE\n-----------\n\nA long time ago I did performance testing (of version 0.07 of\nPDPCLIB) of the stated objectives, using perf*.c as the testing\ntool, and got the following results (on OS/2):\n\n                fgets on text files\n                -------------------\n\nbcc - 12.98 12.98 13.10\ngcc - 12.59 12.51 12.45\nicc - 7.84 7.72 7.76\nwcc - 23.38 23.36 23.34\npbcc - 4.87 4.84 4.85\npgcc - 4.42 4.52 4.50\npicc - 4.87 4.96 4.85\npwcc - 4.87 4.85 4.87\n\nsummary - cset has the best library, watcom the worst.  pdpclib\ncreams the lot.  gcc is the best compiler.\n\n\n                large freads on binary files\n                ----------------------------\n\nbcc - 2.10 2.01 1.98\ngcc - 2.71 2.70 2.64\nicc - 3.87 3.88 3.93\nwcc - 2.18 2.18 2.18\npbcc - 1.83 1.85 1.87\npgcc - 1.89 1.83 1.87\npicc - 1.87 1.84 1.85\npwcc - 1.85 1.83 1.86\n\nsummary - Borland has the best library, cset has the worst.\npdpclib creams the lot.  The compilers are equal.\n\n\n                small freads on binary files\n                ----------------------------\n\nbcc - 8.13 8.27 8.42\ngcc - 3.98 3.92 3.91\nicc - 4.54 4.64 4.68\nwcc - 3.89 3.95 3.93\npbcc - 3.24 3.22 3.19\npgcc - 3.41 3.43 3.41\npicc - 3.24 3.24 3.21\npwcc - 3.21 3.20 3.21\n\nsummary - Borland has the worst library, gcc has the best. pdpclib,\nas usual, beats the lot.  The compilers are basically equal,\nexcept that gcc is slightly worse, as it doesn't generate an\ninline memcpy() for the situation I am using it in.  The main\nreason for gcc having the best library is that it has a default\nbuffer size of 5120 compared to the others at 4096.  Note - in\nother tests I did, gcc was coming out ahead of wcc, by about 5%,\nso I don't know why this particular set of tests had them level.\n\n\nInformation:\nI used a 486DX33 with a RAM disk in order to perform these tests,\nin an effort to concentrate the stats on the library itself rather\nthan the physical hard disk.\nbcc = Borland C++ 1.5\ngcc = EMX 0.9a\nicc = CSET++/2 2.0\nwcc = Watcom 10.0b\np* = PDPCLIB compiled with one of the above compilers.\n\n\nSorry I don't have up-to-date stats or mainframe stats.\nI wouldn't expect pdpclib on the mainframe to be better\nthan the commercial compilers because it does record reads\nrather than block reads. Hopefully one day this will be\nrectified.\n\n\n\nHISTORY\n-------\n\nOn 1994-04-28 in the PUBLIC_DOMAIN Fidonet echo, the question\nwas asked what was required to replace MSDOS, and experimentation\nbegan. By 1994-07-03 the POS/PDOS project was \"formally\" elaborated.\nOn 1994-07-12 focus was switched to the C runtime library to\nsupport it and to identify the high priority MSDOS interfaces\nthat would be required by PDOS. First beta of PDPCLIB was made\navailable on 1994-07-30.\n\n0.01  Released 1994-08-27\n      A lot of stuff has been implemented, and a lot of stuff has\n      not.  However, there has been sufficient amount of work done\n      to make it at least interesting reading.\n\n0.02  Released 1994-12-29\n      Further down the track, but not enough to go bananas about.\n      Main work was done in fopen(), which is far more robust now.\n\n0.03  Released 1995-01-07\n      Got it working on Watcom, CSET + GNU.\n\n0.04  Released 1995-08-06\n      Miscellaneous additions\n\n0.05  Released 1995-12-26\n      There is a function for every single function except those in\n      the math library, but there are still holes in the system,\n      especially with the File I/O.  But now I have all of the\n      fundamental design in place.\n\n0.06  Released 1996-01-02\n      Much more robust file i/o.\n\n0.07  Released 1996-02-04\n      Many bug fixes and enhancements.\n\n0.50  Released 1997-05-03\n      DOS support, and various bug fixes.\n\n0.51  Released 1997-05-18 together with PDOS 0.10.\n      General tidy up.\n\n0.52  Released 1997-09-13\n      Bug fixes for problems found whilst doing PDOS work.\n\n0.60  Released 1997-11-01\n      Added MVS support, since I suddenly had an MVS machine available\n      and had always wondered how on earth C was able to be implemented\n      on that environment.  Now I know some of the answers.\n\n0.61  Released 1997-12-28\n      Implemented a stub function required for some situations under\n      MSDOS.\n\n0.70  Released 1998-01-05\n      Added PDOS support.\n\n0.71  Released 1998-01-11\n      Completed PDOS and fixed DOS bug.\n\n0.73  Released 1998-04-07\n      Revamped interface to PDOS.\n\n0.80  Released 2004-03-17\n      Many changes to work with GCC (MVS port).\n\n0.81  Released 2006-01-06\n      Now works for CMS as well, and both CMS and MVS\n      have a working setjmp/longjmp.\n\n0.82  Released 2006-01-20\n      Made __CMS__ independent of __MVS__. Also fixed\n      a bug.\n\n0.83  Released 2006-03-04\n      Whitespace change required to avoid assembly error.\n\n0.84  Released 2007-08-23\n      All math functions have been implemented, meaning\n      every function has now been implemented, although\n      some still have limitations. Also, Win32 support has been\n      added so you can use PDPCLIB in combination with gcc to\n      create console mode applications. Also, MVS has been\n      significantly enhanced so that it can read PDS\n      concatenations. Also, MVS executables are now 31-bit.\n\n0.85  Released 2007-12-16\n      Support for S/380, bug fixes, memmgr option.\n\n0.86  Released 2008-03-04\n      Bug fixes to do with floating point. On MVS, null variable\n      length records have a single blank as data, as per ISPF and\n      as IEBCOMPR expects. Macros are now provided for the different\n      compile environments (370, 380 and 390).\n\n1.00  Released 2009-01-26\n      Supports VM/380, writing to variable-blocked datasets,\n      reading and writing RECFM=U on MVS, rename and remove\n      on MVS, scanf has been updated to support all formats.\n      There is now no longer anything I know of that hasn't\n      been implemented. It would require going through the\n      ISO standard to check that, which I haven't done. Since\n      I don't know of anything that hasn't been implemented,\n      this is now version 1.00, after 15 years! If you see\n      anything that isn't implemented, let me know and I'll\n      check the standard and try to add it. Or better yet,\n      submit the code fix with the bug report. :-) Note that\n      opening files for update isn't implemented yet, but I\n      think that it's still conformant without that facility,\n      so long as an error is returned on open. It just means\n      that it's usability is downgraded. Similar to it not\n      being able to open VSAM datasets.\n\n1.50  Released 2009-06-04\n      setjmp & longjmp implemented properly for all PC environments,\n      making them compliant too. setjmp & longjmp revamped on MVS\n      and CMS to stop saving the entire stack. Several bug fixes.\n      And hack for MVS taken out now that the compiler bug has\n      been fixed.\n\n2.00  Released 2009-08-21\n      Linux version added. Some missing functionality in CMS\n      added. Some bugs fixed. Some parameters unclumped.\n\n2.01  Released 2009-09-26\n      Bug fixes and minor enhancements, mainly for MVS.\n\n3.00  Released 2010-05-23\n      Major revamp of MVS assembler to support default DCB info.\n      Also MUSIC/SP has a working target. VSE also has a working\n      target, but it's still very much alpha.\n\n3.10  Released 2011-01-01\n      VSE target completely revamped and is now good enough to\n      release a GCCVSE.\n      A \"standalone\" target is provided for S/3x0 hardware,\n      which PDOS (the operating system) now uses.\n      Some changes to the MVS target were required to support\n      running MVS applications under PDOS nicely. Specifically\n      \"unit record\" devices needed to be detected as such,\n      and operate as line-buffered, including (nominally)\n      RECFM=U devices.\n      Miscellaneous bug fixes.\n\n\nFUTURE DIRECTION\n----------------\n\nVM/CMS port that uses native CMS macros instead of OS emulation.\nGet DD overrides implemented for MVS the same way that SMP calls\n  IEBCOPY etc and perhaps detect more environments such as CICS\n  and check the general interface.\nStack checking at least for stack overwrite on termination.\nCheck buffer sizes in AOPEN are not excessive.\nCheck IBM's use of CRAB/DSA prior to getting code reentrant again.\nGet it working (again) with other MVS C compilers such as C/370.\nEnsure no anomalies remain with regards to flushing on MVS\n  when in an interactive environment.\nRead/write blocks instead of records on all mainframe platforms.\nAllow open for update and append on various environments.\nLong arithmetic to be implemented on MSDOS.\nVSE port needs to be more flexible with file opens.\nPorts to some of the more obscure mainframe environments such as TSS.\nA port to z/TPF.\nUpdate MSDOS/Windows/OS2 code to cope with a x'1a' (ctrl-z) as\n  an end-of-file marker (files like this are produced by some\n  MSDOS commands like \"type *.txt >temp.dat\".\n\n\n\nCREDITS\n-------\n\nDave Wade for doing the CMS port, the maths functions\n  and getting floating point supported and various other\n  enhancements and bug fixes along the way.\nDave Edwards (RIP) for various bug fixes/enhancements and\n  MUSIC/SP support.\nFausto Saporito for his work on the native MUSIC/SP port.\nPhil Roberts for helping to debug the MVS port.\nGerhard Postpischil for the MVS assembler revamp, and for\n  his extremely important work on MVS/380 too.\nRobert O'Hara for getting EPLIST support working in CMS\n  and for making the mods to CMS (in VM/380) to support\n  a 31-bit environment for PDPCLIB to use.\nFran Hensler, Bruce Smith, Bill Carlborg, Louis Millon,\n  Michel Beaulieu and others for assistance and code\n  for the z/VSE port.\nRay Gardner for making his date routines public domain, plus\n  the original qsort routine (since replaced with libnix).\nJim Nutt and Rob Duff for releasing strftime to the public domain.\nRowan Crowe for some mods to memcpy.\nMatthew Parker for getting the program name under MSDOS.\nAnd last but not least, my wife, for putting up with me in\n  the many many man-days/weeks/months/years (lost track) it\n  took me to write this, when I should have been doing\n  family-related things.\n\nAlso, I have used a small amount of code from libnix,\nanother public domain C runtime library available here:\nhttp://sourceforge.net/projects/libnix\nwhich was only known to me after pdpclib was mostly written.\n\nAlso in the past I used some code from pdclib, available here:\nhttp://sourceforge.net/projects/pdclib\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDPGOAL": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          GOALS OF THE PUBLIC DOMAIN PROJECT\n          ----------------------------------\n\nVersion:  1.4\nDate:     2007-08-14\nAuthor:   Paul Edwards\nInternet: fight.subjugation@gmail.com\nStatus:   This document is released to the public domain\n\n\nThe Public Domain Project's philosophy is basically to put as much\nbase material into the public domain so that commercial developers,\nor other PD developers, can build upon it, rather than having to\nreinvent the wheel.  Unless something is public domain, it essentially\nhasn't been invented yet, as far as not needing to reinvent it is\nconcerned.  It's like inventing the cure for cancer and keeping it a\nsecret.  You may as well not have bothered.\n\nThe commercial software which you end up using (which most people use,\nif only for the support) will always be sold at a price designed to\nrecoup costs.  The only way you can reduce the price of commercial\nsoftware is to reduce the costs they have.  One way to do this is to\ngive them quality public domain code on which to use as a basis for\nfurther development.  Normal market forces will guarantee that the\ncost saving goes through to the customer.  It's the basis of\ncapitalism.  Feel free to start your own business and make enormous\nprofits if you disagree.\n\nWhy not use GPL (aka the Gnu Virus License)?  Well, there are three\nbig problems with it.  The first is that if you are a commercial\ndeveloper, and have some spare time to contribute to a freeware\nproduct, after spending 10 hours wading through someone else's code,\ngetting familiar with it, and improving it or bug fixing it, all the\ntime you spent is wasted, as far as being able to reuse any routines\nyou found in a commercial product is concerned.\n\nThe second is that encourages others to join the dog-in-the-manger\nbrigade.  Someone who ordinarily would be happy to contribute something\nto the public domain, once and for all, now instead goes and spends their\neffort on a GPL product, meaning the world still doesn't get the code\nfreely available for ALL use (ie in public domain projects AND commercial\nprojects, not JUST other GPL projects).\n\nThe third is that it is actually technology-inhibitive.  E.g. let's\nsay there's a GPL wordprocessor, but it doesn't support italics.\nQuite a lot of people want italics, but no-one to date has been\nwilling to do that work for free.  Let's say a portion of the market\nwants italics.  But no one individual can afford to pay the cost of\ndevelopment by themselves.  Normally this is where a company would\njump in, do the work, and then sell the new version to the market,\nmeaning that each individual only has to pay a fraction of the\ndevelopment cost.  But the problem is that the company CAN'T just\nmake those changes and sell them, because it can't make those\nchanges proprietary, as it needs to do in order to sell them.  So\ninstead, the commercial operation needs to develop the entire\nequivalent of the GPL wordprocessor, and THEN add italics.  But it\nis too expensive for the company to do that, so the technology is\nsimply never developed!\n\nGPL code will eventually become as useful as public domain code - 50\nyears after the death of the original author, when it becomes public\ndomain!  That's a long time to have to wait.  Until then, unless your\nlawyer informs you that the 2756 license agreement conditions don't\naffect you, the GPL work is only useful as reference material.\n\nThe default for any software written is for it to be copyright by the\nauthor.  Please include an explicit \"Released to the public domain\" if\nyou wish to make your code public domain.  If you wish to contribute\nsome public domain code, please contact Paul Edwards at the address\nabove.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "README": {"ttr": 1289, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Public Domain C Library\n-----------------------\n\nFiles included:\n\npdpclib.txt  - documentation for this archive\npdpgoal.txt  - philosophy of the Public Domain Project\n*.c          - source code\n*.asm        - source code\n*.h          - header files\nmakefile.*   - various makefiles\ncompile.cmd  - command to execute makefiles for OS/2\ncompile.bat  - command to execute makefile for DOS\npdptest.*    - demo program\n*.lib        - lib files for various compilers\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TEMP": {"ttr": 1291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*********************************************************************/\n/*                                                                   */\n/*  This Program Written By Paul Edwards.                            */\n/*  Released to the public domain.                                   */\n/*                                                                   */\n/*********************************************************************/\n\n#if 0\n\nExample usage:\n\nMEMMGR memmgr; /* define an instance of the object */\nchar *ptr; /* scratch pointer */\n\n\nmemmgrDefaults(&memmgr); /* always called to set up object defaults */\nmemmgrInit(&memmgr); /* Initialize object */\nmemmgrSupply(&memmmgr, (void *)0x04100000, 32 * 1024 * 1024);\n  /* Supply the object with a buffer that starts at the 65 MB location\n     and is 32 MB in size. This can be called multiple times to give\n     memmgr multiple blocks of memory to manage */\nptr = memmgrAllocate(&memmgr, 500, 0);\n  /* allocate 500 bytes of memory. 0 is an \"optional\" ID if you want\n     to group memory blocks. ptr will be NULL if memory couldn't be\n     obtained */\nmemmgrFree(&memmgr, ptr); /* free memory associated with this\n                             pointer */\nmemmgrTerm(&memmgr); /* Terminate object */\n\n\nOther functions:\n\nmemmgrFreeID(&memmgr, 5); /* free all memory with an ID of 5 */\nprintf(\"largest block of memory available is %d\\n\",\n       memmgrMaxSize(&memmgr));\nprintf(\"total amount of available memory is %d\\n\",\n       memmgrTotSize(&memmgr));\nmemmgrIntegrity(&memmgr); /* check any memory chain corruption */\nmemmgrRealloc(&memmgr, ptr, 1000); /* resize the object to be 1000\n  bytes. Returns 0 if successful, negative if the request failed for\n  any reason. */\n\n#endif\n\n\n#ifndef MEMMGR_INCLUDED\n#define MEMMGR_INCLUDED\n\n#include <stddef.h>\n\n/* Do you want memmgr to perform lots of integrity checks? */\n/* Note that this will slow down the system, but it doesn't\n   print out anything or change the functionality of your\n   application. */\n/* #define __MEMMGR_INTEGRITY 1 */\n\n/* Do you want lots of debugging output? */\n/* Note that you still need to set the memmgrDebug variable to 1\n   before it is actually activated */\n/* #define __MEMMGR_DEBUG 1 */\n\ntypedef struct memmgrn {\n#ifdef __MEMMGR_INTEGRITY\n    int eyecheck1;\n#endif\n    struct memmgrn *next;\n    struct memmgrn *prev;\n    struct memmgrn *nextf;\n    struct memmgrn *prevf;\n    int fixed;\n    size_t size; /* size of memory available to user */\n    int allocated;\n    int id;\n#ifdef __MEMMGR_INTEGRITY\n    int eyecheck2;\n#endif\n    size_t filler; /* we add this so that *(p - size_t) is writable */\n} MEMMGRN;\n\ntypedef struct {\n    MEMMGRN *start;\n    MEMMGRN *startf;\n} MEMMGR;\n\n/* What boundary we want the memmgr control block to be a multiple of */\n#define MEMMGR_ALIGN 8\n\n#define MEMMGRN_SZ \\\n  ((sizeof(MEMMGRN) % MEMMGR_ALIGN == 0) ? \\\n   sizeof(MEMMGRN) : \\\n   ((sizeof(MEMMGRN) / MEMMGR_ALIGN + 1) * MEMMGR_ALIGN))\n\n/* Let's make sure that the minimum free data area is at least\n   as big as the node itself, so that we don't have more than\n   50% of the available memory used up by control blocks due\n   to fragmentation */\n#define MEMMGR_MINFREE MEMMGRN_SZ\n\n/* total size of the minimum free area, including room for the\n   control block */\n#define MEMMGR_MINFRTOT (MEMMGRN_SZ + MEMMGR_MINFREE)\n\n/* do you want to crash whenever an integrity problem arises? */\n#ifndef MEMMGR_CRASH\n#define MEMMGR_CRASH 1\n#endif\n\n#define memmgrDefaults __mmDef\n#define memmgrInit __mmInit\n#define memmgrTerm __mmTerm\n#define memmgrSupply __mmSupply\n#define memmgrAllocate __mmAlloc\n#define memmgrFree __mmFree\n#define memmgrFreeId __mmFId\n#define memmgrMaxSize __mmMaxSize\n#define memmgrTotSize __mmTotSize\n#define memmgrIntegrity __mmIntegrity\n#define memmgrRealloc __mmRealloc\n#define memmgrDebug __mmDebug\n#define memmgrDebug2 __mmDbg2\n\nvoid memmgrDefaults(MEMMGR *memmgr);\nvoid memmgrInit(MEMMGR *memmgr);\nvoid memmgrTerm(MEMMGR *memmgr);\nvoid memmgrSupply(MEMMGR *memmgr, void *buffer, size_t szbuf);\nvoid *memmgrAllocate(MEMMGR *memmgr, size_t bytes, int id);\nvoid memmgrFree(MEMMGR *memmgr, void *ptr);\nvoid memmgrFreeId(MEMMGR *memmgr, int id);\nsize_t memmgrMaxSize(MEMMGR *memmgr);\nsize_t memmgrTotSize(MEMMGR *memmgr);\nvoid memmgrIntegrity(MEMMGR *memmgr);\nint memmgrRealloc(MEMMGR *memmgr, void *ptr, size_t newsize);\n\nextern int memmgrDebug;\nextern int memmgrDebug2;\n\nextern MEMMGR __memmgr;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT853/CBT.V500.FILE853.PDS/PDPDOC.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT853/CBT.V500.FILE853.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}