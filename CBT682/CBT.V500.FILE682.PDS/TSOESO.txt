         TITLE 'TSOESO - DISPLAY ESOTERIC NAMES'
*=====================================================================*
*                     === SCROLLABLE ===
* 1. FIND ALL ESOTERIC/DEVICE NAMES BASED UPON DEVICE CLASSES.
* 2. SORTS AND STORES ESOTERIC NAME ENTRIES IN A TABLE.
* 3. QUERIES USER FOR ESOTERIC CHOICES VIA ISPF PANEL (MAX=70).
* 4. BUILDS A REPORT W/ REQUESTED ESOTERIC INFO.
* 5. BUILD A TABLE HOLDING ALL SILO UCB'S
* 6. RETURNS (VIA ISPF BROWSE) ALL REQUESTED INFO.
*
* NOTE : POTENTIAL 1 LINE CHANGE BELOW !
*=====================================================================*
         SPACE 3
TSOESO   CSECT
         GBLC  &STK
*---------------------------------------------------------------------*
*---> I M P O R T A N T  : NEXT STMNT - SET TO 'NO' IF NO SILOS IN SHOP
&STK     SETC  'YES' <=== 'YES' OR 'NO'
*---------------------------------------------------------------------*
         USING *,R15
         B     AROUND
         DC    AL1(23)
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
AROUND   DS    0H
         STM   R14,R12,12(R13)
         ST    R13,SAVEAREA+4
         LA    R7,SAVEAREA
         ST    R7,8(R13)
         LA    R13,SAVEAREA
         DROP  R15
         USING SAVEAREA,R13,R12,R10
         B     BEGIN
SAVEAREA DC    18F'0'
BEGIN    DS    0H
         LA    R12,4095(R13)
         LA    R12,1(R12)
         LA    R10,4095(R12)
         LA    R10,1(R10)
         OPEN  (EDT1RPT,(OUTPUT))
         L     R6,#DEVS                R6 ==> #DIFFERENT DEVICE TYPES
         LA    R2,DEVTAB               R2 ==> DEVICE TYPE TABLE
DEVLOOP  EQU   *
         PRINT NOGEN
         EDTINFO RTNNAMD,                                              X
               DEVCLASS=(R2),                                          X
               SUBPOOL=00,                                             X
               NAMELIST=AESO
         PRINT GEN
         LTR   R15,R15                 OK ?
         BNZ   EDTERR                  NO....REPORT ERR AND EXIT
         L     R7,AESO                 R7 ==> A(SYSTEM FOUND ESOTERICS)
         L     R3,4(R7)                R3 ==> #ESOTERIC ENTRIES
         LA    R4,8(R7)                R4 ==> ESOTERIC NAMES
         LTR   R3,R3                   0 ENTRIES FOR THIS DEV CLASS ?
         BE    CLASSEND                YES..SKIP THIS CLASS
ESOLOOP  EQU   *
         CLC   0(4,R4),=C'3480'        3480 GENERIC ALLOWED
         BE    GENERIC
         CLC   0(4,R4),=C'3490'        3490 GENERIC ALLOWED
         BE    GENERIC
         CLC   0(4,R4),=C'3590'        3590 GENERIC ALLOWED
         BE    GENERIC
         CLI   0(R4),C'Z'              ESOTERIC ? (DROP ALL > 'Z')
         BH    DROP                    NO...DROP IT
GENERIC  EQU   *
* VALID ESOTERIC NAME SINCE NAME NOT DROPPED
         LM    R14,R15,ACURESO         R14 ==> NEXT SLOT, R15=ESO CTR
         CL    R14,=A(ESOEND)          TABLE OVERRUN ?
         BNL   OVERRUN                 YES...PROBLEM
         MVC   0(8,R14),0(R4)          ESOTERIC NAME TO TABLE
         LA    R14,8(R14)              BUMP PTR
         LA    R15,1(R15)              BUMP CTR
         STM   R14,R15,ACURESO         STORE REGS
DROP     EQU   *
         LA    R4,8(R4)                BUMP TO NEXT NAME
         BCT   R3,ESOLOOP              AND VALIDATE IT
*
CLASSEND EQU   *
         LA    R2,1(R2)                BUMP DEVICE CLASS PTR
         BCT   R6,DEVLOOP              SERVICE NEXT DEVICE CLASS
* ALL NAMES OBTAINED
         MVC   #SORT(4),#ESO           SET #SLOTS TO SORT
         MVC   NAMEND(4),ACURESO       LAST NAME SLOT
         SPACE
* SORT ESOTERIC NAMES IN ASCENDING ORDER
STRTSORT EQU   *
         LM    R3,R5,SORTPTRS
         MVC   0(8,R5),=8C'9'
         SR    R5,R4
BUBBLOOP EQU   *
         LR    R2,R3
EXCHLOOP EQU   *
         CLC   0(8,R3),8(R2)         BUBBLE SORT
         BNH   ENDEXCH               *
         MVC   SORTNAME(8),0(R3)     *
         MVC   0(8,R3),8(R2)         *
         MVC   8(8,R2),SORTNAME      *
ENDEXCH  EQU   *
         BXLE  R2,R4,EXCHLOOP
         BXLE  R3,R4,BUBBLOOP
*
         CLOSE (EDT1RPT)
***********
* TSOEDT2 *
***********
         LM    R2,R3,=A(#ESO,ESOTABLE) R2 ==> #ESOTERICS AT ALLTEL
         L     R2,0(R2)                R3 ==> A(ESOTERIC TABLE)
         ST    R2,#ESOS                SAVE #ESOTERICS
         LA    R5,AESO01               R5 ==> A(ISPF ESOTERIC DSPLY)
ESOLOOP2 EQU   *
         MVC   0(8,R5),0(R3)           MOVE ESOTERIC TO ISPF PANEL
         LA    R3,8(R3)                BUMP INPUT
         LA    R5,8(R5)                BUMP OUTPUT
         BCT   R2,ESOLOOP2             DO 'EM ALL
         L     R2,#ESOS                R2 ==> #ESOTERICS
         SPACE 2
**-------------------------------------------------------------------**
*|  DEFINE VARIABLES FOR ISPF                                        |*
**-------------------------------------------------------------------**
QUERY    CALL  ISPQRY                  ARE WE IN ISPF ENVIRONMENT?
         LTR   15,15                   IF = 0, THEN YES
         BZ    DOISPF                  YES...PROCEED
         LA    R15,7                   NO..GIVE BAD RC
         ST    R15,RC                  SAVE IT
         B     EXIT1                   AND EXIT W/ ERRMSG
DOISPF   EQU   *
*
         PRINT NOGEN
         CALL  ISPLINK,(VDEFINE,ZCMD,AZCMD,CHAR,LEN50),VL
         CALL  ISPLINK,(VDEFINE,S01,AS01,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S02,AS02,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S03,AS03,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S04,AS04,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S05,AS05,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S06,AS06,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S07,AS07,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S08,AS08,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S09,AS09,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S10,AS10,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S11,AS11,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S12,AS12,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S13,AS13,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S14,AS14,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S15,AS15,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S16,AS16,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S17,AS17,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S18,AS18,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S19,AS19,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S20,AS20,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S21,AS21,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S22,AS22,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S23,AS23,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S24,AS24,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S25,AS25,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S26,AS26,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S27,AS27,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S28,AS28,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S29,AS29,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S30,AS30,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S31,AS31,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S32,AS32,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S33,AS33,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S34,AS34,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S35,AS35,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S36,AS36,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S37,AS37,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S38,AS38,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S39,AS39,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S40,AS40,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S41,AS41,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S42,AS42,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S43,AS43,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S44,AS44,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S45,AS45,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S46,AS46,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S47,AS47,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S48,AS48,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S49,AS49,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S50,AS50,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S51,AS51,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S52,AS52,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S53,AS53,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S54,AS54,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S55,AS55,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S56,AS56,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S57,AS57,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S58,AS58,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S59,AS59,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S60,AS60,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S61,AS61,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S62,AS62,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S63,AS63,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S64,AS64,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S65,AS65,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S66,AS66,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S67,AS67,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S68,AS68,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,S69,AS69,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,S70,AS70,CHAR,LEN1),VL
*
         CALL  ISPLINK,(VDEFINE,ES01,AESO01,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES02,AESO02,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES03,AESO03,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES04,AESO04,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES05,AESO05,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES06,AESO06,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES07,AESO07,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES08,AESO08,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES09,AESO09,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES10,AESO10,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES11,AESO11,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES12,AESO12,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES13,AESO13,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES14,AESO14,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES15,AESO15,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES16,AESO16,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES17,AESO17,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES18,AESO18,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES19,AESO19,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES20,AESO20,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES21,AESO21,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES22,AESO22,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES23,AESO23,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES24,AESO24,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES25,AESO25,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES26,AESO26,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES27,AESO27,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES28,AESO28,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES29,AESO29,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES30,AESO30,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES31,AESO31,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES32,AESO32,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES33,AESO33,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES34,AESO34,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES35,AESO35,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES36,AESO36,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES37,AESO37,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES38,AESO38,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES39,AESO39,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES40,AESO40,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES41,AESO41,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES42,AESO42,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES43,AESO43,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES44,AESO44,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES45,AESO45,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES46,AESO46,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES47,AESO47,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES48,AESO48,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES49,AESO49,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES50,AESO50,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES51,AESO51,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES52,AESO52,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES53,AESO53,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES54,AESO54,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES55,AESO55,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES56,AESO56,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES57,AESO57,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES58,AESO58,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES59,AESO59,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES60,AESO60,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES61,AESO61,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES62,AESO62,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES63,AESO63,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES64,AESO64,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES65,AESO65,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES66,AESO66,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES67,AESO67,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES68,AESO68,CHAR,LEN8),VL
         CALL  ISPLINK,(VDEFINE,ES69,AESO69,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,ES70,AESO70,CHAR,LEN8),VL
*
         CALL  ISPLINK,(VDEFINE,FMT,AFMT,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,SIL,ASIL,CHAR,LEN1),VL
         CALL  ISPLINK,(VDEFINE,MSG1,AMSG1,CHAR,LEN50),VL
         PRINT GEN
**-------------------------------------------------------------------**
* DISPLAY PANEL -----------------------------------------------------**
**-------------------------------------------------------------------**
         BAL   R11,CLEARVAR            INIT ALL PANEL VARIABLES
CALLPAN  EQU   *
         CALL  ISPLINK,(DISPLAY,EDTPAN),VL
         ST    R15,RC                 SAVE RC
         LTR   15,15                  DID WE PRESS PF3?  (PF8=END)
         BNZ   EXIT                   YES.....GO HOME
**-------------------------------------------------------------------**
*|  CHECK TO SEE IF ANY ESOTERICS HAVE BEEN SELECTED ........        |*
**-------------------------------------------------------------------**
CHK0     DS    0H
         SR    R7,R7                  R7 ==> #ESOTERICS REQUESTED CTR
         L     R5,=A(ESOTAB)          R5 ==> USER'S ESOTERIC CHOICES
         LA    R4,AS01                R4 ==> PANEL ESOTERIC INDICATORS
         LA    R6,AESO01              R6 ==> PANEL ESOTERIC NAMES
         L     R2,#ESOS               R2 ==> #ESOTERICS
CKLOOP   EQU   *
         CLI   0(R4),C'S'             SELECTED ?
         BE    SELECT
         CLI   0(R4),C'/'             SELECTED ?
         BE    SELECT
         B     NOSELECT               NO..CK NEXT
SELECT   EQU   *
         MVC   0(8,R5),0(R6)          YES...SAVE ESOTERIC NAME
         LA    R5,8(R5)               BUMP OUTPUT ESOTERIC TAB PTR
         LA    R7,1(R7)               ADD TO SELECTED CTR
NOSELECT EQU   *
         LA    R4,1(R4)               BUMP SELECTION PTR
         LA    R6,8(R6)               BUMP ESOTERIC PTR
         BCT   R2,CKLOOP              CK ALL
         ST    R7,#CHOSEN             SAVE NO. USER REQUESTS
*
         LTR   R7,R7                  ANY CHOSEN ?
         BNZ   CHOSEN                 YES..PROCEED
*
         CLI   ASIL,C'Y'              SILO UCB'S REQUESTED ?
         BE    CHOSEN                 YES..THAT'LL DO
*
         L     R1,=A(MSG#2)
         MVC   AMSG1(L'MSG#2),0(R1)   NO..ISSUE MSG
         B     CALLPAN                AND RETRY
CHOSEN   EQU   *
* OPEN USER REPORT DCB
         TM    EDT3RPT+48,X'10'        SYSPRINT OPEN ?
         BO    OPENED                  YES..DON'T OPEN AGAIN
         OPEN  (EDT3RPT,(OUTPUT))
         L     R5,16(R0)               R5 ==> A(CVT)
         USING CVT,R5
         MVC   MYSYSID(4),CVTSNAME     SAVE SYSID
         DROP  R5
         MVC   WORKA(L'SYSLINE+4),SYSLINE
         BAL   R11,WRITEIT
         BAL   R11,WRITEIT             SKIP LINE
OPENED   EQU   *
         SPACE
***
* POPULATE SILO UCB TABLE
***
         SPACE
         XC    HSCSW(1),HSCSW         RESET HSC ERR SW
         L     R15,ASLSXCAL           SILO SOFTWARE EP
         LTR   R15,R15                ALREADY THERE ?
         BNZ   LOADED                 YES..DON'T RELOAD
         BLDL  0,SLSXCAL              DOES HSC EXIST ON THIS LPAR ?
         LTR   R15,R15
         BZ    LOADIT                 YES..GO LOAD
         OI    HSCSW,HSCNF            NO..MARK NOT HERE
         B     HSCNOTAV
LOADIT   EQU   *
         LOAD  EP=SLSXCAL             NO..GET THE EP
         ST    R0,ASLSXCAL            AND SAVE IT
LOADED   EQU   *
         AIF   ('&STK' EQ 'NO').SKPHSC1
***********************************************************************
* HSC CODE START 1 - THIS CODE INCLUDED IF STK SILOS ARE USED *********
***********************************************************************
         PRINT NOGEN
         SLSXREQ QDRIVES,                                              X
               OPTION=SYNCH,                                           X
               XCALADR=ASLSXCAL,                                       X
               MF=(E,MFL)
         PRINT GEN
         LTR   R15,R15                HSC CALL WENT OK ?
         BZ    HSCOK                  YES
         OI    HSCSW,HSCNA            NO..MARK IT
         B     HSCNOTAV               NO...HSC PROBABLY NOT ACTIVE
HSCOK    EQU   *
         LR    R9,R1                  R9 ==> A(HSC DATA AREAS)
         USING SLX,R9
         CLI   SLXCMDRC,SLXRWARN      SILO REQUEST OK ?
         BNH   CALLOK                 RC=0,4 IS OK
* SILO CALL ERROR
         UNPK  WORK3(3),SLXCMDRC(2)   MOVE ERROR
         MVZ   WORK3(2),=XL2'00'      CODE TO
         TR    WORK3(2),TRTAB         ISPF MESSAGE
         L     R1,=A(MSG#4)
         MVC   25(2,R1),WORK3         *
         MVC   AMSG1(L'MSG#4),0(R1)   ERRMSG TO PANEL
         OI    HSCSW,HSCBC            HSC BAD CALL
         B     CALLPAN                RESEND PANEL TO USER
CALLOK   EQU   *
         L     R7,SLXXDRVL            R7  ==> UNIT SLOT L'
         L     R2,SLXXDRVO            R2  ==> OFFSET TO DRIVE SECTION
         LA    R2,SLX(R2)             R2  ==> A(DRIVE SECTION)
         USING SLXSDRV,R2
         L     R4,=A(SILOTAB)         R4  ==> INTERNAL TABLE FOR UCBS
         L     R3,SLXXDRVN            R3 ==> # UCBS
         SPACE 3
SLULOOP  EQU   *
         UNPK  WORK5(5),SLXQDECU(3)   MAKE SILO UCB
         MVZ   WORK5(4),=XL4'00'      READ-ABLE
         TR    WORK5(4),TRTAB         *
         MVC   0(4,R4),WORK5          UCB TO TABLE
         L     R1,#SILO
         LA    R1,1(R1)               BUMP SILO DEVICE CTR
         ST    R1,#SILO
         LA    R4,4(R4)               AND BUMP SILO UCB PTR
         ST    R4,ASILOEND            SAVE IT
         ST    R4,ASILOEN2            *
         CL    R4,=A(SILOTEND)        SILO UCB TAB EXCEEDED ?
         BL    SLUOK                  NO
         L     R1,=A(MSG#5)
         MVC   AMSG1(L'MSG#5),0(R1)   YES..ERRMSG
         B     CALLPAN                PANEL TO USER
SLUOK    EQU   *
         LA    R2,0(R7,R2)            BUMP SILO VOLUME SLOT PTR
         BCT   R3,SLULOOP             CK NEXT USER VOL
         DROP  R2,R9
* SORT SILO UCB'S
         LM    R3,R5,SILOSORT         LOAD SORT REGS
         MVC   0(4,R5),=4C'9'
         SR    R5,R4
SILOLOOP EQU   *
         LR    R2,R3
SILOEXCH EQU   *
         CLC   0(4,R3),4(R2)         BUBBLE SORT
         BNH   SILOEND               *
         MVC   SILONAME(4),0(R3)     *
         MVC   0(4,R3),4(R2)         *
         MVC   4(4,R2),SILONAME      *
SILOEND  EQU   *
         BXLE  R2,R4,SILOEXCH
         BXLE  R3,R4,SILOLOOP
* SILOS SORTED
***********************************************************************
* HSC CODE END 1                                              *********
***********************************************************************
.SKPHSC1 ANOP
HSCNOTAV EQU   *
         L     R7,#CHOSEN             RELOAD # ESOTERICS CHOSEN
         LTR   R7,R7                  ANY ESOTERICS CHOSEN ?
         BZ    TRYSILO                NO..SILO STUFF, ALONE
         L     R5,=A(ESOTAB)          R5 ==> A(ESOTERICS TO DSPLY)
CALLOOP  EQU   *
         STM   R5,R7,SAVE57           SAVE 5,7
         MVC   PARM1(8),0(R5)         ESOTERIC TO PARM
         LA    R1,PARMS               PARMS TO PASS (#ESOTERICS, LOC.)
***********
* TSOEDT3 *
***********
         LM    R2,R4,0(R1)             LOAD PARM ADDRS
         PACK  DOUB(8),0(1,R3)         ZONED DECIMAL FROM REXX
         CVB   R15,DOUB                TO HEX
         BCTR  R15,0                   -1
         EX    R15,MVCESO              MOVE ESOTERIC - EXACT L'
*
         LA    R9,UCBAREA              R9=A(UCB BLK)
         USING UCBOB,R9
         L     R5,CORE                 R5 ==> GETMAIN SIZE
         CLC   AUCBS(4),=F'0'          PREV. GETMAINED ?
         BNE   SKIPMAIN                YES..DON'T DO IT AGAIN
         GETMAIN EC,LV=(R5),A=AUCBS    GET STORAGE
         LTR   R15,R15                 CORE AQUIRED ?
         BNZ   MAINERR                 NOPE...
SKIPMAIN EQU   *
         XC    UCBWORK(L'UCBWORK),UCBWORK CLEAR UCB WORK AREA
         L     R15,CORE                R15 ==> GETMAIN SIZE
         L     R1,AUCBS                R1 ==> A(GETMAIN AREA)
         ST    R15,0(R1)               1ST 4 BYTES IS THE SIZE
         PRINT NOGEN
         EDTINFO RTNDEVN,                                              X
               UNITNAME=ESOTERIC,                                      X
               DYNAMIC=YES,                                            X
               RANGE=ALL,                                              X
               LOC=ANY,                                                X
               DEVNLIST=AUCBS
         PRINT GEN
         LTR   R15,R15                 OK ?
         BNZ   EDTERR2                 NO....
         L     R1,AUCBS                R1=A(GETMAIN/EDTINFO)
         L     R5,4(R1)                R5=#ENTRIES
         LA    R6,8(R1)                R6=A(ENTRIES)
         LA    R7,5                    R7=#ENTRIES PER PT LINE
         LA    R8,WORKA+2              R8=A(PT LINE)
         CVD   R5,DOUB
         MVC   TITLE+29(L'MASK),MASK
         ED    TITLE+29(L'MASK),DOUB+5
         BAL   R11,TOF                 HEADERS
         CLI   AFMT,C'L'               LONG FORMAT ?
         BE    INNERL                  YES...GO DO IT
***
* SHORT DISPLAY FORMAT
***
         SPACE
         LA    R7,10                   R7=#ENTRIES PER PT LINE
INNERS   EQU   *
         MVC   0(4,R8),0(R6)           UCB TO PT LINE
         BAL   R11,CKSILO              SEE IF ITS A SILO DEVICE
         LA    R6,4(R6)                BUMP UCB PTR
         LA    R8,7(R8)                BUMP PT LINE PTR
         BCT   R5,OUTERS               WHEN > 0 BRANCH
         B     FINAL                   WHEN = 0 ... EXIT
OUTERS   EQU   *
         BCT   R7,INNERS               FILL PT LINE
         BAL   R11,WRITEIT             WRITE PT LINE
         CP    LINECNT,=P'60'          60 LINES PRINTED ?
         BL    SAMEPGS                 NO
         BAL   R11,TOF                 YES..DO TOF
SAMEPGS  EQU   *
         LA    R7,10                   RELOAD PT CTR
         LA    R8,WORKA+2              R7=A(PT LINE)
         B     INNERS                  START PT FOR NXT LINE
***
* LONG DISPLAY FORMAT
***
         SPACE
INNERL   EQU   *
         BAL   R11,FINDUCB             FIND THE VOLSER (IF DASD)
         MVC   0(4,R8),UCBNAME4        UCB TO PT LINE
         BAL   R11,CKSILO              SEE IF ITS A SILO DEVICE
         LA    R6,4(R6)                BUMP UCB PTR
         CLI   VOLSER,C'$'             UCB FOUND ?
         BE    SKIPDESC                NO...SKIP IT
         MVC   6(8,R8),VOLID           VOLSER TO PT LINE
         CLI   UCBTBYT4,X'80'          3480 ?
         BE    SET3480
         CLI   UCBTBYT4,X'81'          3490 ?
         BE    SET3490
         CLI   UCBTBYT4,X'83'          3590 ?
         BE    SET3590
         B     SKIPDESC                NOT SQUARE TAPE
SET3480  EQU   *
         MVI   5(R8),C'8'              '8'=3480
         B     TAPEL
SET3490  EQU   *
         MVI   5(R8),C'9'              '9'=3490
         B     TAPEL
SET3590  EQU   *
         MVI   5(R8),C'5'              '5'=3590
         B     TAPEL
TAPEL    EQU   *
         MVI   4(R8),C'-'              DEVTYPE DELIM
         B     SKIPDESC                BR AROUND BAD UCB CODE
SKIPDESC EQU   *
         LA    R8,16(R8)               BUMP PT LINE PTR
         BCT   R5,OUTERL               WHEN > 0 BRANCH
         B     FINAL                   WHEN = 0 ... EXIT
OUTERL   EQU   *
         BCT   R7,INNERL               FILL PT LINE
         BAL   R11,WRITEIT             WRITE PT LINE
         CP    LINECNT,=P'60'          60 LINES PRINTED ?
         BL    SAMEPGL                 NO
         BAL   R11,TOF                 YES..DO TOF
SAMEPGL  EQU   *
         LA    R7,5                    RELOAD PT CTR
         LA    R8,WORKA+2              R7=A(PT LINE)
         B     INNERL                  START PT FOR NXT LINE
***
* COMMON CODE FOR LONG AND SHORT
***
FINAL    EQU   *                       NO MO UCB'S
         BAL   R11,WRITEIT             WRITE PT LINE
         SPACE 5
         LM    R5,R7,SAVE57           RESTORE 5,7
         LA    R5,8(R5)               BUMP TO NEXT ESOTERIC
         BCT   R7,CALLOOP             KEEP GOING
         SPACE
TRYSILO  EQU   *                      S I L O  DSPLY RTN
         CLI   ASIL,C'Y'              SILO CHOSEN ?
         BE    DOSILO                 YES
         L     R7,#CHOSEN
         LTR   R7,R7                  DID USER PICK ESOTERIC ?
         BNZ   WRAPUP                 YES...OK
         L     R1,=A(MSG#6)
         MVC   AMSG1(L'MSG#6),0(R1)   NO..ILLOGICAL CONDITION
         B     CALLPAN                NOTIFY USER
DOSILO   EQU   *
         TM    HSCSW,HSCNF+HSCNA      ANY HSC PROBLEMS ?
         BZ    SILOPRT                NO
         MVI   WORKA,C' '
         BAL   R11,WRITEIT
         L     R1,=A(MSG#7)
         MVC   WORKA(L'MSG#7),0(R1)   YES..NOTIFY USER NO SILO
         B     SILOFINL               AND GET OUT
SILOPRT  EQU   *
         MVC   ESOTERIC(8),=C' S I L O' TITLE TO HDR
         L     R5,#SILO               R5 ==> #SILO DEVICES
         CVD   R5,DOUB
         MVC   TITLE+29(L'MASK),MASK
         ED    TITLE+29(L'MASK),DOUB+5  #SILO DEVS TO TITLE
         BAL   R11,TOF                TOP OF FORM
         L     R4,=A(SILOTAB)         R4 ==> A(SILO UCB'S)
SILORPT  EQU   *
         LA    R8,WORKA+2             R8 ==> A(PRT LINE)
         LA    R7,10                  10 ENTRIES PER LINE MAX
SILOINNR EQU   *
         LR    R1,R8                  PRINT LINE UCB ADDR
         BCTR  R1,0                   -1
         MVI   0(R1),C'*'             DENOTE SILO DEVICE
         MVC   0(4,R8),0(R4)          SILO UCB TO PRT LINE
         LA    R4,4(R4)               BUMP UCB PTR
         LA    R8,7(R8)               BUMP PRT PTR
         BCT   R5,SILOOUTR            PRINT ALL UCB'S
         B     SILOFINL               THEN GET OUT
SILOOUTR EQU   *
         BCT   R7,SILOINNR            GET NEXT UCB
         BAL   R11,WRITEIT            PRINT WHEN LINE FILLS UP
         CP    LINECNT,=P'60'         PAGE FULL ?
         BL    SAMEPGSI               NO
         BAL   R11,TOF                YES...TOP OF FORM
SAMEPGSI EQU   *
         B     SILORPT                START ON NEXT LINE
*
SILOFINL EQU   *
         BAL   R11,WRITEIT
*
WRAPUP   EQU   *
         BAL   R11,WRITEIT            BLANKS LINE
         L     R1,=A(SILMSG)
         MVC   WORKA(L'SILMSG),0(R1)  PARTING LINE FOR ALL DISPLAYS
         BAL   R11,WRITEIT
         CLOSE (EDT3RPT)
         ST    R15,RC                 SAVE RC
         B     EXIT                   ALL DONE
*
**-------------------------------------------------------------------**
*|  EXIT STUFF                                                       |*
**-------------------------------------------------------------------**
EXIT1    WTO   'ISPF SERVICE UNAVAILABLE',ROUTCDE=(2,11)
         B     EXIT
         SPACE 3
**-------------------------------------------------------------------**
*|    S U B R O U T I N E S                                          |*
**-------------------------------------------------------------------**
* CLEAR ISPF VARIABLES FOR NEXT GO-ROUND
         DC    CL8'CLEARVAR',F'0'
CLEARVAR ST    R11,*-4
         XC    #ESO,#ESO
         MVC   AS01(L'BLANKS),BLANKS
         L     R11,CLEARVAR-4
         BALR  R11,R11
         SPACE 3
***
* FINDUCB - LOCATE UCB BLOCK
***
         SPACE
         DC    CL8'FINDUCB',F'0'
FINDUCB  ST    R11,*-4
UCBLOOP  EQU   *
         PRINT NOGEN
         UCBSCAN COPY,                                                 X
               WORKAREA=UCBWORK,                                       X
               UCBAREA=UCBAREA,                                        X
               DEVN=0,                                                 X
               DYNAMIC=YES,                                            X
               RANGE=ALL
         PRINT GEN
         LTR   R15,R15                 UCB FOUND ?
         BNZ   UCBNF                   NO
* BEGIN - 4 CHAR UCB
         UNPK  UCBNAME4(5),UCBCHAN(3)  CUUU FROM UCB
         MVZ   UCBNAME4(4),=4X'00'     CLEAR ZONES FOR TR
         TR    UCBNAME4(4),TABLE       MAKE PRINTABLE
* END - 4 CHAR UCB
         CLC   UCBNAME4(4),0(R6)       UCB HIT ?  0(R6) - 4 CHAR UCB
         BNE   UCBLOOP                 NO
         SPACE
         MVC   VOLSER(6),UCBVOLI       SAVE VOLSER
         TM    UCBSTAT,UCBONLI         ONLINE ?
         BO    CKVOLSER                YES
         MVC   VOLSER(6),=C' OFFL '    NO, MARK OFFLINE
         B     UCBXIT                  GET OUT
CKVOLSER EQU   *
         CLI   UCBVOLI,C'A'            VALID VOLSER ?
         BNL   UCBXIT                  YES...
         MVC   VOLSER(6),=C' IDLE '    MARK NO VOL ON DEV
         B     UCBXIT                  GET OUT
UCBNF    EQU   *
         MVI   VOLSER,C'$'             MARK UCB NOT FOUND
UCBXIT   EQU   *
         L     R11,FINDUCB-4
         BALR  R11,R11
         SPACE 3
***
* CKSILO - SEE IF UCB IS A SILO DEVICE
***
         SPACE
         DC    CL8'CKSILO',F'0'
CKSILO   ST    R11,*-4
         TM    HSCSW,HSCNF+HSCNA        HSC NOT PRESENT ?
         BNZR  R11                      THAT IS RIGHT ... GET OUT
         STM   R4,R7,SAVE47             SAVE REGS
         LR    R1,R8                    R1 ==> A(PT LINE UCB POS)
         LM    R4,R7,SILOREGS           LOAD SEARCH REGS
CKSILOOP EQU   *
         CLC   0(4,R1),0(R4)            UCB HIT ?
         BE    SILOHIT                  YES...
         BXLE  R4,R6,CKSILOOP           NO..CK NEXT ONE
         B     CKSIEXIT                 NOT A SILO UCB
SILOHIT  EQU   *
         BCTR  R1,0                     BACKUP 1 PRINT POS
         MVI   0(R1),C'*'               MARK AS SILO UCB
CKSIEXIT EQU   *
         LM    R4,R7,SAVE47             RELOAD
         L     R11,CKSILO-4
         BALR  R11,R11
         SPACE 3
***
* TOF - TOP OF FORMS
***
         SPACE
         DC    CL8'TOF',F'0'
TOF      ST    R11,*-4
         BAL   R11,WRITEIT
         MVC   WORKA(L'DASHES),DASHES
         BAL   R11,WRITEIT
         MVC   WORKA(L'TITLE),TITLE
         MVC   WORKA+4(8),ESOTERIC
         BAL   R11,WRITEIT
         MVC   WORKA(L'DASHES),DASHES
         BAL   R11,WRITEIT
         BAL   R11,WRITEIT
         ZAP   LINECNT,=P'5'
         L     R11,TOF-4
         BALR  R11,R11
         SPACE 3
***
* WRITEIT - WRITE ESOTERIC INFO
***
         SPACE
         DC    CL8'WRITEIT',F'0'
WRITEIT  ST    R11,*-4
         PUT   EDT3RPT,WORKA
         MVC   WORKA+1(79),WORKA         CLEAR PT LINE
         AP    LINECNT,=P'1'
         L     R11,WRITEIT-4
         BALR  R11,R11
         SPACE 3
***
* MAINERR - GETMAIN ERROR
***
         SPACE
MAINERR  EQU   *
         ST    R15,RC
         CVD   R15,DOUB                  RC
         UNPK  ERR1+17(4),DOUB+5(3)
         OI    ERR1+20,X'F0'
         MVC   WORKA(L'ERR1),ERR1
         PUT   EDT3RPT,WORKA
         MVC   RC(4),=F'12'
         B     WRAPUP
         SPACE 3
***
* EDTERR - EDTINFO NON-ZERO RETURN
***
         SPACE
EDTERR2  EQU   *
* RETURN CODE
         SR    R15,R15
         IC    R15,UCBSTAT
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         MVZ   WORK5+4(1),=X'00'
         TR    WORK5+4(1),TABLE
         MVC   ERR2+17(4),WORK5+1      RC TO CALLER
* REASON CODE
         CVD   R0,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         MVZ   WORK5+4(1),=X'00'
         TR    WORK5+4(1),TABLE
         MVC   ERR2+25(4),WORK5+1      RS TO CALLER
         MVC   WORKA(L'ERR2),ERR2
         PUT   EDT3RPT,WORKA
*
         LM    R4,R7,ERREGS
ERRLOOP2 EQU   *
         PUT   EDT3RPT,(R4)           WRITE ERRTAB INFO
         BXLE  R4,R6,ERRLOOP2         ..ENTIRE TABLE..
         MVC   RC(4),=F'16'
         B     WRAPUP
*
MVCESO   MVC   ESOTERIC(0),0(R2)       SETUP ESOTERIC
*
*
EXIT     EQU   *
         L     R15,RC                  RC BACK TO REXX
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=(15)
         EJECT
***
* OVERRUN - ESOTERIC NAME TABLE TOO SMALL
***
         SPACE
OVERRUN  EQU   *
         PUT   EDT1RPT,ERR3           WRITE ERROR MSG
         CLOSE (EDT1RPT)
         LA    R15,24                 TELL REXX TO REPORT THIS
         ST    R15,RC                 SAVE RC
         B     EXIT                   TERMINATE
         SPACE 3
***
* EDTERR - EDTINFO NON-ZERO RETURN
***
         SPACE
EDTERR   EQU   *
* RETURN CODE
         ST    R15,RC                  SAVE RC
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         MVZ   WORK5+4(1),=X'00'
         TR    WORK5+4(1),TABLE
         MVC   ERR2+17(4),WORK5+1      RC TO CALLER
* REASON CODE
         CVD   R0,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         MVZ   WORK5+4(1),=X'00'
         TR    WORK5+4(1),TABLE
         MVC   ERR2+25(4),WORK5+1      RS TO CALLER
         MVC   WORKA(L'ERR2),ERR2
         PUT   EDT1RPT,WORKA
*
         LM    R4,R7,ERREGS
ERRLOOP  EQU   *
         PUT   EDT1RPT,(R4)           WRITE ERRTAB INFO
         BXLE  R4,R6,ERRLOOP          ..ENTIRE TABLE..
         CLOSE (EDT1RPT)
         LA    R15,24                 TELL REXX TO REPORT THIS
         ST    R15,RC                 SAVE RC
         B     EXIT
*
         SPACE 3
         AIF   ('&STK' EQ 'NO').SKPHSC2
***********************************************************************
* HSC CODE START 2 - THIS CODE INCLUDED IF STK SILOS ARE USED *********
***********************************************************************
MFL      SLSXREQ MF=L
***********************************************************************
* HSC CODE END 2                                              *********
***********************************************************************
.SKPHSC2 ANOP
         SPACE 3
         LTORG
         EJECT
*=====================================================================*
*                         D A T A   A R E A S                         *
*=====================================================================*
         SPACE
DOUB     DS   D
RC       DC   F'0'
AESO     DS   A(0)
AEDT2    DS   A(0)
ERREGS   DC   A(ERRTAB,0,80,ERRTABE)
*
TABLE    DC   C'0123456789ABCDEF'
MASK     DC   X'402020202120'
ERR1     DC   C' GETMAIN ERR,R15=XXXX'
ERR2     DC   C' EDTINFO ERR,R15=XXXX,R0=XXXX'
ERR3     DC   C' ESOTERIC NAME TABLE OVERRUN - ENLARGE IT'
*
SORTPTRS  DS    0D
BEGNAMES  DC    A(ESOTABLE)
NAMELEN   DC    F'8'
NAMEND    DC    A(0)
#SORT     DC    F'0'
SORTNAME  DC    CL8' '
          SPACE
*
SILOSORT  DS    0D
ASILOBEG  DC    A(SILOTAB)
SILOLEN   DC    F'4'
ASILOEND  DC    A(0)
#SILO     DC    F'0'
SILONAME  DC    CL4' '
          SPACE
SILOREGS DS   0A
         DC   A(SILOTAB)
         DC   A(0)
         DC   F'4'
ASILOEN2 DC   A(0)
*
ASLSXCAL DC   A(0)
ACURESO  DC   A(ESOTABLE)
#ESO     DC   A(0)     #ESOTERICS TO DISPLAY
*
WORK3    DS   CL3
WORK5    DS   CL5
WORKA    DC   CL80' '
*
*
DEVTAB   DC   X'20800840411004'
#DEVS    DC   A((*-DEVTAB)-1)
*
**********************************
*   D E V I C E   C L A S S E S  *
* 80=TAPE                        *
* 40=COMMUNICATIONS              *
* 41=CTC                         *
* 20=DASD                        *
* 10=GRAPHICS                    *
* 08=UNIT RECORD                 *
* 04=CHARACTER READERS           *
**********************************
*
TRTAB    DC    C'0123456789ABCDEF'
**-------------------------------------------------------------------**
*|        ISPF VARIABLES                                             |*
**-------------------------------------------------------------------**
**********************-ISPF VARIABLES-*********************************
         DS    0F
EDTPAN   DC    CL8'ESOPAN2'  *** TEST ***
DISPLAY  DC    CL8'DISPLAY'
VDEFINE  DC    CL8'VDEFINE'
CHAR     DC    CL8'CHAR'
LEN1     DC    F'1'
LEN8     DC    F'8'
LEN50    DC    F'50'
CLOSE    DC    C'CLOSE'
#CHOSEN  DC    F'0'
PARMS    DC    A(PARM1,PARM2,PARM3)
PARM1    DC    CL8' '
PARM2    DC    C'8'
PARM3    DC    C'S'
AEDT3    DC    A(0)
*
         SPACE 3
BLANKS   DC    CL70' '
         SPACE
SAVE47   DS    4F
SAVE57   DS    3F
SAVE15   DS    F
AUCBS    DS    A
CORE     DC    F'60000'     GETMAIN SIZE (MAX=15000 UCB'S : 4 X 15000)
LINECNT  DC    PL2'0'
ESOTERIC DC    CL8' '
VOLID    DS    0CL8
         DC    C'('
VOLSER   DC    CL6' '
         DC    C')'
UCBNAME4 DS    CL5
SYSLINE  DC    C'  S Y S T E M  =  '
MYSYSID  DC    CL4' '
DASHES   DC    C'  ************'
TITLE    DC    C'  *          *  NO. DEVICES :XXXXXX'
UCBAREA  DS    CL48
UCBWORK  DC    XL100'00'
#ESOS    DC    A(0)     #ESOTERICS TOTAL
NO       EQU   C'0'
YES      EQU   C'1'
HSCSW    DC    X'00'                 HSC STATUS SW
HSCNF    EQU   X'80'                 HSC LMOD NOT FOUND IN BLDL
HSCNA    EQU   X'40'                 HSC ENV CANNOT BE ACTIVATED
HSCBC    EQU   X'20'                 HSC CALL RC IS NON-ZERO
*
SLSXCAL  DS    0CL16
         DC    XL2'1'
         DC    XL2'C'
         DC    CL8'SLSXCAL'
         DC    XL4'0'
         PRINT NOGEN
         DS    0D
EDT1RPT  DCB   DDNAME=EDT1RPT,DSORG=PS,MACRF=PM
         DS    0D
EDT3RPT  DCB   DDNAME=EDT3RPT,DSORG=PS,MACRF=PM
*
*
AFMT     DS    CL1
ASIL     DS    CL1
AMSG1    DS    CL50
*
ZCMD     DC    CL6'(ZCMD)'
S01      DC    CL5'(S01)'
ES01     DC    CL7'(ESO01)'
S02      DC    CL5'(S02)'
ES02     DC    CL7'(ESO02)'
S03      DC    CL5'(S03)'
ES03     DC    CL7'(ESO03)'
S04      DC    CL5'(S04)'
ES04     DC    CL7'(ESO04)'
S05      DC    CL5'(S05)'
ES05     DC    CL7'(ESO05)'
S06      DC    CL5'(S06)'
ES06     DC    CL7'(ESO06)'
S07      DC    CL5'(S07)'
ES07     DC    CL7'(ESO07)'
S08      DC    CL5'(S08)'
ES08     DC    CL7'(ESO08)'
S09      DC    CL5'(S09)'
ES09     DC    CL7'(ESO09)'
S10      DC    CL5'(S10)'
ES10     DC    CL7'(ESO10)'
*
S11      DC    CL5'(S11)'
ES11     DC    CL7'(ESO11)'
S12      DC    CL5'(S12)'
ES12     DC    CL7'(ESO12)'
S13      DC    CL5'(S13)'
ES13     DC    CL7'(ESO13)'
S14      DC    CL5'(S14)'
ES14     DC    CL7'(ESO14)'
S15      DC    CL5'(S15)'
ES15     DC    CL7'(ESO15)'
S16      DC    CL5'(S16)'
ES16     DC    CL7'(ESO16)'
S17      DC    CL5'(S17)'
ES17     DC    CL7'(ESO17)'
S18      DC    CL5'(S18)'
ES18     DC    CL7'(ESO18)'
S19      DC    CL5'(S19)'
ES19     DC    CL7'(ESO19)'
*
S20      DC    CL5'(S20)'
ES20     DC    CL7'(ESO20)'
S21      DC    CL5'(S21)'
ES21     DC    CL7'(ESO21)'
S22      DC    CL5'(S22)'
ES22     DC    CL7'(ESO22)'
S23      DC    CL5'(S23)'
ES23     DC    CL7'(ESO23)'
S24      DC    CL5'(S24)'
ES24     DC    CL7'(ESO24)'
S25      DC    CL5'(S25)'
ES25     DC    CL7'(ESO25)'
S26      DC    CL5'(S26)'
ES26     DC    CL7'(ESO26)'
S27      DC    CL5'(S27)'
ES27     DC    CL7'(ESO27)'
S28      DC    CL5'(S28)'
ES28     DC    CL7'(ESO28)'
S29      DC    CL5'(S29)'
ES29     DC    CL7'(ESO29)'
*
S30      DC    CL5'(S30)'
ES30     DC    CL7'(ESO30)'
S31      DC    CL5'(S31)'
ES31     DC    CL7'(ESO31)'
S32      DC    CL5'(S32)'
ES32     DC    CL7'(ESO32)'
S33      DC    CL5'(S33)'
ES33     DC    CL7'(ESO33)'
S34      DC    CL5'(S34)'
ES34     DC    CL7'(ESO34)'
S35      DC    CL5'(S35)'
ES35     DC    CL7'(ESO35)'
S36      DC    CL5'(S36)'
ES36     DC    CL7'(ESO36)'
S37      DC    CL5'(S37)'
ES37     DC    CL7'(ESO37)'
S38      DC    CL5'(S38)'
ES38     DC    CL7'(ESO38)'
S39      DC    CL5'(S39)'
ES39     DC    CL7'(ESO39)'
*
S40      DC    CL5'(S40)'
ES40     DC    CL7'(ESO40)'
S41      DC    CL5'(S41)'
ES41     DC    CL7'(ESO41)'
S42      DC    CL5'(S42)'
ES42     DC    CL7'(ESO42)'
S43      DC    CL5'(S43)'
ES43     DC    CL7'(ESO43)'
S44      DC    CL5'(S44)'
ES44     DC    CL7'(ESO44)'
S45      DC    CL5'(S45)'
ES45     DC    CL7'(ESO45)'
S46      DC    CL5'(S46)'
ES46     DC    CL7'(ESO46)'
S47      DC    CL5'(S47)'
ES47     DC    CL7'(ESO47)'
S48      DC    CL5'(S48)'
ES48     DC    CL7'(ESO48)'
S49      DC    CL5'(S49)'
ES49     DC    CL7'(ESO49)'
*
S50      DC    CL5'(S50)'
ES50     DC    CL7'(ESO50)'
S51      DC    CL5'(S51)'
ES51     DC    CL7'(ESO51)'
S52      DC    CL5'(S52)'
ES52     DC    CL7'(ESO52)'
S53      DC    CL5'(S53)'
ES53     DC    CL7'(ESO53)'
S54      DC    CL5'(S54)'
ES54     DC    CL7'(ESO54)'
S55      DC    CL5'(S55)'
ES55     DC    CL7'(ESO55)'
S56      DC    CL5'(S56)'
ES56     DC    CL7'(ESO56)'
S57      DC    CL5'(S57)'
ES57     DC    CL7'(ESO57)'
S58      DC    CL5'(S58)'
ES58     DC    CL7'(ESO58)'
S59      DC    CL5'(S59)'
ES59     DC    CL7'(ESO59)'
*
S60      DC    CL5'(S60)'
ES60     DC    CL7'(ESO60)'
S61      DC    CL5'(S61)'
ES61     DC    CL7'(ESO61)'
S62      DC    CL5'(S62)'
ES62     DC    CL7'(ESO62)'
S63      DC    CL5'(S63)'
ES63     DC    CL7'(ESO63)'
S64      DC    CL5'(S64)'
ES64     DC    CL7'(ESO64)'
S65      DC    CL5'(S65)'
ES65     DC    CL7'(ESO65)'
S66      DC    CL5'(S66)'
ES66     DC    CL7'(ESO66)'
S67      DC    CL5'(S67)'
ES67     DC    CL7'(ESO67)'
S68      DC    CL5'(S68)'
ES68     DC    CL7'(ESO68)'
S69      DC    CL5'(S69)'
ES69     DC    CL7'(ESO69)'
*
S70      DC    CL5'(S70)'
ES70     DC    CL7'(ESO70)'
*
FMT      DC    CL5'(FMT)'
SIL      DC    CL5'(SIL)'
MSG1     DC    CL6'(MSG1)'
*
AZCMD    DS    CL50
*
AS01     DS    CL1
AS02     DS    CL1
AS03     DS    CL1
AS04     DS    CL1
AS05     DS    CL1
AS06     DS    CL1
AS07     DS    CL1
AS08     DS    CL1
AS09     DS    CL1
*
AS10     DS    CL1
AS11     DS    CL1
AS12     DS    CL1
AS13     DS    CL1
AS14     DS    CL1
AS15     DS    CL1
AS16     DS    CL1
AS17     DS    CL1
AS18     DS    CL1
AS19     DS    CL1
*
AS20     DS    CL1
AS21     DS    CL1
AS22     DS    CL1
AS23     DS    CL1
AS24     DS    CL1
AS25     DS    CL1
AS26     DS    CL1
AS27     DS    CL1
AS28     DS    CL1
AS29     DS    CL1
*
AS30     DS    CL1
AS31     DS    CL1
AS32     DS    CL1
AS33     DS    CL1
AS34     DS    CL1
AS35     DS    CL1
AS36     DS    CL1
AS37     DS    CL1
AS38     DS    CL1
AS39     DS    CL1
*
AS40     DS    CL1
AS41     DS    CL1
AS42     DS    CL1
AS43     DS    CL1
AS44     DS    CL1
AS45     DS    CL1
AS46     DS    CL1
AS47     DS    CL1
AS48     DS    CL1
AS49     DS    CL1
*
AS50     DS    CL1
AS51     DS    CL1
AS52     DS    CL1
AS53     DS    CL1
AS54     DS    CL1
AS55     DS    CL1
AS56     DS    CL1
AS57     DS    CL1
AS58     DS    CL1
AS59     DS    CL1
*
AS60     DS    CL1
AS61     DS    CL1
AS62     DS    CL1
AS63     DS    CL1
AS64     DS    CL1
AS65     DS    CL1
AS66     DS    CL1
AS67     DS    CL1
AS68     DS    CL1
AS69     DS    CL1
*
AS70     DS    CL1
*
AESO01   DS    CL8
AESO02   DS    CL8
AESO03   DS    CL8
AESO04   DS    CL8
AESO05   DS    CL8
AESO06   DS    CL8
AESO07   DS    CL8
AESO08   DS    CL8
AESO09   DS    CL8
*
AESO10   DS    CL8
AESO11   DS    CL8
AESO12   DS    CL8
AESO13   DS    CL8
AESO14   DS    CL8
AESO15   DS    CL8
AESO16   DS    CL8
AESO17   DS    CL8
AESO18   DS    CL8
AESO19   DS    CL8
*
AESO20   DS    CL8
AESO21   DS    CL8
AESO22   DS    CL8
AESO23   DS    CL8
AESO24   DS    CL8
AESO25   DS    CL8
AESO26   DS    CL8
AESO27   DS    CL8
AESO28   DS    CL8
AESO29   DS    CL8
*
AESO30   DS    CL8
AESO31   DS    CL8
AESO32   DS    CL8
AESO33   DS    CL8
AESO34   DS    CL8
AESO35   DS    CL8
AESO36   DS    CL8
AESO37   DS    CL8
AESO38   DS    CL8
AESO39   DS    CL8
*
AESO40   DS    CL8
AESO41   DS    CL8
AESO42   DS    CL8
AESO43   DS    CL8
AESO44   DS    CL8
AESO45   DS    CL8
AESO46   DS    CL8
AESO47   DS    CL8
AESO48   DS    CL8
AESO49   DS    CL8
*
AESO50   DS    CL8
AESO51   DS    CL8
AESO52   DS    CL8
AESO53   DS    CL8
AESO54   DS    CL8
AESO55   DS    CL8
AESO56   DS    CL8
AESO57   DS    CL8
AESO58   DS    CL8
AESO59   DS    CL8
*
AESO60   DS    CL8
AESO61   DS    CL8
AESO62   DS    CL8
AESO63   DS    CL8
AESO64   DS    CL8
AESO65   DS    CL8
AESO66   DS    CL8
AESO67   DS    CL8
AESO68   DS    CL8
AESO69   DS    CL8
*
AESO70   DS    CL8
SILMSG   DC   CL80' "*" DENOTES UCB IS A SILO TAPE DEVICE'
*
ESOTAB   DS    CL560    (70 POSSIBLE ENTRIES X 8)
ESOTABLE DS    CL560     70 ESOTERIC ENTRIES IS MAX=(70 X 8)
ESOEND   EQU  *
*
ERRTAB   EQU  *
         DC   CL80' RC  MEANING'
         DC   CL80' =================================================='
         DC   CL80' 00  REQUEST GRANTED'
         DC   CL80'     01 INPUT UNIT NAME NOT FOUND IN EDT'
         DC   CL80' 04  REQUEST GRANTED BUT CK REASON CODES'
         DC   CL80'     01 INPUT DEV #S DON''T BELONG IN SAME GRP'
         DC   CL80'     02 INPUT DEV #S DON''T BELONG IN SAME UNIT NAM'
         DC   CL80' 08  DATA IN INPUT PARMS INVALID, CK REASON CODES'
         DC   CL80'     01 INPUT UNIT NAME NOT FOUND IN EDT'
         DC   CL80'     02 INPUT UNIT TYPE NOT FOUND IN EDT'
         DC   CL80'     03 ONE OR MORE INPUT DEV #S INVALID'
         DC   CL80'     04 INSUFFICIENT STORAGE TO HOLD EDT INFO'
         DC   CL80'     05 MAXELIG FUNC NEEDS GENERIC INPUT DEVTYPE'
         DC   CL80'     06 CALLER REQUESTED NO FUNCTIONS'
         DC   CL80'     07 CALLER REQUESTED AN INVALID FUNCTION'
         DC   CL80'     08 REQUIRED INPUT IS INVALID'
         DC   CL80' 0C  DYNAMIC CONFIG CHG HAS DISALLOWED THIS FUNC.'
         DC   CL80' 10  STORAGE COULD NOT BE OBTAINED FOR THE REQ.'
         DC   CL80' 18  UNEXPECTED SYSTEM ERROR'
ERRTABE  EQU  *
* ERROR MSGS
MSG#2    DC    CL40' ** 1 ENTRY IS MINIMUM **'
MSG#4    DC    CL40' SILO REQUEST FAILED, RC=XX'
MSG#5    DC    CL40' #SILO UCBS HAS EXCEEDED TABLE - ENLARGE'
MSG#6    DC    CL40' NO DISPLAY REQUESTED ... TRY AGAIN'
MSG#7    DC    CL40' HSC ENVIRON UNAVAIL - NO SILO DISPLY'
         SPACE 5
SILOTAB  DS   CL(4*500) 500 SILO UCB'S SUPPORTED
SILOTEND EQU  *
         EJECT
         AIF   ('&STK' EQ 'NO').SKPHSC3
***********************************************************************
* HSC CODE START 3 - THIS CODE INCLUDED IF STK SILOS ARE USED *********
***********************************************************************
         SLSXREQM
***********************************************************************
* HSC CODE END 3                                              *********
***********************************************************************
.SKPHSC3 ANOP
         PRINT NOGEN
UCB      DSECT
         IEFUCBOB
MYCVT    CVT   DSECT=YES,LIST=YES
* REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
