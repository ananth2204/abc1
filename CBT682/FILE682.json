{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012605000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE682.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE682.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x05\\x07'", "DS1TRBAL": "b'\\\\\\xb4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xc6\\x00\\x0c\\x04\\xc7\\x00\\x02\\x00\\x06'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04H\\x00\\x00\\x01\\x06\"/\\x01\\x06\"/\\x06$\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf2@@@'", "ispf": {"version": "04.72", "flags": 0, "createdate": "2006-08-10T00:00:00", "modifydate": "2006-08-10T06:24:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-472"}, "text": "REGULAR CBT TAPE - VERSION 472    FILE:  682\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT472.FILE682\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3120    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,136 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   08/10/06    06:24:38    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x00%\\x00\\x90'\\x1f\\x01\\x04\\x17o\\x18 \\x00\\x19\\x00\\x18\\x00\\x19\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@\"", "ispf": {"version": "01.06", "flags": 0, "createdate": "1990-09-28T00:00:00", "modifydate": "2004-06-24T18:20:25", "lines": 25, "newlines": 24, "modlines": 25, "user": "TS0710"}, "text": "TSOESO = DISPLAY System ESOTERICS\n\n> Members are :\n TSOESO     = Assembler program\n ESOPAN2    = ISPF panel\n ESO        = REXX\n ASMESO     = JCL to ASMLK TSOESO\n\n> Usage instructions :\n 1. Install REXX, PANEL in ISPF accessible datasets.\n 2. ASMLK TSOESO into your LNKLST (REXX is set up for this).\n 3. \"TSO ESO\" - Select 1 or MORE entries with \"S\" or \"/\".\n\n> Notes on modifying TSOESO :\n 1. Base regs are almost full.\n 2. To add more esoteric capacity one must program more entries\n    in TSOESO and expand the panel. The panel is already scrollable.\n 3. IMPORTANT ! You may have to modify the following statement in the\n    =========   source (its near the top of the pgm) :\n                     \" &STK     SETC  'YES' <=== 'YES' OR 'NO' \"\n    \"YES\" if you have STK SILOs, \"NO\" if you do not. \"YES\" includes\n    STK HSC macros. Specifying \"YES\" and not having the STK macros will\n    cause the assembly to fail.\n    Additionally, if \"NO\" is used, comment out the JCL DD override\n    \"SYSLIB3\" in the ASMESO JCL.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LOADMOD": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04\\x17o\\x01\\x04\\x17o\\x12S\\x01&\\x01&\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-06-24T00:00:00", "modifydate": "2004-06-24T12:53:00", "lines": 294, "newlines": 294, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE682": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04H\\x00\\x00\\x01\\x06\"/\\x01\\x06\"/\\x06$\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf2@@@'", "ispf": {"version": "04.72", "flags": 0, "createdate": "2006-08-10T00:00:00", "modifydate": "2006-08-10T06:24:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "CBT-472"}, "text": "//***FILE 682 is from Bob Glover and contains his TSOESO ISPF-based *   FILE 682\n//*           command processor to display all the ESOTERICS on     *   FILE 682\n//*           your system.                                          *   FILE 682\n//*                                                                 *   FILE 682\n//*           email:  Bob.Glover@fnf.com                            *   FILE 682\n//*                                                                 *   FILE 682\n//*       TSOESO = DISPLAY System ESOTERICS                         *   FILE 682\n//*                                                                 *   FILE 682\n//*       > Members are :                                           *   FILE 682\n//*        TSOESO     = Assembler program                           *   FILE 682\n//*        ESOPAN2    = ISPF panel                                  *   FILE 682\n//*        ESO        = REXX                                        *   FILE 682\n//*        ASMESO     = JCL to ASMLK TSOESO                         *   FILE 682\n//*                                                                 *   FILE 682\n//*       Note:  The assembler program has the ability to           *   FILE 682\n//*              incorporate STK silo macros if you have            *   FILE 682\n//*              them, and to exclude them if you don't.            *   FILE 682\n//*              There is a conditional assembly statement          *   FILE 682\n//*              in the code which takes care of the two            *   FILE 682\n//*              cases:                                             *   FILE 682\n//*                                                                 *   FILE 682\n//*              \" &STK     SETC  'YES' <=== 'YES' OR 'NO' \"        *   FILE 682\n//*                                                                 *   FILE 682\n//*       Note:  A load library in TSO XMIT format has been         *   FILE 682\n//*              included.  This load module was assembled with     *   FILE 682\n//*              the STK option on, but it appears to work fine,    *   FILE 682\n//*              even if you don't have STK silos in your           *   FILE 682\n//*              system.                                            *   FILE 682\n//*                                                                 *   FILE 682\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMESO": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x14\\x01\\x04\\x17O\\x01\\x04\\x17_\\x15\\x08\\x007\\x007\\x00\\r\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-06-22T00:00:00", "modifydate": "2004-06-23T15:08:14", "lines": 55, "newlines": 55, "modlines": 13, "user": "TS0710"}, "text": "//---------- YOUR JOB CARD HERE --------------\n//*\n//* ASMLK PGM W/OUT SMPE (NAME=TSOESO)\n//*\n//* ASSEMBLE AND LINK USING PDS INPUT\n//ASMLK  PROC  AREGION=2M,\n//             LREGION=2M,\n//             UNIT='SYSDA',\n//             CLASS='*',\n//             SYSLIB1='SYS1.MACLIB',\n//             SYSLIB2='SYS1.MODGEN',\n//             SYSLIB3='SYS1.MODGEN', /* OVERRIDDEN IF SILO USED */\n//             SRCLIB=TEMPNAME,\n//             LODLIB=TEMPNAME,\n//             RENT='NO',  /* ENTER RENT=NO FOR NON REENTRANT */\n//             SRCMOD='TEMPNAME',\n//             LODMOD='TEMPNAME'\n//*\n//ASM    EXEC  PGM=IEV90,PARM='NODECK,OBJECT,&RENT.RENT',\n//             REGION=&AREGION\n//SYSLIB   DD  DSN=&SYSLIB1.,DISP=SHR\n//         DD  DSN=&SYSLIB2.,DISP=SHR\n//         DD  DSN=&SYSLIB3.,DISP=SHR\n//SYSIN    DD  DSN=&SRCLIB.(&SRCMOD.),DISP=SHR\n//SYSUT1   DD  UNIT=(&UNIT.,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD SYSOUT=&CLASS.,DCB=(BLKSIZE=3509),UNIT=(,SEP=(SYSUT1))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//             DCB=(BLKSIZE=400),DSN=&&LOADSET\n//*\n//LNK  EXEC  PGM=IEWL,\n//  PARM='MAP,LET,LIST,NCAL,&RENT.RENT,AMODE=24,RMODE=24',\n//             REGION=&LREGION.,COND=(4,LT,ASM)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=&LODLIB.(&LODMOD.),DISP=SHR\n//SYSUT1   DD  UNIT=&UNIT.,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=&CLASS.,DCB=(RECFM=FB,BLKSIZE=3509)\n// PEND\n//*\n//STEP1 EXEC ASMLK,CLASS='*',\n//           RENT='NO',   /* ''=RENT, 'NO'=NON-RENT */\n//           SRCLIB='-- YOUR SOURCE --',           < -- SOURCE LIB\n//********* NOTE ... REMOVE NEXT STMNT IF NOT USING STK SILO *****\n//           SYSLIB3='-- STK HSC MACLIB (SLSMAC),' < -- STK MACLIB\n//           LODLIB='-- YOUR LOADLIB --',          < -- TARGET LL\n//           SRCMOD=TSOESO,\n//           LODMOD=TSOESO\n//*-------------------------------------\n//LNK.SYSIN  DD *\n  INCLUDE ISPLOAD(ISPQRY)\n  INCLUDE ISPLOAD(ISPLINK)\n  NAME TSOESO(R)\n/*\n//ISPLOAD  DD DSN=ISP.SISPLOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ESO": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x007\\x01\\x04\\x17O\\x01\\x04\\x17_\\x15\\x10\\x00!\\x00\\x1c\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-06-22T00:00:00", "modifydate": "2004-06-23T15:10:37", "lines": 33, "newlines": 28, "modlines": 0, "user": "TS0710"}, "text": "/* REXX */\n/* Display ESOTERICS */\n/* PGM=TSOESO... PANEL=ESOPAN2 ... REXX=ESO  */\naddress ispexec\nmsg_status = MSG('OFF')\nuid = sysvar(sysuid)\nprevrc=0\n Do while prevrc /= 8\n   ADDRESS TSO\n     \"FREE   FI(EDT1RPT,EDT3RPT)\"\n     \"DELETE ('\"uid\".ESO.ESO1RPT')\"\n     \"DELETE ('\"uid\".ESO.UCBLIST')\"\n     \"ALLOC  FI(EDT3RPT) DA('\"UID\".ESO.UCBLIST') NEW CATALOG\n             SPACE(5,5)  TRACKS RECFM(F) BLKSIZE(80)\"\n     \"ALLOC  FI(EDT1RPT) DA('\"UID\".ESO.ESO1RPT') NEW CATALOG\n             SPACE(5,5)  TRACKS RECFM(F) BLKSIZE(80)\"\n   ADDRESS  LINKPGM \"TSOESO\"      /* FROM LNKLST */\n   prevrc=rc\n   if rc = 7 then\n     do\n       say 'NOT IN ISPF ENVIRONMENT ! - REXX CANCELS'\n       exit\n     end\n   if rc = 24 then   /* 24=TSOESO ERRORS */\n     \"ISPEXEC BROWSE DATASET('\"UID\".ESO.ESO1RPT')\"\n   else\n   if rc /= 8 then  /* 08=PF3 on ISPF panel */\n     \"ISPEXEC BROWSE DATASET('\"UID\".ESO.UCBLIST')\"\n   \"DELETE ('\"uid\".ESO.ESO1RPT')\"\n   \"DELETE ('\"uid\".ESO.UCBLIST')\"\n   \"FREE   FI(EDT1RPT,EDT3RPT)\"\n end\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ESOPAN2": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00F\\x01\\x06\\x18\\x8f\\x01\\x06\\x18\\x8f\\x11\\x06\\x01S\\x01S\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-07-07T00:00:00", "modifydate": "2006-07-07T11:06:46", "lines": 339, "newlines": 339, "modlines": 0, "user": "TS0710"}, "text": ")ATTR\n# AREA(SCRL) EXTEND(ON)\n+ TYPE(TEXT) COLOR(YELLOW) INTENS(HIGH)\n\u00a2 TYPE(TEXT) COLOR(TURQ) INTENS(HIGH)\n\u00ac TYPE(TEXT) COLOR(GREEN) INTENS(LOW)\n? TYPE(TEXT) COLOR(RED) INTENS(HIGH)\n_ TYPE(INPUT) COLOR(PINK) INTENS(HIGH)\n@ TYPE(OUTPUT) COLOR(WHITE) INTENS(HIGH)\n)BODY\n#MYAREA -  --------------------------------------------------------------------#\n)AREA MYAREA DEPTH(20)\n\u00ac                         \u00a2DISPLAY SYSTEM ESOTERICS\u00ac\n *----------------------------------------------------------------------------*\n |\u00a2COMMAND ===>_ZCMD                                      ?  PF3=EXIT        \u00ac|\n |\u00ac                                                         +SCROLL ==>_AMT +\u00ac|\n |\u00acDSPLY FORMAT    >_FR\u00a2(L/S)                                                \u00ac|\n |\u00acDSPLY SILO DEVS >_SI\u00a2(Y/N)   \u00a2  &MSG1                                     \u00ac|\n |\u00ac                                                                          \u00ac|\n |\u00ac>_A1\u00ac@ESO01   \u00ac>_B1\u00ac@ESO02   \u00ac>_C1\u00ac@ESO03   \u00ac>_D1\u00ac@ESO04   \u00ac>_E1\u00ac@ESO05   \u00ac|\n |\u00ac>_F1\u00ac@ESO06   \u00ac>_G1\u00ac@ESO07   \u00ac>_H1\u00ac@ESO08   \u00ac>_I1\u00ac@ESO09   \u00ac>_J1\u00ac@ESO10   \u00ac|\n |\u00ac>_K1\u00ac@ESO11   \u00ac>_L1\u00ac@ESO12   \u00ac>_M1\u00ac@ESO13   \u00ac>_N1\u00ac@ESO14   \u00ac>_O1\u00ac@ESO15   \u00ac|\n |\u00ac>_P1\u00ac@ESO16   \u00ac>_Q1\u00ac@ESO17   \u00ac>_R1\u00ac@ESO18   \u00ac>_S1\u00ac@ESO19   \u00ac>_T1\u00ac@ESO20   \u00ac|\n |\u00ac>_U1\u00ac@ESO21   \u00ac>_V1\u00ac@ESO22   \u00ac>_W1\u00ac@ESO23   \u00ac>_X1\u00ac@ESO24   \u00ac>_Y1\u00ac@ESO25   \u00ac|\n |\u00ac>_Z1\u00ac@ESO26   \u00ac>_A2\u00ac@ESO27   \u00ac>_B2\u00ac@ESO28   \u00ac>_C2\u00ac@ESO29   \u00ac>_D2\u00ac@ESO30   \u00ac|\n |\u00ac>_E2\u00ac@ESO31   \u00ac>_F2\u00ac@ESO32   \u00ac>_G2\u00ac@ESO33   \u00ac>_H2\u00ac@ESO34   \u00ac>_I2\u00ac@ESO35   \u00ac|\n |\u00ac>_J2\u00ac@ESO36   \u00ac>_K2\u00ac@ESO37   \u00ac>_L2\u00ac@ESO38   \u00ac>_M2\u00ac@ESO39   \u00ac>_N2\u00ac@ESO40   \u00ac|\n |\u00ac>_O2\u00ac@ESO41   \u00ac>_P2\u00ac@ESO42   \u00ac>_Q2\u00ac@ESO43   \u00ac>_R2\u00ac@ESO44   \u00ac>_S2\u00ac@ESO45   \u00ac|\n |\u00ac>_T2\u00ac@ESO46   \u00ac>_U2\u00ac@ESO47   \u00ac>_V2\u00ac@ESO48   \u00ac>_W2\u00ac@ESO49   \u00ac>_X2\u00ac@ESO50   \u00ac|\n |\u00ac>_Y2\u00ac@ESO51   \u00ac>_Z2\u00ac@ESO52   \u00ac>_A3\u00ac@ESO53   \u00ac>_B3\u00ac@ESO54   \u00ac>_C3\u00ac@ESO55   \u00ac|\n |\u00ac>_D3\u00ac@ESO56   \u00ac>_E3\u00ac@ESO57   \u00ac>_F3\u00ac@ESO58   \u00ac>_G3\u00ac@ESO59   \u00ac>_H3\u00ac@ESO60   \u00ac|\n |\u00ac>_I3\u00ac@ESO61   \u00ac>_J3\u00ac@ESO62   \u00ac>_K3\u00ac@ESO63   \u00ac>_L3\u00ac@ESO64   \u00ac>_M3\u00ac@ESO65   \u00ac|\n |\u00ac>_N3\u00ac@ESO66   \u00ac>_O3\u00ac@ESO67   \u00ac>_P3\u00ac@ESO68   \u00ac>_Q3\u00ac@ESO69   \u00ac>_R3\u00ac@ESO70   \u00ac|\n *----------------------------------------------------------------------------*\n)INIT\n .CURSOR = A1\n &AMT = CSR\n &A1 = '' &B1 ='' &C1 ='' &D1 ='' &E1 ='' &F1 ='' &G1 = '' &H1 =''\n &I1 = '' &J1 ='' &K1 ='' &L1 ='' &M1 ='' &N1 ='' &O1 = '' &P1 =''\n &Q1 = '' &R1 ='' &S1 ='' &T1 ='' &U1 ='' &V1 ='' &W1 = '' &X1 =''\n &Y1 = '' &Z1 =''\n &A2 = '' &B2 ='' &C2 ='' &D2 ='' &E2 ='' &F2 ='' &G2 = '' &H2 =''\n &I2 = '' &J2 ='' &K2 ='' &L2 ='' &M2 ='' &N2 ='' &O2 = '' &P2 =''\n &Q2 = '' &R2 ='' &S2 ='' &T2 ='' &U2 ='' &V2 ='' &W2 = '' &X2 =''\n &Y2 = '' &Z2 =''\n &A3 = '' &B3 ='' &C3 ='' &D3 ='' &E3 ='' &F3 ='' &G3 = '' &H3 =''\n &I3 = '' &J3 ='' &K3 ='' &L3 ='' &M3 ='' &N3 ='' &O3 = '' &P3 =''\n &Q3 = '' &R3 =''\n &FR='L'  &SI='N'\n &MSG1 = &MSG1\n)REINIT\n .CURSOR = A1\n)PROC\n  IF (&A1 NE '')\n     VER(&A1,LIST,'/',S)\n     &S01=&A1\n     VPUT (S01) PROFILE\n  IF (&B1 NE '')\n     VER(&B1,LIST,'/',S)\n    &S02=&B1\n     VPUT (S02) PROFILE\n  IF (&C1 NE '')\n     VER(&C1,LIST,'/',S)\n    &S03=&C1\n     VPUT (S03) PROFILE\n  IF (&D1 NE '')\n     VER(&D1,LIST,'/',S)\n    &S04=&D1\n     VPUT (S04) PROFILE\n  IF (&E1 NE '')\n     VER(&E1,LIST,'/',S)\n    &S05=&E1\n     VPUT (S05) PROFILE\n  IF (&F1 NE '')\n     VER(&F1,LIST,'/',S)\n    &S06=&F1\n     VPUT (S06) PROFILE\n  IF (&G1 NE '')\n     VER(&G1,LIST,'/',S)\n    &S07=&G1\n     VPUT (S07) PROFILE\n  IF (&H1 NE '')\n     VER(&H1,LIST,'/',S)\n    &S08=&H1\n     VPUT (S08) PROFILE\n  IF (&I1 NE '')\n     VER(&I1,LIST,'/',S)\n    &S09=&I1\n     VPUT (S09) PROFILE\n  IF (&J1 NE '')\n     VER(&J1,LIST,'/',S)\n    &S10=&J1\n     VPUT (S10) PROFILE\n  IF (&K1 NE '')\n     VER(&K1,LIST,'/',S)\n    &S11=&K1\n     VPUT (S11) PROFILE\n  IF (&L1 NE '')\n     VER(&L1,LIST,'/',S)\n    &S12=&L1\n     VPUT (S12) PROFILE\n  IF (&M1 NE '')\n     VER(&M1,LIST,'/',S)\n    &S13=&M1\n     VPUT (S13) PROFILE\n  IF (&N1 NE '')\n     VER(&N1,LIST,'/',S)\n    &S14=&N1\n     VPUT (S14) PROFILE\n  IF (&O1 NE '')\n     VER(&O1,LIST,'/',S)\n    &S15=&O1\n     VPUT (S15) PROFILE\n  IF (&P1 NE '')\n     VER(&P1,LIST,'/',S)\n    &S16=&P1\n     VPUT (S16) PROFILE\n  IF (&Q1 NE '')\n     VER(&Q1,LIST,'/',S)\n    &S17=&Q1\n     VPUT (S17) PROFILE\n  IF (&R1 NE '')\n     VER(&R1,LIST,'/',S)\n    &S18=&R1\n     VPUT (S18) PROFILE\n  IF (&S1 NE '')\n     VER(&S1,LIST,'/',S)\n    &S19=&S1\n     VPUT (S19) PROFILE\n  IF (&T1 NE '')\n     VER(&T1,LIST,'/',S)\n    &S20=&T1\n     VPUT (S20) PROFILE\n  IF (&U1 NE '')\n     VER(&U,LIST,'/',S)\n    &S21=&U1\n     VPUT (S21) PROFILE\n  IF (&V1 NE '')\n     VER(&V1,LIST,'/',S)\n    &S22=&V1\n     VPUT (S22) PROFILE\n  IF (&W1 NE '')\n     VER(&W1,LIST,'/',S)\n    &S23=&W1\n     VPUT (S23) PROFILE\n  IF (&X1 NE '')\n     VER(&X1,LIST,'/',S)\n    &S24=&X1\n     VPUT (S24) PROFILE\n  IF (&Y1 NE '')\n     VER(&Y1,LIST,'/',S)\n    &S25=&Y1\n     VPUT (S25) PROFILE\n  IF (&Z1 NE '')\n     VER(&Z1,LIST,'/',S)\n    &S26=&Z1\n     VPUT (S26) PROFILE\n  IF (&A2 NE '')\n     VER(&A2,LIST,'/',S)\n     &S27=&A2\n     VPUT (S27) PROFILE\n  IF (&B2 NE '')\n     VER(&B2,LIST,'/',S)\n    &S28=&B2\n     VPUT (S28) PROFILE\n  IF (&C2 NE '')\n     VER(&C2,LIST,'/',S)\n    &S29=&C2\n     VPUT (S29) PROFILE\n  IF (&D2 NE '')\n     VER(&D2,LIST,'/',S)\n    &S30=&D2\n     VPUT (S30) PROFILE\n  IF (&E2 NE '')\n     VER(&E2,LIST,'/',S)\n    &S31=&E2\n     VPUT (S31) PROFILE\n  IF (&F2 NE '')\n     VER(&F2,LIST,'/',S)\n    &S32=&F2\n     VPUT (S32) PROFILE\n  IF (&G2 NE '')\n     VER(&G2,LIST,'/',S)\n    &S33=&G2\n     VPUT (S33) PROFILE\n  IF (&H2 NE '')\n     VER(&H2,LIST,'/',S)\n    &S34=&H2\n     VPUT (S34) PROFILE\n  IF (&I2 NE '')\n     VER(&I2,LIST,'/',S)\n    &S35=&I2\n     VPUT (S35) PROFILE\n  IF (&J2 NE '')\n     VER(&J2,LIST,'/',S)\n    &S36=&J2\n     VPUT (S36) PROFILE\n  IF (&K2 NE '')\n     VER(&K2,LIST,'/',S)\n    &S37=&K2\n     VPUT (S37) PROFILE\n  IF (&L2 NE '')\n     VER(&L2,LIST,'/',S)\n    &S38=&L2\n     VPUT (S38) PROFILE\n  IF (&M2 NE '')\n     VER(&M2,LIST,'/',S)\n    &S39=&M2\n     VPUT (S39) PROFILE\n  IF (&N2 NE '')\n     VER(&N2,LIST,'/',S)\n    &S40=&N2\n     VPUT (S40) PROFILE\n  IF (&O2 NE '')\n     VER(&O2,LIST,'/',S)\n    &S41=&O2\n     VPUT (S41) PROFILE\n  IF (&P2 NE '')\n     VER(&P2,LIST,'/',S)\n    &S42=&P2\n     VPUT (S42) PROFILE\n  IF (&Q2 NE '')\n     VER(&Q2,LIST,'/',S)\n    &S43=&Q2\n     VPUT (S43) PROFILE\n  IF (&R2 NE '')\n     VER(&R2,LIST,'/',S)\n    &S44=&R2\n     VPUT (S44) PROFILE\n  IF (&S2 NE '')\n     VER(&S2,LIST,'/',S)\n    &S45=&S2\n     VPUT (S45) PROFILE\n  IF (&T2 NE '')\n     VER(&T2,LIST,'/',S)\n    &S46=&T2\n     VPUT (S46) PROFILE\n  IF (&U2 NE '')\n     VER(&U2,LIST,'/',S)\n    &S47=&U2\n     VPUT (S47) PROFILE\n  IF (&V2 NE '')\n     VER(&V2,LIST,'/',S)\n    &S48=&V2\n     VPUT (S48) PROFILE\n  IF (&W2 NE '')\n     VER(&W2,LIST,'/',S)\n    &S49=&W2\n     VPUT (S49) PROFILE\n  IF (&X2 NE '')\n     VER(&X2,LIST,'/',S)\n    &S50=&X2\n     VPUT (S50) PROFILE\n  IF (&Y2 NE '')\n     VER(&Y2,LIST,'/',S)\n    &S51=&Y2\n     VPUT (S51) PROFILE\n  IF (&Z2 NE '')\n     VER(&Z2,LIST,'/',S)\n    &S52=&Z2\n     VPUT (S52) PROFILE\n  IF (&A3 NE '')\n     VER(&A3,LIST,'/',S)\n    &S53=&A3\n     VPUT (S53) PROFILE\n  IF (&B3 NE '')\n     VER(&B3,LIST,'/',S)\n     &S54=&B3\n     VPUT (S54) PROFILE\n  IF (&C3 NE '')\n     VER(&C3,LIST,'/',S)\n    &S55=&C3\n     VPUT (S55) PROFILE\n  IF (&D3 NE '')\n     VER(&D3,LIST,'/',S)\n    &S56=&D3\n     VPUT (S56) PROFILE\n  IF (&E3 NE '')\n     VER(&E3,LIST,'/',S)\n    &S57=&E3\n     VPUT (S57) PROFILE\n  IF (&F3 NE '')\n     VER(&F3,LIST,'/',S)\n    &S58=&F3\n     VPUT (S58) PROFILE\n  IF (&G3 NE '')\n     VER(&G3,LIST,'/',S)\n    &S59=&G3\n     VPUT (S59) PROFILE\n  IF (&H3 NE '')\n     VER(&H3,LIST,'/',S)\n    &S60=&H3\n     VPUT (S60) PROFILE\n  IF (&I3 NE '')\n     VER(&I3,LIST,'/',S)\n    &S61=&I3\n     VPUT (S61) PROFILE\n  IF (&J3 NE '')\n     VER(&J3,LIST,'/',S)\n    &S62=&J3\n     VPUT (S62) PROFILE\n  IF (&K3 NE '')\n     VER(&K3,LIST,'/',S)\n    &S63=&K3\n     VPUT (S63) PROFILE\n  IF (&L3 NE '')\n     VER(&L3,LIST,'/',S)\n    &S64=&L3\n     VPUT (S64) PROFILE\n  IF (&M3 NE '')\n     VER(&M3,LIST,'/',S)\n    &S65=&M3\n     VPUT (S65) PROFILE\n  IF (&N3 NE '')\n     VER(&N3,LIST,'/',S)\n    &S66=&N3\n     VPUT (S66) PROFILE\n  IF (&O3 NE '')\n     VER(&O3,LIST,'/',S)\n    &S67=&O3\n     VPUT (S67) PROFILE\n  IF (&P3 NE '')\n     VER(&P3,LIST,'/',S)\n    &S68=&P3\n     VPUT (S68) PROFILE\n  IF (&Q3 NE '')\n     VER(&Q3,LIST,'/',S)\n    &S69=&Q3\n     VPUT (S69) PROFILE\n  IF (&R3 NE '')\n     VER(&R3,LIST,'/',S)\n    &S70=&R3\n     VPUT (S70) PROFILE\n  VER(&FR,LIST,S,L)\n  &FMT=&FR\n  VPUT (FMT) PROFILE\n  VER(&SI,LIST,Y,N)\n  &SIL=&SI\n  VPUT (SIL) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOESO": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x14\\x01\\x04\\x17O\\x01\\x04\\x17_\\x15Y\\x05E\\x05&\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2004-06-22T00:00:00", "modifydate": "2004-06-23T15:59:14", "lines": 1349, "newlines": 1318, "modlines": 0, "user": "TS0710"}, "text": "         TITLE 'TSOESO - DISPLAY ESOTERIC NAMES'\n*=====================================================================*\n*                     === SCROLLABLE ===\n* 1. FIND ALL ESOTERIC/DEVICE NAMES BASED UPON DEVICE CLASSES.\n* 2. SORTS AND STORES ESOTERIC NAME ENTRIES IN A TABLE.\n* 3. QUERIES USER FOR ESOTERIC CHOICES VIA ISPF PANEL (MAX=70).\n* 4. BUILDS A REPORT W/ REQUESTED ESOTERIC INFO.\n* 5. BUILD A TABLE HOLDING ALL SILO UCB'S\n* 6. RETURNS (VIA ISPF BROWSE) ALL REQUESTED INFO.\n*\n* NOTE : POTENTIAL 1 LINE CHANGE BELOW !\n*=====================================================================*\n         SPACE 3\nTSOESO   CSECT\n         GBLC  &STK\n*---------------------------------------------------------------------*\n*---> I M P O R T A N T  : NEXT STMNT - SET TO 'NO' IF NO SILOS IN SHOP\n&STK     SETC  'YES' <=== 'YES' OR 'NO'\n*---------------------------------------------------------------------*\n         USING *,R15\n         B     AROUND\n         DC    AL1(23)\n         DC    CL9'&SYSDATE'\n         DC    CL5'&SYSTIME'\nAROUND   DS    0H\n         STM   R14,R12,12(R13)\n         ST    R13,SAVEAREA+4\n         LA    R7,SAVEAREA\n         ST    R7,8(R13)\n         LA    R13,SAVEAREA\n         DROP  R15\n         USING SAVEAREA,R13,R12,R10\n         B     BEGIN\nSAVEAREA DC    18F'0'\nBEGIN    DS    0H\n         LA    R12,4095(R13)\n         LA    R12,1(R12)\n         LA    R10,4095(R12)\n         LA    R10,1(R10)\n         OPEN  (EDT1RPT,(OUTPUT))\n         L     R6,#DEVS                R6 ==> #DIFFERENT DEVICE TYPES\n         LA    R2,DEVTAB               R2 ==> DEVICE TYPE TABLE\nDEVLOOP  EQU   *\n         PRINT NOGEN\n         EDTINFO RTNNAMD,                                              X\n               DEVCLASS=(R2),                                          X\n               SUBPOOL=00,                                             X\n               NAMELIST=AESO\n         PRINT GEN\n         LTR   R15,R15                 OK ?\n         BNZ   EDTERR                  NO....REPORT ERR AND EXIT\n         L     R7,AESO                 R7 ==> A(SYSTEM FOUND ESOTERICS)\n         L     R3,4(R7)                R3 ==> #ESOTERIC ENTRIES\n         LA    R4,8(R7)                R4 ==> ESOTERIC NAMES\n         LTR   R3,R3                   0 ENTRIES FOR THIS DEV CLASS ?\n         BE    CLASSEND                YES..SKIP THIS CLASS\nESOLOOP  EQU   *\n         CLC   0(4,R4),=C'3480'        3480 GENERIC ALLOWED\n         BE    GENERIC\n         CLC   0(4,R4),=C'3490'        3490 GENERIC ALLOWED\n         BE    GENERIC\n         CLC   0(4,R4),=C'3590'        3590 GENERIC ALLOWED\n         BE    GENERIC\n         CLI   0(R4),C'Z'              ESOTERIC ? (DROP ALL > 'Z')\n         BH    DROP                    NO...DROP IT\nGENERIC  EQU   *\n* VALID ESOTERIC NAME SINCE NAME NOT DROPPED\n         LM    R14,R15,ACURESO         R14 ==> NEXT SLOT, R15=ESO CTR\n         CL    R14,=A(ESOEND)          TABLE OVERRUN ?\n         BNL   OVERRUN                 YES...PROBLEM\n         MVC   0(8,R14),0(R4)          ESOTERIC NAME TO TABLE\n         LA    R14,8(R14)              BUMP PTR\n         LA    R15,1(R15)              BUMP CTR\n         STM   R14,R15,ACURESO         STORE REGS\nDROP     EQU   *\n         LA    R4,8(R4)                BUMP TO NEXT NAME\n         BCT   R3,ESOLOOP              AND VALIDATE IT\n*\nCLASSEND EQU   *\n         LA    R2,1(R2)                BUMP DEVICE CLASS PTR\n         BCT   R6,DEVLOOP              SERVICE NEXT DEVICE CLASS\n* ALL NAMES OBTAINED\n         MVC   #SORT(4),#ESO           SET #SLOTS TO SORT\n         MVC   NAMEND(4),ACURESO       LAST NAME SLOT\n         SPACE\n* SORT ESOTERIC NAMES IN ASCENDING ORDER\nSTRTSORT EQU   *\n         LM    R3,R5,SORTPTRS\n         MVC   0(8,R5),=8C'9'\n         SR    R5,R4\nBUBBLOOP EQU   *\n         LR    R2,R3\nEXCHLOOP EQU   *\n         CLC   0(8,R3),8(R2)         BUBBLE SORT\n         BNH   ENDEXCH               *\n         MVC   SORTNAME(8),0(R3)     *\n         MVC   0(8,R3),8(R2)         *\n         MVC   8(8,R2),SORTNAME      *\nENDEXCH  EQU   *\n         BXLE  R2,R4,EXCHLOOP\n         BXLE  R3,R4,BUBBLOOP\n*\n         CLOSE (EDT1RPT)\n***********\n* TSOEDT2 *\n***********\n         LM    R2,R3,=A(#ESO,ESOTABLE) R2 ==> #ESOTERICS AT ALLTEL\n         L     R2,0(R2)                R3 ==> A(ESOTERIC TABLE)\n         ST    R2,#ESOS                SAVE #ESOTERICS\n         LA    R5,AESO01               R5 ==> A(ISPF ESOTERIC DSPLY)\nESOLOOP2 EQU   *\n         MVC   0(8,R5),0(R3)           MOVE ESOTERIC TO ISPF PANEL\n         LA    R3,8(R3)                BUMP INPUT\n         LA    R5,8(R5)                BUMP OUTPUT\n         BCT   R2,ESOLOOP2             DO 'EM ALL\n         L     R2,#ESOS                R2 ==> #ESOTERICS\n         SPACE 2\n**-------------------------------------------------------------------**\n*|  DEFINE VARIABLES FOR ISPF                                        |*\n**-------------------------------------------------------------------**\nQUERY    CALL  ISPQRY                  ARE WE IN ISPF ENVIRONMENT?\n         LTR   15,15                   IF = 0, THEN YES\n         BZ    DOISPF                  YES...PROCEED\n         LA    R15,7                   NO..GIVE BAD RC\n         ST    R15,RC                  SAVE IT\n         B     EXIT1                   AND EXIT W/ ERRMSG\nDOISPF   EQU   *\n*\n         PRINT NOGEN\n         CALL  ISPLINK,(VDEFINE,ZCMD,AZCMD,CHAR,LEN50),VL\n         CALL  ISPLINK,(VDEFINE,S01,AS01,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S02,AS02,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S03,AS03,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S04,AS04,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S05,AS05,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S06,AS06,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S07,AS07,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S08,AS08,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S09,AS09,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S10,AS10,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S11,AS11,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S12,AS12,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S13,AS13,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S14,AS14,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S15,AS15,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S16,AS16,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S17,AS17,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S18,AS18,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S19,AS19,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S20,AS20,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S21,AS21,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S22,AS22,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S23,AS23,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S24,AS24,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S25,AS25,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S26,AS26,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S27,AS27,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S28,AS28,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S29,AS29,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S30,AS30,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S31,AS31,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S32,AS32,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S33,AS33,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S34,AS34,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S35,AS35,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S36,AS36,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S37,AS37,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S38,AS38,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S39,AS39,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S40,AS40,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S41,AS41,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S42,AS42,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S43,AS43,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S44,AS44,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S45,AS45,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S46,AS46,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S47,AS47,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S48,AS48,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S49,AS49,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S50,AS50,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S51,AS51,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S52,AS52,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S53,AS53,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S54,AS54,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S55,AS55,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S56,AS56,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S57,AS57,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S58,AS58,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S59,AS59,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S60,AS60,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S61,AS61,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S62,AS62,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S63,AS63,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S64,AS64,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S65,AS65,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S66,AS66,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S67,AS67,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S68,AS68,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,S69,AS69,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,S70,AS70,CHAR,LEN1),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES01,AESO01,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES02,AESO02,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES03,AESO03,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES04,AESO04,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES05,AESO05,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES06,AESO06,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES07,AESO07,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES08,AESO08,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES09,AESO09,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES10,AESO10,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES11,AESO11,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES12,AESO12,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES13,AESO13,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES14,AESO14,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES15,AESO15,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES16,AESO16,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES17,AESO17,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES18,AESO18,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES19,AESO19,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES20,AESO20,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES21,AESO21,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES22,AESO22,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES23,AESO23,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES24,AESO24,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES25,AESO25,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES26,AESO26,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES27,AESO27,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES28,AESO28,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES29,AESO29,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES30,AESO30,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES31,AESO31,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES32,AESO32,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES33,AESO33,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES34,AESO34,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES35,AESO35,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES36,AESO36,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES37,AESO37,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES38,AESO38,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES39,AESO39,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES40,AESO40,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES41,AESO41,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES42,AESO42,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES43,AESO43,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES44,AESO44,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES45,AESO45,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES46,AESO46,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES47,AESO47,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES48,AESO48,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES49,AESO49,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES50,AESO50,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES51,AESO51,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES52,AESO52,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES53,AESO53,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES54,AESO54,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES55,AESO55,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES56,AESO56,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES57,AESO57,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES58,AESO58,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES59,AESO59,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES60,AESO60,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES61,AESO61,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES62,AESO62,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES63,AESO63,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES64,AESO64,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES65,AESO65,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES66,AESO66,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES67,AESO67,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES68,AESO68,CHAR,LEN8),VL\n         CALL  ISPLINK,(VDEFINE,ES69,AESO69,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,ES70,AESO70,CHAR,LEN8),VL\n*\n         CALL  ISPLINK,(VDEFINE,FMT,AFMT,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,SIL,ASIL,CHAR,LEN1),VL\n         CALL  ISPLINK,(VDEFINE,MSG1,AMSG1,CHAR,LEN50),VL\n         PRINT GEN\n**-------------------------------------------------------------------**\n* DISPLAY PANEL -----------------------------------------------------**\n**-------------------------------------------------------------------**\n         BAL   R11,CLEARVAR            INIT ALL PANEL VARIABLES\nCALLPAN  EQU   *\n         CALL  ISPLINK,(DISPLAY,EDTPAN),VL\n         ST    R15,RC                 SAVE RC\n         LTR   15,15                  DID WE PRESS PF3?  (PF8=END)\n         BNZ   EXIT                   YES.....GO HOME\n**-------------------------------------------------------------------**\n*|  CHECK TO SEE IF ANY ESOTERICS HAVE BEEN SELECTED ........        |*\n**-------------------------------------------------------------------**\nCHK0     DS    0H\n         SR    R7,R7                  R7 ==> #ESOTERICS REQUESTED CTR\n         L     R5,=A(ESOTAB)          R5 ==> USER'S ESOTERIC CHOICES\n         LA    R4,AS01                R4 ==> PANEL ESOTERIC INDICATORS\n         LA    R6,AESO01              R6 ==> PANEL ESOTERIC NAMES\n         L     R2,#ESOS               R2 ==> #ESOTERICS\nCKLOOP   EQU   *\n         CLI   0(R4),C'S'             SELECTED ?\n         BE    SELECT\n         CLI   0(R4),C'/'             SELECTED ?\n         BE    SELECT\n         B     NOSELECT               NO..CK NEXT\nSELECT   EQU   *\n         MVC   0(8,R5),0(R6)          YES...SAVE ESOTERIC NAME\n         LA    R5,8(R5)               BUMP OUTPUT ESOTERIC TAB PTR\n         LA    R7,1(R7)               ADD TO SELECTED CTR\nNOSELECT EQU   *\n         LA    R4,1(R4)               BUMP SELECTION PTR\n         LA    R6,8(R6)               BUMP ESOTERIC PTR\n         BCT   R2,CKLOOP              CK ALL\n         ST    R7,#CHOSEN             SAVE NO. USER REQUESTS\n*\n         LTR   R7,R7                  ANY CHOSEN ?\n         BNZ   CHOSEN                 YES..PROCEED\n*\n         CLI   ASIL,C'Y'              SILO UCB'S REQUESTED ?\n         BE    CHOSEN                 YES..THAT'LL DO\n*\n         L     R1,=A(MSG#2)\n         MVC   AMSG1(L'MSG#2),0(R1)   NO..ISSUE MSG\n         B     CALLPAN                AND RETRY\nCHOSEN   EQU   *\n* OPEN USER REPORT DCB\n         TM    EDT3RPT+48,X'10'        SYSPRINT OPEN ?\n         BO    OPENED                  YES..DON'T OPEN AGAIN\n         OPEN  (EDT3RPT,(OUTPUT))\n         L     R5,16(R0)               R5 ==> A(CVT)\n         USING CVT,R5\n         MVC   MYSYSID(4),CVTSNAME     SAVE SYSID\n         DROP  R5\n         MVC   WORKA(L'SYSLINE+4),SYSLINE\n         BAL   R11,WRITEIT\n         BAL   R11,WRITEIT             SKIP LINE\nOPENED   EQU   *\n         SPACE\n***\n* POPULATE SILO UCB TABLE\n***\n         SPACE\n         XC    HSCSW(1),HSCSW         RESET HSC ERR SW\n         L     R15,ASLSXCAL           SILO SOFTWARE EP\n         LTR   R15,R15                ALREADY THERE ?\n         BNZ   LOADED                 YES..DON'T RELOAD\n         BLDL  0,SLSXCAL              DOES HSC EXIST ON THIS LPAR ?\n         LTR   R15,R15\n         BZ    LOADIT                 YES..GO LOAD\n         OI    HSCSW,HSCNF            NO..MARK NOT HERE\n         B     HSCNOTAV\nLOADIT   EQU   *\n         LOAD  EP=SLSXCAL             NO..GET THE EP\n         ST    R0,ASLSXCAL            AND SAVE IT\nLOADED   EQU   *\n         AIF   ('&STK' EQ 'NO').SKPHSC1\n***********************************************************************\n* HSC CODE START 1 - THIS CODE INCLUDED IF STK SILOS ARE USED *********\n***********************************************************************\n         PRINT NOGEN\n         SLSXREQ QDRIVES,                                              X\n               OPTION=SYNCH,                                           X\n               XCALADR=ASLSXCAL,                                       X\n               MF=(E,MFL)\n         PRINT GEN\n         LTR   R15,R15                HSC CALL WENT OK ?\n         BZ    HSCOK                  YES\n         OI    HSCSW,HSCNA            NO..MARK IT\n         B     HSCNOTAV               NO...HSC PROBABLY NOT ACTIVE\nHSCOK    EQU   *\n         LR    R9,R1                  R9 ==> A(HSC DATA AREAS)\n         USING SLX,R9\n         CLI   SLXCMDRC,SLXRWARN      SILO REQUEST OK ?\n         BNH   CALLOK                 RC=0,4 IS OK\n* SILO CALL ERROR\n         UNPK  WORK3(3),SLXCMDRC(2)   MOVE ERROR\n         MVZ   WORK3(2),=XL2'00'      CODE TO\n         TR    WORK3(2),TRTAB         ISPF MESSAGE\n         L     R1,=A(MSG#4)\n         MVC   25(2,R1),WORK3         *\n         MVC   AMSG1(L'MSG#4),0(R1)   ERRMSG TO PANEL\n         OI    HSCSW,HSCBC            HSC BAD CALL\n         B     CALLPAN                RESEND PANEL TO USER\nCALLOK   EQU   *\n         L     R7,SLXXDRVL            R7  ==> UNIT SLOT L'\n         L     R2,SLXXDRVO            R2  ==> OFFSET TO DRIVE SECTION\n         LA    R2,SLX(R2)             R2  ==> A(DRIVE SECTION)\n         USING SLXSDRV,R2\n         L     R4,=A(SILOTAB)         R4  ==> INTERNAL TABLE FOR UCBS\n         L     R3,SLXXDRVN            R3 ==> # UCBS\n         SPACE 3\nSLULOOP  EQU   *\n         UNPK  WORK5(5),SLXQDECU(3)   MAKE SILO UCB\n         MVZ   WORK5(4),=XL4'00'      READ-ABLE\n         TR    WORK5(4),TRTAB         *\n         MVC   0(4,R4),WORK5          UCB TO TABLE\n         L     R1,#SILO\n         LA    R1,1(R1)               BUMP SILO DEVICE CTR\n         ST    R1,#SILO\n         LA    R4,4(R4)               AND BUMP SILO UCB PTR\n         ST    R4,ASILOEND            SAVE IT\n         ST    R4,ASILOEN2            *\n         CL    R4,=A(SILOTEND)        SILO UCB TAB EXCEEDED ?\n         BL    SLUOK                  NO\n         L     R1,=A(MSG#5)\n         MVC   AMSG1(L'MSG#5),0(R1)   YES..ERRMSG\n         B     CALLPAN                PANEL TO USER\nSLUOK    EQU   *\n         LA    R2,0(R7,R2)            BUMP SILO VOLUME SLOT PTR\n         BCT   R3,SLULOOP             CK NEXT USER VOL\n         DROP  R2,R9\n* SORT SILO UCB'S\n         LM    R3,R5,SILOSORT         LOAD SORT REGS\n         MVC   0(4,R5),=4C'9'\n         SR    R5,R4\nSILOLOOP EQU   *\n         LR    R2,R3\nSILOEXCH EQU   *\n         CLC   0(4,R3),4(R2)         BUBBLE SORT\n         BNH   SILOEND               *\n         MVC   SILONAME(4),0(R3)     *\n         MVC   0(4,R3),4(R2)         *\n         MVC   4(4,R2),SILONAME      *\nSILOEND  EQU   *\n         BXLE  R2,R4,SILOEXCH\n         BXLE  R3,R4,SILOLOOP\n* SILOS SORTED\n***********************************************************************\n* HSC CODE END 1                                              *********\n***********************************************************************\n.SKPHSC1 ANOP\nHSCNOTAV EQU   *\n         L     R7,#CHOSEN             RELOAD # ESOTERICS CHOSEN\n         LTR   R7,R7                  ANY ESOTERICS CHOSEN ?\n         BZ    TRYSILO                NO..SILO STUFF, ALONE\n         L     R5,=A(ESOTAB)          R5 ==> A(ESOTERICS TO DSPLY)\nCALLOOP  EQU   *\n         STM   R5,R7,SAVE57           SAVE 5,7\n         MVC   PARM1(8),0(R5)         ESOTERIC TO PARM\n         LA    R1,PARMS               PARMS TO PASS (#ESOTERICS, LOC.)\n***********\n* TSOEDT3 *\n***********\n         LM    R2,R4,0(R1)             LOAD PARM ADDRS\n         PACK  DOUB(8),0(1,R3)         ZONED DECIMAL FROM REXX\n         CVB   R15,DOUB                TO HEX\n         BCTR  R15,0                   -1\n         EX    R15,MVCESO              MOVE ESOTERIC - EXACT L'\n*\n         LA    R9,UCBAREA              R9=A(UCB BLK)\n         USING UCBOB,R9\n         L     R5,CORE                 R5 ==> GETMAIN SIZE\n         CLC   AUCBS(4),=F'0'          PREV. GETMAINED ?\n         BNE   SKIPMAIN                YES..DON'T DO IT AGAIN\n         GETMAIN EC,LV=(R5),A=AUCBS    GET STORAGE\n         LTR   R15,R15                 CORE AQUIRED ?\n         BNZ   MAINERR                 NOPE...\nSKIPMAIN EQU   *\n         XC    UCBWORK(L'UCBWORK),UCBWORK CLEAR UCB WORK AREA\n         L     R15,CORE                R15 ==> GETMAIN SIZE\n         L     R1,AUCBS                R1 ==> A(GETMAIN AREA)\n         ST    R15,0(R1)               1ST 4 BYTES IS THE SIZE\n         PRINT NOGEN\n         EDTINFO RTNDEVN,                                              X\n               UNITNAME=ESOTERIC,                                      X\n               DYNAMIC=YES,                                            X\n               RANGE=ALL,                                              X\n               LOC=ANY,                                                X\n               DEVNLIST=AUCBS\n         PRINT GEN\n         LTR   R15,R15                 OK ?\n         BNZ   EDTERR2                 NO....\n         L     R1,AUCBS                R1=A(GETMAIN/EDTINFO)\n         L     R5,4(R1)                R5=#ENTRIES\n         LA    R6,8(R1)                R6=A(ENTRIES)\n         LA    R7,5                    R7=#ENTRIES PER PT LINE\n         LA    R8,WORKA+2              R8=A(PT LINE)\n         CVD   R5,DOUB\n         MVC   TITLE+29(L'MASK),MASK\n         ED    TITLE+29(L'MASK),DOUB+5\n         BAL   R11,TOF                 HEADERS\n         CLI   AFMT,C'L'               LONG FORMAT ?\n         BE    INNERL                  YES...GO DO IT\n***\n* SHORT DISPLAY FORMAT\n***\n         SPACE\n         LA    R7,10                   R7=#ENTRIES PER PT LINE\nINNERS   EQU   *\n         MVC   0(4,R8),0(R6)           UCB TO PT LINE\n         BAL   R11,CKSILO              SEE IF ITS A SILO DEVICE\n         LA    R6,4(R6)                BUMP UCB PTR\n         LA    R8,7(R8)                BUMP PT LINE PTR\n         BCT   R5,OUTERS               WHEN > 0 BRANCH\n         B     FINAL                   WHEN = 0 ... EXIT\nOUTERS   EQU   *\n         BCT   R7,INNERS               FILL PT LINE\n         BAL   R11,WRITEIT             WRITE PT LINE\n         CP    LINECNT,=P'60'          60 LINES PRINTED ?\n         BL    SAMEPGS                 NO\n         BAL   R11,TOF                 YES..DO TOF\nSAMEPGS  EQU   *\n         LA    R7,10                   RELOAD PT CTR\n         LA    R8,WORKA+2              R7=A(PT LINE)\n         B     INNERS                  START PT FOR NXT LINE\n***\n* LONG DISPLAY FORMAT\n***\n         SPACE\nINNERL   EQU   *\n         BAL   R11,FINDUCB             FIND THE VOLSER (IF DASD)\n         MVC   0(4,R8),UCBNAME4        UCB TO PT LINE\n         BAL   R11,CKSILO              SEE IF ITS A SILO DEVICE\n         LA    R6,4(R6)                BUMP UCB PTR\n         CLI   VOLSER,C'$'             UCB FOUND ?\n         BE    SKIPDESC                NO...SKIP IT\n         MVC   6(8,R8),VOLID           VOLSER TO PT LINE\n         CLI   UCBTBYT4,X'80'          3480 ?\n         BE    SET3480\n         CLI   UCBTBYT4,X'81'          3490 ?\n         BE    SET3490\n         CLI   UCBTBYT4,X'83'          3590 ?\n         BE    SET3590\n         B     SKIPDESC                NOT SQUARE TAPE\nSET3480  EQU   *\n         MVI   5(R8),C'8'              '8'=3480\n         B     TAPEL\nSET3490  EQU   *\n         MVI   5(R8),C'9'              '9'=3490\n         B     TAPEL\nSET3590  EQU   *\n         MVI   5(R8),C'5'              '5'=3590\n         B     TAPEL\nTAPEL    EQU   *\n         MVI   4(R8),C'-'              DEVTYPE DELIM\n         B     SKIPDESC                BR AROUND BAD UCB CODE\nSKIPDESC EQU   *\n         LA    R8,16(R8)               BUMP PT LINE PTR\n         BCT   R5,OUTERL               WHEN > 0 BRANCH\n         B     FINAL                   WHEN = 0 ... EXIT\nOUTERL   EQU   *\n         BCT   R7,INNERL               FILL PT LINE\n         BAL   R11,WRITEIT             WRITE PT LINE\n         CP    LINECNT,=P'60'          60 LINES PRINTED ?\n         BL    SAMEPGL                 NO\n         BAL   R11,TOF                 YES..DO TOF\nSAMEPGL  EQU   *\n         LA    R7,5                    RELOAD PT CTR\n         LA    R8,WORKA+2              R7=A(PT LINE)\n         B     INNERL                  START PT FOR NXT LINE\n***\n* COMMON CODE FOR LONG AND SHORT\n***\nFINAL    EQU   *                       NO MO UCB'S\n         BAL   R11,WRITEIT             WRITE PT LINE\n         SPACE 5\n         LM    R5,R7,SAVE57           RESTORE 5,7\n         LA    R5,8(R5)               BUMP TO NEXT ESOTERIC\n         BCT   R7,CALLOOP             KEEP GOING\n         SPACE\nTRYSILO  EQU   *                      S I L O  DSPLY RTN\n         CLI   ASIL,C'Y'              SILO CHOSEN ?\n         BE    DOSILO                 YES\n         L     R7,#CHOSEN\n         LTR   R7,R7                  DID USER PICK ESOTERIC ?\n         BNZ   WRAPUP                 YES...OK\n         L     R1,=A(MSG#6)\n         MVC   AMSG1(L'MSG#6),0(R1)   NO..ILLOGICAL CONDITION\n         B     CALLPAN                NOTIFY USER\nDOSILO   EQU   *\n         TM    HSCSW,HSCNF+HSCNA      ANY HSC PROBLEMS ?\n         BZ    SILOPRT                NO\n         MVI   WORKA,C' '\n         BAL   R11,WRITEIT\n         L     R1,=A(MSG#7)\n         MVC   WORKA(L'MSG#7),0(R1)   YES..NOTIFY USER NO SILO\n         B     SILOFINL               AND GET OUT\nSILOPRT  EQU   *\n         MVC   ESOTERIC(8),=C' S I L O' TITLE TO HDR\n         L     R5,#SILO               R5 ==> #SILO DEVICES\n         CVD   R5,DOUB\n         MVC   TITLE+29(L'MASK),MASK\n         ED    TITLE+29(L'MASK),DOUB+5  #SILO DEVS TO TITLE\n         BAL   R11,TOF                TOP OF FORM\n         L     R4,=A(SILOTAB)         R4 ==> A(SILO UCB'S)\nSILORPT  EQU   *\n         LA    R8,WORKA+2             R8 ==> A(PRT LINE)\n         LA    R7,10                  10 ENTRIES PER LINE MAX\nSILOINNR EQU   *\n         LR    R1,R8                  PRINT LINE UCB ADDR\n         BCTR  R1,0                   -1\n         MVI   0(R1),C'*'             DENOTE SILO DEVICE\n         MVC   0(4,R8),0(R4)          SILO UCB TO PRT LINE\n         LA    R4,4(R4)               BUMP UCB PTR\n         LA    R8,7(R8)               BUMP PRT PTR\n         BCT   R5,SILOOUTR            PRINT ALL UCB'S\n         B     SILOFINL               THEN GET OUT\nSILOOUTR EQU   *\n         BCT   R7,SILOINNR            GET NEXT UCB\n         BAL   R11,WRITEIT            PRINT WHEN LINE FILLS UP\n         CP    LINECNT,=P'60'         PAGE FULL ?\n         BL    SAMEPGSI               NO\n         BAL   R11,TOF                YES...TOP OF FORM\nSAMEPGSI EQU   *\n         B     SILORPT                START ON NEXT LINE\n*\nSILOFINL EQU   *\n         BAL   R11,WRITEIT\n*\nWRAPUP   EQU   *\n         BAL   R11,WRITEIT            BLANKS LINE\n         L     R1,=A(SILMSG)\n         MVC   WORKA(L'SILMSG),0(R1)  PARTING LINE FOR ALL DISPLAYS\n         BAL   R11,WRITEIT\n         CLOSE (EDT3RPT)\n         ST    R15,RC                 SAVE RC\n         B     EXIT                   ALL DONE\n*\n**-------------------------------------------------------------------**\n*|  EXIT STUFF                                                       |*\n**-------------------------------------------------------------------**\nEXIT1    WTO   'ISPF SERVICE UNAVAILABLE',ROUTCDE=(2,11)\n         B     EXIT\n         SPACE 3\n**-------------------------------------------------------------------**\n*|    S U B R O U T I N E S                                          |*\n**-------------------------------------------------------------------**\n* CLEAR ISPF VARIABLES FOR NEXT GO-ROUND\n         DC    CL8'CLEARVAR',F'0'\nCLEARVAR ST    R11,*-4\n         XC    #ESO,#ESO\n         MVC   AS01(L'BLANKS),BLANKS\n         L     R11,CLEARVAR-4\n         BALR  R11,R11\n         SPACE 3\n***\n* FINDUCB - LOCATE UCB BLOCK\n***\n         SPACE\n         DC    CL8'FINDUCB',F'0'\nFINDUCB  ST    R11,*-4\nUCBLOOP  EQU   *\n         PRINT NOGEN\n         UCBSCAN COPY,                                                 X\n               WORKAREA=UCBWORK,                                       X\n               UCBAREA=UCBAREA,                                        X\n               DEVN=0,                                                 X\n               DYNAMIC=YES,                                            X\n               RANGE=ALL\n         PRINT GEN\n         LTR   R15,R15                 UCB FOUND ?\n         BNZ   UCBNF                   NO\n* BEGIN - 4 CHAR UCB\n         UNPK  UCBNAME4(5),UCBCHAN(3)  CUUU FROM UCB\n         MVZ   UCBNAME4(4),=4X'00'     CLEAR ZONES FOR TR\n         TR    UCBNAME4(4),TABLE       MAKE PRINTABLE\n* END - 4 CHAR UCB\n         CLC   UCBNAME4(4),0(R6)       UCB HIT ?  0(R6) - 4 CHAR UCB\n         BNE   UCBLOOP                 NO\n         SPACE\n         MVC   VOLSER(6),UCBVOLI       SAVE VOLSER\n         TM    UCBSTAT,UCBONLI         ONLINE ?\n         BO    CKVOLSER                YES\n         MVC   VOLSER(6),=C' OFFL '    NO, MARK OFFLINE\n         B     UCBXIT                  GET OUT\nCKVOLSER EQU   *\n         CLI   UCBVOLI,C'A'            VALID VOLSER ?\n         BNL   UCBXIT                  YES...\n         MVC   VOLSER(6),=C' IDLE '    MARK NO VOL ON DEV\n         B     UCBXIT                  GET OUT\nUCBNF    EQU   *\n         MVI   VOLSER,C'$'             MARK UCB NOT FOUND\nUCBXIT   EQU   *\n         L     R11,FINDUCB-4\n         BALR  R11,R11\n         SPACE 3\n***\n* CKSILO - SEE IF UCB IS A SILO DEVICE\n***\n         SPACE\n         DC    CL8'CKSILO',F'0'\nCKSILO   ST    R11,*-4\n         TM    HSCSW,HSCNF+HSCNA        HSC NOT PRESENT ?\n         BNZR  R11                      THAT IS RIGHT ... GET OUT\n         STM   R4,R7,SAVE47             SAVE REGS\n         LR    R1,R8                    R1 ==> A(PT LINE UCB POS)\n         LM    R4,R7,SILOREGS           LOAD SEARCH REGS\nCKSILOOP EQU   *\n         CLC   0(4,R1),0(R4)            UCB HIT ?\n         BE    SILOHIT                  YES...\n         BXLE  R4,R6,CKSILOOP           NO..CK NEXT ONE\n         B     CKSIEXIT                 NOT A SILO UCB\nSILOHIT  EQU   *\n         BCTR  R1,0                     BACKUP 1 PRINT POS\n         MVI   0(R1),C'*'               MARK AS SILO UCB\nCKSIEXIT EQU   *\n         LM    R4,R7,SAVE47             RELOAD\n         L     R11,CKSILO-4\n         BALR  R11,R11\n         SPACE 3\n***\n* TOF - TOP OF FORMS\n***\n         SPACE\n         DC    CL8'TOF',F'0'\nTOF      ST    R11,*-4\n         BAL   R11,WRITEIT\n         MVC   WORKA(L'DASHES),DASHES\n         BAL   R11,WRITEIT\n         MVC   WORKA(L'TITLE),TITLE\n         MVC   WORKA+4(8),ESOTERIC\n         BAL   R11,WRITEIT\n         MVC   WORKA(L'DASHES),DASHES\n         BAL   R11,WRITEIT\n         BAL   R11,WRITEIT\n         ZAP   LINECNT,=P'5'\n         L     R11,TOF-4\n         BALR  R11,R11\n         SPACE 3\n***\n* WRITEIT - WRITE ESOTERIC INFO\n***\n         SPACE\n         DC    CL8'WRITEIT',F'0'\nWRITEIT  ST    R11,*-4\n         PUT   EDT3RPT,WORKA\n         MVC   WORKA+1(79),WORKA         CLEAR PT LINE\n         AP    LINECNT,=P'1'\n         L     R11,WRITEIT-4\n         BALR  R11,R11\n         SPACE 3\n***\n* MAINERR - GETMAIN ERROR\n***\n         SPACE\nMAINERR  EQU   *\n         ST    R15,RC\n         CVD   R15,DOUB                  RC\n         UNPK  ERR1+17(4),DOUB+5(3)\n         OI    ERR1+20,X'F0'\n         MVC   WORKA(L'ERR1),ERR1\n         PUT   EDT3RPT,WORKA\n         MVC   RC(4),=F'12'\n         B     WRAPUP\n         SPACE 3\n***\n* EDTERR - EDTINFO NON-ZERO RETURN\n***\n         SPACE\nEDTERR2  EQU   *\n* RETURN CODE\n         SR    R15,R15\n         IC    R15,UCBSTAT\n         CVD   R15,DOUB\n         UNPK  WORK5(5),DOUB+5(3)\n         MVZ   WORK5+4(1),=X'00'\n         TR    WORK5+4(1),TABLE\n         MVC   ERR2+17(4),WORK5+1      RC TO CALLER\n* REASON CODE\n         CVD   R0,DOUB\n         UNPK  WORK5(5),DOUB+5(3)\n         MVZ   WORK5+4(1),=X'00'\n         TR    WORK5+4(1),TABLE\n         MVC   ERR2+25(4),WORK5+1      RS TO CALLER\n         MVC   WORKA(L'ERR2),ERR2\n         PUT   EDT3RPT,WORKA\n*\n         LM    R4,R7,ERREGS\nERRLOOP2 EQU   *\n         PUT   EDT3RPT,(R4)           WRITE ERRTAB INFO\n         BXLE  R4,R6,ERRLOOP2         ..ENTIRE TABLE..\n         MVC   RC(4),=F'16'\n         B     WRAPUP\n*\nMVCESO   MVC   ESOTERIC(0),0(R2)       SETUP ESOTERIC\n*\n*\nEXIT     EQU   *\n         L     R15,RC                  RC BACK TO REXX\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=(15)\n         EJECT\n***\n* OVERRUN - ESOTERIC NAME TABLE TOO SMALL\n***\n         SPACE\nOVERRUN  EQU   *\n         PUT   EDT1RPT,ERR3           WRITE ERROR MSG\n         CLOSE (EDT1RPT)\n         LA    R15,24                 TELL REXX TO REPORT THIS\n         ST    R15,RC                 SAVE RC\n         B     EXIT                   TERMINATE\n         SPACE 3\n***\n* EDTERR - EDTINFO NON-ZERO RETURN\n***\n         SPACE\nEDTERR   EQU   *\n* RETURN CODE\n         ST    R15,RC                  SAVE RC\n         CVD   R15,DOUB\n         UNPK  WORK5(5),DOUB+5(3)\n         MVZ   WORK5+4(1),=X'00'\n         TR    WORK5+4(1),TABLE\n         MVC   ERR2+17(4),WORK5+1      RC TO CALLER\n* REASON CODE\n         CVD   R0,DOUB\n         UNPK  WORK5(5),DOUB+5(3)\n         MVZ   WORK5+4(1),=X'00'\n         TR    WORK5+4(1),TABLE\n         MVC   ERR2+25(4),WORK5+1      RS TO CALLER\n         MVC   WORKA(L'ERR2),ERR2\n         PUT   EDT1RPT,WORKA\n*\n         LM    R4,R7,ERREGS\nERRLOOP  EQU   *\n         PUT   EDT1RPT,(R4)           WRITE ERRTAB INFO\n         BXLE  R4,R6,ERRLOOP          ..ENTIRE TABLE..\n         CLOSE (EDT1RPT)\n         LA    R15,24                 TELL REXX TO REPORT THIS\n         ST    R15,RC                 SAVE RC\n         B     EXIT\n*\n         SPACE 3\n         AIF   ('&STK' EQ 'NO').SKPHSC2\n***********************************************************************\n* HSC CODE START 2 - THIS CODE INCLUDED IF STK SILOS ARE USED *********\n***********************************************************************\nMFL      SLSXREQ MF=L\n***********************************************************************\n* HSC CODE END 2                                              *********\n***********************************************************************\n.SKPHSC2 ANOP\n         SPACE 3\n         LTORG\n         EJECT\n*=====================================================================*\n*                         D A T A   A R E A S                         *\n*=====================================================================*\n         SPACE\nDOUB     DS   D\nRC       DC   F'0'\nAESO     DS   A(0)\nAEDT2    DS   A(0)\nERREGS   DC   A(ERRTAB,0,80,ERRTABE)\n*\nTABLE    DC   C'0123456789ABCDEF'\nMASK     DC   X'402020202120'\nERR1     DC   C' GETMAIN ERR,R15=XXXX'\nERR2     DC   C' EDTINFO ERR,R15=XXXX,R0=XXXX'\nERR3     DC   C' ESOTERIC NAME TABLE OVERRUN - ENLARGE IT'\n*\nSORTPTRS  DS    0D\nBEGNAMES  DC    A(ESOTABLE)\nNAMELEN   DC    F'8'\nNAMEND    DC    A(0)\n#SORT     DC    F'0'\nSORTNAME  DC    CL8' '\n          SPACE\n*\nSILOSORT  DS    0D\nASILOBEG  DC    A(SILOTAB)\nSILOLEN   DC    F'4'\nASILOEND  DC    A(0)\n#SILO     DC    F'0'\nSILONAME  DC    CL4' '\n          SPACE\nSILOREGS DS   0A\n         DC   A(SILOTAB)\n         DC   A(0)\n         DC   F'4'\nASILOEN2 DC   A(0)\n*\nASLSXCAL DC   A(0)\nACURESO  DC   A(ESOTABLE)\n#ESO     DC   A(0)     #ESOTERICS TO DISPLAY\n*\nWORK3    DS   CL3\nWORK5    DS   CL5\nWORKA    DC   CL80' '\n*\n*\nDEVTAB   DC   X'20800840411004'\n#DEVS    DC   A((*-DEVTAB)-1)\n*\n**********************************\n*   D E V I C E   C L A S S E S  *\n* 80=TAPE                        *\n* 40=COMMUNICATIONS              *\n* 41=CTC                         *\n* 20=DASD                        *\n* 10=GRAPHICS                    *\n* 08=UNIT RECORD                 *\n* 04=CHARACTER READERS           *\n**********************************\n*\nTRTAB    DC    C'0123456789ABCDEF'\n**-------------------------------------------------------------------**\n*|        ISPF VARIABLES                                             |*\n**-------------------------------------------------------------------**\n**********************-ISPF VARIABLES-*********************************\n         DS    0F\nEDTPAN   DC    CL8'ESOPAN2'  *** TEST ***\nDISPLAY  DC    CL8'DISPLAY'\nVDEFINE  DC    CL8'VDEFINE'\nCHAR     DC    CL8'CHAR'\nLEN1     DC    F'1'\nLEN8     DC    F'8'\nLEN50    DC    F'50'\nCLOSE    DC    C'CLOSE'\n#CHOSEN  DC    F'0'\nPARMS    DC    A(PARM1,PARM2,PARM3)\nPARM1    DC    CL8' '\nPARM2    DC    C'8'\nPARM3    DC    C'S'\nAEDT3    DC    A(0)\n*\n         SPACE 3\nBLANKS   DC    CL70' '\n         SPACE\nSAVE47   DS    4F\nSAVE57   DS    3F\nSAVE15   DS    F\nAUCBS    DS    A\nCORE     DC    F'60000'     GETMAIN SIZE (MAX=15000 UCB'S : 4 X 15000)\nLINECNT  DC    PL2'0'\nESOTERIC DC    CL8' '\nVOLID    DS    0CL8\n         DC    C'('\nVOLSER   DC    CL6' '\n         DC    C')'\nUCBNAME4 DS    CL5\nSYSLINE  DC    C'  S Y S T E M  =  '\nMYSYSID  DC    CL4' '\nDASHES   DC    C'  ************'\nTITLE    DC    C'  *          *  NO. DEVICES :XXXXXX'\nUCBAREA  DS    CL48\nUCBWORK  DC    XL100'00'\n#ESOS    DC    A(0)     #ESOTERICS TOTAL\nNO       EQU   C'0'\nYES      EQU   C'1'\nHSCSW    DC    X'00'                 HSC STATUS SW\nHSCNF    EQU   X'80'                 HSC LMOD NOT FOUND IN BLDL\nHSCNA    EQU   X'40'                 HSC ENV CANNOT BE ACTIVATED\nHSCBC    EQU   X'20'                 HSC CALL RC IS NON-ZERO\n*\nSLSXCAL  DS    0CL16\n         DC    XL2'1'\n         DC    XL2'C'\n         DC    CL8'SLSXCAL'\n         DC    XL4'0'\n         PRINT NOGEN\n         DS    0D\nEDT1RPT  DCB   DDNAME=EDT1RPT,DSORG=PS,MACRF=PM\n         DS    0D\nEDT3RPT  DCB   DDNAME=EDT3RPT,DSORG=PS,MACRF=PM\n*\n*\nAFMT     DS    CL1\nASIL     DS    CL1\nAMSG1    DS    CL50\n*\nZCMD     DC    CL6'(ZCMD)'\nS01      DC    CL5'(S01)'\nES01     DC    CL7'(ESO01)'\nS02      DC    CL5'(S02)'\nES02     DC    CL7'(ESO02)'\nS03      DC    CL5'(S03)'\nES03     DC    CL7'(ESO03)'\nS04      DC    CL5'(S04)'\nES04     DC    CL7'(ESO04)'\nS05      DC    CL5'(S05)'\nES05     DC    CL7'(ESO05)'\nS06      DC    CL5'(S06)'\nES06     DC    CL7'(ESO06)'\nS07      DC    CL5'(S07)'\nES07     DC    CL7'(ESO07)'\nS08      DC    CL5'(S08)'\nES08     DC    CL7'(ESO08)'\nS09      DC    CL5'(S09)'\nES09     DC    CL7'(ESO09)'\nS10      DC    CL5'(S10)'\nES10     DC    CL7'(ESO10)'\n*\nS11      DC    CL5'(S11)'\nES11     DC    CL7'(ESO11)'\nS12      DC    CL5'(S12)'\nES12     DC    CL7'(ESO12)'\nS13      DC    CL5'(S13)'\nES13     DC    CL7'(ESO13)'\nS14      DC    CL5'(S14)'\nES14     DC    CL7'(ESO14)'\nS15      DC    CL5'(S15)'\nES15     DC    CL7'(ESO15)'\nS16      DC    CL5'(S16)'\nES16     DC    CL7'(ESO16)'\nS17      DC    CL5'(S17)'\nES17     DC    CL7'(ESO17)'\nS18      DC    CL5'(S18)'\nES18     DC    CL7'(ESO18)'\nS19      DC    CL5'(S19)'\nES19     DC    CL7'(ESO19)'\n*\nS20      DC    CL5'(S20)'\nES20     DC    CL7'(ESO20)'\nS21      DC    CL5'(S21)'\nES21     DC    CL7'(ESO21)'\nS22      DC    CL5'(S22)'\nES22     DC    CL7'(ESO22)'\nS23      DC    CL5'(S23)'\nES23     DC    CL7'(ESO23)'\nS24      DC    CL5'(S24)'\nES24     DC    CL7'(ESO24)'\nS25      DC    CL5'(S25)'\nES25     DC    CL7'(ESO25)'\nS26      DC    CL5'(S26)'\nES26     DC    CL7'(ESO26)'\nS27      DC    CL5'(S27)'\nES27     DC    CL7'(ESO27)'\nS28      DC    CL5'(S28)'\nES28     DC    CL7'(ESO28)'\nS29      DC    CL5'(S29)'\nES29     DC    CL7'(ESO29)'\n*\nS30      DC    CL5'(S30)'\nES30     DC    CL7'(ESO30)'\nS31      DC    CL5'(S31)'\nES31     DC    CL7'(ESO31)'\nS32      DC    CL5'(S32)'\nES32     DC    CL7'(ESO32)'\nS33      DC    CL5'(S33)'\nES33     DC    CL7'(ESO33)'\nS34      DC    CL5'(S34)'\nES34     DC    CL7'(ESO34)'\nS35      DC    CL5'(S35)'\nES35     DC    CL7'(ESO35)'\nS36      DC    CL5'(S36)'\nES36     DC    CL7'(ESO36)'\nS37      DC    CL5'(S37)'\nES37     DC    CL7'(ESO37)'\nS38      DC    CL5'(S38)'\nES38     DC    CL7'(ESO38)'\nS39      DC    CL5'(S39)'\nES39     DC    CL7'(ESO39)'\n*\nS40      DC    CL5'(S40)'\nES40     DC    CL7'(ESO40)'\nS41      DC    CL5'(S41)'\nES41     DC    CL7'(ESO41)'\nS42      DC    CL5'(S42)'\nES42     DC    CL7'(ESO42)'\nS43      DC    CL5'(S43)'\nES43     DC    CL7'(ESO43)'\nS44      DC    CL5'(S44)'\nES44     DC    CL7'(ESO44)'\nS45      DC    CL5'(S45)'\nES45     DC    CL7'(ESO45)'\nS46      DC    CL5'(S46)'\nES46     DC    CL7'(ESO46)'\nS47      DC    CL5'(S47)'\nES47     DC    CL7'(ESO47)'\nS48      DC    CL5'(S48)'\nES48     DC    CL7'(ESO48)'\nS49      DC    CL5'(S49)'\nES49     DC    CL7'(ESO49)'\n*\nS50      DC    CL5'(S50)'\nES50     DC    CL7'(ESO50)'\nS51      DC    CL5'(S51)'\nES51     DC    CL7'(ESO51)'\nS52      DC    CL5'(S52)'\nES52     DC    CL7'(ESO52)'\nS53      DC    CL5'(S53)'\nES53     DC    CL7'(ESO53)'\nS54      DC    CL5'(S54)'\nES54     DC    CL7'(ESO54)'\nS55      DC    CL5'(S55)'\nES55     DC    CL7'(ESO55)'\nS56      DC    CL5'(S56)'\nES56     DC    CL7'(ESO56)'\nS57      DC    CL5'(S57)'\nES57     DC    CL7'(ESO57)'\nS58      DC    CL5'(S58)'\nES58     DC    CL7'(ESO58)'\nS59      DC    CL5'(S59)'\nES59     DC    CL7'(ESO59)'\n*\nS60      DC    CL5'(S60)'\nES60     DC    CL7'(ESO60)'\nS61      DC    CL5'(S61)'\nES61     DC    CL7'(ESO61)'\nS62      DC    CL5'(S62)'\nES62     DC    CL7'(ESO62)'\nS63      DC    CL5'(S63)'\nES63     DC    CL7'(ESO63)'\nS64      DC    CL5'(S64)'\nES64     DC    CL7'(ESO64)'\nS65      DC    CL5'(S65)'\nES65     DC    CL7'(ESO65)'\nS66      DC    CL5'(S66)'\nES66     DC    CL7'(ESO66)'\nS67      DC    CL5'(S67)'\nES67     DC    CL7'(ESO67)'\nS68      DC    CL5'(S68)'\nES68     DC    CL7'(ESO68)'\nS69      DC    CL5'(S69)'\nES69     DC    CL7'(ESO69)'\n*\nS70      DC    CL5'(S70)'\nES70     DC    CL7'(ESO70)'\n*\nFMT      DC    CL5'(FMT)'\nSIL      DC    CL5'(SIL)'\nMSG1     DC    CL6'(MSG1)'\n*\nAZCMD    DS    CL50\n*\nAS01     DS    CL1\nAS02     DS    CL1\nAS03     DS    CL1\nAS04     DS    CL1\nAS05     DS    CL1\nAS06     DS    CL1\nAS07     DS    CL1\nAS08     DS    CL1\nAS09     DS    CL1\n*\nAS10     DS    CL1\nAS11     DS    CL1\nAS12     DS    CL1\nAS13     DS    CL1\nAS14     DS    CL1\nAS15     DS    CL1\nAS16     DS    CL1\nAS17     DS    CL1\nAS18     DS    CL1\nAS19     DS    CL1\n*\nAS20     DS    CL1\nAS21     DS    CL1\nAS22     DS    CL1\nAS23     DS    CL1\nAS24     DS    CL1\nAS25     DS    CL1\nAS26     DS    CL1\nAS27     DS    CL1\nAS28     DS    CL1\nAS29     DS    CL1\n*\nAS30     DS    CL1\nAS31     DS    CL1\nAS32     DS    CL1\nAS33     DS    CL1\nAS34     DS    CL1\nAS35     DS    CL1\nAS36     DS    CL1\nAS37     DS    CL1\nAS38     DS    CL1\nAS39     DS    CL1\n*\nAS40     DS    CL1\nAS41     DS    CL1\nAS42     DS    CL1\nAS43     DS    CL1\nAS44     DS    CL1\nAS45     DS    CL1\nAS46     DS    CL1\nAS47     DS    CL1\nAS48     DS    CL1\nAS49     DS    CL1\n*\nAS50     DS    CL1\nAS51     DS    CL1\nAS52     DS    CL1\nAS53     DS    CL1\nAS54     DS    CL1\nAS55     DS    CL1\nAS56     DS    CL1\nAS57     DS    CL1\nAS58     DS    CL1\nAS59     DS    CL1\n*\nAS60     DS    CL1\nAS61     DS    CL1\nAS62     DS    CL1\nAS63     DS    CL1\nAS64     DS    CL1\nAS65     DS    CL1\nAS66     DS    CL1\nAS67     DS    CL1\nAS68     DS    CL1\nAS69     DS    CL1\n*\nAS70     DS    CL1\n*\nAESO01   DS    CL8\nAESO02   DS    CL8\nAESO03   DS    CL8\nAESO04   DS    CL8\nAESO05   DS    CL8\nAESO06   DS    CL8\nAESO07   DS    CL8\nAESO08   DS    CL8\nAESO09   DS    CL8\n*\nAESO10   DS    CL8\nAESO11   DS    CL8\nAESO12   DS    CL8\nAESO13   DS    CL8\nAESO14   DS    CL8\nAESO15   DS    CL8\nAESO16   DS    CL8\nAESO17   DS    CL8\nAESO18   DS    CL8\nAESO19   DS    CL8\n*\nAESO20   DS    CL8\nAESO21   DS    CL8\nAESO22   DS    CL8\nAESO23   DS    CL8\nAESO24   DS    CL8\nAESO25   DS    CL8\nAESO26   DS    CL8\nAESO27   DS    CL8\nAESO28   DS    CL8\nAESO29   DS    CL8\n*\nAESO30   DS    CL8\nAESO31   DS    CL8\nAESO32   DS    CL8\nAESO33   DS    CL8\nAESO34   DS    CL8\nAESO35   DS    CL8\nAESO36   DS    CL8\nAESO37   DS    CL8\nAESO38   DS    CL8\nAESO39   DS    CL8\n*\nAESO40   DS    CL8\nAESO41   DS    CL8\nAESO42   DS    CL8\nAESO43   DS    CL8\nAESO44   DS    CL8\nAESO45   DS    CL8\nAESO46   DS    CL8\nAESO47   DS    CL8\nAESO48   DS    CL8\nAESO49   DS    CL8\n*\nAESO50   DS    CL8\nAESO51   DS    CL8\nAESO52   DS    CL8\nAESO53   DS    CL8\nAESO54   DS    CL8\nAESO55   DS    CL8\nAESO56   DS    CL8\nAESO57   DS    CL8\nAESO58   DS    CL8\nAESO59   DS    CL8\n*\nAESO60   DS    CL8\nAESO61   DS    CL8\nAESO62   DS    CL8\nAESO63   DS    CL8\nAESO64   DS    CL8\nAESO65   DS    CL8\nAESO66   DS    CL8\nAESO67   DS    CL8\nAESO68   DS    CL8\nAESO69   DS    CL8\n*\nAESO70   DS    CL8\nSILMSG   DC   CL80' \"*\" DENOTES UCB IS A SILO TAPE DEVICE'\n*\nESOTAB   DS    CL560    (70 POSSIBLE ENTRIES X 8)\nESOTABLE DS    CL560     70 ESOTERIC ENTRIES IS MAX=(70 X 8)\nESOEND   EQU  *\n*\nERRTAB   EQU  *\n         DC   CL80' RC  MEANING'\n         DC   CL80' =================================================='\n         DC   CL80' 00  REQUEST GRANTED'\n         DC   CL80'     01 INPUT UNIT NAME NOT FOUND IN EDT'\n         DC   CL80' 04  REQUEST GRANTED BUT CK REASON CODES'\n         DC   CL80'     01 INPUT DEV #S DON''T BELONG IN SAME GRP'\n         DC   CL80'     02 INPUT DEV #S DON''T BELONG IN SAME UNIT NAM'\n         DC   CL80' 08  DATA IN INPUT PARMS INVALID, CK REASON CODES'\n         DC   CL80'     01 INPUT UNIT NAME NOT FOUND IN EDT'\n         DC   CL80'     02 INPUT UNIT TYPE NOT FOUND IN EDT'\n         DC   CL80'     03 ONE OR MORE INPUT DEV #S INVALID'\n         DC   CL80'     04 INSUFFICIENT STORAGE TO HOLD EDT INFO'\n         DC   CL80'     05 MAXELIG FUNC NEEDS GENERIC INPUT DEVTYPE'\n         DC   CL80'     06 CALLER REQUESTED NO FUNCTIONS'\n         DC   CL80'     07 CALLER REQUESTED AN INVALID FUNCTION'\n         DC   CL80'     08 REQUIRED INPUT IS INVALID'\n         DC   CL80' 0C  DYNAMIC CONFIG CHG HAS DISALLOWED THIS FUNC.'\n         DC   CL80' 10  STORAGE COULD NOT BE OBTAINED FOR THE REQ.'\n         DC   CL80' 18  UNEXPECTED SYSTEM ERROR'\nERRTABE  EQU  *\n* ERROR MSGS\nMSG#2    DC    CL40' ** 1 ENTRY IS MINIMUM **'\nMSG#4    DC    CL40' SILO REQUEST FAILED, RC=XX'\nMSG#5    DC    CL40' #SILO UCBS HAS EXCEEDED TABLE - ENLARGE'\nMSG#6    DC    CL40' NO DISPLAY REQUESTED ... TRY AGAIN'\nMSG#7    DC    CL40' HSC ENVIRON UNAVAIL - NO SILO DISPLY'\n         SPACE 5\nSILOTAB  DS   CL(4*500) 500 SILO UCB'S SUPPORTED\nSILOTEND EQU  *\n         EJECT\n         AIF   ('&STK' EQ 'NO').SKPHSC3\n***********************************************************************\n* HSC CODE START 3 - THIS CODE INCLUDED IF STK SILOS ARE USED *********\n***********************************************************************\n         SLSXREQM\n***********************************************************************\n* HSC CODE END 3                                              *********\n***********************************************************************\n.SKPHSC3 ANOP\n         PRINT NOGEN\nUCB      DSECT\n         IEFUCBOB\nMYCVT    CVT   DSECT=YES,LIST=YES\n* REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT682/FILE682.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT682", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}