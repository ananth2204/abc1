{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "PETERT", "INMTNODE": "HC", "INMTUID": "CTCBANK", "INMFTIME": "20140715104857000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1528436, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 132, "INMBLKSZ": 27984, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "PETERT.HC.MVSCB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"PETERT.HC.MVSCB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27984, "DS1LRECL": 132, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 10017, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "140196", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\r'", "DS1LSTAR": "b'\\x00\\x1b\\x04'", "DS1TRBAL": "b'\\x8f\\xf8'"}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03@\\x00\\x04\\x9a\\xfdP'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03@\\x00\\x04\\x9a\\xfdP'", "b'X\\xf4\\xb2\\xc0\\x00\\x00\\x00/\\x00\\x00\\x00/\\x00\\x0c\\x00\\r'", "b'X\\xf4\\xb2\\xc0\\x00\\x00\\x002\\x00\\x00\\x002\\x00\\x0c\\x00\\r'", "b'X\\xf4\\xb2\\xc0\\x00\\x00\\x004\\x00\\x00\\x004\\x00\\x0c\\x00\\r'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"CVT": {"ttr": 257, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DLSPDATA": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ERBSMF": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "HCCOPYR": {"ttr": 6664, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x13(\\x8f\\x01\\x13(\\x8f\\x071\\x00\\x04\\x00\\x04\\x00\\x00\\xd7\\xc5\\xe3\\xc5\\xd9\\xe3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-10-15T00:00:00", "modifydate": "2013-10-15T07:31:16", "lines": 4, "newlines": 4, "modlines": 0, "user": "PETERT"}, "text": "static char hccopyr\u00dd\u00a8 =\n   \"This program designed by HC Tsai \"\n   \"Email: mz055t@ms13.hinet.net\\n\"\n   \"Linkedin: http://tw.linkedin.com/pub/hc-tsai/20/7a7/b27\\n\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HCR4F2": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00S\\x01\\x13(o\\x01\\x13(o\\x06@\\x00U\\x00U\\x00\\x00\\xd7\\xc5\\xe3\\xc5\\xd9\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-10-13T00:00:00", "modifydate": "2013-10-13T06:40:53", "lines": 85, "newlines": 85, "modlines": 0, "user": "PETERT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "HCSGD": {"ttr": 1285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct hcsgd {\n unsigned char  hcfname\u00dd30\u00a8;  /* STORAGE GROUP NAME           */\n unsigned char  hcfdesc\u00dd120\u00a8; /* DESCRIPTION OF STORAGE GROUP */\n unsigned char  hcftype;      /* STORAGE GROUP TYPE SEE       */\n };\n\n/* Values for field \"hcftype\" */\n#define hcsgdlen 0x97\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "HEXDUMP": {"ttr": 6913, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x007\\x01\\x13\\x12\\x1f\\x01\\x13)O\\x04W\\x000\\x005\\x00\\x00\\xd7\\xc5\\xe3\\xc5\\xd9\\xe3@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2013-05-01T00:00:00", "modifydate": "2013-10-21T04:57:37", "lines": 48, "newlines": 53, "modlines": 0, "user": "PETERT"}, "text": "#ifndef HEXDUMP_COLS\n#define HEXDUMP_COLS 16\n#endif\n\nvoid hexdump(void *mem, unsigned int len)\n{\n unsigned int i, j;\n\n for(i = 0; i < len + ((len % HEXDUMP_COLS) ? (HEXDUMP_COLS - len % HEXDUMP_COLS) : 0); i++)\n {\n             /* print offset */\n             if(i % HEXDUMP_COLS == 0)\n             {\n                         printf(\"0x%06x: \", i);\n             }\n\n             /* print hex data */\n             if(i < len)\n             {\n                         printf(\"%02x \", 0xFF & ((char*)mem)\u00ddi\u00a8);\n             }\n             else /* end of block, just aligning for ASCII dump */\n             {\n                         printf(\"    \");\n             }\n\n             /* print ASCII dump */\n             if(i % HEXDUMP_COLS == (HEXDUMP_COLS - 1))\n             {\n                         for(j = i - (HEXDUMP_COLS - 1); j <= i; j++)\n                         {\n                                     if(j >= len) /* end of block, not really printing */\n                                     {\n                                                 putchar(' ');\n                                     }\n                                     else if(isprint(((char*)mem)\u00ddj\u00a8)) /* printable char */\n                                     {\n                                                 putchar(0xFF & ((char*)mem)\u00ddj\u00a8);\n                                     }\n                                     else /* other char */\n                                     {\n                                                 putchar('.');\n                                     }\n                         }\n                         putchar('\\n');\n             }\n }\n}\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IECDDCE": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IECDIOCM": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEEBASEA": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEECHAIN": {"ttr": 1796, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEESMCA": {"ttr": 2049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEFUCBOB": {"ttr": 2305, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEFUCBOX": {"ttr": 2817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IGDSGD": {"ttr": 3329, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IGDSMS": {"ttr": 3585, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IGDVLD": {"ttr": 3841, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAASCB": {"ttr": 3843, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAASVT": {"ttr": 4099, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHACSD": {"ttr": 4101, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAECVT": {"ttr": 4353, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAGDA": {"ttr": 4609, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAIPA": {"ttr": 4867, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHALDA": {"ttr": 5377, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAPCCA": {"ttr": 5634, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHAPCCAT": {"ttr": 5636, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pccavt {\n void          *pccat00p;        /* -         ADDRESS OF PCCA FOR CPU 0               */\n void          *pccat01p;        /* -         ADDRESS OF PCCA FOR CPU 1               */\n void          *pccat02p;        /* -         ADDRESS OF PCCA FOR CPU 2               */\n void          *pccat03p;        /* -         ADDRESS OF PCCA FOR CPU 3               */\n void          *pccat04p;        /* -         ADDRESS OF PCCA FOR CPU 4               */\n void          *pccat05p;        /* -         ADDRESS OF PCCA FOR CPU 5               */\n void          *pccat06p;        /* -         ADDRESS OF PCCA FOR CPU 6               */\n void          *pccat07p;        /* -         ADDRESS OF PCCA FOR CPU 7               */\n void          *pccat08p;        /* -         ADDRESS OF PCCA FOR CPU 8               */\n void          *pccat09p;        /* -         ADDRESS OF PCCA FOR CPU 9               */\n void          *pccat10p;        /* -         ADDRESS OF PCCA FOR CPU 10              */\n void          *pccat11p;        /* -         ADDRESS OF PCCA FOR CPU 11              */\n void          *pccat12p;        /* -         ADDRESS OF PCCA FOR CPU 12              */\n void          *pccat13p;        /* -         ADDRESS OF PCCA FOR CPU 13              */\n void          *pccat14p;        /* -         ADDRESS OF PCCA FOR CPU 14              */\n void          *pccat15p;        /* -         ADDRESS OF PCCA FOR CPU 15              */\n void          *pccat16_31p\u00dd16\u00a8; /* -       ADDRESS OF PCCAs for CPUs 16-31      @L3A */\n void          *pccat32_63p\u00dd32\u00a8; /* -       ADDRESS OF PCCAs for CPUs 32-63      @L3A */\n };\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IHAPSA": {"ttr": 5889, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IHASCCB": {"ttr": 6657, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IKJTSVT": {"ttr": 6660, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "STOHXS": {"ttr": 6915, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00)\\x01\\x13\\x13/\\x01\\x13\\x13_\\x08\\x03\\x00^\\x00\\x04\\x00\\x00\\xd7\\xc5\\xe3\\xc5\\xd9\\xe3@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2013-05-12T00:00:00", "modifydate": "2013-05-15T08:03:29", "lines": 94, "newlines": 4, "modlines": 0, "user": "PETERT"}, "text": "/* Function: convert char strng to hex string format   */\nchar *StoHxS(char *str, int inLength)\n{\n  char *cpold;\n  char *cpnew;\n  char *newstr;\n  int i;\n  int j;\n  int power;\n  int hcDecimal = 0;\n\n  int hcLength;\n  hcLength = (inLength*2) + 1;\n  newstr = (char *)malloc(hcLength);\n  memset(newstr,0,hcLength);                     /* zero buffer    */\n\n  cpold = str;\n  cpnew = newstr;\n\n  for(i = 0; i < inLength; i++) {\n    sprintf(cpnew, \"%02X\", (char)(*cpold++));\n    cpnew+=2;\n  }\n\n  *(cpnew) = '\\0';\n\n  j = strlen(newstr);\n  printf(\"Hex string of length %d\\n\", j);\n  for(i = j - 1; i >= 0; i--) {\n    switch(newstr\u00ddi\u00a8) {\n      case '0':\n          power = 0;\n          break;\n      case '1':\n          power = 1;\n          break;\n      case '2':\n          power = 2;\n          break;\n      case '3':\n          power = 3;\n          break;\n      case '4':\n          power = 4;\n          break;\n      case '5':\n          power = 5;\n          break;\n      case '6':\n          power = 6;\n          break;\n      case '7':\n          power = 7;\n          break;\n      case '8':\n          power = 8;\n          break;\n      case '9':\n          power = 9;\n          break;\n      case 'A':\n      case 'a':\n          power = 10;\n          break;\n      case 'B':\n      case 'b':\n          power = 11;\n          break;\n      case 'C':\n      case 'c':\n          power = 12;\n          break;\n      case 'D':\n      case 'd':\n          power = 13;\n          break;\n      case 'E':\n      case 'e':\n          power = 14;\n          break;\n      case 'F':\n      case 'f':\n          power = 15;\n          break;\n      default:\n          power = 0;\n          break;\n    }\n    hcDecimal = hcDecimal + (power * pow(16,(j-i-1)));\n  }\n  printf(\"The hcDecimal is %d\\n\", hcDecimal);\n\n  return(newstr);\n}\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VOLINFOD": {"ttr": 6662, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT913/CBT.V500.FILE913.PDS/MVSCB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT913/CBT.V500.FILE913.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}