      *=======================*                                          R080101
       IDENTIFICATION DIVISION.                                          R080101
      *=======================*                                          R080101
       PROGRAM-ID.    SMF30EX1.                                          R080101
       AUTHOR.        KANG DENGSONG.                                     R080101
       DATE-WRITTEN.  01 JAN 2008.                                       R080101
      *================================================================* R081211
      *  SSSSSSSSSS    MMMMMMMMMMMMM    FFFFFFFFF  33333333   00000000   R081211
      * SSSSSSSSSSS   MMMMMMMMMMMMMMM   FFFFFFFFF  33333333  0000000000  R081211
      * SSSS          MMMMMMMMMMMMMMM   FFFF           3333  000    000  R081211
      * SSSS          MMM   MMM   MMM   FFFF           3333  000    000  R081211
      * SSSS          MMM   MMM   MMM   FFFF           3333  000    000  R081211
      * SSSSSSSSS     MMM   MMM   MMM   FFFFFFFFF  33333333  000    000  R081211
      *    SSSSSSSS   MMM   MMM   MMM   FFFFFFFFF  33333333  000    000  R081211
      *       SSSSS   MMM   MMM   MMM   FFFF           3333  000    000  R081211
      *       SSSSS   MMM   MMM   MMM   FFFF           3333  000    000  R081211
      *       SSSSS   MMM   MMM   MMM   FFFF           3333  000    000  R081211
      *       SSSSS   MMM   MMM   MMM   FFFF           3333  000    000  R081211
      *SSSSSSSSSSSS   MMM   MMM   MMM   FFFF       33333333  0000000000  R081211
      *SSSSSSSSSSS    MMM   MMM   MMM   FFFF       33333333   00000000   R081211
      *================================================================= R081211
      ****************************************************************** R081211
      *================================================================* R081211
      *   This program is distributed without warranty of any kind,    * R081211
      * including  (without limitation) warranties of merchantability  * R081211
      * and of fitness for a particular purpose. it is up to the user  * R081211
      * to make his own determination of the usefulness of this progra * R081211
      * in his own system.                                             * R081211
      *================================================================* R081211
      *================================================================* R080101
      *  CREATE DATE: JAN 01,2008                                      * R080101
      *  AUTHOR     : KANG DENGSONG                                    * R080101
      *  VERSION    : V1.00                                            * R080101
      *================================================================* R080101
      *Pls add option AR(E) when you compile It.*                      * R080101
      *This Program Is To Extract Data When Type=30 From SMF           * R080101
      *Will Extract Below Section:                                     * R080101
      *  1,Header/Self-Defining Section                                * R080101
      *  2,Subsystem Section                                           * R080101
      *  3,Identification Section                                      * R080101
      *  4,I/O Activity Section                                        * R080101
      *  5,Completion Section                                          * R080101
      *  6,Processor Accounting Section                                * R080101
      *  7,Storage And Paging Section                                  * R080101
      *  8,Performance Section                                         * R080101
      *  9,Operator Section                                            * R080101
      * 10,Appc/Mvs Resource Section                                   * R080101
      * 11,Appc/Mvs Cumulative Resource Section                        * R080101
      *================================================================* R080101
      *================================================================* R080101
      * Change Log                                                     * R080101
      *================================================================* R080101
      *  Logno      mender               Desc                          * R080101
      *----------------------------------------------------------------* R080101
      * R080101     Kangdengsong        Initial Version                * R080101
      *  R081211    Kangdengsong        Updated Version                * R081211
      *             1) Add user id as selection criteria from SYSIN    * R081211
      *             2) Add Execute Channel Program (EXCP) Section      * R081211
      *             3) Null                                            * R081211
      *================================================================* R080101
      *=====================*                                            R080101
       ENVIRONMENT DIVISION.                                             R080101
      *=====================*                                            R080101
       CONFIGURATION SECTION.                                            R080101
       SOURCE-COMPUTER. IBM-ES9000.                                      R080101
       OBJECT-COMPUTER. IBM-ES9000.                                      R080101
       INPUT-OUTPUT SECTION.                                             R080101
       FILE-CONTROL.                                                     R080101
           SELECT SMF30IN   ASSIGN         TO SMF30IN                    R080101
                            ORGANIZATION   IS SEQUENTIAL                 R080101
                            ACCESS MODE    IS SEQUENTIAL                 R080101
                            FILE STATUS    IS WS-SMFIN-ST.               R080101
           SELECT SMF30OUT  ASSIGN         TO SMF30OUT                   R080101
                            ORGANIZATION   IS SEQUENTIAL                 R080101
                            ACCESS MODE    IS SEQUENTIAL                 R080101
                            FILE STATUS    IS WS-SMFOUT-ST.              R080101
      *=============*                                                    R080101
       DATA DIVISION.                                                    R080101
      *=============*                                                    R080101
       FILE SECTION.                                                     R080101
       FD  SMF30IN                                                       R080101
           RECORDING MODE IS V                                           R080101
           RECORD CONTAINS 394 TO 32752 CHARACTERS                       R080101
           BLOCK CONTAINS 0 CHARACTERS.                                  R080101
       01  SMF30IN-REC.                                                  R080101
           05 SMF30IN-X  PIC  X(01)  OCCURS 394 TO 32752 TIMES           R080101
              DEPENDING ON  WS-SMFIN-LEN.                                R080101
      *                                                                  R080101
       FD  SMF30OUT.                                                     R080101
       01  SMF30-ALL-X.                                                  R080101
           COPY SMF30CPX.                                                R080101
      *                                                                  R080101
                                                                         R080101
       WORKING-STORAGE SECTION.                                          R080101
       01  FILLER                          PIC X(50) VALUE               R080101
              'SMF30EX1 WORKING STORAGE START HERE'.                     R080101
       01  WS-SW.                                                        R080101
           05 WS-WHEN-COMPILED             PIC X(22) VALUE SPACE.        R080101
           05 WS-BINARY-3                  PIC 9(09)  COMP VALUE ZERO.   R080101
           05 FILLER REDEFINES WS-BINARY-3.                              R080101
              10 WS-BYTE-X                 OCCURS 4 TIMES PIC X(01).     R080101
TSTKDS     05 WS-TEST                      PIC -Z,ZZZ,Z99.99.            R080101
           05 WS-INT-DAY                   PIC 9(08) VALUE ZERO.         R080101
           05 WS-COMP-4                    PIC 9(04) VALUE ZERO.         R080101
           05 MAX-EXCP                     PIC 9(04) COMP VALUE 50.      R080101
           05 WS-COMP-9                    PIC 9(09) VALUE ZERO.         R080101
           05 WS-SMF30DCT                  PIC 9(12) comp VALUE ZERO.    R080101
           05 WS-SMF30BLK                  PIC 9(12) comp VALUE ZERO.    R080101
           05 WS-END-EOF                   PIC X(01) VALUE SPACE.        R080101
              88 K-END-FILE                VALUE 'Y'.                    R080101
              88 K-X-END-FILE              VALUE 'N'.                    R080101
           05 WS-TIME-SECOND               PIC 9(16)V99 VALUE ZERO.      R080101
           05 WS-SIN-USER                  PIC X(07) VALUE SPACE.        R080101
           05 WS-SIN-JOB                   PIC X(50) VALUE SPACE.        R080101
           05 FILLER REDEFINES WS-SIN-JOB.                               R080101
              10 WS-JOB-NAME           PIC X(08).                        R080101
              10 WS-SIN-JOB-PLUS           PIC X(42).                    R080101
           05 WS-SIN-DATE                  PIC X(50) VALUE SPACE.        R080101
           05 FILLER REDEFINES WS-SIN-DATE.                              R080101
              08 WS-SIN-START-DT           PIC 9(08).                    R080101
              08 FILLER REDEFINES WS-SIN-START-DT.                       R080101
                 10 WS-SIN-ST-YYYY         PIC 9(04).                    R080101
                 10 WS-SIN-ST-MM           PIC 9(02).                    R080101
                 10 WS-SIN-ST-DD           PIC 9(02).                    R080101
              08 WS-SIN-SEP                PIC X(01).                    R080101
              08 WS-SIN-END-DT             PIC 9(08).                    R080101
              08 FILLER REDEFINES WS-SIN-END-DT.                         R080101
                 10 WS-SIN-ED-YYYY         PIC 9(04).                    R080101
                 10 WS-SIN-ED-MM           PIC 9(02).                    R080101
                 10 WS-SIN-ED-DD           PIC 9(02).                    R080101
              08 WS-SIN-DT-PLUS            PIC X(33).                    R080101
           05 WS-SYSIN-TIME                PIC X(50) VALUE SPACE.        R080101
           05 FILLER REDEFINES WS-SYSIN-TIME.                            R080101
              10 WS-SIN-TM-ST-HH           PIC 9(02).                    R080101
              10 WS-SIN-TM-ST-MM           PIC 9(02).                    R080101
              10 WS-SIN-TM-ST-SS           PIC 9(02).                    R080101
              10 WS-SIN-SEP                PIC X(01).                    R080101
              10 WS-SIN-TM-ED-HH           PIC 9(02).                    R080101
              10 WS-SIN-TM-ED-MM           PIC 9(02).                    R080101
              10 WS-SIN-TM-ED-SS           PIC 9(02).                    R080101
           05 WS-I                         PIC 9(05) VALUE ZERO.         R080101
           05 WS-J                         PIC 9(05) VALUE ZERO.         R080101
           05 WS-P                         PIC 9(05) VALUE ZERO.         R081211
           05 WS-KEP-POS                   PIC 9(05) VALUE 1.            R080101
           05 WS-GO-OR-SKIP                PIC X(01) VALUE SPACE.        R080101
              88 WS-GO                               VALUE 'G'.          R080101
              88 WS-SKIP                             VALUE 'S'.          R080101
           05 WS-MODE                      PIC X(01) VALUE SPACE.        R080101
              88 WS-PATTERN-MOD                      VALUE 'Y'.          R080101
              88 WS-FULL-MOD                         VALUE 'N'.          R080101
           05 WS-USER-MODE                 PIC X(01) VALUE SPACE.        R081211
              88 WS-PATTERN-USER-MOD                 VALUE 'Y'.          R081211
              88 WS-FULL-USER-MODE                   VALUE 'N'.          R081211
           05 WS-USER-LEN                  PIC 9(02) VALUE ZERO.         R081211
           05 WS-ST-TIME-INT               PIC 9(09) VALUE ZERO.         R080101
           05 WS-ED-TIME-INT               PIC 9(09) VALUE ZERO.         R080101
           05 WS-TIME-SECOND-X             PIC Z,ZZZ,Z99.99.             R080101
           05 WS-START-POS                 PIC 9(05) VALUE ZERO.         R080101
           05 WS-CURR-POS                  PIC 9(05) VALUE ZERO.         R080101
           05 WS-REC-LEN                   PIC 9(05) VALUE ZERO.         R080101
           05 WS-SMFIN-LEN                 PIC 9(10) VALUE ZERO.         R080101
           05 WS-RETURN-CODE               PIC 9(02) VALUE ZERO.         R080101
           05 WS-ALL-REC-NO                PIC 9(06) VALUE ZERO.         R080101
           05 WS-REC-NO-VALID              PIC 9(06) VALUE ZERO.         R080101
           05 WS-REC-NO-INVALID            PIC 9(06) VALUE ZERO.         R080101
           05 WK-MID.                                                    R080101
              10 WK-BIN                    PIC 9(04)  BINARY.            R080101
              10 WK-MID                    REDEFINES WK-BIN.             R080101
                 15 WK-MID21               PIC X(01).                    R080101
                 15 WK-MID22               PIC X(01).                    R080101
           05 WS-TEMP-DATE-HEX             PIC X(04) VALUE ZERO.         R080101
           05 WS-TEMP-DATE                 PIC X(07) VALUE ZERO.         R080101
           05 FILLER REDEFINES WS-TEMP-DATE.                             R080101
              10 WS-TEMP-DATE-YYYY         PIC X(04).                    R080101
              10 WS-TEMP-DATE-DDD          PIC X(03).                    R080101
           05 WS-INDEX-DT1                 PIC 9(03) VALUE ZERO.         R080101
           05 WS-INDEX-DT2                 PIC 9(03) VALUE ZERO.         R080101
           05 WS-INDEX-DT3                 PIC 9(03) VALUE ZERO.         R080101
           05 WS-REC-CODE                  PIC X(04) VALUE ZERO.         R080101
           05 WS-BIN-1                     PIC 9(04) BINARY.             R080101
           05 WS-BIN-2                     PIC 9(04) BINARY.             R080101
           05 WS-BIN-3                     PIC 9(04) BINARY.             R080101
           05 WS-R1 REDEFINES WS-BIN-3.                                  R080101
                 10 WS-R11                 PIC X(01).                    R080101
                 10 WS-R12                 PIC X(01).                    R080101
           05 WS-K                         PIC 9(10) VALUE ZERO.         R080101
           05 WS-TOT-TIME                  PIC ZZ,ZZZ,ZZZ,ZZZ.99.        R080101
           05 WS-SMFIN-EOF-SW              PIC X VALUE 'N'.              R080101
               88 SW-SMFIN-EOF                   VALUE 'Y'.              R080101
               88 SW-SMFIN-NOT-EOF               VALUE 'N'.              R080101
           05 WS-RPT-EOF-SW                PIC X VALUE 'N'.              R080101
               88 SW-RPT-EOF                     VALUE 'Y'.              R080101
               88 SW-RPT-NOT-EOF                 VALUE 'N'.              R080101
       01 WS-FILE-STATUS.                                                R080101
           05 WS-SMFIN-ST                  PIC 9(02) VALUE 0.            R080101
           05 WS-PRT-ST                    PIC 9(02) VALUE 0.            R080101
           05 WS-SMFOUT-ST                 PIC 9(02) VALUE 0.            R080101
       77 K-SMF-COM-ADD                    PIC 9(03) VALUE 30.           R080101
       77 K-SMF-START-UOW                  PIC 9(01) VALUE 1.            R080101
       77 K-SMF-ACT-PRE-INTERVAL           PIC 9(01) VALUE 2.            R080101
       77 K-SMF-LAST-INTERVAL              PIC 9(01) VALUE 3.            R080101
       77 K-SMF-STEP-TOT                   PIC 9(01) VALUE 4.            R080101
       77 K-SMF-UOW-TERM                   PIC 9(01) VALUE 5.            R080101
       77 K-SMF-SYSTEM-ADD                 PIC 9(01) VALUE 6.            R080101
       77 K-FIX-POS                        PIC 9(09) VALUE 3.            R080101
       77 K-MICROSECOND                    PIC 9(07) VALUE 1000000.      R080101
       77 K-ONE-1K                         PIC 9(05) VALUE 1024.         R080101
       77 K-NULL-DATE                      PIC X(04) VALUE X'0000000F'.  R080101
       77 K-LOW-VALUE                      PIC X(01) VALUE X'00'.        R080101
       77 K-NINE                           PIC X(01) VALUE X'09'.        R080101
       77 K-TEST-REC-NO                  PIC 9(13) COMP VALUE 999999999. R080101
           COPY SMF30CPY.                                                R080101
                                                                         R080101
      *===============*                                                  R080101
       LINKAGE SECTION.                                                  R080101
      *===============*                                                  R080101
      *01  PARM-INPUT.                                                   R080101
      *    03  PARM-LENTH                      PIC 9(4) COMP.            R080101
      *    03  PARM                            PIC X(40).                R080101
       PROCEDURE DIVISION.                                               R080101
      *                                                                  R080101
      *==================*                                               R080101
       0000-MAIN-ROUTINE.                                                R080101
      *==================*                                               R080101
      *                                                                  R080101
           PERFORM A000-OPEN-FILES   THRU  A000-EXIT                     R080101
           PERFORM A200-FORMAT-SMF30 THRU  A200-EXIT                     R080101
           PERFORM 9800-CLOSE-FILES  THRU  9800-EXIT.                    R080101
      *                                                                  R080101
      *==================*                                               R080101
       0000-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           GOBACK.                                                       R080101
      *                                                                  R080101
      *==================*                                               R080101
       A000-OPEN-FILES.                                                  R080101
      *==================*                                               R080101
      *                                                                  R080101
           MOVE FUNCTION   WHEN-COMPILED     TO WS-WHEN-COMPILED         R080101
           DISPLAY 'SMF30OUT LENGTH=' LENGTH OF SMF30-ALL-X              R080101
           OPEN INPUT SMF30IN                                            R080101
           IF WS-SMFIN-ST NOT = 00                                       R080101
             MOVE   WS-SMFIN-ST                 TO WS-RETURN-CODE        R080101
             DISPLAY 'OPEN SMF30IN FILE FAIL=' WS-SMFIN-ST               R080101
             PERFORM 9000-CHECK-RETURN-CODE     THRU 9000-EXIT           R080101
           END-IF                                                        R080101
           OPEN OUTPUT SMF30OUT                                          R080101
           IF WS-SMFOUT-ST NOT = 00                                      R080101
             MOVE   WS-SMFOUT-ST                TO WS-RETURN-CODE        R080101
             DISPLAY 'OPEN SMFOUT01 FILE FAIL=' WS-SMFOUT-ST             R080101
             PERFORM 9000-CHECK-RETURN-CODE     THRU 9000-EXIT           R080101
           END-IF                                                        R080101
           INITIALIZE                           SMF30-ALL-X              R080101
           INITIALIZE                           SMF30-ALL                R080101
           SET GHEAD                         TO TRUE                     R080101
           SET GSUBS                         TO TRUE                     R080101
           SET GEXCP                         TO TRUE                     R081211
           SET GID                           TO TRUE                     R080101
           SET GIO                           TO TRUE                     R080101
           SET GCOMP                         TO TRUE                     R080101
           SET GPACC                         TO TRUE                     R080101
           SET GPAGE                         TO TRUE                     R080101
           SET GPERF                         TO TRUE                     R080101
           SET GOPER                         TO TRUE                     R080101
           SET GAPPC                         TO TRUE                     R080101
           SET GAPMV                         TO TRUE                     R080101
           ACCEPT WS-SIN-JOB                                             R080101
           ACCEPT WS-SIN-DATE                                            R080101
           ACCEPT WS-SYSIN-TIME                                          R080101
           ACCEPT WS-SIN-USER                                            R080101
TSTKDS     DISPLAY 'SELECTION :'                                         R080101
TSTKDS     DISPLAY 'WS-SIN-JOB    =' WS-SIN-JOB                          R080101
TSTKDS     DISPLAY 'WS-SIN-DATE   =' WS-SIN-DATE                         R080101
TSTKDS     DISPLAY 'WS-SYSIN-TIME =' WS-SYSIN-TIME                       R080101
TSTKDS     DISPLAY 'WS-SIN-USER   =' WS-SIN-USER                         R080101
           MOVE 8                    TO WS-I                             R080101
           PERFORM UNTIL WS-I < 1                                        R080101
              IF WS-JOB-NAME(WS-I:1) = '*'                               R080101
                 COMPUTE WS-KEP-POS = WS-I - 1                           R080101
                 IF WS-I NOT = 1                                         R080101
                    SET WS-PATTERN-MOD  TO TRUE                          R080101
                 ELSE                                                    R080101
                   IF WS-I = 1                                           R080101
                      MOVE '99999999'  TO WS-JOB-NAME                    R080101
                   END-IF                                                R080101
                 END-IF                                                  R080101
              END-IF                                                     R080101
              COMPUTE WS-I = WS-I - 1                                    R080101
           END-PERFORM                                                   R080101
           MOVE 7                    TO WS-I                             R080101
           PERFORM UNTIL WS-I < 1                                        R080101
              IF WS-SIN-USER(WS-I:1) = '*'                               R081211
                 COMPUTE WS-USER-LEN = WS-I - 1                          R081211
                 IF WS-I NOT = 1                                         R081211
                    SET WS-PATTERN-USER-MOD TO TRUE                      R081211
                 ELSE                                                    R081211
                   IF WS-I = 1                                           R081211
                      MOVE '9999999'   TO WS-SIN-USER                    R081211
                   END-IF                                                R081211
                 END-IF                                                  R081211
              END-IF                                                     R081211
              COMPUTE WS-I = WS-I - 1                                    R081211
           END-PERFORM                                                   R081211
TSTKDS*    DISPLAY 'JOB NAME=' WS-JOB-NAME(1 : WS-KEP-POS)               R080101
           IF WS-SIN-DATE(1:8) IS NOT NUMERIC                            R080101
              MOVE  09                          TO WS-RETURN-CODE        R080101
              DISPLAY 'INVALID START DATE SHOULD BE YYYYMMDD'            R080101
              WS-SIN-DATE(1:8)                                           R080101
              PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT           R080101
           ELSE                                                          R080101
              IF WS-SIN-DATE(1:8) NOT = '99999999'                       R080101
                 IF WS-SIN-ST-YYYY < 1600 OR                             R080101
                    WS-SIN-ST-YYYY > 2999 OR                             R080101
                    WS-SIN-ST-MM  = 0     OR                             R080101
                    WS-SIN-ST-MM > 12     OR                             R080101
                    WS-SIN-ST-DD = 0      OR                             R080101
                    WS-SIN-ST-DD > 31                                    R080101
                 THEN                                                    R080101
                     MOVE  09                          TO WS-RETURN-CODE R080101
                     DISPLAY 'INVALID START DATE SHOULD BE YYYYMMDD'     R080101
                     WS-SIN-DATE(1:8)                                    R080101
                     PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT    R080101
                 END-IF                                                  R080101
              END-IF                                                     R080101
           END-IF                                                        R080101
           IF WS-SIN-DATE(10:8) IS NOT NUMERIC                           R080101
              MOVE  09                          TO WS-RETURN-CODE        R080101
              DISPLAY 'INVALID END DATE SHOULD BE YYYYMMDD'              R080101
              WS-SIN-DATE(10:8)                                          R080101
              PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT           R080101
           ELSE                                                          R080101
              IF WS-SIN-DATE(10:8)  NOT = '99999999'                     R080101
                 IF WS-SIN-ED-YYYY < 1600 OR                             R080101
                    WS-SIN-ED-YYYY > 2999 OR                             R080101
                    WS-SIN-ED-MM  = 0     OR                             R080101
                    WS-SIN-ED-MM > 12     OR                             R080101
                    WS-SIN-ED-DD = 0      OR                             R080101
                    WS-SIN-ED-DD > 31                                    R080101
                 THEN                                                    R080101
                     MOVE  09                          TO WS-RETURN-CODE R080101
                     DISPLAY 'INVALID START DATE SHOULD BE YYYYMMDD'     R080101
                     WS-SIN-DATE(1:8)                                    R080101
                     PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT    R080101
                 END-IF                                                  R080101
              END-IF                                                     R080101
           END-IF                                                        R080101
           IF WS-SYSIN-TIME(1:6) IS NOT NUMERIC                          R080101
              MOVE  09                          TO WS-RETURN-CODE        R080101
              DISPLAY 'INVALID START TIME SHOULD BE HHMMSS'              R080101
              WS-SIN-DATE(10:8)                                          R080101
              PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT           R080101
           ELSE                                                          R080101
             IF( WS-SIN-TM-ST-HH >= 24 OR                                R080101
                 WS-SIN-TM-ST-MM >= 60 OR                                R080101
                 WS-SIN-TM-ST-SS >= 60 ) AND                             R080101
                 WS-SYSIN-TIME(1:6) NOT = '999999'                       R080101
             THEN                                                        R080101
                MOVE  09                          TO WS-RETURN-CODE      R080101
                DISPLAY 'INVALID START TIME SHOULD BE HHMMSS'            R080101
                WS-SIN-DATE(10:8)                                        R080101
                PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT         R080101
             END-IF                                                      R080101
           END-IF                                                        R080101
                                                                         R080101
           IF WS-SYSIN-TIME(8:6) IS NOT NUMERIC                          R080101
              MOVE  09                          TO WS-RETURN-CODE        R080101
              DISPLAY 'INVALID END TIME SHOULD BE HHMMSS'                R080101
              WS-SIN-DATE(10:8)                                          R080101
              PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT           R080101
           ELSE                                                          R080101
              IF( WS-SIN-TM-ED-HH >= 24 OR                               R080101
                  WS-SIN-TM-ED-MM >= 60 OR                               R080101
                  WS-SIN-TM-ED-SS >= 60) AND                             R080101
                  WS-SYSIN-TIME(8:6) NOT = '999999'                      R080101
              THEN                                                       R080101
                 MOVE  09                          TO WS-RETURN-CODE     R080101
                 DISPLAY 'INVALID START TIME SHOULD BE HHMMSS'           R080101
                 WS-SIN-DATE(10:8)                                       R080101
                 PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT        R080101
              END-IF                                                     R080101
                                                                         R080101
           END-IF                                                        R080101
           COMPUTE WS-ST-TIME-INT = (WS-SIN-TM-ST-HH * 3600 +            R080101
                                     WS-SIN-TM-ST-MM * 60   +            R080101
                                     WS-SIN-TM-ST-SS) * 100              R080101
           COMPUTE WS-ED-TIME-INT = (WS-SIN-TM-ED-HH * 3600 +            R080101
                                     WS-SIN-TM-ED-MM * 60   +            R080101
                                     WS-SIN-TM-ED-SS) * 100              R080101
            EXIT.                                                        R080101
      *                                                                  R080101
      *==================*                                               R080101
       A000-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A200-FORMAT-SMF30.                                                R080101
      *==================*                                               R080101
      *                                                                  R080101
           COMPUTE WS-ALL-REC-NO = 0                                     R080101
           COMPUTE WS-REC-NO-VALID = 0                                   R080101
           READ SMF30IN AT END SET K-END-FILE TO TRUE END-READ           R080101
           IF WS-PRT-ST NOT = 00                                         R080101
             MOVE WS-SMFIN-ST                  TO WS-RETURN-CODE         R080101
             DISPLAY 'READ SMFIN01 FILE FAIL=' WS-SMFIN-ST               R080101
             PERFORM 9000-CHECK-RETURN-CODE    THRU 9000-EXIT            R080101
           END-IF                                                        R080101
           PERFORM UNTIL K-END-FILE OR WS-ALL-REC-NO > K-TEST-REC-NO     R080101
              ADD 1                TO WS-ALL-REC-NO                      R080101
              IF WS-RETURN-CODE NOT = 4                                  R080101
      *          DISPLAY 'WS-ALL-REC-NO=' WS-ALL-REC-NO                  R080101
                 PERFORM A210-FORMAT-GROUP     THRU A210-EXIT            R080101
                 PERFORM A219-CHECK-GO-SKIP    THRU A219-EXIT            R080101
                 IF WS-GO                                                R080101
                    COMPUTE WS-REC-NO-VALID = WS-REC-NO-VALID + 1        R080101
                    PERFORM A220-FORMAT-SMF30OUT  THRU A220-EXIT         R080101
                    WRITE SMF30-ALL-X                                    R080101
    *******         INITIALIZE                 SMF30-ALL-X               R080101
                 END-IF                                                  R080101
                 IF WS-SMFOUT-ST NOT = 00                                R080101
                   DISPLAY 'WRITE SMF30OUT FILE FAIL=' WS-SMFIN-ST       R080101
                   MOVE WS-SMFOUT-ST              TO WS-RETURN-CODE      R080101
                   PERFORM 9000-CHECK-RETURN-CODE THRU 9000-EXIT         R080101
                 END-IF                                                  R080101
              END-IF                                                     R080101
              READ SMF30IN AT END SET K-END-FILE TO TRUE END-READ        R080101
              IF WS-SMFIN-ST NOT = 00                                    R080101
                DISPLAY 'READ SMF30 FILE FAIL=' WS-SMFIN-ST              R080101
                MOVE WS-SMFIN-ST                  TO WS-RETURN-CODE      R080101
                PERFORM 9000-CHECK-RETURN-CODE THRU 9000-EXIT            R080101
              END-IF                                                     R080101
           END-PERFORM                                                   R080101
           COMPUTE WS-REC-NO-INVALID = WS-ALL-REC-NO -                   R080101
                                       WS-REC-NO-VALID                   R080101
           DISPLAY 'TOT RECORD NO  IS =' WS-ALL-REC-NO                   R080101
           DISPLAY 'VALID RECORD NO IS =' WS-REC-NO-VALID                R080101
           DISPLAY 'INVALID RECORD NO IS =' WS-REC-NO-INVALID            R080101
           DISPLAY 'SKIP RECORD NO IS =' WS-REC-NO-INVALID               R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A200-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A210-FORMAT-GROUP.                                                R080101
      *==================*                                               R080101
      *                                                                  R080101
           COMPUTE WS-CURR-POS = 1                                       R080101
           COMPUTE WS-REC-LEN = LENGTH OF SMF30-HEAD                     R080101
           MOVE LENGTH OF SMF30-HEAD TO WS-SMFIN-LEN                     R080101
TSTKDS*    DISPLAY 'WS-CURR-POS1=' WS-CURR-POS                           R080101
TSTKDS*    DISPLAY 'SMF30IN-REC1=' SMF30IN-REC(1:WS-SMFIN-LEN)           R080101
TSTKDS*    DISPLAY 'LENGTH HEAD1=' WS-REC-LEN                            R080101
           MOVE SMF30IN-REC(WS-CURR-POS : WS-REC-LEN)                    R080101
             TO SMF30-HEAD                                               R080101
TSTKDS*    DISPLAY 'LENGTH HEAD2=' WS-REC-LEN                            R080101
      *                                                                  R080101
           COMPUTE WS-SMFIN-LEN = WS-SMFIN-LEN +                         R080101
                   SMF30SON * SMF30SLN +                                 R080101
                   SMF30ILN * SMF30ION +                                 R080101
                   SMF30ULN * SMF30UON +                                 R080101
                   SMF30TLN * SMF30TON +                                 R080101
                   SMF30CLN * SMF30CON +                                 R080101
                   SMF30ALN            +                                 R080101
                   SMF30RLN * SMF30RON +                                 R080101
                   SMF30PLN * SMF30PON +                                 R080101
                   SMF30OLN * SMF30OON +                                 R080101
                   SMF30ELN * SMF30EON +                                 R080101
                   SMF30DRL * SMF30DRN +                                 R080101
                   SMF30ARL * SMF30ARN +                                 R080101
                   SMF30OPL * SMF30OPN +                                 R080101
                   SMF30UDL * SMF30UDN +                                 R080101
                   SMF30RML * SMF30RMN +                                 R080101
                   SMF30MLN * SMF30MNO                                   R080101
TSTKDS*    move WS-SMFIN-LEN  to ws-test                                 R080101
TSTKDS*    DISPLAY 'record length=' ws-test                              R080101
      * ==============================================================*  R080101
      * PROCESSING subsystem section                                  *  R080101
      * ==============================================================*  R080101
           IF SMF30SOF NOT = 176                                         R080101
              MOVE 10                         TO WS-RETURN-CODE          R080101
TSTKDS        DISPLAY 'INVALID INPUT DATA SUB SYSTEM GROUP' SMF30SOF     R080101
TSTKDS         ':'    SMF30SID ':' SMF30WID                              R080101
              DISPLAY 'RECORD POS IS:' WS-ALL-REC-NO                     R080101
              PERFORM 9000-CHECK-RETURN-CODE  THRU 9000-EXIT             R080101
           ELSE                                                          R080101
              COMPUTE WS-CURR-POS = SMF30SOF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30SLN                              R080101
TSTKDS*       DISPLAY 'LENGTH SUBS=' WS-REC-LEN                          R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-SUBSYSTEM                                       R080101
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * PROCESSING identification section                             *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30IOF NOT = 214                                         R080101
              MOVE 10                         TO WS-RETURN-CODE          R080101
              DISPLAY 'INVALID INPUT DATA ID GROUP' SMF30IOF             R080101
TSTKDS                SMF30SID ':' SMF30WID                              R080101
              DISPLAY 'RECORD POS IS:' WS-ALL-REC-NO                     R080101
              PERFORM 9000-CHECK-RETURN-CODE  THRU 9000-EXIT             R080101
           ELSE                                                          R080101
              COMPUTE WS-CURR-POS = SMF30IOF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30ILN                              R080101
TSTKDS*       DISPLAY 'LENGTH GID =' WS-REC-LEN                          R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-ID                                              R080101
           END-IF                                                        R080101
      *    DISPLAY 'PROC SMF30-ID  SMF30TSN=' SMF30TSN                   R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * PROCESSING I/O activity sections                              *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30UON NOT = 0                                           R080101
      *       display 'SMF30ULN=' SMF30ULN                               R080101
              COMPUTE WS-CURR-POS = SMF30UOF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30ULN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-IO-ACTIVITY                                     R080101
              SET IO-VALID                  TO TRUE                      R080101
           ELSE                                                          R080101
              SET IO-INVALID                TO TRUE                      R080101
              INITIALIZE  SMF30-IO-ACTIVITY                              R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * PROCESSING completion sections                                *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30TON NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30TOF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30TLN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-COMPLET                                         R080101
              SET COMP-VALID                      TO TRUE                R080101
           ELSE                                                          R080101
              SET COMP-INVALID                    TO TRUE                R080101
           END-IF                                                        R080101
      *                                                                  R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * Processing Execute Channel Program (EXCP) Section             *  R081211
      * ==============================================================*  R081211
      *                                                                  R081211
           IF SMF30EON NOT = 0                                           R081211
              COMPUTE WS-SMF30BLK = 0                                    R081211
              COMPUTE WS-SMF30DCT = 0                                    R081211
              COMPUTE WS-CURR-POS = SMF30EOF - K-FIX-POS                 R081211
              COMPUTE WS-P = 1                                           R081211
              PERFORM UNTIL WS-P > SMF30EON                              R081211
                 COMPUTE WS-REC-LEN = SMF30ELN                           R081211
                 IF WS-P <= MAX-EXCP                                     R081211
                    MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)             R081211
                      TO SMF30-EXCP                                      R081211
                    COMPUTE WS-SMF30BLK = WS-SMF30BLK + SMF30BLK         R081211
                    COMPUTE WS-SMF30DCT = WS-SMF30DCT + SMF30DCT         R081211
                 ELSE                                                    R081211
                     MOVE 4                       TO RETURN-CODE         R081211
                 END-IF                                                  R081211
                 COMPUTE WS-P = WS-P + 1                                 R081211
                 COMPUTE WS-CURR-POS = WS-CURR-POS + WS-REC-LEN          R081211
              END-PERFORM                                                R081211
              SET GEXCP-VALID                     TO TRUE                R081211
           ELSE                                                          R081211
              SET GEXCP-INVALID                   TO TRUE                R081211
           END-IF                                                        R081211
      * ==============================================================*  R080101
      * PROCESSOR ACCOUNTING SECTION                                  *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30EON NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30COF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30CLN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-PROCSS-ACCOUT                                   R080101
              SET PACC-VALID                     TO TRUE                 R080101
           ELSE                                                          R080101
              SET PACC-INVALID                   TO TRUE                 R080101
              INITIALIZE  SMF30-PROCSS-ACCOUT                            R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * FOR ACCOUNTING SECTION LEAVE IT                               *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30AON NOT = 0                                           R080101
TSTKDS*      DISPLAY 'ACCT SECTION  NO:LENGTH' SMF30AON ':' SMF30ALN     R080101
TSTKDS       CONTINUE                                                    R080101
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * STORAGE AND PAGING SECTION                                    *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30RON NOT = 0                                           R080101
TSTKDS*       DISPLAY 'SMF30RLN    =' SMF30RLN                           R080101
TSTKDS*       DISPLAY 'SMF30-STORAGE-PAGING LEN='                        R080101
TSTKDS*        LENGTH OF SMF30-STORAGE-PAGING                            R080101
TSTKDS*       DISPLAY 'WS-CURR-POS =' WS-CURR-POS                        R080101
              COMPUTE WS-CURR-POS = SMF30ROF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30RLN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-STORAGE-PAGING                                  R080101
              SET PAGE-VALID            TO TRUE                          R080101
           ELSE                                                          R080101
              SET PAGE-INVALID          TO TRUE                          R080101
              INITIALIZE  SMF30-STORAGE-PAGING                           R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * PERFORMANCE SECTION *                                            R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30PON NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30POF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30PLN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-PERFORMANCE                                     R080101
              SET PERFORM-VALID             TO TRUE                      R080101
           ELSE                                                          R080101
              SET PERFORM-INVALID           TO TRUE                      R080101
              INITIALIZE SMF30-PERFORMANCE                               R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * OPERATOR SECTION                                              *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30OON NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30OOF - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30OLN                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-OPERATOR                                        R080101
              SET OPERATOR-VALID       TO TRUE                           R080101
           ELSE                                                          R080101
              SET OPERATOR-INVALID     TO TRUE                           R080101
              INITIALIZE SMF30-OPERATOR                                  R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      * APPC/MVS RESOURCE SECTION                                     *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30DRN NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30DRO - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30DRL                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-APPC-MVS-RES                                    R080101
              SET APPC-MVS-XESVALID      TO TRUE                         R080101
           ELSE                                                          R080101
              SET APPC-MVS-XESINVALID    TO TRUE                         R080101
              INITIALIZE SMF30-APPC-MVS-RES                              R081211
           END-IF                                                        R080101
      *                                                                  R080101
      * ==============================================================*  R080101
      *    APPC/MVS CUMULATIVE RESOURCE SECTION                       *  R080101
      * ==============================================================*  R080101
      *                                                                  R080101
           IF SMF30ARN NOT = 0                                           R080101
              COMPUTE WS-CURR-POS = SMF30ARO - K-FIX-POS                 R080101
              COMPUTE WS-REC-LEN = SMF30ARL                              R080101
              MOVE SMF30IN-REC(WS-CURR-POS:WS-REC-LEN)                   R080101
                TO SMF30-APPC-MVS-CUMU-RES                               R080101
              SET APPC-MVS-CUMU-VALID          TO TRUE                   R080101
           ELSE                                                          R080101
              SET APPC-MVS-CUMU-INVALID        TO TRUE                   R080101
              INITIALIZE SMF30-APPC-MVS-CUMU-RES                         R081211
           END-IF                                                        R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A210-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A219-CHECK-GO-SKIP.                                               R080101
      *==================*                                               R080101
      *                                                                  R080101
           SET WS-SKIP               TO TRUE                             R080101
           MOVE SMF30RSD                 TO WS-TEMP-DATE-HEX             R080101
           PERFORM R100-CONVERT-HEX-DATE THRU R100-EXIT                  R080101
           MOVE WS-TEMP-DATE             TO SMF30RSD-X                   R080101
           IF SMF30RSD-X NOT = 0                                         R080101
                COMPUTE WS-INT-DAY = FUNCTION DATE-OF-INTEGER(           R080101
                FUNCTION INTEGER-OF-DAY(SMF30RSD-X))                     R080101
           ELSE                                                          R080101
                COMPUTE WS-INT-DAY = 0                                   R080101
TSTKDS          DISPLAY 'INVALID DATE SMF30RSD-X : JOB ID=' SMF30RSD-X   R080101
TSTKDS                  SMF30JNM-X                                       R080101
           END-IF                                                        R080101
TSTKDS*    DISPLAY 'SMF30JBN=' SMF30JBN                                  R080101
           IF (WS-INT-DAY >= WS-SIN-START-DT AND                         R080101
               WS-INT-DAY <= WS-SIN-END-DT) OR                           R080101
              (WS-SIN-START-DT = '99999999' AND                          R080101
               WS-SIN-END-DT   = '99999999') OR WS-INT-DAY = 0           R080101
           THEN                                                          R080101
TSTKDS*       DISPLAY 'PASS 1'                                           R080101
              IF (SMF30RST >= WS-ST-TIME-INT AND                         R080101
                  SMF30RST <= WS-ED-TIME-INT AND                         R080101
                  WS-SIN-START-DT = WS-SIN-END-DT) OR                    R080101
                 (WS-SIN-START-DT < WS-SIN-END-DT AND                    R080101
                  WS-INT-DAY = WS-SIN-START-DT    AND                    R080101
                  SMF30RST >= WS-ST-TIME-INT)     OR                     R080101
                 (WS-SIN-START-DT < WS-SIN-END-DT AND                    R080101
                  WS-INT-DAY = WS-SIN-END-DT      AND                    R080101
                  SMF30RST <= WS-ED-TIME-INT)     OR                     R080101
                  (WS-SIN-START-DT < WS-SIN-END-DT AND                   R080101
                   WS-INT-DAY < WS-SIN-END-DT      AND                   R080101
                   WS-INT-DAY > WS-SIN-START-DT)   OR                    R080101
                 (WS-SYSIN-TIME(1:13) = '9999999999999')                 R080101
              THEN                                                       R080101
TSTKDS*          DISPLAY 'PASS 2'                                        R080101
                 IF WS-PATTERN-MOD                                       R080101
TSTKDS*             DISPLAY 'PASS 3'                                     R080101
                    IF SMF30JBN( 1: WS-KEP-POS) =                        R080101
                       WS-JOB-NAME(1 : WS-KEP-POS) OR                    R080101
                       WS-JOB-NAME = '99999999'                          R080101
                    THEN                                                 R080101
TSTKDS*                DISPLAY 'PASS 4'                                  R080101
                       IF WS-SIN-USER= '9999999'                         R081211
TSTKDS*                   DISPLAY 'PASS 5'                               R080101
                          SET WS-GO             TO TRUE                  R081211
                       ELSE                                              R081211
                         IF WS-PATTERN-USER-MOD                          R081211
                            IF WS-SIN-USER(1:WS-USER-LEN) =              R081211
                               SMF30RUD (1:WS-USER-LEN)                  R081211
                            THEN                                         R081211
TSTKDS*                          DISPLAY 'PASS 6'                        R080101
                               SET WS-GO       TO TRUE                   R080101
                            END-IF                                       R081211
                          ELSE                                           R081211
                            IF WS-SIN-USER = SMF30RUD                    R081211
TSTKDS*                       DISPLAY 'PASS 7'                           R080101
                               SET WS-GO       TO TRUE                   R081211
                            END-IF                                       R081211
                         END-IF                                          R081211
                       END-IF                                            R081211
TSTKDS*                DISPLAY 'PASS 3'                                  R080101
                    END-IF                                               R080101
                 ELSE                                                    R080101
TSTKDS*             DISPLAY 'PASSxx=' WS-JOB-NAME                        R080101
                    IF SMF30JBN = WS-JOB-NAME                            R080101
                       OR WS-JOB-NAME = '********'                       R080101
                       OR WS-JOB-NAME = '99999999'                       R080101
                    THEN                                                 R081211
TSTKDS*                  DISPLAY 'PASS 8'                                R080101
                       IF WS-SIN-USER= '9999999'                         R081211
                          SET WS-GO             TO TRUE                  R081211
TSTKDS*                   DISPLAY 'PASS 9'                               R080101
                       ELSE                                              R081211
                         IF WS-PATTERN-USER-MOD                          R081211
                            IF WS-SIN-USER(1:WS-USER-LEN) =              R081211
                               SMF30RUD (1:WS-USER-LEN)                  R081211
                               SET WS-GO       TO TRUE                   R080101
TSTKDS*                      DISPLAY 'PASS a'                            R080101
                            END-IF                                       R081211
                          ELSE                                           R081211
                            IF WS-SIN-USER = SMF30RUD                    R081211
TSTKDS*                        DISPLAY 'PASS b'                          R080101
                               SET WS-GO       TO TRUE                   R081211
                            END-IF                                       R081211
                          END-IF                                         R081211
                       END-IF                                            R081211
                    END-IF                                               R080101
                 END-IF                                                  R080101
              END-IF                                                     R080101
           END-IF                                                        R080101
           IF WS-GO AND                                                  R080101
             (SMF30JBN = 'SYSLOG  ' OR                                   R080101
              SMF30JBN = 'INIT    ' OR                                   R080101
              SMF30JBN = 'TSO     ' OR                                   R080101
              SMF30JBN = 'SDSF    ' OR                                   R080101
              SMF30JBN = 'TCPIP   ' OR                                   R080101
              SMF30JBN = 'ASCHINT ' OR                                   R080101
              SMF30JBN = 'RACF    ' OR                                   R080101
              SMF30JBN = 'ZFS     ' OR                                   R080101
              SMF30JBN = 'VTAM    ' OR                                   R080101
              SMF30JBN = 'PORTMAP ' OR                                   R080101
              SMF30JBN = 'BPXAS   ' OR                                   R080101
              SMF30JBN = 'JES2    ' OR                                   R080101
              SMF30JBN = 'BLSJPRMI' OR                                   R080101
              SMF30JBN = 'ANTAS000' OR                                   R080101
              SMF30JBN = 'ANTMAIN ' OR                                   R080101
              SMF30JBN = 'APPC    ' OR                                   R080101
              SMF30JBN = 'ASCH    ' OR                                   R080101
              SMF30JBN = 'BPXOINIT' OR                                   R080101
              SMF30JBN = 'CATALOG ' OR                                   R080101
              SMF30JBN = 'DLF     ' OR                                   R080101
              SMF30JBN = 'DUMPSRV ' OR                                   R080101
              SMF30JBN = 'IOSAS   ' OR                                   R080101
              SMF30JBN = 'IXGLOGR ' OR                                   R080101
              SMF30JBN = 'JESXCF  ' OR                                   R080101
              SMF30JBN = 'JES2    ' OR                                   R080101
              SMF30JBN = 'LLA     ' OR                                   R080101
              SMF30JBN = 'MMS     ' OR                                   R080101
              SMF30JBN = 'MSTJCL00' OR                                   R080101
              SMF30JBN = 'OMVS    ' OR                                   R080101
              SMF30JBN = 'RESOLVER' OR                                   R080101
              SMF30JBN = 'RRS     ' OR                                   R080101
              SMF30JBN = 'SMF     ' OR                                   R080101
              SMF30JBN = 'SMS     ' OR                                   R080101
              SMF30JBN = 'VTAM    ' OR                                   R080101
              SMF30JBN = 'VTAMDB  ' OR                                   R080101
              SMF30JBN = 'ZFS     ' OR                                   R080101
              SMF30JBN = 'NFSC    ' OR                                   R080101
              SMF30JBN = 'BPXAS   ' OR                                   R080101
              SMF30JBN = 'SDSF    ' OR                                   R080101
              SMF30JBN = 'FTPD    ' OR                                   R080101
              SMF30JBN = 'FTPD1   ' OR                                   R080101
              SMF30JBN = 'FTPD2   ' OR                                   R080101
              SMF30JBN = 'PDSDIR  ' OR                                   R080101
              SMF30JBN = 'SHUTALL ' OR                                   R080101
              SMF30JBN = 'TNF     ' OR                                   R080101
              SMF30JBN = 'VLF     ' OR                                   R080101
              SMF30JBN = 'VMCF    ' OR                                   R080101
              SMF30JBN = 'WLM     ' OR                                   R080101
              SMF30JBN = 'XCFAS   ' OR                                   R080101
              SMF30JBN = 'NFSS    ' OR                                   R080101
              SMF30JBN = 'NFSC    ' OR                                   R080101
              SMF30JBN = 'IRRDPTAB' OR                                   R080101
              SMF30JBN = 'IBMUSER ' OR                                   R080101
              SMF30JBN = 'EZAZSSI ' OR                                   R080101
              SMF30JNM(1:3) = 'TSU')                                     R080101
           THEN                                                          R080101
              SET WS-SKIP           TO TRUE                              R080101
TSTKDS*        DISPLAY 'skip xxxxx'                                      R080101
           END-IF                                                        R080101
                                                                         R081211
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A219-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *====================*                                             R080101
       A220-FORMAT-SMF30OUT.                                             R080101
      *====================*                                             R080101
      *                                                                  R080101
      *    MOVE SMF30FLG                TO SMF30FLG-X                    R080101
           MOVE SMF30RTY                TO SMF30RTY-X                    R080101
           COMPUTE SMF30TME-X ROUNDED = SMF30TME / 100                   R080101
TSTKDS*    MOVE SMF30TME-X              TO WS-TEST                       R080101
TSTKDS*    DISPLAY 'SMF30TME=' SMF30TME                                  R080101
TSTKDS*    DISPLAY 'WS-TEST=' WS-TEST                                    R080101
           MOVE SMF30DTE                TO WS-TEMP-DATE-HEX              R080101
           PERFORM R100-CONVERT-HEX-DATE THRU R100-EXIT                  R080101
           MOVE WS-TEMP-DATE            TO SMF30DTE-X                    R080101
TSTKDS*    DISPLAY 'DATE IN:OUT=' SMF30DTE ':' WS-TEMP-DATE              R080101
           MOVE SMF30SID                TO SMF30SID-X                    R080101
           MOVE SMF30WID                TO SMF30WID-X                    R080101
      *                                                                  R080101
           MOVE SMF30TYP                TO SMF30TYP-X                    R080101
TSTKDS*    DISPLAY 'SUB B:TYPE=' SMF30TYP ':'  SMF30TYP-X                R080101
           MOVE SMF30RS1                TO SMF30RS1-X                    R080101
           MOVE SMF30RVN                TO SMF30RVN-X                    R080101
           MOVE SMF30PNM                TO SMF30PNM-X                    R080101
           MOVE SMF30OSL                TO SMF30OSL-X                    R080101
           MOVE SMF30SYN                TO SMF30SYN-X                    R080101
           MOVE SMF30SYP                TO SMF30SYP-X                    R080101
      *                                                                  R080101
           MOVE SMF30JBN                TO SMF30JBN-X                    R080101
           MOVE SMF30PGM                TO SMF30PGM-X                    R080101
           MOVE SMF30STM                TO SMF30STM-X                    R080101
           MOVE SMF30UIF                TO SMF30UIF-X                    R080101
           MOVE SMF30JNM                TO SMF30JNM-X                    R080101
           MOVE SMF30STN                TO SMF30STN-X                    R080101
TSTKDS*    DISPLAY 'STEP NO=' SMF30STN-X                                 R080101
           MOVE SMF30CLS                TO SMF30CLS-X                    R080101
           MOVE SMF30RVY                TO SMF30RVY-X                    R080101
           MOVE SMF30PGN                TO SMF30PGN-X                    R080101
           MOVE SMF30JPT                TO SMF30JPT-X                    R080101
           COMPUTE SMF30AST-X ROUNDED = SMF30AST / 100                   R080101
           COMPUTE SMF30PPS-X ROUNDED = SMF30PPS / 100                   R080101
           COMPUTE SMF30SIT-X ROUNDED = SMF30SIT / 100                   R080101
           MOVE SMF30STD                TO WS-TEMP-DATE-HEX              R080101
           PERFORM R100-CONVERT-HEX-DATE THRU R100-EXIT                  R080101
           MOVE WS-TEMP-DATE            TO SMF30STD-X                    R080101
TSTKDS*    DISPLAY 'SMF30STD:SMF30STD-X='  SMF30STD ':' SMF30STD-X       R080101
           COMPUTE SMF30RST-X ROUNDED = SMF30RST / 100                   R080101
           MOVE SMF30RSD                TO WS-TEMP-DATE-HEX              R080101
           PERFORM R100-CONVERT-HEX-DATE THRU R100-EXIT                  R080101
           MOVE WS-TEMP-DATE            TO SMF30RSD-X                    R080101
TSTKDS*    DISPLAY 'SMF30RSD: SMF30RSD-X:JOB =' SMF30RSD ':' SMF30RSD-X  R080101
TSTKDS*    SMF30JNM-X                                                    R080101
           COMPUTE SMF30RET-X ROUNDED = SMF30RET / 100                   R080101
           MOVE SMF30RED                TO WS-TEMP-DATE-HEX              R080101
           PERFORM R100-CONVERT-HEX-DATE THRU R100-EXIT                  R080101
           MOVE WS-TEMP-DATE            TO SMF30RED-X                    R080101
           MOVE SMF30USR                TO SMF30USR-X                    R080101
           MOVE SMF30GRP                TO SMF30GRP-X                    R080101
           MOVE SMF30RUD                TO SMF30RUD-X                    R080101
           MOVE SMF30TID                TO SMF30TID-X                    R080101
           MOVE SMF30TSN                TO SMF30TSN-X                    R080101
           MOVE SMF30PSN                TO SMF30PSN-X                    R080101
           MOVE SMF30CL8                TO SMF30CL8-X                    R080101
           MOVE SMF30ISS                TO SMF30ISS-X                    R080101
           COMPUTE SMF30IET-X  ROUNDED = SMF30IET / 100                  R080101
           COMPUTE SMF30SSN-X  ROUNDED = SMF30SSN / 100                  R080101
           MOVE SMF30EXN                TO SMF30EXN-X                    R080101
      *                                                                  R080101
           IF IO-VALID                                                   R080101
              COMPUTE SMF30INP-X  ROUNDED = SMF30INP / 100               R080101
              COMPUTE SMF30TEP-X  ROUNDED = SMF30TEP                     R080101
              COMPUTE SMF30TPT-X  ROUNDED = SMF30TPT / 100               R080101
              COMPUTE SMF30TGT-X  ROUNDED = SMF30TGT / 100               R080101
              MOVE SMF30RDR             TO SMF30RDR-X                    R080101
              MOVE SMF30RDT             TO SMF30RDT-X                    R080101
              COMPUTE SMF30TCN-X ROUNDED =                               R080101
                      SMF30TCN / 128 * K-MICROSECOND                     R080101
              MOVE SMF30DCF             TO SMF30DCF-X                    R080101
              MOVE SMF30RSB             TO SMF30RSB-X                    R080101
              MOVE SMF30TRR             TO SMF30TRR-X                    R080101
              COMPUTE SMF30AIC-X ROUNDED =                               R080101
                      SMF30AIC / (128 * K-MICROSECOND)                   R080101
              COMPUTE SMF30AID-X ROUNDED =                               R080101
                      SMF30AID / (128 * K-MICROSECOND)                   R080101
              COMPUTE SMF30AIW-X ROUNDED =                               R080101
                      SMF30AIW / (128 * K-MICROSECOND)                   R080101
              MOVE SMF30AIS             TO SMF30AIS-X                    R080101
              COMPUTE SMF30EIC-X ROUNDED =                               R080101
                      SMF30EIC / (128 * K-MICROSECOND)                   R080101
              COMPUTE SMF30EID-X ROUNDED =                               R080101
                      SMF30EID / (128 * K-MICROSECOND)                   R080101
              COMPUTE SMF30EIW-X ROUNDED =                               R080101
                      SMF30EIW / (128 * K-MICROSECOND)                   R080101
              MOVE SMF30EIS             TO SMF30EIS-X                    R080101
           ELSE                                                          R081211
              INITIALIZE SMF05-IO-ACT-X                                  R081211
           END-IF                                                        R080101
      *                                                                  R080101
MEM   *    MOVE SMF30SCC                TO SMF30SCC-X                    R080101
           IF COMP-VALID                                                 R080101
              IF SMF30SCC NOT = 0                                        R080101
                 COMPUTE SMF30SCC-9 = SMF30SCC                           R080101
TSTKDS*          PERFORM R200-CONVERT-RC-HEX THRU R200-EXIT              R080101
TSTKDS*          DISPLAY 'RC IN:OUT=' SMF30SCC ':' SMF30SCC-X            R080101
              ELSE                                                       R080101
                 MOVE ALL ZERO          TO SMF30SCC-X                    R080101
              END-IF                                                     R080101
              IF SMF30STI NOT = X'0000'                                  R080101
                 MOVE SMF30STI          TO WS-COMP-4                     R080101
                 MOVE WS-COMP-4         TO SMF30STI-X                    R080101
              ELSE                                                       R080101
                 MOVE ALL ZERO          TO SMF30STI-X                    R080101
              END-IF                                                     R080101
TSTKDS*       DISPLAY 'SMF30ARC:SMF30ARC-X' SMF30ARC ':' SMF30ARC-X      R080101
              IF SMF30ARC NOT = 0                                        R080101
                 MOVE 0                 TO WS-COMP-9                     R080101
                 COMPUTE WS-COMP-9 =  SMF30ARC                           R080101
                 MOVE WS-COMP-9         TO SMF30ARC-X                    R080101
TSTKDS*          DISPLAY 'SMF30ARC:SMF30ARC-X' SMF30ARC ':' SMF30ARC-X   R080101
              ELSE                                                       R080101
                 MOVE SPACE             TO SMF30ARC-X                    R080101
              END-IF                                                     R080101
           ELSE                                                          R081211
              INITIALIZE  SMF05-COMPLET-X                                R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF PACC-VALID                                                 R080101
              MOVE SMF30PTY             TO SMF30PTY-X                    R080101
              MOVE SMF30TFL             TO SMF30TFL-X                    R080101
              MOVE SMF30IDT             TO SMF30IDT-X                    R080101
              COMPUTE SMF30CPT-X ROUNDED  = SMF30CPT / 100               R080101
              COMPUTE SMF30CPS-X ROUNDED  = SMF30CPS / 100               R080101
              COMPUTE SMF30ICU-X ROUNDED  = SMF30ICU / 100               R080101
              COMPUTE SMF30ISB-X ROUNDED  = SMF30ISB / 100               R080101
              COMPUTE SMF30JVU-X ROUNDED  = SMF30JVU / 100               R080101
              COMPUTE SMF30IVU-X ROUNDED  = SMF30IVU / 100               R080101
              COMPUTE SMF30JVA-X ROUNDED  = SMF30JVA / 100               R080101
              COMPUTE SMF30IVA-X ROUNDED  = SMF30IVA / 100               R080101
              COMPUTE SMF30IST-X ROUNDED  = SMF30IST / 100               R080101
              COMPUTE SMF30IIP-X ROUNDED  = SMF30IIP / 100               R080101
              COMPUTE SMF30RCT-X ROUNDED  = SMF30RCT / 100               R080101
              COMPUTE SMF30HPT-X ROUNDED  = SMF30HPT / 100               R080101
              MOVE SMF30CSC             TO SMF30CSC-X                    R080101
              MOVE SMF30DMI             TO SMF30DMI-X                    R080101
              MOVE SMF30DMO             TO SMF30DMO-X                    R080101
              COMPUTE SMF30ASR-X ROUNDED = SMF30ASR / 100                R080101
              COMPUTE SMF30ENC-X ROUNDED = SMF30ENC / 100                R080101
              COMPUTE SMF30DET-X ROUNDED = SMF30DET / 100                R080101
              MOVE SMF30CEP             TO SMF30CEP-X                    R080101
           ELSE                                                          R081211
              INITIALIZE  SMF05-COMPLET-X                                R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF PAGE-VALID                                                 R080101
              MOVE SMF30RSV             TO SMF30RSV-X                    R080101
              MOVE SMF30SFL             TO SMF30SFL-X                    R080101
              MOVE SMF30SPK             TO SMF30SPK-X                    R080101
              MOVE SMF30PRV             TO SMF30PRV-X                    R080101
              MOVE SMF30SYS             TO SMF30SYS-X                    R080101
              MOVE SMF30PGI             TO SMF30PGI-X                    R080101
              MOVE SMF30PGO             TO SMF30PGO-X                    R080101
              MOVE SMF30CPM             TO SMF30CPM-X                    R080101
              MOVE SMF30NSW             TO SMF30NSW-X                    R080101
              MOVE SMF30PSI             TO SMF30PSI-X                    R080101
              MOVE SMF30PSO             TO SMF30PSO-X                    R080101
              MOVE SMF30VPI             TO SMF30VPI-X                    R080101
              MOVE SMF30VPO             TO SMF30VPO-X                    R080101
              MOVE SMF30VPR             TO SMF30VPR-X                    R080101
              MOVE SMF30CPI             TO SMF30CPI-X                    R080101
              MOVE SMF30HPI             TO SMF30HPI-X                    R080101
              MOVE SMF30LPI             TO SMF30LPI-X                    R080101
              MOVE SMF30HPO             TO SMF30HPO-X                    R080101
              MOVE SMF30PST             TO SMF30PST-X                    R080101
              MOVE SMF30PSC             TO SMF30PSC-X                    R080101
              MOVE SMF30RGB             TO SMF30RGB-X                    R080101
              MOVE SMF30ERG             TO SMF30ERG-X                    R080101
              MOVE SMF30ARB             TO SMF30ARB-X                    R080101
              MOVE SMF30EAR             TO SMF30EAR-X                    R080101
              MOVE SMF30URB             TO SMF30URB-X                    R080101
              MOVE SMF30EUR             TO SMF30EUR-X                    R080101
              MOVE SMF30RGN             TO SMF30RGN-X                    R080101
              MOVE SMF30DSV             TO SMF30DSV-X                    R080101
              MOVE SMF30PIE             TO SMF30PIE-X                    R080101
              MOVE SMF30POE             TO SMF30POE-X                    R080101
              MOVE SMF30BIA             TO SMF30BIA-X                    R080101
              MOVE SMF30BOA             TO SMF30BOA-X                    R080101
              MOVE SMF30BIE             TO SMF30BIE-X                    R080101
              MOVE SMF30BOE             TO SMF30BOE-X                    R080101
              MOVE SMF30KIA             TO SMF30KIA-X                    R080101
              MOVE SMF30KOA             TO SMF30KOA-X                    R080101
              MOVE SMF30KIE             TO SMF30KIE-X                    R080101
              MOVE SMF30KOE             TO SMF30KOE-X                    R080101
              COMPUTE SMF30PSF-X ROUNDED = SMF30PSF / 1000000            R080101
              MOVE SMF30PAI             TO SMF30PAI-X                    R080101
              MOVE SMF30PEI             TO SMF30PEI-X                    R080101
              COMPUTE SMF30ERS-X ROUNDED = SMF30ERS / 1000000            R080101
              MOVE SMF30MEM             TO SMF30MEM-X                    R080101
              MOVE SMF30MLS             TO SMF30MLS-X                    R080101
              MOVE SMF30RVX             TO SMF30RVX-X                    R080101
           ELSE                                                          R081211
              INITIALIZE  SMF05-STORAGE-PAGING-X                         R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF GEXCP                                                      R081211
              MOVE WS-SMF30BLK          TO SMF30BLK-X                    R081211
              MOVE WS-SMF30DCT          TO SMF30DCT-X                    R081211
           END-IF                                                        R081211
      *                                                                  R081211
           IF PERFORM-VALID                                              R080101
              MOVE SMF30SRV             TO SMF30SRV-X                    R080101
              MOVE SMF30CSU             TO SMF30CSU-X                    R080101
              MOVE SMF30SRB             TO SMF30SRB-X                    R080101
              MOVE SMF30IO              TO SMF30IO-X                     R080101
              MOVE SMF30MSO             TO SMF30MSO-X                    R080101
              COMPUTE SMF30TAT-X ROUNDED =                               R080101
                       SMF30TAT / (1024 * K-MICROSECOND)                 R080101
              MOVE SMF30SUS             TO SMF30SUS-X                    R080101
              COMPUTE SMF30RES-X ROUNDED =                               R080101
                       SMF30RES / (1024 * K-MICROSECOND)                 R080101
              MOVE SMF30TRS             TO SMF30TRS-X                    R080101
              MOVE SMF30WLM             TO SMF30WLM-X                    R080101
              MOVE SMF30SCN             TO SMF30SCN-X                    R080101
              MOVE SMF30GRN             TO SMF30GRN-X                    R080101
              MOVE SMF30RCN             TO SMF30RCN-X                    R080101
              COMPUTE SMF30ETA-X ROUNDED =                               R080101
                      SMF30ETA  / (1024 * K-MICROSECOND)                 R080101
              MOVE SMF30ESU             TO SMF30ESU-X                    R080101
              MOVE SMF30ETC             TO SMF30ETC-X                    R080101
              MOVE SMF30PFL             TO SMF30PFL-X                    R080101
              COMPUTE SMF30JQT-X ROUNDED =                               R080101
                      SMF30JQT  / (1024 * K-MICROSECOND)                 R080101
              COMPUTE SMF30RQT-X ROUNDED =                               R080101
                      SMF30RQT  / (1024 * K-MICROSECOND)                 R080101
              COMPUTE SMF30HQT-X ROUNDED =                               R080101
                      SMF30HQT  / (1024 * K-MICROSECOND)                 R080101
              COMPUTE SMF30SQT-X ROUNDED =                               R080101
                      SMF30SQT  / (1024 * K-MICROSECOND)                 R080101
              MOVE SMF30PF1             TO SMF30PF1-X                    R080101
              MOVE SMF30PF2             TO SMF30PF2-X                    R080101
              MOVE SMF30RS4             TO SMF30RS4-X                    R080101
              MOVE SMF30JPN             TO SMF30JPN-X                    R080101
           ELSE                                                          R081211
              INITIALIZE  SMF05-PERFORMANCE-X                            R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF OPERATOR-VALID                                             R080101
              MOVE SMF30PDM             TO SMF30PDM-X                    R080101
              MOVE SMF30PRD             TO SMF30PRD-X                    R080101
              MOVE SMF30PTM             TO SMF30PTM-X                    R080101
              MOVE SMF30TPR             TO SMF30TPR-X                    R080101
              MOVE SMF30MTM             TO SMF30MTM-X                    R080101
              MOVE SMF30MSR             TO SMF30MSR-X                    R080101
           ELSE                                                          R081211
              INITIALIZE SMF05-OPERATOR-X                                R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF APPC-MVS-XESVALID                                          R080101
              MOVE SMF30DC              TO SMF30DC-X                     R080101
              MOVE SMF30DCA             TO SMF30DCA-X                    R080101
              MOVE SMF30DSC             TO SMF30DSC-X                    R080101
              MOVE SMF30DDS             TO SMF30DDS-X                    R080101
              MOVE SMF30DRC             TO SMF30DRC-X                    R080101
              MOVE SMF30DDR             TO SMF30DDR-X                    R080101
              MOVE SMF30DAC             TO SMF30DAC-X                    R080101
              MOVE SMF30DTR             TO SMF30DTR-X                    R080101
           ELSE                                                          R081211
              INITIALIZE SMF05-APPC-MVS-XES-X                            R081211
           END-IF                                                        R080101
      *                                                                  R080101
           IF APPC-MVS-CUMU-VALID                                        R080101
              MOVE SMF30CN              TO SMF30CN-X                     R080101
              MOVE SMF30CNA             TO SMF30CNA-X                    R080101
              MOVE SMF30SEN             TO SMF30SEN-X                    R080101
              MOVE SMF30DAT             TO SMF30DAT-X                    R080101
              MOVE SMF30REC             TO SMF30REC-X                    R080101
              MOVE SMF30DAR             TO SMF30DAR-X                    R080101
              MOVE SMF30TAC             TO SMF30TAC-X                    R080101
              MOVE SMF30ATR             TO SMF30ATR-X                    R080101
           ELSE                                                          R081211
              INITIALIZE SMF05-APPC-MVS-CUMU-RES-X                       R081211
           END-IF                                                        R080101
           SET GHEAD                    TO TRUE                          R080101
           SET GSUBS                    TO TRUE                          R080101
           SET GID                      TO TRUE                          R080101
           SET GIO                      TO TRUE                          R080101
           SET GCOMP                    TO TRUE                          R080101
           SET GPACC                    TO TRUE                          R080101
           SET GPAGE                    TO TRUE                          R080101
           SET GPERF                    TO TRUE                          R080101
           SET GOPER                    TO TRUE                          R080101
           SET GAPPC                    TO TRUE                          R080101
           SET GAPMV                    TO TRUE                          R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       A220-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *============================*                                     R080101
       R100-CONVERT-HEX-DATE.                                            R080101
      *===========================*                                      R080101
      *                                                                  R080101
      *    IF WS-TEMP-DATE-HEX = X'0000000F'                             R080101
           IF WS-TEMP-DATE-HEX = K-NULL-DATE                             R080101
              MOVE ALL ZERO             TO WS-TEMP-DATE                  R080101
           ELSE                                                          R080101
              MOVE 4                    TO  WS-INDEX-DT1                 R080101
              MOVE 7                    TO  WS-INDEX-DT2                 R080101
              PERFORM UNTIL WS-INDEX-DT1 < 2                             R080101
                 MOVE K-LOW-VALUE       TO WK-MID21                      R080101
                 MOVE WS-TEMP-DATE-HEX(WS-INDEX-DT1:1)                   R080101
                   TO WK-MID22                                           R080101
                 COMPUTE WS-BIN-1 = WK-BIN / 16                          R080101
                 COMPUTE WS-BIN-2 = WK-BIN - WS-BIN-1 * 16               R080101
                 COMPUTE WK-BIN = WS-BIN-2 + WS-BIN-1 * 16 * 16          R080101
                 IF WK-MID22 >= K-LOW-VALUE AND WK-MID22 <= K-NINE       R080101
                     MOVE WK-BIN         TO WS-BIN-3                     R080101
                     MOVE X'00'          TO WS-R11                       R080101
                     COMPUTE WS-BIN-3 = WS-BIN-3 + 240                   R080101
                     MOVE WS-R12                                         R080101
                     TO WS-TEMP-DATE(WS-INDEX-DT2 : 1)                   R080101
                     COMPUTE WS-INDEX-DT2 = WS-INDEX-DT2 - 1             R080101
                 END-IF                                                  R080101
                  IF WK-MID21 >= K-LOW-VALUE AND WK-MID21 <=  K-NINE     R080101
                     MOVE WK-BIN         TO  WS-BIN-3                    R080101
                     COMPUTE WS-BIN-3 = WK-BIN / 256                     R080101
                     COMPUTE WS-BIN-3 = WS-BIN-3 + 240                   R080101
                     MOVE WS-R12                                         R080101
                     TO WS-TEMP-DATE(WS-INDEX-DT2 : 1)                   R080101
                     COMPUTE WS-INDEX-DT2 = WS-INDEX-DT2 - 1             R080101
                  END-IF                                                 R080101
                  COMPUTE WS-INDEX-DT1 = WS-INDEX-DT1 - 1                R080101
              END-PERFORM                                                R080101
              MOVE 20                    TO WS-TEMP-DATE(1:2)            R080101
           END-IF                                                        R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       R100-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       R200-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *======================*                                           R080101
       9000-CHECK-RETURN-CODE.                                           R080101
      *======================*                                           R080101
      *                                                                  R080101
           IF WS-RETURN-CODE > 4 AND WS-RETURN-CODE NOT = 10             R080101
           THEN                                                          R080101
              MOVE WS-RETURN-CODE      TO RETURN-CODE                    R080101
              PERFORM 9800-CLOSE-FILES  THRU 9800-EXIT                   R080101
           ELSE                                                          R080101
              IF WS-RETURN-CODE <= 4                                     R080101
                 DISPLAY 'SMF30EX1 WARNING'                              R080101
                 IF WS-RETURN-CODE = 02                                  R080101
                    DISPLAY 'SMF30EX1 DUPLICATE KEY WAS DETECTED'        R080101
                 END-IF                                                  R080101
      *          IF WS-RETURN-CODE = 04                                  R080101
      *          END-IF                                                  R080101
                 DISPLAY 'SMF30EX1 FILE LENGTH DID NOT CONFORM'          R080101
                 DISPLAY 'RECORD POS IS:' WS-ALL-REC-NO                  R080101
              ELSE                                                       R080101
                 DISPLAY 'SMF30EX1 NOW READ FILE TO END'                 R080101
              END-IF                                                     R080101
           END-IF                                                        R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       9000-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       9800-CLOSE-FILES.                                                 R080101
      *==================*                                               R080101
      *                                                                  R080101
           CLOSE SMF30IN                                                 R080101
           CLOSE SMF30OUT                                                R080101
           PERFORM 9999-EXIT-PROG     THRU 9999-EXIT.                    R080101
      *                                                                  R080101
      *==================*                                               R080101
       9800-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
      *==================*                                               R080101
       9999-EXIT-PROG.                                                   R080101
      *==================*                                               R080101
      *                                                                  R080101
           STOP RUN.                                                     R080101
      *                                                                  R080101
      *==================*                                               R080101
       9999-EXIT.                                                        R080101
      *==================*                                               R080101
      *                                                                  R080101
           EXIT.                                                         R080101
      *                                                                  R080101
