{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012459000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1410864, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE619.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1410864, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1410864, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE619.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x17\\x0e'", "DS1TRBAL": "b't6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x88\\x00\\x0e\\x04\\x8a\\x00\\x07\\x00\\x18'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04;\\x00\\x00\\x01\\x03\\x07\\x8f\\x01\\x03\\x07\\x8f\\x14!\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf9@@@'", "ispf": {"version": "04.59", "flags": 0, "createdate": "2003-03-19T00:00:00", "modifydate": "2003-03-19T14:21:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-459"}, "text": "REGULAR CBT TAPE - VERSION 459    FILE:  619\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT459.FILE619\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3120    PO\n\n   PDS117I 29 MEMBERS COUNTED; CUMULATIVE SIZE IS 13,004 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/19/03    14:21:32    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x04\\x00B\\x01\\x03\\x07_\\x01\\x03\\x07o 4\\x00\\x8a\\x00X\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.04", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-17T20:34:42", "lines": 138, "newlines": 88, "modlines": 0, "user": "BRIAN"}, "text": "THIS LIBRARY CONTAINS THE MEMBERS WHICH ARE USED TO INSTALL THE\nDYNAMIC PROCLUB SUPPORT FOR THE HERCULES TURNKEY #3 VERSION OF\nMVS 3.8J.\n.\nDO NOT HESITATE TO CALL/EMAIL ME IF YOU HAVE ANY QUESTIONS OR PROBLEMS\n.\nBRIAN WESTERMAN     EMAIL= BRIAN_WESTERMAN@SYZYGYINC.COM\n(800) 767-2244\n(800) 366-4082  - FAX\n.\nINSTALLATION WILL DEPEND ON WHETHER YOU WANT TO SUBMIT THE SMP4\nJOB (WHICH IS THE SAFEST AND EASIEST) OR YOU CAN INSTALL MANUALLY.\nTHIS UPDATE IS SHIPPED ON A \"TAPE\" WHICH CONTAINS BOTH THE ORIGINAL\nAND THE DYNAMIC PROCLIB VERSION OF THE SYS1.LPALIB MODULES\nIEFVH1 AND IEFNB903.  IF YOU CHOOSE YOU CAN JUST UPDATE THOSE MODULES\nIN SYS1.LPALIB (ALONG WITHT HE CHANGES TO THE JES2 PROCEDURE) AND RE-IPL\nA CLPA, THIS WILL TOTALLY ACTIVATE DYNAMIC PROCLIB SUPPORT.\n.\nTHE STEPS ARE OUTLINED FOR INSTALLATION AND THEN DESCRIBED:\n1) LOOK AT THIS PARTITIONED DATASET.\n2) MAKE A BACKUP OF YOUR MVSRES,\n   THE EASIEST WAY TO DO THIS, (SINCE YOU'RE ON A PC AFTER ALL),\n   IS TO NAVIGATE WITH WINDOWS EXPLORER TO YOUR MVS/DASD DIRECTORY\n   AND THEN RIGHT CLICK ON YOUR MVSRES.148 FILE (OR WHATEVER YOU CALLED\n   YOUR MVSRES, THEN SELECT 'COPY' FROM THE RIGHT-CLICK BOX.\n   THEN JUST MOVE YOUR MOUSE TO A BLANK AREA OF THE SAME DIRECTORY\n   AND RIGHT-CLICK, SELECT \"PASTE\" FROM THE RIGHT-CLICK BOX AND\n   YOU WILL NOW HAVE A COPY OF YOUR MVSRES VOLUME WITH THE NAME\n   \"COPY OF MVSRES.148\".\n3) UPDATE THE JES2 PROCEDURE OR COPY THE JES2 PROCEDURE\n   IN THIS LIBRARY TO YOUR 'SYS1.PROCLIB'.\n4) SUBMIT THE DYNPROC MEMBER OF THIS LIBRARY, YOU MAY HAVE TO\n   MAKE SOME CHANGES TO THE JOBCARD, BUT IF YOU ARE ON THE TURNKEY\n   SYSTEM THE SMPAPP AND SMPREC PROCS SHOULD BE OKAY TO USE AS-IS.\n   THE FIRST STEP MAY GET A RC=4 IF YOU HAVE NOT RUN THIS BEFORE,\n   ALL OTHER STEPS SHOULD GET A RC=0.\n5) IPL WITH A CLPA OR MLPA, DEPENDING ON HOW YOU RAN STEP 4.\n   IF YOU UPDATED DIRECTLY TO SYS1.LPALIB, THEN CLPA, IF ANYWHERE\n   ELSE, THEN MLPA AND EVENTUALLY YOU WILL NEED TO COPY THE 2\n   MODULES (IEFVH1 AND IEFNB903) INTO SYS1.LPALIB AND CLPA.\n   THIS PROCEDURE HAS BEEN EXTENSIVELY CHECKED OUT, BUT IF YOU\n   HAVE ANY PROBLEMS, JUST FALL BACK TO YOUR \"COPY OF MVSRES.148\"\n   BACKUP VOLUME BY RENAMING MVSRES.148 TO SOMETHING ELSE AND THEN\n   RENAMING THE \"COPY OF MVSRES.148\" TO MVSRES.148 AND RE-IPL.\n   MAKE SURE YOU SAVE A COPY OF YOUR DYNPROC OUTPUT FOR PROBLEM\n   RESOLUTION.  HERCULES HOLDS VOLUMES ALLOCATED SO IF YOU\n   ARE RUNNING THE GUI, YOU WILL NEED TO POWER-OFF AND POWER-ON TO\n   GET THE GUI TO RE-ALLOCATE THE NEW MVSRES.  IF YOU HAVE TO GO TO\n   THIS TROUBLE, PLEASE CALL ME SO THAT I CAN FIX WHATEVER YOUR\n   PROBLEM WAS.  THIS IS THE VIRTUAL POWER-OFF NOT YOUR PC'S POWER\n   BUTTON.\n.\nLONGER DESCRIPTION:\nTHERE ARE SEVERAL SMALL STEPS TO INSTALLING DYNAMIC PROCLIB, THE FIRST\nONE IS TO UPDATE THE JES2 PROCEDURE IN PROCLIB TO ADD THE DYNAMIC\nCONCATENATION LIST, THIS IS ACTUALLY THE SAME AS YOUR CURRENT PROC00\nDD CONCATENATION SO YOU CAN JUST REPLICATE THOSE LINES IN THE PROC. YOU\nSHOULD CHANGE THE PROC00 TO IEF0PDSI.  I DON'T KNOW WHY THIS DD NAME\nWAS SELECTED, I SUPPOSE THAT THE PERSON WHO ORIGINALLY WROTE THE SUPPORT\nWANTED SOMETHING THAT WOULD NOT CONFLICT WITH ANYTHING.\n.\nYOU WILL NEED TO REPLICATE THIS CONCATENATION(IEF0PDSI) FOR EACH\nCONVERTER THAT YOU HAVE RUNNING ON YOUR SYSTEM.  IF YOU ARE RUNNING\nTHE TURNKEY #3 SYSTEM, THEN YOU HAVE 2 CONVERTERS, SO YOU WILL NEED\nA IEF0PDSI AND AN IEF1PDSI.  IF YOU HAVE MORE CONVERTERS YOU SHOULD\nREPLICATE THE CONCATENATION ONCE FOR EACH CONVERTER.  YOU JUST REPLACE\nTHE SINGLE DIGIT NUMBER AFTER THE \"IEF\" WITH THE HEXADECIMAL NUMBER\nSEQUENTIALLY FOR EACH OF THE CONVERTERS THAT YOU HAVE RUNNING UP TO\nTHE MAX 16 CONVERTERS (0,1,2,...A,B,C,D,E,F).  IF YOU HAVE MORE THAN\n16 CONVERTERS, THEN YOU WILL HAVE TO REDUCE THE NUMBER, OR REWRITE THE\nCODE TO SUPPORT MORE.\n.\nAT THIS POINT, YOU SHOULD RE-IPL JUST TO MAKE SURE THAT YOU DIDN'T\nMAKE ANY SPELLING ERRORS.\nFOR THOSE OF YOU WHO DON'T WANT TO DO A LOT OF TYPING, I HAVE A\nJES2 PROC FROM THE DEFAULT TURNKEY#3 SYSTEM IN THIS LIBRARY WITH THE\nNAME \"JES2\".  YOU CAN JUST COPY THIS TO YOUR SYS1.PROCLIB AND SKIP\nTHE IPL SINCE I DON'T MAKE ERRORS :)\n.\nTHE NEXT STEP IS EITHER TO RUN THE DYNPROC MEMBER OF THIS LIBRARY\n(WHICH IS THE SMP4 JOB TO INSTALL ALL OF THE UPDATES(THERE ARE 6))\nOR YOU CAN JUST COPY THE LOAD MODULES FROM THE SECOND FILE ON THE\nTAPE THAT YOU RECEIVED THIS ON TO YOUR SYS1.LPALIB.  ALTERNATIVELY\nYOU COULD COPY THEM TO AN MLPA LIBRARY AND IPL WITH THE MLPA OPTION,\nTHE CHOICE IS YOURS.  IF YOU ARE RUNNING TURNKEY#3, THEN YOU DON'T HAVE\nTO WORRY ABOUT THE SMP4 JOB OR JUST COPYING THE MODULES BECAUSE THEY\nHAVE BEEN EXTENSIVLY TESTED.  ONE WAY OR THE OTHER, YOU WILL HAVE TO\nIPL WITH A CLPA (OR MLPA) TO ACTIVATE THE CHANGES.\n.\nTHE ADVANTAGE TO RUNNING THE SMP4 JOB IS THAT YOU WON'T HAVE TO WORRY\nABOUT LOSING THE MODS SHOULD YOU INSTALL SOME CHANGES TO YOUR SYSTEM\nLATER.  I SEPARATED THE ACCEPT JOB TO A SEPARATE MEMBER (ACCEPT) JUST\nIN CASE YOU WANT TO DO A SYSGEN IN THE FUTURE, (ONE OF THE CHANGES IS\nTO SGIEF441 WHICH IS NEEDED DURING SYSGEN).  I SUGGEST THAT AT SOME\nPOINT, YOU RUN THE ACCEPT JOB, BUT YOU CAN TAKE YOUR TIME, (UNLESS\nYOU ARE BURNING UP TO DO A SYSGEN SOON, IN WHICH CASE YOUR SHOULD RUN\nTHE ACCEPT JOB).\n.\nYOU CAN ALSO DECIDE TO INSTALL THIS THING MANUALLY, IN WHICH CASE\nYOU ASSEMBLE THE IEFVPP MODULE INTO A OBJ LIBRARY (USE IEFVPP$), AND\nCOPY THE OBJECT CODE INTO THE STEP2 MEMBER, YOU THEN RUN STEPS 1-5\n(YOU WILL NEED TO USE THE -A VERSIONS IN MOST CASES I.E. STEP3A)\nUSE OF THE DYNAMIC PROCLIB SUPPORT IS REALLY SIMPLE:\n\n  DIRECTIONS FOR USING DYNAMIC PROCLIB:\n THE USER WISHING TO SUPPLY A PRIVATE PROCLIB NEED ONLY\n CODE ONE OR MORE DD STATEMENTS (FOLLOWING THE NORMAL\n RULES OF CONCATENATION) WITH THE DD NAME OF \"JOBPROC\".\n THE JOBPROC DD MUST APPEAR BEFORE THE FIRST EXEC STATE-\n MENT OF A JOB.  THE ONLY JCL KEYWORD PARAMETERS SUPPORTED\n ARE DSN, DISP, UNIT, VOL=SER, VOL=REF, AND SYSPROC.  USE\n OF OTHER JCL PARAMETERS MAY CAUSE ERRORS OR MAY BE IGNORED.\n DSN IS MANDATORY.  DISP CAN ONLY BE \"SHR\".  UNIT AND VOL\n ARE NECESSARY ONLY IF THE DATA SET IS NOT CATALOGUED (VIA\n MASTER AND ALIASES - JOBCAT IS NOT USED).  SYSPROC INDICATES\n THE CONCATENATION (SYSPROC=YES) OR NON-CONCATENATION\n (SYSPROC=NO) OF THE SYSTEM PROCLIBS WITH THE USER SUPPLIED\n PROCLIBS.  THE DEFAULT IS SYSPROC=YES.\n.\nFOR EXAMPLE:\n//BRIAN    JOB (ASSEMBLY),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=BRIAN\n//JOBPROC  DD DISP=SHR,DSN=MY.PROC.LIBRARY,SYSPROC=YES\n//STEP1    EXEC  MYPROC\n/*\n.\nTHIS WILL CASE THE CONVERTER TO FIRST LOOK IN \"MY.PROC.LIBRARY\" FOR\nTHE PROCEDURE \"MYPROC\" AND IF NOT FOUND THERE, IT WILL THEN SEARCH\nTHE NORMAL JES2 CONCATENATION. IF YOU HAD CHANGED THE 'SYSPROC=YES'\nTO 'SYSPROC=NO', THEN THE SEACH FOR THE PROCEDURE \"MYPROC\" WOULD\nHAVE ENDED WITH THE SEARCH OF 'MY.PROC.LIBRARY', AND IF NOT FOUND\nA JCL ERROR WOULD HAVE RESULTED.\n.\nGOOD LUCK, AND HAVE FUN,\n.\nBRIAN WESTERMAN   BRIAN_WESTERMAN@SYZYGYINC.COM\n(800) 767-2244\n(800) 366-4082  -  FAX\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DYNLPA": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x07\\x8f\\x01\\x03\\x07\\x8f\\x14\\x07\\x03T\\x03T\\x00\\x00\\xd5\\xc5\\xe6\\xd3\\xd7\\xc1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-19T00:00:00", "modifydate": "2003-03-19T14:07:00", "lines": 852, "newlines": 852, "modlines": 0, "user": "NEWLPA"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "$DYNLPAO": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x07\\x8f\\x01\\x03\\x07\\x8f\\x14\\x07\\x03\\x06\\x03\\x06\\x00\\x00\\xd6\\xd3\\xc4\\xd3\\xd7\\xc1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-19T00:00:00", "modifydate": "2003-03-19T14:07:00", "lines": 774, "newlines": 774, "modlines": 0, "user": "OLDLPA"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "$SMPLIST": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x07\\x8f\\x01\\x03\\x07\\x8f\\x14\\x17\\x16\\xd6\\x16\\xd6\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-19T00:00:00", "modifydate": "2003-03-19T14:17:00", "lines": 5846, "newlines": 5846, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "#DYPDMY": {"ttr": 3590, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x01\\x00\\x00\\x01\\x03\\x07o\\x01\\x03\\x07o\\x17A\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.01", "flags": 0, "createdate": "2003-03-17T00:00:00", "modifydate": "2003-03-17T17:41:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "BRIAN"}, "text": "++ USERMOD (#DYPDMY)  .\n++ VER   (Z038)  FMID (EBB1102)                /* MVS 3.8 BASE */\n                 PRE (UZ59124\n                             )\n               /*\n\n               PRIVATE PROCLIB MODIFICATIONS\n               VERSION 4, RELEASE 1, MODIFICATION 0\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #DYP001  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #DYP002  IEFVPP    NEW CONVERTER MODULE\n               #DYP003  IEFVHF    ZAP FOR LINKAGE TO IEFVPP3\n               #DYP004  IEFVFA    ZAP FOR LINKAGE TO IEFVPP4 & IEFVPP5\n               #DYP005  IEFVHE    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #DYPDMY  IEFVH1    DUMMY ZAP TO FORCE RELINK OF IEFVH1\n\n                                                                */  .\n++ ZAP   (IEFVH1)  DISTLIB (AOSB3)  .\n         NAME  IEFVH1\n*\n*\n         VER   0300 0000           VERIFY ALL ZEROS IN PATCH AREA\n*\n         REP   0300 0000           REPLACE WITH SAME\n*\n         IDRDATA #DYPDMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#DYP001": {"ttr": 3592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x05\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07o\\x16P\\x00L\\x00R\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.05", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-17T16:50:00", "lines": 76, "newlines": 82, "modlines": 0, "user": "BRIAN"}, "text": "++ USERMOD (#DYP001)  .\n++ VER   (Z038)  FMID (FBB1221)\n                 PRE (UZ45794)\n               /*\n\n               PRIVATE PROCLIB MODIFICATIONS\n               FOR HERCULES TURNKEY#3 SYSTEM\n               VERSION 4, RELEASE 1, MODIFICATION 0\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #DYP001  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #DYP002  IEFVPP    NEW CONVERTER MODULE\n               #DYP003  IEFVHF    ZAP FOR LINKAGE TO IEFVPP3\n               #DYP004  IEFVFA    ZAP FOR LINKAGE TO IEFVPP4 & IEFVPP5\n               #DYP005  IEFVHE    ZAP FOR INTERPRETER JOBPROC BYPASS\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               DO NOT ATTEPMT TO RESEQUENCE THIS MODIFICATION,\n               AS IT CONTAINS A MACRO UPDATE TO A SYSGEN MACRO.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS MOD SUPPLIES THE SYSGEN MACRO UPDATE FOR\n               SGIEF441.  THIS MACRO IS UPDATED TO SUPPORT\n               DYNAMIC PROCLIB.\n\n               DOCUMENTATION ON THE DYNAMIC PROCLIB MODS\n               ARE CONTAINED IN THE MOD CONTAINING THE\n               OBJECT DECK FOR IEFVPP, A NEW MODULE.\n\n               BEWARE THAT THE \"CHANGE\" STATEMENT FOR IEFVH1\n               MAY NOT BE EFFECTIVE WITHOUT A UCLIN TO\n               DELETE THE CURRENT DEFINITIONS OF MODULE\n               IEFVH1 AND LOAD MODULE IEFVH1.\n\n                                                                */  .\n++ JCLIN .\n//SG15 EXEC LINKS,\n// PARM='NCAL,LIST,XREF,LET,RENT',\n// NAME=LPALIB\n//SYSLIN DD *\n INCLUDE AOSB3(IEFVHA)\n INCLUDE AOSB3(IEFVHC,IEFVHCB)\n INCLUDE AOSB3(IEFVINE,IEFVHM,IEFVHL)\n INCLUDE AOSB3(IEFVINA)\n INCLUDE AOSB3(IEFVIND)\n INCLUDE AOSB3(IEFVINB)\n INCLUDE AOSB3(IEFVINC)\n INCLUDE AOSB3(IEFVHEB)\n INCLUDE AOSB3(IEFNB9CR)\n INCLUDE AOSB3(IEFNB9CT)\n INCLUDE AOSB3(IEFVFA,IEFVFB)\n INCLUDE AOSB3(IEFVGM)\n INCLUDE AOSB3(IEFVHQ)\n INCLUDE AOSB3(IEFVHR)\n INCLUDE AOSB3(IEFVHF)\n        CHANGE IEFVHA(IEFVPP0) PRIVATE PROCLIB\n INCLUDE AOSB3(IEFVH1)\n INCLUDE AOSB3(IEZNCODE)\n INCLUDE AOSB3(IEZDCODE)\n INCLUDE AOSB3(IEFVGM90)\n         INCLUDE AOSB3(IEFVPP) PRIVATE PROCLIB\n ENTRY IEFVH1\n NAME IEFVH1(R)\n/*\n++ MACUPD (SGIEF441)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF441,LIST=ALL\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) PRIVATE PROCLIB' #DYP001\n*        NEW CSECT FOR PRIVATE PROCLIB                          #DYP001\n         PUNCH '         INCLUDE AOSB3(IEFVPP) PRIVATE PROCLIB' #DYP001\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DYP002": {"ttr": 3595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x02\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07_ \\x14\\x01o\\x00\\xfa\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.02", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-16T20:14:00", "lines": 367, "newlines": 250, "modlines": 0, "user": "BRIAN"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#DYP003": {"ttr": 3845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x05\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07_ %\\x00A\\x00B\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.05", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-16T20:25:00", "lines": 65, "newlines": 66, "modlines": 0, "user": "BRIAN"}, "text": "++ USERMOD (#DYP003)  .\n++ VER   (Z038)  FMID (EBB1102)                /* MVS 3.8 BASE */\n                 REQ (#DYP004)                 /* ZAP TO IEFVFA */\n                 PRE (UZ51830\n                      #DYP001                  /* SYSGEN MACRO UPDTE */\n                      #DYP002                  /* NEW MODULE IEFVPP */\n                             )\n               /*\n\n               PRIVATE PROCLIB MODIFICATIONS\n               VERSION 4, RELEASE 1, MODIFICATION 0\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #DYP001  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #DYP002  IEFVPP    NEW CONVERTER MODULE\n               #DYP003  IEFVHF    ZAP FOR LINKAGE TO IEFVPP3\n               #DYP004  IEFVFA    ZAP FOR LINKAGE TO IEFVPP4 & IEFVPP5\n               #DYP005  IEFVHE    ZAP FOR INTERPRETER JOBPROC BYPASS\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS SUPERZAP IS WRITTEN WITH RESERVED WORD \"RFULLE\"\n               IN THE CONVERTER WORK AREA USED AS THE ANCHOR FOR\n               THE PRIVATE PROCLIB WORK AREA.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               IEFVHF\n\n               IEFVHF IS THE CONVERTER TERMINATION MODULE.  THE ZAP\n               CHANGES IEFVHF TO BRANCH TO IEFVPP3 IN IEFVPP TO\n               ALLOW PRIVATE PROCLIB CLEANUP TO TAKE PLACE.  THE\n               ADDRESS OF IEFVPP3 RESIDES IN THE PRIVATE PROCLIB\n               WORK AREA THAT IS POINTED TO BY THE ANCHOR WORD IN\n               THE CONVERTER WORK AREA.  THE OFFSET OF THE WORD\n               USED TO ANCHOR THE ADDRESS THE OF THE PRIVATE PROCLIB\n               WORK AREA IN THIS ZAP MUST CORRESPOND TO THAT USED\n               IN THE ASSEMBLY OF IEFVPP.\n\n                                                                */  .\n++ ZAP   (IEFVHF)  DISTLIB (AOSB3)  .\n         NAME  IEFVHF\n*\n*\n         VER   0000 05B0           BALR R11,0 (BASE=0002)\n*\n         VER   00DA 5830,C0EC      L    R3,WANELPTR\n*\n         VER   0260 0000,0000      START OF NEEDED PATCH AREA\n         VER   0264 0000,0000      NEEDED PATCH AREA\n         VER   0268 0000,0000      NEEDED PATCH AREA\n         VER   026C 0000,0000      END OF NEEDED PATCH AREA\n*\n         REP   0260 5830,C0EC      L    R3,WANELPTR OVERLAID INSTRUCT\n         REP   0264 58F0,C3A0      L    R15,RFULLE  (ANCHOR WORD)\n         REP   0268 58F0,F058      L    R15,PPVPP3  A(IEFVPP3)\n         REP   026C 07FF           BR   R15  RETURN ON R14\n*\n         REP   00DA 45E0,B25E      BAL  R14,PATCH\n*\n         IDRDATA #DYP003\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DYP004": {"ttr": 3847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x03\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07_ \\x15\\x00l\\x00l\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.03", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-16T20:15:00", "lines": 108, "newlines": 108, "modlines": 0, "user": "BRIAN"}, "text": "++ USERMOD (#DYP004)  .\n++ VER   (Z038)  FMID (EBB1102)               /* MVS 3.8 BASE */\n                 REQ (#DYP003)                /* ZAP TO IEFVHF */\n                 PRE (\n                      UZ69627                 /* PTF  */\n                      #DYP001                 /* SYSGEN MACRO UPDATE */\n                      #DYP002                 /* NEW MODULE IEFVPP */\n                             )\n               /*\n\n               PRIVATE PROCLIB MODIFICATIONS\n               VERSION 4, RELEASE 1, MODIFICATION 0\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #DYP001  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #DYP002  IEFVPP    NEW CONVERTER MODULE\n               #DYP003  IEFVHF    ZAP FOR LINKAGE TO IEFVPP3\n               #DYP004  IEFVFA    ZAP FOR LINKAGE TO IEFVPP4 & IEFVPP5\n               #DYP005  IEFVHE    ZAP FOR INTERPRETER JOBPROC BYPASS\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS SUPERZAP IS WRITTEN WITH RESERVED WORD \"RFULLE\"\n               IN THE CONVERTER WORK AREA USED AS THE ANCHOR FOR\n               THE PRIVATE PROCLIB WORK AREA.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               IEFVFA\n\n               IEFVFA IS THE CONVERTER SCAN ROUTINE.  THE ZAP IS\n               TWO-FOLD.\n\n               FIRST, AN ENTRY IN THE JCL KEYWORD TABLE IS\n               CONVERTED TO THE \"SYSPROC=\" KEYWORD.  \"SUBALLOC=\"\n               WAS CHOSEN, SINCE ITS USE IS VIRTUALLY NON-EXISTANT.  TO\n               FILL IN THE EXTRA BYTE LEFT OVER WHEN \"SYSPROC=\" AND ITS\n               INTERNAL TEXT CODE (SYMBOL SYSPROCK DEFINED IN IEFVPP)\n               IS ZAPPED OVER \"SUBALLOC=\" AND ITS INTERNAL TEXT\n               CODE (SYMBOL SUBALLOK - X'4C' - DEFINED IN MACRO\n               IEFVKEYS), \"SYSPROC=\" IS MADE MUTUALLY EXCLUSIVE\n               WITH \"DCB=\" (SYMBOL DCBK - X'40' - DEFINED IN MACRO\n               IEFVKEYS).\n\n               SECOND, IEFVFA IS CHANGED TO BRANCH TO BOTH IEFVPP4\n               IN IEFVPP AND IEFVPP5 IN IEFVPP, IMMEDIATELY\n               AFTER A JCL STATEMENT HAS BEEN CONVERTED\n               INTO INTERNAL TEXT.  IEFVPP4 EFFECTS LINKAGE TO\n               IEFVPP1 AND IEFVPP2 IN IEFVPP DEPENDING ON THE\n               STATEMENT BEING PROCESSED.  IEFVPP1 PERFORMS\n               PRIVATE PROCLIB ALLOCATION.  IEFVPP2 PERFORMS\n               PRIVATE PROCLIB CONCATENATION AND OPEN.  IEFVPP5\n               CALLS IEFUJV WITH ENTRY CODE 64, GIVING IEFUJV\n               AN INTERNAL TEXT EXIT.  THIS CODE IS IN SUPPORT OF\n               THE JOB STREAM MANAGER.  IF THIS NEW ENTRY INTO\n               IEFUJV IS NOT DESIRED OR NECESSARY, IT MAY BE\n               ELIMINATED BY APPROPRIATE CHANGES TO THIS ZAP\n               OR ASSEMBLING IEFVPP WITHOUT THE INTERNAL TEXT\n               EXIT OPTION SET.\n\n               THE ADDRESSES OF IEFVPP4 AND IEFVPP5 RESIDE IN THE\n               PRIVATE PROCLIB WORK AREA THAT IS POINTED TO BY THE\n               ANCHOR WORD THE CONVERTER WORK AREA.  THE OFFSET OF THE\n               WORD USED TO ANCHOR THE ADDRESS THE OF THE PRIVATE\n               PROCLIB WORK AREA IN THIS ZAP MUST CORRESPOND TO\n               THAT USED IN THE ASSEMBLY OF IEFVPP.\n\n                                                                */  .\n++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n*\n         VER   0000 05B0                    BALR RB,0     (BASE=0002)\n         VER   003A 58A0,B012               L    RA,VFA02 (BASE=1002)\n*\n         VER   071C 2000           TXTBFLEN DC   H'8192'\n*\n         VER   071E 45E0,BB68               BAL  R14,AOTXTLTH\n*\n         VER   0B6A 5850,C02C      AOTXTLTH L    R5,TEXTBUFP\n*\n         VER   1DF0 D7E3,C3C8               DC   C'PTCH'\n         VER   1E20 0000,0000,0000,0000     START OF NEEDED PATCH AREA\n         VER   1E28 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E30 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E38 0000,0000               END OF NEEDED PATCH AREA\n*\n         VER   23A0 16E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   23A0 16E2,E8E2,D7D9,D6C3,7E01,40  SYSPROC=\n*\n         REP   1E20 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E24 58F0,F05C               L    R15,PPVPP4 A(IEFVPP4)\n         REP   1E28 05EF                    BALR R14,R15\n         REP   1E2A 45E0,BB68               BAL  R14,AOTXTLTH\n         REP   1E2E 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E32 58F0,F060               L    R15,PPVPP5 A(IEFVPP5)\n         REP   1E36 41E0,B720               LA   R14,RETURN ADDRESS\n         REP   1E3A 07FF                    BR   R15\n*\n         REP   071E 47F0,AE1E               B    PATCH AREA\n*\n         IDRDATA #DYN004\n*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DYP005": {"ttr": 3850, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x02\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07_ \\x15\\x00G\\x00G\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.02", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-16T20:15:00", "lines": 71, "newlines": 71, "modlines": 0, "user": "BRIAN"}, "text": "++ USERMOD (#DYP005)  .\n++ VER   (Z038)  FMID (EBB1102)               /* MVS 3.8 BASE */\n                 PRE (UZ58715\n                      #DYP001                 /* SYSGEN MACRO UPDATE */\n                      #DYP002                 /* NEW MODULE IEFVPP */\n                      #DYP003                 /* ZAP TO IEFVHF */\n                      #DYP004                 /* ZAP TO IEFVFA */\n                             )\n               /*\n\n               PRIVATE PROCLIB MODIFICATIONS\n               VERSION R, RELEASE 1, MODIFICATION 0\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #DYP001  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #DYP002  IEFVPP    NEW CONVERTER MODULE\n               #DYP003  IEFVHF    ZAP FOR LINKAGE TO IEFVPP3\n               #DYP004  IEFVFA    ZAP FOR LINKAGE TO IEFVPP4 & IEFVPP5\n               #DYP005  IEFVHE    ZAP FOR INTERPRETER JOBPROC BYPASS\n\n               IEFVHE\n\n               IEFVHE IS THE INTERPRETER GET AND ROUTE ROUTINE.  THE\n               ZAP CHANGES IEFVHE TO CHECK FOR A \"JOBPROC\" DD\n               STATEMENT AND BYPASS PROCESSING IT.  THIS IS TO KEEP\n               THE JOBPROC STATEMENT(S) FROM BEING PROCESSED BY THE\n               INTERPRETER.  IF THIS IS NOT DONE, ANY JOB WITH A\n               JOBPROC DD STATEMENT WILL RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THE BYTE USED TO CONTAIN THE FLAG BIT IN THE\n               INTERNAL TEXT HAS BEEN CHANGED FROM THE FOURTH\n               TO THE THIRD BYTE.  THIS IS TO ACCOMODATE THE\n               USE OF THE PREVIOUSLY USED FLAG BY THE CONVERTER\n               ITSELF.\n\n               THIS MODIFICATION DOES NOT NEED TO PRE-REQ OR CO-REQ\n               ANY OF THE OTHER MODIFICATIONS FOR DYNAMIC PROCLIB,\n               AS IT DOES NOT HAVE ANY DEPENDANCIES ON THE\n               EXISTANCE OF THE OTHER CODE.  THE PRE-REQUISITES\n               LISTED ARE TO INSURE THAT ALL OF THE OTHER PIECES\n               ARE PROPERLY INSTALLED.  IF THIS MOD IS\n               LEFT OFF, HOWEVER, ANY JOB THAT CONTAINS \"JOBPROC\"\n               DD STATEMENTS WILL RECEIVE A JCL ERROR.\n\n                                                                  */ .\n++ ZAP   (IEFVHE)  DISTLIB (AOSB3) .\n         NAME  IEFVHE\n*\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*\n         VER   0060 5860,C0EC      VHE0010 L R6,WANELPTR\n*\n         VER   014E D700,C16E,C16E         XC   SWY2(1),SWY2\n*\n         VER   02A0 0000,0000,0000,0000    START OF NEEDED PATCH AREA\n         VER   02A8 0000,0000,0000,0000    END OF NEEDED PATCH AREA\n*\n         REP   02A0 9180,7002              TM   STRINDCS,JPROCSTR\n         REP   02A4 4710,B05E              BO   VHE0010\n         REP   02A8 D700,C16E,C16E         XC   SWY2(1),SWY2\n         REP   02AE 07FF                   BR   R15  RETURN\n*\n         REP   014E 45F0,B29E,0700         BAL  R15,PATCH; NOPR 0\n*\n         IDRDATA #DYP005\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE619": {"ttr": 3853, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04;\\x00\\x00\\x01\\x03\\x07\\x8f\\x01\\x03\\x07\\x8f\\x14!\\x00\"\\x00\"\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf9@@@'", "ispf": {"version": "04.59", "flags": 0, "createdate": "2003-03-19T00:00:00", "modifydate": "2003-03-19T14:21:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "CBT-459"}, "text": "//***FILE 619 is from Brian Westerman and contains the Dynamic      *   FILE 619\n//*           Proclib modification, fitted to the Hercules MVS 3.8J *   FILE 619\n//*           Turnkey #3 system.                                    *   FILE 619\n//*                                                                 *   FILE 619\n//*       Some of the members of this pds are in TSO XMIT format,   *   FILE 619\n//*       which may cause a small amount of difficulty with an      *   FILE 619\n//*       MVS 3.8J system, unless you know how to use Jim           *   FILE 619\n//*       Morrison's XMIT370 and RECV370 programs (see File 571).   *   FILE 619\n//*       Or you might want to download these members to a pc,      *   FILE 619\n//*       and use the XMIT-manager program (available from a link   *   FILE 619\n//*       at www.cbttape.org) to look at the $SMPLIST at least.     *   FILE 619\n//*                                                                 *   FILE 619\n//*       The modification allows execution of JCL which looks      *   FILE 619\n//*       like this:                                                *   FILE 619\n//*                                                                 *   FILE 619\n//*  //BRIAN    JOB (ASSEMBLY),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,  *   FILE 619\n//*  //         NOTIFY=BRIAN                                        *   FILE 619\n//*  //JOBPROC  DD DISP=SHR,DSN=MY.PROC.LIBRARY,SYSPROC=YES         *   FILE 619\n//*  //STEP1    EXEC  MYPROC                                        *   FILE 619\n//*  /*                                                             *   FILE 619\n//*                                                                 *   FILE 619\n//*     This will cause the converter to first look in              *   FILE 619\n//*     \"MY.PROC.LIBRARY\" for the procedure \"MYPROC\" and if not     *   FILE 619\n//*     found there, it will then search the normal JES2            *   FILE 619\n//*     concatenation.  If you had changed the 'SYSPROC=YES' to     *   FILE 619\n//*     'SYSPROC=NO', then the search for the procedure \"MYPROC\"    *   FILE 619\n//*     would have ended with the search of 'MY.PROC.LIBRARY',      *   FILE 619\n//*     and if not found, a JCL error would have resulted.          *   FILE 619\n//*                                                                 *   FILE 619\n//*     Brian Westerman                                             *   FILE 619\n//*     email: brian_westerman@syzygyinc.com                        *   FILE 619\n//*     (800) 767-2244                                              *   FILE 619\n//*     (800) 366-4082  - FAX                                       *   FILE 619\n//*                                                                 *   FILE 619\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACCEPT": {"ttr": 3855, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x07_\\x01\\x03\\x07_!9\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xe8\\xe9\\xe8\\xc7\\xe8\\xf1@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-16T21:39:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "SYZYGY1"}, "text": "//ACCEPT JOB  (SMPEJOB),\n//             'DYNAMIC PROCLIB',\n//             CLASS=A,\n//             MSGCLASS=A,\n//             MSGLEVEL=(1,1),\n//             REGION=8000K\n//*********************************************************************\n//*\n//* NAME: SYS1.DYNAMIC.PROCLIB(ACCEPT)\n//*\n//* DESC: ACCEPT DYNAMIC PROCLIB SUPPORT\n//*\n//* YOU MAY ELECT TO INSTALL MANUALLY BY FOLLOWING THE DIRECTIONS\n//*WHICH ARE INCLUDED IN THE $$$DOC MEMBER OF THIS PDS\n//*\n//* IF YOU HAVE ANY QUESTIONS PLEASE CALL:\n//*\n//* BRIAN WESTERMAN        EMAIL:  BRIAN_WESTERMAN@SYZYGYINC.COM\n//* SYZYGY INCORPORATED\n//* PHONE: (800) 767-2244  FAX:(800) 366-4082\n//*********************************************************************\n//*\n//ACCEPT  EXEC SMPAPP\n//AMODGEN  DD  DISP=SHR,DSN=SYS1.AMODGEN\n//AGENLIB  DD  DISP=SHR,DSN=SYS1.AGENLIB\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB\n//SMPCNTL  DD  *\n ACCEPT  SELECT(#DYP001,#DYP002,#DYP003,#DYP004,#DYP005)\n         DIS(WRITE)\n .\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNPROC": {"ttr": 3857, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x08\\x00\\x00\\x01\\x03\\x07_\\x01\\x03\\x07o\\x19F\\x00_\\x001\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.08", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-17T19:46:00", "lines": 95, "newlines": 49, "modlines": 0, "user": "BRIAN"}, "text": "//DYNPROC JOB  (SMPEJOB),\n//             'DYNAMIC PROCLIB',\n//             CLASS=A,\n//             MSGCLASS=A,\n//             MSGLEVEL=(1,1),\n//             REGION=8000K\n//*********************************************************************\n//*\n//* NAME: SYS1.DYNAMIC.PROCLIB(DYNPROCS)\n//*\n//* DESC: INSTALL DYNAMIC PROCLIB SUPPORT\n//*\n//* YOU MAY ELECT TO INSTALL MANUALLY BY FOLLOWING THE DIRECTIONS\n//*WHICH ARE INCLUDED IN THE $$$DOC MEMBER OF THIS PDS\n//*\n//* IF YOU HAVE ANY QUESTIONS PLEASE CALL:\n//*\n//* BRIAN WESTERMAN        EMAIL:  BRIAN_WESTERMAN@SYZYGYINC.COM\n//* SYZYGY INCORPORATED\n//* PHONE: (800) 767-2244  FAX:(800) 366-4082\n//*********************************************************************\n//*\n//*********************************************************************\n//*\n//* DESC: RECEIVE THE DYNAMIC PROCLIB USERMODS\n//*       MAKE SURE YOU CHANGE THE DSN OF THE SMPPTFIN TO MATCH\n//*       THE DATASET NAME WHERE THE USERMODS ARE.  (USUUALLY THIS ONE)\n//*\n//*********************************************************************\n//RECEIVE EXEC SMPREC\n//*\n//*  REJECT THE USERMODS JUST IN CASE THIS IS A RE-RUN\n//*  THEN RECEIVE ALL 6 USERMODS\n//*\n//SMPPTFIN DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYP001)\n//         DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYP002)\n//         DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYP003)\n//         DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYP004)\n//         DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYP005)\n//         DD  DISP=SHR,DSN=SYS1.DYNAMIC.PROCLIB(#DYPDMY)\n//SMPCNTL  DD  *\n REJECT  SELECT(#DYP001,#DYP002,#DYP003,#DYP004,#DYP005)\n .\n RESETRC\n .\n RECEIVE SELECT(#DYP001,#DYP002,#DYP003,#DYP004,#DYP005,#DYPDMY)\n .\n//APPLY   EXEC SMPAPP\n//*\n//*  APPLY THE SGIEF441 AND IEFVPP UPDATES\n//*\n//AMODGEN  DD  DISP=SHR,DSN=SYS1.AMODGEN\n//AOSB3    DD  DISP=SHR,DSN=SYS1.AOSB3\n//AGENLIB  DD  DISP=SHR,DSN=SYS1.AGENLIB\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB\n//SMPCNTL  DD  *\n APPLY   SELECT(#DYP001,#DYP002)\n         DIS(WRITE)\n .\n//APPLY   EXEC SMPAPP\n//*\n//*  APPLY THE DUMMY UPDATE TO FORCE A LATER RE-LINK OF IEFVH1\n//*\n//AMODGEN  DD  DISP=SHR,DSN=SYS1.AMODGEN\n//AOSB3    DD  DISP=SHR,DSN=SYS1.AOSB3\n//AGENLIB  DD  DISP=SHR,DSN=SYS1.AGENLIB\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB\n//SMPCNTL  DD  *\n APPLY   SELECT(#DYPDMY)\n         DIS(WRITE)\n .\n//RESTORE EXEC SMPAPP\n//*\n//*  RESTORE THE DUMMY UPDATE, THIS FORCES A RE-LINK OF IEFVH1\n//*\n//AMODGEN  DD  DISP=SHR,DSN=SYS1.AMODGEN\n//AOSB3    DD  DISP=SHR,DSN=SYS1.AOSB3\n//AGENLIB  DD  DISP=SHR,DSN=SYS1.AGENLIB\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB\n//SMPCNTL  DD  *\n RESTORE SELECT(#DYPDMY)\n         DIS(WRITE)\n .\n//APPLY   EXEC SMPAPP\n//*\n//*  APPLY THE ZAPS TO IEFVFA, IEFVHE AND IEFVHF\n//*\n//AMODGEN  DD  DISP=SHR,DSN=SYS1.AMODGEN\n//AOSB3    DD  DISP=SHR,DSN=SYS1.AOSB3\n//AGENLIB  DD  DISP=SHR,DSN=SYS1.AGENLIB\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB\n//SMPCNTL  DD  *\n APPLY   SELECT(#DYP003,#DYP004,#DYP005)\n         DIS(WRITE)\n .\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBCOPYT": {"ttr": 4098, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x03\\x00\\x00\\x01\\x03\\x07_\\x01\\x03\\x07o \\t\\x00 \\x00\\x0c\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.03", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-17T20:09:00", "lines": 32, "newlines": 12, "modlines": 0, "user": "BRIAN"}, "text": "//SYZYGY1A JOB (M096,0616,99,9999),'SYSTEMS*BRIAN',NOTIFY=BRIAN,\n//       MSGCLASS=A,TYPRUN=HOLD\n//COPY      EXEC PGM=IEBCOPY,REGION=512K\n//SYSPRINT   DD  SYSOUT=*\n//SYSUT3  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//SYSUT4  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//OUT  DD DSN=DYNAMIC.PROCLIB,UNIT=TAPE,VOL=SER=000005,\n//     LABEL=(1,SL),DISP=(NEW,PASS)\n//IN  DD DSN=SYS1.DYNAMIC.PROCLIB,DISP=SHR\n//SYSIN  DD *\n COPY INDD=IN,OUTDD=OUT\n/*\n//COPY      EXEC PGM=IEBCOPY,REGION=512K\n//SYSPRINT   DD  SYSOUT=*\n//SYSUT3  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//SYSUT4  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//OUT  DD DSN=LPALIB.MODULES,UNIT=TAPE,VOL=SER=000005,\n//     LABEL=(2,SL),DISP=(NEW,PASS)\n//IN  DD DSN=SYZYGY.LPALIB,DISP=SHR\n//SYSIN  DD *\n COPY INDD=IN,OUTDD=OUT\n/*\n//COPY      EXEC PGM=IEBCOPY,REGION=512K\n//SYSPRINT   DD  SYSOUT=*\n//SYSUT3  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//SYSUT4  DD  UNIT=SYSDA,SPACE=(CYL,(5,10))\n//OUT  DD DSN=OLD.LPALIB.MODULES,UNIT=TAPE,VOL=SER=000005,\n//     LABEL=(3,SL),DISP=(NEW,PASS)\n//IN  DD DSN=SYS1.OLDLPA,DISP=SHR\n//SYSIN  DD *\n COPY INDD=IN,OUTDD=OUT\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFCVRWA": {"ttr": 4100, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*%GOTO CNVPROLG;\n         MACRO\n         IEFCVRWA\n*\n*%CNVPROLG:;\n*/*\n*   MACMEAN  IEFCVRWA MEANS CONVERTER WORK AREA\n*   MACCOMP  Y-2  SC1B9/PZD11\n*   MACSTAT  Y-2  74038/VS02718                                 YM02718\n*\n***********************************************************************\n*                                                                     *\n*   IEFCVRWA MAPS DATA FIELDS AND SWITCHES UNIQUE TO THE CONVERTER.   *\n*   IT MUST BE INVOKED IMMEDIATELY FOLLOWING IEFCOMWA, TO INSURE      *\n*   CORRECT ADDRESSABILITY. REGISTER 12 IS THE BASE REGISTER ACROSS   *\n*   THE ENTIRE WORK AREA MAPPED BY BOTH IEFCOMWA AND IEFCVRWA.        *\n*   THEREFORE DISPLACEMENTS FOR THE CONVERTER WORK AREA MUST BE A     *\n*   CONTINUATION OF THOSE FOR THE COMMON WORK AREA.                   *\n*                                                                     *\n*   THIS MACRO IS NEW FOR VS2/RELEASE 2.                        Y02668*\n*                                                                     *\n***********************************************************************\n**/\n*%GOTO CNVWAPLS;\n*/*\n*\nCVRWA    DS    0F                  START OF CONVERTER WORK AREA. Y02668\n*\n*  POINTERS, WORK AND DATA AREAS.\n*\nPDCBP    DS    F                        PROCLIB DCB OR NOTED TTR\nIWAINTS3 DS    F                   PTR TO EXIT LIST ACCT ENTRY     AABA\nIWAINTS4 DS    F                   PTR TO BLOCKED PROCLIB BUFFER   AABA\nCWABPROC EQU   IWAINTS4\nIWAINTS5 DS    F                   PTR TO JOB MNGMT RECORD         AABA\nCWATXTEX DS    F                   PTR TO TEXT EXIT RTNE ADDR.\nRSTMT    DS    F                        PTR TO RDR STMT\n         DS    CL1                      VERB #\n*                                          NULL=0\n*                                          JOB=1\n*                                          EXEC=2\n*                                          DD=4\n*                                          PROC=8                  AAAA\nSSE      EQU   128                         DD STMT SEQUENCE ERROR\nCRE      EQU   64   BIT 1         MISPLACED SYSCHK DD STMT         AACA\n         DS    CL1                      NAME LENGTH\n         DS    CL1                      RELATIVE LIST PTR\n         DS    CL1                 RESERVED.\nPSTMT    DS    2F                       SAME AS RDR PARM LIST\nVERB     EQU   4                        OFFSET FOR VERB BYTE\nNAMEL    EQU   5                        OFFSET FOR NAME LENGTH\nLISTPTR  EQU   6                        OFFSET FOR REL LIST PTR\n*                                  PROCLIB MERGE CONTROL DATA\nPDNM     DS    CL8                      PROC DD NAME            YM02703\nPSNM     DS    CL8                      PROC STEP NAME          YM02703\nRDNM     DS    CL8                      RDR DD NAME             YM02703\nRSNM     DS    CL8                      RDR STEP NAME           YM02703\nPPSN     DS    CL8                      PREVIOUS PROC STEP NAME YM02703\nIWAPARM  DS    F   ADDRESS OF THE PARAMETER LIST USED FOR          O106\n*                     PROCESSING IN-LINE PROCEDURES                O106\n*                     SET AND USED BY IEFVINA AND IEFVEA           O106\nDREFB    DS    CL176        SYMBOLIC PARAMETER TABLE             Y02668\nIWAJOBS5 DS    F                   CHKP/REST - PTR TO SYSCHK DD    AAAA\nIWAWKBF  DS    F   ADDRESS OF THE WORK AREA GOTTEN BY IEFVHCB      O106\nIWASTAPL DS    F         POINTER TO R/I STAE PARAMETER LIST      A39047\nCWAJMRPT DS    F                   POINTER TO JMR.\nIWANELJC DS    F         NEL JCL POINTER FIELD.                    I272\n*                        STORED BY IEFVH1. USED BY IEFVFA FOR      I272\n*                            INPUT TO POST SCAN ROUTINE            I272\nTBEGP    DS    F                        TEXT BEGIN POINTER\nTKEYP    DS    F                        TEXT KEY POINTER\nTNUMP    DS    F                        TEXT NUMBER POINTER\nTLENP    DS    F                        TEXT LENGTH POINTER\nTENDP    DS    F                        TEXT END POINTER\nAODSPCSA DS    F                   SAVE RETURN REGISTER IN VFA.  Y02668\nAOFDTMP1 DS    F                   ADDR OF SPECIAL FIND ROUTINE. Y02668\nAOKSCHSA DS    8F                  AOKSRCHR REG SAVE AREA.       Y02668\nAOGACSA  EQU   AOKSCHSA            GET AND CLEAR RTNE SAVE AREA. Y02668\n*                                                                Y02668\nAOKSR1SA DS    2F                  AOKSR1 REG SAVE AREA.         Y02668\nAOHEBSA  DS    F                   VHEB RETURN REG SAVE AREA.    Y02668\nAODFLTSA DS    7F                  AODFAULT REG SAVE AREA.       Y02668\nAOBSKSA  DS    F                   AOBASEKY REG SAVE AREA.       Y02668\nCWASAVPT DS    F                   PTR TO SAVE AREA OF CVR'S     Y02668*\n                                   CALLER - ALSO USED BY         Y02668*\n                                   SUBSYSTEM AT TEXT EXIT.       Y02668\nAOFDPCSV DS    CL8                 PROCEDURE NAME.               Y02668\nAOSCHKYS DS    CL8                 LIST OF KEYS FOR AOKSRCHR.    Y02668\nIWABPAM  DS    CL3                 BPAM ACCESS METHOD ADDRESS M3739O106\n*                       SET AND USED BY IEFVEA FOR PROCESSING      O106\n*                       IN-LINE PROCEDURES                         O106\n*\nAOKSRPRM DS    CL3                 AOKSR1 PARM LIST.             Y02668\nAOKSRNBR EQU   AOKSRPRM            NUMBER OF PARAMS THIS KEYWORD.Y02668\nAOKSRSCT EQU   AOKSRPRM+1          LENGTH OF PARAM OR SUBLIST CT.\nAOKSRBY3 EQU   AOKSRPRM+2          LENGTH OF PARAM IF AOKSRCT IS Y02668*\n                                   A SUBLIST COUNT.              Y02668\nIWANLRC  DS    H                   NUMBER RECORDS (BLOCKED PROC)   AABA\nCURLE    DS    H                        CURRENT LEVEL\nLASLE    DS    H                        LAST LEVEL\nAOSTRLTH DS    H                   LENGTH OF TEXT STRING.        Y02668\nIWAWRNMS DS    CL1                 WARNING MESSAGE CODE.         Y02668\nCWACHIDL DS    CL1                 CHECKID LENGTH.               Y02668\n*\n*  SWITCH BYTES.\n*\nIWAJMSGL DS    CL1                 MSGLEVEL VALUE.               Y02668\nAOMSGLV0 EQU   X'00'               BIT SETTING FOR MSGLEVEL=1.   Y02668\nAOMSGLV1 EQU   X'10'               BIT SETTING FOR MSGLEVEL=1.   Y02668\nAOMSGLV2 EQU   X'20'               BIT SETTING FOR MSGLEVEL=2.   Y02668\n*\nAOSW2    DS    CL1                 SWITCH BYTE.\nAOPROCNM EQU   X'08'               PROCNAME POSITIONAL ON EXEC.  Y02668\nAOSW3    DS    CL1                                               Y02668\nAOBTCHSW EQU   X'01'               RETURN TO VHA FLAG.           Y02668\nAOFDPCL  DS    CL1                 LENGTH OF PROCEDURE NAME.     Y02668\nIWAEXTS  DS    CL1            SPECIAL CALLER EXITS                I171\nIWASFIND EQU   2                        BIT-6 SPECIAL PROCLIB FINDI171\nIWAFINDP DS    CL3                      ENTRY POINT FOR 'FIND' ISSI171\n*                                       FOR SPECIAL PROCLIB ACCESSI171\nOSW2     DS    CL1                 OPTION SWITCHES FROM PARM FIELD\nCMAUTH   EQU   3                        BITS-6,7 COMMAND AUTHORIZATION\nSWA      DS    CL1                 SWITCH A\nJTOP     EQU   128                      BIT-0  JOB TO PROCESS\nJHS      EQU   64                       BIT-1 JOB HAS A STEP\nEOFR     EQU   2                        BIT-6 EOF RECEIVED\nDLM      EQU   1                        BIT-7 DLM KWD SPECIFIED YM03459\nSWB      DS    CL1                 SWITCH B\nCXP      EQU   128                      BIT-0 CONTINUATION EXP BY SCAN\nCXPN     EQU   64                       BIT-1 CONT EXP & NOT RECEIVED\nCXPC     EQU   32                       BIT-2 CONT EXP & CANCELLED\nFRCV     EQU   2                        BIT-6 1ST STMT RECEIVED\nSWC      DS    CL1                 SWITCH C\nIOERR    EQU   64                       BIT-1 I/O ERROR ON INPUT\nNRCV     EQU   32                       BIT-2 RDR NULL RECEIVED\nPEXP     EQU   16                       BIT-3 PROCEDURE EXEC STMT EXPEC\nSWD      DS    CL1                 SWITCH D\nFEXRCV   EQU   32                       BIT-2 1ST EXEC RCVD THIS JOB\nSYMPRC   EQU   1                        BIT-7 FIRST ACCESS OF PROC AAAA\nSWV      DS    CL1           SCAN SWITCHES     288               A24895\n*                  THIS BYTE OF SWITCHES MOVED FROM SWA TO GIVE  A24895\n*                            IT LIFE ACROSS CALLS OF IEFVFB.     A24895\nOVKEYSWZ EQU   SWV           IF ON, THIS KEY OVERRIDDEN  187     A24895\nOVKEYSW  EQU   128                                               A24895\nPROCERRZ EQU   SWV           IF ON, ERROR THIS STATEMENT  187    A24895\nPROCERR  EQU   64                                                A24895\nVERBCSWZ EQU   SWV           187                                 A24895\nVERBCSW  EQU   32                                                A24895\nFBFLUSHZ EQU   SWV           SYMBOLIC PARM FLUSH INDICATOR       A24895\nFBFLUSH  EQU   16                                                A24895\nAMPSWZ   EQU   SWV           IF ON,TEXT DEFINES A SYMBOLIC PARM  A24895\nAMPSW    EQU   8                                                 A24895\nFBLITRLZ EQU   SWV    IF ON, TEXT IS LITERAL(ENCLOSED IN QUOTES) A24895\nFBLITRL  EQU   4                                                 A24895\nFPRNSWZ  EQU   SWV           IF ON, INDICATES LEFT PAREN         A24895\nFPRNSW   EQU   2                                                 A24895\nLPBYSWZ  EQU   SWV           IF ON, BYPASS LEFT PAREN CHECK      A24895\nLPBYSW   EQU   1                                                 A24895\nCLEARVZ  EQU   SWV           187                                 A24895\nCLEARV   EQU   OVKEYSW+PROCERR+VERBCSW+FBFLUSH+AMPSW+FBLITRL+FPRNSW 895\n*                                  PROC STATEMENT PARAM LIST\nCRSW1    DS    CL1                CHECKPOINT RESTART SWITCHES      AACA\nCPFLG    EQU   128  BIT 0         GET/FREE SYSCHK DD STMT CORE     AACA\nCRRES1   EQU   16   BIT 3         RESERVED                         AACA\n         DS    CL1                 RESERVED                      Y02668\nSYMTTR   DS    F                   TTR OF FIRST SYMBUF\nIWANELEN DS    CL1      LENGTH OF NEL,SET BY IEFVH1,USED BY\n*                           IEFVH2,IEFVHN,ETC.\n*\nSWY      DS    CL1                 SCAN SWITCHES\nSWZ      DS    CL1                 CONTROL AND SCAN JOINT SWITCHES\nCMT      EQU   128                      COMMENT SWITCH\nDDOV     EQU   64                       DD OVERRIDE SWITCH\nENDS     EQU   32                       END SCAN SWITCH\nCOLST    EQU   16                       COLUMN 72 SWITCH\nJOBSW    EQU   8                        JOB SWITCH\nEXECSW   EQU   4                        EXEC SWITCH\nDDSW     EQU   2                        DD SWITCH\nSNPSW    EQU   1                        STATEMENT SYSOUT SWITCH.\nRCHAR1   DS    CL1                 RESERVED                     YM00373\nCWALINK  DS    F                   PTR TO TEXT EXIT LINK AREA   YM00373\nCWALINKL DS    F                   LTH OF LINK AREA             YM00373\nCWAPSENM DS    CL8                 POST SCAN EXIT NAME          YM00373\nCDAUTHWA DS    F                   COMD AUTH CONVERSION WK AREA.YM02718\nRBLOCK   DS    20F                 BLOCK OF UNNAMED RES'D WDS.  YM02718\nRFULLA   DS    F                   RESERVED                     YM02718\nRFULLB   DS    F                   RESERVED                     YM02718\nRFULLC   DS    F                   RESERVED                     YM02718\nRFULLD   DS    F                   RESERVED                     YM02718\nRFULLE   DS    F                   RESERVED                     YM02718\n*          ********************************************************\n*          *                                                      *\n*          *             END OF CONVERTER WORK AREA.              *\n*          *                                                      *\n*          ********************************************************\n*\nCVRWAEND DS    0C                                               YM00373\nCVRWALTH EQU   CVRWAEND-CVRWA      LTH OF CVR WORK AREA.         Y02668\nWALTH    EQU   CVRWAEND-COMWA      LTH OF CVR+COMMON WORK AREAS. Y02668\n         MEND\n**/\n*%CNVWAPLS:;\n*DCL\n* 1 CVRWA BASED(ADDR(COMWA)+LENGTH(COMWA)) BDY(WORD),        /*Y02668*/\n*\n*/*  POINTERS, WORK AND DATA AREAS                             Y02668*/\n*\n*   2 PDCBP    PTR(31),      /* PROCLIB DCB OR NOTED TTR       Y02668*/\n*   2 IWAINTS3 PTR(31),      /* PTR TO EXIT LIST ACCT ENTRY    Y02668*/\n*   2 IWAINTS4,              /*                                Y02668*/\n*     3 CWABPROC PTR(31),    /* PTR TO BLOCKED PROCLIB BUFFER  Y02668*/\n*   2 IWAINTS5 PTR(31),      /* PTR TO JOB MNGMT RECORD        Y02668*/\n*   2 CWATXTEX PTR(31),      /* PTR TO TEXT EXIT RTNE ADDRESS  Y02668*/\n*   2 RSTMT,                 /*                                Y02668*/\n*     3 RSTMTPTR PTR(31),    /* PTR TO RDR STMT                Y02668*/\n*     3 VERB,                /* VERB #                         Y02668*/\n*       4 SSE      BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/\n*       4 CRE      BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/\n*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/\n*     3 NAMEL    FIXED(8),   /* LENGTH OF NAME                 Y02668*/\n*     3 LISTPTR  FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/\n*     3 *        CHAR(1),    /* UNUSED                         Y02668*/\n*   2 PSTMT,                 /*                                Y02668*/\n*     3 STMTPTRP PTR(31),    /* PTR TO RDR STMT                Y02668*/\n*     3 VERBP,               /* VERB #                         Y02668*/\n*       4 SSEP     BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/\n*       4 CREP     BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/\n*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/\n*     3 NAMELP   FIXED(8),   /* LENGTH OF NAME                 Y02668*/\n*     3 LISTPTRP FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/\n*     3 *        CHAR(1),    /* UNUSED                         Y02668*/\n*\n*/*  PROCLIB MERGE CONTROL DATA                                Y02668*/\n*\n*   2 PDNM     CHAR(8),      /* PROC DD NAME                   Y02668*/\n*   2 PSNM     CHAR(8),      /* PROC STEP NAME                 Y02668*/\n*   2 RDNM     CHAR(8),      /* RDR DD NAME                    Y02668*/\n*   2 RSNM     CHAR(8),      /* RDR STEP NAME                  Y02668*/\n*   2 PPSN     CHAR(8),      /* PREVIOUS PROC STEP NAME        Y02668*/\n*   2 IWAPARM  PTR(31),      /* ADDRESS OF PARAMETER LIST USED Y02668*/\n*                            /* FOR PROCESSING IN-LINE PROCS   Y02668*/\n*   2 DREFB    CHAR(176) BDY(WORD), /* SYSMOLIC PARM TABLE     Y02668*/\n*   2 IWAJOBS5 PTR(31),      /* CHKP/REST - PTR TO SYSCHK DD   Y02668*/\n*   2 IWAWKBF  PTR(31),      /* PTR TO VHCB WORK AREA          Y02668*/\n*   2 IWASTAPL PTR(31),      /* PTR TO STAE PARAMETER LIST     Y02668*/\n*   2 CWAJMRPT PTR(31),      /* PTR TO JMR                     Y02668*/\n*   2 IWANELJC PTR(31),      /* PTR TO NEL JCL FIELD. PST/SCAN Y02668*/\n*   2 TBEGP    PTR(31),      /* TEXT BEGIN POINTER             Y02668*/\n*   2 TKEYP    PTR(31),      /* TEXT KEY POINTER               Y02668*/\n*   2 TNUMP    PTR(31),      /* TEXT NUMBER POINTER            Y02668*/\n*   2 TLENP    PTR(31),      /* TEXT LENGTH POINTER            Y02668*/\n*   2 TENDP    PTR(31),      /* TEXT END POINTER               Y02668*/\n*   2 AODSPCSA PTR(31),      /* SAVE RETURN REGISTER IN VFA    Y02668*/\n*   2 AOFDTMP1 PTR(31),      /* ADDR OF SPECIAL FIND ROUTINE   Y02668*/\n*   2 AOKSCHSA,              /* AOKSRCHR REG SAVE AREA.        Y02668*/\n*     3 AOGACSA  CHAR(32),   /* GET AND CLEAR RTNE SAVE AREA   Y02668*/\n*   2 AOKSR1SA CHAR(8),      /* AOKSR1 REG SAVE AREA           Y02668*/\n*   2 AOHEBSA  PTR(31),      /* VHEB RETURN REG SAVE AREA      Y02668*/\n*   2 AODFLTSA CHAR(28),     /* AODFAULT REG SAVE AREA         Y02668*/\n*   2 AOBSKSA  PTR(31),      /* AOBASEKY REG SAVE AREA         Y02668*/\n*   2 CWASAVPT PTR(31),      /* PTR TO SAVE AREA OF CVR'S      Y02668*/\n*                            /* CALLER - ALSO USED BY SUBSYSTEMY02668*/\n*                            /* AT TEXT EXIT                   Y02668*/\n*   2 AOFDPCSV CHAR(8),      /* PROCEDURE NAME                 Y02668*/\n*   2 AOSCHKYS CHAR(8),      /* LIST OF KEYS FOR AOKSRCHR      Y02668*/\n*   2 IWABPAM  CHAR(3),      /* BPAM ACCESS METHOD ADDRESS SET Y02668*/\n*                            /* AND USED BY IEFVEA FOR         Y02668*/\n*                            /* PROCESSING IN-LINE PROCEDURES  Y02668*/\n*\n*   2 AOKSRPRM,              /* AOKSR1 PARM LIST               Y02668*/\n*     3 AOKSRNBR CHAR(1),    /* NUMBER OF PARMS IN KEYWORD     Y02668*/\n*     3 AOKSRSCT CHAR(1),    /* LENGTH OF PARM OR SUBLIST CNT  Y02668*/\n*     3 AOKSRBY3 CHAR(1),    /* LENGTH OF PARM IF AOKSRCT IS A Y02668*/\n*                            /* SUBLIST COUNT                  Y02668*/\n*   2 IWANLRC  FIXED(15),    /* NUMBER OF RECORDS (BLKED PROC) Y02668*/\n*   2 CURLE    FIXED(15),    /* CURRENT LEVEL                  Y02668*/\n*   2 LASLE    FIXED(15),    /* LAST LEVEL                     Y02668*/\n*   2 AOSTRLTH FIXED(15),    /* LENGTH OF TEXT STRING          Y02668*/\n*   2 IWAWRNMS CHAR(1),      /* WARNING MESSAGE CODE           Y02668*/\n*   2 CWACHIDL CHAR(1),      /* CHECKID LENGTH                 Y02668*/\n*\n*/*  SWITCH BYTES                                              Y02668*/\n*\n*   2 IWAJMSGL CHAR(1),      /* MSGLEVEL VALUE                 Y02668*/\n*                            /* '00'X FOR MSGLEVEL=1           Y02668*/\n*                            /* '10'X FOR MSGLEVEL=1           Y02668*/\n*                            /* '20'X FOR MSGLEVEL=2           Y02668*/\n*   2 AOSW2,                 /* SWITCH BYTE                    Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 AOPROCNM BIT(1),     /* PROCNAME POSITIONAL ON EXEC    Y02668*/\n*     3 *        BIT(3),     /* UNUSED                         Y02668*/\n*   2 AOSW3,                 /* SWITCH BYTE                    Y02668*/\n*     3 *        BIT(7),     /* UNUSED                         Y02668*/\n*     3 AOBTCHSW BIT(1),     /* RETURN TO VHA FLAG             Y02668*/\n*   2 AOFDPCL  CHAR(1),      /* LENGTH OF PROCEEDURE NAME      Y02668*/\n*   2 IWAEXTS,               /* SPECIAL CALLER EXITS           Y02668*/\n*     3 *        BIT(6),     /* UNUSED                         Y02668*/\n*     3 IWASFIND BIT(1),     /* BIT-6 SPECIAL PROCLIB FIND     Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*   2 IWAFINDP CHAR(3),      /* ENTRY POINT FOR 'FIND'FOR      Y02668*/\n*                            /* SPECIAL PROCLIB ACCESS         Y02668*/\n*   2 OSW2     CHAR(1),      /* OPTION SWITCHES FROM PARM FIELDY02668*/\n*                            /* BITS-6,7 COMMAND AUTHORIZATION Y02668*/\n*   2 SWA,                   /* SWITCH A                       Y02668*/\n*     3 JTOP     BIT(1),     /* JOB TO PROCESS                 Y02668*/\n*     3 JHS      BIT(1),     /* JOB HAS A STEP                 Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 EOFR     BIT(1),     /* EOF RECIEVED                   Y02668*/\n*     3 DLM      BIT(1),     /* DLM KEYWORD SPECIFIED         YM03459*/\n*   2 SWB,                   /* SWITCH B                       Y02668*/\n*     3 CXP      BIT(1),     /* CONTINUATION EXPECTED BY SCAN  Y02668*/\n*     3 CXPN     BIT(1),     /* CONT EXP AND NOT RECEIVED      Y02668*/\n*     3 CXPC     BIT(1),     /* CONT EXP AND CANCELLED         Y02668*/\n*     3 *        BIT(3),     /* UNUSED                         Y02668*/\n*     3 FRCV     BIT(1),     /* FIRST STATEMENT RECEIVED       Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*   2 SWC,                   /* SWITCH C                       Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*     3 IOERR    BIT(1),     /* I/O ERROR ON INPUT             Y02668*/\n*     3 NRCV     BIT(1),     /* RDR NULL RECEIVED              Y02668*/\n*     3 PEXP     BIT(1),     /* PROC EXEC STMT EXPECTED        Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*   2 SWD,                   /* SWITCH D                       Y02668*/\n*     3 *        BIT(2),     /* UNUSED                         Y02668*/\n*     3 FEXRCV   BIT(1),     /* FIRST EXEC RECEIVED            Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 SYMPRC   BIT(1),     /* FIRST ACCESS OF PROC           Y02668*/\n*   2 SWV,                   /* SCAN SWITCHES                  Y02668*/\n*     3 OVKEYSW  BIT(1),     /* THIS KEY OVERRIDDEN            Y02668*/\n*     3 PROCERR  BIT(1),     /* ERROR THIS STATEMENT           Y02668*/\n*     3 VERBCSW  BIT(1),     /*                                Y02668*/\n*     3 FBFLUSH  BIT(1),     /* SYMBOLIC PARM FLUSH INDICATOR  Y02668*/\n*     3 AMPSW    BIT(1),     /* TEXT DEFINES A SYMBOLIC PARM   Y02668*/\n*     3 FBLITRL  BIT(1),     /* TEXT IS LITERAL                Y02668*/\n*     3 FPRNSW   BIT(1),     /* INDICATES LEFT PAREN           Y02668*/\n*     3 LPBYSW   BIT(1),     /* BYPASS LEFT PAREN CHECK        Y02668*/\n*   2 CRSW1,                 /* CHECKPOINT RESTART SWITCHES    Y02668*/\n*     3 CPFLG    BIT(1),     /* GET/FREE SYSCHK DD STMT CORE   Y02668*/\n*     3 *        BIT(2),     /* UNUSED                         Y02668*/\n*     3 CRRES1   BIT(1),     /* RESERVED                       Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*   2 *        CHAR(1),      /* RESERVED                       Y02668*/\n*   2 SYMTTR   PTR(31),      /* TTR OF FIRST SYMBUF            Y02668*/\n*   2 IWANELEN FIXED(8),     /* LENGTH OF NEL                  Y02668*/\n*   2 SWY      CHAR(1),      /* SCAN SWITCHES                  Y02668*/\n*   2 SWZ,                   /* CONTROL AND SCAN SWITCHES      Y02668*/\n*     3 CMT      BIT(1),     /* COMMENT SWITCH                 Y02668*/\n*     3 DDOV     BIT(1),     /* DD OVERIDE SWITCH              Y02668*/\n*     3 ENDS     BIT(1),     /* END SCAN SWITCH                Y02668*/\n*     3 COLST    BIT(1),     /* COLUMN 72 SWITCH               Y02668*/\n*     3 JOBSW    BIT(1),     /* JOB SWITCH                     Y02668*/\n*     3 EXECSW   BIT(1),     /* EXEC SWITCH                    Y02668*/\n*     3 DDSW     BIT(1),     /* DD SWITCH                      Y02668*/\n*     3 SNPSW    BIT(1),     /* STATEMENT SYSOUT SWITCH        Y02668*/\n*   2 RCHAR1   CHAR(1),      /* RESERVED                      YM00373*/\n*   2 CWALINK  FIXED(31),    /* PTR TO TEXT EXIT LINK AREA    YM00373*/\n*   2 CWALINKL FIXED(31),    /* LTH OF LINK AREA              YM00373*/\n*   2 CWAPSENM CHAR(8),      /* POST SCAN EXIT NAME           YM02718*/\n*   2 CDAUTHWA FIXED(32),    /* COMD AUTH CONVERSION WRK AREA YM02718*/\n*   2 RBLOCK   CHAR(80) BDY(WORD), /* BLOCK OF RESERVED WORDS YM02718*/\n*   2 RFULLA   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLB   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLC   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLD   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLE   FIXED(32);    /* RESERVED                      YM02718*/\n*\n*/*************************************************************Y02668*/\n*/*                                                            Y02668*/\n*/*  END OF CONVERTER WORK AREA -                              Y02668*/\n*/*  TO GET LENGTH OF CONVERTER WORK AREA USE THE LENGTH       Y02668*/\n*/*  FUNCTION OF THE NAME  CVRWA                               Y02668*/\n*/*                                                            Y02668*/\n*/*************************************************************Y02668*/\n* LINE TO PREVENT SPF FROM RESEQUENCING THIS MEMBER\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFVPP": {"ttr": 4107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x01\\x00\\x00\\x01\\x03\\x04\\x7f\\x01\\x03\\x05o \\x07\\n\\xa9\\n\\xa3\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.01", "flags": 0, "createdate": "2003-02-16T00:00:00", "modifydate": "2003-02-25T20:07:00", "lines": 2729, "newlines": 2723, "modlines": 0, "user": "BRIAN"}, "text": "VPP      TITLE 'IEFVPP - AMDAHL MVS PRIVATE PROCLIB SUPPORT'\n***********************************************************************\n*                                                                     *\n*        IEFVPP                                                       *\n*        ******                                                       *\n*                                                                     *\n*        VERSION 4, RELEASE 1, MODIFICATION 0                         *\n*        ******* ** ******* ** ************ *                         *\n*                                                                     *\n* MODIFIED TO SUPPORT MVS3.8J TURNKEY 3 SYSTEM 2/17/03                *\n* THIS VERSION WAS MODIFIED 02/17/03 BY BRIAN WESTERMAN               *\n*                                       SYZYGY INCORPORTED            *\n*                                       897 OAK PARK BLVD - 500       *\n*                                       PISMO BEACH, CA 93449         *\n*                             PHONE (800) 767-2244 FAX (800) 366-4082 *\n*                                                                     *\n* THIS CSECT CONTAINS THE PRIVATE PROCEDURE LIBRARY SUPPORT ROUTINES. *\n*                                                                     *\n* THIS PROGRAM IS A REWRITE OF THE USER PROCLIB SUPPORT PROGRAM       *\n* UPROCRDR, WHICH HAD BEEN IN USE AT THE MUTUAL LIFE OF CANADA ON     *\n* OS/MVT SINCE MARCH OF 1972.                                         *\n*                                                                     *\n* THIS CODE HAS BEEN SUBSTANTIALLY MODIFIED BY THE AMDAHL CORPORATE   *\n* COMPUTER CENTER TO SIMPLIFY THE MODIFICATIONS NECESSARY TO          *\n* IBM CODE IN ORDER TO IMPLEMENT AND INSTALL THIS CODE.               *\n* ADDITIONAL FEATURES ADDED ARE CLEANUP RECOVERY, MULTIPLE            *\n* CONVERTER SUPPORT, MVS/SE RELEASE 2 COMPATIBILITY, AND MVS/SP       *\n* VERSION 1, RELEASE 3.2 SUPPORT.  IT IS ANTICIPATED THAT ONLY        *\n* MINIMAL CHANGES WILL BE NECESSARY FOR MVS/SP VERSION 2 (MVS/XA).    *\n*                                                                     *\n***********************************************************************\n         TITLE '**** PRIVATE PROCLIB LINKAGE REQUIREMENTS ****'\n***********************************************************************\n*                                                                     *\n* ENTRIES:                                                            *\n*        IEFVPP0 - (FROM IEFVH1)  - INITIALIZATION PROCESSING         *\n*        IEFVPP1 - (FROM IEFVFA)  - //JOBPROC VALIDATE & ALLOCATE     *\n*        IEFVPP2 - (FROM IEFVFA)  - JOBPROC CONCATENATE & OPEN        *\n*        IEFVPP3 - (FROM IEFVHF)  - CLEANUP AT JOB PROCESSING END     *\n*        IEFVPP4 - (FROM IEFVFA)  - COMBINED LINKAGE FROM IEFVFA      *\n*                                   TO IEFVPP1 AND IEFVPP2            *\n*        IEFVPP5 - (FROM IEFVFA)  - INTERFACE TO IEFUJV FOR THE       *\n*                                   INTERNAL TEXT EXIT (TYPE 64)      *\n*        IEFVPPM - (FROM IEFVPP)  - LOCAL VERSION OF IEFVGM TO        *\n*                                   ELIMINATE DEPENDENCE ON IBM CODE  *\n*                                                                     *\n* ATTRIBUTES:                                                         *\n*        REENTRANT, REFRESHABLE.                                      *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXITS:                                                              *\n*        ALWAYS RETURN TO CALLER WITH ALL REGS EXCEPT R15 RESTORED.   *\n*        IEFVPP0 BRANCHES TO IEFVHA AND DOES NOT RETURN TO CALLER.    *\n*        IEFVPP5 BRANCHES TO IEFUJV WHICH WILL DO THE RETURN.         *\n*        IN AN MVS/SE2 ENVIRONMENT, IEFVPP5 RETURNS TO CALLER.        *\n*        SEE COMMENTS AT EACH INDIVIDUAL ENTRY POINT FOR MORE         *\n*        INFORMATION.                                                 *\n*                                                                     *\n***********************************************************************\n         TITLE '**** PRIVATE PROCLIB INSTALLATION NOTES ****'\n***********************************************************************\n*                                                                     *\n*     1) ALL ENTRY POINTS EXCEPT IEFVPP0 ARE ENTERED VIA A STANDARD   *\n*           OS/VS CALL \"MACRO\".  IEFVPP0 IS ENTERED BY CHANGING       *\n*           THE BRANCH TO IEFVHA FROM IEFVH1 VIA THE LINKAGE EDITOR.  *\n*           ALL ENTRIES (EXCEPT IEFVPP5) TEST THE \"PPINITC\"           *\n*           SWITCH IN THE PRIVATE PROCLIB WORK AREA BEFORE            *\n*           PERFORMING ANY PROCESSING.                                *\n*                                                                     *\n*           THE USER PROCLIB SUPPORT CODE CAN THEREFORE BE DISABLED   *\n*           BY SIMPLY ALTERING IEFVPP0 NOT TO TURN ON \"PPINITC\".      *\n*           IEFVPP0 MUST ALWAYS BE ENTERED AS IT BUILDS THE ENTRY     *\n*           POINTS FOR ALL THE OTHER ROUTINES IN THE CONVERTER        *\n*           WORK AREA.                                                *\n*                                                                     *\n*     2) ALL ROUTINES EXPECT R12 TO PERMANENTLY ADDRESS THE CWA.      *\n*                                                                     *\n*     3) A RESERVED FULL WORD MUST BE AVAILABLE IN THE CWA TO         *\n*           ANCHOR THE ADDRESS OF THE PRIVATE PROCLIB WORK AREA.      *\n*           THE NAME OF THIS FIELD IS DEFINED BY THE &ANCHOR SET      *\n*           SYMBOL IN THIS PROGRAM.                                   *\n*                                                                     *\n*     4) STANDARD CONVERTER LINKAGE AND SAVING CONVENTIONS ARE        *\n*           OBEYED AT ALL PRIVATE PROCLIB ENTRY POINTS.  THE          *\n*           SAVE AREA FOR ALL OF THESE ENTRY POINTS IS CONTAINED      *\n*           WITHIN THE PRIVATE PROCLIB EXTENSION TO THE CONVERTER     *\n*           WORK AREA.                                                *\n*                                                                     *\n*     5) ANY ERROR NOTED DURING CLEANUP OPERATIONS WILL CAUSE THE     *\n*           CONVERTER TO ABORT.                                       *\n*                                                                     *\n*     6) SEE THE SECTION OF COMMENTS ON CONVERTER MODIFICATION FOR    *\n*           PARTICULARS ON THE CHANGES TO THE CONVERTER/INTERPRETER.  *\n*                                                                     *\n*     7) TO PROPERLY ASSEMBLE THIS MODULE, THE CONVERTER/INTERPRETER  *\n*           WORK AREA MACRO, IEFCVRWA, MUST BE AVAILABLE.  IBM        *\n*           DISTRIBUTES THIS MACRO IN APVTMACS.                       *\n*                                                                     *\n*     8) IN ORDER TO SUPPORT MULTIPLE CONVERTER, AN ENQUEUE WITH A    *\n*           MAJOR NAME OF SYSJPROC AND MINOR NAME OF IEF*PDS0         *\n*           (* = 0-9,A-F).  THIS IS A STEP LEVEL ENQUEUE THAT MUST    *\n*           NOT BE OTHERWISE USED BY THE ADDRESS SPACE IN WHICH       *\n*           CONVERTER IS RUNNING IN.  THIS INCLUDES THE MASTER        *\n*           ADDRESS SPACE AND ANY NON-JES (I.E., STARTING OF A        *\n*           SECONDARY SUBSYSTEM) USE OF THE CONVERTER.                *\n*                                                                     *\n*     9) THE MESSAGE NUMBER PREFIX IS SET BY THE SET SYMBOL           *\n*           &MSGPFX.  ITS DEFINITION FOLLOWS THE LOCAL MACRO          *\n*           DEFINITIONS.                                              *\n*                                                                     *\n*    10) THE INTERNAL TEXT ENTRY INTO IEFUJV IS ENABLED OR DISABLED   *\n*           BY THE USE OF THE &INTEXTX SET SYMBOL IN THIS PROGRAM.    *\n*                                                                     *\n*    11) DISABLING OF THIS CODE CAN BE DONE BY ZAPPING THE            *\n*           INSTRUCTION AT \"PPCANCEL\".  THE DEBUGGING CODE CAN BE     *\n*           ENABLED BY ZAPPING THE INSTRUCTION AT \"PPSETBUG\".         *\n*                                                                     *\n*    12) THIS MODULE MUST BE ASSEMBLED WITH THE PROPER LEVEL          *\n*           OF \"SYS1.AMODGEN\" CORRESPONDING TO THE EXISTANCE          *\n*           OR NON-EXISTANCE OF MVS/SE RELEASE 2, MVS/SP              *\n*           VERSION 1, RELEASE 3.2, OR LATER.                         *\n*           FOR HERCULES, THE SPLEVEL STATMENT MUST BE COMMENTED OUT  *\n*                                                                     *\n* COPYRIGHT:                                                          *\n*        SYZYGY INCORPORATED 2003.                                    *\n*        THIS COPYRIGHT IS NOT INTENDED TO LIMIT THE USE OF THIS      *\n*        CODE BY THE RECEIVING INSTALLATION, BUT TO PREVENT ITS       *\n*        REDISTRIBUTION FOR PROFIT.                                   *\n* COPYRIGHT:                                                          *\n*        AMDAHL CORPORATION, 1978, 1981, 1982.                        *\n*        THIS COPYRIGHT IS NOT INTENDED TO LIMIT THE USE OF THIS      *\n*        CODE BY THE RECEIVING INSTALLATION, BUT TO PREVENT ITS       *\n*        REDISTRIBUTION FOR PROFIT.                                   *\n*                                                                     *\n***********************************************************************\n         TITLE '**** PRIVATE PROCLIB SUMMARY OF AMENDMENTS ****'\n***********************************************************************\n*                                                                     *\n*        VERSION 4, RELEASE 1, MODIFICATION 0                         *\n*                                                                     *\n*        THESE CHANGES ARE FOR THE HERCULES TURNKEY 3 IMPLEMENTATION  *\n*        THE SPLEVEL STATEMENT IS PERMAENTLY REMOVED                  *\n*        THE LINK TO INTERNAL TEXT EXIT IS DUMMYED OUT                *\n*        ALL SUPERZAPS HAVE CHANGED AND ARE DOCUMENTED IN THE ZAPS    *\n*        REFERENCES TO SMPE SHOULD NOW SAY SMP4 ONLY                  *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        VERSION 3, RELEASE 1, MODIFICATION 0                         *\n*                                                                     *\n*        THE PRIVATE PROCLIB WORK AREA IS NO LONGER APPENDED          *\n*        TO THE END OF THE CONVERTER WORK AREA.  IT IS SEPARATELY     *\n*        GETMAINED AND IS ANCHORED IN A RESERVED WORD IN THE          *\n*        CONVERTER WORK AREA.  THE NAME OF THIS FULL WORD CAN BE      *\n*        SPECIFIED USING THE &ANCHOR SETC SYMBOL IN THIS PROGRAM.     *\n*        AS DISTRIBUTED, THIS DEFAULTS TO \"RFULLE\", WHICH HAPPENS     *\n*        TO BE THE LAST RESERVED FULL WORD IN THE CONVERTER           *\n*        WORK AREA.                                                   *\n*                                                                     *\n*        BECAUSE OF THE ABOVE CHANGE, THE SUPERZAP MODIFICATION       *\n*        TO MODULE IEFVH1 IS NO LONGER NECESSARY.  THE THREE          *\n*        REMAINING SUPERZAPS ARE STILL NECESSARY AND THE ZAPS         *\n*        TO IEFVFA AND IEFVHF ARE DEPENDENT ON THE FIELD CHOSEN       *\n*        TO ANCHOR THE PRIVATE PROCLIB WORK AREA IN THE CON-          *\n*        VERTER WORK AREA.                                            *\n*                                                                     *\n*        THE ABILITY TO \"REQUEUE\" A JOB WHEN THE PROCLIB VOLUME       *\n*        OR CATALOG VOLUME HAS BEEN REMOVED.  IN ADDITION, CODE       *\n*        HAS BEEN ADDED TO EXPLICITLY DISALLOW PROCLIBS ON MSS        *\n*        VOLUMES.  THIS IS BECAUSE THE CONVERTER IS A SERIAL          *\n*        PROCESS AND THE DELAY THAT COULD BE INTRODUCED BY MSS        *\n*        STAGING COULD BE SUBSTANTIAL.                                *\n*                                                                     *\n*        THE GENERATION OF CODE FOR THE INTERNAL TEXT EXIT TO         *\n*        IEFUJV HAS BEEN MADE OPTIONAL THROUGH THE USE OF THE         *\n*        &INTEXTX SETB SYMBOL.  IF THIS IS SET TO ZERO (0), NO        *\n*        INTERNAL TEXT EXIT TO IEFUJV WILL BE TAKEN.  IF SET          *\n*        TO ONE (1), CODE WILL BE GENERATED TO ENTER IEFUJV           *\n*        WITH ENTRY CODE 64 FOR EACH INTERNAL TEXT RECORD.            *\n*        THE EXIT LINKAGE WILL DIFFER DEPENDING ON WHETHER OR         *\n*        NOT AND MVS/SE RELEASE 2 (OR LATER) SYSTEM IS BEING USED.    *\n*        THE DEFAULT AS DISTRIBUTED IS ZERO (0), CAUSING NO           *\n*        INTERNAL TEXT TEXT TO BE TAKEN.                              *\n*                                                                     *\n***********************************************************************\n         TITLE '**** PRIVATE PROCLIB USER EXTERNALS ****'\n***********************************************************************\n*                                                                     *\n*        THE USER WISHING TO SUPPLY A PRIVATE PROCLIB NEED ONLY       *\n*        CODE ONE OR MORE DD STATEMENTS (FOLLOWING THE NORMAL         *\n*        RULES OF CONCATENATION) WITH THE DD NAME OF \"JOBPROC\".       *\n*        THE JOBPROC DD MUST APPEAR BEFORE THE FIRST EXEC STATE-      *\n*        MENT OF A JOB.  THE ONLY JCL KEYWORD PARAMETERS SUPPORTED    *\n*        ARE DSN, DISP, UNIT, VOL=SER, VOL=REF, AND SYSPROC.  USE     *\n*        OF OTHER JCL PARAMETERS MAY CAUSE ERRORS OR MAY BE IGNORED.  *\n*        DSN IS MANDATORY.  DISP CAN ONLY BE \"SHR\".  UNIT AND VOL     *\n*        ARE NECESSARY ONLY IF THE DATA SET IS NOT CATALOGUED (VIA    *\n*        MASTER AND ALIASES - JOBCAT IS NOT USED).  SYSPROC INDICATES *\n*        THE CONCATENATION (SYSPROC=YES) OR NON-CONCATENATION         *\n*        (SYSPROC=NO) OF THE SYSTEM PROCLIBS WITH THE USER SUPPLIED   *\n*        PROCLIBS.  THE DEFAULT IS SYSPROC=YES.                       *\n*                                                                     *\n***********************************************************************\n         TITLE '**** PRIVATE PROCLIB INSTALLATION EXTERNALS ****'\n***********************************************************************\n*                                                                     *\n*        A SERIES OF SPECIAL DD NAMES ARE USED BY DYNAMIC PROCLIB     *\n*        AND ARE RESERVED FOR ITS USE.  SOME OF THESE NAMES ARE       *\n*        CREATED THROUGH THE USE OF DYNAMIC ALLOCATION.  OTHERS       *\n*        MUST BE SUPPLIED IN THE JCL PROCEDURE THAT IS USED TO        *\n*        START THE ADDRESS SPACE (NORMALLY JES) THAT THE CONVERTER    *\n*        IS RUNNING IN.  NO SPECIAL DD STATEMENTS ARE NECESSARY       *\n*        FOR EITHER THE INTERPRETER OR INITIATOR.  INVOCATION         *\n*        OF THE CONVERTER USING THE MASTER ADDRESS SPACE'S TIOT       *\n*        (JOBNAME MSTRJCL) FOR SUCH THINGS AS SUBSYSTEM START         *\n*        DOES NOT REQUIRE THESE SPECIAL DDNAMES AND SYSPROC IS        *\n*        SET TO BE UNAVAILABLE (WITHOUT ERROR MESSAGE).               *\n*                                                                     *\n*        AS MANY SETS OF SPECIAL DDNAMES ARE NEEDED AS THERE ARE      *\n*        CONVERTERS RUNNING.  IF THERE ARE MORE CONVERTER SUBTASKS    *\n*        RUNNING THEN THERE ARE SETS OF DDNAMES, THE EXCESS           *\n*        CONVERTERS WILL NOT PROCESS DYNAMIC PROCLIB REQUESTS AND     *\n*        ANY JOBS PROCESSED BY THEM WILL IN ALL PROBABILITY RECEIVE   *\n*        JCL ERRORS.                                                  *\n*                                                                     *\n*        EACH SPECIAL DD NAME IS OF THE FORM IEF#PDS*.  THE POUND     *\n*        SIGN (#) IS COMMON TO ALL DDNAMES IN A GIVEN SET AND IS      *\n*        A SINGLE HEX DIGIT (0-9,A-F).  THE SETS MUST BE NUMBERED     *\n*        CONSECUTIVELY (I.E., IF FOUR SETS ARE BEING USED, THEY       *\n*        MUST BE 0, 1, 2, AND 3).  THE ASTERISK (*) IS USED TO        *\n*        UNIQUELY ALLOCATE EACH USER SUPPLIED PROCLIB AND THE         *\n*        INSTALLATION SUPPLIED PROCLIB(S).  THE USER SUPPLIED         *\n*        PROCLIBS WILL BE ALLOCATED WITH THE DDNAME IEF#PDS0,         *\n*        IEF#PDS1, ..., IEF#PDSF (0-9,A-F).  THE INSTALLAION          *\n*        SUPPLIED PROCLIB MUST BE IEF#PDSI.  FOR EXAMPLE, THE         *\n*        \"FIRST\" CONVERTER RUNNING WILL NEED AN INSTALLATION          *\n*        SUPPLIED PROCLIB NAME OF IEF0PDSI AND WILL GENERATE          *\n*        DDNAMES IEF0PDS0, IEF0PDS1, ..., IEF0PDSF.                   *\n*                                                                     *\n*        THE INSTALLATION OF THE IEF#PDSI DD STATEMENTS IN THE        *\n*        JES PROCEDURE DOES NOT ELIMINATE THE NEED FOR THE            *\n*        PROC00, PROC01, ETC. DD STATEMENTS IN THE JES2 PROCEDURE     *\n*        AND WHATEVER IS THE SPECIFIED NAMES IN JES3.  THESE DATA     *\n*        SETS ARE USED WHENEVER A USER DOES NOT CODE A \"JOBPROC\"      *\n*        DD STATEMENT IN HIS OR HER JOB.                              *\n*                                                                     *\n***********************************************************************\n         TITLE '**** CONVERTER/INTERPRETER MODIFICATIONS ****'\n***********************************************************************\n*                                                                     *\n*        CONVERTER/INTERPRETER MODIFICATIONS                          *\n*        ********************* *************                          *\n*                                                                     *\n*        THERE ARE THREE AREAS OF CHANGES TO THE CONVERTER/           *\n*        INTERPRETER NECESSARY TO PROPERLY IMPLEMENT PRIVATE PROCLIB  *\n*        SUPPORT IN MVS.  THE THREE AREAS ARE SYSGEN MACROS (WHICH    *\n*        INCLUDES LINK EDIT CHANGES TO THE CONVERTER), A NEW MODULE   *\n*        (IEFVPP), AND SUPERZAPS TO CONVERTER/INTERPRETER MODULES.    *\n*        IN ADDITION, IF THESE MODIFICATIONS ARE INSTALLED ONTO       *\n*        AN EXISTING SYSTEM, A UCLIN AND JCLIN WILL BE NECESSARY.     *\n*                                                                     *\n*        THE CHANGES TO SYSGEN ARE ALL CONTAINED IN MACRO SGIEF441.   *\n*        THIS MACRO CONTAINS THE LINK EDIT CONTROL STATEMENTS FOR     *\n*        THE CONVERTER.  THE CHANGES ARE A CHANGE STATEMENT TO ALTER  *\n*        THE EXTERNAL REFERENCE TO IEFVHA IN IEFVH1 TO REFER TO       *\n*        IEFVPP0 IN IEFVPP AND AN INCLUDE OF THE NEW MODULE IEFVPP.   *\n*                                                                     *\n*        THE CHANGE STATEMENT:                                        *\n*        PUNCH ' CHANGE IEFVHA(IEFVPP0) '                             *\n*        IS INSERTED IMMEDIATELY BEFORE THE PUNCH INCLUDE OF IEFVH1.  *\n*                                                                     *\n*        THE INCLUDE STATEMENT:                                       *\n*        PUNCH ' INCLUDE AOSB3(IEFVPP) '                              *\n*        IS INSERTED IMMEDIATELY BEFORE THE PUNCH ENTRY IEFVH1.       *\n*                                                                     *\n*        VALID STATEMENT NUMBERS FOR MVS 3.8 THROUGH MVS/SP 1.3.2     *\n*        ARE 38907099 FOR THE CHANGE AND 38972099 FOR THE INCLUDE.    *\n*        THESE SHOULD BE VERIFIED BEFORE ACTUALLY UPDATING THE MACRO. *\n*                                                                     *\n*        THE NEW MODULE, IEFVPP IS LINK EDITTED AS PART OF IEFVH1,    *\n*        THE JCL CONVERTER.  THE LINK EDIT CHANGE STATEMENT CAUSES    *\n*        IT TO BE INVOKED TO INITIALIZE THE EXPANDED CONVERTER        *\n*        WORK AREA.  ADDRESSES INSERTED INTO THIS WORK AREA ARE USED  *\n*        BY THE SUPERZAPS DESCRIBED BELOW TO PASS CONTROL TO IEFVPP   *\n*        AT ALL THE RIGHT MOMENTS.                                    *\n*                                                                     *\n*        THE SUPERZAPS ARE TO MODULES IEFVHF AND IEFVFA IN LOAD       *\n*        MODULE IEFVH1 AND TO MODULE IEFVHE IN LOAD MODULE            *\n*        IEFNB903.  THE ZAPS TO IEFVHF AND IEFVFA ARE QUITE           *\n*        CRUTIAL TO THE PROPER OPERATION OF THE CONVERTER.            *\n*        THE ZAP TO IEFVHE (IN THE INTERPRETER) DOES NOT PREVENT      *\n*        THE PROPER OPERATION OF IEFVPP AND CAN BE INSTALLED IN       *\n*        ADVANCE OF THE REMAINING ZAPS.                               *\n*                                                                     *\n*        THE ZAP FOR IEFVHE IS TO HAVE THE INTERPRETER BYPASS         *\n*        INTERNAL TEXT DD STATEMENTS THAT HAVE THE JOBPROC FLAG,      *\n*        JPROCSTR, TURNED ON.  THIS FLAG IS SET BY IEFVPP TO          *\n*        INDICATE A JOBPROC DD STATEMENT.  THE PURPOSE OF THIS        *\n*        IS TO INSURE THAT THE INTERPRETER STATEMENT NUMBERING        *\n*        AGREES WITH THAT DONE BY THE CONVERTER AND THAT IT           *\n*        DOESN'T ATTEMPT TO PROCESS A JOBPROC STATEMENT DURING        *\n*        INTERPRETATION, AS IT WOULDN'T KNOW WHAT TO DO WITH IT.      *\n*                                                                     *\n*        THE ZAP TO IEFVFA HAS TWO SEPARATE PURPOSES.  ONE IS TO      *\n*        ALTER A SUITABLY UNUSED JCL KEYWORD (HOW'S \"SUBALLOC\"        *\n*        GRAB YOU?) TO BECOME THE \"SYSPROC\" KEYWORD.  THE OTHER       *\n*        PURPOSE IS TO CAUSE ENTRY TO IEFVPP4 AND IEFVPP5 IN IEFVPP   *\n*        IMMEDIATELY AFTER A JCL STATEMENT HAS BEEN CONVERTED INTO    *\n*        INTERNAL TEXT.  THE EXIT TO IEFVPP5 IS NOT NECESSARY FOR     *\n*        PRIVATE PROCLIB SUPPORT, BUT PROVIDES AN INTERNAL TEXT       *\n*        EXIT TO IEFUJV.                                              *\n*                                                                     *\n*        THE ZAP TO IEFVHF CAUSES ENTRY TO IEFVPP3 IN IEFVPP DURING   *\n*        CONVERTER TERMINATION, SO THAT ANY ALLOCATED PROCLIBS        *\n*        CAN BE CLOSED, DECONCATENATED, AND DEALLOCATED.              *\n*                                                                     *\n*        SINCE THE ACTUAL TEXT OF THESE ZAPS WILL DEPEND ON THE       *\n*        CURRENT MAINTENANCE LEVELS OF THE VARIOUS MODULES, THEY ARE  *\n*        NOT ENUMERATED HERE.  THE PTF TO APPLY THESE ZAPS SHOULD     *\n*        BE EXAMINED, AS WELL AS THE SOURCE MICROFICHE OR OPTIONAL    *\n*        MATERIALS.                                                   *\n*                                                                     *\n***********************************************************************\n         TITLE '**** STATEMENT OF SUPPORT ****'\n***********************************************************************\n*                                                                     *\n*        STATEMENT OF SUPPORT                                         *\n*        ********* ** *******                                         *\n*                                                                     *\n*        THIS PROGRAM IS MAINTAINED BY BRIAN WESTERMAN FOR THE        *\n*        HERCULES TURNKEY MVS 3.8J SYSTEM AND IS TESTED TO RUN        *\n*        ON THE TURNKEY #3 SYSTEM AS OF FEB. 2003.                    *\n*                                                                     *\n*        ADDITIONAL INFORMATION CONCERNING THESE MODIFICATIONS        *\n*        CAN BE OBTAINED BY CONTACTING:                               *\n*                                                                     *\n*        BRIAN WESTERMAN                                              *\n*        SYZYGY INCORPORATED            SYZYGY INCORPORATED           *\n*        897 OAK PARK BLVD - 500        1381 KILDAIRE FARM RD - 326   *\n*        PISMO BEACH, CA 93449          CARY, NC 27511-5525           *\n*        PHONE:  (800) 767-2244   FAX (800) 366-4082                  *\n*        EMAIL  BRIAN_WESTERMAN@SYZYGYINC.COM                         *\n***********************************************************************\n         TITLE '**** PRIVATE MACRO INSTRUCTIONS ****'\n         MACRO\n&L       PPEPA &TRACEI,&ERREXIT=NO\n         GBLC  &ANCHOR\n         LCLC  &P,&O,&C\n&P       SETC  '&TRACEI'(2,3)\n&C       SETC  '     INDICATE IEF'\n&C       SETC  '&C&TRACEI'\n&O       SETC  ' IS EXECUTING'\n&C       SETC  '&C&O'\n&O       SETC  'PPSTAT0,'          SET BASIC OPERAND TEXT\n&O       SETC  '&O.&P.CODE&C'      ADD IN COMMENT\n&L       DS    0H                  ENTRY POINT ADDRESS\n         USING *,R15               TEMPORARY BASE\n*\n         STM   R14,R12,12(R13)     SAVE CALLERS REGS\n         L     R11,PPBASE          SET UP MODULE BASE\n         LA    R7,2048             SET UP SECOND\n         LA    R7,2048(R7,R11)      BASE REGISTER\n         USING IEFVPP,R11,R7       INFORM ASSEMBLER OF BASE REG\n         DROP  R15                 DROP TEMPORARY BASE\n*\n         AIF   ('&TRACEI' EQ 'VPP0').PP0CALL\n         L     R6,&ANCHOR          LOAD PP WORK AREA ADDRESS\n         TM    PPSTAT0,PPINITC     HAS IEFVPP0 BEEN CALLED ?\n         BO    *+10                YES, CONTINUE\n         LM    R14,R12,12(R13)     NO, RELOAD REGISTERS\n         BR    R14                 AND RETURN IMMEDIATELY\n         OI    &O\n         AGO   .PPCOMM\n.PP0CALL ANOP  ,\n         LA    R0,PPWORKLN         LENGTH OF PROCLIB WORK AREA\n         GETMAIN R,LV=(0)          GET THE PRIVATE PROCLIB WORK AREA\n         LR    R6,R1               MOVE TO ITS PERMANENT HOME\n         ST    R6,&ANCHOR          STORE IN CONVERTER WORK AREA\n*\n         LR    R0,R1               SET FOR MVCL\n         LA    R1,PPWORKLN         LENGTH OF MVCL\n         SLR   R15,R15             ZERO FROM LENGTH\n         MVCL  R0,R14              CLEAR THE WORK AREA\n*\n         MVI   &O\n.PPCOMM  ANOP  ,\n*\n         L     R15,&P.TRCV         LOAD CONVERTER TRACE ROUTINE ADDRESS\n         CNOP  2,4                 ALIGN TRACE PARM LIST\n         BALR  R14,R15             ENTER MODULE ID IN TRACE REC.\n&P.TRCV  DC    V(TRACE)            TRACE ROUTINE ID (IN IEFVH1)\n         DC    CL4'&TRACEI'        MODULE ID FOR TRACE RECORD\n*\n         XC    PPSAVE(72),PPSAVE   CLEAR SAVE AREA\n         ST    R13,PPSAVE+4        STORE BACKWARD POINTER\n         LA    R1,PPSAVE           POINT AT SAVE AREA\n         ST    R1,8(,R13)          STORE FORWARD POINTER\n         LR    R13,R1              SET NEW SAVE AREA ADDRESS\n         AIF   ('&ERREXIT' EQ 'YES').PPERR02\n*\n         MVC   PPESTAEP(PPESTAEL),PPESTAEM MOVE IN MODEL PLIST\n         ESTAE PPESTAEX,CT,        ESTABLISH PRIVATE PROCLIB           X\n               TERM=YES,PARAM=(12), ERROR RECOVERY                     X\n               MF=(E,PPESTAEP)       ENVIRONMMENT\n         OI    PPMISC,PPESTAE      INDICATE ESTAE IN EFFECT\n.PPERR02 ANOP  ,\n         MEND\n*\n         MACRO\n         IEFVPPMS &MNO,&TEXT\n         LCLA  &LTH\n         LCLC  &STR\n         GBLC  &MSGPFX\n         AIF   (T'&TEXT EQ 'O').VGMER01\n         AIF   (T'&MNO EQ 'O').VGMER02\n&LTH     SETA  K'&TEXT-2           GET LENGTH OF MESSAGE TEXT\n&STR     SETC  '&TEXT'(2,&LTH)     EXTRACT MESSAGE TEXT\n&LTH     SETA  &LTH+8              CALCULATE TOTAL MESSAGE LENGTH\nMSG&MNO  DC    AL1(0)              RESERVED\n         DC    AL1(&LTH)           LENGTH OF MESSAGE TEXT\n         DC    CL8'&MSGPFX&MNO'    EXTERNAL MESSAGE IDENTIFICATION\n         DC    C'&STR'\n         SPACE 2\n         MEXIT ,\n.VGMER01 MNOTE 12,'*** MESSAGE TEXT REQUIRED BUT NOT SPECIFIED ***'\n         MEXIT ,\n.VGMER02 MNOTE 12,'*** MESSAGE NUMBER REQUIRED BUT NOT SPECIFIED ***'\n         MEND\n*\n         MACRO\n&NAME    PPDEBUG &WHERE\n&NAME    BAL   R14,IEFVPPDB        GO TO DEBUGGING TRACER\n         DC    CL4'&WHERE'         INDICATE WHERE WE ARE\n         MEND\n*\n         TITLE '**** SYMBOLIC PARAMETER DEFINITIONS ****'\n***********************************************************************\n*                                                                     *\n*        THE SYMBOLIC PARAMETERS THAT CAN BE USED TO ALTER THE        *\n*        CHARACTERISTICS OF THIS MODULE ARE DEFINED HERE.             *\n*                                                                     *\n***********************************************************************\n*\n         GBLB  &INTEXTX\n         GBLB  &SGIHASU(100)\n*\n         GBLC  &ANCHOR\n         GBLC  &MSGPFX\n*\n***********************************************************************\n*                                                                     *\n*        INTERNAL TEXT EXIT                                           *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO EITHER 1 (ONE) OR 0 (ZERO)   *\n*        TO GENERATE OR NOT GENERATE SUPPORT FOR THE INTERNAL         *\n*        TEXT EXIT TO IEFUJV.                                         *\n*        THIS FIELD MUST BE A FULL WORD THAT IS UNUSED BY THE         *\n*        CONVERTER.                                                   *\n*                                                                     *\n***********************************************************************\n*\n&INTEXTX SETB  0                   WE DON'T WANT THE EXIT\n*\n***********************************************************************\n*                                                                     *\n*        PRIVATE PROCLIB WORK AREA ANCHOR                             *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO THE NAME OF THE FIELD        *\n*        IN THE COMMON OR CONVERTER WORK AREA THAT WILL BE USED       *\n*        TO CONTAIN THE ADDRESS OF THE PRIVATE PROCLIB WORK AREA.     *\n*        THIS FIELD MUST BE A FULL WORD THAT IS UNUSED BY THE         *\n*        CONVERTER.                                                   *\n*                                                                     *\n***********************************************************************\n*\n&ANCHOR  SETC  'RFULLE'            AT THE END OF THE CONVERTER WORKAREA\n*\n***********************************************************************\n*                                                                     *\n*        MESSAGE PREFIX                                               *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO THE THREE (3) CHARACTER      *\n*        WHICH IS DESIRED ON ALL MESSAGES ISSUED BY THE MODULE.       *\n*        THE MESSAGE NUMBERS WILL BE XXX800 THROUGH XXX899, WHERE     *\n*        XXX IS THE SELECTED PREFIX.                                  *\n*                                                                     *\n***********************************************************************\n*\n&MSGPFX  SETC  'DYP'  DYNAMIC PROCLIB CAN SET TO ANY 3 CHARACTERS\n*                                  -         -        -\n         IHASU74                   SET THE SE2 INDICATOR\n*\n*REM BHW SPLEVEL SET=1             INDICATE SP 1 LEVEL CODE\n*\n         PRINT OFF\n*\n         TITLE '**** INTERPRETER ENTRANCE LIST ****'\nNEL      DSECT\n         IEFNEL SUBCOM=C\n         TITLE '**** JOB MANAGEMENT WORK AREA ****'\n         IEFJMR ,\n         TITLE '**** SMF MANAGEMENT CONTROL AREA ****'\n         IEESMCA ,\n         TITLE '**** REQUEST PARAMETER LIST ****'\n         IFGRPL ,\n         TITLE '**** DYNAMIC ALLOCATION TEXT UNIT KEYS ****'\n         IEFZB4D2  ,\n         TITLE '**** DYNAMIC ALLOCATION DATA AREAS ****'\n         IEFZB4D0  ,\n         TITLE '**** DAIRFAIL SERVICE ROUTINE PARM LIST ****'\n         IKJEFFDF  DFDSECT=YES\n         TITLE '**** DATA CONTROL BLOCK ****'\n         DCBD  DSORG=PO,DEVD=DA\n         TITLE '**** SYSTEM DIAGNOSTIC WORK AREA ****'\n         IHASDWA DSECT=YES\n         TITLE '**** PREFIX STORAGE AREA (LOW CORE) ****'\n         IHAPSA\n         TITLE '**** ADDRESS SPACE CONTROL BLOCK ****'\n         IHAASCB\n         TITLE '**** TASK CONTROL BLOCK ****'\n         IKJTCB\n         TITLE '**** TASK I/O TABLE (TIOT) ****'\nTIODSECT DSECT\n         IEFTIOT1\n         TITLE '**** UNIT CONTROL BLOCK (UCB) ****'\nUCBDSECT DSECT\n         IEFUCBOB\n*\n         PRINT ON\n*\n         TITLE '**** CONVERTER WORK AREA ****'\n         IEFCOMWA ,                COMMON WORK AREA\n*\n         IEFCVRWA ,                CONVERTER WORK AREA\n*\n         TITLE '**** PRIVATE PROCLIB WORK AREA ****'\n***********************************************************************\n*                                                                     *\n* PPWORK                                                              *\n* ******                                                              *\n*                                                                     *\n* THE FOLLOWING IS THE PRIVATE PROCEDURE LIBRARY SUPPORT WORK AREA.   *\n* IT IS POINTED TO BY THE \"&ANCHOR\" FIELD IN THE CONVERTER WORK       *\n* AREA.                                                               *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n         USING PPWORK,R6\nPPWORK   DSECT                     USER PROCLIB WORK AREA\n*\nPPSAVE   DC    9D'0'               SAVE AREA FOR ALL ENTRY POINTS\n*                                  THAT NEED A REGSITER SAVE AREA\nPPIEFVPP DC    V(IEFVPP)           BASE ADDRESS OF PROCLIB MODULE\nPPVPP0   DC    V(IEFVPP0)          INITIALIZATION ENTRY POINT\nPPVPP1   DC    V(IEFVPP1)          JOBPROC DD ENTRY POINT\nPPVPP2   DC    V(IEFVPP2)          JOBPROC OPEN ENTRY POINT\nPPVPP3   DC    V(IEFVPP3)          JOBPROC CLOSE ENTRY POINT\nPPVPP4   DC    V(IEFVPP4)          COMBINED CALL TO VPP1 & VPP2\nPPVPP5   DC    V(IEFVPP5)          IEFUJV INT TEXT INTERFACE\nPPVPPM   DC    V(IEFVPPM)          MESSAGE PROCESSOR ENTRY POINT\nPPVPPLEN EQU   *-PPVPP0            LENGTH OF ADDRESS VECTOR\n*\nPPFUTURE DC    20F'0'              RESERVED FOR FUTURE USE\n*\nPPSTAT0  DC    X'00'               STATUS FLAGS 0 (PER INVOCATION)\nPP0CODE  EQU   X'80'                  IEFVPP0 IS EXECUTING\nPP1CODE  EQU   X'40'                  IEFVPP1 IS EXECUTING\nPP2CODE  EQU   X'20'                  IEFVPP2 IS EXECUTING\nPP3CODE  EQU   X'10'                  IEFVPP3 IS EXECUTING\nPPECODE  EQU   X'08'                  ERROR RECOVERY IN PROGRESS\nPPMCODE  EQU   X'04'                  CONTROL PASSED TO IEFVGM\nPPDACODE EQU   X'02'                  CONTROL PASSED TO SVC 99\nPPINITC  EQU   X'01'                  INITIALIZATION IS COMPLETE\n*\nPPSTAT1  DC    X'00'               STATUS FLAGS 1 (PER JOB):\nPPJPERR  EQU   X'80'                  ERROR NOTED IN JOBPROC STMT\nPPHAVJP  EQU   X'40'                  JOBPROC DD CARD IS PRESENT\nPPJPBUSY EQU   X'20'                  POSSIBLE JOBPROC CONCAT.\nPPCONCJP EQU   X'10'                  JOBPROC IS A CONCATENATION\nPPSYSYES EQU   X'08'                  SYSTEM PROCLIB IS REQUIRED\nPPBUFGOT EQU   X'04'                  NEW PROCLIB BUFFER OBTAINED\nPPOPENED EQU   X'02'                  USER PROCLIB DCB IS OPEN\nPPCONCD  EQU   X'01'                  JOBPROC IS NOW CONCATENATED\n*\nPPSTAT2  DC    X'00'               STATUS FLAGS 2 (PER STATEMENT):\nPPHAVDSN EQU   X'80'                    DSNAME PROVIDED\nPPHAVSER EQU   X'40'                    VOLSER PROVIDED\nPPHAVREF EQU   X'20'                    VOL=REF=DSNAME SPECIFIED\nPPHAVUNT EQU   X'10'                    UNIT=\" \" SPECIFIED\nPPRREQUE EQU   X'08'                    RE-QUEUE FOR CONVERSION\n*\nPPALLOC1 DS    BL4                 ALLOCATION STATUS FLAGS\n*                                     ONE STATUS BIT PER DDNAME\n*                                      ON -> DDNAME IS ALLOCATED\n*\n*        THE FOLLOWING TRACE FLAGS ARE USED FOR ERROR RECOVERY\n*\nPPTRPP0  DC    X'00'               TRACE FLAGS FOR IEFVPP0\nPPTRPP1  DC    X'00'               TRACE FLAGS FOR IEFVPP1\nPPTRPP2  DC    X'00'               TRACE FLAGS FOR IEFVPP2\nPPTRPP2E EQU   X'80'                  PP2 CALLED FOR CURRENT JOB\nPPTRDCON EQU   X'40'                  DYNAMIC CONCAT IN PROGRESS\nPPTROPEN EQU   X'20'                  PROCLIB OPEN IN PROGRESS\nPPTRS213 EQU   X'10'                  USER DATA SET \"NOT FOUND\"\nPPTRPP3  DC    X'00'               TRACE FLAGS FOR IEFVPP3\nPPTRDDCN EQU   X'80'                  DYNAMIC DE-CON IN PROGRESS\nPPTRDDAL EQU   X'40'                  DYNAMIC DE-ALOC IN PROGRESS\nPPMISC   DC    X'00'               MISCELLANEOUS FLAGS\nPPDEBUG  EQU   X'80'                  ALL SORTS OF DEBUGGING CODE\nPPESTAE  EQU   X'40'                  ESTAE HAS BEEN ISSUED\nPPNOSYSP EQU   X'20'                  SYSPROC UNAVAILABLE\n*\nPPTIOTAD DC    A(*-*)              ADDRESS OF TIOT\nPPJPCNT  DC    Y(*-*)              NO. OF JOBPROC DD STATEMENTS\nPPJPMAX  DC    Y(*-*)              MAXIMUM USER PROCLIBS ALLOWED\n         DC    2H'0'               RESERVED FOR FUTURE USE\n*\nPPSDCBA  DC    A(*-*)              -> ORIGINAL IEFPDSI DCB\nPPSBUFA  DC    A(*-*)              -> ORIG. PDSI BUF(IF REPLACED)\nPPBUFAD  DC    A(*-*)              -> NEW PROCLIB BUF(IF REPLACED)\nPPSYSNAM DC    CL8'IEF*PDSI'       NAME OF SYSTEM PROCLIB DD\n*\nPPDCB    DCB   DDNAME=IEF*PDS0,DSORG=PO,MACRF=(R)\nPPUSRDDN EQU   PPDCB+(DCBDDNAM-IHADCB) PRIVATE PROCLIB DDNAME\n*\nPPDAARGL DC    A(0)                DYN ALLOC ARG LIST\nPPDARB   DC    0CL20' ',5F'0'      DYN ALLOC REQUEST BLOCK\nPPDATXTL DC    6A(*-*)             DYN ALLOC TEXT POINTERS\n*\nPPDDNAMK DC    Y(*-*)              DDNAME KEY FOR DYN ALLOC\nPPDDNAM# DC    Y(*-*)                    NO. OF LENGTH-PARM ITEMS:\nPPDDNAML DC    Y(8)                      DDNAME LENGTH\nPPDDNAME DC    CL8'IEF*PDS0'             DDNAME STRING\n*\nPPDSNAMK DC    Y(*-*)              DSNAME KEY FOR DYN ALLOC\nPPDSNAM# DC    Y(1)                      NO. OF LENGTH-PARM ITEMS:\nPPDSNAML DC    Y(*-*)                    DSNAME LENGTH\nPPDSNAME DC    CL44' '                   USER PROCLIB DSNAME\n*\nPPVOLSEK DC    Y(*-*)              VOLSER KEY FOR DYN ALLOC\nPPVOLSE# DC    Y(1)                      NO. OF LENGTH-PARM ITEMS:\nPPVOLSEL DC    Y(*-*)                    VOLSER LENGTH\nPPVOLSER DC    CL8' '                    USER PROCLIB VOLSER\n*\nPPUNITK  DC    Y(*-*)              UNIT KEY FOR DYN ALLOC\nPPUNIT#  DC    Y(1)                      NO. OF LENGTH-PARM ITEMS\nPPUNITL  DC    Y(*-*)                    UNIT LENGTH\nPPUNIT   DC    CL8' '                    USER PROCLIB UNIT\n*\nPPSDISPK DC    Y(*-*)              STATUS DISPOSITION KEY\nPPSDISP# DC    Y(1)                      NO. OF LENGTH-PARM ITEMS\nPPSDISPL DC    Y(1)                      DISPOSITION CODE LENGTH\nPPSDISP  DC    X'04'                     DISP CODE (NEW DEFAULT)\n*\nPPVLREFK DC    Y(*-*)              VOLUME REFERENCE TO DSNAME KEY\nPPVLREF# DC    Y(1)                      NO. OF LENGTH-PARM ITEMS\nPPVLREFL DC    Y(*-*)                    REFERENCE DSNAME LENGTH\nPPVOLREF DC    CL44' '                   VOLUME REFERENCE DSNAME\n*\nPPCONCDK DC    Y(*-*)              DDNAME KEY FOR CONCATENATIONS\nPPCONCD# DC    Y(*-*)                 NUMBER OF LENGTH-PARM ITEMS:\nPPCONCDD DC    16XL10'00'                DDNAME LTH & TEXT(MAX=16)\n*\nPPDFPARM DS    5F                        DAIRFAIL PARM LIST\nPPDFF02A DS    A                         DAIRFAIL - IKJEFF02 WORD\nPPDFRETC DS    F                         DAIRFAIL RETURN CODE\nPPDFIDN  DS    H                         DAIRFAIL CALLER IDENT.\n*\nPPESTAEP ESTAE *-*,TERM=YES,MF=L\nPPSTAEPL EQU   *-PPESTAEP          AREA LENGTH\n*\nPPOCLST  OPEN  (PPDCB,(INPUT)),MF=L\n*\nPPLOCPRM CAMLST NAME,*-*,,*-*      PARM LIST FOR LOCATE\n*\n         DS    0D\nPPLOCWRK DS    CL268               WORK AREA FOR LOCATE\n*\nPPWTOWRK DS    CL144               WTO MESSAGE AREA\n*\n         DS    0D                  ALIGN TO A DOUBLE WORD\nPPWRKEND EQU   *                   END OF PRIVATE PROCLIB ADD-ON\nPPWORKLN EQU   *-PPWORK            WORK AREA LENGTH\n*\n         TITLE '**** INTERNAL TEXT HEADER ****'\n         IEFTXTFT ,\n*\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING SYMBOL IS USED IN THE DD CARD INTERNAL TEXT    *\n*        HEADER TO INDICATE A JOBPROC DD STATEMENT.  ITS VALUE MUST   *\n*        BE USED IN THE SUPERZAP TO IEFVHE THAT CHECKS FOR A JOBPROC  *\n*        DD STATEMENT AND IGNORES IT.  IT IS DEFINED HERE TO AVOID    *\n*        HAVING TO MAKE CHANGES TO THE IEFTXTFT MACRO.  THIS VALUE    *\n*        WAS PREVIOUSLY USED TO SET A FLAG IN FIELD \"STRDINDC\".       *\n*        HOWEVER, SUBSEQUENT MAINTENANCE HAS USED THAT FIELD.  IT IS  *\n*        NOW USED TO SET A FLAG IN FIELD \"STRINDCS\".  THE SUPERZAP    *\n*        TO IEFVHE MUST BE CHANGED ACCORDINGLY.                       *\n*                                                                     *\n***********************************************************************\n*\nJPROCSTR EQU   X'80'               TEXT IS FOR A JOBPROC DD CARD\n*\n         TITLE '**** JCL KEYWORD CODES ****'\n         IEFVKEYS  ,\n*\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING SYMBOL IS USED AS THE INTERNAL TEXT KEY VALUE  *\n*        FOR THE \"SYSPROC=\" KEYWORD.  ITS VALUE MUST BE USED IN       *\n*        CHANGING THE JCL KEYWORD TABLE IN IEFVFA.  THIS SYMBOL IS    *\n*        DEFINED HERE TO AVOID HAVING TO CHANGE THE IEFVKEYS MACRO.   *\n*                                                                     *\n***********************************************************************\n*\nSYSPROCK EQU   X'01'   *     DD      SYSPROC=  JOBPROC DD STATEMENTS\n*\n         TITLE '**** MODULE PREFIX ****'\nIEFVPP   CSECT ,                   CONTROL SECTION NAME\n*\n         ENTRY IEFVPP0             INITIALIZATION CALL\n         ENTRY IEFVPP1             JOBPROC DD CARD PROCESSOR\n         ENTRY IEFVPP2             SET USER PROCLIB ENVIRONMENT\n         ENTRY IEFVPP3             END OF JOB CLEANUP ROUTINE\n         ENTRY IEFVPP4             COMBINED IEFVPP1 AND IEFVPP2 ENTRY\n         ENTRY IEFVPP5             IEFUJV INTERNAL TEXT EXIT INTERFACE\n         ENTRY IEFVPPM             MESSAGE PROCESSOR\n*\nR10      EQU   10                  INTERNAL SUB-ROUTINE LINKAGE\nR11      EQU   11                  PRIMARY BASE REGISTER\nR12      EQU   12                  CONVERTER WORK AREA\nR13      EQU   13                  REGISTER SAVE AREA\nR14      EQU   14                  SCRATCH AND LINK\nR15      EQU   15                  SCRATCH AND LINK\n         SPACE 3\n         USING COMWA,R12           SET STANDARD BASE\n         SPACE 3\n         DC    AL1(VPPIDL)         LTH OF IDENTIFICATION PREFIX\nVPPID    DC    CL8'IEFVPP'         USER PROCLIB SUPPORT MODULE ID\n         DC    CL9'V4.R1.M0 '      CURRENT SYZYGY RELEASE NO.\n         DC    CL8'&SYSDATE'       LAST ASSEMBLY DATE\n         DC    CL8' &SYSTIME'      TIME OF LAST ASSEMBLY\n         DC    C'COPYRIGHT FEBRUARY 25, 2003 BY SYZYGY INC. '\nVPPIDL   EQU   *-VPPID             LENGTH OF IDENTIFICATION HEADER\n*\n         TITLE '**** IEFVPP0  - INITIALIZATION PROCESSING ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP0                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED TO PROCESS ANY INITIALIZATION FUNCTIONS.     *\n* IF THIS ROUTINE IS NOT INVOKED, THE CONVERTER WILL FAIL IN THE MOST *\n* TERRIBLE WAY, SINCE ADDRESSES THAT IT WILL LATER ATTEMPT TO BRANCH  *\n* TO WILL NOT HAVE BEEN PLACED IN THE CONVERTER WORK AREA RESERVED    *\n* WORD AND THE PRIVATE PROCLIB WORK AREA.                             *\n*                                                                     *\n*    1  GETMAIN THE PRIVATE PROCLIB WORK AREA AND ANCHOR IT IN        *\n*       THE CONVERTER WORK AREA.                                      *\n*    2  INITIALIZE ENTRY POINTS IN THE PRIVATE PROCLIB WORK AREA.     *\n*    3  INITIALIZE SWITCHES, COUNTERS, AND TRACE FLAGS.               *\n*    4  INITIALIZE DYNAMIC ALLOCATION PARAMETER BLOCK.                *\n*    5  DETERMINE PROCLIB DDNAME BY ENQUEUE.                          *\n*    6  PERFORM CLEANUP FROM PREVIOUS CONVERSION (IF NECESSARY).      *\n*    7  BRANCH TO IEFVHA.                                             *\n*                                                                     *\n* INPUT:                                                              *\n*        CONVERTER WORK AREA (REGISTER 12).                           *\n*                                                                     *\n* OUTPUT:                                                             *\n*        INITIALIZE PRIVATE PROCLIB ANCHOR IN THE CWA AND THE         *\n*        PRIVATE PROCLIB WORK AREA ITSELF.                            *\n*                                                                     *\n* ENTERNALS:                                                          *\n*        NONE                                                         *\n*                                                                     *\n* EXIT:                                                               *\n*        BRANCH TO IEFVHA.                                            *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE    (SVC 60)                                            *\n*        ENQ      (SVC 56)                                            *\n*        DYNALLOC (SVC 99)                                            *\n*        WTO      (SVC 35)                                            *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP0  PPEPA VPP0                IEFVPP0 ENTRY POINT ADDRESS\n*\n***********************************************************************\n*                                                                     *\n*        THE INSTRUCTION BELOW CAN BE CHANGED OR ZAPPED TO ENABLE     *\n*        EXTERNAL DEBUGGING TRACE CODE (WTO MESSAGES).                *\n*                                                                     *\n***********************************************************************\n*\nPPSETBUG DS    0AL4(PPSETBUG)      PROVIDE XREF REFERENCE\n         OI    PPMISC,*-*          PATCH TO TURN ON DEBUGGING CODE\n*\n         EJECT\n         L     R0,PPIEFVHA         SET INITIALIZATION \"RETURN\" ADDRESS\n         L     R1,4(,R13)          LOAD ADDRESS OF CALLING SAVE AREA\n         ST    R0,12(,R1)          SET \"RETURN\" R14\n         ST    R0,16(,R1)          SET \"RETURN\" R15\n*\n         ST    R11,PPIEFVPP        SET MODULE BASE IN WORK AREA\n         MVC   PPVPP0(PPVPPLEN),PP0ADDRS INITIALIZE ENTRY POINTS\n*\n         MVI   PPSTAT1,0           INITIALIZE STATUS FLAG 1\n         MVI   PPSTAT2,0           INITIALIZE STATUS FLAG 2\n         MVI   PPTRPP0,0           INITIALIZE\n         MVI   PPTRPP1,0            TRACE\n         MVI   PPTRPP2,0             FLAGS\n         MVI   PPTRPP3,0\n*\n         MVC   PPDCB(PPDCBPTL),PPDCBPAT  INIT DCB AREA\n*\n         LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET ADDRESSABILITY TO DARB\n         ST    R9,PPDAARGL         SET PTR TO DARB IN PARM LIST->\n         MVI   PPDAARGL,S99RBPND   SET END OF PARM LIST INDICATOR\n         XC    PPDARB(L'PPDARB),PPDARB CLEAR ALLOC REQUEST BLOCK\n         MVI   S99RBLN,L'PPDARB    SET LENGTH OF REQUEST BLOCK\n         MVI   S99FLG11,S99ONCNV+S99NOCNV+S99NOMNT SET FLAGS 1\n*              NO CONVERTIBLE, NO EXISTING ALLOC, NO VOLUME MOUNT\n         MVI   S99FLG21,S99NORES   SET NO DATA SET ENQUEUE FLAGS 2\n         LA    R0,PPDATXTL         -> DYNAMIC ALLOCATION TEXT\n         ST    R0,S99TXTPP         SET TEXT LIST PTR IN DARB\n*\n         LA    R9,PPDFPARM         -> DAIRFAIL PARM LIST\n         USING DFDSECTD,R9         MAKE IT ADDRESSABLE\n         LA    R1,PPDARB           -> DYNAMIC ALLOCATE RB\n         ST    R1,DFS99RBP         SET IN DFPL\n         LA    R1,PPDFRETC         -> RETURN CODE HOLDING AREA\n         ST    R1,DFRCP            SET IN DFPL\n         LA    R1,PPDFF02A         -> IKJEFF02 ADDRESS AREA\n         ST    R1,DFJEFF02         STORE PTR IN DAIRFAIL PLIST\n         XC    PPDFF02A,PPDFF02A   SHOW IKJEFF02 ADDRESS UNKNOWN\n         LA    R1,PPDFIDN          -> DAIRFAIL IDENTIFICATION NO.\n         ST    R1,DFIDP            SET IN DFPL\n         MVI   DFIDP,X'80'         FLAG END OF PARM LIST\n         XC    DFCPPLP,DFCPPLP     CLEAR CPPL POINTER\n         LA    R1,50               INDICATE SVC 99 ERROR\n         STH   R1,PPDFIDN           IN DAIRFAIL PARM LIST\n         OI    PPDFIDN,DFWTP       INDICATE WTP REQUEST\n*\n         MVC   PPLOCPRM(PPLOCPL),PPCAMLST MOVE IN LOCATE CAMLST\n         LA    R1,PPDSNAME         -> DSNAME HOLD AREA\n         ST    R1,PPLOCPRM+4       SET DSNAME PTR IN CAMLST\n         LA    R1,PPLOCWRK         -> LOCATE WORK AREA\n         ST    R1,PPLOCPRM+12      SET WORK AREA PTR IN CAMLST\n*\n         MVC   PPLOCWRK(PPENQPL),PPENQLST  MOVE ENQ PARM LIST\n         LA    R1,PPSYSNAM         POINT AT MINOR NAME\n         ST    R1,PPLOCWRK+8       STORE ADDRESS IN ENQ PARM LIST\n         MVC   PPSYSNAM,PPSYSDDN   INITIALIZE MINOR NAME\n         LA    R9,PPDDNSUF         POINT AT NAME VARIABLES\n         LA    R8,L'PPDDNSUF       NUMBER OF CONVERTERS\n*\nPPENQLP  MVC   PPSYSNAM+3(1),0(R9) MOVE NAME CHARACTER\n         ENQ   MF=(E,PPLOCWRK)     TRY THE ENQ\n         LTR   R15,R15             CHECK IF RESOURCE GOTTEN\n         BZ    PPNAMOBT            BRANCH IF NAME OBTAINED\n*\n         LA    R9,1(,R9)           POINT AT NEXT NAME CODE\n         BCT   R8,PPENQLP          LOOP THROUGH THE NAMES\n*\n         WTO   MF=(E,PPENQWTO)     INFORM OPERATOR OF FAILURE\n         B     PPRETURN            RETURN WITHOUT ENABLING JOBPROC\n*\nPPNAMOBT PPDEBUG ENQ0              TRACE END OF ENQUEUE\n         MVC   PPUSRDDN+3(1),PPSYSNAM+3 INITIALIZE ALLOCATION DDNAME\n         L     R1,PSATOLD-PSA(,R0) LOAD TCB ADDRESS\n         L     R1,TCBTIO-TCB(,R1)  LOAD TIOT ADDRESS\n         ST    R1,PPTIOTAD         SAVE THE ADDRESS\n         USING TIODSECT,R1         SET UP ADDRESSIBILITY\n         SLR   R15,R15             ZERO FOR INSERTS\n*\nPPTIOTLP CLI   TIOELNGH,0          CHECK FOR END OF TIOT\n         BE    PPDDNMOK            BRANCH IF NAME NOT FOUND\n         CLC   TIOEDDNM,PPUSRDDN   CHECK IF DD LEFT ALLOCATED\n         BE    PPCLNUP             GO CLEAN UP IF SO\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT ADDRESS\n         B     PPTIOTLP            CONTINUE TIOT SCAN\n*\nPPCLNUP  IC    R15,TIOELNGH        LOAD ENTRY LENGTH\n         AR    R1,R15              FIND NEXT ENTRY\n         CLI   TIOELNGH,0          CHECK FOR LAST ENTRY\n         BE    PPCLNNOC            BRANCH IF AT END\n         CLI   TIOEDDNM,C' '       CHECK FOR CONCATENATION\n         BNE   PPCLNNOC            BRANCH IF NOT CONCATENATED\n         BAL   R10,PPDECONC        ATTEMPT DE-CONCATENATION\n         PPDEBUG DCN0              END OF DE-CONCATENATION\n*\nPPCLNNOC MVC   PPALLOC1(2),=X'FFFF'     FORCE DEALLOCATION\n         BAL   R10,PPDEALOC        OF EVERYTHING\n         PPDEBUG DAL0              END OF DEALLOCATION\n         B     PPDDNMOK            GO LOOK FOR SYSPROC DDNAME\n*\nPPDDNMOK L     R1,PPTIOTAD         RELOAD TIOT ADDRESS\n         SLR   R15,R15             ZERO FOR INSERTS\n         SLR   R14,R14             ZERO FOR COUNTING\n*\nPPTIOSLP CLI   TIOELNGH,0          CHECK FOR END OF TIOT\n         BE    PPSYSMIS            BRANCH IF END - SYSPROC MISSING\n         CLC   TIOEDDNM,PPSYSNAM   MATCH DD NAMES\n         BE    PPSYSCNT            BRANCH IF WE FOUND IT\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT ADDRESS\n         B     PPTIOSLP            CONTINUE TIOT SCAN\n*\nPPSYSCNT LA    R14,1(,R14)         BUMP SYSTEM PROCLIB COUNT\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT THE ADDRESS\n         CLI   TIOEDDNM,C' '       CHECK FOR CONCATENATION\n         BE    PPSYSCNT            LOOP IF IT IS\n         LA    R0,16               SET MAXIMUM PROCLIBS\n         SR    R0,R14              DEDUCT FOT SYSTEM PROCLIBS\n         STH   R0,PPJPMAX          SET THE MAX USER PROCLIB\n         B     PPSYSDOK            AND FINISH INITIALIZATION\n*\nPPSYSMIS L     R1,PPTIOTAD         LOAD THE TIOT ADDRESS\n         CLC   TIOCNJOB(8),=CL8'MSTRJCL' TEST IF MASTER'S TIOT\n         BE    PPSYSMMS            SKIP MESSAGE IF SO\n         CLC   TIOCNJOB(6),=C'MSTJCL'   TEST IF MASTER'S TIOT (1.3.2)\n         BE    PPSYSMMS            SKIP MESSAGE IF SO\n*\n         L     R1,PSAAOLD-PSA(,0)  LOAD ASCB ADDRESS\n         LH    R1,ASCBASID-ASCB(,R1)    LOAD THE ASID\n         CH    R1,=H'1'            CHECK FOR THE MASTER ADDRESS SPACE\n         BE    PPSYSMMS            BRANCH IF SO\n         WTO   MF=(E,PPSYSWTO)     INDICATE ERROR\n*\nPPSYSMMS OI    PPMISC,PPNOSYSP     INDICATE SYSPROC UNAVAILABLE\n         LA    R0,16               SET MAXIMUM PROCLIBS\n         STH   R0,PPJPMAX          STASH THE MAX\n*\nPPSYSDOK DS    0H\n         SR    R0,R0               CLEAR R0\n         STH   R0,PPJPCNT          INITIALIZE CONCATENATION COUNT\n         STCM  R0,3,PPALLOC1       INITIALIZE ALLOCATION FLAGS\n*\n         PPDEBUG END0              INDICATE END OF PP0\n         DROP  R1                  DONE WITH THE TIOT\n*\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING MVI INSTRUCTION SHOULD HAVE ITS IMMEDIATE      *\n*        FIELD MODIFIED FROM PPINITC TO ZERO TO CRIPPLE THE PRIVATE   *\n*        PROCLIB SUPPORT.  THIS IS THE ONLY WAY, SHORT OF REMOVING    *\n*        ALL CONVERTER MODIFICATIONS (ZAPS AND ALL).                  *\n*                                                                     *\n***********************************************************************\n*\nPPCANCEL DS    0AL4(PPCANCEL)      PROVIDE XREF REFERENCE\n         MVI   PPSTAT0,PPINITC     INDICATE VPP0 HAS COMPLETED\n*\n         B     PPRETURN            BACK TO CALLER\n*\n         DROP  R9,R11,R7\n*\nPPIEFVHA DC    V(IEFVHA)           EXIT FROM IEFVPP0\nPP0ADDRS DS    0F                  ENTRY POINT ADDRESS VECTOR\n         DC    A(IEFVPP0)\n         DC    A(IEFVPP1)\n         DC    A(IEFVPP2)\n         DC    A(IEFVPP3)\n         DC    A(IEFVPP4)\n         DC    A(IEFVPP5)\n         DC    A(IEFVPPM)\n*\n     TITLE '**** IEFVPP4  - COMBINED LINK TO IEFVPP1 AND IEFVPP2 ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP4                                                             *\n* *******                                                             *\n*                                                                     *\n*        THIS ROUTINE IS CALLED BY IEFVFA EACH TIME A JCL STATEMENT   *\n*    HAS BEEN COMPLETELY TRANSLATED TO INTERNAL TEXT.  THIS ROUTINE   *\n*    WILL BRANCH TO EITHER IEFVPP1 OR IEFVPP2 OR RETURN TO IEFVFA     *\n*    IF THE STATEMENT DOES NOT MEET THE CRITERIA FOR IEFVPP1 OR       *\n*    IEFVPP2.                                                         *\n*                                                                     *\n* INPUT:                                                              *\n*        SEE IEFVPP1 AND IEFVPP2.                                     *\n*                                                                     *\n* OUTPUT:                                                             *\n*        NONE.                                                        *\n*                                                                     *\n* SUBROUTINES:                                                        *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        BRANCH TO IEFVPP1 OR IEFVPP2 OR RETURN TO IEFVFA.            *\n*                                                                     *\n* SVC:                                                                *\n*        NONE.                                                        *\n*                                                                     *\n* NOTES:                                                              *\n*        THIS ROUTINE DOES NOT SAVE ANY REGISTERS, SINCE IEFVPP1 OR   *\n*        IEFVPP2 (IF BRANCHED TO) WILL DO SO.  IT IS UNNECESSARY      *\n*        TO SAVE THEM IF CONTROL IS RETURNED DIRECTLY TO IEFVFA.      *\n*                                                                     *\n***********************************************************************\n*\nIEFVPP4  DS    0H\n         USING *,R15\n         TM    SWZ,DDSW           IS THIS A DD STATEMENT\n         BZ    PP4EXEC            BRANCH IF NOT\n         L     R15,&ANCHOR        LOAD THE ANCHOR ADDRESS\n         L     R15,PPVPP1-PPWORK(,R15) LOAD THE REAL ENTRY POINT\n         BR    R15                BRANCH TO IEFVPP1\n*\nPP4EXEC  TM    SWA,JHS            HAD FIRST EXEC STATEMENT\n         BOR   R14                RETURN IF SO\n         TM    SWZ,EXECSW         IS THIS AN EXEC STATEMENT\n         BZR   R14                BRANCH IF NOT\n         TM    PSTMT+4,X'08'      IS THIS A CONVERTED PROC\n         BOR   R14                RETURN IF SO\n         L     R15,&ANCHOR        LOAD THE ANCHOR ADDRESS\n         L     R15,PPVPP2-PPWORK(,R15) LOAD THE REAL ENTRY POINT\n         BR    R15                BRANCH TO IEFVPP2\n*\n         DROP  R15\n*\n         TITLE '**** IEFVPP1  - //JOBPROC DD PROCESSOR ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP1                                                             *\n* *******                                                             *\n*                                                                     *\n*        THIS ROUTINE IS CALLED BY IEFVFA EACH TIME A DD STATEMENT    *\n*    HAS BEEN COMPLETELY TRANSLATED TO INTERNAL TEXT. ON EACH CALL    *\n*    IEFVPP1 DOES THE FOLLOWING:                                      *\n*                                                                     *\n*    1) DETERMINES WHETHER THE DD STATEMENT IS A JOBPROC. IF NOT,     *\n*       CONTROL IS PASSED BACK IMMEDIATELY TO IEFVFA.                 *\n*                                                                     *\n*    2) THE INTERNAL TEXT STRING IS FLAGGED TO INDICATE THAT IT       *\n*       REPRESENTS A JOBPROC DD CARD. THIS IS THE METHOD USED TO      *\n*       CAUSE THE INTERPRETER TO IGNORE THE DD STATEMENT AT THE       *\n*       INTERPRETER \"GET\" MODULE (IEFVHE) DURING INTERPRETATION.      *\n*       THIS IS NECESSARY IN ORDER TO KEEP THE CONVERTER JCL LISTING  *\n*       STATEMENT NUMBERS CONSISITENT WITH THE INTERPRETERS LISTING.  *\n*                                                                     *\n*    3) DETERMINES IF THE FIRST EXEC STATEMENT OF THE STEP HAS        *\n*       BEEN RECEIVED. IF IT HAS, AN ERROR MESSAGE INDICATING THAT    *\n*       THE JOBPROC DD STATEMENT IS \"MISPLACED\" IS ISSUED AND         *\n*       CONTROL IS PASSED BACK TO IEFVFA.                             *\n*                                                                     *\n*    4) DETERMINES IF THIS DD STATEMENT IS CONCATENATED TO A PREVIOUS *\n*       JOBPROC DD STATEMENT. IF NOT (IE. A DDNAME HAS BEEN CODED), A *\n*       MESSAGE IS ISSUED INDICATING THE THIS IS A DUPLICATE JOBPROC  *\n*       DD STATEMENT.                                                 *\n*                                                                     *\n*                                                                     *\n*    5) ALL INFORMATION NECESSARY TO ALLOCATE THE JOBPROC DATA SET    *\n*       DEFINED ON THE DD STATEMENT IS OBTAINED BY SCANNING THE       *\n*       INTERNAL TEXT BUFFER. CURRENTLY ONLY THE FOLLOWING DD CARD    *\n*       KEYWORDS ARE PROCESSED:                                       *\n*                                                                     *\n*           KEYWORD       RESTRICTIONS                                *\n*          ---------     --------------                               *\n*           DSNAME           NONE                                     *\n*           UNIT             FIRST POSITIONAL ONLY (IE. UNIT NAME)    *\n*           VOLUME           SER=\"VOLUME SERIAL NUMBER\"               *\n*                            REF=\"DSNAME\"                             *\n*           SYSPROC          YES -> INSTALLATION PROCLIBS AS DEFINED  *\n*                                   BY THE IEFDPDSI DD CARD IN THE    *\n*                                   JES PROC SHOULD BE CONCATENATED   *\n*                                   FOLLOWING THE USERS' PROCLIBS.    *\n*                            NO  -> ONLY THE USERS' PROCLIBS SHOULD   *\n*                                   BE SEARCHED.                      *\n*                                                                     *\n*    6) THE USER PROCLIB IS ALLOCATED TO \"JES\" VIA THE DYNAMIC        *\n*       ALLOCATION FACILITIES OF OS/VS. THE PROCLIB IS ALLOCATED TO   *\n*       THE DDNAME \"IEF#PDS*\" WHERE \"*\" IS AN INDEX BETWEEN 0 AND     *\n*       15 (X'F') WHICH REPRESENTS THE RELATIVE CONCATENATION NO. OF  *\n*       THE CURRENT JOBPROC ALLOCATION TO OTHERS (IF THE JOBPROC IS   *\n*       IN FACT A CONCATENATION). THE MAXIMUM NO. OF CONCATENATIONS   *\n*       ALLOWED IS SET DURING INITIALIZATION (IEFVPP0) AS 16 MINUS    *\n*       THE NUMBER OF PROCLIBS PROVIDED IN THE IEF#PDSI DEFINITION.   *\n*       IF SYSPROC=NO IS SPECIFIED, THE NUMBR OF USER SUPPLIED        *\n*       PROCLIBS IS AUTOMATICALLY SET TO THE MAXIMUM (16).            *\n*                                                                     *\n*    7) CONTROL IS PASSED BACK TO IEFVFA WHO WILL WRITE THE INTERNAL  *\n*       TEXT STRING FOR THE JOBPROC BACK TO \"JES\".                    *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(SWY)      - INDICATES IF IEFVFA HAS DETECTED A SYNTAX    *\n*                        ERROR IN THE CURRENT STATEMENT               *\n*        IWA(TEXTBUFP) - CONTAINS A PTR TO THE INTERNAL TEXT BUFFER   *\n*        IEFVKEYS      - JCL KEY EQUATES USED FOR SCANNING THE TEXT   *\n*                        BUFFER                                       *\n*                                                                     *\n* OUTPUT:                                                             *\n*        INTERNAL TEXT STRING IS FLAGGED AS REPRESENTING A JOBPROC    *\n*        AND USER PROCLIB IS ALLOCATED.                               *\n*                                                                     *\n* SUBROUTINES:                                                        *\n*        CALL TO IEFVPPM WHEN ERROR CONDITION IS DETECTED.            *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER IEFVFA VIA RETURN MACRO.                    *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE (SVC 60)                                               *\n*        DYNAMIC ALLOCATION (SVC 99)                                  *\n*                                                                     *\n* NOTES:                                                              *\n*     1) THE TEXT SCANNING IS SOMEWHAT SIMPLIFIED SINCE ALL REQUIRED  *\n*           OPERANDS ARE THE FIRST FOR THE RELATED KEYWORDS.          *\n*                                                                     *\n*     2) ALL ERROR SITUATIONS CAUSE A CALL TO THE IEFVPPM SUBROUTINE  *\n*        WHICH CAUSES THE JOB TO BE FLUSHED ON A JCL ERROR. ERROR     *\n*        MESSAGES ARE ACTUALLY WRITTEN TO THE USERS' LOG FILE VIA     *\n*        AN ABOMINATION TAKEN FROM IEFVGM.                            *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP1  PPEPA VPP1                IEFVPP1 ENTRY POINT ADDRESS\n         EJECT\n**************************** ROUTING **********************************\n         TM    SWY,X'01'           ANY SYNTAX ERROR IN STATEMENT ?\n         BO    PPRETURN            YES, IGNORE THE STATEMENT\n         L     R1,TEXTBUFP         -> INTERNAL TEXT BUFFER\n         LA    R1,STRDKEY-TEXT(,R1)  -> START KEY\n         CLI   1(R1),1             SINGLE POSITIONAL (= DDNAME) ?\n         BNE   PPRETURN            NO, WILL GET JCL ERROR\n*\n         TM    PPSTAT1,PPJPBUSY    BUSY ON JOBPROC CONCAT ?\n         BO    PPTCONC             YES, SKIP\n         CLC   2(8,R1),PPJOBPRO    IS START OF JOBPROC CONCAT ?\n         BNE   PPRETURN            NO, EXIT\n         TM    PPSTAT1,PPHAVJP     BEEN HERE BEFORE ?\n         BO    PPERM836            YES -> MISPLACED JOBPROC ERROR\n*\n         OI    PPSTAT1,PPHAVJP+PPJPBUSY+PPSYSYES    BUSY, DEFAULT INIT\n         B     PP1COMM             CONTINUE INITIALIZATION\n*\nPPTCONC  DS    0H\n         CLI   2(R1),0             MISSING DDNAME = CONCATENATION\n         BE    PPSETCNC            YES, GO SAVE STATUS\n         NI    PPSTAT1,PPALL-PPJPBUSY    CLEAR JOBPROC BUSY STATUS\n         CLC   2(8,R1),PPJOBPRO    A SECOND \"JOBPROC\" DD CARD ?\n         BE    PPERM836            YES, GIVE \"MISPLACED JOBPROC\"\n         B     PPRETURN            AND EXIT\n*\nPPSETCNC DS    0H\n         OI    PPSTAT1,PPCONCJP    SHOW CONCATENATED USER FILES\n*\nPP1COMM  DS    0H\n         MVI   PPDSNAME,C' '       CLEAR DSNAME AREA\n         MVC   PPDSNAME+1(43),PPDSNAME    TO BLANKS\n         MVC   PPVOLREF,PPDSNAME   CLEAR VOL=REF=DSNAME\n         MVC   PPVOLSER,PPDSNAME   CLEAR VOLSER AREA\n         MVC   PPUNIT,PPDSNAME     CLEAR THE UNIT NAME AREA\n         MVI   PPSDISP,PPASHR      SET DEFAULT DISP TO \"SHR\" SO THAT\n*                                   DISP PARAMETER MAY BE IGNORED\n         PPDEBUG ENT1              TRACE PP1 WITH JOBPROC CARD\n*\n         L     R2,TEXTBUFP         R2 -> INTERNAL TEXT BUFFER\n         OI    STRINDCS-TEXT(R2),JPROCSTR FLAG DD CARD AS JOBPROC\n         TM    PPSTAT1,PPJPERR     PREVIOUS ERROR NOTED ?\n         BO    PPRETURN            YES, JUST EXIT\n         MVI   PPSTAT2,0           CLEAR STATEMENT STATUS FLAGS\n*\n         EJECT\n************************** COLLECT PARAMETERS *************************\n         SR    R0,R0               CLEAR NUMBER/COUNT STACK (MAX = 4)\n         SR    R14,R14             USED FOR NUMBER/COUNT\n         SR    R15,R15             USED FOR LENGTH\n*\nPPITXT01 DS    0H\n         LR    R2,R1               SAVE KEY ADDR\n         CLI   0(R2),ENDK          END OF TEXT ?\n         BE    PPTSTOPT            BRANCH IF YES..GO TEST OPTIONS\n         IC    R14,1(,R1)          LOAD NUMBER\n         LA    R1,2(,R1)           -> LENGTH/COUNT/KEY\n         LTR   R14,R14             HAVE OPERAND ?\n         BZ    PPITXT01            NULL OPERAND, LOOP\n*\nPPITXT02 DS    0H\n         TM    0(R1),PPVLBIT       IS THIS A COUNT ?\n         BZ    PPITXT03            NO, SKIP\n         SLA   R0,8                PUSH NUMBER/COUNT STACK\n         BO    PPERM800            ERROR IF OVERFLOW\n         OR    R0,R14              SAVE CURRENT NUMBER/COUNT\n         IC    R14,0(,R1)          LOAD NEW COUNT\n         LA    R1,1(,R1)           -> LENGTH/COUNT\n         N     R14,PPMSKCLR        CLEAR TOP FLAG & TEST ZERO\n         BNZ   PPITXT02            HAVE COUNT, GO INSPECT NEXT\n         B     PPITXT05            NULL COUNT, GO POP STACK\n*\nPPITXT03 DS    0H\n         IC    R15,0(,R1)          LOAD LENGTH\n         LTR   R2,R2               HAVE A KEY TO INSPECT ?\n         BZ    PPITXT04            NO, SKIP\n         LTR   R3,R15              IS LENGTH NULL ?\n         BZ    PPITXT04            IGNORE IF SO\n*\n         CLI   0(R2),DSNAMEK       DSNAME ?\n         BE    PPSETDSN                 GO SAVE IT\n         CLI   0(R2),SERMK         VOLUME SERIAL ?\n         BE    PPSETSER                 GO SAVE IT\n         CLI   0(R2),REFMK         VOLUME REF BY DSNAME ?\n         BE    PPSETREF                 GO SAVE IT\n         CLI   0(R2),SYSPROCK      SYSPROC OPTION ?\n         BE    PPSETSYS                 GO SAVE IT\n         CLI   0(R2),UNITK         UNIT SPECIFICATION ?\n         BE    PPSETUNT                 GO SAVE IT\n*\nPPITXT04 DS    0H\n         SR    R2,R2               KILL KEY INSPECTION TILL NEXT KEY\n         LA    R1,1(R15,R1)        -> LENGTH/COUNT/KEY\n         BCT   R14,PPITXT02        LOOP FOR REST OF NUMBER/COUNT\n*\nPPITXT05 DS    0H\n         SRA   R0,8                OPERAND END, POP THE NUMBER/COUNT\n         BZ    PPITXT01            STACK EMPTY, GO DO NEXT KEY\n         LR    R14,R0              SET LOOP COUNTER\n         N     R14,PPMSKCLR        ONLY ONE BYTE VALUE\n         B     PPITXT02            GO TEST FOR COUNT/LENGTH NEXT\n*\n         EJECT\n********************** EXTRACT PARAMETER DATA *************************\nPPSETSYS DS    0H\n         TM    PPSTAT1,PPCONCJP    PRIMARY JOBPROC STATEMENT ?\n         BO    PPERM801            NO -> ERROR, SYSPROC NOT VALID\n         CLC   PPSYES(4),0(R1)     SYSPROC=YES ?\n         BE    PPITXT04                 IS DEFAULT, RETURN TO SCAN\n         CLC   PPSNO(3),0(R1)      SYSPROC=NO ?\n         BNE   PPERM843            ELSE INVALID OPERAND\n*\n         NI    PPSTAT1,PPALL-PPSYSYES   SAVE NO SYSTEM PROC WANTED\n         LA    R4,16               SET MAXIMUM NUMBER OF PROCLIBS\n         STH   R4,PPJPMAX          SET IT FOR LATER USE\n         B     PPITXT04            CONTINUE SCAN\n*\nPPSETDSN DS    0H\n         OI    PPSTAT2,PPHAVDSN    SHOW DSNAME GIVEN\n         STH   R3,PPDSNAML         SAVE STRING LENGTH\n         LA    R4,PPDSNTAB         -> TABLE ENTRY FOR PROCESSING\n         B     PPTSTMOV            MERGE\n*\nPPSETSER DS    0H\n         OI    PPSTAT2,PPHAVSER    SHOW VOLSER GIVEN\n         STH   R3,PPVOLSEL         SAVE STRING LENGTH\n         LA    R4,PPSERTAB         -> TABLE ENTRY FOR PROCESSING\n         B     PPTSTMOV            MERGE\n*\nPPSETUNT DS    0H\n         OI    PPSTAT2,PPHAVUNT    SHOW UNIT GIVEN\n         STH   R3,PPUNITL          SAVE STRING LENGTH\n         LA    R4,PPUNTTAB         -> TABLE ENTRY FOR PROCESSING\n         B     PPTSTMOV            MERGE\n*\nPPSETREF DS    0H\n         OI    PPSTAT2,PPHAVREF    SHOW VOLUME REF BY DSNAME\n         STH   R3,PPVLREFL         SAVE DSNAME LENGTH FOR ALLOC\n         LA    R4,PPREFTAB         -> TABLE ENTRY FOR PROCESSING\n*\nPPTSTMOV DS    0H\n         CH    R3,0(,R4)           TEST STRING LENGTH FOR MAX\n         BH    PPERM842            \"EXCESSIVE PARAMETER LENGTH\"\n         BCTR  R3,0                GET MC LENGTH FOR MOVE\n         EX    R3,2(,R4)           SET STRING ACCORDING TO MOVE\n         B     PPITXT04            CONTINUE SCAN\n*\nPPDSNTAB DC    Y(44)                       MAX STRING LENGTH\n         MVC   PPDSNAME(*-*),1(R1)         SHIFT STRING TO WORK AREA\n*\nPPSERTAB DC    Y(6)\n         MVC   PPVOLSER(*-*),1(R1)\n*\nPPREFTAB DC    Y(44)\n         MVC   PPVOLREF(*-*),1(R1)\n*\nPPUNTTAB DC    Y(8)\n         MVC   PPUNIT(*-*),1(R1)\n*\n         EJECT\n********************** CHECK FOR REQUIRED PARMS ***********************\nPPTSTOPT DS    0H\n         TM    PPSTAT2,PPHAVDSN    IS DSNAME PROVIDED ?\n         BZ    PPERM802            ERROR IF MISSING\n*\n         TM    PPSTAT2,PPHAVUNT    UNIT PARAMETER SPECIFIED ?\n         BZ    PPTSNMSS            BRANCH IF NOT\n         CLC   PPUNIT,=CL8'3330V'  WAS MSS SPECIFIED AS UNIT?\n         BE    PPERM811            ERROR IF SO\n         CLC   PPUNIT,=CL8'SDG00'  CHECK LOWER BOUND OF SDGXX NAME\n         BL    PPTSNMSS            OK IF LOWER\n         CLC   PPUNIT,=CL8'SDG99'  CHECK UPPER BOUND OF SDGXX NAME\n         BNH   PPERM811            ERROR IF NOT HIGHER\n*\nPPTSNMSS DS    0H\n*\n*        IF IT IS DESIRED TO PROHIBIT ACCESS TO ANY DATA SETS VIA\n*        JOBPROC, THE CHECK CAN BE MADE HERE APPROPRIATE MESSAGE\n*        ROUTINE (PPERM803) CAN BE BRANCHED TO.\n*\n         CLC   PPJPCNT(2),PPJPMAX  ARE WE ALREADY AT THE MAXIMUM ?\n         BNL   PPERM804            YES, GIVE UP\n         SPACE 2\n********************* ALLOCATE TO USER PROCLIB ************************\nPPGOALOC LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET ADDRESSABILITY TO DARB\n         MVI   S99VERB,S99VRBAL    INDICATE \"ALLOC DSNAME\" REQUEST\n         LA    R9,PPDATXTL         -> ALLOCATION TEXT POINTERS\n         USING S99TUPL,R9          MAKE TEXT PTRS ADDRESSABLE\n         LA    R8,PPDDNAMK         -> DDNAME TEXT UNIT SLOT\n         USING S99TUNIT,R8         MAKE TEXT UNITS ADDRESSABLE\n         MVC   S99TUKEY,=AL2(DALDDNAM) SET DDNAME KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         MVC   S99TULNG,=H'8'      SET DDNAME LENGTH\n         MVC   S99TUPAR(7),PPUSRDDN SET BASIC DDNAME\n         LH    R2,PPJPCNT          GET CURRENT CONCATENATION NO.\n         LA    R2,1(,R2)           BUMP BY ONE\n         LA    R15,PPDDNSUF-1(R2)  POINT TO PROPER DDNAME SUFFIX\n         MVC   S99TUPAR+7(1),0(R15) SET DDNAME SUFFIX\n         ST    R8,S99TUPTR         SET PTR TO DDNAME TEXT UNIT\n*\n         LA    R8,PPDSNAMK         -> DSNAME TEXT UNIT SLOT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT UNIT PTR\n         MVC   S99TUKEY,=AL2(DALDSNAM) SET \"DSNAME\" TEXT KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         ST    R8,S99TUPTR         SET PTR TO \"DSNAME\" TEXT UNIT\n         LA    R8,PPSDISPK         -> STATUS DISPOSITION TEXT\n*\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVC   S99TUKEY,=AL2(DALSTATS) SET \"STATUS\" DISP KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         MVC   S99TULNG,=AL2(1)    SET LENGTH OF DISP CODE\n         ST    R8,S99TUPTR         SET PTR TO \"STATUS\" DISP TEXT\n*\n         TM    PPSTAT2,PPHAVSER    VOLUME SERIAL NO. SPECIFIED ?\n         BZ    PPASVREF            BRANCH IF NOT\n         LA    R8,PPVOLSEK         -> VOLUME SERIAL TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVC   S99TUKEY,=AL2(DALVLSER) SET \"VOL=SER=\" TEXT KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         ST    R8,S99TUPTR         SET PTR TO \"VOL=SER=\" TEXT\n*\nPPASVREF TM    PPSTAT2,PPHAVREF    \"VOL=REF=DSN\" SPECIFIED ?\n         BZ    PPASUNIT            BRANCH IF NOT\n         LA    R8,PPVLREFK         -> VOLUME REFERENCE TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVC   S99TUKEY,=AL2(DALVLRDS) SET \"VOL=REF=\" TEXT KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         ST    R8,S99TUPTR         SET PTR TO \"VOL=SER=\" TEXT\n*\nPPASUNIT TM    PPSTAT2,PPHAVUNT    UNIT PARAMETER SPECIFIED ?\n         BZ    PPAENDTL            BRANCH IF NOT\n         LA    R8,PPUNITK          -> \"UNIT\" TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVC   S99TUKEY,=AL2(DALUNIT) SET \"UNIT\" TEXT KEY\n         MVC   S99TUNUM,=AL2(1)    SET NUMBER OF OPERANDS\n         ST    R8,S99TUPTR         SET PTR TO \"UNIT\" TEXT\n*\nPPAENDTL MVI   S99TUPTR,S99TUPLN   SET END OF TEXT UNITS INDICATOR\n         LA    R1,PPDAARGL         R1 -> DYNAMIC ALLOC PARM LIST\n         OI    PPSTAT0,PPDACODE    INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                ALLOCATE TO USER PROCLIB\n         NI    PPSTAT0,PPALL-PPDACODE INDICATE WE ARE BACK\n         LTR   R15,R15             ALLOCATION SUCCESSFUL ?\n         BZ    PPADAOK             BRANCH IF YES\n         BAL   R10,PPDAERRA        DO ERROR ANALYSIS\n         B     PPRETURN            RETURN TO CALLER\n*\nPPADAOK  STH   R2,PPJPCNT          UPDATE CONCATENATION NO.\n         BCTR  R2,0                REDUCE COUNT FOR SHIFT\n         ICM   R1,12,=X'8000'      INSERT BIT MASK\n         SRL   R1,0(R2)            SHIFT TO CORRECT BIT POSITION\n         ICM   R2,12,PPALLOC1      GET CURRENT ALLOCATION MASK\n         OR    R2,R1               GET NEW ALLOCATION STATUS\n         STCM  R2,12,PPALLOC1      SET NEW ALLOCATION STATUS\n         PPDEBUG END1              TRACE END OF PP1\n*\n         L     R1,PPTIOTAD         LOAD THE TIOT ADDRESS\n         USING TIODSECT,R1         SET UP ADDRESSIBILITY\n         SLR   R15,R15             ZERO FOR INSERTS\n*\nPPATIOLP CLI   TIOELNGH,0          CHECK FOR END OF TIOT\n         BE    PPERM811            BRANCH IF NAME NOT FOUND (ERROR)\n         CLC   TIOEDDNM,PPDDNAME   CHECK FOR THE ALLOCATED DD ENTRY\n         BE    PPATIOTF            BRANCH IF FOUND\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT ADDRESS\n         B     PPATIOLP            CONTINUE TIOT SCAN\n*\nPPATIOTF ICM   R1,7,TIOEFSRT       LOAD THE UCB ADDRESS\n         BZ    PPERM811            IF NONE, THIS IS VERY BAD\n         USING UCBDSECT,R1         TELL THE ASSEMBLER ABOUT THE UCB\n*\n         TM    UCBTBYT3,UCB3DACC   TEST FOR DIRECT ACCESS\n         BZ    PPERM811            IF NOT, THIS CANNOT BE ALLOWED\n         TM    UCBTBYT2,UCBRVDEV   TEST FOR VIRTUAL DEVICE\n         BO    PPERM811            THIS IS ALSO NOT ALLOWED\n*\n         DROP  R1\n*\n         PPDEBUG END1              TRACE END OF PP1\n*\n         B     PPRETURN            RETURN TO CONVERTER\n*\n         DROP  R8,R9\n         EJECT ,\n***********************************************************************\n*        THE FOLLOWING ARE THE ERROR MESSAGE INTERFACES TO IEFVPPM    *\n*        FOR THE JOBPROC DD STATEMENT PROCESSOR (IEFVPP1).            *\n***********************************************************************\n*\nPPERM800 DS    0H\n         LA    R2,MSG800I          SYNTAX ERROR IN JOBPROC STMT\n         B     PPERRNSL            GO PRODUCE ERROR MESSAGE\n*\nPPERM801 DS    0H\n         LA    R2,MSG801I          ILLEGAL USE OF \"SYSPROC\" KEY\n         B     PPERRNSL            GO PRODUCE ERROR MESSAGE\n*\nPPERM802 DS    0H\n         LA    R2,MSG802I          JOBPROC DSNAME MISSING\n         B     PPERRNSL\n*\nPPERM803 DS    0H\n         LA    R2,MSG803I          DATA SET NOT VALID FOR JOBPROC\n         B     PPERRNSL\n*\nPPERM804 DS    0H\n         LA    R2,MSG804I          CONCATENATION LIMIT EXCEEDED\n         B     PPERRNSL\n*\nPPERM811 DS    0H\n         LA    R2,MSG811I          JOBPROC VOLUME NOT ALLOWED\n         B     PPERRNSL\n*\nPPERM836 DS    0H\n         LA    R2,MSG836I          MISPLACED OR DUPLICATE JOBPROC\n         B     PPERRNSL\n*\nPPERM842 DS    0H\n         LA    R2,MSG842I          EXCESSIVE PARAMETER LENGTH (SYSPROC)\n         B     PPERRNSL\n*\nPPERM843 DS    0H\n         LA    R2,MSG843I          UNIDENTIFIED PARAMETER IN SYSPROC\n         B     PPERRNSL\n         SPACE 2\nPPERRNSL DS    0H\n         BAL   R14,IEFVPPM         PRODUCE ERROR MESSAGE\n         PPDEBUG ERR1              TRACE ERROR IN PP1\n*\n         B     PPRETURN            RETURN TO CALLER\n*\n         DROP  R11,R7\n*\n         TITLE '**** IEFVPP2 - SET USER PROCLIB ENVIRONMENT ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP2                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED WHEN THE FIRST EXEC STATEMENT IS TO BE       *\n* PROCESSED.                                                          *\n*                                                                     *\n*      1) A CHECK IS MADE TO SEE IF A JOBPROC DD CARD HAS BEEN        *\n*         DETECTED BY IEFVPP1. IF NOT, CONTROL IS IMMEDIATELY PASSED  *\n*         BACK TO IEFVFA.                                             *\n*                                                                     *\n*      2) IF THE JOBPROC DEFINES A CONCATENATION OR THE \"SYSPROC=YES\" *\n*         OPTION HAS BEEN CHOSEN, THE OS/VS DYNAMIC ALLOCATION        *\n*         ROUTINES ARE CALLED TO CONCATENATE THE DATA SETS ALLOCATED  *\n*         BY IEFVPP1.                                                 *\n*                                                                     *\n*      3) THE USER PROCLIB DCB IS OPENED. IF AN ERROR IS DETECTED     *\n*         BY THE OPEN ROUTINES (IE. S213, ETC.), THEN AN ERROR        *\n*         MESSAGE IS GIVEN AND CONTROL IS RETURNED TO IEFVFA.         *\n*                                                                     *\n*      4) IF THE PROCLIB BUFFER OBTAINED BY CONVERTER INITIALIZATION  *\n*         IS SMALLER THAN THE USER'S PROCLIB BLKSIZE, A NEW BUFFER IS *\n*         OBTAINED AND ITS ADDRESS SET IN THE CONVERTER WORK AREA.    *\n*                                                                     *\n*      5) ALL ERRORS ENCOUNTERED DURING IEFVPP2 CAUSE AN APPROPRIATE  *\n*         ERROR MESSAGE TO BE ISSUED AND THE JOB BEING PROCESSED TO   *\n*         FAIL WITH A JCL ERROR.                                      *\n*                                                                     *\n*      6) CONTROL IS PASSED BACK TO IEFVFA.                           *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(PDCBP)    -> ORIGINAL PROCLIB DCB                        *\n*        IWA(IWAINTS4) -> ORIGINAL PROCLIB BUFFER                     *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTERS RESTORED                                           *\n*        IWA(PDCBP)    -> JOBPROC DCB                                 *\n*        IWA(IWAINTS4) -> TEMPORARY PROCLIB BUFFER (IF NEEDED)        *\n*        IWA(PSTMT) -> TEMPORARY PROCLIB BUFFER (IF NEEDED COPY)      *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        IEFVPPM FOR ERROR CONDITION                                  *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER VIA STANDARD RETURN MACRO                   *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE (SVC 60)                                               *\n*        DYNAMIC ALLOCATION (SVC 99)                                  *\n*        OPEN (SVC 19)                                                *\n*        GETMAIN (SVC 120)                                            *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP2  PPEPA VPP2                IEFVPP2 ENTRY POINT ADDRESS\n         EJECT\n************************* STATUS ROUTING ******************************\n         TM    PPSTAT1,PPHAVJP     HAVE JOBPROC TO PROCESS ?\n         BZ    PPRETURN            NO, RETURN\n         PPDEBUG ENT2              TRACE ENTRY INTO PP2\n*\n         TM    PPSTAT1,PPJPERR     ERROR NOTED IN JOBPROC ?\n         BO    PPRETURN            SO JUST RETURN\n         LH    R0,PPJPCNT          LOAD DD CARD COUNT\n         LTR   R0,R0               TEST IF ANY\n         BZ    PPRETURN            FORGET THE WHOLE THING\n*\n         TM    PPTRPP2,PPTRPP2E    HAVE WE BEEN HERE BEFORE ?\n         BO    PPRETURN            YES, MUST HAVE BEEN A FAILURE\n*                                   DURING PROCESSING OF FIRST\n*                                    EXEC STATEMENT WHICH TURNED\n*                                     OUT TO BE AN \"EXEC PROC=\"\n         OI    PPTRPP2,PPTRPP2E    INDICATE PROCLIB OPEN HAS BEEN\n*                                   TRIED FOR CURRENT JOB IN CASE\n*                                    CONVERTER RE-ENTERS IEFVPP2\n*                                     FOR THE SAME JOB\n         EJECT\n*********************** CONCATENATION *********************************\n         TM    PPSTAT1,PPCONCJP    REQUIRE CONCATENATION ?\n         BO    PPCONCAT            YES, PERFORM CONCATENATION\n         TM    PPSTAT1,PPSYSYES    TEST IF SYSTEM PROCLIB(S) WANTED\n         BZ    PPOPEN              NO, SKIP\n         TM    PPMISC,PPNOSYSP     TEST IF SYSPROC UNAVAILABLE\n         BO    PPOPEN              YES, SKIP CONCATENATION\n*\nPPCONCAT LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBCC    INDICATE CONCATENATION REQUEST\n         LA    R9,PPDATXTL         -> ALLOCATION TEXT PTR SLOTS\n         USING S99TUPL,R9          GET TEXT LIST ADDRESSABILITY\n         LA    R8,PPCONCDK         -> CONCATENATION TXT UNIT SLOT\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n         MVC   S99TUKEY,=AL2(DCCDDNAM) SET CONCATENATE DDNAME KEY\n         ST    R8,S99TUPTR         SET PTR TO CONCATENATE TEXT\n         MVI   S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n         LA    R1,S99TULNG         -> FIRST DDNAME SLOT\n         LA    R15,PPDDNSUF        -> DDNAME SUFFIX TABLE\n         LH    R0,PPJPCNT          R0 = COUNT OF DDNAMES\n         LR    R14,R0              COPY INTO R14\n         USING S99TUFLD,R1         MAKE TEXT PARMS ADDRESSABLE\n*\nPPCTUBLD MVC   S99TULEN,=H'8'      SET DDNAME LENGTH\n         MVC   S99TUPRM(7),PPUSRDDN SET BASIC DDNAME\n         MVC   S99TUPRM+7(1),0(R15) MOVE IN DDNAME SUFFIX\n         LA    R1,L'S99TULEN+8(,R1) BUMP TO NEXT DDNAME SLOT\n         LA    R15,1(,R15)         BUMP TO NEXT SUFFIX ENTRY\n         BCT   R0,PPCTUBLD         CONTINUE TO BUILD DDNAME LIST\n*\n         TM    PPSTAT1,PPSYSYES    \"SYS1.PROCLIB\" REQUIRED\n         BZ    PPCNSYSP            BRANCH IF NOT\n         TM    PPMISC,PPNOSYSP     TEST FOR SYSPROC UNAVAILABLE\n         BO    PPCNSYSP            SKIP SYSTEM ADD ON IF SO\n         MVC   S99TULEN,=H'8'      SET PROCLIB DDNAME LENGTH\n         MVC   S99TUPRM(8),PPSYSNAM GET SYSTEM PROCLIB INTO LIST\n         DROP  R1                  DROP TEXT UNIT FIELD ADDR.\n         LA    R14,1(,R14)         BUMP COUNT BY 1 FOR PROCLIB\n*\nPPCNSYSP STH   R14,S99TUNUM        SET NO. OF DDNAMES TO CONC.\n         LA    R1,PPDAARGL         -> ALLOC REQUEST PARM PTR\n         OI    PPSTAT0,PPDACODE    INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                CONCATENATE THE PROCLIB'S\n         NI    PPSTAT0,PPALL-PPDACODE INDICATE WE ARE BACK\n         LTR   R15,R15             WAS CONCATENATION OK ?\n         BZ    PPCSETCI            BRANCH IF YES\n         BAL   R10,PPDAERRA        DO ERROR ANALYSIS\n         B     PPRETURN            RETURN TO CALLER\n*\n         DROP  R8,R9\n*\nPPCSETCI OI    PPSTAT1,PPCONCD     SHOW FILES CONCATENATED\n         PPDEBUG CON2              TRACE CONCATENATION IN PP2\n*\n         EJECT\n*************************** OPEN **************************************\nPPOPEN   DS    0H\n         OI    PPTRPP2,PPTROPEN    SET \"OPEN\" TRACE EVENT\n         MVI   PPOCLST,PPVLBIT     SET LISTEND\n         OPEN  (PPDCB),MF=(E,PPOCLST)  OPEN THE FILE\n*\nPPTOPEN  DS    0H\n         NI    PPTRPP2,PPALL-PPTROPEN RESET \"OPEN\" TRACE EVENT ?\n         NI    PPSTAT0,PPALL-PPECODE RESET IN CASE WE HAD ERROR\n         TM    PPTRPP2,PPTRS213    DID WE GET \"DATA SET NOT FOUND\"\n         BNO   PPOPENCK            BRANCH IF NOT\n         NI    PPTRPP2,PPALL-PPTRS213 RESET \"NOT FOUND\" FLAG\n         LA    R2,MSG807I          SET \"NOT FOUND\" MESSAGE KEY\n         B     PP2ERROR            GIVE \"NOT FOUND\" MESSAGE\n*\nPPOPENCK TM    DCBOFLGS-IHADCB+PPDCB,DCBOFOPN DID FILE OPEN OK ?\n         BZ    PPERM812            NO, SKIP\n         OI    PPSTAT1,PPOPENED    ELSE SAVE STATUS\n         PPDEBUG OPN2              TRACE OPEN IN PP2\n*\n         EJECT\n*************************** BUFFER ************************************\n         LH    R2,DCBBLKSI-IHADCB+PPDCB  LOAD REQUIRED BUFFER LEN\n         L     R3,PDCBP            -> STANDARD PROCLIB DCB\n         USING IHADCB,R3\n         CH    R2,DCBBLKSI         COMPARE BLOCK SIZES\n         BNL   *+10                BRANCH IF NEW NOT SMALLER\n         MVC   DCBBLKSI-IHADCB+PPDCB,DCBBLKSI REPLACE SMALLER BLKSIZE\n         BNH   PPSETDCB            NO NEED FOR NEW\n         GETMAIN RC,LV=(R2)        NOW GETMAIN BUFFER\n         LTR   R15,R15             ALL OK ?\n         BNZ   PPERM810            NOGO\n         ST    R1,PPBUFAD          SAVE PTR TO OUR BUFFER\n         OI    PPSTAT1,PPBUFGOT    SHOW BUFFER GOTTEN\n         MVC   PPSBUFA(4),IWAINTS4 SAVE ORIG BUFFER PTR\n         MVC   IWAINTS4+1(3),PPBUFAD+1   SET NEW\n         MVC   PSTMT+1(3),PPBUFAD+1      SET NEW (COPY)\nPPSETDCB DS    0H\n         MVC   DCBREAD+1-IHADCB+PPDCB(3),DCBREAD+1 SHIFT FIELDS THAT\n         MVC   DCBPOINT+1-IHADCB+PPDCB(3),DCBPOINT+1   CONVERTER\n         MVC   DCBEODAD+1-IHADCB+PPDCB(3),DCBEODAD+1   LIKES TO\n         MVC   DCBSYNAD+1-IHADCB+PPDCB(3),DCBSYNAD+1   PLAY WITH\n         MVC   PPSDCBA(4),PDCBP    SAVE ORIG DCB ADDR\n         MVC   PDCBP+1(3),PPOCLST+1    AND SET TO NEW\n         PPDEBUG END2              TRACE END OF PP2\n*\n         B     PPRETURN            RETURN\n         DROP  R3\n         EJECT\n********************** ERROR HANDLERS *********************************\nPPERM812 DS    0H\n         LA    R2,MSG812I          USER PROCLIB OPEN FAILED\n         B     PP2ERROR\n         SPACE 1\nPPERM810 DS    0H\n         LA    R2,MSG810I          INSUFFICIENT BUFFER STORAGE\n         SPACE 2\nPP2ERROR DS    0H\n         BAL   R14,IEFVPPM         GIVE USER HIS ERROR\n         PPDEBUG ERR2              TRACE ERROR IN PP2\n*\n         B     PPRETURN            RETURN TO CALLER\n*\n         DROP  R11,R7\n*\n         TITLE '**** IEFVPP3 - JOB END CLEANUP ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP3                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED AT THE END OF PROCESSING FOR A JOB.          *\n*                                                                     *\n*    1  RESTORE ORIGINAL PROCLIB DCB ADDRESS.                         *\n*    2  CLOSE THE PRIVATE PROCLIB DCB.                                *\n*    3  DE-CONCATENATE THE PRIVATE AND SYSTEM PROCLIB DATASETS.       *\n*    4  DE-ALLOCATE THE PRIVATE PROCLIB DATASET.                      *\n*    5  FREEMAIN THE PRIVATE PROCLIB WORK AREA.                       *\n*    6  RETURN TO CALLER OR ABORT IF ERROR.                           *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(PDCBP)    -> JOBPROC DCB                                 *\n*        IWA(IWAINTS4) -> TEMPORARY PROCLIB BUFFER                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTERS RESTORED                                           *\n*        IWA(PDCBP)    RESTORED FOR ORIG PROCLIB DCB                  *\n*        IWA(IWAINTS4) RESTORED FOR ORIG PROCLIB BUFFER               *\n*        IWA(PSTMT) RESTORED FOR ORIG PROCLIB BUFFER - COPY           *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE                                                         *\n*                                                                     *\n* EXITS:                                                              *\n*        NORMAL    - RETURN TO CALLER                                 *\n*        ERROR     - ABORT                                            *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE (SVC 60)                                               *\n*        FREEMAIN (SVC 10)                                            *\n*        CLOSE (SVC 20)                                               *\n*        DYNALLOC (SVC 99)                                            *\n*        WTO (SVC 35)                                                 *\n*        DEQ (SVC 48)                                                 *\n*        ABEND (SVC 13)                                               *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP3  PPEPA VPP3                IEFVPP3 ENTRY POINT ADDRESS\n         SPACE 1\n         TM    PPSTAT1,PPHAVJP     WAS JOBPROC DD NOTED ?\n         BZ    PPDADEQ             NO, GO DEQUEUE THE DDNAME\n         PPDEBUG ENT3              TRACE ENTRY TO PP3\n*\n         NI    PPTRPP2,PPALL-PPTRPP2E RESET \"IEFVPP2 ENTERED\" FLAG\n         EJECT\n**************************** CLOSE ************************************\n         TM    PPSTAT1,PPOPENED    WAS PRIVATE PROCLIB DCB OPENED ?\n         BZ    PPDCONC             NO, SKIP\n         TM    PPSTAT1,PPBUFGOT    WAS BUFFER GOTTEN ?\n         BZ    PPCLOSE             NO, SKIP\n         L     R1,IWAINTS4         -> GOTTEN BUFFER\n         LH    R0,DCBBLKSI-IHADCB+PPDCB  LOAD BUFFER LENGTH\n         FREEMAIN R,LV=(0),A=(1)   RELEASE IT\n         NI    PPSTAT1,PPALL-PPBUFGOT   CLEAR STATUS\n         MVC   IWAINTS4+1(3),PPSBUFA+1   RESET ORIG BUFFER ADDR\n         MVC   PSTMT+1(3),PPSBUFA+1      RESET ORIG BUFFER ADDR\nPPCLOSE  DS    0H\n         L     R3,PPSDCBA          -> ORIGINAL PROCLIB DCB ADDRESS\n         USING IHADCB,R3\n         MVC   DCBEODAD+1(3),DCBEODAD+1-IHADCB+PPDCB PASS ON ANY\n         MVC   DCBSYNAD+1(3),DCBSYNAD+1-IHADCB+PPDCB   CHANGES\n         MVC   DCBREAD+1(3),DCBREAD+1-IHADCB+PPDCB\n         MVC   DCBPOINT+1(3),DCBPOINT+1-IHADCB+PPDCB\n         DROP  R3\n         MVC   PDCBP+1(3),PPSDCBA+1    RESTORE ORIGINAL DCB ADDR\n         MVI   PPOCLST,PPVLBIT     SET VL FOR CLOSE PARMLIST\n         CLOSE (PPDCB),MF=(E,PPOCLST)   CLOSE THE FILE\n         NI    PPSTAT1,PPALL-PPOPENED   CLEAR OPEN STATUS\n         PPDEBUG CLS3              TRACE CLOSE IN PP3\n*\n         EJECT\n************************** DE-CONCATENATION ***************************\nPPDCONC  DS    0H\n         TM    PPSTAT1,PPCONCD     ANY CONCATENATIONS DONE ?\n         BZ    PPDALLOC            NO, SKIP\n         BAL   R10,PPDECONC        CALL THE DE-CONCATENATOR\n         PPDEBUG DCN3              TRACE DECONCATENATION IN PP3\n*\n         EJECT\n************************** DE-ALLOCATION ******************************\nPPDALLOC DS    0H\n         NI    PPSTAT1,PPALL-PPCONCD CLEAR CONCATENATION STATUS\n         LH    R0,PPJPCNT          GET COUNT OF CONCATENATIONS\n         LTR   R0,R0               DO WE HAVE ANYTHING TO FREE ?\n         BZ    PPDADEQ             NO, GO RESET STATUS FLAGS\n*\n         BAL   R10,PPDEALOC        GO DEALLOCATE THE PROCLIB(S)\n         PPDEBUG DAL3              END OF DEALLOCATION\n*\nPPDADEQ  MVC   PPLOCWRK(PPENQPL),PPENQLST  MOVE PARAMETER LIST\n         LA    R1,PPSYSNAM         POINT AT MINOR NAME\n         ST    R1,PPLOCWRK+8       STORE MINOR NAME ADDRESS\n         DEQ   MF=(E,PPLOCWRK)     DEQUEUE THE PROCLIB NAME\n*\n         TM    PPMISC,PPESTAE      TEST IF ESTAE ESTABLISHED\n         BZ    PP3NESTA            BRANCH IF NOT\n         ESTAE 0                   CANCEL ERROR RECOVERY\n         NI    PPMISC,PPALL-PPESTAE     TURN OFF ESTAE EXISTS FLAG\n*\nPP3NESTA DS    0H\n         XC    &ANCHOR,&ANCHOR     CLEAR ANCHOR WORD\n         L     R13,4(,R13)         UNCHAIN SAVE AREAS\n*\n         LR    R1,R6               LOAD THE WORK AREA ADDRESS\n         LA    R0,PPWORKLN         LOAD LENGTH OF WORK AREA\n         FREEMAIN R,A=(1),LV=(0)   FREE THE WORK AREA\n*\n         LM    R14,R12,12(R13)     RELOAD SAVED REGISTERS\n         BR    R14                 RETURN TO CALLER\n*\n      TITLE '**** COMMON DE-CONCATENATION AND DEALLOCATION ****'\n***********************************************************************\n*                                                                     *\n* PPDECONC                                                            *\n* ********                                                            *\n*                                                                     *\n*        THIS ROUTINE ATTEMPTS TO DE-CONCATENATE IEF*PDS0, RESULTING  *\n*    IN IEF*PDS0, IEF*PDS1, ..., AND IEF*PDSI.                        *\n*                                                                     *\n* INPUT:                                                              *\n*        R10 -> RETURN ADDRESS OF CALLER (EITHER IEFVPP0 OR IEFVPP3). *\n*                                                                     *\n* OUTPUT:                                                             *\n*        EITHER SUCCESSFUL DE-CONCATENTION OR AN ERROR MESSAGE.       *\n*        IN THE CASE OF A DE-CONCATENATION REQUEST FROM IEFVPP0       *\n*        RETURN IS MADE IN ALL CASES.  A DE-CONCATENATION ERROR IN    *\n*        IEFVPP3 WILL RESULT IN CONVERTER TERMINATION (ABEND).        *\n*                                                                     *\n* PPDEALOC                                                            *\n* ********                                                            *\n*                                                                     *\n*        THIS ROUTINE ATTEMPTS TO DE-ALLOCATE IEF*PDS0, IEF*PDS1,     *\n*    ..., IEF*PDSF.  IN THE CASE OF BEING CALLED BY IEFVPP0,          *\n*    DEALLOCATION IS ATTEMPTED ON ALL 16 DDNAMES WITHOUT REGARD TO    *\n*    ANY ERRORS ENCOUNTERED.  WHEN CALLED BY IEFVPP3, DEALLOCATION    *\n*    WILL ABEND THE CONVERTER IF AN ERROR IS ENCOUNTERED.             *\n*                                                                     *\n* INPUT:                                                              *\n*        R10 -> RETURN ADDRESS OF CALLER (EITHER IEFVPP0 OR IEFVPP3). *\n*                                                                     *\n* OUTPUT:                                                             *\n*        EITHER SUCCESSFUL DE-CONCATENTION OR AN ERROR MESSAGE.       *\n*        IN THE CASE OF A DE-CONCATENATION REQUEST FROM IEFVPP0       *\n*        RETURN IS MADE IN ALL CASES.  A DE-CONCATENATION ERROR IN    *\n*        IEFVPP3 WILL RESULT IN CONVERTER TERMINATION (ABEND).        *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        DYNAMIC ALLOCATION PARAMETER LIST                            *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER OR ABEND.                                   *\n*                                                                     *\n* SVC:                                                                *\n*        DYNALLOC (SVC 99)                                            *\n*                                                                     *\n***********************************************************************\n*\nPPDECONC DS    0H\n         LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBDC    INDICATE DE-CONCAT REQUEST\n         LA    R9,PPDATXTL         -> TEXT UNIT PTR SLOTS\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         LA    R8,PPCONCDK         -> DE-CONCATENATE TEXT UNIT\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n         MVC   S99TUKEY,=AL2(DDCDDNAM) SET DE-CONCATENATE KEY\n         MVC   S99TUNUM,=AL2(1)    SET NO. OF DDNAMES\n         MVC   S99TULNG,=H'8'      SET DDNAME LENGTH\n         MVC   S99TUPAR(8),PPUSRDDN SET DDNAME FOR DE-CONCAT\n         ST    R8,S99TUPTR         SET PTR TO DE-CONC TEXT UNIT\n         MVI   S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n         LA    R1,PPDAARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPSTAT0,PPDACODE    INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                DE-CONCATENATE PROCLIB'S\n         NI    PPSTAT0,PPALL-PPDACODE INDICATE WE ARE BACK\n         LTR   R15,R15             WAS DE-CONCATENATION OK ?\n         BZR   R10                 RETURN IF YES\n         B     PPDAERRA            DO ERROR ANALYSIS\n*                                   AND MAYBE RETURN\n         DROP  R8,R9\n*\nPPDEALOC DS    0H\n         LA    R2,16               SET MAXIMUM TO DEALLOCATE\n         LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOC REQUEST\n         LA    R9,PPDATXTL         -> TEXT UNIT PTR SLOTS\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         LA    R8,PPDDNAMK         -> DDNAME TEXT UNIT\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n         MVC   S99TUKEY,=AL2(DUNDDNAM) SET DDNAME TEXT KEY\n         MVC   S99TUNUM,=AL2(1)    SET NO. OF DDNAMES\n         MVC   S99TULNG,=H'8'      SET DDNAME LENGTH\n         ST    R8,S99TUPTR         SET PTR TO DDNAME TEXT UNIT\n         MVI   S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\nPPDADDNM MVC   S99TUPAR(7),PPUSRDDN SET BASIC DDNAME\n         LR    R15,R2              R15 = CURRENT CONCATENATION NO.\n         BCTR  R15,0               DECREMENT FOR SHIFT\n         ICM   R3,15,=X'00008000'  INSERT BIT MASK\n         SRL   R3,0(R15)           SHIFT TO CORRECT BIT POSITION\n         LA    R4,PPALLOC1+1       -> CURRENT ALLOCATION STATUS 2\n         CH    R2,=H'8'            ALLOCATION NO. LE 8\n         BH    *+12                BRANCH IF NOT\n         LA    R4,PPALLOC1         POINT TO CORRECT STATUS BYTE\n         SRL   R3,8                SHIFT MASK TO LOW ORDER BYTE\n         EX    R3,PPDATEST         IS DDNAME ALLOCATED ?\n         BNO   PPDANEXT            BRANCH IF NOT\n*\n         LA    R15,PPDDNSUF-1(R2)  POINT TO PROPER SUFFIX\n         MVC   S99TUPAR+7(1),0(R15) SET DDNAME SUFFIX\n         LA    R1,PPDAARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPSTAT0,PPDACODE    INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                FREE A PROCLIB DATA SET\n         NI    PPSTAT0,PPALL-PPDACODE INDICATE WE ARE BACK\n*\n         LTR   R15,R15             DID DE-ALLOCATE GO OK ?\n         BZ    PPDANEXT            BRANCH IF YES\n         TM    PPSTAT0,PP0CODE     ARE WE IN CLEANUP MODE?\n         BNO   PPDAERRA            NO, GO BOMB THE MOTHER\n*\nPPDANEXT BCT   R2,PPDADDNM         DE-ALLOCATE ALL PROCLIB'S\n*\n         XC    PPJPCNT,PPJPCNT     RESET CONCATENATION COUNTER\n         XC    PPSTAT1(2),PPSTAT1  CLEAR REMAINING STATUS FLAGS\n         XC    PPALLOC1(2),PPALLOC1 AND ALLOCATION FLAGS\n         BR    R10                 RETURN TO CALLER\n*\nPPDATEST TM    0(R4),*-*           *** EXECUTE ONLY ***\n*\n         DROP  R8,R9\n*\n      TITLE '**** COMMON EXIT ROUTINE FOR MOST ENTRIES TO IEFVPP ****'\n***********************************************************************\n*                                                                     *\n* PPRETURN                                                            *\n* ********                                                            *\n*                                                                     *\n*        THIS ROUTINE PERFORMS FINAL CLEANUP PRIOR TO PASSING CONTROL *\n*    BACK TO ONE OF THE CALLING CONVERTER MODULES.                    *\n*                                                                     *\n* INPUT:                                                              *\n*        R13 -> SAVE AREA IN PRIVATE PROCLIB EXTENSION TO CONVERTER   *\n*        WORK AREA.                                                   *\n*                                                                     *\n* OUTPUT:                                                             *\n*        CURRENT ERROR RECOVERY ENVIRONMENT, IF ANY, IS CANCELLED,    *\n*        TRACE FLAGS ARE RESET, AND CONTROL IS PASSED BACK TO         *\n*        THE CALLER VIA A REGISTER 14.                                *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE                                                         *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO IEFVPPX CALLER VIA RETURN PROTOCOL.                *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE (SVC 60)                                               *\n*                                                                     *\n***********************************************************************\n*\nPPRETURN DS    0H\n         TM    PPMISC,PPESTAE      TEST IF ESTAE ESTABLISHED\n         BZ    PPLEAVE             BRANCH IF NOT\n         ESTAE 0                   CANCEL ERROR RECOVERY\n         NI    PPMISC,PPALL-PPESTAE     TURN OFF ESTAE EXISTS FLAG\n*\n***********************************************************************\n*        CLEAR EXECUTION TRACE INDICATORS                             *\n***********************************************************************\nPPLEAVE  DS    0H\n         NI    PPSTAT0,PPALL-PP1CODE-PP2CODE-PP3CODE-PPECODE\n*\n         L     R13,4(,R13)         UNCHAIN SAVE AREAS\n         LM    R14,R12,12(R13)     RELOAD SAVED REGISTERS\n         BR    R14                 RETURN TO CALLER\n*\n         TITLE '**** DYNAMIC ALLOCATION ERROR ANALYSIS ****'\n***********************************************************************\n*                                                                     *\n* PPDAERRA                                                            *\n* ********                                                            *\n*                                                                     *\n*     THIS ROUTINE ANALYZES ERRORS DETECTED BY THE OS/VS DYNAMIC      *\n*  ALLOCATION ROUTINES. COMMON ERRORS WILL CAUSE A SPECIFIC ERROR     *\n*  MESSAGE TO BE PRODUCED WHILE ALL OTHERS WILL CAUSE A WTP MESSAGE   *\n*  GIVING A LESS PRECISE ERROR DESCRIPTION. IN THIS LATTER CASE       *\n*  THE USER WILL ALSO RECEIVE MESSAGE XXX808I INFORMING HIM THAT      *\n*  HE SHOULD EXAMINE THE WTP MESSAGE FOR ERROR DIAGNOSIS.             *\n*                                                                     *\n* INPUT:                                                              *\n*        R15 = DYNAMIC ALLOCATION RETURN CODE (NOT = 0).              *\n*                                                                     *\n* OUTPUT:                                                             *\n*        ERROR MESSAGE IS PRODUCED VIA IEFVPPM AND CONTROL IS PASSED  *\n*        TO THE CALLER VIA R10.                                       *\n*                                                                     *\n*        CWA(PPDARB)   - OUR DYNAMIC ALLOCATE PARAMETER BLOCK.        *\n*        CWA(PPDFRETC) - RETURN CODE HOLD AREA FOR DAIRFAIL(IKJEFF18) *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        IKJEFF18 (DAIRFAIL SERVICE ROUTINE) - ISSUES WTP MESSAGE.    *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER VIA R10.                                    *\n*        ABEND THE CONVERTER BECAUSE OF UNRECOVERABLE ERROR.          *\n*                                                                     *\n* SVC:                                                                *\n*        LINK (SVC 6)                                                 *\n*        LOCATE (SVC 26)                                              *\n*        WTO (SVC 35)                                                 *\n*        ABEND (SVC 13)                                               *\n*                                                                     *\n***********************************************************************\n         EJECT\nPPDAERRA LA    R9,PPDARB           -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            MAKE DARB ADDRESSABLE\n         ST    R15,PPDFRETC        SET RETURN CODE FOR DAIRFAIL\n*\n***********************************************************************\n*               ANALYZE ALLOCATION TIME ERRORS                        *\n***********************************************************************\n         CLI   S99VERB,S99VRBAL    IS THIS AN ALLOCATION FAILURE\n         BNE   PPDAERRC            NO, TRY CONCATENATION\n         CLI   S99ERROR,LOCATE     IS THIS A CATALOG LOCATE ERROR\n         BE    PPERM805            GO GIVE ERROR MESSAGE\n         CLI   S99ERROR,OBTAIN     IS THIS AN OBTAIN ERROR ?\n         BE    PPERM807            GO GIVE ERROR MESSAGE\n         CLI   S99ERROR,DALRNOTA   IS THIS A \"RESOURCE\" ERROR ?\n         BNE   PPERM808            NO, GIVE ERROR CODE IN MESSAGE\n         CLI   S99ERROR+1,DALDSNEX EXCLUSIVE \"DSN\" REQUEST ?\n         BE    PPERM813            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALDSNNA DATA SET CURRENTLY \"IN USE\" ?\n         BE    PPERM813            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALUNITE UNIT NOT AVAILABLE ?\n         BE    PPERM814            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALUNITI INVALID UNIT NAME ?\n         BE    PPERM814            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALVOLNM VOLUME NOT MOUNTED ?\n         BE    PPERM806            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALVOLNA VOLUME NOT AVAILABLE ?\n         BE    PPERM806            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALCVOLE CVOL NOT MOUNTED ?\n         BE    PPERM815            YES, GIVE ERROR MESSAGE\n         B     PPERM808            GIVE GENERAL FAILURE MESSAGE\n*\n***********************************************************************\n*                 ANALYZE CONCATENATION ERRORS                        *\n***********************************************************************\nPPDAERRC CLI   S99VERB,S99VRBCC    CONCATENATION FAILURE ?\n         BE    PPERM809            GIVE ERROR MESSAGE\n*\n***********************************************************************\n*                 ANALYZE DE-CONCATENATION ERRORS                     *\n***********************************************************************\nPPDAERRD CLI   S99VERB,S99VRBDC    DE-CONCATENATION FAILURE ?\n         BNE   PPDAERRR            NO, TRY DE-ALLOCATION\n         CLC   S99ERROR,=X'0438'   DDNAME NOT FOUND ?\n         BNE   PPERM808            NO, GIVE MESSAGE AND ABEND\n         BR    R10                 RETURN -> IGNORE ERROR\n*\n***********************************************************************\n*                  ANALYZE DE-ALLOCATION ERRORS                       *\n***********************************************************************\nPPDAERRR CLI   S99VERB,S99VRBUN    DE-ALLOCATION FAILURE ?\n         BNER  R10                 IMPOSSIBLE ERROR -> RETURN\n         CLC   S99ERROR,=X'0438'   DDNAME NOT FOUND ?\n         BNE   PPERM808            NO, GIVE MESSAGE AND ABEND\n         BR    R10                 RETURN TO CALLER\n         EJECT\n***********************************************************************\n*             DYNAMIC ALLOCATION ERROR MESSAGE ROUTINES               *\n***********************************************************************\nPPERM805 DS    0H\n         LA    R2,MSG805I          CATALOG SEARCH FAILED\n         B     PPDAERRM\n*\nPPERM806 DS    0H\n         OI    PPSTAT2,PPRREQUE    INDICATE RE-QUEUE FOR CONVERT\n         LA    R2,MSG806I          REQUIRED VOLUME NOT MOUNTED\n         MVC   PPWTOWRK(PPVOLNML),PPVOLNMT MOVE IN BASIC WTO MESSAGE\n         LA    R15,PPVOLSER        ASSUME USER HARD CODED VOLSER\n         TM    PPSTAT2,PPHAVSER+PPHAVUNT VOLSER AND UNIT HARD CODED ?\n         BO    PPVNMMSG            BRANCH IF YES, NO NEED FOR LOCATE\n*\n         LOCATE PPLOCPRM           LOCATE REQUIRED VOLSER FROM CATLG\n         LTR   R15,R15             LOCATE SUCCESSFUL ?\n         BZ    PPVNLOCT            BRANCH IF IT WAS\n*\n         NI    PPSTAT2,255-PPRREQUE     DISALLOW REQUEUE IF UNLOCATABLE\n         LA    R15,=C'??????'      SHOW LOCATE FAILURE\n         TM    PPSTAT2,PPHAVSER    WAS VOLSER CODED?\n         BZ    PPVNMMSG            BRANCH IF NOT\n         LA    R15,PPVOLSER        SET THE HARD CODED VOLSER\n         B     PPVNMMSG            AND ISSUE THE MESSAGE\n*\nPPVNLOCT LA    R15,PPLOCWRK+6      SET LOCATED VOLUME\n         CLC   PPLOCWRK(2),=H'1'   MAKE SURE THERE IS ONLY ONE VOLUME\n         BNE   PPVNALOW            BRANCH IF IT ISN'T\n         TM    PPLOCWRK+2+2,UCB3DACC    TEST FOR DIRECT ACCESS DEVICE\n         BZ    PPVNALOW            BRANCH IF NOT DASD\n*\n         TM    PPLOCWRK+2+1,UCBRVDEV    TEST FOR MSS DEVICE\n         BZ    PPVNMMSG            BRANCH IF NOT MSS\n         NI    PPSTAT2,255-PPRREQUE     DISALLOW REQUEUE FOR MSS\n*\nPPVNALOW LA    R2,MSG811I          VOLUME NOT ALLOW FOR JOBPROC\n*\nPPVNMMSG MVC   PPWTOWRK+PPVOLNMS(6),0(R15) SET VOLSER IN MESSAGE\n         B     PPDAERRM\n*\nPPERM807 DS    0H\n         LA    R2,MSG807I          JOBPROC DATA SET NOT ON VOLUME\n         B     PPDAERRM\n*\nPPERM808 DS    0H\n         LA    R1,PPDFPARM         -> DAIRFAIL PARM LIST\n         LINK  EP=IKJEFF18         ISSUE WTP FOR FAILURE\n         CLI   S99VERB,S99VRBDC    FAILURE DURING DE-CONCAT. ?\n         BE    PPERM816            YES, ABEND THE CONVERTER\n         CLI   S99VERB,S99VRBUN    FAILURE DURING DE-ALLOCATION ?\n         BE    PPERM817            YES, ABEND THE CONVERTER\n         LA    R2,MSG808I          PROCLIB ALLOCATION FAILED\n         B     PPDAERRM            ISSUE ERROR MESSAGE\n*\nPPERM809 DS    0H\n         LA    R1,PPDFPARM         -> DAIRFAIL PARM LIST\n         LINK  EP=IKJEFF18         ISSUE WTP FOR FAILURE\n         LA    R2,MSG809I          USER PROCLIB CONCATENATION ERR\n         B     PPDAERRM\n*\nPPERM813 DS    0H\n         LA    R2,MSG813I          DATA SET NOT AVALIABLE EXCL'VE\n         B     PPDAERRM\n*\nPPERM814 DS    0H\n         LA    R2,MSG814I          UNIT NOT AVAILABLE (INVALID ?)\n         B     PPDAERRM\n*\nPPERM815 DS    0H\n         OI    PPSTAT2,PPRREQUE    INDICATE RE-QUEUE FOR CONVERT\n         MVC   PPWTOWRK(PPCVLNML),PPCVLNMT MOVE IN WTO MESSAGE\n         LA    R2,MSG815I          CVOL NOT MOUNTED\n         B     PPDAERRM\n*\nPPERM816 WTO   MF=(E,PPDECON1)     DECONCATENATION FAILURE\n         LA    R2,MSG816I          GIVE USER ERROR MESSAGE TOO\n         B     PPDAERRM            GO ISSUE ERROR MESSAGE\n*\nPPERM817 WTO   MF=(E,PPDEALC1)     DEALLOCATION FAILURE\n*\nPPDABEND ABEND PPABEND,DUMP,,SYSTEM LET JES CLEANUP CONVERTER\n*\nPPDAERRM BAL   R14,IEFVPPM         GIVE USER ERROR MESSAGE\n         TM    PPSTAT0,PP0CODE     ARE WE IN INITIALIZATION CLEANUP?\n         BOR   R10                 YES, GO ON\n         TM    PPSTAT2,PPRREQUE    RE-QUEUE FOR CONVERT REQUESTED\n         BNOR  R10                 RETURN TO CALLER IF NOT\n         WTO   MF=(E,PPWTOWRK)     SEND MESSAGE TO OPERATOR AS WELL\n         L     R2,CWAJMRPT         -> JOB MANAGEMENT RECORD\n         OI    JMRINDC-JMR(R2),X'04' FLAG JOB FOR JES2 RE-QUEUE\n         BR    R10                 RETURN TO CALLER\n*\nLOCATE   EQU   X'17'               CATALOG LOCATE FAILED\nOBTAIN   EQU   X'67'               DSCB OBTAIN FAILED\nDALRNOTA EQU   X'02'               RESOURCE NOT AVAILABLE\nDALDSNEX EQU   X'0C'                  UNABLE TO GET DATA SET EXCLUSIVE\nDALDSNNA EQU   X'10'                  DATA SET IN USE\nDALUNITE EQU   X'14'                  UNAVAILABLE UNIT SPECIFIED\nDALVOLNM EQU   X'18'                  REQUIRED VOLUME NOT MOUNTED\nDALUNITI EQU   X'1C'                  INVALID UNIT SPECIFIED\nDALVOLNA EQU   X'20'                  VOLUME NOT AVAILABLE\nDALCVOLE EQU   X'3C'                  CVOL NOT MOUNTED\n*\n         DROP  R11,R7,R9\n*\n         AIF   (&INTEXTX).UJVYES\n TITLE '**** IEFVPP5 - INTERNAL TEXT EXIT FOR IEFUJV (NONE) ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP5                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED BY IEFVFA AND IMMEDIATELY RETURNS TO IT,     *\n* AS NO INTERNAL TEXT EXIT TO IEFUJV IS DESIRED.                      *\n*                                                                     *\n* INPUT:                                                              *\n*        R12 -> CONVERTER WORK AREA                                   *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        IMMEDIATE RETURN TO IEFVFA.                                  *\n*                                                                     *\n* SVC:                                                                *\n*        NONE                                                         *\n*                                                                     *\n* NOTES:                                                              *\n*        THIS ROUTINE IS NOT PART OF THE PRIVATE PROCLIB SUPPORT      *\n*        PER SE, BUT IT DOES USE THE CONVERTER WORK AREA INTERFACE.   *\n*                                                                     *\n***********************************************************************\n*\nIEFVPP5  DS    0H\n         BR    R14\n*\n         AGO   .UJVDONE\n.UJVYES  AIF   (&SGIHASU(74)).UJVSE2\n TITLE '**** IEFVPP5 - INTERNAL TEXT EXIT FOR IEFUJV (NON SE2) ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP5                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED BY IEFVFA AND IN TURN BRANCHES TO IEFUJV     *\n* (WHICH RETURNS TO IEFVFA).  THE PURPOSE IS TO GIVE IEFUJV AN        *\n* INTERNAL TEXT EXIT (TYPE 64).                                       *\n*                                                                     *\n* INPUT:                                                              *\n*        R12 -> CONVERTER WORK AREA                                   *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTER R5 DESTROYED.                                       *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        IEFUJV WILL RETURN DIRECTLY TO IEFVFA.                       *\n*                                                                     *\n* SVC:                                                                *\n*        NONE                                                         *\n*                                                                     *\n* NOTES:                                                              *\n*        THIS ROUTINE IS NOT PART OF THE PRIVATE PROCLIB SUPPORT      *\n*        PER SE, BUT IT DOES USE THE CONVERTER WORK AREA INTERFACE.   *\n*        THE PRIMARY PURPOSE OF THIS EXIT WAS THE IMPLEMENTATION      *\n*        OF A JOB RESOURCE MANAGEMENT SUBSYSTEM.                      *\n*        REGISTER SAVING IS NOT DONE BY THIS ROUTINE, AS IEFUJV WILL  *\n*        DO ANY NECESSARY SAVING AND RESTORING.                       *\n*                                                                     *\n***********************************************************************\n*\nIEFVPP5  DS    0H\n         USING *,R15\n         L     R5,WANELPTR           LOAD THE NEL ADDRESS\n         TM    NELOPSWT-NEL(R5),NELSMF TEST FOR SMF OPTION\n         BNOR  R14                   RETURN IF NO SMF\n         L     R5,CWAJMRPT           LOAD JMR ADDRESS\n         USING JMR,R5\n         TM    JMROPT,JMREXITS       TEST IF USERS EXITS TO BE TAKEN\n         BZR   R14                   RETURN IF NOT\n*\n         LA    R1,JMRJOB             POINT AT JOB LOG\n         ST    R1,JMRJOBP            SET IN PARAMETER LIST\n         MVC   JMRJCLP,TEXTBUFP      SET POINTER TO INTERNAL TEXT\n         LA    R1,JMRJCLCD           SET ADDRESS OF ENTRY CODE BYTE\n         ST    R1,JMRJCLCP           STORE IN PARAMETER LIST\n         MVI   JMRJCLCD,64           INTERNAL TEXT EXIT TYPE\n         LA    R1,JMRPTRS            POINT AT PARAMETER LIST\n         L     R15,JMRUJVP           LOAD IEFUJV ADDRESS\n         BR    R15                   GO TO IEFUJV\n*\n         DROP  R15,R5\n*\n         AGO   .UJVDONE\n.UJVSE2  ANOP\n    TITLE '**** IEFVPP5 - INTERNAL TEXT EXIT FOR IEFUJV (MVS/SE2) ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP5                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED BY IEFVFA AND IN TURN BRANCHES TO IEFUJV     *\n* (WHICH RETURNS TO IEFVFA).  THE PURPOSE IS TO GIVE IEFUJV AN        *\n* INTERNAL TEXT EXIT (TYPE 64).  LINKAGE TO IEFUJV IS PERFORMED       *\n* USING THE SMFEXIT MACRO (MVS/SE2).                                  *\n*                                                                     *\n* INPUT:                                                              *\n*        R12 -> CONVERTER WORK AREA                                   *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTER R5 DESTROYED.                                       *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER                                             *\n*                                                                     *\n* SVC:                                                                *\n*        NONE                                                         *\n*                                                                     *\n* NOTES:                                                              *\n*        THIS ROUTINE IS NOT PART OF THE PRIVATE PROCLIB SUPPORT      *\n*        PER SE, BUT IT DOES USE THE CONVERTER WORK AREA INTERFACE.   *\n*        THE PRIMARY PURPOSE OF THIS EXIT WAS THE IMPLEMENTATION      *\n*        OF A JOB RESOURCE MANAGEMENT SUBSYSTEM.                      *\n*        REGISTER SAVING IS NOT DONE BY THIS ROUTINE, AS IEFUJV WILL  *\n*        DO ANY NECESSARY SAVING AND RESTORING.                       *\n*                                                                     *\n***********************************************************************\n*\nIEFVPP5  DS    0H\n         LR    R5,R14                SAVE THE RETURN ADDRESS\n         LR    R14,R15               SHIFT THE BASE REGISTER\n         USING IEFVPP5,R14\n         L     R15,WANELPTR          LOAD THE NEL ADDRESS\n         TM    NELOPSWT-NEL(R15),NELSMF TEST FOR SMF OPTION\n         BNOR  R5                    RETURN IF NO SMF\n         L     R15,CWAJMRPT          LOAD JMR ADDRESS\n         USING JMR,R15\n*\n         LA    R1,JMRJOB             POINT AT JOB LOG\n         ST    R1,JMRJOBP            SET IN PARAMETER LIST\n         MVC   JMRJCLP,TEXTBUFP      SET POINTER TO INTERNAL TEXT\n         LA    R1,JMRJCLCD           SET ADDRESS OF ENTRY CODE BYTE\n         ST    R1,JMRJCLCP           STORE IN PARAMETER LIST\n         MVI   JMRJCLCD,64           INTERNAL TEXT EXIT TYPE\n         LA    R1,JMRPTRS            POINT AT PARAMETER LIST\n*\n         SMFEXIT IEFUJV              INVOKE UJV EXIT\n*\n         BR    R5                    RETURN TO CALLER\n*\n         DROP  R15,R14\n*\n.UJVDONE ANOP\n         TITLE '**** SYSTEM ERROR RECOVERY EXIT (ESTAE) ****'\n***********************************************************************\n*                                                                     *\n* PPESTAEX                                                            *\n* ********                                                            *\n*                                                                     *\n* THIS ROUTINE SETS THE JOB ERROR FLAG FOR THE CONVERTER AND PRINTS   *\n* AN ERROR MESSAGE FOR THE USER.                                      *\n*                                                                     *\n* INPUT:                                                              *\n*        R1 -> SYSTEM DIAGNOSTIC WORK AREA (SDWA).                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        UPDATED SDWA FOR THE APPROPRIATE ERROR RECOVERY ROUTINE.     *\n*        IWA(WAJOBPFX) SET TO INDICATE JCL ERROR.                     *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        NORMAL:  RETURN TO R/TM2 VIA SETRP MACRO.                    *\n*        NO SDWA: RETURN TO R/TM2 WITH R15 = 0.                       *\n*                                                                     *\n* SVC:                                                                *\n*        SDUMP (SVC 51) WHEN IN DEBUGGING MODE.                       *\n*                                                                     *\n* NOTES:                                                              *\n*        IT IS HOPED THAT SDWAPARM CONTAINS A PTR TO THE CWA.         *\n*                                                                     *\n***********************************************************************\n         EJECT\n********* PREPARE THE SDWA AND CHECK FOR UNRECOVERABLE ABENDS *********\n*\n         USING PPESTAEX,R15        TEMPORARY BASE\nPPESTAEX DS    0H\n         C     R0,=F'12'           CHECK FOR NO SDWA\n         BE    PPESTAEZ            GIVE UP IF NONE\n         LTR   R1,R1               CHECK FOR NO SDWA\n         BE    PPESTAEZ            GIVE UP IF NONE\n         STM   R14,R12,12(R13)     SAVE R/TM REGISTERS\n         LR    R3,R1               SET PTR TO SDWA\n         USING SDWA,R3             ESTABLISH SDWA ADDRESSABILITY\n*\n         L     R12,SDWAPARM        ENSURE CWA ADDRESSABILITY\n         CLC   CWAID,=X'11111111'  ENSURE THIS IS IN FACT THE CWA\n         BNE   PPESFATL            NO, DO NOT RECOVER FROM ABEND\n         L     R6,&ANCHOR          LOAD PRIVATE PROCLIB WORK AREA\n         LTR   R6,R6               DO WE HAVE A WORK AREA\n         BZ    PPESFATL            THIS IS DEADLY IF WE DON'T\n*\n         TM    PPMISC,PPDEBUG      TEST IF DEBUGGING IN FORCE\n         BZ    PPESBYP             BRANCH IF NO DEBUGGING\n         LR    R2,R15              SAVE THE BASE REGISTER\n         SDUMP MF=(E,PPESDUMP)     INVOKE A BIG DUMP\n         LR    R15,R2              RESTORE THE BASE REGISTER\nPPESBYP  DS    0H\n*\n         MVC   SDWARECP,PPESRECP   MOVE IN RECORDING PARMS\n         MVI   SDWADPVA,SDWAHEX    DUMP USER DATA IN HEX\n         MVI   SDWAURAL,PPDCB-PPSTAT0 MOVE IN LENGTH OF USER DATA\n         MVC   SDWAVRA(PPDCB-PPSTAT0),PPSTAT0 TRACE INFO FOR LOGREC\n*\n         OI    STRJINDC-TEXT+WAJOBPFX,JTXJOBFL FLUSH THE BAD JOB\n         OI    PPSTAT1,PPJPERR     ALSO FLAG ERROR FOR US\n*\n         SR    R1,R1               CLEAR R1\n         ICM   R1,3,SDWACMPC       R1 = ABEND CODE (XXX0)\n         SRL   R1,4                DROP INSIGNIFICANT BITS\n         CLM   R1,3,=AL2(PPABEND)  IS THIS A SELF INFLICTED ABEND\n         BE    PPESFATL            BRANCH IF YES\n         TM    PPSTAT0,PPECODE     IS THIS A RECURSIVE ABEND ?\n         BNO   PPESENVR            BRANCH IF NOT\n*\nPPESFATL DS    0H\n         SETRP REGS=(14,12),RC=0,RECORD=YES, * CONTINUE ABEND *        X\n               WKAREA=(R3)\n*\nPPESTAEZ DS    0H                  NO SDWA ADDRESS PROVIDED\n         SLR   R15,R15             INDICATE NO RETRY\n         BR    R14                  AND RETURN\n         EJECT\n****************** DETERMINE LOCATION OF ERROR ************************\nPPESENVR OI    PPSTAT0,PPECODE     INDICATE ERROR EXIT IN CONTROL\n         L     R11,PPBASE          GET COMMON BASE REG\n         LA    R7,2048             AND SECOND BASE REGISTER\n         LA    R7,2048(R7,R11)\n         USING IEFVPP,R11,R7       INFORM ASSEMBLER ABOUT IT\n         DROP  R15                 DROP TEMPORARY BASE\n*\n         TM    PPSTAT0,PP0CODE     FAILURE DURING INITIALIZATION\n         BNO   PPESPP1             NO, CONTINUE\n         MVI   SDWARECP+14,C'0'    INDICATE IEFVPP0 FAILED\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n         MVI   PPSTAT0,0           DISABLE USER PROCLIB SUPPORT\n         LA    R4,PPRETURN         SET RETRY FOR GRACEFUL EXIT\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP1  TM    PPSTAT0,PP1CODE     FAILURE IN JOBPROC PROCESSOR ?\n         BNO   PPESPP2             BRANCH IF NOT\n         MVI   SDWARECP+14,C'1'    INDICATE IEFVPP1 FAILED\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n         LA    R4,PPRETURN         SET RETRY ADDRESS\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP2  TM    PPSTAT0,PP2CODE     FAILURE IN PROCLIB PREPARE ?\n         BNO   PPESPP3             BRANCH IF NOT\n         MVI   SDWARECP+14,C'2'    INDICATE IEFVPP2 FAILED\n         TM    PPTRPP2,PPTROPEN    IS PROCLIB OPEN IN PROGRESS ?\n         BNO   PPESPP2A            BRANCH IF NOT\n         SR    R1,R1               CLEAR R1\n         ICM   R1,3,SDWACMPC       R1 = ABEND CODE (XXX0)\n         SRL   R1,4                DROP INSIGNIFICANT BITS\n         CLM   R1,3,=X'0213'       POSSIBLE \"DATA SET NOT FOUND\"?\n         BNE   PPESOERR            BRANCH IF NOT\n         CLC   SDWAGR15+2(2),=H'4' S213-04 -> NO DATA SET ?\n         BNE   PPESOERR            BRANCH IF NOT\n         OI    PPTRPP2,PPTRS213    INDICATE S213-04 ABEND IN PP2\n*\nPPESOERR LA    R4,PPTOPEN          SET RECOVERY PTR FOR OPEN ERR\n         NI    SDWAACF2,PPALL-SDWARCRD NO RECORDING FOR USER ERR\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP2A LA    R4,PPRETURN         GRACEFUL EXIT IF NOT OPEN ERR\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP3  TM    PPSTAT0,PP3CODE     FAILURE IN CLEANUP PROCESSING\n         BNO   PPESFATL            NO -> THINGS ARE IN BAD SHAPE\n         MVI   SDWARECP+14,C'3'    INDICATE IEFVPP3 FAILED\n         B     PPESFATL            DO NOT RECOVER FROM PP3 ERROR\n*\n         EJECT\n*********************** RETURN TO THE RTM *****************************\nPPESRTRN SETRP RC=4,RETADDR=(R4),FRESDWA=YES,WKAREA=(R3),              X\n               REGS=(14,12)        RETURN TO R/TM\n*\n         DROP  R3                  DROP SDWA ADDRESSABILITY\n*\nPPBASE   DC    A(IEFVPP)           BASE ADDRESS FOR ALL ROUTINES\n*              MUST BE WITHIN THE FIRST 4K OF THE MODULE\n*\n         TITLE '**** ERROR MESSAGE ROUTINE ****'\n***********************************************************************\n*                                                                     *\n* IEFVPPM                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE SETS THE JOB ERROR FLAG FOR THE CONVERTER AND PRINTS   *\n* AN ERROR MESSAGE FOR THE USER.                                      *\n*                                                                     *\n* INPUT:                                                              *\n*        R2 =  ADDRESS OF MESSAGE.                                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        IWA(WAJOBPFX) SET TO INDICATE JCL ERROR IF NOT A             *\n*        REQUEUEABLE ERROR.                                           *\n*        MESSAGE TO THE JCL MESSAGE DATA SET.                         *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        PUT RPL TO SYSTEM MESSAGE DATA SET.                          *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER OF THIS ROUTINE.                            *\n*                                                                     *\n* SVC:                                                                *\n*        NONE                                                         *\n*                                                                     *\n***********************************************************************\n         EJECT ,\n*************************** BUILD MESSAGE *****************************\nIEFVPPM  DS    0H\n         STM   R14,R12,12(R13)     SAVE CALLERS' REGISTERS\n         OI    STRJINDC-TEXT+WAJOBPFX,JTXJOBFL SET JOB ERROR FLAG\n         OI    PPSTAT1,PPJPERR     BYPASS ALL FURTHER PROCESSING\n         OI    PPSTAT0,PPMCODE     INDICATE WE ARE IN IEFVPPM CODE\n*\n         L     R1,WAMSGBUF         LOAD ADDRESS OF MESSAGE BUFFER\n         MVI   0(R1),C' '          BLANK THE BUFFER OUT\n         MVC   1(159,R1),0(R1)\n         LR    R15,R1              SAVE IT FOR LATER\n         LH    R14,WASTMTNO        LOAD THE STATEMENT NUMBER\n         CVD   R14,AOEPWORK        CONVERT IT TO DECIMAL\n         OI    AOEPWORK+7,X'0F'    FIX THE SIGN\n         UNPK  0(5,R1),AOEPWORK+5(3)\n         LR    R14,R1              SET FOR LEADING BLANKER\n*\nPPMBLANK CLI   0(R14),C'0'         CHECK FOR LEADING ZEROES\n         BNE   PPMNZERO            BRANCH IF NOT\n         MVI   0(R14),C' '         BLANK IT OUT\n         LA    R14,1(,R14)         INCREMENT\n         B     PPMBLANK            AND TRY AGAIN\n*\nPPMNZERO LA    R3,10               LENGTH OF STMT NUMBER FIELD\n         AR    R15,R3              POINT PAST STMT NUMBER\n         SR    R14,R14             CLEAR FOR INSERT\n         IC    R14,1(,R2)          GET LENGTH OF MESSAGE\n         AR    R3,R14              CALCULATE TOTAL LENGTH\n         BCTR  R14,0               DECREMENT FOR MVC\n         EX    R14,PPMMVMSG        MOVE THE MESSAGE TEXT\n         MVI   0(R1),C' '          BLANK THE FIRST CHARACTER\n*\n         EJECT\n************* PUT OUT HEADER, MESSAGE, AND RETURN *********************\n         LA    R8,WAJOBPFX         LOAD ADDRESS OF JOB PREFIX\n         USING TEXT,R8\n         TM    STRJINDC,JTXMHEDR   TEST IF JOB HEADER PRESENT\n         BO    PPMHDRDN            BRANCH IF SO\n         OI    STRJINDC,JTXMHEDR   SET HEADER DONE\n         DROP  R8\n*\n         LA    R15,PPMHEAD1        POINT AT FIRST HEADER\n         LA    R14,L'PPMHEAD1      GET LENGTH OF HEADER\n         BAL   R9,PPMPUTLN         PUT OUT LINE 1 OF HEADER\n         LA    R15,PPMHEAD2        POINT AT SECOND HEADER\n         LA    R14,L'PPMHEAD2      GET LENGTH OF HEADER\n         BAL   R9,PPMPUTLN         PUT OUT LINE 2 OF HEADER\n*\nPPMHDRDN L     R15,WAMSGBUF        RELOAD BUFFER ADDRESS\n         LA    R14,1(,R3)          SET TOTAL LENGTH\n         BAL   R9,PPMPUTLN         GO PUT THE LINE\n*\n         NI    PPSTAT0,PPALL-PPMCODE INDICATE COMPLETION OF IEFVPPM\n         LM    R14,R12,12(R13)     RESTORE CALLERS' REGISTERS\n         BR    R14                 RETURN TO CALLER\n*\nPPMMVMSG MVC   0(0,R15),2(R2)      MOVE MESSAGE TEXT - EXECUTE ONLY\n*\n         EJECT\n******************** PUT MESSAGE SUBROUTINE ***************************\nPPMPUTLN DS    0H\n         LA    R1,RPLADDR          LOAD THE MESSAGE RPL ADDRESS\n         USING IFGRPL,R1\n         MVI   RPLREQ,RPLPUT       SET PUT REQUEST\n         ST    R15,RPLAREA         SET MESSAGE ADDRESS\n         XC    RPLARG,RPLARG       ZERO UNNECESSARY FIELD\n         ST    R14,RPLRLEN         SET RECORD LENGTH\n         MVI   RPLOPT1,RPLSEQ      SET SEQUENTIAL REQUEST\n         XC    RPLBUFL,RPLBUFL     ZERO UNNECESSARY FIELD\n         XC    RPLDDDD,RPLDDDD     ZERO UNNECESSARY FIELD\n         L     R15,WANELPTR        LOAD NEL ADDRESS\n         USING NEL,R15\n         MVC   RPLDACB,NELMSGCB    SET MSG ACB ADDRESS\n         DROP  R15\n*\n         ST    R13,IWASACHN        SAVE CURRENT SAVE AREA ADDRESS\n         LA    R13,IWAIOSA         SET I/O SAVE AREA\n         PUT   RPL=(1)             DO IT\n         DROP  R1\n         L     R13,IWASACHN        RESTORE SAVE AREA ADDRESS\n*\n         TM    AOSW1,AOIOERR       WAS IT BAD\n         BO    PPMBADNW            BRANCH IF SO\n         LTR   R15,R15             ANOTHER TEST FOR BAD\n         BZR   R9                  RETURN IF OK\n*\nPPMBADNW MVC   CWARET,=X'0024'     SET I/O ERROR RETURN CODE\n         OI    AOSW4,CWATERM       INDICATE TERMINATION\n         L     R15,TERMRTN         LOAD TERMINATION ROUTINE ADDRESS\n         BR    R15                 AND GO TO IT\n*\n         TITLE '**** DEBUGGING TRACER OF LAST RESORT ****'\n***********************************************************************\n*                                                                     *\n* IEFVPPDB                                                            *\n* ********                                                            *\n*                                                                     *\n* THIS ROUTINE WILL PRODUCE A CONSOLE MESSAGE FOR TRACING IF THE      *\n* \"PPDEBUG\" FLAG IS ON.                                               *\n*                                                                     *\n* INPUT:                                                              *\n*        R14 = ADDRESS OF FOUR BYTE TRACE ID.                         *\n*                                                                     *\n* OUTPUT:                                                             *\n*        MESSAGE CCC869I XXXX HAS BEEN ENCOUNTERED                    *\n*        XXXX IS THE FOUR BYTE TRACE ID.                              *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER OF THIS ROUTINE TO FOUR AFTER REGISTER 14.  *\n*                                                                     *\n* SVC:                                                                *\n*        WTO (SVC 35)                                                 *\n*                                                                     *\n***********************************************************************\n         SPACE 3\nIEFVPPDB DS    0H\n         TM    PPMISC,PPDEBUG      SEE IF TRACING TURNED ON\n         BNO   4(,R14)             RETURN PAST GOODIE\n*\n         STM   R14,R12,12(R13)     SAVE THE REGISTERS\n         MVC   PPWTOWRK(PPDBWTOL),PPDBWTO  SET THE WTO\n         MVC   PPWTOWRK+12(4),0(R14)   SET THE DEBUG CODE\n         WTO   MF=(E,PPWTOWRK)     SO THE TERRIBLE WTO\n         LM    R14,R12,12(R13)     RESTORE THE REGISTERS\n         B     4(,R14)             RETURN TO CALLER\n*\n         DROP  R11,R7\n*\n         TITLE '**** CONSTANTS ****'\n***************************** CONSTANTS *******************************\nPPMSKCLR DC    A(X'7F')            TO CLEAR FLAG BIT IN INT TEXT COUNT\nPPSYSMAJ DC    CL8'SYSJPROC'       MAJOR PROCLIB ENQUEUE NAME\nPPSYSDDN DC    CL8'IEF*PDSI'       SYSTEM PROCLIB DDNAME (FOR CONCAT)\nPPDDNSUF DC    C'0123456789ABCDEF' SUFFIX FOR ALLOCATING JOBPROC'S\nPPJOBPRO DC    AL1(7),C'JOBPROC'   INT. TEXT DEF FOR DDNAME\n*\n************************** EQUATES ************************************\nPPALL    EQU   X'FF'               ALL BITS MASK\nPPVLBIT  EQU   X'80'               PARMLIST VL\nPPABEND  EQU   X'BAD'              INTERNAL ABEND CODE\n         SPACE 1\nPPASHR   EQU   X'08'               \"DISP=SHR\" PARM CODE\n         SPACE 1\n**********************SYSPROC KEYWORD VALUES **************************\nPPSYES   DC    AL1(3),C'YES'       INT TEXT FORM FOR SYSPROC=YES\nPPSNO    DC    AL1(2),C'NO'        INT TEXT FORM FOR SYSPROC=NO\n         SPACE 1\n************************* LITERALS ************************************\nLITERALS LTORG ,                   FLUSH LITERALS\n         SPACE 2\n*********************** ESTAE CONSTANTS *******************************\nPPESRECP DC    CL8'IEFVH1',CL8'IEFVPP?',CL8'PPESTAEX'\nPPESHDR  DC    AL1(32),CL32'PRIVATE PROCLIB ESTAE DUMP'\n*\nPPESDUMP SDUMP HDRAD=PPESHDR,      SVC DUMP PARAMETER LIST             X\n               SDATA=(SQA,PSA,RGN,TRT),                                X\n               MF=L\n*\n         TITLE '**** MODEL CONTROL BLOCKS FOR INITIALIZATION ****'\nPPDCBPAT DCB   DDNAME=IEF*PDS0,                                        X\n               DSORG=PO,                                               X\n               MACRF=(R),                                              X\n               BUFNO=0,                                                X\n               BUFCB=0,                                                X\n               RECFM=FB,                                               X\n               LRECL=80\nPPDCBPTL EQU   *-PPDCBPAT          PATTERN DCB LENGTH\n         SPACE 1\nPPESTAEM ESTAE *-*,CT,             ESTABLISH PRIVATE PROCLIB           X\n               TERM=YES,            ERROR                              X\n               PARAM=*-*,            RECOVERY                          X\n               MF=L                   ENVIRONMMENT\nPPESTAEL EQU   *-PPESTAEM          LTH OF ESTAE PARM LIST\n         SPACE 1\nPPCAMLST CAMLST NAME,*-*,,*-*      BUILD LOCATE PARM LIST\n*\nPPLOCPL  EQU   *-PPCAMLST          PARM LIST LENGTH\n*\nPPENQLST ENQ   (PPSYSMAJ,*-*,E,8,STEP),RET=HAVE,MF=L\n*\nPPENQPL  EQU   *-PPENQLST          ENQUEUE LIST LENGTH\n*\n         TITLE '**** ALL USER AND OPERATOR ERROR MESSAGES ****'\nPPMHEAD1 DC    CL17' STMT NO. MESSAGE'  JCL MESSAGES\nPPMHEAD2 DC    CL17'-'                   HEADERS\n         SPACE 2\n      IEFVPPMS 800I,                                                   X\n               'SYNTAX ERROR IN JOBPROC DD STATEMENT'\n      IEFVPPMS 801I,                                                   X\n               'ILLEGAL USE OF \"SYSPROC\" OPTION'\n      IEFVPPMS 802I,                                                   X\n               'JOBPROC DATA SET NAME NOT SPECIFIED'\n      IEFVPPMS 803I,                                                   X\n               'DATA SET NAME NOT SPECIFIABLE FOR JOBPROC'\n      IEFVPPMS 804I,                                                   X\n               'JOBPROC CONCATENATION LIMIT EXCEEDED'\n      IEFVPPMS 805I,                                                   X\n               'JOBPROC DATA SET NOT FOUND IN CATALOG'\n      IEFVPPMS 806I,                                                   X\n               'VOLUME CONTAINING JOBPROC DATA SET NOT MOUNTED'\nPPVOLNMT WTO   '&MSGPFX.806I JOBPROC VOLUME XXXXXX NOT MOUNTED',       X\n               ROUTCDE=(2,4,6),DESC=6,MF=L\nPPVOLNML EQU   *-PPVOLNMT          MESSAGE LENGTH\nPPVOLNMS EQU   27                  OFFSET TO VOLUME INSERT\n         SPACE 2\n      IEFVPPMS 807I,                                                   X\n               'JOBPROC DATA SET NOT ON VOLUME'\n      IEFVPPMS 808I,                                                   X\n               'JOBPROC ALLOCATION FAILED'\n      IEFVPPMS 809I,                                                   X\n               'JOBPROC CONCATENATION FAILED'\n      IEFVPPMS 810I,                                                   X\n               'INSUFFICIENT STORAGE AVAILABLE TO ALLOCATE JOBPROC BUFFX\n               ER'\n      IEFVPPMS 811I,                                                   X\n               'VOLUME OR DEVICE TYPE NOT ALLOWED FOR JOBPROC USAGE'\n      IEFVPPMS 812I,                                                   X\n               'JOBPROC OPEN FAILED'\n      IEFVPPMS 813I,                                                   X\n               'JOBPROC DATA SET NOT AVAILABLE UNDER REQUESTED DISPOSITX\n               ION'\n      IEFVPPMS 814I,                                                   X\n               'JOBPROC DATA SET HAS INCORRECT UNIT SPECIFICATION'\n      IEFVPPMS 815I,                                                   X\n               'CATALOG VOLUME REQUIRED FOR JOBPROC PROCESSING IS NOT MX\n               OUNTED'\nPPCVLNMT WTO   '&MSGPFX.815I JOBPROC CATALOG VOLUME NOT MOUNTED',      X\n               ROUTCDE=(2,4,6),DESC=6,MF=L\nPPCVLNML EQU   *-PPCVLNMT          MESSAGE LENGTH\n         SPACE 2\n      IEFVPPMS 816I,                                                   X\n               'JOBPROC DE-CONCATENATION FAILED'\nPPDECON1 WTO   '&MSGPFX.816I JOBPROC DE-CONCATENATION FAILED',         X\n               ROUTCDE=1,DESC=1,MF=L\n         SPACE 2\n      IEFVPPMS 817I,                                                   X\n               'JOBPROC DE-ALLOCATION FAILED'\nPPDEALC1 WTO   '&MSGPFX.817I JOBPROC DE-ALLOCATION FAILED',            X\n               ROUTCDE=1,DESC=1,MF=L\n         SPACE 2\n      IEFVPPMS 836I,                                                   X\n               'MISPLACED JOBPROC STATEMENT'\n      IEFVPPMS 842I,                                                   X\n               'EXCESSIVE PARAMETER LENGTH IN THE SYSPROC FIELD'\n      IEFVPPMS 843I,                                                   X\n               'UNIDENTIFIED POSITIONAL PARAMETER IN THE SYSPROC FIELD'\nPPENQWTO WTO   '&MSGPFX.851I TOO MANY CONVERTERS RUNNING',             X\n               ROUTCDE=2,DESC=2,MF=L\n         SPACE 2\nPPSYSWTO WTO   '&MSGPFX.852I SYSPROC LIBRARIES UNAVAILABLE',           X\n               ROUTCDE=2,DESC=6,MF=L\n         SPACE 2\nPPDBWTO  WTO   '&MSGPFX.869I **** HAS BEEN ENCOUNTERED',               X\n               ROUTCDE=2,DESC=6,MF=L\nPPDBWTOL EQU   *-PPDBWTO\n         SPACE 2\n*\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IEFVPP$": {"ttr": 5379, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x07_\\x01\\x03\\x07_!C\\x00\\x17\\x00\\x17\\x00\\x00\\xe2\\xe8\\xe9\\xe8\\xc7\\xe8\\xf1@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-16T21:43:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "SYZYGY1"}, "text": "//ASSEM1   JOB (ASSEMBLY),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=BRIAN\n//ASSEM  PROC  CLASS=A,        -   SYSOUT CLASS\n//             MEM=,\n//             DSN='SYS1.DYNAMIC.PROCLIB', <--THIS LIBRARY\n//             WORK2=SYSDA         DASD WORK TYPE\n//ASM      EXEC  PGM=IFOX00,REGION=500K,COND=EVEN,\n//         PARM='RENT,OBJECT,NODECK'\n//SYSPRINT DD  SYSOUT=&CLASS\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYZYGY.DYNAMIC.PROCLIB,DISP=SHR\n//         DD  DSN=MVSSRC.SYM101.F01,DISP=SHR\n//         DD  DSN=MVSSRC.SYM101.F14,DISP=SHR\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSGO    DD  DSN=BRIAN.IEFVPP,DISP=SHR   <----MAKE YOUR OWN OBJ LIB\n//*   UNIT=SYSDA,VOL=SER=??????,DCB=(RECFM=FB.LRECL=80,BLKSIZE=80)\n//SYSIN    DD  DSN=&DSN.(&MEM),DISP=SHR\n//       PEND\n//ASSEMBLE EXEC PROC=ASSEM,MEM=IEFVPP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JES2": {"ttr": 5381, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x07_\\x01\\x03\\x07_!7\\x00\\x18\\x00\\x18\\x00\\x00\\xe2\\xe8\\xe9\\xe8\\xc7\\xe8\\xf1@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-03-16T00:00:00", "modifydate": "2003-03-16T21:37:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "SYZYGY1"}, "text": "//JES2    PROC M=JES2PARM,\n//             N=SYS1,\n//             L=LINKLIB,\n//             U=3350,\n//             N1=SYS1,\n//             P0=SYS1,\n//             P1=SYS2,\n//             P2=SYS1,\n//             P=JES2PARM\n//IEFPROC EXEC PGM=HASJES20,\n//             TIME=1440,\n//             DPRTY=(15,15)\n//STEPLIB  DD  UNIT=&U,DISP=SHR,DSN=&N..&L\n//PROC00   DD  DSN=&P0..PROCLIB,DISP=SHR\n//         DD  DSN=&P1..PROCLIB,DISP=SHR\n//         DD  DSN=&P2..PROCLIB,DISP=SHR\n//IEF0PDSI DD  DSN=&P0..PROCLIB,DISP=SHR <-----1ST CONVERTER\n//         DD  DSN=&P1..PROCLIB,DISP=SHR\n//         DD  DSN=&P2..PROCLIB,DISP=SHR\n//IEF1PDSI DD  DSN=&P0..PROCLIB,DISP=SHR <-----2ND CONVERTER\n//         DD  DSN=&P1..PROCLIB,DISP=SHR\n//         DD  DSN=&P2..PROCLIB,DISP=SHR\n//HASPPARM DD  DSN=&N1..&P(&M),DISP=SHR\n//HASPLIST DD  DDNAME=IEFRDER\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SGIEF441": {"ttr": 5383, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x05o\"\\x17\\x03\\xd3\\x03\\xd3\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-02-25T22:17:00", "lines": 979, "newlines": 979, "modlines": 0, "user": "BRIAN"}, "text": "         MACRO\n         SGIEF441\n.* CHANGE LEVEL = 05/05/75                                     @Z40LPSM\n.*              = 05/05/75                                     @Z40FPSM\n.*              = 05/30/75                                     @ZA03868\n.*              = 11/03/75                                     @Z40BPSM\n.*              = 12/08/75                                     @Z40BPSR\n.*              = 06/15/76                                     @G29ANSJ\n.*              = 11/19/76  - VS2 SU 16 - IN THIS MACRO, SU 16 @G16AP2F\n.*                            PROVIDES VPSS SUPPORT (SU 29 -   @G16AP2F\n.*                                                   G29ANSJ   @G16AP2F\n.*              = 01/04/77  INCREASE LINKEDIT SIZE FROM (256K,64K)\n.*                          TO SIZE=(512K,100K) FOR IEFW21SD   @ZA15719\n.*              = 05/04/78  - VS2 - ADD NEW MODULES FOR        @G64MP2D\n.*                                  SYSTEM CONTROL PROGRAM 2   @G64MP2D\n.*              = 11/08/78  MOVE IEEMB811 BACK TO LPALIB       @VS49594\n.*              = 04/01/79  3800 RAS ENHANCEMENTS SUPPORT      @E0044PJ\n.*\n.* CHANGE = Z30LPTH,Y30LPSL,Y02038,YM02651,R00271,\n.*          YM05804,YM04049,YM04028,YM00581,\n.*          YM03315,YM03450,YM04713,YM01063,\n.*          YM03736,YM02549,YM02548,YM02527,\n.*          YM01965,Y02651,Y02953,Y02038,G64MP2D,G64QPSJ,      @G64MP2D\n.*          G3800SJ,G64DPSJ,VS49594,E0044PJ                    @E0044PJ\n.*          ZA90902 - TEST FOR TCAM                            @ZA90902\n.*   NOTE: OZ11865 IS SUPPORTED BY @Z40FPSM   AND              @G16AP2F\n.*         OZ13462 IS SUPPORTED BY @Z40FPSM                    @G16AP2F\n.*\n         COPY  SGGBLPAK                      DEFINE GLOBAL SYMBOLS\n&SGCTRLC(6)  SETC ''             SET NULL PROG NAME            @YM05804\n         AIF (&GETB(3)).IOGEN1     IS THIS AN I/O SYSGEN ?       Y02953\n&SGCTRLC(7) SETC '&SGCTRLC(20)'  SET VOLUME FOR LPALIB           Y02953\n&SGCTRLC(8) SETC '&SGCTRLC(19)'  SET UNIT NAME FOR LPALIB        Y02953\n&SGCTRLC(9)  SETC 'LPALIB'       DSNAME FOR LPALIB DATA SET      Y02953\n&SGCTRLC(10) SETC  ',LET'\n&SGCTRLC(11) SETC  ',RENT'   SET RENT FOR LINK EDIT              A36318\n         COPY  SGLEDPK1\n  PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3' Y02953\n  PUNCH '//AOS00 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS00' Y02953\n  PUNCH '//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21' Y02953\n  PUNCH '//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5' Y02953\n  PUNCH '//AOSCE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSCE' Y02953\n  PUNCH '//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4' Y02953\n         COPY  SGLEDPK2\n.*        SVC 34                                                 Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0003D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0303D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE5403D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0403D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0503D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0603D)'                        Y01040\n         PUNCH ' INCLUDE AOSC5(IEE6503D)'                        Y02953\n         PUNCH ' INCLUDE AOSC5(IEE6603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7703D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7803D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE6903D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE6303D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE6403D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3203D)'                      @Y30LPSL\n         PUNCH ' INCLUDE AOSB3(IEE4703D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4303D)'                        Y02953\n         AIF (NOT &SGDMGTB(5)).NOTCAM  IF NO TCAM BRANCH       @ZA90902\n         PUNCH ' INCLUDE AOS21(IED1303D)'                        Y02953\n.NOTCAM  ANOP                                                  @ZA90902\n         PUNCH ' INCLUDE AOSB3(IEE5103D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE5503D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7503D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE6703D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE6803D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE8B03D)'                      @G64DPSJ\n         PUNCH ' INCLUDE AOSB3(IEE5903D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE5603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0703D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE1403D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4103D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7203D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE5703D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE0803D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3503D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE1603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE9403D)'                      @Y30LPSL\n         PUNCH ' INCLUDE AOSC5(IEAVEMRQ)'                        Y02953\n         PUNCH ' INCLUDE AOSC5(IEAVVRP1)'                        Y02953\n         PUNCH ' INCLUDE AOSCE(IGF2503D)'                        Y02953\n         PUNCH ' INCLUDE AOSCE(IGF2603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7103D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3703D)'                        Y02953\n         PUNCH ' INCLUDE AOST4(IKJ5803D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE2903D)'                        Y02953\n         PUNCH ' INCLUDE AOSC5(IEEMB815)'                        Y02953\n         PUNCH ' INCLUDE AOSC5(IEE8603D)'                      @Z40BPSR\n         PUNCH ' INCLUDE AOSB3(ISTCFF3D)'                      @YM03450\n         PUNCH ' INCLUDE AOSCE(IGFDE0)'                          Y02953\n         PUNCH ' INCLUDE AOSCE(IGFDE1)'                          Y02953\n         PUNCH ' INCLUDE AOSCE(IGFDV1)'                          Y02953\n         PUNCH ' ORDER IEE0003D '                                Y02953\n         PUNCH ' ORDER IEE0303D '                                Y02953\n         PUNCH ' ORDER IEE5403D '                                Y02953\n         PUNCH ' ORDER IEE0403D '                                Y02953\n         PUNCH ' ORDER IEE7503D '                                Y02953\n         PUNCH ' ORDER IEE5603D '                                Y02953\n         PUNCH ' ORDER IEE5903D '                                Y02953\n         PUNCH ' ORDER IEE6703D '                                Y02953\n         PUNCH ' ORDER IEE7703D '                                Y02953\n         PUNCH ' ORDER IEE6803D '                                Y02953\n         PUNCH ' ORDER IEE6903D '                                Y02953\n         PUNCH ' ORDER IEE6303D '                                Y02953\n         PUNCH ' ORDER IEE6403D '                                Y02953\n         PUNCH ' ALIAS IGG2103D,IGC0503D,IEE2103D,IEE0503D'      Y02953\n         PUNCH ' ALIAS IEE7603D'                               @YM02748\n         PUNCH ' ENTRY IEE0003D'                                 Y02953\n    PUNCH ' NAME IGC0003D(R) '                                   Y02953\n.*     VARY  ON/OFF/CONS                                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3303D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE2303D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4203D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4403D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE3103D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4603D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4903D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE4803D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE7303D)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEECB904)'                      @Z30LPTH\n         PUNCH ' ORDER IEE3103D '                                Y02953\n         PUNCH ' ENTRY IEE3603D'                                 Y02953\n    PUNCH ' NAME IEE3603D(R)'                                    Y02953\n.*     UNLOAD                                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEEMB813)'                        Y02953\n    PUNCH ' NAME IEEMB813(R)'                                    Y02953\n.*        DISPLAY UNITS                                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEE00110)'                        Y02953\n         PUNCH ' ALIAS IGC00110'                                 Y02953\n    PUNCH ' NAME IGC0011{(R)'                                    Y02953\n.*   CONSOLE DUMP                                                Y02953\n         PUNCH ' INCLUDE AOSB3(IEECB866) '                       Y02953\n    PUNCH ' ENTRY  IEECB866 '                                    Y02953\n    PUNCH ' NAME   IEECB866(R) '                                 Y02953\n.*        HALT/SWITCH                                            Y02953\n         PUNCH ' INCLUDE AOSB3(IEE70110)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEE90110)'                        Y02953\n    PUNCH ' ENTRY IEE70110'                                      Y02953\n    PUNCH ' NAME IEE70110(R)'                                    Y02953\n.*              SUBSYSTEM CONSOLE AUTHORITY SUPPORT              Y02038\n    PUNCH ' INCLUDE AOSB3(IEECB900) '                            Y02038\n    PUNCH ' INCLUDE AOSB3(IEECB901) '                            Y02038\n    PUNCH ' ENTRY IEECB900 '                                     Y02038\n    PUNCH ' NAME IEECB900(R) '                                   Y02038\n.*         LOG SVC'S                                               LMCS\n         PUNCH ' INCLUDE AOSB3(IEEMB804)'                        Y02953\n    PUNCH ' NAME IGC0003F(R) '                                   Y02953\n         PUNCH ' INCLUDE AOS00(IEEMB830)'                        Y02953\n         PUNCH ' INCLUDE AOS00(IEEMB827)'                        Y02953\n         PUNCH ' ENTRY IEEMB830'                                 Y02953\n    PUNCH ' NAME IGC0008C(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEEPALTR)'                      @YM02748\n    PUNCH ' NAME IEEPALTR(R)'                                  @YM02748\n         PUNCH ' INCLUDE AOSB3(IEEMB879) '                     @G64DPSJ\n         PUNCH ' INCLUDE AOSB3(IEEMB880) '                     @G64DPSJ\n    PUNCH ' ENTRY IEEMB879 '                                   @G64DPSJ\n    PUNCH ' NAME  IEEMB879(R) '                                @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE10110) '                     @G64DPSJ\n    PUNCH ' NAME IGC10110(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE20110) '                     @G64DPSJ\n    PUNCH ' NAME IGC20110(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE21110) '                     @G64DPSJ\n    PUNCH ' NAME IGC21110(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE22110) '                     @G64DPSJ\n    PUNCH ' NAME IGC22110(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE23110) '                     @G64DPSJ\n    PUNCH ' NAME IGC23110(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE AOSC5(IEE40110) '                     @G64DPSJ\n    PUNCH ' NAME IGC40110(R) '                                 @G64DPSJ\n         PUNCH '/*'                                               21002\n.IOGEN1  ANOP                                                    Y02953\n&SGCTRLC(7)  SETC '&SGCTRLC(20)'        SET VOLUME FOR LPALIB    Y02953\n&SGCTRLC(8)  SETC '&SGCTRLC(19)'        SET UNIT NAME FOR LPALIB Y02953\n&SGCTRLC(9)  SETC 'LPALIB'              SET  DSNAME              Y02953\n&SGCTRLC(10) SETC  ',LET'                                        Y02953\n&SGCTRLC(11) SETC  ',RENT'                                       Y02953\n&SGCTRLC(12) SETC  ',SIZE=(512K,100K)' SUS AND PTFS INCREASED  @ZA15719\n         COPY  SGLEDPK1                                          Y02953\n  PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3' Y02953\n  PUNCH '//AOSA0 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSA0' Y02953\n         COPY  SGLEDPK2                                          Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*              DEVICE TABLES                                    Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE SYSPUNCH(IEFWMAS1) '                    Y02953\n    PUNCH ' NAME DEVNAMET(R)'                                    Y02953\n         PUNCH ' INCLUDE SYSPUNCH(IEFDEVPT) '                  @G64DPSJ\n    PUNCH ' NAME IEFDEVPT(R) '                                 @G64DPSJ\n         PUNCH ' INCLUDE SYSPUNCH(IEFWMSKA) '                    Y02953\n    PUNCH ' NAME DEVMASKT(R) '                                   Y02953\n    PUNCH ' INCLUDE SYSPUNCH(IEFEDTTB) '                       @G64DPSJ\n         PUNCH ' ENTRY EDTTAB '                                @G64DPSJ\n         PUNCH ' NAME IEFEDTTB(R) '                            @G64DPSJ\n.**********************************************************************\n.*                                                               Y02953\n.*              ALLOCATION                                       Y02953\n.*                                                               Y02953\n.**********************************************************************\n.*        ALLOCATION TABLES                                      Y02953\n   PUNCH '      INCLUDE SYSPUNCH(IEFSGOPT) '                     Y02953\n   PUNCH '      INCLUDE SYSPUNCH(IEFYRCDS) '                   @G3800SJ\n         AIF (&GETB(3)).IOGEN3                                   Y02953\n   PUNCH '      INCLUDE AOSB3(IEFRPREP) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFXVNSL) '                      @YM02749\n.*   SMF                                                         Y02953\n   PUNCH '       INCLUDE AOSB3(IEFTB721) '                       Y02953\n   PUNCH '       INCLUDE AOSB3(IEFTB722) '                       Y02953\n   PUNCH '       INCLUDE AOSB3(IEFTB720) '                       Y02953\n   PUNCH '       INCLUDE AOSB3(IEFTB723) '                     @YM04713\n   PUNCH '       INCLUDE AOSB3(IEFACTRT) '                       Y02953\n.*        SEVICE ROUTINES                                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4DC) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4DD) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4DE) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E0) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E1) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E2) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E3) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E4) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E6) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E7) '                      @Z40LPSM\n   PUNCH '      INCLUDE AOSB3(IEFAB4E8) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4E9) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4EA) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4EB) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4EC) '                      @Z40LPSM\n   PUNCH '      INCLUDE AOSB3(IEFAB4ED) '                      @Z40FPSM\n   PUNCH '      INCLUDE AOSB3(IEFAB4EE) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4EF) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F0) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F1) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F2) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F3) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F4) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F5) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F6) '                      @YM04028\n   PUNCH '      INCLUDE AOSB3(IEFAB4F7) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F8) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4F9) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4FA) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4FC) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4FD) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4FE) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEEAB400) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEEAB401) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4M4) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4M5) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4M6) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4M7) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4M9) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4UV) '                        Y02038\n.*        COMMON ALLOCATION/UNALLOCATION                         Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB421) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB422) '                        Y02038\n   PUNCH '      INCLUDE AOSB3(IEFAB423) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB424) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB425) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB426) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB427) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB428) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB430) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB431) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB432) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB433) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB434) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB435) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB436) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB440) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB441) '                      @YM03736\n   PUNCH '      INCLUDE AOSB3(IEFAB442) '                      @YM03736\n   PUNCH '      INCLUDE AOSB3(IEFAB445) '                        Y02953\n.*        HOUSEKEEPING                                           Y02953\n   PUNCH '      INCLUDE AOSA0(IDACAT11) '                        Y02953\n   PUNCH '      INCLUDE AOSA0(IDACAT12) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB451) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB452) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB453) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB454) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB455) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB456) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB457) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB458) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB459) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB461) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB463) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB464) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB466) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB469) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB470) '                        Y02953\n.*        COMMON ALLOCATION/UNALLOCATION                         Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB471) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB472) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB473) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB474) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB475) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB476) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB477) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB478) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB479) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB480) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB481) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB485) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB486) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB487) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB488) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB489) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB48A) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB490) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB491) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB492) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB493) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB494) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB495) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB496) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB498) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB499) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB49A) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB49B) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB49C) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4A0) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4A2) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4A3) '                      @YM01063\n   PUNCH '      INCLUDE AOSB3(IEFAB4A4) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4A6) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4A8) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4B0) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4B2) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFAB4SF) '                      @E0044PJ\n.*        DYNAMIC ALLOCATION                                     Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4A0) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4A1) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4FA) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4FB) '                        Y02038\n   PUNCH '      INCLUDE AOSB3(IEFDB4FC) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4FD) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4FE) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4FF) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4F9) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB4F8) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB400) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB401) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB402) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB403) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB410) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB411) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB412) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB413) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB414) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB417) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB418) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB450) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB460) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB470) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB480) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB481) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFDB490) '                        Y02953\n.*        BATCH ALLOCATION/UNALLOCATION                          Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB401) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB402) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB404) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB410) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB412) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB414) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB416) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB4M1) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB4M2) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB4M3) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB4M4) '                        Y02953\n   PUNCH '      INCLUDE AOSB3(IEFBB4M5) '                        Y02953\n         AGO   .IOGEN35                                          Y02953\n.IOGEN3   ANOP                                                   Y02953\n   PUNCH '      INCLUDE SYSLMOD(IEFW21SD) '                      Y02953\n.IOGEN35  ANOP                                                   Y02953\n   PUNCH '      ORDER IEFDB400 '                                 Y02953\n   PUNCH '      ORDER IEFDB401 '                                 Y02953\n   PUNCH '      ORDER IEFAB4F7(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4F6 '                               @YM04028\n   PUNCH '      ORDER IEFDB4FF '                                 Y02953\n   PUNCH '      ORDER IEFDB4FC '                                 Y02953\n   PUNCH '      ORDER IEFDB4FA '                                 Y02953\n   PUNCH '      ORDER IEFDB410(P) '                              Y02953\n   PUNCH '      ORDER IEFDB412 '                                 Y02953\n   PUNCH '      ORDER IEFDB411 '                                 Y02953\n   PUNCH '      ORDER IEFAB4DC '                                 Y02953\n   PUNCH '      ORDER IEFDB417 '                                 Y02953\n   PUNCH '      ORDER IEFAB4E9 '                                 Y02953\n   PUNCH '      ORDER IEFAB445 '                                 Y02953\n   PUNCH '      ORDER IEFDB413 '                                 Y02953\n   PUNCH '      ORDER IEFDB414 '                                 Y02953\n   PUNCH '      ORDER IEFDB418 '                                 Y02953\n   PUNCH '      ORDER IEFDB4FE '                                 Y02953\n   PUNCH '      ORDER IEFDB4F9 '                                 Y02953\n   PUNCH '      ORDER IEFDB4F8 '                                 Y02953\n   PUNCH '      ORDER IEFDB4FD '                                 Y02953\n   PUNCH '      ORDER IEFDB480 '                                 Y02953\n   PUNCH '      ORDER IEFDB481 '                                 Y02953\n   PUNCH '      ORDER IEFDB4A0 '                                 Y02953\n   PUNCH '      ORDER IEFDB4A1 '                                 Y02953\n   PUNCH '      ORDER IEFDB470 '                                 Y02953\n   PUNCH '      ORDER IEFDB450 '                                 Y02953\n   PUNCH '      ORDER IEFDB460 '                                 Y02953\n   PUNCH '      ORDER IEFDB490 '                                 Y02953\n   PUNCH '      ORDER IEFBB401 '                                 Y02953\n   PUNCH '      ORDER IEFAB4FE '                                 Y02953\n   PUNCH '      ORDER IEFBB402 '                                 Y02953\n   PUNCH '      ORDER IEFBB404 '                                 Y02953\n   PUNCH '      ORDER IEFBB4M3 '                                 Y02953\n   PUNCH '      ORDER IEFAB451 '                                 Y02953\n   PUNCH '      ORDER IEFAB452 '                                 Y02953\n   PUNCH '      ORDER IEFAB453 '                                 Y02953\n   PUNCH '      ORDER IEFAB470 '                                 Y02953\n   PUNCH '      ORDER IEFAB454 '                                 Y02953\n   PUNCH '      ORDER IEFAB457 '                                 Y02953\n   PUNCH '      ORDER IEFAB464 '                                 Y02953\n   PUNCH '      ORDER IEFAB459 '                                 Y02953\n   PUNCH '      ORDER IEFAB421 '                                 Y02953\n   PUNCH '      ORDER IEFAB427 '                                 Y02953\n   PUNCH '      ORDER IEFAB431 '                                 Y02953\n   PUNCH '      ORDER IEFAB423 '                                 Y02953\n   PUNCH '      ORDER IEFAB424 '                                 Y02953\n   PUNCH '      ORDER IEFAB425 '                                 Y02953\n   PUNCH '      ORDER IEFAB426 '                                 Y02953\n   PUNCH '      ORDER IEFAB430 '                                 Y02953\n   PUNCH '      ORDER IEFAB433 '                                 Y02953\n   PUNCH '      ORDER IEFAB436(P) '                              Y02953\n   PUNCH '      ORDER IEFAB440(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4F0 '                                 Y02953\n   PUNCH '      ORDER IEFAB434(P) '                              Y02953\n   PUNCH '      ORDER IEFAB428 '                                 Y02953\n   PUNCH '      ORDER IEFAB4FC '                                 Y02953\n   PUNCH '      ORDER IEFAB435(P) '                              Y02953\n   PUNCH '      ORDER IEFAB441 '                               @YM03736\n   PUNCH '      ORDER IEFAB442 '                               @YM03736\n   PUNCH '      ORDER IEFAB432 '                                 Y02953\n   PUNCH '      ORDER IEFAB490 '                                 Y02953\n   PUNCH '      ORDER IEFAB4F3 '                                 Y02953\n   PUNCH '      ORDER IEFAB4FD '                                 Y02953\n   PUNCH '      ORDER IEFAB471(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4FA(P) '                              Y02953\n   PUNCH '      ORDER IEFAB473(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4M5 '                                 Y02953\n   PUNCH '      ORDER IEFAB4F9 '                                 Y02953\n   PUNCH '      ORDER IEFAB4F8 '                                 Y02953\n   PUNCH '      ORDER IEFAB475 '                                 Y02953\n   PUNCH '      ORDER IEFAB476 '                                 Y02953\n   PUNCH '      ORDER IEFAB480 '                                 Y02953\n   PUNCH '      ORDER IEFAB4F2(P) '                              Y02953\n   PUNCH '      ORDER IEFAB492 '                                 Y02953\n   PUNCH '      ORDER IEFAB493 '                                 Y02953\n   PUNCH '      ORDER IEFAB494(P) '                              Y02953\n   PUNCH '      ORDER IEFAB495 '                                 Y02953\n   PUNCH '      ORDER IEFBB410(P) '                              Y02953\n   PUNCH '      ORDER IEFBB412 '                                 Y02953\n   PUNCH '      ORDER IEFBB414 '                                 Y02953\n   PUNCH '      ORDER IEFBB416 '                                 Y02953\n   PUNCH '      ORDER IEFAB4EC '                               @Z40LPSM\n   PUNCH '      ORDER IEFAB4A0 '                                 Y02953\n   PUNCH '      ORDER IEFAB4A2(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4SF    '                            @E0044PJ\n   PUNCH '      ORDER IEFAB4A4(P) '                              Y02953\n   PUNCH '      ORDER IEFAB4A6 '                                 Y02953\n   PUNCH '      ORDER IEFAB4A8 '                                 Y02953\n   PUNCH ' ALIAS IGC0009I '                                      Y02953\n   PUNCH ' ALIAS IEFAB4DC '                                      Y02953\n   PUNCH ' ALIAS IEFBB410 '                                      Y02953\n   PUNCH ' ALIAS IEFAB49C '                                      Y02953\n   PUNCH ' ALIAS IEFAB4F5 '                                      Y02953\n   PUNCH ' ALIAS IEFAB4F4 '                                      Y02953\n   PUNCH ' ALIAS IEFAB4UV '                                      Y02038\n   PUNCH ' ALIAS IEFAB445 '                                    @YM06251\n   PUNCH ' ALIAS IEFAB4EC '                                    @Z40LPSM\n   PUNCH ' ALIAS IEFAB4SF '                                    @E0044PJ\n   PUNCH ' ENTRY IEFBB401 '                                      Y02953\n   PUNCH ' NAME  IEFW21SD(R) '                                   Y02953\n           AIF   (&GETB(3)).IOGEN36                            @G64DPSJ\n.**********************************************************************\n.*                                                               Y02953\n.*       SCHEDULER RESOURCE MANAGER                              Y02953\n.*                                                               Y02953\n.**********************************************************************\n          PUNCH ' INCLUDE AOSB3(IEFAB4E5) '                      Y02953\n          PUNCH ' INCLUDE AOSB3(IEFAB4F6) '                    @YM04028\n          PUNCH ' CHANGE IEFBR14(IEFAB4E1) '                   @YM04028\n          PUNCH ' INCLUDE AOSB3(IEFBR14) '                     @YM04028\n          PUNCH ' INCLUDE AOSB3(IEFAB4FA) '                      Y02953\n          PUNCH ' INCLUDE AOSB3(IEFAB498) '                      Y02953\n          PUNCH ' ENTRY IEFAB4E5 '                               Y02953\n          PUNCH ' NAME  IEFAB4E5(R) '                            Y02953\n.IOGEN36 ANOP                                                  @G64DPSJ\n          PUNCH '/*'                                             Y02953\n         AIF (&GETB(3)).IOGEN4                                   Y02953\n&SGCTRLC(7)  SETC  '&SGCTRLC(20)'      SET VOLUME FOR LPALIB     Y02953\n&SGCTRLC(8)  SETC  '&SGCTRLC(19)'      SET UNIT NAME FOR LPALIB  Y02953\n&SGCTRLC(9)  SETC  'LPALIB'            SET DSNAME TO LPALIB      Y02953\n&SGCTRLC(10) SETC  ',LET'                                        Y02953\n&SGCTRLC(11) SETC  ',RENT'                                       Y02953\n         COPY  SGLEDPK1                 PUNCH L.E. JCL DECK      Y02953\n  PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3' Y02953\n  PUNCH '//AOS00 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS00' Y02953\n         COPY  SGLEDPK2                                          Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*       SCHEDULER RESOURCE MANAGERS                             Y02953\n.*                                                               Y02953\n.**********************************************************************\n          PUNCH ' INCLUDE AOSB3(IEFJRECM) '                      Y02953\n          PUNCH ' INCLUDE AOSB3(IEFISEXR) '                      Y02953\n          PUNCH ' ORDER IEFJRECM '                               Y02953\n          PUNCH ' ORDER IEFISEXR '                               Y02953\n          PUNCH ' ENTRY IEFJRECM '                               Y02953\n          PUNCH ' NAME  IEFJRECM(R) '                            Y02953\n          PUNCH ' INCLUDE AOSB3(IEFIRECM) '                      Y02953\n          PUNCH ' INCLUDE AOSB3(IEFISEXR) '                      Y02953\n          PUNCH ' ORDER IEFIRECM '                               Y02953\n          PUNCH ' ORDER IEFISEXR '                               Y02953\n          PUNCH ' ENTRY IEFIRECM '                               Y02953\n          PUNCH ' NAME  IEFIRECM(R) '                            Y02953\n.****************************************************************Y02953\n.*                                                               Y02953\n.*                    SMF                                        Y02953\n.*                                                               Y02953\n.****************************************************************Y02953\n          PUNCH ' INCLUDE AOS00(IEEMB829)'                       Y02953\n          PUNCH ' INCLUDE AOS00(IEEMB828)'                       Y02953\n          PUNCH ' INCLUDE AOS00(IEEMB825)'                       Y02953\n          PUNCH ' INCLUDE AOS00(IEEMB826)'                       Y02953\n          PUNCH ' INCLUDE AOS00(IEEMB827)'                       Y02953\n          PUNCH ' INCLUDE AOS00(IEFU29)'                       @Z40FPSM\n          PUNCH ' ORDER IEEMB829 '                               Y02953\n          PUNCH ' ORDER IEFU29'                                @Z40FPSM\n          PUNCH ' ORDER IEEMB828 '                               Y02953\n          PUNCH ' ORDER IEEMB825 '                               Y02953\n          PUNCH ' ORDER IEEMB826 '                               Y02953\n          PUNCH ' ORDER IEEMB827 '                               Y02953\n    PUNCH ' ENTRY IEEMB829 '                                     Y02953\n    PUNCH ' NAME  IEEMB829(R) '                                  Y02953\n         PUNCH ' INCLUDE AOS00(IEFU83)'                          Y02953\n         PUNCH ' ENTRY IEFU83'                                   Y02953\n    PUNCH ' NAME IEFU83(R)'                                      Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*              DISPLAY ACTIVE                                   Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEECB800)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEECB801)'                        Y02953\n         PUNCH ' ENTRY IEECB800'                                 Y02953\n    PUNCH ' NAME IEECB800(R)'                                    Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                 STAE                                          Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEECB860) '                       Y02953\n    PUNCH ' NAME IEECB860(R) '                                   Y02953\n         PUNCH ' INCLUDE AOSB3(IEESB665) '                       Y02953\n    PUNCH ' NAME IEESB665(R) '                                   Y02953\n         PUNCH '/*'                                              Y02953\n&SGCTRLC(7)  SETC  '&SGCTRLC(20)'       SET VOLUME FOR LPALIB    Y02953\n&SGCTRLC(8)  SETC  '&SGCTRLC(19)'       SET UNIT NAME FOR LPALIB Y02953\n&SGCTRLC(9)  SETC  'LPALIB'             SET DSNAME               Y02953\n&SGCTRLC(10) SETC  ',LET'                                        Y02953\n&SGCTRLC(11) SETC  ',RENT'                                       Y02953\n         COPY  SGLEDPK1                 PUNCH L. E. JCL DECK     Y02953\n  PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3' Y02953\n PUNCH '//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4'  Y02953\n PUNCH '//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5'  Y02953\n         COPY  SGLEDPK2                                          Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                 TOD CLOCK                                     Y02953\n.*                                                               Y02953\n.**********************************************************************\n        PUNCH ' INCLUDE AOSC5(IEAVRTOD) '                        Y02953\n   PUNCH ' ALIAS IEAVRINT,IEAVRSSC '                             Y02953\n   PUNCH ' ALIAS IEAVRCAN,IEAVRNOT '                             Y02953\n   PUNCH ' NAME  IEAVRTOD(R) '                                   Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    MASTER SCHEDULER                           Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEEVWAIT)'                        Y02953\n    PUNCH ' NAME IEEVWAIT(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVSTAR,IEEVJCL)'                Y02953\n         PUNCH ' ENTRY IEEVSTAR '                                Y02953\n    PUNCH ' NAME IEEVSTAR(R) '                                   Y02953\n         PUNCH ' INCLUDE AOSB3(IEEPRWI2)'                        Y02953\n    PUNCH ' NAME IEEPRWI2(R) '                                   Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVMNT1)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVJCL)'                         Y02953\n         PUNCH ' ENTRY IEEVMNT1'                                 Y02953\n    PUNCH ' NAME IEEVMNT1(R) '                                   Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVMNT2)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVSMSG)'                        Y02953\n         PUNCH ' ENTRY IEEVMNT2'                                 Y02953\n    PUNCH ' NAME IEEVMNT2(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEEMB810)'                        Y02953\n    PUNCH ' NAME IEEMB810(R)'                                    Y02953\n.*   MOVE LOAD MODULE IEEMB811 BACK TO LPALIB                  @VS49594\n         PUNCH ' INCLUDE AOSB3(IEEMB811)'                      @G64UPSJ\n         PUNCH ' INCLUDE AOSB3(IEEMB876)'                      @G64UPSJ\n         PUNCH ' ENTRY IEEMB811 '                              @G64UPSJ\n    PUNCH ' NAME IEEMB811(R)'                                  @G64UPSJ\n         PUNCH ' INCLUDE AOSB3(IEEMB812)'                        Y02953\n         PUNCH ' INCLUDE AOSC5(IRBMFANL,IRARMIPS)'             @Z40BPSM\n         PUNCH ' ORDER IEEMB812(P)'                            @G64UPSJ\n         PUNCH ' ORDER IRBMFANL '                              @G64UPSJ\n         PUNCH ' ORDER IRARMIPS(P)'                            @Z40BPSM\n         PUNCH ' ENTRY IEEMB812 '                              @G64UPSJ\n    PUNCH ' NAME IEEMB812(R)'                                  @G64UPSJ\n.**********************************************************************\n.*                                                               Y02953\n.*                   MASTER SCHEDULER                            Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEESB605) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEESB601) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFAB4F6) '                     @YM04049\n         PUNCH ' INCLUDE AOSB3(IEFAB4FC) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJSWT)'                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEEVSMSG)'                        Y02953\n         PUNCH ' ORDER IEESB605 '                                Y02953\n         PUNCH ' ORDER IEFJSWT'                                  Y02953\n         PUNCH ' ORDER IEESB601 '                                Y02953\n         PUNCH ' ORDER IEFAB4FC '                                Y02953\n         PUNCH ' ORDER IEEVSMSG'                                 Y02953\n    PUNCH ' ENTRY IEESB605 '                                     Y02953\n    PUNCH ' ALIAS IEEVIC,IEEVICER '                              Y02953\n    PUNCH ' NAME  IEESB605(R) '                                  Y02953\n         PUNCH ' INCLUDE AOSB3(IEESB670) '                       Y02953\n    PUNCH ' NAME  IEESB670(R) '                                  Y02953\n.**********************************************************************\n.*                                                             @G64MP2D\n.*                  MASTER TRACE FACILITY                      @G64MP2D\n.*                                                             @G64MP2D\n.*  NOTE: IEEMB808 MUST BE FIRST MODULE IN THE LOAD MODULE     @G64MP2D\n.*        AND IEEMB816 MUST BE THE LAST                        @G64MP2D\n.*                                                             @G64MP2D\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEEMB808)'                      @G64MP2D\n         PUNCH ' INCLUDE AOSB3(IEEMB809)'                      @G64MP2D\n         PUNCH ' INCLUDE AOSB3(IEEMB816)'                      @G64MP2D\n         PUNCH ' ORDER IEEMB808(P)'                            @G64MP2D\n         PUNCH ' ORDER IEEMB809'                               @G64MP2D\n         PUNCH ' ORDER IEEMB816'                               @G64MP2D\n         PUNCH ' ALIAS IEEMB809'                               @G64MP2D\n         PUNCH ' ENTRY IEEMB808'                               @G64MP2D\n         PUNCH ' NAME  IEEMB808(R)'                            @G64MP2D\n.**********************************************************************\n.*                                                               Y02953\n.*                    CONVERTER                                  Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFVHA)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHC,IEFVHCB)'                  Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVINE,IEFVHM,IEFVHL)'           Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVINA) '                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVIND) '                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVINB) '                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVINC) '                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHEB)'                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB9CR)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB9CT)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVFA,IEFVFB)'                   Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVGM) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHQ)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHR)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHF)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVH1)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEZNCODE) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEZDCODE) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVGM90) '                     @G29ANSJ\n         PUNCH ' ENTRY IEFVH1'                                   Y02953\n    PUNCH ' NAME IEFVH1(R)'                                      Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*             INTERPRETER                                       Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFVHE)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVJA,IEFVEA,IEFVGK,IEFVGT)'     Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVDA,IEFVGI,IEFVGS,IEFVDBSD)'   Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHH) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVGM) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHQ)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHR)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFVHN)'                          Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB903)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB901)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB9IR)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB9IT)'                        Y02953\n    PUNCH ' ENTRY IEFNB903 '                                     Y02953\n    PUNCH ' NAME IEFNB903(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEFNB902) '                       Y02953\n    PUNCH ' NAME IEFVAMP(R) '                                    Y02953\n         PUNCH '/*'                                              Y02953\n&SGCTRLC(7)    SETC   '&SGCTRLC(20)'    SET VOLUME ID FOR LPALIB Y02953\n&SGCTRLC(8)    SETC   '&SGCTRLC(19)'    SET UNIT NAME FOR LPALIB Y02953\n&SGCTRLC(9)    SETC   'LPALIB'          SET DSNAME               Y02953\n&SGCTRLC(10)   SETC   ',LET'             SET PARMS FOR L.E.      Y02953\n&SGCTRLC(11)   SETC   ',RENT'            SET REENTRANT FOR L.E.  Y02953\n         COPY  SGLEDPK1                                          Y02953\n  PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3' Y02953\n  PUNCH '//AOSA1 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSA1' Y02953\n         COPY  SGLEDPK2                                          Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    BR14                                       Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFBR14)'                         Y02953\n    PUNCH ' NAME IEFBR14(R)'                                     Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    RESTART                                    Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFIB600)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB645)'                        Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB605,IEFXB601)'               Y02953\n         PUNCH ' INCLUDE AOSB3(IEFXB603,IEFXB609)'               Y02953\n         PUNCH ' INCLUDE AOSA1(IDAVBPJ2,IDDWIMRG) '              Y02953\n         PUNCH ' ORDER IEFIB600'                                 Y02953\n         PUNCH ' ORDER IEFIB605'                                 Y02953\n         PUNCH ' ORDER IEFXB601'                                 Y02953\n         PUNCH ' ORDER IDAVBPJ2,IDDWIMRG '                       Y02953\n         PUNCH ' ORDER IEFIB645'                                 Y02953\n         PUNCH ' ORDER IEFXB603,IEFXB609'                        Y02953\n         PUNCH ' ALIAS IEFXB603 '                                Y02953\n    PUNCH ' ENTRY IEFIB600 '                                     Y02953\n    PUNCH ' NAME IEFIB600(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEFXB602)'                        Y02953\n         PUNCH ' ALIAS IEF602'                                   Y02953\n    PUNCH ' NAME IEFXB602(R)'                                    Y02953\n    PUNCH '      INCLUDE AOSB3(IEFXB610) '                       Y02953\n    PUNCH ' NAME  IEFXB610(R) '                                  Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    DISPLAY CONSOLES                           Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEEXEDNA)'                        Y02953\n         PUNCH ' ENTRY IEEXEDNA'                                    MCS\n    PUNCH ' NAME IEEXEDNA(R) '                                   Y02953\n    PUNCH '/*  '                                                 Y02953\n         AIF (&GETB(3)).IOGEN8\n&SGCTRLC(7)  SETC  '&SGCTRLC(20)'       SET VOLUME FOR LPALIB    Y02953\n&SGCTRLC(8)  SETC  '&SGCTRLC(19)'       SET UNIT FOR LPALIB      Y02953\n&SGCTRLC(9)  SETC  'LPALIB'             SET DSNAME               Y02953\n&SGCTRLC(10) SETC  ',LET'                                        Y02953\n&SGCTRLC(11) SETC  ',RENT'                                       Y02953\n&SGCTRLC(12) SETC  ',AC=1'                                       Y02953\n         COPY  SGLEDPK1                                          Y02953\n PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3'  Y02953\n         COPY  SGLEDPK2                                          Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    RESTART                                    Y02953\n.*                                                               Y02953\n.**********************************************************************\n    PUNCH '      INCLUDE AOSB3(IEFRSTRT) '                       Y02953\n    PUNCH ' ALIAS IEFSMR '                                       Y02953\n    PUNCH ' NAME  IEFRSTRT(R) '                                  Y02953\n    PUNCH '/* '                                                  Y02953\n.IOGEN4  ANOP                                                  @G3800SJ\n         AIF   (&GETB(3) AND NOT &SGMENTB(38)).IOGEN9          @G3800SJ\n&SGCTRLC(7)  SETC  '&SGCTRLC(20)'       SET VOLUME FOR LPALIB    Y02953\n&SGCTRLC(8)  SETC  '&SGCTRLC(19)'       SET UNIT FOR LPALIB      Y02953\n&SGCTRLC(9)  SETC  'LPALIB'             SET DSNAME               Y02953\n&SGCTRLC(10) SETC  ',LET'                                        Y02953\n&SGCTRLC(11) SETC  ',RENT'                                       Y02953\n         COPY  SGLEDPK1                                          Y02953\n PUNCH '//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3'  Y02953\n         COPY  SGLEDPK2                                          Y02953\n         AIF   (&GETB(3)).IOGEN5                               @G3800SJ\n.**********************************************************************\n.*                                                               Y02953\n.*                    MASTER SCHEDULER                           Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEEPRTN2)  '                      Y02953\n         PUNCH ' ALIAS IEERGN '                                  Y02953\n    PUNCH ' NAME IEEPRTN(R) '                                    Y02953\n    PUNCH '      INCLUDE AOSB3(IEFJSREQ) '                       Y02953\n    PUNCH ' NAME  IEFJSREQ(R) '                                  Y02953\n    PUNCH '      INCLUDE AOSB3(IEFJSDTN) '                       Y02953\n    PUNCH ' NAME  IEFJSDTN(R) '                                  Y02953\n    PUNCH '      INCLUDE AOSB3(IEFJRASP) '                       Y02953\n    PUNCH ' NAME  IEFJRASP(R) '                                  Y02953\n    PUNCH '      INCLUDE AOSB3(IEFJDSNA) '                       Y02953\n    PUNCH ' NAME  IEFJDSNA(R) '                                  Y02953\n    PUNCH '      INCLUDE AOSB3(IEFJJTRM) '                       Y02953\n    PUNCH ' NAME  IEFJJTRM(R) '                                  Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJJOBS) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJCNTL) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJWTOM) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJJCLS) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJCDLT) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJACTL) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJREAD) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJWRTE) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJDIRD) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFJDWRT) '                       Y02953\n         PUNCH ' ORDER IEFJJOBS '                                Y02953\n         PUNCH ' ORDER IEFJJCLS '                                Y02953\n         PUNCH ' ORDER IEFJCNTL '                                Y02953\n         PUNCH ' ORDER IEFJCDLT '                                Y02953\n         PUNCH ' ORDER IEFJACTL '                                Y02953\n         PUNCH ' ORDER IEFJREAD '                                Y02953\n         PUNCH ' ORDER IEFJWRTE '                                Y02953\n         PUNCH ' ORDER IEFJDWRT '                                Y02953\n         PUNCH ' ORDER IEFJWTOM '                                Y02953\n         PUNCH ' ORDER IEFJDIRD '                                Y02953\n    PUNCH ' ENTRY IEFJJOBS '                                     Y02953\n    PUNCH ' NAME  IEFJSUBI(R) '                                  Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    INITIATOR                                  Y02953\n.*                                                               Y02953\n.**********************************************************************\n.IOGEN5  ANOP                                                  @G3800SJ\n         PUNCH ' INCLUDE SYSPUNCH(IEFSDPPT) '                  @G3800SJ\n         AIF   (&GETB(3)).IOGEN6                               @G3800SJ\n         PUNCH ' INCLUDE AOSB3(IEFIIC) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD160) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB620) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB621) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFI922B) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB650) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD161) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFDSTBL) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFDSLST) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFICPUA) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIMASK) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD101) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSMFIE) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFUJI) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFUSI) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD102) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD162) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFICATL) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFQB585) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFXB604) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFXB500) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD103) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD263) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFAB820) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFIB660) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFUTL) '                         Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD164) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFSD166) '                       Y02953\n         AGO   .IOGEN7                                         @G3800SJ\n.IOGEN6  ANOP                                                  @G3800SJ\n         PUNCH ' INCLUDE SYSLMOD(IEFSD060)'                    @G3800SJ\n.IOGEN7  ANOP                                                  @G3800SJ\n         PUNCH ' ORDER IEFIIC  '                                 Y02953\n         PUNCH ' ORDER IEFSD060  '                               Y02953\n         PUNCH ' ORDER IEFIB620  '                               Y02953\n         PUNCH ' ORDER IEFIB621  '                               Y02953\n         PUNCH ' ORDER IEFI922B  '                               Y02953\n         PUNCH ' ORDER IEFIB650  '                               Y02953\n         PUNCH ' ORDER IEFSD061  '                               Y02953\n         PUNCH ' ORDER IEFDSTBL  '                               Y02953\n         PUNCH ' ORDER IEFDSLST  '                               Y02953\n         PUNCH ' ORDER IEFICPUA '                                Y02953\n         PUNCH ' ORDER IEFIMASK '                                Y02953\n         PUNCH ' ORDER IEFSD101  '                               Y02953\n         PUNCH ' ORDER IEFSMFIE  '                               Y02953\n         PUNCH ' ORDER IEFUJI  '                                 Y02953\n         PUNCH ' ORDER IEFUSI  '                                 Y02953\n         PUNCH ' ORDER IEFSDPPT  '                               Y02953\n         PUNCH ' ORDER IEFSD102  '                               Y02953\n         PUNCH ' ORDER IEFSD062  '                               Y02953\n         PUNCH ' ORDER IEFICATL  '                               Y02953\n         PUNCH ' ORDER IEFQB585  '                               Y02953\n         PUNCH ' ORDER IEFXB604  '                               Y02953\n         PUNCH ' ORDER IEFXB500  '                               Y02953\n         PUNCH ' ORDER IEFSD103  '                               Y02953\n         PUNCH ' ORDER IEFSD263  '                               Y02953\n         PUNCH ' ORDER IEFAB820  '                               Y02953\n         PUNCH ' ORDER IEFIB660  '                               Y02953\n         PUNCH ' ORDER IEFUTL  '                                 Y02953\n         PUNCH ' ORDER IEFSD064  '                               Y02953\n         PUNCH ' ORDER IEFSD066  '                               Y02953\n    PUNCH ' ALIAS IEFIIC '                                       Y02953\n    PUNCH ' ENTRY IEFSD060'                                      Y02953\n    PUNCH ' NAME IEFSD060(R)'                                    Y02953\n         AIF    (&GETB(3)).IOGEN8                              @G3800SJ\n         PUNCH  ' INCLUDE AOSB3(IEFUJV)'                         Y02953\n    PUNCH ' NAME IEFUJV(R)'                                      Y02953\n.**********************************************************************\n.*                                                               Y02953\n.*                    SWA MANAGER                                Y02953\n.*                                                               Y02953\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFQB550,IEFQB555)'               Y02953\n         PUNCH ' INCLUDE AOSB3(IEFQB580) '                       Y02953\n         PUNCH ' INCLUDE AOSB3(IEFXB500) '                       Y02953\n         PUNCH ' ORDER IEFQB550(P) '                             Y02953\n         PUNCH ' ORDER IEFQB555 '                                Y02953\n         PUNCH ' ORDER IEFQB580 '                                Y02953\n         PUNCH ' ORDER IEFXB500 '                                Y02953\n         PUNCH ' ALIAS IEFQB555,IEFQB580 '                       Y02953\n         PUNCH ' ALIAS IEFXB500 '                                Y02953\n         PUNCH ' ENTRY IEFQB550'                                 Y02953\n    PUNCH ' NAME IEFQB550(R)'                                    Y02953\n         PUNCH ' INCLUDE AOSB3(IEFQB585)'                        Y02953\n         PUNCH ' ALIAS IEFQBVMS,IEFQMLK1'                        Y02953\n         PUNCH ' ALIAS IEFQMSSS,IEFQMRAW '                       Y02953\n         PUNCH ' ALIAS IEFQAGST,IEFQASGN '                       Y02953\n         PUNCH ' ALIAS IEFQDELQ,IEFQDELE '                       Y02953\n         PUNCH ' ALIAS IEFQASGQ'                                 Y02953\n         PUNCH ' ENTRY IEFQB585'                                 Y02953\n    PUNCH ' NAME IEFQB585(R) '                                   Y02953\n.**********************************************************************\n.*\n.*                    INTERPRETER\n.*\n.**********************************************************************\n         PUNCH ' INCLUDE AOSB3(IEFVGM1)'                         Y02953\n    PUNCH ' NAME IEFVGM1(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM2)'                         Y02953\n    PUNCH ' NAME IEFVGM2(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM3)'                         Y02953\n    PUNCH ' NAME IEFVGM3(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM4)'                         Y02953\n    PUNCH ' NAME IEFVGM4(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM5)'                         Y02953\n    PUNCH ' NAME IEFVGM5(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM6)'                         Y02953\n    PUNCH ' NAME IEFVGM6(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM7)'                         Y02953\n    PUNCH ' NAME IEFVGM7(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM8)'                         Y02953\n    PUNCH ' NAME IEFVGM8(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM9)'                         Y02953\n    PUNCH ' NAME IEFVGM9(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM10)'                        Y02953\n    PUNCH ' NAME IEFVGM10(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM11)'                        Y02953\n    PUNCH ' NAME IEFVGM11(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM12)'                        Y02953\n    PUNCH ' NAME IEFVGM12(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM13)'                        Y02953\n    PUNCH ' NAME IEFVGM13(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM14)'                        Y02953\n    PUNCH ' NAME IEFVGM14(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM15)'                        Y02953\n    PUNCH ' NAME IEFVGM15(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM16)'                        Y02953\n    PUNCH ' NAME IEFVGM16(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM17)'                        Y02953\n    PUNCH ' NAME IEFVGM17(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM18)'                        Y02953\n    PUNCH ' NAME IEFVGM18(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM19)'                        Y02953\n    PUNCH ' NAME IEFVGM19(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM67)'                        Y02953\n    PUNCH ' NAME IEFVGM67(R)'                                     20002\n         PUNCH ' INCLUDE AOSB3(IEFVGM70)'                        Y02953\n    PUNCH ' NAME IEFVGM70(R)'\n         PUNCH ' INCLUDE AOSB3(IEFVGM71) '                       Y02953\n    PUNCH ' NAME IEFVGM71(R) '                                     O106\n         PUNCH ' INCLUDE AOSB3(IEFVGM76) '                       Y02953\n    PUNCH ' NAME IEFVGM76(R) '                                    20002\n         PUNCH ' INCLUDE AOSB3(IEFVGM78)'                        Y02953\n    PUNCH ' NAME IEFVGM78(R)'                                    Y02953\n.IOGEN8  ANOP                                                  @G3800SJ\n         PUNCH '/*  '                                            Y02953\n.IOGEN9  ANOP                                                  @G3800SJ\n         SGIKJ441                                                Y02953\n.END     MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP1": {"ttr": 5641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x03\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x05\\x9f\"\\x05\\x00\\x1e\\x00\\x05\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.03", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-02-28T22:05:00", "lines": 30, "newlines": 5, "modlines": 0, "user": "BRIAN"}, "text": "//BRIAN    JOB (ASSEMBLY),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=BRIAN\n//SG15 EXEC LINKS2,\n// PARM='NCAL,LIST,XREF,LET,RENT'\n//AOSB3  DD  DSN=SYS1.AOSB3,DISP=SHR\n//SYSLIN DD *\n INCLUDE AOSB3(IEFVHA)\n INCLUDE AOSB3(IEFVHC,IEFVHCB)\n INCLUDE AOSB3(IEFVINE,IEFVHM,IEFVHL)\n INCLUDE AOSB3(IEFVINA)\n INCLUDE AOSB3(IEFVIND)\n INCLUDE AOSB3(IEFVINB)\n INCLUDE AOSB3(IEFVINC)\n INCLUDE AOSB3(IEFVHEB)\n INCLUDE AOSB3(IEFNB9CR)\n INCLUDE AOSB3(IEFNB9CT)\n INCLUDE AOSB3(IEFVFA,IEFVFB)\n INCLUDE AOSB3(IEFVGM)\n INCLUDE AOSB3(IEFVHQ)\n INCLUDE AOSB3(IEFVHR)\n INCLUDE AOSB3(IEFVHF)\n        CHANGE IEFVHA(IEFVPP0) PRIVATE PROCLIB\n INCLUDE AOSB3(IEFVH1)\n INCLUDE AOSB3(IEZNCODE)\n INCLUDE AOSB3(IEZDCODE)\n INCLUDE AOSB3(IEFVGM90)\n INCLUDE AOSB3(IEFVPP) PRIVATE PROCLIB\n ENTRY IEFVH1\n NAME IEFVH1(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP1A": {"ttr": 5643, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f!E\\x00\\x06\\x00\\x06\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T21:45:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "BRIAN"}, "text": "++ MACUPD (SGIEF441)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF441,LIST=ALL\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) PRIVATE PROCLIB' #DYP001\n*        NEW CSECT FOR PRIVATE PROCLIB                          #DYP001\n         PUNCH '         INCLUDE AOSB3(IEFVPP) PRIVATE PROCLIB' #DYP001\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP2": {"ttr": 5645, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x05o\"\\x13\\x00y\\x00y\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-02-25T22:13:00", "lines": 121, "newlines": 121, "modlines": 0, "user": "BRIAN"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "STEP3": {"ttr": 5891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x05o\"\\x13\\x00\\x16\\x00\\x16\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-02-25T22:13:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "BRIAN"}, "text": "++ ZAP   (IEFVHF)  DISTLIB (AOSB3)  .\n         NAME  IEFVHF\n*\n*        STATEMENTS BELOW ARE FOR BASE JBB1329 (MVS/SP 1.3.3)\n*\n         VER   0000 05B0           BALR R11,0 (BASE=0002)\n*\n         VER   00DA 5830,C0EC      L    R3,WANELPTR\n*\n         VER   0260 0000,0000      START OF NEEDED PATCH AREA\n         VER   0264 0000,0000      NEEDED PATCH AREA\n         VER   0268 0000,0000      NEEDED PATCH AREA\n         VER   026C 0000,0000      END OF NEEDED PATCH AREA\n*\n         REP   0260 5830,C0EC      L    R3,WANELPTR OVERLAID INSTRUCT\n         REP   0264 58F0,C3A0      L    R15,RFULLE  (ANCHOR WORD)\n         REP   0268 58F0,F058      L    R15,PPVPP3  A(IEFVPP3)\n         REP   026C 07FF           BR   R15  RETURN ON R14\n*\n         REP   00DA 45E0,B25E      BAL  R14,PATCH\n*\n         IDRDATA #DYP003\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP3A": {"ttr": 5893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f\"!\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T22:21:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "BRIAN"}, "text": "//SYZYGYB  JOB  (PS01),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=SYZYGYB,REGION=600K\n//*\n//*\n//*   REFER   SYZYGYB.PDS.DATA(AMASPZP)\n//ZAPIT EXEC PGM=AMASPZAP,REGION=512K\n//SYSLIB DD DSN=SYZYGY.LPALIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n DUMPT IEFVH1 IEFVHF\n NAME  IEFVH1 IEFVHF\n*\n*\n         VER   0000 05B0           BALR R11,0 (BASE=0002)\n*\n         VER   00DA 5830,C0EC      L    R3,WANELPTR\n*\n         VER   0260 0000,0000      START OF NEEDED PATCH AREA\n         VER   0264 0000,0000      NEEDED PATCH AREA\n         VER   0268 0000,0000      NEEDED PATCH AREA\n         VER   026C 0000,0000      END OF NEEDED PATCH AREA\n*\n         REP   0260 5830,C0EC      L    R3,WANELPTR OVERLAID INSTRUCT\n         REP   0264 58F0,C3A0      L    R15,RFULLE  (ANCHOR WORD)\n         REP   0268 58F0,F058      L    R15,PPVPP3  A(IEFVPP3)\n         REP   026C 07FF           BR   R15  RETURN ON R14\n*\n         REP   00DA 45E0,B25E      BAL  R14,PATCH\n*\n         IDRDATA #DYP003\n DUMPT IEFVH1 IEFVHF\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP4": {"ttr": 5895, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"P\\x01\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x07_\\x19'\\x00$\\x00$\\x00\\x00\\xe2\\xe8\\xe9\\xe8\\xc7\\xe8\\xf1@@@\"", "ispf": {"version": "80.01", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-03-16T19:27:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "SYZYGY1"}, "text": "++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n*\n         VER   0000 05B0                    BALR RB,0     (BASE=0002)\n         VER   003A 58A0,B012               L    RA,VFA02 (BASE=1002)\n*\n         VER   071C 2000           TXTBFLEN DC   H'8192'\n*\n         VER   071E 45E0,BB68               BAL  R14,AOTXTLTH\n*\n         VER   0B6A 5850,C02C      AOTXTLTH L    R5,TEXTBUFP\n*\n         VER   1DF0 D7E3,C3C8               DC   C'PTCH'\n         VER   1E20 0000,0000,0000,0000     START OF NEEDED PATCH AREA\n         VER   1E28 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E30 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E38 0000,0000               END OF NEEDED PATCH AREA\n*\n         VER   23A1 16E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   23A1 16E2,E8E2,D7D9,D6C3,7E01,40  SYSPROC=\n*\n         REP   1E20 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E24 58F0,F05C               L    R15,PPVPP4 A(IEFVPP4)\n         REP   1E28 05EF                    BALR R14,R15\n         REP   1E2A 45E0,BB68               BAL  R14,AOTXTLTH\n         REP   1E2E 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E32 58F0,F060               L    R15,PPVPP5 A(IEFVPP5)\n         REP   1E36 41E0,B720               LA   R14,RETURN ADDRESS\n         REP   1E3A 07FF                    BR   R15\n*\n         REP   071E 47F0,AE1E               B    PATCH AREA\n*\n         IDRDATA #DYN004\n*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP4A": {"ttr": 5897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"P\\x02\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x07_\\x19'\\x00.\\x00.\\x00\\x00\\xe2\\xe8\\xe9\\xe8\\xc7\\xe8\\xf1@@@\"", "ispf": {"version": "80.02", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-03-16T19:27:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "SYZYGY1"}, "text": "//SYZYGYB  JOB  (PS01),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=SYZYGYB,REGION=600K\n//*\n//*\n//*   REFER   SYZYGYB.PDS.DATA(AMASPZP)\n//ZAPIT EXEC PGM=AMASPZAP,REGION=512K\n//SYSLIB DD DSN=SYZYGY.LPALIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n DUMPT IEFVH1 IEFVFA\n NAME  IEFVH1 IEFVFA\n*\n*\n         VER   0000 05B0                    BALR RB,0     (BASE=0002)\n         VER   003A 58A0,B012               L    RA,VFA02 (BASE=1002)\n*\n         VER   071C 2000           TXTBFLEN DC   H'8192'\n*\n         VER   071E 45E0,BB68               BAL  R14,AOTXTLTH\n*\n         VER   0B6A 5850,C02C      AOTXTLTH L    R5,TEXTBUFP\n*\n         VER   1DF0 D7E3,C3C8               DC   C'PTCH'\n         VER   1E20 0000,0000,0000,0000     START OF NEEDED PATCH AREA\n         VER   1E28 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E30 0000,0000,0000,0000     NEEDED PATCH AREA\n         VER   1E38 0000,0000               END OF NEEDED PATCH AREA\n*\n         VER   23A0 16E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   23A0 16E2,E8E2,D7D9,D6C3,7E01,40  SYSPROC=\n*\n         REP   1E20 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E24 58F0,F05C               L    R15,PPVPP4 A(IEFVPP4)\n         REP   1E28 05EF                    BALR R14,R15\n         REP   1E2A 45E0,BB68               BAL  R14,AOTXTLTH\n         REP   1E2E 58F0,C3A0               L    R15,RFULLE (ANCHOR)\n         REP   1E32 58F0,F060               L    R15,PPVPP5 A(IEFVPP5)\n         REP   1E36 41E0,B720               LA   R14,RETURN ADDRESS\n         REP   1E3A 07FF                    BR   R15\n*\n         REP   071E 47F0,AE1E               B    PATCH AREA\n*\n         IDRDATA #DYN004\n*\n DUMPT IEFVH1 IEFVFA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP5": {"ttr": 5899, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x00\\x01\\x03\\x05o\\x01\\x03\\x05o\"\\x14\\x00\\x15\\x00\\x15\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2003-02-25T00:00:00", "modifydate": "2003-02-25T22:14:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "BRIAN"}, "text": "++ ZAP   (IEFVHE)  DISTLIB (AOSB3) .\n         NAME  IEFVHE\n*\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*\n         VER   0060 5860,C0EC      VHE0010 L R6,WANELPTR\n*\n         VER   014E D700,C16E,C16E         XC   SWY2(1),SWY2\n*\n         VER   02A0 0000,0000,0000,0000    START OF NEEDED PATCH AREA\n         VER   02A8 0000,0000,0000,0000    END OF NEEDED PATCH AREA\n*\n         REP   02A0 9180,7002              TM   STRINDCS,JPROCSTR\n         REP   02A4 4710,B05E              BO   VHE0010\n         REP   02A8 D700,C16E,C16E         XC   SWY2(1),SWY2\n         REP   02AE 07FF                   BR   R15  RETURN\n*\n         REP   014E 45F0,B29E,0700         BAL  R15,PATCH; NOPR 0\n*\n         IDRDATA #DYP005\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STEP5A": {"ttr": 5901, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x01\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f\"\"\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc2\\xd9\\xc9\\xc1\\xd5@@@@@'", "ispf": {"version": "80.01", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T22:22:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "BRIAN"}, "text": "//SYZYGYB  JOB  (PS01),'SYSTEMS*BRIAN',CLASS=A,MSGCLASS=A,\n//         NOTIFY=SYZYGYB,REGION=600K\n//*\n//*\n//*   REFER   SYZYGYB.PDS.DATA(AMASPZP)\n//ZAPIT EXEC PGM=AMASPZAP,REGION=512K\n//SYSLIB DD DSN=SYZYGY.LPALIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n DUMPT IEFNB903 IEFVHE\n NAME  IEFNB903 IEFVHE\n*\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*\n         VER   0060 5860,C0EC      VHE0010 L R6,WANELPTR\n*\n         VER   014E D700,C16E,C16E         XC   SWY2(1),SWY2\n*\n         VER   02A0 0000,0000,0000,0000    START OF NEEDED PATCH AREA\n         VER   02A8 0000,0000,0000,0000    END OF NEEDED PATCH AREA\n*\n         REP   02A0 9180,7002              TM   STRINDCS,JPROCSTR\n         REP   02A4 4710,B05E              BO   VHE0010\n         REP   02A8 D700,C16E,C16E         XC   SWY2(1),SWY2\n         REP   02AE 07FF                   BR   R15  RETURN\n*\n         REP   014E 45F0,B29E,0700         BAL  R15,PATCH; NOPR 0\n*\n         IDRDATA #DYP005\n DUMPT IEFNB903 IEFVHE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT619/FILE619.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT619", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}