CICS/ESA 3.2 and other recent announcements

IBM announced CICS/ESA Version 3.2 for MVS on 5
September, 1990 P just one announcement among more than
one hundred that make up System/390.  An overview of that
announcement was included in the October issue of CICS
Update.  Significantly more detail is now available, including
recently-updated Release and Migration Guides that cover both
3.1.1 and 3.2, and a Field Television Network (IBM's satellite
television broadcasts seen throughout North America) Product
Update broadcast on 22 January, 1991.

As well as detailing many of the new features of CICS 3.2,
Bob Yelavich and Steve Zemblowski, both of the IBM Dallas
Systems Center, provided an update on new features of all
recently-announced versions of CICS along with some helpful
recommendations based on the experiences of early 3.2 users,
both within and outside of IBM.  Although not a transcript,
what follows is some of the information gleaned from this
broadcast.


MIGRATING FROM VERSION 2 TO 3.2

One customer outside of IBM has measured a reduction in CPU
time exceeding 30 percent as a result of converting from CICS
Version 2 to Version 3.  News like this travels fast and may be
one reason for the rapid acceptance, and installation, of
CICS/ESA Version 3.1.1.  So rapid, in fact, that IBM has been
caught off-guard, not scheduling enough CICS Version 3
education to meet customer demand.

Perhaps the most frequently-asked question about CICS/ESA
3.2 comes from CICS/MVS Version 2 customers, partly as a
result of the very short period (one month) between CICS/ESA
Version 3.1.1 availability and the announcement of Version
3.2, is "Should I skip 3.1.1 and go straight to 3.2?"  To ease
the migration effort, IBM suggests that Version 3.1.1 is
installed before Version 3.2.  Past experience bears this out.
With the exception of skipping a maintenance release with no
new or removed features, skipping a release in any heavily-
used IBM software product often means dealing with more
change than can be effectively managed without disrupting
service to end-users.

Given an installation running Version 2.1.1 in production, with
a goal of moving to Version 3.2, the ideal plan would see
Version 2.1.1 co-existing during the conversion.  Any
applications using functions provided by Version 2, but not
supported by Version 3.2, would be modified and tested in the
stable and well understood Version 2 environment.  As Version
3.1.1, and later Version 3.2, are installed, the applications
would be moved and tested in each.  Because Version 3 is very
different from Version 2, especially in terms of problem
determination, this three-step approach can significantly reduce
the amount of change in each step.

Applications that are deemed too difficult to convert can be left
to run under Version 2.1.1 indefinitely.  For example, a large
on-line system written in a mixture of macro-level COBOL and
Assembler may not be worth converting if it will be replaced in
two years.  Although IBM has made no official announcement
on the subject, Bob Yelavich expressed his personal opinion
that CICS/MVS Version 2 would be supported for a minimum
of five more years.


ENHANCEMENTS TO OTHER CICS VERSIONS

CICS Version 2 is still being enhanced.  A recent APAR
(PL52316) addresses a long-standing problem with deadlock
management.  Code was borrowed from Version 3 and
retrofitted to Version 2.1.1.

CICS/OS/VS Version 1.7 was withdrawn from marketing in
September 1989.  Although it is still actively supported, do not
expect any future enhancements now that it has been stabilized.
Discontinuation of support (end of currency) has yet to be
announced.

CICS/VSE Version 2.1 became available at the beginning of
this year.  Unlike the MVS CICS/ESA Version 3, it is not
based on a restructured code base and there is no loss of macro-
level coding support.  The distribution of DFHMSCAN, which
detects the use of macro-level coding in load modules, was in
no way intended to announce the discontinuation of macro
support.  VSE CICS sites had requested DFHMSCAN from
IBM so they could detect and remove macro dependencies, as a
way to plan for their long-term future, whether that be in VSE
or MVS.

CICS/VSE Version 2.1 brings many of the features available in
newer MVS versions of CICS to the VSE community, such as:

o      Extended Recovery Facility (XRF).

o      Dynamic Transaction Routing (DTR) via a user-
      replaceable program.

o      Transaction routing for LU6.2 devices/systems using
APPC.

o      CICS OS/2 connectivity.

o      First failure data capture.

o      Off-line dump analysis.

o      Performance improvements for MRO and cold start/warm
      shutdown.

o      SAA support through VS COBOL II.

Support for a C compiler and the ability to run C and VS
COBOL II programs above the 16-megabyte line has been
promised for a future release.  Note too, that CICS/VSE
Version 2.1 was announced as part of System/390, and, as
such, IBM has only tested it, and will only support it, in the
VSE/ESA environment.

Although originally announced at the end of 1989, CICS OS/2
Version 1.20 was enhanced by a November, 1990,
announcement.  All the pieces appear to finally be in place for
cooperative processing:  the ability to spread the CICS work
load between the host and the workstation.  Although the
Distributed Program Link (DPL) requires that the transaction
begins on the workstation, programs on either the mainframe or
the workstation can call each other, and pass information via
the DFHCOMMAREA.  Using LU6.1 or LU6.2, CICS OS/2
can now communicate with IMS on the host.

Integration with other OS/2-based applications is provided by
the External Call Interface (ECI).  ECI allows CICS code to be
invoked by non-CICS code, with data passed to and from the
application.  Although designed so that EASEL can front-end
CICS applications, this non-CICS code can be either a custom-
written application or a product like a spreadsheet or database.
Although a full discussion of EASEL is beyond the scope of
this article, suffice it to say that EASEL can be used to provide
a full Graphic User Interface (GUI) for CICS applications.
Products providing an Application Program Interface (API) can
also be called by CICS.

Several capabilities have been added to simplify the
distribution of new versions of both applications and CICS
OS/2 itself.  Enhanced import/export functions and support for
the SAA Delivery Manager/MVS allow centralized control of
distribution and installation of CICS OS/2 modules,
applications, maps, tables, and data objects, as well as user
programs throughout a LAN.

Anyone interested in installing CICS OS/2 is encouraged to
order the Implementation red manual (see bibliography).
Intended to supplement, not replace, the CICS OS/2 System
and Application Guide (SC33-0616), its documented examples
are actually live code used in an installation of the product by
an IBMer.

Micro Focus is also selling CICS OS/2 as an option for their
workbench.  Copies purchased as a package in this way will be
supported by Micro Focus.  IBM provides the support for
copies purchased separately, even if used with the workbench.


ASSOCIATED PRODUCTS

The 5 September, 1990, announcement of QMF Version 3.1
included full support for CICS, totally eliminating the need to
run QMF in TSO.  A subsequent announcement has expanded
the support past CICS Version 3 and now includes CICS
Version 2.1.1.  IBM recommends one dedicated CICS
Application Owning Region (AOR) for each 50 QMF users.
QMF Version 3.1 became available at the beginning of the
year.

RACF Version 1.9 eliminates the need for an SNT providing
the information in a CICS segment in RACF profiles.  An SNT
migration utility is also provided that will generate a TSO
CLIST of RACF ADD commands to define the CICS attributes
you already have in place via the SNT.  This new version also
supports LU6.2 bind time security (ie passwords), but VTAM
Version 3.3 is required to support this feature.

You can still run RACF Versions 1.8 and 1.8.1 with CICS
Version 3.2, but then the SNT cannot be eliminated from
within CICS.  The SNT will, however, include only attributes.

A general caution was also offered in the area of security.  Any
security product or in-house system that does not conform to
the documented external security interface may not work with
CICS/ESA Version 3.

Also in the area of security, it is no longer possible to turn off
the CICS call to an external security interface.  CICS users
who are not actually signed on to CICS are now assigned a
default user-id.  In addition, a new command has been added:
EXEC CICS QUERY SECURITY.


PERFORMANCE IMPROVEMENTS

Steve Zemblowski summed up Version 3.2's most important
improvement in two words P constraint relief.  In fact, a new
phrase has been coined to highlight it P Virtual Storage
Constraint Elimination.

Version 3 of CICS began with a new code base.  A domain-
based architecture includes a formalized internal interface
between domains.  A new concept to CICS, the storage
manager domain, internally manages storage, eliminating
Version 2.1.1's very expensive use of GETMAIN/FREEMAIN
for every piece of storage obtained or released above the 16-
megabyte line.

All CICS code rewritten for Version 3 is re-entrant.  This
allows it to be considered for placement in the LPA and the
ELPA.  For installations running several CICS regions, this
sharing of code could reduce real storage requirements.  With
major portions of CICS pre-loaded in the LPA or ELPA, the
time required to bring up a region could also be significantly
reduced.

Version 3 also exploits multi-processor systems, as well as
adding RDO for VSAM files and LSR pools, eliminating the
delays and tedious coding associated with macro-based CICS
tables.

Exception tracing has been added to write trace entries for
critical conditions even if trace is off.  As well as dump
enhancements, the cost of running the CICS monitor facility
and other statistics has been cut in half from Version 2.
Sample code is also provided to demonstrate how statistics
could be displayed on-line.

Version 3.2 moved more than two hundred nucleus modules
above the 16-megabyte line, leaving 400K still below the line,
including the JES2 interface and code for DL/I and TCAM.
All CICS-supplied transactions, which start with the letter C,
are now above the line.  The TCT and more than sixty other
control blocks now reside above the line.  The DCT, PCT,
PPT, and SNT must be re-linked (RMODE, AMODE) to make
them eligible for storage above the line.

Installations do have some control over where certain control
blocks are located.  TCUALOC in the SIT controls placement
of the TCT User Area.  Other application program-referenced
control blocks, including the TWA and EIB, are controlled by
specifying either BELOW or ANY for TASKDATALOC and
DATALOCATION.

Performance is improved when all programs in a CICS region
can run entirely above the line.  Code within Version 3.2
automatically detects this situation and eliminates the constant
movement of control blocks above and below the line.

MRO has been enhanced to reduce the amount of time spent
each time a CICS region is given control by MVS.  Rather than
scanning through a large number of entries before selecting a
piece of work to be performed, and possibly losing control
before doing any useful work, the work queue has been
separated into two different queues, deferred and immediate,
with the immediate queue scanned first.

The rewriting of File Control, coupled with the elimination of
macro-level support, has meant that the amount of code
executed in a typical File Control operation (ie the path length)
has been significantly reduced.  As well as eliminating the
FWA, another major factor has been the elimination of the
need to convert from command-level to macro-level back to
command-level for each EXEC CICS operation that involves
File Control.  Previously, this had been required for macro-
level compatibility.

Temporary storage queues have also seen a complete redesign
of their internal structure.  The disadvantage of sequentially
scanning queues has been eliminated by keeping the most
frequently used entries at the top of the queue.

On the tuning front, a sample statistics program is provided to
show the potential of the new statistics provided by CICS.  The
sample program focuses on storage analysis and could be used
to tune the DSA.


ELIMINATED FUNCTION

Version 3.1.1's removal of macro support for high level
languages, and Version 3.2's removal of macro support for
Assembler brought with it the need to detect macro coding
inadvertently executed.  Registers 12 and 13 now point to
protected areas, and any attempts to use these areas, as macro-
based code did, will result in an ASRD transaction abend and
the automatic disabling of the transaction.  Certain other
actions of macro-based code are detected, resulting in an abend
of the entire CICS region.

A sceptical customer actually put IBM to the test by attempting
to run several macro-based programs in CICS Version 3, and
found that not one macro usage went undetected.

All of that said, however, all releases of CICS Version 3
maintain object-level compatibility for command-level
programs written for previous versions of CICS.  The only
exception is the use of the EXEC CICS ADDRESS function.

To address the need to identify EXEC CICS ADDRESS CSA
usage in command-level programs, DFHMSCAN is expected
to be enhanced by the middle of 1991 to detect its usage.


EXITS

A lot has changed in the area of code written by systems
programmers for CICS.  User Replaceable Modules (URMs)
now number only five:  DFHPEP, DFHTEP, DFHNEP,
DFHXJCC, and DFHXJCO.  The DFHCOMMAREA passed
to each module by CICS now contains a lot of useful
information that was difficult to find in past versions.  Two
new commands, ASSIGN and DISCARD, are also provided
for use either in an EXEC CICS command or through CEMT.
Although a terminal cannot yet be discarded, IBM understands
the need for a future release.

With the rewriting of File Control comes a change in the global
user exits available.  Previously providing four, CICS now
provides only two:  XFCREQ and XFCREQC.  XFCREQ is
given control before File Control and XFCREQC after.  A user
area is passed between them allowing communication.

Other global user exits are:

o      XMEOUT P message suppression and re-routing

o      XSRAB P SRT replacement

o      XPCHAIR/XPCFTH/XPCTA P abend handlers

o      XSTERM P called at CICS termination.


APPLICATION PROGRAMMING

With the new ENQ MAXLIFETIME command, it is now
possible to prevent enqueues from lasting longer than the life of
a Logical Unit of Work (LUW), program, or task.  EXEC
CICS RETURN has also been enhanced to allow termination of
the current transaction and immediate start of another
transaction, without end-user input.

A part of SAA, Common Programming Interface -
Communications (CPI-C) support is provided, but is not
documented in the CICS manuals.  A CPI-C manual (see
bibliography) documents its use in CICS.  Two notes of
caution:  EDF does not support CPI-C usage and CPI-C and
normal EXEC CICS communications with the terminal cannot
be mixed in a single conversation.

CICS Version 3 has also been enhanced to meet standards in
two other ways.

1      To implement SAA's Common User Access (CUA),
      BMS has been enhanced to provide a Cursor Locate option
      that will return the location of the cursor on the screen
      when the ENTER or other action key was struck by the
user.

2      Because much of the LU6.2 support in CICS was added
      before the LU6.2 standard had actually been written,
      corrections have been made to Version 3 to make CICS
      LU6.2 support match the final published standard.

A very powerful feature added is the ability to call
DFHCSDUP from within CICS application code, providing a
programmable interface to CEDA.  In this way resources can
be defined, installed, used, and then de-installed, without
explicit human intervention.


INSTALLATION MANAGEMENT

When used in conjunction with VTAM Version 3.3, auto-
install using model terminal support allows terminal and printer
model information to be defined once, in VTAMLST, and
automatically passed to CICS.  The alternative requires
defining everything twice, with the perpetual problem of
dealing with information that does not match.


PROBLEM DETERMINATION

CICS Version 3.1 began the move towards new message
numbers, in the format DFHmmnnn, where mm is the domain-
id.  With Version 3.2, there are now more than one thousand
messages in the new format.  Recognizing the importance of
message numbers and text in automated operations, IBM has
also enhanced message generation so that the application-id can
now be inserted in messages.

A dump enhancement allows not only dumps to be forced, but
also the message number to be specified.  This can be done via
EXEC CICS SET or CEMT.


STATEMENT OF DIRECTION

Future releases of CICS will allow XRF to use PR/SM with
cross systems coupling to provide even more reliability.


BIBLIOGRAPHY AND OTHER SOURCES OF INFORMATION

o      GC33-0655-02 CICS Release Guide

o      GC33-0656-02 CICS Migration Guide

      -      for the two above, be sure you have the latest edition

o      GG66-3176 CICS/MVS Version 2 Benefits

      -      includes benchmarks;  part of GBOF-2008

o      GG66-3148 CICS OS/2 Implementation

o      GG24-3520 APPC Product Implementation

o      SC33-0139 CICS Primer

      -      code in book is shipped with CICS

o      SC26-4399-01 SAA CPI Communications Reference.

IBM is hosting a CICS Technical Conference for CICS
decision makers in New Orleans from 16 to 19 April.



Jon E Pearkins

Certified Software Specialists Ltd (Canada)



