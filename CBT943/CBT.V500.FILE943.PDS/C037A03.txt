 Solving virtual storage constraints using SSDs
Many installations currently running CICS either have their backs up against the
Virtual Storage Constraint (VSC) wall or are approaching it quickly.  To gain
some relief many are considering a migration to MVS/XA or MRO/ISC links.
Several factors cause this problem; however, by taking advantage of new I/O
devices, such as Solid State Disks (SSDs), the problem might be resolved with
other performance aspects as well.  Until the appearance of such devices the
TsimpleU way of tackling performance problems in CICS was to put almost
everything in core, thus the I/O time was eliminated.  This approach was adopted
by many shops who did the following:
%    Marked most programs TresidentU.
%    Used temporary storage in core (MAIN) rather than the external file (AUX).
%    Increased their file buffers.
Obviously the more programs marked TresidentU, the less storage is available for
the Dynamic Storage Area (DSA).  The DSA is that area left after CICS has
acquired what it needs for resident programs plus various control blocks.
Let us examine some areas where an SSD would benefit the CICS environment.
THE RESIDENT MODULE AREA
The first area that stands out is the area reserved for resident load modules.
Examining most installations, one would find many modules unnecessarily marked
TresidentU.  I think that this stems from the early days of CICS when people
said, Rmark everything resident and let the paging supervisor perform the I/O
because it is faster than the CICS loadS.  Two things made this statement true:
%    Paging volumes were isolated on a channel by themselves.
%    CICS loading was serial, and the libraries were normally not on isolated
channels.
In most systems, the size of the resident application program varied from
installation to installation: it could be anything up to 1Mb and sometimes
beyond this.
TEMPORARY STORAGE MAIN
The use of the DSA for temporary storage accounts for the second, less obvious,
area where an SSD could be useful.  At many installations auxiliary storage is
not used because of the I/O.  However, taking into consideration the life and
size of a temporary storage record and the total amount of virtual storage
needed to back up the whole amount of records to be stored at any one time, this
will lead to a DSA shortage (normally called Tprogram compressionU) and as a
result to performance degradation.
There are many reasons why the DSA will shrink or expand.  There are also
reasons for marking a program TresidentU.  In both instances the DSA can be
increased without increasing the region size.  This can be done by placing
auxiliary temporary storage and the CICS load libraries on an SSD.  The CICS
load library can be defined either as a normal PDS or as a VIO dataset.
Firstly, the high use of a program will keep it resident in any case, while a
little-used program marked TresidentU will only take up storage needlessly.
Secondly, now it is possible to free main storage for other uses by placing
temporary storage buffers in auxiliary temporary storage rather than in main
storage.  A user exit can be written in order to avoid the time needed to re-
compile the whole program.  Such a user exit will ensure that any temporary
storage request will be directed to the auxiliary file, which can be placed on
an SSD, although an explicit request was made for main storage.
ZTSREQ   START
         DFHTCA  CICSYST=NO
ZTSREQ   CSECT
         USING   DFHUEPRAR,1        PARAMETER LIST.
         SAVE    (14,12)            SAVE REGISTERS.
         BALR    15,0
         USING   *,15
         L       3,UEPTCA           A(CURRENT USER TCA)
         USING   DFHTCADS,3
         TM      TCATSTR,X'40'      IS IS PUT REQUEST?
         BZ      RETURN
         NI      TCATSTR,X'FF'-X'08'  FORCE T.S. AUX PUT REQ.
RETURN   RETURN  (14,,12)
         END
Based on my experience, using main temporary storage might be involved in paging
operations that dramatically degrade CICS performance.  For a CICS region that
 has a paging rate of 10 pages per second and a page service time of about 20
milliseconds with conventional disks (3380) type, I faced a performance
degradation of about 20% because of the paging rate and another 15% because of
the DSA shortage.  By placing the temporary storage file on an SSD with other
files we were able to make more room in the DSA while being able to improve CICS
performance.  This approach has been proved at a customerUs site which adopted
the idea and got about a 30-40% response time improvement.

Emmanuel Vazana
Systems Engineer
NAS (Israel)   ) Xephon 1988























































