CICS log message suppression

At our installation we run many IBM application and OEM
packages in our CICS/MVS 2.1 systems.  Most of these
products route information messages out to the CICS SYSOUT
logs.  Many of these messages hold no real extra information
about the status of the CICS systems or packages - such as the
DADS/PLUS message:

      DADSP707 START-UP PERFORMED WAS COLD

which gives systems programmers no extra information about
CICS at all that they do not already know.  These messages can
account for about 50 percent of the CICS log.  When browsing
the log using SDSF it is often difficult to find the messages you
are looking for amongst the fruitless ones.

It would be nice if we could get each of these products to
suppress many of these messages making the log much easier
to read.  However nearly all of these products (including CICS
itself) do not offer this facility.

Therefore to save time and spool space I wrote a simple
command-level program that will do just what we wanted - ie
suppress unwanted CICS SYSOUT messages.  The program
requires the DCT entry to which the product routes its
messages to be replaced with the DCT entries as shown below.

Rename the DCT entry to which the product would normally
route its messages, to an unused DCT label name.  For
example, DADL would be defined like this:

DADE   DFHDCT  TYPE=EXTRA,                                             X
               DESTID=DADE,                                            X
               DSCNAME=DADSLOG

Add the following DCT entry using the original DCT entry
label. Note the TRANSID must match the one used to start the
NUMESSUP program.

DADL   DFHDCT  TYPE=INTRA,                                             X
               DESTID=DADL,                                            X
               REUSE=YES,                                              X
               TRIGLEV=1,                                              X
               TRANSID=SMES,                                           X
               DESTFAC=FILE,                                           X
               DESTRCV=NO

To include a message for 'message suppression' just include
the message number and  its renamed DCT entry label name in
the SUPMESS table.  The first time a message under
suppression is routed to the log, the program will issue the
message 'Message: DADSP707 has been suppressed' and then
stop the message appearing any more for this run of CICS.


NUMESSUP SOURCE CODE

*** MODULE : NUMESSUP V1.0                                         ***
*  Program to suppress unwanted messages written out to the CICS log *
DFHEISTG DSECT                     *                                 *
DYNLENG  DS    H                   *                                 *
ITEMNO   DS    H                   *                                 *
DYNFACL  DS    CL4                 *                                 *
DYNSTART DS    CL2                 *                                 *
DYNOUTQ  DS    CL4                 *                                 *
TDREC    DSECT                     *                                 *
TDDATA   DS    CL8                 * Message number                  *
SUPTABQ  DSECT                     *                                 *
SUPTMESS DS    CL8                 * Message number                  *
SUPDONE  DS    CL1                 * Already Suppressed Flag 'X'     *
SPARE    DS    CL7                 * Spare                           *
**** CICS COMMAND LEVEL CODE                                        ***
NUMESSUP CSECT                     * => Entry Point                  *
         USING TDREC,R4            * Address TD record               *
         USING SUPTABQ,R9          * Address TS record               *
         EXEC  CICS ASSIGN       . * Get Start code and Facility     * X
               STARTCODE(DYNSTART)                                     X
               FACILITY(DYNFACL) . *                                 *
         CLC   DYNSTART,=C'QD'     * Trigger Start ?                 *
         BNE   RETURN              * No - Exit                       *
         EXEC  CICS HANDLE       . * Set up Error handling           * X
               CONDITION         . *                                 * X
               IOERR(RETURN)     . *                                 * X
               NOTOPEN(RETURN)   . *                                 * X
               QZERO(RETURN)     . *                                 * X
               QIDERR(CREATE)    . *                                 *
         EXEC  CICS READQ TS     . * Does T.S. Queue already exist ? * X
               QUEUE('SUPTAB')   . *                                 * X
               SET(R9)           . *                                 * X
               LENGTH(SIXTEEN)   . *                                 * X
               ITEM(1)           . *                                 *
         B     REREAD            . * No - Don't Create one then.     *
CREATE   LA    R5,SUPMESS        . * Point R5 at Message SUP table   *
         MVI   SUPDONE,C' '      . * Clean out Flag                  *
WRITTHIS CLC   0(2,R5),=X'FFFF'    * Last Entry in Table ?           *
         BE    REREAD              * Check message                   *
         MVC   SUPTMESS,0(R5)      * Put Message in record           *
         EXEC  CICS WRITEQ TS    . * Write Message record            * X
               QUEUE('SUPTAB')   . *                                 * X
               FROM(SUPTABQ)     . *                                 * X
               LENGTH(16)        . *                                 * X
               MAIN              . *                                 *
         LA    R5,16(R5)           * Move to next message in table   *
         B     WRITTHIS            * Next message                    *
REREAD   EXEC  CICS READQ TD     . * Get Message                     * X
               QUEUE(DYNFACL)    . *                                 * X
               SET(R4)           . *                                 * X
               LENGTH(DYNLENG)   . *                                 *
         LA    R5,SUPMESS          * Point R5 at Message SUP table   *
CHEKTHIS CLC   0(2,R5),=X'FFFF'    * Last Entry in Table ?           *
         BE    WRITMESS            * Yes - Send Message              *
         CLC   0(8,R5),TDDATA      * Suppress this message ?         *
         BE    SUPIT               * Write Suppressed message ?      *
         LA    R5,16(R5)           * Move to next message in table   *
         B     CHEKTHIS            * Next message                    *
*** SUBROUTINES                                                     ***
SUPIT    LA    R8,SUPMESS        . * Point R8 at Start of Table      *
         LR    R7,R5             . * R7 Work reg - R5 Pointer!!      *
         SR    R7,R8             . * Get Entry as Offset from Zero   *
         SRL   R7,4              . * Divide Offset to get Itemno     *
         LA    R7,1(R7)          . * Add 1 (Can't have Item no. 0)   *
         STH   R7,ITEMNO         . * Get Itemno                      *
         EXEC  CICS READQ TS     . * Read Message record             * X
               QUEUE('SUPTAB')   . *                                 * X
               SET(R9)           . *                                 * X
               LENGTH(SIXTEEN)   . *                                 * X
               ITEM(ITEMNO)      . *                                 *
         CLI   SUPDONE,C'X'        * Has it been Suppressed ?        *
         BE    REREAD              * Yes - Next message              *
         MVC   QUE,8(R5)           * Write message out               *
         MVC   MESS,0(R5)          * Move Message number in          *
         MVI   SUPDONE,C'X'        * Move Suppressed flag in         *
         EXEC  CICS HANDLE       . * Set up Error handling           * X
               CONDITION         . *                                 * X
               QIDERR(RETURN)    . *                                 *
         EXEC  CICS WRITEQ TD    . * Write message out               * X
               QUEUE(QUE)        . *                                 * X
               FROM(WARNING)     . *                                 * X
               LENGTH(WARNINGL)  . *                                 *
         EXEC  CICS WRITEQ TS    . * Flag message as 'Suppressed'    * X
               QUEUE('SUPTAB')   . *                                 * X
               FROM(SUPTABQ)     . *                                 * X
               LENGTH(16)        . *                                 * X
               ITEM(ITEMNO)      . *                                 * X
               REWRITE           . *                                 * X
               MAIN              . *                                 *
         B     REREAD              * Next message                    *
WRITMESS LA    R5,SUPMESS          * Point R5 at Message SUP table   *
WRITMES1 CLC   0(2,R5),=X'FFFF'    * Last Entry in Table ?           *
         BE    REREAD              * Yes - Exit                      *
         CLC   0(3,R5),TDDATA      * Send message here ?             *
         BE    SENDMESS            * Write Required message          *
         LA    R5,16(R5)           * Move to next message in table   *
         B     WRITMES1            * Next message                    *
SENDMESS MVC   QUE,8(R5)           *                                 *
         EXEC  CICS HANDLE       . * Set up Error handling           * X
               CONDITION         . *                                 * X
               QIDERR(RETURN)    . *                                 *
         EXEC  CICS WRITEQ TD    . * Write message out               * X
               QUEUE(QUE)        . *                                 * X
               FROM(TDREC)       . *                                 * X
               LENGTH(DYNLENG)   . *                                 *
RETURN   EXEC  CICS RETURN       . * => Exit Point                   *
*** LOCAL EQUATES AND CONSTANTS                                     ***
SUPMESS  DC    C'DFH3505I',C'CSCE',CL4' '
         DC    C'DFH3507I',C'CSCE',CL4' '
         DC    C'DADSP552',C'DADE',CL4' '
         DC    C'DADSP554',C'DADE',CL4' '
         DC    C'DADSP557',C'DADE',CL4' '
         DC    C'DADSP698',C'DADE',CL4' '
         DC    C'DADSP705',C'DADE',CL4' '
         DC    C'DADSP707',C'DADE',CL4' '
         DC    C'DADSP708',C'DADE',CL4' '
         DC    C'DADSP709',C'DADE',CL4' '
         DC    C'DADSP713',C'DADE',CL4' '
         DC    X'FFFFFFFFFFFFFFFF',C'CSMT'
QUE      DC    CL4' '
SIXTEEN  DS    H'16'
WARNING  DC    C'Message: '
MESS     DC    CL8' '
         DC    C' has been suppressed.'
WARNINGL DC    Y(*-WARNING)
         LTORG
         END


'Jiff'
Systems Programmer
Norwich Union Insurance Group (UK)


