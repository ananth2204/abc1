Enquiring on programs in DFHRPL (continued)

This month we conclude Christopher Frank's article by publishing
the remainder of his program which helps to make the CICS
Relocatable Program Library more manageable.

L03000   CVD   R0,WORKAREA         CONVERT VALUE TO DECIMAL
         OI    WORKAREA+7,X'0F'    MAKE IT PACKED
         UNPK  PGMMLEN-PGMINFO(L'PGMMLEN,R2),WORKAREA+5(3)  UNPACK IT
         TR    PGMMLEN-PGMINFO(L'PGMMLEN,R2),HEXDISPL-240
*                                  MAKE IT DISPLAYABLE
*        SET PROGRAM LANGUAGE IN MAP
         AIF   (NOT &BLDL).BLDL35
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L03100              ..YES - GET LANGUAGE FROM PPT
         MVC   PGMMLANG-PGMINFO(3,R2),=C'N/A'  SHOW LANG AS UNAVAILABLE
         B     L03800              CONTINUE
L03100   DS    0H
.BLDL35  ANOP
         TM    PPTTLR,PPTPLIND     PL/I PROGRAM?
         BNO   L03200              ..NO
         MVC   PGMMLANG-PGMINFO(4,R2),=C'PL/I'  SHOW AS PL/I
         B     L03800              CONTINUE
L03200   TM    PPTTLR,PPTCBIND     COBOL PROGRAM?
         BNO   L03600              ..NO
         MVC   PGMMLANG-PGMINFO(5,R2),=C'COBOL'  SHOW AS COBOL
         TM    PPTCOBF,PPTSPEC     COBOL2?
         BO    L03500              ..YES
***      DISPLAY COBOL WORKING STORAGE SIZE.
*        HERE WE DISPLAY THE AMOUNT OF WORKING STORAGE REQUIRED
*        FOR CICS; THIS WILL INCLUDE THE TGT (TASK GLOBAL TABLE)
*        AND A REGISTER SAVE AREA.
*        THE PROGRAM MUST BE LOADED TO OBTAIN THIS; WE WILL LOAD IT
*        IF NECESSARY. ADDITIONALLY, IF WE DO LOAD IT WE WILL ALSO
*        FORMAT AND DISPLAY THE PROGRAM'S LOAD ADDRESS ON THE SCREEN,
*        AS THIS WOULD NOT HAVE BEEN DONE EARLIER.
*        WE ALSO CHECK TO SEE IF WSS IS SMALLER THAN TGT; IF SO THIS
*        COULD INDICATE THAT THE 64K LIMIT WAS EXCEEDED, SO WE WILL
***      HIGHLIGHT THE WSS SIZE LINE.
         MVC   PGMMWSCN-PGMINFO(L'WSSERRCN,R2),WSSERRCN
*                                  INSERT WSSIZE CONSTANT
         OC    PPTCSA,PPTCSA       PROGRAM CURRENTLY LOADED?
         BNZ   L03300              ..YES - CONTINUE
         MVC   TCAPCPI,PPTPI       SPECIFY PROGRAM TO BE LOADED
         DFHPC TYPE=LOAD,COND=YES  PERFORM THE LOAD
         CLI   TCAPCTR,X'00'       LOAD SUCCESSFUL?
         BE    L03300              ..YES
         MVC   PGMMWSEN-PGMINFO(6,R2),=C'??????'  SHOW AS UNKNOWN
         B     L03800              QUIT
L03300   XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         L     R0,PPTCSA           FETCH PROGRAM'S STORAGE ADDRESS
         SLL   R0,4                MAKE ROOM FOR SIGN
         ST    R0,WORKAREA         SAVE ADDRESS
         OI    WORKAREA+3,X'0F'    MAKE IT PACKED
         UNPK  PGMMADR-PGMINFO(L'PGMMADR,R2),WORKAREA(4)  UNPACK IT
         TR    PGMMADR-PGMINFO(L'PGMMADR,R2),HEXDISPL-240
*                                  MAKE IT DISPLAYABLE
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         LH    R0,PPTCOTP          FETCH SIZE OF WSS+TGT
         SH    R0,PPTCCR           TGT LARGER THAN WSS?
         BNM   L03400              ..NO
         MVC   PGMMWSER-PGMINFO(L'PGMMWSER,R2),WSSERR
*                                  INDICATE WSS ERROR DETECTED
         MVI   PGMMWSAT+1-PGMINFO(R2),X'F8'  SHOW POSSIBLE WSS OVERRUN
L03400   CVD   R0,WORKAREA         CONVERT VALUE TO DECIMAL
         OI    WORKAREA+7,X'0F'    MAKE IT PACKED
         UNPK  PGMMWSEN-PGMINFO(L'PGMMWSEN,R2),WORKAREA+5(3)  UNPACK IT
         TR    PGMMWSEN-PGMINFO(L'PGMMWSEN,R2),HEXDISPL-240
*                                  MAKE IT DISPLAYABLE
         MVC   PGMMWSBY-PGMINFO(6,R2),=C' BYTES' INSERT WSSIZE CONSTANT
         B     L03800              CONTINUE
L03500   MVC   PGMMLANG-PGMINFO+6(3,R2),=C' II'  SHOW AS COBOL II
         B     L03800              CONTINUE
L03600   TM    PPTTLR,PPTRPIND     RPG PROGRAM (VSE ONLY)?
         BNO   L03700              ..NO
         MVC   PGMMLANG-PGMINFO(6,R2),=C'RPG II'  SHOW AS RPG II
         B     L03800              CONTINUE
L03700   MVC   PGMMLANG-PGMINFO(9,R2),=C'ASSEMBLER'  SHOW AS ASSEMBLER
*        SET PROGRAM ADDRESS MODE IN MAP
L03800   AIF   (NOT &BLDL).BLDL40
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L03900              ..YES - GET AMODE FROM PPT ENTRY
         TM    BLAMFLG,X'03'       AMODE=31 OR AMODE=ANY?
         BNZ   L04000              ..YES - GO SHOW AS AMODE=31
         B     L04100              ..NO  - GO SHOW AS AMODE=24
L03900   DS    0H
.BLDL40  ANOP
         TM    PPTTLR2,PPTAM31     AMODE=31 OR AMODE=ANY?
         BNO   L04100              ..NO  - CONTINUE
L04000   MVC   PGMMODE-PGMINFO(2,R2),=C'31'  SHOW AS AMODE=31
         B     L04200              CONTINUE
L04100   MVC   PGMMODE-PGMINFO(2,R2),=C'24'  SHOW AS AMODE=24
*        SET PROGRAM STATUS
L04200   AIF   (NOT &BLDL).BLDL45
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L04300              ..YES - GET STATUS FROM PPT
         MVC   PGMMSTAT-PGMINFO(3,R2),=C'N/A' SHOW STATUS UNAVAILABLE
         B     L04500              CONTINUE
L04300   DS    0H
.BLDL45  ANOP
         TM    PPTFLGS,PPTDSABL    PROGRAM DISABLED?
         BNO   L04400              ..NO  - CONTINUE
         MVC   PGMMSTAT-PGMINFO(8,R2),=C'DISABLED' SHOW STATUS=DISABLED
         B     L04500              CONTINUE
L04400   MVC   PGMMSTAT-PGMINFO(7,R2),=C'ENABLED' SHOW AS STATUS=ENABLED
*        SET PROGRAM RESIDENCY
L04500   AIF   (NOT &BLDL).BLDL50
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L04600              ..YES - GET STATUS FROM PPT
         MVC   PGMMRES-PGMINFO(3,R2),=C'N/A'
*                                  SHOW RESIDENCY AS UNAVAILABLE
         B     L04800              CONTINUE
L04600   DS    0H
.BLDL50  ANOP
         TM    PPTTLR,PPTPCRES     PROGRAM RES=YES?
         BNO   L04700              ..NO  - CONTINUE
         MVC   PGMMRES-PGMINFO(3,R2),=C'YES'  SHOW AS RES=YES
         B     L04800              CONTINUE
L04700   MVC   PGMMRES-PGMINFO(2,R2),=C'NO'  SHOW AS RES=NO
*        INDICATE BLDL STATUS
L04800   TM    FLAGS,CIBLDL        CICS BLDL PERFORMED?
         BNO   L04900              ..NO
         MVC   PGMMBLCN-PGMINFO(L'BLDLCI,R2),BLDLCI  SHOW BLDL WAS DONE
         B     L05100              CONTINUE
L04900   TM    FLAGS,OSBLDL        OS BLDL PERFORMED?
         BNO   L05000              ..NO
         MVC   PGMMBLCN-PGMINFO(L'BLDLOS,R2),BLDLOS SHOW BLDL WAS DONE
         B     L05100              CONTINUE
L05000   AIF   (&BLDL).BLDL20
         TM    FLAGS,NOBLDL        OS BLDL SUPPORTED?
         BNO   L05400              ..NO
         MVC   PGMMBLCN-PGMINFO(L'BLDLND,R2),BLDLND
*                                  SHOW THAT BLDL WAS NOT ALLOWED
.BLDL20  ANOP
L05100   MVI   PGMMBLAT+1-PGMINFO(R2),X'F8'  INTENSIFY THIS LINE
         LA    R2,PGMINFOL(,R2)    ADJUST THE DATA POINTER
*        APPEND REFRESH MESSAGE.
L05400   TM    FLAGS,PPTREQ        WAS THIS A RESOURCE REQUEST?
         BNO   L05500              ..NO  - NO PROMPTING NEEDED
         MVC   0(PGMMREFL,R2),PGMMREF  MOVE PGM REFRESH MAP TO TIOA
         LA    R2,PGMMREFL(,R2)    ADJUST THE DATA POINTER
*        DONE BUILDING SCREEN. NOW FINISH UP AND SEND IT.
L05500   LA    R1,TIOADBA          GET START OF DATA
         SR    R2,R1               COMPUTE LENGTH OF DATA
         STH   R2,TIOATDL          PUT LENGTH IN TIOA
         DFHTC TYPE=ERASE          SET ERASE ATTRIBUTE
         MVC   TCTTETC,TRANID      SET NEXT TRAN IN TCTTE
         B     L09999              GO FINISH
*        E R R O R    H A N D L E R
ERR010   DS    0H                  <== DFHRPL TIOT ENTRY NOT FOUND
         LA    R2,ERR010T          ADDRESS ERROR MESSAGE
         B     ERR999              FINISH IT
ERR020   DS    0H                  <== PROGRAM NOT FOUND IN PPT
         LA    R2,ERR020T          ADDRESS ERROR MESSAGE
         B     ERR999              FINISH IT
ERR030   DS    0H                  <== PROGRAM NOT FOUND ON DFHRPL
         LA    R2,ERR030T          ADDRESS ERROR MESSAGE
         B     ERR999              FINISH IT
ERR999   DS    0H
         LH    R1,0(,R2)           FETCH MESSAGE LENGTH
         BCTR  R1,0                ADJUST FOR MOVE
         EX    R1,EXMVC            MOVE IT TO THE TIOA
         LA    R1,TIOADBA+1(R1)    POINT PAST THE MESSAGE IN THE TIOA
         MVC   0(L'RAORDER,R1),RAORDER  SET THE CLEAR COMMAND IN TIOA
         LH    R1,0(,R2)           RELOAD THE LENGTH
         LA    R1,L'RAORDER(,R1)   ADD THE RA COMMAND LENGTH
         STH   R1,TIOATDL          SET IT IN THE TIOA
         MVC   TCTTETC,TRANID      SET OUR TRANID UP
         B     L09999              GO SENT THE MESSAGE
*        SEND MESSAGE AND RETURN TO CICS.
L09999   DFHTC TYPE=WRITE
         DFHPC TYPE=RETURN
*        C O N S T A N T S    A N D    L I T E R A L S
*        MAP FOR THE 'LIST' REQUEST HEADER
LISTMG   DS    0X
         DC    X'11404A'
         DC    X'1DF8'
         DC    C'>>>>  '
         DC    C'BELOW ARE THE LIBRARIES CONCATENATED IN DFHRPL'
         DC    C'  <<<<'
         DC    X'1DF0'
         DC    X'11C260'
         DC    CL7' '
LISTMGL  EQU   *-LISTMG
*        MAP FOR THE INDIVIDUAL DSN LINES
DSNLINE  DS    0X
DSNHLITE DC    X'1DF0'
DSNSEQ   DC    CL3' '
         DC    CL3' '
DSNNAME  DC    CL44' '
         DC    X'1DF0'
         DC    C'VOLSER='
DSNVOL   DC    CL6' '
         DC    CL15' '
DSNLINEL EQU   *-DSNLINE
*        MAP FOR THE 'PGM' REQUEST INFO PANEL.
PGMINFO  DS    0X
         DC    X'1DF8'
         DC    X'11D7F0'
PGMMDEF  DC    CL55' '                 <== PROGRAM INFORMATION
*                                          VARIABLE LENGTH, INCLUDES
*                                           - RESOURCE TYPE
*                                           - RESOURCE ID
*                                           - RPL LIBRARY INDEX
PGMMDEFL EQU   *-PGMINFO
         DC    X'1DF0'
         DC    X'11D940'
         DC    C'LOAD ADDRESS='
PGMMADR  DS    CL8                     <== PROGRAM LOAD ADDRESS
         DC    CL3' '
         DC    C'LENGTH='
PGMMLEN  DS    CL6                     <== PROGRAM LENGTH
         DC    C' BYTES'
         DC    X'115A50'
         DC    C'LANGUAGE='
PGMMLANG DS    CL9                     <== PROGRAM LANGUAGE
         DC    CL6' '
         DC    C'AMODE='
PGMMODE  DS    CL2                     <== PROGRAM AMODE
         DC    X'115B60'
         DC    C'STATUS='
PGMMSTAT DS    CL8                     <== PROGRAM STATUS
         DC    CL8' '
PGMMWSS  DS    0X                      <== COBOL WSS LINE
PGMMWSAT DC    X'1DF0'                     HIGHLIGHT SIZE IF ERROR
PGMMWSCN DS    CL(L'WSSERRCN)              MESSAGE TEXT
PGMMWSEN DS    CL6                         WORKING STORAGE SIZE
PGMMWSBY DS    CL6                         MESSAGE TEXT
PGMMWSER DS    CL(L'WSSERR)                MESSAGE TEXT
         DC    X'1DF0'
PGMMWSSL EQU   *-PGMMWSS
         DC    X'115CF0'
         DC    C'RES='
PGMMRES  DS    CL3                     <== PROGRAM RESIDENCY
         DC    X'115DC7'
PGMMBLAT DC    X'1DF0'
PGMMBLCN DS    CL(L'BLDLCI)            <== BLDL STATUS
         DC    X'1DF0'
PGMINFOL EQU   *-PGMINFO
*        REFRESH MESSAGE MAP
PGMMREF  DS    0X
         DC    X'11D8E4'
         DC    X'1DF8'
         DC    C'<== OVERTYPE TO INQUIRE ON'
         DC    X'1DF0'
         DC    X'11D9F8'
         DC    X'1DF8'
         DC    C'ANOTHER NAME, OR HIT'
         DC    X'1DF0'
         DC    X'115BC8'
         DC    X'1DF8'
         DC    C'''CLEAR'' TO EXIT.'
         DC    X'1DF0'
PGMMREFL EQU   *-PGMMREF
*        MAP FOR THE PROMPT SCREEN
PROMPT   DS    0X
         DC    X'11C25F'
         DC    X'1DF8'
         DC    C'HIT ''ENTER'' FOR RPL LIST'
         DC    X'11C3F0'
         DC    C'OR ENTER RESOURCE ID HERE ==>'
         DC    X'1DC913'
         DS    CL20
         DC    X'1DF0'
PROMPTL  EQU   *-PROMPT
*        ERROR MESSAGES
ERR010T  DS    0X
         DC    AL2(ERR010TL)
         DC    C' <== DFHRPL TIOT ENTRY CANNOT BE LOCATED'
ERR010TL EQU   *-ERR010T-2
ERR020T  DS    0X
         DC    AL2(ERR020TL)
         DC    C' <== PROGRAM NOT FOUND IN PPT'
ERR020TL EQU   *-ERR020T-2
ERR030T  DS    0X
         DC    AL2(ERR030TL)
         DC    C' <== PROGRAM NOT FOUND ON DFHRPL'
ERR030TL EQU   *-ERR030T-2
*        MISCELLANEOUS CONSTANTS
EXMVC    MVC   TIOADBA(0),2(R2)
EXCLC    CLC   2(0,R3),0(R1)
LMODID   DC    C'LOAD MODULE NAME -'
PGMMPTN  DC    C'PARTITION SET NAME -'
PGMMAP   DC    C'MAPSET NAME -'
PGMMID   DC    C'PROGRAM NAME -'
BLDLCI   DC    C'>>> CICS BLDL PERFORMED <<<'
BLDLOS   DC    C'>>> OS BLDL PERFORMED <<<'
BLDLND   DC    C'>>> OS BLDL NOT ALLOWED <<<'
RPLSEQ   DC    C'(FOUND IN DFHRPL'
NOTINPPT DC    C' <=== NAME NOT IN PPT'
WSSERRCN DC    C'COBOL WS SIZE='
HEXDISPL DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
RAORDER  DC    X'3C5D7F00'
TIOASZE  EQU   ((DSNLINEL*16)+LISTMGL+PGMINFOL+PGMMREFL)
WSSERR   DC    C'   <== POSSIBLE WSS OVERRUN.'
         LTORG
         END


Christopher Frank
Lead Systems Programmer
Western Life Insurance (USA) ) Xephon 1989


