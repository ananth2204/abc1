 More about sharing VSAM files under VM - 2
I should like to make the following observations about the article Sharing VSAM
files between separate VSE-ids, published in the October 1988 issue of CICS
Update.
POINT ONE
The MWV specification for a MDISK causes the VM Control Program (CP) to simulate
a Tdevice busyU status for a MDISK when a VSE guest issues an SIO to that
particular MDISK, causing other SIOs from other VSE guests to be queued until CP
issues a Tdevice endU status for the MDISK.  The MWV specification is a disaster
for system performance and should only be coded for the MDISK on which the lock
file resides.
POINT TWO
There is also an error in the seventh sentence of paragraph four on page 33.
Read access is not handled by an FCT entry but by the share options stored in
the VSAM user catalog for that particular VSAM file.
SHAREOPTIONS(2) means that a CICS system in VSE-ID1 can open the file for update
while another CICS system in VSE-ID2 can only open it for retrieve.  If more
CICS systems within different VSE-ids want to update a particular VSAM file
concurrently, SHAREOPTION(3) must be used.  Note that resource locking must be
implemented within the on-line program that wants to update the VSAM file.
This can be done using the LOCK and UNLOCK macros provided by IBM (more
information can be found in VSE/AF System Management Guide SC33-6191-2, pages 5-
6).  Before implementing these macros you should generate the DTL, GENDTL, and
MODDTL to define the resource (in this case a VSAM file) to be locked.  After
this, the VSAM file which is locked because of an update request by an on-line
program in VSE-ID2 will be entered into the lock file by the operating system.
When the VSAM file is unlocked by the on-line program, an on-line program within
VSE-ID2 is able to update the same VSAM file, also locking this VSAM file.
POINT THREE
On page 35, the DLF statement required in the ASI for VSE-ID2 should read:
DLF 239,CYL=start of cylinder,NCYL=number of cylinders,TYPE=F,NCPU=x
where x specifies the number of machines, real or virtual, which share disk
storage and can be any figure between 2 and 31, with a default value of 4.

Walther van der Pol
Systems Programmer (The Netherlands)    ) Xephon 1988






























