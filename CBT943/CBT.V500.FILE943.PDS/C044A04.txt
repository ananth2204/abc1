Programmable call of DFHEDAP (CEDA)

We have often found using CEDA to be a time consuming and
inefficient process.  For example, we have had to define some
gateways of 128 terminals where auto-install could not, for
various reasons, be used.  The terminals all have the same
attributes, but the NETNAMEs and terminal-ids are different.  If
CEDA is used, one terminal can be defined and copied to the
other 127 terminal-ids.  Then the 127 NETNAMEs have to be
updated.  This is a time consuming, inefficient, and boring task.

A further situation arose when we were in the process of
converting to RACF for transaction security.  We had to change
the EXTSEC parameter on most, but not all, of the transactions in
several groups (a few thousand overall).  Furthermore, we wanted
to be sure that we changed only those which had a current security
value other than 1: in this respect accuracy was important.  We
already had a program to scan the CSD and build a file of various
parameters from the groups within a CSD, so we could generate
the ALTER input lines (and the RDEFINE cards for RACF), but
there was nothing that could use them (DFHCSDUP is rather
restrictive in this area).

Our solution was to write a CICS program to interface to
DFHEDAP (shown below).  The source for the main part of
DFHEDAP is in DFHESP00, which is contained in the CICS-
supplied optional source library.  From this member, it seems that
commands can be passed to DFHEDAP if a communications area
is provided which contains:

1	The address of a field containing the command.

2	The address of a half-word binary field containing the length
of the command.

3	The address of a 1-byte field which contains X'80' (display
output) or X'00' (no display).

I have not seen this interface published in any of the normal CICS
manuals, so it is probably one of the unpublished ones which
might change sometime in the future.  I should point out that it is
remarkably similar to the published interface to DFHEMTP, and
DFHEMTP uses exactly the same code contained in DFHESP00.

The program below reads 80-byte records from a transient data
queue and passes them to DFHEDAP.  This is only one way in
which the technique can be used.  Other ways could include
generating the records in the same program, eg the situation
mentioned above concerning terminal-ids and NETNAMEs.

The program also opens and closes the transient data queue and
the DFHCSD file, and updates the field CSACSDCT which is
used to hold the number of users of the CSD file (to stop
DFHEDAD from opening and closing DFHCSD every time it is
called).

DFHEISTG DSECT
DATAA    DS    CL100
DATAL    DS    H
DSOP     DS    F
PARML    DS    5F
OUTPUT   DS    CL80
OPENIND  DS    X
DISPIND  DS    X
         COPY  DFHCSADS
*     PROGRAM    TSCG0051
*     PURPOSE   TO CALL DFHEDAP (CEDA) AND FEED IT AN INPUT AREA
*               WHICH HAS BEEN READ FROM TD Q TSB1. THIS IS MEANT TO
*               PROVIDE A FACILITY WHEREBY INPUT TO CEDA CAN BE
*               BUILT MECHANICALLY, OR WITH AN EDITOR, AND
*               CAN BE PROCESSED BY CEDA, RATHER THAN EVERY COMMAND
*               BEING LABORIOUSLY TYPED IN.
*               THE TRANSACTION CAN BE STARTED WITH JUST THE
*               TRANS-ID (IN WHICH CASE NO OUTPUT WILL BE DISPLAYED),
*               OR IT CAN BE STARTED WITH THE TRANS-ID FOLLOWED BY A
*               BLANK AND THE CHARACTERS "DIS", WHICH WILL TURN ON
*               THE DISPLAY INDICATOR FOR DFHEDAP. IF OUTPUT IS
*               DISPLAYED, THEN THE NORMAL CEDA PF KEYS CAN BE
*               USED.  PF3 OR ENTER CAN BE USED TO FINISH.
TSCG0051 CSECT
         MVC   DATAL(2),H80
         EXEC  CICS RECEIVE INTO(OUTPUT) LENGTH(DATAL)
         MVI   DISPIND,X'00'        NO DISPLAY
         LA    R4,OUTPUT            START OF INPUT
         CLI   0(R4),X'11'          SBA ?
         BNE   INP1                 NO
         LA    R4,3(R4)             PAST IT
INP1     CLC   5(3,R4),=C'DIS'      DISPLAY REQUESTED ?
         BNE   INP2                 NO
         MVI   DISPIND,X'80'        INDICATE DISPLAY
INP2     LA    R1,INQCOM            INPUT AREA
         ST    R1,PARML
         LA    R1,INQCOML           INPUT LENGTH
         ST    R1,PARML+4
         LA    R1,INDICAT           DISPLAY INDICATOR
         ST    R1,PARML+8
         LA    R1,OUTPUT            OUTPUT AREA
         ST    R1,PARML+12
         LA    R1,H80               OUTPUT LENGTH
         ST    R1,PARML+16
* INQUIRE ON TD Q TSB1
         EXEC  CICS LINK                                              X
               PROGRAM('DFHEMTA')                                     X
               COMMAREA(PARML)
         LH    R4,OUTPUT+6          LENGTH OF OUTPUT
         SH    R4,=H'8'             HEADER + 2
         BNP   TDCLOSED             BR IF NOT ENOUGH O/P
         LA    R5,OUTPUT+12         START OF OUTPUT
EXOP1    CLC   0(3,R5),=C'OPE'      IS IT OPEN ?
         BE    TDOPEN               YES
         LA    R5,1(R5)             CONTINUE
         BCT   R4,EXOP1              SCAN
* SET TD Q TSB1 OPEN
         LA    R1,OPENCOM           INPUT AREA
         ST    R1,PARML
         LA    R1,OPENCOML          INPUT LENGTH
         ST    R1,PARML+4
         EXEC  CICS LINK                                              X
               PROGRAM('DFHEMTA')                                     X
               COMMAREA(PARML)
TDOPEN   DS    0H
         EXEC  CICS HANDLE                                            X
               CONDITION                                              X
               QZERO(RETURN)
         MVC   DATAL(2),H80
         MVI   OPENIND,X'00'
         EXEC  CICS INQUIRE                                           X
               DATASET('DFHCSD')                                      X
               OPENSTATUS(DSOP)
         CLC   DSOP(4),DFHVALUE(OPEN)
         BE    ALREADYO
         MVI   OPENIND,X'80'        DFHCSD WAS OPENED HERE
         EXEC  CICS SET DATASET('DFHCSD') OPEN                        X
               DATASET('DFHCSD')                                      X
               OPEN
ALREADYO DS    0H
         EXEC  CICS ADDRESS CSA(R6)
         USING DFHCSADS,R6
         L     R6,CSAOPFLA
         USING CSAOPFL,R6
         L     R7,CSACSDCT          NUMBER OF CSD USERS
         LA    R7,1(R7)             INC BY 1
         ST    R7,CSACSDCT          SAVE
TDREAD   EXEC  CICS READQ                                             X
               TD QUEUE('TSB1')                                       X
               INTO(DATAA)                                            X
               LENGTH(DATAL)
         MVC   DATAA+72(8),BLANKS   SEQUENCE NUMBERS FROM
*                                   ORIGINAL DATA
         LA    R1,DATAA             INPUT AREA
         ST    R1,PARML
         LA    R1,DATAL             INPUT LENGTH
         ST    R1,PARML+4
         LA    R1,DISPIND           DISPLAY INDICATOR
         ST    R1,PARML+8
         EXEC  CICS LINK                                              X
               PROGRAM('DFHEDAP')                                     X
               COMMAREA(PARML)
         B     TDREAD
RETURN   TM    OPENIND,X'80'        WAS DFHCSD OPENED HERE
         BZ    RETURN1              NO
         EXEC  CICS SET                                               X
               DATASET('DFHCSD')                                      X
               CLOSED
* SET TS Q TSB1 CLOSED
RETURN1  LA    R1,CLOSCOM           INPUT AREA
         ST    R1,PARML
         LA    R1,CLOSCOML          INPUT LENGTH
         ST    R1,PARML+4
         LA    R1,INDICAT           DISPLAY INDICATOR
         ST    R1,PARML+8
         EXEC  CICS LINK                                              X
               PROGRAM('DFHEMTA')                                     X
               COMMAREA(PARML)
         L     R7,CSACSDCT          NUMBER OF CSD USERS
         BCTR  R7,0                 DEC BY 1
         ST    R7,CSACSDCT          SAVE
         EXEC  CICS SEND                                              X
               FROM(ENDMSG)                                           X
               LENGTH(LENDMSG)                                        X
               ERASE
         EXEC  CICS RETURN
ENDMSG   DC    C'END OF TRANSACTION.'
LENDMSG  DC    AL2(L'ENDMSG)
H80      DC    H'80'
BLANKS   DC    CL8' '
INQCOM   DC    C'I Q(TSB1)'
CLOSCOM  DC    C'S Q(TSB1) CLO'
OPENCOM  DC    C'S Q(TSB1) OPE'
INQCOML  DC    AL2(L'INQCOM)
CLOSCOML DC    AL2(L'CLOSCOM)
OPENCOML DC    AL2(L'OPENCOM)
INDICAT  DC    X'00'
         END   TSCG0051

This program was written for CICS 1.7 running under MVS/XA.


Brian James
Systems Programmer
State Bank of South Australia (Australia)	) Xephon 1989

