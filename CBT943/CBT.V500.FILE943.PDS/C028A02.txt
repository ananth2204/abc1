 Dynamic Storage Area allocation display (cont)
In this month's issue of CICS Update we conclude the article which we started in
last month's issue by publishing the remainder of the source code.
PART TWO OF THE SOURCE CODE
***********************************************************************
*        COMPUTE PERCENTAGES AND PAGES OF ALLOCATION                  *
***********************************************************************
CONTINUE SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMCTLCT             GET CTL POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   CTLPCTO,WORK9+4
         L     R5,PAMCTLCT             GET CTL POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   CTLPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMMIXCT             GET MIX POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   MIXPCTO,WORK9+4
         L     R5,PAMMIXCT             GET MIX POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   MIXPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMTELCT             GET TEL POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   TELPCTO,WORK9+4
         L     R5,PAMTELCT             GET TEL POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   TELPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMISOCT             GET ISO POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   ISOPCTO,WORK9+4
         L     R5,PAMISOCT             GET ISO POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   ISOPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMSHRCT             GET SHARED   POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
          MVC   SHRPCTO,WORK9+4
         L     R5,PAMSHRCT             GET SHR POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   SHRPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMRPLCT             GET RPL   POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   RPLPCTO,WORK9+4
         L     R5,PAMRPLCT             GET RPL POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   RPLPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMPGMCT             GET PGM POOL
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   PGMPCTO,WORK9+4
         L     R5,PAMPGMCT             GET PGM POOL
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   PGMPGO,WORK8+4          MOVE TO OUTPUT FIELD
         SR    R6,R6                   CLEAR REGISTER
         L     R7,PAMCTLCT             GET CTL-SUBPOOL
         A     R7,PAMTELCT             ADD  TELE
         A     R7,PAMMIXCT             ADD  MIX
         A     R7,PAMISOCT             ADD  ISO
         A     R7,PAMSHRCT             ADD  SHR
         A     R7,PAMRPLCT             ADD  RPL
         A     R7,PAMPGMCT             ADD  PGM
         LR    R5,R7
         M     R6,=F'1///'
         D     R6,PAMPGNUM             COMPUTE PERCENTAGE
         CVD   R7,DWORD
         MVC   WORK9,=X'4/2/2/2/2/212/4B2/'
         ED    WORK9,DWORD+4
         MVC   TOTPCTO,WORK9+4
         CVD   R5,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   TOTPGO,WORK8+4          MOVE TO OUTPUT FIELD
***********************************************************************
*        COMPUTE FOR ACTIVE TASK CHAIN                                *
***********************************************************************
         LA    R5,CSAACTBA-(DCAKCBA-DFHDCADS)
*                                      GET ADDRESS OF END OF CHAIN
         L     DCACBAR,CSAACTBA        GET HIGH PRIORITY DCA
         SR    R6,R6                   CLEAR COUNTER
DCALOOPA LA    R6,1(R6)                INCREMENT BY 1
         L     DCACBAR,DCAKCBA         ADDRESS NEXT DCA
         C     R6,=F'99'               MORE THAN 99 ACTIVE ?
         BH    ENDLOOPA                YES, THEN STOP
         CR    DCACBAR,R5              IS IT END OF CHAIN ?
         BNE   DCALOOPA                NO, PROCESS NEXT DCA
ENDLOOPA CVD   R6,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
          ED    WORK8,DWORD+4           EDIT
         MVC   ACTTO,WORK8+6           MOVE TO OUTPUT FIELD
***********************************************************************
*        COMPUTE FOR SUSPENDED TASK CHAIN                             *
***********************************************************************
         LA    R5,CSASUSBA-(DCAKCBA-DFHDCADS)
*                                      GET ADDRESS OF END OF CHAIN
         L     DCACBAR,CSASUSBA        GET HIGH PRIORITY DCA
         SR    R6,R6                   CLEAR COUNTER
         LTR   DCACBAR,DCACBAR         ANY SUSPENDED TASKS AT ALL ?
         BE    ENDLOOPS                NO, SKIP COUNTING THEM
DCALOOPS LA    R6,1(R6)                INCREMENT BY 1
         L     DCACBAR,DCAKCBA         ADDRESS NEXT DCA
         C     R6,=F'99'               MORE THAN 99 ACTIVE ?
         BH    ENDLOOPS                YES, THEN STOP
         CR    DCACBAR,R5              IS IT END OF CHAIN ?
         BNE   DCALOOPS                NO, PROCESS NEXT DCA
ENDLOOPS CVD   R6,DWORD
         MVC   WORK8,=X'4/2/2/2/2/2/212/' GET EDIT MASK
         ED    WORK8,DWORD+4           EDIT
         MVC   SUSPO,WORK8+6           MOVE TO OUTPUT FIELD
***********************************************************************
*        END    BUILD OUTPUT MAP AND SEND IT OUT                      *
***********************************************************************
         CLC   STARTCD,=C'S '          STARTED FROM INTERVAL CNTRL ?
         BE    STRTTASK                YES, START TASK AND DISPLAY
SENDTERM CLI   EIBAID,DFHPF5           DID USER PRESS PF 5
         BE    AUTORFSH                YES, START AUTO REFRESH
         LH    R5,TIOALEN              LENGTH OF DATA RECEIVED
         LTR   R5,R5                   IS SCREEN ALREADY FORMATTED ?
         BZ    SENDDATA                YES, SEND DATA ONLY
         EXEC CICS SEND MAP('SYST') FROM(SYSTO) ERASE
         B     RETURN
SENDDATA EXEC CICS SEND MAP('SYST') FROM(SYSTO) DATAONLY
         B     RETURN
AUTORFSH EXEC CICS START TRANSID(EIBTRNID)                             *
                         TERMID(EIBTRMID)                              *
                         REQID(SYSTREQ)                                *
                         INTERVAL(////15)
         EXEC CICS SEND CONTROL FREEKB
         B     RETURN
STRTTASK EXEC CICS START TRANSID(EIBTRNID)                             *
                         TERMID(EIBTRMID)                              *
                         REQID(SYSTREQ)                                *
                         INTERVAL(////15)
         EXEC CICS SEND MAP('SYST') FROM(SYSTO) DATAONLY
         B     RETURN
ENDPROG  EXEC CICS CANCEL REQID(SYSTREQ) NOHANDLE
         EXEC CICS SEND CONTROL ERASE FREEKB
         EXEC CICS RETURN
RETURN   EXEC CICS RETURN TRANSID(EIBTRNID)
EXMVC    MVC   /(/,R5),=5/C'*'         USED BY EXECUTE.
         LTORG
         END
THE MAP
SYSTMS   DFHMSD TYPE=&SYSPARM,MODE=OUT,CTRL=(FREEKB,FRSET),LANG=ASM,   *
               TIOAPFX=YES,EXTATT=MAPONLY,COLOR=BLUE
SYST     DFHMDI SIZE=(24,8/)
         DFHMDF POS=(/1,27),LENGTH=26,INITIAL='DYNAMIC STORAGE ALLOCATI*
               ON',ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
DATE     DFHMDF POS=(/1,71),LENGTH=/8,INITIAL='XX.XX.XX'
         DFHMDF POS=(/2,11),LENGTH=/2,INITIAL=' /'
         DFHMDF POS=(/2,21),LENGTH=/2,INITIAL='2/'
         DFHMDF POS=(/2,31),LENGTH=/2,INITIAL='4/'
         DFHMDF POS=(/2,41),LENGTH=/2,INITIAL='6/'
         DFHMDF POS=(/2,51),LENGTH=/2,INITIAL='8/'
          DFHMDF POS=(/2,6/),LENGTH=/3,INITIAL='1//'
         DFHMDF POS=(/2,7/),LENGTH=/9,INITIAL='%      NO'
         DFHMDF POS=(/3,11),LENGTH=/2,INITIAL=' !'
         DFHMDF POS=(/3,21),LENGTH=/2,INITIAL='! '
         DFHMDF POS=(/3,31),LENGTH=/2,INITIAL='! '
         DFHMDF POS=(/3,41),LENGTH=/2,INITIAL='! '
         DFHMDF POS=(/3,51),LENGTH=/2,INITIAL='! '
         DFHMDF POS=(/3,6/),LENGTH=/3,INITIAL=' ! '
         DFHMDF POS=(/4,/1),LENGTH=1/,INITIAL='CONTROL'
CTL      DFHMDF POS=(/4,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
CTLPCT   DFHMDF POS=(/4,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
CTLPG    DFHMDF POS=(/4,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(/6,/1),LENGTH=1/,INITIAL='TELEPROC.'
TEL      DFHMDF POS=(/6,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
TELPCT   DFHMDF POS=(/6,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
TELPG    DFHMDF POS=(/6,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(/8,/1),LENGTH=1/,INITIAL='MIXED'
MIX      DFHMDF POS=(/8,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
MIXPCT   DFHMDF POS=(/8,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
MIXPG    DFHMDF POS=(/8,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(1/,/1),LENGTH=1/,INITIAL='ISOLATED'
ISO      DFHMDF POS=(1/,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
ISOPCT   DFHMDF POS=(1/,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
ISOPG    DFHMDF POS=(1/,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(12,/1),LENGTH=1/,INITIAL='SHARED'
SHR      DFHMDF POS=(12,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
SHRPCT   DFHMDF POS=(12,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
SHRPG    DFHMDF POS=(12,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(14,/1),LENGTH=1/,INITIAL='RPL'
RPL      DFHMDF POS=(14,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
RPLPCT   DFHMDF POS=(14,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
RPLPG    DFHMDF POS=(14,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(16,/1),LENGTH=1/,INITIAL='PROGRAM'
PGM      DFHMDF POS=(16,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
PGMPCT   DFHMDF POS=(16,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
PGMPG    DFHMDF POS=(16,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(19,/1),LENGTH=1/,INITIAL='TOTAL'
TOT      DFHMDF POS=(19,12),LENGTH=5/,INITIAL=' ',                     *
               ATTRB=(ASKIP,BRT),COLOR=NEUTRAL
TOTPCT   DFHMDF POS=(19,67),LENGTH=/5,INITIAL='999.9',                 *
               ATTRB=(ASKIP),COLOR=RED
TOTPG    DFHMDF POS=(19,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(21,/1),LENGTH=11,INITIAL='DSA SIZE  :'
DSA      DFHMDF POS=(21,13),LENGTH=/4,INITIAL='9999',                  *
                ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(21,18),LENGTH=/5,INITIAL='PAGES'
         DFHMDF POS=(21,3/),LENGTH=11,INITIAL='ALLOCATED :'
ALLOC    DFHMDF POS=(21,42),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(21,47),LENGTH=/5,INITIAL='PAGES'
         DFHMDF POS=(21,59),LENGTH=/9,INITIAL='CUSHION :'
CUSH     DFHMDF POS=(21,69),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(21,74),LENGTH=/5,INITIAL='PAGES'
         DFHMDF POS=(22,/1),LENGTH=11,INITIAL='ACT. TASK :'
ACTT     DFHMDF POS=(22,15),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(22,18),LENGTH=13,INITIAL='MAX. TASK   :'
MAXT     DFHMDF POS=(22,32),LENGTH=/3,INITIAL='999',                   *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(22,38),LENGTH=15,INITIAL='REACHED MAX.  :'
RMAX     DFHMDF POS=(22,54),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(22,59),LENGTH=16,INITIAL='SHORT ON STOR. :'
SHORT    DFHMDF POS=(22,77),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(23,/1),LENGTH=11,INITIAL='SUS. TASK :'
SUSP     DFHMDF POS=(23,15),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(23,18),LENGTH=13,INITIAL='STOR. VIOL. :'
VIOL     DFHMDF POS=(23,33),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(23,38),LENGTH=15,INITIAL='REACHED CUSH. :'
RCUSH    DFHMDF POS=(23,54),LENGTH=/2,INITIAL='99',                    *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(23,59),LENGTH=11,INITIAL='PAGE SIZE :'
PAGESZ   DFHMDF POS=(23,75),LENGTH=/4,INITIAL='9999',                  *
               ATTRB=(ASKIP),COLOR=RED
         DFHMDF POS=(24,13),LENGTH=14,INITIAL='ENTER=REFRESH'
         DFHMDF POS=(24,34),LENGTH=/8,INITIAL='PF/3=END'
         DFHMDF POS=(24,49),LENGTH=17,INITIAL='PF/5=AUTO REFRESH'
         DFHMSD TYPE=FINAL
         END


Steen Spuur Hansen
Systems Programmer (Denmark)  ) Xephon 1988























