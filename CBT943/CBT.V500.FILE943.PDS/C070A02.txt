Enhanced shutdown statistics

While trying to tune CICS DSA usage, I frequently cross-
reference the CICS-generated program usage statistics to see
which programs are used most frequently, using a library
listing to see how big the modules are and CEMT I PROG to
see which modules have a use count.  I cross-reference all of
these for a few hundred programs to try and decide if I should
change the residency of a program.

As this is very tedious and time consuming and all of the above
information is available within CICS itself, I have written the
following program to produce a report to the CICS log which
lists all this information on one line: ie program name, module
length, reuse attribute, map attribute, residency attribute, type
attribute, residency count, number of loads, and the use count.

It can be invoked by a transaction to produce a listing of usage
up to that point or, most usefully, can be added to the
shutdown PLT to produce enhanced shutdown statistics.

It has been tested under CICS 1.7 and 2.1 (note that it must be
linked AMODE 31 for CICS 2.1).

         MIXDMODE
         COPY  DFHCSADS
         DFHTCA CICSYST=NO
PPTXBAR  EQU   8
PPTCBAR  EQU   9
         COPY  DFHPPTDS
DFHEISTG DSECT
PPTINIT  DS    CL1' '
PPTENTRY DS    0CL128
         DS    CL4
WARN     DS    CL1
         DS    CL1
PPTNAME  DS    CL8'PPTNAME '
         DS    CL3
PPTLEN   DS    CL8' 0000000'
         DS    CL4
PPTRUSE  DS    CL5'REUSE'
         DS    CL4
PPTMAP   DS    CL3'MAP'
         DS    CL4
PPTRES   DS    CL3'RES'
         DS    CL4
PPTTYP   DS    CL4'PROG'
         DS    CL3
PPTCNT   DS    CL4' 000'
         DS    CL3
PPTLOAD  DS    CL6' 00000'
         DS    CL3
PPTUSE   DS    CL8' 0000000'
         ORG   PPTENTRY
         DS    CL128
DWORD    DS    D
         DFHTM MF=(A,PARMLIST)
         DFHTM MF=(D,TMSTATIC)
         DFHTM MF=(D,SKTTBLE)
         DFHTM MF=(D,DIRELEM)
         ADRREGS
PGMSTATS CSECT
         MVC   PPTINIT,=C' '
*  PRINT HEADINGS
         EXEC  CICS WRITEQ TD,                                         X
               QUEUE(CSML),                                            X
               FROM(PPTHEAD),                                          X
               LENGTH(L'PPTHEAD)
*    GET PPT ENTRIES
         DFHTM TYPE=(GETFIRST,INLINE,(PPTXBAR),(PPTCBAR),OP),          X
               TABLE=PPT,                                              X
               NOTFND=EXIT
         B     PPTFND
GETPPT   EQU   *
         DFHTM TYPE=(GETNEXT,INLINE,(PPTXBAR),(PPTCBAR),OP),           X
               TABLE=PPT,                                              X
               NOTFND=EXIT
PPTFND   EQU   *
*  INITIALIZE AREA
         MVC   PPTENTRY,PPTENTRY-1
*  SET UP PROGRAM NAME
         MVC   PPTNAME,PPTPI
*  SET UP PROGRAM LENGTH
         L     R02,PPTSAR
         CVD   R02,DWORD
         MVC   PPTLEN,EDITMASK
         ED    PPTLEN,DWORD+4
*  SET UP REUSABLE INDICATOR
         TM    PPTTLR,PPTRLIND
         BNO   NOREUSE
         MVC   PPTRUSE,=C'REUSE'
NOREUSE  EQU   *
*  SET UP USAGE IS MAP INDICATOR
         TM    PPTTLR,PPTUMAP
         BNO   NOMAP
         MVC   PPTMAP,=C'MAP'
NOMAP    EQU   *
*  SET UP RES=YES INDICATOR
         TM    PPTTLR,PPTPCRES
         BNO   NORES
         MVC   PPTRES,=C'RES'
NORES    EQU   *
*  SET UP PROG DEFINITION
         TM    PPTTYPE,PPTPROG
         BNO   NOPROG
         MVC   PPTTYP,=C'PROG'
         B     PPTCRES
NOPROG   EQU   *
*  SET UP MAPSET DEFINITION
         TM    PPTTYPE,PPTMAPST
         BNO   NOMAPS
         MVC   PPTTYP,=C'MAPS'
         B     PPTCRES
NOMAPS   EQU   *
*  SET UP PARTIONSET  DEFINITION
         TM    PPTTYPE,PPTPTNST
         BNO   NOPART
         MVC   PPTTYP,=C'PART'
         B     PPTCRES
NOPART   EQU   *
PPTCRES  EQU   *
*  SET UP RESIDENT COUNTER
         MVC   DWORD+4(2),=X'0000'
         MVC   DWORD+6(2),PPTRCC
         MVC   PPTCNT,EDITMASK
         ED    PPTCNT,DWORD+6
*  SET UP FETCH COUNTER
         LH    R02,PPTFCH
         CVD   R02,DWORD
         MVC   PPTLOAD,EDITMASK
         ED    PPTLOAD,DWORD+5
*  SET UP USE COUNTER
         L     R02,PPTUCC
         CVD   R02,DWORD
         MVC   PPTUSE,EDITMASK
         ED    PPTUSE,DWORD+4
*  SET UP WARNING FLAG
         TM    PPTTLR,PPTPCRES
         BNO   WARN10
         CLC   PPTUCC,=F'0'
         BNE   WARN10
         MVC   WARN,=C'*'
WARN10   EQU   *
*  WRITE OUT RECORD
         EXEC  CICS WRITEQ TD,                                         X
               QUEUE(CSML),                                            X
               FROM(PPTENTRY),                                         X
               LENGTH(L'PPTENTRY)
         B     GETPPT
*    EXIT
EXIT     EQU   *
         EXEC  CICS RETURN
*    RETURN TO CICS
TABERR   EXEC  CICS ABEND ABCODE(TBER)
         EXEC  CICS RETURN
PPTNTF   EXEC  CICS ABEND ABCODE(PPNF)
         EXEC  CICS RETURN
*    GET THE STORAGE FOR THE SCREEN
*        EXEC  CICS GETMAIN,                                          X
*              SET(R04),                                              X
*              LENGTH(SCRLEN)
*    WORKAREAS
         LTORG
PPNF     DC    C'PPNF'
TBER     DC    C'TBER'
CSML     DC    C'CSML'
EDITMASK DC    X'4020202020202020'
PPTHEAD  DS    0CL128
         DC    CL4'    '
         DC    CL1' '
         DC    CL1' '
         DC    CL8'PROGNAME'
         DC    CL3'   '
         DC    CL8' LENGTH '
         DC    CL4'    '
         DC    CL5'REUSE'
         DC    CL4'    '
         DC    CL3'MAP'
         DC    CL4'   R'
         DC    CL3'ESD'
         DC    CL4'NT  '
         DC    CL4'TYPE'
         DC    CL3'  R'
         DC    CL4'ES C'
         DC    CL3'NT '
         DC    CL6' LOADS'
         DC    CL3'   '
         DC    CL8' USE CNT'
         DC    45C' '
         END


Bartley O'Malley
Database Administrator
Ladbroke Racing Ltd (UK)                           c  Xephon 1991

