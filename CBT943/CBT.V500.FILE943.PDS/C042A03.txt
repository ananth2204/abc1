CSP CICS printing considerations

IBM's strategic Fourth Generation Language, CSP, has recently
been introduced in our installation.  When we were evaluating
CSP, we were concerned how it would handle CICS printing.  I
have done a fair amount of research on this subject and here I will
briefly present the main points involved and will try to explain the
concept with the use of a logic flow diagram and sample CSP
applications.  One of the beauties of CSP is its portability to any
environment, namely CICS, CMS, DPPX, or PC.  However, here
we will only consider CSP applications running under CICS.

If you are running under CICS, there are two ways you can code a
CSP application to print a report: synchronously with the
application transaction or asynchronously.


SYNCHRONOUSLY WITH THE APPLICATION TRANSACTION

The CSP application can issue a DISPLAY command.  The same
application may CONVERSE with display terminals as well.  The
map specified on the DISPLAY must be defined for the device
type PRINTER.  The printing is accumulated in CICS temporary
storage and is not routed to the printer until the transaction ends.
While the report is being printed out the originating terminal is
held up until the printing is finished.  The print destination is
defined at generation time but it may be overridden at execution
time by starting the application as:

    XSPE appl P=terminal-id of printer

A big restriction is that it is not possible to change the printer
destination after CSP/AE is started although it is relatively easy to
code a CSP application to do this.  This method is inefficient in
that it affects the response time of the operator originating the
transaction.


ASYNCHRONOUSLY

The other method available is to start an asynchronous task which
handles the printing while the terminal operator continues with
other tasks.  Here is how it works:

1   The application issues the command 'CALL CREATX
    P1,P2,P3'.
2   This causes a CICS START command to be issued which
    STARTs the printing application.
3   This printing application runs independently of the terminal
    application.
4   Printing is done on the printer without affecting the terminal
    activity or its response time.
5   It is possible to change the printer destination dynamically
    without it being necessary to finish CSP/AE and start it again.
    The printer-id can be specified as an operand in the
    command.  Also, the operator may designate a destination
    printer, which overrides the default destination.  This
    destination is passed to other applications.
6   The printing application must be defined as MAIN BATCH.
7   The printing application can have only DISPLAYs.
8   The print is accumulated in CICS temporary storage and is
    printed out at the end of the application (EZECLOS or
    CLOSE in Version 3).
9   The print application must be in the default ALF named
    FZERSAM.

While the print application is active, the print is accumulated in
CICS temporary storage.  When the application ends, CSP
enqueues on the CICS intra-partition transient data queue attached
to the target printer and dumps the print there.  Attached to this
intra-partition transient data queue is transaction XSPP, which
gets triggered.  XSPP is a CSP-supplied transaction that reads the
queue and immediately starts printing on the target printer.  This
is illustrated in Figure 1.

A sample CSP application is reproduced below, which shows the
use of CALL CREATX.

Using CALL CREATX to start another CSP application to print

     MOVE 11/ TO LONG;            move length of msg
     MOVE 'DHC1' TO TRANS;        move transaction code
     MOVE ' ' TO DUMMY;           4 blanks
     MOVE MAP2RTNO TO WORKA.PARTNO;        move data to be printed
     MOVE MAP2.DESC   TO WORKA.DESC;
     MOVE MAP2.QONH   TO WORKA.QONH;
     ...
     MOVE PRID TO RECIPA;         move printer id (eg P/87)
-->  CALL CREATX WORKA,P81//,RECIPA;     Starts new transaction
     .....

Sample of WORK AREA:

                             Record Name = WORKA
   NAME      LEVEL OCCURS TYPE LENGTH DEC  BYTES  DESCRIPTION
   *          /5   ////1  CHA   //11/      //11/  all work
   LONG       1/   ////1  BIN   ////4      ////2  length (max 4/96)
   *          1/   ////1  CHA   ////8      ////8
   TRANS      15   ////1  CHA   ////4      ////4  transaction-id
   DUMMY      15   ////1  CHA   ////4      ////4  4 blanks
   *          1/   ////1  CHA   //1//      //1//  all work passed
   PARTNO     15   ////1  BIN   ////4      ////2  PART NUMBER
   DESC       15   ////1  CHA   ///24      ///24  DESCRIPTION
   QONH       15   ////1  BIN   ////9      ////4  QTY ON HAND
   ....
   P81//      77   ////1  CHA   ////1      ////1  not used (81// only)
   RECIPA     77   ////1  CHA   ////4      ////4  terminal-id

Example of CSP application started by CALL CREATX

                       Application Name = CRXIMP
--->  Type of application => 2
                                           Working Storage => WORX
        1  Main Transaction
------> 2  Main Batch                      Map Group Name  => GRPCRX
        3  Called Transaction
        4  Called Batch                    Message File    =>

                         APPLICATION DEFINITION
                        Application Name = CRXIMP
Total lines ///1 ...... APPLICATION PROCESS LIST .....................
SEL PROCESS    OPTION     OBJECT     ERROR     DESCRIPTION
***                      TOP OF LIST
//1 IMPR       DISPLAY    MAPCRX
***                      END OF LIST

                     APPLICATION PROCESS DEFINITION
   Process = IMPR       Description =
    Option = DISPLAY         Object = MAPCRX
Total lines ///1......... STATEMENT DEFINITION........................
***                      TOP OF LIST
//1 MOVE WORX TO MAPCRX;  move data to map to be printed
***  --------------------- PROCESS OPTION --------------------
----
***                      END OF LIST

                           RECORD DEFINITION
                          Record Name = WORX
Total lines ///9 ........ DATA ITEM DEFINITION .......................
    NAME     LEVEL OCCURS TYPE LENGTH DEC  BYTES  DESCRIPTION
***                      TOP OF LIST
//1 *         /5   ////1  CHA   //1//      //1//  all work received
//1 PARTNO    1/   ////1  BIN   ////4      ////2  PART NUMBER
//2 DESC      1/   ////1  CHA   ///24      ///24  DESCRIPTION
//3 QONH      1/   ////1  BIN   ////9      ////4  QTY ON HAND
//4 SUPLNO    1/   ////1  NUM   ////4      ////4
//5 NAME      1/   ////1  CHA   ///15      ///15  NAME
//6 ADDRESS   1/   ////1  CHA   ///35      ///35  ADDRESS
//7 QONORD    1/   ////1  NUM   ////9      ////9
//8 PRICE     1/   ////1  PACK  ////5  /2  ////3  PRICE
//9 DELIV     1/   ////1  NUM   ////4      ////4
***                      END OF LIST

The application XSPE for CRXIMP must be re-linked and a
transaction called DHC1 must be included in the PCT pointing to
that module created.

Job used to re-link CSP/AE creating another phase:

// LIBDEF *,SEARCH=(library.sublibrary)
// LIBDEF PHASE,CATALOG=library,sublibrary
// OPTION ERRS,SXREF,SYM,CATAL,NODECK
   PHASE crximp,*   <--- has to be the same name
   INCLUDE DFHEAI       as the CSP application
   INCLUDE DCBIPL
   INCLUDE DCBMSGS
   INCLUDE DFHEAI/
   ENTRY   DFHEAI
// EXEC LNKEDT
/&


Nusrat Waheed
Technical Support Project Leader
Olayan (Saudi Arabia) ) Xephon 1989

