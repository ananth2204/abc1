 PLT program to set up directory pointers

One improvement of CICS 1.6.0 and 1.6.1 over CICS 1.5 is that the directory
pointer to a non-resident program is set up when the program is first referenced
rather than at CICS initialisation time, as in CICS 1.5.  This speeds up CICS
start-up time but caused some problems in our installation.

If a new version of a program that has not been loaded since CICS start-up is
copied to the CICS library (thus replacing the old version) and then
subsequently loaded, the new version becomes effective.  This can cause problems
if the new version is not supposed to be effective yet.

Our solution is to include a PLT program that scans the PPT and performs a BLDL
to obtain the directory pointers for all programs just like CICS 1.5.  This will
ensure that old versions of programs are used until a new copy is requested
through CEMT or the next CICS start-up.

         .
         .
*****    PROGRAM WORKAREA FOR SAVING REGISTERS *****
WORKAREA DSECT
         DS    CL8
SAVEAREA DS    16F
WORKAL   EQU   *-WORKAREA
*****    PROGRAM ENTRY POINT *****
TPSU10   CSECT
         BALR  BASE,0
         USING *,BASE
*****    OBTAIN WORKAREA AND SAVE REGISTERS *****
         DFHSC TYPE=GETMAIN,                                           X
               NUMBYTE=WORKAL,                                         X
               CLASS=USER
         L     WORKAR,TCASCSA           ADDRESS WORKAREA.
         USING WORKAREA,WORKAR
         STM   0,15,SAVEAREA            SAVE REGISTERS
*****    LOCATE FIRST ENTRY IN PPT *****
         DFHTM TYPE=(GETFIRST,INLINE,(R9),(R7)),TABLE=PPT
         USING DFHPPTDS,R7
         USING DFHSITDS,R6
*     FOR EACH PPT ENTRY,
*         IF PPTDASA NON-ZERO OR PROGRAM IN USE
*         ELSE LOCATE TTR.
TABLOOP  EQU   *
         LTR   R7,R7                     END OF TABLE?
         BZ    GOTOCICS                  YES, END
         NC    PPTDASA,PPTDASA           BLDL ALREADY DONE?
         BNZ   NXTENTRY                  YES NEXT ENTRY
         CP    PPTRCC,=PL2'0'      IF PROGRAM IS NOT IN USE
         BNE   NXTENTRY            THEN CAN NEWCOPY
*****    USE THE LOCATE ROUTINE (SIPBLDLE) TO LOCATE THE MODULE *****
         L     SITCBAR,CSASITBA    GET SIT ADDRESS
         USING DFHSITDS,SITCBAR
         L     R14,SITCOMA         GET SIP COMM AREA ADDR
         USING SIPCOM,R14          ESTABLISH ADDRESSABILITY
         OI    SIPFLAG,SIPBLAPP    SET BLDL FLAGS
         NI    SIPFLAG,255-SIPBLNUC-SIPSHRMD-SIPSHRPL-SIPBLERR
         ST    PPTCBAR,SIPARMP3    PPT ADDRESS TO PASS
         L     R14,SIPBLDL         GET LOCATE ROUTINE ENTRY
         BALR  R14,R14             GO LOCATE MODULE
         DROP  R14
         L     SITCBAR,CSASITBA    GET SIT ADDRESS
         L     SIPCBAR,SITCOMA     ADDRESS SIP COMM AREA
         DROP  SITCBAR
         USING SIPCOM,SIPCBAR
         TM    SIPFLAG,SIPBLERR          MODULE FOUND?
         BNO   NXTENTRY                  NO, NEXT
          TM    PPTTLR2,PPTOSLD           WAS PROGRAM LOADED?
         BZ    NXTENTRY
         TM    SIPFLAG,SIPSHRMD    MODULE IN LPA?
         BZ    INCORE              ..NO,
         OI    PPTFLGS,PPTSHRMD    ..YES, FLAG SHARED
INCORE   OI    PPTFLGS,PPTPGMIC    FLAG IN-CORE
         DROP  SIPCBAR
*****    LOCATE AND PROCESS NEXT PPT ENTRY *****
NXTENTRY DFHTM TYPE=(GETNEXT,INLINE,(R9),(R7)),TABLE=PPT
         B     TABLOOP
*     PROGRAM EXIT.
*     RESTORE REGISTERS AND FREEMAIN.
GOTOCICS EQU   *
         ST    WORKAR,TCASCSA          SET FREEMAIN ADDRESS
         LM    0,15,SAVEAREA           RESTORE REGISTERS
         DFHSC TYPE=FREEMAIN
         DFHPC TYPE=RETURN
         LTORG
         END


Hong Kong Bank (Hong Kong)    ) Hong Kong Bank 1987












































