More about CSP printing

After reading the article in the May 1989 issue about CSP
printing, which explains in a clear way how CSP handles printing
under CICS, I would like to explain the problems and solutions
we encountered at our site.  We are printing asynchronously
because of the advantages this method has over synchronous
printing.

THE PROBLEM

The basic problem is that CSP will know on which printer it is
running, but not which print program it should run.  The way of
specifying a print program by assembling CSP with a unique
phase name and giving it a unique transaction code seems to be
the only possible solution.

We system programmers, however, are already quite busy
maintaining the system and trying not to overlook anything when
a new version of system software is installed.

CSP can run under the single transaction code of XSPE.  This
does not, however, apply to print programs, where the
development team has to wait until you have changed the PCT and
PPT and assembled the CSP modules.  In addition, every time you
install a new version of CSP, or even apply PTFs, you need to re-
assemble all of your CSP print program modules.

THE SOLUTION

The solution is, therefore, to tell CSP which program it should
run.  Because you can't tell it directly (it wouldn't understand),
you have to do it indirectly.  When you use the CREATEX
command, instead of invoking CSP directly, you can invoke your
own program, which in turn transfers control to CSP.  At this
time, CSP will understand and execute the desired program on the
printer.  Figure 1 shows how this works.

To call a transaction from CSP you have to code the following
command:

    CREATEX request,prid,recip

where request is an area of working-storage built up as follows:

    %    2 bytes in binary format, value is n bytes (maximum is
4096 bytes).

    %    8 bytes in character format, value is 'ZPRT'.

    %    8 bytes in character format, value is 'FZERSAM.' (ALF
name).

    %    8 bytes in character format, value is the name of the CSP
print program.

    %    n bytes minus 26 in character format, value is data for
print program (maximum 4070 bytes).

prid is a dummy field.

and recip is a 4-byte field in character format and contains the
printer-id.

The CSP print program must be generated as MAIN BATCH.

The program invoked by transaction ZPRT is as follows:

IDENTIFICATION DIVISION.
PROGRAM-ID.    ZCSPPRTT.
ENVIRONMENT    DIVISION.
DATA           DIVISION.
WORKING-STORAGE SECTION.
01  WORKING-AREA.
    02 COM-LENGTH          PIC S9(4) COMP VALUE +4086 SYNC.
    02 COM-AREA.
       03 COM-ALF          PIC X(8)  VALUE SPACES.
       03 COM-TRANSFER     PIC X(8)  VALUE SPACES.
       03 COM-DATA         PIC X(4070) VALUE SPACES.

PROCEDURE DIVISION.

MAIN-PART SECTION.
    EXEC CICS RETRIEVE     INTO(COM-AREA)
                           LENGTH(COM-LENGTH)   END-EXEC.
    IF COM-LENGTH          > 4086
      THEN EXEC CICS RETURN                     END-EXEC.
    EXEC CICS XCTL         PROGRAM('DCBINIT')
                           COMMAREA(COM-AREA)
                           LENGTH(COM-LENGTH)   END-EXEC.
    EXEC CICS RETURN                            END-EXEC.
    GOBACK.

This transaction can be used to handle all of your CSP printing
programs.

The only restriction is the length of data passed (ie 4070 bytes),
but there are solutions to this, described in the CICS manuals.

CICS TABLE SPECIFICATIONS

PCT

    DFHPCT TYPE=ENTRY,TRANSID=ZPRT,PROGRAM=ZCSPPRTT

PPT

    DFHPPT TYPE=ENTRY,PROGRAM=ZCSPPRTT,PGMLANG=COBOL


F Van Hoof
Systems Programmer (The Netherlands) ) Xephon 1989


