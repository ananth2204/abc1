 CICS SVC screening (continued)
We conclude this article this month with the publication of the Assembler source
code for the module CSSMAIN.
CSSMAIN SOURCE LISTING
*** This is the main program in the CICS SVC screening system. Con- ***
*   trol is given to this program by the MVS system, when a request   *
*   is made for OPEN, CLOSE or RDJFCB, which is done by issuing a SVC *
*   19, 20 or 64. Since the routine can be invoked by several tasks   *
*   simultaneously the integrity has to be ensured; this is done by   *
*   issuing a local ENQ at entry and DEQ at exit. The action taken    *
*   depends on the request that is trapped:                           *
*   OPEN    First each ACB's and/or DCB's involved is checked for al- *
*           location. If it is not allocated, the CSSIN file is scan- *
*           ned, and if the DDname is found here, the related dataset *
*           is allocated. The second step is the actual OPEN, which   *
*           is done by re-issuing the SVC 19. The third step consists *
*           of writing at trace record for each ddname involved in    *
*           the OPEN request.                                         *
*   CLOSE   First a trace record is written for each ACB/DCB involved *
*           in the request for close. Next, the actual CLOSE is done  *
*           by re-issuing the SVC 20. Note, that if a dynamic alloca- *
*           tion was done during the open process, it will now be     *
*           freed again since FREE=CLOSE was specified during dynamic *
*           allocation.                                               *
*   RDJFCB  If the ddname in the RDJFCB request is allocated, the     *
*           request is fullfilled by re-issuing the SVC 64. If it is  *
*           NOT allocated, the CSSIN file is checked for matching dd- *
*           name. If the name is found here, the associated dataset   *
*           name is placed in byte 1-44 of the JFCB area specified    *
*           via the DCB, and control is given back to the requestor   *
*           without actually passing the request on to MVS. There is  *
***         no trace record associated with this type of request.   ***
CSSMAIN  CSECT ,                   PROGRAM START.
CSSMAIN  AMODE 24                  ADDRESSING MODE.
CSSMAIN  RMODE 24                  RESIDENCY MODE.
         SPLEVEL SET=2             MVS/XA MACRO EXPANSIONS.
         USING *,R6                DECLARE BASE.
         USING TCB,R4              ESTABLISH TCB ADDRESSABILITY.
         USING RBBASIC,R5          ESTABLISH RB ADDRESSABILITY.
**********             Serialization and setup.              **********
         LR    R8,R1               PUSH REG-1.
         ENQ   (QNAME,RNAME,E,23,STEP) SERIALIZATION.
         LR    R1,R8               POP REG-1.
         NI    TCBFLGS7,255-TCBSVCS DEACTIVATE SVC SCREENING.
         ST    R13,SAVER13         SAVE REG-13.
         ST    R14,SAVER14         SAVE REG-14.
         STM   R15,R1,PARMSAVE     SAVE SVC PARAMETER REGISTERS.
         LA    R13,REGSAVE         POINT AT NEW SAVE AREA.
         LR    R8,R5               PUSH RB POINTER.
         L     R5,RBLINK           PREVIOUS RB.
         LR    R3,R5               POINT AT
         BCTR  R3,0                SVC CODE.
         IC    R2,RBOPSW+1         GET INTO
         SPKA  0(R2)               CALLER'S KEY.
         LR    R5,R8               POP RB POINTER.
         ESTAE ESTEXIT,CT          ACTIVATE ESTAE EXIT.
**********       Select action depending on SVC code.        **********
         CLI   0(R3),19            REQUEST FOR OPEN ?
         BE    OPEN                - YES, INTERCEPT OPEN...
         CLI   0(R3),20            REQUEST FOR CLOSE ?
         BE    CLOSE               - YES, INTERCEPT CLOSE...
         CLI   0(R3),64            REQUEST FOR RDJFCB ?
         BE    RDJFCB              - YES, INTERCEPT RDJFCB...
         B     EXIT                - THIS SHOULD BE IMPOSSIBLE...
**********         Handle request for OPEN (SVC 19).         **********
OPEN     EQU   *                   REQUEST FOR OPEN.
          L     R11,PARMSAVE+8      LOAD ORIGINAL REG-1.
CHKDYN   EQU   *                   CHECK NEED FOR DYNAMIC ALLOCATION.
         L     R8,0(R11)           POINT AT ACB/DCB.
         CLC   0(2,R8),=X'A020'    VTAM ACB ?
         BE    NEXTDD              - YES, NEXT DDNAME...
         CLC   0(2,R8),=X'A011'    AVP ACB ?
         BE    NEXTDD              - YES, NEXT DDNAME...
         LA    R2,40(R8)           CHECK FOR DDNAME
         DEVTYPE (R2),DEVCHAR      ALREADY ALLOCATED.
         LTR   R15,R15             WAS THAT THE CASE ?
         BZ    NEXTDD              - NO, NEXT DDNAME...
         BAL   R9,CHECKIN          LOOK FOR DDNAME IN CSSIN-DATASET.
         B     NEXTDD              - NOT THERE, NEXT DDNAME...
         MVC   DDNAME+6(8),INREC   BUILD DDNAME TEXT UNIT.
         MVC   DSNAME+6(44),INREC+9 BUILD DSNAME TEXT UNIT.
         LA    R1,S99RBPTR         POINT ADDRESS OF SVC99 RB.
         DYNALLOC ,                REQUEST DYNAMIC ALLOCATION.
         LTR   R15,R15             ALLOCATION OK ?
         BZ    NEXTDD              - YES, NEXT DDNAME...
         MVC   CSS006E+40(R8),DDNAME+6 MOVE DDNAME TO MSG.
         UNPK  WORK9,S99RB+4(5)    EXPAND ERROR CODE
         NC    WORK9(8),=8X'0F'    AND INFO CODE TO
         TR    WORK9(8),=C'0123456789ABCDEF' HEXADECIMAL.
         MVC   CSS006E+62(4),WORK9 MOVE ERROR CODE TO MSG.
         MVC   CSS006E+79(4),WORK9+4 MOVE INFO CODE TO MSG.
         WTO   MF=(E,CSS006E)      WRITE ERROR MESSAGE.
NEXTDD   EQU   *                   NEXT DDNAME.
         TM    0(R11),B'10000000'  LAST ENTRY IN PLIST ?
         BO    DOSVC19             - YES, RE-ISSUE OPEN...
         LA    R11,4(R11)          BUMP POINTER IN PLIST.
         B     CHKDYN              CHECK NEED FOR DYNAMIC ALLOCATION...
DOSVC19  EQU   *                   RE-ISSUE OPEN REQUEST.
         L     R11,PARMSAVE+8      GET PLIST ADDRESS.
         LM    R15,R1,PARMSAVE     GET ORIGINAL PARAMETER REGISTERS.
         SVC   19                  PASS OPEN REQUEST TO MVS...
         STM   R15,R1,PARMSAVE     SAVE UPDATED PARAMETER REGISTERS.
         MVC   LINE+11(5),=C'OPEN ' REQUEST TYPE FOR TRACE ENTRY.
         BAL   R9,TRACE            WRITE TRACE ENTRY...
         B     EXIT                GET OUT...
**********         Handle request for CLOSE (SVC 20).        **********
CLOSE    EQU   *                   REQUEST FOR CLOSE.
         MVC   LINE+11(5),=C'CLOSE' REQUEST TYPE FOR TRACE ENTRY.
         L     R11,PARMSAVE+8      LOAD ORIGINAL REG-1.
         BAL   R9,TRACE            WRITE TRACE ENTRY...
         LM    R15,R1,PARMSAVE     GET ORIGINAL PARAMETER REGISTERS.
         SVC   20                  PASS CLOSE REQUEST TO MVS...
         STM   R15,R1,PARMSAVE     SAVE UPDATED PARAMETER REGISTERS.
         B     EXIT                GET OUT...
**********        Handle request for RDJFCB (SVC 64).        **********
RDJFCB   EQU   *                   REQUEST FOR RDJFCB.
         L     R11,PARMSAVE+8      LOAD ORIGINAL REG-1.
         L     R8,0(R11)           POINT AT DCB.
         BAL   R9,CHECKIN          LOOK FOR DDNAME IN CSSIN DATASET.
         B     DOSVC64             - NOT THERE, DO RDJFCB REQUEST...
         L     R8,36(R8)           PICK UP ADDRESS
         L     R8,0(R8)            OF JFCB AREA.
         MVC   0(44,R8),INREC+9    INSERT DSNAME THERE.
         MVC   PARMSAVE(4),=A(0)   SIMULATE RC=0 FROM RDJFCB REQUEST.
         B     EXIT                GET OUT...
DOSVC64  EQU   *                   RE-ISSUE RDJFCB REQUEST.
         LM    R15,R1,PARMSAVE     GET ORGINAL PARAMETER REGISTERS.
         SVC   64                  PASS RDJFCB REQUEST TO MVS...
         STM   R15,R1,PARMSAVE     SAVE UPDATED PARAMETER REGISTERS.
         B     EXIT                GET OUT...
**********      Scan CSSIN dataset for matching ddname.      **********
CHECKIN  EQU   *                   SEARCH DDNAME IN CSSIN DATASET.
          OPEN  (CSSIN,(INPUT))     PREPARE CSSIN FOR READ.
         TM    CSSIN+48,B'00010000' OPEN OK ?
         BO    GETLOOP - YES,      READ THROUGH IT...
         WTO   'CSS007E - OPEN ERROR ON CONTROL DATASET ''CSSIN'''
         BR    R9                  RETURN IMMEDIATELY...
GETLOOP  EQU   *                   READ THROUGH DATASET.
         GET   CSSIN,INREC         GET A RECORD.
         CLC   INREC(8),40(R8)     DDNAME MATCH ?
         BNE   GETLOOP             - NO, CONTINUE...
         LA    R9,4(R9)            RETURN ADDRESS FOR MATCH.
ENDFILE  EQU   *                   END-OF-FILE ON CSSIN.
         CLOSE (CSSIN)             CLOSE CSSIN DATASET.
         BR    R9                  RETURN TO CALLER...
**********        Generate OPEN/CLOSE trace records.         **********
TRACE    EQU   *                   WRITE TRACE ENTRY TO CSSOUT FILE.
         L     R10,TCBSVCA2        PICK UP ADDRESS
         L     R10,264(R10)        OF CSSOUT DCB.
         TM    48(R10),B'00010000' FILE STILL OPEN ?
         BZR   R9                  - NO, TRACE DEACTIVATED...
         L     R8,0(R11)           POINT AT ACB/DCB.
         CLC   0(2,R8),=X'A011'    AVP ACB ?
         BE    ENDTRACE            - YES, SKIP IT...
         TIME  DEC                 GET DATE AND TIME.
         ST    R1,DATE             SAVE DATE.
         ST    R0,FWORD            EDIT TIME
         MVC   WORK9,=X'F020207A20207A2020' OF
         ED    WORK9,FWORD         DAY IN
         MVC   LINE+1(8),WORK9+1   LINE.
         ST    R8,FWORD            CONVERT
         UNPK  WORK9,FWORD(5)      ACB/DCB
         NC    WORK9(8),=8X'0F'    ADDRESS TO
         TR    WORK9(8),=C'0123456789ABCDEF' HEX.
         MVC   LINE+28(6),WORK9+2  MOVE ADDRESS TO LINE.
         CLC   0(2,R8),=X'A020'    VTAM ACB ?
         BNE   NOTVTAM             - NO, CONTINUE...
         L     R2,72(R8)           GET
         SR    R1,R1               ADDRESS
         IC    R1,0(R2)            OF APPL
         BCTR  R1,0                FIELD.
         MVC   LINE+18(8),=8C' '   MOVE APPLICATION
         EX    R1,VARMOVE          NAME TO LINE.
         MVC   LINE+36(44),=CL44'+++ VTAM APPLICATION' DESCRIPTION.
         B     PUTTRACE            WRITE THE LINE...
VARMOVE  MVC   LINE+18(0),1(R2)    VARIABLE LENGTH MOVE TO LINE.
NOTVTAM  EQU   *                   NOT VTAM ACB.
         LA    R2,40(R8)           INITIATE DDNAME POINTER.
         TM    48(R8),B'00010000'  DATASET OPEN ?
         B     NOTOPEN             - NO, POINTER OK...
         L     R2,TCBTIO           POINT AT
         AH    R2,40(R8)           DDNAME IN
         LA    R2,4(R2)            TIOT.
NOTOPEN  EQU   *                   DATASET NOT OPEN.
         MVC   LINE+18(8),0(R2)    MOVE DDNAME TO LINE.
         MVC   LINE+36(44),=CL44'--- DATASET NOT ALLOCATED' DESCRIPT.
         DEVTYPE (R2),DEVCHAR      CHECK ALLOCATION.
         LTR   R15,R15             IS DATASET ALLOCATED ?
         BNZ   PUTTRACE            - NO, WRITE THE LINE...
         MVC   WORKDCB+40(8),LINE+18 MOVE DDNAME INTO WORK DCB.
         RDJFCB WORKDCB            GET ALLOCATED DATASET NAME.
         MVC   LINE+36(44),JFCB    MOVE IT TO LINE.
PUTTRACE EQU   *                   WRITE TRACE LINE.
         AP    LINECNT,=P'1'       INCREASE LINE COUNT.
         CP    LINECNT,=P'56'      PAGE FULL ?
         BNH   PUTLINE             - NO, SKIP HEADINGS...
         AP    PAGECNT,=P'1'       INCREASE PAGE COUNT.
         ZAP   DWORD,DATE          CONVERT DATE
          CVB   R1,DWORD            TO BINARY.
         SR    R0,R0               SPLIT DATE INTO
         D     R0,=F'1000'         DAY AND YEAR.
         CVD   R1,DWORD            MOVE
         UNPK  HEADER2+73(2),DWORD YEAR TO
         OI    HEADER2+74,X'F0'    HEADER.
         ST    R1,FWORD            LEAP
         TM    FWORD+3,B'00000011' YEAR ?
         BNZ   *+10                - NO, MONTH TABLE OK...
         MVC   MONTHTAB+2(2),=H'29' ADJUST MONTH TABLE.
         ZAP   MONTH,=P'1'         INIT MONTH NO.
         LA    R1,MONTHTAB         INIT MONTH TABLE POINTER.
MONSCAN  EQU   *                   SCAN THROUGH MONTH TABLE.
         CH    R0,0(R1)            CAN SCAN BE TERMINATED ?
         BNH   MONFND              - YES, MONTH FOUND...
         AP    MONTH,=P'1'         INCREASE MONTH NO.
         SH    R0,0(R1)            REDUCE DAY COUNT.
         LA    R1,2(R1)            BUMP TABLE POINTER.
         B     MONSCAN             CONTIUE SCAN PROCESS...
MONFND   EQU   *                   MONTH FOUND.
         UNPK  HEADER2+76(2),MONTH MOVE MONTH
         OI    HEADER2+77,X'F0'    TO HEADER.
         CVD   R0,DWORD            MOVE
         UNPK  HEADER2+79(2),DWORD DAY TO
         OI    HEADER2+80,X'F0'    HEADER.
         MVC   HEADER3+78(3),=X'202020' MOVE PAGE
         ED    HEADER3+77(4),PAGECNT NO TO HEADER.
         PUT   (R10),HEADER1       WRITE 1ST HEADER LINE.
         PUT   (R10),HEADER2       WRITE 2ND HEADER LINE.
         PUT   (R10),HEADER3       WRITE 3RD HEADER LINE.
         PUT   (R10),HEADER4       WRITE 4TH HEADER LINE.
         PUT   (R10),HEADER5       WRITE 5TH HEADER LINE.
         ZAP   LINECNT,=P'8'       RESET LINE COUNTER.
         MVI   LINE,C'0'           DOUBLE SPACE NEXT LINE.
PUTLINE  EQU   *                   WRITE TRACE ENTRY.
         PUT   (R10),LINE          WRITE DETAIL LINE.
         MVI   LINE,C' '           SINGLE SPACE NEXT LINE.
ENDTRACE EQU   *                   TRACE ENTRY GENERATED.
         TM    0(R11),B'10000000'  LAST ENTRY IN PLIST ?
         BOR   R9                  - YES, RETURN TO CALLER...
         LA    R11,4(R11)          BUMP POINTER IN PLIST.
         B     TRACE               TRACE NEXT ENTRY...
**********                 Cleanup and exit.                 **********
EXIT     EQU   *                   EXIT FROM SVC SCREENING ROUTINE.
         SPKA  0                   BACK TO KEY ZERO.
         ESTAE 0                   DEACTIVATE ESTAE ENVIRONMENT.
         L     R13,SAVER13         GET ORIGINAL REG-13.
         L     R14,SAVER14         GET ORIGINAL REG-14.
         LM    R15,R1,PARMSAVE     GET UPDATED PARAMETER REGS.
         OI    TCBFLGS7,TCBSVCS    RE-ACTIVATE SCREENING.
         LR    R8,R1               PUSH REG-1.
         LR    R9,R15              PUSH REG-15.
         DEQ   (QNAME,RNAME,23,STEP) ALLOW NEXT SCREENING REQUEST.
         LR    R1,R8               POP REG-1.
         LR    R15,R9              POP REG-15.
         BR    R14                 RETURN TO SVC CALLER...
**********           Error routine, just in case.            **********
         CNOP  0,4                 ALIGN FULLWORD.
ESTEXIT  EQU   *                   ESTAE ENTRY POINT.
         STM   R14,R12,12(R13)     SAVE REGISTERS.
         L     R6,12(R15)          LOAD BASE REGISTER
         B     *+8                 BRANCH AROUND ADDRESS.
         DC    A(CSSMAIN)          MAIN BASE REGISTER CONTENT.
         LA    R2,ESTASAVE         POINT NEW SAVE AREA.
         ST    R2,8(R13)           CHAIN SAVE
         ST    R13,4(R2)           AREAS TOGETHER.
          LR    R13,R2              SHIFT SAVE AREAS.
         LR    R3,R1               SAVE SDWA ADDRESS.
         WTO   'CSS005W - ESTAE ROUTINE HAS BEEN ACTIVATED'
         LA    R4,EXIT             GET RETRY ADDRESS.
         L     R13,4(R13)          SHIFT SAVE AREAS.
         SETRP WKAREA=(3),REGS=(14,12),DUMP=NO,RC=4,RETADDR=(4),       *
               RETREGS=YES,FRESDWA=YES,RECORD=NO BACK VIA NORMAL EXIT.
**********                  Storage areas.                   **********
REGSAVE  DS    18F                 REGISTER SAVE AREAL.
PARMSAVE DS    3F                  SAVE AREA FOR PARM REGS.
ESTASAVE DS    18F                 ESTAE SAVE AREA.
SAVER13  DS    F                   REG-13 SAVE AREA.
SAVER14  DS    F                   REG-14 SAVE AREA.
INREC    DS    CL80                RECORD AREA FOR CSSIN FILE.
HEADER1  DC    C'1-----------------------------------------------------*
               ---------------------------' 1ST HEADER LINE.
HEADER2  DC    C' KREDITFORENINGEN DANMARK                 C I C S     *
                                  XX/XX/XX' 2ND HEADER LINE.
HEADER3  DC    C' CSS VERSION 1.02             O P E N / C L O S E   T *
               R A C E            PAGE XXX' 3RD HEADER LINE.
HEADER4  DC    C' -----------------------------------------------------*
               ---------------------------' 4TH HEADER LINE.
HEADER5  DC    C'0SVC TIME  TYPE   DDNAME    ADDR    DATASET NAME      *
                                          ' 5TH HEADER LINE.
LINE     DC    81C' '              PRINT LINE FOR CSSOUT FILE.
QNAME    DC    CL8'CSSMAIN'        MAJOR NAME FOR SERIALIZATION.
RNAME    DC    C'CICS SVC SCREENING BUSY' MINOR NAME FOR SERIALIZATION.
DWORD    DS    D                   WORK AREA.
FWORD    DS    F                   WORK AREA.
WORK7    DS    CL7                 WORK AREA.
WORK9    DS    CL9                 WORK AREA.
DEVCHAR  DS    2F                  WORK AREA FOR DEVTYPE MACRO.
LINECNT  DC    PL2'56'             LINE COUNTER.
PAGECNT  DC    PL2'0'              PAGE COUNTER.
MONTH    DS    PL2                 MONTH NUMBER.
MONTHTAB DC    H'31',H'28',H'31',H'30',H'31',H'30' DAYS PER
         DC    H'31',H'31',H'30',H'31',H'30',H'31' MONTH.
DATE     DS    F                   DATE (00YYMMMF).
S99TUPL  DC    A(DDNAME),A(DSNAME),A(STATUS),X'80',AL3(CLFREE) PLIST.
S99RBPTR DS    0F                  POINTER TO TEXT
         DC    X'80',AL3(S99RB)    UNIT PARM LIST.
S99RB    DC    AL1(20),X'01',X'0000',X'0000',X'0000' DYNALLOC
         DC    A(S99TUPL),X'00000000',X'00000000' REQUEST BLOCK.
DDNAME   DC    X'0001',AL2(1),AL2(8),8C'X' DDNAME TEXT UNIT.
DSNAME   DC    X'0002',AL2(1),AL2(44),44C'X' DSNAME TEXT UNIT.
STATUS   DC    X'0004',AL2(1),AL2(1),X'08' DISP=SHR TEXT UNIT.
CLFREE   DC    X'001C',AL2(0)      FREE=CLOSE TEXT UNIT.
WORKDCB  DCB   DDNAME=WORKDCB,DSORG=PS,EXLST=EXLST,MACRF=E
CSSIN    DCB   DDNAME=CSSIN,DSORG=PS,EODAD=ENDFILE,MACRF=GM
EXLST    DS    0F                  EXIT LIST
         DC    X'87',AL3(JFCB)     FOR WORK DCB.
JFCB     DS    CL176               JFCB AREA.
CSS006E  WTO   'CSS006E - ALLOCATION ERROR - DDNAME=XXXXXXXX - ERROR CO*
               DE=XXXX - INFO CODE=XXXX',MF=L ERROR MESSAGE.
**********            Dummy sections and equates             **********
         IKJTCB ,                  TCB DSECT.
         IHARB ,                   RB DSECT.
         IHASDWA ,                 SDWA DSECT.
         END   CSSMAIN             END OF SOURCE.


Claus Jensen
Systems Programmer
Kreditforeningen Danmark (Denmark) ) Kreditforeningen Danmark 1988


