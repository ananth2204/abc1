 Correction to the September issue

In the article CLISTs for unformatted system dumps published in last month's
issue of CICS Update, the two CLISTs were printed without certain special
characters.  We regret very much any inconvenience this may have caused and the
CLISTs are correctly reproduced below.

PROC 0 LIST PROMPT CONLIST SYMLIST
IF &LIST> +
THEN CONTROL LIST
IF &PROMPT> +
THEN CONTROL PROMPT
IF &CONLIST> +
THEN CONTROL CONLIST
IF &SYMLIST> +
THEN CONTROL SYMLIST
CONTROL NOMSG
GLOBAL &HEXVALUE &VALUE &RELCODE &BASECSA &OPFLA
ISPEXEC VGET BASECSA PROFILE
ISPEXEC CONTROL DISPLAY REFRESH
WRITENR IF DFHCSA IS &BASECSA PRESS ENTER, OR TYPE NEW DFHCSA=>
READ &INPUT
IF &INPUT> THEN SET &BASECSA = &STR(&INPUT)
ISPEXEC VPUT BASECSA PROFILE
SET &HEXVALUE = &BASECSA
EQU   DFHCSA &HEXVALUE..
EQU   Z1     DFHCSA REM('DFHCSA')
/* ----- OPTIONAL FEATURES LIST ----- */
EVAL DFHCSA+C8 L(4) CLIST(STORAGE(OPFLA))
EQU Z2 &OPFLA.. REM('OPTION FEATURES LIST')
EQU OPFLA Z2
/* ----- PROG CHECK/ABEND TRACE TABLE ------ */
EVAL OPFLA+1B4 L(4) CLIST(STORAGE(PCATT))
EQU Z3 &PCATT.. REM('PROGRAM CHECK ABEND TRACE TABLE')
EQU PCATT Z3
/* ----- TRACE TABLE HEADER ----- */
EVAL DFHCSA+11C L(4) CLIST(STORAGE(TRTABH))
EQU Z4 &TRTABH.. REM('TRACE TABLE HEADER')
EQU TRTABH Z4

          PROC 0
          GLOBAL &HEXVALUE
/************************************************************
/*    THIS IPCS CLIST WILL RETURN A LIST OF TASKS'
/*    DCA'S AND TCA'S AND ASSOCIATED INFORMATION
/*    TO AID IN PROBLEM DETERMINATION OF CICS DUMPS
/************************************************************
BEGIN: WRITENR ENTER 6 DIGIT HEX CSA ADDRESS +
          OR DEPRESS ENTER TO EXIT THIS CLIST ===>
          READ &CSAADDR
          IF &CSAADDR =   THEN EXIT
          IF &LENGTH(&CSAADDR) ¬= 6 +
             THEN DO
                 WRITENR NO! CSA ADDRESS NOT 6 HEX DIGITS, +
                 HIT ENTER AND TRY AGAIN ===>
              END
           ELSE DO
              WRITENR ENTER CICS ASID IN DECIMAL ===>
           END
           READ &ASID1
           SETD ASID(&ASID1) TERMINAL PRINT
           EQ CSAADDR &CSAADDR.. LE(4)
           EQ CSACK &CSAADDR..+C8%+7C% LE(4)
           COMPARE ADDRESS(CSAADDR) WITH (ADDRESS(CSACK))
           IF  LASTCC ¬= 0 THEN DO
              WRITE      NOT A VALID CSA ADDRESS
               WRITENR    HIT ENTER AND TRY AGAIN ===>
              READ &B
              GOTO BEGIN:
           END
           ELSE DO
              WRITE CSA ADDRESS IS VALID
           END
ACTIVE:    EQ A CSAADDR+B0% LE(4)   /* DCA ADDRESS */
           EQ B CSAADDR+A4% LE(4)   /* END OF CHAIN ADDRESS */
           EQ M &CSAADDR..+B0 LE(4)
           N 'SCANNING ACTIVE CHAIN' TERMINAL PRINT
              N 'DCA       DCA  TCA SYS   TCA      TCA      +
              TCA  TCA      TCA ECB' TERMINAL PRINT
              N 'ADDRESS   DCI  ADDRESS   REG14    TASK ID  +
              DCI  ABEND    ADDRESS' TERMINAL PRINT
           SET  J=1
           DO WHILE &J NE 0
              EVAL M LE(4) CLIST(STORAGE(ADCA))
              EVAL A+18 LE(2) CLIST(STORAGE(ADCADCI))
              EVAL A+14 LE(4) CLIST(STORAGE(ATCAUSR))
              EVAL &ATCAUSR.. LE(4) CLIST(STORAGE(ATCASYS))
              EVAL &ATCAUSR..+20 LE(4) CLIST(STORAGE(ATCAR14))
              EVAL &ATCASYS..+10 LE(4) CLIST(STORAGE(ATASKID))
              EVAL &ATCASYS..+C0 LE(4) CLIST(STORAGE(ABENDID))
              EVAL &ATCAUSR..+18 LE(2) CLIST(STORAGE(ATCADCI))
              EVAL &ATCAUSR..+14 LE(4) CLIST(STORAGE(ATCAECB))
              N '&ADCA  &ADCADCI &ATCASYS  &ATCAR14 &ATASKID +
                &ATCADCI &ABENDID &ATCAECB' TERMINAL PRINT
              EQ M A+C LE(4)
              COMPARE ADDRESS(A+C%) WITH (ADDRESS(B)) LE(4)
              IF &LASTCC=0 THEN SET &J = 0
              EQ A A+C% LE(4)
           END
SUSPEND:   EQ C CSAADDR+A8% LE(4)   /* DCA ADDRESS */
           EQ D CSAADDR+9C% LE(4)   /* END OF CHAIN ADDRESS */
           EQ N &CSAADDR..+A8 LE(4)
           N 'SCANNING SUSPEND CHAIN' TERMINAL PRINT
              N 'DCA       DCA  TCA SYS   TCA      TCA      +
              TCA  TCA      TCA ECB' TERMINAL PRINT
              N 'ADDRESS   DCI  ADDRESS   REG14    TASK ID  +
              DCI  ABEND    ADDRESS' TERMINAL PRINT
           SET &K=1
           DO WHILE &K NE 0
              EVAL N LE(4) CLIST(STORAGE(SDCA))
              EVAL C+18 LE(2) CLIST(STORAGE(SDCADCI))
              EVAL C+14 LE(4) CLIST(STORAGE(STCAUSR))
              EVAL &STCAUSR.. LE(4) CLIST(STORAGE(STCASYS))
              EVAL &STCAUSR..+20 LE(4) CLIST(STORAGE(STCAR14))
              EVAL &STCASYS..+10 LE(4) CLIST(STORAGE(STASKID))
              EVAL &STCASYS..+C0 LE(4) CLIST(STORAGE(SBENDID))
              EVAL &STCAUSR..+18 LE(2) CLIST(STORAGE(STCADCI))
              EVAL &STCAUSR..+14 LE(4) CLIST(STORAGE(STCAECB))
              N '&SDCA  &SDCADCI &STCASYS  &STCAR14 &STASKID +
                &STCADCI &SBENDID &STCAECB' TERMINAL PRINT
              EQ N C+C LE(4)
              COMPARE ADDRESS(C+C%) WITH (ADDRESS(D)) LE(4)
              IF &LASTCC=0 THEN SET &K = 0
              EQ C C+C% LE(4)
           END







