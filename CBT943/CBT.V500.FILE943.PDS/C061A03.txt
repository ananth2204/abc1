DB2 queries for CSD data under CICS 3.1

In large installations with numerous CICS regions (say thirty or
more), it is difficult to keep track of the thousands of objects
defined in the CSD.  This can make the installation of new
regions and/or applications error-prone and tedious.  Over
time, a detritus of redundant programs, transactions, and
'orphan' groups (ie those not belonging to lists) tends to build
up and seriously degrades on-line CSD performance.  These
'leftovers' can often introduce unexpected problems and errors
for new systems.

If the CSD file is shared between CICS regions, contention
problems can arise if a number of system programmers
working on independent projects need to urgently access CSD
information.  The batch print facilities of DFHCSDUP do not
offer much help, other than what can be derived from scanning
masses of printout.  This hard-copy information swiftly goes
stale as new CSD objects are removed, added, or changed.

CICS 3.1 provides a new EXTRACT option for DFHCSDUP -
documented in the Operations Guide - which can be used to
extract CSD data into a form suitable for loading into DB2
tables.  The syntax is as follows:

To extract information for one group:

    EXTRACT GROUP(groupname) USERPROGRAM(exitname) OBJECTS

To extract information for all groups:

    EXTRACT GROUP(*) USERPROGRAM(exitname) OBJECTS

To extract information for all groups in a list:

    EXTRACT LIST(listname) USERPROGRAM(exitname)

In the above, exitname is the name of an exit program which
gets control at defined points within DFHCSDUP.  The IBM-
supplied sample exit, DFH$FORA, documents these points and
can be used unchanged to extract CSD information for groups
(PL/I and COBOL versions are also supplied).  A new exit was
written, based on DFH$FORA, to allow extraction of list
information.

Sample control statements to load the extracted data into DB2
tables and to define the tables and tablespaces are provided in
member DFH$$SQLT in SAMPLIB.  These statements require
modification to ensure that tables, tablespaces, and indices
conform to installation DB2-naming standards.

Using the Query Management Facility (QMF) of DB2, we have
been able to quickly code a large number of useful ad-hoc
queries without requiring more than a basic knowledge of DB2
or QMF.  We have also coded a number of 'standard' queries,
for example:

o      Find all the 'orphan' groups (ie those not belonging to
      lists).

      SELECT RDOGROUP FROM
             TRANSACTION_TABLE
             WHERE RDOGROUP NOT IN
             (SELECT RDOGROUP FROM LIST_TABLE)

o      Find transactions or programs defined in more than one
      group.

      SELECT DISTINCT A.TRANSACTION, A.RDOGROUP
      FROM TRANSACTION_TABLE A, LIST_TABLE B
      WHERE A.RDOGROUP = B.RDOGROUP
      ORDER BY A.TRANSACTION

o      List all MRO/ISC connections for each CICS region.

      SELECT DISTINCT B.NETNAME, A.RDOGROUP
      FROM SESS_TABLE A, CONN_TABLE B
      WHERE A.RDOGROUP = B.RDOGROUP
      ORDER BY B.NETNAME

o      Find groups unique to a given LIST.  The following query
      lists groups in the CICS04 LIST which do not exist in
      LISTS CICS01-CICS03.

      SELECT A.RDOGROUP, TRANSACTION
      FROM LIST_TABLE A, TRAN_TABLE B
      WHERE
      (A.RDOGROUP = B.RDOGROUP) AND
      (LISTNAME = 'CICS01' OR LISTNAME = 'CICS02' OR
      LISTNAME = 'CICS03')
      AND A.RDOGROUP NOT IN
      (SELECT RDOGROUP FROM LIST_TABLE WHERE LISTNAME = 'CICS04')
      ORDER BY RDOGROUP

o      Compare profiles.  The following query compares
      RTIMOUT values for all PROFILEs.

      SELECT DISTINCT RTIMOUT, PROFILE, RDOGROUP
      FROM PROF_TABLE
      WHERE RTIMOUT NE 'NO'
      ORDER BY RTIMOUT

o      List STRNOs for files in a given group (all our CICS 3.1
      files have been migrated to the CSD).

      SELECT FILE, RDOGROUP, LSRPOOLID, STRINGS
      FROM FILE_TABLE
      WHERE STRINGS NE '1'
      ORDER BY FILE

o      List all journalled files.

      SELECT FILE, RDOGROUP, JOURNAL
      FROM FILE_TABLE
      WHERE JOURNAL NE 'NO'
      ORDER BY FILE

A job is scheduled each night to extract the CSD information to
ensure that the DB2 tables are as current as possible.  Since
implementing the DB2/QMF enquiry, contention problems
have significantly decreased because programmers can prepare
more efficiently before updating the CSD, and their CSD work
is quicker since fewer errors are made.  Simple enquiries on
CSD objects are no longer dependent on the sluggish vagaries
of CSD response time and we have been able to improve this
response time by cleaning up redundant groups, programs, and
transactions.

Judicious use of the CSD description fields when defining or
modifying CSD objects would allow further correlations to be
made using DB2/QMF queries.

We have also discovered that the extract utility will work with
the CICS 2.1 CSD file.  This has proved to be very handy for
the conversion work from CICS 2.1 to CICS 3.1.

David Roth
CICS Systems Programmer (Australia)


