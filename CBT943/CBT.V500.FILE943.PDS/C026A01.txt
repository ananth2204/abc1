 Tuning IMS/DB VSAM buffer pools for CICS
A commonly over-looked factor in CICS performance tuning is the IMS/VS database
buffer pool specifications.  There are two different buffer pools that IMS may
use: the VSAM shared resource pool and the ISAM/OSAM buffer pool.  All our
databases utilise VSAM as their underlying access method.  This article will
only address tuning VSAM buffer pools and not ISAM/OSAM buffers.
The VSAM shared resource pool is divided into one or more subpools containing
multiple buffers of a size roughly corresponding to valid VSAM Control Interval
sizes (512, 1K, 2K, 4K, 8K, 12K, 16K, 20K, 24K, 28K, and 32K bytes).  You
specify the size of the VSAM shared resource pool by coding parameter records in
the dataset associated with the DD name DFSVSAMP.  The parameter records are in
the format:  buffer size, number of buffers.
Originally, our parameter records looked like this:
512,16
1024,8
2048,4
4096,3
8192,3
16384,3
20480,3
This resulted in a total allocation of 168K for  IMS buffers.
SYI331 is a CICS program that will display information about buffer pool
utilisation.  It runs successfully in CICS/OS/VS 1.6.1 with IMS/VS 1.3.0 under
MVS 2.1.7.  There is a design constraint introduced by a standard 3270 screen
size (24x80), which limits the number of different subpools for which statistics
can be displayed to seven.  I donUt know what the results will be if this limit
is exceeded.  Since this is a quick and dirty program, little error detection
code is included so the results could well be disastrous.  Be sure to change the
transaction-id in the RETURN command just before label S331020 if necessary.
Change the contents of the field PSB to any valid PSB at your installation.  The
statistics will be the same regardless of which PSB you use.
Figure 1 is a sample screen produced by this program executed in CICS using our
original buffer pool specifications.  The most obvious thing wrong with the
statistics is that there has been no activity against any of the 512, 8K, 16K,
and 20K byte subpools.  Obviously, the first order of business was to remove
buffer specifications for each of the unused pools.  The abbreviated titles in
the headings are cryptic.  Refer to the chapter on Testing an application
(Chapter 10 for IMS 1.3) in the Application Programming Guide for a general
description of the titles.  Refer to the chapter on Monitoring your database
(Chapter 8 for IMS 1.3) in the Data Base Administration Guide for a more
detailed description of the titles.  The values that most directly affect
performance are the values under FOUND and READS in the VSAM statistics.  A
FOUND is good, a READ is not so good.
The formula FOUND / (FOUND + READ) gives the percentage of accesses that did not
have to wait for I/O.  In Figure 1, 68% of the accesses utilising the 1K buffer
pool did not have to wait.  Seventy three per cent of the 2K buffer accesses did
not wait;  55% of the 4K buffer accesses did not wait;  for the entire pool, 68%
did not wait.
My goal was to increase the buffer-found percentage of each subpool to over 80%.
The first thing I did was to determine the percentage of accesses to each
subpool.  This was done by adding FOUND to READ for each subpool and dividing
that by FOUND plus READ from the total line.  I came up with 8% for the 1K
subpool, 66% for the 2K subpool and 26% for the 4K subpool.  I then multiplied
my total buffer storage (168K) by those percentages to determine the new
allocations.  They were 13K, 113K, and 43K for the 1K, 2K, and 4K buffer
subpools, respectively.  I then added a small, arbitrary fudge factor to each,
23K, 39K, and 21K.  The fudge factor was arrived at by coin toss, by the desire
to have each subpool occupy an integer number of operating system pages, and
after careful consideration of the effect of depleting OSCOR.  The final subpool
sizes - 36K, 152K, and 56K - were then divided by the subpool buffer size to
determine the number of buffers per subpool - 36, 76, and 14.  Figure 2 is an
example of the output from SYI331 after implementing the changes to the DFSVSAMP
parameter records.
The buffer-found percentage improved to 79.9% for a 1K subpool, to 88.8% for a
2K subpool, to 86.8% for a 4K subpool and to 87.5% overall.  In addition, THE
MONITOR showed an improvement in access time from .035 sec to .010 sec.
 Obviously, these figures could easily be bettered by adding yet more storage to
each buffer pool.  In the business of tuning there is what is known as the
principle of decreasing returns.  After youUve got as nice an improvement as
this, equivalent further improvement may require commitment of 10 times as much
of a precious, irreplaceable resource such as OSCOR.  In fact, the IMS DBA guide
specifically warns that adding too much storage to a subpool may actually
degrade performance by taking longer to search and maintain buffers than it
takes to read the CI.
SYI331
SYI331   DFHEIENT CODEREG=3,EIBREG=4,DATAREG=5
         CLI   EIBAID,DFHCLEAR
         BE    S331020
         EXEC  CICS GETMAIN SET(6) LENGTH(360)
         EXEC  DLI SCHD PSB((PSB))
         EXEC  DLI STAT USING PCB(1) INTO(0(6)) LENGTH(360)
         MVC   MSG+0000(60),000(6) SET UP THE HEADING
         MVC   MSG+0880(60),060(6) SET UP THE HEADING
         MVC   MSG+0080(68),120(6) SET UP THE HEADING
         MVC   MSG+0964(56),185(6) SET UP THE HEADING
         MVC   MSG+0960(04),120(6) SET UP THE HEADING
         MVC   MSG+0160(65),240(6) MOVE THE FIRST LINE
         MVC   MSG+1044(55),305(6) MOVE THE FIRST LINE
         MVC   MSG+1040(04),240(6) MOVE THE FIRST LINE
         LA    R7,MSG+240
         LA    R8,MSG+1120
S331010  DS    0H
         EXEC  DLI STAT USING PCB(1) INTO(0(6)) LENGTH(360)
         MVC   0(65,7),240(6)
         MVC   4(55,8),305(6)
         MVC   0(04,8),240(6)
         LA    R7,80(7)
         LA    R8,80(8)
         CLC   DIBSTAT,=C'  '
         BE    S331010
         EXEC  CICS SEND FROM(MSG) LENGTH(1920)
         EXEC  CICS RETURN TRANSID('S331')
S331020  DS    0H
         EXEC  CICS SEND FROM(ENDMSG) LENGTH(14)
         EXEC  CICS RETURN
         LTORG
PSB      DC    C'ARDP08  '  may be any valid psb
ENDMSG   DC    C'SYI331 - ENDED'
DFHEISTG DSECT
DIBVER   DS    CL2
DIBSTAT  DS    CL2
DIBSEGM  DS    CL8
DIBSEGLV DS    CL2
DIBKFBL  DS    H
         DS    CL8
MSG      DS    CL1920
         COPY  DFHAID
         END


Erich Noll
Dodson Group (USA)  ) Xephon 1988










