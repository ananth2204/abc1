 CICS and VSE directory entries
At Boca Raton Community Hospital (BRCH) we recently encountered a problem with
CICS and VSE directory entries that may interest other readers.  BRCH has a 4381
running VM/SP with multiple VSE/SP 2.1 guests.  During the migration from VSE/AF
1.3.5 we noticed a dramatic increase in CICS response time, which seemed to
coincide with an equally dramatic increase in DASD I/O.  Suspecting a
correlation between the two we enabled VM monitoring for monitor class 7 (DASD
seeks).  After collecting the monitor records and TdistillingU their content we
were able to identify which cylinders of our most active volumes were being
accessed the most.  To our surprise the most heavily accessed areas were where
the libraries in our CICS LIBDEF search chain reside.
To try to determine why these areas were being referenced so heavily we enlisted
the I/O tracing facility of VSE SDAIDS to print the contents of the data fields
comprising the I/O CCWs.  After analysing these data fields we determined that
the majority of these I/Os were just to read the library directories.  This
really puzzled us, as we knew that the first time that CICS loads a non-RES=YES
phase it saves a Directory Entry (DE) for that phase in the PPT.  This is done
for performance reasons, so that subsequent program loads can be completed
without a search of the LIBDEF chain.  Although our DSA was compressing quite
frequently, the program loads necessary to retrieve any previously loaded phases
should complete without the LIBDEF search.
To try to get a better understanding of the situation we again enlisted the help
of SDAIDS, this time to trace storage alterations of the DE within a PPT entry
for a phase that had not yet been loaded by CICS.  No matter how many times we
caused the program to be loaded the DE was never altered and each load caused a
search of the LIBDEF chain.  Thinking we had encountered a bug in the DE update
process we contacted the IBM Support Centre.  Level One had no information on
this type of error and queued us up to Level Two.  After several discussions
with Level Two they suggested we read EQUAL DOCID Q286388.
I suggest that you ask your SE to get this document for you, it may save your
CICS system many unnecessary I/Os during program loads.  Although the question
component is concerned with CICS loading new versions of programs without the
benefit of a CEMT NEWCOPY, it does detail the program load process.  With
VSE/SP, directory entries are built, as usual, within the PPT.  What is not so
usual is that DEs are also built in the system GETVIS area.  The program loading
process references these DEs within the system GETVIS (called mirror DEs)
instead of the DEs residing within the partition.  Under normal circumstances
this works fine, however, when the amount of space within the system GETVIS area
allocated to hold the mirror DEs is exhausted, all program loads are
accomplished by scanning the LIBDEF search chain until the phase is found.
Neither CICS nor VSE issues any messages when the area allocated for the mirror
DEs is exhausted, the only way you can determine if this has happened is to
monitor your DASD accesses.  Nor is there any way to increase the size of the
area for the mirror DEs other than increasing the size of system GETVIS.  As the
mirror DEs are only allocated a fraction of the area within the system GETVIS
area you can still have plenty of unallocated system GETVIS area and still have
exhausted the mirror DE area.
So if you encounter this problem, what can you do?  Firstly, see if you can
increase the size of the system GETVIS area.  Secondly, be sure that the LIBDEF
search chain is ordered to minimise the amount of library directories that have
to be read to retrieve your most loaded phases.  And finally, tune your DSA to
minimise program loads.

Kevin Hogan
Tech Support Group Inc (USA) and
John Strohsahl
Boca Raton Community Hospital (USA)     ) Xephon 1988









