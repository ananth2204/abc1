Extended options for CICS AUTO start

This article addresses the problem of improving the manner in
which a team of CICS system programmers could deal with
start-up parameters for each of ten or more CICS regions.  The
team had several difficulties in controlling the start-up
parameters:

%      Several restrictive measures were in place that required
      filling out special forms and obtaining signatures of
      approval.

%      Notification of operations personnel in writing was
      required for a JCL change.

%      A delay of several hours was incurred in changing a
      procedure in the procedure library because of the
      separation of authority.

%      Any change to the start-up procedures' JCL required that
      back-out procedures were in place and described in
      writing.

Readers affected by similar rules will recognize these as audit-
related controls.  Multiple sets of start-up JCL were being
maintained to avoid making changes.  Other problems existed
that are related to the realities of managing a CICS
environment.  For example, how do you schedule a cold start
for Saturday mornings without having to come in at 1:30 am to
verify that all the scheduled regions shut down cleanly.  These
cold starts are sometimes needed by the network staff when
adding new terminals and for various other reasons.

In short, what we wanted to do was be able to let the software
decide at start-up what type of start-up was to be done, but we
wanted some options not provided by CICS, eg we wanted the
system to perform a cold start automatically Saturday morning
only (the day being easily changeable to one of our choice).  It
had to be possible to schedule this in advance by several days.
We wanted to be able to request a cold start at the next nightly
cycle of CICS, but we didn't want it to happen unless the
system had previously shut-down cleanly, thus protecting
recovery data.  We also didn't want this to occur in the middle
of the day if CICS should crash unexpectedly (cold starts take
much longer than emergency or warm starts).  Finally, we
wanted to be able to talk an operator through a forced cold start
over the 'phone at night when no other options are available.
Keep in mind that a CICS region running with AUTO as the
start-up option will start as WARM or EMER, but not COLD.
You must re-assemble the SIT or provide an override at the
console or in the JCL.  We needed another method and some
specific rules associated with it.

The way to gain more flexible control of the start-up type was
to write a SIMOD that would examine the same information
that the original CICS SIMOD examines when AUTO is the
PARM, and then override the flags set by CICS after
examining additional information.  This additional information
comes from a partitioned dataset defined in the start-up JCL via
DDNAME DFHSTART.  This dataset has multiple members,
one for each CICS region (eg CICSONE, CICSTWO etc) and
one called DOCUMENT, which documents the manner in
which the special program (DFHSIB9) works.  The members
for each region contain the PARMs that the program examines
to make start-up decisions which override the ones made by the
CICS SIMOD.

The contents of members CICSONE, CICSTWO etc are the
PARMs that control the start-up for that region.  These member
names match the names of the CICS regions that are run.  The
DOCUMENT member is purely documentation and provides a
quick reference as to how the program works.  Only the first
nine characters of each line within the CICSONE, CICSTWO,
etc members represent the PARMs.  The rest are comments.

The program name is DFHSIB9.  It is placed in the SIMOD
parameter of the SIT immediately before the IBM module
DFHSIC1.  The program receives control in the same manner
as all SIMODs.  It establishes what day of the week it is by
calling a subroutine using the CICS Julian day.  It opens the
partitioned dataset that contains the PARMs using DDNAME
DFHSTART (this must be allocated in the start-up JCL).  It
always opens this file so that it can be closed with a FREE
option to release its allocation.  The program will then check to
see if the original start-up PARM from the SIT or console was
AUTO.  If not, the program exits immediately.  Thus no
overrides are considered unless the region in question is
running with start-up of AUTO.  If it is, the process continues.

Once DFHSTART has opened successfully and it is determined
that AUTO was the original start-up type, testing of the
remaining PARMs in DFHSTART begins.  The first PARM in
record 1 of the file is tested for the literal 'REQUEST'.  If
found, it indicates that we wish to have a cold start only if the
previous shutdown was clean.  This is determined by looking
for the warm keypoint record on the restart dataset.  If found,
and the low and high hours parameter from the last record in
the PARM file are successfully tested, the 'REQUEST' type
cold start is honoured.  The flag in the SIT is set for a cold
start.

If the first PARM from record one is not 'REQUEST' it is
tested for the literal 'FORCE'.  If 'FORCE' is found, the flag in
the SIT is set for a cold start.  ('FORCE' is used when all else
has failed and a cold start must be performed.  It is always
honoured regardless of the time of day.)  If neither value is
found, it is assumed that no specific request has been requested
and the program begins testing for the automatic request
PARMs.  If the current day of the week is found in the second
PARM record (eg SATURDAY) and the third PARM record is
'YES', an automatic cold start is due.  (You can disable the
automatic request by putting 'NO' in this PARM value.)

The restart dataset is tested along with the low and high hours
from the last PARM record to be certain that the hours of the
day are appropriate to our needs and that the last shutdown was
clean.  If none of the tests for any of the PARMs are met, then,
of course, the program merely exits and does nothing.
Messages are sent to the console, describing the actions taken.

This method has significantly reduced the complexity of
controlling our CICS environment.

EXAMPLE OF START-UP PARAMETERS

XXXXXXX  | XXXXXXX/REQUEST/FORCE A COLD START (EXPLICIT)
SATURDAY | NAME OF THE DAY OF WEEK FOR AUTOMATIC 'REQUEST' ONE TIME ONLY
YES      | YES/NO DO THE AUTOMATIC 'REQUEST' THIS WEEK ON ABOVE DAY
90072    | STAMP FROM LAST AUTOMATIC 'REQUEST' THAT WAS HONORED
08-22    | LOW - HIGH HOURS THAT  A N Y  'REQUEST' WILL  N O T  BE
         | HONORED BY B9, AUTOMATIC OR EXPLICIT- 'FORCE' WILL BE

EXAMPLE OF DOCUMENT MEMBER

XXXXXXX  | XXXXXXX/REQUEST/FORCE A COLD START (EXPLICIT)
SATURDAY | NAME OF THE DAY OF WEEK FOR AUTOMATIC 'REQUEST' ONE TIME ONLY
NO       | YES/NO DO THE AUTOMATIC 'REQUEST' THIS WEEK ON ABOVE DAY
90072    | STAMP FROM LAST AUTOMATIC 'REQUEST' THAT WAS HONORED
08-22    | LOW - HIGH HOURS THAT  A N Y  'REQUEST' WILL  N O T  BE
         | HONORED BY B9, AUTOMATIC OR EXPLICIT- 'FORCE' WILL BE
*          HONORED AT ANY HOUR OF THE DAY
************ COMMENTS COMMENTS COMMENTS COMMENTS COMMENTS ************
*      THE PURPOSE OF THIS FILE IS TO PASS STARTUP PARMS TO THE
*      INHOUSE WRITTEN SIMOD B9.  THE PURPOSE OF B9 IS TO ALLOW
*      INCREASED FLEXIBILITY IN DETERMINING THE TYPE OF CICS STARTUP.
*      B9 WILL OVERRIDE NOTHING AND WILL SIMPLY RETURN CONTROL TO
*      DFHSIP IF THE SIT OR SYSIN OR CONSOLE OVERRIDE PARAMETER FOR
*      START= IS NOT 'START=AUTO'. HE DOES NOTHING IF IT WAS
*      'START=COLD' OR 'START=EMER'.
*      AT THE TIME OF THIS WRITING, HOWEVER; THE INTENT IS TO HAVE
*      'START=AUTO' IN EACH REGION. THUS THIS FILE CAN BE USED TO
*      'REQUEST' A COLD START OR TO 'FORCE' A COLD START.
*           'FORCE' WILL ONLY BE USED WHEN A COLD START MUST OCCUR.
*           THIS WOULD MEAN REGARDLESS OF HOW THE SYSTEM CAME DOWN
*           PREVIOUSLY. AN EXAMPLE WOULD BE THAT EMERGENCY HAS FAILED.
*           'REQUEST' WILL BE USED TO GET A COLD START DURING CERTAIN
*           HOURS OF THE DAY, BUT ONLY IF THE PREVIOUS SHUTDOWN WAS
*           A CLEAN ONE AND WROTE THE WARM KEYPOINT RECORD. AN EXAMPLE
*           WOULD BE TO SYNCHRONIZE TABLES SUCH AS THE TCT.
*           THERE ARE TWO TYPES OF 'REQUEST' COLD START. THE EXPLICIT,
*           AND AN IMPLIED AUTOMATIC 'REQUEST'. THE EXPLICIT 'REQUEST'
*           IS DENOTED BY PUTTING 'REQUEST' BEGINNING IN COLUMN ONE OF
*           THE FIRST RECORD OF THIS FILE. IF THE FIRST RECORD CONTAINS
*           'REQUEST' OR 'FORCE', THE AUTOMATIC PARMS WILL BE IGNORED.
*           RECORDS 2,3,AND 4 ARE FOR DEFINING THE AUTOMATIC 'REQUEST'
*           PARAMETERS. YOU CANNOT AUTOMATICALLY 'FORCE' A COLD START.
*           IT MUST BE EXPLICITLY CODED IN THE FIRST RECORD.
*           RECORD 2 IS THE DAY OF THE WEEK YOU WOULD LIKE AN AUTOMATIC
*           'REQUEST' START=COLD.
*           RECORD 3 IS EITHER YES OR NO. IT MUST BE YES IF THE AUTO-
*           MATIC 'REQUEST' IS TO OCCUR.
*           RECORD 4 IS A JULIAN DATE STAMP OF THE LAST AUTOMATIC
*           'REQUEST' THAT WAS HONORED.
*           RECORD 5 IS A RANGE OF HOURS DURING WHICH B9 WILL NOT
*           REPEAT NOT HONOR A 'REQUEST' OF EITHER TYPE. THIS IS
*           TO PREVENT LONG COLD STARTS FROM OCCURRING IN HONOR OF
*           A 'REQUEST' COLD AFTER A DAYTIME CRASH. 'FORCE' IS
*           REPEAT IS HONORED.
*      B9 WILL OVERWRITE THE WORD 'REQUEST' OR 'FORCE' IN RECORD ONE
*      WHENEVER IT HONORS THE COMMAND. THIS IS TO ASSURE A ONCE ONLY
*      OCCURRENCE.
*      B9 WILL CHANGE THE WORD 'YES' IN RECORD 3 TO 'NO' WHENEVER IT
*      HONORS AN AUTOMATIC 'REQUEST' COLD. THIS IS TO ALLOW THE
*      AUTOMATIC 'REQUEST' PROCESS TO OCCUR ONLY WHEN NEEDED.
*      B9 WILL UPDATE THE JULIAN DATE STAMP IN RECORD 4. B9 WILL COMPARE
*      THIS STAMP TO THE CURRENT DATE AT EXECUTION TIME AND WILL NOT
*      HONOR AN AUTOMATIC 'REQUEST' IF ONE HAS BEEN HONORED ALREADY
*      ON THE CURRENT DATE. THIS IS FOR AUTOMATIC 'REQUEST'S ONLY.
************ COMMENTS COMMENTS COMMENTS COMMENTS COMMENTS ************

DFHSIB9 SOURCE CODE

* MODULE NAME = DFHSIB9
* DESCRIPTIVE NAME = C.I.C.S./VS SYSTEM INITIALISATION PROGRAM IP
* STATUS = 1.7.0
*  FUNCTION = ALLOW USER TO REQUEST OR FORCE A COLD START BY
*             SETTING PARMS IN A SAM FILE ACCESSIBLE TO TSO.
*             THIS MODULE OVERRIDES BASED ON THE RESTART CONTROL
*             RECORD THE STARTUP PARAMETER (AUTO). THAT IS, IF
*             THE LAST SHUTDOWN WAS CLEAN. IT WILL ALSO FORCE
*             A COLD START IF SO REQUESTED.
*             IF THE STARTUP PARAMETERS SPECIFIED IN THE OVERRIDES
*             OR THE SIT TABLE ARE NOT (AUTO) OR (AUTO,ALL), THEN
*             THIS MODULE SIMPLY RETURNS AND DOES NOTHING.
*  NOTES : REGISTER CONVENTIONS = SEE COMMENTS IN CODE
*          PATCH LABEL = NONE
*          MODULE TYPE = EXECUTABLE
*          ATTRIBUTES = READ-ONLY, SERIALLY REUSABLE
         DFHSICOM  DSECTS=NONE     COPY THE COMMON AREA
         DFHPRINT  DSCT=START
         COPY  DFHKPPDS            FOR CONTROL RECORD DSECT
         DFHPRINT  DSCT=END
DFHSIB9  CSECT
         DFHVM SIB9
         ENTRY DFHSIBNA
DFHSIBNA DS    0H
         USING *,SIPBAR2,SIPBAR3   ESTABLISH PGM ADD'Y
         USING SIPCOM,SIPBAR1      FOR PGM AND COMMON AREA
GO       DS    0H
         L     R8,CSAOPFLA         ADDRESS OPTIONAL FEATURES LIST
         USING CSAOPFL,R8          TELL ASSEMBLER
*              GET THE DAY OF THE WEEK                                *
         XR    R1,R1                  BUILD THE PARMLIST
         LA    R1,CSAJYDP
         ST    R1,INDATE
         LA    R1,BINARY1
         ST    R1,INDATEFM
         LA    R1,DAYOWEEK
         ST    R1,OUTDATE
         LA    R1,BINARY2
         ST    R1,OUTDATFM
         LA    R1,WORK
         ST    R1,WORKAREA
         ST    R13,SAVE13             SAVE THE CSA ADDRESS
         LA    R13,SAVEREGS           LOAD A SAVEAREA INTO 13
         XR    R1,R1                  CLEAR REGISTER 1
         LA    R1,PARMLIST            LOAD A SAVEAREA INTO 13
         CALL  JULSUB USING PARMLIST
         L     R13,SAVE13             RESTORE THE CSA ADDRESS
*              OBTAIN CICS.STARTUP.REQUEST.DATA.????                  *
         OPEN  (DFHSTART,UPDAT)    ALWAYS OPEN THE DATASET (CLOSE,FREE)
         TM    DFHSTART+48,X'10'   SUCCESSFUL OPEN?
         BZ    OPENERR
         CLI   SITSTART,C'U'       WAS IT 'AUTO,ALL' ?
         BE    SIPAUTO             .. YES
         CLI   SITSTART,C'A'       WAS IT AUTO ?
         BE    SIPAUTO             .. YES
         DFHWTO MSG9
         B     RETURN              STARTUP NOT AUTO - GET OUT!
SIPAUTO  DS    0H
* READ IN NECESSARY FIELDS
         GET   DFHSTART            GET ADDRESS OF FIRST BLOCK IN R1
         MVC   REQAREA(7),0(1)     MOVE REQUEST CODE
         ST    R1,SAVE1            STORE ONE FOR LATER USE
         MVC   AUTODAY(9),80(1)    MOVE AUTO REQUEST DAY
         MVC   THISDAY(2),160(1)   MOVE AUTO REQUEST ON THIS DAY YES/NO
         MVC   STAMP(5),240(1)     MOVE LAST REQUEST HONORED TIME STAMP
         MVC   LOWHOUR(2),320(1)   MOVE LOW HONOR REQUESTS NOT HONORED
         MVC   HIGHHOUR(2),323(1)  MOVE HI HOUR REQUESTS NOT HONORED
* BEGIN DETERMINING TESTS
         CLC   REQAREA(7),=C'REQUEST'
         BE    OPENRSD
         CLC   REQAREA(5),=C'FORCE'
         BE    SETFORCE
         CLC   DAYOWEEK(6),AUTODAY CHECK FOR AUTO REQUEST
         BNE   NOSPECL
         CLC   THISDAY,=C'YES'
         BNE   NOSPECL
*        MVC   160(3,1),=C'NO '    DEFAULT BACK TO 'NO'
         UNPK  WORK(7),CSAJYDP(4)
         OI    WORK+6,X'F0'
         CLC   WORK+2(5),STAMP
         BE    NOSPECL
         MVC   240(5,1),WORK+2     UPDATE STAMP FOR POSSIBLE REWRITE
         DFHWTO MSGC
         B     OPENRSD
SETFORCE MVI   SITSTART,C'C'       SET COLD START FLAG
         MVC   0(7,1),=C'XXXXXXX'  OVERWRITE THE SPECIAL REQUEST
         PUTX  DFHSTART            REWRITE THE REQUEST RECORD
         DFHWTO MSG1               WRITE CICS START-UP MESSAGE
         B     RETURN
*              OPEN RESTART DATASET                                   *
         DS    0F
*    ALL 'REQUEST' TYPES COME HERE SO TEST FOR VALID TIME RANGE
OPENRSD  TIME  DEC                 GET TIME FROM MVS
         STM   R0,R1,TIMEDATE
         UNPK  WORK(15),TIMEDATE(8) UNPACK THE TIME
         CLC   WORK(2),LOWHOUR     TEST HOUR FOR LOW
         BL    TIMEOK
         CLC   WORK(2),HIGHHOUR    TEST HOUR FOR HIGH
         BH    TIMEOK
         B     TIMEFAIL
TIMEOK   DFHCC CTYPE=OPEN,         OPEN CATALOG FILE                  *
               STRNO==F'1',        WITH A SINGLE STRING               *
               RC=(RF),            RESPONSE IN RF                     *
               DUMMY=DUMMY
         LTR   RF,RF               OPEN OK ?
         BZ    CATOPEN             .. YES
         DFHWTO MSG3               WRITE CICS ERROR MESSAGE
         B     RETURN              .. NO - GET OUT!
CATOPEN  DS    0H
         OI    CSACATFL,CSACATDF   NOTE CATALOG DEFINED
* READ THE CTL RECORD FROM THE RESTART DATASET                        *
         MVC   RQTOKEN,=CL4'CTL '  ID OF RSD CONTROL RECORD 'CTL '
         MVC   RESNAME(L'KPCCTLI),KPCCTLI ..AND ANOTHER     'CTL '
         MVC   RESNMLN,=AL2(L'KPCCTLI) LENGTH
         MVC   RESTYPE,=AL2(0)     RESOURCE TYPE - 0
         MVC   BUFADDR,=A(CTRREC)  ADDRESS OF BUFFER
         MVC   BUFLENG,=AL4(L'CTRREC) AND LENGTH
         BAL   RE,READCTLR         .. READ CONTROL RECORD
         LTR   RF,RF               NORMAL RESPONSE ?
         BZ    CTLRECFN            .. YES - CONTROL RECORD FOUND
*        NO CONTROL RECORD - MUST BE FIRST TIME RSD USED
         DFHWTO MSG4               WRITE CICS ERROR MESSAGE
         B     CLOSRSD             GET - OUT!
CTLRECFN DS    0H
         BAL   RE,EXAMINE          EXAMINE CONTROL RECORD
         L     R1,SAVE1            RELOAD ADDRESS OF SPECIAL REQUEST
         MVC   0(7,1),=C'XXXXXXX'  OVERWRITE THE SPECIAL REQUEST
         PUTX  DFHSTART            REWRITE THE REQUEST RECORD
         DFHWTO MSG2               WRITE CICS START-UP MESSAGE
*              CLOSE RESTART DATASET                                  *
CLOSRSD  DFHCC CTYPE=CLOSE,        CLOSE CATALOG FILE                  X
               RC=(RF),            RESPONSE IN RF                      X
               DUMMY=DUMMY
         LTR   RF,RF               CLOSE OK?
         BZ    RETURN              YES
         DFHWTO MSG5               NO - SEND ERROR MESSAGE
RETURN   EQU   *
         CLOSE (DFHSTART,FREE)     CLOSE THE DATA SET
EXIT     L     SILINKR,SIPOSUP     GET OVERLAY SUPERVISOR
         BR    SILINKR             ENTRY POINT AND SPLIT
* *                    INTERNAL SUBROUTINES
TIMEFAIL DFHWTO MSGD
         B     RETURN
NOSPECL  DFHWTO MSGA
         B     RETURN
OPENERR  DFHWTO MSGE
         B     EXIT
* * *         READ A RECORD FROM THE RESTART DATA SET             * * *
READCTLR DS    0H
         ST    RE,READADDR         SAVE RETURN ADDR
         DFHCC CTYPE=CONNECT,                                          X
               RQTOKEN=RQTOKEN,                                        X
               CCTOKEN=CCTOKEN,                                        X
               RC=(RF),                                                X
               DUMMY=DUMMY
         LTR   RF,RF               OK ?
         BNZ   REDCREX             .. NO - EXIT WITH RF SET
         DFHCC CTYPE=READ,                                             X
               CCTOKEN=CCTOKEN,                                        X
               RESTYPE=RESTYPE,                                        X
               RESNAME=RESNAME,                                        X
               RESNMLN=RESNMLN,                                        X
               BUFADDR=BUFADDR,                                        X
               BUFLENG=BUFLENG,                                        X
               DATLENG=DATLENG,                                        X
               RC=RESPCODE,        RESPONSE CODE                       X
               DUMMY=DUMMY
*                                  MUST DISCONNECT EVEN IF READ FAILS
         DFHCC CTYPE=DISCONNECT,                                       X
               CCTOKEN=CCTOKEN,                                        X
               RC=CCRQRC,          RESPONSE CODE                       X
               DUMMY=DUMMY
         SR    RF,RF               PREPARE FOR IC INSTRUCTION
         IC    RF,RESPCODE         RESPONSE FROM READ
REDCREX  DS    0H
         L     RE,READADDR         RESTORE RETURN ADDR
         BR    RE                  RETURN TO CALLER
READADDR DC    A(0)                RETURN ADDRESS
DATLENG  DS    F                   DATA LENGTH
RESPCODE DS    X                   RESPONSE CODE
* * *    EXAMINE CONTROL RECORD ROUTINE                           * * *
EXAMINE  DS    0H
         ST    RE,EXAMADDR         SAVE RETURN ADDR
         LA    R1,CTRREC           ADDRESS CONTROL RECORD
         USING KPCTLDS,R1          TELL ASSEMBLER
         CLC   KPCTL,=CL4'CTL'     CTL REC. CORRECT ?
         BNE   NOCTL               .. NO
         TM    KPLRSDIN,KPLWMKP    WARM KEYPOINT ?
         BO    WARMKP              .. YES
         DFHWTO MSGB               SEND NOT HONORED MESSAGE
         B     CLOSRSD             NO - REQUEST COLD NOT HONORED
         DROP  R1
NOCTL    DS    0H
         DFHWTO MSG6               SEND ERROR MESSAGE
         B     RETURN              GET OUT!
*             ITS OK TO HONOR A 'REQUEST COLD' START
WARMKP   DS    0H
         CLI   SITSTART,C'A'       WAS IT JUST AUTO ?
         BNE   WARMALL             .. NO, MUST BE WARM ALL
         MVI   SITSTART,C'C'       INDICATE REQUESTED COLD
         B     KPINITEX            .. CONTINUE
WARMALL  DS    0H
         MVI   SITSTART,C'C'       INDICATE REQUESTED COLD
KPINITEX DS    0H
         L     RE,EXAMADDR         SAVE RETURN ADDR
         BR    RE                  GO BACK
EXAMADDR DS   A(0)                 RETURN ADDR
*               DFHWTO MESSAGE CONSTANT AREA                          *
MSG1 DFHMSG ('DFHSIB9 - CICS START-UP IS FORCED TO COLD BY B9')
MSG2 DFHMSG ('DFHSIB9 - CICS START-UP IS A REQUEST COLD BY B9')
MSG3 DFHMSG ('DFHSIB9 - RESTART DATASET NOT OPENED BY B9'),DUMP,1500
MSG4 DFHMSG ('DFHSIB9 - RESTART CONTROL REC NOTFND BY B9'),DUMP,1500
MSG5 DFHMSG ('DFHSIB9 - RESTART DATASET NOT CLOSED BY B9'),DUMP,1500
MSG6 DGHMSG ('DFHSIB9 - RESTART CONTROL REC ERR FND BY B9'),DUMP,1500
MSG7 DFHMSG ('DFHSIB9 -                        BY B9')
MSG8 DFHMSG ('DFHSIB9 -                        BY B9')
MSG9 DFHMSG ('DFHSIB9 - STARTUP PARM NOT AUTO B9 EXITING ')
MSGA DFHMSG ('DFHSIB9 - NO SPECIAL REQUEST FOUND BY B9')
MSGB DFHMSG ('DFHSIB9 - NO KEYPOINT - REQUEST COLD NOT HONORED BY B9')
MSGC DFHMSG ('DFHSIB9 - AUTOMATIC REQUEST FOUND BY B9')
MSGD DFHMSG ('DFHSIB9 - REQUEST NOT ALLOWED DUE TO TIME OF DAY BY B9')
MSGE DFHMSG ('DFHSIB9 - OPEN ERROR ON DFHSTART DDNAME BY B9')
*               C O N S T A N T S *
         DFHCC MF=(A,PARMLIST)     PARAMETER LIST FOR CCP CALLS
CCTOKEN  DS    XL4                 THREAD TOKEN
RQTOKEN  DC    CL4' '              REQUEST TOKEN FOR CC CALL
RESTYPE  DC    CL2' '              RESOURCE TYPE
RESNAME  DC    CL16' '             MAXIMUM LENGTH
RESNMLN  DS    AL2(0)              ACTUAL LENGTH
BUFADDR  DC    A(0)                ADDRESS OF BUFFER FOR RECORD
BUFLENG  DC    AL4(0)              AND LENGTH
KPCCTLI  DC    CL4'CTL '           IDENTIFIER - RSD CTL RECORD
CTRREC   DC    XL(KPLLN)'00'       STORAGE FOR CONTROL RECORD
         DC    C'PARMS READ FROM DFHSTART '
REQAREA  DS    CL7
AUTODAY  DS    CL9
THISDAY  DS    CL2
STAMP    DS    CL5
LOWHOUR  DS    CL2
HIGHHOUR DS    CL2
         DC    C'******* END PARMS *******'
DAYOWEEK DS    CL9
         DS    CL3
         DC    C'WORKAREA FOR 256'
WORK     DS    0D
         DS    CL256
BINARY1  DC    F'3'
BINARY2  DC    F'128'
*       PARMLIST FOR DATE CONVERSION PROGRAM
         DC    C'PARMLIST FOR 20 ON DOUBLE WORD BOUNDARY'
         DS    0D
PARMLIST DS    0CL1
INDATE   DC    F'00'
INDATEFM DC    F'00'
OUTDATE  DC    F'00'
OUTDATFM DC    F'00'
WORKAREA DC    F'00'
         DC    C'TIME OF DAY'
TIMEDATE DS    D
SAVE13   DS    F
SAVEREGS DS    18F
SAVE1    DS    F
DFHSTART DCB   DDNAME=DFHSTART,DSORG=PS,BLKSIZE=3120,LRECL=80,         X
               MACRF=(GL,PL),RECFM=FB
         LTORG *
         DFHEND  DFHSIB9


Robert Bilyeu
Consultant (USA)                                          ) Xephon 1990


