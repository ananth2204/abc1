Browsing the ICE/AID chains


DESCRIPTION

The following program makes it possible to browse the ICE
and/or AID chain in pseudo-conversational mode. It allows for
scrolling up and down through the chains, while a PF key is
used to toggle between the two chains. The ICE chain consists
of entries (transactions) that wait for a certain time to elapse,
while the AID transactions wait for a specific resource that has
to become available (typically a printer).

The code consists of a program (ICEPGM) and a mapset
(ICEMAPS). Appropriate entries for the PCT and PPT
(transaction and mapset) need to be made. Figure 1 shows an
example of the program's output.


ICEPGM SOURCE CODE

*---------------------------------------------------------------------*
*    PROGRAM:  ICEPGM
*    PURPOSE:  BROWSE ICE AND AID ELEMENTS
*  CALLED BY:  HICE
*   COMMAREA:  CL5   (NOT AT FIRST CALL)
*---------------------------------------------------------------------*
TCTPFBAR EQU   4                         TCT PREFIX BASE
TCTTEAR  EQU   5                         TCT BASE
CSABAR   EQU   6                         CSA BASE
ICECBAR  EQU   7                         ICE BASE
AIDCBAR  EQU   8                         AID BASE
S1ROWNBR EQU   14
         COPY  DFHCSADS                  MAP CSA
         COPY  DFHICEDS                  MAP ICE ENTRY
         COPY  DFHAIDDS                  MAP AID ENTRY
         DFHTCTZE CICSYST=YES            MAP TCT (SYSTEM) ENTRY
         COPY  DFHTCTFX                  MAP TCT PREFIX
         COPY  DFHAID                    ATTENTION IDENTIFIERS
DFHEISTG DSECT
COMMAREA DS   0CL5               COMMAREA
ITEMTOP  DS   H                  TS ITEM CURRENT ON TOP
ITEMBOT  DS   H                  TS LAST ITEM
MASK     DS   XL1                MASKBYTE
MSGSET   EQU  X'01'              A MESSAGE HAS BEEN SET
TYPEICE  EQU  X'02'              CURRENT TYPE BEING PROCESSED
FOUND    EQU  X'04'              ANYTHING FOUND INDICATOR
DOUBLEW  DS   D                  WORK FIELD
DUMMYTCT DS   F
TSITEM   DS   H                  CURRENT TS QUEUE ITEM NUMBER
TSQROW   DS   CL34               TS QUEUE ITEM
TSQUEUE  DS   CL8                TS QUEUENAME
         DS   0F
         COPY ICEMAPS            MAPSET DSECT
ICEPGM   DFHEIENT CODEREG=(11,12),DATAREG=13,EIBREG=10
*        SET CONDITIONS
*        SEE IF THIS IS THE FIRST PASS
INIT     EXEC CICS HANDLE CONDITION MAPFAIL(ACTION)
         EXEC CICS HANDLE AID       ANYKEY(ACTION)
         MVC  TSQUEUE(4),=C'HICE'   SET QUEUENAME
         MVC  TSQUEUE+4(4),EIBTRMID
         LH   R1,EIBCALEN           LENGTH OF COMMAREA
         LTR  R1,R1                 PASSED?
         BZ   INIT05                NO, MUST BE 1ST CALL
         L    R1,DFHEICAP           PTR TO COMMAREA
         MVC  COMMAREA(5),0(R1)     YES, COPY INTO PROGRAM STORAGE
         B    RECEIVE               ... AND GO RECEIVE SCREEN
INIT05   MVC  ITEMTOP,=H'1'         SET FIRST ITEM
         OI   MASK,TYPEICE          SET INITIAL TYPE
*        FILL TS QUEUE
FILLQ    EXEC CICS HANDLE CONDITION QIDERR(FILLQ05)
         EXEC CICS DELETEQ TS QUEUE(TSQUEUE)
FILLQ05  EXEC CICS HANDLE CONDITION QIDERR
         NI   MASK,255-FOUND        CLEAR "ANYTHING FOUND" BIT
         EXEC CICS ADDRESS CSA(CSABAR)
         USING DFHCSADS,CSABAR
         TM   MASK,TYPEICE          IS IT ICE CHAIN?
         BZ   QAID                  NO PROCESS AID
*        FILL TS QUEUE WITH ELEMENTS FROM ICE CHAIN
QICE     L    ICECBAR,CSAICEBA      ICE CHAIN ADDRESS
QICE10   LTR  ICECBAR,ICECBAR       NOTHING ON CHAIN?
         BZ   QICE99
         MVI  TSQROW,X'40'          CLEAR QUEUE ITEM
         MVC  TSQROW+1(L'TSQROW-1),TSQROW
         L    R3,ICEXTOD            LOAD IN TIME (1/300 SECS)
         BAL  R9,CONVTIME           CONVERT TIME
         LA   R3,ICETYPE            TYPE
         BAL  R9,CONVTYPE           CONVERT TYPE
         MVC  TSQROW(4),ICETRNID    MOVE TRANSACTION ID
         MVC  TSQROW+6(4),ICETRMID  MOVE TERMINAL ID
         EXEC CICS WRITEQ TS LENGTH(34) FROM(TSQROW)                  *
         QUEUE(TSQUEUE) ITEM(ITEMBOT) MAIN
         OI   MASK,FOUND            REMEMBER FOUND SOMETHING
         L    ICECBAR,ICECHNAD      NEXT ICE ENTRY
         C    ICECBAR,CSAICEBA      SAME AS FIRST?
         BNE  QICE10                NO
QICE99   B    BLDSCRN               YES, BUILD THE SCREEN
*        FILL TS QUEUE WITH ELEMENTS FROM AID CHAIN (NON TERMINAL)
QAID     L    AIDCBAR,CSAAIDBA      AID CHAIN ADDRESS
QAID10   LTR  AIDCBAR,AIDCBAR       NOTHING ON CHAIN?
         BZ   QAID49
         MVI  TSQROW,X'40'          CLEAR QUEUE ITEM
         MVC  TSQROW+1(L'TSQROW-1),TSQROW
         LA   R3,AIDTYPE            TYPE
         BAL  R9,CONVTYPE           CONVERT TYPE
         MVC  TSQROW(4),AIDTRNID    MOVE TRANSACTION ID
         MVC  TSQROW+6(4),AIDTRMID  MOVE TERMINAL ID
         EXEC CICS WRITEQ TS LENGTH(34) FROM(TSQROW)                   *
         QUEUE(TSQUEUE) ITEM(ITEMBOT) MAIN
         OI   MASK,FOUND            REMEMBER FOUND SOMETHING
         L    AIDCBAR,AIDCHNAD      NEXT AID ENTRY
         C    AIDCBAR,CSAAIDBA      SAME AS FIRST?
         BNE  QAID10
*        FILL TS QUEUE WITH ELEMENTS FROM AID CHAIN (TERMINAL ENTRIES)
*        TERMINAL ATTACHED AID ELEMENTS ARE CHAINED FROM THE TCT -
*        SYSTEM ENTRIES
QAID49   L    R1,CSATCTBA           TCT PREFIX
         L    TCTTEAR,TCTVSEBA-DFHTCTFX(R1)  1ST SYSTEM ENTRY
QAID50   LTR  TCTTEAR,TCTTEAR       IS THERE ONE?
         BZ   QAID99                NO
         LA   R1,TCSEAID            END OF CHAIN (DUMMY ENTRY)
         ST   R1,DUMMYTCT           SAVE THIS
         L    AIDCBAR,TCSESUSF      GET FIRST AID ADDRESS
QAID60   LTR  AIDCBAR,AIDCBAR       NOTHING ON CHAIN?
         BZ   QAID90
         C    AIDCBAR,DUMMYTCT      END OF CHAIN?
         BE   QAID90                YES
         MVI  TSQROW,X'40'          CLEAR QUEUE ITEM
         MVC  TSQROW+1(L'TSQROW-1),TSQROW
         LA   R3,AIDTYPE            TYPE
         BAL  R9,CONVTYPE           CONVERT TYPE
         MVC  TSQROW(4),AIDTRNID    MOVE TRANSACTION ID
         MVC  TSQROW+6(4),AIDTRMID  MOVE TERMINAL ID
         EXEC CICS WRITEQ TS LENGTH(34) FROM(TSQROW)                   *
         QUEUE(TSQUEUE) ITEM(ITEMBOT) MAIN
         OI   MASK,FOUND            REMEMBER FOUND SOMETHING
         L    AIDCBAR,AIDCHNAD      NEXT AID ENTRY
         B    QAID60
QAID90   L    TCTTEAR,TCSENEXT ADDRESS NEXT SYSTEM ENTRY
         B    QAID50
QAID99   B    BLDSCRN
*        BUILD THE SCREEN, FROM ITEM POINTED TO BY ITEMTOP
BLDSCRN  MVC  TSITEM,ITEMTOP
         EXEC CICS HANDLE CONDITION ITEMERR(BLD60)
         EXEC CICS HANDLE CONDITION QIDERR(BLD60)
         LA   R1,L'TSQROW           LENGTH OF ITEM
         STH  R1,DOUBLEW
         LA   R3,S1ROWNBR           NUMBER OF ROWS ON SCREEN
         LA   R4,S1ROW1O
BLD10    EXEC CICS READQ TS QUEUE(TSQUEUE) ITEM(TSITEM) INTO(0(R4))    *
         LENGTH(DOUBLEW)
BLD80    LA   R4,L'S1ROW1O+3(R4) NEXT ROW ON SCREEN
         LH   R1,TSITEM
         LA   R1,1(R1)              NEXT ITEM
         STH  R1,TSITEM
         BCT  R3,BLD10              LOOP COUNTER
         B    SENDMAP               SCREEN FULL
BLD60    MVI  0(R4),X'40'           CLEAR EMPTY ROWS ON SCREEN
         MVC  1(L'S1ROW1O-1,R4),0(R4)
         LA   R4,L'S1ROW1O+3(R4)
         BCT  R3,BLD60
         B    SENDMAP
*        SEND THE MAP
SENDMAP  EXEC CICS ASKTIME ABSTIME(DOUBLEW)
         EXEC CICS FORMATTIME TIME(S1TIMEO) ABSTIME(DOUBLEW) TIMESEP
         TM   MASK,TYPEICE          PROCESSING ICE CHAIN?
         BZ   SENDM05               NO
         MVC  S1HDRO,S1ICE          "ICE" TO SCREEN HEADER
         MVC  S1PFK20,S1AID         "AID" TO PF2 DEFINITION
         B    SENDM10
SENDM05  MVC  S1HDRO,S1AID          "AID" TO SCREEN HEADER
         MVC  S1PFK20,S1ICE         "ICE" TO PF2 DEFINITION
SENDM10  TM   MASK,FOUND            ANYTHING FOUND?
         BO   SENDM20
         MVC  S1MSGO(L'MSG7),MSG7 NO, GIVE THE MESSAGE
SENDM20  EXEC CICS SEND MAP('ICEMAP1') MAPSET('ICEMAPS') ERASE         *
             FREEKB
         B    RETURN10
*        RECEIVE MAP
RECEIVE  EXEC CICS RECEIVE MAP('ICEMAP1') MAPSET('ICEMAPS')
         B    ACTION
*        HANDLE USER'S RESPONSE
ACTION   CLI  EIBAID,DFHPF2         USER WANTS TO TOGGLE
         BNE  ACT05
         XI   MASK,TYPEICE          SWITCH TYPE
         B    FILLQ
ACT05    CLI  EIBAID,DFHPF5         SCROLL TO TOP?
         BNE  ACT06
         MVC  S1MSGO(L'MSG10),MSG10
         OI   MASK,MSGSET
         LA   R1,1                  SET TO FIRST ITEM
         STH  R1,ITEMTOP
         B    BLDSCRN
ACT06    CLI  EIBAID,DFHPF6         SCROLL TO BOTTOM?
         BNE  ACT07
         MVC  S1MSGO(L'MSG9),MSG9
         OI   MASK,MSGSET
         LH   R1,ITEMBOT            LAST ITEM OF TS QUEUE
         LA   R2,S1ROWNBR-1
         SR   R1,R2
         LTR  R1,R1
         BP   ACT06A
         LA   R1,1
ACT06A   STH  R1,ITEMTOP
         B    BLDSCRN
ACT07    CLI  EIBAID,DFHPF7         SCROLL UP?
         BNE  ACT08
         LH   R1,ITEMTOP            CURRENT TOP ITEM
         LA   R2,S1ROWNBR
         SR   R1,R2                 SUBTRACT NUMBER OF ROWS
         LTR  R1,R1                 ALREADY AT TOP?
         BP   ACT07A                NO
         MVC  S1MSGO(L'MSG10),MSG10
         OI   MASK,MSGSET
         B    BLDSCRN
ACT07A   STH  R1,ITEMTOP            NEW TOPROW
         B    BLDSCRN
ACTO8    CLI  EIBAID,DFHPF8         SCROLL DOWN?
         BNE  ACT12
         LH   R1,ITEMTOP            CURRENT ITEM ON TOP
         LA   R2,S1ROWNBR
         AR   R1,R2                 ADD NUMBER OF ROWS
         CH   R1,ITEMBOT            ALREADY AT BOTTOM?
         BNH  ACT08A                NO
         MVC  S1MSGO(L'MSG9),MSG9
         OI   MASK,MSGSET
         B    BLDSCRN
ACT08A   STH  R1,ITEMTOP            NEW TOPROW
         B    BLDSCRN
ACT12    CLI  EIBAID,DFHPF12        USER WANTS QUIT
         BNE  ACT50
         B    RETURN
ACT50    CLI  EIBAID,DFHENTER       USER PRESSED SEND
         BNE  ACT99
         B    FILLQ                 REFRESH THE SCREEN
ACT99    MVC  S1MSGO(L'MSG8),MSG8   UNDEFINED KEY
         OI   MASK,MSGSET
         B    BLDSCRN
*        RETURN ROUTINES
RETURN   EXEC CICS HANDLE CONDITION QIDERR(RETURN05)
         EXEC CICS DELETEQ TS QUEUE(TSQUEUE)
*        DEFINITE RETURN
RETURN05 EXEC CICS SEND CONTROL ERASE FREEKB
         EXEC CICS RETURN
*        RETURN WITH NEXTRAN OURSELVES
RETURN10 EXEC CICS RETURN TRANSID('HICE') COMMAREA(COMMAREA) LENGTH(5)
*        TIME CONVERT ROUTINE   TIME IS IN R3 IN 1/300 SECONDS
CONVTIME SR    R2,R2                CONVERT TIME
         D     R2,=F'300'           GET NUMBER OF SECONDS
         SR    R2,R2                PREPARE FOR NEXT DIVIDE
         D     R2,=F'60'            R2 = SECONDS, R3 = MINUTES
         LR    R1,R2                SAVE NUMBER OF SECONDS IN R1
         SR    R2,R2                PREPARE FOR NEXT DIVIDE
         D     R2,=F'60'            R2 = MINUTES, R3 = HOURS
         CVD   R3,DOUBLEW           BINARY HOURS TO DECIMAL
         OI    DOUBLEW+7,X'0F'      PREPARE FOR UNPACK
         UNPK  TSQROW+26(2),DOUBLEW+6(2) CHANGE DECIMAL TO CHARACTER
         MVI   TSQROW+28,C':'       FIELD SEPARATOR
         CVD   R2,DOUBLEW           BINARY MINUTES TO DECIMAL
         OI    DOUBLEW+7,X'0F'      PREPARE FOR UNPACK
         UNPK  TSQROW+29(2),DOUBLEW+6(2) CHANGE DECIMAL TO CHARACTER
         MVI   TSQROW+31,C':'       FIELD SEPARATOR
         CVD   R1,DOUBLEW           BINARY SECONDS TO DECIMAL
         OI    DOUBLEW+7,X'0F'      PREPARE FOR UNPACK
         UNPK  TSQROW+32(2),DOUBLEW+6(2) CHANGE DECIMAL TO CHARACTER
         BR    R9
*        CONVERT ELEMENT TYPE   TYPE IS IN R3
CONVTYPE LA   R1,TYPES              LIST OF POSSIBLE TYPES
CONVTY05 CLC  0(1,R1),0(R3)
         BE   CONVTY10
         CLI  0(1,R1),X'FF'         EOF TABLE?
         BE   CONVTY12
         LA   R1,13(R1)
         B    CONVTY05
CONVTY10 MVC  TSQROW+12(12),1(R1)
         BR   R9
CONVTY12 MVC  TSQROW+12(12),1(R1)   SHOULD NOT OCCUR
         BR   R9
*        CONSTANTS
         LTORG
TYPES    DS   0F    TABLE WITH POSSIBLE CHAIN ELEMENT TYPES
         DC   X'04',CL12'TR/TS DELETE'
         DC   X'08',CL12'ISC SCHEDULE'
         DC   X'10',CL12'TDP SCHEDULE'
         DC   X'20',CL12'ICP WAIT'
         DC   X'30',CL12'ICP POST'
         DC   X'40',CL12'ICP INITIATE'
         DC   X'50',CL12'ICP PUT'
         DC   X'80',CL12'BMS SCHEDULE'
         DC   X'FF',CL12'*UNKNOWN*'
S1AID    DC   C'AID'
S1ICE    DC   C'ICE'
MSG7     DC   C'NO ITEMS FOUND'
MSG8     DC   C'UNDEFINED KEY '
MSG9     DC   C'BOTTOM OF DATA'
MSG10    DC   C'TOP OF DATA   '
         END


ICEMAPS MAPSET

         TITLE 'CICS ICE/AID DISPLAY - MAPSET'
ICEMAPS  DFHMSD TYPE=&SYSPARM,MODE=INOUT,LANG=ASM,STORAGE=AUTO,        *
               TIOAPFX=YES
*        Define the ICE/AID display panel
ICEMAP1  DFHMDI SIZE=(24,80),CTRL=(PRINT,FREEKB)
S1TIME   DFHMDF POS=(1,3),ATTRB=(ASKIP,NORM),LENGTH=8
         DFHMDF POS=(2,21),ATTRB=(ASKIP,BRT),LENGTH=8,                 *
               INITIAL='*** CICS'
S1HDR    DFHMDF POS=(2,30),ATTRB=(ASKIP,BRT),LENGTH=3
         DFHMDF POS=(2,34),ATTRB=(ASKIP,BRT),LENGTH=17,                *
                INITIAL='CHAIN DISPLAY ***'
         DFHMDF POS=(5,19),ATTRB=(ASKIP,NORM),LENGTH=60,               *
               INITIAL='TRAN  TERM  TYPE          TIME'
*        Scrollable part
S1ROW1   DFHMDF POS=(7,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW2   DFHMDF POS=(8,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW3   DFHMDF POS=(9,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW4   DFHMDF POS=(10,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW5   DFHMDF POS=(11,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW6   DFHMDF POS=(12,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW7   DFHMDF POS=(13,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW8   DFHMDF POS=(14,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW9   DFHMDF POS=(15,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW10  DFHMDF POS=(16,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW11  DFHMDF POS=(17,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW12  DFHMDF POS=(18,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW13  DFHMDF POS=(19,19),ATTRB=(PROT,NORM),LENGTH=60
S1ROW14  DFHMDF POS=(20,19),ATTRB=(PROT,NORM),LENGTH=60
S1MSG    DFHMDF POS=(23,2),ATTRB=(PROT,BRT),LENGTH=79,                 *
               INITIAL=' '
         DFHMDF POS=(24,14),ATTRB=(ASKIP,NORM),LENGTH=11,              *
               INITIAL='PF2=Display'
S1PFK2   DFHMDF POS=(24,26),ATTRB=(ASKIP,NORM),LENGTH=3
         DFHMDF POS=(24,31),ATTRB=(ASKIP,NORM),LENGTH=48,              *
               INITIAL='PF5=Top  PF6=Bottom  PF7=Up  PF8=Down  PF12=Qui*
               t'
         DFHMSD TYPE=FINAL
         END


C J Koopman
Systems Programmer
Hoogovens Groep BV (The Netherlands)                               c Xephon 1992

