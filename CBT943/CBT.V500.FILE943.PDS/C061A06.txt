Accessing CICS from ISPF

This program will allow you to access CICS while you are
logged on to TSO/ISPF.  It comes in handy for programmers
who don't have multiple windowing capabilities.  You can
enter CICS commands and respond to them just as if you were
logged on to CICS.  For example, if you issue a CEMT I
DA(*) command, you can overtype the display to open or close
files.


STEP ONE

Assemble and link the following program:

CICSTSO  CSECT
         USING CICSTSO,R15
         STM   R0,R15,SAVE
         B     BEGINPROG
SAVEAREA DC    18F'0'
SAVE     DS    16F
BASER1   EQU   10
BASER2   EQU   11
BASER3   EQU   12
RSAVE    EQU   13
ABASE2   DC    A(CICSTSO+4096)
ABASE3   DC    A(CICSTSO+8192)
BRACKETS DC    AL1(YESX)
YESX     EQU   255
NOX      EQU   0
CHANGEDIR DC   AL1(NOX)
BEGINPROG DS   0H
         DROP  R15
         USING CICSTSO,R10
         USING CICSTSO+4096,R11
         USING CICSTSO+8192,R12
         LR    R10,R15
         LA    R11,2048(R10)
         LA    R11,2048(R11)
         LA    R12,2048(R11)
         LA    R12,2048(R12)
         LA    R13,SAVEAREA
         L     R0,=F'100000'
         GETMAIN R,LV=(0)
         ST    R1,TOCICS          BUFFER TO SEND TO CICS
         L     R0,=F'100000'
         GETMAIN R,LV=(0)
         ST    R1,FROMCICS        BUFFER TO RECEIVE FROM CICS
         L     R0,=F'100000'
         GETMAIN R,LV=(0)
         ST    R1,BUFFER
         L     R0,=F'2000'             GETMAIN for TPUT/TGET
         GETMAIN R,LV=(0)
         ST    R1,GETREGS+4
         MVI   GETREGS+4,X'81'
* DO DEFINES                        *
         BAL   R9,DEFINES              DEFINE ISPF VARIABLES
         MVC   APPLID,=CL8'CICSTSO1'   TRY CICSTSO1 FIRST
         MVI   LAPPLID,8
* DISPLAY FIRST PANEL - DETERMINE CICS REGION
         MVC   MESSAGE,=CL8' '
SHOWPAN1 EQU   *
         CALL  ISPLINK,(DISPLAY,COPER001,MESSAGE),VL
         CH    R15,=H'8'
         BE    END1
         B     ENTER1
END1     EQU   *
         B     EOJ
ENTER1   EQU   *
         B     SETCAPPL
MESSAGE  DC    CL8' '
DISPLAY  DC    CL8'DISPLAY'
COPER001 DC    CL8'COPER001'
COPERFFM DC    CL8'COPERFFM'
SMSG     DC    CL40' '
LMSG     DC    CL60' '
* GET CICS APPL                 *
SETCAPPL DS    0H
         MVC   CAPPLID,CAPPLX
         LA    R4,0
         LA    R5,CAPPLID
         LA    R6,8
GETLENC  CLI   0(R5),C' '
         BE    ENDCAPPL
         LA    R4,1(R4)
         LA    R5,1(R5)
         BCT   R6,GETLENC
ENDCAPPL EQU   *
         STC   R4,LCAPPLID
         LA    R1,REQSENIB
         USING ISTDNIB,R1
         MVC   NIBSYM,CAPPLID
         LA    R1,OPNSENIB
         MVC   NIBSYM,CAPPLID
         B     OPENAPPL
NOCAPPL  DS    0H
         MVC   SMSG,=CL40'ENTER CICS NAME'
         MVC   LMSG,=CL60'SPECIFY NAME OF CICS REGION'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPAN1
OPENAPPL EQU   *
         LA    R3,CTSOACB
         OPEN  ((3))
         LTR   R15,R15
         BZ    OPENOK
         SR    R2,R2
         PACK  DWD,APPLID+7(1)       TRY CICSTSO1 THRU CICSTSO9
         CP    DWD,=P'9'
         BE    ENDTRYING
         AP    DWD,=P'1'
         OI    DWD+7,X'0F'
         UNPK  APPLID+7(1),DWD
         B     OPENAPPL
ENDTRYING EQU  *
         SHOWCB ACB=CTSOACB,FIELDS=ERROR,AREA=SHOWIT,LENGTH=4,AM=VTAM
         L     R2,SHOWIT
         CVD   R2,DWD
         OI    DWD+7,X'0F'
         UNPK  LMSG+21(4),DWD
         MVC   LMSG+6(8),APPLID
         MVC   SMSG,=CL40'ACB OPEN FAILED'
* PROBABLY ALREADY 9 USERS
         MVC   LMSG,=CL60'APPL= XXXXXXXX, ERR= XXXX'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPAN1
OPENOK   DS    0H
         MVC   ACBOPEN,=F'1'
         LA    R3,SETLORPL
         SETLOGON RPL=(3),OPTCD=(START,SYN)
         LTR   R15,R15
         BZ    LOGONOK
         SHOWCB ACB=(3),FIELDS=ERROR,AREA=SHOWIT,LENGTH=4,AM=VTAM
         L     R2,SHOWIT
         CVD   R2,DWD
         OI    DWD+7,X'0F'
         UNPK  LMSG+6(4),DWD
         MVC   SMSG,=CL40'LOGON FAILED'
         MVC   LMSG,=CL60'ERR=XXXX'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPAN1
* REQUEST SESSION FROM CICS               *
LOGONOK  DS    0H
         LA    R3,REQSERPL
         LA    R4,REQSENIB
         REQSESS RPL=(3),NIB=(4),OPTCD=(NQ,SYN),AAREA=0
         LTR   R15,R15
         BZ    REQSESSOK
         CVD   R15,DWD
         OI    DWD+7,X'0F'
         UNPK  LMSG+6(4),DWD
         MVC   SMSG,=CL40'REQSESS FAILED'
         MVC   LMSG,=CL60'ERR= XXXX'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPAN1
REQSESSOK DS   0H
         XC    ISBNDECB,ISBNDECB       CLEAR SESSION BIND ECB
         XC    ISSDTECB,ISSDTECB       CLEAR SESSION SDT ECB
         OI    ISESSTAT,BINDRCVD
         OI    ISESSTAT,SDTRCVD
* DISPLAY 2ND PANEL - DETERMINE FUNCTION
         MVC   MESSAGE,=CL8' '
         MVC   OPT,=CL20' '
SHOWPANFF EQU  *
         CALL  ISPLINK,(DISPLAY,COPERFFM,MESSAGE),VL
         CH    R15,=H'8'
         BE    END3FF
         B     ENTER3FF
END3FF   MVC   MESSAGE,=CL8' '
         MVC   OPT,=CL20' '
         B     SHOWPAN1
ENTER3FF EQU   *
         L     R6,TOCICS
         MVC   0(L'CICSPREF,R6),CICSPREF
         LA    R6,L'CICSPREF(R6)
         LA    R7,0
         LA    R7,L'CICSPREF(R7)
         MVC   0(50,R6),COMMAND
         LA    R7,50(R7)
         B     SENDTOCICS
SENDTOCICS EQU *
         ST    R7,TOLENGTH
CICSSEND EQU   *
         L     R4,TOCICS
         L     R5,TOLENGTH
         LA    R5,L'CICSPREF(R5)
         BAL   R14,SENDIT
         B     RECEIVE
SENDIT   ST    R14,SAVE14
         ICM   R4,15,ISESCID
         L     R5,TOCICS
         L     R6,TOLENGTH
         CLI   BRACKETS,YESX
         BNE   SNOBRACKET
         SEND  RPL=SENDRPL,ARG=(4),STYPE=REQ,CONTROL=DATA,AREA=(5),    X
               RECLEN=(6),BRACKET=(BB),CHNGDIR=(CMD),OPTCD=SYN,        X
               RESPOND=(EX,FME,NRRN,NQRESP)
         B     CKSENDR
SNOBRACKET EQU *
         SEND  RPL=SENDRPL,ARG=(4),STYPE=REQ,CONTROL=DATA,AREA=(5),    X
               RECLEN=(6),BRACKET=(NBB,NEB),CHNGDIR=(CMD),OPTCD=SYN,   X
               RESPOND=(EX,FME,NRRN,NQRESP)
CKSENDR  LTR   R15,R15
         BZ    SENDOK
         MVC   SMSG,=CL40'SEND FAILED'
         MVC   LMSG,=CL60'SEND FAILED'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPAN1
SENDOK   DS    0H
         L     R14,SAVE14
         BR    R14
RECEIVE  DS    0H
         BAL   R14,RECEIVEIT
         B     MOVEBUFF
RECEIVEIT ST   R14,SAVE14
         ICM   R4,15,ISESCID
         L     R6,FROMCICS
         L     R5,=F'1920'
         RECEIVE RPL=RECVRPL,ARG=(4),AREA=(6),AREALEN=(5),             X
               OPTCD=(SYN,ANY,Q,CA,TRUNC),RTYPE=RESP
         LTR   R15,R15
         BZ    RCVOK
         MVC   SMSG,=CL40'RECEIVE FAILED'
         MVC   LMSG,=CL60'RECEIVE FAILED'
         MVC   MESSAGE,=CL8'CIC001'
         B     SHOWPANFF
RCVOK    DS    0H
         MVC   RESPLEN,=F'0'
         TESTCB AM=VTAM,RPL=RECVRPL,CONTROL=DATA
         BNE   RCVEXIT                            NO DATA
         SHOWCB AM=VTAM,RPL=RECVRPL,FIELDS=RECLEN,AREA=RESPLEN,        X
               LENGTH=4
RCVEXIT  EQU   *
         MVI   CHANGEDIR,NOX
         TESTCB AM=VTAM,RPL=RECVRPL,CHNGDIR=CMD
         BNE   NOCHANGED
         MVI   CHANGEDIR,YESX
NOCHANGED EQU  *
         MVI   BRACKETS,NOX
         TESTCB AM=VTAM,RPL=RECVRPL,BRACKET=BB
         BNE   NOBB
         MVI   BRACKETS,YESX
NOBB     EQU   *
         TESTCB AM=VTAM,RPL=RECVRPL,BRACKET=EB
         BNE   RCVEXIT2
         MVI   BRACKETS,YESX
         MVI   CHANGEDIR,YESX
RCVEXIT2 EQU   *
         L     R14,SAVE14
         BR    R14
MOVEBUFF DS    0H
         L     R6,FROMCICS
         L     R7,RESPLEN
         L     R4,BUFFER
         LA    R4,1(R4)
         LR    R5,R7
         MVCL  R4,R6
         MVC   BUFFLEN,RESPLEN
* DISPLAY RESPONSE                        *
         L     R4,BUFFER
         L     R1,BUFFLEN
         LA    R1,1(R1)
         ST    R1,SVCPARM           LENGTH
         ST    R4,SVCPARM+4         ADDRESS
         MVI   SVCPARM+4,X'03'
         MVI   0(R4),X'27'
         LM    R0,R1,SVCPARM
         SVC   93
         LM    R0,R1,GETREGS
         SVC   93
* BUILD CICS RESPONSE                     *
         MVC   FULL,GETREGS+4
         MVI   FULL,X'00'
         L     R6,FULL
         LR    R7,R1              LENGTH
         CLI   0(R6),X'F3'        PF3 ?
         BE    WASPF3
         B     WASENTER
WASPF3   L     R6,TOCICS
         MVC   0(3,R6),=X'F34040'
         MVC   TOLENGTH,=F'3'
         BAL   R14,SENDIT
         BAL   R14,RECEIVEIT
         BAL   R14,CLRSCRN
         CALL  ISPEXEC,(REFRESHL,REFRESHB),VL
         B     SHOWPANFF
WASENTER EQU   *
         ST    R7,TOLENGTH
         L     R8,TOCICS
MOVERESP MVC   0(1,R8),0(R6)
         LA    R6,1(R6)
         LA    R8,1(R8)
         BCT   R7,MOVERESP
         B     CICSSEND
CLRSCRN  ST    R14,SAVE14
         LM    R0,R1,CLEAR
         SVC   93
         L     R14,SAVE14
         BR    R14
         DS    0F
CLEAR    DC    A(L'CLEARIT)
         DC    X'03'
         DC    AL3(CLEARIT)
CLEARIT  DC    X'27F540115D7E11404013'
EOJ      DS    0H
         CLC   ACBOPEN,=F'0'
         BE    FREESTOR
         CLOSE CTSOACB
         MVC   ACBOPEN,=F'0'
FREESTOR EQU   *
         CLC   TOCICS,=F'0'
         BE    FREEFROM
         L     R2,=F'100000'
         L     R3,TOCICS
         FREEMAIN R,LV=(2),A=(3)
FREEFROM EQU   *
         CLC   FROMCICS,=F'0'
         BE    FREEBUFF
         L     R2,=F'100000'
         L     R3,FROMCICS
         FREEMAIN R,LV=(2),A=(3)
FREEBUFF EQU   *
         CLC   BUFFER,=F'0'
         BE    FREEGETR
         L     R2,=F'100000'
         L     R3,BUFFER
         FREEMAIN R,LV=(2),A=(3)
FREEGETR EQU   *
         CLC   BUFFER,=F'0'
         BE    EXITPROG
         L     R2,=F'2000'
         MVI   GETREGS+4,0
         L     R3,GETREGS+4
         FREEMAIN R,LV=(2),A=(3)
EXITPROG EQU   *
         LM    R0,R15,SAVE
         LA    R15,0
         BR    R14
GETREGS  DS    0F
         DC    F'2000'
         DC    X'81'
         DC    AL3(0)
CHAR1    DS    C
OPTX     DS    C
ACBOPEN  DC    F'0'
CICSPREF EQU   CICSOFF,3
CICSOFF  DC    X'7D4040'
SHOWIT   DC    F'0'
TOCICS   DC    F'0'
FROMCICS DC    F'0'
BUFFER   DC    F'0'
TOLENGTH DC    F'0'
BUFFLEN  DC    F'0'
SAVE14   DC    F'0'
DWD      DS    D
RESPLEN  DS    F
FULL     DS    F
SVCPARM  DS    2F
REFRESHL DC    F'23'
REFRESHB DC    CL23'CONTROL DISPLAY REFRESH'
CTSOACB  ACB   AM=VTAM,APPLID=LAPPLID,EXLST=ACBEXITS,MACRF=LOGON
ACBEXITS EXLST AM=VTAM,LOGON=NOLOGONS,LOSTERM=TERMINAL#LOST,           X
               NSEXIT=NETSERV,SCIP=SESSCNTL,TPEND=VTAM#END#PENDING
LAPPLID  DC    AL1(8)
APPLID   DC    CL8'CICSTSO1'
LCAPPLID DC    AL1(0)
CAPPLID  DC    CL8' '
SETLORPL RPL   AM=VTAM,ACB=CTSOACB
CLSDSRPL RPL   AM=VTAM,ACB=CTSOACB
OPNSERPL RPL   AM=VTAM,ACB=CTSOACB
REQSERPL RPL   AM=VTAM,ACB=CTSOACB
SENDRPL  RPL   AM=VTAM,ACB=CTSOACB
RECVRPL  RPL   AM=VTAM,ACB=CTSOACB
* DEFINE ISPF VARIABLES                      *
DEFINES  DS    0H
         CALL  ISPLINK,(VDEFINE,APPLXN,APPLX,CHAR,FX8),VL
         CALL  ISPLINK,(VDEFINE,CAPPLXN,CAPPLX,CHAR,FX8),VL
         CALL  ISPLINK,(VDEFINE,OPTN,OPT,CHAR,FX20),VL
         CALL  ISPLINK,(VDEFINE,COMMANDN,COMMAND,CHAR,FX50),VL
         BR    R9
APPLXN   DC    F'1'
         DC    F'8'
         DC    CL8'APPLX'
CAPPLXN  DC    F'1'
         DC    F'8'
         DC    CL8'CAPPLX'
OPTN     DC    F'1'
         DC    F'8'
         DC    CL8'OPT'
COMMANDN DC    F'1'
         DC    F'8'
         DC    CL8'COMMAND'
COMMAND  DC    CL50' '
APPLX    DC    CL8' '
CAPPLX   DC    CL8' '
OPT      DC    CL20' '
VDEFINE  DC    CL8'VDEFINE'
CHAR     DC    CL8'CHAR'
FX8      DC    F'8'
FX20     DC    F'20'
FX50     DC    F'50'
OPNSENIB NIB   NAME=CICSPROD,LISTEND=YES,MODE=RECORD,SDT=SYSTEM,       X
               PROC=CA,USERFLD=C'0700'
REQSENIB NIB   NAME=CICSPROD,LISTEND=YES,MODE=RECORD,USERFLD=C'0700'
         USING NOLOGONS,R15
NOLOGONS DS 0H
         STM   R14,R13,LOADARET
         DROP  R15
         LR    R9,R15
         USING NOLOGONS,R9
         L     BASER1,LODABASE1
         USING CICSTSO,BASER1,BASER2,BASER3
         LM    BASER2,BASER3,ABASE2
         LA    R13,LODSAVE
         LR    R8,R1
         L     R7,4(R8)                 ADDR SLU NAME
         LA    R7,CLSDSRPL
         L     R6,20(R8)
         CLSDST RPL=(7),ARG=(6),OPTCD=(SYN,RELEASE)
         LTR   R15,R15
         BZ    DENYOK
         B     DENYBAD
DENYOK   POST  LOGONECB
DENYBAD  LM    R14,R13,LOADARET
         BR    R14
LOADARET DC    A(0),15F'0'
LODABASE1 DC   A(CICSTSO)
LODSAVE  DC    18F'0'
         LTORG
         DROP  R9,BASER1,BASER2,BASER3
         USING TERMINAL#LOST,R15
TERMINAL#LOST  DS 0H
         STM   R14,R13,TODARET
         DROP  R15
         LR    R9,R15
         USING TERMINAL#LOST,R9
         L     BASER1,TODABASE1
         USING CICSTSO,BASER1,BASER2,BASER3
         LM    BASER2,BASER3,ABASE2
         LA    R13,TODSAVE
         LM    R14,R13,LOADARET
         BR    R14
TODARET  DC    A(0),15F'0'
TODABASE1 DC   A(CICSTSO)
TODSAVE  DC    18F'0'
         LTORG
         DROP  R9,BASER1,BASER2,BASER3
         USING NETSERV,R15
NETSERV  DS    0H
         ST    R14,NESARET
         DROP  R15
         LR    R9,R15
         USING NETSERV,R9
         L     BASER1,NESABASE1
         USING CICSTSO,BASER1,BASER2,BASER3
         LM    BASER2,BASER3,ABASE2
         LA    R13,NESSAVE
         POST  NTSRVECB
NETSERV#EXIT   DS 0H
         L     R14,NESARET
         BR    R14
NESARET  DC    A(0)
NESABASE1 DC   A(CICSTSO)
NESSAVE  DC    18F'0'
         LTORG
         DROP  R9,BASER1,BASER2,BASER3
         USING SESSCNTL,R15
SESSCNTL DS    0H
         STM   R14,R13,SCIARET
         DROP  R15
         LR    R9,R15
         USING SESSCNTL,R9
         L     BASER1,SCIABASE1
         USING CICSTSO,BASER1,BASER2,BASER3
         LM    BASER2,BASER3,ABASE2
         LA    R13,SCISAVE
         LR    R8,R1                   ADDR EXEC PARAMETER LIST
         L     R7,16(R8)               ADDR RPL FROM PARAMETER LIST
*        SCIP EXIT - CLEAR REQUEST                                    *
         TESTCB AM=VTAM,RPL=(7),CONTROL=CLEAR
         BNE   SCI#CLEAR#EXIT
         B     SESSCNTL#EXIT
SCI#CLEAR#EXIT DS 0H
*        SCIP EXIT - START DATA TRAFFIC                               *
         TESTCB AM=VTAM,RPL=(7),CONTROL=SDT
         BNE   SCI#SDT#EXIT
         MVC   ISESCID,4(R8)           CID FROM PARAMETER LIST
         POST  ISSDTECB
         B     SESSCNTL#EXIT
SCI#SDT#EXIT   DS 0H
*        SCIP EXIT - STSN                                             *
         TESTCB AM=VTAM,RPL=(7),CONTROL=STSN
         BNE   SCI#STSN#EXIT
         B     SESSCNTL#EXIT
SCI#STSN#EXIT  DS 0H
*        SCIP EXIT - BIND REQUEST                                     *
         TESTCB AM=VTAM,RPL=(7),CONTROL=BIND
         BNE   SCI#BIND#EXIT
         LA    R5,OPNSERPL
         LA    R6,OPNSENIB
         OPNSEC RPL=(5),NIB=(6),OPTCD=(CA,SYN)
         LTR   R15,R15
         BNZ   SCI#BIND#ERROR
         MVC   ISESCID,4(R8)           CID FROM PARAMETER LIST
         POST  ISBNDECB
         B     SESSCNTL#EXIT
SCI#BIND#ERROR DS 0H
         B     SESSCNTL#EXIT
SCI#BIND#EXIT  DS 0H
*        SCIP EXIT - UNBIND REQUEST                                   *
         TESTCB AM=VTAM,RPL=(7),CONTROL=UNBIND
         BNE   SCI#UNBIND#EXIT
* USING CID POST THE PROPER SESSION ENTRY IN THE TABLE
         OI    ISESSTAT,UNBINDRCVD
         POST  UNBNDECB
* DO NOTHING ELSE BECAUSE VTAM HAS ALREADY POSITIVELY RESPONDED TO THIS
         B     SESSCNTL#EXIT
SCI#UNBIND#EXIT DS 0H
*        SCIP EXIT - RETURN                                           *
SESSCNTL#EXIT  DS 0H
         LM    R14,R13,SCIARET
         BR    R14
SCIARET  DC    A(0),15F'0'
SCIABASE1 DC   A(CICSTSO)
SCISAVE  DC    18F'0'
         LTORG
         DROP  R9,BASER1,BASER2,BASER3
         USING VTAM#END#PENDING,R15
VTAM#END#PENDING DS 0H
         ST    R14,VTEARET
         DROP  R15
         LR    R9,R15
         USING VTAM#END#PENDING,R9
         L     BASER1,VTEABASE1
         USING CICSTSO,BASER1,BASER2,BASER3
         LM    BASER2,BASER3,ABASE2
         LA    R13,VTESAVE
         MVI   TPENDING,YESYES
         POST  TPENDECB
VTAM#END#PENDING#EXIT DS 0H
         L     R14,VTEARET
         BR    R14
VTEARET  DC    A(0)
VTEABASE1 DC   A(CICSTSO)
VTESAVE  DC    18F'0'
TPENDING DC    AL1(NONO)
NONO     EQU   0
YESYES   EQU   255
         LTORG
         DROP  R9,BASER1,BASER2,BASER3
LOGONECB DC    F'0'
TPENDECB DC    F'0'
NTSRVECB DC    F'0'
ISSDTECB DC    F'0'
ISBNDECB DC    FL4'0'
UNBNDECB DC    FL4'0'
ISESSINFO DS   0F
ISESSTAT DC    AL1(0)
BINDRCVD EQU   X'80'
SDTRCVD  EQU   X'40'
UNBINDRCVD EQU X'20'
ISESCID  DC    FL4'0'
ISESUSERF DC   CL4' '
ISESROUT DC    XL20'00'
         CVT   LIST=NO,DSECT=YES
CICSTSO  CSECT
         DSECT
         IEZCOM
CICSTSO  CSECT
         DSECT
         IEZCIB
CICSTSO  CSECT
IEFJFCB  DSECT
         IEFJFCBN
CICSTSO  CSECT
         ISTDNIB
CICSTSO  CSECT
         END   CICSTSO

This article will be concluded next month when we shall be
publishing details of the remaining steps.

W R Noud
Systems Programmer
IRS (USA)                                            c IRS 1990

