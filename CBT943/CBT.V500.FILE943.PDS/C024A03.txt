 Displaying the CICS Dynamic Storage Area

When CICS issues a 'Short On Storage' message, it is important to check whether
you need to give CICS more dynamic storage or not.  The following EXEC locates
the CICS partition and gets the address of the Dynamic Storage Area.  It shows
all the subpools and calculates the dynamic pages allocated and how many unused
pages are left.

It depicts the storage area in a map with the starting address and the ending
address of the area.  Every page, if it is used by a subpool, will be displayed
by a letter indicating the relevant subpool (eg S for the shared subpool).  Free
pages will be represented by a dot.  Figure 1 shows an example of a typical
display.

This EXEC is currently running in a VSE/AF 3.5, CICS/VS 1.6 environment.

/* COMMAND FORMAT: CICSPAM VSEID                                     */
/* FUNCTION:                                                         */
/* THIS EXEC DISPLAYS THE PAGE ALLOCATION MAP OF A CICS PARTITION.   */
/*-------------------------------------------------------------------*/
/* CHECK ARGUMENT                                                    */
/*-------------------------------------------------------------------*/
ARG VSEID .
IF VSEID = '?' | VSEID = ''
THEN DO RECNO = 1
   LINE = SOURCELINE(RECNO)
   IF LEFT(LINE,2) ¬= '/*' THEN EXIT
   SAY LINE                            /* DISPLAY TOP COMMENT LINES  */
   END
/*-------------------------------------------------------------------*/
/* CHECK VALID VSEID                                                 */
/*-------------------------------------------------------------------*/
'EXECIO * CP ( STRING QUERY' VSEID
IF RC¬=0 THEN DO
   SAY VSEID 'NOT EXIST OR LOGGED ON.'
   DESBUF
   EXIT
   END
DESBUF
/*-------------------------------------------------------------------*/
/* LOCATE SYSCOM AND NO OF PARTITION                                 */
/*-------------------------------------------------------------------*/
CALL FWORD 80
SYSCOM=FWORD
CALL FWORD D2X(X2D(SYSCOM)+44)
NPART=SUBSTR(FWORD,1,4)
/*-------------------------------------------------------------------*/
/* LOCATE CURRENT COMREG                                             */
/*-------------------------------------------------------------------*/
CALL FWORD 14
COMREG=FWORD
/*-------------------------------------------------------------------*/
/* LOCATE PIB2TAB                                                    */
/*-------------------------------------------------------------------*/
CALL FWORD D2X(X2D(COMREG)+124)
PIB2=SUBSTR(FWORD,1,4)
/*-------------------------------------------------------------------*/
/* GET CICS PARTITION AND COMREG                                     */
/*-------------------------------------------------------------------*/
DO J=1 TO NPART
   CALL FWORD D2X(X2D(PIB2)+16*J)
   COMREG=SUBSTR(FWORD,1,4)
   /* +X'B4' INTO COMREG -> AFCB   */
   CALL FWORD D2X(X2D(COMREG)+180)
   AFCB=SUBSTR(FWORD,3,6)
   IF AFCB¬=0 THEN LEAVE          /* IF AFCB POINTER IS NOT 0 THEN   */
    END                            /* IT IS CICS PARTITION            */
/*-------------------------------------------------------------------*/
/* GET CSA                                                           */
/*-------------------------------------------------------------------*/
   CALL FWORD D2X(X2D(AFCB)+8)
   CSA=X2D(SUBSTR(FWORD,3,6))
/*-------------------------------------------------------------------*/
/* GET VARIOUS SUBPOOLS IN THE DYNAMIC STORAGE AREA                  */
/*-------------------------------------------------------------------*/
   CALL FWORD D2X(CSA+152)
   PAM=SUBSTR(FWORD,3,6)
   CALL FWORD PAM
   CCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+16)
   TCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+32)
   MCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+48)
   ICNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+64)
   SCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+80)
   RCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+96)
   PCNT=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+112)
   PSIZE=X2D(FWORD)%1024||'K'
   CALL FWORD D2X(X2D(PAM)+116)
   DSAPG=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+136)
   AVAIL=X2D(FWORD)
   CALL FWORD D2X(X2D(PAM)+120)
   DSASTART=SUBSTR(FWORD,3,6)
   CALL FWORD D2X(X2D(PAM)+124)
   VADD=SUBSTR(FWORD,3,6)
   DADD=X2D(VADD)
   DISP=DADD//4
   DADD=DADD-DISP
   VPAG=SUBSTR(VADD,1,3)
/*-------------------------------------------------------------------*/
/* LOCK PAGE IN REAL STORAGE & GET REAL ADDRESS                      */
/*-------------------------------------------------------------------*/
   PARSE VALUE DIAG(8,'LOCK' VSEID VPAG VPAG 'MAP') WITH . . . RADD .
   RPAG=SUBSTR(RADD,1,3)                /* REAL PAGE NUMBER */
   TABLEIN=XRANGE('00'X,'08'X),
           ||XRANGE('11'X,'18'X)
   TABLEOUT='.CTMISR?PDDDDDD?D'
   CNT=DSAPG%16
   REM=DSAPG//16
   DO I=1 TO CNT
      ADD =RIGHT(D2X(DADD),6,'0')       /* VIRTUAL ADDRESS OF LINE  */
      DIS =SUBSTR(ADD,4,3)              /* HEX PAGE DISP OF LINE    */
      DDIS=X2D(DIS)                     /* DEC PAGE DISP OF LINE    */
      RADD=RPAG||DIS                    /* REAL ADDRESS OF LINE     */
      PARSE VALUE DIAG(8,'DCP' RADD||'.F') WITH . W1 W2 W3 W4 .
      W4=SUBSTR(W4,1,8)
      ROLD=RADD
      IF DDIS>='4080' THEN CALL PAMPAGE
      C =X2C(W1||W2||W3||W4)
      C.I=TRANSLATE(C,TABLEOUT,TABLEIN)
      DADD=DADD+16
      END I
   IF REM¬=0 THEN DO
      ADD =RIGHT(D2X(DADD),6,'0')       /* VIRTUAL ADDRESS OF LINE  */
      DIS =SUBSTR(ADD,4,3)              /* HEX PAGE DISP OF LINE    */
      DDIS=X2D(DIS)                     /* DEC PAGE DISP OF LINE    */
       RADD=RPAG||DIS                    /* REAL ADDRESS OF LINE     */
      PARSE VALUE DIAG(8,'DCP' RADD||'.F') WITH . W1 W2 W3 W4 .
      W4=SUBSTR(W4,1,8)
      ROLD=RADD
      IF DDIS>='4080' THEN CALL PAMPAGE
      C =X2C(W1||W2||W3||W4)
      C.I=TRANSLATE(C,TABLEOUT,TABLEIN)
      C.I =SUBSTR(C.I,1,REM)
      CNT=CNT+1
      END
/*-------------------------------------------------------------------*/
/* UNLOCK PAGE                                                       */
/*-------------------------------------------------------------------*/
   X=DIAG(8,'UNLOCK' VSEID VPAG VPAG)
/*-------------------------------------------------------------------*/
/* FINAL DISPLAY                                                     */
/*-------------------------------------------------------------------*/
SAY
SAY       'DYNAMIC UNUSED   --------------------- SUBPOOL',
          '-----------------------     PAGE'
SAY       ' PAGES  DYNAMIC    CTL      TP     MIX     ISO',
                             '    SHR     RPL     PGM     SIZE'
SAY       RIGHT(DSAPG,6) RIGHT(AVAIL,6) RIGHT(CCNT,8) RIGHT(TCNT,7),
           RIGHT(MCNT,7) RIGHT(ICNT,7) RIGHT(SCNT,7) RIGHT(RCNT,7),
           RIGHT(PCNT,7) RIGHT(PSIZE,7)
SAY
SAY
SAY       'ADDRESS                   DYNAMIC STORAGE AREA SUBPOOL MAP'
SAY
LCNT=CNT%4
REM=CNT//4
I=1
M=1
DSAADDR=DSASTART
DO M=1 TO LCNT
   J=I+1
   K=I+2
   L=I+3
   LINE.M=C.I||C.J||C.K||C.L
   SAY          DSAADDR'   'LINE.M
   DSAADDR=D2X(X2D(DSAADDR)+X2D(40000))
   I=I+4
   END
IF REM¬=0 THEN DO
   J=I+1
   K=I+2
   SELECT
      WHEN REM=3 THEN LINE.M=C.I||C.J||C.K
      WHEN REM=2 THEN LINE.M=C.I||C.J
      WHEN REM=1 THEN LINE.M=C.I
      OTHERWISE LINE.M=''
      END
   SAY          DSAADDR'  'LINE.M
   M=M+1
   END
EXIT
PAMPAGE:
   X=DIAG(8,'UNLOCK' VSEID VPAG VPAG)
   VPAG=D2X(X2D(VPAG)+1)/* NEXT VIRTUAL PAGE */
   PARSE VALUE DIAG(8,'LOCK' VSEID VPAG VPAG 'MAP') WITH . . . RADD .
   RPAG=SUBSTR(RADD,1,3)
   RADD=RPAG||'000'
   PARSE VALUE DIAG(8,'DCP' RADD||'.F') WITH . X1 X2 X3 X4 .
   X4=SUBSTR(X4,1,8)
   SELECT
     WHEN DDIS='4084' THEN W4=X1
      WHEN DDIS='4088' THEN DO
                           W3=X1
                           W4=X2
                           END
     WHEN DDIS='4092' THEN DO
                           W2=X1
                           W3=X2
                           W4=X3
                           END
     OTHERWISE NOP
     END
   RETURN

/*-------------------------------------------------------------------*/
/* SUBROUTINE BORROWED FROM VM UPDATE TO RETRIEVE THE CONTENTS OF    */
/* VSE MACHINE VIRTUAL STORAGE                                       */
/*-------------------------------------------------------------------*/
FWORD:  PROCEDURE EXPOSE VSEID FWORD
ARG VADD  .
SHIFT=2*(X2D(VADD)//4)+1
VADD=RIGHT(VADD,6,'0')
OFFS=SUBSTR(VADD,4,3)
VPG1=SUBSTR(VADD,1,3)
VPG2=VPG1
PARSE VALUE DIAG(8,'LOCK' VSEID VPG1 VPG1 'MAP') WITH . . . RP .
RPG1=SUBSTR(RP,1,3)
RADD=RPG1||OFFS
PARSE VALUE DIAG(8,'DCP' RADD||'.8') WITH . FW1 FW2 .
IF X2D(OFFS)>='4092' THEN DO
   VPG2=D2X(X2D(VPG1)+1)
   PARSE VALUE DIAG(8,'LOCK' VSEID VPG2 VPG2 'MAP') WITH . . . RP .
   RADD=SUBSTR(RP,1,6)
   PARSE VALUE DIAG(8,'DCP' RADD||'.8') WITH . FW2 .
   END
X=DIAG(8,'UNLOCK' VSEID VPG1 VPG2)
FWORD=FW1||FW2
FWORD=SUBSTR(FWORD,SHIFT,8)
RETURN


Jeffry Lee
Technical Consultant (Canada) ) Xephon 1987
























