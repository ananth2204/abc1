Interface for printing in CICS

There must have been many user interfaces for printing under
CICS since it was first released.  The following is one of them.

DESCRIPTION

The first program, CICPRINT, is what the user sees.  It
receives a COMMAREA of 8121 bytes with the following
layout: the first 8 bytes are reserved for returning to the caller
application program a code indicating the result of the
invocation, the remainder is an array 61 by 133 bytes; each
element of the array is a line for printing.  The first character of
the line is in the range 0 to 9 and represents carriage control.
A value of '0' indicates the end of the report, a value of '9'
means skip to the next page, and the values from 1 to 8
represent the number of lines you want to skip (a space in this
position is converted to 0).  After validation of the carriage
control characters from the array, CICPRINT writes a record to
a transient data queue to start the printing.

The second program,  CICPRINQ, is started by ATI.  It reads
the queue written by CICPRINT, eliminates all the trailing
nulls and spaces from each line to be printed, and adds the
3270 orders needed to format the printing.

ADVANTAGES

This interface has been tested with two third-party application
generators and with command-level programs.  Additionally,
although it has not been tested yet, it could be called from a
CSP application by just changing the layout of the
COMMAREA in CICPRINT (the CSP CALL command only
passes the address pointers of the parameters).  In this way,
you can have a single standard printing interface in your shop.

Fast printing is achieved in three ways.  First, the reason for
passing an array of 61 by 133 bytes (your listing doesn't need
to have this minimum length), is to minimise the I/O to the
intra-partition transient data dataset; it is the maximum record
length that can be written to a transient data dataset defined
with a control interval size of 8K.  Second, as CICPRINQ
eliminates trailing blanks and nulls, the transmission time over
a communication line is reduced (unless your shop has a data
compression routine for CICS).  Third, CICPRINQ sends a
buffer of 1920 characters to the CICS printer, which represents
several lines of printed output.

Printer routing is done through an 'authorisation table' checked
by CICPRINT.  The table is generated from a series of macro
instructions provided here.  If at any time you need to change
the configuration network standards, you don't need to change
the application programs.

To install the interface:

1     Add entries for CICPRINT, CICPRINQ, and CICPRDEF
      to the PPT.

2     Add a transaction code for CICPRINT in the PCT.

3     If you use RDO, define the entries with their CEDA
      equivalents.

4     Define a transient data queue with a trigger level of 1
      pointing to the previously defined transaction code and the
      corresponding printing destination.

Of course, you may find disadvantages with this interface.
Remember, as with other user interfaces, this has been
originated for specific needs.  If you have suggestions to
improve or generalise this interface, please let me know
through this publication.

CICPRINT

* CICPRINT - CHECK FOR AN AUTHORIZED PRINTER NAME AND ENSURE THAT ALL *
*            CARRIAGE CONTROL CHARACTERS BEING PASSED FROM THE        *
*            APPLICATION PROGRAM ARE VALID.                           *
DFHEISTG DSECT
QNAME    DS    CL4
MSG      DS    CL8
COMMAREA DSECT
         USING *,R10
RETCODE  DS    CL8
PRTAREA  DS    0CL133
CARRCTL  DS    CL1
PRTLINE  DS    CL132
         DFHREGS
CICPRINT CSECT
         LH    R10,EIBCALEN
         C     R10,=F'8121'
         BNE   ERR00
         L     R10,DFHEICAP
         LA    R10,8(0,R10)
         LR    R9,R10
         EXEC CICS HANDLE CONDITION ERROR    (ERR01)                   X
                                    PGMIDERR (ERR02)                   X
                                    LENGERR  (ERR03)                   X
                                    QIDERR   (ERR04)                   X
                                    NOSPACE  (ERR07)
* =>     SEARCH IF THE TERMINAL IS AUTHORIZED TO USE A PRINTER
         EXEC CICS LOAD PROGRAM ('CICPRDEF') SET (R8)
         LA    R8,64(,R8)
SEARCH   EQU   *
         CLC   0(4,R8),=4X'FF'
         BE    ERR05
         CLC   0(4,R8),EIBTRMID
         BE    AUTH
         A     R8,=F'8'
         B     SEARCH
AUTH     EQU   *
         MVC   QNAME(4),4(R8)
* =>     VALIDATE CARRIAGE CONTROL CHARACTERS
         LA    R7,61
CHECK    CLI   CARRCTL,X'40'
         BE    EOM
         TRT   CARRCTL(1),NUMBERS
         BNZ   ERR06
         LA    R10,133(0,R10)
         BCT   R7,CHECK
EOM      MVI   CARRCTL,C'0'
         LR    R10,R9
         EXEC CICS WRITEQ TD QUEUE (QNAME) FROM (PRTAREA)              X
                             LENGTH (QLEN)
         MVC   MSG,=CL8'GOOD'
         B     RETURN
* =>     ERROR MESSAGES
ERR00    MVC   MSG,=CL8'COMMERR'
         B     RETURN
ERR01    MVC   MSG,=CL8'ERROR'
         B     RETURN
ERR02    MVC   MSG,=CL8'PGMIDERR'
         B     RETURN
ERR03    MVC   MSG,=CL8'LENGERR'
         B     RETURN
ERR04    MVC   MSG,=CL8'QIDERR'
         B     RETURN
ERR05    MVC   MSG,=CL8'NOTAUTH'
         B     RETURN
ERR06    MVC   MSG,=CL8'INVALID'
         B     RETURN
ERR07    MVC   MSG,=CL8'NOSPACE'
RETURN   L     R10,DFHEICAP
         MVC   RETCODE,MSG
         EXEC CICS RETURN
         LTORG *
QLEN     DC    F'8113'
NUMBERS  DC    256X'FF'
         ORG   NUMBERS+X'F0'
         DC    10X'00'
         END   CICPRINT

CICPRINQ

* CICPRINQ - FORMAT AND PRINT THE DATA PREVIOUSLY VALIDATED BY        *
*            PROGRAM CICPRINT.                                        *
DFHEISTG DSECT
QNAME    DS    CL4
TEXTLEN  DS    H
QINPUT   DS    61CL133
BUFFER   DS    1920
DWD      DS    D
NL       EQU   X'15'
EOM      EQU   X'19'
FF       EQU   X'0C'
CR       EQU   X'0D'
SPACE    EQU   X'40'
NULLS    EQU   X'00'
         DFHREGS
CICPRINQ DFHEIENT DATAREG=(13,12,8)
         EXEC CICS HANDLE CONDITION ERROR (RETURN)
         EXEC CICS ASSIGN FACILITY (QNAME)
         EXEC CICS ENQ RESOURCE (QNAME) LENGTH(4)
         EXEC CICS DELAY INTERVAL (10)
READQ    EQU   *
         EXEC CICS READQ TO QUEUE(QNAME) INTO (QINPUT) LENGTH(QLEN)
* =>     BEGIN TO FORMAT THE PRINT OUTPUT
         MVC   BUFFER(3),SBA
         LA    R5,QINPUT
         LA    R4,BUFFER+3
         LA    R7,3
         LA    R10,61
LOOP     EQU   *
         MVC   0(132,R4),1(R5)
         LR    R9,R4
         BCTR  R9,R0
         LA    R4,132(R4)
         LA    R7,132(R7)
         LR    R2,R7
COMPRESS EQU   *
         BCTR  R4,R0
         CR    R4,R9
         BE    FORMAT
         CLI   0(R4),SPACE
         BE    NULLIFY
         CLI   0(R4),NULLS
         BNE   FORMAT
NULLIFY  EQU   *
         BCTR  R7,R0
         B     COMPRESS
FORMAT   EQU   *
         LA    R4,1(0,R4)
         XR    R9,R9
         PACK  DWD,0(1,R5)
         CVB   R9,DWD
         CP    DWD,=P'0'
         BE    ENDPRINT
         CP    DWD,=P'9'
         BE    NEXTPAGE
         CLR   R2,R7
         BNE   NEXTLINE
         BCTR  R9,R0
         LTR   R9,R9
         BZ    CONTINUE+4
NEXTLINE EQU   *
         ALR   R7,R9
         BCTR  R9,R0
         STC   R9,INSERT+1
INSERT   EQU   *
         MVC   0(0,R4),NLS
         ALR   R4,R9
         B     CONTINUE
NEXTPAGE EQU   *
         MVI   0(R4),NL
         MVI   1(R4),FF
         MVI   2(R4),CR
         LA    R7,3(R7)
         LA    R4,2(R4)
CONTINUE EQU   *
         LA    R4,1(R4)
         LA    R5,133(R5)
         CH    R7,FULLBUFF
         BH    FORCE
         BCT   R10,LOOP
ENDPRINT EQU   *
         MVI   0(R4),EOM
         LA    R7,1(R7)
         STH   R7,TEXTLEN
         EXEC CICS SEND FROM (BUFFER) LENGTH (TEXTLEN)                 X
                        CTLCHAR (CTLCHAR) WAIT
         B     READQ
FORCE    EQU   *
         MVI   0(R4),EOM
         LA    R7,1(R7)
         STH   R7,TEXTLEN
         EXEC CICS SEND FROM (BUFFER) LENGTH (TEXTLEN)                 X
                        CTLCHAR (CTLCHAR) WAIT
         LA    R4,BUFFER
         MVC   0(3,R4),SBA
         LA    R7,3
         LA    R4,3(R4)
         BCT   R10,LOOP
         B     READQ
RETURN   EQU   *
         EXEC CICS DEQ RESOURCE (QNAME) LENGTH (4)
         EXEC CICS RETURN
* =>     CONSTANTS
SBA      DC    X'114040'
NLS      DC    9X'15'
QLEN     DC    H'8113'
CTLCHAR  DC    X'C8'
FULLBUFF DC    H'1780'
         LTORG *
         END   CICPRINQ

CICPRDEF

          MACRO
          CICPRDEF &TYPE=,&TERMID=,&PRINTER=
.* => GENERATE PRINTING AUTHORIZATION TABLE
 GBLA &DEFSEQ
 GBLA &NUMERR
 LCLA &NUMTER
 LCLA &NUMTAB
          AIF (T'&TYPE EQ 'O').TYPERR
          AIF ('&TYPE' EQ 'INITIAL').INITIAL
          AIF ('&TYPE' EQ 'ENTRY').ENTRY
          AIF ('&TYPE' EQ 'FINAL').FINAL
.TYPERR   ANOP
          AGO   .ERROR0
.*        T Y P E = I N I T I A L
.INITIAL  ANOP
          AIF   (&DEFSEQ NE 0).ERROR0
CSECT     CICPRDEF
          DC    CL64'CICPRDEF - PRINTING AUTHORIZATION TABLE'
&DEFSEQ   SETA  1
          MEXIT
.*        T Y P E = E N T R Y
.ENTRY    ANOP
          AIF   (&DEFSEQ NE 1).ERROR0
          AIF   (T'&TERMID EQ 'O').ERROR1
          AIF   (T'&PRINTER EQ 'O').ERROR2
&NUMTER   SETA  N'&TERMID
&NUMTAB   SETA  1
.LOOP     ANOP
          AIF   (K'&TERMID(&NUMTAB) LE 1).AWAY
          DC    C'&TERMID(&NUMTAB)&PRINTER'
&NUMTAB   SETA  &NUMTAB+1
          AGO   .LOOP
.AWAY     ANOP
          MEXIT
.*        T Y P E = F I N A L
.FINAL    ANOP
          AIF   (&NUMERR EQ 0).ALLOK
          MNOTE 4,'E R R O R S'
          MNOTE *,'**************************************************'
          MNOTE *,'&NUMERR  ERRORS IN AUTHORIZATION TABLE           *'
          MNOTE *,'CORRECT THEM AND REASSEMBLE                      *'
          MNOTE *,'**************************************************'
          AGO   .BYE
.ALLOK    ANOP
          AIF   (&DEFSEQ NE 1).ERROR0
          DC    8X'FF'
          MNOTE *,'**************************************************'
          MNOTE *,'       AUTHORIZATION TABLE GENERATED OK.         *'
          MNOTE *,'**************************************************'
.BYE      ANOP
          MEXIT
.*        ERROR MESSAGES
.ERROR0   ANOP
          MNOTE  ,'ERROR: PARAMETERS OUT OF SEQUENCE'
          MNOTE  ,'       TYPE=INITIAL MUST BE THE FIRST AND'
          MNOTE  ,'       TYPE=FINAL MUST BE THE LAST'
          AGO   .REASM
.ERROR1   ANOP
          MNOTE  ,'ERROR: MUST DEFINE AUTHORIZED TERMINALS'
          AGO   .REASM
.ERROR2   ANOP
          MNOTE  ,'ERROR: MUST DEFINE PRINTER'
.REASM    ANOP
&NUMERR   SETA &NUMERR+1
          MEXIT
          MEND
          END

SAMPLE AUTHORISATION TABLE

          CICPRDEF  TYPE=INITIAL
          CICPRDEF  TYPE=ENTRY,                                        X
                TERMID=(V260,V261,V263),PRINTER=V274
          CICPRDEF  TYPE=ENTRY,                                        X
                TERMID=L77A,PRINTER=L77F
          CICPRDEF  TYPE=FINAL
          END


Enrique Garcia Dulanto
Technical Support Leader
Computo SA (Peru)                                             ) Xephon 1990


