Dynamically allocated non-CICS resources

There is a special problem in invoking security with
CICS/MVS applications that use a standard interface for
dynamic allocation of non-CICS resources.  If you do not
perform any specialized security checking from CA-TOP
SECRET or  some other external security manager as described
below, security is reflected only through the master ACEE of
the multi-user address space CICS.  The effective protection
against illegal user requests fails.  The checking for the use of a
specified resource is done at the individual user ACEE level of
access by means of RACROUTE as part of the MVS system
authorization facility.  RACROUTE requires the address of the
user ACEE, which is built during the sign-on process and is
addressable via the CICS control block field SNNTUBLK.

The following program, SVC99PGM, provides a standard
interface for dynamic allocation and the security checking of a
specified dataset that does not have a CICS FCT entry.

DFHEISTG DSECT
DSDDRETC DS    0CL53
DSNAME   DS    CL44
DDNAME   DS    CL8
RETC     DS    CL1
         .
         .
         .
SVC99PGM CSECT
         .
         .
         .
         MVI   DSDDRETC,X'40'
         MVC   DSDDRETC+1(52),DSDDRETC
*     SPECIFY DSNAME AND DDNAME OF THE REQUESTED RESOURCE
         MVC   DSNAME(22),=C'DSCICOT.DSDR1.SYSTEMDA'
         MVC   DDNAME(6),=C'DD1DYN'
         EXEC CICS LINK PROGRAM('SECCHECK') COMMAREA(DSDDRETC)
         CLI   RETC,X'40'           USER-DEFINED RETURNCODE X'40' ?
         BNE   ERROR
CONTIN   DS    0H
*     PROCESS DYNAMIC ALLOCATED RESSOURCE
         .
         .
         .
         EXEC CICS RETURN

In the following code, SECCHECK requests authorization for
the use of a specific user access level.

TCTTEAR  EQU   11
         COPY DFHTCADS
         COPY DFHTCTTE
         DFHSNT TYPE=DSECT
         IHAACEE                        MAPPING MACRO OF RACF
DFHEISTG DSECT                            ACCESSOR ENVIRONMENT ELEMENT
USER     DS    CL8
COMMAREA DSECT
COMFIELD DS    CL53
         ORG   COMFIELD
COMDSNAM DS    CL44
COMDDNAM DS    CL8
COMRETC  DS    CL1
SECCHECK CSECT
         LH    5,EIBCALEN
         CH    5,=H'0'                  COMMAREA EMPTY ?
         BE    ERROR
         MVI   DSDDRETC,X'40'
         MVC   DSDDRETC+1(52),DSDDRETC
         L     8,DFHEICAP
         USING COMMAREA,8
         L     TCTTEAR,TCAFCAAA         CHAIN DOWN CICS CONTROL BLOCKS
         USING DFHTCTTE,TCTTEAR         TO THE USER ACEE
         L     6,TCTTESNT
         USING DFHSNNT,6
         ICM   2,15,SNNTUBLK
         BZ    ERROR                    USER HAS NOT SIGNED ON
         L     7,=A(X'80000000'+LPFIX1)
         BSM   0,7                      SWITCH INTO 31-BIT MODE
LPFIX1   EQU   *
         USING ACEE,2
         EXEC CICS ASSIGN USERID(USER)
         CLC   USER,ACEEUSRI            COMPARE SIGNED-ON USER WITH
         BNE   ERROR                          USERID OF ACEE BLOCK
         L     7,=A(LPFIX2)
         BSM   0,7                      SWITCH BACK INTO 24-BIT MODE
LPFIX2   EQU   *
         MVC   DSNAME(44),COMDSNAM
         MVC   DDNAME(8),COMDDNAM       INVOKE THE MVS/SAF ROUTER
         RACROUTE REQUEST=AUTH,WORKA=RACWK,ENTITY=DSNAME,             *
               CLASS='DATASET',ATTR=ALTER,ACEE=(2)
         LTR   15,15                    IS USER AUTHORIZED ?
         BNZ   ERROR
         B     CONTIN
ERROR    DS    0H
         MVI   COMRETC,X'F1'            SET USER-DEFINED RETURN CODE
         B     RETURN
CONTIN   CALL  DYNAL,(DSNAME,DDNAME,RETC),VL    CALL DYNAMIC ALLOCATION
         MVC   COMRETC(1),RETC
RETURN   EXEC CICS RETURN
DSDDRETC DS    0CL53
DSNAME   DS    CL44
DDNAME   DS    CL8
RETC     DS    CL1
RACWK    DS    CL512                    WORK AREA FOR USE BY MVS ROUTER
         LTORG
         END

Below, DYNAL allocates and unallocates a specified resource.

DYNAL    CSECT
         STM   14,12,12(13)
         BALR  3,0
         USING *,3
         LR    9,1
         L     10,0(9)            LOAD PARM ADDRESS DSNAME
         L     11,4(9)               "           "  DDNAME
         L     7,8(9)                "           "  RETC
BEGIN    DS    0H
         LA    0,100
         GETMAIN R,LV=(0)
         LR    8,1                ADDRESS REQUEST BLOCK DSECT
         USING S99RBP,8                        IN GETMAINED STORAGE
         LA    4,S99RBPTR+4
         USING S99RB,4
         ST    4,S99RBPTR
         OI    S99RBPTR,S99RBPND
         XC    S99RB(RBLEN),S99RB
         MVI   S99RBLN,RBLEN
         MVI   S99VERB,S99VRBAL   ALLOCATION REQUESTED
         LA    5,TUPL             ADDRESS TEXT UNIT POINTER LIST
         ST    5,S99TXTPP         STORE ADDRESS IN REQUEST BLOCK
         L     6,0(5)             LOAD ADDRESS OF TEXT UNITS
         MVI   6(6),X'40'
         MVC   7(43,6),6(6)
         MVC   6(44,6),0(10)      PROVIDE ACTUAL DSNAME OF A SPECIFIED
         XR    9,9                                            RESOURCE
         L     9,12(5)
         MVC   6(8,9),=8X'40'
         MVC   6(8,9),0(11)       PROVIDE ACTUAL DDNAME OF THE RESOURCE
         OI    TUPLEND,X'80'      MARK END OF TUP LIST
         LA    1,S99RBP           LOAD ADDRESS OF SVC99 PARMLIST
         DYNALLOC                 ISSUE SVC99
         C     15,=F'0'           RETURN CODE = 0 ?
         BE    RETURN
         MVI   0(7),X'F2'         SET USER-DEFINED RETURN CODE
RETURN   DS    0H                 RETURN TO CALLER
         LM    14,12,12(13)
         XR    15,15
         BR    14
TUPL     DS    0F                 TEXT UNIT POINTER LIST
         DC    A(DSNTU)
         DC    A(CLOSETU)
         DC    A(STATUSTU)
TUPLEND  DC    A(DDNTU)
DSNTU    DC    AL2(DALDSNAM)      DSNAME TEXT UNIT
         DC    X'0001'
         DC    X'002C'
         DC    44X'40'
STATUSTU DC    AL2(DALSTATS)
         DC    X'0001'
         DC    X'0001'
         DC    X'08'              DISP=SHR
CLOSETU  DC    AL2(DALCLOSE)
         DC    X'0000'            IF DATASET CLOSED --> UNALLOCATE
DDNTU    DC    AL2(DALDDNAM)      DDNAME TEXT UNIT
         DC    X'0001'
         DC    X'0008'
         DC    8X'40'
         IEFZB4D0                 DYNAMIC ALLOCATION PARMLIST
         IEFZB4D2                 TEXT UNIT KEYS, MNEMONICS, FUNCTIONS
RBLEN    EQU   (S99RBEND-S99RB)
         END   DYNAL


Gerrit Herlyn and Markus Zehnder
CICS Systems Programmers
TWS Stuttgart (Germany)

