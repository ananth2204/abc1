DFHZNEP Node Error Program
The use of the action flags TWAOPT1, TWAOPT2, and
TWAOPT3 can easily be extended to meet an installation's own
needs and requirements by simply adding an entry to an
internal table within the Node Error Program, DFHZNEP.  The
action flags and error processors are explained in great detail in
the CICS Customization Guide and the CICS Problem
Determination Guide.

We have developed our own Node Error Program to list all the
errors associated with an LU in a single line written to the
transient data destination, CSMT.  In particular, this
information includes:

o      CICS error code
o      System sense code
o      User sense code
o      RPL return code
o      Terminal-id
o      Task-id.

Our Node Error Program can be used as a quick cross-reference
chart for finding the appropriate error condition associated with
an LU.  If the node is an LUTYPE3 (ie a printer) and it is
found to be 'out of service', the status will be changed to 'in
service'.


       TITLE   'VTAM NODE ERROR PROGRAM CICS211'
* MODULE NAME = DFHZNEP   * LEVEL = CICS2.1.1                         *
* DESCRIPTIVE NAME = VTAM TERMINAL ERROR PROGRAM PROCESSOR            *
* FUNCTION = PERFORMS ALL THE ERROR PROCESSORS LISTED IN DFHZNEP.     *
*            IN ADDITION IF DEVICE IS PRINTER AN ATTEMPT WILL BE MADE *
*            TO PUT IT IN SERVICE  FOR MORE INFORMATION REFER SOURCE  *
* DEPENDENCIES = NONE                                                 *
TDOABAR  EQU   R3                  TRANSIENT DATA AREA
         COPY  DFHTDOA
LITX1    DS    CL5                 ERR=
A1ERR    DS    CL2                 ERROR CODE TWAEC
LITX2    DS    CL8                 SYSENS=
A1SYSENS DS    CL4                 SYSTEM SENSE RECEIVED
LITX3    DS    CL7                 USENS=
A1USENS  DS    CL4                 USER SENSE RECEIVED
LITX4    DS    CL6                 TASK=
A1TASK   DS    CL4                 TASKID
LITX5    DS    CL7                 TRMNL=
A1TERM   DS    CL4                 TERMID
LITX6    DS    CL7                 RPLRC=
A1RPLRC  DS    CL4                 RPLRC
LMSGA1   EQU   *-TDOADBA+4         INCLUDE LLLLBBBB
       DFHSNEP TYPE=INITIAL,                                           X
               NAME=DFHZNEP,                                           X
               NETNAME=DFHNET
*         E R R O R  P R O C E S S O R S
       DFHSNEP TYPE=ERRPROC,GROUP=03,                                  X
               CODE=(10,11,13,14,15,18,19,1A,1D,                       X
               20,21,22,23,24,25,26,27,28,29,                          X
               2A,2B,2C,2D,2E,2F,30,31,32,                             X
               33,34,35,3C,40,41,42,43,44,45,46,                       X
               4A,4B,4D,50,51,52,53,54,55,57,5B,                       X
               81,82,83,84,88,89,90,A8,92,93,B5,                       X
               E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EF)
* SAVE ENTRY REGISTERS
         ST    R14,TWAEPRS             SAVE RETURN REGISTER
         BALR  CSBASE,0                BASE REGISTER  R9
         USING *,CSBASE                ADDRESSIBILITY
$PROCESS DS    0H
         CLC   TWAEC,TCZOPSIN     SESSION STARTED
         BE    $RETURN            ... YES JUST RETURN
         CLC   TWAEC,TCZCLSIN     SESSION TERMINATED
         BE    $CHKDEV            ... YES CHK IF DEVICE PRINTER
         B     $OVRLOOK           ELSE DO OVERRIDES LOOKUP TABLE
$CHKDEV  DS    0H                 CHECK IF DEVICE PRINTER
         CLI   TCTTETT,TCTTET84   LUTYPE3 DEVICE?
         BNE   $RETURN            .... NO, JUST RETURN
         TM    TCTTETS,TCTTESPO+TCTTESOS  OUT OF SERVICE?
         BZ    $RETURN            .... NO, JUST RETURN
         MVC   TCATPTA,TWANID     GET PRINTER ID
**   SCHEDULE DEVICE TO BE PLACED IN SERVICE
         DFHTC CTYPE=STATUS,STATUS=(INSRV),TERM=ID
         B     $RETURN            .... RETURN
$OVRLOOK DS    0H            .... TWAOPT1 TWAOPT2 TWAOPT3
         LA    R6,OVERTBL         OVERRIDES TABLE
OVERLOOP DS    0H
         CLI   0(R6),X'FF'        END OF TABLE REACHED
         BE    $NOOVER            .... YES SKIP OVERRIDES
         CLC   TWAEC(1),0(R6)     MATCH
         BE    $ACTION            ... YES DO OVERRIDES
         A     R6,=F'4'           BUMP TO NEXT ENTRY
         B     OVERLOOP           DO IT UNTIL EXHAUSTED
*              A C T I O N   O V E R R I D E S
$ACTION  DS    0H
         MVC   TWAOPT1(3),1(R6)   ENTER OVERRIDES
$NOOVER  DS    0H
* BUILD THE MESSAGE TO BE ROUTED TO THE CICS LOG
         MVC   TCASCNB,LMSGZ1      STORAGE NEEDED
         DFHSC TYPE=GETMAIN,       NEED WORKING STORAGE                *
               CLASS=TRANSDATA,    THIS TYPE                           *
               INITIMG=00          CLEAR IT OUT
         L     TDOABAR,TCASCSA     ADDR OF STORAGE ACQUIRED
         USING DFHTDOA,TDOABAR
         XC    WORK1,WORK1          CLEAR WORK AREA
         MVC   WORK1(1),TWAEC       CICS ERROR CODE
         LA    R7,WORK1             ADDR OF TWAEC
         XR    R6,R6                CLEAR R6
         IC    R6,=AL1(5)           INSERT LENGTH FOR MOVE
         BAL   R8,CONVERT           CONVERT TO EBCDIC
         MVC   A1ERR(2),CNVRDATA    MOVE CONVERTED ERROR CODE
         MVC   LITX1,LIT1           PLUG IN FIELD ID
         XC    WORK2,WORK2          JUST IN CASE
         MVC   WORK2(2),TWASR1      GET SYS. SENSE RECD
         LA    R7,WORK2             SYS SENSE RECD
         XC    CNVRDATA,CNVRDATA    CLEAR WORK AREA
         XR    R6,R6                CLEAR R6
         IC    R6,=AL1(5)           INSERT LENGTH FOR MOVE
         BAL   R8,CONVERT           CONVERT TO EBCDIC
         MVC   A1SYSENS(4),CNVRDATA  MOVE CONVERTED SYS. SENSE CODE
         MVC   LITX2,LIT2           PLUG IN FIELD ID
         XC    WORK3,WORK3          JUST IN CASE
         MVC   WORK3(2),TWAUR1      GET USER SENSE RECD
         LA    R7,WORK3             USER SENSE RECD
         XC    CNVRDATA,CNVRDATA    CLEAR WORK AREA
         XR    R6,R6                CLEAR R6
         IC    R6,=AL1(5)           INSERT LENGTH FOR MOVE
         BAL   R8,CONVERT           CONVERT TO EBCDIC
         MVC   A1USENS(4),CNVRDATA  MOVE CONVERTED
         MVC   LITX3,LIT3           PLUG IN FIELD ID
         MVC   LITX4,LIT4           PLUG IN FIELD ID
         L     TCTTEAR,TWATCTA    ADDR OF TCTTE BEING PROCESSED
         OC    TCTTECA,TCTTECA    ANY TASK ATTACHED ?
         BZ    $NOTSK             ... NO I GUESS NOT
         L     R7,TCTTECA         TASK ADDRESS
         L     R7,TCASYAA-DFHTCADS(R7)  POINT TO SYSTEM TCA
         L     R7,TCATCPC-DFHSYTCA(R7)  PCT ADDR
         MVC   A1TASK,0(R7)       TRANSACTION ID
         B     $TERMID
$NOTSK   DS    0H
         MVC   A1TASK,=C'????'    DUMMY ID FOR PCT
$TERMID  DS    0H
         MVC   A1TERM,TWANID        TERMINAL ID
         MVC   LITX5,LIT5           PLUG IN FIELD ID
*** RPL CHECK
         OC    TCTERPLA,TCTERPLA    ANY RPL FOUND ?
         BNZ   $FNDRPL              ... YES
         XC    WORK3,WORK3          CLEAR FIELD
         B     $EDRPL               GO TO EDIT
$FNDRPL  DS    0H
         L     R7,TCTERPLA          RPL ADDR
         USING IFGRPL,R7            ADDRESSIBILITY TO RPL
         MVC   WORK3,RPLRTNCD-RPLID(R7)  GET RPL RETURN CODE
         DROP  R7
$EDRPL   DS    0H
         LA    R7,WORK3             RPL RETURN CODE
         XC    CNVRDATA,CNVRDATA    CLEAR WORK AREA
         XR    R6,R6                CLEAR R6
         IC    R6,=AL1(5)           INSERT LENGTH FOR MOVE
         BAL   R8,CONVERT           CONVERT TO EBCDIC
         MVC   A1RPLRC(4),CNVRDATA  MOVE CONVERTED
         MVC   LITX6,LIT6           PLUG IN FIELD ID
         MVC   TDOAVRL,LMSGZ1       INCLUDE LLLLBBBB
         MVC   TCATDDI,=C'CSML'     LOG DEST ID
         XC    TDOAVRL+2(2),TDOAVRL+2       CLEAR BBBB FIELD
         LA    R14,TDOAVRL          ADDR OF MSG AND LENGTH
         ST    R14,TCATDAA          PUT IT IN TCA
         DFHTD TYPE=PUT
         CLI   TCATDTR,X'00'        CHECK RESPONSE ANY ERRORS
         BNE   $LOGERR              ... YES
         B     $RETURN              ... RETURN
** CONVERSION ROUTINE FROM HEX FORMAT TO EBCDIC FORMAT
CONVERT  DS    0H
         BCTR  R6,0                 DECREMENT BY 1
         UNPK  CNVRDATA(5),0(3,R7)  UNPACK FIELD
         EX    R6,TRINSTR
         BR    R8
**       EXECUTED INSTRUCTIONS
TRINSTR  TR    CNVRDATA(*-*),TRTBL TRANSLATE FROM HEX TO ABCEDIC
**
$LOGERR  DS    0H
         WTO   'DFHZNEP UNSUCCESSFUL TD PUT TO CSML LOG'
         B     $RETURN                  .... EXIT
*                   R E T U R N  T O  Z N A C
$RETURN  DS    0H
         L     R14,TWAEPRS              RESTORE BRANCH REG
         BR    R14                      .... RETURN TO ZNAC
***    C O N S T A N T S   A N D   W O R K  A R E A S    ***
TRTBL    EQU   *
*                 0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
         DC    X'F0,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F' 0
         DC    X'10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F' 1
         DC    X'20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F' 2
         DC    X'30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F' 3
         DC    X'40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F' 4
         DC    X'50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F' 5
         DC    X'60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F' 6
         DC    X'70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F' 7
         DC    X'80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F' 8
         DC    X'90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F' 9
         DC    X'A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF' A
         DC    X'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF' B
         DC    X'C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF' C
         DC    X'D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF' D
         DC    X'E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF' E
         DC    X'F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,C1,C2,C3,C4,C5,C6' F
*  OVERRIDES ACTION TABLE
*             FOR TWAOPT1 TWAOPT2 TWAOPT3
OVERTBL  DS    0H
         DC    X'10',XL3'60E001'        NODE NOT ACTIVATED
         DC    X'14',XL3'60E001'        REQUEST LOGIC ERROR
         DC    X'5B',XL3'60E001'        ISC SESSION ERROR
         DC    X'61',XL3'60E001'
         DC    X'95',XL3'60E000'        TIOA LENGTH ERROR
         DC    X'A8',XL3'60E001'        FMH LENGTH ERROR
         DC    X'00',XL3'000000'        DUMMY DUMMY
         DC    X'FF',XL3'000000'        END OF TABLE
LIT1     DC    CL5' ERR='
LIT2     DC    CL8' SYSENS='
LIT3     DC    CL7' USENS='
LIT4     DC    CL6' TASK='
LIT5     DC    CL7' TRMNL='
LIT6     DC    CL7' RPLRC='
LMSGZ1   DC    AL2(LMSGA1)
WORK1    DS    CL3
WORK2    DS    CL3
WORK3    DS    CL3
CNVRDATA DS    CL5
         LTORG
       DFHSNEP TYPE=FINAL
         END


Eric Dubois
Systems Consultant
Paine Webber Inc (USA)


