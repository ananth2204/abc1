A CICS session manager

A need expressed (or at least wished for at times) by many
CICS users is the capability of having more than one CICS
session active at a time.  The list of reasons is long and varied.
A customer service representative, for example, may need to
view two accounts simultaneously, perform a look up function,
or suspend activity in one transaction to handle a customer's
order.  If the need is addressed at all, it is usually by adding
another CRT to the user's desk, using a VTAM session
manager, or changing the application programs.  All these
methods are costly in dollars or resources.  Moreover, there
may be security issues involved with users having multiple or
duplicate sign-ons.

This article describes a CICS-based session manager.  It allows
up to nine CICS sessions to be active at one time, and, being
CICS-based, all the sessions are accessible from the same
terminal and also the same user-id.

The session manager presented here is a global system.  That
is, once installed in a CICS region, it is available to all users in
that region.  There is no need to change any existing
applications to make use of it.  The session manager is driven
by two keys: PA1 and PA2 - you may, of course, use any two
keys you wish.   PA1 is used to step through your current
sessions.  It will also create a new session whenever you only
have one active session.  PA2 is used to display a summary of
your current sessions.  This screen shows all currently active
sessions, the active transaction-id, and part of the first line of
that session's screen before it was saved.  Several options are
available from this screen.  You can select a session to go to
directly, add a new session (and optionally key in the
transaction-id at the same time), or delete one or more
sessions.  PF12 will delete all your sessions and log you off
CICS.  PF1 displays a help screen describing these features.

There are three pieces to the session manager: an exit program,
the main session manager program, and the session summary
map.   The exit program (SYS009) is the DFHZCP global user
exit XZCATT and is, of course, written in Assembler.  Its
purpose is to intercept PA1 or PA2 AIDs and drive the main
session manager program.  What's nice about the XZCATT
exit is it allows one to control the next transaction-id that's
invoked by using a field provided in the PARM list.  This is
what SYS009 uses.  When PA1 or PA2 is detected, the exit
saves the current transaction-id in the TCTUA, and substitutes
one of the two session manager transaction-ids (either CPA1 or
CPA2) in the PARM list.  This exit and the field in the PARM
list are available in CICS Version 3.

The session manager program, SYS008, is the real guts of the
system.  It is written in COBOL II and utilizes only command-
level commands so it will be compatible in future releases of
CICS.

Normally, SYS008 is invoked via the exit described above.  If
it is, its first action is to save the user's current session.  This
involves saving the screen contents, the cursor position, and
any COMMAREA.  Temporary storage is used to save this
information.  The next action taken depends on the PA key
and, therefore, the transaction that invoked SYS008.  If PA1
was used, the next session's data is retrieved from temporary
storage and recreated as the current session.  The session
recreation is accomplished by doing a SEND TEXT of the map
buffer, a SEND CONTROL for the cursor position, and finally
a RETURN TRANSID with the user's transaction-id and any
COMMAREA that was saved.  For PA2, the session summary
screen is displayed.  Actions performed from the session
summary screen are basically creating and restoring sessions or
deleting sessions.  A new session is created by clearing the
screen and doing a RETURN to base-level CICS or to the
transaction specified.  A session is 'deleted' by simply deleting
its temporary storage records.  A third transaction-id, CPAK, is
utilized by SYS008 whenever it is being driven by itself and
not the exit program.  This occurs whenever the session
summary or help screens are displayed.

As mentioned earlier, temporary storage is used to save session
data.  The temporary storage queue names are of the form
CPAKtttt or CPAntttt where tttt is the terminal- id
(EIBTRMID) and n is a session number between 1 and 9.
CPAKtttt is a control record containing summary information
about the user's sessions.  It is always present whenever there
is more than one session active.  The CPAntttt queues contain
the actual session data being saved.  These queues are deleted
once the session is recreated.  All of the queues including the
control record are deleted whenever the user returns to having
only one session.  If the session manager is being used in an
MRO environment, the temporary storage writes are directed
back to the TOR by using the SYSID option (see paragraph
01MLS000 on page 22).

Comments at the beginning of the source listing for SYS008
describe the CICS table updates necessary to install the session
manager.  There are several other points worth mentioning.
First, since the session manager utilizes an exit, it must be
enabled whenever CICS is initialized.  The easiest method is to
issue the EXEC CICS ENABLE EXIT(XZCATT)
PROGRAM(SYS009) START command in a program initiated
by PLTPI processing.  Another change described in the
comments has to do with the auto-install exit.  Whether or not
your terminals are auto-installed is only a technicality.  The
problem is what to do with any remaining sessions in
temporary storage should a user decide to log off CICS.  It's
not fair to assume the user no longer needs them.  They may
have simply forgotten.  The comments describe one possible
way of dealing with this.  You may come up with a better
method.

This brings us to the final point in the comments - the COM
function values.  These are four-byte function codes that drive
SYS008 to perform a useful function.  They are passed in the
COMMAREA by a calling program issuing an XCTL or LINK
to SYS008.  KILL and LOGO have to do with the problem
mentioned previously.  KILL unconditionally deletes all the
session manager temporary storage queues: LOGO displays the
session summary screen with a highlighted message to the user.
The third COM function value, NEXT, is intended for
application program menus.  Normally when the user exits
from the highest level menu for an application system, the user
is logged off CICS or returned to base-level CICS.  The menu
could instead XCTL to SYS008 passing the NEXT COM
function value.  This drives SYS008 to see if the user has any
other active sessions.  If so, the next session in line is
presented to the user.  Alternatively, the session summary
screen  could be displayed.  Whichever way is chosen, the idea
is to provide a smooth transition from one session to another
and to prevent the user from losing his/her user-id or leaving
stray queues in temporary storage.

A couple of points concerning security also bear mentioning.
The first has to do with unauthorized browsing of the session
manager temporary storage queues.  The queues do contain the
screen images, however hard they may be to read.  Should this
be unacceptable to you or your audit department you may want
to restrict certain departments from using the session manager
(eg remove their TCTUA) or switch to a protected VSAM file.
The second point has to do with a user being assigned the same
terminal-id at log-on as a timed out user who was using the
session manager.  SYS008 does handle this situation.  One of
the data items saved in the temporary storage control record is
the user's user-id.  This is compared to the current user-id
whenever the control record is read.  If they are not the same,
the program takes one of three actions: asks the user to sign on,
deletes the temporary storage records, or substitutes the current
user in the temporary storage control record (see paragraph
20USER000 in next month's issue for details).

The session manager presented here was developed in an
MVS/ESA and CICS 2.1.1 environment running LU6.2 ISC
and using model 2 and model 5 terminals.  The system should
run under CICS/ESA with very few changes.  SYS008 and its
map should not require any changes since they use command-
level CICS and standard BMS.  The global user exit,
XZCATT, and the parameter list contents are also the same
under CICS/ESA.  The layout of all exit parameter lists has
changed though.  This should only require a change to the
DSECT in SYS009.


SYS008 SOURCE CODE

 IDENTIFICATION DIVISION.
 PROGRAM-ID.      SYS008.
     INSTALLATION.
     DATE-WRITTEN.
     REMARKS.
********************* GENERAL INFORMATION ************************
*    ONLINE PROGRAM - SYS008.                                    *
*    MAPSET         - SMSY008.                                   *
*    TRANSACTION ID - CPAK, CPA1, & CPA2                         *
********************** PROGRAM ABSTRACT **************************
*    CICS MULTI-SESSION MANAGER PROGRAM.                         *
*    - COMM FUNCTION VALUES:                                     *
*      - 'KILL': LINKED TO BY AUTOINST PROGRAM. MEANS DELETE     *
*                ALL SESSION TS QUEUES AND RETURN.               *
*      - 'LOGO': XCTL TO BY 'LOGO' TRANSACTION.  GIVE USER       *
*                CHANCE TO HANDLE ANY ACTIVE SESSIONS BEFORE     *
*                LOGGING OFF.                                    *
*      - 'NEXT': XCTL FUNCTION FOR APPLICATION PROGRAMS.         *
*                SELECTS NEXT ACTIVE SESSION IF ONE EXISTS OR    *
*                RETURNS TO CICS BASE LEVEL.  CAN BE USED BY     *
*                MENU PROGRAMS TO AUTOMATICALLY PASS USER TO     *
*                NEXT SESSION WHEN MENU IS EXITED.               *
******************** SYSTEM  REQUIREMENTS ************************
* - TCT:      TCTUA MINIMUM 4 BYTES FOR EACH TERMINAL.           *
* - PCT:      CPAK, CPA1, & CPA2 TRANSACTIONS FOR THIS PROGRAM   *
* - PPT:      SYS008 (COBOL) THIS PROGRAM.                       *
*             SYS009 (ASSEM) GLOBAL EXIT PROGRAM FOR XZCATT      *
* - PLTPI:    A PROGRAM TO ENABLE SYS009 (THE XZCATT EXIT)       *
* - DFHZ*TDX: CODE IN AUTOINSTALL USER EXIT TO CALL CPAK WITH    *
*             COMM FUNCTION OF 'LOGO' TO DISPLAY ANY REMAINING   *
*             SESSIONS USER MAY HAVE.  WANT USER TO DECIDE WHAT  *
*             TO DO WITH SESSIONS SO THAT TEMP. STORAGE CAN BE   *
*             FREED UP.                                          *
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-3090.
 OBJECT-COMPUTER. IBM-3090.
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 77  WS-TITLE                         PIC X(29)
        VALUE '*** START WORKING-STORAGE ***'.
 77  GM-PTR                           USAGE IS POINTER.
 77  TCTUA-PTR                        USAGE IS POINTER.
 01  WS-WORKING-STORAGE.
     05  WS-NTIME                      PIC 9(06).
     05  WS-NTIMER REDEFINES WS-NTIME.
         10 WS-NTIME-HH                PIC 9(02).
         10 WS-NTIME-MM                PIC 9(02).
         10 WS-NTIME-SS                PIC 9(02).
     05  WS-DTIME.
         10 WS-DTIME-HH                PIC 9(02).
         10 FILLER                     PIC X(01) VALUE ':'.
         10 WS-DTIME-MM                PIC 9(02).
         10 FILLER                     PIC X(01) VALUE ':'.
         10 WS-DTIME-SS                PIC 9(02).
     05  WS-ABTIME                     PIC 9(08).
     05  WS-RESP                       PIC S9(08) COMP.
     05  WS-SYSID.
         10  WS-SYSID-NAM              PIC X(03).
         10  WS-SYSID-NUM              PIC X(01).
     05  WS-REMOTEID.
         10  WS-RMTID-NAM              PIC X(03).
         10  WS-RMTID-NUM              PIC X(01).
     05  WS-ERR-MSG.
         10  WS-ERR-MSG1              PIC X(50).
         10  WS-ERR-MSG2              PIC X(29) VALUE SPACES.
     05  WS-AID                       PIC X(01).
     05  WS-TRANID                    PIC X(04).
     05  WS-NOTRANID.
         10 FILLER                    PIC X(01) VALUE '>'.
         10 FILLER                    PIC X(03) VALUE HIGH-VALUES.
     05  WS-CURPOS                    PIC S9(04) COMP.
     05  WS-USERID                    PIC X(08).
     05  WS-EIBCALEN                  PIC S9(04) COMP.
     05  WS-SCRN-LNG                  PIC S9(04) COMP.
     05  WS-STARTCODE                 PIC X(02).
     05  WS-SPACE4                    PIC S9(04) COMP.
     05  WS-CVDA1                     PIC S9(08) COMP.
     05  WS-CVDA2                     PIC S9(08) COMP.
     05  WS-CNT                       PIC S9(04) COMP.
     05  WS-CNT2                      PIC S9(04) COMP.
     05  WS-TCTUA-LNG                 PIC S9(04) COMP.
     05  WS-PAKEY-TRAN.
         10  WS-PAKEY-VALUE           PIC X(01) VALUE '%'.
         10  FILLER                   PIC X(03) VALUE HIGH-VALUES.
     05  WS-COMMAREA.
         10  COM-FUNC                 PIC X(04).
         10  COM-HELP-MAP             PIC X(01).
         10  COM-MSGS                 PIC X(01).
         10  FILLER                   PIC X(02).
     05  WS-COMMAREA-LNG              PIC S9(04) COMP VALUE +8.
     05  WS-CURSOR-LINE               PIC S9(04) COMP.
     05  WS-CURSOR-COL                PIC S9(04) COMP.
     05  WS-DEL-MSG.
         10 FILLER                    PIC X(04)
            VALUE '*** ' .
         10 WS-DEL-NUM                PIC 9(01).
         10 FILLER                    PIC X(20)
            VALUE ' SESSION(S) DELETED.'.
 01  ER-EIB-FIELDS.
     05  EIB-LITERALS.
         10  FILLER                   PIC X(04) VALUE SPACES.
         10  FILLER                   PIC X(37)
             VALUE 'EIBTRNID  EIBTASKN  EIBTRMID  EIBFN  '.
         10  FILLER                   PIC X(37)
             VALUE 'EIBRSRCE  EIBRESP  EIBRCODE          '.
     05  EIB-VALUES.
         10  FILLER                   PIC X(06) VALUE SPACES.
         10  ER-EIBTRNID              PIC X(04).
         10  FILLER                   PIC X(04) VALUE SPACES.
         10  ER-EIBTASKN              PIC 9(08).
         10  FILLER                   PIC X(04) VALUE SPACES.
         10  ER-EIBTRMID              PIC X(04).
         10  FILLER                   PIC X(05) VALUE SPACES.
         10  ER-EIBFN                 PIC X(04).
         10  FILLER                   PIC X(02) VALUE SPACES.
         10  ER-EIBRSRCE              PIC X(08).
         10  FILLER                   PIC X(03) VALUE SPACES.
         10  ER-EIBRESP               PIC ZZ99.
         10  FILLER                   PIC X(04) VALUE SPACES.
         10  ER-EIBRCODE              PIC X(12).
         10  FILLER                   PIC X(07) VALUE SPACES.
     05  EIB-HEXIDECIMAL-TABLE.
         10  EIB-HEX-TBL OCCURS 16 TIMES PIC X(01).
     05  EIB-HEX-TABLE-RDEF REDEFINES EIB-HEXIDECIMAL-TABLE.
         10  EIB-HEX-EIBFN                PIC X(04).
         10  EIB-HEX-EIBRCODE             PIC X(12).
     05  EIB-BINARY-TABLE.
         10  EIB-BIN-TBL OCCURS 08 TIMES PIC X(01).
     05  EIB-BINARY-TABLE-RDEF REDEFINES EIB-BINARY-TABLE.
         10  EIB-BIN-EIBFN            PIC X(02).
         10  EIB-BIN-EIBRCODE         PIC X(06).
     05  EIB-BIN-FLD                  PIC S9(04) COMP.
     05  EIB-BIN-FLD-RDEF REDEFINES EIB-BIN-FLD.
         10  FILLER                   PIC X(01).
         10  EIB-BIN-FLD1             PIC X(01).
     05  HEX-BYTE1                    PIC S9(04) COMP.
     05  HEX-BYTE2                    PIC S9(04) COMP.
     05  HEX-TABLE-VALUES             PIC X(16)
             VALUE '0123456789ABCDEF'.
     05  HEX-VALUE-TABLE REDEFINES HEX-TABLE-VALUES.
         10  HEX-VAL-TBL OCCURS 16 TIMES  PIC X(01).
 01  TS-TEMP-STORAGE.
     05  TS-CNTL-RECORD.
         10  TS-CNTL-NUMSESS          PIC S9(04) COMP.
         10  TS-CNTL-CURSESS          PIC S9(04) COMP.
         10  TS-CNTL-USERID           PIC X(08).
         10  TS-CNTL-SESSIONS OCCURS 9 TIMES.
             15  TS-CNTL-ACTIVE       PIC X(01).
             15  TS-CNTL-TRANID       PIC X(04).
             15  TS-CNTL-CURPOS       PIC S9(04) COMP.
             15  TS-CNTL-EIBCALEN     PIC S9(04) COMP.
             15  TS-CNTL-SCRN-LNG     PIC S9(04) COMP.
             15  TS-CNTL-DESC         PIC X(50).
             15  TS-CNTL-DESC-TBL REDEFINES TS-CNTL-DESC.
                 20  TS-DESC-TBL OCCURS 50 TIMES
                                      PIC X(01).
     05  TS-CNTL-LNG                  PIC S9(04) COMP VALUE +561.
     05  TS-SAVE-PTR                  PIC S9(04) COMP.
     05  TS-CNTL-EXIST                PIC X(01) VALUE 'Y'.
     05  TS-ITM1-RECORD.
         10  TS-ITM1-SCRN-SAVE        PIC X(3570).
     05  TS-ITM1-REDEFN REDEFINES TS-ITM1-RECORD.
         10  TS-ITM1-BMSPFIX          PIC X(12).
         10  FILLER                   PIC X(12).
         10  TS-ITM1-HEADING          PIC X(50).
         10  FILLER                   PIC X(3496).
     05  TS-ITM1-LNG                  PIC S9(04) COMP
            VALUE +3570.
     05  TS-ITM2-LNG                  PIC S9(04) COMP.
     05  TS-ITEM                      PIC S9(04) COMP.
     05  TS-SYSID                     PIC X(04).
     05  TS-QUEUE.
         10  TS-Q-TRANID.
             15  TS-Q-TRANID-NAM      PIC X(03).
             15  TS-Q-TRANID-SFX      PIC 9(01).
         10  TS-Q-TERMID              PIC X(04).
 COPY DFHAID.
 COPY DFHBMSCA.
 COPY SMSY008.
 LINKAGE SECTION.
 01  DFHCOMMAREA.
     05  DFHCOMM-FUNC                  PIC X(04).
     05  DFHCOMM-TERMID                PIC X(04).
 01  GETMAIN-DATA                      PIC X(01).
 01  TCT-USER-AREA.
     05  TCTUA-TRANID                  PIC X(04).
*           - P R O C E D U R E    D I V I S I O N -             *
 PROCEDURE DIVISION.
 01MLS000.
     EXEC CICS ASSIGN
          SYSID(WS-SYSID)
          STARTCODE(WS-STARTCODE)
     END-EXEC.
     MOVE WS-SYSID TO TS-SYSID.
     IF DFHCOMM-FUNC = 'KILL'
        MOVE DFHCOMM-TERMID TO TS-Q-TERMID
        MOVE 'CPAK'   TO TS-Q-TRANID
        EXEC CICS READQ TS
             QUEUE(TS-QUEUE)
             INTO(TS-CNTL-RECORD)
             LENGTH(TS-CNTL-LNG)
             SYSID(TS-SYSID)
             ITEM(1)
             RESP(WS-RESP)
        END-EXEC
        PERFORM 20DALL000
        GO TO 80ERR999
     END-IF.
     EXEC CICS INQUIRE
          TERMINAL(EIBTRMID)
          REMOTESYSTEM(WS-REMOTEID)
          USERID(WS-USERID)
          USERAREA(TCTUA-PTR)
          USERAREALEN(WS-TCTUA-LNG)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = 0
        GO TO 80ERR020.
     IF WS-TCTUA-LNG > 0
        SET ADDRESS OF TCT-USER-AREA TO TCTUA-PTR
        MOVE TCTUA-TRANID TO WS-TRANID
     ELSE
        EXEC CICS RETURN END-EXEC
        GOBACK.
     IF WS-REMOTEID NOT = SPACES
        MOVE WS-REMOTEID TO TS-SYSID.
     IF WS-TRANID = LOW-VALUES OR WS-PAKEY-TRAN OR WS-NOTRANID
        MOVE SPACES TO WS-TRANID.
     IF EIBTRNID = 'CPA1'
        GO TO 01MLS100.
*    CPA2 & CPAK - SESSION SCREEN LOGIC                          *
     IF EIBTRNID = 'CPA2'
        MOVE 'SESS' TO COM-FUNC
        MOVE 'N'    TO COM-MSGS
        PERFORM 01MLS100
        PERFORM 01MLS200 THRU 01MLS200-EXIT
        PERFORM 01MLS500
        PERFORM 10INIT000
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        PERFORM 10MAPM1000
        GO TO 10RTRN000.
     IF EIBCALEN = WS-COMMAREA-LNG
        MOVE DFHCOMMAREA TO WS-COMMAREA
     ELSE
        IF EIBCALEN = 4
           MOVE DFHCOMMAREA TO COM-FUNC
        ELSE
           GO TO 80ERR140.
     IF COM-FUNC = 'HELP'
        GO TO 01MLS075.
     IF COM-FUNC = 'NEXT'
        GO TO 01MLS100.
     IF COM-MSGS = 'Y'
        MOVE SPACES TO M1-MESSAGEO
        MOVE 'N' TO COM-MSGS.
     IF EIBAID = DFHPF1
        MOVE 'HELP' TO COM-FUNC
        MOVE '1'    TO COM-HELP-MAP
        PERFORM 10MAPH000
        GO TO 10RTRN000.
     PERFORM 01MLS100
     IF COM-FUNC = 'LOGO'
        PERFORM 10INIT000
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        MOVE 'REMAINING SESSION(S) MUST BE HANDLED BEFORE LOGOFF'
             TO M1-MESSAGEO
        MOVE DFHPROTI TO M1-PF12A
        PERFORM 10MAPM1000
        MOVE 'SESS' TO COM-FUNC
        GO TO 10RTRN000.
     IF EIBAID = DFHPF3
        IF TS-CNTL-ACTIVE(TS-CNTL-CURSESS) = 'Y'
           GO TO 01MLS325
        ELSE
           GO TO 01MLS300.
     IF EIBAID = DFHPF12
        PERFORM 20DALL000
        EXEC CICS ISSUE
             DISCONNECT
             RESP(WS-RESP)
        END-EXEC
        GO TO 80ERR999.
     IF EIBAID = DFHCLEAR
        PERFORM 10INIT000
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        PERFORM 10MAPM1000
        GO TO 10RTRN000.
     IF EIBAID NOT = DFHENTER
        GO TO 10RTRN000.
     EXEC CICS RECEIVE
          MAP('SY008M1')
          MAPSET('SMSY008')
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP = DFHRESP(NORMAL) OR DFHRESP(MAPFAIL)
        GO TO 01MLS050.
     PERFORM 10INIT000.
     MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS).
     PERFORM 10MAPM1000.
     GO TO 10RTRN000.
*       - HANDLE SESSION COMMANDS.                               *
 01MLS050.
     DIVIDE EIBCPOSN BY 80 GIVING WS-CURSOR-LINE
            REMAINDER WS-CURSOR-COL.
     ADD +1 TO WS-CURSOR-LINE.
     MOVE 0 TO WS-CNT
               TS-SAVE-PTR
               WS-CNT2.
     PERFORM 10CHCK000 WITH TEST AFTER UNTIL WS-CNT = 9
     IF WS-CNT2 > 0
        MOVE WS-CNT2 TO WS-DEL-NUM
        MOVE WS-DEL-MSG TO M1-MESSAGEO
        MOVE 'Y' TO COM-MSGS
        PERFORM 01MLS500
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        PERFORM 10MAPD000
        GO TO 10RTRN000.
     IF WS-CURSOR-LINE < 9 OR WS-CURSOR-LINE > 17
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        PERFORM 10MAPD000
        GO TO 10RTRN000.
     COMPUTE WS-CNT = WS-CURSOR-LINE - 8.
     GO TO 10SSEL000.
*       - PF1 HELP LOGIC                                         *
 01MLS075.
     IF EIBAID = DFHPF8 OR DFHENTER AND COM-HELP-MAP = '1'
        MOVE '2' TO COM-HELP-MAP
        PERFORM 10MAPH000.
     IF EIBAID = DFHPF7 AND COM-HELP-MAP = '2'
        MOVE '1' TO COM-HELP-MAP
        PERFORM 10MAPH000.
     IF EIBAID = DFHPF3 OR DFHCLEAR
        MOVE 'SESS' TO COM-FUNC
        PERFORM 01MLS100
        PERFORM 10INIT000
        MOVE -1 TO M1-CURSORL(TS-CNTL-CURSESS)
        PERFORM 10MAPM1000.
     GO TO 10RTRN000.
*       - READ TS FOR SESSION CONTROL RECORD.                    *
 01MLS100.
     MOVE EIBTRMID TO TS-Q-TERMID.
     MOVE 'CPAK'   TO TS-Q-TRANID.
     EXEC CICS READQ TS
          QUEUE(TS-QUEUE)
          INTO(TS-CNTL-RECORD)
          LENGTH(TS-CNTL-LNG)
          SYSID(TS-SYSID)
          ITEM(1)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP = DFHRESP(QIDERR)
        MOVE 0 TO TS-CNTL-NUMSESS
        MOVE 1 TO TS-CNTL-CURSESS
        MOVE WS-USERID TO TS-CNTL-USERID
        MOVE 1 TO WS-CNT
        PERFORM UNTIL WS-CNT > 9
           MOVE 'N'    TO TS-CNTL-ACTIVE(WS-CNT)
           MOVE SPACES TO TS-CNTL-TRANID(WS-CNT)
           MOVE 0      TO TS-CNTL-CURPOS(WS-CNT)
           MOVE 0      TO TS-CNTL-EIBCALEN(WS-CNT)
           MOVE 0      TO TS-CNTL-SCRN-LNG(WS-CNT)
           MOVE SPACES TO TS-CNTL-DESC(WS-CNT)
           ADD +1 TO WS-CNT
        END-PERFORM
        MOVE 'N' TO TS-CNTL-EXIST
     ELSE
        IF WS-RESP NOT = 0
           GO TO 80ERR030.
     MOVE TS-CNTL-CURSESS TO TS-SAVE-PTR.
     IF WS-USERID NOT = TS-CNTL-USERID
        PERFORM 20USER000.
     IF COM-FUNC = 'NEXT'
        IF TS-CNTL-EXIST = 'N'
           GO TO 01MLS400
        ELSE
           GO TO 01MLS300.
*    SAVE CURRENT SESSION  (IF NOT AT BASE LEVEL CICS)          *
 01MLS200.
     IF WS-TRANID = SPACES OR 'CPA1' OR 'CPA2' OR 'CPAK'
        MOVE +0 TO TS-CNTL-SCRN-LNG(TS-SAVE-PTR)
        GO TO 01MLS200-EXIT.
     IF TS-CNTL-ACTIVE(TS-SAVE-PTR) = 'N'
        MOVE 'Y'       TO TS-CNTL-ACTIVE(TS-SAVE-PTR)
        MOVE  0        TO TS-CNTL-EIBCALEN(TS-SAVE-PTR)
        MOVE  0        TO TS-CNTL-SCRN-LNG(TS-SAVE-PTR)
        ADD  +1        TO TS-CNTL-NUMSESS.
     MOVE WS-TRANID TO TS-CNTL-TRANID(TS-SAVE-PTR).
     MOVE EIBCALEN  TO TS-CNTL-EIBCALEN(TS-SAVE-PTR).
     MOVE +3570     TO WS-SCRN-LNG.
     EXEC CICS RECEIVE
          INTO(TS-ITM1-SCRN-SAVE)
          LENGTH(WS-SCRN-LNG)
          BUFFER
          ASIS
          NOTRUNCATE
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP = DFHRESP(EOC) OR DFHRESP(EODS) OR
                  DFHRESP(EOF) OR DFHRESP(NORMAL)
        NEXT SENTENCE
     ELSE
        GO TO 80ERR040.
     MOVE WS-SCRN-LNG TO TS-CNTL-SCRN-LNG(TS-SAVE-PTR)
                         TS-ITM1-LNG.
     MOVE EIBCPOSN  TO TS-CNTL-CURPOS(TS-SAVE-PTR).
     MOVE TS-ITM1-HEADING TO TS-CNTL-DESC(TS-SAVE-PTR).
     MOVE 26 TO WS-CNT.
     MOVE 0  TO WS-SPACE4.
     PERFORM WITH TEST AFTER
             UNTIL WS-CNT = 1
       COMPUTE WS-CNT = WS-CNT - 1
       IF TS-DESC-TBL(TS-SAVE-PTR, WS-CNT) = LOW-VALUES
          MOVE SPACE TO TS-DESC-TBL(TS-SAVE-PTR, WS-CNT)
       END-IF
       IF TS-DESC-TBL(TS-SAVE-PTR, WS-CNT) = SPACE
          ADD 1 TO WS-SPACE4
       ELSE
          IF WS-SPACE4 < 4
             MOVE 0 TO WS-SPACE4
          ELSE
             MOVE SPACE TO TS-DESC-TBL(TS-SAVE-PTR, WS-CNT)
          END-IF
       END-IF
     END-PERFORM.
     MOVE 25 TO WS-CNT.
     MOVE 0  TO WS-SPACE4.
     PERFORM WITH TEST AFTER
             UNTIL WS-CNT = 50
       COMPUTE WS-CNT = WS-CNT + 1
       IF TS-DESC-TBL(TS-SAVE-PTR, WS-CNT) = LOW-VALUES
          MOVE SPACE TO TS-DESC-TBL(TS-SAVE-PTR, WS-CNT)
       END-IF
       IF TS-DESC-TBL(TS-SAVE-PTR, WS-CNT) = SPACE
          ADD 1 TO WS-SPACE4
       ELSE
          IF WS-SPACE4 < 4
             MOVE 0 TO WS-SPACE4
          ELSE
             MOVE SPACE TO TS-DESC-TBL(TS-SAVE-PTR, WS-CNT)
          END-IF
       END-IF
     END-PERFORM.
     MOVE TS-SAVE-PTR TO TS-Q-TRANID-SFX.
     MOVE +1 TO TS-ITEM.
     EXEC CICS WRITEQ TS
          QUEUE(TS-QUEUE)
          FROM(TS-ITM1-RECORD)
          LENGTH(TS-ITM1-LNG)
          ITEM(TS-ITEM)
          SYSID(TS-SYSID)
          MAIN
          RESP(WS-RESP)
      END-EXEC.
     IF EIBCALEN > 0
        MOVE +2 TO TS-ITEM
        EXEC CICS WRITEQ TS
             QUEUE(TS-QUEUE)
             FROM(DFHCOMMAREA)
             LENGTH(EIBCALEN)
             ITEM(TS-ITEM)
             SYSID(TS-SYSID)
             MAIN
             RESP(WS-RESP)
         END-EXEC.
 01MLS200-EXIT.
     EXIT.
*    GET NEXT SESSIONS' DATA.                                   *
 01MLS300.
     MOVE SPACES TO WS-TRANID.
     IF TS-CNTL-EXIST = 'N'
        MOVE +2 TO TS-CNTL-CURSESS
        GO TO 01MLS450.
     PERFORM WITH TEST AFTER
             UNTIL TS-CNTL-ACTIVE(TS-CNTL-CURSESS) = 'Y' OR
                   TS-CNTL-CURSESS = TS-SAVE-PTR
        ADD +1 TO TS-CNTL-CURSESS
        IF TS-CNTL-CURSESS > 9
           MOVE +1 TO TS-CNTL-CURSESS
        END-IF
     END-PERFORM.
     IF TS-CNTL-CURSESS = TS-SAVE-PTR
        ADD +1 TO TS-CNTL-CURSESS
        IF TS-CNTL-CURSESS > 9
           MOVE +1 TO TS-CNTL-CURSESS
        END-IF
        GO TO 01MLS450.
 01MLS325.
     MOVE TS-CNTL-SCRN-LNG(TS-CNTL-CURSESS) TO TS-ITM1-LNG.
     MOVE TS-CNTL-EIBCALEN(TS-CNTL-CURSESS) TO WS-EIBCALEN.
     MOVE TS-CNTL-CURPOS(TS-CNTL-CURSESS) TO WS-CURPOS.
     MOVE TS-CNTL-TRANID(TS-CNTL-CURSESS) TO WS-TRANID.
     MOVE TS-CNTL-CURSESS TO TS-Q-TRANID-SFX.
     MOVE +1 TO TS-ITEM.
     EXEC CICS READQ TS
          QUEUE(TS-QUEUE)
          INTO(TS-ITM1-RECORD)
          LENGTH(TS-ITM1-LNG)
          ITEM(TS-ITEM)
          SYSID(TS-SYSID)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = 0
        GO TO 80ERR050.
     IF WS-EIBCALEN = 0
        GO TO 01MLS350.
     EXEC CICS GETMAIN
          SET(GM-PTR)
          LENGTH(WS-EIBCALEN)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = 0
        GO TO 80ERR060.
     SET ADDRESS OF GETMAIN-DATA TO GM-PTR.
     MOVE WS-EIBCALEN TO TS-ITM2-LNG.
     MOVE +2 TO TS-ITEM.
     EXEC CICS READQ TS
          QUEUE(TS-QUEUE)
          INTO(GETMAIN-DATA)
          LENGTH(TS-ITM2-LNG)
          ITEM(TS-ITEM)
          SYSID(TS-SYSID)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = 0
        GO TO 80ERR070.
 01MLS350.
     MOVE 'N'    TO TS-CNTL-ACTIVE(TS-CNTL-CURSESS).
     MOVE SPACES TO TS-CNTL-TRANID(TS-CNTL-CURSESS)
                    TS-CNTL-DESC(TS-CNTL-CURSESS).
     MOVE +0     TO TS-CNTL-SCRN-LNG(TS-CNTL-CURSESS).
     MOVE +0     TO TS-CNTL-EIBCALEN(TS-CNTL-CURSESS).
     MOVE +0     TO TS-CNTL-CURPOS(TS-CNTL-CURSESS).
     COMPUTE TS-CNTL-NUMSESS = TS-CNTL-NUMSESS - 1.
     EXEC CICS DELETEQ TS
          QUEUE(TS-QUEUE)
          SYSID(TS-SYSID)
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = DFHRESP(NORMAL) AND
        WS-RESP NOT = DFHRESP(QIDERR)
        GO TO 80ERR055.
*    BUILD SESSIONS SCREEN.                                     *
 01MLS400.
     EXEC CICS SEND TEXT
          FROM(TS-ITM1-SCRN-SAVE)
          LENGTH(TS-ITM1-LNG)
          ERASE NOEDIT
          RESP(WS-RESP)
     END-EXEC.
     IF WS-RESP NOT = 0
        GO TO 80ERR080.
     EXEC CICS SEND CONTROL
          CURSOR(WS-CURPOS)
          FREEKB
     END-EXEC.
     GO TO 01MLS500.
 01MLS450.
     EXEC CICS SEND CONTROL
          ERASE
          FREEKB
     END-EXEC.
*    SAVE CONTROL RECORD AND RETURN.                            *
 01MLS500.
     MOVE 'CPAK' TO TS-Q-TRANID.
     MOVE +1 TO TS-ITEM.
     IF TS-CNTL-NUMSESS < 1
        EXEC CICS DELETEQ TS
             QUEUE(TS-QUEUE)
             SYSID(TS-SYSID)
             RESP(WS-RESP)
        END-EXEC
     ELSE
        IF TS-CNTL-EXIST = 'Y'
           EXEC CICS WRITEQ TS
                QUEUE(TS-QUEUE)
                FROM(TS-CNTL-RECORD)
                LENGTH(TS-CNTL-LNG)
                SYSID(TS-SYSID)
                ITEM(TS-ITEM) REWRITE
                MAIN
                RESP(WS-RESP)
           END-EXEC
        ELSE
           EXEC CICS WRITEQ TS
                QUEUE(TS-QUEUE)
                FROM(TS-CNTL-RECORD)
                LENGTH(TS-CNTL-LNG)
                SYSID(TS-SYSID)
                MAIN
                RESP(WS-RESP)
           END-EXEC.
 01MLS550.
     IF WS-TRANID = SPACES
        EXEC CICS RETURN END-EXEC
     ELSE
        IF WS-EIBCALEN > 0
           EXEC CICS RETURN
                TRANSID(WS-TRANID)
                COMMAREA(GETMAIN-DATA)
                LENGTH(WS-EIBCALEN)
                RESP(WS-RESP)
           END-EXEC
        ELSE
           EXEC CICS RETURN
                TRANSID(WS-TRANID)
                RESP(WS-RESP)
           END-EXEC
     END-IF.
     IF WS-RESP NOT = 0
        GO TO 80ERR090.
     GOBACK.

The remaining source code for SYS008 plus the source for the
associated map and the DFHZCP global exit will be published
in next month's issue.

Paul Timberlake (USA)

