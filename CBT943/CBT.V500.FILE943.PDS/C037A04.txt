 COMMAREAs in an XA environment
This article describes a problem inherent in the command-level environment and
provides a solution for CICS 1.7 XA MRO users.  The problem is the shared
subpool storage taken up by save COMMAREAs.  This can be a problem in any
command-level shop, but is further exaggerated in an MRO environment, where all
COMMAREA storage is passed to and saved in the Terminal Owning Region (TOR).
Our production environment includes one TOR and ten Application Owning Regions
(AORs).
In CICS 1.6.1, we attributed our TOR Short-On-Storage (SOS) conditions purely to
the size of our TCT (nearly 5 megabytes), as we support approximately 9000
terminals.  Much to our surprise, when we converted the TOR to a 1.7 region, we
were still going SOS, even with more than half the terminals auto-installed so
they were only defined while they were logged on.
Our IBM support brought in a copy of their VSMR product to get a better look at
what was going on.  This is a rather good tool, and I would suggest getting a
copy for your shop if you donUt already have one (itUs free).  What it showed us
was that, by mid-morning, we had nearly 3 megabytes of our DSA allocated to
COMMAREA storage in our TOR.  We do not have a shop standard limiting the size
of a saved COMMAREA, but in hindsight it would have been a good idea when we
first started writing command-level code.
Our solution to the problem includes two pieces - a transaction, which provides
more detail about the saved COMMAREAs and a USERMOD to save the COMMAREA above
the 16 megabyte line.  The transaction provides a total of all storage allocated
to COMMAREAs (as does VSMR), but also provides the detail needed to investigate
individual applications and to TtuneU the USERMOD.
By supplying a five-digit threshold value with the transaction-id, a message
will be written to CSMT containing the transaction-id and COMMAREA size of any
COMMAREA larger than the threshold, and will also display the number of
COMMAREAs larger and smaller than the threshold.  This will allow you to
identify offending transactions if you have the time or clout to get them
changed.  This will also allow you to find where best to place the threshold
value within the USERMOD.  Since the modification is saving COMMAREAs above the
16 megabyte line, it is driven by OS GETMAIN and FREEMAIN SVCs.  By tuning to
your shopUs particular needs, you can save the bulk of your COMMAREAs above the
line, while eliminating the unneeded overhead of SVCs for ones of an
insignificant size.
We settled on a threshold value of 256 bytes and usually by mid-morning we have
approximately 1000 or so saved COMMAREAs, 700 of which are saved above the line
(this is displayed on the screen by the transaction).  This puts about 3
megabytes of COMMAREAs above the line, and about 400K below (our usage has gone
up since our initial study).
If the thought of the SVC activity scares you (as it did us), I can ease your
worries by telling you that upon implementation, we saw virtually no measurable
response time degradation and we process approximately 1.4 million transactions
per day through our TOR with an average response time of about 0.35 seconds.
The transaction should work in any shop.  The USERMOD will only be appropriate
in a 1.7 XA MRO environment, since the modification is to the transformer
program, DFHXTP.  If you are in need of this function, but not MRO, I suspect
that similar logic would work in the single-system COMMAREA save routine (DFHEIP
?).  The reason for the multiple CSECTS in the USERMOD is that DFHXTP is
dangerously close to overflowing its base registers and I didnUt want to rewrite
the whole program.
The following program is invoked by keying:
     YD33,nnnnn
where nnnnn is the threshold value.  As coded, you must key five digits, or it
will ASRA abend (this is easily changed if you wish).  Figure 1 illustrates a
typical response.

     THRESHOLD = 1000
     TCTTES EXAMINED = 3079
     NUMBER OF COMMAREAS BELOW 16M =    222
     NUMBER OF COMMAREAS ABOVE 16M =    647
     SIZE OF COMMAREAS BELOW 16M =    44133
     SIZE OF COMMAREAS ABOVE 16M =  2518357
     COMMAREAS ABOVE THRESHOLD =    632

      Figure 1: An example of a typical display

A sample message written to the CSMT log for a COMMAREA greater than the keyed
threshold would look like this:
     YD330001 TRAN=PROC TERM=AC10 COMMAREA LEN=4116
The base program for YD33 is as follows:
*** YD33 IS THE UTILITY TRANSACTION FOR CHECKING COMMAREA ALLOCATIONS.
*   IF THE SHOP IS XA, IT SHOULD BE LINKEDITED WITH RMODE=24,AMODE=31.
*   THE SETAM MACRO WILL TAKE CARE OF SWITCHING AMODE WHEN NECESSARY
*   FOR THE DFHTC LOCATE TO WORK PROPERLY.  FOR NON-XA, THE SETAM
*   MACRO CALLS SHOULD BE REMOVED, AS YOUR OPERATING SYSTEM DOESN'T
*   KNOW THE BSM INSTRUCTION. REALIZE THAT AS WRITTEN, A 60K 'BUFFER'
*   WILL BE CARVED OUT OF YOUR DSA IF NON-XA OR LINKED IN A 24-BIT MODE.
*   THIS SIZE CAN EASILY BE CHANGED BASED ON YOUR SHOPS' NEEDS BY
*** ALTERING THE VALUE OF 'BUFSIZE'.
TCTTEAR  EQU   R7
BUFFER   DSECT
BUFTERM  DS    CL4
BUFTRAN  DS    CL4
BUFCALEN DS    F
GHIEICDS DSECT
GHIEICSA DS    F                  STORAGE ACCOUNTING AREA
GHIFLAG  DS    CL4           FLAG TO NOTIFY CLEANUP TO FREE XTNDED STG
GHIEICAP DS    AL4                POINTER TO EXTENDED STORAGE COMMAREA
GHIEICLL DS    H                  LENGTH OF COMMAREA DATA + CTL DATA
GHIEICRL DS    H                  REAL LENGTH OF XTENDED STG
GHIEICLN EQU   *-GHIEICDS         LENGTH OF ENTRY
         DFHEISTG
WAPACK8  DS    D                  WORKAREA FOR CVD
WATHRESH DS    F                  COMMAREA SIZE THRESHOLD
WABUFADD DS    F                  ADDRESS OF BUFFER
WARCVLEN DS    H                  LENGTH OF INPUT TIOA
WAABCODE DS    CL4                ABEND CODE
WANTRYCT DS    PL4                NUMBER OF ENTRIES IN BUFFER
WANCA24  DS    PL4                NUMBER OF COMMAREAS FOUND BELOW 16M
WANCA31  DS    PL4                NUMBER OF COMMAREAS FOUND BELOW 16M
WANTCTTE DS    PL4                NUMBER OF TCTTES EXAMINED
WAPACK3  DS    PL3
WATDBUF  DS    0CL48
         DS    C'YD330001 TRAN='
WATDTRAN DS    CL4                TRANS ID
         DS    C' TERM='
WATDTERM DS    CL4                TERM ID
         DS    C' COMMAREA LEN='
WATDCLEN DS    CL6
WATDEND  EQU   *
WATDLEN  EQU   WATDEND-WATDBUF    LENGTH OF TD BUFFER
         GBLB  &DFHEIMX      CMD & MACRO IN SAME PGM
&DFHEIMX SETB  1             0=COMMAND ONLY. 1 CMD & MACRO MIX
         COPY  DFHCSADS      USES R13
         COPY  DFHTCADS
         DFHTCTZE CICSYST=YES
YD33POMO DFHEIENT CODEREG=(R3),DATAREG=(R10),EIBREG=(R11)
START    DS    0H
***      GET INPUT TIOA, READ COMMAREA SIZE THRESHOLD FROM IT.
*        THRESHOLD MUST BE 5 BYTES LONG, PADDED WITH ZEROES
***      IF NECESSARY, AND START 1 BYTE AFTER THE TRANCODE.
         EXEC CICS RECEIVE                                             *
              SET(R9)                                                  *
              LENGTH(WARCVLEN)
         CLI  0(R9),X'11'          FORMATTED DATASTREAM ?
         BNE  NOSBA                NO
         LA   R9,3(R9)             BYPASS SBA, ADDRESS
NOSBA    CLC  0(4,R9),=C'YD33'     MAKE SURE RIGHT COMMAND USED
         BNE  NOTRANCD             LOGIC ERROR IF NOT 'YD33'
         PACK WAPACK3,5(5,R9)      PACK THRESHOLD VALUE
          ZAP  WAPACK8,WAPACK3      MOVE IT TO DOUBLEWORD
         CVB  R14,WAPACK8          CONVERT IT TO BINARY
         ST   R14,WATHRESH         SAVE IT IN EIB
***      GET A BUFFER TO HOLD THE COMMAREA INFO FOR THOSE COMMAREAS
*        WHICH EXCEED THE THRESHOLD SIZE, EACH ENTRY IS 12 BYTES:
*        TERMID(4), TRANID(4), AND  COMMAREALENGTH(4). ALLOW FOR
***      5000 ENTRIES: 12 X 5000 = 60000 BYTES.
         EXEC  CICS GETMAIN                                            *
               SET(R4)                                                 *
               FLENGTH(BUFSIZE)                                        *
               INITIMG(NULL)
         ST    R4,WABUFADD        SAVE BUFFER ADDRESS IN EIB
         USING BUFFER,R4
***      SCAN ALL TCT ENTRIES FOR COMMAREAS LARGER THAN THE THRESHOLD
*        VALUE.  AS EACH LARGE COMMAREA IS FOUND, PUT AN ENTRY IN
***      THE BUFFER.
         ZAP   WANTRYCT,=P'0'      SET ENTRY COUNT TO ZERO
         ZAP   WANCA24,=P'0'       SET 'COMMAREAS BELOW 16M' TO ZERO
         ZAP   WANCA31,=P'0'       SET 'COMMAREAS ABOVE 16M' TO ZERO
         ZAP   WANTCTTE,=P'0'      SET TCTTE COUNT TO ZERO
         SR    R9,R9               SET COMMAREA SIZE (BELOW 16M) TO 0
         SR    R6,R6               SET COMMAREA SIZE (ABOVE 16M) TO 0
         SR    TCTTEAR,TCTTEAR     CLEAR TCTTE BASE REG
         SR    R8,R8               CLEAR SETAM REGS
         SR    R1,R1               CLEAR SETAM REGS
NEXTTERM SETAM AM=24,REGS=(R8,R1)
         ST    TCTTEAR,TCATPTA     OLD TCTTE ADDR IN TCA
         DFHTC CTYPE=LOCATE,       LOCATE NEXT TCTTE                   *
               TERM=NEXT,                                              *
               INVADDR=INVADDR,                                        *
               LASTTRM=TCTEND,                                         *
               NORESP=FOUNDTE
         B     LOCATERR            IF ERROR, ABEND
FOUNDTE  SETAM AM=31,REGS=(R8,R1),CHECK=Y
         AP    WANTCTTE,=P'1'      COUNT IT
         L     TCTTEAR,TCATPTA     POINT TO NEW TCTTE
         SR    R5,R5               CLEAR R5
         ICM   R5,7,TCTTEEIA+1     POINT TO COMMAREA
         BZ    NEXTTERM            IF NO COMMAREA, GO TO NEXT TCTTE
         CLI   0(R5),X'93'         IS THERE A VALID SAA ?
         BNE   INVCOMMA            NO, INVALID
         USING GHIEICDS,R5
         CLC   GHIFLAG,=C'GHI '    IS IT A GHI EXT. STG. COMMAREA ?
         BNE   IBMCOMMA            NO
GHICOMMA AP    WANCA31,=P'1'       COUNT IT
         LH    R2,GHIEICLL
         AR    R6,R2               ADD ITS SIZE TO TOTAL ABOVE 16M
         B     CHKTHRES
IBMCOMMA AP    WANCA24,=P'1'       COUNT IT
         LH    R2,X'14'(R5)
         AR    R9,R2               ADD ITS SIZE TO TOTAL BELOW 16M
CHKTRES  C     R2,WATHRESH         IS LENGTH > THRESHOLD ?
         BL    NEXTTERM            NO, GO TO NEXT TCTTE
BADGUY   AP    WANTRYCT,=P'1'      COUNT IT
         MVC   BUFTERM,TCTTETI     MOVE TERMID TO BUFFER
         ST    R2,BUFCALEN         MOVE COMMAREA LENGTH TO BUFFER
         OC    TCTTETC,TCTTETC     IS THERE A NEXT TRANID?
         BNZ   MOVETRAN            YES, GO MOVE IT
         MVC   BUFTRAN,=C'????'    NO, MOVE '????' TO BUFFER
         B     INCRBUFA            POINT TO NEXT BUFFER ENTRY
MOVETRAN MVC   BUFTRAN,TCTTETC     MOVE NEXT TRANCODE
INCRBUFA LA    R4,12(R4)           INCREMENT BUFFER ADDRESS
         B     NEXTTERM            GO TO NEXT TCTTE
TCTEND   SETAM AM=31,REGS=(R8,R1),CHECK=Y
***      WRITE STATISTICS TO SCREEN
         L     R14,WATHRESH        LOAD THRESHOLD
          CVD   R14,WAPACK8         MAKE IT
         MVC   RESTHRES,PATTERN        DISPLAYABLE
         ED    RESTHRES,WAPACK8+5          IN TIOA
         MVC   RESTCTS,PATTERN
         ED    RESTCTS,WANTCTTE+1  MOVE NUMBER OF TCTTE'S
         MVC   RESCA24,PATTERN
         ED    RESCA24,WANCA24+1   MOVE NUMBER COMMAREAS BELOW 16M
         MVC   RESCA31,PATTERN
         ED    RESCA31,WANCA31+1   MOVE NUMBER COMMAREAS ABOVE 16M
         CVD   R9,WAPACK8
         MVC   RESSIZ24,PATTERN2
         ED    RESSIZ24,WAPACKS+4  MOVE COMMAREA LENGTH BELOW 16M
         CVD   R6,WAPACK8
         MVC   RESSIZ31,PATTERN2
         ED    RESSIZ31,WAPACK8+4  MOVE COMMAREA LENGTH ABOVE 16M
         MVC   RESBAD,PATTERN
         ED    RESBAD,WANTRYCT+1   MOVE NUMBER OF BAD GUYS
         LA    R14,RESLTLEN        LOAD LENGTH OF TERMINAL DATA
         STH   R14,WARCVLEN        PUT IT IN EIB
         EXEC  CICS SEND                                               *
               FROM(RESULTS)                                           *
               LENGTH(WARCVLEN)                                        *
               ERASE
***      FOR EACH ENTRY IN THE BUFFER, WRITE A MESSAGE TO CSMT
         MVC    WATDBUF,TDBUF      MOVE SKELETON MESSAGE TO EIB
         L      R4,WABUFADD        RESET BUFFER BASE REG
NEXTBUF  CLI    0(R4),X'00'        REACHED END OF BUFFER ?
         BE     RETURN             YES, END OF TRANSACTION
         MVC    WATDTRAN,BUFTRAN   MOVE TRANID TO BUFFER
         MVC    WATDTERM,BUFTERM   MOVE TERMID TO BUFFER
         L      R14,BUFCALEN       GET COMMAREA LENGTH
         CVD    R14,WAPACK8        CONVERT TO DECIMAL
         MVC    WATDCLEN,PATTERN   MOVE PATTERN FOR EDIT
         ED     WATDCLEN,WAPACK8+5 EDIT LENGTH INTO OUTPUT AREA
         EXEC   CICS WRITEQ TD                                         *
                QUEUE('CSMT')                                          *
                FROM(WATDBUF)                                          *
                LENGTH(TDLEN)
         LA     R4,12(R4)          POINT TO NEXT BUFFER ENTRY
         B      NEXTBUF            GO PROCESS IT
RETURN   EXEC   CICS RETURN
LOCATERR MVC    WAABCODE,=C'INVL'  INVALID LOCATE
         B      ABEND
INVADDR  MVC    WAABCODE,=C'INVA'  INVALID ADDRESS
         B      ABEND
INVCOMMA MVC    WAABCODE,=C'INVC'  INVALID COMMAREA
         B      ABEND
NOTRANCD MVC    WAABCODE,=C'INVI'  INVALID INPUT
ABEND    EXEC   CICS ABEND                                             *
                ABCODE(WAABCODE)
BUFSIZE  DC     F'60000'           SIZE OF BUFFER
TDLEN    DC     H'48'               LENGTH OF WRITEQ TD BUFFER
NULL     DC     X'00'               INITIMG BYTE
PATTERN  DC     X'402020202120'     EDIT PATTERN
PATTERN2 DC     X'4020202020202120' EDIT PATTERN FOR LONG INTEGER
TDBUF    DS     0C                  BUFFER TO WRITEQ TD
         DC     C'YD330001 TRAN='
         DC     CL4' '              TRANS ID
         DC     C' TERM='
         DC     CL4' '              TERM ID
         DC     C'COMMAREA LEN='
         DC     CL6' '
TDEND    EQU    *
RESULTS  DS     0C
         DC     X'114040'           SBA R1,C1
         DC     C'THRESHOLD ='
 RESTHRES DC     CL6' '
         DC     X'11C150'
         DC     C'TCTTES EXAMINED ='
RESTCTS  DC     CL6' '
         DC     X'11C260'
         DC     C'NUMBER OF COMMAREAS BELOW 16M ='
RESCA24  DC     CL6' '
         DC     X'11C3F0'
         DC     C'NUMBER OF COMMAREAS ABOVE 16M ='
RESCA31  DC     CL6' '
         DC     X'11C540'
         DC     C'SIZE OF COMMAREAS BELOW 16M ='
RESSIZ24 DC     CL8' '
         DC     X'11C650'
         DC     C'SIZE OF COMMAREAS ABOVE 16M ='
RESSIZ31 DC     CL8' '
         DC     X'11C760'
         DC     C'COMMAREAS ABOVE THRESHOLD ='
RESBAD   DC     CL6' '
RESLTLEN EQU    *-RESULTS
         LTORG
         END

This article will be concluded next month when we shall be publishing the
USERMOD to DFHXTP and the expansion of the SETAM macro.

Peter Longden
Group Leader On-line Systems
Blue Cross Blue Shield of National Capitol Area (USA)  ) Xephon 1988





































