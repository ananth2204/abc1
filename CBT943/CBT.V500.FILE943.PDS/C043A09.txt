A PLT processor

The purpose of PLTSTART is to start a table of transactions when
it is invoked through the PLTPI mechanism.  Its purpose is to
eliminate U0401 abends which will cause CICS to abend if a
program entry in the PLTPI is not found in the PPT.  PLTSTART
allows the CICS system programmer to define as many
transactions as he/she would like to be 'kicked off' at PLTPI time.
If the transaction-ids are invalid or their associated programs are
not found, CICS will not abend.  Additionally, a message will be
written to the MVS console logging the information.  The only
requirement is to add new transaction-ids to TRANTBL, and then
to reassemble and re-link PLTSTART.

PLTSTART DFHEIENT
         LCLC  &SYS
&SYS     SETC  'TEST'
         LCLC  &ID
&ID      SETC  'CICS'
TRANSID  DS    CL4
SWITCH   DC    X'00'
         MVI   SWITCH,X'00'
         EXEC  CICS HANDLE CONDITION                                   +
               INVREQ(ERRORS)                                          +
               TRANSIDERR(ERRORS)                                      +
               ERROR(NEXTTRAN)
         LA    R5,TRANTBL              R5 @ TRANSACTION LIST TABLE
TRANLOOP DS    0H                      DOWHILE (TRANSID(1) Â¬=X'FF'
         CLI   0(R5),X'FF'             @ END-OF-TABLE
         BE    RETURN                     RETURN TO CICS (DFHTCP)
         MVC   TRANSID,0(R5)                 ELSE
         EXEC  CICS START TRANSID(TRANSID)                            +
               INTERVAL(0)
NEXTTRAN LA    R5,4(R5)                BUMP TO NEXT TRANSID
         B     TRANLOOP
RETURN   EXEC  CICS RETURN
TRANTBL  DC    CL4'AAAA'
         DC    XL1'FF'
         LTORG
***   AT THIS POINT WE HAVE ONE OF TWO ERRORS:                     ***
*          INVREQ OR TRANSIDERR                                      *
*     WE:  WRITE MESSAGE TO CSMT                                     *
*          WRITE A WTO TO THE MVS CONSOLE                            *
***        CONTINUE TO PROCESS THE REMAINING TRANSIDS IN TRANTBL   ***
ICXIDERR EQU  X'11'
ICINVREQ EQU  X'FF'
ON       EQU  X'FF'
ERRORS   DS   0H                      IF EIBRCODE(1) = ICINVREQ
         LA   R4,0                       GO TO TSTSWITCH
         CLI  EIBRCODE,ICINVREQ       IF EIBRCODE(1) = ICXIDERR
         BE   TSTSWTCH                   GO TO TESTSWTCH
         LA   R4,1
         CLI  EIBRCODE,ICXIDERR
         BE   TSTSWTCH
*        WE SHOULD NEVER GET HERE; THE 'HANDLE CONDITION' SHOULD     *
*        HAVE EXECUTED 'ERROR(NEXTRAN)'                              *
         B    NEXTTRAN
TSTSWTCH DS   0H                      IF SWITCH = ON
         CLI  SWITCH,ON                  GO TO CSMSTMSG
         BE   CSMTMSG                 ELSE
         MVC  ERRMSG(ENDWTO),WTOMSG      FALL THROUGH
         MVI  SWITCH,ON
CSMTMSG  DS   0H
         MVC  MESSAGES+45(4),0(R5)    PUT IN TRANSID
         MH   R4,=Y(L'CONTENT)        MESSAGE
         LA   R4,CONTENT(R4)          R4 -->  RIGHT MESSAGE
         MVC  MESSAGES+72(L'CONTENT),0(R4)
         EXEC CICS WRITEQ TD                                          +
              QUEUE('CSMT')                                           +
              FROM(MESSAGES)                                          +
              LENGTH(92)
         LA   1,ERRMSG                R1  --> WTOLIST
         WTO  MF=(E,(1))              SEND IT TO MVS
         B    NEXTTRAN                TRY ANOTHER TRANSID
WTOMSG   WTO  '&ID&SYS   ATTEMPTED START OF TRANSACTION ID: XXXX AND T+
              HE RESPONSE WAS: YYYYYYYYYYYYYYYYYYYY',ROUTCDE=(2,8,11),+
              MF=L
ENDWTO   EQU  *-WTOMSG                L'WTO MESSAGE
DFHEISTG DFHEISTG                     CONTINUATION OF DYNAMIC STGE
         DS   0F
ERRMSG   DS   CL(ENDWTO)
         ORG  ERRMSG+4                SKIP WTO PREFIX
MESSAGES DS   0H
         ORG  ,
PLTSTART CSECT,                       RESUME
CONTENT  DS   0CL20
         DC   CL20'INVALID REQUEST     '
         DC   CL20'TRANSACTION ID ERROR'
         LTORG
         END  ,


Brett Jason Sinclair
Consultant
SOS Inc (USA) ) Brett Jason Sinclair 1989


