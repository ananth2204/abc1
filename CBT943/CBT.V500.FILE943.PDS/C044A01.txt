 A CICS table update system

We currently run three CICS systems on an IBM 3083 under
MVS. They are CICS1 (production CICS), CICS2 (test CICS),
and CICS3 (for testing system upgrades). Maintaining the CICS
tables got to be a chore, particularly keeping the new assemblies
in the correct load libraries.  As a result, I developed the
following TSO procedures to assemble the tables and put the
object modules in the appropriate load libraries.  This system can
be expanded and/or modified to fit any number of CICS systems.
This works because the suffix is either '01' for CICS1, '02' for
CICS2, or '03' for CICS3 and the object modules are placed into
all CICS load libraries when they are assembled, not just one.
This allows you to switch around and have back-up copies of your
assembled tables in any other load library.

PROCEDURE LIBRARY ENTRIES

DFHTABLE

//ASSM   PROC ASMBLR=IEV90,     ASSEMBLER NAME - ASMH=IEV90
//       LIST='XREF(SHORT)',    ASSEMBLER PRINT CONTROL
//       INDEX=CICS17A,         CICS SYSTEM INDEX
//       NAME=DUMMY,            TABLE NAME TO BE ASSEMBLED & LINKED
//       WORK=SYSDA,            DEFALULT NAME FOR DISK WORK AREAS
//       LIB='TECH.SOURCE.CICS170', LIBRARY OF SOURCE MODULES
//       OUTC='X',              OUTPUT CLASS
//       SDF='SDF15A.SDFMAC'    SDF MAC LIB IF YOU HAVE SDF INSTALLED
//*                                                                   *
//ASM    EXEC PGM=&ASMBLR,REGION=750K,
//       PARM='SYSPARM(INITIAL),DECK,NOOBJECT,&LIST'
//SYSLIB DD DSN=&INDEX..SMPMTS,DISP=SHR,DCB=BLKSIZE=32760
//       DD DSN=&INDEX..MACLIB,DISP=SHR
//       DD DSN=IMSVS.GENLIB,DISP=SHR
//       DD DSN=IMSVS.GENLIBA,DISP=SHR
//       DD DSN=IMSVS.GENLIBB,DISP=SHR
//       DD DSN=SYS1.MACLIB,DISP=SHR
//       DD DSN=&LIB,DISP=SHR
//       DD DSN=SYS1.AMODGEN,DISP=SHR
//       DD DSN=&SDF,DISP=SHR
//SYSUT1 DD UNIT=&WORK,SPACE=(1000,(400,400))
//SYSUT2 DD UNIT=&WORK,SPACE=(1000,(400,400))
//SYSUT3 DD UNIT=&WORK,SPACE=(1000,(400,400))
//SYSPUNCH DD    DSN=&&OBJMOD,
//      DISP=(,PASS),UNIT=&WORK,
//      DCB=(RECFM=FB,LRECL=80,BLKSIZE=400),
//      SPACE=(400,(200,200))
//*SYSPUNCH DD    DSN=OBJMOD,
//*      DISP=(,PASS),UNIT=&WORK,
//*      DCB=(RECFM=FB,LRECL=80,BLKSIZE=400),
//*      SPACE=(400,(200,200))
//SYSPRINT DD SYSOUT=&OUTC,HOLD=YES
//SYSIN    DD  DSN=&LIB.(&NAME),DISP=SHR
//BLDMBR EXEC PGM=IEBUPDTE,PARM=NEW,
//       COND=(7,LT,ASM)
//SYSPRINT DD SYSOUT=J
//SYSUT2    DD  DSN=TEMP.WORK.TEMPPDS,UNIT=&WORK,
//  DISP=(NEW,PASS,DELETE),SPACE=(80,(2000,750,20)),
//  DCB=(RECFM=F,BLKSIZE=80)
//SYSIN DD DSN=&&OBJMOD,DISP=(OLD,DELETE)

DFHLINK

//DFHLINK PROC LOAD='MISSING.LOADLIB',DEL='DELETE',WORK=SYSDA,
//       OUTC='X',PROGRAM='IEWL'
//       EXEC PGM=&PROGRAM,REGION=750K,
//       PARM='LIST,XREF,LET,NCAL'
//*      COND=((7,LT,ASM),(3,LT,BLDMBR))
//SYSUT1 DD UNIT=&WORK,SPACE=(1024,(100,50))
//SYSLIB   DD DSN=IMSVS.RESLIB,DISP=SHR
//SYSPRINT DD SYSOUT=&OUTC
//SYSLMOD  DD  DSN=&LOAD,DISP=SHR
//SYSPUNCH DD DSN=TEMP.WORK.TEMPPDS,DISP=(OLD,&DEL)
//SYSLIN DD DSN=TEMP.WORK.TEMPPDS(LNKCTL),
//       DISP=(OLD,&DEL),VOL=REF=*.SYSPUNCH

TSO PANEL LIBRARY ENTRIES

Panel one

%------------------ CICS 1.7.0     MENU ---------------------SELCICS----
%SELECT OPTION ===>_ZCMD    +
%
%
%   1+- INSTALL CICS 1.7.0 TABLES
%
%
% JCL WILL BE GENERATED FOR THIS JOB BY THIS PROCEDURE
% AUTOMATICALLY!
%
%
%
%
%
%
)INIT
  .HELP = TP
)PROC
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                1,'PANEL(CICS170)'
              ' ',' '
                *,'?' )
)END

Panel two

%------------ CICS170 TABLE ASSEMBLY SELECTION MENU -----CICS170--------
%
%   0+- SIT   %      6+- JCT  %    12+- TST
%   1+- PPT   %      7+- MCT  %    13+- PSB
%   2+- PCT   %      8+- NLT  %    14+- DMB
%   3+- FCT   %      9+- SNT  %    15+- PLT
%   4+- TCT   %     10+- SRT
%   5+- DCT   %     11+- TLT
%
%ENTER TABLE FROM ABOVE AND CICS SYSTEM, PRESS ENTER TO ASSEMBLE.
%
+SELECT TABLE  %=>_ZCMD         +
%
%
+SELECT CICS SYSTEM  %=>_SYS + %1 = CICS1  +
+                              %2 = CICS2  +
+                              %3 = CICS3  +
%
)INIT
  .HELP = TP
  .CURSOR = ZCMD
  &ZCMD = '  '
  &MOD = '  '
  &SYS = ' '
  &LOAD = 'DUMMY'
  &LOAD1 = 'DUMMY'
  &LOAD2 = 'DUMMY'
  &SLIB = 'TECH.SOURCE.CICS170'
  &SDF = 'SDF15A.SDFMAC'
  &INDX = 'CICS17A'         /* HIGH LEVEL QUALIFIER */
  &PROG = 'IEWL'
  &PROG1 = 'IEWL'
  &PROG2 = 'IEWL'
  &COPIES = '1'            /* NUMBER OF COPIES TO PRINT */
  &DEL = 'PASS'
  &DEL1 = 'PASS'
  &DEL2 = 'DELETE'
  &JCLA = '*    '
  &JCLB = '*    '
  &JCLC = '*    '
)PROC
 IF (&SYS = 1)                     /* TEST FOR CICS1,CICS2 OR CICS2 */
    &LOAD = 'POPR.CICS.LOADLIB'    /* PRODUCTION LOADLIB */
    &LOAD1 = 'TSYST.CICS.LOADLIB'  /* TEST LOADLIB */
    &LOAD2 = 'CICS17A.LOADLIB'     /* SYSTEM DEVELOPEMENT LOADLIB */
    &COPIES = '2'
    &MOD = '01'
    IF (&ZCMD = 0)              /* TEST FOR SIT TABLE */
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 8)              /* TEST FOR NLT TABLE */
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 9)              /* TEST FOR SNT TABLE */
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
       &PROG1 = 'IEFBR14'
       &PROG2 = 'IEFBR14'
    IF (&ZCMD = 15)             /* TEST FOR PLT TABLE */
       &PROG1 = 'IEFBR14'
       &PROG2 = 'IEFBR14'
 IF (&SYS = 2)                  /* TEST FOR CICS1,CICS2 OR CICS3 */
    &LOAD = 'POPR.CICS.LOADLIB'
    &LOAD1 = 'TSYST.CICS.LOADLIB'
    &LOAD2 = 'CICS17A.LOADLIB'
    &MOD = '02'
    IF (&ZCMD = 0)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 8)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 9)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
       &PROG = 'IEFBR14'
       &PROG2 = 'IEFBR14'
    IF (&ZCMD = 15)
       &PROG = 'IEFBR14'
       &PROG2 = 'IEFBR14'
 IF (&SYS = 3)
    &LOAD = 'POPR.CICS.LOADLIB'
    &LOAD1 = 'TSYST.CICS.LOADLIB'
    &LOAD2 = 'CICS17A.LOADLIB'
    &COPIES = '1'
    &MOD = '03'
    IF (&ZCMD = 0)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 8)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
    IF (&ZCMD = 9)
       &LOAD = 'POPR.CICS.LOADLIB2'
       &LOAD1 = 'TSYST.CICS.LOADLIB2'
       &LOAD2 = 'CICS17A.LOADLIB2'
       &PROG = 'IEFBR14'
       &PROG1 = 'IEFBR14'
    IF (&ZCMD = 15)
       &PROG = 'IEFBR14'
       &PROG1 = 'IEFBR14'
 VER (&ZCMD,NUM)
 VER (&ZCMD,NONBLANK)
 VER (&SYS,NUM)
 VER (&SYS,NONBLANK)
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                0,'CMD(XXSIT17)'             /* EXEC CLIST MEMBER */
                1,'CMD(XXPPT17)'
                2,'CMD(XXPCT17)'
                3,'CMD(XXFCT17)'
                4,'CMD(XXTCT17)'
                5,'CMD(XXDCT17)'
                6,'CMD(XXJCT17)'
                7,'CMD(XXMCT17)'
                8,'CMD(XXNLT17)'
                9,'CMD(XXSNT17)'
               10,'CMD(XXSRT17)'
               11,'CMD(XXTLT17)'
               12,'CMD(XXTST17)'
               13,'CMD(XXPSB17)'
               14,'CMD(XXDMB17)'
               15,'CMD(XXPLT17)'
              ' ',' '
                *,'?' )
)END

Panel three

%--------------  COMPILE PROGRAM LIST TABLE      -----------------------
%
+  SELECT THE TYPE OF TABLE FROM THE CODES BELOW.
%
%  CODES FOLLOW:
%
+       %?I +=  PROGRAMS WILL BE EXECUTED ON INITIAL START UP OF CICS.
+       %?T +=  PROGRAMS WILL BE EXECUTED ON TERMINATION OF CICS.
%
+  ENTER CODE   %=>_MOD
%
)INIT
  &MOD = '  '
)PROC
 VER (&MOD,NONBLANK)
  &ZSEL = 'CMD(XXPLT03A)'
)END

TSO CLIST ENTRIES

XXDCT17

PROC 0
   CONTROL MAIN
   ISPEXEC FTOPEN TEMP
   ISPEXEC FTINCL XXDCT17
   ISPEXEC FTCLOSE
   ISPEXEC VGET ZTEMPF
   FREE DS('&ZTEMPF')
   SUBMIT '&ZTEMPF'
   DEL '&ZTEMPF'
END

Similar TSO CLIST entries exist for XXDMB17, XXFCT17,
XXJCT17, XXMCT17, XXNLT17, XXPCT17, XXPPT17,
XXPSB17, XXSIT17, XXSNT17, XXSRT17, XXTCT17,
XXTLT17, and XXTST17.  The PLT needs to be handled
slightly differently and requires the following two entries.

XXPLT03A

PROC 0
   CONTROL MAIN
   ISPEXEC FTOPEN TEMP
   ISPEXEC FTINCL XXPLT17
   ISPEXEC FTCLOSE
   ISPEXEC VGET ZTEMPF
   FREE DS('&ZTEMPF')
   SUBMIT '&ZTEMPF'
   DEL '&ZTEMPF'
END

XXPLT17

PROC 0
   CONTROL MAIN
   ISPEXEC VGET (BJC1,BJC2,BJC3,BJC4) PROFILE
   ISPEXEC VPUT (BJC1,BJC2,BJC3,BJC4)
   ISPEXEC SELECT PANEL(XXPLT17)
   ISPEXEC VGET (BJC1,BJC2,BJC3,BJC4 ZTEMPF)
   ISPEXEC VPUT (BJC1,BJC2,BJC3,BJC4) PROFILE
END

TSO SKELETON ENTRIES

XXDCT17

//DFHDCT&MOD  JOB (,,,,,,,,,,,,),'&ZUSER.ASM',
//*RACFCARD
//  CLASS=H,MSGCLASS=J,NOTIFY=&ZUSER.,MSGLEVEL=(1,1)
//DCTASM EXEC DFHTABLE,
//      NAME=DFHDCT&MOD,
//      LIB='&SLIB',
//      INDEX='&INDX',
//      SDF='&SDF',
//      OUTC='X'
//LINKA  EXEC DFHLINK,
//      PROGRAM='&PROG',
//      LOAD='&LOAD',
//      DEL='&DEL',
//      OUTC='*',WORK=SYSDA
//LINKB  EXEC DFHLINK,
//      PROGRAM='&PROG1',
//        LOAD='&LOAD1',
//        DEL='&DEL1',
//        OUTC='*',
//        WORK=SYSDA
//LINKC  EXEC DFHLINK,
//      PROGRAM='&PROG2',
//        LOAD='&LOAD2',
//        DEL='&DEL2',
//        OUTC='*',
//        WORK=SYSDA

Similar entries need to be created for XXDMB17, XXFCT17,
XXJCT17, XXMCT17, XXNLT17, XXPCT17, XXPLT17,
XXPPT17, XXPSB17, XXSIT17, XXSRT17, XXTCT17,
XXTLT17, and XXTST17.  The SNT is slightly different.

XXSNT17

//DFHSNT&MOD  JOB (,,,,,,,,,,,,),'&ZUSER.ASM',
//*RACFCARD
//  CLASS=H,MSGCLASS=J,NOTIFY=&ZUSER.,MSGLEVEL=(1,1)
//SNTASM EXEC DFHTABLE,
//      NAME=DFHSNT&MOD,
//      INDEX='&INDX',
//      LIB='&SLIB',
//      OUTC='X'
//LINKA  EXEC DFHLINK,
//      PROGRAM='&PROG',
//      LOAD='&LOAD',
//      DEL='&DEL',
//      OUTC='J',WORK=SYSDA
//LINKB  EXEC DFHLINK,
//      PROGRAM='&PROG1',
//        LOAD='&LOAD1',
//        DEL='&DEL1',OUTC='J',WORK=SYSDA
//LINKC  EXEC DFHLINK,
//      PROGRAM='&PROG2',
//        LOAD='&LOAD2',
//        DEL='&DEL2',OUTC='J',WORK=SYSDA
//PUNCH     EXEC PGM=IEBPTPCH
//SYSPRINT  DD SYSOUT=J
//SYSUT1    DD  UNIT=3380,DSN=&SLIB,DISP=SHR
//SYSUT2    DD  UNIT=SYSDA,DSN=TECH.MOD.SIGNON,DISP=(,CATLG),
//          DCB=(RECFM=FB,LRECL=81,BLKSIZE=81),
//          SPACE=(CYL,(2))
//SYSIN     DD  *
     PUNCH  MAXNAME=1,STRTAFT=2,TYPORG=PO
     MEMBER NAME=DFHSNT&MOD


Richard Stacey
Senior Systems Programmer
Public Employees Retirement System (USA)	) Richard Stacey 1989

