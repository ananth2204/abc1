 Dynamic allocation of files at CICS initialisation
A frequent problem with CICS in MVS installations is concerned with the
allocation of application files.  Especially in test environments, it is very
difficult to determine whether or not test files exist.  If a dataset does not
exist, the CICS job stream cannot run.
One way to avoid this problem is to include in the DD statement for a VSAM
dataset the AMP=AMORG parameter; but this is not very flexible because it also
needs the UNIT and VOL=SER parameters.
The following program will dynamically allocate user datasets using SVC99
functions.  This program runs as a CICS system initialisation overlay.  It uses
a file name table - a load module generated from a series of macro instructions
also provided here.  In this table the user defines the datasets instead of
including them in the CICS job stream.  The user can build around this table
programs to manage the process of file definition on-line and add a series of
controls by modifying the layout of each file table entry.
To install this program, make the following addition or modification to the SIT:
     SIMODS=(A1,B1,C1,D1,E0,E1,F1,G1,H1,I1,J1)
Assemble and link-edit DFHSIE0 and the file name table with the corresponding
entries.
* MODULE NAME = DFHSIE0
* DESCRIPTIVE NAME = CICS/VS SYSTEM INITIALIZATION PROGRAM E0
* STATUS = 1.6.1
* FUNCTION = DYNAMICALLY ALLOCATE USER DATA SETS
DFHSIE0  CSECT
         USING *,SIPBAR2                  ESTABLISH
         USING SIPCOM,SIPBAR1                  ADDRESSABILITY
* => GET FILE TABLE ADDRESS
         MVI   SIPFLAG,SIPBLNUC           BLDL FOR NUCLEUS MODULE
         MVC   SILISTID,=CL8'S99TAB  '    MOVE FILE TABLE NAME
         L     SILINKR,SIPBLDL            GET ROUTINE ADDRESS
         BALR  SILINKR,SILINKR            GO TO DFHSIP ROUTINE
* => GET STORAGE TO LOAD FILE TABLE
         MVC   TABLEN(4),SIPARMP3         MOVE SIZE OF
         L     R0,SIPARMP3                     FILE TABLE
         GETMAIN RC,LV=(R0)               GET STORAGE.
         LTR   R15,R15                    GETMAIN ERROR ?
         BNZ   NOSTG                      YES. RETURN TO DFHSIP
         ST    R1,TABADD                  SAVE ADDRESS RETURNED.
* => LOAD FILE TABLE
         MVI   SIPFLAG,SIPBLNUC           LOAD FOR NUCLEUS MODULE
         LR    SICORA,R1                  POINT AT PLACE TO LOAD.
         L     SILINKR,SIPLDER            GET ROUTINE ADDRESS.
         BALR  SILINKR,SILINKR            GO TO IT.
* => GET STORAGE FOR DYNALLOC PARAMETER LIST
         LA    R0,118                     SIZE OF PARAMETER LIST
         GETMAIN RC,LV=(R0)               GET STORAGE
         LTR   R15,R15                    GETMAIN ERROR ?
         BNZ   NOSTG                      YES. RETURN TO DFHSIP
         ST    R1,S99ADD                  SAVE LOAD ADDRESS
         LR    R12,R1
         USING S99RBP,R12                 ADDRESSABILITY FOR PARMLIST
         LA    R10,S99RBPTR+4             LOAD ADDRESS OF RB
         USING S99RB,R10                  USING RB DSECT
         ST    R10,S99RBPTR               MAKE S99RBPTR POINT TO S99RBP
         OI    S99RBPTR,S99RBPND          S99RBPTR HIGH ORDER BIT ON
         XC    S99RB(RBLEN),S99RB         INITIALIZE RB
         MVI   S99RBLN,RBLEN              MOVE LENGTH OF RB
         MVI   S99VERB,S99VRBAL           SET ALLOCATION FUNCTION.
         LA    R8,S99RB+RBLEN             POINT TO TEXT UNITS PTRS
         USING S99TUPL,R8
         ST    R8,S99TXTPP                INIT TEXT PTRS
* FIRST TEXT UNIT: DATASET NAME
         LA    R6,S99TUPL+16              ADDRESSABILITY FOR
         USING S99TUNIT,R6                       FIRST TEXT UNIT
         ST    R6,S99TUPTR                POINT TEXT PTR TO TEXT UNIT
         LA    R7,DALDSNAM                KEY FOR DSNAME
          STH   R7,S99TUKEY                KEY IN TEXT UNIT KEY FIELD
         LA    R7,1                       LENGTH OF KEY FIELD
         STH   R7,S99TUNUM
         LA    R7,44                      LENGTH OF PARM
         STH   R7,S99TULNG
* SECOND TEXT UNIT: STATUS
         LA    R6,S99TUNIT+50             (SAME AS FIRST TEXT UNIT)
         LA    R8,S99TUPL+4
         ST    R6,S99TUPTR
         LA    R7,DALSTATS
         STH   R7,S99TUKEY
         LA    R7,1
         STH   R7,S99TUNUM
         STH   R7,S99TULNG
         MVI   S99TUPAR,X'08'
* THIRD TEXT UNIT: DDNAME
         LA    R6,S99TUNIT+7              (SAME AS FIRST TEXT UNIT)
         LA    R8,S99TUPL+4
         ST    R6,S99TUPTR
         LA    R7,DALDDNAM
         STH   R7,S99TUKEY
         LA    R7,1
         STH   R7,S99TUNUM
         LA    R7,8
         STH   R7,S99TULNG
* FOURTH TEXT UNIT: DISPOSITION
         LA    R6,S99TUNIT+14             (SAME AS FIRST TEXT UNIT)
         LA    R8,S99TUPL+4
         ST    R6,S99TUPTR
         OI    S99TUPTR,S99TUPLN          END OF PARMLIST
         LA    R7,DALNDISP
         STH   R7,S99TUKEY
         LA    R7,1
         STH   R7,S99TUNUM
         STH   R7,S99TULNG
         MVI   S99TUPAR,X'08'
* => START DYNAMIC ALLOCATION
         DFHWTO 'DFH1500 - DATA BASE DATASETS ARE BEING ALLOCATED'
         L     R2,TABADD                  GET TABLE ADDRESS
         LA    R2,64(,R2)                 BYPASS HEADER LABEL
         USING TABLE,R2                   USING FILE TABLE DSECT
TABLOOP  CLC   DDNAME,=8X'FF'             END OF FILE TABLE ?
         BE    RETURN                     YES, STOP LOOP
         LR    R1,R12                     R1 POINT TO S99R FOR DYNALLOC
         MVC   46(44,R1),DSNAME           MOVE DATA SET NAME
         MVC   103(8,R1),DDNAME           MOVE DD NAME
         DYNALLOC                         ISSUE SVC 99
         LTR   R15,R15                    ERROR ?
         BZ    NEXTDD                     NO. CONTINUE
         MVC   DDMSG(8),DDNAME            YES, INFORM TO OPERATOR
         DFHWTO ('==> ',DDMSG,CL8' ',' NOT ALLOCATED')
NEXTDD   LA    R2,60(,R2)                 POINT TO NEXT ENTRY IN TABLE
         B     TABLOOP                    CONTINUE LOOP.
* => ERROR IN GETMAIN
NOSTG    DFHWTO 'DFH1501 - STORAGE NOT AVAILABLE FOR DFHSIE0 GETMAINS'
         B     SIE0RET
* => FREE PREVIOUSLY ACQUIRED STORAGE
RETURN   EQU   *
         L     R0,TABLEN
         L     R1,TABADD                  FREE STORAGE ACQUIRED
         FREEMAIN R,LV=(R0),A=(R1)        FOR FILE TABLE
         LA    R0,118
         L     R1,S99ADD                  FREE STORAGE ACQUIRED
         FREEMAIN R,LV=(R0),A=(R1)        FOR DYNALLOC PARMLIST
SIE0RET  L     SILINKR,SIPOSUP
         BR    SILINKR                    RETURN TO OVERLAY SUPERVISOR
 * => SAVE AREAS, CONSTANTS AND DSECTS
         LTORG
TABADD   DS   F
TABLEN   DS   F
S99ADD   DS   F
TABLE    DSECT
DDNAME   DS   CL8
DSNAME   DS   CL44
         DS   CL8
         DFHSICOM
         IEFZB4D0
         IEFZB4D2
RBLEN    EQU  (S99RBEND-S99RB)
         END
SAMPLE TABLE FOR DFHSIE0 PROGRAM
         S99TAB  TYPE=INITIAL,APPLID=CICSTEST
         S99TAB  TYPE=ENTRY,DDNAME=SAMPLE,                             X
               DSNAME=SAMPLE.FILE
         S99TAB  TYPE=FINAL
         END
S99TAB MACRO
       MACRO
       S99TAB &TYPE=,&DDNAME=,&DSNAME=,&APPLID=
.*     S99TAB MACRO - GENERATE FILE NAME TABLE FOR SVC99 SERVICES     *
 GBLA &DEFSEQ
 GBLA &NUMERR
         AIF   (T'&TYPE EQ 'O').TYPERR
         AIF   ('&TYPE' EQ 'INITIAL').INITIAL
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AIF   ('&TYPE' EQ 'FINAL').FINAL
.TYPERR  ANOP
         AGO   .ERROR0
.*                T Y P E = I N I T I A L                             *
.INITIAL ANOP
         AIF   (&DEFSEQ NE 0).ERROR0
         AIF   (T'&APPLID EQ 'O').ERROR3
.CSECT   ANOP
S99TAB   CSECT
         DC    CL64'FILE NAME TABLE - &APPLID'
&DEFSEQ  SETA  1
         MEXIT
.*                  T Y P E = E N T R Y                               *
.ENTRY   ANOP
         AIF   (&DEFSEQ NE  1).ERROR0
         AIF   (T'&DDNAME EQ 'O').ERROR1
         AIF   (T'&DSNAME EQ 'O').ERROR2
         DC    CL8'&DDNAME'
         DC    CL44'&DSNAME'
         DC    CL8' '
         MEXIT
.*                  T Y P E = F I N A L                               *
.FINAL   ANOP
         AIF   (&NUMERR EQ 0).TODOOK
         MNOTE 4,'E R R O R S '
         MNOTE *,'****************************************************'
         MNOTE *,'&NUMERR  ERRORS IN FILE TABLE                      *'
         MNOTE *,'CORRECT THEM AND REASSEMBLE                        *'
         MNOTE *,'****************************************************'
         AGO   .SALEF
.TODOOK  ANOP
         AIF   (&DEFSEQ NE 1).ERROR0
         DC    8X'FF'
         MNOTE *,' ******************************************* *'
         MNOTE *,'       CICS/VS FILE TABLE GENERATED OK.      *'
         MNOTE *,' ******************************************* *'
.SALEF   ANOP
          MEXIT
.*               E R R O R     M E S S A G E S                         *
.ERROR0  ANOP
         MNOTE ,'ERROR: PARAMETERS OUT OF SEQUENCE'
         MNOTE ,'       TYPE=INITIAL MUST BE THE FIRST AND'
         MNOTE ,'       TYPE=FINAL MUST BE THE LAST'
         AGO   .REASM
.ERROR1  ANOP
         MNOTE ,'ERROR: MUST SPECIFY DDNAME'
         AGO   .REASM
.ERROR2  ANOP
         MNOTE ,'ERROR: MUST SPECIFY DSNAME'
         AGO   .REASM
.ERROR3  ANOP
         MNOTE ,'ERROR: MUST SPECIFY APPLID'
.REASM   ANOP
&NUMERR  SETA  &NUMERR+1
         MEXIT
         MEND
         END


Enrique Garcia Dulanto (Peru) ) Enrique Garcia Dulanto 1989











































