 CMS EXECs for monitoring CICS (continued)
In the latest in a series of articles,we look at how to use CMS EXECs to obtain
and present DCT information.
Keying PF8 reads through the whole DCT extracting data from each entry and
displaying, via XEDIT, one line per table entry.  Different data and different
information is extracted depending on the type of entry - ie EXTRA, INTRA,
INDIRECT, or REMOTE.  PF5 dumps a table entry and PF6 dumps a DTF (where one
exists).
DCT EXEC - DCT EXTRACT
/* DCT EXEC ******************************************************* */
/*                      CICS DCT                                    */
/*    PARAMETERS REQUIRED:   VMID, DCT ADDRESS                      */
/*                           DCT ADDRESS                            */
/* **************************************************************** */
      ARG VMID DCT .
      IF DCT = 'DCT' THEN EXIT
/* ---------------------------------------------------------------- */
/* FOR EACH DCT ENTRY                                               */
/* ---------------------------------------------------------------- */
      DO I = 1 TO 500
          VADD = DCT
          CALL FWORD
          IF FWORD = 'FFFFFFFF' THEN LEAVE  /* END OF DCT ? */
          DEST = X2C(FWORD)                 /* DESTINATION ID */
          VADD = HEXADD(VADD,4)
          CALL FWORD
          DTYP = X2C(SUBSTR(FWORD,1,2))     /* DESTINATION TYPE */
          LEN  = X2D(SUBSTR(FWORD,5,4))     /* DCT ENTRY LENGTH */
          IF BITAND(DTYP,'04'X) = '04'X THEN ENA = 'DIS'
                                         ELSE ENA = 'ENA'
          IF BITAND(DTYP,'80'X) = '80'X THEN CALL INTRA
          IF BITAND(DTYP,'40'X) = '40'X THEN CALL EXTRA
          IF BITAND(DTYP,'20'X) = '20'X THEN CALL INDIRECT
          IF BITAND(DTYP,'10'X) = '10'X THEN CALL REMOTE
          VADD = HEXADD(DCT,8)
          CALL FWORD
          CNT  = RIGHT(X2D(FWORD),5, )            /* COUNT */
          QUEUE DEST ENA TYPE OPEN DTFN TRIG'  'INDD CNT'  'DCT DTF
          DCT  = D2X(X2D(DCT) + LEN)
          END I
/* ---------------------------------------------------------------- */
/* DISPLAY USING XEDIT                                              */
/* ---------------------------------------------------------------- */
      QUEUE
      'X' VMID 'DCT A (PROFILE DCT)'
      EXIT
/* ---------------------------------------------------------------- */
/* INTRA                                                            */
/* ---------------------------------------------------------------- */
INTRA:
      TYPE = 'INTRA   '
      INDD = '    '
      OPEN = '   '
      DTF  = '      '
      DTFN = '       '
      VADD = HEXADD(DCT,10)
      CALL FWORD
      TRIG = RIGHT(X2D(SUBSTR(FWORD,1,4)),2, )   /* TRIGGER LEVEL */
      VADD = HEXADD(DCT,4C)
      CALL FWORD
      TRAN = X2C(FWORD)                          /* TRANSACTION   */
      TRIG = TRIG' 'TRAN
      RETURN
/* ---------------------------------------------------------------- */
/* EXTRA                                                            */
/* ---------------------------------------------------------------- */
 EXTRA:
      TYPE = 'EXTRA   '
      INDD = '    '
      TRIG = '       '
      VADD = HEXADD(DCT,C)
      CALL FWORD
      OPE  = X2C(SUBSTR(FWORD,1,2))
      DTFA = SUBSTR(FWORD,3,6)
      OPEN = 'CLO'
      IF BITAND(OPE,'80'X) = '80'X THEN OPEN = 'OPE'
      IF BITAND(OPE,'08'X) = '08'X THEN OPEN = 'OPE'
      VADD = HEXADD(DCT,C)
      CALL FWORD
      DTF  = SUBSTR(FWORD,3,6)        /* DTF */
      VADD = HEXADD(DTF,14)
      CALL FWORD
      DTFT = SUBSTR(FWORD,1,2)
      SELECT
      WHEN DTFT = '20' THEN DO            /* DTFSD */
          VADD = HEXADD(DTF,16)
          CALL FWORD
          DTFN = FWORD
          VADD = HEXADD(DTF,1A)
          CALL FWORD
          DTFN = X2C(DTFN||SUBSTR(FWORD,1,6))
          END
      WHEN DTFT = '08' THEN DTFN = 'SYSLST '
      OTHERWISE DTFN = 'DTF-'DTFT' '
      END
      RETURN
/* ---------------------------------------------------------------- */
/* INDIRECT                                                         */
/* ---------------------------------------------------------------- */
INDIRECT:
      TYPE = 'INDIRECT'
      TRIG = '       '
      OPEN = '   '
      DTF  = '      '
      DTFN = '       '
      VADD = HEXADD(DCT,C)
      CALL FWORD
      VADD = SUBSTR(FWORD,3,6)
      CALL FWORD
      INDD = X2C(FWORD)                 /* IND DESTINATION ID */
      RETURN
/* ---------------------------------------------------------------- */
/* REMOTE                                                           */
/* ---------------------------------------------------------------- */
REMOTE:
      TYPE = 'REMOTE  '
      INDD = '    '
      TRIG = '       '
      OPEN = '   '
      DTF  = '      '
      DTFN = '       '
      RETURN
DCT XEDIT- DCT DISPLAY
/* DCT XEDIT */
      'INPUT'
      EXTRACT ?FN?SIZ?LSCREEN?
      PARSE VALUE FNAME.1 WITH FNAME.1 .
      'CTL' '%' 'E'
      'CTL' '&' 'P WHI     N'
      'SET PF03 QQUIT'
      'SET PF15 QQUIT'
      'SET PF05 DCTE'               /* DSTOR DCTE */
       'SET PF06 DTF'                /* DSTOR DCTE */
      'COLOR ID WHI NON'
      'COLOR ARROW WHI NON'
      'COLOR CURL TUR REV'
      'COLOR TOF  TUR REV'
      'COLOR FILE TUR REV'
      'COLOR PREF YEL REV'
      'TOFEOF OFF'
      'SHADOW OFF'
      'NUMBER ON'
      'CMD BOT'
      'SCALE OFF'
      'MSGLINE ON 2 OVERLAY'
      'VERIFY 1 80'
      'PREFIX ON L'
      'CURL ON 4'
      'CURS S 5 7'
      'RESER 1 GRE REV N' ' 'FNAME.1' %& DESTINATIONS'
      'RESER 2 YEL REV N' '      DEST ENA DEST.    OPE DTF    ',
                          'TRIGGER  IND. RD/WR  DCT    DTF'
      'RESER 3 YEL REV N' '      ID   DIS TYPE     CLO NAME   ',
                          'NO/TRAN  DEST COUNT  ADDRSS ADDRSS'
      'RESER' LSCREEN.1-1 'WHI N' 'PF3=END    PF5=DCT ENTRY    PF6=DTF'
      'TOP'
      'SORT * A 14 14 10 10 1 4'
DCTE XEDIT - DUMP DCT ENTRY (PF5)
/* DCTE XEDIT */
      EXTRACT ?FN?CURSOR?LSCREEN?
      IF CURSOR.1 = LSCREEN.1 THEN EXTRACT ?CURL?
                              ELSE DO
                                   LINE = CURSOR.1-4
                                   '+'LINE
                                   EXTRACT ?CURL?
                                  '-'LINE
                                   END
      ADD = SUBSTR(CURLINE.3,52,6)
      'CMS EXEC VSTOR' FNAME.1 ADD
DTF XEDIT - DUMP DTF (PF6)
/* DTF XEDIT */
      EXTRACT ?FN?CURSOR?LSCREEN?
      IF CURSOR.1 = LSCREEN.1 THEN EXTRACT ?CURL?
                              ELSE DO
                                   LINE = CURSOR.1-4
                                   '+'LINE
                                   EXTRACT ?CURL?
                                  '-'LINE
                                   END
      IF SUBSTR(CURLINE.3,10,3) Â¬= 'EXT' THEN EXIT
      ADD = SUBSTR(CURLINE.3,59,6)
      'CMS EXEC VSTOR' FNAME.1 ADD


Mike Jones
Senior Systems Programmer
Wavin Building Products (UK)  ) Xephon 1988











