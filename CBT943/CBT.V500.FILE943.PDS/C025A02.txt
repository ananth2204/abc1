 Installing IMS modules into the Link Pack Area

This article is based on the experiences of an installation running MVS/370
SP1.3.3 level 8508+, IMS/DB Version 1 Release 3 level 8603, CICS 1.6.1 level
8603.


CASE DESCRIPTION

A customer running several CICS address spaces with DL/I and some parallel DL/I
batch jobs had a real storage shortage.  To save memory, the customer decided to
put re-entrant IMS modules into the Link Pack Area (LPA), but only those
actually used by CICS in order to conserve virtual storage.

The CICS systems needed regions of 7.2MB and there was a system requirement of
0.5MB in the private address space before moving any of these modules to the
LPA.  The following modules were identified as candidates for a move to the LPA.
Their total size amounts to a little over 700K:

DFSABND0
DFSAOSF0
DFSAOS10
DFSAOS60
DFSAOS70
DFSAOS80
DFSBC000
DFSBML00
DFSCSS00
DFSDBAU0
DFSDBH00
DFSDDLE0
DFSDDLI0
DFSDFLS0
DFSDHDS0
DFSDISM0
DFSDLA00
DFSDLD00
DFSDLOC0
DFSDLR00
DFSDLTR0
DFSDVBH0
DFSDVBH2
DFSDVSM0
DFSDXMT0
DFSERA20
DFSFTIM0
DFSFXC50
DFSHDC40
DFSKBDP0
DFSKPXT0
DFSLMGR0
DFSMODU0
DFSMRTR0
DFSPCC30
DFSPR000
DFSRBOI0
DFSRCQM0
DFSRCQR0
DFSRDBC0
DFSRDBL0
DFSSDLA0
DFSSDLB0
DFSSDL60
DFSSPF00
DFSSTM00
DFSTRA10
 DFSTRA20
DFSTRA30
DFSVCI00
DFSV4200
DSPCABN0
DSPCINT0
DSPCRTR0
DSPFLT00


MOVING IMS MODULES TO LPA

Initially the system was set up with the IMS modules placed in the IMS.RESLIB
library.  IMS.RESLIB is not in the LINKLIST since IMS is an alias.  The JCL for
CICS and batch had a STEPLIB  and a DFSRESLB  pointing to IMS.RESLIB

The strategy developed for using the LPA modules of IMS was:

%    Put the above mentioned re-entrant modules into SYS1.LPALIB

%    Put the rest of the IMS modules into a LINKLIST library SYS1.XLINKLIB

%    Do an IPL with CLPA

%    Turn on DLLPA=YES in the CICS SITs

%    Remove the STEPLIB pointing to IMS.RESLIB for both CICS and batch

%    Let DFSRESLB point to IMS.RESLIB or SYS1.XLINKLIB, whichever is suitable

%    Start CICS and the DL/I batch.

The tool used for monitoring from where IMS modules are loaded and the layout of
the region is the Virtual Storage Monitor, program 5799-WWL V1R3L1.


What actually happened

With the environment as described above, when DFSRESLB pointed to IMS.RESLIB
with all the IMS modules or to SYS1.XLINKLIB with only non-LPA IMS modules,
message DSP0040I UNABLE TO LOAD MODULE DSPFLT00 and message DFS678I BLDL FAILED
FOR FOLLOWING MODULES FROM MEMBER DFSMPL appeared followed by these names of
modules:

DFSAOS10
DFSAOS60
DFSAOS80
DFSBML00
DFSDBH00
DFSDDLE0
DFSDHDS0
DFSDISM0
DFSDLA00
DFSDFLS0
DFSDLD00
DFSDLOC0
DFSDLR00
DFSDXMT0
DFSRDBL0
DFSFTIM0
DFSSTM00
DFSERA20
DFSFXC50
DFSDLTR0
DFSMRTR0
DFSDBAU0
 DFSSDLB0
DFSRBOI0
DFSSDL60
DFSSDLA0

The message DSP0040I looked serious but CICS kept running for a full day without
any problems.

The message DFS678I could be ignored - the IMS Messages and Codes manual says
that provided the modules are in the LPA, no S806 abend will occur.  The DFS678I
message followed by the long list of modules is, of course, confusing.  Anyway,
all the IMS modules in the LPA except DSPFLT00 were actually loaded from the
LPA.

To get DSPFLT00 loaded correctly and to avoid the DFS678I message some
experiments were done.


First attempt

%    STEPLIB pointing to IMS.RESLIB was added

%    DFSRESLB pointed to IMS.RESLIB

%    All IMS LPA-resident modules were added to LINKLIST library SYS1.XLINKLIB.


The result

DFS678I and DSP0040I disappeared, but the following modules were not loaded from
the LPA, but put inside the region:

DFSABND0
DFSRCQM0
DFSVCI00
DSPCABN0
DSPFLT00


Second attempt

%    STEPLIB removed

%    All the IMS modules were in the LINKLIST library SYS1.XLINKLIB

%    All LPA resident IMS modules were removed from IMS.RESLIB

%    DFSRESLB pointed to IMS.RESLIB.


The result

Again the message DSP0040I for DSPFLT00 appeared and the following modules were
not loaded from the LPA but put inside the region:

DFSABND0
DFSVCI00


Third attempt

%    Still no STEPLIB

%    Still all the IMS modules were in the LINKLIST library SYS1.XLINKLIB

%    All the IMS modules were again in IMS.RESLIB

%    DFSRESLB pointed to IMS.RESLIB.


The result

Message DSP0040I disappeared and the following modules were not loaded from the
LPA but put inside the region:

DFSABND0
DFSBCI00


Fourth attempt

%    Still no STEPLIB

%    All the IMS modules except DFSABND0 and DFSVCI00 were in the LINKLIST
library SYS1.XLINKLIB

%    Still all the IMS modules were in IMS.RESLIB

%    DFSRESLB points to IMS.RESLIB.


The result

The following modules were not loaded from the LPA but put inside the region:

DFSABND0
DFSVCI00


Fifth attempt

%    Still no STEPLIB

%    Either all IMS modules were in one LINKLIST library SYS1.XLINKLIB or all
IMS modules except DFSABND0 and DFSVCI00 were in the LINKLIST library
SYS1.XLINKLIB

%    Still all IMS modules were in IMS.RESLIB

%    DFSABND0 and DFSVCI00 were removed from IMS.RESLIB

%    DFSRESLB pointed to IMS.RESLIB.


The result

All LPA-resident IMS modules were loaded from the LPA.


CONCLUSION

Put all re-entrant IMS modules in question into SYS1.LPALIB.  Put the same re-
entrant IMS modules into a LINKLIST library or make IMS.RESLIB a LINKLIST
library itself if that is possible.  Remove DFSABND0 and DFSVCI00 from
IMS.RESLIB.  Let DFSRESLB point to IMS.RESLIB.  Update SMP with the appropriate
LMOD statements for future maintenance.

The above has been reported to IMS PSC as follows:

1    The above described behaviour of the IMS program load mechanism is not
documented, especially concerning putting IMS modules into LPA.

2    The load mechanism is both illogical and against standard fetch; especially
confusing is that most modules have to be in the LPA, the LINKLIST, and the
DFSRESLB library, and that two specific modules may not have to be in DFSRESLB
library.

3    Message DFS678I should not be issued when modules are actually loaded even
when it is from the LPA; it is unnecessary and leads to confusion among users of
the system.

4    Message DSP0040I and missing load of DSPFLT00 when the module is available
in the LPA should not occur.


Reaction from IBM

IBM did not really understand what was going on, but admitted that IMS
documentation is inadequate and asked us to submit a reader's comment form to
get the documentation updated.



Nils Plum
Systems Programmer (Denmark)  ) Nils Plum 1987











































