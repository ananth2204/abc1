CICS security - part three (continued)

Part three of our look at CICS security is continued this month
with the publication of the source code for the program, SNP2.


SNP2

         DFHCOVER
         COPY  KEYEQ
         COPY  DFHCSADS
         COPY  DFHTCADS
** TWA **
TIME     DS    D
PTIME    DS    F
ALIGN    DS    0F                      USED TO ENSURE ALIGNMENT
SAVETCA  DS    CL16                    SAVE 16 BYTES OF TCA FROM X80
VKEY     DS    CL20
AIDBYTE  DS    CL1
MSGCODE  DS    CL1
DAT1     DS    0PL3
DAT1A    DS    CL1
DAT1B    DS    PL2
DAT2     DS    0PL3
DAT2A    DS    CL1
DAT2B    DS    PL2
DAYSLEFT DS    PL2
EDITFLD  DS    CL4
PWCHANGE DS    CL1
SAVEREC  DS    0CL80
SNAME    DS    CL20
SPW      DS    CL4
SOPID    DS    CL3
SSEC     DS    CL3
SOPPRI   DS    CL1
SDATLUP  DS    PL4
SDATLUS  DS    PL4
SOPW1    DS    CL4
SOPW2    DS    CL4
SGPW     DS    CL4
SUSERNAM DS    CL20
SLASTGO  DS    CL1
         ORG   SAVEREC+80
FLD1     DS    CL9
         DFHSNT TYPE=DSECT
         USING DFHSNNT,SNTTEAR
         COPY  DFHFWADS
** FWA **
RECORD   DS    0CL80
VNAME    DS    CL20
VPW      DS    CL4
VOPID    DS    CL3
VSEC     DS    CL3
VOPPRI   DS    CL1
VDATLUP  DS    PL4
VDATLUS  DS    PL4
VOPW1    DS    CL4
VOPW2    DS    CL4
VGPW     DS    CL4
VUSERNAM DS    CL20
VLASTGO  DS    CL1
VFAILS   DS    CL1
         ORG   RECORD
BADBOY   DS    0CL20
BBTERM   DS    CL4
BBNAME   DS    CL8
BBDATE   DS    PL4
BBTIME   DS    PL4
SNTTEAR  EQU   1
TDOABAR  EQU   2
BASE2    EQU   4
FWACBAR  EQU   8
BASE     EQU   9
TIOABAR  EQU   10
TCTTEAR  EQU   11
         COPY  DFHTDOA
TDDATA   DS    CL132
         COPY  DFHTCTTE
         COPY  DFHTIOA
TREC     DS    0CL80                                                     note 1
         DS    CL3                                                          |
PW1      DS    CL4                                                          |
         DS    CL3                                                          |
PW2      DS    CL4                                                       note 1
         ORG   TREC
         COPY  SIGNMP1
SNP2     CSECT
         BALR  BASE,0
         USING *,BASE,BASE2
         LA    BASE2,4095(BASE)
         LA    BASE2,1(BASE2)
         L     TCTTEAR,TCAFCAAA
         MVI   PWCHANGE,X'00'
         CLI   TCTTEAID,CLEAR
         BE    CLEARED
         DFHBMS TYPE=MAP,MAP=SIGNMP1,MAPFAIL=NODATA,ERROR=DUMP
         L     TIOABAR,TCTTEDA
         B     A10
START    EQU   *
         DFHBMS TYPE=IN,MAP=SIGNMP1,MAPFAIL=NODATA,ERROR=DUMP
         L     TIOABAR,TCTTEDA
         CLI   TCTTEAID,CLEAR
         BE    CLEARED
A10      EQU   *
         MVC   ERRSCR+9(20),=CL20'NAME INVALID'
         CLC   SM1NAMEL,=H'0'          HAS A NAME BEEN ENTERED ?
         BE    SIGNERR                     NO - ERROR
         MVC   ERRSCR+9(20),=CL20'NO PASSWORD ENTERED'
         CLC   SM1PWI,=H'0'            HAS A PASSWORD BEEN ENTERED ?
         BE    SIGNERR                     NO - ERROR
         MVC   VKEY,SM1NAMEI           SET UP KEY FOR SNT FILE READ
         CLI   TCTTEAID,ENTER          ENTER ?
         BE    *+12                        YES CARRY ON
         CLI   TCTTEAID,PF1            PF1 ?
         BNE   CLEARED                     NO - THROW HIM OUT
         BAL   R7,GETNOUP              READ RECORD - NO UPDATE           note 2
A20      EQU   *
         MVC   FLD1+4(4),VPW           PUT ENCRYPTED PW IN FLD1          note 3
         MVC   ALIGN,VDATLUP                                                |
         L     R3,ALIGN                PUT DATE PW CREATED IN R3            |
         SRA   R3,4                    REMOVE SIGN BITS                     |
         STC   R3,FLD1                 PUT 2 CHARS OF DATE INTO FLD1        |
         XC    FLD1+4(1),FLD1          START DECRYPTION                     |
         XC    FLD1+5(1),FLD1                                               |
         XC    FLD1+6(1),FLD1                                               |
         XC    FLD1+7(1),FLD1                                               |
         MVC   FLD1(4),FLD1+4                                               |
         NC    FLD1(4),=X'07070707'                                         |
         NC    FLD1+4(4),=X'F8F8F8F8'                                       |
*                                      NOW NEED TO SEPARATE 1ST 5 AND       |
         L     R3,FLD1+4                  LAST 3 BITS BEFORE SHIFTING       |
         SRL   R3,3                    RESTORE BITS 3 TO 7                  |
         ST    R3,FLD1+4                                                    |
         L     R3,FLD1                 3 LEAST SIGNIFICANT BITS NOW TO      |
         SLL   R3,5                       BE MOVED TO MOST SIGNIFICANT      |
         ST    R3,FLD1                                                      |
         OC    FLD1(4),FLD1+4                                               |
         CLC   SM1PWI,FLD1                                               note 3
         BE    A30                         OK - LET HIM ON THEN
         DFHFC TYPE=RELEASE
         MVC   ERRSCR+9(20),=CL20'INVALID PASSWORD'
         BAL   R7,GETUPD
         XR    R6,R6                   NO CHECK HOW MANY TIMES
         IC    R6,VFAILS
         LA    R6,1(R6)
         STC   R6,VFAILS
         CH    R6,=H'4'                IF 5 TIMES, PUT OUT OF SERVICE    note 4
         BNH   *+8                         BUT ZEROIZE FAILURE COUNT        |
         MVI   VFAILS,X'00'                                                 |
         MVC   SAVEREC,RECORD          SAVE FOR WRITE OF BADBOY RECORD      |
         ST    FWACBAR,TCAFCAA                                              |
         DFHFC TYPE=PUT,RDIDADR=VKEY,TYPOPER=UPDATE,ERROR=A80               |
         CH    R6,=H'4'                                                  note 4
         BH    C10                     TAKE TERMINAL OUT OF SERVICE
         BE    B10                     WARN OF IMPENDING DOOM
         B     SIGNERR
A30      EQU   *                       BACK TO COMMON PROCESSING
         MVC   AIDBYTE,TCTTEAID        SAVE ORIGINAL AID
         BAL   R7,TFREE                AND RELEASE TIOA
         MVC   VDATLUS,CSAJYDP         MOVE TODAYS DATE TO RECORD
         MVI   VFAILS,X'00'            RESET FAILED ATTEMPTS COUNT
         ST    FWACBAR,TCAFCAA         RESTORE FWA ADDRESS
         MVC   SAVEREC,RECORD          RELEASE RECORD TO ENSURE THAT
*                                        THE CI IS NOT LOCKED OUT TO
*                                        OTHER USERS
         DFHFC TYPE=RELEASE
         CLI   SLASTGO,C'0'            CHECK IF HIS PASSWORD HAS BEEN
         BNE   TUFF                        FLAGGED INVALID (UNCHANGED)
         MVI   DAT1A,X'00'             SET UP DATE FIELDS FOR PASSWORD
         MVI   DAT2A,X'00'                 UPDATE CHECKING
         MVC   DAT1B,CSAJYDP+2         ONLY CHECKING DAYS (IN JULIAN)
         MVC   DAT2B,SDATLUP+2
         CP    DAT1B,DAT2B             IF TODAYS DATE IS LESS THAN
         BC    11,*+10                     THE LAST UPDATED DATE, THEN
         AP    DAT1B,=P'365'               WE MUST HAVE A NEW YEAR
         SP    DAT1,DAT2               NOW CHECK IF THERE'S 65 DAYS
         CP    DAT1,=P'65'                 TO GO - IF SO HE'S OK
         BL    A35
         CP    DAT1,=P'90'             IF THERE'S MORE THAN 90 DAYS,
         BNL   LASTGO                      THEN WE WON'T LET HIM ON
         ZAP   DAYSLEFT,=P'90'
         SP    DAYSLEFT,DAT1B
         MVC   TCASCNB,=H'95'          HE NEEDS TO CHANGE HIS PASSWORD
         BAL   R7,GETSTOR                   SO WE'LL NAG HIM 'TIL HE
         MVC   TIOATDL,=H'95'               DOES
         MVC   EDITFLD,MASK            NOW WE'LL EDIT THE NUMBER OF
         ED    EDITFLD,DAYSLEFT             DAYS LEFT UNTIL HIS P/WORD
         MVC   NOTUPLIN+29(2),EDITFLD+2     EXPIRES, AND DISPLAY IT ON
         MVC   TREC(95),NOTUPSCR            HIS SCREEN
         CP    DAYSLEFT,=P'1'          IF ONLY ONE DAY LEFT, MAKE IT
         BNE   *+8                          SINGULAR
         MVI   TREC+40,C' '
         DFHTC TYPE=(WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         BAL   R7,TFREE
         CLI   TCTTEAID,PF1            NOW CHECK IF HE'S CHANGED HIS
         BNE   A35                          MIND ABOUT CHANGING IT
         MVI   AIDBYTE,PF1
A35      EQU   *
         OI    TCTTETS,X'02'           SET UP SIGNED ON TCTTE
         MVC   TCTTEOI,SOPID
         MVC   TCTTESK,SSEC
         MVC   TCTTEOP,SOPPRI
*              THIS CODE CREATES A PSEUDO SNNT ENTRY, AND PUTS THE
*              ADDRESS IN THE TCTTE
         DFHSC TYPE=GETMAIN,INITIMG=00,                               *  note 5
               NUMBYTE=(SNNTPSE-DFHSNNT+4),CLASS=CONTROL
         L     SNTTEAR,TCASCSA                                           note 6
         LA    SNTTEAR,4(SNTTEAR)                                           |
         ST    SNTTEAR,TCTTESNT                                             |
         MVC   SNNTLNG,=AL2(SNNTPSE-DFHSNNT)                                |
         MVI   SNNTTMOU,X'1E'                                               |
*        MVI   SNNTTMOU,X'00'                                               |
         OI    SNNTIND,SNNTPSDO                                             |
         MVC   SNNTID,TCTTEOI                                               |
         MVC   SNNTOP,TCTTEOP                                               |
         XC    SNNTASK,SNNTASK                                              |
         MVC   SNNTSK,TCTTESK                                            note 6
         MVI   TIME,C'1'               WRITE MESSAGE TO SYSLST           note 7
         BAL   R7,TRANSD                                                 note 7
         CLI   AIDBYTE,PF1             SIGN ON ONLY ?
         BNE   A70                         YES SO EXIT
A40      EQU   *
         MVC   TCASCNB,=H'416'         WRITE PW UPDATE SCREEN
         BAL   R7,GETSTOR
         MVC   TIOATDL,=H'416'
         MVC   TREC(256),CHPWSCR
         MVC   TREC+256(160),CHPWSCR+256
         DFHTC TYPE=(ERASE,WRITE,READ,WAIT),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
A45      EQU   *
         CLI   TCTTEAID,ENTER          NOT ENTER, SO IGNORE UPDATE
         BE    A50
         BAL   R7,TFREE
         CLI   PWCHANGE,X'FF'          NO SIGNED ON MESSAGE IF P/WORD
         BE    A70                         IS INVALID
         MVI   AIDBYTE,ENTER           NO CHANGE, SO TREAT AS IF
         B     A70                         NEVER REQUESTED CHANGE
A50      EQU   *
         LA    R6,BLANK
         CLC   PW1,=C'    '            BLANK PASSWORD INVALID
         BE    A55
         LA    R6,UTODAY               ONLY ONE UPDATE PER DAY IS
         CLC   SDATLUP,CSAJYDP             ALLOWED TO STOP USER ALT-
         BE    A55                         ERING IT BACK
         LA    R6,OLDPW
         CLC   PW1,FLD1                CHECK IF RECENTLY USED
         BE    A55
         CLC   PW1,SOPW1
         BE    A55
         CLC   PW1,SOPW2
         BE    A55
         LA    R6,NOMATCH
         CLC   PW1,PW2                 BOTH ENTERED PASSWORDS THE SAME
         BE    A60
A55      EQU   *
         BAL   R7,TFREE                NO, SO REWRITE PW SCREEN
         MVC   TCASCNB,=H'47'          WRITE MESSAGE TO SCREEN
         BAL   R7,GETSTOR
         MVC   TIOATDL,=H'47'
         MVC   TREC(47),CHOK
         BR    R6
BLANK    MVC   TREC+5(42),=CL42'       BLANK IS NOT A VALID PASSWORD'
         B     WRITSCR
UTODAY   MVC   TREC+5(42),=CL42'      YOU HAVE DONE THIS TODAY ALREADY'
         B     WRITSCR
OLDPW    MVC   TREC+5(42),=CL42'    THIS PASSWORD HAS BEEN RECENTLY USE*
               D'
         B     WRITSCR
NOMATCH  MVC   TREC+5(42),=CL42'    THE ENTERED PASSWORDS DO NOT MATCH'
WRITSCR  DFHTC TYPE=(WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         B     A45
A60      EQU   *
         BAL   R7,WORDCHK              CHECK FOR NAUGHTY WORDS
         CLI   0(R2),C'*'
         BE    A65
         BAL   R7,TFREE
         MVC   TCASCNB,=H'196'         PUT OUT NAUGHTY SCREEN
         BAL   R7,GETSTOR
         MVC   TIOATDL,=H'196'
         MVC   TREC(196),NAUGHTY
         DFHTC TYPE=(ERASE,WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         BAL   R7,TFREE
         B     A40
A65      EQU   *
         MVC   SOPW2,SOPW1
         MVC   SOPW1,FLD1
         XR    R2,R2                                                     note 8
         MVC   ALIGN,PW1                                                    |
         L     R3,ALIGN                PUT PASSWORD INTO R3                 |
         SLDL  R2,3                    SHIFT RT. 3, (1ST 3 BITS IN R2)      |
         ST    R2,ALIGN                PUT SHIFTED PW INTO FLD1             |
         MVC   FLD1+1(4),ALIGN                                              |
         ST    R3,ALIGN                                                     |
         MVC   FLD1+5(4),ALIGN                                              |
         MVC   FLD1(4),FLD1+4          NOW MOVE 1ST 4 BYTES AND             |
         NC    FLD1(4),=X'07070707'       ZEROIZE ALL BUT LAST 3 BITS       |
         NC    FLD1+5(4),=X'F8F8F8F8'     AND 1ST 5 BITS OF REST OF PW      |
         OC    FLD1(4),FLD1+5          THIS PUTS THE TWO TOGETHER           |
         L     R3,CSAJYDP              PUT DATE PW CREATED IN R3            |
         SRA   R3,4                       AND REMOVE SIGN BITS              |
         STC   R3,FLD1+8               PUT LAST TWO CHARS OF DATE IN        |
         XC    FLD1+0(1),FLD1+8           TO FLD1, AND USE IT TO CHANGE     |
         XC    FLD1+1(1),FLD1+8           THE PASSWORD BYTE                 |
         XC    FLD1+2(1),FLD1+8                                             |
         XC    FLD1+3(1),FLD1+8                                             |
         MVC   SPW,FLD1                PUT ENCRYPED PW IN RECORD         note 8
         MVC   SDATLUP,CSAJYDP         RECORD DATE OF CHANGE
         MVI   SLASTGO,C'0'            HE HAS TAKEN HIS LAST CHANCE
         BAL   R7,TFREE
A70      EQU   *
         BAL   R7,GETUPD               READ THE RECORD FOR UPDATE
         MVC   RECORD,SAVEREC          RESTORE THE UPDATED RECORD
         ST    FWACBAR,TCAFCAA         WRITE BACK UPDATED RECORD
         DFHFC TYPE=PUT,RDIDADR=VKEY,TYPOPER=UPDATE,ERROR=A80
         B     A90
A80      EQU   *
         DFHFC TYPE=RELEASE
A90      EQU   *
         CLI   AIDBYTE,ENTER           THIS IS SET AT THE PW CHANGE
         BE    SIGNEDON                    REQUEST, NOT LAST MESSAGE
         CLI   SLASTGO,C'1'            THIS INDICATES THAT HE HAD TO
         BE    CLEARED                     CHANGE HIS PASSWORD, BUT
*                                          CLEARED THE CHANGE SCREEN
         MVC   TCASCNB,=H'47'          WRITE MESSAGE TO SCREEN
         BAL   R7,GETSTOR
         MVC   TIOATDL,=H'47'
         MVC   TREC(47),CHOK
         DFHTC TYPE=(WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         BAL   R7,TFREE
         CLI   PWCHANGE,X'FF'          IF HE HASNT TAKEN HIS LAST GO
         BE    CLEARED                     AT CHANGING P/WORD, REJECT
         B     SIGNEDON
B10      EQU   *                       GIVE WARNING OF FAILED SIGN ON
         LA    R1,FAIL1SZ                 ATTEMPTS
         STH   R1,TCASCNB
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         LA    R1,FAIL1SZ
         STH   R1,TIOATDL
         MVC   TREC(FAIL1SZ),FAILSCR1
         DFHTC TYPE=(ERASE,WRITE),CTLCHAR=C2
         MVC   TIME,C'2'               WRITE MESSAGE TO SYSLST           note 7
         BAL   R7,TRANSD                                                 note 7
         B     FINISH
C10      EQU   *                       CONTINUES TO GUESS PW, SO PUT
*                                         TERMINAL OUT OF SERVICE
         DFHFC TYPE=GETAREA,DATASET=V997,INITIMG=00,ERROR=DUMP
         L     FWACBAR,TCAFCAA         WRITE RECORD FOR FAILING TERM
         MVC   BBTERM,TCTTETI          PUT IN TERMINAL ID
         MVC   BBNAME,SNAME            PUT IN SAVED OPERATOR NAME
         MVC   BBDATE,CSAJYDP          TODAYS DATE
         DFHIC TYPE=GETIME,FORM=PACKED,TIMADR=BBTIME
         ST    FWACBAR,TCAFCAA
         DFHFC TYPE=PUT,RDIDADR=BBTERM,TYPOPER=NEWREC,ERROR=DUMP
         LA    R1,FAIL2SZ
         STH   R1,TCASCNB
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         LA    R1,FAIL2SZ
         STH   R1,TIOATDL
         MVC   TREC(FAIL2SZ),FAILSCR2
         DFHTC TYPE=(ERASE,WRITE),CTLCHAR=C2
         MVI   TIME,C'3'               WRITE MESSAGE TO SYSLST           note 7
         BAL   R7,TRANSD                                                 note 7
         B     FINISH
NODATA   EQU   *                       ON MAPFAIL (KEY ONLY, NO DATA)
         L     TIOABAR,TCTTEDA         WANT TO GET RID OF TIOA
         CLI   TCTTEAID,CLEAR          CLEAR IS VALID, SO LET THRU
         BE    CLEARED
         MVC   ERRSCR+9(20),=CL20'NOTHING ENTERED'
         B     SIGNERR
RECERR   EQU   *                       REC NOT FOUND, SO NAME ERROR
         MVC   TCASCSA,TCAFCAA
         BAL   R7,FREEST
         MVC   ERRSCR+9(20),=CL20'INVALID NAME'
SIGNERR  EQU   *                       WRITE SIGNON ERROR MESSAGE
         BAL   R7,TFREE
         MVC   TCASCNB,=H'29'
         BAL   R7,GETSTOR
         MVC   TIOATDL,=H'29'
         MVC   TREC(29),ERRSCR
         DFHTC TYPE=(WRITE,WAIT),CTLCHAR=C2
         B     START
LASTGO   EQU   *                       HE HASN'T CHANGED HIS PASSWORD
         MVI   SLASTGO,C'1'            SO SET LAST CHANCE (WILL BE
*                                          RESET IF HE CHANGES IT)
         MVI   PWCHANGE,X'FF'          STOPS SIGNED ON MESSAGE
         MVC   TCASCNB,=H'95'              SO WE WON'T LET HIM ON
         BAL   R7,GETSTOR                  (BUT TELL HIM FIRST)
         MVC   TIOATDL,=H'95'
         MVC   TREC(95),LASTGOSC
         DFHTC TYPE=(WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         BAL   R7,TFREE
         MVI   AIDBYTE,PF1             FORCE PF1 PROCESSING
         B     A40
TUFF     EQU   *                       HE HASN'T CHANGED HIS PASSWORD
         MVC   TCASCNB,=H'95'              SO WE WON'T LET HIM ON
         BAL   R7,GETSTOR                  (BUT TELL HIM FIRST)
         MVC   TIOATDL,=H'95'
         MVC   TREC(95),TUFFLUCK
         DFHTC TYPE=(WRITE,WAIT,READ),CTLCHAR=C2
         L     TIOABAR,TCTTEDA
         BAL   R7,TFREE
         B     CLEARED
CLEARED  EQU   *                       LOCAL NON-SNA TERMINALS REQUIRE
         MVC   TCASCNB,=H'1'              THIS CODE TO RESET KEYBOARD
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         MVC   TIOATDL,=H'1'
         MVI   TREC,C' '
         DFHTC TYPE=(ERASE,WRITE)
         B     FINISH
SIGNEDON EQU   *
         MVC   TCASCNB,=H'16'
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         MVC   TIOATDL,=H'16'
         MVC   TREC(16),=C'SIGN-ON COMPLETE'
         DFHTC TYPE=(ERASE,WRITE)
FINISH   DFHPC TYPE=RETURN
GETSTOR  EQU   *
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         BR    R7
GETUPD   EQU   *
*                                      THIS READ RESERVES THE RECORD,
*                                          AS THE PW WILL BE UPDATED
         DFHFC TYPE=GET,DATASET=V999,RDIDADR=VKEY,SRCHTYP=FKEQ,        *
               MODE=MOVE,TYPOPER=UPDATE,NOTFND=RECERR,ERROR=A80
         L     FWACBAR,TCAFCAA
         BR    R7
GETNOUP  EQU   *
         DFHFC TYPE=GET,DATASET=V999,RDIDADR=VKEY,SRCHTYP=FKEQ,        *
               MODE=MOVE,NOTFND=RECERR,NOTOPEN=TELLOP,ERROR=DUMP
         L     FWACBAR,TCAFCAA
         BR    R7
TELLOP   EQU   *
         MVC   TCASCNB,=H'38'
         DFHSC TYPE=GETMAIN,CLASS=TERMINAL,INITIMG=00
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         MVC   TIOATDL,=H'38'
         MVC   TREC(38),=C'SNT UNAVAILABLE - PLEASE CALL OPERATOR'
         DFHTC TYPE=(ERASE,WRITE)
         B     FINISH
TFREE    EQU   *                       * FREE TERMINAL STORAGE
         ST    TIOABAR,TCASCSA
FREEST   EQU   *
         DFHSC TYPE=FREEMAIN
         BR    R7
TRANSD   EQU   *                                                         note 7
         DFHSC TYPE=GETMAIN,CLASS=TRANSDATA,INITIMG=40,NUMBYTE=136          |
         L     TDOABAR,TCASCSA         WRITE MESSAGE TO CSML                |
         MVC   TDOAVRL,=H'136'                                              |
         XC    TDOAVRL+2(2),TDOAVRL+2                                       |
         MVC   TDDATA(97),CSMLMSG                                           |
         MVC   TDDATA+21(20),SNAME                                          |
         MVC   TDDATA+50(4),TCTTETI                                         |
         MVC   TDDATA+66(20),SUSERNAM                                       |
         CLI   TIME,C'1'                                                    |
         BE    *+24                                                         |
         MVC   TDDATA+88(28),CSMLMSG2                                       |
         CLI   TIME,C'2'                                                    |
         BE    *+10                                                         |
         MVC   TDDATA+88(34),CSMLMSG3                                       |
         DFHIC TYPE=GETIME,FORM=PACKED,TIMADR=PTIME                         |
         UNPK  TIME,PTIME                                                   |
         OI    TIME+7,X'F0'                                                 |
         MVC   TDDATA+7(2),TIME+1                                           |
         MVC   TDDATA+10(2),TIME+3                                          |
         MVC   TDDATA+13(2),TIME+5                                          |
*              NOTE THAT NO ERROR CHECKING IS DONE HERE, TO ENSURE          |
*              THAT USER LOGON IS NOT AFFECTED BY FAILURE OF THE            |
*              TRANSIENT DATA DESTINATION                                   |
         DFHTD TYPE=PUT,DESTID=CSML,TDADDR=TDOAVRL                          |
         ST    TDOABAR,TCASCSA                                              |
         B     FREEST                                                    note 7
DUMP     EQU   *                       * SYSTEM ERROR - DUMP
         MVC   SAVETCA,TCAKCRC         SAVE TCA RETURN CODE ERROR AS
*                                           DFHDC WILL OVERWRITE
         DFHDC TYPE=TRANSACTION,DMPCODE=SNP2
         B     FINISH
WORDCHK  EQU   *                       CHECK VALID PASSWORDS
         LA    R2,NORTYWDZ                                               note 9
NORTYNXT EQU   *
         CLI   0(R2),C'*'
         BER   R7
         CLC   0(4,R2),PW1               NAUGHTY WORD ?
         BER   R7
         LA    R2,4(R2)                CHECK NEXT WORD
         B     NORTYNXT
CHPWSCR  EQU   *
         SCFMT SF,PREG,SBA,(5,9)
         DC    C'SIGN-ON PASSWORDS ARE FOUR CHARACTERS LONG, AND SHOULD*
                BE'
         SCFMT SBA,(7,9)
         DC    C'ENTERED TWICE TO ENSURE THAT YOU MAKE NO TYPING MISTAK*
               ES,'
         SCFMT SBA,(9,9)
         DC    C'AS THE CHARACTERS YOU TYPE  WILL BE IN  NON-DISPLAY MO*
               DE.'
         SCFMT SBA,(11,9)
         DC    C'PLEASE ENTER YOUR NEW PASSWORD BY  TYPING IT IN THE SP*
               ACE'
         SCFMT SBA,(13,9)
         DC    C'INDICATED BELOW.   IN CASE OF ERROR, YOU WILL BE RETUR*
               NED'
         SCFMT SBA,(15,9)
         DC    C'TO THIS SCREEN.   IF YOU CHANGE YOUR MIND, JUST PRESS *
               THE'
         SCFMT SBA,(17,32),C'CLEAR KEY.'
         SCFMT SBA,(21,28),SF,VOFF,IC,C'    ',SF,PREG
         SCFMT SBA,(21,40),SF,VOFF,C'    ',SF,PREG
         SCFMT SBA,(22,28),SF,PREG,C'----'
         SCFMT SBA,(22,40),SF,PREG,C'----'
CHSIZE   EQU   *-CHPWSCR
CHOK     EQU   *
         SCFMT SBA,(24,14),SF,PRHI
         DC    C'CHANGE SUCCESSFUL, PRESS ENTER TO CONTINUE'
CHOKSZ   EQU   *-CHOK
LASTGOSC EQU   *
         SCFMT SBA,(8,7),SF,PRHI
LASTGOLN DC    CL58'** PASSWORD EXPIRED, PLEASE PRESS ANY KEY TO CHANGE*
                IT **'
         SCFMT SBA,(11,57),CL20' '
         SCFMT SBA,(11,57),SF,POFF
         SCFMT SBA,(11,22),IC
LASTGSZ  EQU   *-LASTGOSC
NOTUPSCR EQU   *
         SCFMT SBA,(8,7),SF,PRHI
NOTUPLIN DC    CL58'YOUR PASSWORD WILL EXPIRE IN XX DAYS, PLEASE CHANGE*
                IT'
         SCFMT SBA,(11,57),CL20' '
         SCFMT SBA,(11,57),SF,POFF
         SCFMT SBA,(11,22),IC
NOTUPSZ  EQU   *-NOTUPSCR
TUFFLUCK EQU   *
         SCFMT SBA,(8,7),SF,PRHI
TUFFMSG  DC    CL58'YOUR PASSWORD HAS EXPIRED - SYSTEM ACCESS HAS BEEN *
               DENIED'
         SCFMT SBA,(11,57),CL20' '
         SCFMT SBA,(11,57),SF,POFF
         SCFMT SBA,(11,22),IC
TUFFSZ   EQU   *-TUFFLUCK
FAILSCR1 EQU   *
         SCFMT SBA,(10,15),SF,PRHI
         DC    C'**** YOU ARE EXPERIENCING SIGN-ON PROBLEMS ****'
         SCFMT SBA,(12,14)
         DC    C'YOU ARE IN IMMINENT DANGER OF HAVING YOUR TERMINAL'
         SCFMT SBA,(13,14)
         DC    C'DISCONNECTED - PLEASE CONTACT INFORMATION SERVICES'
FAIL1SZ  EQU   *-FAILSCR1
FAILSCR2 EQU   *
         SCFMT SBA,(8,15),SF,PRHI
         DC    C'* * * * * * * * * * * * * * * * * * * * * * *'
         SCFMT SBA,(10,16)
         DC    C'YOUR LAST FIVE ATTEMPTS TO LOG ON HAVE FAILED'
         SCFMT SBA,(12,16)
         DC    C'ACCESS FROM THIS TERMINAL WILL NOW BE DENIED'
         SCFMT SBA,(14,16)
         DC    C'PLEASE CONTACT INFORMATION SERVICES'
         SCFMT SBA,(16,16)
         DC    C'* * * * * * * * * * * * * * * * * * * * * * *'
FAIL2SZ  EQU   *-FAILSCR2
ERRSCR   EQU   *
         SCFMT SBA,(11,22),IC
NOTUPSIZ EQU   *-NOTUPSCR
         SCFMT SBA,(11,57),SF,PRHI,C'                    '
ERRSIZE  EQU   *-ERRSCR
NAUGHTY  EQU   *
         SCFMT SF,PRHI
         DC    C'APART FROM THE OBVIOUS REASONS FOR NOT USING BAD LANGU*
               AGE,'
         SCFMT SBA,(3,2),C'YOU MAY BE UNAWARE, BUT IT DOES REPRESENT A *
               SERIOUS SECURITY RISK.'
         SCFMT SBA,(5,2),C'PLEASE BE MORE CIRCUMSPECT IN YOUR CHOICE OF*
                PASSWORD IN FUTURE.'
NORTYSZ  EQU   *-NAUGHTY
NORTYWDZ DC    C'    @@@@$$$$    %%%%&&&&(((())))####====¬¬¬¬++++????*'  note 9
MASK     DC    X'40202120'
CSMLMSG  DC    C'SNP2 - HH:MM:SS USER UUUUUUUUUUUUUUUUUUUU, TERMID TTTT*
               , USER NAME NNNNNNNNNNNNNNNNNNNN, SIGNED ON'
CSMLMSG2 DC    C'WARNING - 4 SIGN ON FAILURES'
CSMLMSG3 DC    C'5 FAILURES, TERMINAL ACCESS DENIED'
         LTORG
         END

The following notes refer to the code above as indicated.

1      This  code illustrates how to process a basic native mode
      3270 input data stream.  Here, the password is entered
      twice, and the two are compared.  Notice that there are
      three bytes preceding each field, consisting of an SBA
      order followed by the two-byte address of the field.

2      Notice that, although the record will be updated with at
      least the date the sign-on is taking place, the first read is
      for no update.  This is because there might be a delay due
      to a password typing error, which asks the user to enter the
      password again.  It should be remembered that when a
      VSAM record is read with update intent, the entire control
      interval containing that record is reserved.  In this case,
      that could result in other users being forced to wait to sign
      on while this user tries to remember his password.  SNP2,
      therefore, only reads the record for update immediately
      before changing the data and then updating it.  This does
      result in a slightly slower response due to the double
      reading of the record, but does prevent one user from
      denying access to other users whose sign-on records are
      stored in the same control interval.

3      This code unencrypts the password stored on file, and
      compares it  to the typed in password.  If not using
      encryption, replace this code with 'CLC   SM1PWI,VPW'.
      Purists will complain that the input password should be
      encrypted and then compared to the encrypted password on
      file. If you feel that you need this level of security, the
      encryption process can be copied from SNP3, which was
      described in part 2.

4      The two lines of code highlighted control the number of
      times a user is allowed to type in the wrong password
      before his terminal is denied access to the system.  The
      number in these lines indicates when the 'last chance'
      message is displayed.  If a further failed attempt to sign on
      occurs, the terminal is subsequently denied access.  To
      increase or decrease the number of allowed attempts,
      simply change the '4' to the required number.

5      Here we come to a useful little item of undocumented
      CICS code.  All CICS programmers will know that when a
      transaction is terminated, all storage GETMAINed by that
      transaction is returned to the DSA.  At this point in SNP2,
      it is necessary to create the terminal-oriented SNNT.  Since
      the user will soon be exiting the SNP2 transaction and
      doing real work instead, any storage area GETMAINed for
      the SNNT control block would be released as soon as
      SNP2 had returned control to CICS.  Obviously this is not
      satisfactory.  By using CLASS=CONTROL however, the
      storage area survives CICS storage releases, and must be
      deliberately released.  In this case, the release is performed
      by DFHSNP when exiting CICS via CSSF.  Obviously,
      since this control storage can only be released 'manually',
      extreme care should be taken over its use.  If it is your
      intention to convert these programs to command level,
      please refer to IBM's APAR PL48228, which documents
      the use of the EXEC CICS GETMAIN with the SHARED
      option, for the purposes of task to task communication.

6      The SNNT is initialized and the appropriate fields are filled
      in.  To ensure compatibility with older releases of CICS,
      the TCT security fields have also been filled in.  The
      storage area returned by the previous GETMAIN still
      points to the storage accounting area, so the address put
      into the TCTTESNT field has to be adjusted to start at the
      SNNT itself.  The length of the SNNT must also be put in.

7      CICS 1.7 running under VSE/SP Release 3 utilizes a
      number of destinations in the DCT, which interact with
      VSE's Interactive User Executive (IUE).  The destination
      CSML is set up for writing sign-on messages.  In order to
      ensure that all user sign ons are recorded, SNP2 writes a
      message detailing who has logged on to the system and on
      which terminal.  SNP2 will also record when the threshold
      number of failed sign-on attempts has been reached, both
      the warning message and the actual 'access denied'
      message.  The warning message is produced because
      experience shows that users often deny that  they ever saw
      a warning, so recording of the actual event can prove
      useful.  Using IUE, the (indirect) CSML destination is
      routed to the intrapartition destination IESL, which kicks
      off transaction IESX, which records the message and prints
      it to SYSLST using the SDSCI for MSGUSR.  If you
      prefer not to use the IUE, or it is not available on your
      version of CICS, simply define an intrapartition dataset,
      and an SDSCI for SYSLST.  Use either CSML or a
      destination name of your choosing (but remember to
      change it in SNP2 as well).

8      This code encrypts a changed password.  If not required,
      replace with 'MVC   SPW,PW1'.

9      The English language seems to have accumulated a large
      number of words which are four characters long, and have
      meanings best left out of the working environment.  At the
      end of the listing is a constant called NORTYWDZ, which
      contains a list of any four- lettered words you would prefer
      not to be used as passwords.  Have fun compiling your list.

Robin Lynch
Software Support Manager (UK)                    c Xephon/Reserved 1991

