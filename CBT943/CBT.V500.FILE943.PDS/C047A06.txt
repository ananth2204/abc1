DFHZNEP to clean up sign-offs in ACF2

INTRODUCTION

We are a site running an IBM 3083 JX, with MVS/XA 2.2, CICS
1.7 PUT8805, and ACF2 5.1, using both IBM dumb terminals
and IBM PS/2s emulated as 3270 terminals, operating in a VTAM
environment.

We use ACF2 as the security control software for our site in
protecting unauthorised users from signing on to a particular CICS
system.  Users must perform a sign-on through the ACF2/CICS
interface before they can invoke any transactions in any CICS
system.

THE PROBLEM

Many users have IBM PS/2s emulating 3270 terminals.  The
emulation software provides a facility which allows the user to
logically divide the available main memory of the PS/2 to run
both the emulation software plus another software package,
provided this software package can be loaded into the remaining
main memory.

Problems occur when the residual main memory cannot
accommodate a software package and the user just cancels his or
her 3270 emulation session without properly signing off from
CICS and as a result memory is not freed up.

When using this method to sign-off from CICS (we are using
NETMASTER by Cincom and auto-install for terminals in our
CICS system), CICS itself is able to delete the TCTTE that was
previously dynamically created.  However, ACF2 is not aware of
this situation and will continue to presume that this user is still
signed on to CICS.  This implies that when this particular user
tries to sign on to CICS again, ACF2 will return a message saying
that this user has already signed on to this CICS system.

A temporary solution to this problem is to issue the ACF2-
provided CICS transaction, ACFM, to explicitly sign off this user
from CICS, after which he or she can sign on to this CICS system
again.  As this transaction is protected from the ordinary user,
which makes it accessible only by the ACF2 administrator or the
security officer, it is quite inconvenient for both the users and the
security officer to perform this process repeatedly.

OUR SOLUTION

As it was found that the VTAM Node Error Program, DFHZNEP,
will be invoked every time CICS creates or terminates a session, I
wrote the following DFHZNEP to automate this process.  The
transaction, CSNE, will be invoked first and it will call the
VTAM Node Error Condition program, DFHZNAC.  DFHZNAC
will then link to the VTAM Node Error Program with the name
DFHZNEP.  The pertinent VTAM error code and other related
information is passed to DFHZNEP via the TWA.

This DFHZNEP will check for the CICS session termination
message, DFH3462I, before it performs its functions.  The
VTAM error code for this error is X'49' and the symbolic label in
the copybook is TCZCLSIN.  This error code will be passed to
DFHZNEP in the TWA.  If it is not invoked as a result of session
termination, it will bypass subsequent processing and return
control to DFHZNAC.

If this DFHZNEP is invoked at CICS session termination it will
then check for any acquired TCTUA in this TCTTE and, if found,
will free the storage.  The program will then GETMAIN some
storage as work area for the ACF2 ACFAEUCP DSECT (ACF2
user control block).

If the GETMAIN is successful, the program will set up the
corresponding values in the ACFAEUCP control block and link to
ACF2 to get the current signed-on user-id, if any.  If the returned
user-id is CICSDFT, no further action will be taken as this user-id
is the CICS default and implies that the user has signed off ACF2
completely.

On the other hand, if the returned user-id is not this CICS default,
the program will continue.  It will set up the values in the
ACFAEUCP control block and link to ACF2 for the actual sign-
off process for this user.  Next, the program will GETMAIN some
storage as work area for the message that will be output to an
extra-partition transient data queue.  The program will put the
user-id, the terminal-id, and the date and time that this incident
occurred to the transient data queue for statistical purposes.

This approach will automate the process of cleaning up
incomplete sign-offs in ACF2.  Furthermore, the program could
be modified to output the user-id, terminal-id, and any other
relevant information to an intra-partition data queue so as to
invoke transactions that will perform some application clean-up
process.  As such, the CICS system will not be so vulnerable to
communication errors and a more resilient CICS environment can
be delivered to users.

         TITLE 'ZNEP TO CLEAN UP INCOMPLETE SIGNOFF IN ACF2'
***********************************************************************
*  SOURCE NAME = DFHZNEP                                              *
*  DESCRIPTIVE NAME = C.I.C.S./VS CUSTOMISED NODE ERROR PROGRAM       *
*  STATUS = 1.7.0                                                     *
*  FUNCTION = THE NODE ERROR PROGRAM IS THE USERS INTERFACE   @BA54934*
*             FOR HANDLING ERROR CONDITIONS FOR DEVICES       @BA54934*
*             WHICH OPERATE IN A VTAM ENVIRONMENT             @BA54934*
***********************************************************************
*  THIS ZNEP BASED ON THE CICS SUPPLIED DUMMY (VTAM) NODE ERROR       *
*  PROGRAM (DFHZNEP).                                                 *
*  IT WILL BE INVOKED AT CICS SESSION TERMINATION WHEN THE FOLLOWING  *
*  'ERROR' CODE IS ISSUED BY CICS AND PASSED TO IT BY DFHZNAC:        *
*    ERROR MSG=DFH3462I   ERROR CODE=X'49'   SYM. LABEL=TCZCLSIN      *
*  AND IT WILL PERFORM THE FOLLOWING FUNCTIONS :                      *
*    1. CHECK FOR ANY ACQUIRED TCTUA IN THE TCTTE PASSED FROM         *
*       DFHZNAC AND IF FOUND. IT WILL BLANK OUT THE AREA AND THE      *
*       CORRESPONDING ADDRESS POINTER IN THE TCTTE TO AVOID ANY       *
*       'STORAGE VIOLATION' PROBLEM                                   *
*    2. LINK TO ACF2 TO GET THE CURRENT SIGNED-ON USER'S INFO         *
*    3. CHECK FOR ANY VALID USERID RETURNED AND IF FOUND IT WILL      *
*       LINK TO ACF2 TO PERFORM THE 'INCOMPLETE' SIGNOFF FUNCTION     *
*       FOR THAT USER                                                 *
*    4. RECORD THE USERID, TERMINAL NAME, DATE AND TIME FOR THE       *
*       ABOVE ACTION IN AN EXTRA-PARTITION TRANSIENT DATA QUEUE FOR   *
*       THE RECORDING OF RELEVANT STATISTICS                          *
***********************************************************************
DFHZNEP  CSECT                                                 @BA54934
*        ORDER OF DSECTS IS CRITICAL - TCA/TWA IS DEPENDANT    @BA54934
*        ON DEFINITIONS IN TCTTE AND RPL                       @BA54934
         DFHPRINT  DSCT=START                                  @BA54934
         DFHTCPSV DSECT=(CSA,TCTTE,RPL,TCA),                           *
               SAVE=NO,BASE=NO                                 @BA54934
         DFHPRINT  DSCT=END                                    @BA54934
**  DSECT FOR THE EXTRA-P TDQ DATA AREA
TDOABAR  EQU   6
         COPY  DFHTDOA
USERID   DS    CL8                 ACF2 LID
TERMID   DS    CL4                 TERMINAL ID
JULDATE  DS    CL7                 JULIAN DATE IN OOYYDDD
TIMEOD   DS    CL7                 TIME-OF-DAY IN HHMMSST
** DSECT FOR THE TCTUA
TCTEXT   DSECT
TCTEXT1  DS    0XL70
TDATE    DS    PL4                 EFFECTIVE DATE
TCOID    DS    XL2                 COMPANY NUMBER
TFILL0   DS    CL2                 ....... FILLER .......
TPEM     DS    CL8                 ON-LINE PEM LOAD MODULE
TFILL1   DS    CL16                ....... FILLER .......
TABEND   DS    XL1                 SMART 'ON' OR 'OFF'
TDVC     DS    CL1                 DEVICE SUFFIX
TACTR    DS    H                   MAXIMUM ACTIVITY COUNT
TFILL2   DS    CL34                ....... FILLER .......
TLEN     EQU   *-TCTEXT
*
DFHZNEP  CSECT                                                 @BA54934
***********************************************************************
*ADDITIONAL REGISTER EQUATES (TO THOSE BROUGHT IN BY DFHTCPSV)@BA54934*
***********************************************************************
BASEREG  EQU   5                   BASE REGISTER               @BA54934
         DFHVM ZNEP                                            @BA54934
         ENTRY DFHZNENA                                        @BA54934
DFHZNENA DS    0H                                              @BA54934
         BALR  BASEREG,0           ESTABLISH BASE REG.         @BA54934
         USING *,BASEREG           BASE REGISTER               @BA54934
**  CHECK THE 'ERROR CODE' IN TWAEC PASSED FROM DFHZNAC
CHKSEND  CLI   TWAEC,TCZCLSIN      Q CHECK FOR SESSION TERM. = X'49'
         BNE   ORGZNEP              A NO, THEN GO TO ORIGINAL ZNEP CODE
*                                     YES, THEN CHECK TCTUA EXISTENCE
         L     R9,TCTTECIA         GET A(TCTUA)
         USING TCTEXT,R9
         LTR   R9,R9               Q ANY TCTUA ?
         BZ    GETM                 A NO, THEN BYPASS BLANKING OF TCTUA
BLKFLD   DS    0H
         MVC   TCTEXT1,=XL70'00'        REINIT TCTUA TO HEX ZERO
         MVC   TCTTECIA,=X'00000000'    ZERO OUT TCTUA ADDR
*   GETMAIN STORAGE FOR THE ACF2 ACFAEUCP PARM LIST
         USING DFHTCADS,R12            ADDRESS TWA/TCA
GETM     DS    0H
         DFHSC TYPE=GETMAIN,                                           C
               INITIMG=00,                                             C
               NUMBYTE=UCPEND-ACFAEUCP.                                C
               COND=YES,                                               C
               CLASS=USER
         L     R7,TCASCSA              ADDRESS UCP STORAGE
         CLC   TCASCSA,=F'0'           Q  STORAGE AVAILABLE?
         BE    ORGZNEP                  A NO, BRANCH TO ORIGINAL CODE
         LA    R7,8(R7)                BUMP PAST STORAGE ACCTNG
         USING ACFAEUCP,R7
**   LINK TO ACF2 TO OBTAIN THE INFO FOR A SIGNED-ON USER (CURRENT)
         MVI   UCPTYP,UCPTYPP         SETUP UCPTYP, INDICATE ACX REQ.
         MVI   UCPREQB,UCPINQ         SETUP UCPINQ, USER INQUIRY
         MVC   UCPFCAAA,TWATCTA       MOVE A(TCTTE) IN TWATCTA
         LA    R1,ACFAEUCP            R1 POINTS TO UCP FOR LINK
         DFHPC TYPE=LINK,PROGRAM=ACFAEUCM
**  CHECK IF RETURNED USERID = 'CICSDFT '
*    IF EQUAL, THEN NO NEED TO PERFORM ANY USER SIGN-OFF FUNCTION
*              AS USER HAS ALREADY SIGNED OFF ACF2 PROPERLY
         CLC   UCPLID,CICSDLID        Q  ANY VALID USER SIGNED ON ?
         BE    GOBACK                  A NO. GOBACK
**  SIGN OFF USER FROM ACF2
         LA    R1,ACFAEUCP            R1 POINTS TO UCP FOR LINK
         MVI   UCPTYP,UCPTYPP         SETUP UCPTYP
         MVI   UCPREQB,UCPCOFF        SETUP UCPREQB FOR SIGNOFF
         MVC   UCPFCAAA,TWATCTA       A(TCTTE) IN TWATCTA
         OI    UCPREQM,UCPREQM8       IGNORE MSG ACFAE130
         DFHPC TYPE=LINK,PROGRAM=ACFAEUCM,COND=YES    LINK TO ACF2
**  GETMAIN STORAGE FOR THE EXTRA-P TRANSIENT DATA QUEUE
GETMTD   DFHSC TYPE=GETMAIN,                                           C
               INITIMG=00,                                             C
               NUMBYTE=30,            LENGTH= 26 + 4                   C
               CLASS=TRANSDATA
         L     TDOABAR,TCASCSA        ADDRESS NEW AREA
         USING DFHTDOA,R6
         MVC   TDOAVRL,LENGTH         LOAD DATA LENGTH
         MVC   TCATDDI,=C'NEPQ'       MOVE DESTINATION OF TDQ
         MVC   USERID,UCPLID          MOVE USERID RETURNED BY ACF2
         MVC   TERMID,TWANID          MOVE TERMINAL NAME FROM DFHZNAC
         UNPK  JULDATE(7),CSAJYDP(4)  UNPACK JULIAN DATE IN CSA
         OI    JULDATE+6,X'F0'        CORRECT THE ZONE FOR DISPLAY
         UNPK  TIMEOD(7),CSATODP(4)   UNPACK TIME-OF-DAY IN CSA
         OI    TIMEOD+6,X'F0'         CORRECT THE ZONE FOR DISPLAY
**  PUT RECORD INTO TDQ
         DFHTD TYPE=PUT,                                               C
               TDADDR=TDOAVRL,                                         C
               NORESP=GOBACK,                                          C
               IOERROR=SNDERR1,                                        C
               IDERROR=SNDERR2,                                        C
               NOTOPEN=SNDERR3,                                        C
               NOSPACE=SNDERR4
         DROP  R6
**  SEND CORRESPONDING ERROR MSG TO SYSTEM CONSOLE INDICATING THE TYPE
*   OF ERROR ENCOUNTERED DURING THE OUTPUT TDQ ACTION
SNDERR1  WTO   '*** CICSD5 ** ZNEP ERROR -  IOERROR  *** ',ROUTCDE=1
         B     GOBACK
SNDERR2  WTO   '*** CICSD5 ** ZNEP ERROR -  IDERROR  *** ',ROUTCDE=1
         B     GOBACK
SNDERR3  WTO   '*** CICSD5 ** ZNEP ERROR -  NOTOPEN  *** ',ROUTCDE=1
         B     GOBACK
SNDERR4  WTO   '*** CICSD5 ** ZNEP ERROR -  NOSPACE  *** ',ROUTCDE=1
         B     GOBACK
GOBACK   DS    0H
         S     R7,=F'8'            REVERSE BUMP PAST STOR ACCTNG
         ST    R7,TCASCSA          PRIME FOR FREEMAIN
         DFHSC TYPE=FREEMAIN       FREE UCP BLOCK
**  ORIGINAL CODES OF THE CICS SUPPLIED DUMMY VTAM NODE ERROR PROGRAM
ORGZNEP  DS    0H
         CLI   TWAEC,TCZSRCSP      VTAM STORAGE PROB.ERROR CODE        *
                                   IN REAL TCTTE ?             @BA54934
         BNE   NEPOAF              NO,SET UP MANDATORY ACTIONS @BA54934
         OI    TWAOPT1,TWAOTCTE    PRINT TCTTE PLEASE          @BA54934
NEPOAF   DS    0H                                              @BA54934
         DFHPC TYPE=RETURN         RETURN TO NACP              @BA54934
CICSDLID DC    C'CICSDFT '
LENGTH   DC    AL2(L'DEFAULT+4)
DEFAULT  DC    C'CICSDFT 200100890012401010'
         LTORG                                                 @BA54934
         ACFAEUCP DSECT=YES
         DFHEND DFHZNENA                                       @BA54934


Raymond Yip
Senior Systems Programmer
Standard Chartered Bank (Hong Kong) ) Standard Chartered Bank 1989


