 IMS database information display
The following program will display some key information about an IMS database.
Figure 1 shows an example of a typical screen display.  Execute the transaction
by entering DBIN xxxxxxxx - where xxxxxxxx is the name of the database to be
displayed.  Our system is MVS/SP, IMS 2.2, and CICS 1.7.  This program should
also work with IMS 1.3.  All of our databases use VSAM for their access method.
We have secondary indexes but no logical relationships.  You will need the CICS
MACLIB and the IMS GENLIBB concatenated in your SYSLIB during assembly as there
are some macros pulled from these libraries.  This program is useful for making
sure that the ACB parameters in the CICS region agree with the actual DBD,
especially after making a change to a database and performing an ACBGEN.
DFHEISTG DSECT
SCREEN   DS    CL1920
DBLINE   DS    0CL80
         DS    CL10
DBTYPE   DS    CL2
         DS    CL3
DBRAPS   DS    CL4
         DS    CL3
DBHIBLK  DS    CL8
         DS    CL2
DBCISZ   DS    CL6
         DS    CL4
DBRMD    DS    CL8
         DS    CL30
SEGLINE  DS    0CL80
SEGNAME  DS    CL8
         DS    CL4
SEGLVL   DS    CL4
         DS    CL5
SEGCODE  DS    CL4
         DS    CL6
SEGLEN1  DS    CL6
         DS    CL1
SEGDASH  DS    CL1
         DS    CL1
SEGLEN2  DS    CL6
         DS    CL3
SEGKEY   DS    CL8
         DS    CL2
SEGKOF   DS    CL4
         DS    CL2
SEGKLN   DS    CL4
         DS    CL24
DWRK     DS    D
DATIN    DS    0CL13
         DS    CL5
DB       DS    CL8
LENIN    DS    H
CSAPTR   EQU   8           REG(8) - ADDRESS OF CSA
SJHDBIN  CSECT
         EXEC CICS IGNORE CONDITION LENGERR
         MVC   LENIN,=H'+13'
         MVC   DB,LINESP
         EXEC CICS RECEIVE INTO(DATIN) LENGTH(LENIN)
         LA    R10,SCREEN             BEGINNING OF SCREEN
         LA    R11,SCREEN+1920        END OF SCREEN
         MVC   0(80,R10),LINE1        MOVE HEADING LINE 1
         MVC   SCREEN+5(8),DB         MOVE DATABASE NAME TO SCREEN
         LA    R10,80(R10)
         MVC   0(80,R10),LINE2        MOVE HEADING LINE 2
         LA    R10,80(R10)
         USING DFHCSADS,CSAPTR
         EXEC CICS ADDRESS CSA(CSAPTR)
         USING CSAOPFL,R7
         L     R7,CSAOPFLA
          DROP  R8               DON'T NEED CSA ANYMORE
         USING DFHDLPDS,R2
         L     R2,CSADLI        LOAD CICS/DLI INTERFACE ADDR
         DROP  R7               DON'T NEED CSAOPFL ANYMORE
         USING DDIR,R4
         L     R4,DLPDDIR       LOAD ADDR OF DMB DIRECTORY
         DROP  R2
LBL50    CLC   DDIRSYM,DB       FIND DB NAME IN CICS DMB DIRECTORY
         BE    LBL60            BRANCH IF FOUND
         CLC   DDIRDDPT,=F'0'   IS THIS THE LAST ENTRY?
         BE    NOTFND           YES, DB NAME WAS NOT IN DMB DIRECTORY
         L     R4,DDIRDDPT      BUMP TO NEXT ENTRY
         B     LBL50
LBL60    CLC   DDIRADDR,=F'0'         IS DMB ADDR = 0 ?
         BNE   LBL100                 NO. DATABASE IS OPEN
         MVC   DBLINE(6),=C'CLOSED'
         MVC   0(80,R10),DBLINE
         B     SEND
LBL100   USING DMB,R5
         L     R5,DDIRADDR      LOAD ADDR OF DMB
         DROP  R4               DON'T NEED DMB DIRECTORY ANYMORE
         USING DMBAMP,R7
         LR    R7,R5            LOAD ADDR OF DMB IN R7
         LA    R7,DMBPPRLN(R7)  ADD DMB HEAD LENGTH
         LA    R7,DMBDCBLN(R7)  ADD PREFIX TO ACC METH PREFX LENGTH
* FOR SOME UNKNOWN REASON, THE CI SIZE WILL OCCASIONALLY BE ZERO
         SR    R6,R6            CLEAR REG 6
         CLC   DMBPFDDP,=F'0'   IS PRIME DB NAME = 0
         BE    LBL120           YES, USE OFLOW CI SIZE
         LH    R6,DMBPFPBK      USE PRIME CI SIZE
         B     LBL125
LBL120   LH    R6,DMBPFOBK      USE OFLOW CI SIZE
LBL125   CVD   R6,DWRK          CONVERT OF PACKED
         MVC   DBCISZ,EDFLD2    MOVE EDIT FIELD
         ED    DBCISZ,DWRK+5    MOVE DATA
         DROP  R7             DON'T NEED ACCESS METHOD PREFIX ANYMORE
         CLI   DMBORG,DMBVHD   IS IT HDAM ?
         BE    LBL150           YES, CONTINUE
         CLI   DMBORG,DMBVHI   IS IT HIDAM
         BNE   LBL140           NO, CHECK ANOTHER TYPE
         MVC   DBTYPE,=C'HI'
         B     LBL300
LBL140   CLI   DMBORG,DMBVINSS   IS IT AN INDEX ?
         BNE   LBL300             NO, CONTINUE ON
         MVC   DBTYPE,=C'IN'
         B     LBL300
* THE FOLLOWING ROUTINE FOR HDAM ONLY
LBL150   MVC   DBTYPE,=C'HD'
         USING DMBDACS,R7
         L     R7,DMBDALGR      ADDR OF HDAM STUFF
         SR    R6,R6            CLEAR REG 6
         LH    R6,DMBDARAP       RAPS
         CVD   R6,DWRK           CONVERT TO PACKED
         MVC   DBRAPS,EDFLD1     MOVE EDIT FIELD
         ED    DBRAPS,DWRK+6     MOVE DATA
         SR    R6,R6            CLEAR REG 6
         L     R6,DMBDABLK       HIGH BLOCK
         CVD   R6,DWRK
         MVC   DBHIBLK,EDFLD3
         ED    DBHIBLK,DWRK+4
         MVC   DBRMD,DMBDANME         RANDOMIZER NAME
         DROP  R7            DON'T NEED HDAM STUFF ANYMORE
LBL300   MVC   0(80,R10),DBLINE    MOVE DATABASE INFO TO SCREEN LINE
         LA    R10,80(R10)
         MVC   0(80,R10),LINESP    LINE OF SPACES
         LA    R10,80(R10)
          MVC   0(80,R10),LINE3     SEGMENT HEAD 1
         LA    R10,80(R10)
         MVC   0(80,R10),LINE4     SEGMENT HEAD 2
         LA    R10,80(R10)
         USING SDB,R7
         USING DMBPSDB,R8
         USING FDB,R4
         LR    R8,R5               PUT ADDR OF DMB IN REG 8
         LR    R9,R5               PUT ADDR OF DMB IN REG 9
         AH    R8,DMBLENTB         ADD OFFSET TO 1ST PSDB
         AH    R9,DMBSECTB         ADD OFFSET TO LAST PSDB
LBL400   MVC   SEGLINE,LINESP       BLANK OUT SEG LINE
         L     R7,DMBFSDB      ADDR OF FIRST SDB FOR THIS SEG
         SR    R6,R6           CLEAR REG 6
         LH    R6,DMBDL         SEGMENT LENGTH OR MAX. SEG LENGTH
         CVD   R6,DWRK
         MVC   SEGLEN2,EDFLD2
         ED    SEGLEN2,DWRK+5
         TM    DMBVLDFG,DMBVLS   TEST FOR VARIABLE LENG SEG
         BZ    LBL410            NO
         MVI   SEGDASH,C'-'     DASH TO SEPARATE MIN & MAX LENGTH
         SR    R6,R6           CLEAR REG 6
         LH    R6,DMBSGMN       MIN. SEG. LENGTH
         CVD   R6,DWRK
         MVC   SEGLEN1,EDFLD2
         ED    SEGLEN1,DWRK+5
LBL410   SR    R6,R6           CLEAR REG 6
         IC    R6,DMBLEV       SEGMENT LEVEL
         CVD   R6,DWRK
         MVC   SEGLVL,EDFLD1
         ED    SEGLVL,DWRK+6
         SR    R6,R6           CLEAR REG 6
         IC    R6,DMBSC        SEGMENT CODE
         CVD   R6,DWRK
         MVC   SEGCODE,EDFLD1
         ED    SEGCODE,DWRK+6
         L     R4,DMBFDBA        LOAD ADDR OF SEGMENT FIELDS
         TM    FDBDCENF,FDBKEY   IS 1ST FIELD A KEY
         BZ    LBL450            ....NO
         MVC   SEGKEY,FDBSYMBL   SEGMENT KEY NAME
         SR    R6,R6           CLEAR REG 6
         LH    R6,FDBOFFST       SEGMENT KEY OFFSET IN SEGMENT
         CVD   R6,DWRK
         AP    DWRK,=P'1'         OFFSET IS FROM ZERO SO ADD 1
         MVC   SEGKOF,EDFLD1
         ED    SEGKOF,DWRK+6
         SR    R6,R6           CLEAR REG 6
         IC    R6,FDBFLENG       SEGMENT KEY LENGTH
         CVD   R6,DWRK
         AP    DWRK,=P'1'        LENGTH IS FROM ZERO SO ADD 1
         MVC   SEGKLN,EDFLD1
         ED    SEGKLN,DWRK+6
* SEARCH THROUGH SDB'S LOOKING FOR SEGMENT NAME
* OCCASIONALLY THE SEGMENT NAME WILL NOT EXIST IN ANY OF THE SDB'S
LBL450   CLC   SDBSYM,=D'0'     IS SEGMENT NAME BINARY ZEROS
         BNE   LBL500           NO... MUST BE SEGMENT NAME
         CLC   SDBNSDB,=F'0'    IS THIS THE LAST SDB
         BE    LBL510           YES... SEGMENT NAME NOT AVAILABLE
         L     R7,SDBNSDB       POINT TO NEXT SDB
         B     LBL450           TRY AGAIN
LBL500   MVC   SEGNAME,SDBSYM   MOVE SEGMENT NAME
LBL510   MVC   0(80,R10),SEGLINE    MOVE SEGMENT LINE TO SCREEN
         LA    R10,80(R10)
         CR    R10,R11          HAVE WE REACHED THE SCREEN SIZE
         BNL   SEND             YES, SEND SCREEN
         LA    R8,DMBPLEN(R8)    ADD LENGTH OF ONE ENTRY
          CR    R8,R9             HAVE WE PROCESSED THE LAST ENTRY?
         BL    LBL400            NO... PROCESS NEXT ENTRY
         B     SEND              ALL DONE
NOTFND   MVC   DBLINE(23),=C'DATABASE DOES NOT EXIST'
         MVC   0(80,R10),DBLINE
         B     SEND
SEND     EXEC CICS SEND TEXT FROM(SCREEN) LENGTH(LEN) FREEKB ERASE    X
               NOEDIT
EXIT     EXEC CICS RETURN
         DS    0H
EDFLD1   DC    X'40202020'
EDFLD2   DC    X'402020202020'
EDFLD3   DC    X'4020202020202020'
LEN      DC    H'1920'
LINE1    DC    CL80'DBIN                         DATABASE INFORMATION'
LINE2    DC    CL80'         TYPE   RAPS      HI BLK   CI SZ   RNDMZR'
LINE3    DC    CL80'                              SEGMENT INFORMATION'
LINE4    DC    CL80'NAME          LVL      CODE           LENGTH   KEX
               Y NAME   START LENGTH'
LINESP   DC    CL80' '
         COPY  DFHCSADS
         DFHDLP DLP=Y
         IDLI  DDRBASE=0
         IDLI  DMBBASE=0
         IDLI  SDBBASE=0
         IDLI  FDBBASE=0
         END


Richard Durkee
Systems Programmer
St Joseph Hospital (USA)      ) Xephon 1988


































