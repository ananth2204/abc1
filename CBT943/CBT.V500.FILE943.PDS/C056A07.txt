CICS PLT processor

THE PROBLEM

When the number of CICS regions we had to maintain started
reaching the high 20s I started taking a serious look at the
number of CICS tables I had to maintain and the time it took to
maintain them.  The picture wasn't pretty.  I could (and did)
condense most of the tables down to one table for all regions.
That eliminated over 20 DCTs, JCTs, and SITs; and a few
others.  I found myself left with the FCTs, which I didn't have
much choice about; and the PLTs, which I really wanted to get
rid of, but we couldn't do without them.

THE SOLUTION

Someone once told me that if you want something badly
enough, you can find a way.  He was obviously an optimist.
However, in this case he was absolutely correct.  The solution
is a relatively small program which has saved me hours (if not
days) of work over the past few months.  One of the side
benefits is that, with a HANDLE CONDITION and HANDLE
ABEND, I can avoid some messages that require operator
response (always a plus) and some CICS abends when a
program abends or is not to be found.

The names of the programs to be executed during PLT
processing reside in a PDS, which is defined as an extra-
partition transient data queue.  The CICS start-up procedure
contains a variable by which I identify the name of the CICS
region, which also happens to be the name of the PDS member
containing the program names.  A DD statement in the CICS
start-up procedure points to the dataset and member for a given
region.  A PPT entry is also required.

The PDS member contains entries for both the start-up and
shut-down PLTs.  Any line containing plus signs (+) in
columns 1 to 8 is treated as a comment.  During start-up PLT
processing, the first line containing asterisks (*) in columns 1
to 8, or the end of the member, terminates start-up PLT
processing.  Columns 9 to 80 can be used for comments, or
could contain information to be passed to the program in a
COMMAREA.  Stage one shut-down PLT processing begins
where start-up PLT processing left off and operates under the
same rules.  Stage two shut-down PLT processing begins
where stage one left off, and also operates under these rules.
This is all accomplished with a single program.

DCT ENTRIES

The DCT entries for this process look like this:

         DFHDCT TYPE=EXTRA,                                       X
               DESTID=PLTI,                                       X
               DSCNAME=CICSPLT
         DFHDCT TYPE=SDSCI,                                       X
               DSCNAME=CICSPLT,                                   X
               BUFNO=1,                                           X
               RECSIZE=80,                                        X
               TYPEFLE=INPUT

PLT ENTRIES

The PLTs look like this:

         TITLE 'CICS 2.1 PLT FOR STARTUP OF CICS REGIONS'
         DFHPLT TYPE=INITIAL,SUFFIX=P1
         DFHPLT TYPE=ENTRY,PROGRAM=CICSPLTM
         DFHPLT TYPE=FINAL
         END

         TITLE 'CICS 2.1 PLT FOR SHUTDOWN OF CICS REGIONS'
         DFHPLT TYPE=INITIAL,SUFFIX=P2
         DFHPLT TYPE=ENTRY,PROGRAM=CICSPLTM     PHASE 1
         DFHPLT TYPE=ENTRY,PROGRAM=DFHDELIM
         DFHPLT TYPE=ENTRY,PROGRAM=CICSPLTM     PHASE 2
         DFHPLT TYPE=FINAL
         END

PDS MEMBER

This is what the contents of one of the PDS members looks
like.  Take my word for it, it's much easier and more
convenient to edit a PDS than it is to change a PLT and
assemble it.

   ++++++++        STARTUP PLT ENTRIES FOLLOW THIS CARD
   XTCAMAIN
   GTABHLP
   DSNCCOM1
   ********        SHUTDOWN PLT ENTRIES FOR STAGE ONE FOLLOW THIS CARD
   DSNCCOM1
   XTCAMAIN
   ********        SHUTDOWN PLT ENTRIES FOR STAGE TWO FOLLOW THIS CARD

If a region had no PLT requirements, the member would
contain only the lines with plus signs (+) and asterisks (*) in
columns 1 to 8.

THE PROGRAM

The program is a command-level Assembler program running
under CICS 2.1 in an MVS/ESA environment.  I would
imagine it would do as well (perhaps with minor changes) in
other releases of CICS.

*ASM XOPTS(CICS)
         TITLE 'CICS/PLT MANAGER'
*** PROGRAM     : CICSPLTM                                       ***
*   DESCRIPTION : THIS PROGRAM IS EXECUTED FROM THE PLT AND READS  *
*                 CONTROL CARDS FROM THE TRANSIENT DATA DEST       *
*                 PLTI.  THESE CONTROL CARDS CONSIST OF PROGRAM    *
*                 NAMES IN CC 1 - 8.  THESE PROGRAMS ARE THEN      *
*                 EXECUTED, WITH CONTROL RETURNING TO THIS         *
***               PROGRAM.                                       ***
DFHEISTG DSECT
PLTPROG  DS    0CL80
PROGRAM  DS    CL08
         DS    CL72
LEN      DS    H
PLTMSG   DS    CL80
CICSPLTM CSECT
         EXEC  CICS HANDLE CONDITION LENGERR
         EXEC  CICS HANDLE CONDITION PGMIDERR(PLTNFND)
         EXEC  CICS HANDLE CONDITION QZERO(PLTEND)
         EXEC  CICS HANDLE ABEND LABEL(PLTABEND)
PLTREAD  DS    0H
         EXEC  CICS READQ TD QUEUE('PLTI') INTO(PLTPROG)
         CLC   PROGRAM,=CL08'++++++++'
         BE    PLTREAD
         CLC   PROGRAM,=CL08'********'
         BE    PLTEND
         MVC   PLTMSG(08),=CL08'CICSPLTM'
         MVC   PLTMSG+09(08),PROGRAM
         MVC   LEN,=H'80'
         MVC   PLTMSG+18(62),=CL62'BEING LINKED TO'
         EXEC  CICS WRITEQ TD QUEUE('CSMT') FROM(PLTMSG) LENGTH(LEN)
         EXEC  CICS LINK PROGRAM(PROGRAM)
         MVC   LEN,=H'80'
         MVC   PLTMSG+18(62),=CL62'SUCCESSFULLY EXECUTED'
         EXEC  CICS WRITEQ TD QUEUE('CSMT') FROM(PLTMSG) LENGTH(LEN)
         B     PLTREAD
PLTNFND  DS    0H
         MVC   LEN,=H'80'
         MVC   PLTPROG+18(62),=CL62'PROGRAM NOTFOUND/NOT IN PPT'
         EXEC  CICS WRITEQ TD QUEUE('CSMT') FROM(PLTMSG) LENGTH(LEN)
         B     PLTREAD
PLTABEND DS    0H
         MVC   LEN,=H'80'
         MVC   PLTPROG+18(62),=CL62'PROGRAM ABENDED'
         EXEC  CICS WRITEQ TD QUEUE('CSMT') FROM(PLTMSG) LENGTH(LEN)
         B     PLTREAD
PLTEND   DS    0H
         EXEC  CICS RETURN
         LTORG
         END


Michael E Davis
CICS Systems Programmer
Information Systems of America (USA)                    ) Xephon 1990


