Remote procedure calls in CICS

We use an IBM 3090 running MVS/XA, with a number of
CICS 1.7 regions in MRO complexes.  Generally each CICS
region supports one business function.

We needed to link into an electronic mail package, which runs
in one CICS region, from a number of other CICS systems.
The functions that we required from the package were file
enquiry and update.  While there are a number of ways to do
this, we chose to use a remote procedure method, along similar
lines to that in distributed operating systems, using a stub to
communicate from the requestor's CICS region to a stub in the
server's CICS region.  The stub consists of a single program
that acts as the front-end and back-end of a LU6.2 session
fulfilling the requestor and server functions.

It uses a COMMAREA to transmit data to and from requestor
and server programs.  It gets the target system and program
names from a header in the COMMAREA.  It tests whether the
system is the local system, in which case it simply links to the
named program with the COMMAREA minus the header.  If it
is a remote system, it checks that the connection is in service
etc and then it connects to the remote process.  The remote
process then checks the validity of the named program.

Storage is also acquired at this stage for the data, using the
length of the COMMAREA as supplied in the header minus 18
bytes for the header.  A return code is sent back to
communicate success or failure.  The local stub will begin to
pass the COMMAREA to the remote stub, 2048 bytes at a
time.  When the remote stub has received all of the data, it
links to the named server program with the COMMAREA.
When the remote server routine completes, the modified
COMMAREA is passed back to the local stub and the remote
stub closes down.  The local stub then modifies its calling
COMMAREA with this data and returns control to the
requestor.

Here are some considerations:

1      As the primary facility of the server in the remote region is
      the LU6.2 connection, the server routine cannot do screen I/O.

2      The remote transaction name is coded into the program,
      but this could be passed as a part of the COMMAREA header.

3      The remote transaction must be defined to the remote CICS
      system.

4      The stub program must be defined to both the local and the
      remote CICS systems.

5      The connections that are used must be LU6.2.

6      The path to be followed must be known at the time of
      linking into this system.

7      The remote server does not have to reside in the adjacent
      CICS region as this system could daisy-chain through
      CICS regions to reach its target system as long as the entire
      path is known and in each intermediate system the remote
      server that is started is the stub program.  (The
      COMMAREA would have to be nested for this to work.)
      Another method would be to define connections to systems
      using intermediate CICS regions.

8      The header could be expanded to hold a description of the
      failure rather than a return code.

The COMMAREA header has the following fields:

o      SYSIDNT (bytes 1-4) - this identifies the target system.

o      PROGID (bytes 5-12) - this is the remote
      procedure/program name.

o      RETNCDE (bytes 13-16) - this is a decimal return code.

o      COMLEN (bytes 17-18) - this is the COMMAREA length
      inclusive of the header.

******************************************************
* DESCRIPTION: DO A TYPE OF REMOTE LINK              *
* THIS PROGRAM WILL START UP A TASK IN A DISTANT     *
* REGION. THE TASK WILL BE ANOTHER INVOCATION OF THIS*
* PROGRAM WHICH WILL LINK TO THE SPECIFIED PROGRAM   *
* WITH THE DATA AS PASSED IN THE COMMAREA            *
******************************************************
CODEREG   EQU   3
IEBREG    EQU   11
DATAREG   EQU   13
FROMAREA  DSECT
FROMSTUF  DS    CL1
          ORG
COMSAREA  DSECT
          DS    0F
COMHDR    DS    CL18
          ORG   COMHDR
SYSIDNT   DS    CL4         THIS IS THE SYSIDNT
PROGID    DS    CL8         THIS IS THE REMOTE PROGRAM TO BE STARTED
RETNCDE   DS    CL4         THE ABEND CODE TO BE RETURNED TO PARTNER
COMLEN    DS    H           THIS IS THE LENGTH OF THE COMMAREA
CMMAREA   DS    CL1         START OF COMMAREA FOR LINKED TO PROG
          ORG
DFHEISTG  DSECT
          DS    0F
COMHDRR   DS    CL18
          ORG   COMHDRR
SYSIDNTR  DS    CL4         THIS IS THE SYSIDNT
PROGIDR   DS    CL8         THIS IS THE REMOTE PROGRAM TO BE STARTED
RETNCDER  DS    CL4         THE ABEND CODE TO BE RETURNED TO PARTNER
COMLENR   DS    H           THIS IS THE LENGTH OF THE COMMAREA
COMLENTH  DS    F           LENGTH OF THE ENTIRE COMMAREA
CONVER    DS    CL4         CONVERSATION ID
INITIATE  DS    CL2         ESTABLISH HOW THE TASK WAS INITIATED
LOCSYS    DS    CL4         LOCAL SYSID
FROM      DS    F           FROM @
STATS     DS    F           STATUS OF CONN OR PGM
LENTH     DS    H           LENGTH OF SEND/RECEIVE
C1LENTH   DS    H           LENGTH OF RECEIVE
LENLEFT   DS    H           LENGTH OF DATA STILL TO BE SENT/RECEIVED
ACQSTATS  DS    CL2         STATUS OF CONNECTION
ABNDCDE   DS    CL4         THE ABEND CODE TO BE RETURNED TO PARTNER
CONFIRM   DS    CL64        THE REMOTE REGION HAS RECEIVED HEADER
INREC     DS    CL2048      RECEIVE AREA
REMLINKS DFHEIENT DATAREG=(8,9,10)
* START : TEST IF THIS IS THIS SIDE OR THAT                   *
START    DS    0H
         EXEC  CICS ASSIGN TERMCODE(INITIATE)
         LH    R2,EIBCALEN         LENGTH OF  COMMAREA
         LTR   R2,R2               SEE IF THERE IS ONE
         BNZ   SENDATA
         CLC   TCTTELU6,INITIATE
         BE    BACKEND
         B     NOCOMMAR
SENDATA  DS    0H
         ST    R2,COMLENTH         SEE IF IT FITS IN TO OUR PGM
NOTOOMCH DS    0H
         L     R7,DFHEICAP         GET THE ADDRESS OF THE COMMAREA
         USING COMSAREA,R7
         SH    R2,H0018            TAKE OUT THE COMHDR LENGTH
         STH   R2,COMLEN
         CLC   SYSIDNT,HEX0        SEE IF A SYSIDNT WAS SPECIFIED
         BNE   PGMTEST
         CLC   SYSIDNT,SPACES      SEE IF A SYSIDNT WAS SPECIFIED
         BNE   PGMTEST
         B     ABND010R            IF NO SYSIDNT IN THEN GO SAY SO
PGMTEST  DS    0H
         EXEC  CICS ASSIGN SYSID(LOCSYS)
         CLC   SYSIDNT,LOCSYS      SEE IF A SYSIDNT WAS SPECIFIED
         BE    NOTREM
         EXEC  CICS HANDLE CONDITION                                   X
               SYSIDERR(NOCONN)
         EXEC  CICS INQUIRE                                            X
               CONNECTION(SYSIDNT)                                     X
               SERVSTATUS(STATS)
         CLC   STATS,DFHVALUE(INSERVICE)
         BNE   OUTSERV
         CLC   PROGID,SPACES     SEE IF THEY FORGOT
         BNE   STARTASK
         B     NOPROGID
NOTREM   DS    0H
         EXEC  CICS LINK PROGRAM(PROGID)                               *
               COMMAREA(CMMAREA)                                       *
               LENGTH(COMLEN)
         B     EXIT
* STARTASK  STARTS THE REMOTE TASK                               *
STARTASK DS    0H
         EXEC  CICS HANDLE CONDITION                                   X
               SYSIDERR(CONNDN)
         EXEC  CICS ALLOCATE                                           X
               SYSID(SYSIDNT)
         MVC   CONVER,EIBRSRCE      GET THE CONV ID FROM CICS
         EXEC  CICS CONNECT PROCESS                                    X
               CONVID(CONVER)                                          X
               PROCNAME('XLU6')                                        X
               PROCLENGTH(4)                                           X
               SYNCLEVEL(0)
         MVC   C1LENTH,=H'18'
         EXEC  CICS SEND                                               X
               CONVID(CONVER)                                          X
               FROM(COMHDR)                                            X
               LENGTH(C1LENTH)                                         X
               WAIT                                                    X
               INVITE
         EXEC  CICS RECEIVE                                            X
               CONVID(CONVER)                                          X
               INTO(COMHDR)                                            X
               LENGTH(C1LENTH)
         LA    R2,L'COMHDR(R7)
         LH    R4,COMLEN         GET THE COMMAREA LENGTH
SENDDER  DS    0H
         CLC   RETNCDE,SPACES
         BNE   EXIT
         CH    R4,H2048        SEE IF IT EXCEEDS THE TRANS LNGTH
         BL    NOADJ               IF IT IS  LOWER
         SH    R4,H2048
         STH   R4,LENLEFT
         LH    R4,H2048
         B     SENDIT
NOADJ    DS    0H
         XC    LENLEFT,LENLEFT
SENDIT   DS    0H
         USING FROMAREA,R2
         STH   R4,LENTH
         EXEC  CICS SEND                                               X
               CONVID(CONVER)                                          X
               FROM(FROMSTUF)                                          X
               LENGTH(LENTH)                                           X
               WAIT                                                    X
               INVITE
         EXEC  CICS RECEIVE                                            X
               CONVID(CONVER)                                          X
               INTO(CONFIRM)                                           X
               LENGTH(H0004)
         CLC   LENLEFT,=H'00'
         BNH   RECHED
         LH    R4,LENLEFT        GET THE COMMAREA LENGTH
         AH    R2,H2048
         B     SENDDER
*  HERE WE RECEIVE THE STUFF BACK AGAIN                               *
TOREC    DS    0H
         LA    R2,L'COMHDR(R7)
         USING FROMAREA,R2
         LH    R4,COMLEN          GET THE COMMAREA LENGTH
         EXEC  CICS SEND                                               X
               CONVID(CONVER)                                          X
               FROM(COMHDR)                                            X
               LENGTH(H0004)                                           X
               WAIT                                                    X
               INVITE
TORECTS  DS    0H
         CH    R4,H2048        SEE IF IT EXCEEDS THE TRANS LNGTH
         BL    NOADJRC             IF IT IS  LOWER
         SH    R4,H2048
         STH   R4,LENLEFT
         LH    R4,H2048
         B     RECIT
NOADJRC  DS    0H
         XC    LENLEFT,LENLEFT
RECIT    DS    0H
         STH   R4,LENTH
         EXEC  CICS RECEIVE                                            X
               CONVID(CONVER)                                          X
               INTO(INREC)                                             X
               MAXLENGTH(H2048)
         EXEC  CICS SEND                                               X
               CONVID(CONVER)                                          X
               FROM(COMHDR)                                            X
               LENGTH(H0004)                                           X
               WAIT                                                    X
               INVITE
*          WE MOVE THE RECEIVED DATA IN HERE                          *
         LA    R1,L'INREC           LENGTH OF THE RECEIVE AREA
         LA    R0,INREC             @ OF SAID AREA
         LR    R14,R2               @ OF GETMAINED AREA
         LR    R15,R4               LENGTH OF THE MOVE
         MVCL  R14,R0
*    WE CLEAR THE RECEIVE AREA FOR THE NEXT RECEIVE                   *
         LA    R15,L'INREC          LENGTH OF THE RECEIVE AREA
         LA    R14,INREC            @ OF SAID AREA
         XR    R0,R0                @ OF GETMAINED AREA
         XR    R1,R1                LENGTH OF THE MOVE
         MVCL  R14,R0
*    HERE WE MOVE THE POINTER INTO THE AREA AND TEST THE LENGTHS      *
         AR    R2,R4
         CLC   LENLEFT,=H'00'       SEE IF WE FINISHED
         BNH   EXIT
         LH    R4,LENLEFT           GET THE COMMAREA LENGTH
         B     TORECTS
*    RECEIVE  HEADER BACK TO INDICATE AN ERROR                        *
RECHED   DS    0H
         MVC   RETNCDE,ABND900
         EXEC  CICS SEND                                               X
               CONVID(CONVER)                                          X
               FROM(COMHDR)                                            X
               LENGTH(H0004)                                           X
               WAIT                                                    X
               INVITE
         EXEC  CICS RECEIVE                                            X
               CONVID(CONVER)                                          X
               INTO(COMHDR)                                            X
               LENGTH(C1LENTH)
         CLC   RETNCDE,=C'0000'
         BE    TOREC
         B     EXIT
*    THIS IS THE BACK END OF THE LU6.2 SYSTEM                         *
BACKEND  DS    0H
         MVC   C1LENTH,=H'18'
         EXEC  CICS RECEIVE                                            X
               INTO(COMHDRR)                                           X
               LENGTH(C1LENTH)
         EXEC  CICS GETMAIN                                            X
               SET(R5)                                                 X
               LENGTH(COMLENR)
         ST    R5,FROM
*    WE TEST THE PROGRAM HERE TO SEE IF WE CAN LINK TO IT             *
DOREMTST DS    0H
         OC    PROGIDR,SPACES
         EXEC  CICS HANDLE CONDITION                                   X
               PGMIDERR(PGMIDER)
         EXEC  CICS INQUIRE                                            X
               PROGRAM(PROGIDR)                                        X
               STATUS(STATS)
         CLC   STATS,DFHVALUE(ENABLED)
         BNE   STATERR
         EXEC  CICS SEND                                               X
               FROM(COMHDRR)                                           X
               LENGTH(C1LENTH)                                         X
               WAIT                                                    X
               INVITE
         B     GETTIT
PROGFLD  DS    0H
         EXEC  CICS SEND                                               X
               FROM(COMHDRR)                                           X
               LENGTH(C1LENTH)                                         X
               WAIT                                                    X
               INVITE
         B     EXIT
*    HERE WE GET THE STUFF FROM THE OTHER HALF                        *
GETTIT   DS    0H
         L     R6,FROM
         LH    R4,COMLENR
GETTER   DS    0H
         CH    R4,H2048        SEE IF IT EXCEEDS THE TRANS LNGTH
         BL    NOADJR              IF IT IS  LOWER
         SH    R4,H2048
         STH   R4,LENLEFT
         LH    R4,H2048
         B     GETING
NOADJR   DS    0H
         XC    LENLEFT,LENLEFT
GETING   DS    0H
         STH   R4,LENTH
         EXEC  CICS RECEIVE                                            X
               INTO(INREC)                                             X
               MAXLENGTH(H2048)
         EXEC  CICS SEND                                               X
               FROM(COMHDR)                                            X
               LENGTH(H0004)                                           X
               WAIT                                                    X
               INVITE
*          WE MOVE THE RECEIVED DATA IN HERE                          *
         LA    R1,L'INREC           LENGTH OF THE RECEIVE AREA
         LA    R0,INREC             @ OF SAID AREA
         LR    R14,R6               @ OF GETMAINED AREA
         LR    R15,R4               LENGTH OF THE MOVE
         MVCL  R14,R0
*    WE CLEAR THE RECEIVE AREA FOR THE NEXT RECEIVE                   *
         LA    R15,L'INREC          LENGTH OF THE RECEIVE AREA
         LA    R14,INREC            @ OF SAID AREA
         XR    R0,R0                @ OF GETMAINED AREA
         XR    R1,R1                LENGTH OF THE MOVE
         MVCL  R14,R0
*    HERE WE MOVE THE POINTER INTO THE AREA AND TEST THE LENGTHS      *
         AR    R6,R4
         CLC   LENLEFT,=H'00'       SEE IF WE FINISHED
         BNH   GOLINK
         LH    R4,LENLEFT           GET THE COMMAREA LENGTH
         B     GETTER
*     ALLS WELL TO HERE SO GO LINK TO YOUR PROGRAM                    *
GOLINK   DS    0H
         USING FROMAREA,R5
         EXEC  CICS HANDLE ABEND                                       X
               LABEL(REMPIGAB)
         EXEC  CICS LINK PROGRAM(PROGIDR)                              X
               COMMAREA(FROMSTUF)                                      X
               LENGTH(COMLENR)
         MVC   RETNCDER,=C'0000'
         B     SENDHED
*  HERE WE FINISH OFF THE COMMS AND CLOSE UP                          *
RETURNIT DS    0H
         LH    R4,COMLENR         GET THE COMMAREA LENGTH
         L     R6,FROM
         EXEC  CICS RECEIVE                                            X
               INTO(CONFIRM)                                           X
               LENGTH(H0004)
RETURND  DS    0H
         CH    R4,H2048        SEE IF IT EXCEEDS THE TRANS LENGTH
         BNH   NOADJRT             IF IT IS  LOWER
         SH    R4,H2048
         STH   R4,LENLEFT
         LH    R4,H2048
         B     RETTIT
NOADJRT  DS    0H
         XC    LENLEFT,LENLEFT
RETTIT   DS    0H
         STH   R4,LENTH
         USING FROMAREA,R6
         EXEC  CICS SEND                                               X
               FROM(FROMSTUF)                                          X
               LENGTH(LENTH)                                           X
               WAIT                                                    X
               INVITE
         EXEC  CICS RECEIVE                                            X
               INTO(CONFIRM)                                           X
               LENGTH(H0004)
         CLC   LENLEFT,=H'00'
         BNH   EXIT
         LH    R4,LENLEFT        GET THE COMMAREA LENGTH
         AH    R6,H2048
         B     RETURND
*   SEND THE HEADER BACK TO INDICATE AN ERROR                         *
SENDHED  DS    0H
         EXEC  CICS RECEIVE                                            X
               INTO(CONFIRM)                                           X
               LENGTH(H0004)
         EXEC  CICS SEND                                               X
               FROM(COMHDRR)                                           X
               LENGTH(C1LENTH)                                         X
               WAIT                                                    X
               INVITE
         CLC   RETNCDER,=C'0000'
         BE    RETURNIT
         B     EXIT
* EXIT    : XCTL TO OTHER PGMS ONLY FROM HERE                    *
EXIT     DS    0H
         EXEC  CICS RETURN
* ABENDS AND RETURN CODES                                             *
NOPROGID DS    0H                 THERE IS NO PROGRAM ID
         MVC   RETNCDE,ABND020
         B     EXIT
CONNDN   DS    0H
         MVC   RETNCDE,ABND011    DESTINATION REGION NOT AVAILABLE
         B     EXIT
NOCONN   DS    0H                 INVALID DEST SYSIDNT
         MVC   RETNCDE,ABND012
         B     EXIT
OUTSERV  DS    0H                 CONNECTION NOT IN SERVICE
         MVC   RETNCDE,ABND013
         B     EXIT
ABND010R DS    0H                 NO DESTINATION SYSIDNT
         MVC   RETNCDE,ABND010
         B     EXIT
NOCOMMAR DS    0H                 HERE WE FAIL FOR KNOWN REASON
         MVC   ABNDCDE,ABND010
         B     ABEND
STATERR  DS    0H                 REMOTE PGM IS DISABLED
         MVC   RETNCDER,ABND021
         B     PROGFLD
PGMIDER  DS    0H                 REMOTE PGM IS NOT IN PPT
         MVC   RETNCDER,ABND022
         B     PROGFLD
REMPIGAB DS    0H                 REMOTE PGM HAS ABENDED
         MVC   RETNCDER,ABND023
         B     SENDHED
ABEND    DS    0H
         EXEC  CICS ABEND ABCODE(ABNDCDE)
* CONSTANTS                                                      *
SPACES   DC    CL200' '               : SPACES
HEX0     DC    20XL1'00'
TCTTELU6 DC    XL2'C0F0'
H2048    DC    H'2048'                : 2048 AS A VALUE
H0018    DC    H'0018'                : 0018 AS A VALUE
H0004    DC    H'0004'                : 0004 AS A VALUE
ABND000  DC    CL4'L000'              : NO COMMAREA RECEIVED
ABND001  DC    CL4'L001'              : COMMAREA RECEIVED TOO LARGE
ABND010  DC    CL4'L010'              : NO DESTINATION SYSIDNT
ABND011  DC    CL4'L011'              : DESTINATION REGION NOT AVAIL
ABND012  DC    CL4'L012'              : INVALID DESTINATION SYSIDNT
ABND013  DC    CL4'L013'              : CONNECTION OUT OF SERVICE
ABND014  DC    CL4'L014'              : CONNECTION RELEASED
ABND020  DC    CL4'L020'              : NO PROGRAM NAME GIVEN
ABND021  DC    CL4'L021'              : PROGRAM IS DISABLED
ABND022  DC    CL4'L022'              : PROGRAM NOT IN THE PPT
ABND023  DC    CL4'L023'              : REMOTE PROGRAM HAS ABENDED
ABND900  DC    CL4'L900'              : REMOTE REMLINKS ABENDED
         END   REMLINKS


Mark Fallet
Systems Programmer
Southern Life Association (South Africa)       c Southern Life Association 1992

