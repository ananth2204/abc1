On-line PSB display (continued)

This month we conclude our article about a routine to display PSB
information by publishing the source code for the program
AZL1OD.

* THIS PROGRAM DISPLAYS A PSB (ACB) WHICH HAS BEEN ASSEMBLED AND      *
* CATALOGED IN A LIBRARY.  THE PROGRAM LOADS AND DECODES THE RELEVANT *
* PARTS OF THE PHASE.                                                 *
DFHEISTG DSECT
         COPY AZL1N1D
DWORD    DS    D
PHASEADR DS    F
SDBSAV   DS    F
PCBTAB   DS    56F
LENGTH   DS    H
DIRCT    DS    CL38
APPLID   DS    CL8
CICS     DS    CL14
CL10     DS    CL10
CL6      DS    CL6
LASTFLG  DS    X
PCBANT   DS    PL2
TIOABAR  EQU   1
LINKREG  EQU   8
DIRBAR   EQU   9                       BASE FOR DIRECTORY ENTRY
PSBBAR   EQU   9                       BASE FOR PSB ENTRY
JCBBAR   EQU   9                       BASE FOR JCB ENTRY
SDBBAR   EQU   10                      BASE FOR SDB ENTRY
PCBBAR   EQU   12                      BASE FOR PCB ENTRY
AZL1OD   CSECT
         EXEC CICS HANDLE AID ANYKEY(ENDPROG)                          X
               PF3(SENDMENU)                                           X
               PF4(ENDPROG)
*        DETERMINE WHICH CICS USER HAS LOGGED ON TO
*
         EXEC CICS ASSIGN APPLID(APPLID)
         LA    R2,CICSTAB              GET ADDRESS OF CICS-NAMETABLE
NAMELOOP CLC   APPLID,0(R2)            IS THIS THE RIGHT CICS ?
         BE    NAMEFND                 YES, IT IS
         LA    R2,CICS3-CICS2(R2)      POINT TO NEXT ELEMENT
         CLI   0(R2),X'FF'             END OF TABLE ?
         BNE   NAMELOOP                NO, TRY NEXT ELEMENT
         MVC   CICS,=14C'*'            INDICATE NOT FOUND
         B     SENDMENU
NAMEFND  MVC   CICS,8(R2)              MOVE NAME OF CICS TO MAP
         B     SENDMENU
*        BUILD UP AND SEND OUT PRIMARY MENU                           *
SENDMENU LA    R4,AZL1N1DI             ADDRESS OF MAP TO BE CLEARED
         L     R5,=A(AZL1N1DE-AZL1N1DI) LENGTH OF MAP
         SR    R7,R7                   LENGTH IS ZERO AND PAD IS X'00'
         MVCL  R4,R6                   CLEAR MAP TO X'00'
         EXEC CICS ASKTIME
         MVC   CL10,=X'40212020204B202020' I.E. 999.99
         ED    CL10,EIBDATE            MAKE DATE PRINTABLE
         MVC   DATE1O(6),CL10+3        MOVE DATE TO MAP
         MVC   CL10,=X'402120204B20204B2020' I.E. 99.99.99
         ED    CL10,EIBTIME            MAKE TIME-OF-DAY PRINTABLE
         MVC   TIME1O(8),CL10+2        MOVE TIME TO MAP
         MVC   TERM1O,EIBTRMID         MOVE TERMID TO MAP
         EXEC CICS SEND MAP('AZL1N1D')                                 X
               ERASE FREEKB
READPSB  BAL   LINKREG,READMAP1        READ IN THE MAP
         LA    DIRBAR,DIRCT            AREA TO CONTAIN DIRECTORY
         USING DIRECTRY,DIRBAR
         XC    DIRECTRY(DIRMAPLN),DIRECTRY  CLEAR DIRECTORY ENTRY
         MVC   DIRNAME,PSBNAMEI        PLACE PSB-NAME IN DIRECTORY
         MVI   DIRN,X'0D'              LENGTH OF ENTRY FOLLOWING DIRN
         MVI   DIRNAME+7,C'P'          SUFFIX NAME WITH AN 'P'
         LA    R2,6                    MAX NO. OF '0' POSSIBLE
         LA    R4,DIRNAME+6            LAST '0' TO BE PLACED IN FIELD
STRTLOOP CLI   0(R4),C' '              IS IT A SPACE ?
         BNE   FINISH                  NO, WE'RE FINISHED
         MVI   0(R4),C'0'              INSERT '`'
         BCTR  R4,0                    DECREMENT FIELD-POINTER
         BCT   R2,STRTLOOP             GO UP AND TEST NEXT CHAR
*        LOAD DIRECTORY INFORMATION, GET STORAGE TO HOLD PHASE,       *
*        AND LOAD THE PHASE                                           *
FINISH   LOAD  (9),DE=YES,TXT=NO       GET DIRECTORY INFORMATION
         TM    DIRC,X'06'              WAS PHASE FOUND ?
         BNO   PHASEFND                YES, IT WAS
         MVC   PSBNAMEL,=H'-1'         PLACE CURSOR HERE AND
         MVC   MSG1O(L'PHASEMSG),PHASEMSG  TELL THAT WE DIDN'T FIND IT
         BAL   LINKREG,DATA1           SEND OUT ERROR-MSG
         B     READPSB                 TRY AND READ AGAIN
PHASEFND LH    R2,DIRTT                GET NUMBER OF TEXT BLOCKS
         LH    R4,DIRLL                GET NUMBER OF BYTES LAST BLOCK
         BCTR  R2,0                    DECREMENT BY 1
         SLA   R2,10                   MULTIPLY BY 1024
         AR    R2,R4                   THIS IS TOTAL LENGTH OF PHASE
         C     R2,=F'32767'            PHASE > 32K ?
         BL    SIZEOK                  NO, OK TO LOAD PHASE
         MVC   PSBNAMEL,=H'-1'         PLACE CURSOR HERE
         MVC   MSG1O(L'SIZEMSG),SIZEMSG MOVE APPROPRIATE MSG TO MAP
         BAL   LINKREG,DATA1           SEND OUT ERROR-MSG
         B     READPSB                 TRY AND READ AGAIN
SIZEOK   STH   R2,LENGTH               SET UP LENGTH TO BE GETMAIN'ED
         EXEC CICS GETMAIN SET(R10) LENGTH(LENGTH)
         LOAD  (9),(10),DE=YES         LOAD THE PHASE INTO AREA GOTTEN
         ST    R10,PHASEADR            SAVE ADDRESS OF PHASE
         DROP  DIRBAR
*        LOCATE AND DISPLAY UP TO 54 DBD-NAMES
*
PSBDISP  USING PSB,PSBBAR              SET UP BASE FOR PSB
         EXEC CICS ASKTIME
         MVC   CL10,=X'40212020204B202020' I.E. 999.99
         ED    CL10,EIBDATE            MAKE DATE PRINTABLE
         MVC   DATE1O(6),CL10+3        MOVE DATE TO MAP
         MVC   CL10,=X'402120204B20204B2020' I.E. 99.99.99
         ED    CL10,EIBTIME            MAKE TIME-OF-DAY PRINTABLE
         MVC   TIME1O(8),CL10+2        MOVE TIME TO MAP
         MVC   TERM1O,EIBTRMID         MOVE TERMID TO MAP
         ZAP   PCBANT,=P'0'            INITIALIZE NO OF PCB'S
         MVI   LASTFLG,X'00'           INITIALIZE FLAG
         MVI   PSBNAMEA,DFHBMASB       CHANGE ATTRIBUTE OF INPUT FIELD
         OI    PSBNAMEA,DFHBMASF       TO AUTOSKIP + HIGH INT + MDT ON
         MVI   LOADEDA,DFHBMASB        TELL USER THAT WE LOADED
         MVC   CICSNAMO,CICS           AND WHICH CICS HE SIGNED ON TO
         MVI   SELTXTA,DFHBMASB        TELL USER TO ENTER NO OF PSB
         MVC   SELECTL,=H'-1'          AND PLACE CURSOR HERE
         XC    SELECTO,SELECTO         CLEAR SELECTION FIELD
         L     PSBBAR,PHASEADR         ADDRESS OF LOADED PSB
         A     PSBBAR,0(PSBBAR)        POINT TO PSB-PREFIX
         LA    R2,PCBTAB               ADDRESS PCB-ADDRESS-LIST
         LA    R4,56                   MAX NO OF DBD'S IN THE MAP
         LA    R5,PT01A                ADDRESS OF 1ST MAP ELEMENT
         LA    R6,PSBLIST              ADDRESS PSB-LIST
PCBLOOP  L     R7,0(R6)                ADDRESS PCB-POINTER
         LTR   R7,R7                   LAST POINTER CONTAINS 1 IN SIGN
         BNM   *+8                     NO, NOT LAST PCB YET
         MVI   LASTFLG,X'01'           INDICATE THIS WAS LAST POINTER
         LA    R7,0(PSBBAR,R7)         ADDRESS PCB
         TM    PSBCODE,PSBPLI          IS LANGUAGE PLI ?
         BNO   LANGNPLI                NO, IT ISN'T
         A     R7,0(R7)                YES, ADDR POINTS TO ANOTHER ADDR
LANGNPLI AP    PCBANT,=P'1'            INCREMENT NO OF PCB'S
         ST    R7,0(R2)                SAVE PCB-ADDRESS IN TABLE
         LA    R2,4(R2)                POINT TO NEXT TABLE ELEMENT
         MVI   0(R5),DFHBMASK          MAKE FIELD VISIBLE
         MVC   PF01O-PT01A(7,R5),0(R7) MOVE ENTRY FROM TABLE TO MAP
         LA    R5,PF02O-PF01O(R5)      POINT TO NEXT MAP ELEMENT
         LA    R6,4(R6)                ADDRESS NEXT POINTER
         CLI   LASTFLG,X'01'           DID WE REACH LAST PCB ?
         BE    PCBEND                  YES, LEAVE LOOP
         BCT   R4,PCBLOOP
PCBEND   EXEC CICS SEND MAP('AZL1N1D')                                 X
               FREEKB CURSOR ERASE
*        LOCATE AND DISPLAY UP TO 54 SEGMENTS IN A PCB
*
READSEL  USING DBPCB,PCBBAR
         BAL   LINKREG,READMAP1        READ USER SELECTION
         LA    R4,AZL1N2DI             ADDRESS OF MAP TO BE CLEARED
         L     R5,=A(AZL1N2DE-AZL1N2DI) LENGTH OF MAP
         SR    R7,R7                   LENGTH IS ZERO AND PAD IS X'00'
         MVCL  R4,R6                   CLEAR MAP TO X'00'
         EXEC CICS ASKTIME
         MVC   CL10,=X'40212020204B202020' I.E. 999.99
         ED    CL10,EIBDATE            MAKE DATE PRINTABLE
         MVC   DATE2O(6),CL10+3        MOVE DATE TO MAP
         MVC   CL10,=X'402120204B20204B2020' I.E. 99.99.99
         ED    CL10,EIBTIME            MAKE TIME-OF-DAY PRINTABLE
         MVC   TIME2O(8),CL10+2        MOVE TIME TO MAP
         MVC   TERM2O,EIBTRMID         MOVE TERMID TO MAP
         OI    SELECTI+1,X'F0'         ENSURE VALID SIGN IS PRESENT
         PACK  DWORD,SELECTI           PACK USER SELECTION
         CP    DWORD+6(2),PCBANT       VALIDATE SELECTION
         BH    NUMERR
         CP    DWORD+6(2),=P'1'        VALIDATE SELECTION
         BNL   NUMOK
NUMERR   MVC   SELECTL,=H'-1'          AND PLACE CURSOR HERE
         MVC   MSG1O(L'NUMMSG),NUMMSG  MOVE APPROPRIATE MSG TO MAP
         BAL   LINKREG,DATA1           SEND OUT ERROR-MSG
         B     READSEL                 TRY AND READ AGAIN
NUMOK    LA    R2,PCBTAB               ADDRESS PCB-TABLE
         CVB   R4,DWORD                USER SELECTION IS PCB-NO IN PSB
         BCTR  R4,0                    SUBTRACT 1
         SLA   R4,2                    MULTIPLY BY 4
         L     PCBBAR,0(R4,R2)         THIS IS ADDRESS OF OUR PCB
         MVC   PSBNAM2O,PSBNAMEI       MOVE PSB-NAME TO MAP
         MVC   PCBNAMEO(8),DBPCBDBD    MOVE PCB-NAME TO MAP
         MVC   PROCOPTO,DBPCBPRO       MOVE OVERALL PROCOPT TO MAP
         TM    PSBCODE,PSBPLI          IS LANGUAGE PLI ?
         BO    *+14                    YES, LANGUAGE IS PLI
         MVC   LANGO(7),=CL7'ASM/COB'  NO, LANGUAGE IS NOT PLI
         B     GETSEG
         MVC   LANGO(7),=CL7'PL/1   '  LANGUAGE IS PLI
         DROP  PSBBAR
GETSEG   L     JCBBAR,DBPCBJCB         GET JCB OFFSET FROM PCB
         AR    JCBBAR,PCBBAR           THIS YIELDS ADDRESS OF JCB
         USING JCB,JCBBAR
         LH    R2,JCBMKYL              MAX LENGTH OF KEYFEEDBACK
         CVD   R2,DWORD
         MVC   CL6,=X'402020202120'    I.E. ZZZZ9
         ED    CL6,DWORD+5             MAKE IT PRINTABLE
         MVC   KEYLENO,CL6+2           MOVE IT TO MAP
ORGTEST  TM    JCBORGN,JCBORGHD        IS IT A HDAM DB
         BNO   *+14                    NO, ISN'T
         MVC   ORGO,=C' HDAM'          YES, IT IS
         B     POSTEST
         TM    JCBORGN,JCBORGHI        IS IT A HIDAM DB
         BNO   *+14                    NO, ISN'T
         MVC   ORGO,=C'HIDAM'          YES, IT IS
         B     POSTEST
         TM    JCBORGN,JCBORGH1        IS IT A HISAM DB
         BNO   *+14                    NO, ISN'T
         MVC   ORGO,=C'HISAM'          YES, IT IS
         B     POSTEST
         TM    JCBORGN,JCBORGHS        IS IT A HSAM DB
         BNO   *+14                    NO, ISN'T
         MVC   ORGO,=C' HSAM'          YES, IT IS
         B     POSTEST
         MVC   ORGO,=C'*****'          THIS INDICATES ORG NOT RECOGN.
POSTEST  TM    JCBCODE,JCBMLPOS        IT POSITION MULTIPLE
         BO    POSMULT                 YES, IT IS
         MVI   POSO,C'S'               NO, POSITION IS SINGLE
         B     GETSDB
POSMULT  MVI   POSO,C'M'               POSITION IS MULTIPLE
         B     GETSDB
GETSDB   L     R2,DBPCBNSS             GET NO OF SENSITIVE SEGMENTS
         L     SDBBAR,JCBSDB1          OFFSET OF 1ST SDB FROM PCB
         AR    SDBBAR,PCBBAR           THIS YIELDS ADDRESS OF SDB
         USING SDB,SDBBAR
         LA    R5,SEG1O                1ST SEGMENT IN MAP
SDBLOOP  MVC   0(8,R5),SDBSYM          MOVE SEGMENT-NAME TO MAP
         LH    R6,SDBPARA+2            OFFSET OF PARENT SEGMENT
         LTR   R6,R6                   IS IT ROOT SEGMENT
         BZ    ROOT                    YES, IT IS
         AR    R6,PCBBAR               ADDRESS OF PARENT SEGMENT
         MVC   PAR1O-SEG1O(8,R5),0(R6) MOVE PARENT NAME TO MAP
         B     PROCOPT
ROOT     MVC   PAR1O-SEG1O(8,R5),=C'  NONE  ' MOVE TEXT TO MAP
PROCOPT  LA    R4,PROC1O=SEG1O(R5)     ADDRESS OF SEGMENT PROCOPT
         TM    SDBF3,SDBSENG+SDBSENI+SDBSENR+SDBSEND  IS IT 'A'
         BNO   PROCA                   NO, TRY EACH POSSIBILITY
         MVI   0(R4),C'A'              YES, PROCOPT = A
         LA    R4,1(R4)                INCREMENT POINTER
         B     PROCP                   SKIP TEST OF 'GIRD'
PROCA    TM    SDBF3,SDBSENG           IS IT 'G'
         BNO   PROCI                   NO, TRY ANOTHER
         MVI   0(R4),C'G'              PROCOPT = G
         LA    R4,1(R4)                INCREMENT POINTER
PROCI    TM    SDBF3,SDBSENI           IS IT 'I'
         BNO   PROCR                   NO, TRY ANOTHER
         MVI   0(R4),C'I'              PROCOPT = I
         LA    R4,1(R4)                INCREMENT POINTER
PROCR    TM    SDBF3,SDBSENR           IS IT 'R'
         BNO   PROCD                   NO, TRY ANOTHER
         MVI   0(R4),C'R'              PROCOPT = R
         LA    R4,1(R4)                INCREMENT POINTER
PROCD    TM    SDBF3,SDBSEND           IS IT 'D'
         BNO   PROCP                   NO, TRY ANOTHER
         MVI   0(R4),C'D'              PROCOPT = D
         LA    R4,1(R4)                INCREMENT POINTER
PROCP    TM    SDBF3,SDBSENP           IS IT 'P'
         BNO   PROCE                   NO, TRY ANOTHER
         MVI   0(R4),C'P'              PROCOPT = P
         LA    R4,1(R4)                INCREMENT POINTER
PROCE    TM    SDBF3,SDBSENX           IS IT 'E'
         BNO   PROCL                   NO, TRY ANOTHER
         MVI   0(R4),C'E'              PROCOPT = E
         LA    R4,1(R4)                INCREMENT POINTER
PROCL    TM    SDBF3,SDBSENL           IS IT 'L'
         BNO   PROCK                   NO, TRY ANOTHER
         MVI   0(R4),C'L'              PROCOPT = L
         LA    R4,1(R4)                INCREMENT POINTER
PROCK    TM    SDBF3,SDBSENK           IS IT 'K'
         BNO   PROCSEQ                 NO, THIS WAS LAST POSSIBILITY
         MVI   0(R4),C'K'              PROCOPT = K
         LA    R4,1(R4)                INCREMENT POINTER
PROCSEQ  CLI   SDBTFLG,SDBSNX          IS SEGMENT RETRIEVED VIA INDEX
         BNE   ENDPROC                 NO, PROCSEQ IS MAIN INDEX
         ST    SDBBAR,SDBSAV           SAVE CURRENT SDB POINTER
         L     SDBBAR,SDBTARG          LOAD INDEX SDB OFFSET
         AR    SDBBAR,PCBBAR           ADDRESS INDEX SDB
         L     R6,SDBDDIR              GET INDEX DMB OFFSET
         A     R6,PHASEADR             ADDRESS OF INDEX DMB
         MVC   PROCSEQO,0(R6)          MOVE PROCSEQ TO MAP
         LA    R6,6                    MAX NO OF '0' IN A DBDNAME
         LA    R4,PROCSEQO+6           LAST POSITION IN FIELD
PROCLOOP CLI   0(R4),C'`'              IS IT A '0' ?
         BNE   PROCREST                NO, WE'RE FINISHED
         MVI   0(R4),C' '              INSERT A SPACE
         BCTR  R4,0                    DECREMENT FIELD POINTER
         BCT   R6,PROCLOOP             GO UP AND TEST NEXT CHAR
PROCREST L     SDBBAR,SDBSAV           RESTORE SDB POINTER
ENDPROC  LA    R5,SEG2O-SEG1O(R5)      POINT TO NEXT SEGMENT IN MAP
         LA    SDBBAR,SDBLEN(SDBBAR)   POINT TO NEXT SDB
         BCT   R2,SDBLOOP              GO UP AND DISPLAY NEXT SDB
         EXEC CICS SEND MAP('AZL1N2D')                                 X
               MAPSET('AZL1N1D')                                       X
               ERASE FREEKB
         DROP  JCBBAR,SDBBAR
         BAL   LINKREG,READTERM
         B     PSBDISP
*        SUBROUTINES TO READ A MAP FROM THE TERMINAL
*
DATA1    EXEC CICS SEND MAP('AZL1N1D')                                 X
               DATAONLY FREEKB CURSOR
         BR    LINKREG                 RETURN TO CALLER
READMAP1 EXEC CICS RECEIVE MAP('AZL1N1D')                              X
               TERMINAL
         BR    LINKREG                 RETURN TO CALLER
READTERM MVC   LENGTH,=H'100'
         EXEC CICS RECEIVE SET(TIOABAR)                                X
               LENGTH(LENGTH)
         BR    LINKREG                 RETURN TO CALLER
*        CLEAR SCREEN AND RETURN                                      *
ENDPROG  EXEC CICS SEND CONTROL ERASE FREEKB
RETURN   EXEC CICS RETURN
         LTORG
PHASEMSG DC    CL50'PSB-NAME NOT FOUND ON LIBRARY'
SIZEMSG  DC    CL50'PSB GREATER THAN 32K, UNABLE TO LOAD'
NUMMSG   DC    CL60'SELECTION INVALID, MUST BE BETWEEN 1 AND HIGH PCB N*
               O'
*                 VTAMAPPLID      CICSNAME
CICSTAB  DC    CL8'CICSCO1 ',CL14'PROD LIBRARY'
CICS2    DC    CL8'CICSCO12',CL14'TEST LIBRARY'
CICS3    DC    CL8'CICSCO13',CL14'TEST LIBRARY'
CICS4    DC    CL8'CICSCO14',CL14'PROD LIBRARY'
CICS5    DC    CL8'CICSCO15',CL14'TEST LIBRARY'
CICS6    DC    CL8'CICSCO16',CL14'PROD LIBRARY'
CICS7    DC    CL8'        ',CL14'        '
CICS8    DC    CL8'        ',CL14'        '
CICS9    DC    CL8'ATSCICSA',CL14'TEST LIBRARY'
         DC    XL8'FFFFFFFFFFFFFFFF',14X'FF'
         MAPDNTRY
         COPY  DFHAID
         COPY  DFHBMSCA
         DLZIDLI PSBBASE=0,DPCBASE=0,JCBBASE=0,SDBBASE=0
         DLZPSIL
         END


Steen Spuur Hansen
Systems Programmer
Texaco A/S (Denmark) ) Steen Spuur Hansen 1989

