CICS and RSCS printer sharing

A CICS application will write reports to a CICS destination which
requires that a printer is attached to CICS.  It is possible with a
VTAM-defined printer to share it between CICS and RSCS.
However, this may not be practicable, so the printer should be
owned by RSCS and any printed output from CICS routed via
POWER to RSCS.  All that needs to be changed is that, rather
than having a printer as the destination of the print, this program
reads the print from the transient data queue and spools it to RSCS
via POWER.

PROGRAM DESCRIPTION

1   Issue an enqueue to stop the application writing to the
transient data queue while we are reading.

2   If the enqueue fails, wait five seconds and then retry.

3   Check who invoked the program and deduce the report name
and the printer name.

4   Open the spool file.

5   Set IGNORE condition for QZERO.

6   Read the print line from transient data queue.

7   Write the line to the spool file.

8   Once QZERO is reached, close the spool file using the
RELEASE option.

9   Issue a dequeue.

10  Return to CICS.

PROGRAM USE

Each printer destination should have its own transaction, but all
pointing to this program.  A table within the program decides,
from the transaction that invoked it, which printer it is going to.
The table has the transaction name followed by the RSCS node
name, the RSCS printer name, and the name of the transient data
to read.  The transient data queues should have a trigger level of
one; however the enqueue should prevent this program from
sending out incomplete reports.

*   Function:     Collect print lines output to a destination and to  *
*                 output them to POWER spool with the destination and *
*                 node information required for RSCS to print         *
*   Dependencies: CICS 1.7 command level, VSE/SP 3.1.1                *
         DFHEISTG
TOKEN    DS    D                       Token for SPOOL functions
TDQNAME  DS    CL4                     TDQ name to read
REPORT   DS    CL8                     Report name for printing
NODE     DS    CL8                     Node name of RSCS
DEST     DS    CL8                     Printer name under RSCS
SPLLEN   DS    F                       Length of print line
TDQLEN   DS    H                       Length of print line
TDQLINE  DS    CL256                   Address of print line
NBCPRINT CSECT
GETENQ   EXEC  CICS ENQ RESOURCE(TDENQ) LENGTH(ENQLEN)
         CLC   EIBRESP,ENQBUSY         Is the ENQ available
         BNE   GOTENQ                  Yes - go to label GOTENQ
         EXEC  CICS DELAY INTERVAL(5)
         B     GETENQ                  Wait five seconds, then retry
GOTENQ   LA    R4,TRANTABL             Get address of transaction tab
         L     R5,0(R4)                Get number of entries
         LA    R4,4(R4)                Point to first entry
SRCHTRAN CLC   EIBTRNID,0(R4)          Check for tranid name
         BE    FNDTRAN                 Got it - go to label FNDTRAN
         LA    R4,32(R4)               Point to next entry
         BCT   R5,SRCHTRAN             Go check it
         EXEC  CICS ABEND ABCODE('DEAD')
         EXEC  CICS SPOOLOPEN REPORT(REPORT) TOKEN(TOKEN)              C
               ASA CLASS('A') DESTINATION(DEST) NODE(NODE) SEP
         EXEC  CICS IGNORE CONDITION QZERO
READTDQ  MVC   TDQLEN,=H'256'          Maximum length of record
         EXEC  CICS READQ TD QUEUE(TDQNAME) SET(R4) LENGTH(TDQLEN)
         CLC   EIBRESP,QZERO           Queue empty
         BE    QEMPTY                  Yes - go to label QEMPTY
         ST    R4,TDQLINE              Address of print line
         LH    R4,TDQLEN               Length of line
         ST    R4,SPLLEN               Length of line
         EXEC  CICS SPOOLWRITE REPORT(REPORT) TOKEN(TOKEN)             C
               FROM(TDQLINE) FLENGTH(SPLLEN)
         B     READTDQ                 Go get next print line
QEMPTY   EXEC  CICS SPOOLCLOSE REPORT(REPORT) TOKEN(TOKEN) RELEASE
         EXEC  CICS DEQ RESOURCE(TDQENQ) LENGTH(ENQLEN)
ENDCICS  EXEC  CICS RETURN
TRANTABL DS    0F
         DC    F'8'
NBQ1     DC    CL4'NBQ1',CL8'DEST1   ',CL8'PRINT1  ',CL8'REPORT1 '
         DC    CL4'TDQ1'
NBQ2     DC    CL4'NBQ2',CL8'DEST2   ',CL8'PRINT2  ',CL8'REPORT3 '
         DC    CL4'TDQ2'
NBQ3     DC    CL4'NBQ3',CL8'DEST1   ',CL8'PRINT2  ',CL8'REPORT2 '
         DC    CL4'TDQ3'
NBQ4     DC    CL4'NBQ4',CL8'DEST2   ',CL8'PRINT3  ',CL8'REPORT4 '
         DC    CL4'TDQ4'
NBQ5     DC    CL4'NBQ5',CL8'DEST1   ',CL8'RMT14   ',CL8'REPORT5 '
         DC    CL4'TDQ5'
NBQ6     DC    CL4'NBQ6',CL8'MVSJESA ',CL8'RMT68   ',CL8'REPORT6 '
         DC    CL4'TDQ6'
NBQ7     DC    CL4'NBQ7',CL8'VMSP4   ',CL8'PRINT16 ',CL8'REPORT7 '
         DC    CL4'TDQ7'
NBQ8     DC    CL4'NBQ8',CL8'POWERB  ',CL8'REMOTE2 ',CL8'REPORT8 '
         DC    CL4'TDQ8'
ENQBUSY  DC    F'55'
QZERO    DC    F'23'
TDQENQ   DC    CL8'NBTDQEBQ'
ENQLEN   DC    H'8'
         END

Bob Hunt
Technical Consultant
Newell and Budge (UK) ) Xephon 1989


