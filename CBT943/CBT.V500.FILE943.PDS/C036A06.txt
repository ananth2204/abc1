 Cross-reference of PCT and SNT (continued)
The article to print a cross-reference listing of the PCT and SNT is concluded
this month with the publication of the remainder of the source code.
* SEARCH THE PCT-ENTRY                                    *
* ENTRY VALUES : R11 POINTS TO A VALID SNT-TAB-ENTRY
*  ALL TRANIDS FOR WHICH THIS USER IS AUTHORISED ARE PRINTED.
         DS    F
SEAPACT  ST    R1,*-4
         MVI   ZWFELD,X'40'            AND CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
         MVI   ZASA,C'-'
         MVC   SNTKON,SK4              MOVE KON OPER-ID
         L     R12,PCTTABA
         LA    R1,SNTVAR+1
         SR    R0,R0
         STM   R0,R1,SAVEAREA
SEAPCT02 CLI   PCTTRAN,X'FF'
         BE    SEAPCT08
         MVC   ZWFLD(8),SNTSEC
         TM    PCTSEC+7,X'01'
SWITCH   BO    SEAPCT20
         NC    ZWFLD(8),PCTSEC
         BNZ   SEAPCT20
SEAPCT04 NI    PCTSEC+7,X'FE'         IGNORE SEC=1
         AH    R12,=H'22'
         B     SEAPCT02
SEAPCT08 SH    R1,=H'5'                FOR FOLLOWING INSTR.
         MVI   R4(R1),C' '             KILL LAST COMMA
         PUT   LISTE                   ELSE PRINT IT
         MVI   ZWFELD,X'40'            AND CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
SEAPCT09 L     R1,SEAPCT-4
         BR    R1
SEAPCT20 LM    R0,R1,SAVEAREA
         MVC   0(4,R1),PCTTRAN
         MVI   4(R1),C','
         AH    R1,=H'5'
         AH    R0,=H'1'
         CH    R0,=H'20'
         BL    SEAPCT28
         PUT   LISTE                   PRINT IT
         MVI   ZWFELD,X'40'            CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
         LA    R1,SNTVAR+1
         SR    R0,R0
SEAPCT28 STM   R0,R1,SAVEAREA
         B     SEAPCT04
* PRINT THE PCT-ENTRY                                     *
* ENTRY VALUES : R12 POINTS TO A VALID PCT-TAB-ENTRY
*  THIS ENTRY IS PRINTED WITH NAME,OPID AND SECURITY
         DS    F
PRTPCT   ST    R1,*-4
         CLI   PCTSECX+1,X'01'         UNPROTECTED TRANSA ARE
         BE    XSP006                  HERE IGNORED
         MVI   ZWFELD,X'40'            CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
         MVI   ZASA,C'1'
         MVC   SNTKON,SK6              MOVE KON TRANSA
         MVC   SNTVAR(4),PCTTRAN       MOVE TRANID
         MVC   SNTVAR+10(8),PCTPROG    MOVE PROG-NAME
         BAL   R1,HDRSUFFX
         MVI   ZWFELD,C'1'
         PUT   LISTE                   PRINT IT
         MVI   ZASA,C'-'
         MVI   ZWFELD,X'40'            CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
          MVI   ZASA,C'-'
         MVC   SNTKON,SK7              MOVE KON SEC-KEY
         SR    R1,R1
         LH    R1,PCTSECX
         CVD   R1,SECCP                CONVERT IN ZW-FIELD
         OI    SECCP+7,X'0F'           SKIP THE SIGN
         UNPK  SNTVAR-1(3),SECCP+6(2)  MAKE IT READABLE
         MVI   SNTVAR-1,X'40'          SKIP FIRST ZERO
         PUT   LISTE                   PRINT IT
         L     R1,PRTPCT-4
         BR    R1
* SEARCH THE SNT-ENTRY                                    *
* ENTRY VALUES : R12 POINTS TO A VALID PCT-TAB-ENTRY
*  FOR THIS SEC-CODE ALL SNT-TAB-ENTRIES ARE PRINTED
         DS    F
SEASNT   ST    R1,*-4
         MVI   ZWFELD,X'40'          AND CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
         MVI   ZASA,C'-'
         MVC   SNTKON,SK8             MOVE KON OPER-ID
         L     R11,SNTTABA
         LA    R1,SNTVAR
         SR    R0,R0
         STM   R0,R1,SAVEAREA
SEASNT02 CLI   SNTNAME,X'FF'
         BE    SEASNT08
         MVC   ZWFLD(8),SNTSEC
         NC    ZWFLD(8),PCTSEC
         BNZ   SEASNT50
SEASNT04 AH    R11,=H'25'
         B     SEASNT02
SEASNT08 PUT   LISTE                  ELSE PRINT IT
         MVI   ZWFELD,X'40'           AND CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
SEASNT09 L     R1,SEASNT-4
         BR    R1
SEASNT50 LM    R0,R1,SAVEAREA
         MVC   0(14,R1),SNTNAME
         AH    R1,=H'15'
         AH    R0,=H'1'
         CH    R0,=H'6'
         BL    SEASNT68
         PUT   LISTE                   PRINT IT
         MVI   ZWFELD,X'40'            CLEAR
         MVC   ZWFELD+1(L'ZWFELD-1),ZWFELD
         LA    R1,SNTVAR
         SR    R0,R0
SEASNT68 STM   R0,R1,SAVEAREA
         B     SEASNT04
* SUBROUTINE LOAD A PHASE                                  *
         DS    F
PLOAD    ST    R1,*-4                  SAVE RETURN-ADDR
         CLI   PSFLAG,C'Y'             IF WE HAVE ALREADY STRG
         BE    PLOAD2                  WE NEED NO MORE
         MVI   PSFLAG,C'Y'             FLAG STORAGE CALLED
         L     R0,LOADSZ
         GETVIS ADDRESS=(1),LENGTH=(0)
         LTR   R15,R15
         BNZ   EXIT2
         ST    R1,STRADR               STORE THE START OF STORAGE
PLOAD2   L     R9,STRADR               AND LOAD IT
         LA    R4,PHASNA               LOAD PHASE-NAME
         LOAD  (4),(9)                 AND LOAD HER
         L     R1,PLOAD-4              LOAD RETURN-ADDR
         BR    R1                      AND RETURN
         DS    F              PUT DATE AND SUFFIX INTO HEADER
 HDRSUFFX ST    R1,*-4                 SAVE RETURN-ADDR
         MVC   LSECCU+50(4),=C'LST='
         MVC   LSECCU+54(8),LSTNAM    NAME INTO HEADER
         MVC   LSECCU+70(11),=C'PCT SUFFIX='
         MVC   LSECCU+81(2),PCTNA+6
         COMRG
         MVC   LSECCU+90(8),0(R1)
         L     R1,HDRSUFFX-4           LOAD RETURN-ADDR
         BR    R1                      AND RETURN
* TRANSLATE THE HEX-SECURITY INTO AN 8-BYTE FIELD          *
* ENTRY VALUES : R6  = SEC-CODE IN HEX  (DESTROYED)
*                R12 = START OF 8-BYTE SEC-FIELD
         DS    F
TRANSSEC ST    R1,*-4
         SR    R1,R1
         LA    R1,7
TRANSS06 CH    R6,=H'09'          ALREADY BETWEEN 1 AND 8 ?
         BL    TRANSS08           IF YES,BYTE FOUND,SEARCH BIT
         SH    R6,=H'08'          ELSE NEXT BYTE
         SH    R1,=H'1'           INCR. COUNTER
         B     TRANSS06           TRY ONCE MORE
TRANSS08 AR    R1,R12             ADD BASE-REG TO BYTE COUNTER
*                                 GIVING ADDR. OF BYTE
         SH    R6,=H'1'           SUBTRACT FOR TR
         STH   R6,HWORD
         TR    HWORD+1(1),BITTAB  TRANSL. FOR MASK
         OC    0(1,R1),HWORD+1    SKIP THE BITS IN THE RIGHT BYTE
         L     R1,TRANSSEC-4
         BR    R1
* BUBBLE-SORT FOR THE SNT-ENTRIES                        *
         DS    F
BUBBLES  ST    R1,*-4
         STM   R4,R12,SAVEAREA
         LA    R8,25       FIX    LENGTH OF WHOLE RECORD
         LA    R5,9        FIX    START OF SORT-VALUE
         LA    R6,14      FIX     LENGTH OF SORT-VALUE
         LA    R7,1               COUNTER FOR SWITCHED RCRDS
         SH    R5,=H'1'           WE NEED AS OFFSET
         SH    R6,=H'1'           THATS FOR EXECUTE
BUB005   C     R7,=F'0'           NO MOVE ON LAST RUN ?
         BE    BUB090             YES, WE ARE READY
         L     R4,SNTTABA  VAR    START OF TAB
         SR    R7,R7       VAR    COUNTER FOR SWITCHED RCRDS
BUB010   LA    R9,0(R8,R4)   VAR    POINT TO NEXT RECORD
         CLI   8(R9),X'FF'        END OF TAB ?
         BE    BUB005             GO TO TOP
         LA    R10,0(R5,R4)        POINT TO SORT VALUE
         LA    R11,0(R5,R9)        "
         EX    R6,CLC1            COMPARE
         BNH   BUB050             NO MOVE
         SH    R8,=H'1'           THATS FOR EXECUTE
         EX    R8,MVC1             SAVE FIRST RCRD
         EX    R8,MVC2             MOVE SCND TO FIRST RCRD
         EX    R8,MVC3             MOVE FIRST TO SCNFD RCRD
         AH    R8,=H'1'            THATS FOR EXECUTE
         A     R7,=F'1'            COUNT THE MOVES
BUB050   LR    R4,R9               SWITCH THE POSITIONS
         B     BUB010              LOOP
BUB090   LM    R4,R12,SAVEAREA     RELOAD REG
         L     R1,BUBBLES-4        ...
         BR    R1                  RETURN
CLC1     CLC   0(0,R10),0(R11)
MVC1     MVC   SORTWRK1(0),0(R4)
MVC2     MVC   0(0,R4),0(R9)
MVC3     MVC   0(0,R9),SORTWRK1
EXIT1    CLOSE TCARD              HERE'S THE NORMAL EOJ
          CLOSE LISTE
         EOJ
EXIT2    CANCEL                   IF ERROR WE ARE HERE
         LTORG
SAVEAREA DS    18F
BITTAB   DC    XL8'0102040810204080'
SEC01    DC    XL8'0000000000000001'
GSCHAB   DC    XL8'0000000000000000'
PCTNA    DC    CL8' '
PCTADR   DC    F'0'
SNTNA    DC    CL8' '
SNTADR   DC    F'0'
PTABST   DC    F'0'
PINXST   DC    F'0'
SECCP    DC    D'0'
ZW1      DC    F'0'
PCTTABA  DC    F'0'
SNTTABA  DC    F'0'
STRADR   DC    F'0'
PHASNA   DC    CL8' '
ZWFLD    DC    CL8' '
LSTNAM   DC    CL8' '
PSFLAG   DS    X
XOPT     DS    X
HWORD    DC    H'0'
SAVR6    DC    F'0'
* THESE NUMBERS SHOULD BE INCREASED IF TOO SMALL
PCTSZ    DC    F'33000'          1500 ENTRYS A 22 BYTE
SNTSZ    DC    F'10000'           400 ENTRYS A 25 BYTE
LOADSZ   DC    F'100000'         FOR LOAD OF PCT/SNT PHASE
INP      DC    CL80' '
ZWFELD   DS    0CL132
ZASA     DC    CL01' '
         DC    CL09' '
LTRANID  DC    CL4' '
         DC    CL6' '
LSECCU   DC    CL3' '
         DC    CL120' '
         ORG   ZWFELD+1
SNTKON   DS    CL17
SNTVAR   EQU   *
         ORG   ZWFELD+132
SK1      DC    CL17'OPERATOR NAME  : '
SK2      DC    CL17'OPERATOR ID    : '
SK3      DC    CL17'SECURITY KEYS  : '
SK4      DC    CL17'TRANSACTIONS   : '
SK5      DC    CL30'UNPROTECTED TRANSACTIONS:'
SK6      DC    CL17'TRANSACTION    : '
SK7      DC    CL17'SECURITY KEY   : '
SK8      DC    CL17'OPERATORS      :'
LSTCARD1 DC    CL71'* $$ LST CLASS=E,DISP=H,DEST=(,CMS1)'
         DS    0F
LISTE    DTFPR DEVADDR=SYSLST,IOAREA1=ZWFELD,DEVICE=3203,CTLCHR=ASA
TCARD    DTFCD DEVADDR=SYSIPT,IOAREA1=INP,EOFADDR=EXIT1
SORTWRK1 DS    CL250
PCTTAB   DSECT          IN-CORE-TAB
PCTSEC   DS    CL8      8 BYTE SECURITY
PCTTRAN  DS    CL4      TRANID
PCTPROG  DS    CL8      PROG-NAME
PCTSECX  DS    H        SECURITY IN HEX
SNTTAB   DSECT          IN-CORE-TAB
SNTSEC   DS    0CL8
SNTSECX  DS    CL5      SECURITY KEY EXTENSION
SNTSECK  DS    CL3      SECURITY KEY
SNTNAME  DS    CL14     OPERATOR-NAME
SNTOPID  DS    CL3      OPERATOR-ID
 DFHSNNT  DSECT          INPUT
SNNTIND  DS    X
SNNTN    DS    CL20     OPERATOR-NAME
SNNTNL   DS    X
SNNTPS   DS    CL8
SNNTID   DS    CL3      OPERATOR-ID
SNNTSKE  DS    CL5      SECURITY-KEY EXTENSION  25-64
SNNTSK   DS    CL3      SECURITY-KEY             1-24
         END   ANF


Werner Kraibuhler
Systems Programmer
Heckler & Koch (West Germany) ) Xephon 1988




















































