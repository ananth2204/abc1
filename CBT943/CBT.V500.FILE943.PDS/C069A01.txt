A TOR monitor for office system clean-up

At our installation we run a four-region MRO office system
consisting of DisplayWrite/370, PS/CICS, DLS-E, and
Personal Manager.  We have well over 1,000 active users on
the system at peak times.  This means that when we have a
region fail we must try to get the region back and running as
soon as we can.  The MRO set-up consists of one TOR, two
AORs, and one DOR.  If we lose one or both of the AORs, we
clean down the PS/CICS and Personal Manager queues that are
held in the DOR by means of the PEP and ZNEP.  This means
we can just restart the lost AOR as soon as we can and each
user's session will have been cleaned up so that they will not
receive the PS/CICS message 'SIGN-ON REJECTED.
ALREADY SIGNED ON AT TERMINAL xxxx'.

However, if we lose the TOR, we have to shut down the DOR
to clean out all the sign-on queues as there is no way we can
run any clean-up from the TOR since it is no longer active.
Because the DOR takes such a long time to terminate and to
start opening and backing out all the files, our users have to
wait a long time before we have restored the service.  This
method of cleaning up also means that, if the TOR falls over
out of normal office hours, the operators have to remember to
close down and restart the DOR before restarting the TOR.
This can easily be forgotten and will result in one of us systems
programmers being called out to solve a sign-on problem.
With these problems in mind we decided to write a simple
command-level program that will monitor the TOR from the
DOR.  If it ever falls over, it deletes all the PS/CICS and
Personal Manager sign-on queues contained in the DOR.


TABLE REQUIREMENTS

Add the following entry to both the TOR's and the DOR's PLTPI:
                  DFHPLT TYPE=ENTRY,PROGRAM=NUTORMON

Add the following entries to the DOR's PCT:

                  DFHPCT TYPE=ENTRY,PROGRAM=NUTORMON,
                                 TRANSID=SMON,
                                 RSL=PUBLIC,
                                 TWASIZE=0
               DFHPCT TYPE=ENTRY,PROGRAM=NUTORMON,
                                 TRANSID=TMON,
                                 RSL=PUBLIC,
                                 TWASIZE=0

Add the following entry to the DOR's PPT:

               DFHPPT TYPE=ENTRY,PROGRAM=NUTORMON


WHAT THE PROGRAM DOES

At PLTPI time in the TOR, the program re-boots itself in the
DOR.  At PLTPI time in the DOR, the program checks to see
if the TOR is already up - this means that either the DOR has
fallen over and been restarted while the other regions have
remained active, or the TOR was started before the DOR (not a
good idea!).  In both cases, monitoring should begin.  The
TOR will start the monitor at its PLTPI time.

These two routines can be used in many applications, not just
for cleaning up PS/CICS sign-on queues (eg for statistics
collection so that statistics taken for the TOR will match those
taken for the DOR).

Once the monitor has been started in the DOR, it will check
whether the TOR is active by attempting to allocate a session
with the TOR and then either freeing the allocated session and
restarting itself in 30 seconds or deleting all the PS/CICS and
Personal Manager sign-on queues.  The reason for attempting
to allocate a session with the TOR rather than inquiring on the
connection is that, when doing the latter, the result returned
from the INQUIRE command could be 'INSERVICE', even
when the region is no longer active.


NOTES

The program deletes PS/CICS sign-on queues that are prefixed
'ZMDB' rather than the default name 'DMDB' as we alter this
when adding 'DMD*' to our TSTs.  Although this program
was written to monitor the TOR from a DOR it could easily be
modified to monitor a TOR from a region that holds the sign-
on queues.


PROGRAM SOURCE CODE

*** Program to monitor TOR from DOR and when it crashes run a clean ***
*** up on all PS/CICS and PM sign-on queues contained in the DOR    ***
TSMAPBAR EQU   7                   *                                 *
TSGIDBAR EQU   8                   *                                 *
TSUTEAR  EQU   9                   *                                 *
TSUTBAR  EQU   10                  *                                 *
         DFHEISTG                  *                                 *
TIME     DS    D                   * Absolute time from CICS         *
MSGLEN   DS    H                   * Message                         *
MSG      DS    0CL130              * Message                         *
MSGNO    DS    CL9                 * Message number                  *
MSGTIME  DS    CL9                 * Message time stamp              *
MSGTEXT  DS    CL112               * Message text                    *
*        DFHEIEND                  *                                 *
         COPY  DFHCSADS            * CSA DSECT                       *
         COPY  DFHTCADS            * TCA DSECT                       *
         COPY  DFHTSMDS            * TS DSECT                        *
NUTORMON DFHEIENT                  * => Entry Point                  *
NUTORMON AMODE 31                  *                                 *
NUTORMON RMODE 24                  *                                 *
         USING DFHCSADS,R2         * Address CSA                     *
         EXEC  CICS ADDRESS      . * Point R2 at CSA                 * X
               CSA (R2)          . *                                 *
         TM    CSASSI2,CSAPLTPI    * Is this PLTPI ?                 *
         BZ    TERM                * Yes - Is this TOR               *
         EXEC  CICS HANDLE       . * Handle Errors                   * X
               CONDITION         . *                                 * X
               INVREQ(ERROR)     . *                                 * X
               NOTAUTH(ERROR)    . *                                 * X
               SYSIDERR(STRCLEAN)                                      X
               SYSBUSY(RESTRT)   . *                                 * X
               SESSIONERR(RESTRT)                                      X
               SESSBUSY(RESTRT)  . *                                 *
         EXEC  CICS ALLOCATE     . * No - Is TOR still up?           * X
               SYSID(TOR)        . *                                 *
         MVC   SESS,EIBRSRCE       * Get Session                     *
         EXEC  CICS FREE         . * Free it!                        * X
               SESSION(SESS)     . *                                 *
RESTRT   EXEC  CICS START        . * Re-boot in 30 Seconds           * X
               TRANSID(TMON)     . *                                 * X
               INTERVAL(30)      . *                                 *
         CLC   EIBTRNID,SMON       * Started by TOR ?                *
         BNE   RETURN              * Don't bother with message       *
         LA    R1,MONMSG           * Point R1 at message             *
         MVC   MSGLEN,MONLEN       * Get message length              *
         BAL   R4,MESSAGE          * Write message to log            *
         B     RETURN              * Exit                            *
STRCLEAN LA    R1,STRMSG           * Point R1 at starting message    *
         MVC   SYSTOR,TOR          * Move TORs SYSIDNT into message  *
         MVC   MSGLEN,STRLEN       * Get message length              *
         BAL   R4,MESSAGE          * Write message to log            *
CLEAN    L     R10,CSATSMTA        * Point R10 at TS                 *
         CLC   TSUTCC,NULLS        * Any queues at all?              *
         BNH   FINISH              * No - exit                       *
SEARCH   L     R9,TSUTAHI          * Point R9 at TS entry            *
NEXTENT  C     R9,TSUTALI          * End of this chain ?             *
         BNH   CONT                * No - carry on down this chain   *
         L     R10,TSUTFC          * Point R10 at next chain         *
         LTR   R10,R10             * Does next chain exist?          *
         BZ    FINISH              * No - exit                       *
         B     SEARCH              * Continue search                 *
CONT     CLC   TSUTEID(4),PSCICS   * PS/CICS queue ?                 *
         BE    DELQUE              * Yes - delete queue then         *
         CLC   TSUTEID(4),PM       * PM queue ?                      *
         BE    DELQUE              * Yes - delete queue then         *
         LA    R9,TSUTELN(R9)      * Move to next entry              *
         B     NEXTENT             * Next entry                      *
TERM     EXEC  CICS HANDLE       . * Handle Error                    * X
               CONDITION         . *                                 * X
               SYSIDERR(RETURN)  . *                                 * X
               SYSBUSY(RETURN)   . *                                 * X
               SESSIONERR(RETURN)                                      X
               SESSBUSY(RETURN)  . *                                 *
         EXEC  CICS ASSIGN       . * Get SYSIDNT                     * X
               SYSID(SYSID)      . *                                 *
         CLC   SYSID,TOR           * Is this the TOR?                *
         BNE   ROR                 * No - is this DOR?               *
         EXEC  CICS START        . * Get DOR to start monitoring     * X
               TRANSID(SMON)     . *                                 * X
               SYSID(DOR)        . *                                 *
         B     RETURN              * Exit                            *
ROR      CLC   SYSID,DOR           * Just check if program running   *
         BNE   RETURN              *  in wrong place!!               *
         EXEC  CICS ALLOCATE     . * TOR already up?                 * X
               SYSID(TOR)        . *                                 *
         MVC   SESS,EIBRSRCE       * Get session                     *
         EXEC  CICS FREE         . * Free it!                        * X
               SESSION(SESS)     . *                                 *
         EXEC  CICS START        . * Start monitoring in 30 secs     * X
               TRANSID(TMON)     . *                                 * X
               INTERVAL(30)      . *                                 *
         LA    R1,MONMSG           * Point R1 at message             *
         MVC   MSGLEN,MONLEN       * Get message length              *
         BAL   R4,MESSAGE          * Write message to log            *
RETURN   EXEC  CICS RETURN       . * <= Exit point                   *
*** SUBROUTINES ***
DELQUE   MVC   TCATSDI,TSUTEID     * Put queue id in TCA             *
         TM    TSUTETC,TSUTEGID    * Group TS queue?                 *
         BO    GROUP               * Yes - delete queue              *
SINGLE   DFHTS TYPE=RELEASE      . * Delete single queue             *
         B     CLEAN               *                                 *
GROUP    DFHTS TYPE=PURGE        . * Delete group queue              *
         B     CLEAN               *                                 *
FINISH   LA    R1,ENDMSG           * Point R1 at message             *
         MVC   MSGLEN,ENDLEN       * Get message length              *
         BAL   R4,MESSAGE          * Write message to log            *
         B     RETURN              * Exit                            *
ERROR    LA    R1,ERRMSG           * Point R1 at message             *
         MVC   MSGLEN,ERRLEN       * Get message length              *
         BAL   R4,MESSAGE          * Write message to log            *
         B     RETURN              * Exit                            *
MESSAGE  MVC   MSGNO,0(R1)         * Get message number              *
         MVC   MSGTEXT,9(R1)       * Get message text                *
         EXEC  CICS ASKTIME      . * Get time                        * X
               ABSTIME(TIME)     . *                                 *
         EXEC  CICS FORMATTIME   . * Format time                     * X
               ABSTIME(TIME)     . *                                 * X
               TIME(MSGTIME)     . *                                 * X
               TIMESEP('.')      . *                                 *
         LH    R1,MSGLEN           * Get current message length      *
         AH    R1,=H'9'            * Increment by length of timestamp*
         STH   R1,MSGLEN           * Set length                      *
         EXEC  CICS WRITEQ TD    . * Put to CICS log                 * X
               QUEUE('CSMT')     . *                                 * X
               FROM(MSG)         . *                                 * X
               LENGTH(MSGLEN)    . *                                 *
         BR    R4                  * Return                          *
*** LOCAL EQUATES AND CONSTANTS ***
MONMSG   DC    C'NUT0001I : Monitoring of TOR started. Interval = 30'
MONLEN   DC    Y(*-MONMSG)
STRMSG   DC    C'NUT0002I : Session with '
SYSTOR   DC    CL4' '
         DC    C' lost - Sign-on queue deletion beginning.'
STRLEN   DC    Y(*-STRMSG)
ENDMSG   DC    C'NUT0003I : Sign-on queue deletion successful.'
ENDLEN   DC    Y(*-ENDMSG)
ERRMSG   DC    C'NUT0004E : Sign-on queue deletion failed.'
ERRLEN   DC    Y(*-ERRMSG)
TOR      DC    CL4'TR2B'
DOR      DC    CL4'DI1A'
PSCICS   DC    CL4'ZMDB'
PM       DC    CL4'PM$$'
SMON     DC    CL4'SMON'
TMON     DC    CL4'TMON'
NULLS    DC    X'0000'
SYSID    DS    CL4
SESS     DS    CL8
         END


'Jiff'
Systems Programmer
Norwich Union Insurance Group (UK)

