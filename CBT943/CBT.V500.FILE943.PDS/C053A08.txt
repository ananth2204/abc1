DTB and TBP exits

In Issue 49, the article VSAM ESDS back-out addresses DTB
and TBP exits in a CICS 1.7 environment.  I required similar
exits and run in a VSE/SP shop with CICS release 1.6.  The
DTB exit follows the same logic as in the related article.  The
TBP exit, however, requires the use of a static exit instead of a
global exit.  This is because of a CICS release 1.6 constraint.  I
have included the CICS stage one generation source code as
well as the TBP exit itself.

A problem encountered when developing the DTB exit
involved the use of an empty ESDS dataset.  Our application
requires resetting (IDCAMS delete/define) the targeted file
each night.  Each day a transaction is run which adds records to
this file.  The file is not defined as a shared file in the FCT thus
bypassing an open error.

When testing the DTB exit, I would write two or three records
to the dataset before forcing an abend.  The records were never
'logically' deleted and the DBRERRCD byte contained a
DBFEGU (get for update) error instead of a DBFEWA (write-
add) error.  Also, register six appeared to be pointing to a
VSWA instead of a FWA for the affected record(s).  The
problem appears to be VSAM not yet recognizing the added
records and returning an empty file error when a get for update
is done to allow the 'logical' delete for the write-add error
condition.  The records appear to be in the file's VSAM buffers
but have not been physically written to the dataset.  This would
occur at a sync point or at task termination.  When a seed
record was inserted prior to CICS start-up and the test re-ran,
everything worked as expected.

STAGE ONE SOURCE

// JOB DFHSTAG1
.
.
.
// OPTION DECK,ALIGN
// LIBDEF SOURCE,SEARCH=PRD2.GEN1
// EXEC ASSEMBLY,SIZE=256K
         DFHSG TYPE=INITIAL,                                           X
               DLI=YES,                                                X
               OPSYS='DOS/VSE',                                        X
               ASMBLR=ASSEMBLY,                                        X
               JOBNAME=DFH,                                            X
               PRINT=(LIST,XREF,SOMEDSECT),                            X
               VTAM=YES
         DFHSG PROGRAM=TBP,                                            X
               DLI=YES,                                                X
               STAGE2=FORCE,                                           X
               XFERROR=TBPEXIT1,                                       X
               SUFFIX=01
         DFHSG TYPE=FINAL
         END
/*
/&

DFHTBEXT.SOURCE

*                   DFHTBEXT
*    THIS EXIT IS TO PROVIDE BACKOUT SUPPORT OF THE RPODIST FILE.
*    SEE DTBEXIT1 FOR CORRESPONDING DTB EXIT.  THIS WILL PLACE HIGH
*    VALUES IN THE FIRST BYTE OF THE RPODIST FILE TO LOGICALLY DELETE
*    ALL IN FLIGHT RECORDS AT TIME OF CICS CRASH.
TBPEXIT1 DS    0H
         STM   0,15,CSAOSRSA+8     SAVE REGISTERS
         BALR  R5,0
         USING *,R5
         L     R5,=A(TBPEXIT1)
         USING TBPEXIT1,R5
         MVC   SAVEREGS,CSAOSRSA+8
         USING DFHJCRDS,JCRREG     ADDR RESTART DATA SET REC
LOOP     EQU   *
         CLC   JCSPFCFI,=C'RPODIST ' IS IT THIS FILE?
         NOP   LOOP                USED FOR TESTING
         BNE   RETURN              NO... GET OUTA HERE
         CLI   TBXITCOM,TBFEWA     YES.. IS IT A WRITE/ADD?
         BNE   RETURN              NO... GET OUTA HERE
         MVI   16(FWACBAR),X'FF'   YES .. FLAG TO DELETE
         DFHWTO 'DFHTBEXT - RPODIST RECORD FLAGGED'
         LM    R0,R15,SAVEREGS     RETURN TO DFHTBP
         B     0(,R14)             RE-WRITE FWA
RETURN   EQU   *
         MVC   WTOIT+35(8),JCSPFCFI  MOVE IN FILE NAME
WTOIT    EQU   *
         DFHWTO 'DFHTBEXT - FILE ERROR  ->            '
         LM    R0,R15,SAVEREGS     RETURN TO DFHTBP
         B     4(,R14)             DON'T RE-WRITE FWA
         DS    0F
SAVEREGS DS    XL64
         LTORG


Mark Johnson
Systems Programmer
The WW Williams Co (USA)                        ) Xephon 1990


