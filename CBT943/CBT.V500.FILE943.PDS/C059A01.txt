Automatic journal archiving for CICS/ESA 3.1

A new facility in CICS/ESA 3.1 allows application journal
datasets to be automatically archived when the journal extent
becomes full or by issuing a CEMT command.  This article
explains the new concept and its suggested implementation and
outlines the advantages of this facility.


EXPLANATION OF JOURNAL STATUS

When a CEMT I J(nn) is issued to display the journal status,
the status of both A and B datasets is displayed.  The active
dataset will be marked 'current'.  The non-active dataset will be
marked 'ready' or 'not ready'.  If a journal dataset is ready, it is
available for use when the current journal becomes full or
advances - 'advance' now replaces the old 'switch' concept.

At advance time, the new active dataset will become current (if
ready) and the old dataset will become not ready.  If automatic
archiving is specified, a not ready dataset can only become
ready when the new archive utility DFHJACDU is run, or by
operator override (this will be explained later).

At advance time, an archive job (which should invoke
DFHJACDU) is automatically submitted by CICS journal
control.  This archive job should check the journal status, back
up the inactive journal dataset, and flag the dataset as ready if
the backup has successfully completed.


REQUIRED DATASETS AND DD STATEMENTS

Three new DD statements are required :

1      DFHJACD - The archive control dataset (VSAM  RRDS).
      Records journal status, open time etc.

2      DFHJPDS - PDS containing the archive job member (this
      is a JCL 'skeleton').

3      DFHJOUT - For output of the archive job to the internal
      reader (eg //DFHJOUT DD SYSOUT=(A,INTRDR)).

DD statements are of course also required for the DFHJ0nA
and DFHJ0nB datasets, initialized in the usual way.


JCT REQUIREMENTS

The name of the archive job member is specified in the JCT as
in the following example:

        DFHJCT JID=02,                                                 +
               JTYPE=DISK2,          2 DISK EXTENTS ARE REQUIRED       +
               BUFSIZE=xxxx,         BUFFER SIZE                       +
               BUFSUV=yyyyy,         BUFFER SHIFT-UP VALUE             +
               ARCHJCL=ARCHJOB,      NAME OF ARCHIVE JOB SKELETON      +
               JOUROPT=(option,option,AUTOARCH)


THE ARCHIVE JOB SKELETON

The following substitution parameters are supplied by CICS
journal control when the archive job is submitted:

o      %APPLID - CICS APPLID
o      %JJ - Journal-id(02-99)
o      %D - A or B dataset
o      %ODATE - Journal open date
o      %OTIME - Journal open time
o      %CDATE - Current date
o      %CTIME - Current time
o      %JACDDSN - DFHJACD dataset name
o      %JOURDSN - Journal dataset name.

These parameters allow a common archive job member to be
set up for all automatically-archived CICS systems, provided
appropriate naming standards are followed.  The following
example illustrates this:

//%APPLIDJ JOB (standard jobcard parms)
//* CHECK JOURNAL STATUS
//CHECK   EXEC  PGM=DFHJACDU,
//        PARM='CHECK JOURNAL=%JJ,DATASET=%D,DATE=%ODATE,TIME=%OTIME'
//STEPLIB  DD  DSN=CICS31.LOADLIB,DISP=SHR
//DFHJACD  DD  DSN=%JACDDSN,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//DFHJAPRT DD  SYSOUT=*
//*
//* ARCHIVE THE JOURNAL TO TAPE
//ARCHIVE  EXEC PGM=DFHJUP,COND=(0,NE)
//STEPLIB  DD   DSN=CICS31.LOADLIB,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//JOURNIN  DD   DSN=%JOURDSN,DISP=SHR
//JOURNOUT DD   DSN=%APPLID.ARCHIVE.J%JJ%D.D%ODATE.T%OTIME,
//             DISP=(NEW,CATLG),UNIT=TAPE,LABEL=RETPD=30  KEEP 30 DAYS
//SYSIN    DD   DSN=CICS31.DFHJPDS(ARCHIVE),DISP=SHR
//*
//* SET THE JOURNAL TO 'READY'
//CHECK   EXEC  PGM=DFHJACDU,
//        PARM='UPDATE JOURNAL=%JJ,DATASET=%D,DATE=%ODATE,TIME=%OTIME'
//STEPLIB  DD  DSN=CICS31.LOADLIB,DISP=SHR
//DFHJACD  DD  DSN=%JACDDSN,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//DFHJAPRT DD  SYSOUT=*
//*
//* THIS STEP PREPARES A MSG & DOCUMENTS THE ARCHIVE
//MSG      EXEC PGM=IKJEFT01,          TSO BATCH ENVIRONMENT
//         DYNAMNBR=30,
//         REGION=4096K,
//         COND=(0,NE),               ** EXECUTE JRNLMSG **
//         PARM='JRNLMSG,%APPLID %JJ %D %ODATE %OTIME'
//JRNLMSG  DD  DSN=CICS31.DFHJPDS(M%APPLID),DISP=SHR
//JRNLLIST DD  DSN=CICS31.ARCHIVE.JRNL.%APPLID,  ** MSG MEMBER **
//             DISP=MOD  ** N.B. MUST NOT BE SHR **
//SYSPROC  DD  DSN=CICS31.CLIST,DISP=SHR
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*
//* THIS STEP WTOR'S THE ARCHIVE MSG TO THE OPERATOR
//OPSNOTE  DD   EXEC PGM=CICSWTO,COND=(0,NE)
//STEPLIB  DD   DSN=CICS31.SWR.LOADLIB,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DSN=CICS31.DFHJPDS(M%APPLID),DISP=SHR *FROM PREV STEP*
//WTORTEXT DD   *
R=REPEAT MSG, Y = ACKNOWLEDGE
/*

The REXX procedure JRNLMSG invoked by IKJEFT01 (the
TSO batch processor) first issues a LISTCAT against the tape
dataset name derived from the input parameters.  The output
from LISTCAT is examined (using the standard REXX
'OUTTRAP' technique) to obtain the volume serial number(s)
of the newly created tape(s).  The tape dataset name and
volume serial number(s) are then written both to the
documentation DD JRNLLIST and to the operator message DD
JRNLMSG.  An appropriate text is appended to JRNLMSG
asking the operator to take appropriate security action.
JRNLMSG then provides the input text for the next step, which
issues a WTOR (write to operator with reply) in installation
standard format.  This enforces operator acknowledgement for
the archive once the archive has successfully completed.


POTENTIAL OPERATIONAL PROBLEMS AND THEIR REMEDIES

If the archive job does not run successfully, then it is possible
for both journal datasets to become not ready when the active
journal advances (ie becomes full).  CICS will issue message
DFH4542A and all CICS applications which use that journal
will stall until the journal becomes ready.  The operator can
either reply 'GO' or 'SUBMIT'.  'SUBMIT' will cause the
archive job to be re-submitted (and fail again if the JCL is
incorrect or a resource is still not available).  If the operator
replies 'GO', the journal dataset will become ready if it has
been flagged available by the DFHJACDU utility.  If it has not
been flagged, message DFH4543A will be issued Â• with the
same reply options as DFH4542.

Thus the operator cannot deliberately (or inadvertently) force
the journal to become ready by an incorrect console reply.
This may only be done using the DFHJACDU utility - for
example by running a job to flag the dataset as available
without backing it up.

It is essential, therefore, that the operator (and the CICS
systems programmer) is notified promptly should problems
occur.  Ideally, a recovery job should also be provided that can
be re-submitted (or edited and submitted).  As explained
above, advancing the journal in order to force re-submission of
the archive job via message DFH4542 is not satisfactory, since
both journal datasets will become not ready.  That would cause
applications to stall.  Nor is it the answer if the archive job
skeleton is incorrect. The following job steps resolve these
problems in most cases:


//* THIS STEP EXECUTES ONLY IF ALL PREVIOUS STEPS HAVE RUN OK
//MAXRC    EXEC PGM=IEFBR14,COND=(0,NE)
//SYSPRINT DD   SYSOUT=*
//*
//* THIS STEP PREPARES A RECOVERY JOB IF THERE ARE PROBLEMS
//BOMBMSG  EXEC PGM=IKJEFT01,            TSO BATCH ENVIRONMENT
//         DYNAMNBR=30,
//         REGION=4096K,                 ** EXECUTE 'JRNLREC' **
//         COND=((EVEN),(0,EQ,MAXRC))    IF ABEND OR RC > 0
//         PARM='JRNLREC,%APPLID %JJ %D %%JOURDSN ODATE %OTIME'
//JRNLJCL  DD  DSN=CICS31.DFHJPDS(R%APPLID),   ** RECOVERY JOB **
//             DISP=SHR
//SYSPROC  DD   DSN=CICS31.CLIST,DISP=SHR
//SYSTSPRT DD   SYSOUT=*
//SYSTSIN  DD   DUMMY
//SYSPRINT DD   SYSOUT=*
//*
//* THIS STEP ISSUES A PROBLEM NOTIFICATION
//BOMBNOTE DD   EXEC PGM=CICSWTO,COND=((EVEN),(0,EQ,MAXRC))
//STEPLIB  DD   DSN=CICS31.SWR.LOADLIB,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DUMMY
//WTORTEXT DD   *
%APPLID ARCHIVE FAILED - PLS NOTIFY CICS SUPPORT     Y = ACKNOWLEDGE
/*

The conditional coding COND=((EVEN),(0,EQ,MAXRC))
ensures that the problem handling steps can only execute if any
of the previous archive steps have a return code greater than
zero, or if any of these steps have abended.

The REXX procedure JRNLREC plugs in the '%' CICS archive
parameters to the skeleton JCL and writes it to a recovery
member (unique for each CICS APPLID).  The resultant JCL is
essentially a copy of the normal archive job but without the
problem handling steps BOMBMSG and BOMBNOTE.  This
enables prompt recovery for archive problems if the problem is
not in the archive JCL itself.  Since only one archive job
member is used in common by all production CICS systems,
JCL problems can be quickly identified and resolved.

BENEFITS

Before CICS/ESA 3.1, backing up the journals at switch time
required vigilance by the operator (if AUTO SWITCHed) or
timely intervention action if PAUSE was specified in the JCT.
The operator had also to ensure that the appropriate job was
released for the A or B journal dataset.

A correctly implemented system under CICS/ESA 3.1 should
allow journals to be archived with minimal operator
intervention.  It should also minimize the possibility of an
incorrect operator reply jeopardizing the continuity of journal
backups.  In the above system, the only operator messages (if
no problems occur) are tape mount requests and documentation
notes.  In addition, an archive list is automatically maintained.
This speeds up recovery should a journal roll-forward be
required.


David Roth
Systems Programmer (Australia)


