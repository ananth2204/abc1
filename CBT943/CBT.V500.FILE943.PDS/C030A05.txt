 VSE/SP 2.1 operator console under CICS
Our installation recently converted to VSE SP 2.1 and found that our operators
needed alternative consoles to monitor system activity and enter console
commands.  I was looking at the VSE/SP supervisor and noticed that IBM had
written the code necessary to accept VSE commands from application programs
using SVC 30, but have not yet enabled the SVC.  I modified the supervisor
generation, and after reading the article by Dennis J Kaminski in the June 1986
CICS Update, I wrote the program listed below.  It has been successfully run on
a VSE/SP 2.1.6 system with the generation feature and CICS 1.6.
VSE SUPERVISOR GENERATION
// EXEC ASSEMBLY
         SUPVR                     INSTALLATION OPTIONS
.
         FOPT                      INSTALLATION OPTIONS
.
         IOTAB                     INSTALLATION OPTIONS
.
         ORG   SVCTAB+(30*4)       POINT TO SVC 30 TABLE ENTRY
         DC    A(SVC30)
         ORG
         END
/*
ASSEMBLER SOURCE CODE
***                     MAIN PROGRAM FEATURES                       ***
*   1. DISPLAY THE LAST 16 LINES CURRENTLY DISPLAYED ON THE OPERATOR  *
*      CONSOLE AND REFRESH THE SCREEN EVERY SECOND. (SET INTERVAL IN  *
*      PARAGRAPH ICSTR000).                                           *
*   2. DISPLAY AT THE BOTTOM OF THE SCREEN THE JOB NAME AND CURRENT   *
*      PHASE NAME OF EACH PARTITION.                                  *
*   3. PASS COMMANDS TO THE OPERATING SYSTEM. IF THE ENTER KEY IS     *
*      USED COMMANDS ARE PASSED DIRECTLY TO THE SYSTEM. PF KEYS CAN   *
*      BE USED TO REPLY TO THE PARTITIONS (PF1 = F1, .... PF12 = BG). *
*      IF THE PF KEYS ARE USED TO COMMUNICATE WITH THE PARTITION,     *
*      THE PROGRAM WILL NOT PASS THE COMMAND UNTIL THE PARTITION IS   *
*      WAITING ON A RESPONSE. THE FIRST 8 BYTES OF ALL PENDING        *
*      CONSOLE REPLIES ARE DISPLAYED ON THE CICS CONSOLE DISPLAY      *
*      ALONG WITH PARTITION ID TO CANCEL A PENDING COMMAND, JUST      *
*      PRESS APPROPRIATE PF KEY IS USED.                              *
*   4. RE-DISPLAY LAST COMMAND ENTERED. ENTER A PERIOD, THEN PRESS    *
*      THE ENTER KEY AND THE LAST COMMAND ENTERED WILL BE DISPLAYED.  *
***    (SET BY RECALL EQUATE).                                      ***
RECALL   EQU   C'.'                LAST COMMAND RECALL CHARACTER
ICSTRT   EQU   C'S'                INTERVAL CONTROL START
DFHEISTG DSECT
         DS    0F
STCODE   DS    CL2
RFSAVE   DS    F                   RF SAVE
CHANGE   DS    CL1                 SCREEN CHANGE SWITCH
ERASE    DS    CL1                 ERASE SCREEN SWITCH
HWORD    DS    H                   HALFWORD WORK AREA
SAVPTN   DS    H                   NUMBER OF PARTITIONS MAX = X'0C'
SCNLEN   DS    H                   CALCULATED SCREEN LENGTH
CONSAVE  EQU   *                   COMMON AREA
CONLAST  DS    CL80                LAST COMMAND ENTERED
CONLINE  DS    CL1280              CONSOLE DISPLAY LENGTH
CONPRTN  DS    CL192               PARTITION SAVE DATA
CONRSP   DS    CL1170              CONSOLE RESPONSE AREA (AR, F1 .. BG)
CONEND   EQU   *
CONLEN   EQU   CONEND-CONLAST      LENGTH OF COMMON AREA
INPLEN   DS    H                   LENGTH OF INPUT FIELD
INPAREA  DS    CL82                INPUT REPLY AREA
REQSID   DS    CL8                 INTERVAL CONTROL REQUEST ID
TRMID    DS    CL4                 TERMID FOR IC START
SCNCMD   DS    CL80                CURRENT SCREEN COMMAND
PARMLEN  DS    H                   LTA PASS CONSOLE REPLY LENGTH
PARMADD  DS    AL4                 LTA PASS CONSOLE REPLY ADDRESS
 CONSOLE  DS    CL2500              CONSOLE DISPLAY AREA
CMADSECT DSECT                     COMMON AREA DSECT
CMALAST  DS    CL80
CMALINE  DS    CL1280
CMAPRTN  DS    CL192
CMASAVE  DS    (13*90)CL1          LENGTH OF PARTITION RESPONSES
WRKDSECT DSECT                     CONSOLE REPLY WORK DSECT
WRKFLD   DS    0CL90
WRKPID   DS    CL2                 PARTITION ID KEY
WRKLEN   DS    H                   LENGTH OF CONSOLE COMMAND
WRKCMD   DS    CL86                COMMAND
WRKDLEN  EQU   *-WRKDSECT
SYSCOM   SYSCOM                    SYSTEM COMREG DSECT
CRTTAB   DSECT                     CONSOLE TABLE DSECT
         CRTGEN
CRTSAV   CRTSAV DSECT=YES          CONSOLE SAVE DSECT
COMREG   MAPCOMR                   COMREG DSECT
ASYDSECT DSECT                     ORE (OPERATOR REPLY ELEMENT) DSECT
ASYCCB   DS     2D                 CCB
ASYUSCCB DS     F                  ADDRESS OF USERS CCB
ASYUCCW  DS     F                  ADDRESS OF USER'S CCW CHAIN
ASYCUT   DS     F                  ADDRESS OF READ CCW
ASYOCTID DS     H                  TID OF REQUEST TASK
ASYREPLY DS     CL3                REPLY ID WHICH IS PRINTED
ASYCCHQP DS     X                  CHANNEL QUEUE ENTRY NUMBER
ASYFLAG  DS     X                  FLAG BYTE
OCCUPIED EQU    X'80'              ORE IS ACTIVE
ASYRSTAT EQU    X'40'              ORE IN READ STATE
ASYERDEQ EQU    X'20'              DEQUEUE SIO
ASYEND   EQU    X'10'              JUST DEQUEUED
ASYQEDER EQU    X'08'              PUB QUEUED IN ERROR
ASYPT    DS     CL3                PARTITION ID AND SEVERITY
         DS     CL2
ASYDLEN  EQU    *-ASYDSECT
DPT310   DFHEIENT CODEREG=3,DATAREG=10,EIBREG=11
         EXEC  CICS ASSIGN STARTCODE (STCODE)
         MVI   CHANGE,C'N'         INITIALIZE TO NO CHANGE
         MVI   ERASE,C'N'          INITIALIZE TO NO ERASE
         CLC   EIBCALEN,=H'0'      FIRST TIME THRU
         BNE   START               NO, GO AROUND SWITCH
         CLI   STCODE,ICSTRT       INTERVAL CONTROL WITH NO COM
         BE    ENDIT100            YES, GET OUT
         MVI   CHANGE,C'Y'         INITIALIZE TO YES CHANGE
         MVI   ERASE,C'Y'          INITIALIZE TO YES ERASE
         B     HANDLE
START    L     R8,DFHEICAP         POINT TO OLD CONSOLE LINES
         USING CMADSECT,R8
         MVC   CONLAST,CMALAST     MOVE LAST COMMAND
         LA    R5,CMASAVE          LOAD ADDRESS OF PARTITION SAVE
         DROP  R8
         LA    R2,CONRSP           POINT TO THIS WORK AREA
         USING WRKDSECT,R2
         LA    R6,13               LOAD NUMBER OF COMMANDS
MVECMD   MVC   WRKFLD,0(R5)        SAVE LENGTH
         LA    R2,WRKDLEN(R2)      POINT TO NEXT
         LA    R5,WRKDLEN(R5)       ""
         BCT   R6,MVECMD
         CLI   STCODE,ICSTRT       INTERVAL CONTROL START
         BE    PASS000             YES, GO CHECK
CANCEL   MVC   TRMID,EIBTRMID      MOVE TERMINAL ID
         MVC   REQSID(4),TRMID     MOVE TERMINAL ID TO REQID
         MVC   REQSID+4(4),EIBTRNID MOVE TRANS ID TO REQID
         EXEC  CICS HANDLE CONDITION NOTFND(HANDLE)
         EXEC  CICS CANCEL,                                            X
               TRANSID(EIBTRNID),                                      X
               REQID(REQSID)
 HANDLE   CLC   EIBCALEN,=H'0'      FIRST  TIME THROUGH
         BE    DPLY000             YES, DO NOT PASS TO CONSOLE
         EXEC  CICS HANDLE AID,                                        X
               CLEAR(ENDIT000),                                        X
               PF1(PFKEY00),                                           X
               PF2(PFKEY00),                                           X
               PF3(PFKEY00),                                           X
               PF4(PFKEY00),                                           X
               PF5(PFKEY00),                                           X
               PF6(PFKEY00),                                           X
               PF7(PFKEY00),                                           X
               PF8(PFKEY00),                                           X
               PF9(PFKEY00),                                           X
               PF10(PFKEY00),                                          X
               PF11(PFKEY00),                                          X
               PF12(PFKEY00),                                          X
               ENTER(ENTER00),                                         X
               ANYKEY(ENTER00)
         EXEC  CICS RECEIVE,                                           X
               INTO(INPAREA),                                          X
               LENGTH(INPLEN),                                         X
               MAXLENGTH(82)
PFKEY00  MVI   CHANGE,C'Y'         INITIALIZE TO YES CHANGE
         LH    R6,INPLEN           LOAD REGISTER 6
         XC    HWORD,HWORD         CLEAR HWORD
         MVC   HWORD+1,EIBAID      MOVE AID KEY
         NI    HWORD+1,X'0F'       CLEAR HIGH ORDER BYTES
         LA    R1,WRKDLEN          LOAD LENGTH OF DSECT
         MH    R1,HWORD            CALCULATE INDEX
         LA    R2,CONRSP           POINT TO BEGINNING OF TABLE
         AR    R2,R1               ADD OFFSET TO BASE
         USING WRKDSECT,R2
         SH    R6,=H'3'            SUBTRACT LENGTH OF PREFIX
         BNZ   PFKEY10             LENGTH OF COMMAND GREATER THAN 0
         CLC   WRKLEN,=H'0'        ALREADY LENGTH
         BE    PFKEY20             NO, GO MOVE
         XC    WRKFLD,WRKFLD       CLEAR COMMAND
         B     PASS000
PFKEY10  MVC   CONLAST(L'INPAREA-3),INPAREA+3 SAVE COMMAND
PFKEY20  LA    R6,4(R6)            ADD LENGTH OF PARTITION PREFIX
         STH   R6,WRKLEN           SAVE LENGTH
         LA    R5,PIDTBL           LOAD ADDRESS OF PID TABLE
         LA    R1,L'PIDTBL         LOAD LENGTH
         MH    R1,HWORD            CALCULATE OFFSET
         AR    R5,R1               POINT INTO PID TABLE
         MVC   WRKPID,0(R5)        MOVE PID
         MVC   WRKCMD(3),2(R5)     MOVE COMMAND
         MVI   WRKCMD+3,C' '
         MVC   WRKCMD+4(L'INPAREA-3),INPAREA+3
         B     PASS000
         DROP  R2
ENTER00  LH    R6,INPLEN           LOAD COMMAND
         SH    R6,=H'3'            SUBTRACT PREFIX LENGTH
         BNP   PASS000             AR COMMAND LENGTH ZERO
         LA    R2,CONRSP           LOAD ADDRESS OF COMMAND LINE
         USING WRKDSECT,R2         ESTABLISH ADDRESSABILITY
         MVC   WRKCMD,INPAREA+3    SAVE COMMAND
         CLI   WRKCMD,RECALL       RECALL INDICATOR
         BE    INST000             YES, GO INSERT LINE
         STH   R6,WRKLEN           MOVE AR COMMAND LENGTH
         MVC   WRKPID,=C'AR'       AR PARTITION ID
         MVC   WRKCMD,INPAREA+3    MOVE COMMAND
         MVC   CONLAST,WRKCMD      SAVE COMMAND
         DROP  R2
         B     PASS000
PASS000  LA    R2,CONRSP           POINT TO FIRST ENTRY
          USING WRKDSECT,R2
         LA    R8,13               LOAD NUMBER OF POSSIBLE COMMANDS
         CLC   WRKLEN,=H'0'        AR COMMAND
         BNE   PASS030             YES, GO PROCESS
         B     PASS040             GO CHECK NEXT COMMAND
PASS010  CLC   WRKLEN,=H'0'        COMMAND LENGTH ZERO
         BE    PASS040             YES, GO GET NEXT ONE
         ASYSCOM R5                LOAD ADDRESS OF SYSCOM
         USING SYSCOM,R5
         ICM   R5,7,IJBASYAD       LOAD ADDRESS OF AYNC
         DROP  R5
         L     R5,0(R5)            POINT TO ORE
         USING ASYDSECT,R5
         LA    R6,16               LOAD NUMBER OF ORE
PASS020  L     R1,PKZERO           STORAGE PROTECT KEY ZERO
         SVC   (13)
         TM    ASYFLAG,ASYRSTAT    ORE IN READ STATE
         BZ    PASS025             NO, GO CHECK NEXT
         CLC   ASYREPLY(3),WRKCMD  COMMAND / PARTITION MATCH
         BE    PASS030             YES, GO PROCESS
PASS025  LA    R5,ASYDLEN(R5)      POINT TO NEXT ENTRY
         BCT   R6,PASS020          ALL ORE CHECK
         B     PASS040             YES, GO CHECK NEXT REPLY
PASS030  LA    R7,WRKCMD           LOAD ADDRESS OF STATEMENT
         STCM  R7,15,PARMADD       SAVE ADDRESS OF PARAMETER
         MVC   PARMLEN,WRKLEN      LOAD LENGTH
         LA    R1,PARMLEN          LOAD ADDRESS OF PARAMETER
         XR    R0,R0               CLEAR R0
         SVC   30                  LOAD AND EXECUTE TRANSIENT
         ST    R15,RFSAVE          SAVE REGISTER 15
         EXEC  CICS DELAY
         CLC   RFSAVE,=F'4'        RETURN CODE
         BE    PASS030             NO, GO TRY AGAIN
         XC    WRKFLD,WRKFLD       CLEAR COMMAND
PASS040  L     R1,PKRESET          RESET STORAGE PROTECT KEY
         SVC   (12)
         LA    R2,WRKDLEN(R2)      POINT TO NEXT ENTRY
         BCT   R8,PASS010          GO CHECK NEXT
         B     DPLY000
INST000  MVI   CHANGE,C'Y'         FORCE CHANGE SCREEN
         MVC   SCNCMD,CONLAST      MOVE TO SCREEN COMMAND
         B     PASS000             GO DISPLAY SCREEN
DPLY000  LA    R4,CONSOLE          LOAD ADDR OF TIOA
         LA    R7,SFSBA            LOAD ADDR OF FIRST SFSBA
         L     R1,PKZERO           STORAGE PROTECT KEY ZERO
         SVC   (13)
         ASYSCOM R5                LOAD ADDRESS OF SYSCOM
         USING SYSCOM,R5           SETUP SYSCOM DSECT USAGE
         MVC   SAVPTN,IJBNPART     SAVE NUMBER OF PARTITIONS
         L     R5,IJBCONSP         POINT TO ADDRESS OF CRT TABLE
         USING CRTTAB,R5           SETUP CRTTAB DSECT USAGE
         L     R5,ACRTSAV          POINT TO ADDRESS OF CRTSAV
         USING CRTSAV,R5           SETUP CRTSAV DSECT USAGE
         LH    R6,SCTLINES         LOAD NUMBER OF LINES TO MOVE
         L     R5,ALNE1            POINT TO ADDRESS OF LINE 1
         L     R8,DFHEICAP         POINT TO OLD CONSOLE LINES
         USING CMADSECT,R8
         LA    R8,CMALINE          POINT TO CONSOLE LINES
         DROP  R8
         LA    R9,CONLINE          LOAD ADDRESS OF CONSOLE SAVE
DPLY005  CH    R6,=H'16'           MORE THAN 16 LINES
         BNH   DPLY010             NO, GO MOVE TO SCREEN
         BCTR  R6,0                SUBTRACT 1
         LA    R5,81(R5)           POINT TO NEXT LINE
         B     DPLY005             GO CHECK AGAIN
DPLY010  CLC   0(80,R5),0(R8)      CONS LINE EQUAL PREVIOUS DISPLAY
          BE    DPLY020             YES, BYPASS RESEND OF THIS LINE
         MVI   CHANGE,C'Y'         CHANGE FOR SURE
DPLY020  MVC   0(80,R9),0(R5)      SAVE NEW LINES
         MVC   0(4,R4),0(R7)       MOVE SFSBA TO TIOA FOR CONS LINE
         LA    R4,4(R4)            POINT TO TIOA FOR NEXT ENTRY
         MVC   0(80,R4),0(R5)      MOVE CONS LINE FROM CORE TO TIOA
         LA    R4,80(R4)           POINT TO TIOA FOR NEXT ENTRY
DPLY030  LA    R7,4(R7)            POINT TO NEXT SFSBA
         LA    R8,80(R8)           POINT TO NEXT PREVIOUS DISPLAY LINE
         LA    R9,80(R9)           POINT TO NEXT LINE
         LA    R5,81(R5)           POINT TO NEXT INPUT MESSAGE
         BCT   R6,DPLY010          MOVE TILL ALL LINES MOVED
         L     R5,X'14'            LOAD ADDRESS OF ACTIVE COMREG
         USING COMREG,R5
         L     R1,PKRESET          RESET STORAGE PROTECT KEY
         SVC   (12)
         LA    R7,REPSBA           MOVE REPLY ATTRIBUTE
         XR    R1,R1               CLEAR R1
         LA    R1,12               SAVE NUMBER OF PARTITIONS
         LA    R6,12               SAVE NUMBER OF PARTITIONS
         LA    R2,CONRSP+WRKDLEN   POINT TO FIRST PART (BYPASS AR)
         USING WRKDSECT,R2
DPLY032  MVC   0(5,R4),0(R7)       MOVE CHANGE SBA
         XC    5(11,R4),5(R4)      CLEAR COMMAND
         LTR   R1,R1               ALL USED UP
         BZ    DPLY035             YES, GO AROUND
DPLY033  CLC   WRKLEN,=H'0'        LENGTH OF 0
         BE    DPLY034             YES, GO CHECK NEXT
         BCTR  R1,0                DECREMENT COUNT
         MVC   5(02,R4),WRKPID     MOVE PARTITION ID
         MVC   7(09,R4),WRKCMD+3   MOVE FIRST 8 OF COMMAND
         LA    R2,WRKDLEN(R2)      POINT TO NEXT
         B     DPLY035             GO DECREMENT
DPLY034  BCTR  R1,0                DECREMENT COUNT
         LA    R2,WRKDLEN(R2)      POINT TO NEXT
         LTR   R1,R1               ENTIRE TABLE SEARCHED
         BNZ   DPLY033             NO, GO CHECK
DPLY035  LA    R4,16(R4)           POINT TO NEXT ONE
         LA    R7,5(R7)            POINT TO NEXT ONE
         BCT   R6,DPLY032          GO MOVE NEXT
         LH    R5,BGCOMPT          POINT TO BG COMREG
         LH    R2,PIB2PTR          LOAD ADDRESS OF PIB2TAB
         LA    R2,16(R2)           POINT TO BG PIB2
         LH    R1,PIBPT            LOAD ADDRESS OF PIB
         LA    R1,16(R1)           POINT TO BG PIB
         LH    R6,SAVPTN           LOAD NUMBER OF PARTITIONS
         LA    R7,PTNSBA           LOAD ADDRESS OF PARTITION ATTRIBUTES
DPLY040  LH    R5,0(R2)            LOAD ADDRESS OF COMREG
         MVC   0(5,R4),0(R7)       MOVE PARTITION ATTRIBUTE
         MVC   5(1,R4),2(R1)       MOVE PARTITION ID
         MVC   6(5,R4),5(R7)       MOVE PARTITION ATTRIBUTE
         MVC   11(1,R4),3(R1)      MOVE PARTITION ID
         MVC   12(5,R4),10(R7)     MOVE JOB NAME SBA
         MVC   17(8,R4),COMNAME    MOVE JOB NAME
         MVC   25(5,R4),15(R7)     MOVE PHASE NAME SBA
         MVC   30(8,R4),IJBPHNAM   MOVE PHASE NAME
         MVC   0(8,R9),COMNAME     SAVE JOB NAME
         MVC   8(8,R9),IJBPHNAM    SAVE PHASE NAME
         CLC   IJBPHNAM,=CL8'NO NAME' NO PHASE EXECUTING
         BNE   DPLY050             YES, BYPASS MOVE
         MVC   30(8,R4),BLANKS     CLEAR PHASE NAME
DPLY050  CLC   0(16,R9),0(R8)      NAME CHANGE DIFFERENT
         BE    DPLY055             NO, BYPASS CHANGE SET
         MVI   CHANGE,C'Y'         SET CHANGE FLAG
DPLY055  LA    R4,38(R4)           POINT TO NEXT ENTRY
         LA    R7,20(R7)           POINT TO NEXT ENTRY
          LA    R2,16(R2)           POINT TO NEXT PIB2TAB
         LA    R1,16(R1)           POINT TO NEXT PIB
         LA    R8,16(R8)           POINT TO NEXT ENTRY
         LA    R9,16(R9)             ""
         BCT   R6,DPLY040          PERFORM LOOP
         MVC   0(6,R4),INSFSBA     MOVE INPUT SFSBA
         LA    R5,CONSOLE          LOAD ADDRESS OF BEGIN
DPLY060  CLI   CHANGE,C'N'         HAS IT CHANGED
         BE    DPLY080             NO, BYPASS SEND
         CLI   ERASE,C'Y'          ERASE SCREEN
         BE    DPLY070             YES, GO SEND ERASE
         LA    R4,5(R4)            POINT TO END
         CLI   STCODE,ICSTRT       INTERVAL CONTROL START
         BE    DPLY065             YES, DO NOT CHANGE CURSOR
         LA    R4,1(R4)            POINT PAST IC
         MVC   0(79,R4),SCNCMD     MOVE MOVE COMMAND
         LA    R4,79(R4)           INCREMENT LENGTH
DPLY065  SR    R4,R5               CALCULATE LENGTH
         STH   R4,SCNLEN           SAVE LENGTH
         EXEC  CICS SEND,                                              X
               FROM(CONSOLE),                                          X
               LENGTH(SCNLEN),                                         X
               WAIT
         B     ICSTR000            YES, GO DO RETURN
DPLY070  LA    R4,6(R4)            POINT PAST SBA
         SR    R4,R5               CALCULATE LENGTH
         STH   R4,SCNLEN           SAVE LENGTH
         EXEC  CICS SEND,                                              X
               FROM(CONSOLE),                                          X
               LENGTH(SCNLEN),                                         X
               ERASE,                                                  X
               WAIT
         B     ICSTR000            YES, GO DO RETURN
DPLY080  CLI   ICSTRT,C'Y'         INTERVAL CONTROL START
         BE    ICSTR000            YES, BYPASS SEND
         EXEC  CICS SEND CONTROL,                                      X
               FREEKB
         B     ICSTR000            YES, GO DO RETURN
ICSTR000 MVC   REQSID(4),EIBTRMID  MOVE TERMINAL ID TO REQID
         MVC   REQSID+4(4),EIBTRNID MOVE TRANS ID TO REQID
         EXEC  CICS START,                                             X
               TRANSID(EIBTRNID),                                      X
               REQID(REQSID),                                          X
               TERMID(EIBTRMID),                                       X
               INTERVAL(000001)
         B     ENDIT999            GO TO DISPLAY
ENDIT000 EXEC  CICS SEND CONTROL,                                      X
               ERASE,                                                  X
               FREEKB,                                                 X
               FRSET
ENDIT100 EXEC  CICS RETURN
ENDIT999 LA    R4,CONLEN
         STH   R4,SCNLEN           SAVE LENGTH
         EXEC  CICS RETURN,                                            X
               TRANSID(EIBTRNID),                                      X
               COMMAREA(CONSAVE),                                      X
               LENGTH(SCNLEN)
         DS    0F
PIDTBL   DS    0CL5                PID TABLE AREA
PIDAR    DC    C'AR',C'   '
PIDF1    DC    C'F1',C'001'
PIDF2    DC    C'F2',C'002'
PIDF3    DC    C'F3',C'003'
PIDF4    DC    C'F4',C'004'
PIDF5    DC    C'F5',C'005'
PIDF6    DC    C'F6',C'006'
 PIDF7    DC    C'F7',C'007'
PIDF8    DC    C'F8',C'008'
PIDF9    DC    C'F9',C'009'
PIDFA    DC    C'FA',C'010'
PIDFB    DC    C'FB',C'011'
PIDBG    DC    C'BG',C'000'
         DS    0F
PKZERO   DC    X'FF000000'
PKRESET  DC    X'FF0000FF'
BLANKS   DC    80CL1' '
INSFSBA  DC    XL6'115CF01DC113'
REPSBA   DS    0XL5               REPLY SBA
         DC    X'11D4401DF8',X'11D44C1DF8',X'11D4D81DF8',X'11D4E41DF8'
         DC    X'11D4F01DF8',X'11D47C1DF8',X'11D7F01DF8',X'11D77C1DF8'
         DC    X'11D8C81DF8',X'11D8D41DF8',X'11D8601DF8',X'11D86C1DF8'
SFSBA    DS    0XL4               CONSOLE LINES SBA
         DC    X'1140401D',X'11C1501D',X'11C2601D',X'11C3F01D'
         DC    X'11C5401D',X'11C6501D',X'11C7601D',X'11C8F01D'
         DC    X'114A401D',X'114B501D',X'114C601D',X'114DF01D'
         DC    X'114F401D',X'1150501D',X'11D1601D',X'11D2F01D'
PTNSBA   DS    0XL5               PARTITION / PHASE NAME SBA
         DC    X'11D5501D60',X'11D6601D60',X'11D5D21D60',X'11D6E21D60'
         DC    X'11D55B1D60',X'11D66B1D60',X'11D55D1D60',X'11D66D1D60'
         DC    X'11D5E61D60',X'11D6F61D60',X'11D5E81D60',X'11D6F81D60'
         DC    X'11D5F11D60',X'11D7C11D60',X'11D5F31D60',X'11D7C31D60'
         DC    X'11D57C1D60',X'11D74C1D60',X'11D57E1D60',X'11D74E1D60'
         DC    X'11D6C71D60',X'11D7D71D60',X'11D6C91D60',X'11D7D91D60'
         DC    X'11D6D21D60',X'11D7E21D60',X'11D6D41D60',X'11D7E41D60'
         DC    X'11D9401D60',X'115A501D60',X'11D9C21D60',X'115AD21D60'
         DC    X'11D94B1D60',X'115A5B1D60',X'11D94D1D60',X'115A5D1D60'
         DC    X'11D9D61D60',X'115AE61D60',X'11D9D81D60',X'115AE81D60'
         DC    X'11D9611D60',X'115AF11D60',X'11D9E31D60',X'115AF31D60'
         DC    X'11D96C1D60',X'115A7C1D60',X'11D96E1D60',X'115A7E1D60'
         LTORG
         END


Gregory Hoyt
Systems Programmer (USA) ) Reserved 1988



























