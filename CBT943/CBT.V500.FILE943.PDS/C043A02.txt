VSAM information from your FCT

In the process of trying to set up LSR pools for my CICS regions,
I found that I needed to get certain VSAM information (ie data
and index CISIZEs and key length) on all my FCT files.  The
method I devised was to code my own DFHFCT macro which
produces 80-byte records as input to an Assembler program.  This
Assembler program takes the file's dataset name and executes a
VSAM SHOWCAT macro to obtain the CISIZE information for
the index and data portions of the file and outputs a record with
the original information and this added information to a report
program.

All my FCTs are coded with data set names.  If this were not done
and I had JCL statements in all my regions, any time CICS came
up and a file was missing a JCL error would occur.  This incurred
a large amount of down time which was eliminated by coding
FCTs with the dataset name.

DFHFCT MACRO
         MACRO                     MACRO HEADER
         DFHFCT  &TYPE=,&JREQ=,&SUFFIX=,&RELTYPE=,&FILSTAT=,&PASSWD=,  X
               &DATASET=,&BUFFERS=,&KEYLEN=,&ACCMETH=,&SERVREQ=,&RSL=, X
               &LOG=,&DISP=,&BUFND=,&BUFNI=,&RECFORM=,&LRECL=,&JID=,   X
               &BLKKEYL=,&BLKSIZE=,&DSNSHR=,&DSNAME=,&LSRPOOL=,&BASE=, X
               &STRNO=,&RMTNAME=,&SYSIDNT=
         GBLC  &SF
         LCLC  &LIND,&SNO,&DSID,&LSRP,&BFD,&BFI
         AIF   ('&TYPE' NE 'DATASET').NOPCH
         AIF   ('&ACCMETH' NE 'VSAM').NOPCH
         AIF   ('&LSRPOOL' EQ 'NONE').NOLSR
         AIF   ('&LSRPOOL' EQ '').LSR1
&LIND    SETC  'LSR'
&LSRP    SETC  '&LSRPOOL'
         AGO   .STPRM
.LSR1    ANOP
&LIND    SETC  'LSR'
&LSRP    SETC  '1'
         AGO   .STPRM
.NOLSR   ANOP
&LIND    SETC  'NSR'
&LSRP    SETC  ' '
.STPRM   ANOP
&DSID    SETC  '&DATASET'
         AIF   (K'&DSID EQ 8).STPRM1
         AIF   (K'&DSID EQ 7).NPAD1
         AIF   (K'&DSID EQ 6).NPAD2
         AIF   (K'&DSID EQ 5).NPAD3
         AIF   (K'&DSID EQ 4).NPAD4
         AIF   (K'&DSID EQ 3).NPAD5
         AIF   (K'&DSID EQ 2).NPAD6
         AIF   (K'&DSID EQ 1).NPAD7
.NPAD1   ANOP
&DSID    SETC  '&DSID'.' '
         AGO   .STPRM1
.NPAD2   ANOP
&DSID    SETC  '&DSID'.'  '
         AGO   .STPRM1
.NPAD3   ANOP
&DSID    SETC  '&DSID'.'   '
         AGO   .STPRM1
.NPAD4   ANOP
&DSID    SETC  '&DSID'.'    '
         AGO   .STPRM1
.NPAD5   ANOP
&DSID    SETC  '&DSID'.'     '
         AGO   .STPRM1
.NPAD6   ANOP
&DSID    SETC  '&DSID'.'      '
         AGO   .STPRM1
.NPAD7   ANOP
&DSID    SETC  '&DSID'.'       '
         AGO   .STPRM1
.STPRM1  ANOP
         AIF   ('&STRNO' NE '').SETSNO
&SNO     SETC  '1'
         AGO   .SPAD
.SETSNO  ANOP
&SNO     SETC  '&STRNO'
.SPAD    ANOP
         AIF   (K'&SNO EQ 1).SPAD1
         AIF   (K'&SNO EQ 2).SPAD2
         AIF   (K'&SNO EQ 3).STPRM2
.SPAD1   ANOP
&SNO     SETC  '00'.'&SNO'
         AGO   .STPRM2
.SPAD2   ANOP
&SNO     SETC  '0'.'&SNO'
         AGO   .STPRM2
.STPRM2  ANOP
         AIF   ('&BUFND' EQ '').BUF1
&BFD     SETC  '&BUFND'
         AGO   .BDPAD
.BUF1    ANOP
&BFD     SETC  '   '
.BDPAD   ANOP
         AIF   (K'&BFD EQ 1).BDPAD1
         AIF   (K'&BFD EQ 2).BDPAD2
         AIF   (K'&BFD EQ 3).STPRM3
.BDPAD1  ANOP
&BFD     SETC  '00'.'&BFD'
         AGO   .STPRM3
.BDPAD2  ANOP
&BFD     SETC  '0'.'&BFD'
         AGO   .STPRM3
.STPRM3  ANOP
         AIF   ('&BUFNI' EQ '').BUF2
&BFI     SETC  '&BUFNI'
         AGO   .BIPAD
.BUF2    ANOP
&BFI     SETC  '   '
.BIPAD   ANOP
         AIF   (K'&BFI EQ 1).BIPAD1
         AIF   (K'&BFI EQ 2).BIPAD2
         AIF   (K'&BFI EQ 3).STPRM4
.BIPAD1  ANOP
&BFI     SETC  '00'.'&BFI'
         AGO   .STPRM4
.BIPAD2  ANOP
&BFI     SETC  '0'.'&BFI'
         AGO   .STPRM4
.STPRM4  ANOP
         PUNCH '&SF&LIND&DSID&SNO&LSRP&BFD&BFI&DSNAME'
.NOPCH   ANOP
         AIF   ('&TYPE' NE 'INITIAL').NOPCH1
&SF      SETC  '&SUFFIX'
.NOPCH1  ANOP
         MEND
PROGRAM SOURCE CODE
         TITLE 'SP091P VSAM FILE STATISTICS UTILITY'
*                        INITIALISATION ROUTINE                    *
*        LINKAGE CONVENTIONS AND ESTABLISH ADDRESSABILITY          *
SP091P   START 0                      DEFINE CSECT SP091P
         SAVE  (14,12),,*
         LR    BSEREG1,ENPTREG
         USING SP091P,BSEREG1
         ST    SVAREG,SAVAREA+4
         LA    WRKREG1,SAVAREA
         ST    WRKREG1,8(0,SVAREG)
         LR    SVAREG,WRKREG1
         LA    WRKREG2,CATAREA
         USING SHWOUT,WRKREG2
         USING IHADCB,DCBREG
         B     MODLSTRT
         DC    C'SP091P V1M0'         PROGRAM IDENT
         DC    C'&SYSDATE'            DATE AND
         DC    C'&SYSTIME'            TIME OF ASSEMBLY
SAVAREA  DC    18F'0'                      MODULE SAVE AREA
*                    PROCESS SYSIN DATA SET ROUTINE                   *
*          READ ALL CARDS PRODUCED BY CUSTOMISED DFHFCT MACRO         *
*          AND DO A SHOWCAT ON THE DATA SET NAME TO GET KEYLENGTH,    *
*          DATA CI SIZE, AND INDEX CI SIZE.  OUTPUT NEW 80 BYTE       *
*          RECORD WITH THIS INFO TO REPORT PROGRAM.                   *
MODLSTRT LA    WRKREG1,CATAREA          GET ADDRESSABILITY TO CAT AREA
         BAL   RTNREG,OPNSYSIN          OPEN INPUT DATA SET
         TM    SYSISWT,HEX40            WAS SYSIN DATA SET OPENED
         BO    RTN4                     NO, BRANCH
         BAL   RTNREG,OPNSYSOT          OPEN OUTPUT DATA SET
         TM    SYSOSWT,HEX40            WAS SYSPRINT DATA SET OPENED
         BO    RTN4                     NO, BRANCH
SYSINRD  BAL   RTNREG,RDSYSIN           READ CONTROL INPUT
         TM    SYSISWT,HEX80            END OF DATA?
         BO    ENDCTLIP                 YES, BRANCH
         MVC   SHWLEN1,=H'98'           SET LENGTH OF AREA
         SHOWCAT AREA=CATAREA,NAME=FILDSN
         LTR   RTCDREG,RTCDREG          GOOD RETURN?
         BNZ   NONDX                    NO, WRITE RECORD
         L     WRKREG4,SHWACBP          SAVE ACB ADDRESS
         LA    WRKREG3,SHWASS0          GET ADDRESSABILITY TO ASSOCNS
         USING SHWASSOC,WRKREG3         .
         SR    WRKREG5,WRKREG5          CLEAR REGISTER
         LH    WRKREG5,SHWACT           GET NUMBER OF ASSOCIATIONS
NXASSOC  CLI   SHWATYPE,C'D'            DATA ASSOCIATION
         BNE   NDXTST                   NO, INDEX TEST
         MVC   AC1D,SHWACI              SAVE CONTROL INTERVAL
         B     NXTST                    LOOP TO NEXT ASSOCIATION
*                                       TEXT FOR INDEX ASSOC
NDXTST   CLI   SHWATYPE,C'I'            DATA ASSOCIATION
         BNE   NXTST                    NO, LOOP
         MVC   AC1I,SHWACI              SAVE CONTROL INTERVAL
NXTST    LA    WRKREG3,4(WRKREG3)       BUMP ADDRESS
         BCT   WRKREG5,NXASSOC          LOOP TO NEXT ASSOC
         SHOWCAT AREA=CATAREA,ACB=(WRKREG4),CI=AC1D
         LTR   RTCDREG,RTCDREG          GOOD RETURN?
         BNZ   NONDX                    NO, WRITE RECORD
         MVC   FILCISZD,SHWCISZ         GET DATA CI SIZE
         MVC   FILKEYLN,SHWKEYLN        GET KEY LENGTH
         CLC   FILKEYLN,=H'0'           ESDS DATA SET?
         BE    NONDX                    YES, DON'T GET INDEX ASSOC
         SHOWCAT AREA=CATAREA,ACB=(WRKREG4),CI=AC1I
         LTR   RTCDREG,RTCDREG          GOOD RETURN?
         BNZ   NONDX                    NO, WRITE RECORD
         MVC   FILCISZI,SHWCISZ         GET INDEX CI SIZE
NONDX    BAL   RTNREG,WRSYOUT           WRITE RECORD OUT
         B     SYSINRD                  READ NEXT RECORD
ENDCTLIP BAL   RTNREG,CLSSYSIN          CLOSE SYSIN DATA SET
*                        TERMINATION ROUTINE                       *
*          RESTORE REGISTERS AND BRANCH TO RETURN ADDRESS          *
RTN0     L     RTCDREG,RTCD0
         B     MODLRTN
RTN4     L     RTCDREG,RTCD4
         B     MODLRTN
RTN8     L     RTCDREG,RTCD8
         B     MODLRTN
MODLRTN  L     SVAREG,SAVAREA+4
         RETURN (14,12),T,RC=(15)
MODABND  ABEND 2032,DUMP,STEP
*                        INPUT/OUTPUT SUBROUTINES                  *
*                           OPEN SUBROUTINES                       *
OPNSYSIN ST    RTNREG,OPSVRTN
         OPEN  (SYSINDS,INPUT)
         LA    DCBREG,SYSINDS
         TM    DCBOFLGS,HEX10
         BO    ENDOPN
         OI    SYSISWT,HEX40
         B     ENDOPN
OPNSYSOT ST    RTNREG,OPSVRTN
         OPEN  (SYSOTDS,OUTPUT)
         LA    DCBREG,SYSOTDS
         TM    DCBOFLGS,HEX10
         BO    ENDOPN
         OI    SYSOSWT,HEX40
         B     ENDOPN
ENDOPN   L     RTNREG,OPSVRTN
         BR    RTNREG
OPSVRTN  DC    F'0'                        OPEN SAVE RETURN ADDRESS
*                          READ SUBROUTINES                        *
RDSYSIN  ST    RTNREG,RDSVRTN
         GET   SYSINDS,DEFFIL
         B     ENDRD
ENDSYSIN OI    SYSISWT,HEX80
         B     ENDRD
ENDRD    L     RTNREG,RDSVRTN
         BR    RTNREG
RDSVRTN  DC    F'0'                        READ SAVE RETURN ADDRESS
*                          WRITE SUBROUTINES                       *
WRSYOUT  ST    RTNREG,WRSVRTN
         PUT   SYSOTDS,DEFFIL
         B     ENDWR
ENDWR    L     RTNREG,WRSVRTN
         BR    RTNREG
WRSVRTN  DC    F'0'                        WRITE SAVE RETURN ADDRESS
*                          CLOSE SUBROUTINES                       *
CLSSYSIN ST    RTNREG,CLSVRTN
         CLOSE SYSINDS
         B     ENDCLS
CLSSYSOT ST    RTNREG,CLSVRTN
         CLOSE SYSOTDS
         B     ENDCLS
ENDCLS   L     RTNREG,CLSVRTN
         BR    RTNREG
CLSVRTN  DC    F'0'                    CLOSE SAVE RETURN ADDRESS
*         AREA FOR CONSTANTS, PRINT LINES, TABLES, WORK AREAS      *
*         AND ACCUMULATORS.                                        *
RTCD0    DC    F'0'                    RETURN CODE ZERO
RTCD4    DC    F'4'                    RETURN CODE FOUR
RTCD8    DC    F'8'                    RETURN CODE EIGHT
SYSOSWT  DC    X'00'                   SYSOUT DATA SET INPUT SWITCH
*                                      40 - DATA SET WAS NOT OPENED  *
SYSISWT  DC    X'00'                   SYSIN DATA SET INPUT SWITCH
*                                      00 - NO INPUT PROCESSED       *
*                                      01 - AT LEAST ONE RECORD      *
*                                           WAS READ                 *
*                                      40 - DATA SET WAS NOT OPENED  *
*                                      80 - END OF DATA              *
AC1D     DS    AL3                     CONTROL INTERVAL DATA
AC1I     DS    AL3                     CONTROL INTERVAL INDEX
CATAREA  DS    CL100                   CATALOG WORK AREA
DEFFIL   DS    0CL80                   DEFINITION OF FILE RECORD
FILSF    DS    CL2                     TABLE SUFFIX
FILIND   DS    CL3                     LSR NSR INDICATOR
FILID    DS    CL8                     FILE IDENTIFICATION
FILSTRNO DS    CL3                     FILE STRNO
FILPOLNO DS    CL1                     LSR POOL NUMBER
FILBUFND DS    CL3                     BUFND
FILBUFNI DS    CL3                     BUFNI
FILDSN   DS    CL44                    DATA SET NAME
         DS    CL1                     FILLER
FILCISZD DS    F                       CISIZE DATA
FILCISZI DS    F                       CISIZE INDEX
FILKEYLN DS    H                       KEY LENGTH
         DS    CL2                     FILLER
*                     EQUATES                                       *
PRMREG0  EQU   0                       PARAMETER REGISTER
PRMREG1  EQU   1                       PARAMETER REGISTER
BSEREG1  EQU   2                       BASE REGISTER ONE
WRKREG1  EQU   5                       WORK REGISTER ONE
WRKREG2  EQU   6                       WORK REGISTER TWO
WRKREG3  EQU   7                       WORK REGISTER THREE
WRKREG4  EQU   8                       WORK REGISTER FOUR
WRKREG5  EQU   9                       WORK REGISTER FIVE
WRKREG6  EQU   10                      WORK REGISTER SIX
DCBREG   EQU   12                      DATA CONTROL BLOCK REGISTER
SVAREG   EQU   13                      SAVE AREA REGISTER
RTNREG   EQU   14                      RETURN REGISTER
RTCDREG  EQU   15                      RETURN CODE REGISTER
ENPTREG  EQU   15                      ENTRY POINT REGISTER
HEX00    EQU   X'00'                   ONE BYTE HEX CONSTANT
HEX01    EQU   X'01'                   ONE BYTE HEX CONSTANT
HEX10    EQU   X'10'                   ONE BYTE HEX CONSTANT
HEX40    EQU   X'40'                   ONE BYTE HEX CONSTANT
HEX80    EQU   X'80'                   ONE BYTE HEX CONSTANT
HEX90    EQU   X'90'                   ONE BYTE HEX CONSTANT
HEXDF    EQU   X'DF'                   ONE BYTE HEX CONSTANT
HEXF0    EQU   X'F0'                   ONE BYTE HEX CONSTANT
SKPCHL1  EQU   X'F1'                   SKIP TO CHANNEL ONE
SPC2     EQU   X'F0'                   SPACE 2 LINES
SPC3     EQU   X'60'                   SPACE 3 LINES
MSTFL    EQU   X'80'                   MASTER FILE TEST MASK
CRMSK    EQU   X'40'                   PRINT CONTROL RECORDS MASK
LSTAD    EQU   X'20'                   LAST ADD MASK
FCRMSK   EQU   X'08'                   FIRST CONTROL RECORD MASK
BLANK    EQU   X'40'                   BLANK EQUATE
PCNTSN   EQU   X'6C'                   PERCENT SIGN
SYSINDS  DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=ENDSYSIN
SYSOTDS  DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM
         DCBD  DSORG=PS,DEVD=DA
         IGGSHWPL
         END   SP091P
EXECUTION JCL
//SS87FTL   JOB  (0087,SYSS),'P-625',MSGLEVEL=1,MSGCLASS=X,NOTIFY=SS87,
//              CLASS=S,REGION=2000K
//*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//ASM       EXEC PGM=IEV90,
//              PARM='DECK,NOOBJECT,NOLIST'
//SYSIN     DD   DSN=CICS.V1R7M0.SOURCE(DFHFCTPT),DISP=SHR
//          DD   DSN=CICS.V1R7M0.SOURCE(DFHFCTP4),DISP=SHR
//          DD   DSN=CICS.V1R7M0.SOURCE(DFHFCTP6),DISP=SHR
//          DD   DSN=CICS.V1R7M0.SOURCE(DFHFCTP1),DISP=SHR
//          DD   DSN=CICS.V1R7M0.SOURCE(DFHFCTP2),DISP=SHR
//SYSLIB    DD   DSN=SS87.JCL.CNTL,DISP=SHR
//SYSUT1    DD   UNIT=SYSDA,SPACE=(1700,(400,400))
//SYSUT2    DD   UNIT=SYSDA,SPACE=(1700,(400,400))
//SYSUT3    DD   UNIT=SYSDA,SPACE=(1700,(400,400))
//SYSPUNCH  DD   DSN=&&TEMP1,DISP=(NEW,PASS),UNIT=SYSDA,
//              SPACE=(TRK,(1,1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SYSPRINT  DD   SYSOUT=*
//*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//SP091P    EXEC PGM=SP091P,REGION=2000K
//STEPLIB   DD   DSN=ONLE.SP.LOADLIB,DISP=SHR
//SYSUDUMP  DD   SYSOUT=*
//SYSIN     DD   DSN=&&TEMP1,DISP=(OLD,DELETE)
//SYSOUT    DD   DSN=SP.CICSFCT,DISP=OLD
//*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//SP090P    EXEC PGM=SP090P,REGION=950K
//STEPLIB   DD   DSN=ONLE.SP.LOADLIB,DISP=SHR
//SYSUDUMP  DD   SYSOUT=*
//FCTFILE   DD   DSN=SP.CICSFCT,DISP=OLD
//PRNTFLE   DD   SYSOUT=*,COPIES=1
//SYSOUT    DD   SYSOUT=*
//SORTOUT   DD   SYSOUT=*
//SYSPRINT  DD   SYSOUT=*
//SORTWK01  DD   UNIT=SYSDA,SPACE=(TRK,(200),,CONTIG)
//SORTWK02  DD   UNIT=SYSDA,SPACE=(TRK,(200),,CONTIG)
//SORTWK03  DD   UNIT=SYSDA,SPACE=(TRK,(200),,CONTIG)
//
//*
//*   * NOTE IF YOU CONCATENATE FCT TABLES ON THE ASSEMBLER SYSIN
//*     STATEMENT, REMEMBER TO COMMENT OUT THE ASSEMBLER 'END'
//*     STATEMENT ON ALL BUT THE LAST TABLE.


William J Myers
Technical Specialist
Ameritrust Company (USA) ) Ameritrust Company 1989


