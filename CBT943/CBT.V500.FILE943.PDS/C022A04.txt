 A problem with the CICS print facility

The following article concerns an interesting problem I encountered with the
CICS print facility.  Before discussing the situation, the following background
information may be helpful for those unfamiliar with the CICS print facility and
the PA keys.

The CICS print function allows the printing of a terminal's screen image onto a
3270-type printer associated with that terminal.  The TCT parameters PRINTTO and
ALTPRT determine which printers are associated with which terminals.  The
contents of the terminal screen buffer is read into a TIOA through a DFHTC
TYPE=READB instruction, which transfers the entire contents of the terminal
screen irrespective of the presence or absence of modified data tags.  This TIOA
is made available to the program DFH3270P, which subsequently writes the TIOA to
the printer.

This sequence of events is initiated by either a program request or an operator
request.  A program print request takes the form of a DFHTC TYPE=PRINT or an
EXEC CICS ISSUE PRINT instruction.  An operator print request is invoked by
either PAl, PA2, or PA3, depending on the PRINT parameter chosen in the SIT.
The PA key chosen in the SIT is associated with the transaction CSPK by the
module DFHZATT.

Armed with the above knowledge I was not concerned when an account asked me to
incorporate the operator print function into their CICS system.  The fact that
none of their terminals possesed the elusive PA3 key and that they already had
unchangeable transactions associated with PAl and PA2 didn't bother me either.
I just made a PCT entry to associate an unused PF key with the same program
invoked by CSPK, as follows:

     DFHPCT TYPE=ENTRY,PROGRAM=DFHPRK,TASKREQ=PF8......

During testing, this means of initiating operator print requests worked fine.
However, after it was placed in production it was discovered that this method
did not work for all screen image prints, specifically not for printing screens
displayed by a certain few transactions.

A little bit of research uncovered that these transactions were returning to
CICS through a DFHPC TYPE=RETURN, TRANSID= or an EXEC CICS RETURN TRANSID(xxxx).
A little more research found that at task termination time, DFHKCP places this
transaction-id value into the TCT field TCTTETC.  This field is referenced by
DFHZATT when it examines terminal input to decide which task to initiate.

DFHZATT first examines the attention identifier (either a PF key, PA key, or
ENTER) to see if it matches the PA key chosen for operator print requests.  If
there is a match, CSPK is forced for the transaction-id.  If there is no match,
TCTTETC is checked to see if it contains a transaction-id, which is forced as
the transaction-id for this request.  Finally, any other attention identifier
and terminal input is examined to develop a transaction-id.  As you can see,
TCTTETC takes precedence over terminal input data in the transaction selection
process, and explains why my PF key print request did not work all of the time.

The only way to avoid this problem is to change the attention identifier
associated with operator print requests.  As you will remember, this value is
chosen through the SIT and is limited to one of the PA keys.  However, this
value is also stored in the prefix field TCTVPNTK and can be changed by a simple
program like the one printed here.  After writing such a program, just include
it in your PLT and associate the operator print function with any attention
identifier you chose.

         COPY  DFHCSADS
         DFHTCA CICSYST=NO
         COPY  DFHTCTFX
PRTKEY   CSECT
         ENTRY PRTKEYE
         DC    CL8'*'
          DC    CL8'04/06/87'
         DC    CL8'*'
PRTKEYE  EQU   *
         BALR  R11,0
         USING *.R11
         L     TCTPFBAR,CSATCTBA   LOAD TCT PREFIX ADDR
         MVI   TCTVPNTK,X'F8'      LET'S MAKE IT PF8
         DFHPC TYPE=RETURN
         LTORG
         END   PRTKEYE


Kevin Hogan
Consultant
Technical Consulting (USA)    ) Xephon 1987



















































