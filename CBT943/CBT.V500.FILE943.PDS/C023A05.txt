 Keeping remote BTAM lines in service (cont)

This month we conclude this article with the publication of the source code for
the COBOL program LINECHK.


LINECHK

 IDENTIFICATION DIVISION.
      .
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  THIS PROGRAM IS INITIATED VIA AN INTERVAL CONTROL        *
*  EXECUTE CICS START COMMAND. INITIALLY IN CICS PLT        *
*  FIRE-UP PROGRAM: 'CEMTCMD', AND SUBSEQUENTLY ISSUED      *
*  FROM THIS PROGRAM ITSELF, JUST PRIOR TO RETURN TO CICS.  *
*  THE PURPOSE OF THIS PROGRAM IS TO 'WAKE UP' EVERY XX     *
*  MINUTES AND PUT THE CICS REMOTE BTAM LINES BACK          *
*  IN SERVICE IF IT FINDS THEM OUT OF SERVICE. PROGRAM      *
*  WILL INSRV A LINE UP TO 9 TIMES IN A ROW BEFORE GIVING   *
*  UP AND ASSUMING THAT THE LINE HAS SERIOUS PROBLEMS.      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 ENVIRONMENT DIVISION.
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 01  FILLER.
     05  FILLER             PIC X(8)    VALUE 'WORKING '.
     05  FILLER             PIC X(8)    VALUE 'STORAGE '.
     05  FILLER             PIC X(8)    VALUE 'STARTS  '.
     05  FILLER             PIC X(8)    VALUE 'HERE >>>'.
*  NOTE: THE FOLLOWING WORKING STORAGE OUTSRV COUNTERS,
*        WORKING STORAGE CONSOLE MSG COUNTERS, WORKING
*        STORAGE LINEID LITERALS, AND WORKING STORAGE CO
*        LITERALS, (4 TABLES) MUST BE MAINTAINED IN THE
*        SAME LINEID SEQUENCE. THEY ARE ALL REFERENCED
*        USING A SINGLE SUBSCRIPT DURING PROGRAM EXECUTION.
 01  WS-COUNTERS.
     05  WS-OUTSRV-COUNTERS.
         10  WS-S0A0-OUT-CNT     PIC S9(4) COMP VALUE +0.
             88  S0A0-OUT-TOO-LONG              VALUE IS +9.
         10  WS-S0C0-OUT-CNT     PIC S9(4) COMP VALUE +0.
             88  S0C0-OUT-TOO-LONG              VALUE IS +9.
         10  WS-S0D0-OUT-CNT     PIC S9(4) COMP VALUE +0.
             88  S0D0-OUT-TOO-LONG              VALUE IS +9.
         10  WS-WT01-OUT-CNT     PIC S9(4) COMP VALUE +0.
             88  WT01-OUT-TOO-LONG              VALUE IS +9.
     05  WS-CNTR-TABLE       REDEFINES  WS-OUTSRV-COUNTERS.
         10  WS-OUT-CNTR         PIC S9(4) COMP OCCURS 4 TIMES.
     05  WS-CONS-MSG-COUNTERS.
         10  WS-CONS-MSG-S0A0     PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-S0C0     PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-S0D0     PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-WT01     PIC S9(4) COMP VALUE +0.
     05  WS-CONS-TABLE        REDEFINES  WS-CONS-MSG-COUNTERS.
         10  WS-CONS-CNTR          PIC S9(4) COMP OCCURS 4 TIMES.
 01  WS-SUBSCRIPTS.
     05  WS-LINE-SUB          PIC S9(4) COMP VALUE +0.
 01  WS-LITERALS-TABLES.
     05  WS-LINE-LITERALS.
         10  FILLER           PIC X(4)   VALUE 'S0A0'.
         10  FILLER           PIC X(4)   VALUE 'S0C0'.
         10  FILLER           PIC X(4)   VALUE 'S0D0'.
         10  FILLER           PIC X(4)   VALUE 'WT01'.
     05  WS-LINE-TABLE        REDEFINES  WS-LINE-LITERALS.
         10  WS-LINEID        PIC X(4)   OCCURS 4 TIMES.
     05  WS-CO-LITERALS.
          10  FILLER           PIC X(4)   VALUE SPACES.
         10  FILLER           PIC X(4)   VALUE 'S0C0'
         10  FILLER           PIC X(4)   VALUE 'S0D0'
         10  FILLER           PIC X(4)   VALUE SPACES.
     05  WS-CO-TABLE          REDEFINES  WS-CO-LITERALS.
         10  WS-CO-ID         PIC X(4)   OCCURS 4 TIMES.
01   WS-CEMT-CMD-WORK-AREA.
     05  WS-CEMT-INQ-LINE-CMD.
         10  FILLER             PIC X(12)  VALUE 'CEMT I LINE('.
         10  WS-CEMT-I-LINEID   PIC X(04)  VALUE SPACES.
         10  FILLER             PIC X(03)  VALUE ')  '.
     05  WS-CEMT-SET-LINE-CMD.
         10  FILLER             PIC X(12)  VALUE 'CEMT S LINE('.
         10  WS-CEMT-S-LINEID   PIC X(04)  VALUE SPACES.
         10  FILLER             PIC X(03)  VALUE ') I'.
     05  WS-CEMT-INQ-CO-CMD.
         10  FILLER             PIC X(10)  VALUE 'CEMT I CO('.
         10  WS-CEMT-I-CO       PIC X(04)  VALUE SPACES.
         10  FILLER             PIC X(05)  VALUE ')    '.
     05  WS-CEMT-SET-CO-CMD.
         10  FILLER             PIC X(10)  VALUE 'CEMT S CO('.
         10  WS-CEMT-S-CO       PIC X(04)  VALUE SPACES.
         10  FILLER             PIC X(05)  VALUE ') I  '.
 01  WS-CONSTANTS.
     05  WS-RETRY-LIMIT       PIC S9(4) COMP VALUE +8.
     05  WS-TEMP-QUEUE-LEN    PIC S9(4) COMP VALUE +16.
     05  WS-TEMP-ITEM         PIC S9(4) COMP VALUE +1.
     05  WS-PARMLIST-LENGTH   PIC S9(4) COMP VALUE +20.
     05  WS-GETMAIN-LENGTH    PIC S9(4) COMP VALUE +224.
     05  WS-CONS-MSG-LENGTH   PIC S9(4) COMP VALUE +64.
     05  WS-TIOA-LEN          PIC S9(4) COMP VALUE +50.
     05  WS-TIOA-MAX-LEN      PIC S9(4) COMP VALUE +50.
     05  WS-BINARY-FIELD-1    PIC S9(4) COMP VALUE +192.
     05  WS-HEX-VALUE-1       REDEFINES WS-BINARY-FIELD-1.
         10  FILLER           PIC X(1).
         10  WS-HEX-C0        PIC X(1).
     05  WS-BINARY-FIELD-2    PIC S9(4) COMP VALUE +250.
     05  WS-HEX-VALUE-2       REDEFINES WS-BINARY-FIELD-2.
         10  FILLER           PIC X(1).
         10  WS-HEX-FA        PIC X(1).
 01  WS-TIME-WORK-AREA.
     05  WS-TIME-UNPACK-AREA      PIC 9(7).
     05  WS-EIB-TIME-UNPK     REDEFINES WS-TIME-UNPACK-AREA.
         10  FILLER               PIC X(1).
         10  WS-EIB-HH-UNPK       PIC X(2).
         10  WS-EIB-MM-UNPK       PIC X(2).
         10  WS-EIB-SS-UNPK       PIC X(2).
*  NOTE: THE 'EIBTIME' FROM INITIAL TASK DISPATCH IS USED
*        FOR WS-MSG-X-TIME. WE FELT THIS WAS CLOSE ENOUGH FOR
*        OUR PURPOSES. USING THE CICS 'ASKTIME' COMMAND FROM
*        VSE MACHINE(S) UNDER VM CAUSES CONSIDERABLE OVERHEAD
*        SINCE VSE MUST WAIT FOR VM TO REFRESH HIS CLOCK(S),
*        AND CICS MUST WAIT FOR VSE CLOCK(S), BEFORE HE CAN
*        REFRESH 'EIBTIME' FOR THE REQUESTING TASK...
01   WS-CONS-MSGS.
     05  WS-MSG-BLANK-LINE.
         10  FILLER            PIC X(01)     VALUE '*'.
         10  FILLER            PIC X(63)     VALUE SPACES.
     05  WS-MSG-1.
         10  FILLER            PIC X(33)     VALUE
             '* LINECHK PROGRAM HAS JUST SET:  '.
         10  WS-MSG-1-LINEID   PIC X(10)     VALUE SPACES.
         10  FILLER            PIC X(13)     VALUE
             'INS          '.
         10  WS-MSG-1-TIME.
             15  WS-MSG-1-HH   PIC X(02).
              15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-1-MM   PIC X(02).
             15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-1-SS   PIC X(02).
     05  WS-MSG-2.
         10  FILLER            PIC X(27)     VALUE
             '* LINECHK UNABLE TO KEEP:  '.
         10  WS-MSG-2-LINEID   PIC X(10)     VALUE SPACES.
         10  FILLER            PIC X(27)     VALUE
             'INS    AFTER 9 ATTEMPTS *'.
     05  WS-MSG-3.
         10  FILLER            PIC X(52)     VALUE
            '* LINE OR CONTROLLER REQUIRES MANUAL INTERVENTION *'.
         10  FILLER            PIC X(12)     VALUE SPACES.
     05  WS-MSG-4.
         10  FILLER            PIC X(34)     VALUE
            '* LINECHK TERMINATED VIA TERMID:  '.
         10  WS-MSG-4-TERMID   PIC X(06)     VALUE SPACES.
         10  FILLER            PIC X(01)   VALUE '*'.
         10  FILLER            PIC X(15)   VALUE SPACES.
         10  WS-MSG-4-TIME.
             15  WS-MSG-4-HH   PIC X(02).
             15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-4-MM   PIC X(02).
             15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-4-SS   PIC X(02).
     05  WS-MSG-5.
         10  FILLER            PIC X(31)     VALUE
            '* LINECHK STARTED VIA TERMID:  '.
         10  WS-MSG-5-TERMID   PIC X(06)     VALUE SPACES.
         10  FILLER            PIC X(01)     VALUE '*'.
         10  FILLER            PIC X(18)     VALUE SPACES.
         10  WS-MSG-5-TIME.
             15  WS-MSG-5-HH   PIC X(02).
             15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-5-MM   PIC X(02).
             15  FILLER        PIC X(01)     VALUE ':'.
             15  WS-MSG-5-SS   PIC X(02).
     05  WS-MSG-6.
         10  FILLER            PIC X(38)     VALUE
             '* LINECHK ERROR DURING EXECUTION OF:  '.
         10  WS-MSG-6-CMD      PIC X(26)     VALUE SPACES.
     05  WS-MSG-7.
         10 FILLER             PIC X(10)     VALUE
            '*  O.K.   *'.
     05  WS-MSG-9              PIC X(64)     VALUE
             '* PLEASE NOTIFY SYSTEMS SOFTWARE  *** '.
 01  WS-ADCONAREA.
     05  FIVE-ADCONS.
         10  WS-ADCON1       PIC S9(8) COMP.
         10  WS-ADCON2       PIC S9(8) COMP.
         10  WS-ADCON3       PIC S9(8) COMP.
         10  WS-ADCON4       PIC S9(8) COMP.
         10  WS-ADCON5       PIC S9(8) COMP.
 01  WS-TIOA.
     05  WS-TIOA-TRANID      PIC X(4).
     05  FILLER              PIC X(1).
     05  WS-TIOA-CANCEL-REQ  PIC X(6).
     05  WS-TIOA-REDEF       REDEFINES WS-TIOA-CANCEL-REQ.
         10  WS-TIOA-START-REQ   PIC X(05).
         10  FILLER              PIC X(01).
     05  FILLER              PIC X(39).
 01  FILLER          PIC X(22)  VALUE 'END OF WORKING STORAGE'.
 LINKAGE SECTION.
 01  DFHCOMMAREA             PIC X(01).
 01  DFHBLLDS    COPY    DFHBLLDS.
      02  PTR-CMDTAB1                 PIC S9(8)   COMP.
 01  DFHCSADS        COPY    DFHCSADS.
 01  FILLER PIC X(01).
 01  FILLER PIC X(01).
*   NOTE:  THE FOLLOWING PARAMETER LIST AND PASS AREA LAYOUT
*          HAS BEEN WRITTEN FOR, AND IS RUNNING ON A CICS 1.6.0
*          SYSTEM. THIS LAYOUT MAY VARY FROM RELEASE TO RELEASE.
*          CONSULT THE APPROPRIATE CICS/VS DOCUMENTATION FOR
*          EXECUTING 'CEMT' FROM AN APPLICATION PROGRAM.
 01  CMDTAB1.
     05  CMDTAB1-ADDRESSED-DATA.
         10  CMDTAB1-CEMT-CMD        PIC X(19).
         10  CMDTAB1-CEMT-CMD-LEN    PIC S9(4)   COMP.
         10  CMDTAB1-CEMT-CMD-OP-IND PIC X.
         10  CMDTAB1-LINE-TEXT-RETURNED.
             15  FILLER                  PIC X(06).
             15  CMDTAB1-RESP-LEN        PIC S9(4)  COMP.
             15  CMDTAB1-NO-OF-TXT-LINES PIC S9(4)  COMP.
             15  CMDTAB1-TRANS-RESP-CODE PIC S9(4)  COMP.
             15  FILLER              PIC X(03).
             15  CMDTAB1-LINEID      PIC X(09).
             15  FILLER              PIC X(22).
             15  CMDTAB1-LINE-STAT   PIC X(03).
             15  FILLER              PIC X(151).
         10  CMDTAB1-CO-TEXT-RETURNED   REDEFINES
                                  CMDTAB1-LINE-TEXT-RETURNED.
             15  FILLER              PIC X(06).
             15  FILLER              PIC S9(4)  COMP.
             15  FILLER              PIC S9(4)  COMP.
             15  FILLER              PIC S9(4)  COMP.
             15  FILLER              PIC X(03).
             15  CMDTAB1-CO-ID       PIC X(09).
             15  FILLER              PIC X(01).
             15  CMDTAB1-CO-STAT     PIC X(03).
             15  FILLER              PIC X(172).
         10  CMDTAB1-CEMT-CMD-MAX-OP-L   PIC S9(4)     COMP.
 PROCEDURE DIVISON.
 A010-MAINLINE.
*   ADDRESS THE CSA FOR POSSIBLE FUTURE USE
     EXEC CICS ADDRESS CSA(CSACBAR) END-EXEC.
*   CANCEL ANY PRE-EXISTING ICE'S FOR 'LINECHK'.
*   THIS WILL PREVENT DUPLICATE ICE'S FROM BEING
*   INADVERTENTLY CREATED.
     EXEC CICS IGNORE CONDITION NOTFND END-EXEC.
     EXEC CICS CANCEL REQID ('CNCLCHK') TRANSID('LCHK') END-EXEC.
     MOVE EIBTIME TO WS-TIME-UNPACK-AREA.
     MOVE WS-EIB-HH-UNPK TO WS-MSG-1-HH.
     MOVE WS-EIB-MM-UNPK TO WS-MSG-1-MM.
     MOVE WS-EIB-SS-UNPK TO WS-MSG-1-SS.
     MOVE WS-MSG-1-TIME  TO WS-MSG-4-TIME.
     MOVE WS-MSG-4-TIME  TO WS-MSG-5-TIME.
*    HAS 'LCHK' BEEN INVOKED FROM A TERMINAL ?
*    IF SO, CHECK FOR A CANCEL REQUEST OR A START
*    REQUEST FOR THIS ICE...
      IF EIBTRMID > WS-HEX-C0
         THEN
            IF EIBTRMID < WS-HEX-FA
               PERFORM B010-TERMINAL-REQUEST-CHK THRU B010-EXIT.
*    A 'CANCEL' REQUEST WILL NEVER RETURN HERE FROM B010.
*    A 'START'  REQUEST WILL RETURN TO THIS POINT AND
*    CONTINUE EXECUTION.
*    ANY COUNTERS PASSED FROM PRIOR EXECUTION OF LINECHK ?
      EXEC CICS IGNORE CONDITION QIDERR END-EXEC.
      EXEC CICS READQ TS QUEUE ('LCHKCNTS') INTO (WS-COUNTERS)
                LENGTH(WS-TEMP-QUEUE-LEN) ITEM(1) END-EXEC.
*    GETMAIN SOME STORAGE TO PASS 'CEMT' PARAMETERS TO DFHEMTA
       EXEC CICS GETMAIN SET(PTR-CMDTAB1) LENGTH(WS-GETMAIN-LENGTH)
                END-EXEC.
*    BUILD PARAMETER LIST AND ADDRESS LIST FOR DFHEMTA
      MOVE LOW-VALUES TO CMDTAB1-ADDRESSED-DATA.
      MOVE +19                   TO CMDTAB1-CEMT-CMD-LEN.
      MOVE +200                  TO CMDTAB1-CEMT-CMD-MAX-OP-L.
      MOVE PTR-CMDTAB1           TO WS-ADCON1.
      ADD +19  TO WS-ADCON1 GIVING   WS-ADCON2.
      ADD +2   TO WS-ADCON2 GIVING   WS-ADCON3.
      ADD +1   TO WS-ADCON3 GIVING   WS-ADCON4.
      ADD +200 TO WS-ADCON4 GIVING   WS-ADCON5.
*   CURRENTLY 4 LINES TO CHECK, 4 ENTRIES IN THE TABLES.
      PERFORM A020-CHECK-THE-NETWORK     THRU  A020-EXIT
         VARYING WS-LINE-SUB FROM  1 BY  1
            UNTIL WS-LINE-SUB GREATER THAN 4.
*    SAVE COUNTERS IN TEMP STORAGE (MAIN)
*    FOR NEXT ITERATION OF LINECHK.
      EXEC CICS WRITEQ TS QUEUE ('LCHKCNTS') FROM (WS-COUNTERS)
                LENGTH(WS-TEMP-QUEUE-LEN) ITEM (WS-TEMP-ITEM)
                REWRITE MAIN END-EXEC.
*    SET UP ANOTHER 'ICE' TO KEEP 'LINECHK' COMING BACK
*    TO CHECK THE BTAM LINES.
*    NOTE: INTERVAL IS IN HH:MM:SS FORMAT
      EXEC CICS START TRANSID ('LCHK') INTERVAL(000100)
                REQID ('CNCLCHK') END-EXEC.
     GO TO X099-CICS-RETURN.
 A010-EXIT.
     EXIT.
 A020-CHECK-THE-NETWORK.
     MOVE WS-LINEID (WS-LINE-SUB) TO WS-CEMT-I-LINEID.
     MOVE WS-CEMT-INQ-LINE-CMD TO CMDTAB1-CEMT-CMD.
     PERFORM X010-EXECUTE-CEMT-CMD    THRU  X010-EXIT.
     PERFORM A030-ANALYZE-LINE-STATUS THRU  A030-EXIT.
     IF WS-CO-ID (WS-LINE-SUB) NOT EQUAL SPACES
        THEN
           MOVE WS-CO-ID (WS-LINE-SUB) TO WS-CEMT-I-CO
           MOVE WS-CEMT-INQ-CO-CMD TO CMDTAB1-CEMT-CMD
           PERFORM X010-EXECUTE-CEMT-CMD  THRU  X010-EXIT
           PERFORM A040-ANALYZE-CO-STATUS THRU  A040-EXIT.
 A020-EXIT.
     EXIT.
 A030-ANALYZE-LINE-STATUS.
     IF CMDTAB1-LINE-STAT  EQUAL 'INS'
        THEN
           MOVE +0 TO WS-CONS-CNTR (WS-LINE-SUB)
           MOVE +0 TO WS-OUT-CNTR (WS-LINE-SUB)
        ELSE
           IF CMDTAB1-LINE-STAT  EQUAL 'OUT'
              THEN
                 IF WS-OUT-CNTR (WS-LINE-SUB) > WS-RETRY-LIMIT
                    THEN
                       PERFORM X020-LINE-PROBLEMS THRU X020-EXIT
                    ELSE
                       ADD +1 TO WS-OUT-CNTR (WS-LINE-SUB)
                       MOVE WS-LINEID (WS-LINE-SUB)
                            TO WS-CEMT-S-LINEID
                       MOVE WS-CEMT-SET-LINE-CMD
                            TO CMDTAB1-CEMT-CMD
                       PERFORM X010-EXECUTE-CEMT-CMD THRU X010-EXIT
                       MOVE CMDTAB1-LINEID TO WS-MSG-1-LINEID
                       EXEC CICS WRITEQ TD QUEUE('CSMT')
                                 FROM(WS-MSG-BLANK-LINE)
                                 LENGTH(WS-CONS-MSG-LENGTH)
                                 END-EXEC
                       EXEC CICS WRITEQ TD QUEUE('CSMT')
                                 FROM(WS-MSG-1)
                                  LENGTH(WS-CONS-MSG-LENGTH)
                                 END-EXEC
                       EXEC CICS WRITEQ TD QUEUE('CSMT')
                                 FROM(WS-MSG-BLANK-LINE)
                                 LENGTH(WS-CONS-MSG-LENGTH)
                                 END-EXEC.
 A030-EXIT.
     EXIT.
 A040-ANALYZE-CO-STATUS.
     IF CMDTAB1-CO-STAT  EQUAL 'INS'
        THEN
           GO TO A040-EXIT
        ELSE
           IF CMDTAB1-CO-STAT  EQUAL 'OUT'
              THEN
                 IF WS-OUT-CNTR (WS-LINE-SUB) > WS-RETRY-LIMIT
                    THEN
                       GO TO A040-EXIT
                    ELSE
                       MOVE WS-CO-ID (WS-LINE-SUB) TO WS-CEMT-S-CO
                       MOVE WS-CEMT-SET-CO-CMD TO CMDTAB1-CEMT-CMD
                       PERFORM X010-EXECUTE-CEMT-CMD THRU X010-EXIT.
 A040-EXIT.
     EXIT.
 B010-TERMINAL-REQUEST-CHK.
     EXEC CICS IGNORE CONDITION LENGERR END-EXEC.
     EXEC CICS RECEIVE INTO (WS-TIOA) LENGTH (WS-TIOA-LEN)
               MAXLENGTH (WS-TIOA-MAX-LEN) END-EXEC.
      IF WS-TIOA-TRANID EQUAL  'LCHK'
         THEN
            IF WS-TIOA-CANCEL-REQ  EQUAL  'CANCEL'
               THEN
                  GO TO B020-CANCEL-THE-ICE
               ELSE
                  IF WS-TIOA-START-REQ  EQUAL  'START'
                     THEN
                        PERFORM B030-TELL-THE-OPERATOR THRU B030-EXIT
                        GO TO B010-EXIT
                     ELSE
* * * * * * * >                 INVALID 'LCHK' REQUEST, BE NASTY
* * * * * * * >                 AND LEAVE THEIR TERMINAL LOCKED
                        GO TO X099-CICS-RETURN
        ELSE
           GO TO X099-CICS-RETURN.
 B010-EXIT.
     EXIT.
 B020-CANCEL-THE ICE.
     EXEC CICS IGNORE CONDITION NOTFND END-EXEC.
     EXEC CICS CANCEL REQID ('CNCLCHK') TRANSID('LCHK') END-EXEC.
*  TELL THE OPERATOR WHICH TERMINAL CANCELLED 'LINECHK'
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     MOVE EIBTRMID TO WS-MSG-4-TERMID.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-4)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
*  IF THE REQUEST WAS NOT FROM THE MASTER OPERATORS CONSOLE,
*  SEND THEM BACK AN ACKNOWLEDGEMENT AND UNLOCK THE TERMINAL.
     IF EIBTRMID  NOT EQUAL  'CSMT'
        THEN
           EXEC CICS SEND TEXT FROM(WS-MSG-7) LENGTH(+0010)
                     CURSOR(+0001) ERASE FREEKB END-EXEC.
     GO TO X099-CICS-RETURN.
 B020-EXIT.
     EXIT.
  B030-TELL-THE OPERATOR.
*  TELL THE OPERATOR WHICH TERMINAL STARTED 'LINECHK'
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     MOVE EIBTRMID TO WS-MSG-5-TERMID.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-5)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
*  IF THE REQUEST WAS NOT FROM THE MASTER OPERATORS CONSOLE,
*  SEND THEM BACK AN ACKNOWLEDGEMENT AND UNLOCK THE TERMINAL.
     IF EIBTRMID  NOT EQUAL  'CSMT'
        THEN
           EXEC CICS SEND TEXT FROM (WS-MSG-7) LENGTH(+0010)
                     CURSOR(+0001) ERASE FREEKB END-EXEC.
 B030-EXIT.
     EXIT.
 X010-EXECUTE-CEMT-CMD.
*   LINK TO DFHEMTA. EXECUTE 'CEMT' COMMAND.
     EXEC CICS LINK PROGRAM('DFHEMTA') COMMAREA(FIVE-ADCONS)
               LENGTH(WS-PARMLIST-LENGTH) END-EXEC.
     IF CMDTAB1-TRANS-RESP-CODE NOT EQUAL ZERO
        GO TO X030-BAD-RC.
 X010-EXIT.
     EXIT.
 X020-LINE-PROBLEMS.
*  IF WE'VE ISSUED THE CONSOLE MESSAGE ONCE, DON'T ISSUE IT
*  AGAIN UNTIL LINE/CONTROLLER HAS BEEN BROUGHT BACK UP MANUALLY.
     IF WS-CONS-CNTR (WS-LINE-SUB)  >  ZERO
        GO TO X020-EXIT.
*  ISSUE CONSOLE MESSAGE.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     MOVE CMDTAB1-LINEID  TO WS-MSG-2-LINEID.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-2)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-3)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
*  SET CONSOLE MSG COUNTER FOR APPROPRIATE LINE.
     ADD +1 TO WS-CONS-CNTR (WS-LINE-SUB).
 X020-EXIT.
     EXIT.
 X030-BAD-RC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     MOVE CMDTAB1-CEMT-CMD TO WS-MSG-6-CMD.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-6)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-9)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-BLANK-LINE)
               LENGTH(WS-CONS-MSG-LENGTH) END-EXEC.
     GO TO X099-CICS-RETURN.
 X030-EXIT
     EXIT.
 X099-CICS-RETURN.
     EXEC CICS RETURN END-EXEC.
     GOBACK.


Scott Northcote
Systems Software Programmer
Cascade Corporation (USA)     ) Cascade Corporation 1987

