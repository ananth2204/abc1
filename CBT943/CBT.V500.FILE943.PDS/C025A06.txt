 CICS COBOL compile option tip

About two years ago our virtual storage was very constrained.  We had to find
ways to save virtual storage.  We migrated to MVS/XA and that gave us a
considerable amount of relief.

Since the migration, many new software applications have been installed.  The
number of computer terminals has almost doubled.  The number of free Dynamic
Storage Area (DSA) pages before hitting Short-On-Storage (SOS) situations was
beginning to shrink.  Our current production operating environment includes one
terminal owning region and three application owning regions.  I was able to move
some applications around to distribute the number of application programs better
in each application owning region.  Since we are using MRO the user community
was totally unaware of the change.  There was quite a bit of work involved on my
part to ensure that the availability of our production CICS was not interrupted
in anyway.

I was still looking for ways to cut down on virtual storage usage.  We were
lucky that an IBM Systems Engineer was at our installation assisting us with an
application problem we were experiencing.

He noticed from the link-edit map that the COBOL ILBxxxxx modules were being
link-edited into the CICS COBOL program.  This is not necessary nor encouraged
by IBM since each CICS COBOL program contains its own set of the ILBxxxxx
modules.  This can increase the size of the CICS COBOL programs by 2K to 4K per
program.  This can become a considerable amount of wasted virtual storage based
on the number of COBOL programs in your shop.

We saved an average of 2.5K per COBOL program when this compile option was
installed as the default at our installation.  The compile option is RESIDENT
and is not the default.  We had been using the default which is NORESIDENT and
thus making our CICS COBOL programs larger than they needed to be.

This compile option works in conjunction with the NODYNAM option.  The RES and
NODYNAM options cannot be applied without doing a little homework first.  Care
must be taken to ensure that programs that are called or link-edited together
all use the RES NODYNAM options, otherwise the size of the programs will
increase rather than decrease.  You could create a worse problem.  This does not
include programs that are LINKed to or XCTLed to by CICS.

One last bit of advice I would offer before implementing the compile options
would be to contact any vendors that you have purchased software from about the
use of RES NODYNAM.  Most of the application software running in our shop is
purchased and we did find one vendor who advised us not to use the RES NODYNAM
compile options because of the problems it would cause with the operation of
their software.

One big item to strive for when hampered by virtual storage constraints is to
keep the CICS working set size as small as possible.  These compile options RES
NODYNAM will help to decrease the working set size.  Don't expect miracles from
these options especially when virtual storage is heavily constrained, though I
firmly believe in the old adage, 'every little bit helps'.  The use of these
compile options may just allow your DSA to last a little bit longer.



John Banister
Systems Programmer
Florida National Bank (USA)   ) Xephon 1987







