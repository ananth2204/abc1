Determining physical device characteristics

Using CICS in a VM shop can sometimes mean under-utilizing
your colour terminals.  For example, you can go to a lot of
trouble to make your application support extended highlighting
etc, only to have your application run in monochrome mode
simply because the dialled address of the user terminal is a
monochrome terminal.  It is impractical to dedicate physical
addresses to CICS since these invariably change.  What users
need is a program that will determine whether the user terminal
is indeed capable of supporting extended highlighting and then
modify the appropriate TCTTE to indicate if this is so.
Obviously, the program should modify the TCTTE to indicate
that the terminal is monochrome.

TCTCOLOR does this.  It is intended to be used as an exit in
your sign-on procedure.  This would guarantee that the
physical terminal characteristics are set properly whenever a
user signs-on.

TCTCOLOR is written assuming a VSE (non-VAE) guest
running under VM. TCTCOLOR will call $$BRTERM which
will in turn issue a DIAGNOSE X'008C'.  This diagnose will
return to the application a flag byte which indicates whether
extended data stream and extended highlighting are supported.
It also returns the number of columns and rows that the
terminal has.  TCTCOLOR only sets the highlighting fields in
the TCTTE.  You can easily modify it to set the number of
columns/rows.

TCTCOLOR SOURCE CODE

         LCLC  &REL
&REL     SETC  '1.0'
         TITLE 'TCTCOLOR: OBTAIN PHYSICAL TERMINAL CHARACTERISTICS'
*=============================================================*
*  THE PURPOSE OF 'TCTCOLOR' IS TO DETERMINE (VIA DIAGNOSE    *
*  X'008C') THE PHYSICAL DEVICE CHARACTERISTICS OF THE        *
*  TERMINAL. IN A SHOP WITH CICS UNDER VM/VSE, THIS IS        *
*  DESIRABLE SINCE YOU CANNOT GUARANTEE WHICH ADDRESS YOU     *
*  WILL GET WHEN YOU DIAL. BECAUSE OF THIS, IT IS GENERALLY   *
*  IMPOSSIBLE TO DEFINE CERTAIN TERMINALS AS SUPPORTING       *
*  EXTENDED DATA STREAMS AND EXTENDED HILIGHTING.             *
*  TCTCOLOR SHOULD BE INVOKED AT SIGN-ON TIME. IT WILL        *
*  DETERMINE IF THE PHYSICAL DEVICE IS COLOR, AND IF SO,      *
*  MODIFY THE TCTTE TO REFLECT THIS FACT.                     *
*=============================================================*
DFHEISTG DSECT                     CICS DYNAMIC STORAGE
         CNOP  0,8
WORK8    DS    CL8
WORK16   DS    CL16
TEXTLTH  DS    1H                  LENGTH OF TEXT MESSAGE
TERMID   DS    CL4                 TERMID TO BE DISPLAYED
         CNOP  0,8
RECVBUFF DS    CL512               FROM DIAGNOSE X'008C'
RECVCUU  EQU   RECVBUFF,2          PHYSICAL TERMINAL ADDRESS
TCTCOLOR CSECT
         MVC   TERMID,EIBTRMID     MOVE TERMID
         EXEC  CICS ADDRESS CSA (R6)
         USING DFHCSADS,R6         TELL ASM
         L     R8,CSACDTA          GET OUR TCA
         USING DFHTCADS,R8         TELL ASM
         USING DFHTCTTE,R9         TELL ASM
         L     R7,CSATCTBA         POINTER TO FIRST TCT
         L     R9,X'1C'(R7)        POINTER TO FIRST TCTTE
TCTC000  EQU   *
         CLC   TCTTETI,HEXFF       END OF TCTTE ?
         BE    ERR01               YES...ERROR
         CLC   TCTTETI,TERMID      OUR TERMINAL ?
         BE    TCTC010             YES...
         AH    R9,TCTTETEL         NEXT ENTRY...
         B     TCTC000             LOOP
         DROP  R6                  DON'T NEED R6 ANYMORE
         DROP  R8                  DON'T NEED R8 ANYMORE
TCTC010  EQU   *
         MVC   RECVCUU,TCTTECCU    MOVE PHYSICAL HARDWARE ADDRESS
         LA    R0,RECVBUFF         ADDRESS I/O AREA
         LA    R1,=CL8'$$BRTERM'   READ TRANSIENT
         SVC   2                   DO IT !!
* ASSUME A COLOR DEVICE, SO INITIALIZE NOW
         OI    TCTE32EF,TCTTEEDS   TURN ON EXTENDED DATA STREAM
         OI    TCTE32EF,TCTTECOL   TURN ON EXTENDED COLOR SUPPORT
         OI    TCTE32EF,TCTTEHIL   AND EXTENDED HILIGHTING
         LA    R6,RECVBUFF         OUR WSF DATA
         TM    0(R6),X'C0'         IS IT AN EXTENDED DEVICE ?
         BO    TCTC020             YES...RETURN
* IT'S A MONO DEVICE. SO INITIALIZE NOW
         NI    TCTE32EF,X'FF'-TCTTEEDS   TURN OFF EDS SUPPORT
         NI    TCTE32EF,X'FF'-TCTTECOL   TURN OFF ECS SUPPORT
         NI    TCTE32EF,X'FF'-TCTTEHIL   TURN OFF EXTENDED HILIGHTING
         LA    RF,MSG03L           LENGTH OF MESSAGE.
         STH   RF,TEXTLTH          STORE IT
         EXEC CICS SEND FROM (MSG03) LENGTH(TEXTLTH) ERASE
         B     RETURN
TCTC020  EQU   *
         LA    RF,MSG02L           LENGTH OF MESSAGE.
         STH   RF,TEXTLTH          STORE IT
         EXEC CICS SEND FROM (MSG02) LENGTH(TEXTLTH) ERASE
RETURN   EQU   *                   RETURN TO PROGRAM WHO CALLED ME
         EXEC  CICS RETURN
ERR01    EQU   *
         LA    RF,MSG01L           LENGTH OF MESSAGE.
         STH   RF,TEXTLTH          STORE IT
         EXEC CICS SEND FROM (MSG01) LENGTH(TEXTLTH) ERASE
         B     RETURN              AND GET OUT
         DS    0F
MSG01    EQU   *
         DC    X'1DC8'
         DC    X'114B5F'           SBA 10,16
         DC    C'*==============================================*'
         DC    X'114C6F'           SBA 11,16
         DC    C'*         Terminal Not Defined in TCT          *'
         DC    X'114D7F'           SBA 12,16
         DC    C'*==============================================*'
MSG01L   EQU   *-MSG01             MESSAGE LENGTH
MSG02    EQU   *
         DC    X'114B5F'           SBA 10,16
* Send Extended Attribute String * Reverse Video/Turquoise
         DC    X'290241F242F5'
         DC    C'                                                '
         DC    X'1D60'
         DC    X'114C6F'           SBA 11,16
* Send Extended Attribute String * Reverse Video/White
         DC    X'290241F242F7'
         DC    C'        TCTTE Modified for Color Support        '
         DC    X'1D60'
         DC    X'114D7F'           SBA 12,16
* Send Extended Attribute String * Reverse Video/Turquoise
         DC    X'290241F242F5'
         DC    C'                                                '
         DC    X'1D60'
         DC    X'114040'           SBA 1,1
         DC    X'1DC8'
MSG02L   EQU   *-MSG02             MESSAGE LENGTH
MSG03    EQU   *
         DC    X'114B5F'           SBA 10,16
         DC    C'*==============================================*'
         DC    X'1D60'
         DC    X'114C6F'           SBA 11,16
         DC    C'*       TCTTE Modified for Mono Support        *'
         DC    X'1D60'
         DC    X'114D7F'           SBA 12,16
         DC    C'*==============================================*'
         DC    X'1D60'
         DC    X'114040'           SBA 1,1
         DC    X'1DC8'
MSG03L   EQU   *-MSG03             MESSAGE LENGTH
HEXFF    DC    8XL1'FF'
         DFHCSAD TYPE=DSECT        CSA DSECT
         COPY  DFHTCADS            TCA DSECT
         COPY  DFHTCTTE            TCTTE DSECT
TCTTEAR  EQU   2                   FOR TCTTE DSECT
         END TCTCOLOR

$$BRTERM SOURCE CODE

         LCLC  &REL
&REL     SETC  '1.0'
*-------------------------------------------------------------------*
*  $$BRTERM -    READ LOCAL BTAM TERMINAL                           *
*  THIS TRANSIENT WILL MODIFY THE SVC NEW PSW TO POINT TO           *
*  ITS OWN CODE. IT WILL THEN ISSUE A DUMMY SVC TO GET INTO         *
*  SUPERVISOR STATE. THEN IT'LL ISSUE A DIAG X'008C' TO OBTAIN      *
*  WSF DATA FROM CP.                                                *
*  REGISTER USAGE:                                                  *
*   R0     -   I/O AREA ADDRESS (THE FIRST 2 BYTES CONTAIN THE      *
*              CUU TO BE READ.                                      *
*   R6     -   I/O AREA ADDRESS (WSF DATA IS PLACED HERE)           *
*   R8     -   CONTAINS PHYSICAL TUBE ADDRESS                       *
$$BRTERM CSECT
         USING *,RF
         DC    CL8'$$BRTERM'  PHASE NAME
         DROP  RF             DON'T NEED THIS ANYMORE
         BALR  R3,0           ADDRESSABILITY
         USING *,R3
         LR    R6,R0               LOAD PLIST
         LH    R7,0(R6)            MOVE TUBE ADDRESS TO READ
         LA    RF,SVC010           OUR SVC ADDRESS
         MVC   SAVEOLD,X'64'(R0)   SAVE OLD SVC NEW PSW
         ST    RF,X'64'(R0)        MODIFY IT
         SVC   99                  DUMMY SVC
SVC010   EQU   *
         LA    R8,256
         DIAG  R6,R8,X'008C'       GET WSF DATA FROM CP
         MVC   X'24'(4,R0),=AL4(SVC020)       SET UP TO RETURN
         MVC   X'64'(4,R0),SAVEOLD            RESTORE SVC NEW PSW
         LPSW  X'20'                          BACK TO PROBLEM STATE
SVC020   EQU   *
         SVC   11                  RETURN
SAVEOLD  DS    1F                  SAVE AREA FOR SVC NEW
         LTORG
         END   $$BRTERM


James Young
Technical Support Manager
Reader's Digest Association (Canada)                             ) Xephon 1990


