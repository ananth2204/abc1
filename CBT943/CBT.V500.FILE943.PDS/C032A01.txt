 Migrating from a macro TCT to auto-install
The auto-install feature of CICS Release 1.7 requires considerable research and
planning before it is implemented.  The key to this new feature is the auto-
install program, DFHZATDX, which chooses a model terminal from those which match
bind information passed to CICS from VTAM.  Besides choosing the model terminal
definition, the auto-install program assigns the terminal-id.  These two
processes may cause considerable consternation at installations that have
thousands of terminals, terminals with hard-coded security, accounting or
security routines that require terminal-ids to be carried over and the NETNAME
and terminal-id to correspond.  Also, until IBM published GG66-0288-00: CICS/VS
Terminal Definitions With Autoinstall Considerations in December 1987, we were
pretty much on our own with auto-install implementation except for scattered
documentation in the various CICS installation, customisation, and resource
definition guides.
Our shop has in place accounting and security procedures which required us to
maintain our previously assigned terminal-ids.  We could not take advantage of
the several creative and ingenious methods of generating them dynamically.
Also, our NETNAME-naming convention does not correspond to our terminal-naming
convention: we do not necessarily use any part of the NETNAME when assigning a
terminal-id.  We were, therefore, faced with choosing between a KSDS VSAM file
or an internal table, probably loaded into main temporary storage above the 16Mb
line.  Because we wanted to maintain additional related information we decided
to go with the VSAM file.
We have a separate Tauto-installU file for each of our eight CICS regions.
After creating the file and loading a dummy record we began the migration as
outlined in Chapter 2.3 of the CICS/OS/VS Resource Definition Guide (On-line).
The first step in the migration process was to edit out any non-VTAM terminal
definitions from the macro TCT and assemble it with a unique name.  We then used
the RDO utility DFHCSDUP with the MIGRATE command to transform the macro
definitions to RDO definitions in the CSD.
Because a new TYPETERM is generated for each unique TCT macro, we then got
together with our VTAM people and went over the dozen or more TYPETERMs that
were generated by the migration.  By dropping obsolete definitions and combining
others we were able to reduce the number of TYPETERMs by about 75%.  This is
important because during the auto-install process each possible terminal model
fit is passed to the auto-install program.  This means extra cycles and extra
I/O to the restart dataset where the definitions are maintained during the CICS
run.  With hard-coded terminal security (the RDO terminal definition
OPERSECURITY parameter), it is necessary for us to have several terminal models,
although each of those may point to the same TYPETERM definition.  We developed
a naming convention to connect the AUTINSTNAME to the model terminal definition
name and the TYPETERM definition name.  For example, an LUTYPE2 device with no
hard-coded security has an AUTINSTNAME of LU200401, the model terminal
definition is named L2E1 and the TYPETERM used is named LU2004.  We included the
AUTINSTNAME as one field in the record for each device.  Also included were the
NETNAME (as the record key), the associated terminal-id, and the PRINTER and
ALTPRINTER definitions.
Once we had migrated the TCT to RDO, established a meaningful naming convention,
and defined a record layout for the auto-install file, we had to develop a
method of transforming the RDO definitions to auto-install records.  To
accomplish this we wrote an Assembler language program which accepts the output
from the DFHCSDUP LIST command as input and extracts the relative information
from the several types of variable length record that this utility generates.
As each record is built it is written to the file.  (Note that a dummy record
must first be written to the file for this procedure to work.)
We continued to use this program as part of our maintenance procedure.  We would
add each new terminal to a temporary group using CEDA, then run this batch
program while our CICS regions were down.  Note that the program handles
duplicate records and prints them out as a maintenance aid.  We have since
written an on-line program to do enquiries, adds, deletes, or record updates.
Following is the source code for our program and sample JCL to run it.  There
are hard-coded values such as security and TYPETERM names - these should be
changed to match values required by your particular installation.
***   PGM - APTTTBLD: BUILDS THE KSDS/VSAM FILE TO BE USED          ***
*     WITH CICS/1.7 AUTOINSTALL AND APTCSSN...THE GUARDIAN            *
*     LIFE PRE-SIGN ON PROCESS  APPLICATION.                          *
 *   THIS PROGRAM EXTRACTS NETNAME,TERMID,OPERSECURITY, PRINTER,  ALT- *
*  PRINTER AND TYPETERM FROM THE LIST OUTPUT GENERATED BY IBM/CICS    *
*  RDO UTILITY DFHCSDUP. FROM THESE FIELDS IT PRODUCES A RECORD       *
*  KEYED ON NETNAME AND WRITTEN TO A KSDS/VSAM FILE . EACH RECORD IS  *
*  ALSO PRINTED OUT . VSAM ERRORS AND DUPLICATE RECORDS ARE           *
*  NOTED ON HARDCOPY . NOTE THAT A DUMMY RECORD (PRESENTLY CONTAINED  *
*  IN SYS2.HCI1713.DUMMYREC) MUST BE WRITTEN TO THE FILE BEFORE THIS  *
*  PROGRAM CAN WRITE RECORDS SUCCESSFULLY.                            *
*    THIS PROGRAM BUILDS AN AUTINSTNAME  FROM THE  TYPETERM           *
*   GENERATED BY DFHCSDUP DURING THE MIGRATION PROCESS..              *
*   TO DO THIS IT USES A TWO NUMBER CODE DERIVED FROM THE OPERSEC -   *
*   -URITY. THE MIDDLE CHARACTER OF THE TYPETERM NAME IS DROPPED      *
*** AND THE 2-DIGIT SCODE IS MOVED TO POS 7 & 8 OF THE AUSTINSTNAME.***
APTTTBLD START 0
BASE     EQU   2
BEGIN    BALR  BASE,0                ESTABLISH BASE
         USING *,BASE                .REG.
         ST    R13,SAVEAREA
         LA    R13,SAVEAREA
         ST    R14,4(R13)
         STM   R0,R12,8(R13)
OPENDS   OPEN  (TERMFILE,INPUT,AUTOINPR,OUTPUT,PRNTFILE,OUTPUT,AUTOINFLX
               ,OUTPUT)
         MVI   AUTOREC,X'40'      CLEAR WORK AREA WITH
         MVC   AUTOREC+1(100),AUTOREC
         MVI   TERMREC,X'40'
         MVC   TERMREC+1(125),TERMREC
GETRTN   GET   TERMFILE,TERMREC   GET A RECORD
         LA    R5,TERMREC         ADDRESS WORKING STORAGE
         LA    R5,4(R5)           GET RID OF RDW
         CLC   8(2,R5),=C'L('     IS THIS A TRMIDNT RECORD
         BE    GETTMID             - YES, GO TO SAVE THE TRMIDNT
         CLC   40(2,R5),=C'TY'    IS THIS A TYPTERM/NETNAME REC
         BE    GETTYPE             - YES,GO TO SAVE TYPTERM/N'NAME
         CLC   40(3,R5),=C'PRI'   IS THIS A PRINTER RECORD
         BE    GETPRTR             - YES, GO SAVE PR'TR & ALT ID
         CLC   44(3,R5),=C'SEC'   IS THIS A OP'SEC RECORD
         BE    GETSEC              - YES, GO CHECK PROFILE
         BE    GETRTN             WE DONT NEED ANY OTHER RECORD TYPE
GETTMID  MVC   TERMIDNT,10(R5)    MOVE TERMID TO VSAM OUTPUT REC
         MVC   PRNTRECT,10(R5)    MOVE TERMID TO MESSAGE OUT REC
         B     GETRTN             GO GET NEXT RECORD
GETTYPE  MVC   WKTTRM,X'00'       PRIME WORK AREA WITH ZEROS
         MVC   WKTTRM+1(8),WKTTRM
         MVC   WKTTRM,49(R5)      MOVE TYPETERM TO WORK AREA
         MVC   NETNAME,71(R5)     MOVE NETNAME TO OUTPUT RECORD
         B     GETRTN             GO GET NEXT RECORD
GETPRTR  CLI   48(R5),X'5D'       IF CLOSE PAREN, MEANS NO PRNTR
         BE    NOPRTR
         MVC   PRINTER,48(R5)     MOVE PRINTER ID TO OUTPUT RECORD
         CLI   97(R5),X'5D'       IF CLOSE PAREN, MEANS NO ALTPRTR
         BE    NOALTPTR
         MVC   ALTPRNT,97(R5)     MOVE ALTPRTR TO OUTPUT RECORD
         B     GETRTN             GO GET NEXT RECORD
NOPRTR   MVI   PRINTER,X'40'      CLEAR FIELD
         MVC   PRINTER+1(4),PRINTER
         MVI   ALTPRNT,X'40'      CLEAR FIELD
         MVC   ALTPRNT+1(4),ALTPRNT
         B     GETRTN             GO GET NEXT RECORD
NOALTPTR MVI   ALTPRNT,X'40'      CLEAR FIELD
         MVC   ALTPRNT+1(4),ALTPRNT
         B     GETRTN             GO GET NEXT RECORD
GETSEC   CLC   TERMIDNT,=C'    '  IS THERE A TERMIDNT ?
         BE    GETRTN             NO, MUST B SESSION RECORD, DROP
         CLC   53(2,R5),OPRSECC1  COMP OP'SECTY WITH PROFILE 1
         BE    SETCODE1           IF EQUAL SET CODE FOR SETTYPE
          CLC   53(4,R5),OPRSECC2  COMP OP'SECTY WITH PROFILE 2
         BE    SETCODE2           IF EQUAL SET CODE FOR SETTYPE
         CLC   53(4,R5),OPRSECC3  COMP OP'SECTY WITH PROFILE 3
         BE    SETCODE3           IF EQUAL SET CODE FOR SETTYPE
         CLC   53(6,R5),OPRSECC4  COMP OP'SECTY WITH PROFILE 4
         BE    SETCODE4           IF EQUAL SET CODE FOR SETTYPE
         CLC   53(18,R5),OPRSECC5 COMP OP'SECTY WITH PROFILE 5
         BE    SETCODE5           IF EQUAL SET CODE FOR SETTYPE
         B     GETRTN
SETMSG   MVC   PRNTREC,=C'NO MATCH FOR  ' **ERROR MESSAGE -
         MVC   PRNTRECT,TERMIDNT  **MOVE TERMINAL ID FOR MSG-
         MVC   PRNTREC+18,=C'NO AUTINSTMODEL CREATED...CHECK PROFILE   X
               IN APTTTBLD AGAINST TERMINAL DEFINITION' **END MSG **
         B     PRNTRTN            PRINT ERROR MESSAGE
SETCODE1 MVC   SCODE,=C'01'       SEC LEVEL 1 ONLY
         B     SETTYPE
SETCODE2 MVC   SCODE,=C'13'       SEC LEVELS 1 & 3
         B     SETTYPE
SETCODE3 MVC   SCODE,=C'14'       SEC LEVELS 1 & 4
         B     SETTYPE
SETCODE4 MVC   SCODE,=C'34'       SEC LEVELS 1,3 & 4
         B     SETTYPE
SETCODE5 MVC   SCODE,=C'99'       ALL CURRENT SEC LEVELS
         B     SETTYPE
SETTYPE  CLC   WRTTRM(3),=C'LU2'     IS THIS AN LUTYPE2 ?
         BE    LUTYPE2            YES...GO PROCESS
         CLC   NETNAME(1),=C'T'      IS IT AN NCCF 3767 ?
         BE    TAF3767            YES...GO PROCESS
         CLC   WKTTRM(3),=C'LU3'          IS THIS A LUTYPE3 PRINTER
         BE    SKIPIT                     YES...SKIP WRITING TO FILE
         CLC   WRTTRM(4),=C'3286'         IS THIS A 3286   PRINTER
         BE    SKIPIT                     YES...SKIP WRITING TO FILE
         MVC   WKTTRM,M32700      NO...MUST BE 3270
         B     SETTYPE2           NOW..TACK ON SECURITY SUFFIX
LUTYPE2  CLC   NETNAME(1),=C'L'      IS IT LOCAL ATTACHED ?
         BE    LOCAL              YES..GO PROCESS
         MVC   WKTTRM,LU2004      NO...MUST BE REMOTE TYPE
         B     SETTYPE2           NOW..TACK ON SECURITY SUFFIX
LOCAL    MVC   WKTTRM,LU200E      MOVE LOCAL NAME TO WORK AREA
         B     SETTYPE2           NOW..TACK ON SECURITY SUFFIX
TAF3767  MVC   WKTTRM,M37670      MOVE TAF NAME TO WORK AREA
SETTYPE2 MVC   WKTTRM4,SCODE              INSERT SEC PROFILE AT END
         B     WRITEREC                   YES...SKIP WRITING TO FILE
SKIPIT   MVC   PRINTER,FLAGIT
         B     CONTNU
WRITEREC MVC   AUTOMODL,WKTTRM            MOVE CHOSEN NAME TO AUTOREC
         MVI   OPRNAME,X'40'              PRIME OPRNAME
         MVC   OPRNAME+1(20),OPRNAME      FOR SIGNON PGM
         MVI   PASSWORD,X'40'             PRIME PASSWORD
         MVC   PASSWORD+1(4),PASSWORD     FOR SIGNON PGM
         PUT   RPL=AUTORPL                WRITE THE RECORD
         B     CKERROR(15)           *******  HANDLING **************
CKERROR  B     CONTNU   -0   NO ERROR
         B     CLSRTN   -4   EOF
         B     DUPREC   -8   DUPLICATE - GO PRINT IT
         B     DMPRTN   -12  REAL BAD - TAKE A DUMP ¨
CONTNU   PUT   AUTOINPR,AUTOREC          PRINT RECORD
         MVI   AUTOREC,X'40'             CLEAR OUTPUT RECORD
         MVC   AUTOREC+1(100),AUTOREC         WITH SPACES
         MVI   TERMREC,X'40'             CLEAR INPUT RECORD
         MVC   TERMREC+1(125),TERMREC         WITH SPACES
         B     GETRTN            GOOD - GET NEXT SERIES
PRNTRTN  PUT   PRNTFILE,PRNTREC      HARDCOPY (MESSAGE)
         MVI   PRNTREC,X'40'             CLEAR THE PRINT REC
         MVC   PRNTREC+1(100),PRNTREC
         B     GETRTN                 GET NEXT RECORD
 DUPREC   MVC   RETCODE,CODE4        RETURN CODE 4
         MVI   PRNTREC,X'40'      CLEAR PRNTREC
         MVC   PRNTREC+1(100),PRNTREC
         MVC   PRNTREC,AUTOREC
         PUT   PRNTFILE,PRNTREC    HARDCOPY (PRINT DUPLICATE)
         B     GETRTN
DMPRTN   MVC   RETCODE,CODE12
         ABEND 0001,DUMP
CLSRTN   CLOSE (TERMFILE,,AUTOINPR,,PRNTFILE,,AUTOINFL,)
         L     R15,RETCODE
         L     R14,4(R13)
         LM    R0,R12,8(R13)
         L     R13,SAVEAREA
         BR    R14
TERMFILE DCB   DDNAME=TERMFILE,                                        X
               DSORG=PS,                                               X
               RECFM=VBA,                                              X
               MACRF=GM,                                               X
               LRECL=125,                                              X
               BLKSIZE=1310,                                           X
               EODAD=CLSRTN
PRNTFILE DCB   DDNAME=PRNTFILE,       HARDCOPY OF                      X
               DSORG=PS,              MESSAGES AND DUP RECORDS         X
               RECFM=FB,                                               X
               MACRF=PM,                                               X
               LRECL=100
AUTOINPR DCB   DDNAME=AUTOINPR,       HARDCOPY OF                      X
               DSORG=PS,              RECORDS PROCESSED                X
               RECFM=FB,                                               X
               MACRF=PM,                                               X
               LRECL=100
AUTOINFL ACB   DDNAME=DD1,                                             X
               MACRF=(KEY,DIR,OUT),  DIR IS REQUIRED FOR NON           X
               EXLST=EREXLST,        SEQ PROCESSING                    X
               STRNO=1
EREXLST        EXLST SYNAD=DMPRTN
AUTORPL  RPL   ACB=AUTOINFL,                                           X
               OPTCD=(KEY,DIR,MVE,SYN),                                X
               AREA=AUTOREC,                                           X
               ARG=NETNAME,                                            X
               RECLEN=100,                                             X
               AREALEN=100
         LTORG
RETCODE  DC    F'00'
CODE4    DC    F'04'
CODE12   DC    F'12'
SAVEAREA DS    9D
LU2004   DC    C'LU2004'  CHANGE TYPETERM NAME ASSIGNED BY CSDUP
LU200E   DC    C'LU200E'
M32700   DC    C'327000'
M37670   DC    C'376700'
FLAGIT   DC    C'****'  FLAG DUPE
OPRSECC1 DC    C'1)'
OPRSECC2 DC    C'1,3)'    ANY NEW SEC LEVELS MUST BE ADDED HERE
OPRSECC3 DC    C'1,4)'       AND CLC'S ADDED ABOVE TO BUILD
OPRSECC4 DC    C'1,3,4)'                  AUTOMODL ... THE
OPRSECC5 DC    C'1,2,3,4,5,6,7,8,9,'      ')' INSURES A UNIQUE
TERMREC  DS    0CL125                   CHECK HAS BEEN MADE
         DS    CL9
KEY1     DS    CL1                '('
TERMID   DS    CL4                TERMINAL ID
         DS    CL111
         ORG   TERMREC
TERMREC2 DS    0CL125
         DS    CL40
KEY2     DS    CL2                'TY'
          DS    CL6
TYPTERM  DS    CL7                TYPTERM NAME
         DS    CL15
NETNAM   DS    CL8                VTAM NETNAME
         DS    CL47
         ORG   TERMREC
TERMREC3 DS    0CL125
         DS    CL40
KEY3     DS    CL2                'PR'
         DS    CL6
PRINTERI DS    CL4                PRINTER ID
         DS    CL45
ALTPRTR  DS    CL4                ALT PRINTER ID
         DS    CL24
         ORG   TERMREC
TERMREC4 DS    0CL125
         DS    CL44
KEY4     DS    CL3                'SEC'
         DS    CL6
OPERSEC  DS    CL18               OPERSECURITY
         DS    CL104
         ORG
AUTOREC  DS    0CL100
NETNAME  DS    CL8                UNIT NETNAME
TERMIDNT DS    CL4                TERMINAL ID
AUTOMODL DS    CL8                AUTOINSTALL MODEL NAME
PRINTER  DS    CL4                PRINTER NAME
ALTPRNT  DS    CL4                ALTERNATE PRINTER NAME
OPRNAME  DS    CL20               OPERATOR NAME
PASSWORD DS    CL4                OPERATOR PASSWORD
         DS    CL48               UNREFERENCED
SCODE    DS    CL2
WKTTRM   DS    0CL8
WKTTRM1  DS    CL3
         ORG   WKTTRM             WORK AREA FOR BUILDING
WKTTRMB  DS    0CL8               AUTINSTNAME
         DS    CL6
WKTTRM4  DS    CL2
         ORG
PRNTREC  DS    0CL100
         DS    CL14
PRNTRECT DS    CL4
         DS    CL82
         END   APTTTBLD
SAMPLE JOB STREAM
//APT1MIGR JOB (N,NNNNNNNNNNNNNNN,N,NNN),'AUTOINSTALL JOB',
//  MSGCLASS=A,CLASS=0,NOTIFY=XXXX,REGION=4096K
//CSDCPY1  EXEC PGM=DFHCSDUP,REGION=256K
//STEPLIB  DD DSN=CICS.HCI1703.PTFS.LOADLIB,UNIT=SYSDA,DISP=SHR
//***************************************************************
//*    DFHCSD  DD DSN=XXXXX.XXXXX.XXXXX.CLUSTER = CSD FOR SYSTEM*
//*    FOR WHICH THIS FILE IS BEING BUILT
//***************************************************************
//*    LIST GROUP(XXXXXXX) OBJECTS ..... XXXXXX = TCT GROUP NAME*
//*    AS IT EXISTS ON THE CSD
//***************************************************************
//DFHCSD   DD DSN=TEST815.HCI1703.CSD.CLUSTER,DISP=SHR
//SYSPRINT DD DSN=&&AUTTMP,SPACE=(CYL,20),DISP=(NEW,PASS),UNIT=SYSDA
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
        LIST GROUP(T1TEMPS) OBJECTS
/*
//***************************************************************
//*    AUTOBLD  BUILDS THE RECORDS FROM THE CSD LISTING AND*
//*    LOADS THE FILE..PRNTFILE WILL LIST DUPRECS AND ERRORS ¨¨¨¨
//***************************************************************
 //*    AUTOINPR WILL CONTAIN HARDCOPY OF RECORDS PRODUCED      **
//*    TERMFILE IS &&AUTTMP PRODUCED IN CSDCPY1 STEP           **
//***************************************************************
//AUTOBLD EXEC PGM=APTTTBLD,REGION=512K
//STEPLIB DD DSN=CICS.HCI1703.PTFS.LOADLIB,UNIT=SYSDA,DISP=SHR
//DD1    DD DSN=TEST815.TST1.AUTOINS.CLUSTER,DISP=SHR,UNIT=SYSDA
//TERMFILE DD DSN=&&AUTTMP,DISP=(OLD,PASS),UNIT=SYSDA
//AUTOINPR DD SYSOUT=*
//PRNTFILE DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//*


E Roland Olivier
Systems Programmer
Guardian Life Insurance Co of America (USA)  ) Guardian Life 1988


















































