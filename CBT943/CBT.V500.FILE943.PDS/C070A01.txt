Interrupting a CICS task using the ATTN key


BACKGROUND

The ATTN key on the 3270-type terminal keyboard can be
used to interrupt a long-running TSO task, but it does not have
any effect in the CICS environment.  In the CICS environment,
if a user starts a long-running transaction (for example,
scanning a file), the transaction will keep running and the user
is unable to stop it.  Obviously, the transaction can be purged
by the CEMT transaction but a normal user would probably not
have the necessary CEMT authority nor would there be an
extra terminal available.

The method suggested here gives a user the ability to purge
his/her long-running transactions using the ATTN key on the
keyboard.  This modification has been running for a few years
in the following environments:

1      CICS/OS/VS 1.6.1, MVS/SP  1.3.8, and VTAM 2.2

2      CICS/OS/VS 1.7.0, MVS/XA  2.2, and VTAM 3.1

3      CICS/MVS   2.1.1, MVS/ESA 3.1, and VTAM 3.2.

Since coding is effectively macro level, a complete rewrite will
be required for CICS/ESA 3.1.1 or 3.2.


LOGIC

In an SNA network, when a user starts a transaction, the data
goes to CICS with a Begin Bracket (BB).  The terminal
keyboard is locked until the transaction replies with an End
Bracket (EB) when the task finishes, or a Change Direction
(CD) when  further terminal input is required.  When the
ATTN key is pressed, an SNA expedited flow command,
SIGNAL, will be sent to the host.  This SIGNAL command
does not need to wait for the EB or CD.

When the SIGNAL command from a 3270-type terminal is
received by CICS, it is ignored, as CICS is not designed to
handle the SIGNAL command from this kind of terminal.

This modification is designed to force CICS to accept the
SIGNAL command and call the DFHZNEP module.  In this
user exit module, it issues the command to purge the active
task in CICS immediately.


FORCING CICS TO HANDLE THE SIGNAL COMMAND

Only one instruction is required to enable you to address the
TCTTE:

       OI   TCTEISDN,TCTESDN      turn on the 'SIGNAL' handling flag

The problem is when to run this instruction to turn on the
TCTEISDN flag so as to force CICS to handle the SIGNAL
command.

If you are (still) using a TCT, you can run a program at CICS
start-up time (by adding the program to the PLTPI).  This
program can use DFHTC CTYPE=LOCATE to address all the
TCTTEs in the system, select the 3270-type terminals, and turn
on the TCTEISDN flag.  Here you have the option of
activating the ATTN key on all or only selected 3270-type
terminals.

***   This is a macro level program, expected to be run at      ***
*     CICS start-up time ( program defined to PLTPI ) to          *
***   activate the 'ATTN'or 'SIGNAL' handling flag in TCTTE.    ***
PGATTNPI START 0
         DFHCSAD  TYPE=DSECT
         DFHTCA   CICSYST=YES
         DFHTCTZE CICSYST=YES
PGATTNPI CSECT
         USING *,BASEREG              Use BASEREG as program base
         BAL   BASEREG,0              Set up base register
         LA    BASEREG,0(BASEREG)     Clear first byte/bit
         BCTR  BASEREG,0              Reset base register to zero
         BCTR  BASEREG,0
         SLR   TCTTEAR,TCTTEAR        Start at first TCTTE entry
LOOP     ST    TCTTEAR,TCATPTA        Store current TCTTE address
         DFHTC CTYPE=LOCATE,TERM=NEXT,ERROR=FINISH,LASTTRM=FINISH
         L     TCTTEAR,TCATPTA        Address the TCTTE
         USING DFHTCTTE,TCTTEAR
         TM    TCTEAMIB,TCTEVTAM      Select VTAM 3270-types
         BZ    LOOP                     terminals only
         CLI   TCTTETT,TCTTET37
         BNE   LOOP
*        You can have more selection criteria here to select
*        some or all terminals with the 'ATTN' activated.
         OI    TCTEISDN,TCTESDN    Turn on the 'SIGNAL' handling flag.
         B     LOOP
FINISH   DFHPC TYPE=RETURN
         LTORG
TCTTEAR  EQU   10     TCTTE pointer
BASEREG  EQU   11     program base register
         END

If you are using auto-install, you may use CICS Global User
Exits to turn on the TCTEISDN flag on 3270-type terminals,
eg XZCATT, XZCIN, and XKCREQ.  In these exits, you can
also have the option of activating or deactivating the ATTN
key dynamically based on terminal-id, transaction-id, user-id,
user input, time-of-day, etc.

***   This is a CICS Static User Exit program, running as a     ***
*     exit program for XZCIN as an example to activate the        *
***   'ATTN'or 'SIGNAL' handling flag in TCTTE.                 ***
PGATTNXT START 0
         DFHCSAD  TYPE=DSECT
         DFHTCA   CICSYST=YES
         DFHTCTZE CICSYST=YES
PGATTNXT CSECT
         USING *,R15                  Standard program starting
         STM   R14,R12,12(R13)        Store all registers
         LR    BASEREG,R15            Use BASEREG as program base
         DROP  R15
         USING PGATTNXT,BASEREG
         LA    R14,SAVE18F            Set up the cross-pointers
         ST    R13,4(R14)               for standard save area.
         ST    R14,8(R13)
         LR    R13,R14
         USING DFHTCTTE,TCTTEAR
         TM    TCTEAMIB,TCTEVTAM      Select VTAM 3270-types
         BZ    QUIT                     terminals only
         CLI   TCTTETT,TCTTET37
         BNE   QUIT
*        You can have more selection criteria here to select
*        some or all terminals with the 'ATTN' activated.
         OI    TCTEISDN,TCTESDN       Turn on the 'SIGNAL'
*                                        handling flag.
QUIT     L     R13,4(R13)             Address back save area
         LM    R14,R12,12(R13)        Restore all registers
         SLR   R15,R15                Set zero return code
         BR    R14                    Return
         LTORG
SAVE18F  DC    18F'0'                 Standard save area
TCTTEAR  EQU   10     TCTTE pointer used in XZCIN exit.
BASEREG  EQU   11     Program base register
         END

Once the SIGNAL handling flag is turned on and the ATTN
key is pressed, the following CICS message will appear in the
CSMT log:

      DFH3452I tttt xxxx hh:mm:ss SIGNAL RECEIVED. CODE 00010000

where tttt is the terminal-id and xxxx is the transaction-id (it
would be CSNE if there is no active transaction at the time
ATTN was pressed).

The message indicates that the SIGNAL processing is active
for that terminal.  You should make sure this portion of the
modification is working properly first before you add the 'task
killer' to your CICS system.


THE TASK KILLER

Another portion of coding is in the DFHZNEP.  DFHZNEP is
a CICS user replaceable module for VTAM network error
handling.  It comes as a dummy module and you can insert
your own customized code into it.

The following is the code you need to insert into DFHZNEP
after the label NEP0AF.  If you already have some coding in
the DFHZNEP program, I recommend the following coding is
inserted after the label NEP0AF and before the other code.

*                                                                 Notes
        L     TCTTEAR,TWATCTA      Get TCTTE address                1
        TM    TCTESIG,TCTESIG      Was 'SIGNAL' received ?          2
        BZ    ATTN90               No, must be for other reasons
        ICM   R2,15,TCTTECA        Address TCA of active task       3
        BZ    ATTN80               No handling if no active task
        CLI   TCATCDC-DFHTCADS(R2),TCADCITW
        BE    ATTN80                No handling if task is          4
*                                    at 'Terminal Wait'
        L     R2,TCASYAA-DFHTCADS(R2)    Address system TCA         5
        L     R2,TCADCAA-DFHSYTCA(R2)    Address the DCA
        ST    R2,TCAKCTCA                Pull out the gun
        MVC   TCAKCABC,=C'attn'          Load the bullet            6
        DFHKC TYPE=CANCEL,FORCE=YES      Aim & Fire                 7
ATTN80  DFHPC TYPE=RETURN          'SIGNAL' handling finished       8
ATTN90  DC    0H'0'                DFHZNEP module entered           9
*                                  for other reasons, continue
*                                  your own processing, or go to
*                                  ATTN80 if you have no more

Notes on the task killer

1      Refer to the CICS Customization Guide.  When
      DFHZNEP gets control, it may be running under the
      transaction-id of CSNE and may not have a principal
      facility.  The TCA and CSA are addressed by standard
      macro-level programming convention and should be set up
      properly.  You have to load the target TCTTE address
      from the TWA.

2      DFHZNEP gets control for many many reasons.  This
      block of inserted code is to handle the SIGNAL command.
      You must check if the SIGNAL command was received or
      not.  You should go to other inserted routines if the
      SIGNAL command was not received so that other
      processing can be done.

3      If a task is active when the SIGNAL command is received,
      TCTTECA will contain the address of the TCA.  You have
      nothing to purge if there is no active task when the user
      presses the ATTN key.

4      Even if a task is active, you should not purge it if it is
      waiting for terminal input, ie it's a conversational
      transaction.  I found some other problems if I purged a
      conversational transaction in a 'terminal wait' state.  In any
      case, the user can use other keys to talk to the program in
      this state and the ATTN key should be ignored.

5      To use the DFHKC TYPE=CANCEL macro to kill a task,
      you must store the DCA address in TCAKCTCA for CICS
      1.7.0 and CICS 2.1.1.  If you are still running CICS 1.6.0
      or 1.6.1, you can drop these two lines of code so that
      Register 2, which is pointing to the TCA, is stored at
      TCAKCTCA.

6      You can select the abend code when the task is purged.  It
      is useful if the task has an abend-handling routine and can
      perform different clean-up functions depending on the
       abend code.

7      Aim and fire.  Need I say more?

8      Exit point for the SIGNAL command handling.  You
      should not need to go to other routines in DFHZNEP.

9      Bypass point for the SIGNAL command handling in case
      the DFHZNEP is called for reasons other than ATTN key
      being pressed.  If it is the only routine you inserted to
      DFHZNEP, you should return to CICS now.


OTHER USAGE

The task killer can also be used for other network error
conditions.  For example, if a terminal session is lost while a
long-running transaction is still active, the task will only issue
an ATNI or ATND abend when the task performs some
terminal I/O.  Sometimes there is no point in the task
continuing if the user is no longer waiting for the response and
therefore the task should be abended immediately.


Thomas Li (Australia)                              c Thomas Li 1991

