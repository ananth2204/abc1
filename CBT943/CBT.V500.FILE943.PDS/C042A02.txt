CMS EXECs for monitoring CICS (continued)

In the last in our series of CMS EXECs for monitoring CICS, we
focus on extracting and displaying DL/I information.

Keying PF14 reads through the PSB directory extracting PSB
name, PSB address, size, and index size.  Keying PF5 dumps a
PSB and keying PF4 displays information from the PCBs that are
contained in a PSB.  Other PF keys sort the display on various
fields.

PDIR EXEC - PSB DIRECTORY EXTRACT

/* PDIR EXEC ***************************************************** */
/*                     PSB DIRECTORY                               */
/*  PARAMETERS REQUIRED:     VMID                                  */
/*                           PSB DIRECTORY ADDRESS                 */
/* *************************************************************** */
      ARG VMID PDIR .
      IF PDIR = '000000' THEN EXIT
/* --------------------------------------------------------------- */
/* FOR EACH ENTRY                                                  */
/* --------------------------------------------------------------- */
      NEXT = 1
      LO = 0
      DO I = 1 TO 500
          VADD = PDIR
          CALL FWORD
          IF FWORD = 'FFFFFFFF' THEN LEAVE
          PSB  = FWORD
          IF SUBSTR(FILE,1,2) = '00' THEN LEAVE
          VADD = HEXADD(PDIR,4)
          CALL FWORD
          PSB  = X2C(PSB||FWORD)            /* PSB  NAME */
          VADD = HEXADD(PDIR,8)
          CALL FWORD
          ADD  = SUBSTR(FWORD,3,6)              /* ADDRESS */
          IF LO = 0 THEN IF ADD ¬= '000000' THEN LO = ADD
          VADD = HEXADD(PDIR,C)
          CALL FWORD
          STOR = SUBSTR(FWORD,3,6)             /* STORAGE */
          HI = HEXADD(ADD,STOR)
          STOR = RIGHT(X2D(STOR),6, )
          VADD = HEXADD(PDIR,10)
          CALL FWORD
          XSTO = SUBSTR(FWORD,1,4)             /* INDEX STORAGE */
          HI = HEXADD(HI,XSTO)
          XSTO = RIGHT(X2D(XSTO),5, )
          NUMB = RIGHT (I,3, )                 /* ASSIGN A NUMBER */
          QUEUE PSB ADD STOR XSTO NUMB
          PDIR = HEXADD(PDIR,1C)
          END I
/* --------------------------------------------------------------- */
/* DISPLAY USING XEDIT                                             */
/* --------------------------------------------------------------- */
      QUEUE
      'X' VMID 'PDIR A (PROFILE PDIR)' LO HI
      EXIT


PDIR XEDIT - PSB DIRECTORY DISPLAY

/* PDIR XEDIT */
      ARG . . . . . . . LO HI .
      NB = X2D(HI) - X2D(LO)
      'INPUT'
      EXTRACT ?FN?SIZ?LSCREEN?
      PARSE VALUE FNAME.1 WITH FNAME.1 .
      'CTL' '%' 'E'
      'CTL' '&' 'P WHI     N'
      'SET PF03 QQUIT'
      'SET PF15 QQUIT'
      'SET PF04 PCBS'
      'SET PF05 PSB'
      'SET LINEND OFF'
      'SET PF9  TOP#+1#SORT * A  1  8'     /* BY NAME    */
      'SET PF10 TOP#+1#SORT * A 30 32'     /* BY NUMBER  */
      'SET PF11 TOP#+1#SORT * D 18 22'     /* BY PSB SIZE */
      'SET PF12 TOP#+1#SORT * D 24 28'     /* BY IX SIZE */
      'SET LINEND ON #'
      'COLOR ID WHI NON'
      'COLOR ARROW WHI NON'
      'COLOR CURL PIN REV'
      'COLOR TOF  PIN REV'
      'COLOR FILE PIN REV'
      'COLOR PREF YEL REV'
      'TOFEOF OFF'
      'SHADOW OFF'
      'NUMBER ON'
      'CMD BOT'
      'SCALE OFF'
      'MSGLINE ON 2 OVERLAY'
      'VERIFY 1 53'
      'PREFIX ON L'
      'WRAP ON'
      'CURL ON 3'
      'CURS S 4 7'
      'RESER 1 GRE REV N' FNAME.1' %& PSB DIRECTORY: ' SIZE.1,
      'PSBS  occupy' NB 'bytes  from' LO 'to' HI
     'RESER 2 YEL REV N' '      PSB NAME ADDRSS PSBSIZ IXSIZ NUM'
      'RESER' LSCREEN.1-1 'N %&PF4=PCBS  PF5=DUMP PSB ',
      'SORT BY:  PF9=NAME  PF10=ADDR  PF11=PSBSIZ  PF12=IXSIZ'
      'TOP'
      '+1'


PSB XEDIT - DUMP PSB

/* PSB XEDIT - STORAGE DISPLAY OF A PSB */
      EXTRACT ?FN?CURSOR?LSCREEN?
      IF CURSOR.1 = LSCREEN.1 THEN EXTRACT ?CURL?
                              ELSE DO
                                   LINE = CURSOR.1-3
                                   '+'LINE
                                   EXTRACT ?CURL?
                                  '-'LINE
                                   END
      ADD = SUBSTR(CURLINE.3,10,6)
      'CMS EXEC VSTOR' FNAME.1 ADD


PCBS XEDIT - PCB INFORMATION

/* PCBS XEDIT */
      EXTRACT ?FN?CURSOR?LSCREEN?
      IF CURSOR.1 = LSCREEN.1 THEN EXTRACT ?CURL?
                              ELSE DO
                                   LINE = CURSOR.1-3
                                   '+'LINE
                                   EXTRACT ?CURL?
                                  '-'LINE
                                   END
      PSB  = SUBSTR(CURLINE.3,10,6)
      NAME = SUBSTR(CURLINE.3,1,8)
      VMID = FNAME.1
      SAY NAME
      SAY
/* --------------------------------------------------------------- */
/* PCB ADDRESSES                                                   */
/* --------------------------------------------------------------- */
      VADD = HEXADD(PSB,10)
      CALL FWORD
      PCB  = SUBSTR(FWORD,3,6)
      IF PCB ¬= '000000' THEN CALL PCB        /* INDEX PCB */
      PCBA = HEXADD(PSB,24)
      DO I = 1 TO 50
         VADD = PCBA
          CALL FWORD
          LAST = SUBSTR(FWORD,1,1)
          PCB = SUBSTR(FWORD,3,6)
          CALL PCB
          PCBA = HEXADD(PCBA,4)
          IF LAST = '8' THEN LEAVE
          END
      PCBI = SUBSTR(FWORD,3,6)
EXIT
/* ---------------------------------------------------------------- */
/* PCB CONTENTS                                                     */
/* ---------------------------------------------------------------- */
PCB:
      VADD = PCB
      CALL FWORD
      DBD = FWORD
      VADD = HEXADD(PCB,4)
      CALL FWORD
      DBD = X2C(DBD||FWORD)    /* DBD NAME */
      VADD = HEXADD(PCB,C)
      CALL FWORD
      POPT = X2C(FWORD)         /* PROCESSING OPTIONS */
      VADD = HEXADD(PCB,20)
      CALL FWORD
      SENS = X2D(FWORD)         /* NO. SENS. SEGS. */
      SAY DBD POPT SENS
      RETURN


Mike Jones
Senior Systems Programmer
Wavin Building Products (UK) ) Xephon 1989

