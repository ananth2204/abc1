 Saving storage with CICS and SVA

Several VSE installations run more than one CICS system.  Any modules (ie
programs, maps, tables etc) used in more than one CICS system will have one copy
of the code in real storage for every system.  In installations without Virtual
Address Extension (VAE), virtual address space will also be wasted.

To avoid this problem, such modules should be placed in the Shared Virtual Area
(SVA).  Of course, these modules must meet VSE's SVA restrictions, which are as
follows:

%    The code must be read only
%    The code must be link-edited as PHASE ....,*,SVA
%    The phase must be loaded into the SVA via SET SDL.

Unfortunately, when you bring CICS up, you will find that CICS does not use the
copy in the SVA.  To get CICS to use the SVA version, execute the following
program in the PLTPI.  Add an entry for it to both the PPT and the PLTPI.  This
program must be executed before any SVA-resident module is LINKed to, XCTLed to,
or LOADed.  Do not specify these modules as resident in the PPT or the ALT
because it will be done automatically.  After a CEMT NEWCOPY, simply re-execute
the PLTPI program with a LINK or via an entry for it in the PCT.

The following program is currently running under VSE 3.1 and CICS 1.5.

         COPY  DFHCSADS
         DFHTCA CICSYST=NO
PPTCBAR  EQU   R7
         COPY  DFHPPTDS
DVC008   CSECT
         BALR  R2,0
         USING *,R2
         B     K0
         DC    C'**'
PROGRAMM DC    C'DVC008  '
         DC    C'**'
K0       DS    0H
         L     PPTCBAR,CSAPPTBA   GET BASE ADDRESS
         USING DFHPPTDS,PPTCBAR   TELL ASSEMBLER
K1       DS    0H
         CLI   PPTPI,X'FF'        END OF PPT ?
         BE    K9                 YES
         TM    PPTTLR,PPTTCRES    TEMPORARY IN CORE ?
         BO    K5                 YES, THEN DON'T MODIFY PPTCSA
*                                 BECAUSE CICS CAN'T FREE THIS
*                                 STORAGE IF PPTCSA MODIFIED
*                                 THIS BIT WILL BE CLEARED BY CSMT NEW
         TM    PPTDOSSW,PPTRSVA   IS PHASE RESIDENT IN SVA ?
         BNO   K5                 NO, CONT
*                                 YES, PHASE RESIDENT, ADDRESS NOW
         XR    R0,R0                   CLEAR WORK
         ICM   R0,7,PPTLELP            GET LOAD POINT AT LINKEDT
         XR    R14,R14                 CLEAR WORK
         ICM   R14,7,PPTLENT           GET ENTRY POINT AT LINKEDT
         SR    R0,R14                  GET OFFSET FROM ENTRY TO LOAD
         A     R0,PPTSVAEA             ADD ENTRY POINT
         STCM  R0,7,PPTCSA+1      SVA LOAD ADDRESS AS CICS LOAD ADDR
         OI    PPTTLR,PPTPCRES    PROGRAM IS PERMANENTLY RESIDENT
*                                 INDICATE CICS DON'T FREE STORAGE
*                                 AT PPTCSA AT ALL.
*  DON'T MODIFY PPTENTD BECAUSE DFHPCP CALCULATES OWN ENTRY POINT
*  AT DFH. PHASES. DON'T USE THIS PPTENTD FOR LOAD POINT CALCULATION
*  (SAME REASON).
K5       DS    0H                 ENTRY FOR BYPASS
         L     PPTCBAR,PPTNXTEN   GET NEXT ENTRY ADDRESS
         B     K1
 K9       DS    0H
* RETURN TO PLTPI EXECUTION
         DFHPC TYPE=RETURN
         LTORG
         END


Alfred Schaal
Systems Programmer
RAFI GmbH & Co (West Germany) ) Xephon 1987
























































