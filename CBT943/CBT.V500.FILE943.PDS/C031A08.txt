 Informing users of CICS availability
This is a program I wrote many years ago.  When CICS is down, the program allows
you to communicate with the users via their terminal.  The program can be
modified to send different screens and messages.  The program is well
documented, and is self-explanatory.  The only hitch is that the program writes
only to local terminals.  Figures 1, 2, and 3 show examples of the different
screen displays that would be sent to users.
EXECUTION JCL
* $$ JOB JNM=CICSDOWN,CLASS=C,DISP=L
// JOB CICS DOWN
// ASSGN SYS001,CUU     Add SYS numbers & CUUs here
// ASSGN SYSXXX,CUU
LIBDEF CL,SEARCH=PRODCLB
// EXEC CICSDOWN,SIZE=128K
/*
/&
* $$ EOJ
PROGRAM SOURCE CODE
***   FUNCTIONS                                                   ***
*     WHEN "ENTER FUNCTION - (DN. UP. BR)" APPEARS ON CONSOLE -     *
*              (DN) TO ISSUE SYSTEM IS DOWN MESSAGE.                *
*              (UP) TO ISSUE SYSTEM IS UP MESSAGE.                  *
*              (BR) TO BROADCAST FREE FORM MESSAGE.                 *
* INPUTS  *                                                         *
*       DN FUNCTION -                                               *
*            WHEN - ENTER REASON FOR SYSTEM DOWN - APPEARS,         *
*                ENTER ONE OF THE FOLLOWING.                        *
*            PF - IF POWER FAILURE.                                 *
*            SM - IF SCHEDULED SYSTEM MAINTENANCE.                  *
*            ED - IF END-OF-DAY PROCESSING.                         *
*            EM - IF EQUIPMENT FAILURE.                             *
*               OR...                                               *
*              ENTER ANY FREE FORM MESSAGE, 1 LINE, 64 CHARACTERS.  *
*       UP FUNCTION -                                               *
*            NO INPUT REQUIRED.                                     *
*        BR FUNCTION -                                              *
*            FREE FORM MESSAGE, 4 LINES, 64 CHARACTERS,             *
***          ENTER A /* IF MESSAGE IS LESS THAN 4 LINES.          ***
CICSDOWN CSECT
         BALR  R12,0
         USING *,R12
         LA    R3,FUNCTION         LOAD ADDRESS FOR FUNCTION
GETFUNC  BAL   R8,CONSOLE
         SR    R4,R4               CLEAR
         LM    R5,R7,FUNCCONS      LOAD ADCONS
FUNCLOOP CLC   INPUT(2),0(R5)      IS THIS EQUAL
         BE    FUNCFND               YES--BRANCH
         BXLE  R5,R6,FUNCLOOP      IF NOT LO/EQUAL--BRANCH
         LA    R3,ERROR2           LOAD ADDRESS OF ERROR MESSAGE
         B     GETFUNC             GO READ FUNCTION AGAIN
FUNCFND  ICM   R4,7,2(R5)          INSERT BRANCH ADDRESS
         BR    R4                    --BRANCH
FUNCTBL  EQU   *   ...FUNCTION TABLE...
FUNCENTR DC    CL2'DN'
FUNCADR  DC    AL3(DOWN)
         DC    CL2'UP',AL3(UP),CL2'BR',AL3(BRDCAST)
FUNCEND  EQU   *-L'FUNCENTR-L'FUNCADR
FUNCCONS DC    A(FUNCTBL,L'FUNCENTR+L'FUNCADR,FUNCEND)
UP       EQU   *   ...SYSTEM IS COMING UP
         MVC   DOWNMSG(57),UPMSG   MOVE MESSAGE TO SCREEN
         B     DISPLAY               --BRANCH
BRDCAST  EQU   *   ...BROADCAST MESSAGE TO ALL TERMINALS...
         LA    R10,DOWNMSG         LOAD MSG LINE ADDRESS
         XC    SCRNADR1,SCRNADR1   CLEAR
         XC    SCRNADR2,SCRNADR2   CLEAR
         XC    SCRNADR3,SCRNADR3   CLEAR
          XC    SCRNADR4,SCRNADR4   CLEAR
         XC    DOWNMSG(57),DOWNMSG CLEAR
         LA    R2,4(,0)            NUMBER LINES FOR BRDCAST
READLOOP EQU   *   ...READ LOOP SET FOR 10 TIMES...
         STCM  R10,7,R+1           STORE ADDRESS INTO CCW
READCON  EXCP  READ                READ INPUT FROM CONSOLE
         WAIT  READ                WAIT FOR COMPLETION
         TM    READ+4,X'01'        SEE IF INPUT CANCELLED
         BNZ   READCON               NO--BRANCH
         CLC   0(2,R10),=C'/*'    IS THIS THE END?
         BNE   NOASTRK               NO--BRANCH
         XC    0(2,R10),0(R10)     CLEAR
         B     DISPLAY               --BRANCH
NOASTRK  EQU   *   ...NO ASTERISK ENTERED YET...
         LA    R10,80(,R10)        BUMP TO NEXT LINE
         BCT   R2,READLOOP         IF NOT ZERO--BRANCH
         B     DISPLAY               --BRANCH
DOWN     EQU   *   ...SYSTEM IS DOWN...
         LA    R3,REASON           LOAD ADDRESS ROR REASON
         BAL   R8,CONSOLE          GO TALK TO OPERATOR
         LM    R3,R5,KEYCONS       LOAD TABLE CONSTANTS
KEYLOOP  EQU   *   ...LOOK FOR KEYWORD...
         CLC   INPUT(2),0(R3)      IS THIS A KEYWORD
         BE    KEYMATCH             YES--BRANCH
         BXLE  R3,R4,KEYLOOP       IF NOT HIGH--BRANCH
         MVC   FREEMSG(64),INPUT+2 NO MATCH--MOVE FREE FORM MSG
         B     DISPLAY
KEYTBL   EQU   *   ...KEY WORD MESSAGES...
KEYENTRY DC    CL30'EDEND OF PROCESSING DAY'
         DC    CL30'SMSCHEDULED SYSTEM MAINTENANCE'
         DC    CL30'EMEQUIPMENT FAILURE'
         DC    CL30'PFPOWER FAILURE'
KEYEND   EQU   *-L'KEYENTRY
KEYCONS  DC    A(KEYTBL,L'KEYENTRY,KEYEND)
KEYMATCH EQU   *    ...SET KEY WORD MESSAGE...
         MVC   FREEMSG(28),2(R3)    MOVE KEY WORD MESSAGE
DISPLAY  EQU   *   ...DISPLAY SCREEN...
         GETIME STANDARD           GET TOD
         ST    R1,DWORD            SAVE TIME
         PACK  TIMEOUT+8(1),DWORD+3(1)
         OI    TIMEOUT+8,X'F0'     ENSURE ZONE IS 'F'
         MVN   TIMEOUT+7(1),DWORD+2
         OI    TIMEOUT+7,X'F0'     ENSURE ZONE IS 'F'
         PACK  TIMEOUT+5(1),DWORD+2(1)
         OI    TIMEOUT+5,X'F0'     ENSURE ZONE IS 'F'
         MVN   TIMEOUT+4(1),DWORD+1
         OI    TIMEOUT+4,X'F0'     ENSURE ZONE IS 'F'
         PACK  TIMEOUT+3(1),DWORD+1(1)
         OI    TIMEOUT+2,X'F0'     ENSURE ZONE IS 'F'
         MVN   TIMEOUT+1(1),DWORD
         OI    TIMEOUT+1,X'F0'     ENSURE ZONE IS 'F'
         MVI   TIMEOUT+3,C':'
         MVI   TIMEOUT+6,C'.'
         LM    R3,R5,DESTCONS      LOAD CONSTANTS
DESTLOOP EQU   *   ...LOOP WHILE CHECKING TABLE...
         MVC   NOOP+7(1),0(R3)     MOVE SYS NR TO CCB
         MVC   DISP+7(1),0(R3)     MOVE SYS NR TO CCB
         XC    SENSBYTE,SENSBYTE   ZERO SENSE BYTE
         EXCP  NOOP
         WAIT  NOOP
         TM    SENSBYTE,X'FF'      DID WRITE FAIL
         BNZ   NOWRITE               YES--BRANCH
         TM    NOOP+4,X'83'
         BNZ   NOWRITE
         EXCP  DISP
         WAIT  DISP
          TM    SENSBYTE,X'FF'      DID WRITE FAIL
         BNZ   NOWRITE               YES--BRANCH
         TM    DISP+4,X'83'
         BNZ   NOWRITE
DISPLOOP EQU   *
         BXLE  R3,R4,DESTLOOP
         B     EOJ                   ALL THRU-GET OUT
DESTTBL  EQU   *   ...SYS NUMBER FOR TERMINALS...
DESTENT  DC    X'01',C'SIO1' SYS001
         DC    X'02',C'SIO2' SYS002
*    ADD SYS NRS AND TERMINAL ID'S HERE.......
DESTEND  EQU   *-L'DESTENT
DESTCONS DC    A(DESTTBL,L'DESTENT+4,DESTEND)
NOWRITE  EQU   *   ...ERROR OCCURRED WHILE WRITING TO TUBES...
         SR    R9,R9               ZERO R9
         IC    R9,0(R3)            INSERT SYS NR INTO R9
         CVD   R9,DWORD            CONVERT TO DECIMAL
         UNPK  TERMID(2),DWORD+6(2) MOVE TO MESSAGE
         OI    TERMID+1,X'F0'      ENSURE ZONE OF 'F'
         MVC   MSGID(4),1(R3)      MOVE TERMID TO MESSAGE
         LA    R7,MESSAGE          GET MESSAGE ADDRESS
         STCM  R7,7,W+1            STORE ADDRESS INTO CCW
         EXCP WRITE
         WAIT WRITE
         B    DISPLOOP             --BRANCH
CONSOLE  EQU  *   ...TALK TO OPERATOR...
         STCM R3,7,W+1            STORE ADDRESS INTO CCW
         EXCP WRITE
         WAIT WRITE
EXCPREAD EQU  *   ...READ FROM CONSOLE...
         EXCP READ
         WAIT READ
         TM   READ+4,X'01'        DID INPUT CANCEL
         BNZ  EXCPREAD              --BRANCH
         OI   INPUT,X'40'         ENSURE UPPER CASE LETTERS
         OI   INPUT+1,X'40'       ENSURE UPPER CASE LETTERS
         CLC  INPUT,=CL45' '      IS INPUT BLANK?
         BNER R8                    NO--BRANCH
         LA   R3,ERROR            LOAD ADDRESS FOR ERROR MSG
         B    CONSOLE               --BRANCH
EOJ      EQU  *   ...THE END...
         EOJ
         DS   0D
DWORD    DC    D'0'
DISP     CCB   SYS001,D,X'0000',SENSBYTE
D        CCW   X'05',SCREEN,X'20',SCRNLEN
WRITE    CCB   SYSLOG,W
W        CCW   X'09',*,0,34
READ     CCB   SYSLOG,R
R        CCW   X'0A',INPUT,X'20',64
NOOP     CCB   SYS001,N,X'0000',SENSBYTE
N        CCW   X'03',*,0,1
SENSBYTE DC    X'00'
INPUT    DC    CL64' '
REASON   DC    CL34'** ENTER REASON FOR SYSTEM DOWN **'
FUNCTION DC    CL34'* ENTER FUNCTION - (DN, UP, BR) *'
ERROR2   DC    CL34'** INVALID FUNCTION **'
ERROR    DC    CL34'** NO ENTRY FOUND **'
UPMSG    DS   0CL57
         DC    CL46'THE SYSTEM WILL BE OPERATIVE IN APPROXIMATELY'
         DC    CL11'TEN MINUTES'
MESSAGE  DS   0CL34
         DC    CL4'SYS0'
TERMID   DC    CL4' '
MSGID    DC    CL6' '
         DC    CL20' WAS NOT NOTIFIED'
 SCREEN   EQU   *   ...DISPLAY SCREEN...
  DC    X'40'   WCC
  DC    X'1140501DC8' R1 C17
  DC    CL44'DDDDDDD  000000  WW          WW NN       NN'
  DC    X'11C1601D'   R2 C17
  DC    CL44'DD    DD 00    00 WW          WW NNN      NN'
  DC    X'11C2FO1D'   R3 C17
  DC    CL44'DD    DD 00    00 WW    WW    WW NN N     NN'
  DC    X'11C4401D'   R4 C17
  DC    CL44'DD    DD 00    00 WW    WW    WW NN  N    NN'
  DC    X'11C5501D'   R5 C17
  DC    CL44'DD    DD 00    00 WW    WW    WW NN   N   NN'
  DC    X'11C6601D'   R6 C17
  DC    CL44'DD    DD 00    00 WW    WW    WW NN    N  NN'
  DC    X'11C7F01D'   R7 C17
  DC    CL44'DD    DD 00    00 WW   WWWW   WW NN     N NN'
  DC    X'11C9401D'   R8 C17
  DC    CL44'DD    DD 00    00  WW WW  WW WW  NN      NNN'
  DC    X'114A501DC8' R9 C17
  DC    CL44'DDDDDDD  000000    WWW    WWW   NN        NN'
         DC    X'114CE3'  R11 C4
DOWNMSG  DC    CL44'THE SYSTEM IS INOPERATIVE FOR THE FOLLOWING'
         DC    CL13'REASON:'
SCRNADR1 DC    X'1150D3'  R14 C04
FREEMSG  DC    XL64'0'
SCRNADR2 DC    X'11D1E3'  R15 C04
         DC    XL64'0'
SCRNADR3 DC    X'11D2F3'  R16 C04
         DC    XL64'0'
SCRNADR4 DC    X'11D4C3'  R17 C04
         DC    XL64'0'
         DC    X'115A50'  R22 C01
         DC    CL18'TIME OF MESSAGE IS'
TIMEOUT  DC    CL9' HH:MM.SS'
         DC    X'115CF0'  R24 C01
         DC    CL43'* * * * THANK YOU FOR YOUR PATIENCE * * * *'
SCRNLEN  EQU   *-SCREEN
         LTORG
         END


Jesse Joyner
Systems Programmer
Systematics Inc (USA)    ) Jesse Joyner 1988






















