CICS sympathy sickness

Many organizations with MRO and ISC configurations have
experienced what has become known as 'sympathy sickness'.
Sympathy sickness is best described as a problem that occurs in
a CICS region because it is connected via MRO or ISC to
another CICS region that is experiencing some sort of
throughput problem.  Quite often the valuable time of the
operations and technical services departments is spent looking
at the sympathy sickness when a problem occurs just to
discover the real problem is in another CICS region.  In
complex MRO and ISC environments, the sympathy sickness
can affect throughput to other regions that are still working by
reaching MAXTASK, AMAXTASK, or short-on-storage
conditions.

With the assistance of Bob Tilton, our IBM regional CICS
specialist, we identified the areas in DFHZISP where allocates
were being queued for MRO and ISC links.  At that point we
introduced USERMOD code to interrogate a switch we placed
in the CWA to determine whether we wanted to allow the
queueing to take place or to respond with the 'remote system
unavailable' message.  If we return a 'remote system
unavailable', transaction routing responds with 'DFH2014
TRANSACTION xxxx NOT EXECUTABLE - SYSTEM yyyy
NOT AVAILABLE'.  Function shipping requests receive a
SYSIDERR and, depending on how the condition is handled in
the application program, will abend with an AEYQ if allowed
to default, or continue as specified by the program.  In all cases
it will function exactly as if the remote region were not
connected.

By causing allocates to fail when the sessions to a remote
region are no longer available, we can prevent the originating
region from reaching one of the three sympathy sickness
conditions of MAXTASK, AMAXTASK, or short-on-storage
for many of the throughput problems that may occur in remote
regions.

The USERMOD as written allows up to three requests to be
queued before rejecting an allocate request.  We found during
testing that a minimum of two requests may need to be queued
to allow ISC systems to connect properly.  Failure to allow for
this may result in the message 'DFH4921 time LU SERVICES
MANAGER FAILURE.  R15 = 00000018 R0 = 00000004'.
We also found that allowing a minimum number of sessions to
queue allows us to bid for contention loser sessions and use
them.

We treat all remote connections the same, but if you wished to
use different criteria for different system connections you could
easily add fields to the CWA for individual connections and
change the USERMOD to check a specific field for each
connection.

We do know that IBM is working on a solution to this problem
and is interested in feedback on any potential solutions, so if
you try this USERMOD, please let your SE know how it
worked for you and about any changes you may have made so
that your SE may provide feedback to the CICS developers.

++USERMOD(ZZZISP1) .
++VER(C150) FMID(HCI2113)
     PRE(UL77871
         UL60040
         UL74467)
   /*
     USERMOD ZZZISP1
     CREATED BY: ITSXS08
             ON: 91/04/04  11:26
    DESCRIPTION:
                 USERMOD TO NOT QUEUE ALLOCATE OF MRO/ISC SESSIONS
                 WHEN NO SESSION IS AVAILABLE.
       */ .
++ MACUPD (DFHTCPSV) DISTLIB (MACLIB  )
   .
./ CHANGE  NAME=DFHTCPSV
         COPY  CITICWAM          COPY CWA DEFINITIONS AFTER CSA ZZZISP1
./ ENDUP
++ MACUPD (DFHZISP ) DISTLIB (SOURCE  )
   ASSEM  (
           DFHZCPS@ DFHZCPS$
                   )
   .
./ CHANGE  NAME=DFHZISP
         C     R14,CWAISCQL        COMPARE AGAINST QUEUE LIMIT  ZZZISP1
         BL    ZZZISA33            NOT OVER, QUEUE THE REQUEST  ZZZISP1
         TM    CWAISCSW,CWAISCNQ  TEST NO QUEUE SWITCH IN CWA   ZZZISP1
         BO    TCZISA03           ..ON, GO TO SYSTEM DOWN RTN   ZZZISP1
ZZZISA33 DS    0H                  QUEUE THE REQUEST            ZZZISP1
         C     R14,CWAISCQL        COMPARE AGAINST QUEUE LIMIT  ZZZISP1
         BL    ZZZALA34            NOT OVER, QUEUE THE REQUEST  ZZZISP1
         TM    CWAISCSW,CWAISCNQ  TEST NO QUEUE SWITCH IN CWA   ZZZISP1
         BO    TCZISA03           ..ON, GO TO SYSTEM DOWN RTN   ZZZISP1
ZZZALA34 DS    0H                  QUEUE THE REQUEST            ZZZISP1
         C     R14,CWAISCQL        COMPARE AGAINST QUEUE LIMIT  ZZZISP1
         BL    ZZZALA35            NOT OVER, QUEUE THE REQUEST  ZZZISP1
         TM    CWAISCSW,CWAISCNQ  TEST NO QUEUE SWITCH IN CWA   ZZZISP1
         BO    TCZISA03           ..ON, GO TO SYSTEM DOWN RTN   ZZZISP1
ZZZALA35 DS    0H                  QUEUE THE REQUEST            ZZZISP1
./ ENDUP

The following USERMOD installs a definition via SMP for the
CWA fields that are used by the above USERMOD.  You
should carefully consider the placement of the fields within
your CWA and move them as appropriate so as not to overlay
any fields that you currently use in the CWA.

++USERMOD (ZZCWADF) .
++VER (C150)    FMID (HCI2113)
  /*
  USERMOD DESCRIPTION:
             ZZCWADF - THIS MODIFICATION WILL DEFINE THE CITIBANK
                       USE OF THE CWA.
  */.
++MAC(ASMCWAC) DISTLIB(MACLIB)
  MALIAS(CITICWAM).
CITIASMM DSECT
******** *************************************************************
*         CITIBANK CICS COMMON WORK AREA (CWA) ASSEMBLER
******** *************************************************************
CWAASM   DS    0CL1024        * CWA ASSEMBLER COMMAND DSECT *
******** *************************************************************
*             USERMOD STORAGE AREAS
******** *************************************************************
*
CWAISCSW DS    X              MRO/ISC NO QUEUE ON ALLOCATE SWITCH
CWAISCNQ EQU   X'FF'             DO NOT QUEUE MRO/ISC ALLOCATES
CWAISCQU EQU   X'00'             DO NORMAL MRO/ISC ALLOCATE QUEUING
         DS    XL3            ...RESERVED
CWAISCQL DS    F              MAX NUMBER OF MRO/ISC REQUESTS TO QUEUE
*
         DS    CL1016

The final part of the project was to write some code to turn the
USERMOD on and off.  Following are a couple of programs
that set the appropriate CWA fields.  They can be run as PLTPI
programs or as transactions from a 3270 terminal or a console.


ICIMRONQ - SET MRO/ISC SESSION QUEUEING OFF

* FUNCTION:     SET MRO ISC QUEUEING BYTE IN CWA TO X'FF' TO NOT QUEUE
*               MORE THAN 3 REQUESTS PER CONNECTION
* INVOKED VIA: PLTPI
*              TERMINAL OR CONSOLE INPUT OF TRANID "NOQU"
CWACBAR  EQU   R4
DFHEISTG DSECT
MSIQMSG  DS    0CL96
MSGPRFX  DS    CL10
         DS    C
MSGAPPL  DS    CL8
         DS    C
MSGDASH  DS    C
         DS    C
MSGTRNID DS    CL4
         DS    C
MSGTRMID DS    CL4
         DS    C
MSGUSER  DS    CL8
         DS    C
MSGTEXT  DS    0C
         ORG   MSIQMSG+96
CWASIZE  DS    H
HEXDATA  DS    CL3
CHARDATA DS    CL5
FCI      DS    CL1
TERMCODE DS    CL2
CWADSECT DSECT
         COPY  CITICWAM
ICTMRONQ DFHEIENT CODEREG=3,DATAREG=10,EIBREG=11
* OBTAIN SYSTEM INFORMATION
         EXEC CICS ASSIGN                                              X
               APPLID(MSGAPPL) USERID(MSGUSER)                         X
               CWALENG(CWASIZE)                                        X
               FCI(FCI) TERMCODE(TERMCODE)                             X
               NOHANDLE
* DETERMINE IF CWA IS LARGE ENOUGH
         CLC   CWASIZE,=AL2(L'CWAISCQL+CWAISCQL-CWAASM)
         BL    SMALLCWA            ..TOO SMALL, GO DISPLAY MESSAGE
* ADDRESS CWA
         EXEC CICS ADDRESS                                             X
               CWA(CWACBAR)
         USING CITIASMC,CWACBAR    TELL ASSEMBLER
* SET CWA MRO/ISC QUEUEING FIELDS
         MVI   CWAISCSW,CWAISCNQ   TURNOFF QUEUEING
         MVC   CWAISCQL,=F'3'      SET QUEUE LIMIT TO 3
* SAMPLE MESSAGE:  ****************************************************
*----+----1----+----2----+----3----+----4----+----5----+----6----+----7
*----+----8----+----9----+
*ICTMRONQ2- CBDT1    - NOQU TERM USERID  - MRO/ISC SESSION QUEUING HAS
*BEEN SUSPENDED
         MVI   MSIQMSG,C' '        CLEAR OUT MESSAGE...
         MVC   MSIQMSG+1(L'MSIQMSG-1),MSIQMSG   ...WITH BLANKS
         MVC   MSGPRFX,MSPREFIX    SUPPLY MESSAGE PREFIX
         MVI   MSGDASH,C'-'        SUPPLY DASH SEPARATOR
         MVC   MSGTRNID,EIBTRNID   SUPPLY TRANSACTION ID
         MVC   MSGTRMID,EIBTRMID   SUPPLY TERMINAL ID
         MVC   MSGPRFX+08(01),=CL1'1'     MOVE MESSAGE NUMBER
         MVC   MSGTEXT(L'MSTEXTA),MSTEXTA MOVE FIRST PART OF TEXT
         B     DISPMSG             ...AND GO DISPLAY MESSAGE
SMALLCWA EQU   *
         MVC   MSGPRFX+08(01),=C'2'      MOVE MESSAGE NUMBER
         MVC   MSGTEXT(L'MSINVCWA),MSINVCWA    MOVE MESSAGE TEXT
         MVC   HEXDATA(2),CWASIZE         MOVE BAD MASK
         MVI   HEXDATA+2,X'FF'            SUPPLY "SIGN"
         UNPK  CHARDATA(5),HEXDATA(3)
***       OFFSETS 00 01 02 03 04
***      HEXDATA  XX|XX            (AFTER ST)
***      HEXDATA  XX|XX|FF         (AFTER MVI)
***      CHARDATA FX|FX|FX|FX|FF   (AFTER UNPK)
***       OFFSETS 00 01 02 03 04
         TR    CHARDATA(4),TRTABLE
         MVC   MSGTEXT+15(4),CHARDATA     MOVE TRANSLATED HEX CHARS
         B     DISPMSG             ...AND GO DISPLAY MESSAGE
DISPMSG  EQU   *
         CLI   FCI,X'01'           IS TRANSACTION TERMINAL ATTACHED?
         BNE   DISPWTO             ..NO, GO ISSUE WTO
         CLI   TERMCODE,X'08'      IS TERMINAL A CONSOLE?
         BE    DISPWTO             ..YES, GO ISSUE WTO
* DISPLAY MESSAGE
         EXEC CICS SEND                                                X
               FROM(MSIQMSG)                                           X
               LENGTH(L'MSIQMSG)
DISPWTO  EQU   *
         EXEC CICS XCTL                                                X
               PROGRAM('ICTWTOSP')                                     X
               COMMAREA(MSIQMSG)                                       X
               LENGTH(L'MSIQMSG)
RETCICS  EQU   *
         EXEC CICS RETURN
         DS    0F
TRTABLE  EQU   *-240
         DC    C'0123456789ABCDEF'
MSPREFIX DC    C'ICTMRONQ -'
* OFFSETS:       0----+----1----+----2----+----3----+----4----+----5---
MSTEXTA  DC    C'- MRO/ISC SESSION QUEUING HAS BEEN SUSPENDED'
MSINVCWA DC    C'- CWA LENGTH X''    '' TOO SMALL, NOTIFY CICS SUPPORT'
         LTORG
         END   ICTMRONQ


ICTMROQU - SET MRO/ISC SESSION QUEUEING ON

* FUNCTION:     SET MRO ISC QUEUEING BYTE IN CWA TO X'00' TO QUEUE
*               session requests
* INVOKED VIA:  PLTPI
*               TERMINAL OR CONSOLE INPUT OF TRANID "MROQ"
CWACBAR  EQU   R4
DFHEISTG DSECT
MSIQMSG  DS    0CL96
MSGPRFX  DS    CL10
         DS    C
MSGAPPL  DS    CL8
         DS    C
MSGDASH  DS    C
         DS    C
MSGTRNID DS    CL4
         DS    C
MSGTRMID DS    CL4
         DS    C
MSGUSER  DS    CL8
         DS    C
MSGTEXT  DS    0C
         ORG   MSIQMSG+96
CWASIZE  DS    H
HEXDATA  DS    CL3
CHARDATA DS    CL5
FCI      DS    CL1
TERMCODE DS    CL2
CWADSECT DSECT
         COPY  CITICWAC
ICTMROQU DFHEIENT CODEREG=3,DATAREG=10,EIBREG=11
* OBTAIN SYSTEM INFORMATION
         EXEC CICS ASSIGN                                              X
               APPLID(MSGAPPL) USERID(MSGUSER)                         X
               CWALENG(CWASIZE)                                        X
               FCI(FCI) TERMCODE(TERMCODE)                             X
               NOHANDLE
* DETERMINE IF CWA IS LARGE ENOUGH
         CLC   CWASIZE,=AL2(L'CWAISCQL+CWAISCQL-CWAASM)
         BL    SMALLCWA            ..TOO SMALL, GO DISPLAY MESSAGE
* ADDRESS CWA
         EXEC CICS ADDRESS                                             X
               CWA(CWACBAR)
         USING CITIASMC,CWACBAR    TELL ASSEMBLER
* SET CWA QUEUEING FLAG TO QUEUE ALL REQUESTS
         MVI   CWAISCSW,CWAISCQU   TURN ON QUEUEING
         MVC   CWAISCQL,=F'0'      RESET QUEUE LIMIT TO ZERO
* SAMPLE MESSAGE:  ****************************************************
*----+----1----+----2----+----3----+----4----+----5----+----6----+----7
*----+----8----+----9----+
*ICTMROQU2- CBDT1    - MROQ TERM USERID  - MRO/ISC SESSION QUEUING HAS
*BEEN RESUMED
         MVI   MSIQMSG,C' '        CLEAR OUT MESSAGE...
         MVC   MSIQMSG+1(L'MSIQMSG-1),MSIQMSG   ...WITH BLANKS
         MVC   MSGPRFX,MSPREFIX    SUPPLY MESSAGE PREFIX
         MVI   MSGDASH,C'-'        SUPPLY DASH SEPARATOR
         MVC   MSGTRNID,EIBTRNID   SUPPLY TRANSACTION ID
         MVC   MSGTRMID,EIBTRMID   SUPPLY TERMINAL ID
         MVC   MSGPRFX+08(01),=CL1'1'     MOVE MESSAGE NUMBER
         MVC   MSGTEXT(L'MSTEXTA),MSTEXTA MOVE FIRST PART OF TEXT
         B     DISPMSG             ...AND GO DISPLAY MESSAGE
SMALLCWA EQU   *
         MVC   MSGPRFX+08(01),=C'2'      MOVE MESSAGE NUMBER
         MVC   MSGTEXT(L'MSINVCWA),MSINVCWA    MOVE MESSAGE TEXT
         MVC   HEXDATA(2),CWASIZE         MOVE BAD MASK
         MVI   HEXDATA+2,X'FF'            SUPPLY "SIGN"
         UNPK  CHARDATA(5),HEXDATA(3)
***       OFFSETS 00 01 02 03 04
***      HEXDATA  XX|XX            (AFTER ST)
***      HEXDATA  XX|XX|FF         (AFTER MVI)
***      CHARDATA FX|FX|FX|FX|FF   (AFTER UNPK)
***       OFFSETS 00 01 02 03 04
         TR    CHARDATA(4),TRTABLE
         MVC   MSGTEXT+15(4),CHARDATA     MOVE TRANSLATED HEX CHARS
         B     DISPMSG             ...AND GO DISPLAY MESSAGE
DISPMSG  EQU   *
         CLI   FCI,X'01'           IS TRANSACTION TERMINAL ATTACHED?
         BNE   DISPWTO             ..NO, GO ISSUE WTO
         CLI   TERMCODE,X'08'      IS TERMINAL A CONSOLE?
         BE    DISPWTO             ..YES, GO ISSUE WTO
* DISPLAY MESSAGE
         EXEC CICS SEND                                                X
               FROM(MSIQMSG)                                           X
               LENGTH(L'MSIQMSG)
DISPWTO  EQU   *
         EXEC CICS XCTL                                                X
               PROGRAM('ICTWTOSP')                                     X
               COMMAREA(MSIQMSG)                                       X
               LENGTH(L'MSIQMSG)
RETCICS  EQU   *
         EXEC CICS RETURN
         DS    0F
TRTABLE  EQU   *-240
         DC    C'0123456789ABCDEF'
MSPREFIX DC    C'ICTMROQU -'
* OFFSETS:       0----+----1----+----2----+----3----+----4----+----5---
MSTEXTA  DC    C'- MRO/ISC SESSION QUEUING HAS BEEN RESUMED'
MSINVCWA DC    C'- CWA LENGTH X''    '' TOO SMALL, NOTIFY CICS SUPPORT'
         LTORG
         END   ICTMROQU

We have successfully implemented the 'noqueue' USERMOD
in our production CICS regions.  The 'system under stress'
messages associated with going short on storage and the
MAXTASK conditions caused by sympathy sickness have
nearly been eliminated.  We believe that the service that we
provide to the end user is more consistent.  The number of
users now affected is a small proportion of the number affected
previously and it takes the system less time to recover for those
who are impacted.


Mark J Sobotka
CICS Project Leader
Citibank Card Products Group (USA)       c Citibank Card Products Group 1992

