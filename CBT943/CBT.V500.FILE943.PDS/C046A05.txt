CICS/DB2 ATTACH request handler

In an effort to automate various CICS master terminal functions,
this program was developed as a standard method of starting,
stopping, or enquiring on the status of the CICS/DB2 ATTACH
mechanism.  We are a CICS/MVS 2.1 shop running DB2 2.1.
The program is linked to from a user program and is passed a
COMMAREA.

This program will use the data passed to start, stop, or enquire on
the CICS/DB2 attachment.  On enquiry, the caller is passed back
the name of the DB2 subsystem (SSID) as well as the current RCT
suffix.  On a start request, the name of the desired RCT to be used
must be passed by the caller.  For each request, a return code is
passed back to the caller.

As this is not an IBM-provided architected interface from CICS to
DB2, the error checking provided by this program is installation-
specific.  In addition, the technique to determine the current SSID
and RCT suffix was obtained in the IBM publication, CICS - IBM
Database2 Interface Guide (GG24-3202-1).  The DSECTs used in
the program are hard-coded, based on information obtained from
the above publication as we were unable to locate the IBM ones at
the time of program development.

MIH0300A TITLE 'MIH0300A - CICS/DB2 ATTACH REQUEST HANDLER'
* THE PROGRAM WILL PERFORM A CICS DB2 ATTACH REQUEST. UPON COMPLETION *
* A RETURN CODE IS SET AND CONTROL IS RETURNED TO THE CALLER.         *
* POSSIBLE VALUES FOR THE RETURN CODE ARE:                            *
*    00 - FUNCTION COMPLETED                                          *
*    10 - FUNCTION ERROR - START ERROR                                *
*    11 - FUNCTION ERROR - WRITEQ TD ERROR                            *
*    20 - INVALID COMMAREA REQUEST                                    *
*    30 - INVALID COMMAREA LENGTH                                     *
*    40 - INVALID COMMAREA RCT SUFFIX                                 *
*   100 - DB2 ATTACH NOT ACTIVE                                       *
* IF COMMAREA PASSED WITH INSUFFICENT LENGTH TO SET RETURN CODE       *
* PROGRAM WILL ABEND WITH A MIH3 ABCODE.                              *
RBASE    EQU   R3               BASE  REGISTER1
RTNBAR   EQU   R6               RETURN REGISTER
DATABAR  EQU   R7               DATA REGISTER
COMMBAR  EQU   R8               DFHCOMMAREA REGISTER1
EIBBAR   EQU   R10              EIB   REGISTER
DB2BAR   EQU   R11              DB2   REGISTER
DSNCVECT DSECT                  DB2 USER DSECT (DSNCVECT)
         DS    D
DSNCRCTP DS    F
DSNCRCT  DSECT                  DB2 USER DSECT (DSNCRCT)
         DS    CL7
RCTSFX   DS    CL1
         DS    CL4
SSID     DS    CL4
COMMAREA DSECT                  CALLING PROGRAM COMMAREA
COMMDATA DS    0CL8
COMMREQ  DS    CL1              COMM - PGM FUNCTION
COMMSSID DS    CL4              COMM - DB2 SSID
COMMSFX  DS    CL1              COMM - RCT SUFFIX
COMMRC   DS    H                COMM - RC PASSED BACK TO CALLER
         DFHEISTG
CICSRESP DS    F                USED FOR DFHRESP
CICSENQ  DS    CL8              ENQ ARGUMENT
CICSLEN  DS    H                START LENGTH ARGUMENT
CICSDATA DS    CL6              START DATA
DB2GALEN DS    H                DB2 LENGHT VARIABLE
CICSMESG DS    CL70             WRITEQ MESSAGE ARGUMENT
MIH0300A DFHEIENT CODEREG=RBASE,EIBREG=EIBBAR,DATAREG=DATABAR
#ENQ     DS    0H
         MVC   CICSENQ,=C'MIH0300A'
         EXEC CICS ENQ                                                 X
                   RESOURCE(CICSENQ)                                   X
                   LENGTH(8)
#COMAREA DS    0H
         L     COMMBAR,DFHEICAP             LOAD DFHCOMMAREA PTR
         USING COMMAREA,COMMBAR             ADDRESS DFHCOMMAREA
         CLC   EIBCALEN,=H'7'               CHECK FOR COMMAREA>7
         BNH   #ABEND                       NO? GOTO #ABEND
         CLC   EIBCALEN,=H'8'               CHECK FOR COMMAREA=8
         BNE   #BADRC30                     IF NO GOTO #BADRC30
         CLI   COMMREQ,C'I'                 REQ = INQUIRY?
         BE    #INQUIR1                     YES? GOTO #INQUIR1
         CLI   COMMREQ,C'S'                 REQ = START?
         BE    #START1                      YES? GOTO #START1
         CLI   COMMREQ,C'X'                 REQ = STOP?
         BE    #STOP1                       YES? GOTO #STOP1
         B     #BADRC20                     GOTO #BADRC20
#INQUIR1 DS    0H
*   DB2 SSID AND RCT SUFFIX INQUIRY
         EXEC CICS EXTRACT EXIT PROGRAM('DSNCEXT1')                    X
               ENTRYNAME('DSNCSQL')                                    X
               GASET(DB2BAR)                                           X
               GALENGTH(DB2GALEN)                                      X
               RESP(CICSRESP)
         CLC   CICSRESP,DFHRESP(INVEXITREQ) IS DB2 PRESENT?
         BE    #INQUIR2                    NO? GOTO #INQUIR2
         USING DSNCVECT,DB2BAR             ..ADDRESSABILITY
         L     DB2BAR,DSNCRCTP             GET RCT ADDRESS
         USING DSNCRCT,DB2BAR              ..ADDRESSABILITY
         MVC   COMMSSID,SSID               MOVE SSID TO COMMAREA
         MVC   COMMSFX,RCTSFX              MOVE RCT SFX TO COMMAREA
         MVC   COMMRC,=H'00'              MOVE LOWVALUES TO COMMRC
         B     #RETURN                    GOTO #RETURN
#INQUIR2 DS    0H
         MVC   COMMRC,=H'100'             MOVE 100 TO COMMRC
         B     #RETURN                    GOTO #RETURN
#START1  DS    0H
         CLI   COMMSFX,X'40'              CHECK IF COMMSFX > X'40'
         BNH   #BADRC40                   GOTO #BADRC40
         MVC   CICSLEN,=H'6'              SETUP START LENGTH
         MVC   CICSDATA,SPACES            CLEAR CICSDATA
         MVC   CICSDATA+0(4),=C'STRT'     MOVE START LITERAL
         MVC   CICSDATA+5(1),COMMSFX      MOVE COMM RCT SUFFIX
         EXEC CICS START TRANSID('DSNC')                               X
                   INTERVAL(000015)                                    X
                   REQID('MIH3STRT')                                   X
                   FROM(CICSDATA)                                      X
                   LENGTH(CICSLEN)
         OC    CICSRESP,CICSRESP          WERE THERE ANY PROBLEMS?
         BNZ   #BADRC10                   YES? GOTO #BADRC10
         MVC   COMMRC,=H'00'              SETUP COMM RETURN CODE
         MVC   CICSMESG,DBSTRT              SETUP TO
         MVC   CICSMESG+45(4),EIBTRNID              CSMT WRITEQ TD
         BAL   RTNBAR,#CSMTQ              DO #CSMTQ
         B     #RETURN                    GOTO #RETURN
#STOP1   DS    0H
         MVC   CICSLEN,=H'06'             SETUP START LENGTH
         MVC   CICSDATA,SPACES            CLEAR CICSDATA
         MVC   CICSDATA+0(4),=C'STOP'     MOVE STOP LITERAL
         EXEC CICS START TRANSID('DSNC')                               X
                   INTERVAL(000015)                                    X
                   REQID('UTJ3STOP')                                   X
                   FROM(CICSDATA)                                      X
                   LENGTH(CICSLEN)
         OC    CICSRESP,CICSRESP          WERE THERE ANY PROBLEMS?
         BNZ   #BADRC10                   YES? GOTO #BADRC10
         MVC   COMMRC,=H'00'              SETUP COMM RETURN CODE
         MVC   CICSMESG,DBSTOP              SETUP TO
         MVC   CICSMESG+45(4),EIBTRNID              CSMT WRITEQ TD
         BAL   RTNBAR,#CSMTQ              DO #CSMTQ
         B     #RETURN                    GOTO #RETURN
#CSMTQ   DS    0H
         EXEC CICS WRITEQ TD                                           X
                   QUEUE('CSMT')                                       X
                   FROM(CICSMESG)                                      X
                   RESP(CICSRESP)                                      X
                   LENGTH(70)
         OC    CICSRESP,CICSRESP            GOOD WRITEQ?
         BNZ   #BADRC11                     NO - GOTO #BADRC11
         BR    RTNBAR                       RETURN TO CALLING RTN
#RETURN  DS    0H
         EXEC CICS DEQ                                                 X
                   RESOURCE(CICSENQ)                                   X
                   LENGTH(8)
         EXEC CICS RETURN
#ABEND   DS    0H
         EXEC CICS ABEND                                               X
               ABCODE('MIH3')
#BADRC10 DS    0H
         MVC   COMMRC,=H'10'              PGM ERROR - START FAILED
         B     #RETURN
#BADRC11 DS    0H
         MVC   COMMRC,=H'11'              PGM ERROR - WRITEQ TD FAILED
         B     #RETURN
#BADRC20 DS    0H
         MVC   COMMRC,=H'20'              INVALID REQUEST
         B     #RETURN
#BADRC30 DS    0H
         MVC   COMMRC,=H'30'              INVALID COMMAREA LENGTH
         B     #RETURN
#BADRC40 DS    0H
         MVC   COMMRC,=H'40'              INVALID COMMAREA RCT
         B     #RETURN
         LTORG
SPACES   DC    256XL1'40'
DBSTRT   DC    CL70'MIH0300A - DSNC STRT REQUEST ISSUED FOR TRAN XXXX'
DBSTOP   DC    CL70'MIH0300A - DSNC STOP REQUEST ISSUED FOR TRAN XXXX'
         END


Michael I Hecht
Senior Technical Officer
Manufacturers Hanover Trust (USA) ) Manufacturers Hanover Trust 1989


