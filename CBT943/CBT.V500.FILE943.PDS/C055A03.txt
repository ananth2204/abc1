A poor man's CICS monitor (continued)

This month we take a look at the second program which helps
make up our poor man's CICS monitor.

The second program is a search for deadlocked tasks.  This
program was originally written for CICS/VSE and then
converted for MVS. It would need slight revision to run on
VSE now as there is no QEA hash table in VSE (or at least
there wasn't when this was done).  The program was actually
simpler under VSE.  The module chases the QEA chains and
records TCA addresses that have waiting tasks and the TCA
addresses of the waiting tasks in a table.  The table entries are
paired TCA addresses of the owner and a waiting task.  Once
all are tabularized, it takes each entry from the table and inverts
it to a test entry of owner/waiter.  Then it matches the test entry
against the original table entries.  This is in effect a test for the
classic condition of 'I own it and you want it, you own it and I
want it'.

         TITLE 'ENQ DEADLOCK SEARCH PROGRAM BY ROBERT BILYEU'
DEADLOCK CSECT
         USING *,R11
         LR    R11,R14      LOAD SO CALLED VOLATILE REGISTER INTO BASE
         USING DFHCSADS,R13
         USING DFHTCADS,R12
         USING DFHQEADS,R4
         USING DFHDCADS,R10
         USING DFHTCADY,R2
         USING DFHTDOA,R5
         XR    R1,R1
         XR    R2,R2
         XR    R3,R3
         XR    R4,R4       CLEAR ALL NEEDED REGISTERS FOR SAFETY SAKE
         XR    R5,R5
         XR    R6,R6
         XR    R7,R7
         XR    R8,R8
         XR    R9,R9
         LA    R4,PAIRLIST  USE MVCL TO CLEAR TABLE TO ZEROES
         LA    R5,1600
         LA    R6,PAIRLIST
         MVCL  R4,R6
         XR    R4,R4       CLEAR ALL NEEDED REGISTERS FOR SAFETY SAKE
         XR    R5,R5       AGAIN
         XR    R6,R6
         LA    R8,+8
         LA    R9,ENDLIST-8
         LA    R7,PAIRLIST
         L     R2,CSAQCAA       LOAD BASE QEA WORD QEA ADDRESS
         LA    R2,QCAHASHT-QCANXQEA(0,R2) BUMP TO 4 SHORT OF 1ST WORD
NEXTWORD LA    R2,4(0,R2)        BUMP TO FIRST BASE WORD
         AP    COUNTER,=X'001C'  ADD 1 TO WORD COUNTER
         CP    COUNTER,=X'064C'  LOOK FOR LAST WORD
         BH    ENDQEAS           FINISHED IF HIGH
         L     R4,0(,R2)      LOAD R4 WITH VALUE AT LOC IN R2 (QEA)
         LTR   R4,R4
         BZ    NEXTWORD       IF ZERO TEST NEXT WORD UNTIL ALL 64
*                             HAVE BEEN LOOKED AT
NEXTQEA  ST    R4,SAVEQEA
         CLC   QEAWTC+1(3),SAVEQEA+1 CHECK THE WAIT CHAIN FOR NO WAITS
         BE    LOOPQEA        PROCESS NEXT QEA IF NO WAITS ELSE
         L     R3,QEAOTP      GET OWNR USER TCA ADDRESS (WHICH HAS
*                             SYSTEM TCA ADDRESS IN THAT 4 BYTES
         MVC   0(4,R7),0(R3)  SAVE IT IN PAIRLIST ENTRY 1ST 4 BYTES
         L     R10,QEAWTC     LOAD THE FIRST WAITER DCA ADDRESS
         L     R5,DCATCAA     LOAD USER TCA ADDRESS OF WAITER
         MVC   4(4,R7),0(R5)  LOAD TCA ADDRESS IN SECOND HALF OF TABLE
         AH    R7,=X'0008'    ENTRY,THEN BUMP TO NEXT ENTRY
NEXTWAIT CLC   DCATCQC+1(3),SAVEQEA+1 TEST QEA ADDRESS(END OF CHAIN?)
         BE    LOOPQEA        PROCESS NEXT QEA ELSE
         L     R10,DCATCQC    LOAD NEXT WAITER DCA ADDRESS.
         L     R5,DCATCAA     LOAD USER TCA ADDRESS OF SUCCEEDING WAIT
         MVC   4(4,R7),0(R5)  LOAD TCA ADDRESS IN SECOND HALF OF TABLE
         MVC   0(4,R7),0(R3)  LOAD OWNER TCA ADDRESS IN FIRST HALF
         BXLE  R7,R8,NEXTWAIT BRANCH UNTIL END OF PAIRLIST TABLE
         B     ENDQEAS
LOOPQEA  L     R4,QEACHN      POINT R3 TO NEXT QEA ADDRESS
         LTR   R4,R4          TEST FOR ZEROES (END OF QEA CHAIN)
         BZ    NEXTWORD       BRANCH TO NEXT WORD OF CHAIN BASES
         B     NEXTQEA        PROCESS THE NEXT QEA
ENDQEAS  EQU  *               BEGIN SCAN OF OWNER/WAITER COMBINATIONS
*        DFHDC TYPE=TRANSACTION,DMPCODE=QEA1
         LA   R6,PAIRLIST
         LA   R4,TESTFLD
BLDNEXT  MVC  0(4,R4),4(R6)   BUILD TESTFLD BY TRANSPOSING TCAS
         MVC  4(4,R4),0(R6)
         LA   R7,PAIRLIST
         CLC  0(8,R4),=8X'00' TEST FOR EMPTY ENTRY
         BE   NODEADLK
TESTNEXT CLC  0(8,R7),=8X'00' TEST FOR EMPTY ENTRY
         BE   NOTFOUND
         CLC  0(8,R7),0(R4)   COMPARE TABLE ENTRY TO TESTFLD
         BE   FOUNDONE
         BXLE R7,R8,TESTNEXT  BRANCH UNTIL END OF PAIRLIST TABLE
NOTFOUND BXLE R6,R8,BLDNEXT   BRANCH UNTIL END OF PAIRLIST TABLE
         B     NODEADLK       END OF TABLE AND NO DEADLOCKS FOUND
FOUNDONE XR    R1,R1
         XR    R2,R2
TASKNO1  LA    R7,DSPLYNO1         LOAD ADDRESS WITHIN CONSOLE MESSAGE
         MVC   0(5,R7),=C'SYSTM'   MOVE SYSTM FOR TCP KCP JCP TASKS
         L     R2,TESTFLD          MOVE TCA ADDRESS OF FIRST DEADLOCK
         CLI   TCAKCTTA,C'T'       THIS SHOULD NEVER EVER OCCUR
         BE    TASKNO2             AS A SYSTEM TASK AND A NORMAL TASK
         CLI   TCAKCTTA,C'K'       SHOULD NEVER DEADLY EMBRACE, BUT
         BE    TASKNO2             LET'S CHECK JUST TO BE SURE
         CLI   TCAKCTTA,C'J'
         BE    TASKNO2
         UNPK  WORK1(5),TCAKCTTA-DFHSYTCA(3,R2)
         OI    WORK1+4,X'F0'
         TR    WORK1(5),TRT5
         MVC   0(5,R7),WORK1
TASKNO2  LA    R7,DSPLYNO2         LOAD ADDRESS WITHIN CONSOLE MESSAGE
         MVC   0(5,R7),=C'SYSTM'   MOVE SYSTM FOR TCP KCP JCP TASKS
         L     R2,TESTFLD+4        MOVE TCA ADDRESS OF OTHER DEADLOCK
         CLI   TCAKCTTA,C'T'       THIS SHOULD NEVER EVER OCCUR!!
         BE    WRITE
         CLI   TCAKCTTA,C'K'
         BE    WRITE
         CLI   TCAKCTTA,C'J'
         BE    WRITE
         UNPK  WORK1(5),TCAKCTTA-DFHSYTCA(3,R2)
         OI    WORK1+4,X'F0'
         TR    WORK1(5),TRT5
         MVC   0(5,R7),WORK1
WRITE    MVC   TIMEFLD(L'DTTMEDIT),DTTMEDIT
         ED    TIME,CSATODP         EDIT DATE AND TIME INTO MESSAGE
         ED    DATE,CSAJYDP
         DFHSC TYPE=GETMAIN,NUMBYTE=200,CLASS=TRANSDATA,               X
               COND=(NO,NOSTOR)
         L     R5,TCASCSA
         MVC   TDMSG1,MSG1       BUILD THE TRANSIENT DATA MESSAGE
         MVC   TDMSG2,MSG2       BY PICKING UP PIECES OF THE CONSOLE
         MVC   TDMSG3,MSG3       MESSAGES AND ADDING CARRIAGE CONTROL
         MVC   CONTROL1,=X'0D15'
         MVC   CONTROL2,=X'0D15'
         MVC   CONTROL3,=X'0D15'
         MVC   CONTROL4,=X'19'
         MVC   TDOAVRL,TDLENGTH
         DFHTD TYPE=PUT,DESTID=OPRP,TDADDR=TDOAVRL
         ST    R5,TCASCSA
         DFHSC TYPE=FREEMAIN     RELEASE TRANSIENT DATA STORAGE
NOSTOR   EQU   *                 THE IDEA ON CONSOLE REPLYS IS TO MAKE
         LA    R5,LOCKMSG1    SEND LOCKMSG1 2 AND 3 EVERY MINUTE UNTIL
         DFHWTO (R5)          DEADLOCK IS CLEARED, BUT SEND 4 ONLY
         LA    R5,LOCKMSG2    ONCE AS IT REQUIRES AN OPERATOR REPLY
         DFHWTO (R5)
         LA    R5,LOCKMSG3
         DFHWTO (R5)
         CLC   FOUNDSW,=C'DEADLOCKED NOW'   SET SWITCH TO BYPASS THE
         BE    NOREPLY                      OPERATOR REPLY EVERY MINUTE
         MVC   FOUNDSW,=C'DEADLOCKED NOW'   UNTIL CONDITION IS CLEARED
         MVC   SAVERUN,CSAICRIC             SAVE CICS RUNAWAY INTERVAL
         MVC   CSAICRIC,=X'00000000'        SET INTERVAL TO ZEROES
         DFHIC TYPE=WAIT,INTRVAL=01         CAUSE REDISPATCH NORUNAWAY
         LA    R5,LOCKMSG4
         DFHWTO (R5)
         MVC   CSAICRIC,SAVERUN             PUT RUNAWAY BACK AS IT WAS
*        DFHDC TYPE=TRANSACTION,DMPCODE=QEA2
NOREPLY  DFHPC TYPE=RETURN
NODEADLK MVC   FOUNDSW,=C'NOT DEADLOCKED'
*        DFHDC TYPE=TRANSACTION,DMPCODE=QEA2
         DFHPC TYPE=RETURN
         LTORG
*                   S C R E E N   C O N S T A N T S
***********************************************************************
DTTMEDIT DS   0CL24                DATE AND TIME EDIT FIELD
         DC    CL1'  '
         DC    X'2120',C':',X'2020',C':',X'2020',C'.',X'20'
         DC    CL3' ON'
         DC    C' ',X'20202020',C'/',X'202020'
TDLENGTH DC    X'00AA'    TRANSIENT DATA MESSAGE LENGTH OF 170
EDIT00   DC    X'4B20202020202120'
TRT5     EQU   *-C'0'
         DC    CL16'0123456789ABCDEF'
         DS    0F
LOCKMSG1 DC    Y(64)
         DC    B'10000000'
         DC    B'00000000'
MSG1     DS    0CL56
         DC    C'XANL1'
TIMEFLD  DS    CL1
TIME     DS    CL11                HH:MM:SS.TH
         DS    CL3
DATE     DS    CL9                 BBBYY/DDD
         DC    C' A DEADLOCK HAS BEEN FOUND   '
         DS    0F
LOCKMSG2 DC    Y(64)
         DC    B'10000000'
         DC    B'00000000'
MSG2     DS    0CL58
         DC    C'XANL1'
         DC    C' THE DEADLOCK TRANSACTION NUMBERS ARE '
DSPLYNO1 DS    CL5
         DC    C' AND '
DSPLYNO2 DS    CL5
         DC    C'                               '
         DS    0F
LOCKMSG3 DC    Y(64)
         DC    B'10000000'
         DC    B'00000000'
MSG3     DS    0CL45
         DC    C'XANL1'
         DC    C' NOTIFY SYSTEMS PROGRAMMING IMMEDIATELY!'
         DC    C'                               '
         DS    0F
LOCKMSG4 DC    Y(64)
         DC    B'10000000'
         DC    B'00000000'
MSG4     DC    0CL45
         DC    C'XANL1'
         DC    C' READ ABOVE AND RESPOND BY HITTING ENTER'
         DC    C'                            '
DATEWK   DS    CL12
COUNTER  DC    X'000C'
         COPY  DFHCSADS
         CWA
         DFHTCA CICSYST=YES
         TWA
         ORG   TWA
* TWA AREA IS USED BY MULTIPLE PROGRAMS--BE CAREFUL NOT TO MOVE THINGS
         DS    CL16        LEAVE SPACE FOR RLBANAL5 DATA
FOUNDSW  DS    CL14        SWITCH TO CONTROL CONSOLE REPLY MESSAGE
FLAG     DS    CL1         REPRESENTS ACTIVE OR SUSPEND CHAIN A OR S
LONGSW1  DS    CL3         VALUE YES OR NO TO CONTROL CONSOLE REPLIES
LONGSW2  DS    CL4         VALUE 00000000 OR ONCE TO LOAD POINTERS
LONGSW3  DS    CL16        VALUE CONSOLE REPLY OR NO CONSOLE REPLY
WORK1    DS    CL12        WORK FIELD FOR VARIOUS USES
TWRK1    DS    CL4         TWRK1 = CURRENT TIME TURNED TO MINUTES
TWRK2    DS    CL4         TWRK2 = ORIGINAL TIME TURNED TO MINUTES
TWRK3    DS    CL4         TWRK3 = WORK FOR TIME CALCULATIONS
SAVE13   DS    F           USED FOR CERPAKU CALL FOR SCALAR DATE
SAVEREGS DS    18F         USED FOR CERPAKU CALL FOR SCALAR DATE
SAVERUN  DS    F           SAVE RUNAWAY TIME INTERVAL
SAVEQEA  DS    F           SAVE CURRENT QEA BASE ADDRESS FOR COMPARES
STOREBEG DS    F           SAVE END ADDRESS ON THE LONG RUN TABLE
STOREEND DS    F           SAVE END ADDRESS ON THE LONG RUN TABLE
STORENXT DS    F           SAVE THE NEXT ENTRY ADDRESS OF LONG RUN TAB
TESTFLD  DS    CL8         USED TO TRANSPOSE TABLE ENTRIES AND COMPARE
PAIRLIST DS    200CL8      PAIRLIST TABLE FOR FINDING DEADLOCKED TASKS
ENDLIST  DS    0CL1
LONGLIST DS    100CL12     LONGLIST TABLE FOR FINDING LONG RUN TASKS
ENDLONG  DS    0CL1
DCACBAR  EQU   0
         COPY  DFHDCADS
TDOABAR  EQU   5
         COPY  DFHTDOA
CONTROL1 DS    CL2
TDMSG1   DS    CL56
CONTROL2 DS    CL2
TDMSG2   DS    CL58
CONTROL3 DS    CL2
TDMSG3   DS    CL45
CONTROL4 DS    CL1
         COPY  DFHQCADS
         COPY  DFHQEADS
         END

The remaining program which makes up Robert Bilyeu's poor
man's CICS monitor will be published in next month's issue of
CICS Update.

Robert Bilyeu
Consultant (USA)                                    ) Xephon 1990


