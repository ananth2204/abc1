 Measuring CICS line traffic


PROBLEM

When measuring message traffic over BSC and SDLC lines, running under BTAM and
VTAM, although CICS statistics measure the number of messages, the message size
is not reported.  In order to satisfy the needs of capacity planning, it is
necessary to know the average message size at least.


SOLUTION

The following global CICS exit program was written to accumulate a count of
input and output messages and their sizes.

For VTAM output messages, the number of physically transmitted messages may not
be quite accurate because VTAM may break the logical message into multiple
physical messages, but for consistency the TIOA sizes are reported here.  If
VTAM record sizes are necessary, it will require the addition of the VTAM RPL
generated by macro IFGRPL and logic to establish addressability to it.  In
addition, the output ZCB exit would change to XZCOUT instead of XZCOUT1.

The exits may be stopped and started at different times of the day to catch peak
periods and such.

The traffic is summarised based on the first two characters of the terminal-id
(eg if the terminal-id is T600, T604, or T699 it would be put into the 'T6'
group of terminals).  Each one of these groups requires 20 bytes of the global
work area, so be sure the work area is large enough to hold all the groups.

The program requires at least 1K, which should be large enough to hold 50
terminal groups, but it will not warn of an overflow (or storage violation),
although CICS certainly will.  Alteration of the field SLTYPE in the DSECT
SLACCUM and the instructions that move and compare it to the current terminal-id
will allow for groupings based on alternative terminal naming schemes.

The accompanying COBOL program will give a basic print out of all the
accumulations, but only up to 24 lines worth.  For a larger terminal (eg 3278-3)
or network with more than 24 groupings, adjustments would have to be made.
Figure 1 shows a typical display.

START-UP

To start measuring line traffic, the following commands must be issued (either
from a program or interactively from CECI):

 ENABLE PROGRAM(TCPMSGX) GALENGTH(4096)
 ENABLE PROGRAM(TCPMSGX) EXIT(XTCOUT)
 ENABLE PROGRAM(TCPMSGX) EXIT(XTCIN)
 ENABLE PROGRAM(TCPMSGX) EXIT(XZCOUT1)
 ENABLE PROGRAM(TCPMSGX) EXIT(XZCIN)
 ENABLE PROGRAM(TCPMSGX) START


ASSEMBLER EXIT PROGRAM

* ENVIRONMENT: VSE/SP 2.1.3, CICS/VS 1.6.0
* THIS ROUTINE USES TIOA TO CALCULATE MESSAGE SIZES, REGARDLESS
* OF ACCESS METHOD.
* REGISTER USAGE
* R1   (TCTLEAR)==> TCTLE
* R2   (TCTTEAR)==> TCTTE
* R3   (DFHEUPAR==> USER EXIT PARM LIST
* R4   (TIOABAR)==> TIOA
* R6   ADDRESS OF ACCUMULATOR DSECT
 * R8   A(TIOA) IF FROM ZCB INPUT
* R10  A(TCTTE) IF FROM ZCB INPUT OR OUTPUT
*      REGS 8,10 ARE MOVED TO REGS 4,2, RESPECTIVELY, ASAP UPON
*      ENTRY.
* R13 A(SAVEAREA)
* R15 ENTRY POINT ADDRESS (BASE REGISTER)
TIOABAR  EQU  4
TCTTEAR  EQU  2
         COPY  DFHTCTTE
         COPY  DFHTCTLE
         COPY  DFHTIOA
SLACCUM  DSECT
SLTYPE   DS    CL2                 1ST 2 CHAR OF TERMID
         DS    CL2                 FILLER FOR ALIGNMENT
SLINM    DS    CL4                 INPUT MESSAGE
SLIN     DS    CL4                 INPUT MESSAGE BYTES
SLOUTM   DS    CL4                 OUTPUT MESSAGE
SLOUT    DS    CL4                 OUTPUT MESSAGE BYTES
         DFHUEXIT TYPE=EP
TCPMSGX  CSECT
         SAVE  (14,12)             SAVE REGS IN CSAOSRSA
         BALR  R15,0
         USING *,R15               15 IS BASE REG
         USING DFHUEPAR,R3         R3 = A(USER EXIT PARM LIST)
         USING SLACCUM,R6          R6 = A(ACCUMULATOR ARRAY)
         LR    R3,R1               MOVE A(DFHUEP) TO R3
         L     R7,UEPEXN           R7 = A(EXIT NUMBER)
         CLI   0(R7),XZCIN         CAME FROM ZCB INPUT ROUTINE?
         BE    FROMZCB             YES..MAKE REGISTER ADJUSTMENTS
         CLI   0(R7),XZCOUT1       CAME FROM ZCB OUTPUT ROUTINE?
         BE    FROMZCB             YES..MAKE REGISTER ADJUSTMENTS
         B     MUSTBTCP            ELSE IT IS A TCP EXIT
FROMZCB  LR    R2,R10              LOAD R2 TO POINT AT TCTTE
         LR    R4,R8               LOAD R4 TO POINT AT TIOA
MUSTBTCP L     TCTLEAR,TCTTELEA    LOAD TCTLE REGISTER
         L     R6,UEPGAA           POINT 6 TO ACCUM ARRAY IN GLBL WA
         C     R6,=F'0'            MAKE SURE WRKAREA IS PRESENT
         BE    RETURN
         L     R7,UEPGAL           ADDRESS OF WRKAREA LENGTH
         CLC   0(2,R7),=H'1024'    REQUIRE AT LEAST 1024 (1K)
         BL    RETURN              IF LESS, RETURN
         LA    R7,0                INIT R7 TO 0
CHKTYPE  CLI   SLTYPE,X'00'        CHECK IF ENTRY IS THERE
         BNE   YENTRY              YES.. ENTRY IS PRESENT
*  TCTTETI IS THE TERM ID; ADJUST SLTYPE IN THE DSECT AND THE
*  LENGTH IN THE INSTRUCTIONS TO CHANGE THE LENGTH AND/OR THE
*  LOCATION OF 'GROUP' IDENTIFIERS.
         MVC   SLTYPE(2),TCTTETI   NO...MOVE THIS ENTRY IN
YENTRY   CLC   SLTYPE(2),TCTTETI   1ST 2 OF TERMID = TABLE
         BNE   NEXTSLOT            NO...GO POINT TO NEXT SLOT OF TABLE
         L     R9,UEPEXN           R9 = A(EXIT NUMBER)
*        ALL  ROUTINES USE TIOADTL, SO ADD IT HERE
         LA    R8,0                YES..ZERO R8 FOR ACCUMULATOR
         AH    R8,TIOATDL          ADD TERM DATA LENGTH
         BC    12,RETURN           IF SUM < OR = ZERO
         CLI   0(R9),XZCIN         CAME FROM ZCB INPUT ROUTINE?
         BE    YINPUT              YES..GO ADD TO INPUT ACCUMS
         CLI   0(R9),XZCOUT1       CAME FROM ZCB OUTPUT ROUTINE?
         BE    YOUTPUT             YES..GO ADD TO OUTPUT ACCUMS
         CLI   0(R9),XTCOUT        CAME FROM OUTPUT ROUTINE?
         BE    YOUTPUT             YES..GO ADD TO OUTPUT ACCUMS
         CLI   0(R9),XTCIN         CAME FROM INPUT ROUTINE?
         BE    YINPUT              YES..GO ADD TO INPUT ACCUMS
         B     RETURN              NO RECOGNIZABLE EXIT
YINPUT   L     R9,SLINM            MOVE NR OF MESSAGES TO R9
         A     R9,=F'1'            ADD 1 TO NUMBER OF MESSAGES
          ST    R9,SLINM            PUT BACK IN SLINM
         L     R9,SLIN             MOVE IN ACCUM TO R9
         AR    R9,R8               ADD TIOA LENGTH (R8) TO R9
         ST    R9,SLIN             PUT BACK IN SLIN
         B     RETURN
YOUTPUT  L     R9,SLOUTM           MOVE NR OF MESSAGES TO R9
         A     R9,=F'1'            ADD 1 TO NUMBER OF MESSAGES
         ST    R9,SLOUTM           PUT BACK IN SLOUT
         L     R9,SLOUT            MOVE IN ACCUM TO R9
         AR    R9,R8               ADD TIOA LENGTH (R8) TO R9
         ST    R9,SLOUT            PUT BACK IN SLOUT
         B     RETURN
NEXTSLOT LA    R7,1(R7)            ADD 1 TO R7
         C     R7,=F'30'           COMPARE R7 TO 30
         BL    BUMP6               IT IS LESS..GO BUMP 6
         B     RETURN              IT IS MORE..RESTORE AND RETURN
BUMP6    LA    6,20(R6)            BUMP R6 UP 10 TO NEXT SLOT
         B     CHKTYPE             GO COMPARE TYPE
RETURN   RETURN (14,12)            RETURN
         LTORG
         END


COBOL DISPLAY PROGRAM

       IDENTIFICATION DIVISION.
       PROGRAM-ID.
           SU201P.
       AUTHOR.
           STEVE LOVETT.
       REMARKS.
           EXTRACT INFORMATION FROM EXIT AND PRINT TO SCREEN.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77  WK1                PIC   S9(7).
       77  GAL                PIC   S9(4)  COMP.
       77  PAL                PIC   S9(4)  COMP.
       77  IX                 PIC   S9(8)  COMP.
       77  IY                 PIC   S9(8)  COMP.
       77  WORKT              PIC   S9(8)  COMP.
       77  LINELEN            PIC   S9(8)  COMP  VALUE +80.
       01  HEX15          PIC  S9(4) COMP  VALUE +21.
       01  FILLER         REDEFINES  HEX15.
           05  FILLER     PIC  X.
           05  NL         PIC  X.
       01  PRINT-LINE.
           05  PL-CC         PIC   X.
           05  PL-TYPE       PIC   X(4).
           05  PL-INM        PIC   Z,ZZZ,ZZZ,ZZ9.
           05  PL-IN         PIC   Z,ZZZ,ZZZ,ZZ9.
           05  PL-OUTM       PIC   Z,ZZZ,ZZZ,ZZ9.
           05  PL-OUT        PIC   Z,ZZZ,ZZZ,ZZ9.
           05  PL-TOT        PIC   ZZ,ZZZ,ZZZ,ZZ9.
       01  HEAD-LINE.
           05  HL-TYPE       PIC   X(4)   VALUE 'TERM'.
           05  FILLER        PIC   X(13)  VALUE '    INPUT MSG'.
           05  FILLER        PIC   X(13)  VALUE '  INPUT BYTES'.
           05  FILLER        PIC   X(13)  VALUE '   OUTPUT MSG'.
           05  FILLER        PIC   X(13)  VALUE ' OUTPUT BYTES'.
           05  FILLER        PIC   X(14)  VALUE '        TOTAL'.
       01  PRINT-OUT.
           05 OUT-ARRAY      OCCURS 50 TIMES
                             PIC X(80).
       01  DFMBMSCA  COPY DFHBMSCA.
       01  DFHAID   COPY DFHAID.
        LINKAGE SECTION.
       01  BLL-CELLS.
           05  FILLER        PIC   X(4).
           05  WAPTR         PIC   S9(8) COMP.
       01  SL-ACCUM.
          02  ARRAY OCCURS 50 TIMES.
           05  SL-TYPE       PIC   XX.
           05  FILLER        PIC   XX.
           05  SL-INM        PIC   S9(8) COMP.
           05  SL-IN         PIC   S9(8) COMP.
           05  SL-OUTM       PIC   S9(8) COMP.
           05  SL-OUT        PIC   S9(8) COMP.
       PROCEDURE DIVISION.
           IF  EIBAID = DFHCLEAR THEN
               EXEC CICS SEND CONTROL
                         ERASE
                         FREEKB
               END-EXEC
               EXEC  CICS RETURN END-EXEC.
           MOVE SPACES TO PRINT-LINE.
           EXEC CICS HANDLE CONDITION INVEXITREQ (9991-SEND)
                     END-EXEC.
           EXEC CICS EXTRACT EXIT PROGRAM('TCPMSGX')
                     GASET(WAPTR) GALENGTH(GAL)
                     END-EXEC.
           MOVE 1 TO IX, IY.
           MOVE HEAD-LINE TO OUT-ARRAY (IY).
           MOVE 2 TO IY.
           IF GAL = 0 THEN GO TO 9992-SEND
           IF SL-TYPE (1)  = LOW-VALUES THEN GO TO 9993-SEND.
       0100-LOOP.
           IF SL-TYPE (IX) = LOW-VALUES THEN GO TO 9995-SEND.
           MOVE NL           TO PL-CC.
           MOVE SL-TYPE (IX) TO PL-TYPE.
           MOVE SL-INM  (IX) TO PL-INM.
           MOVE SL-IN   (IX) TO PL-IN.
           MOVE SL-OUTM (IX) TO PL-OUTM.
           MOVE SL-OUT  (IX) TO PL-OUT.
           COMPUTE WORKT = SL-IN (IX) + SL-OUT (IX).
           MOVE WORKT TO PL-TOT.
           MOVE PRINT-LINE TO OUT-ARRAY (IY).
           ADD 1 TO IX, IY.
           IF IX < 25 THEN GO TO 0100-LOOP.
           GO TO 9995-SEND.
       9991-SEND.
           MOVE 75 TO PAL.
           MOVE 'SU201P91  INVALID EXIT REQUEST ' TO PRINT-OUT.
           GO TO 9998-SEND.
       9992-SEND.
           MOVE 75 TO PAL.
           MOVE 'SU201P92  NO WORK AREA LENGTH  ' TO PRINT-OUT.
           GO TO 9998-SEND.
       9993-SEND.
           MOVE 75 TO PAL.
           MOVE 'SU201P93  NO DATA ACCUMULATED  ' TO PRINT-OUT.
           GO TO 9998-SEND.
       9995-SEND.
           COMPUTE PAL = (IY - 1) * LINELEN.
       9998-SEND.
           EXEC CICS SEND TEXT FROM (PRINT-OUT)  LENGTH (PAL)
                     ERASE END-EXEC.
           EXEC CICS RETURN
                     TRANSID('SU01')
           END-EXEC.
           GOBACK.


Steve Lovett
Technical Support Manager (USA)    ) Xephon 1987































































