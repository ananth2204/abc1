Controlling CICS dataset names

We are an MVS/XA shop running CICS 1.7 on a 3090-400E.  In
our installation certain application support teams have a mixture
of batch and on-line processes.  Because of the batch nature of
many of their datasets they have traditionally relied on File
Generation Numbers (FGNs) to support the integrity and currency
of their data.  Including datasets with FGNs in the FCT can be a
frequent and time-consuming exercise, especially if the datasets
are updated frequently and the FGNs incremented.

To address this problem we have developed the following
solution.  Not only does it make frequent assemblies of the FCT
unnecessary but it gives a greater degree of control to the
application team to ensure that the correct datasets have been
allocated to their CICS suite.  The commands below are only
available with CICS 1.7.0 onwards.

The solution has two main parts:

1	A VSAM dataset, defined to CICS, which contains the names
of the datasets.

2	A program to read the above dataset and allocate the dataset
name to the file name in the FCT.

VSAM DATASET DETAILS

A simple 64-byte record, fixed-block KSDS is used in our
installation, consisting of the following information:

%	Field 1 - 8 bytes (key) - FCT file name

%	Field 2 - 46 bytes - Dataset name

%	Field 3 - 6 bytes - Date stamp

%	Field 4 - 4 bytes - Process name.

Cluster Information

DEFINE CLUSTER  (NAME (USERID1.CICSL.DALLOC) -
     VOLUMES (USER81)                 -
     UNIQUE                           -
     INDEXED                          -
        KEYS (8 0)                    -
        SHAREOPTIONS (1,3)            -
        TRACKS (5 5)                  -
        RECORDSIZE(64 64))            -
     DATA                             -
        (NAME (USERID1.CICSL.DALLOC.DATA) -
        CISZ (4096))                  -
     INDEX                            -
        (NAME (USERID1.CICSL.DALLOC.INDEX) -
        CISZ (1024))

Obviously the date stamp and process fields are not essential and
could be ignored if not required, with a corresponding alteration
to the cluster definition.

PROGRAM INFORMATION

In writing this program we have availed ourselves of the EXEC
CICS SET DATASET commands to carry out the desired
function.  The program browses the DALLOC dataset and closes,
disables, sets the dataset name, and finally enables each file name
contained in the DALLOC dataset.  Finally the program ends the
browse of DALLOC and closes and disables it.  The close and
disable is to allow the application team to access the dataset
during the CICS process and update it with current dataset names.
The program is included in the Program List Table Post
Initialisation (PLTPI) to be run before users are given control.

IDENTIFICATION DIVISION.
PROGRAM-ID.      DALLOC.
*****************************************************************
* MODULE  : DALLOC.                                             *
* FUNCTION : THIS MODULE ALLOCATES THE LATEST DATASET NAMES TO  *
*            CICS AS SPECIFIED IN THE DALLOC FILE. IT IS RUN    *
*            AS PART OF THE CICS POST INITIALISATION PROCESS.   *
* PROCESS  : MAINTAINED BY THE CICS SYSTEMS PROGRAMMERS.        *
*****************************************************************
  ENVIRONMENT DIVISION.
  DATA DIVISON.
  WORKING-STORAGE SECTION.
*****************************************************************
 LINKAGE SECTION.
*    BLL CELLS FOR ADDRESSING THE DALLOC RECORD.
 01  BLL-CELLS.
     03 FILLER                     PIC S9(8) COMP.
     03 BLL-BC-REC                 PIC S9(8) COMP.
*    RECORD LAYOUT
 01  BC-RECORD.
     03 BC-CICS-NAME.
       05 BC-CICS-NAME-INITIAL     PIC X.
       05 FILLER                   PIC X(7).
     03 BC-DATASET-NAME            PIC X(44).
     03 BC-CICSD-IND               PIC X.
     03 FILLER                     PIC X.
     03 BC-DATE                    PIC 9(6).
     03 BC-PROGRAM                 PIC X(4).
*****************************************************************
PROCEDURE DIVISION.
*   START A BROWSE
    MOVE SPACES TO BC-CICS-NAME.
    EXEC CICS STARTBR
              DATASET('DALLOC')
              RIDFLD(BC-CICS-NAME)
              END-EXEC.
*  ALLOCATE EACH FILE NAMED
   PERFORM ALLOCATE-FILE THRU
           ALLOCATE-FILE-EXIT
           UNTIL BC-CICS-NAME = HIGH-VALUES.
*  END THE BROWSE
   EXEC CICS ENDBR
             DATASET('DALLOC')
             END-EXEC.
*  RELEASE THE DATASET SO THAT IT CAN BE SAFELY UPDATED
   EXEC CICS SET
             DATASET('DALLOC')
             CLOSED
             FORCE
             END-EXEC.
   EXEC CICS SET
             DATASET('DALLOC')
             DISABLED
             FORCE
             END-EXEC.
*  EXIT TO CICS
   EXEC CICS RETURN
             END-EXEC.
   GOBACK.
*****************************************************************
 ALLOCATE-FILE.
*    READ THE NAME OF THE NEXT FILE
     EXEC CICS READNEXT
               DATASET('DALLOC')
               RIDFLD(BC-CICS-NAME)
               SET(BLL-BC-REC)
               END-EXEC.
     SERVICE RELOAD BC-RECORD.
*    IS THIS THE END MARKER
     IF BC-CICS-NAME = HIGH-VALUES
        GO TO ALLOCATE-FILE-EXIT.
*    IGNORE ANY INVALID REQUEST
     EXEC CICS IGNORE
               CONDITION
               INVREQ
               END-EXEC.
*    CLOSE THE NAMED DATASET
     EXEC CICS SET
               DATASET(BC-CICS-NAME)
               CLOSED
               FORCE
               END-EXEC.
*    DISABLE THE NAMED DATASET
     EXEC CICS SET
               DATASET(BC-CICS-NAME)
               DISABLED
               FORCE
               END-EXEC.
*    ACTIVATE INVALID REQUEST ERROR AND SET DATASET
     EXEC CICS HANDLE
               CONDITION
               INVREQ
               DSIDERR(ALLOCATE-FILE-10)
               END-EXEC.
*    ALLOCATE THE SPECIFIED DATASET
     EXEC CICS SET
               DATASET(BC-CICS-NAME)
               OBJECTNAME(BC-DATASET-NAME)
               END-EXEC.
 *   ENABLE THE NAMED DATASET
     EXEC CICS SET
               DATASET(BC-CICS-NAME)
               ENABLED
               END-EXEC.
 ALLOCATE-FILE-10.
*    ACTIVATE MISSING DATASET ERROR
     EXEC CICS HANDLE
               CONDITION
               DSIDERR
               END-EXEC.
ALLOCATE-FILE-EXIT.
    EXIT.

The application team can then write an update program/CLIST etc
to alter the dataset names to their users' requirements.

If several applications require this methodology, a separate dataset
and program will be required for each.  This will prevent any
security exposure which could result if several application teams
accessed one dataset.


P J Butler
CICS Systems Programmer
Inland Revenue (UK)	) Inland Revenue 1989

