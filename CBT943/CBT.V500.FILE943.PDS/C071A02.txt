IEBCOPY to control DFHRPL extents

A commonly used feature of CICS is the ability to make source
code modifications, create new load modules, and issue master
terminal commands to load the new load module like this:

      CEMT S PROGRAM(SAMPLE) NEW

This capability is primarily used within test and development
regions.  However, it may be used in production environments
for applying emergency fixes when region shutdown is
undesirable.

In CICS releases prior to CICS/ESA 3.1, a problem occurs
when the creation of the new load module drives the DFHRPL
library into multiple extents while CICS is running.  CICS is
unaware of the additional extent(s) created after CICS system
initialization.  Common symptoms of this problem are
unsuccessful completion of the CEMT NEWCOPY command
and/or APCP abends where the program cannot be loaded.  The
first reaction of many people to this problem is to attempt to
use ISPF's compress option 'Z' on panel ISRUDSL0.
However, ISPF requires exclusive access to a dataset during
compression and will only work after CICS is shut down.

One alternative implemented in some shops is never to allocate
secondary extents on DFHRPL libraries.  This is extremely
restrictive and not always feasible in test regions where
programs may be modified many times throughout the course
of a CICS run.  If the library has only a primary extent and it
fills, CICS would have to be shut down and restarted to pick up
modified programs.

A simple solution that is often overlooked is the use of the
IEBCOPY utility to perform the compression.  The dataset to
be compressed should be backed up as the first step of the job
in case problems are encountered during the compress step.
This utility can also be used in other situations where
compression is required and the dataset is allocated to other
users, for example CLIST datasets allocated to SYSPROC in
the TSO sign-on procedure.

To use the following JCL, modify the PARM for the back-up
dataset size to match the size of the dataset being compressed.
After running the job, the NEWCOPY command will be
successful as long as there was space in the dataset to be
recovered.

//****************************************************************
//* PURPOSE: PROCEDURE TO PERFORM COMPRESSION ON DATASETS        *
//*          ALLOCATED TO MULTIPLE CONCURRENT SESSIONS.          *
//*          (IE CLISTS, CICS DFHRPL LIBRARIES ETC).             *
//*          THIS RESOLVES PROBLEMS ENCOUNTERED USING ISPF'S     *
//*          OPTION Z FOR DATASET COMPRESSION.                   *
//* PROCESS: CREATE A BACKUP OF THE DATASET TO BE COMPRESSED.    *
//*          PERFORM DATASET COMPRESSION.                        *
//*          DELETE THE BACKUP DATASET.                          *
//* SYMBOLIC PARAMETERS:  DSN = THE DATASET NAME TO COMPRESS     *
//*                       BKP = THE BACKUP DATASET NAME          *
//*                     SPACE = BACKUP DATASET SPACE ALLOCATION  *
//****************************************************************
//COMPRESS PROC DSN=,BKP=,SPACE=
//*
//BKPSTEP  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=SHR,DSN=&DSN
//SYSUT2   DD DISP=(,CATLG,DELETE),
//           DSN=&BKP,
//           UNIT=SYSDA,
//           SPACE=&SPACE
//SYSIN    DD DUMMY
//*
//CMPSTEP  EXEC PGM=IEBCOPY,COND=(0,LT)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=SHR,DSN=&DSN
//SYSIN    DD DUMMY
//*
//DELSTEP  EXEC PGM=IEFBR14,COND=(0,LT)
//DELDSN   DD DISP=(OLD,DELETE,KEEP),
//           DSN=&BKP
//COMPRESS PEND
//*
//COMPRESS EXEC COMPRESS,
//         DSN='FULL.DATASET.DSN',
//         BKP='BACKUP.DATASET.DSN',
//         SPACE='(CYL,(2,2,50))'      ... for example
//*
//BKPSTEP.SYSIN DD *
  COPY OUTDD=SYSUT2,INDD=SYSUT1
/*
//*
//CMPSTEP.SYSIN DD *
  COPY OUTDD=SYSUT1,INDD=SYSUT1
/*
//


Ian Phillips
Systems Programmer (Canada)                              c Ian Phillips 1991

