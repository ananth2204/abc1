Enquiring on programs in DFHRPL -  an update

The article Enquiring on programs in DFHRPL, in the July,
August, and September issues of CICS Update supplied a
program to report on a variety of information regarding
programs and libraries in DFHRPL, the CICS program library.
Unfortunately, this program, as supplied, will not function with
MVS/XA release 2.2 or higher, because of changes in the way
the dataset control blocks, specifically the JFCBs, are
accessed. I apologise to any users who may have keyed in all
that code only to find the program didn't work.  Here are the
modifications that should make the program function properly
under MVS/XA 2.2 and MVS/ESA.

MVS/XA introduced a facility, called the SWA Manager, that
could be used to access SWA control blocks that were moved
above the 16-megabyte line.  Beginning with MVS/XA 2.2,
the Job File Control Blocks (JFCBs) can reside above the line.
However, because the JFCB pointer in the TIOT is only 3
bytes long, the TIOT can no longer be used to access the
JFCBs directly.  Instead, this field now contains a token, which
if used as a storage address causes things to happen that are not
pretty.  The changes below will, instead of treating this token
as an address, pass it to the SWA manager via a SWAREQ
call, which will result in it being returned the 31-bit address of
the JFCB.  These changes will allow the RPL enquiry program
to function in an MVS/XA 2.2 (or above) environment.  The
SWAREQ changes all have a tag of 'MVS22'.

In addition, there were two bugs in the original program that,
even if you do not yet need the SWAREQ changes, you will
want to fix in the base program. These fixes are shown below
and identified as ERR01 and ERR02.  The first is needed to
correct an abend that will occur if there are more than 16 DSNs
concatenated in DFHRPL.  The other is to support VS COBOL
programs with a working storage size greater than 32,767
bytes.  The corrections follow in order from the beginning of
the program.

Include save areas for SWA call

Add the following to the TWA, after the WORKAREA
constant, for use by the SWA manager:

 CSASAVE  DS    F                   SAVE AREA FOR CSA ADDRESS      MVS22
 SWARSA   DS    18F                 RSA FOR SWA CALL               MVS22

Include work areas for SWA manager call

Add the following to the end of the TWA, just before the
DFHSIT macro, to include space for the SWAREQ PLIST:

 ********                                                          MVS22
 *        SWA MANAGER WORK AREA                                    MVS22
 ********                                                          MVS22
 SWALIST SWAREQ MF=L                LOCATE MODE SWA MANAGER PLIST  MVS22
 *                                                                 MVS22
 EPAPTR   DS    A(SWAEPAA)          POINTER TO EXT. PARM. AREA     MVS22
 SWAEPAA  DS    XL(L'SWAEPAX)       EXTERNAL PARAMETER AREA        MVS22

Removal of support for IHADCB macro

The macro IHADCB (used to generate a DSECT to map the
DCB) has been removed.  This macro should be replaced with
the following:

 ***      IHADCB DSORG=PO           <<<<<  DELETED                 MVS22
          DCBD DSORG=(PO)                                          MVS22

Include DSECTs for SWA manager call

Add the following after the DCBD macro to generate DSECTs
necessary for the SWAREQ macro:

          IEFZB505 LOCEPAX=YES                                     MVS22
 CVT      DSECT                                                    MVS22
          CVT   DSECT=YES                                          MVS22
          IEFJESCT TYPE=DSECT                                      MVS22

Change BALR to BASR at start of program

For 31-bit support, change the BALR immediately following
the CSECT statement to a BASR:

 ***      BALR  R6,0                <<<<<  DELETED                 MVS22
          BASR  R6,0                ESTABLISH ADDRESSABILITY       MVS22

Use correct register for BCT on loop

The limit of 16 DSNs was incorrectly loaded into register 4 and
subsequently corrupted.  To correct, replace the LA of R4 just
before label L01700 with the following:

 ***      LA    R4,16               <<<<<  DELETED                 ERR01
          LA    R8,16               LOAD LOOP CONTROL              ERR01

Add code to switch addressing mode

The SWAREQ macro must be issued in 31-bit mode, and we
will need to be AM=31 to access the JFCBs.  Add the
following code just before label L01700, but following the LA
instruction that was modified previously:

          L     R15,=A(X'80000000'+L01700)                         MVS22
          BSM   0,R15               SWITCH TO AM=31 (FOR SWAREQ)   MVS22

Insert code to invoke SWA manager

The SWAREQ invocation will return the address of the JFCB.
Add the following code immediately after the ICM instruction
that follows label L0170 and delete the LA that was used to
bump past the JFCB prefix (it's no longer necessary):

 ***      LA    R4,16(,R4)          <<<<<<<<  DELETED              MVS22
 ********                                                          MVS22
 *        FOR MVS 2.2 AND ABOVE, THE JFCB CAN BE ABOVE-THE-LINE.   MVS22
 *        TO OBTAIN ADDRESS INVOKE THE SWA MANAGER IN LOCATE MODE. MVS22
 *        (NOTE - WE MUST BE AMODE=31 TO INVOKE SWA MANAGER).      MVS22
 ********                                                          MVS22
          ST    R13,CSASAVE         SAVE CSA ADDRESS               MVS22
          LA    R13,SWARSA          ADDRESS REGISTER SAVE AREA     MVS22
          STCM  R4,7,SWAEPAA+SWVA-ZB505                            MVS22
 *                                  PUT JFCB TOKEN IN SWAREQ PLIST MVS22
          LA    R1,SWAEPAA          ADDRESS SWA EXT. PARM. AREA    MVS22
          ST    R1,EPAPTR           AND SAVE FOR SWA MGR CALL      MVS22
          SWAREQ FCODE=LA,EPA=EPAPTR,UNAUTH=YES,MF=(E,SWALIST)     MVS22
          L     R4,SWAEPAA+SWBLKPTR-ZB505 GET THE JFCB ADDRESS     MVS22
          L     R13,CSASAVE         RESTORE CSA POINTER            MVS22

Use correct register for BCT on loop

As mentioned previously, the limit of 16 DSNs was incorrectly
loaded into register 4 and is incorrect on the BCT that controls
the loop, so remove the BCT of register 4 just before label
L01850 and add the following:

 ***      BCT   R4,L01700           <<<<<  DELETED                 ERR01
          BCT   R8,L01700           ..YES - LOOP                   ERR01

Add code to switch addressing mode back to AM=24

Once the DSN list is built we no longer need to be in 31-bit
mode.  The following code, which you should insert
immediately after label L01850, will restore the addressing
mode to AM=24:

          LA    R15,L01860                                         MVS22
          BSM   0,R15               SWITCH BACK TO AMODE=24        MVS22
 L01860   DS    0H                                                 MVS22

Correct check of working storage size for VS COBOL

The check to see if the COBOL Working Storage Size (WSS)
exceeds 64K is incorrect.  If WSS plus TGT exceeds 32K the
check will fail because it will see the amount as a negative
number.  This processing is done between labels L03300 and
L03400.  Replace the LH of PPTCOTP with the following:

 ****     LH    R0,PPTCOTP          <<<<<  deleted                 ERR02
          XR    R0,R0               CLEAR                          ERR02
          ICM   R0,B'0011',PPTCOTP  FETCH SIZE OF WSS+TGT          ERR02

Also, it will be necessary to modify the transaction definition
for CRPL to reflect the larger TWA requirements.  Do not
overlook this!  If the TWA is not enlarged you could abend
CICS with a U409 or a U602, so be sure to change the
following:

%      RDO - TWASIZE(256) on the transaction definition
%      PCT - TWASIZE=256 on the DFHPCT macro.

CONCLUSION

Finally, although the above modifications will allow the
program to switch addressing modes, do not link-edit it with
AMODE=31, since the program as a whole is still
AMODE=24.

These changes should permit the RPL enquiry program to run
on CICS 1.7, CICS 2.1, or CICS 2.1.1 under MVS 2.2 and
above.

Editor's note: Christopher Frank has kindly supplied us with a
complete corrected version of his program, which can be
downloaded from the bulletin board.  It can be found with this
month's articles.

Christopher Frank
Lead Systems Programmer
AMEV Data Center (USA)  ) Xephon 1990


