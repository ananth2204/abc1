 Printing screens from mapset load modules
As an instructor at a college I found that the students lost a lot of time
waiting for the mapset assemblies and for CICS to be brought up in order to
verify that the screens they coded were correct.  In an effort to provide the
students with the information they needed I developed the following program to
load the mapset load module and produce a printed facsimile of each map defined
in the mapset.  I wrote the program to read the mapset load module instead of
the source so the students would see what CICS would display (in case their
assembly did not successfully execute).  I included the step to execute this
program as the last step in the procedure which I provide my students with to
assemble mapsets.  In this manner, when the students picked up their listings,
the screen facsimile would be on the last page of the listing and then the
student could verify if the desired results were successful.
*** THIS PROGRAM WILL PRINT A FACSIMILE OF EACH MAP DEFINED WITHIN ***
*   A MAPSET.  THE MAPSET NAME IS SPECIFIED THROUGH 'PARM='.         *
*** THE SCREEN SIZE IS ASSUMED TO BE 24 X 80.                      ***
MSFAX    CSECT
         USING *,11,12           ...
         STM   14,12,12(13)        .
         LA    11,0(15)            .
         LA    12,4095(11)         .
         LA    12,1(12)            ... ESTABLISH ADDRESSABILITY
         LA    1,*+20              .
         ST    1,8(13)             .
         ST    13,4(1)             .
         LM    13,1,8(13)          .
         B     BEGIN             ...
         DS    18F
BEGIN    LR    2,1                 SAVE PARAMETER LIST ADDRESS
         OPEN  (FAXPRINT,OUTPUT)   OPEN THE PRINT FILE
         L     2,0(2)              GET THE ADDRESS OF THE PARAMETER
         LA    3,MAPSET            POINT R3 TO THE MAPSET NAME
*** GET THE PARAMETER VALUE ***
         SR    5,5                 CLEAR R5
         LH    5,0(2)              GET THE LENGTH OF THE PARAMETER
         LTR   5,5                 CHECK IF NO PARAMETER GIVEN
         BZ    RETURN              NO PARAMETER, NO NEED TO PROCEED
         SR    4,4                 CLEAR R4
         LA    4,8(3)              POINT R4 TO END OF MAPSET NAME
         LA    5,2(5,2)            POINT TO END OF PARAMETER
         LA    2,2(2)              POINT TO BEGINNING OF PARAMETER
MOVEPARM MVC   0(1,3),0(2)         MOVE BYTE OF PARAMETER
         LA    3,1(3)              BUMP TO NEXT STORED BYTE
         LA    2,1(2)              BUMP TO NEXT PARAMETER BYTE
         CR    3,4                 CHECK FOR END OF MAPSET NAME
         BNL   LOADMAP             AT END, LOAD THE MAP
         CR    2,5                 CHECK FOR END OF PARAMETER
         BL    MOVEPARM            NOT AT END, GET NEXT BYTE
*** LOAD THE MAPSET ***
LOADMAP  OC    MAPSET,=C'        ' CONVERT PARAMETER TO UPPERCASE
         LOAD  EPLOC=MAPSET        LOAD THE MAPSET
         LR    3,0                 GET THE MAPSET ADDRESS
         USING MSMSD,3             ESTABLISH ADDRESSABILITY
         MVC   IDNTMPST,MSSETNM    MOVE THE MAPSET NAME TO IDNTING
GOTOMAP  LA    4,12(3)             BUMP PAST MAPSET LEAD
         USING MSMDI,4             ESTABLISH ADDRESSABILITY TO MAP
         ST    4,MSADR             SAVE MAP ADDRESS
         SR    10,10
         TM    MSIND,MSEXTAT       EXTENDED ATTRIBUTES USED
         BO    EXTATTR             EXTENDED ATTRIBUTES PRESENT
         LA    10,8                FIXED PORTION ONLY 8 BYTES
         B     GOTMAP
EXTATTR  LA    10,12               FIXED PORTION 12 BYTES LONG
*** INITIALIZE THE DISPLAY AREA TO SPACES ***
GOTMAP   MVC   IDNTMAP,MSNAME      MOVE THE MAP NAME TO IDNTING
         SR    6,6                 CLEAR R6 FOR MVCL
          LA    8,DISPAREA          POINT R8 TO THE MAP AREA
         L     7,SPACES            SET UP R7 FOR CLEAR OPERATION
         LA    9,1920              LOAD MAP AREA LENGTH IN R9
         MVCL  8,6                 CLEAR THE MAP AREA
         LA    5,42(4)             BUMP PAST MAP LEAD
         USING MSMDF,5             ESTABLISH ADDRESSABILITY TO FIELDS
*** MOVE THE FIELDS 'INITIAL=' VALUE TO THE DISPLAY AREA ***
CHKVALUE TM    MSDESC,MSVALUE      DOES FIELD HAVE INITIAL VALUE?
         BO    MOVEFLD             INITIAL VALUE PRESENT, MOVE IT
         LA    5,0(10,5)           BUMP PAST FIXED PORTION
         CLI   0(5),X'FF'          CHECK IF END OF MAP
         BNE   CHKVALUE            NOT END OF MAP, GET NEXT FIELD
         B     PRINTFAX            END OF MAP, PRINT THE MAP
MOVEFLD  LA    1,DISPAREA          POINT R1 TO MAP AREA
         SR    8,8                 CLEAR R8
         LH    8,MSPOS             GET FIELD DISPLACEMENT
         AR    8,1                 POINT INTO MAP AREA
         LA    8,1(8)              ADD 1 FOR FIELD POSITION
         SR    9,9                 CLEAR R9 FOR MVCL
         LH    9,MSFLTH            GET FIELD LENGTH
         LA    6,0(10,5)           POINT R6 TO INITIAL DATA
         LR    7,9
         MVCL  8,6                 MOVE THE INITIAL VALUE DATA
         LA    5,0(6,9)            POINT TO NEXT FIELD
         CLI   0(5),X'FF'          CHECK FOR END OF MAP
         BNE   CHKVALUE            NOT END OF MAP, GET NEXT FIELD
*** START THE PRINT OPRATION ***
PRINTFAX ST    3,AREAADR           SAVE R3 VALUE
         SR    3,3                 CLEAR R3
         SR    4,4                 CLEAR R4
         LA    3,DISPAREA          POINT R3 TO MAP AREA
         LA    4,DISPEND           POINT R4 TO THE END OF THE MAP AREA
         MVI   PRNTCC,C'1'         SET UP NEW PAGE
         MVI   PRNTAREA,C'*'       MOVE ALL * TO THE
         MVC   PRNTAREA+1(79),PRNTAREA       PRINT AREA
         MVC   PRNTCNT1,ASTERISK   MOVE * INTO
         MVC   PRNTCNT2,ASTERISK             COUNTERS
         ZAP   COUNTER,=PL1'0'     CLEAR THE LINE COUNTER
TOP      PUT   FAXPRINT,PRNTLINE   PRINT A LINE OF THE MAP
         MVI   PRNTCC,C' '         SET TO SINGLE SPACE
         AP    COUNTER,=PL1'1'     BUMP COUNTER
         CP    COUNTER,=PL2'12'    CHECK IF DONE WITH TOP MARGIN
         BL    TOP                 NOT DONE, PRINT SOME MORE
         MVC   PRNTAREA,COLTENS    MOVE THE TENS LINE FOR COLUMNS
         PUT   FAXPRINT,PRNTLINE   PRINT THE TENS LINE FOR COLUMNS
         MVC   PRNTAREA,COLONES    MOVE THE ONES LINE FOR COLUMNS
         PUT   FAXPRINT,PRNTLINE   PRINT THE ONES LINE FOR COLUMNS
         ZAP   ROWCNTR,=PL1'0'     CLEAR THE ROW COUNTER
*** PRINT THE SCREEN FACSIMILE A ROW AT A TIME ***
PRINTROW AP    ROWCNTR,=PL1'1'     BUMP THE ROW COUNTER
         MVC   ROWDISP,ROWMASK     EDIT IN THE ROW COUNT
         ED    ROWDISP,ROWCNTR                  TO THE WORK AREA
         MVC   PRNTCNT1,ROWCHAR    MOVE THE ROW COUNT TO
         MVC   PRNTCNT2,ROWCHAR                 THE PRINT LINE
         MVC   PRNTAREA,0(3)       MOVE THE MAP ROW TO THE PRINT LINE
         PUT   FAXPRINT,PRNTLINE   PRINT THE MAP ROW
         LA    3,80(3)             BUMP TO THE NEXT MAP ROW
         CR    3,4                 CHECK FOR END OF MAP
         BL    PRINTROW            NOT END OF MAP, PRINT NEXT ROW
         MVC   PRNTCNT1,ASTERISK   MOVE * TO
         MVC   PRNTCNT2,ASTERISK            ROW COUNTERS
         MVC   PRNTAREA,COLTENS    MOVE THE TENS LINE FOR COLUMNS
         PUT   FAXPRINT,PRNTLINE   PRINT THE TENS LINE FOR COLUMNS
         MVC   PRNTAREA,COLONES    MOVE THE ONES LINE FOR COLUMNS
         PUT   FAXPRINT,PRNTLINE   PRINT THE ONES LINE FOR COLUMNS
         MVI   PRNTAREA,C'*'       MOVE ALL * TO
          MVC   PRNTAREA+1(79),PRNTAREA        THE PRINT AREA
         MVC   PRNTCNT1,ASTERISK   MOVE * TO
         MVC   PRNTCNT2,ASTERISK            ROW COUNTERS
         ZAP   COUNTER,=PL1'0'     CLEAR THE LINE COUNTER
BOTTOM   PUT   FAXPRINT,PRNTLINE   PRINT THE MARGIN LINE
         MVI   PRNTCC,C' '         SET TO SINGLE SPACE
         AP    COUNTER,=PL1'1'     BUMP THE LINE COUNTER
         CP    COUNTER,=PL2'12'    CHECK IF MARGIN END
         BL    BOTTOM              NO PRINT ANOTHER MARGIN LINE
         PUT   FAXPRINT,IDNTING    YES, PRINT THE IDNTING
*** CHECK FOR MORE MAPS TO PRINT ***
         L     4,MSADR             POINT BACK TO THE MAP BEGINNING
         AH    4,MSLNGTH           BUMP TO NEXT MAP
         ST    4,MSADR             SAVE THE MAP ADDRESS
         CLI   0(4),X'FF'          CHECK FOR THE END OF THE MAP
         BNE   GOTMAP              NOT END OF MAP, PRINT NEXT MAP
*** ALL MAPS HAVE BEEN PRINTED ***
RETURN   CLOSE FAXPRINT            END OF MAP, TIME TO QUIT
         L     13,4(13)
         LM    14,12,12(13)
         SR    15,15
         BR    14
MAPSET   DC    CL8'        '
PRNTLINE DS    0CL133
PRNTCC   DC    CL1' '
         DC    23C'*'
PRNTCNT1 DC    CL2'  '
PRNTAREA DS    CL80
PRNTCNT2 DC    CL2'  '
         DC    24C'*'
IDNTING  DS    0CL133
IDNTCC   DC    CL1' '
         DC    25C' '
IDNTAREA DS    0CL80
         DC    15C' '
         DC    C'MAPSET NAME - '
IDNTMPST DC    CL8'        '
         DC    9C' '
         DC    C'MAP NAME - '
IDNTMAP  DC    CL8'        '
         DC    15C' '
         DC    26C' '
DISPAREA DS    0CL1920
         DC    1920C' '
DISPEND  DS    0H
MSADR    DC    F'0'
AREAADR  DC    F'0'
ROWDISP  DS    CL4
         ORG   ROWDISP
         DS    CL2
ROWCHAR  DS    CL2
ROWCNTR  DC    PL2'0'
COLTENS  DC    C'*********11111111112222222222333333333344444444445'
         DC    C'555555555666666666677777777778'
COLONES  DC    C'12345678901234567890123456789012345678901234567890'
         DC    C'123456789012345678901234567890'
ROWMASK  DC    X'5C202020'
ASTERISK DC    CL2'**'
         DS    0F
SPACES   DC    XL4'40000000'
COUNTER  DC    PL2'0'
FAXPRINT DCB   MACRF=(PM),DDNAME=FAXPRINT,LRECL=133,RECFM=FBA,DSORG=PS
MSMSD    DSECT
MSSETNM  DS    CL8
         DS    CL4
MSMDI    DSECT
          DS    CL8
MSNAME   DS    CL8
MSLNGTH  DS    AL2
         DS    CL15
MSIND    DS    AL1
MSEXTAT  EQU   X'40'
         DS    CL8
MSMDF    DSECT
         DS    CL2
MSFLTH   DS    AL2
MSDESC   DS    AL1
MSVALUE  EQU   X'02'
         DS    CL1
MSPOS    DS    AL2
MSINIT   DS    0CL1
         END


Mike Lamkins
Columbia Consulting Company (USA)  ) Xephon 1988














































