 Controlling CICS resources

The article Transient data remote print spooler (CICS Update June 1987)
addresses the problem of inter-mixed multiple reports on remote addressable
printers, which occurs when using the Automatic Transaction Initiate (ATI)
facility with intra-partition Transient Data Queues (TDQs).

My own solution to this problem is to use the CICS commands ENQ and DEQ within
the application programs that process the TDQ.  The ENQ and DEQ commands are
used to schedule and protect a CICS resource from multiple use by CICS tasks.
Each task requiring the use of a particular resource issues an ENQ command to
gain access to the resource.  ENQ works on a first in first out (FIFO) basis.
Thus the first task to enqueue a resource gains exclusive use of that resource.
Any other task enqueing the same resource must wait in turn for that resource to
be available.  When a task is finished with the enqueued resource, it issues the
DEQ command to free it.  Thus the next task to have issued an ENQ for the
resource now has access to the resource.  After a task enqueues a resource, any
task that attempts to enqueue the same resource must wait until that resource is
available.  If the resource is not available at the time the ENQ command is
issued, the condition ENQBUSY will occur.  The default CICS action for this
command is to WAIT until the resource is available.  However, if the application
issues a HANDLE CONDITION command for the ENQBUSY condition, the application can
bypass the WAIT default and send a message to the terminal operator that
processing is continuing, before issuing the ENQ command again.  Remember, as
with any HANDLE CONDITION command, processing resumes with the paragraph named
for that particular condition.


EXAMPLE

If the TDQ (named PTDQ) has a trigger level of 1, and the Destination Control
Table (DCT) is set up to automatically start transaction-id (TXXX) on
addressable printer/terminal-id (PXXX) the following is done by the application
programs.  The resource to be scheduled and protected can be the
printer/terminal or the TDQ.  While only one task can be active at a terminal at
one time, the TDQ items written can be inter-mixed, therefore I use a consistent
name for protecting the printer/terminal.


APPLICATION TO WRITE THE TDQ

1    When the program is ready to write the first item to the TDQ, it issues an
ENQ command:

                                (ENQ-NAME PIC X(4) VALUE 'PXXX').
                                (ENQ-LENGTH PIC S9(4) VALUE +4 COMP).
     EXEC CICS
          ENQ
              RESOURCE (ENQ-NAME)
              LENGTH   (ENQ-LENGTH)
     END-EXEC.

2    It then writes out the item for the TDQ.

3    If additional items are required, they are then written out too.

4    When no more items need to be written to the TDQ, the program issues a DEQ
command:

     EXEC CICS
          DEQ
             RESOURCE (ENQ-NAME)
             LENGTH   (ENQ-LENGTH)
     END-EXEC.


 If no DEQ command is issued, the resource is automatically dequeued when the
task ends.  This frees the resource for use by the next task.


APPLICATION TO READ THE TDQ

1    When the task is automatically started on the printer/terminal it issues an
ENQ command:

                                (ENQ-NAME PIC X(4) VALUE 'PXXX').
                                (ENQ-LENGTH PIC S9(4) VALUE +4 COMP).
     This is the same name used by the programs to write the TDQ.
     EXEC CICS
          ENQ
              RESOURCE (ENQ-NAME)
              LENGTH   (ENQ-LENGTH)
     END-EXEC.

2    It then reads and processes all the items on the TDQ, until the TDQ is
empty.  The TDQ is empty when the QZERO condition occurs when reading the TDQ.

3    It then issues the DEQ command:

     EXEC CICS
          DEQ
              RESOURCE (ENQ-NAME)
              LENGTH   (ENQ-LENGTH)
     END-EXEC.

If no DEQ command is issued, the resource is automatically dequeued when the
task ends.  This frees the resource for use by the next task.  Thus, all items
are printed together and no inter-mixing of reports occurs.



Larry Goldstein
Systems Consultant
ORI/Calculon (USA)  ) ORI/Calculon 1987




























