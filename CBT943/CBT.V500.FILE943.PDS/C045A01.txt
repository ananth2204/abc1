Formatting TCTUA for auto-install terminals

INTRODUCTION

We are running Hogan software on an IBM 3083 JX, with
MVS/XA 2.1.7, CICS 1.7 using RDO plus the auto-install feature
for terminals, and ACF2 4.1.

There is often a need for CICS application programs to
communicate with each other or store some session-wide
parameters in the TCTUA, such as the effective date, company
number etc, especially for the Hogan software that our bank is
installing (not in the COMMAREA, which is used for program to
program communication during the processing of a transaction).

THE PROBLEM

Formatting the TCTUA in macro-defined terminal entries is not
too difficult because those values will be stored permanently there
as long as the CICS system does not go down since these macro-
defined TCT entries will not be deleted by CICS after the user
signs off from CICS.  However, it is a totally different issue for
those auto-installed TCT entries as these entries will be deleted by
the system after the user signs off from CICS.  As such, a method
must be devised to store those values in the TCTUA for a
particular user and format the TCTUA accordingly for them
during their next sign-on to the system.

THE SOLUTION

We found a solution to this problem by developing the following
two programs to replace the normal sign-on and sign-off ACF2-
provided programs.

First of all, we changed the CICS sign-on transaction CSSN to
point to program @CSCSSN.  This program will link to the
normal ACF2 sign-on program to perform the normal user sign-
on, after which this program will get the operator-id stored in the
TCTTE by the system via the address pointer chain shown in
Figure 1 (actually, one can use the EXEC CICS ASSIGN
command to get the user-id, but using the following address
pointer chain will provide the developer with a more in-depth
insight about the storage manipulated by CICS).

Program @CSCSSN will then use the operator-id as the record
key to search a VSAM file that contains the TCTUA values for
every user.  Once the required record is found, the program will
GETMAIN some storage for the TCTUA and store the address in
field TCTTECIA of the corresponding TCTTE for that particular
user's terminal entry.  The values stored in the file record will be
placed in this TCTUA and after that the program will terminate
and return control back to the user.

Next, we also changed the CICS sign-off transaction CSSF to
point to program @CSCSSF.  This program will first check for
any TCTUA acquired by the user when it gains control.  If the
program finds the user has acquired the TCTUA, it will try to get
the record from the VSAM file using the operator as the record
key.  If no record is found, the program will try to write a new
record to the file, otherwise it will rewrite the existing record with
the values found in the TCTUA.  After that, the program will
XCTL to the normal ACF2 sign-off program to perform the user
sign-off action.

This approach will enable the user to store his own TCTUA values
relevant to his own particular needs.  Program @CSCSSN will
reformat the TCTUA for the user at his next sign-on by retrieving
these stored values thus providing an automated process for users
to format the TCTUA no matter what kind of terminal they are
using.  By replacing the CICS sign-on and sign-off transactions to
perform the TCTUA formatting actions the whole process was
made transparent to the users.

SOURCE CODE FOR @CSCSSN

TCTEXT   DSECT                    TCT EXTENSION AREA MAP
TDATE    DS    PL4                EFFECTIVE DATE
TCOID    DS    XL2                COMPANY NUMBER
TFILL0   DS    CL2                ....... FILLER .......
TPEM     DS    CL8                ON-LINE PEM LOAD MODULE
TFILL1   DS    CL16               ....... FILLER .......
TABEND   DS    XL1                SMART 'ON' OR 'OFF'
TDVC     DS    CL1                DEVICE SUFFIX
TACTR    DS    H                  MAXIMUM ACTIVITY COUNT
TFILL2   DS    CL34               ....... FILLER .......
TLEN     EQU   *-TCTEXT
         COPY  DFHCSADS
         COPY  DFHTCADS
         DS    D                  TO FOOL CORE
****  END WORK AREA FOR DFLT VARIABLES
TCTTEAR  EQU   R08
VSWABAR  EQU   R07
RECBAR   EQU   R06
FDFLT    DSECT                    HOGAN DEFAULT FILE RECORD
         USING *,RECBAR
FUID     DS    CL3                OPERATOR ID
FDATE    DS    PL4                EFFECTIVE DATE
FCOID    DS    XL2                COMPANY NUMBER
FPEM     DS    CL8                ON-LINE PEM LOAD MODULE
FABEND   DS    XL1                SMART 'ON' OR 'OFF'
FDVC     DS    CL1                DEVICE SUFFIX
FACTR    DS    H                  MAXIMUM ACTIVITY COUNT
FFILLER  DS    CL3                ....... FILLER .......
FLEN     EQU   *-FDFLT
         DFHTCTZE CICSYST=YES
         COPY  DFHVSWA
VA01     CSECT
         BALR  R11,R00
         USING *,R11
         MVC   TCAPCPI,=CL8'ACFAEUSP'    PERFORM NORMAL ACF2 SIGNON
         DFHPC TYPE=LINK
         L     TCTTEAR,TCAFCAAA          GET A(TCTTE)
         DFHFC TYPE=GET,                 GET A RECORD ID FROM HOGNDFLT X
               DATASET=HOGNDFLT,             VSAM DATASET USING        X
               RDIDADR=TCTTEOI,              OPERATOR ID AS KEY        X
               MODE=LOCATE                   IN LOCATE MODE
         CLI   TCAFCTR,X'00'
         BE    GOOD               USER DEFAULT RECORD FOUND
         CLI   TCAFCTR,X'81'
         BE    RETURN             USER DEFAULT RECORD NOT FOUND
         B     ERROR
*** GETMAIN SOME STORAGE FOR THE TCTUA AND STORE A(TCTUA) IN TCTTE
GOOD     DS    0H
         DFHSC TYPE=GETMAIN,INITIMG=00,NUMBYTE=80,CLASS=1WD
         LA    R01,80
         STC   R01,TCTTECIL
         L     R02,TCASCSA
         LA    R02,8(R02)
         ST    R02,TCTTECIA
         USING TCTEXT,R02
         L     VSWABAR,TCAFCAA
         L     RECBAR,VSWAREA
         MVC   TDATE,FDATE        SET DFLT EFF DATE
         MVC   TCOID,FCOID        SET DFLT COMPANY
         MVC   TPEM,FPEM          SET DFLT PEM LOAD MOD
         MVC   TABEND,FABEND      SET DFLT SMART FLAG
         MVC   TACTR,FACTR        SET DFLT MAX ACTIVITIES
         MVC   TDVC,FDVC          SET DFLT DEVICE SUFFIX
         B     RETURN
ERROR    DS    0H
         DFHPC TYPE=ABEND
RETURN   DS    0H
         DFHPC TYPE=RETURN
         LTORG
         END

SOURCE CODE FOR @CSCSSF

TCTEXT   DSECT
TCTEXT1  DS    0XL70
TDATE    DS    PL4                EFFECTIVE DATE
TCOID    DS    XL2                COMPANY NUMBER
TFILL0   DS    CL2                ....... FILLER .......
TPEM     DS    CL8                ON-LINE PEM LOAD MODULE
TFILL1   DS    CL16               ....... FILLER .......
TABEND   DS    XL1                SMART 'ON' OR 'OFF'
TDVC     DS    CL1                DEVICE SUFFIX
TACTR    DS    H                  MAXIMUM ACTIVITY COUNT
TFILL2   DS    CL34               ....... FILLER .......
TLEN     EQU   *-TCTEXT
FDFLTDS  DSECT
FDFLT    DS    0CL28              HOGAN DEFAULT FILE RECORD
FUID     DS    CL3                OPERATOR ID
FDATE    DS    PL4                EFFECTIVE DATE
FCOID    DS    XL2                COMPANY NUMBER
FPEM     DS    CL8                ON-LINE PEM LOAD MODULE
FABEND   DS    XL1                SMART 'ON' OR 'OFF'
FDVC     DS    CL1                DEVICE SUFFIX
FACTR    DS    H                  MAXIMUM ACTIVITY COUNT
FFILLER  DS    CL3                ....... FILLER .......
ABENDCDE DS    CL4                ABEND CODE
FLEN     EQU   *-FDFLT
         COPY  DFHCSADS
         COPY  DFHTCADS
TCTTEAR  EQU   R08
         DFHTCTZE CICSYST=YES
LOGO     DFHEIENT CODEREG=2,DATAREG=13,EIBREG=11
         EXEC CICS HANDLE CONDITION                                    X
               NOTFND(RECADD)                                          X
               ILLOGIC(ABDILLOG)                                       X
               ERROR(ABDERROR)                                         X
               IOERR(ABDIOERR)
         EXEC CICS ADDRESS CSA(R03)
         USING DFHCSADS,R03
         L     R04,CSACDTA        GET A(TCA)
         USING DFHTCADS,R04
         L     TCTTEAR,TCAFCAAA   GET A(TCTTE)
         USING DFHTCTTE,TCTTEAR
         L     R05,TCTTECIA       GET A(TCTUA)
         USING TCTEXT,R05
         LTR   R05,R05            ANY TCTUA ?
         BZ    ACF2                NO, THEN LINK ACF2 PGM
* YES, THEN GETMAIN SOME STORAGE FOR FILE WORK AREA AND WORKING STORAGE
         EXEC CICS GETMAIN LENGTH (K28) SET (R07) INITIMG (X'00')
         USING FDFLTDS,R07
         EXEC CICS READ                                                X
               DATASET ('HOGNDFLT')                                    X
               INTO (FDFLT)                                            X
               LENGTH (K24)                                            X
               RIDFLD(TCTTEOI)                                         X
               EQUAL UPDATE
RECUPD   DS    0H
         BAL   R06,MOVEFLD        PERFORM MOVEFLD ROUTINE
         EXEC CICS REWRITE                                             X
               DATASET ('HOGNDFLT')                                    X
               FROM (FDFLT)                                            X
               LENGTH (K24)
         B     BLKFLD
RECADD   DS    0H
         MVC   FUID,TCTTEOI       STORE UID
         BAL   R06,MOVEFLD        PERFORM MOVEFLD ROUTINE
         EXEC CICS WRITE                                               X
               DATASET ('HOGNDFLT')                                    X
               FROM (FDFLT)                                            X
               LENGTH (K24)                                            X
               RIDFLD (TCTTEOI)
BLKFLD   DS    0H
         MVC   TCTEXT1,=XL70'00'        REINIT TCTUA TO HEX ZERO
         MVC   TCTTECIA,=X'00000000'    ZERO OUT TCTUA ADDR
         EXEC CICS FREEMAIN                                            X
               DATA (FDFLT)
ACF2     DS    0H                       LINK TO ACF2 PGM FOR LOGOFF
         EXEC CICS XCTL                                                X
               PROGRAM ('ACFAEUSP')
EOJ      DS    0H
         EXEC CICS RETURN
** ROUTINE TO MOVE DATA FIELDS FROM TCTUA TO FILE WORK AREA
MOVEFLD  DS    0H
         MVC   FDATE,TDATE        STORE DFLT EFF DATE
         MVC   FCOID,TCOID        STORE DFLT COMPANY
         MVC   FPEM,TPEM          STORE DFLT PEM LOAD MOD
         MVC   FABEND,TABEND      STORE DFLT SMART FLAG
         MVC   FACTR,TACTR        STORE DFLT MAX ACTIVITIES
         MVC   FDVC,TDVC          STORE DFLT DEVICE SUFFIX
         BR    R06                RETURN
** ERROR HANDLING ROUTINES -
ABDILLOG DS    0H
         MVC   ABENDCDE,ACDILLOG
         B     ABENDRTN
ABDERROR DS    0H
         MVC   ABENDCDE,ACDERROR
         B     ABENDRTN
ABDIOERR DS    0H
         MVC   ABENDCDE,ACDIOERR
         B     ABENDRTN
ABENDRTN DS    0H
         EXEC CICS ABEND ABCODE(ABENDCDE)
         DS    0H
K24      DC    H'24'              REC LENGTH
K28      DC    H'28'              WS LENGTH
ACDILLOG DC    C'ILOG'            ILLOGIC ABEND CODE
ACDERROR DC    C'EROR'            ERROR ABEND CODE
ACDIOERR DC    C'IOER'            IOERROR ABEND CODE
         LTORG
         END


Raymond Yip
Senior Systems Programmer
Standard Chartered Bank (Hong Kong) ) Standard Chartered Bank 1989


