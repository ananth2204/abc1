Dump table setter program for CICS/ESA

CICS/ESA Version 3 offers enhanced control of transaction
and system dumps with the new dump table facility in the
global catalog. It is there to be exploited either dynamically,
through enhancements to CEMT like this:

      CEMT INQUIRE TRANDUMPCODE | SYSDUMPCODE

or from within application code using new API commands, like this:

      EXEC CICS SET TRANDUMPCODE | SYSDUMPCODE

The dump table program, NUDMPTBL, which follows,
illustrates a useful implementation of this new feature. It was
designed to run at PLTPI to set up a CICS region's
requirements for transaction and system dumps as part of CICS
start-up, thus enabling user and system abends to be handled
appropriately from the first log-on.

A typical and very elementary use of NUDMPTBL might be to
set up a one-line dump table at CICS initialization time to
prevent unwanted SDUMPs from ASRA and ASRB abends
(after message DFHAP0001) from filling up the MVS system
dump datasets. This is the most common application of
NUDMPTBL at our installation to date, but the program offers
many more possibilities.

The program is provided with input from an extra-partition
transient data queue, eg CICS.CICSA.ESA311.DMPTABLE,
with a DD name of DMPTABLE in the CICS start-up JCL.


SAMPLE TRANSIENT DATA QUEUE ENTRY

A sample transient data queue is given below for the previous
example of ASRA and ASRB system dump suppression
relating to system dump code DFHAP0001. The comment lines
detail the syntax and rules for record entries in the transient
data queue.

***********************************************************************
* Dump table For  CICSA  for PLTPI program NUDMPTBL                   *
* SYNTAX                                                              *
* Trandumpcode=XXXX,                  (4 character alpha-numeric)     *
*              ADD,                                                   *
*              MAX(Nnn)|MAX(999),     (1-3 digits : default 999)      *
*              TRANdump|NOTRANdump,   (default TRAN)                  *
*              SYSdump|NOSYSdump,     (default NOSYS)                 *
*              SHUTdown|NOSHUTdown    (default NOSHUT)                *
* Sysdumpcode=AANNNN,                 (2+4 character alpha+numeric)   *
*             ADD,                                                    *
*             MAX(Nnn)|MAX(999),      (1-3 digits : default 999)      *
*             SYSdump|NOSYSdown,      (default SYS)                   *
*             SHUTdown|NOSHUTdown     (default NOSHUT)                *
* Dump table Rules                                                    *
* 1. NUDMPTBL only searches for minimum abbreviations as indicated    *
*    above in upper-case.                                             *
* 2. A Trandumpcode must start with character 'T' in column 1.        *
* 3. A Sysdumpcode must start with character 'S' in column 1.         *
* 4. Four character Trandumpcode is expected.                         *
*    (see CICS/ESA Messages & Codes Manual)                           *
* 5. Six character Sysdumpcode is expected, comprising 2 alpha        *
*    Domain Identifier characters concatenated with a 4 digit number. *
*    (see CICS/ESA Messages & Codes Manual)                           *
* 6. '=' sign is expected immediately before the Trandumpcode.        *
* 7. '=' sign is expected immediately before the Sysdumpcode.         *
* 8. 'MAX('  and ')' must immediately precede and follow a valid 1,2  *
*    or 3 digit number.                                               *
* 9. Defaults will be assumed as indicated above by under-lining.     *
* 10.Other than the codes, parameter positioning and spacing is       *
*    arbitrary.                                                       *
***********************************************************************
* Trandumpcodes                                                       *
***********************************************************************
TRAN=ASRA,TRAN
TRAN=ASRB,TRAN
***********************************************************************
* Sysdumpcodes                                                        *
***********************************************************************
SYS=AP0001,NOSYS

The transient data queue contains entries either for transaction
dump codes or system dump codes from which CICS will
construct its dump table in the global catalog, DFHGCD. For
example, if abend AICA is to produce a transaction and a
system dump and then shut the system down, using minimum
abbreviations, the transient data queue entry for this would be:

      T=AICA,TRAN,SYS,SHUT

Similarly, if system abend DM0005 is to produce a system
dump for the first ten occurrences between start-up and shut-
down of CICS but to suppress any more, using defaults and no
abbreviations the transient data queue entry for this would be:

      SYSDUMPCODE=DM0005  MAX(10)

SHUT and MAX are mutually exclusive. If an abend is to shut
down CICS then it is irrelevant to consider how many abends
will be tolerated between the start-up and shut-down of a
system! If both are inadvertently entered in a transient data
queue entry, MAX will be ignored. Each entry in this transient
data queue is validated by NUDMPTBL before a dump table
entry is created using EXEC CICS SET TRD | SYD ADD.
New entries and invalid entries are sent to the CSMT transient
data queue, viewable from SDSF. Although the transient data
queue records are virtually free-format, certain rules of syntax
must be adhered to. These are detailed above in the example
transient data queue and will not be repeated here. It is
recommended that this comment section is always included as a
reminder to whoever edits/adds to the table entries in future.


Installation of Dump Table Program

1      Ensure load module NUDMPTBL is in a suitable load
      library in the CICS start-up JCL DFHRPL concatenation
      and the source code is submitted to DFHEITAL.

2      Allocate the transient data queue, eg CICS.CICSA.
      ESA311.DMPTABLE (sequential, 132-byte, fixed block)
      and define it in the CICS start-up JCL with a DD name of
      DMPTABLE.

3      Make the following additions to the DCT:

      DMPTABLE   DFHDCT TYPE=SDSCI,
                        BLKSIZE=136,
                        BUFNO=1,
                        DSCNAME=DMPTABLE,
                        RECFORM=VARUNB,
                        RECSIZE=132,
                        TYPEFLE=INPUT
      DMPT       DFHDCT TYPE=EXTRA,
                        DESTID=DMPT,
                        DSCNAME=DMPTABLE,
                        RSL=PUBLIC
      to define the transient data queue to CICS. Change the
      DCT suffix in SIT/SYSIN if this is a new DCT.

4      Add the following entry to PLTPI:

                       TYPE=ENTRY,
                       PROGRAM=NUDMPTBL
      just before the TYPE=FINAL macro. Change
      PLTPI=suffix in SIT/SYSIN if this is a new PLTPI.

5      Populate the transient data queue DMPTABLE as required.
      Use the example given as a basis from which to start and
      include the comments section for future reference. This
      program should be offered to CICS users as a feature for
      them to exploit with dump table entries made to reflect the
      needs of the application environment.

6      Using RDO, add NUDMPTBL (Assembler program) to a
      suitable group in GRPLIST and re-install.

7      Having completed the previous steps, the last part of phase
      two PLTPI will attempt to create a dump table based on the
      entries in the transient data queue DMPTABLE, when
      CICS is AUTO (or COLD) started.

8      To test the dump table program, create some new and
      illegal entries in the transient data queue when CICS is not
      active and AUTO start CICS again. Look for the following
      format of messages at your CSMT destination:

      NUDMP0001I hh:mm:ss Dump table Program Started
      NUDMP0002W hh:mm:ss Transaction Dump Code tttt is a new addition
      NUDMP0003W hh:mm:ss System Dump Code ssssss is a new addition
      NUDMP0004E hh:mm:ss Invalid Dump table entry:
      <<Invalid Entry here>>
      NUDMP9999I hh:mm:ss Dump table Program Ended

9      Use CEMT I TRD | SYD on-line to confirm NUDMPTBL
      has set up the required dump table in CICS. The transient
      data queue can only be edited while CICS is inactive,
      although CEMT can be used to make dump table entries
      on-line. Such entries will be maintained across AUTO
      starts of CICS (not COLD starts). If they are required to
      become permanent entries they should be scheduled for
      inclusion in the transient data queue when CICS is not
      started.

Source Code for NUDMPTBL

***********************************************************************
* Module :           NUDMPTBL Dump Table Program for PLTPI            *
* Language:          Command Level CICS Assembler                     *
* Environment:       MVS/ESA v3.1.3.                                  *
* Related software:  CICS/ESA v3.1.1.                                 *
R0       EQU   0                   * --                              *
R1       EQU   1                   * --                              *
R2       EQU   2                   * --                              *
R3       EQU   3                   * Reserved by CLI                 *
R4       EQU   4                   * Subroutine BAL                  *
R5       EQU   5                   * Subroutine BAL                  *
R6       EQU   6                   * Reserved by CLI                 *
R7       EQU   7                   * Character MAX( + 1 pointer      *
R8       EQU   8                   * RECORD pointer                  *
R9       EQU   9                   * End of RECORD + 1 pointer       *
R10      EQU   10                  * CODE + 1 pointer in RECORD      *
R11      EQU   11                  * Reserved by CLI                 *
R12      EQU   12                  * Subroutine BAL                  *
R13      EQU   13                  * Standard save area base         *
R14      EQU   14                  * Return address                  *
R15      EQU   15                  * Entry point address             *
DFHEISTG DSECT                     * Re-entrant Storage              *
RECORD   DS   CL72                 * A dump table record             *
RECLEN   DS   H                    * A dump table record             *
ABSTIME  DS   D                    * CICS Time                       *
TIME     DS   CL8                  * Time in required format         *
MESSAGE  DS   CL72                 * Message field                   *
MESSLEN  DS   H                    * Message field length            *
* CICS COMMAND LEVEL CODE                                             *
NUDMPTBL CSECT                     * => Entry Point                  *
NUDMPTBL AMODE 31                  * Addressing mode                 *
NUDMPTBL RMODE ANY                 * Residence mode                  *
         BAL   R5,GETTIME          * Fetch time                      *
         MVC   TIME0001,TIME       * Put timestamp in Message 1      *
         MVC   MESSAGE,MESS0001    * Set up Message 1                *
         MVC   MESSLEN,LEN0001     * Set up message length           *
         BAL   R4,SENDMESS         * Send a Message to MSGUSR        *
         EXEC  CICS HANDLE CONDITION . * Handle End of File and      * X
               QZERO(EOF)            . * Invalid Record              * X
               INVREQ(RECERROR)
READ     LA    R8,RECORD           * Set R8 at start of RECORD       *
         MVC   RECORD(72),=CL72' ' * Fill RECORD with blanks         *
         MVC   RECLEN,=H'72'       * Set Maximum dump table LRECL    *
         EXEC  CICS READQ TD     . * Read a dump table record        * X
               QUEUE('DMPT')                                           X
               INTO(RECORD)                                            X
               LENGTH(RECLEN)
         LR    R9,R8               * Load R9 with RECORD start       *
         AH    R9,RECLEN           * Point R9 at RECORD end +1       *
         CLI   0(R8),C'*'          * Handle a Comment Line           *
         BZ    READ                * Read another record             *
         CLI   0(R8),C'T'          * Handle a TRANCODE entry         *
         BZ    TRANREC
         CLI   0(R8),C'S'          * Handle a SYSCODE entry          *
         BZ    SYSREC
         B     RECERROR            * Handle an Invalid entry         *
EOF      BAL   R5,GETTIME          * Get CICS Time                   *
         MVC   TIME9999,TIME       * Put timestamp in Message 9999   *
         MVC   MESSAGE,MESS9999    * Set up Message 9999             *
         MVC   MESSLEN,LEN9999     * Set up message length           *
         BAL   R4,SENDMESS         * Send a Message to MSGUSR        *
RETURN   EXEC  CICS RETURN       . * <= Exit Point                   *
* SUBROUTINES                                                         *
* Subroutine to handle a dump table TRANSCODE entry                   *
TRANREC  BAL   R12,FEQUAL          * Locate '=' character before code*
         MVC   TRANCODE(4),0(R8)   * Set up TRANCODE                 *
         LA    R8,4(R8)            * Point R8 at end of TRANCODE+1   *
         LR    R10,R8              * R10 new RECORD start point      *
         MVC   TRANDUMP,DFHVALUE(TRANDUMP) * Set default TRANDUMP    *
         BAL   R12,FNOTRAN         * Check for NOTRAN in RECORD      *
         MVC   SYSDUMP,DFHVALUE(NOSYSDUMP) * Set default NOSYSDUMP   *
         BAL   R12,FSYS            * Check for SYS in RECORD         *
         BAL   R12,FNOSYS          * Check for NOSYS in RECORD       *
         MVC   SHUTDOWN,DFHVALUE(NOSHUTDOWN) * Set default NOSHUTDOWN*
         BAL   R12,FSHUT           * Check for SHUT in RECORD        *
         BAL   R12,FNOSHUT         * Check for NOSHUT in RECORD      *
         MVC   MAX,=F'999'         * Set default MAX(999)            *
         BAL   R12,FMAX            * Check for MAX(Nnn) in RECORD    *
         EXEC  CICS HANDLE CONDITION . * Handle a new Table entry    * X
               NOTFND(ERNOTRAN)
         EXEC  CICS SET          . * Delete a TRAN dump table entry  * X
               TRANDUMPCODE(TRANCODE)                                  X
               REMOVE
SETTRAN  CLC   SHUTDOWN(4),DFHVALUE(SHUTDOWN) * Check for SHUTDOWN   *
         BE    SETTRAN2            * Handle a SHUTDOWN TRAN entry    *
SETTRAN1 EXEC  CICS SET          . * Create a TRAN dump table entry  * X
               TRANDUMPCODE(TRANCODE)                                  X
               ADD                                                     X
               MAXIMUM(MAX)                                            X
               SHUTOPTION(SHUTDOWN)                                    X
               SYSDUMPING(SYSDUMP)                                     X
               TRANDUMPING(TRANDUMP)
         B     READ                * Read another record             *
SETTRAN2 EXEC  CICS SET          . * Create a TRAN dump table entry  * X
               TRANDUMPCODE(TRANCODE)                                  X
               ADD                                                     X
               SHUTOPTION(SHUTDOWN)                                    X
               SYSDUMPING(SYSDUMP)                                     X
               TRANDUMPING(TRANDUMP)
         B     READ                * Read another record             *
* Subroutine to handle a dump table TRANSCODE which does not exist    *
ERNOTRAN BAL   R5,GETTIME          * Get CICS Time                   *
         MVC   TIME0002,TIME       * Put timestamp in Message 2      *
         MVC   CODE0002,TRANCODE   * Put TRANCODE in Message 2       *
         MVC   MESSAGE,MESS0002    * Set up Message 2                *
         MVC   MESSLEN,LEN0002     * Set up message length           *
         BAL   R4,SENDMESS         * Write Message 2 to MSGUSR       *
         B     SETTRAN             * <= Return                       *
* Subroutine to handle a dump table SYSCODE entry                     *
SYSREC   BAL   R12,FEQUAL          * Locate '=' character before code*
         MVC   SYSCODE(6),0(R8)    * Set up SYSCODE                  *
         LA    R8,6(R8)            * Point R8 at end of SYSCODE+1    *
         LR    R10,R8              * R10 new RECORD start point      *
         MVC   SYSDUMP,DFHVALUE(NOSYSDUMP) * Set default NOSYSDUMP   *
         BAL   R12,FSYS            * Check for SYS in RECORD         *
         BAL   R12,FNOSYS          * Check for NOSYS in RECORD       *
         MVC   SHUTDOWN,DFHVALUE(NOSHUTDOWN) * Set default NOSHUTDOWN*
         BAL   R12,FSHUT           * Check for SHUT in RECORD        *
         BAL   R12,FNOSHUT         * Check for NOSHUT in RECORD      *
         MVC   MAX,=F'999'         * Set default MAX(999)            *
         BAL   R12,FMAX            * Check for MAX(Nnn) in Record    *
         EXEC  CICS HANDLE CONDITION . * Handle a new Table entry    * X
               NOTFND(ERNOSYS)
         EXEC  CICS SET          . * Delete a SYS dump table entry   * X
               SYSDUMPCODE(SYSCODE)                                    X
               REMOVE
SETSYS   CLC   SHUTDOWN(4),DFHVALUE(SHUTDOWN) * Check for SHUTDOWN   *
         BE    SETSYS2             * Handle a SYS code with SHUTDOWN *
SETSYS1  EXEC  CICS SET          . * Create a SYS dump table entry   * X
               SYSDUMPCODE(SYSCODE)                                    X
               ADD                                                     X
               MAXIMUM(MAX)                                            X
               SHUTOPTION(SHUTDOWN)                                    X
               SYSDUMPING(SYSDUMP)
         B     READ                * Read another RECORD             *
SETSYS2  EXEC  CICS SET          . * Create a SYS dump table entry   * X
               SYSDUMPCODE(SYSCODE)                                    X
               ADD                                                     X
               SHUTOPTION(SHUTDOWN)                                    X
               SYSDUMPING(SYSDUMP)
         B     READ                * Read another RECORD             *
* Subroutine to handle a dump table SYSCODE which does not exist      *
ERNOSYS  BAL   R5,GETTIME          * Get CICS Time                   *
         MVC   TIME0003,TIME       * Put timestamp in Message 3      *
         MVC   CODE0003,SYSCODE    * Put SYSCODE in Message 3        *
         MVC   MESSAGE,MESS0003    * Set up Message 3                *
         MVC   MESSLEN,LEN0003     * Set up message length           *
         BAL   R4,SENDMESS         * Write Message 3 to MSGUSR       *
         B     SETSYS              * <= Return                       *
* Subroutine to position R8 on character after '=' in RECORD          *
FEQUAL   LA    R8,1(R8)            * Increment RECORD pointer        *
         CR    R9,R8               * End of RECORD yet?              *
         BC    12,RECERROR         * RECORD syntax error. Get out    *
         CLI   0(R8),C'='          * Look for '='                    *
         BNZ   FEQUAL              * and repeat                      *
         LA    R8,1(R8)            * Position R8 at start of CODE    *
         BR    R12                 * <= Return to caller             *
* Subroutine to position R8 on characters NOTRAN in RECORD            *
FNOTRAN  LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP1    CR    R9,R8               * End of RECORD yet?              *
         BC    12,NOTQUIT          * Get out if end of RECORD        *
         CLC   =CL6'NOTRAN',0(R8)  * Look for NOTRAN                 *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP1               * and repeat                      *
         MVC   TRANDUMP,DFHVALUE(NOTRANDUMP) * Set NOTRANDUMP        *
NOTQUIT  BR    R12                 * <= Return to caller             *
* Subroutine to position R8 on characters SYS in RECORD               *
FSYS     LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP2    CR    R9,R8               * End of RECORD yet?              *
         BC    12,SYSQUIT          * Get out if end of RECORD        *
         CLC   =CL3'SYS',0(R8)     * Look for SYS                    *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP2               * and repeat                      *
         MVC   SYSDUMP,DFHVALUE(SYSDUMP) * Set SYSDUMP               *
SYSQUIT  BR    R12                 * <= Return to caller             *
* Subroutine to position R8 on characters NOSYS in RECORD             *
FNOSYS   LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP3    CR    R9,R8               * End of RECORD yet?              *
         BC    12,NOSYQUIT         * Get out if end of RECORD        *
         CLC   =CL5'NOSYS',0(R8)   * Look for NOSYS                  *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP3               * and repeat                      *
         MVC   SYSDUMP,DFHVALUE(NOSYSDUMP) * Set SYSDUMP             *
NOSYQUIT BR    R12                 * <= Return to caller             *
* Subroutine to position R8 on characters SHUT in RECORD              *
FSHUT    LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP4    CR    R9,R8               * End of RECORD yet?              *
         BC    12,SHUTQUIT         * Get out if end of RECORD        *
         CLC   =CL4'SHUT',0(R8)    * Look for SHUT                   *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP4               * and repeat                      *
         MVC   SHUTDOWN,DFHVALUE(SHUTDOWN) * Set SHUTDOWN            *
SHUTQUIT BR    R12                 * <= Return to caller             *
* Subroutine to position R8 on characters NOSHUT in RECORD            *
FNOSHUT  LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP5    CR    R9,R8               * End of RECORD yet?              *
         BC    12,NOSHQUIT         * Get out if end of RECORD        *
         CLC   =CL6'NOSHUT',0(R8)  * Look for NOSHUT                 *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP5               * and repeat                      *
         MVC   SHUTDOWN,DFHVALUE(NOSHUTDOWN) * Set NOSHUTDOWN        *
NOSHQUIT BR    R12                 * <= Return to caller             *
* Subroutine to find MAX(Nnn) and load MAX                            *
FMAX     LR    R8,R10              * Reset R8 to new RECORD start    *
LOOP6    CR    R9,R8               * End of RECORD yet?              *
         BC    12,NOMXQUIT         * Get out if end of RECORD        *
         CLC   =CL4'MAX(',0(R8)    * Look for MAX(                   *
         LA    R8,1(R8)            * Increment RECORD pointer        *
         BNZ   LOOP6               * and repeat                      *
         LA    R8,3(R8)            * Position R8 at N in MAX(Nnn)    *
         LR    R7,R8               * Position R7 at N in MAX(Nnn)    *
FENDMAX  CR    R9,R8               * End of RECORD yet?              *
         BC    12,RECERROR         * Error in RECORD missing ')'     *
         CLI   0(R8),C')'          * Look for ) after MAX(           *
         LA    R8,1(R8)            * Increment R8                    *
         BNZ   FENDMAX             * and repeat                      *
         SR    R8,R7               * Set R8 to length of digits      *
         C     R8,=F'2'            * Cater for MAX()                 *
         BL    RECERROR
         C     R8,=F'4'            * Cater for MAX(NNNN....)         *
         BH    RECERROR
         S     R8,=F'2'            * Set R8 to 0,1 OR 2              *
         EX    R8,TRTINST          * Check Nnn for valid digits      *
         BNZ   RECERROR            * Get out if invalid digits       *
         EX    R8,PACKINST         * Pack MAX DIGITS using R8        *
         CVB   R0,MAXPACK          * Convert MAX digits to binary    *
         ST    R0,MAX              * Set MAX to Nnn                  *
NOMXQUIT BR    R12                 * <= Return to caller             *
TRTINST  TRT   0(1,R7),TABLE1      * Digits validation               *
TABLE1   DC    256AL1(*-TABLE1)
         ORG   TABLE1+C'0'
         DC    10XL1'00'
         ORG
PACKINST PACK  MAXPACK,0(0,R7)     * Pack valid digits               *
         DS    0D
MAXPACK  DS    CL8
* Subroutine to handle a dump table Entry In Error                    *
RECERROR BAL   R5,GETTIME          * Get CICS Time                   *
         MVC   TIME0004,TIME       * Put timestamp in Message 4      *
         MVC   MESSAGE,MESS0004    * Set up Message 4                *
         MVC   MESSLEN,LEN0004     * Set up message length           *
         BAL   R4,SENDMESS         * Write Message 4 to MSGUSR       *
         MVC   MESSAGE,RECORD      * Set up Invalid RECORD           *
         MVC   MESSLEN,RECLEN      * Set up RECORD length            *
         BAL   R4,SENDMESS         * Write RECORD to MSGUSR          *
         B     READ                * <= Return                       *
* Subroutine to write a message to MSGUSR                             *
SENDMESS EXEC  CICS WRITEQ TD    . * Write a Message                 * X
               QUEUE('CSMT')     . * to destination CSMT             * X
               FROM(MESSAGE)     . * Re-entrant storage              * X
               LENGTH(MESSLEN)   . * Message length                  *
         BR    R4                  * <= Return to caller             *
* Subroutine to get and format time for messages                      *
GETTIME  EXEC CICS ASKTIME       . * Get time from CICS              * X
              ABSTIME(ABSTIME)   . *                                 *
         EXEC CICS FORMATTIME    . * Format time for message         * X
              ABSTIME(ABSTIME)   . *                                 * X
              TIME(TIME)         . *                                 * X
              TIMESEP(':')       . *                                 *
         BR   R5                   * <= Return to caller             *
* MESSAGES                                                            *
MESS0001 DC    C'NUDMP0001I '
TIME0001 DS    CL8
         DC    C' : Dump Table Program Started'
LEN0001  DC    H'48'
MESS0002 DC    C'NUDMP0002W '
TIME0002 DS    CL8
         DC    C' : Transaction Dump Code '
CODE0002 DS    CL4
         DC    C' is a new addition'
LEN0002  DC    H'66'
MESS0003 DC    C'NUDMP0003W '
TIME0003 DS    CL8
         DC    C' : System Dump Code '
CODE0003 DS    CL6
         DC    C' is a new addition'
LEN0003  DC    H'63'
MESS0004 DC    C'NUDMP0004E '
TIME0004 DS    CL8
         DC    C' : Invalid Dump Table entry:'
LEN0004  DC    H'47'
MESS9999 DC    C'NUDMP9999I '
TIME9999 DS    CL8
         DC    C' : Dump Table Program Ended'
LEN9999  DC    H'46'
* CONSTANTS & STORAGE                                                 *
TRANDUMP DS    F
SYSDUMP  DS    F
SHUTDOWN DS    F
MAX      DS    F
SYSCODE  DS    CL6
         DC    CL2' '
TRANCODE DS    CL4
POINTER  DS    H
         END


Mark Harley
CICS Systems Programmer
Norwich Union Insurance Group (UK)

