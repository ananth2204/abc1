DFHCOMMAREA revisited

I have read several recent articles in CICS Update regarding
apparent problems with DFHCOMMAREA when the receiving
area length differs from that in the sending program.  I wish
specifically to address the case where the receiving
program's COMMAREA is longer than the sending
program's COMMAREA.  If this is the case in any reader's
CICS transactions, please refer to page 345, column 1,
paragraph 2, in the Command Level APRM, SC33-0241, for
CICS 1.7.0.  According to IBM, this situation produces
unpredictable results, ie sometimes it works - sometimes it
doesn't.

This is because any moves that exceed 256 bytes in length are
handled using an MVCL (Move Character Long) instruction.
When you code 'MOVE DFHCOMMAREA TO I' in a
program, an MVCL instruction generated by the compiler is
executed using the length associated with the receiving (ie the
longer) COMMAREA.  Because the linkage section
DFHCOMMAREA (the smaller of the two) is allocated just
preceding the receiving program's working storage (as is the
usual case in a lightly-loaded test CICS address space), the
MVCL instruction checks for destructive overlap, and upon
detecting that this will occur, interrupts execution before
moving any data, and sets the condition code to 3 (overlap).
Unfortunately, neither the COBOL compiler nor CICS bothers
to test for this condition.  What the user sees is that no data is
ever moved into the receiving program's DFHCOMMAREA.

Note, however, that in a busy system the linkage section need
not necessarily be allocated immediately preceding working
storage.  In this case, no destructive overlap is detected and the
data is moved correctly.

For COMMAREAs less than 257 bytes, the MVC instruction,
which does not check for destructive overlap, may be used,
causing no malfunction to occur.  Additionally, if old object
code (ie code compiled on a pre-MVCL capable machine) is
executed, no error will show up until the code is recompiled,
since multiple MVC instructions will be generated.

Hopefully, this explanation will finally lay this problem to rest.


Larry I Davidson
Manager, Data Base and Data Communications
American National Can Company (USA) ) Xephon 1990


