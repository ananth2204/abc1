Using DFHTM for table entries in CICS 1.6.1

John J Gonnella's explanation in issue 40 of CICS Update of
the use of the IBM DFHTM macro to locate CICS table entries
is most helpful.  Users still at CICS level 1.6.1, however, will
have difficulty since the DFHTM macro form of (A,address)
does not exist in that release.

One possible solution is shown here.  DFHTM requires a work
area of 16 bytes.  This area is established at label DFHTML.
DFHTM MF=(D,PARMLIST) establishes a 16-byte DSECT
labelled DFHTMRQ for this storage.  By means of a USING
statement, register 1 is assigned as the base register for this
DSECT since, at execution, DFHTM will load the address of
its work area into register 1.  To execute the locate, the default
DFHTM macro form of (N,DFHTMRQ) is changed to
(N,DFHTML) to load the address of the user-defined work
area.

At execution, DFHTM first initialises its work area to zero.  As
a result, it is not possible to pre-load the work area with the
entry or table name without changing the macro.

A further requirement here was to design the locate program as
a general utility subroutine that when invoked could return
control in command level and pass data using a COMMAREA.
The invoking program places the table and entry names in the
COMMAREA.  It initialises the entry address portion of the
COMMAREA  to zero.  The invoked program addresses the
COMMAREA by loading a register from DFHEICAP, which
CICS maintains in DFHEISTG.   It places the entry address in
the COMMAREA and returns control.

Logic in the subroutine precludes the 'error' situation from
arising.  In the event of a NOTFND situation, the Table
Management Program used by DFHTM returns a zero to the
register indicated in the SET operand of the DFHTM macro.
Therefore, all error checking can be done in the invoking
program by checking the address returned to ensure that it is
not zero.  If the address is valid, then the standard BLL cell
mechanism is used by the invoking program to address the
table entry and extract the required information.

The examples show a COBOL program linking to the
Assembler subroutine to determine the program use count of a
program started by interval control.

THE COBOL APPLICATION

 01  W-COMMAREA-LEN               PIC S9(004) COMP VALUE +16.
 01  COMAREAK                     PIC  X(008) VALUE 'COMMAREA'.
 01  W-COMMAREA.
     05  FILLER                   PIC  X(001) VALUE SPACES.
     05  C-TABLE                  PIC  X(003) VALUE 'PPT'.
     05  C-ENTRY                  PIC  X(008) VALUE 'LCP200 '.
     05  C-ENTRY-ADDR             PIC S9(008) COMP VALUE +0.
 LINKAGE SECTION.
 01  ADDRESSES.
     05  FILLER                   PIC S9(008) COMP.
     05  CB-ADDR                  PIC S9(008) COMP.
     05  DCT-ADDR                 PIC S9(008) COMP.
     05  PPT-ADDR                 PIC S9(008) COMP.
 01  CB-AREA.
     05  CB-POINTER               PIC S9(008) COMP.
 01  DCT-AREA.
     05  D-QID                    PIC  X(004).
     05  D-QSTAT                  PIC  X(001).
     05  FILLER                   PIC  X(005).
     05  D-QORECS                 PIC S9(004) COMP.
     05  FILLER                   PIC  X(002).
     05  D-QIRECS                 PIC S9(004) COMP.
 01  PPT-AREA.
     05  FILLER                   PIC  X(036).
     05  D-PCNTR                  PIC S9(008) COMP.
 PROCEDURE DIVISION.
 0000-MAIN-PROCEDURE.
     EXEC CICS LINK PROGRAM('SYP0091')
          COMMAREA(W-COMMAREA) LENGTH(W-COMMAREA-LEN)
     END-EXEC.
     IF C-ENTRY-ADDR IS NOT EQUAL TO +0
        MOVE C-ENTRY-ADDR TO PPT-ADDR
        MOVE C-ENTRY-ADDR TO DEBUG-ADDR
        MOVE D-PCNTR TO T-PCNTR
     ELSE
        MOVE 'ERROR' TO T-SUBERR.

THE ASSEMBLER GENERAL UTILITY

*-           01. MIXED MACRO/COMMAND LEVEL                             -
*-               R03 BASE REGISTER OF PROGRAM                          -
*-               R11 EQU DFHEIBR  ADDRESS OF DFHEIBLK                  -
*-               R10 EQU DFHEIPLR ADDRESS OF DFHEISTG                  -
*-               R12 EQU TCACBAR  ADDRESS OF TCA                      -
*-               R13 EQU CSACBAR  ADDRESS OF CSA                      -
*-           02. PROGRAM SPECIFIC                                     -
*-               R01              ADDRESS OF DFHTM PARMLIST           -
*-               R04 EQU COMABAR  ADDRESS OF COMMAREA                 -
*-               R05              ADDRESS OF REQUESTED TABLE ENTRY    -
*   -FOLLOWING REQUIRED BY COMBINATION COMMAND/MACRO CICS INTERFACE   -
          GBLB  &DFHEIMX
&DFHEIMX SETB   1
         COPY   DFHCSADS
         COPY   DFHTCADS
* -DFHTM MACRO LOADS @ PARMLIST IN R1 PARMLIST SHOULD USE R1         -
         USING DFHTMRQ,R1
         DFHTM MF=(D,PARMLIST)
COMABAR  EQU   R4
         USING COMAREA,COMABAR
COMAREA  DSECT 0F
         DS    CL1
CTABN    DS    CL3
CENTN    DS    CL8
CENTA    DS    F
SYP0091  CSECT
         DS    0H
         MVC   KEISTG(16),=C'DHFEISTG    USER'
         L     COMABAR,DFHEICAP              @ COMMAREA
CHKPCT   CLC   CTABN(3),=C'PCT'
         BNE   CHKPPT
         DFHTM TYPE=LOCATE,TABLE=PCT,NAME=CENTN,SET=(R5),              X
               NORMAL=RETURN,ERROR=RETURN,NOTFND=RETURN,               X
               MF=(N,DFHTML)
         B     RETURN
CHKPPT   CLC   CTABN(3),=C'PPT'
         BNE   RETURN
         DFHTM TYPE=LOCATE,TABLE=PPT,NAME=CENTN,SET=(R5),              X
               NORMAL=RETURN,ERROR=RETURN,NOTFND=RETURN,               X
               MF=(N,DFHTML)
         B     RETURN
RETURN   DS    0H
         ST    R5,CENTA                      ENTRY @ TO COMMAREA
         EXEC  CICS RETURN
         DS    0F
         DFHEISTG
KEISTG   DS    CL16
DFHTML   DS    CL16
         END


Bruce L Dormuth
Manager, Systems Programming
The Bryn Mawr Hospital (USA)                        ) Xephon 1990


