 The CICS/DB2 interface
DB2 resides in its own address space and it is the CICS Attachment Facility
provided by DB2 which allows CICS to access DB2 resources through connections
established using the MVS Sub System Interface (SSI) protocol.
The CICS Attachment Facility provides the following functions:
%    An application program interface
%    Attachment commands
%    DB2 commands.
THE APPLICATION PROGRAM INTERFACE
This permits programs written in Assembler, COBOL, and PL/I to issue Structured
Query Language (SQL) commands to access or modify DB2 databases with the Data
Manipulation Language (DML) part, define DB2 objects (databases, tables, etc)
using the Data Definition Language (DDL), and control authority (GRANT and
REVOKE).  DB2 is available only to CICS programs that use the command-level
interface and EXEC SQL statements.  Updates to DB2 resources are fully
synchronised with updates to resources protected by CICS such as file control,
temporary storage, intra-partition transient data, and DL/I databases.  The
Attachment Facility controls the routing of SQL statements to DB2.  When the
CICS program issues a syncpoint or it terminates, the Attachment Facility is
invoked to synchronise commit processing between CICS and DB2.  A Unit of
Recovery (UR) is defined as the updates performed by DB2 within a CICS Logical
Unit of Work (LUW).
ATTACHMENT COMMANDS
These are commands that display and control the status of the Attachment
Facility.  They can be issued using the CICS-supplied transaction DSNC.
Attachment commands can be used to:
%    Start the connection to DB2 (STRT)
%    Stop the connection to DB2 (STOP)
%    Display the status of the connection to DB2 (DISP)
%    Modify the characteristics of the connection to DB2 (MODI).
DB2 COMMANDS
Once a connection between CICS and DB2 is established, terminal users may also
use the CICS transaction code DSNC to enter CICS commands.
The Attachment Facility provides a multi-thread connection between CICS and DB2.
There is a thread for each CICS transaction accessing DB2.  A thread is a bi-
directional path between a user in a subsystem and specific DB2 resources.  A
resource is an application plan or a command processor.
The threads are located in the CICS address space.  A new CICS table, the
Resource Control Table (RCT), is used to define the number and types of threads
used by the CICS/DB2 interface.  Two or more regions can share the same DB2
system; however, all CICS systems accessing DB2 must run under the same MVS
system as DB2.  Note that a CICS region can be connected to only one DB2
subsystem at a time.  Every CICS that connects to DB2 must have an RCT.  The RCT
is used to define the characteristics of the CICS/DB2 interface at attach time.
The RCT contains such information as:
%    The authorisation-id to be used by the CICS Attachment Facility to sign on
to DB2.
%    The name of the DB2 subsystems to be accessed.
%    The maximum number of active threads.
%    The CICS transactions that can receive dedicated threads and the
dispatching priority for the thread subtasks.
The Communications Control Table (CCT) is built from the RCT following the CICS
attach at PLTPI time or when the DSNC STRT command is entered.  For each thread
defined in the RCT there is a corresponding entry in the CCT.  The CCT is an
internal representation of the RCT.  Each entry in the CCT is a possible thread.
There are three types of thread:
%    A command thread - reserved exclusively for DSNC.
%    Pool threads - shared by all transactions without dedicated threads.  They
can also be used by transactions that run out of dedicated threads defined for
them.
%    Entry threads - reserved for a transaction or group of transactions.  Entry
threads can be defined as protected or non-protected.  Protected threads are not
terminated even if they are not used for a period.  Many CICS transactions can
use the same protected thread and avoid the overhead involved in creating and
terminating the thread for each transaction.  Non-protected threads are usually
terminated at CICS task termination time.
 When a transaction issues its first SQL command, a DB2 thread is created based
upon specifications in the RCT.  A new thread is created if an existing one
cannot be used.  When a new thread is created or when an existing thread is re-
used, DB2 checks the authorisation-id.  The sign-on call in CICS (not to be
confused with CICS sign-on) provides the authorisation-id.  Sign-on is used only
in multi-thread connections, such as CICS, to identify the thread user to DB2.
DB2 checks that the user is authorised to access the requested plan or command.
These include requests from an application program.
Within the CICS address space, CICS executes under a main taskUs Task Control
Block (TCB).  Besides the main task, there can be a number of subtasks executing
in the CICS address space.  This thread is executed under its own MVS subtask
TCB.  The thread uses cross memory services to execute DB2 code to satisfy the
SQL request.  On completion of the SQL request, data is passed, return codes are
set, and control returns to the Attachment Facility code.  The CICS task regains
control and the thread may or may not be terminated depending on whether it is
protected or non-protected.  Non-protected threads are usually terminated at
CICS task termination time.  Protected threads that have not been re-used during
two consecutive 30-second purge cycles are terminated.  If the thread is not
terminated, the thread TCB remains inactive (MVS wait) until the next SQL
request is received.  If the thread is terminated, the MVS subtask TCB
associated with it is not necessarily detached.  MVS subtasks are detached only
when the number of active TCBs is within two of the RCT-specified parameter
THRDMAX - the maximum number of threads that can be created between CICS and DB2
within this RCT.
When CICS applications use DB2 data, new design aspects are added to the
application architecture.  One of the most important things to consider is the
relationship between CICS transaction-ids, DB2 plans, and program modules.  For
every CICS program that issues SQL calls, there must be a corresponding DB2 plan
available.  An application program made up of one or more modules will usually
become one plan.  The plan to be used is specified in the RCT.  Only one plan
may be specified for a given CICS transaction-id.  More than one transaction may
use the same plan.
In order to prepare a CICS program that issues SQL calls for execution, the
following steps are required:
1    DB2 pre-compile (new)
2    Command-level translation
3    Compile source statements
4    Link edit
5    BIND to get a new application plan (new).
The DB2 pre-compiler builds a Database Request Module (DBRM) that contains
information about each of the programUs SQL statements.  SQL statements are also
validated in this step.
In the BIND process, the DBRM is used to produce an application plan which
allows the program to access DB2 data at execution time.  A group of
transactions specified in the same RCT entry must use the same application plan,
that is, their DBRMs must be bound together.
To control the characteristics of the plan and the Attachment Facility threads,
the relationship among CICS transaction-ids, DB2 plans, and program modules must
be carefully defined during the design phase.

Thomas Markowski
CICS Consultant (USA)    ) Thomas Markowski 1989














