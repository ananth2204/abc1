Implementing mass changes on the CSD file

If you need to make several changes to the CSD file it can be a
very time-consuming job to alter every element on-line. I have
created a program that will format the CSD definitions in the
right way to reuse them as definitions allowing them to be fully
used by the TSO editor. A description of the programming
interface can be found in the Customization Guide.

First, we extract the group's definitions and write them to a
file, like this:

//STEP1    EXEC  PGM=DFHCSDUP,PARM='CSD(READONLY)'
//STEPLIB  DD DSN=CICS311A.LOADLIB,DISP=SHR
//         DD DSN=HSSEC.EC.LOAD,DISP=SHR   <== CONTAINS ECLCBDC
//         DD DSN=SYS1.VSCOLIB,DISP=SHR
//         DD DSN=SYS1.VSCLLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//OUTFIL   DD DSN=HSSEC.EC.OUT,DISP=SHR               <== OUTPUTFILE
//SYSUDUMP DD SYSOUT=*
//DFHCSD   DD DSN=CSD,DISP=SHR
//SYSIN    DD *
 EXTRACT GROUP(xxxxxxxx) OBJECTS  USERPROGRAM(ECLCBDC)
//

Then we edit the output file adding 'DELETE
GROUP(xxxxxxxx)' to the front.

The definitions are reloaded in batch using the following JCL:

//STEP3    EXEC  PGM=DFHCSDUP,PARM='CSD(READWRITE)'
//STEPLIB  DD DSN=CICS311A.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//DFHCSD   DD DSN=CSD,DISP=SHR
//SYSIN    DD DSN=HSSEC.EC.OUT,DISP=SHR    <== OUTPUT FROM EDITING
//                                             lrecl=80

Finally, the group is installed on-line or CICS is cold started.


ECLCBDC SOURCE CODE

The following code was tested with CICS 3.1.1 and the
program was compiled with the OS/VS 2.4 COBOL compiler.

 IDENTIFICATION DIVISION.
 PROGRAM-ID.  ECLCBDC.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT OUTFIL  ASSIGN TO UT-2301-S-OUTFIL
          STATUS IS STOUT.
 DATA DIVISION.
 FILE SECTION.
 FD  OUTFIL
      BLOCK 0
      LABEL RECORDS ARE STANDARD.
 01  OREC         PIC X(80).
 WORKING-STORAGE SECTION.
 77  INITIAL-CALL                   PIC 99 VALUE IS 0.
 77  LIST-START-CALL                PIC 99 VALUE IS 2.
 77  GROUP-START-CALL               PIC 99 VALUE IS 4.
 77  OBJECT-START-CALL              PIC 99 VALUE IS 6.
 77  KEYWORD-CALL                   PIC 99 VALUE IS 8.
 77  OBJECT-END-CALL                PIC 99 VALUE IS 10.
 77  GROUP-END-CALL                 PIC 99 VALUE IS 12.
 77  LIST-END-CALL                  PIC 99 VALUE IS 14.
 77  FINAL-CALL                     PIC 99 VALUE IS 16.
 77  STOUT                 PIC XX.
 77  BLNK                  PIC X(80) VALUE SPACES.
 77  WS-GROUP-NAME         PIC X(08).
 77  WS-OBJECT-NAME        PIC X(08).
 77  WS-OBJECT-TYPE        PIC X(12).
 01  WS-KEYWORD-VALUE.
     03 WS-K-V1            PIC X(43).
     03 WS-K-V2            PIC X(90).
 01  WS-KEYWORD-TYPE       PIC X(12).
 01  WS-KEYWORD-LENGTH     PIC 999 COMP.
 LINKAGE SECTION.
 01  EXIT-FUNCTION-CODE             PIC 99 COMP.
 01  EXIT-WORK-AREA-PTR             PIC X(04).
 01  EXIT-BACK-TRANS-CMD-PTR        PIC X(04).
 01  EXIT-LIST-NAME                 PIC X(8).
 01  EXIT-GROUP-NAME                PIC X(8).
 01  EXIT-OBJECT-TYPE               PIC X(12).
 01  EXIT-OBJECT-NAME               PIC X(8).
 01  EXIT-KEYWORD-TYPE              PIC X(12).
 01  EXIT-KEYWORD-LENGTH            PIC 999 COMP.
 01  EXIT-KEYWORD-VALUE.
     03 EXIT-KEYWORD-CHAR           PIC X OCCURS 1 TO 183
                               DEPENDING ON EXIT-KEYWORD-LENGTH.
 PROCEDURE DIVISION USING EXIT-FUNCTION-CODE
                          EXIT-WORK-AREA-PTR
                          EXIT-BACK-TRANS-CMD-PTR
                          EXIT-LIST-NAME
                          EXIT-GROUP-NAME
                          EXIT-OBJECT-TYPE
                          EXIT-OBJECT-NAME
                          EXIT-KEYWORD-TYPE
                          EXIT-KEYWORD-LENGTH
                          EXIT-KEYWORD-VALUE.
 MAIN SECTION.
 M01.
     IF EXIT-FUNCTION-CODE       = INITIAL-CALL      THEN
        PERFORM P-INITIAL-CALL
     ELSE IF EXIT-FUNCTION-CODE  = GROUP-START-CALL  THEN
        PERFORM P-GROUP-START-CALL
     ELSE IF EXIT-FUNCTION-CODE  = OBJECT-START-CALL THEN
        PERFORM P-OBJECT-START-CALL
     ELSE IF EXIT-FUNCTION-CODE  = KEYWORD-CALL      THEN
        PERFORM P-KEYWORD-CALL
     ELSE IF EXIT-FUNCTION-CODE  = FINAL-CALL        THEN
        PERFORM P-FINAL-CALL.
     GOBACK.
 M99.
     STOP RUN.
 WRREC.
     WRITE OREC.
 P-INITIAL-CALL.
     OPEN OUTPUT OUTFIL.
 P-GROUP-START-CALL.
     DISPLAY "GROUP : "  EXIT-GROUP-NAME
        UPON SYSOUT.
     MOVE EXIT-GROUP-NAME TO WS-GROUP-NAME.
 P-OBJECT-START-CALL.
     DISPLAY    EXIT-OBJECT-NAME
        UPON SYSOUT.
     STRING "DEFINE " DELIMITED BY SIZE
            EXIT-OBJECT-TYPE DELIMITED BY SPACE
            "(" DELIMITED BY SIZE
            EXIT-OBJECT-NAME DELIMITED BY SPACE
            ") GROUP(" DELIMITED BY SIZE
            WS-GROUP-NAME DELIMITED BY SPACE
            ")" DELIMITED BY SIZE
            BLNK DELIMITED BY SIZE
            INTO OREC.
     PERFORM WRREC.
 P-KEYWORD-CALL.
     IF EXIT-KEYWORD-LENGTH NOT = ZEROES
         PERFORM P-K-C1.
 P-K-C1.
     STRING "     "           DELIMITED BY SIZE
            EXIT-KEYWORD-TYPE DELIMITED BY SPACE
            "(" EXIT-KEYWORD-VALUE ") " DELIMITED BY SIZE
            BLNK DELIMITED BY SIZE
            INTO OREC.
     PERFORM WRREC.
 P-FINAL-CALL.
     CLOSE OUTFIL.


Erwin Claes
Systems Engineer
Honda Europe NV (Belgium)

