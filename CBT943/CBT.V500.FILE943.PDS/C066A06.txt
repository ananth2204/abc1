The minimal standard random number generator

Reading James E Holler's article Program to generate
passwords (CICS Update, September 1990, pages 25-27), I
was reminded of my own experiences with the secret world of
random numbers.  Looking for the best algorithm, I found the
following one, which is based on the theory described in the
article Random Number Generators: Good ones are hard to find
by Stephen K Park and Keith W Miller (published in
Communications of the ACM, October 1988, pages 1192-
1201).  I think CICS Update readers shouldn't have any
problems with rewriting these few lines of code in Assembler.

RNDTST:PROC OPTIONS(MAIN);
   /************************************************************/
   /* TESTS THE RANDOM GENERATOR FROM CACM OCT 88 (PAGE 1195)  */
   /************************************************************/
   DCL SYSPRINT FILE PRINT  ENV (BUFFERS(2));
   DCL (ROUND)              BUILTIN;
   DCL M                    DEC FLOAT (16) INIT(2147483647.0);
   DCL SEED                 DEC FLOAT (16) INIT(1.0);
   DCL (N,INDX)             BIN FIXED (31);
   DCL SN(0:25)             BIN FIXED (31) INIT((26)0) ;
   DCL C_STR   CHAR(26)     INIT ('ABCDEFGHIJKLMONPQRSTUVWXYZ');
   DCL C(0:25) CHAR(1)      DEFINED C_STR;

   RANDOM: PROC(MSEED) RETURNS (DEC FLOAT(16));
      /****************************************************/
      /* RETURNS MSEED ON THE 0..2**31-1 INTERVAL.        */
      /***************************************************/
      DCL (MOD) BUILTIN;
      DCL A           DEC FLOAT (16) INIT(16807.0);
      DCL MSEED       DEC FLOAT (16);
      RETURN (MOD((A*MSEED),M));
   END RANDOM;

   /* MAIN PROGRAM TESTS HOW MANY SEEDS ARE DIFFERENT.*/
   DO N=1 TO 320000;
      SEED = RANDOM(SEED);
      INDX = ROUND(26*(SEED/M),0);
      SN(INDX) = SN(INDX) + 1;
      /* C(INDX) IS THE RANDOM CHARACTER: 'A'..'Z' */
   END;
   DO N=0 TO 25;
      PUT SKIP EDIT (C(N),SN(N))   (A(5),P'Z99999999');
   END;

END RNDTST;


Zvonko Kribel,
External Consultant
Insiel Spa (Italy)

