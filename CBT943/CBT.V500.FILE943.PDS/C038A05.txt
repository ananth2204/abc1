 Cleaning up temporary storage
Many pseudo-conversational transactions use temporary storage to pass
information from one invocation of the transaction to the next.  Often, the
temporary storage records have the terminal-id as part of the record name.  This
is done to ensure that the name is unique and works quite well overall.
There is, however, the possibility of an intolerable situation occurring within
this process which results if the transaction abends or is cancelled.  In this
case, the temporary storage is not erased.  A different user on the same
terminal executing this transaction will not start afresh, but where the
previous user left off.  This could allow secured information to be available to
the new user.
In order to avoid this problem, I wrote a program to clean up the temporary
storage associated with a terminal.  The terminal-id can be passed to this
program or the terminal-id on which the transaction runs can be used.  This
program is called as a part of the sign-on process and when a transaction is
cancelled by another in-house procedure.  It could also be used by the terminal
error program or the node error program.  It is currently running under CICS
1.6.1 and 1.7.
TSIOABAR EQU   6                     R6 IS TEMP STORAGE I/O AREA
TSMAPBAR EQU   R8                    R8 IS USED FOR TEMP STORAGE
TSUTEAR  EQU   R8                    R8 IS USED FOR TEMP STORAGE
TSGIDBAR EQU   R8                    R8 IS USED FOR TEMP STORAGE
TSUTBAR  EQU   R8                    R8 IS USED FOR TEMP STORAGE
FIOABAR  EQU   R9                    BASE REG. FOR DOS/VS FIOA
TIOABAR  EQU   R10                   BASE REG.
TCTTEAR  EQU   R11                   BASE REG.
         COPY  DFHCSADS
         DFHTCA  CICSYST=YES
         COPY DFHTCTTE
         COPY DFHTSMDS
         DROP TSMAPBAR
         COPY DFHTSIOA
TERMID   DS    CL4
DSPD     CSECT
         BALR R7,0                   LOAD 1ST BASE REG.
         USING *,R7
         DFHSC TYPE=GETMAIN,CLASS=TEMPSTRG,NUMBYTE=4
         L     TSIOABAR,TCASCSA
         MVC   TSIOAVRL,=H'08'
         DFHIC TYPE=GET,ICDADDR=TSIOAVRL,NORESP=TMPSETUP
         L     TCTTEAR,TCAFCAAA  MAKE OUR TCTTE ADDRESSABLE
         MVC   TERMID,TCTTETI    IF NO TERMID PASSED, USE THIS ONE
TMPSETUP L     R8,CSATSMTA   ADDRESS OF TEMP STORAGE TABLE
         USING DFHTSUT,R8
         CLC   TSUTCC,=F'0'  TEST FOR NO ENTRIES
         BE    TMPNXTT
         L     R4,TSUTAHI    FIRST ON CHAIN
         USING DFHTSUTE,R4
TMPLOOP1 CLC   TERMID,TSUTEID  DOES ID MATCH THIS TERMINAL?
         BE    TMPERASE
         CLC   TERMID,TSUTEID+4  DOES ID MATCH THIS TERMINAL?
         BNE   TMPSKIP
TMPERASE MVC   TCATSDI,TSUTEID
         TM    TSUTETC,TSUTEGID  IS GROUP ID BIT ON?
         BZ    TMPSREL           IS NOT, BRANCH TO SINGLE RELEASE
         DFHTS TYPE=PURGE        PURGE GROUP
         B     TMPSETUP      START OVER FROM BEGINNING
TMPSREL  DFHTS TYPE=RELEASE
         B     TMPSETUP      START OVER FROM BEGINNING
TMPSKIP  C     R4,TSUTALI    ANY MORE ON CHAIN?
         BNL   TMPNXTT
         LA    R4,TSUTELN(R4)   CHECK NEXT ENTRY
         B     TMPLOOP1
TMPNXTT  L     R8,TSUTFC
         LTR   R8,R8
         BE    EXITPRG
          CLC   TSUTCC,=F'0'  TEST FOR NO ENTRIES
         BE    TMPNXTT
         L     R4,TSUTAHI
         B     TMPLOOP1
EXITPRG  EQU   *
         DFHPC TYPE=RETURN
         LTORG
         END


Carrie Ledford
Software Coordinator
Miami University (USA)   ) Xephon 1989





















































