Maintaining useful file statistics

The need for file statistics varies in importance from shop to
shop.  Statistics may be used to identify high-use files, low-use
files, or files not used at all.  High-use files might be identified
so that index and data segments can be placed on low-use
DASD.  Index and data control interval sizes might be tuned or
share pool buffers adjusted.  Low-use files might be candidates
for removal and, of course, unused files can be deleted
altogether.  All of these actions can be beneficial to the health
of your CICS systems.  You can improve response times,
reduce I/O wait times, and possibly save some VSAM DASD
space.

IBM's shutdown statistics can be a useful tool in performance
tuning and analysis.  However, they are difficult to read,
sometimes obscure in meaning, and can't be readily saved in a
machine-readable format.  You can route them to DASD but
trying to manipulate a report via a program is less than the
optimum solution.  They also can't be used readily on demand:
the CSTT transaction if used improperly resets daily totals to
zero.

CMF/SMF records can be used to get useful data.  They are in
machine-readable format and there are many commercial
products available to report and manipulate them.  However,
the quantity of data and the overhead involved in generating
these can be overwhelming.  A simple alternative would be to
write a program to collect your own file usage statistics.  The
report in Figure 1 was generated using such a program.  The
data was generated from statistics maintained within CICS.

Daily statistics are maintained within the FCT control blocks
internal to CICS.  The file control program maintains counters
which detail the number and types of VSAM/BDAM I/O
operations.  By having your program 'walk' the FCT chain,
each file's current use figures can be extracted.  These statistics
can be formatted and written to an extra-partition dataset via
the DCT.  Demand reporting can be maintained by adding a
transaction to your PCT.  The ideal trigger mechanism would
be to place this program entry in the first phase portion of your
system PLTSD.

Included below is a sample program that can be used for
collecting file information.  For this to run in your shop the
following steps need to be taken:

1     CICS 1.7 or above must be installed.

2     PPT/PCT or RDO entries must be made and installed.

3     A DCT entry for an 80-byte extra-partition dataset needs to
      be defined.

4     The dataset above should be defined to CICS with a
      disposition of MOD (ie DISP=MOD,KEEP,KEEP).

5     SYNCSORT Release 2.5 or above should be installed for
      batch reporting.

6     A program entry in the first phase portion of the PLTSD is
      required.

FCTDSBAR EQU   07
         COPY DFHFCTDS
CSADSBAR EQU   08
         COPY DFHCSADS
DFHEISTG DSECT
MSGOUT   DS    0H
MSGDATE  DS    PL4         SYSTEM DATE 00YYDDD PACKED FORMAT
MSGDD    DS    CL8         FCT DDNAME
MSGDSN   DS    CL44        FCT DATA SET NAME
MSGGET   DS    F           STATISTICS - GET REQUESTS
MSGADD   DS    F           STATISTICS - ADD REQUESTS
MSGUPD   DS    F           STATISTICS - UPDATE REQUESTS
MSGGETU  DS    F           STATISTICS - GET UPDATE REQUESTS
MSGBRS   DS    F           STATISTICS - BROWSE REQUESTS
MSGDEL   DS    F           STATISTICS - DELETE REQUESTS
LENMSG   EQU   *-MSGOUT    LENGTH OF DSECT
         DS    0H
MSGLEN   DS    H           MESSAGE LENGTH
MSGPFX   DS    0CL9        MESSAGE PREFIX
MSGPGM   DS    CL8           - PROGRAM NAME
MSGSEP   DS    C             - PREFIX SEPARATOR
MSG      DS    CL70        MESSAGE
WORKADDR DSECT
WORKCSAA EQU   8           ADDRESS AREA FOR CSA
         USING WORKADDR,WORKCSAA
*  FCT FILE UTILIZATION STATISTICS MODULE
*  STATISTICS RECORDS WILL BE GATHERED FROM THE SYSTEM FCT TABLE
*  AND WRITTEN TO AN EXTRAPARTITION DATA SET FOR BATCH REPORTING.
*  THIS VERSION IS NEEDED FOR RELEASE 1.7 OF CICS AND ABOVE.
*  FILES WITH NO DYNAMIC DATASET NAME AND NO USAGE WILL HAVE A
*  DUMMY DATASET NAME INSERTED TO INDICATE NO USAGE THIS CYCLE.
*  DFHWTO IS AN IBM INTERNAL MACRO. IN 1.7 R13 IS CHANGED WHILE
*  EXECUTING THE WTO OPERATION.  IF R13 IS BEING USED IT MUST BE
*  SAVED PRIOR TO THE WTO OPERATION AND RESTORED IMMEDIATLY AFTER
*  RETURN FROM WTO.
*                NOTE:  R3  - COUNTER USED IN DSN LOOP
*                       R4  - ADDRESS OF DATA SET NAME
*                       R5  - SAVE REGISTER FOR R13 AFTER DFHWTO OPS
*                       R6  - WORK REGISTER
*                       R7  - BASE REGISTER FOR FCT TABLE
*                       R8  - BASE REGISTER FOR CSA (SEE EQUATE ABOVE)
*                       R9  - WORK REGISTER
*                       R10 - SUBROUTINE LINK REGISTER
*                       R11 - THE EXEC INTERFACE BLOCK REGISTER
*                       R12 - THE BASE REGISTER FOR THIS PROGRAM
*                       R13 - DYNAMIC STORAGE REGISTER
FCTSE170 DFHIENT CODEREG=12,DATAREG=13,EIBREG=11
         B    BEGIN
PGMID    DC   C'FCTSE170'
         DC   C'-FCT FILE UTILIZATION STATISTICS PROGRAM -'
         DC   C'&SYSDATE'
         DC   C' '
         DC   C'&SYSTIME'
BEGIN    DS   0H
         EXEC CICS ADDRESS CSA(WORKCSAA)
         USING DFHCSADS,R8    GET ADDRESSABILITY TO CSA
         L     R7,CSAFCTBA    LOAD ADDRESS OF FIRST FCT
         USING DFHFCTDS,R7    GET ADDRESSABILITY TO FIRST FCT
GETNEXT  DS    0H
         CLC   FCTDSID,HIGHVAL  CHECK IF END OF FCT TABLE
         BE    RETURN
         CLC   FCTDSRD,LOWVAL   CHECK READ STATS
         BNE   BUILDMSG
         CLC   FCTDSWRA,LOWVAL  CHECK ADD STATS
         BNE   BUILDMSG
         CLC   FCTDSWRU,LOWVAL  CHECK UPDATE STATS
         BNE   BUILDMSG
         CLC   FCTDSGU,LOWVAL   CHECK GET UPDATE STATS
         BNE   BUILDMSG
         CLC   FCTDSBR,LOWVAL   CHECK BROWSE STATS
         BNE   BUILDMSG
         TM    FCTDSBDM,B'00000001' CHECK IF BDAM FILE
         BNZ   ZIPBDAM
         CLC   FCTDSDEL,LOWVAL  CHECK DELETE STATS
         BNE   BUILDMSG
ZIPBDAM  DS    0H
         MVC   MSGDSN,NOTUSED   BDAM FILES CAN'T DELETE, NOT USED
*                                AT THIS TIME (ZERO STATS)
         B     UNUSED
BUILDMSG DS    0H
         MVC   MSGDSN,SPACES    INITIALIZE THE FIELD TO SPACES
         BAL   R10,CHECKDSN     CHECK FOR A DATA SET NAME
UNUSED   DS    0H
         MVC   MSGDD,FCTDSID    MOVE REC ID TO OUTREC
         MVC   MSGDATE,IEBDATE  MOVE CURRENT DATE
         MVC   MSGGET,FCTDSRD   MOVE GET REQ
         MVC   MSGADD,FCTDSWRA  MOVE ADD REQ
         MVC   MSGUPD,FCTDSWRU  MOVE UPDATE REQ
         MVC   MSGGETU,FCTDSGU  MOVE GET UPDATE REQ
         MVC   MSGBRS,FCTDSBR   MOVE BROWSE REQ
         TM    FCTDSBDM,B'00000001' CHECK IF BDAM FILE
         BNZ   MOVEZERO
         MVC   MSGDEL,FCTDSDEL  MOVE DELETE REQ
         B     WRITEQ
MOVEZERO DS    0H
         MVC   MSGDEL,LOWVAL    MOVE ZERO
WRITEQ   DS    0H
         EXEC CICS HANDLE CONDITION QIDERR(FILIDERR),                  X
                 NOSPACE(NOSPACE),                                     X
                 NOTOPEN(FILECLOS)
         EXEC CICS WRITEQ TD,                                          X
                 QUEUE('FCTS'),                                        X
                 FROM(MSGOUT),                                         X
                 LENGTH(MSGLENG)
NEXTFCT  DS    0H               UPDATE POINTERS TO NEXT FCT ENTRY
         LH    R9,FCTDSTEL      LOAD LENGTH OF TABLE TO R9
         LR    R6,R7            SAVE THE CURRENT FCT ADDRESS
         LA    R7,0(R9,R6)      LOAD ADDRESS OF NEXT TABLE ENTRY
         B     GETNEXT
RETURN   DS    0H
         MVC   MSG,MSGOK
         LA    R1,MSGOKL
SENDMSG  DS    0H
         CLC   EIBTRMID,=C'SAMA' IF TXN ENTERED ON READER
         BE    SKIPSEND          DONT SEND, CAUSES ERROR
         CLC   EIBTRMID,=X'00000000' IF TXN ENTERED BY PLT
         BE    SKIPSEND          DONT SEND, CAUSES ERROR
         LA    R1,L'MSGPFX(R1)
         STH   R1,MSGLEN
         MVC   MSGPGM,PGMID
         MVI   MSGSEP,C'-'
         EXEC CICS SEND TEXT,                                          X
                 FROM(MSGPFX),                                         X
                 LENGTH(MSGLEN),                                       X
                 ERASE  FREEKB
SKIPSEND DS    0H
         EXEC CICS RETURN
NOSPACE  DS    0H
         LR    R5,R13           SAVE R13
         DFHWTO 'FCTSE170 - ** NO SPACE ON FCT STATISTICS FCTS TDQ'
         LR    R13,R5           RESTORE R13
         MVC   MSG,MSGNOSPC
         LA    R1,MSGNOSPL
         B     SENDMSG
FILIDERR DS    0H
         LR    R5,R13           SAVE R13
         DFHWTO 'FCTSE170 - ** QIDERR ON FCT STATISTICS TDQ (FCT)'
         LR    R13,R5           RESTORE R13
         MVC   MSG,MSGIDER
         LA    R1,MSGIDERL
         B     SENDMSG
FILECLOS DS    0H
         LR    R5,R13           SAVE R13
         DFHWTO 'FCTSE170 - ## FCT STATISTICS FILE CLOSED(FCTS) **'
         LR    R13,R5           RESTORE R13
         MVC   MSG,MSGCLOSD
         LA    R1,MSGCLOSL
         B     SENDMSG
         EXEC CICS RETURN
CHECKDSN DS    0H
         LA    R5,MSGDSN        LOAD ADDRESS OF OUTPUT DSN
         L     R4,FCTDSDP       LOAD ADDRESS OF FILE DSN
         SR    R3,R3            ZERO REGISTER
         IC    R3,32(0,R4)      USE LENGTH OF DSN AS COUNTER
         LA    R4,33(R4)        POINT TO START OF DSN
DSNLOOP  DS    0H
         CLI   0(R4),C'A'       ALLOW ONLY CHARACTERS A-Z,0-9 AND
         BL    CKPERIOD         PERIOD TO BE DISPLAYED IN DSN FIELD
         CLI   0(R4),C'I'
         BH    CHKJR
         B     MOVEIT
CHKJR    DS    0H
         CLI   0(R4),C'J'
         BL    MVSPACE
         CLI   0(R4),C'R'
         BH    CHKSZ
         B     MOVEIT
CHKSZ    DS    0H
         CLI   0(R4),C'S'
         BL    MVSPACE
         CLI   0(R4),C'Z'
         BH    CHK09
         B     MOVEIT
CHK09    DS    0H
         CLI   0(R4),C'0'
         BL    MVSPACE
         CLI   0(R4),C'9'
         BH    MVSPACE
         B     MOVEIT
CKPERIOD DS    0H
         CLI   0(R4),C'.'
         BNE   MVSPACE
MOVEIT   DS    0H
         MVC   0(1,R5),0(R4)    MOVE CHARACTER TO OUTPUT DSN
         B     ENDLOOP
MVSPACE  DS    0H
         MVI   0(R5),X'40'      MOVE SPACE TO OUTPUT DSN
ENDLOOP  DS    0H
         LA    R4,1(R4)         INCREASE ADDRESS BY 1
         LA    R5,1(R5)         INCREASE ADDRESS BY 1
         BCT   R3,DSNLOOP       GO CHECK NEXT CHARACTER
         BR    R10              RETURN TO MAINLINE
         DS    0H
MSGLENG  DS    H'80'            LENGTH OF OUTPUT MESSAGE
HIGHVAL  DS    8X'FF'           DESIGNATES END OF FCT (FENCE)
LOWVAL   DC    F'0'
NOTUSED  DC    C'DATA SET NOT USED THIS CYCLE'
SPACES   DS    44X'40'
MSGOK    DC    C'FCT FILE STATISTICS HAVE BEEN EXTRACTED.'
MSGOKL   EQU   *-MSGOK
MSGNOSPC DC    C'NO SPACE ON TDQ FILE(FCTS) - CONTACT CICS SYSTEMS'
MSGNOSPL EQU   *-MSGNOSPC
MSGIDER  DC    C'QUIDERR ON FCT STATISTICS TDQ FILE(FCTS)'
MSGIDERL EQU   *-MSGIDER
MSGCLOSD DC    C'FCT STATISTICS TDQ FILE(FCTS) IS CLOSED'
MSGCLOSL EQU   *-MSGCLOSD
         LTORG,
         END   FCTSE170

A word of caution is also called for: IBM has strongly hinted
that access to the Common System Area (CSA) will be limited
in future releases, so your guess is as good as mine as to how
many future releases this will be allowed to run.  This will run
under CICS 1.6 with minor modifications, the most important
concerning the format for the delete counter.  In 1.7 it's defined
as a full word binary field; in 1.6 it's a 3-byte packed decimal
number.  The other difference is each table entry is a fixed
length entry and it is not necessary to calculate the length of
each entry as you process the FCT.

Since the whole idea behind this program is to give you
something useful to look at we had better talk about batch
reporting.  You can code your own program or take advantage
of a product like SYNCSORT.  SYNCSORT has some handy
report-writing features that are simple to use.  The report in
Figure 1 is an example of what can be done.  The following
control cards were used to create this report.  They can be
modified to suit your own shop's needs.

OMIT COND=(13,8,EQ,C'DATA SET'),FORMAT=CH
SORT FIELDS=(1,4,PD,A,5,8,CH,A)
SUM  FIELDS=NON
OUTFIL FILES=1
          LINES=45,
       OUTREC=(1:1,4,PD,EDIT=(TT/TTT),
                         8:5,8,
                     17:13,44,
                     62:57,4,BI,EDIT=(III,III,IIT),
                     74:61,4,BI,EDIT=(III,III,IIT),
                     86:65,4,BI,EDIT=(III,III,IIT),
                     98:69,4,BI,EDIT=(III,III,IIT),
                    110:73,4,BI,EDIT=(III,III,IIT),
                    122:77,4,BI,EDIT=(III,III,IIT),
                 HEADER1=(1:' ',20/,
                    53:'CICS FILE USE STATISTICS'),
                 HEADER2=(58:'REGION = CICXXXX',/,
                             62:&DATE,
                            115:'PAGE',
                            120:&PAGE,3/,
                         1:'JULIAN',
                         8:'DATA',
                             17:'DATA SET NAME',
                             64:'NUMBER OF',
                             76:'NUMBER OF',
                             88:'NUMBER OF',
                            100:'NUMBER OF',
                            112:'NUMBER OF',
                            124:'NUMBER OF',/,
                            1:'DATE',
                         8:'NAME',
                             17:'    ',
                             64:'READS',
                             76:'ADDS',
                             88:'UPDATES',
                            100:'READ',
                            112:'BROWSES',
                            124:'DELETES',/,
                            100:'UPDATES',2/),
                 TRAILER1=(1:' ',20/,
                         53:'END OF CICS FILE USE STATISTICS',/,
                         53:'-------------------------------',
                 SECTIONS=(1,4,SKIP=2L,
                 TRAILER3=(1:' ',/,
                         63:'----------',
                         75:'----------',
                         87:'----------',
                         99:'----------',
                             111:'----------',
                             123:'----------',/,
                          1:'TOTALS',
                         62:TOT=(57,4,BI,EDIT=(III,III,ITT)),
                         74:TOT=(61,4,BI,EDIT=(III,III,ITT)),
                         86:TOT=(65,4,BI,EDIT=(III,III,ITT)),
                         98:TOT=(69,4,BI,EDIT=(III,III,ITT)),
                             110:TOT=(73,4,BI,EDIT=(III,III,ITT)),
                             122:TOT=(77,4,BI,EDIT=(III,III,ITT))))

File needs and reporting needs do vary from shop to shop.  I
hope that the source code and sample report included above
will help solve some of your shop's problems.  There is rarely
any one solution to any problem, you have to judge the
situation based upon your own needs.  In the event of the
examples listed above not suiting your needs, by all means
modify them to do the job.

                                                          ) Reserved 1990


