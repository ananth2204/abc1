 CMS EXECs for monitoring CICS (continued)
This month we take our first look at a series of CMS EXECs which can be combined
to form a comprehensive CICS monitor.
Keying PF4 displays the Page Allocation Map in refreshable full-screen mode
showing to which subpool each page is allocated - C, T, M, I, S, R, or P.
Program subpool pages that have been marked for deletion are indicated by a
lowercase TpU.  By positioning the cursor on a page and pressing PF2 the
contents of the page can be displayed.  The scope of the display is limited by
the screen size to (number of lines-2) * 64 pages.  This is usually adequate for
systems with 4K DSA pages.
DSA EXEC - INVOKE XEDIT
/* DSA EXEC ******************************************************** */
/*         DYNAMIC STORAGE AREA DISPLAY                              */
/*     PARAMETERS REQUIRED:     VM-ID OF VSE MACHINE                 */
/*                              ADDRESS OF PAM MAP1                  */
/*                              NO. OF PAGES (DEC)                   */
/*                              ADDRESS OF DSA                       */
/* ***************************************************************** */
    ARG VMID ADD PGNUM DSA .
    'X A D A ( PROFILE DSA )' VMID ADD PGNUM DSA
DSA XEDIT - PAM EXTRACT AND DISPLAY
/* DSA XEDIT */
      ARG . . . . . . . VMID VADD PGNUM DSA .
      'CTL % E'
      'CTL - P GRE REV H'            /* USERID NAME        */
      'CTL @ P TUR REV H'            /* BACKGROUND         */
      'CTL : P GRE     H'            /* VIRTUAL ADDRESS    */
      'CTL ? P YEL     H'            /* CHAR DISPLAY       */
      'SET MSGLINE ON 24 OV'
      'CMD OFF'
      'EXT /LSCREEN/'
      CURSOR.1 = 2
      CURSOR.2 = 13
/* ----------------------------------------------------------- */
/* SET UP TRANSLATE TABLE                                      */
/* ----------------------------------------------------------- */
      TABLEI = '00'X,                /* . */
             ||'01'X,                /* C - CONTROL  */
             ||'02'X,                /* T - T.P.     */
             ||'03'X,                /* M - MIXED    */
             ||'04'X,                /* I - ISOLATED */
             ||'05'X,                /* S - SHARED   */
             ||'06'X,                /* R - RPL      */
             ||'08'X,                /* P - PROGRAM  */
             ||'18'X                 /* P - PROGRAM DELETABLE */
      TABLEO = '.CTMISRP'||'97'X
/* ----------------------------------------------------------- */
/* ALIGN ON PREVIOUS FULL-WORD BOUNDARY                        */
/* ------------------------------------------------------------*/
   DO FOREVER
      VADD = RIGHT(VADD,6,'0')
      DADD = X2D(VADD)                 /* DECIMAL START ADDRESS */
      DISP = DADD//4                   /* SURPLUS BYTES AT START */
      DADD = DADD - DISP               /* ALIGNED DECIMAL START ADDR */
      VPAG = SUBSTR(VADD,1,3)          /* VIRTUAL PAGE NO. */
      RESER 1 TUR REV N ' %- 'VMID' %@ DYNAMIC STORAGE AREA',
                 '           PF2=DISPLAY PAGE           PF3=END'
/* ----------------------------------------------------------- */
/* LOCK PAGE IN REAL STORAGE & GET REAL ADDRESS                */
/* ------------------------------------------------------------*/
      PARSE VALUE DIAG(8,'LOCK' VMID VPAG VPAG 'MAP') WITH . . . RADD .
      RPAG = SUBSTR(RADD,1,3)          /* REAL PAGE NUMBER */
      DDSA = X2D(DSA)
/* ----------------------------------------------------------- */
/* LOOP READING STORAGE - 16 BYTES AT A TIME                   */
/* ------------------------------------------------------------*/
       LOOP = FORMAT((PGNUM/64)+0.5,2,0)
      DO I = 1 TO LOOP
        DO K = 1 TO 4
            OFFS = RIGHT(D2X(DDSA),6,'0') /* HEX DISP WITHIN DISPLAY */
            ADD  = RIGHT(D2X(DADD,6,'0')  /* VIRTUAL ADDRESS OF LINE */
            DIS  = SUBSTR(ADD,4,3)        /* HEX PAGE DISP OF LINE   */
            DDIS = X2D(DIS)               /* DEC PAGE DISP OF LINE   */
            RADD = RPAG||DIS              /* REAL ADDRESS OF LINE */
            PARSE VALUE DIAG(8,'DCP' RADD||'.F') WITH . W1 W2 W3 W4 .
            W4 = SUBSTR(W4,1,8)
            IF DDIS >= '4080' THEN CALL NEXTPAGE
            W = W1||W2||W3||W4
            C.K = TRANSLATE(X2C(W),TABLEO,TABLEI,' ')
            DADD = DADD + 16
            END K
          C = C.1||C.2||C.3||C.4
          IF I = LOOP THEN C = SUBSTR(C,1,PGNUM//64)
          RESER I+1 N '%@ %:'OFFS'%@ %?'C'%@'
          DDSA = DDSA + 262144
          END I
/* ----------------------------------------------------------- */
/* UNLOCK PAGE & DISPLAY FOOTING                               */
/* ----------------------------------------------------------- */
      X = DIAG(8,'UNLOCK' VMID VPAG VPAG)
      RESER LOOP+2 N '%@'
      DO I = LOOP+3 TO LSCREEN.1
           RESER I N
           END
/* ----------------------------------------------------------- */
/* READ & PROCESS RESPONSE                                     */
/* ----------------------------------------------------------- */
      CUR S CURSOR.1 CURSOR.2
      READ NOCHANGE TAG
      EXTRACT ?CURS?
      PULL K1 K2 .
      KEYID = K1||K2
      SELECT
            WHEN KEYID = 'PFK3' THEN LEAVE
            WHEN KEYID = 'PKF2' THEN CALL DPAGE
            OTHERWISE NOP
            END
   END
   QUIT
   EXIT
/* ----------------------------------------------------------- */
/* DISPLAY PAGE SUBROUTINE                                     */
/* ----------------------------------------------------------- */
DPAGE:
      PADD = X2D(DSA) + (CURSOR.1 - 2)*262144 + (CURSOR.2 - 13)*4096
      PADD = D2X(PADD)
      'CMS EXEC VSTOR' VMID PADD
      RETURN
/* ----------------------------------------------------------- */
/* UNLOCK CURRENT PAGE & LOCK NEXT PAGE SUBROUTINE             */
/* ----------------------------------------------------------- */
NEXTPAGE:
      X = DIAG(8,'UNLOCK' VMID VPAG VPAG)
      VPAG = D2X(X2D(VPAG) + 1)       /* NEXT VIRTUAL PAGE */
      PARSE VALUE DIAG(8,'LOCK' VMID VPAG VPAG 'MAP') WITH . . . RADD .
      RPAG = SUBSTR(RADD,1,3)        /* NEW REAL PAGE */
      RADD = RPAG||'000'
      PARSE VALUE DIAG(8,'DCP' RADD||'.F') WITH . X1 X2 X3 X4 .
      X4 = SUBSTR(X4,1,8)
      SELECT
          WHEN DDIS = '4084' THEN DO
                                  W4 = X1
                                   END
          WHEN DDIS = '4088' THEN DO
                                  W3 = X1
                                  W4 = X2
                                  END
          WHEN DDIS = '4092' THEN DO
                                  W2 = X1
                                  W3 = X2
                                  W4 = X3
                                  END
          OTHERWISE NOP
          END
       RETURN


Mike Jones
Senior Systems Programmer
Wavin Building Products (UK)  ) Xephon 1988
















































