Temporary storage queues - mass delete

Many CICS products and installation application programs use
temporary storage queues in order to store and save data
between CICS tasks.  In many cases the temporary storage
queue naming convention uses the terminal-id as a suffix or
prefix for queue identification.  When a CICS task abends or
when a terminal is powered off, there is no way of deleting all
temporary storage queues 'belonging' to that terminal.

In order to solve this problem, we use the DFHPEP program, a
user-written program which is given control when a CICS task
abends.  In our DFHPEP there is a link to the program
TSQMDEL, which deletes all the temporary storage queues
suffixed with the terminal-id.

When a terminal is powered-off we use the program
DFHZNEP, a user-written program which is given control
when a terminal is powered off or any other errors occur (only
with VTAM and SNA).  Again there is a link to program
TSQMDEL and the TCTTE address is moved to general
register 1.

The program TSQMDEL can also be called explicitly from any
program with the standard CICS link command:

    EXEC CICS LINK PROGRAM('TSQMDEL') END-EXEC.

This program has been tested under VSE/SP 2.1 and CICS 1.6.

TSQMDEL SOURCE CODE

         COPY  DFHCSADS
         COPY  DFHTCADS
         COPY  DFHTCTTE
TCTTEAR  EQU   11
         COPY  DFHTSMDS
TSUTBAR  EQU   10
TSUTEAR  EQU   9
TSQMDEL  CSECT
         BALR  3,0                   code addressability
         USING *,3
         TM    TCAFCI,TCAFCTRM       task with terminal..?
         BO    BEGINTRM              yes..cont
*                ,                   assume coming from dfhznep
         LR    TCTTEAR,1             get it from r1
         B     BEGIN                 go to begin
BEGINTRM DS    0H
         L     TCTTEAR,TCAFCAAA      address tctte.
BEGIN    DS    0H
         L     TSUTBAR,CSATSMTA      address ts unit table control
         CLC   TSUTCC,=X'0000'       any queues at all..??
         BNH   END                   no queues...end
         B     CRNTCHN               first time start with crnt chain
NEXTCHN  DS    0H
         L     TSUTBAR,TSUTFC        address next chain
         LTR   TSUTBAR,TSUTBAR       is there next chain..??
         BZ    END                   no...end
CRNTCHN  DS    0H
         L     TSUTEAR,TSUTAHI       tsutear=addr of high id queue
         B     CRNTENT               first time start with crnt entry
NEXTENT  DS    0H
         LA    TSUTEAR,TSUTELN(,TSUTEAR) address next entry
CRNTENT  DS    0H
         C     TSUTEAR,TSUTALI          end of chain...??
         BH    NEXTCHN                  yes... go next chain
         CLC   TCTTETI,TSUTEID+4(4)     queue-suffix = term id..??
         BE    DELQUE                   yes..delete it
         B     NEXTENT                  go next entry
DELQUE   DS    0H
         MVC   TCATSDI,TSUTEID          put queue id in tca
         TM    TSUTETC,TSUTEGID         queue type not single..??
         BO    DELQUEG                  yes...delete it
DELQUES  DS    0H
         DFHTS TYPE=RELEASE             delete queue single type
         B     BEGIN                    go get next queue
DELQUEG  DS    0H
         DFHTS TYPE=PURGE               delete queue group type
         B     BEGIN                    go get next queue
END      DS    0H
         DFHPC TYPE=RETURN              return to calling prog
         END

Notes

If your temporary storage queue naming convention is to use
the terminal-id as the prefix of a queue-id, you can customize
the program by replacing the source line:

         CLC   TCTTETI,TSUTEID+4(4)     queue-suffix = term id..??

with the source line:

         CLC   TCTTETI,TSUTEID(4)      queue-prefix = term id..??

If you use a temporary storage naming convention where the
terminal-id is used as the prefix it is possible to reduce some of
the CPU overhead of this program.  Replace the source lines
from the label CRNTCHN to the label DELQUE with the
following source lines.

CRNTCHN  DS    0H
         L     TSUTEAR,TSUTALI       tsutear=@(low id)
         CLC   TCTTETI,TSUTEID       prefix < prefix(low-id)
         BL    END                   yes..end
         L     TSUTEAR,TSUTAHI       tsutear=@(high id)
         B     CRNTENT               first time start with crnt entry
NEXTENT  DS    0H
         LA    TSUTEAR,TSUTELN(,TSUTEAR) address next entry
CRNTENT  DS    0H
         C     TSUTEAR,TSUTALI          end of chain...??
         BH    NEXTCHN                  yes... go next chain
         CLC   TCTTETI,TSUTEID          prefix > prefix(crnt-id)
         BH    NEXTCHN                  yes..next chain
         BL    NEXTENT                  next entry if <
DELQUE   DS    0H

This is possible because the above code exploits the fact that
the temporary storage unit tables are kept in sequence.

Asher Shoshan
Systems Programmer
Migdal Insurance Company (Israel)


