 Swapping the CICS address space
To help ensure that a production CICS gets consistent response times most MVS
sites add program DFHSIP to the MVS Program Properties Table to make it non-
swappable.  This means that all CICS jobs (or jobs that execute program DFHSIP)
will become non-swappable, including those testing CICS jobs that are up all day
and sometimes never used.
When IBM introduced CICS 1.6.0 they provided exits in DFHKCP to allow the user
to alter the CICS swappability status via global user exits.  Clearly then there
are two ways to accomplish this:
%    Make all CICS address spaces swappable and change the production CICS
status once it is up.
%    Make all CICS non-swappable and change the testing CICS status once it is
up.
The following two  programs (SWAP and XKCXWT) use the latter approach.
SWAP
This program sets up the environment to allow the KCP global user exits XKCBWT
and XKCAWT to be used.  XKCXRSTA is the only field modified by SWAP.  It
indicates to XKCXWT what type of processing is required.  A value of TSWAU
denotes swapping is to be performed, while a value of TNOSU indicates that
swapping is to be stopped.  Both XKCXRSTA and XKCXCSTA are read by SWAP when a
user asks for a status display.  Five functions are provided by SWAP.
The TENABLEU function is the first function that must be performed.  It enables
the two CICS exits XKCBWT and XKCAWT.  At the same time it associates the exit
program XKCXWT with these exit points.  Having enabled the exit points, the
global work area (communication block) is formatted as required by XKCXWT.  This
exit program is then started.  The processing for this function is performed by
ENATRN.
TYESU indicates that the CICS address space is to be swapped.  It alters the
communication block to indicate swapping is required.
TNOU indicates that the CICS address space is not to be swapped.  It alters the
communication block to indicate that swapping is no longer required.  This is
handled by NORTN.
TDISABLEU stops the program XKCXWT and disables the two CICS exits XKCBWT and
XKCAWT.  At the same time it frees the global work area.  Whichever option is in
effect (ie swapping or non-swapping) at the time this command is issued, will
stay in effect until the exits are re-enabled and the status changed.  Therefore
a status display is also given as part of the DISABLE function.  This function
is handled by DISRTN.
The TSTATUSU function indicates what the current status of the CICS
communications block is.  It displays both the current requested status and the
current active status.  It is most likely that these will always be the same;
however, in a very busy CICS system they may vary for some period of time.
This program has been written to work both with and without a terminal.  The
idea behind this is simple.  If the program is being run from a terminal the
operator can change the status at will.  If there is no terminal attached to
this program the following is assumed:
%    The program is being invoked by PLTPI processing.
%    The normal status of any CICS system is Tnon-swappableU.
It follows from this that the user requires this CICS system to be Tnon-
swappableU otherwise there is no point executing it via the PLTPI.  It therefore
enables the exits and sets the status to Tnon-swappableU.
SWAP     CSECT
         BALR  R10,0                    SET UP THE
         USING *,R10                              BASE REGISTER &
         USING XKCXBLOK,R4              DEFINE THE DSECT REGISTER.
         B     SWAPSTRT                 SKIP THE EYE-CATCHER
         DC    CL8'SWAP'                EYE-CATCHER - PROGRAM NAME
         DC    CL8'&SYSDATE'            THE DATE IT WAS LAST ASSEMBLED
         DC    CL8'&SYSTIME'            & THE TIME THAT TOOK PLACE.
***    M A I N L I N E    R O U T I N E   ***
SWAPSTRT EXEC  CICS HANDLE CONDITION INVEXITREQ(EXITERR)
         CLC   EIBTRMID,NOTERM          DO WE HAVE A TERMINAL ?
         BNE   SWAP2                      YES - THEN CHK THE CMD
*** NO - ASSUME THIS IS BEING ACTIVATED VIA THE PLTPI TABLE.      ***
*** IN WHICH CASE WE ASSUME THAT THE REQUEST IS TO SWAP THIS CICS ***
         MVC   TERMREQ,BLANKS           INITIALIZE REQ FIELD
          MVC   TERMREQ(3),ENABLE        ENABLE THE EXITS.
         LA    R1,2                     SET UP COMMAND LENGTH - 1
         STH   R1,DATALGTH              & SAVE IT.
         BAL   R9,SWAP4                 GET THE COMMAND EXECUTED.
         MVC   TERMREQ(3),YES           NOW IND. SWAPPING IS REQUIRED.
         LA    R1,2                     SET UP COMMAND LENGTH - 1
         STH   R1,DATALGTH              & SAVE IT.
         BAL   R9,SWAP4                 GET THE COMMAND EXECUTED.
         WTO   'SWAP01 - THIS CICS ADDRESS SPACE IS IN SWAPPING MODE.'
         B     SWAPEXIT                 NOW EXIT THIS PROGRAM.
SWAP2    EXEC CICS RECEIVE SET(R2) LENGTH(DATALGTH)
         LH    R1,DATALGTH              PICK UP TERM DATA LENGTH
         LA    R2,5(R2)                 SKIP OVER TRANID &
         SH    R1,H5                    DECREASE LENGTH BY 5
         MVC   TERMREQ,BLANKS
         CH    R1,H0                    CURRENT DATA LENGTH 0 OR LESS?
         BNH   SWAP8                     YES - I CAN'T HANDLE THAT.
         CH    R1,H8                     NO - LARGER THAN 8 BYTES
         BH    SWAP8                       YES - I CAN'T HANDLE THAT.
         BCTR  R1,0                        NO - MINUS 1 FOR EXECUTE
         STH   R1,DATALGTH                SAVE FOR LATER USE &
         EX    R1,MVC1                    THEN SAVE THE DATA.
         LA    R9,SWAPEXIT              SET UP THE EXIT ADDRESS
*** NOW CHECK THAT THE COMMAND IS VALID, & PROCESS IT IF IT IS. ***
SWAP4    LH    R3,DATALGTH              PICK UP THE COMMAND LENGTH
         LA    R1,CMDTABLE               & ADDRESS THE COMMAND TABLE
SWAP6    CLI   0(R1),X'FF'              AT THE END OF THE TABLE ?
         BE    SWAP8                     YES - THEN INVALID COMMAND
         ICM   R2,X'F',8(R1)             NO - PICKUP ROUTINE ADDRESS
         EX    R3,CLC1                     IS THIS THE COMMAND ?
         BER   R2                           YES - THEN OFF WE GO.
         LA    R1,12(R1)                    NO - ADDRESS NEXT TABLE
         B     SWAP6                           ENTRY & TRY AGAIN.
*** WE HAVE AN INVALID COMMAND. ***
SWAP8    LA    R2,ERRMSG1               ADDRESS INV. CMD. ERROR MSG
         LA    R1,TERMREQ                ADDRESS THE INVALID COMMAND
         BAL   R9,MSGRTN                  & SEND IT TO THE OPERATOR.
SWAPEXIT EXEC CICS RETURN               EXIT FROM THIS PROGRAM
STATMSG  DC    CL80' '
         DC    CL80'        C I C S    S W A P   S T A T U S'
         DC    CL80'       CURRENT REQUESTED    CURRENT ACTIVE'
STATMSGL EQU   *-STATMSG
YES      DC    CL3'YES'
SWAP     DC    CL4'SWAP'
NOSWAP   DC    CL6'NOSWAP'
START    DC    CL5'START'
ENABLE   DC    CL8'ENABLE'
DISABLE  DC    CL8'DISABLE'
INVALID  DC    CL7'INVALID'
BLANKS   DC    CL8' '
NOTERM   DC    4XL1'00'                 NO TERMINAL ATTACHED INDICATOR
EXITPGM  DC    CL8'XKCXWT'              EXIT PROCESSING PROGRAM NAME
XKCAWT   DC    CL8'XKCAWT'              KCP EXIT NAME (AFTER WAIT)
XKCBWT   DC    CL8'XKCBWT'              KCP EXIT NAME (BEFORE WAIT)
HEADER   DC    CL8'$XKCXWT$'            GLOBAL WORK AREA HEADER
TRAILER  DC    CL8'**END **'            GLOBAL WORK AREA TRAILER
H0       DC    H'0'
H5       DC    H'5'
H8       DC    H'8'
CMDTABLE DS    0CL1                     TABLE OF VALID COMMANDS
         DC    CL8'ENABLE'              "ENABLE" COMMAND
         DC    AL4(ENARTN)                 ==> ROUTINE ADDRESS.
         DC    CL8'STATUS'              "STATUS" COMMAND
         DC    AL4(STARTN)                 ==> ROUTINE ADDRESS.
         DC    CL8'YES'                 "YES" COMMAND
         DC    AL4(YESRTN)                 ==> ROUTINE ADDRESS.
          DC    CL8'NO'                  "NO" COMMAND
         DC    AL4(NORTN)                  ==> ROUTINE ADDRESS.
         DC    CL8'DISABLE'             "DISABLE" COMMAND
         DC    AL4(DISRTN)                 ==> ROUTINE ADDRESS.
         DC    XL1'FF'                  END OF COMMAND TABLE INDICATOR
ENAETABL DS    0H                       TABLE OF POSSIBLE ENABLE ERRS
         DC    XL2'8000'                RESPONSE CODE + 1
         DC    AL4(ERRMSG4)               ==> MESSAGE ADDRESS
         DC    XL2'4000'
         DC    AL4(ERRMSG5)               ==> MESSAGE ADDRESS
         DC    XL2'2000'
         DC    AL4(ERRMSG6)               ==> MESSAGE ADDRESS
         DC    XL2'1000'
         DC    AL4(ERRMSG7)               ==> MESSAGE ADDRESS
         DC    XL2'0800'
         DC    AL4(ERRMSG8)               ==> MESSAGE ADDRESS
         DC    XL2'0400'
         DC    AL4(ERRMSG9)               ==> MESSAGE ADDRESS
         DC    XL2'0040'
         DC    AL4(ERRMSG13)              ==> MESSAGE ADDRESS
         DC    XL1'FF'                  END OF TABLE INDICATOR
DISETABL DS    0H                       TABLE OF POSSIBLE DISABLE ERRS
         DC    XL2'4000'                RESPONSE CODE + 1
         DC    AL4(ERRMSG5)               ==> MESSAGE ADDRESS
         DC    XL2'0200'
         DC    AL4(ERRMSG10)              ==> MESSAGE ADDRESS
         DC    XL2'0100'
         DC    AL4(ERRMSG11)              ==> MESSAGE ADDRESS
         DC    XL2'0080'
         DC    AL4(ERRMSG12)              ==> MESSAGE ADDRESS
         DC    XL2'0040'
         DC    AL4(ERRMSG13)              ==> MESSAGE ADDRESS
         DC    XL1'FF'                  END OF TABLE INDICATOR
XTRETABL DS    0H                       TABLE OF POSSIBLE EXTRACT ERRS
         DC    XL2'0400'                RESPONSE CODE + 1
         DC    AL4(ERRMSG9)               ==> MESSAGE ADDRESS
         DC    XL2'0200'
         DC    AL4(ERRMSG10)              ==> MESSAGE ADDRESS
         DC    XL2'0040'
         DC    AL4(ERRMSG13)              ==> MESSAGE ADDRESS
         DC    XL1'FF'                  END OF TABLE INDICATOR
MSGLGTH  DC    H'72'                    MESSAGE LENGTH
XBLKLGTH DC    H'24'                    SIZE OF THE "GLOBAL WORK AREA"
*** EXECUTED INSTRUCTIONS ***
MVC1     MVC   TERMREQ(0),0(R2)         TIOA DATA  ==> PGM DATA AREA
CLC1     CLC   0(0,R1),TERMREQ          TERM. DATA = COMMAND CODE TBL
ERRMSG1  DC    CL72'         IS AN INVALID COMMAND - TRY AGAIN.'
ERRMSG2  DC    CL72'CICS IS ALREADY BEING SWAPPED - REQUEST IGNORED !'
ERRMSG3  DC    CL72'CICS IS NOT BEING SWAPPED - REQUEST IGNORED !'
ERRMSG4  DC    CL72'        -ENABLE INDICATES A PROGRAM ERROR.'
ERRMSG5  DC    CL72'        -THE EXIT ID IS INVALID.'
ERRMSG6  DC    CL72'        -THE EXIT PGM IS ALREADY ENABLED.'
ERRMSG7  DC    CL72'        -THE PGM IS ALREADY ACTIVE FOR EXIT.'
ERRMSG8  DC    CL72'        -GAPROGRAM IS NOT ENABLED.'
ERRMSG9  DC    CL72'        -THE PROGRAM HAS NO WORK AREA.'
ERRMSG10 DC    CL72'        -THE EXIT PROGRAM IS NOT ENABLED !'
ERRMSG11 DC    CL72'        -THE PROGRAM IS NOT ACTIVE FOR EXITID.'
ERRMSG12 DC    CL72'        -THE PROGRAM IS USED BY ANOTHER TASK.'
ERRMSG13 DC    CL72'        -THE USER EXIT INTERFACE NOT INITIALISED.'
SWAPMSG  DC    CL72'YOUR SWAPPING REQUEST HAS BEEN ACCEPTED'
NSWAPMSG DC    CL72'YOUR REQUEST TO STOP SWAPPING HAS BEEN ACCEPTED'
DISABMSG DC    CL72'THE SWAP EXITS HAVE BEEN DISABLED && STOPPED.'
ENABMSG  DC    CL72'THE SWAP EXITS HAVE BEEN ENABLED && STARTED.'
*** 'ENARTN' - ENABLE & START BOTH OF THE SWAP EXITS. ***
ENARTN   ST    R9,ENASAVE               SAVE THE RETURN ADDRESS.
         EXEC CICS ENABLE PROGRAM(EXITPGM) EXIT(XKCBWT)                *
                GALENGTH(XBLKLGTH)
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         EXEC CICS ENABLE PROGRAM(EXITPGM) EXIT(XKCAWT)
*              GAENTRYNAME(EXITPGM)
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         BAL   R9,EXTRACT               EXTRACT THE CONTROL BLK ADDR
         MVC   XKCXHDR,HEADER           SET UP HEADER INFORMATION
         MVC   XKCXTLR,TRAILER           & TRAILER INFORMATION.
         MVC   XKCXRSTA,ENABLE          INDICATE ENABLED BLOCK
         MVC   XKCXCSTA,BLANKS           & CLEAR OUT CURRENT STATUS.
         EXEC CICS ENABLE PROGRAM(EXITPGM) START
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         MVC   XKCXRSTA,START           INDICATE EXITS STARTED.
         LA    R2,ENABMSG               ADDRESS THE ENABLED/START MSG
         SR    R1,R1                     INDICATE NO DATA THEN
         BAL   R9,MSGRTN                   & SEND IT TO THE OPERATOR.
         L     R9,ENASAVE               RESTORE THE RETURN ADDRESS
         BR    R9                        & RETURN.
*** 'YESRTN' - INDICATE THAT SWAPPING IS REQUIRED. ***
YESRTN   ST    R9,YESSAVE               SAVE THE RETURN ADDRESS.
         BAL   R9,EXTRACT               EXTRACT THE CONTROL BLK ADDR
         CLC   XKCXHDR,HEADER           CORRECT HEADER INFORMATION ?
         BNE   ABEND                     NO - THEN CRAP OUT.
         CLC   XKCXTLR,TRAILER           YES - CORRECT TRAILER INFO.
         BNE   ABEND                      NO - THEN CRAP OUT.
         CLC   XKCXRSTA,SWAP            ALREADY REQUESTED SWAPPING ?
         BE    YES4                      YES - THEN WHY ARE WE HERE !
         MVC   XKCXRSTA,SWAP             NO - THEN REQUEST IT.
         LA    R2,SWAPMSG                 ADDRESS THE SWAP MESSAGE &
         SR    R1,R1                        INDICATE NO DATA THEN
         BAL   R9,MSGRTN                     SEND IT TO THE OPERATOR,
         B     YESEXIT                        THEN EXIT.
*** SWAPPING WAS REQUESTED BUT ACCORDING TO THE REQUEST BLOCK WE ***
*** HAD ALREADY REQUESTED SWAPPING. SEE WHAT THE EXIT ROUTINES   ***
*** THOUGHT WE WERE DOING.                                       ***
YES4     CLC   XKCXCSTA,SWAP            ARE EXIT ROUTINES SWAPPING?
         BE    YES6                      YES - THIS IS A DUMB REQUEST.
         BAL   R9,STARTN                 NO - THEN DISPLAY THE STATUS
         B     YESEXIT                    & EXIT.
YES6     SR    R1,R1                    INDICATE NO DATA THEN
         LA    R2,ERRMSG2                ADDR "ALREADY SWAPPING" MSG
         BAL   R9,MSGRTN                  & SEND IT TO THE OPERATOR
YESEXIT  L     R9,YESSAVE               RESTORE THE RETURN ADDRESS
         BR    R9                        & RETURN.
*** 'NORTN' - INDICATE THAT SWAPPING IS NO LONGER REQUIRED. ***
NORTN    ST    R9,NOSAVE                SAVE THE RETURN ADDRESS.
         BAL   R9,EXTRACT               EXTRACT THE CONTROL BLK ADDR
         CLC   XKCXHDR,HEADER           CORRECT HEADER INFORMATION ?
         BNE   ABEND                     NO - THEN CRAP OUT.
         CLC   XKCXTLR,TRAILER           YES - CORRECT TRAILER INFO.
         BNE   ABEND                      NO - THEN CRAP OUT.
         CLC   XKCXRSTA,NOSWAP          ALREADY REQUESTED NOSWAPPING ?
         BE    NO4                       YES - THEN WHY ARE WE HERE !
         MVC   XKCXRSTA,NOSWAP           NO - THEN REQUEST IT.
         LA    R2,NSWAPMSG                ADDRESS THE NOSWAP MESSAGE &
         SR    R1,R1                       INDICATE NO DATA THEN
         BAL   R9,MSGRTN                    SEND IT TO THE OPERATOR,
         B     NOEXIT                        THEN EXIT.
*** NOSWAPPING WAS REQUESTED BUT ACCORDING TO THE REQUEST BLOCK WE ***
*** HAD ALREADY REQUESTED NOSWAPPING. SEE WHAT THE EXIT ROUTINES   ***
*** THOUGHT WE WERE DOING.                                         ***
NO4      CLC   XKCXCSTA,NOSWAP          EXIT ROUTINES NOT SWAPPING?
         BE    NO6                       YES - THIS IS A DUMB REQUEST.
          BAL   R9,STARTN                 NO - THEN DISPLAY THE STATUS
         B     NOEXIT                     & EXIT.
NO6      LA    R2,ERRMSG3               ADDRESS "NOT SWAPPING" MSG
         SR    R1,R1                     INDICATE NO DATA THEN
         BAL   R9,MSGRTN                  & SEND IT TO THE OPERATOR
NOEXIT   L     R9,NOSAVE                RESTORE THE RETURN ADDRESS
         BR    R9                        & RETURN.
*** 'DISRTN' - INDICATE THAT THE EXITS ARE NO LONGER REQUIRED. ***
DISRTN   ST    R9,DISSAVE              SAVE THE RETURN ADDRESS.
         BAL   R9,STARTN               GIVE THE USER A CURRENT STATUS
*** NOW INVALIDATE THE WORK AREA IN CASE OF PROBLEMS. ***
         MVC   XKCXRSTA,INVALID        THE REQUESTED STATUS IS INVALID
         EXEC CICS DISABLE PROGRAM(EXITPGM) EXIT(XKCBWT) STOP
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         EXEC CICS DISABLE PROGRAM(EXITPGM) EXIT(XKCAWT) STOP
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         EXEC CICS DISABLE PROGRAM(EXITPGM) EXITALL
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         LA    R2,DISABMSG              TELL USER DISABLE/STOP REQUEST
         SR    R1,R1                      IS
         BAL   R9,MSGRTN                    COMPLETE.
DISEXIT  L     R9,DISSAVE               RESTORE THE RETURN ADDRESS
         BR    R9                        & RETURN.
*** 'STARTN' - DISPLAY THE CURRENT STATUS OF THE SWAP EXITS. ***
STARTN   ST    R9,STASAVE              SAVE THE RETURN ADDRESS.
         BAL   R9,EXTRACT               EXTRACT THE CONTROL BLK ADDR
         CLC   XKCXHDR,HEADER           CORRECT HEADER INFORMATION ?
         BNE   ABEND                     NO - THEN CRAP OUT.
         CLC   XKCXTLR,TRAILER           YES - CORRECT TRAILER INFO.
         BNE   ABEND                      NO - THEN CRAP OUT.
*** ALL IS O.K. SO SET UP THE DISPLAYS AS REQUIRED. ***
         MVC   STATMSG0(STATMSGL),STATMSG  SET UP THE STATISTICS MSG
         MVI   STATMSG3,C' '           CLEAR OUT 1ST BYTE THEN ....
         MVC   STATMSG3+1(L'STATMSG3-1),STATMSG3  PROPAGATE IT.
         LA    R1,2                    RUN TWICE AROUND THIS LOOP
         LA    R2,STATREQ              1ST MESSAGE GOES INTO "STATREQ"
         LA    R3,XKCXRSTA             1ST INFO. COMES FROM HERE.
STA2     MVC   0(4,R2),SWAP            ASSUME SWAP WILL BE RIGHT
         CLC   0(L'XKCXRSTA,R3),SWAP   IS THE STATUS SWAPPING ?
         BE    STA4                     YES - THEN I'VE GOT IT.
         MVC   0(5,R2),START            NO - ASSUME START ....
         CLC   0(L'XKCXRSTA,R3),START    IS THIS CORRECT?
         BE    STA4                       YES - THEN I'VE GOT IT.
         MVC   0(6,R2),NOSWAP             NO - ASSUME NO SWAPPING ...
         CLC   0(L'XKCXRSTA,R3),NOSWAP    IS THIS CORRECT ?
         BE    STA4                        YES - THEN I'VE GOT IT.
         MVC   0(6,R2),ENABLE              NO - ASSUME ENABLE ....
         CLC   0(L'XKCXRSTA,R3),ENABLE     IS THIS CORRECT ?
         BE    STA4                         YES - THEN I'VE GOT IT.
         MVC   0(7,R2),DISABLE              NO - ASSUME DISABLE ....
         CLC   0(L'XKCXRSTA,R3),DISABLE     IS THIS CORRECT ?
         BE    STA4                          YES - THEN I'VE GOT IT.
         MVC   0(7,R2),INVALID               NO - THEN IT'S INVALID !
STA4     LA    R2,STATACT              2ND MESSAGE GOES INTO "STATACT"
         LA    R3,XKCXCSTA             2ND INFO. COMES FROM HERE.
         BCT   R1,STA2
         CLC   EIBTRMID,NOTERM          DO WE HAVE A TERMINAL ?
         BE    STA6                       NO - SEND NO MESSAGE
         EXEC CICS SEND FROM(STATMSG0) LENGTH(320)
STA6     L     R9,STASAVE               RESTORE THE RETURN ADDRESS
         BR    R9                        & RETURN.
*** 'EXTRACT' - EXTRACTS THE ADDRESS OF THE EXITS CONTROL BLOCK & ***
***             SETS UP THE XKCXWT DSECT REGISTER (R4).           ***
 EXTRACT  EXEC CICS EXTRACT EXIT PROGRAM(EXITPGM) GALENGTH(LXBLOK)      *
               GASET(R4)
         TM    EIBRCODE,X'80'           ANY PROBLEMS ?
         BO    ABEND                     YES - TERMINATE THE TASK
         BR    R9                        NO  - THEN RETURN TO CALLER.
*** 'EXITERR' - HANDLES ERRORS OCCURRING WITH "EXIT" PROCESSING. ***
EXITERR  CLI   EIBFN,X'22'               IS THIS AN EXIT REQUEST
         BNE   EXITTTABND                 NO - ABEND.
         CLI   EIBRCODE,X'80'             YES - IS THERE AN ERROR
         BNE   EXITABND                    NO - ABEND.
         LA    R2,ENAETABL                 YES - ASSUME ENABLE ERROR
         MVC   EXITMSG,ENABLE
         CLI   EIBFN+1,X'02'               IS THIS AN ENABLE ERROR ?
         BE    EXI2                         YES - SEARCH TABLE 4 MSG
         LA    R2,DISETABL                 YES - ASSUME DISABLE ERROR
         MVC   EXITMSG,DISABLE
         CLI   EIBFN+1,X'04'               IS THIS A DISABLE ERROR ?
         BE    EXI2                         YES - SEARCH TABLE 4 MSG
         LA    R2,XTRETABL                 YES - ASSUME EXTRACT ERROR
         MVC   EXITMSG,=CL8'EXTRACT'
         CLI   EIBFN+1,X'06'               IS THIS AN EXTRACT ERROR ?
         BNE   EXITABND                     YES - SEARCH TABLE 4 MSG
EXI2     CLI   0(R2),X'FF'                 END OF THE TABLE ?
         BE    EXITABND                     YES - NOT FOUND SO ABEND
         CLC   0(2,R2),EIBRCODE+1           NO -IS THIS ERROR CODE?
         BE    EXI4                           YES - GOOD I'VE GOT IT.
         LA    R2,6(R2)                       NO - TRY THE NEXT ENTRY
         B     EXI2
EXI4     ICM   R2,X'F',2(R2)               GET THE MESSAGE ADDRESS
         LA    R1,EXITMSG                   AND THE IDENTIFIER ADDRESS
         BAL   R9,MSGRTN                    & SEND THE MESSAGE.
         B     SWAPEXIT
*** TO AVOID EIB AREAS ALTERING ABEND THE PROGRAM WITH AN "ASRA" ***
EXITABND DC    CL4'ASRA'                   GIVE US AN ASRA 0001
         B     SWAPEXIT                      & EXIT (IF YOU CAN).
ABEND    STM   R0,R15,ABSAVE            SAVE THE BAD REGISTERS
         EXEC CICS ABEND ABCODE(SWAP)
         B     SWAPEXIT                 EXIT.
*** 'MSGRTN' - SEND MESSAGE TO THE TERMINAL SUPPLYING INPUT INTO  ***
***            THIS PROGRAM. IT EXPECTS R2 TO ADDRESS THE MSG     ***
***            TO BE SENT & THAT THAT MSG WILL BE NO LONGER       ***
***            THAN 72 BYTES. IT ALSO REQUIRES R1 TO ADDRESS      ***
***            8 BYTES OF DATA TO BE ADDED TO THE START OF THE    ***
***            MESSAGE OR R1 SHOULD CONTAIN ZERO IF THERE IS NONE.***
MSGRTN   CLC   EIBTRMID,NOTERM          DO WE HAVE A TERMINAL ?
         BER   R9                         NO - SEND NO MESSAGE
         MVC   MSGAREA,0(R2)            PLACE THE MESSAGE IN AREA
         LTR   R1,R1                    IS THERE ANY OPTIONAL DATA ?
         BZ    MSG2                      NO - BYPASS OPTIONAL DATA
         MVC   MSGAREA(8),0(R1)          YES- MOVE IN THE DATA
MSG2     EXEC CICS SEND FROM(MSGAREA) LENGTH(MSGLGTH)
*** TEST HERE FOR ERRORS. ***
         BR    R9                       NOW RETURN TO CALLER.
CLRSCRN  CLC   EIBTRMID,NOTERM          DO WE HAVE A TERMINAL ?
         BER   R9                         NO - SEND NO MESSAGE
         EXEC CICS SEND FROM(BLANKS) LENGTH(8) ERASE
         BR    R9                       NOW RETURN TO CALLER.
         LTORG
DFHEISTG DSECT
ENASAVE  DS    F                        BRANCH & LINK REGISTER SAVE
YESSAVE  DS    F                         AREAS. ONE PER ROUTINE.
NOSAVE   DS    F
DISSAVE  DS    F
STASAVE  DS    F
STATMSG0 DC    CL80' '
STATMSG1 DC    CL80'        C I C S    S W A P    S T A T U S'
 STATMSG2 DC    CL80'       CURRENT REQUESTED     CURRENT ACTIVE'
STATMSG3 DS    CL80
         ORG   STATMSG3
         DS    CL13
STATREQ  DS    CL1
         DS    CL19
STATACT  DS    CL1
         ORG
ABSAVE   DS    16F                      ABEND REGISTER SAVE AREA
EXITMSG  DS    CL8                      EXIT 'TYPE' ERROR MESSAGE
TERMREQ  DS    CL8                      TERMINAL DATA
DATALGTH DS    H                         & THE LENGTH OF THAT DATA
LXBLOK   DS    H
MSGAREA  DS    CL72                     MESSAGE AREA
         LTORG
XKCXBLOK DSECT
XKCXHDR  DS    CL8'$XKCXWT$'            BLOCK HEADER "EYECATCHER"
XKCXRSTA DS    CL3                      REQUEST STATUS INDICATOR
XKCXCSTA DS    CL3                      CURRENT STATUS INDICATOR
XKCXFLAG DS    XL1                      FLAG INDICATOR - NOT USED
         DS    XL1                      SPARE          - NOT USED
XKCXTLR  DS    CL8'**END **'            BLOCK TRAILER "EYECATCHER"
         END   SWAPTRN
XKCXWT
This is the CICS exit program that is associated (by SWAP) with the two KCP
exits XKCBWT and XKCAWT.
XKCBWT (before wait) is executed by CICS just prior to CICS issuing a system
wait.  At this point it is possible to get CICS into a swappable state by
setting the return code to 4.  On the other hand, XKCAWT (after wait) is
executed by CICS just after it gets control back from the system wait.  At this
point we can get CICS into a non-swappable condition by setting the return code
to 8.
XKCXWT is the exit program associated with XKCBWT and XKCAWT.  XKCXWT checks the
XKCXRSTA field (required status) in the global work area to see if it is the
same as XKCXCSTA (current status).  If it is then no processing is done.  If not
then there are three possibilities:
%    Change the status to TswappingU.  XKCXWT indicates the change has been made
by making XKCXCSTA the same as XKCXRSTA and setting the reurn code to  4.
%    Change the status to Tnon-swappingU.  XKCXWT indicates the change as above
and sets the return code to 8.
%    Ask for an invalid or a Tno actionU request.  In this case XKCXWT sets the
XKCXCSTA field to that of the XKCXRSTA field and sets the return code to 0.
As you can see from the code, any information passed to the exit programs must
come via the global work area.
To minimise processing this routine has been coded to avoid any unnecessary
instructions.  To this end you will notice that as soon as we know that we are
processing for the correct exit we compare the two status fields (XKCXRSTA and
XKCXCSTA).  If these two fields are the same no more work will be done.  To this
end should we go through all of this code only to find that no work need be
done, then we set these two fields equal.  This should then avoid further
unnecessary processing the next time through.
Maximum use is made of the registers that are already set up (note the use of
register 15 as the base register and of register to register instructions
wherever possible, all this is an attempt to reduce the processing time of this
program to a minimum.
It should also be noted that once this exit has been enabled and started it is
possible to alter the CICS status by changing the work area using any virtual
storage altering program (eg DFHBUG etc).  Be sure, however, to alter only the
XKCXRSTA field and not both fields.  If you alter both this exit will minimise
its processing and do nothing.
XKCXWT   CSECT
         USING XKCXWT,R15               SET UP THE BASE REGISTER
         STM   R14,R12,12(R13)          SAVE THE CALLERS REGISTERS
         USING DFHUEPAR,R1              SET UP THE DSECT REGISTER
         B     SYSTART                  & SKIP THE EYE-CATCHER
         DC    CL6'XKCXWT'              EYE-CATCHER PROGRAM NAME
          DC    CL8'&SYSDATE'            THE DATE IT WAS LAST ASSEMBLED
         DC    CL5'&SYSTIME'            & THE TIME THAT TOOK PLACE.
SYSTART  DS    0H
         L     R2,UEPEXN                ADDRESS THE EXIT NUMBER.
         XR    R4,R4                     SET DEFAULT RETURN CODE OF 0
         TM    0(R2),XKCBWT+XKCAWT      IS THIS THE SWAP EXITS ?
         BM    XKCXA                     YES - GOOD OH.
XKCXEXIT LR    R15,R4                   SET UP THE RETURN CODE IN R15
         LM    R1,R4,24(R13)            RESTORE THE USED REGISTERS
         BR    R14                       & RETURN TO CICS.
*** SET UP ADDRESSABILITY TO THE COMMUNICATIONS WORK AREA "BLK" ***
XKCXA    L     R3,UEPGAA                ADDRESS THE GLOBAL COMMS BLK
         USING XKCXBLOK,R3              SET UP ADDRESSABILITY
         LTR   R3,R3                    DO WE HAVE A WORK AREA ?
         BZ    XKCXEXIT                  NO - THEN EXIT FAST.
         CLC   XKCXRSTA,XKCXCSTA         YES - ANY CHANGES REQUIRED ?
         BE    XKCXEXIT                    NO - THEN EXIT.
*** NOW VERIFY THAT WE HAVE THE CORRECT CONTROL BLOCK. ***
         CLC   XKCXHDR,HEADER           CORRECT HEADER INFORMATION ?
         BNE   XKCXEXIT                  NO - THEN EXIT.
         CLC   XKCXTLR,TRAILER           YES - CORRECT TRAILER INFO ?
         BNE   XKCXEXIT                   NO - THEN EXIT.
*** WE HAVE THE CORRECT COMMUNICATION BLOCK - NOW SEE WHAT CHANGE ***
*** IS REQUIRED & IF THIS IS THE EXIT TO DO IT.                   ***
         CLC   XKCXRSTA,SWAP            IS REQUEST TO START SWAPPING ?
         BNE   XKCXC                     NO - TRY STOPPING IT.
         TM    0(R2),XKCBWT              YES - IS THIS THE RIGHT EXIT?
         BNO   XKCXEXIT                    NO - GIVE UP THEN.
         MVC   XKCXCSTA,SWAP               YES - IND. SWAPPING O.K.
         LA    R4,4                         SET RETURN CODE,
         B     XKCXEXIT                      & EXIT.
XKCXC    CLC   XKCXRSTA,NOSWAP          IS REQUEST NOT TO SWAP ?
         BNE   XKCXE                     NO - IT MUST BE A NON-REQ.
         TM    0(R2),XKCAWT              YES - IS THIS THE RlGHT EXIT?
         BNO   XKCXEXIT                    NO - GIVE UP THEN.
         MVC   XKCXCSTA,NOSWAP             YES - IND. SWAPPING O.K.
         LA    R4,8                         SET RETURN CODE,
         B     XKCXEXIT                      & EXIT.
***  THE REQUEST IS FOR NEITHER SWAPPING NOR NON-SWAPPING. SO TO  ***
***      PREVENT ALL OF THIS CHECKING BEING DONE AGAIN WE SET THE ***
***      CURRENT STATUS TO THAT OF THE REQUESTED STATUS.          ***
XKCXE    MVC   XKCXCSTA,XKCXRSTA        MAKE CURRENT THE SAME AS REQSD
         B     XKCXEXIT                  THEN EXIT.
SWAP     DC    CL3'SWA'
NOSWAP   DC    CL3'NOS'
HEADER   DC    CL8'$XKCXWT$'
TRAILER  DC    CL8'**END **'
         LTORG
*** 'XKCXBLOK' - THIS DSECT DEFINES THE EXIT ROUTINES CONTROL BLK. ***
XKCXBLOK DSECT
XKCXHDR  DS    CL8'$XKCXWT$'            BLOCK HEADER "EYECATCHER"
XKCXRSTA DS    CL3                      REQUEST STATUS INDICATOR
XKCXCSTA DS    CL3                      CURRENT STATUS INDICATOR
XKCXFLAG DS    XL1                      FLAG INDICATOR - NOT USED
         DS    XL1                      SPARE          - NOT USED
XKCXTLR  DS    CL8'**END **'            BLOCK TRAILER "EYECATCHER"
         DFHUEXIT TYPE=EP
         END   XKCXWT


     ) Reserved 1988





