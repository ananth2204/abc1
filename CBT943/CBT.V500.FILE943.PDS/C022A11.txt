 An MVS Display Active (DA) for CICS


BACKGROUND

Our operating system environment consists of the following:

%    MVS SP 1.3.5 running on a 4381 P02
%    CICS 1.6.1 with the DL/I interface and IMS/DB 1.3.0
%    VM Release 3 running on a 4341 model 12.

We have just completed a five-month project to convert from OS/VS1 running under
VM to a native MVS system.

All development work is done on the 4341 using CMS.  Work is sent across to the
4381 for batch processing using an RSCS/JES link on a channel-to-channel
adaptor.  We run test and production CICS systems on the 4381, and access to
test CICS from the 4341 is achieved using a front-end processor connecting the
two machines and VM Passthrough.

At present the programmers have not been given access to TSO for the following
reasons:

%    To reduce the workload on the production machine
%    Resource required to convert from CMS to TSO
%    The CMS editor (XEDIT) is extremely powerful
%    Lack of security.


THE PROBLEM

There is an extremely powerful tool for TSO from IBM called Spool Display and
Search Facility (SDSF).  It allows the user, if authorised, to do such things
as:

%    Display what's running on the MVS system (DA command)
%    Display the MVS log (SYSLOG)
%    Display the input and output queues
%    Issue operator commands
%    Display output for a job as it is created.

It was decided that something like this would be extremely useful in the CICS
environment if TSO was not available.  For instance, if you have just created a
batch job using the Screen Definition Facility (SDF), you can now see if it is
processing.

The following software is only the first part of the solution - an active
display for the CICS user.  An example of a typical display is shown in Figure
1.  Future development will include a display of the SMF logs with various
search facilities.


THE PROGRAM

The program is written in Assembler with a mixture of macro-level and command-
level calls.  The map was generated using SDF and in its present form supports
18 address spaces or ASIDs.  The layout of the screen in terms of SDF field
definitions is shown in Figure 2.  The MVS DSECT macros require the SYSLIB
dataset SYS1.AMODGEN.


THE CODE

DFHEISTG DSECT
         TITLE 'TEST CICS - OS DISPLAY'
         COPY CICSDA              ACTIVE MAP DEFINITION
          COPY DFHBMSCA            STD BMS ATTRIBUTES
         COPY DFHAID              STD AID BYTE SETTINGS
* FILE INDICATORS **********************************
BLANKS   DS    CL80
CHARTAB  DS    CL193
         DS    CL9
         DS    CL7
         DS    CL9
         DS    CL8
         DS    CL8
         DS    CL6
         DS    CL10
         DS    CL6
REAL     DS    H
DATE     DS    CL8                 DATE
TIME     DS    CL8                 TIME
INPUT    DS    CL6                 MAXIMUM INPUT AREA
FILLER   DS    CL3                 TRAILER FOR SBA
LEN      DS    H                   LENGTH OF INPUT
CVTOFF   EQU   X'4C'               CVT POINTED TO BY LOCATION 76
MSG      DS    CL79
WORK     DS    D
EWORK    DS    CL6
         CVT   DSECT=YES           DSECT FOR CVT
         IHAASVT                   DSECT FOR ASVT
         IHAASCB                   DSECT FOR ASCB
         IEECHAIN
         IRAOUCB
CICSDIS  DFHEIENT CODEREG=(3,10,12)
         MVI   BLANKS,C' '         BLANK OUT BLANKS
         MVC   BLANKS+1(79),BLANKS
         MVI   CHARTAB,C' '        BLANK OUT CHARTAB
         MVC   CHARTAB+1(255),CHARTAB
         MVC   CHARTAB+193(9),=CL9'ABCDEFGHI'
         MVC   CHARTAB+209(9),=CL9'JKLMNOPQR'
         MVC   CHARTAB+226(8),=CL8'STUVWXYZ'
         MVC   CHARTAB+240(10),=CL10'0123456789'
         MVC   MSG,BLANKS
         EXEC  CICS HANDLE,                                            C
               CONDITION,                                              C
               MAPFAIL(FAIL),      MAP ERROR                           C
               ERROR(ABHNDL)       ANY OTHER ERROR
         MVC   DATE,BLANKS
         MVC   TIME,BLANKS
         MVC   INPUT,BLANKS
         MVC   LEN,=H'6'                MAXIMUM INPUT TO BE READ
         EXEC  CICS RECEIVE,                                           C
               INTO(INPUT),                                            C
               LENGTH(LEN)
         CLI   INPUT,X'11'              CHECK FOR LEADING SBA ?
         BNE   NOSBA                    NO...
         MVC   FILLER(3),BLANKS         YES..
         MVC   INPUT(6),INPUT+3         SHIFT RIGHT 3 BYTES
NOSBA    CLI   INPUT+2,C'A'
         BE    DISPLAY
         MVC   MSG,BLANKS
         MVC   MSG(15),MSG1
         MVC   MSG+18(11),MSGA
         B     EXIT
FAIL     MVC   MSG,BLANKS
         MVC   MSG(16),MSG2
         MVC   MSG+19(11),MSGA
         B     EXIT
ABHNDL   MVC   MSG,BLANKS
         MVC   MSG(17),MSG7
         MVC   MSG+20(24),MSGC
          B     EXIT
DISPLAY  EXEC  CICS SEND,                                              C
               MAP('CICSDA'),                                          C
               ERASE,                                                  C
               MAPONLY
         EXEC  CICS HANDLE,                                            C
               AID,                                                    C
               PF3(RETN),                                              C
               ENTER(CICSDA2),                                         C
               ANYKEY(CICSDA2),                                        C
               CLEAR(RETN)
CICSDA2  EXEC  CICS ASKTIME
         MVC   DATEO,BLANKS        INITIALISE DATE FIELD
         MVC   TIMEO,BLANKS        INITIALISE TIME FIELD
         UNPK  DATE,EIBDATE        UNPACK CURRENT DATE
         MVZ   DATE+7(1),ZONE      MOVE IN ZONE BYTE
         MVC   DATEO+2(2),DATE+3   MOVE DATE TO SCREEN
         MVI   DATEO+4,C'.'        MOVE IN PUNCTUATION
         MVC   DATEO+5(3),DATE+5   MOVE DATE TO SCREEN
         UNPK  TIME,EIBTIME        UNPACK CURRENT TIME
         MVZ   TIME+7(1),ZONE      MOVE IN ZONE BYTE
         MVC   TIMEO+0(2),TIME+2   MOVE TIME TO SCREEN
         MVI   TIMEO+2,C'.'        MOVE IN PUNCTUATION
         MVC   TIMEO+3(2),TIME+4   MOVE TIME TO SCREEN
         MVI   TIMEO+5,C'.'        MOVE IN PUNCTUATION
         MVC   TIMEO+6(2),TIME+6   MOVE TIME TO SCREEN
         LA    R1,T1L              POINT R1 TO FIRST ASID
         LA    R2,18               SET R2 TO 18 FOR MAX. ASID'S
TASKDA6  MVI   2(R1),X'F0'
         MVC   3(3,R1),BLANKS      INITIALISE OUTPUT SCREEN LINE
         MVI   8(R1),X'F0'
         MVC   9(3,R1),BLANKS
         MVI   14(R1),X'F0'
         MVC   15(8,R1),BLANKS
         MVI   25(R1),X'F0'
         MVC   26(8,R1),BLANKS
         MVI   36(R1),X'F0'
         MVC   37(8,R1),BLANKS
         MVI   47(R1),X'F0'
         MVC   48(2,R1),BLANKS
         MVI   52(R1),X'F0'
         MVC   53(7,R1),BLANKS
         MVI   62(R1),X'F0'
         MVC   63(13,R1),BLANKS
         LA    R1,76(R1)
         BCT   R2,TASKDA6
         LA    R1,T1L              POINT R1 TO FIRST ASID
         L     R6,CVTOFF           POINT TO CVT
         USING CVT,R6
         L     R6,CVTASVT          GET ADDRESS OF ASVT
         DROP  R6
         USING ASVT,R6
         L     R2,ASVTMAXU         GET NUMBER OF ADDRESS SPACE IDS
         LA    R6,ASVTENTY         POINT TO FIRST ENTRY
MVSDA01  TM    0(R6),ASVTAVAI      IS ENTRY AVAILABLE
         BO    MVSDA09             NO...GET NEXT ENTRY
         L     R8,0(R6)            GET ASCB ADDRESS
         LA    R8,0(R8)            CLEAR TOP BYTE
         LTR   R8,R8               ASCB POINTER ZERO ?
         BZ    MVSDA09             YES...NOT ACTIVE SO GET NEXT ENTRY
         USING ASCB,R8
         L     R9,ASCBOUCB         LOAD OUCB ADDRESS
         LA    R9,0(R9)            CLEAR TOP BYTE
         LTR   R9,R9               ANY OUCB ?
         BZ    MVSDA09             NO...GET NEXT ENTRY
         USING OUCB,R9             OUCB ADDRESSING
          TM    OUCBSFL,OUCBINV     IS OUCB VALID ?
         BO    MVSDA09             NO...GET NEXT ENTRY
         MVC   REAL,ASCBFMCT       FRAME COUNT
         LH    R0,ASCBASID         GET ADDRESS SPACE ID
         CVD   R0,WORK             CONVERT R0 TO DECIMAL
         MVC   EWORK,=X'404040202021' EDIT MASK
         ED    EWORK+2(4),WORK+6   UNPACK ASID
         MVC   3(3,R1),EWORK+3     MOVE IN EDITED ASID
         L     R5,ASCBJBNI         ADDRESS OF JOBNAME FOR JOBS
         LA    R5,0(R5)            CLEAR TOP BYTE
         LTR   R5,R5               ZERO?
         BZ    MVSDA02             YES..NOT A JOB
         SH    R5,=H'8'            POINT TO CSCB START
         USING CHAIN,R5            CSCB ADDRESSING
         MVC   15(8,R1),CHKEY      MOVE IN JOBNAME
         MVC   37(8,R1),CHSTEP     MOVE IN STEPNAME
         MVC   26(8,R1),CHPROCSN   MOVE IN PROCNAME
         MVC   9(3,R1),=C'JOB'       TYPE = JOB
         B     MVSDA08
MVSDA02  L     R5,ASCBCSCB         CSCB ADDRESS
         LA    R5,0(R5)            CLEAR TOP BYTE
         LTR   R5,R5               ANY CSCB
         BZ    MVSDA05             NO...
         TM    OUCBYFL,OUCBSTT+OUCBMNT IS THIS A START OR MOUNT ?
         BZ    MVSDA03             MUST BE A TSO USER
         MVC   15(8,R1),CHCLS      MOVE IN JOBNAME
         MVC   37(8,R1),CHKEY      MOVE IN STEPNAME = TASKID
         MVC   26(8,R1),CHPROCSN   MOVE IN PROCNAME
         MVC   9(3,R1),=C'STC'     TYPE = STARTED TASK
         B     MVSDA08
MVSDA03  MVC   15(8,R1),CHKEY      MOVE IN JOBNAME
         MVC   37(8,R1),CHCLS      MOVE IN STEPNAME = LOGON ID
         MVC   9(3,R1),=C'TSU'     TYPE = TSO USER
         B     MVSDA08
         DROP  R5
MVSDA05  MVC   9(3,R1),=C'STC'      TYPE = STARTED TASK
         ICM   R5,15,ASCBJBNS       GET JOBNAME ADDRESS
         BNZ   MVSDA10
         MVC   63(13,R1),=C'STARTING      '
         B     MVSDA08
MVSDA10  MVC   15(8,R1),0(R5)       MOVE IN JOBNAME
MVSDA08  CLC   15(4,R1),=C'INIT'
         BE    MVSDA09
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB IS USER IN TRANSITION
         BNZ   MVSDA12
         TM    ASCBRCTF,ASCBOUT    IS USER SWAPPED OUT ?
         BO    MVSDA13
         TM    OUCBSFL,OUCBNSW     IS ADDRESS SPACE NON-SWAPPABLE
         BO    MVSDA14
         MVI   62(R1),X'F8'        HIGH INTENSITY
         MVC   63(13,R1),=C'SWAPPED-IN   ' INDICATE IN MEMORY
         B     MVSDA15
MVSDA14  MVC   63(13,R1),=C'NON-SWAPPABLE' INDICATE NON-SWAPPABLE
         B     MVSDA15
MVSDA12  MVC   63(13,R1),=C'IN-TRANSITION' INDICATE IN TRANSITION
         B     MVSDA15
MVSDA13  MVC   63(13,R1),=C'SWAPPED-OUT  '  INDICATE USER SWAPPED OUT
MVSDA15  LH    R0,REAL             GET PAGE FRAME COUNT
         SLL   R0,2                NUMBER OF K BYTES
         CVD   R0,WORK             GET IN DECIMAL
         L     R0,WORK+4           SHIFT OF SIGN
         SRL   R0,4
         ST    R0,WORK+4
         MVC   EWORK,=X'4020202120D2' EDIT MASK
         ED    EWORK,WORK+6        EDIT AMOUNT OF REAL STORAGE
         MVC   53(7,R1),EWORK      MOVE TO OUTPUT FIELD
          CLC   63(13,R1),=C'SWAPPED-OUT  ' IS ASID SWAPPED OUT
         BE    MVSDA09
         LH    R0,ASCBSEQN         GET DESPATCHING ORDER
         CVD   R0,WORK             CONVERT R0 TO DECIMAL
         MVC   EWORK,=X'404040202021' EDIT MASK
         ED    EWORK+2(4),WORK+6   UNPACK ORDER
         MVC   48(2,R1),EWORK+4    MOVE IN EDITED ORDER
         LA    R1,76(R1)
MVSDA09  LA    R6,4(R6)            NEXT ASCB
         BCT   R2,MVSDA01          PROCESS NEXT ASCB
         EXEC  CICS SEND,                                              C
               MAP('CICSDA'),                                          C
               FROM(CICSDAI),                                          C
               DATAONLY,                                               C
               FREEKB
         EXEC  CICS RECEIVE,                                           C
               MAP('CICSDA')
         MVC   MSG,BLANKS
         MVC   MSG(11),MSG3
         MVC   MSG+14(24),MSGC
         B     EXIT
         LTORG
MSG1     DC    CL15'INVALID COMMAND'
MSG2     DC    CL16'SCREEN I/O ERROR'
MSG3     DC    CL11'LOGIC ERROR'
MSG4     DC    CL20'TRANSACTION COMPLETE'
MSG7     DC    CL17'TRANSACTION ABEND'
MSGA     DC    CL11'ENTER ''D A'''
MSGC     DC    CL25'INFORM SYS PROGS EXT 2321'
ZONE     DC    X'F1'
RETN     MVC   MSG,BLANKS
         MVC   MSG(20),MSG4
EXIT     EXEC  CICS SEND,                                              C
               TEXT,                                                   C
               FROM(MSG),                                              C
               ERASE,                                                  C
               FREEKB
         CLI   EIBAID,DFHCLEAR
         BNE   EXIT2
         EXEC  CICS XCTL,                                              C
               PROGRAM('BRITSFP')
EXIT2    EXEC  CICS RETURN
         END   CICSDIS



D C Warner
Technical Support Manager
Britvic Corona Ltd (UK)  ) Xephon 1987

