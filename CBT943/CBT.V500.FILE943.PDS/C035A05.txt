 CMS EXECs for monitoring CICS (continued)
This month we look at the latest in our series of CMS EXECs which combine to
form a comprehensive CICS monitor.
Keying PF6 will display the suffixes of CICS tables and control programs from
the SIT together with the override parameters entered at start-up time.  Keying
PF2 will dump the SIT.
SIT EXEC
/* SIT EXEC ******************************************************* */
/*                  CICS SYSTEM INITIALIZATION TABLE                */
/*             PARAMETERS REQUIRED: VM-ID OF VSE MACHINE            */
/*                                  ADDRESS OF SIT                  */
/* **************************************************************** */
    ARG VMID SIT .
    'X A D A ( PROFILE SIT )' VMID SIT
SIT XEDIT
/* SIT XEDIT */
      ARG . . . . . . . VMID SIT .
/* ---------------------------------------------------------------- */
/* OVERRIDE PARAMETERS                                              */
/* ---------------------------------------------------------------- */
      VADD = HEXADD(SIT,1C)
      CALL FWORD
      OVRPM  = SUBSTR(FWORD,3,6)            /* ADD OF OVPARAMS  */
      VADD = OVRPM
      CALL FWORD
      OVLEN  = X2D(SUBSTR(FWORD,1,4)        /* LEN OF OVPARAMS  */
      VADD = HEXADD(OVRPM,2)                /* START */
      OVPS = ''
      DO I = 1 TO OVLEN%4 + 1
           CALL FWORD
           OVPS = OVPS||FWORD
           VADD = HEXADD(VADD,4)
           END I
      OVPS = X2C(SUBSTR(OVPS,1,2*(OVLEN-1)))
      SITSF = SUBSTR(OVPS,5,2)
/* ---------------------------------------------------------------- */
/* TABLE SUFFIXES                                                   */
/* ---------------------------------------------------------------- */
      VADD = HEXADD(SIT,D0)
      CALL FWORD
      ALTSF  = X2C(SUBSTR(FWORD,1,4))       /* ALT SUFFIX       */
      DCTSF  = X2C(SUBSTR(FWORD,5,4))       /* DCT SUFFIX       */
      VADD = HEXADD(SIT,D4)
      CALL FWORD
      FCTSF  = X2C(SUBSTR(FWORD,1,4))       /* FCT SUFFIX       */
      JCTSF  = X2C(SUBSTR(FWORD,5,4))       /* JCT SUFFIX       */
      VADD = HEXADD(SIT,D8)
      CALL FWORD
      NLTSF  = X2C(SUBSTR(FWORD,1,4))       /* NLT SUFFIX       */
      PCTSF  = X2C(SUBSTR(FWORD,5,4))       /* PCT SUFFIX       */
      VADD = HEXADD(SIT,DC)
      CALL FWORD
      PLTPI  = X2C(SUBSTR(FWORD,1,4))       /* PLTPI SUFFIX     */
      PLTSD  = X2C(SUBSTR(FWORD,5,4))       /* PLTSD SUFFIX     */
      VADD = HEXADD(SIT,E0)
      CALL FWORD
      PPTSF  = X2C(SUBSTR(FWORD,1,4))       /* PPT SUFFIX       */
      SRTSF  = X2C(SUBSTR(FWORD,5,4))       /* SRT SUFFIX       */
      VADD = HEXADD(SIT,E4)
      CALL FWORD
      TCTSF  = X2C(SUBSTR(FWORD,1,4))       /* TCT SUFFIX       */
      TSTSF  = X2C(SUBSTR(FWORD,5,4))       /* TST SUFFIX       */
      VADD = HEXADD(SIT,E8)
      CALL FWORD
      XLTSF  = X2C(SUBSTR(FWORD,1,4))       /* XLT SUFFIX       */
      MCTSF  = X2C(SUBSTR(FWORD,5,4))       /* MCT SUFFIX       */
 /* ---------------------------------------------------------------- */
/* MODULE SUFFIXES                                                  */
/* ---------------------------------------------------------------- */
      VADD = HEXADD(SIT,F0)
      CALL FWORD
      CSASF  = X2C(SUBSTR(FWORD,1,4))       /* CSA SUFFIX       */
      KCPSF  = X2C(SUBSTR(FWORD,5,4))       /* KCP SUFFIX       */
      VADD = HEXADD(SIT,F4)
      CALL FWORD
      SCPSF  = X2C(SUBSTR(FWORD,1,4))       /* SCP SUFFIX       */
      PCPSF  = X2C(SUBSTR(FWORD,5,4))       /* PCP SUFFIX       */
      VADD = HEXADD(SIT,F8)
      CALL FWORD
      DCPSF  = X2C(SUBSTR(FWORD,1,4))       /* DCP SUFFIX       */
      ICPSF  = X2C(SUBSTR(FWORD,5,4))       /* ICP SUFFIX       */
      VADD = HEXADD(SIT,FC)
      CALL FWORD
      ZCPSF  = X2C(SUBSTR(FWORD,1,4))       /* ZCP SUFFIX       */
      TCPSF  = X2C(SUBSTR(FWORD,5,4))       /* TCP SUFFIX       */
      VADD = HEXADD(SIT,100)
      CALL FWORD
      FCPSF  = X2C(SUBSTR(FWORD,1,4))       /* FCP SUFFIX       */
      TDPSF  = X2C(SUBSTR(FWORD,5,4))       /* TDP SUFFIX       */
      VADD = HEXADD(SIT,104)
      CALL FWORD
      TSPSF  = X2C(SUBSTR(FWORD,1,4)        /* TSP SUFFIX       */
      TRPSF  = X2C(SUBSTR(FWORD,5,4))       /* TRP SUFFIX       */
      VADD = HEXADD(SIT,108)
      CALL FWORD
      SRPSF  = X2C(SUBSTR(FWORD,1,4))       /* SRP SUFFIX       */
      JCPSF  = X2C(SUBSTR(FWORD,5,4))       /* JCP SUFFIX       */
      VADD = HEXADD(SIT,10C)
      CALL FWORD
      BMSSF  = X2C(SUBSTR(FWORD,1,4))       /* BMS SUFFIX       */
      MCPSF  = X2C(SUBSTR(FWORD,5,4))       /* MCP SUFFIX       */
      VADD = HEXADD(SIT,110)
      CALL FWORD
      RLRSF  = X2C(SUBSTR(FWORD,1,4))       /* RLR SUFFIX       */
      PBPSF  = X2C(SUBSTR(FWORD,5,4))       /* PBP SUFFIX       */
      VADD = HEXADD(SIT,114)
      CALL FWORD
      M32SF  = X2C(SUBSTR(FWORD,1,4))       /* M32 SUFFIX       */
      TPPSF  = X2C(SUBSTR(FWORD,5,4))       /* TPP SUFFIX       */
      VADD = HEXADD(SIT,118)
      CALL FWORD
      IIPSF  = X2C(SUBSTR(FWORD,1,4))       /* IIP SUFFIX       */
      DSBSF  = X2C(SUBSTR(FWORD,5,4))       /* DSB SUFFIX       */
      VADD = HEXADD(SIT,11C)
      CALL FWORD
      BFPSF  = X2C(SUBSTR(FWORD,1,4))       /* BFP SUFFIX       */
      KPPSF  = X2C(SUBSTR(FWORD,5,4))       /* KPP SUFFIX       */
      VADD = HEXADD(SIT,120)
      CALL FWORD
      SPPSF  = X2C(SUBSTR(FWORD,1,4))       /* SPP SUFFIX       */
      FDPSF  = X2C(SUBSTR(FWORD,5,4))       /* FDP SUFFIX       */
      VADD = HEXADD(SIT,124)
      CALL FWORD
      DIPSF  = X2C(SUBSTR(FWORD,1,4))       /* DIP SUFFIX       */
      DBPSF  = X2C(SUBSTR(FWORD,5,4))       /* DBP SUFFIX       */
      VADD = HEXADD(SIT,128)
      CALL FWORD
      DL1SF  = X2C(SUBSTR(FWORD,1,4))       /* DL1 SUFFIX       */
      ISCSF  = X2C(SUBSTR(FWORD,5,4))       /* ISC SUFFIX       */
      VADD = HEXADD(SIT,138)
      CALL FWORD
      TBPSF  = X2C(SUBSTR(FWORD,5,4))       /* TBP SUFFIX  ???  */
 /* ---------------------------------------------------------------- */
/* DISPLAY                                                          */
/* ---------------------------------------------------------------- */
      'CTL % E'
      'CTL - P GRE REV H'     /* VSE SYS NAME       */
      'CTL . P WHI     H'     /* BACKGROUND         */
      'CTL ; P YEL REV H'     /* BOX                */
      'CTL : P YEL     H'     /* MODULES            */
      'CTL = P YEL REV H'     /* MODULES            */
      'CTL ) P TUR REV H'     /* TABLES             */
      'CTL ( P TUR     H'     /* TABLES             */
      'CTL > P PIN REV H'     /* DL/1               */
      'CTL < P PIN     H'     /* DL/1               */
      'CTL + P BLU REV H'     /* BMS                */
      'CTL * P BLU     H'     /* BMS                */
      'SET PF04 BEFORE QUIT'
      'SET MSGLINE ON 24 OVERLAY'
      'SET LINEND OFF'
      'SET TOFEOF OFF'
      'SET PREF OFF'
      'SET CMD OFF'
'RESER 1  N %-' VMID' %. 'OVPS
'RESER 2  N %;                              %.'
'RESER 3  N %; %) ALT %('ALTSF'%= CSA %:'CSASF'%+ MBS %*'BMSSF'%; %.'
'RESER 4  N %; %) DCT %('DCTSF'%= KCP %:'KCPSF'%+ MCP %*'MCPSF'%; %.'
'RESER 5  N %; %) FCT %('FCTSF'%= SCP %:'SCPSF'%+ RLR %*'RLRSF'%; %.'
'RESER 6  N %; %) JCT %('JCTSF'%= PCP %:'PCPSF'%+ PBP %*'PBPSF'%; %.'
'RESER 7  N %; %) NLT %('NLTSF'%= DCP %:'DCPSF'%+ M32 %*'M32SF'%; %.'
'RESER 8  N %; %) PCT %('PCTSF'%= ICP %:'ICPSF'%+ TPP %*'TPPSF'%; %.'
'RESER 9  N %; %)PLTPI%('PLTPI'%= ZCP %:'ZCPSF'%+ IIP %*'IIPSF'%; %.'
'RESER 10 N %; %)PLTSD%('PLTSD'%= TCP %:'TCPSF'%+ DSB %*'DSBSF'%; %.'
'RESER 11 N %; %) PPT %('PPTSF'%= FCP %:'FCPSF'%= BFP %:'BFPSF'%; %.'
'RESER 12 N %; %) SRT %('SRTSF'%= TDP %:'TDPSF'%= KPP %:'KPPSF'%; %.'
'RESER 13 N %; %) TCT %('TCTSF'%= TSP %:'TSPSF'%= SPP %:'SPPSF'%; %.'
'RESER 14 N %; %) TST %('TSTSF'%= TRP %:'TRPSF'%= FDP %:'FDPSF'%; %.'
'RESER 15 N %; %) XLT %('XLTSF'%= SRP %:'SRPSF'%= DIP %:'DIPSF'%; %.'
'RESER 16 N %; %) MCT %('MCTSF'%= JCP %:'JCPSF'%= DBP %:'DBPSF'%; %.'
'RESER 17 N %; %> ACT %<'DL1SF'%= ISC %:'ISCSF'%= TBP %:'TBPSF'%: %.'
'RESER 18 N %;
'RESER 19 N %.PF2=DUMP   PF3=QUIT'
/* -----------------------------------------------------------------*/
/* PROCESS RESPONSE                                                 */
/* -----------------------------------------------------------------*/
    DO FOREVER
        CUR S 1 1
        READ NOCHANGE TAG
        PULL K1 K2 .
        KEYID = K1||K2
        SELECT
            WHEN KEYID = 'PFK2' THEN 'CMS VSTOR' VMID SIT
            WHEN KEYID = 'PFK3' THEN LEAVE
            OTHERWISE NOP
            END
        END
    QUIT
    EXIT


Mike Jones
Senior Systems Programmer
Wavin Building Products (UK)  ) Xephon 1988





