 ReaderUs letter
Regarding the article Controlling CICS resources in CICS Update, December 1987
(issue 25), the use of ENQ/DEQ to single thread against the use of a Transient
Data (TD) queue will certainly work, but has the author considered making the TD
queue logically recoverable by coding DESTRCV=LG in the DCT entry.  This causes
CICS to enqueue automatically for each task attempting to write to the queue and
also separately for each task attempting to read the queue.
If the trigger level is 10 and task A starts writing to the queue, any other
task attempting to do so will be suspended until the end of task AUs current LUW
(at task end or a user sync point).  This prevents multiple tasks interspersing
records in the queue.  Task B may read the queue, but only those records written
which have been committed for update by the task which wrote the queue.  In
addition, while task B reads the queue, any other task attempting to read will
be suspended until task B ends or writes a sync point.
Logical recovery has the effect of making the TD queue like a file, in that only
one task may read or write at a time, and, should CICS fail, during emergency
restart the queue will be restored to the point of failure for the tasks which
had enqueued upon it implicitly in this manner.
The FIFO mechanism, which the author refers to, gets invoked but logical
recovery is more secure should CICS fail.

Chris Heath and Joel Goodman
Circle Computer Consultants and Education (UK)











































