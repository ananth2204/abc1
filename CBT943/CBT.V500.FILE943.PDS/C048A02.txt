Problems with DFHCOMMAREA

I read an article in your February 1989 issue entitled Apparent loss
of DFHCOMMAREA contents.  I have also experienced this
situation.  The author of the article remedied the situation by
sending each program the same size DFHCOMMAREA, whether
it needed it all or not.  I was able to remedy the situation by
moving only the actual DFHCOMMAREA length to the working
storage area.

If program A is sending 500 bytes of COMMAREA to program
B, which has a COMMAREA of 1000 bytes, program B would
contain the following code:

    LINKAGE SECTION.
    01   DFHCOMMAREA.
         05   DFHC=500            PIC X (500).
         05   FILLER              PIC X (500).
    PROCEDURE DIVISION.
    IF EIBCALEN = +500
       MOVE DFHC-500 TO WS-COMMAREA
    ELSE
       MOVE DFHCOMMAREA TO WS-COMMAREA.

I would like to point out that the problem seems to occur only
when the receiving program has a COMMAREA greater than 500
(probably 512) bytes.  In any case, this technique has never failed
to correct the problem.

I had a similar situation, resulting in corruption of passed data.
An application in one of my systems required a very large
COMMAREA.  Since it is common practice to move the
DFHCOMMAREA to a working storage area, large chunks of
storage were being used, as many users work the application at the
same time.  I thought I could save considerable storage by
eliminating the working storage area and using only the
DFHCOMMAREA.

If program A passed 1000 bytes to program B, which needs 5000
bytes, under normal circumstances, after the first pass of
program
B, I could have coded:

    EXEC CICS RETURN TRANSID ('PGMB')
                     COMMAREA (DFHCOMMAREA)
                     LENGTH (5000)
                     END-EXEC.

I could not do that in this case, because the first pass of program
B needs to initialise and fill the entire COMMAREA, but only has
addressability to the first 1000 bytes passed by program A.

In an effort to get around this, in program A, I coded:

    EXEC CICS XCTL PROGRAM ('PROGB')
                     COMMAREA (WS-COMMAREA)
                     LENGTH (5000)
                     END-EXEC.

even though the length of WS-COMMAREA is actually only 1000
bytes, and the manual says not to do this because the results can
be unpredictable.

This worked 95 percent of the time.  In the other 5 percent, the
COMMAREA was totally corrupted, resulting in an abend.  Not
willing to give back all the storage I was saving in program B by
using DFHCOMMAREA, I was able to remedy the situation as
follows.  In the linkage section, I set up a BLL-PTR and an area
of 5000 bytes in program A.  Just prior to the XCTL to program
B, I issued a GETMAIN for that area, moved WS-COMMAREA
to this area, and passed it to program B.


Lynda Valentine
Project Manager
Jamesway Corporation (USA) ) Jamesway Corporation 1989


