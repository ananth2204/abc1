Accessing RACF via CICS

As our organization requested it, we decided to carry out some
RACF functions in the CICS address space.

These actions were the following:

o      See if a user is defined in the RACF database.

o      Do a resume function for revoked users (in this case, the
      new password of the user would be the name of the RACF
      group to which he belongs).

Other functions could be implemented via the same
mechanism.

Many solutions were possible but the one we chose consisted
of writing an SVC to perform the calls to RACF.  To perform
these calls to RACF, the program must be in one of these
conditions:

o      APF-authorized

o      In system key 0-7

o      In supervisor state.

The call to an SVC puts the program automatically in
supervisor state.  This solution seems to be the right one.
Nevertheless, there is a little problem with this solution.  The
call to a SVC puts the whole CICS address space in a wait and
CICS dispatching can not take place.  Therefore, the SVC
needs to be as efficient as possible to reduce the CICS wait
time.  In this case, the solution could be to do an attach of a
new subtask (as DB2 does for its threads) making this the
subtask that waits, not the CICS main task.

In our example, the SVC will be given the number 243 (type 3
SVC).  The module will be called IGC0024C.  It resides in
MLPA and must be link-edited in LPALIB.

The call to the SVC must be done in the following way:

o      GETMAIN two areas (the first of 4 bytes, the second of 12 bytes).

o      Move the PARMLIST in the second area in the following order:

      -      move length (2 bytes)
      -      move the function to use (1 byte)
      -      move user-id (8 bytes)
      -      one byte remains, which will be used in the SVC.

o      Load the second area address into the first area.

o      Load register 1 with the address of the first area.

o      Call the SVC.

o      Test return code.

The return code is stored in register 15 as follows:

0      Function is correct.

4      User-id not defined to RACF.

8      ALTUSER function has failed.

16      Request for ALTUSER has not been done, because user-id
      has not been previously revoked.

20      The call to the SVC is incorrect (function is not
      supported, or the parameter length is incorrect).

An interface has been developed in CICS to permit the use of
this SVC by COBOL programs.  This function is done by an
Assembler program named GITA#RAC, which is called by an
EXEC CICS LINK PROGRAM ('GITA#RAC') COMMAREA
(xxx).

The COMMAREA xxx is 11 bytes long and has the following
format:

o      Function (1 byte) - I for inquire user, A for ALTUSER.

o      User-id (8 bytes).

o      Return Code (2 bytes) - extended format.

      0      Function is correct.

      4      User-id not defined to RACF.

      8      ALTUSER function has failed.

      16      Request for ALTUSER has not be done, because user-
            id has not been previously revoked.

      20      The call to the program is incorrect (function is not
            supported or the parameter length is incorrect).


GITA#RAC SOURCE CODE

DFHEISTG DSECT
LG       DS   H
* COMMAREA DSECT IS USED FROM ONE PROGRAM TO THIS ONE
* FUNCTION KEY IS "I" FOR INQUIRE USER ( DEFINED TO RACF )
*                 "A" FOR ALTUSER RESUME USER
* RC IS THE RETURN CODE TO CALLER PROGRAM   "00" IS OK
*                                           "04" IS OK
*                                           "08" IS ALTUSER OK
*                                           "16" IS ALTUSER OK
*                                           "20" IS NO COMMAREA OR
*                                                FUNCTION NOT DEFINED
COMMAREA DSECT
FUNCTION DS   CL1
USER     DS   CL8
RC       DC   CL2
PARDSECT DSECT
LENGTH   DS   H
FNCTION  DS   XL1
USERID   DS   XL8
RTC      DS   XL1
GITA#RAC CSECT
         OC   EIBCALEN,EIBCALEN
         BZ   Z100
         L    8,DFHEICAP
         USING COMMAREA,8
         CLI  FUNCTION,C'I'
         BE   $100
         CLI  FUNCTION,C'A'
         BE   $100
Z100     DS   0H
         MVC  RC,=CL2'20'
         B    Z900
$100     DS   0H
         EXEC CICS GETMAIN SET(4) LENGTH(4)
         EXEC CICS GETMAIN SET(5) LENGTH(12)
         USING PARDSECT,5
         ST   5,0(4)                          STORE PARM ADDRESS
         MVC  LENGTH,=H'10'                   MOVE PARM LENGTH VALUE
         MVC  FNCTION,FUNCTION                MOVE    FUNCTION
         MVC  USERID,USER
         LR   1,4
         SVC  243
         LTR  15,15                            IS USER DEFINED ?
         BZ   $200
         CH   15,=H'4'                         IS USER NOT DEFINED ?
         BE   $300
         CH   15,=H'8'                         ALTUSER NOT OK ?
         BE   $400
         CH   15,=H'16'                        ALTUSER NOT OK ?
         BE   $500
         MVC  RC,=CL2'20'
         B    Z900
$200     DS   0H
         MVC  RC,=CL2'00'
         B    Z900
$300     DS   0H
         MVC  RC,=CL2'04'
         B    Z900
$400     DS   0H
         MVC  RC,=CL2'08'
         B    Z900
$500     DS   0H
         MVC  RC,=CL2'16'
         B    Z900
Z900     DS   0H
         EXEC CICS RETURN
         END


IGC0024C SOURCE CODE

* THIS SVC IS USED FROM CICS ADDRESS SPACE TO INVOKE QUERY TO RACF
* AMODE 24, RMODE 24, REFRESHABLE ATTRIBUTE IN LINKEDIT
* THIS SVC IS LINKEDIT IN GIR.LPALIB
* THIS SVC IS IN MLPA
         IKJTCB
* PARM IS TEN  BYTES LENGTH
* --> FIRST BYTE IS THE ACTION ( A FOR ALTER, I FOR INQUIRE ..)
*     NEXT EIGHT BYTES ARE USER IDENTIFICATION PADDED WITH BLANKS
*     ONE BYTE FOR RETURN CODE FOR MOVING IT IN THIS PROGRAM
*     THE RETURN CODE WILL BE STORED IN REG 15
*     0   :  USER DEFINED
*     4   :  USER NOT DEFINED
*     8   :  ALTUSER UNSUCCESSFUL
*     16  :  ALTUSER UNSUCCESSFUL, BECAUSE USER IS NOT REVOKED
*     20  :  ERROR IN CALLING SVC
PARDSECT DSECT
PARMDS   DS    0XL12
LENGTH   DS    XL2
FILER1   DS    CL1
FILER2   DS    CL8
RC       DS    CL1
IGC0024C CSECT
IGC0024C AMODE 24
IGC0024C RMODE 24
         USING IGC0024C,6           ADDRESSABILITY
*            ADDRESS SYSTEM ZONES                                    *
         USING TCB,4
*            GET PARM                                                *
         L     2,0(,1)              ADDRESS LIST PARM
         USING PARDSECT,2           ADDRESSABILITY OF DSECT
         CLC   LENGTH,=H'10'        IS PARM TEN  BYTES LONG
         BNE   ERROR001             NO --> PARM IS INVALID
         GETMAIN RU,LV=65           GET 60  BYTES
         LR    8,1                  GET ADDRESS OF GETMAINED MEMORY
         USING GETDSECT,8           ADDRESSABILITY OF DSECT
         XC    GETDSECT(65),GETDSECT CLEAR WORKING AREA
         MVC   PARM,0(2)
         MVC   RACUSR(8),USERID
         TRT   RACUSR(8),TABLE      IS THERE ANY BLANK IN FIELD ?
         BZ    $200                 NO BLANK --> USER LENGTH IS 8
         LR    9,1                  LOAD BLANK ADDRESS
         LA    4,RACUSR
         SR    9,4           GIVE LENGTH OF USER FIELD WITHOUT BLANK
         STC   9,LGUSR              STORE USER LENGTH
         B     $300
$200     DS    0H
         MVI   LGUSR,X'08'          MOVE USERID LENGTH
$300     DS    0H
         LA    10,USRAREA           LOAD ADDRESS
         LA    11,WEND-W            GET LENGTH OF AREA
         ST    11,W                 STORE IT
         LA    12,W                 LOAD ADDRESS
         CLI   FUNCTION,C'A'        IS REQUEST ALTER   USER ?
         BE    #100
         CLI   FUNCTION,C'I'        IS REQUEST INQUIRE USER ?
         BNE   ERROR001             FUNCTION IS NOT VALID
$100     DS    0H
         ICHEINTY LOCATE,TYPE='USR',ENTRY=(10),WKAREA=(12)
         LTR   15,15                IS USER FOUND ?
         BZ    RC00                 YES --> GO TO RC00
RC04     DS    0H
         MVI   RC,X'04'             MOVE RETURN CODE 04
         B     END                  GO TO END
RC00     DS    0H
         MVI   RC,X'00'             MOVE RETURN CODE 00
         B     END                  GO TO END
RC16     DS    0H
         MVI   RC,X'10'             MOVE RETURN CODE 16
         B     END                  GO TO END
#100     DS    0H
    ICHEINTY LOCATE,TYPE='USR',ENTRY=(10),ACTIONS=(A10,A11),WKAREA=(12)
         LTR   15,15                IS OPERATION SUCCESSFUL?
         BNZ   RC04
         CLI   FLAG4,X'00'          IS USER REVOKED ?
         BE    RC16                 NO GO TO RC16
         MVC   PASSWORD,DFLTGRP
         ICHEINTY ALTER,TYPE='USR',ENTRY=(10),ACTIONS=(A01,A02,A03)
         LTR   15,15
         BZ    RC00
         MVI   RC,X'08'             ALTER FAILED RC = 8
END      DS    0H
         FREEMAIN RU,A=(8),LV=65
         XR    15,15                CLEAR REGISTER R15
         IC    15,RC                INSERT RETURN CODE
         BR    14                   RETURN TO CALLER
ERROR001 DS    0H
         XR    15,15                CLEAR REGISTER R15
         IC    15,=X'20'            INSERT RETURN CODE
         BR    14                   RETURN TO CALLER
TABLE    DC    XL256'00'
         ORG   TABLE+X'40'
         DC    X'40'
         ORG
*        ACTION ON RACF MACRO                                        *
A01      ICHEACTN FIELD=FLAG4,FLDATA=(1,FLAG),MF=L
A02      ICHEACTN FIELD=PASSWORD,FLDATA=(8,PASSWORD),MF=L
A03      ICHEACTN FIELD=PASSDATE,FLDATA=(3,PASSDATE),MF=L
A10      ICHEACTN FIELD=DFLTGRP,MF=L
A11      ICHEACTN FIELD=FLAG4,MF=L
FLAG     DC    XL1'00'
PASSWORD DS    CL8
PASSDATE DC    XL3'000000'
         LTORG
GETDSECT DSECT
PARM     DS    0XL12
LGPARM   DS    XL2
FUNCTION DS    CL1
USERID   DS    CL8
         DS    CL1
USRAREA  DS    0XL9
LGUSR    DS    AL1
RACUSR   DS    CL8
W        DS    0F                   WORK AREA
         DS    F                    LENGTH OF ENTIRE USER AREA
WR       DS    XL24
FIELDS   DS    0XL13
         DS    H                    LENGTH OF FIELD
DFLTGRP  DS    CL8                  DEFAULT GROUP NAME
         DS    H                    LENGTH OF FIELD
FLAG4    DS    CL1                  REVOKED USER ATTRIBUTE
WEND     EQU   *
         END


Alain Egee
Systems Engineer (France)

