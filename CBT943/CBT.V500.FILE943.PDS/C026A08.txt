 Automatically verifying DL/I files
VSE/VSAM Release 3 has a new function called automatic verify.  In most
datasets, when a file that was not previously closed properly is opened, the
OPEN macro automatically calls VERIFY to check catalog records and update them
if necessary.  You no longer need to issue the VERIFY command to validate the
catalog records of a file that was not properly closed.
This function does not work for DL/I databases because they are opened with
Control Interval access.
If the databases are not closed by DL/I during abnormal termination or a power
failure, you must execute the Access Method Services command, VERIFY, to update
the VSAM catalog for each file.  If this is not done, an error occurs when the
DL/I system attempts to open the database.  Under these conditions, the high RBA
value in the catalog is probably incorrect.
Batch DL/I always writes a message on the system console and terminates if any
error occurs during open.
A missing VERIFY during CICS emergency restart results in an open error, but you
cannot see this error on the system console.  After control has been given to
CICS, you would be lucky to repair the damaged database using DL/I utilities.
To solve this problem, I wrote the following program.  The program loads the
actual File Control Table passing the suffix as a PARM value.  It then extracts
all DL/I entries and performs IDCAMS internally for verification of the DLBL
names, which are taken from the DL/I DBD.
The program runs with CICS 1.6 under DOS/VSE 3.1 and VSE/SP 2.1.
DLIVERFY CSECT
FCTXBAR  EQU   R11     FILE CONTROL TABLE INDEX DSECT
FCTDSBAR EQU   R12     FILE CONTROL TABLE ENTRY DSECT
         SAVE  (14,12)
         LR    R3,R15
         USING DLIVERFY,R3
         B     BEGIN
         DC    CL8'DLIVERFY'             PROGRAM NAME
         DC    C'&UDATE '              DATUM DER UMWANDLUNG
         DC    C'&UTIME '              UHRZEIT DER UMWANDLUNG
BEGIN    DS    0H
         ST    R13,SAVEAREA+4     SAVE PREVIOUS SAVEAREA ADDR
         LR    R2,R13             SAVE REG 13
         LA    R13,SAVEAREA       LOAD OWN SAVEAREA ADDR
         ST    R13,8(R2)          CHAIN IT TO PREVIOUS AREA
         CR    R1,R15             ADDR OF EXEC PARAM IN REG 1
         BE    LOADFCT            NO - SKIP SAVE
         L     R1,0(R1)           LOAD ADDR OF PARM STRING
         LH    R0,0(R1)           LOAD LENGTH OF PARM STRING
         LA    R1,2(R1)           LOAD ADDR 1ST BYTE OF PARM STRING
         MVC   DFHFCTXX,0(R1)     SET SUFFIX
*  LOAD ACTUAL CICS/VS FILE CONTROL TABLE                             *
LOADFCT  DS    0H
         LA    R1,DFHFCTNM        LOAD ADDR NAME FIELD
         CDLOAD (1),RETPNF=YES    LOAD CICS/VS FCT
         LTR   R15,R15            CDLOAD OK
         BNZ   ASKOPER            NO - ASK OPERATOR
         ICM   R2,7,10(R1)        GET 1ST ENTRY ADDRESS
         SH    R2,=H'12'          MINUS 3 WORDS
         L     R2,0(R2)           GET VECTOR TO TABLE INDEX
         L     R2,0(R2)           GET TABLE INDEX ADDRESS
         ST    R2,ADFHFCTX        AND SAVE IT
         B     IDCAMS             AND PERFORM IDCAMS
ASKOPER  DS    0H
         MVC   FCTNMLOG,DFHFCTNM  MOVE PHASE NAME TO MSG
         PUTR  SYSLOG             ASK OPERATOR
         CLC   =C'NO',FCTNMIN     NO TABLE
         BE    PROGEND
         MVC   DFHFCTNM,FCTNMIN   SET NEW NAME
         B     LOADFCT            AND LOAD AGAIN
*  PERFORM IDCAMS FOR VERIFICATION                                    *
IDCAMS   DS    0H
         CDLOAD IDCAMS
          LTR   R15,R15            CDLOAD OK
         BZ    IDCAMS10           YES - LINK IDCAMS
         DC    H'0'               ABEND
         DC    C'ERROR CDLOAD IDCAMS'
IDCAMS10 DS    0H
         LA    R15,6(R1)          ENTRY TO IDCAMS
         LA    R1,ARGLIST
         BALR  R14,R15
*  PROGRAM-END                                                        *
PROGEND  DS    0H
         L     R13,SAVEAREA+4
         L     R14,12(R13)
         RETURN (0,12)
*  IDCAMS INPUT ROUTINE                                               *
IOSYSIPT DS    0H
         USING *,R15
         STM   R0,R15,SAVEIPT     SAVE ALL REGS
         L     R3,=A(DLIVERFY)    LOAD BASE REG
         DROP  R15
         L     R2,4(R1)           GET IOFLAGS ADDR
         CLI   0(R2),X'08'        IS IT A GET REQUEST
         BE    GETIPT             YES - BUILD INPUT
         LA    R15,0              RETURN CODE NORMAL
         BR    R14                RETURN TO IDCAMS
GETIPT   DS    0H
         L     R2,8(R1)           GET IOINFO ADDR
         MVC   0(4,R2),=A(IPTDATA)     SET IO AREA ADDR
         MVC   4(4,R2),=AL4(L'IPTDATA) SET IO AREA LENGTH
         L     FCTXBAR,ADFHFCTX   LOAD ACTUAL FCT ENTRY ADDR
CHKFCTID DS    0H
         USING DFHFCTDX,FCTXBAR
         USING DFHFCTDS,FCTDSBAR
         CLC   =F'-1',FCTDSNM     END OF TABLE
         BE    EOFIPT             YES - TELL IT IDCAMS
         L     FCTDSBAR,FCTENAD   LOAD ENTRY ADDR
         LA    FCTXBAR,FCTXLN(,FCTXBAR)   BUMP TO NEXT ENTRY
         TM    FCTDSVR3,FCTDLII   IS IT A DL/I ENTRY
         BO    CHKDBD             YES - CHECK DBD
         B     CHKFCTID           AND CHECK AGAIN
CHKDBD   DS    0H
         ST    FCTXBAR,ADFHFCTX   SAVE ACTUAL FCT INDEX ADDR
         MVC   IPTFILNM,FCTDSID   MOVE DDNAME TO IDCAMS AREA
         LA    R1,FCTDSID         GET ADDR OF DBD NAME
*  EVENTUALLY IT IS BETTER TO USE THE LOAD MACRO, BECAUSE THE
*  GETVIS ANCHOR TABLE IS TOO SMALL.
         CDLOAD (1),RETPNF=YES    LOAD DL/I DBD
         LTR   R15,R15            CDLOAD OK
         BNZ   CHKDBDE            NO - USE FCT DS ID
         LR    R10,R1             LOAD DBD ADDR
         USING DBDDSECT,R10
         L     R2,APREFIX         GET PREFIX ADDR
         USING PREFIX,R2
*  TEST ORGANISATION FLAGS IF REQUIRED (PREHI)
         MVC   IPTFILNM,PREDD1    MOVE DDNAME TO IDCAMS AREA
CHKDBDE  DS    0H
         LM    R0,R15,SAVEIPT     RELOAD ALL REGS
         LA    R15,0              RETURN CODE NORMAL
         BR    R14                RETURN TO IDCAMS
EOFIPT   DS    0H
         LM    R0,R15,SAVEIPT     RELOAD ALL REGS
         LA    R15,4              END OF PROCESSING
         BR    R14                RETURN TO IDCAMS
*  CONSTANTS/AREAS/LITERALS                                           *
DFHFCTNM DS    0CL8
         DC    CL6'DFHFCT'
DFHFCTXX DS    CL2' '
 ADFHFCTX DS    F                  FCT INDEX POINTER
SAVEAREA DS    18F                MAIN SAVE AREA
SAVEIPT  DS    18F                SUB SAVE AREA
ARGLIST  DC    A(OPTIONS)         SEE IDCAMS RULES
         DC    A(DNAMES)
         DC    A(PAGENUM)
         DC    X'80'
         DC    AL3(IOLIST)
OPTIONS  DC    H'0'
DNAMES   DC    H'0'
PAGENUM  DC    H'0'
IOLIST   DC    F'1'
         DC    A(DNAMEIPT)
         DC    A(IOSYSIPT)
         DC    A(IPTDATA)
DNAMEIPT DC    CL10'DDSYSIPT'
IPTDATA  DC    CL80' '
         ORG   IPTDATA+1
         DC    C'VERIFY FILE('
IPTFILNM DS    CL7                DATASET ID (DDNAME)
         DS    CL1                RESERVED
         DC    C')'
         ORG   ,
         LTORG
SYSLOG   DTFCN DEVADDR=SYSLOG,                                         *
               IOAREA1=IO1LOG,                                         *
               BLKSIZE=56,                                             *
               INPSIZE=8,                                              *
               RECFORM=FIXUNB,                                         *
               TYPEFLE=CMBND
IO1LOG   DC    CL80' '
         ORG   IO1LOG
FCTNMLOG DS    CL8                FILE CONTROL TABLE PHASE NAME
         DC    C' NICHT GEFUNDEN. BITTE G&LTIGEN NAMEN EINGEBEN. '
         DC    C' NOT FOUND. PLEASE ENTER A CORRECT NAME. '
FCTNMIN  DS    CL8                OPERATOR INPUT
         ORG   ,
         COPY  DFHFCTDS           FCT ENTRY
         DLZIDBD                  DL/I DBD
         END   DLIVERFY


Willi Kuhn
Systems Programmer
Streif AG (West Germany) ) Willi Kuhn 1988





















