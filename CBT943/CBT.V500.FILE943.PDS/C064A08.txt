Sequential terminal dataset open/close program

Sequential terminal input is still an efficient means of
supplying a large volume of test data to a CICS application
program.  As documented in the Application Programmer's
Reference Manual (Chapter 5.1), this facility allows a wide
range of devices from card readers to line printers to be used as
input and output devices avoiding the need to key test data into
the system from a CRT.  Unfortunately, the facility is limited
in function and does not provide a way of dynamically closing
and opening the sequential datasets.  This prevents one from
changing the input data off-line while CICS is still executing
and similarly prevents one from accessing the sequential output
until CICS is terminated.

This issue seems to be addressed in Info/Sys record number
Q441498; however, I feel that the recommendation to use
extrapartition open/close facilities will not work.  Defining the
dataset in the DCT as an extrapartition dataset and in the TCT
as a sequential terminal will generate two DCBs and closing
one will not re-position the other.  My solution to the problem
was to write a simple program that locates the sequential
terminal's DCB address and issues a temporary close on the
dataset.  The program positions an input dataset to be read
from the beginning and positions an output dataset at the end of
the file, thus allowing for the accumulation of output.  The
appropriate terminal status flags are set to help restart the input
device.

The user of this program may wish to alter the way the flags
are set to make the process less automatic.  Moreover, the
close command for the output DCB can include the REREAD
operand to cause subsequent output to overwrite previous
output.  All testing was done with sequential disk datasets in an
MVS/XA, CICS 1.7 environment.

**********************************************************************
*        SEQUENTIAL TERMINAL DATASET OPEN/CLOSE PROGRAM
**********************************************************************
*        Transid=RECY  Program=SEQCLS  Language=ASSEMBLY
*        Input format:  RECYCLE ddname
*                       |       |
*                       col 1   col 9
**********************************************************************
*        DSECTS, ETC.
**********************************************************************
WRKREG   EQU   4                        WORK REGISTER
TCTPFBAR EQU   5                        TCT PREFIX REGISTER
TCTTEAR  EQU   6                        TCT TERMINAL ENTRY REGISTER
DCBBAR   EQU   7                        DCB REGISTER
         DFHREGS                        REGISTER EQUATES
         COPY  DFHCSADS                 CSA
         DROP  R13
         COPY  DFHTCTFX                 TCT PREFIX
         COPY  DFHTCTLE                 TCT LINE ENTRY
         COPY  DFHTCTTE                 TCT TERMINAL ENTRY
         DCBD  DSORG=PS,DEVD=DA         DCB
         CVT   DSECT=YES                CVT
         IKJTCB ,                       TCB
TIOT     DSECT                          DSECT FOR TIOT
         IEFTIOT1                       TIOT
**********************************************************************
*        DYNAMIC STORAGE
**********************************************************************
DFHEISTG DSECT                          DYNAMIC STORAGE DSECT
MSGLEN   DS    H                        MESSAGE LENGTH
MESSAGE  DS    CL80                     MESSAGE I/O AREA
SWT1     DS    X                        INPUT/OUTPUT DCB SWITCH
**********************************************************************
*        ENTRY POINT
**********************************************************************
SEQC     DFHEIENT CODEREG=(3),EIBREG=(11),DATAREG=(13)
**********************************************************************
*        GET TERMINAL INPUT DATA
**********************************************************************
         MVC   MSGLEN(2),=H'80'         SET MAXIMUM RECEIVE LENGTH
         EXEC CICS RECEIVE                                             X
               INTO(MESSAGE)                                           X
               LENGTH(MSGLEN)
         CLC   MSGLEN(2),=H'9'          LENGTH LESS THAN 9 ?
         BL    MSG1                     ...YES, THEN BRANCH
         OC    MESSAGE+8(8),=8X'40'     MAKE UPPER CASE PADDED W/BLANKS
**********************************************************************
*        LOCATE SEQUENTIAL TERMINAL DCBS
**********************************************************************
         EXEC CICS ADDRESS CSA(WRKREG)
         USING DFHCSADS,WRKREG          ESTABLISH ADDRESSABILITY
         L     TCTPFBAR,CSATCTBA        TCT PREFIX ADDRESS
SCANLIST EQU   *
         L     WRKREG,TCTVWLA1          WAIT LIST ADDRESS
LOOP1    EQU   *
         L     TCTLEAR,0(WRKREG)        TCTTLE ADDRESS
         C     TCTLEAR,=4XL1'FF'        LAST LINE IN LIST ?
         BE    NOMORE                   ...YES, THEN BRANCH
         TM    TCTLEMI,TCTLEASA         SAM LINE ?
         BZ    DONEXT1                  ...NO, THEN BRANCH
         L     DCBBAR,TCTLESID          SEQUENTIAL INPUT DCB ADDRESS
         CLI   SWT1,X'FF'               FINISHED SCANNING INPUT DCBS ?
         BNE   DOINPUT                  ...NO, THEN BRANCH
         L     DCBBAR,TCTLESOD          SEQUENTIAL OUTPUT DCB ADDRESS
DOINPUT  EQU   *
         USING IHADCB,DCBBAR            ESTABLISH ADDRESSABILITY
         LTR   DCBBAR,DCBBAR            GOOD ADDRESS ?
         BNZ   LOCDD1                   ...YES, THEN BRANCH
DONEXT1  EQU   *
         LA    WRKREG,4(WRKREG)         POINT TO NEXT LINE ENTRY
         B     LOOP1                    REPEAT UNTIL NO MORE ENTRIES
**********************************************************************
*        NO MORE LINES PROCESSING
**********************************************************************
NOMORE   EQU   *
         CLI   SWT1,X'FF'               SCANNED INPUT & OUTPUT DCBS ?
         BE    MSG2                     ...YES, THEN BRANCH
         MVI   SWT1,X'FF'               SET SCAN OUTPUT DCBS SWITCH
         B     SCANLIST                 SCAN OUTPUT DCBS
**********************************************************************
*        LOCATE & VERIFY DDNAME OF DCB
**********************************************************************
LOCDD1   EQU   *
         L     R14,CVTPTR               CVT ADDRESS
         L     R14,CVTTCBP-CVTMAP(,R14) ADDRESS OF TCB POINTERS
         L     R14,4(,R14)              CURRENT TCB ADDRESS
         L     R14,TCBTIO-TCB(,R14)     ADDRESS OF TCB'S TIOT
         LH    R15,DCBTIOT              GET OFFSET TO DD ENTRY
         N     R15,=X'0000FFFF'         TURN OFF ANY EXTRA BITS
         AR    R14,R15                  COMPUTE ADDRESS OF DD ENTRY
         LA    R14,TIOEDDNM-TIOENTRY(,R14) DDNAME ADDRESS
         CLC   0(8,R14),MESSAGE+8       DDNAMES MATCH ?
         BNE   DONEXT1                  ...NO, THEN BRANCH
**********************************************************************
*        CHECK STATUS
**********************************************************************
CHKSTAT1 EQU   *
         TM    DCBOFLGS,DCBOFOPN        IS DCB OPEN ?
         BZ    MSG3                     ...NO, THEN BRANCH
         L     TCTTEAR,TCTLEPA          SEQUENTIAL TERM ADDRESS
         LTR   TCTTEAR,TCTTEAR          GOOD ADDRESS ?
         BZ    MSG4                     ...NO, THEN BRANCH
         TM    TCTTETT,TCTTETSD         SAM TERMINAL ?
         BZ    MSG5                     ...NO, THEN BRANCH
         CLI   SWT1,X'FF'               OUTPUT DCB ?
         BE    CLSOUT1                  ...YES, THEN BRANCH
**********************************************************************
*        PLACE LINE & TERMINAL OUT OF SERVICE
**********************************************************************
         OI    TCTTETS,TCTTESOS         PLACE TERM OUT OF SERVICE
         OI    TCTLESI,TCTLESOS         PLACE LINE OUT OF SERVICE
**********************************************************************
*        TEMPORARILY CLOSE INPUT DCB TO RE-READ FROM START OF FILE
**********************************************************************
         CLOSE ((DCBBAR),REREAD),TYPE=T CICS WILL HAVE TO WAIT
         LTR   R15,R15                  GOOD RETURN CODE ?
         BNZ   MSG6                     ...NO, THEN BRANCH
**********************************************************************
*        PLACE LINE & TERMINAL IN SERVICE
**********************************************************************
         L     TCTLEAR,0(WRKREG)        RESTORE TCTLEAR (R1)
         NI    TCTLESI,255-TCTLESOS     PLACE LINE IN SERVICE
         NI    TCTTETS,255-TCTTESOS     PLACE TERM IN SERVICE
         NI    TCTTETS,255-TCTTESPO     PLACE TERM IN SERVICE
         NI    TCTTETS,255-TCTTESNP     SET TTI BIT
         B     MSG7                     GO TO SUCCESSFUL MESSAGE
**********************************************************************
*        TEMPORARILY CLOSE OUTPUT DCB TO FLUSH OUT RECORDS
**********************************************************************
CLSOUT1  EQU   *
         CLOSE ((DCBBAR)),TYPE=T        CICS WILL HAVE TO WAIT
         LTR   R15,R15                  GOOD RETURN CODE ?
         BNZ   MSG8                     ...NO, THEN BRANCH
         B     MSG9                     GO TO SUCCESSFUL MESSAGE
**********************************************************************
*        MESSAGE ROUTINES
**********************************************************************
MSG1     EQU   *
         MVC   MSGLEN(2),=H'40'
         MVC   MESSAGE(40),=CL40'INVALID INPUT.  FORMAT: "RECYCLE DDNAMX
               E"'
         B     MSGOUT
MSG2     EQU   *
         MVC   MSGLEN(2),=H'13'
         MVC   MESSAGE(13),=CL13'DCB NOT FOUND'
         B     MSGOUT
MSG3     EQU   *
         MVC   MSGLEN(2),=H'18'
         MVC   MESSAGE(18),=CL18'DCB ALREADY CLOSED'
         B     MSGOUT
MSG4     EQU   *
         MVC   MSGLEN(2),=H'37'
         MVC   MESSAGE(37),=CL37'SEQUENTIAL LINE HAS NO TERMINAL ENTRY'
         B     MSGOUT
MSG5     EQU   *
         MVC   MSGLEN(2),=H'36'
         MVC   MESSAGE(36),=CL36'SEQUENTIAL LINE HAS NON-SAM TERMINAL'
         B     MSGOUT
MSG6     EQU   *
         MVC   MSGLEN(2),=H'23'
         MVC   MESSAGE(23),=CL23'ERROR DURING CLOSE OF INPUT FILE'
         B     MSGOUT
MSG7     EQU   *
         MVC   MSGLEN(2),=H'64'
         MVC   MESSAGE(64),=CL64'RECYCLE OF SEQUENTIAL TERMINAL INPUT FX
               ILE SUCCESSFULLY COMPLETED'
         B     MSGOUT
MSG8     EQU   *
         MVC   MSGLEN(2),=H'24'
         MVC   MESSAGE(24),=CL24'ERROR DURING CLOSE OF OUTPUT FILE'
         B     MSGOUT
MSG9     EQU   *
         MVC   MSGLEN(2),=H'65'
         MVC   MESSAGE(65),=CL65'RECYCLE OF SEQUENTIAL TERMINAL OUTPUT X
               FILE SUCCESSFULLY COMPLETED'
MSGOUT   EQU   *
         EXEC CICS SEND                                                X
               FROM(MESSAGE)                                           X
               LENGTH(MSGLEN)                                          X
               ERASE                                                   X
               LAST
**********************************************************************
*        RETURN TO CICS
**********************************************************************
RETURN   EQU   *
         EXEC CICS RETURN
**********************************************************************
         END   SEQC


Barry Williams
Systems Programmer
SunGard Computer Services (USA)

