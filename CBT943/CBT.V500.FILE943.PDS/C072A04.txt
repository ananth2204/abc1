STAIRS VPASL with CICS terminal auto-install

We wanted to be able to adapt the use of the STAIRS (AQUA)
Video Printer Association List (VPASL) of pre-defined
terminal-to-printer entries to handle CICS auto-installed
terminals.  We wanted to be able to use auto-installed terminals
with STAIRS while still retaining full copy functionality.

Our solution was based on the following components:

1      A VPASL initialized with recognizable terminal dummy
      entries, defined in member DLNVPASL (eg T*00, T*01, etc).

2      A VSAM KSDS associating user-ids with printer terminal-ids
      (ie VPASL hardcopy destinations).

3      A program, VSPRVPAS, called each time a user enters
      AQUA when it reads the printer-id from the previously
      mentioned VSAM file, scans VPASL for a dummy entry,
      and fills in the terminal-id and printer-id.  The program is
      also called when a user exits AQUA to reset the VPASL entry.

The following notes need to be taken into account:

1      For recognizable dummy VPASL entries, use character
      combinations not generated as terminal-ids by your
      terminal auto-install program.

2      Make DLNVPASL resident - don't reload.

3      The macros for structuring Assembler programs are
      supplied by IBM.

4      The VPASL principle also applies to several other
      configurations requiring pre-defined terminal-ids.


DLNVPASL
DLNVPASL TYPE=INITIAL,SYSTEM=CICS
DLNVPASL TYPE=ENTRY,V=T*00,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*01,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*02,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*03,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*04,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*05,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*06,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*07,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*08,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*09,KBL=E,P=XXXX
DLNVPASL TYPE=ENTRY,V=T*10,KBL=E,P=XXXX
DLNVPASL TYPE=FINAL


AQUABUST

*- CICS/STAIRS AQUA --------------------------------------------------*
*  Transaction identifier: AQUA.
*  Function: Intercept requests to initiate STAIRS' AQUARIUS.
*  Logic: 1) IF (we have been passed a parameter list)
*               Assuming this comes from the database selection
*               menu: AQUA userid(db-password) db-name
*                     CL4  CL8     CL4          CL4
*               create a TIOA, and fill in parameters for AQUA
*            ENDIF
*         2) Set 'Entering AQUA' indicator, and link to program that
*            will initialize VPASL entry for this user
*         3) Link to STAIRS' AQUA
*         4) Set 'Exiting  AQUA' indicator, and link to program that
*            will free VPASL entry for this user
* --------------------------------------------------------------------*
DFHEISTG DSECT ,                          CICS Dynamic Storage
PLIST    DS    CL24                       Parameters for AQUA startup
LENGTH   DS    H                          Length of parm list for AQUA
INDICATE DS    CL1                        Flag: 0=Entering AQUA
         COPY  DFHCSADS                   DSECT: Common System Area
         DFHTCA CICSYST=YES               DSECT: Task Control Area
         COPY  DFHTCTTE                   DSECT: Terminal Control Table
         COPY  DFHTIOA                    DSECT: Terminal I/O Area
TIOADATA DS    CL24                       TIOA User's Section
TCASYBA  EQU   5                          Base Register: System TCA
TCTTEAR  EQU   6                          Base Register: Our TCTTE
TIOABAR  EQU   7                          Base Register: TIOA
         GBLB  &DFHEIMX                   CICS will address
&DFHEIMX SETB  1                            the TCA and CSA
AQUABUST CSECT ,
* -----  Skip Acquisition of TIOA if no parameter list  ---------------
         EXEC CICS HANDLE CONDITION ERROR(GOAQUAT)
         LA    8,24                       Length of parameter list
         STH   8,LENGTH                    for AQUA startup
         EXEC CICS RETRIEVE INTO(PLIST) LENGTH(LENGTH)
         L     TCASYBA,TCASYAA            Establish System TCA
         USING DFHSYTCA,TCASYBA            Addressability
         L     TCTTEAR,TCAFCAAA           Get TCTTE Base Address
         DFHSC TYPE=GETMAIN,              Create a TIOA                +
               CLASS=TERMINAL,             for AQUA startup            +
               NUMBYTE=24                   parameter list
         L     TIOABAR,TCASCSA            Get address of new TIOA, and
         ST    TIOABAR,TCTTEDA             store it in the TCTTE
         MVC   TIOATDL,=H'24'             Length of TIOA data
         MVC   TIOADATA,PLIST             Move parameters into TIOA
GOAQUAT  DS    0H
* -----  Initialize VPASL entry for this user -------------------------
         MVI   INDICATE,C'0'              Set flag: Entering AQUA
         EXEC CICS LINK PROGRAM('USPRVPAS') COMMAREA(INDICATE)         +
               LENGTH(1)
* -----  Start up STAIRS' AQUARIUS            -------------------------
         EXEC CICS LINK PROGRAM('DLN007')
* -----  Free       VPASL entry for this user -------------------------
         MVI   INDICATE,C'1'              Set Flag: Exiting  AQUA
         EXEC CICS LINK PROGRAM('USPRVPAS') COMMAREA(INDICATE)         +
               LENGTH(1)
         EXEC CICS RETURN
         END   ,


USPRVPAS

*--CICS/STAIRS AQUA ---------------------------------------------------
*  Function: Initialize/Reset VPASL (Video Printer Association List)
*            entry for logged on user identifier.
*  Called  : By AQUA startup program when:
*            1) Entering AQUA: COMMAREA 'INDICATE' equals C'0'.
*            2) Exiting  AQUA: COMMAREA 'INDICATE' equals C'1'.
*  Logic:    Entering AQUA:
*            0) READ VSAM file to obtain printer terminal identifier
*               for logged on user. Scan VPASL for free entry (dummy,
*               ie T*00, T*01 etc.), and fill in terminal- and
*               printer-identifiers.
*            Exiting  AQUA:
*            1) Scan VPASL for logged on user's entry, and reset to
*               dummy (T*00, T*01 etc.).
         DFHREGS                   Register EQUates
DEBAR    EQU   R4                  Base Register: PPT Directory Entry
CAPTR    EQU   R5                  Base Register: Commarea
VPASLBAR EQU   R6                  Base Register: STAIRS' VPASL
PPTCBAR  EQU   R7                  Base Register: PPT
DFHEISTG DSECT                     CICS Dynamic Storage
TERMLOC  DS CL4                    Terminal-id to be located in VPASL
TERMSET  DS CL4                    ----------------- set     --------
USERID   DS CL8                    Terminal user-id
PRINTER  DS CL4                    Printer-id for VPASL entry
MELD1    DS CL78                   Message for CICS log
COUNT    DS PL2                    Counts up 00, 01 etc for
SUFF     DS CL3                     'Numeric' VPASL dummy entry suffix
EXIT     DS C                      Flag: Exit loop (Y/N)
FOUND    DS C                      Flag: Search argument located (Y/N)
COMAR    DSECT                     CICS Commarea
         USING COMAR,CAPTR          made addressable
INDICATE DS CL1                    Flag: 0=Entering AQUA
         COPY DFHCSADS             DSECT: Common System Area
         DFHTCA CICSYST=YES        DSECT: Task Control Area
         COPY DFHPPTDS             DSECT: Program Properties Table
         DLNVPASL SYSTEM=CICS,TYPE=DSECT  DSECT: STAIRS' VPASL
         DFHSSAD TYPE=DSECT        Static Storage Area Address List
         DFHTM MF=(D,TMSTATIC)     Table Mgr Static Storage Area
         DFHTM MF=(D,SKTTBLE)      Scatter Table
         DFHTM MF=(D,DIRELEM)      Table Directory Element
         GBLB  &DFHEIMX            CICS will address
&DFHEIMX SETB  1                     the TCA and CSA
USPRVPAS CSECT ,
         L     CAPTR,DFHEICAP          Address COMMAREA
         IF (CLI,INDICATE,EQ,C'0')     Entering AQUA ?
           MVC   TERMLOC,=CL4'T*'      Terminal to search for in VPASL
           MVC   TERMSET,EIBTRMID      ----------- set        --------
         ELSE                          Exiting  AQUA
           MVC   TERMLOC,EIBTRMID      Terminal to search for in VPASL
           MVC   TERMSET,=CL4'T*'      ----------- set        --------
         ENDIF
         IF (CLI,INDICATE,EQ,C'0')     Entering AQUA ?
*-   Get terminal user-id. Use as argument for reading               -*
*-   VSAM file to obtain printer terminal-id.                        -*
           EXEC CICS HANDLE CONDITION NOTFND(MESG2) TERMIDERR(MESG3)   X
              ERROR(RETURN)
           EXEC CICS ASSIGN USERID(USERID)
           EXEC CICS READ DATASET('USPRTTAB') EQUAL INTO(USERID)       X
               LENGTH(LRECL) RIDFLD(USERID)
*-   Check if this printer has been defined (TCT)                    -*
           EXEC CICS INQUIRE TERMINAL(PRINTER)
         ELSE
           MVC   PRINTER,=CL4'XXXX'    Set dummy printer-id
         ENDIF
* ----- Look for DLNVPASL in PPT chain                               -*
         L     DEBAR,CSAOPFLA          Address CSA Opt Feat List
         USING CSAOPFL,DEBAR
         L     DEBAR,CSASSA            Address Static Stg Area A List
         USING DFHSSADS,DEBAR
         L     DEBAR,SSATMP            Address TMSSA
         USING DFHTMSSA,DEBAR
         L     DEBAR,TMASKT3           Address PPT Scatter Table
         USING SKTTBLE,DEBAR
         L     DEBAR,SKTFDEA           Address 1st Directory Element
         USING DFHTMDEL,DEBAR
         MVI   EXIT,C'N'               Turn OFF loop exit flag
         MVI   FOUND,C'N'               Turn OFF 'DLNVPASL found' flag
         DO WHILE=(CLI,EXIT,EQ,C'N')     Loop until exit flag ON
           L     PPTCBAR,DIRTEA            Address this PPT entry
           IF (CLC,PPTPI,EQ,=CL8'DLNVPASL')  Is this DLNVPASL ?
             MVI EXIT,C'Y'                     Set the 'exit loop' and
             MVI FOUND,C'Y'                     'DLNVPASL found' flags
           ELSE                              This is not DLNVPASL,
             L     DEBAR,DIRGNCHN             so get next PPT dir entry
             IF (LTR,DEBAR,DEBAR,Z)       0 means end of PPT chain,
               MVI EXIT,C'Y'               so set 'exit loop' flag
             ENDIF
           ENDIF
         ENDDO
* ------ Now addressing DLNVPASL PPT entry if found.                 -*
* ------ Scan for relevant terminal-id in VPASL.                     -*
         IF (CLI,FOUND,EQ,C'Y')           Did we locate DLNVPASL/PPT ?
           L      VPASLBAR,PPTCSA         Get VPASL's core stg address
           USING  VPASLDMY,VPASLBAR        and make it addressable
           L      R8,ENTRY$               Get # of VPASL entries
           L      R9,ENTRYLG              Get VPASL entry length
           LA     VPASLBAR,ENTRY          Address
           USING  ENTRY,VPASLBAR           1st VPASL entry
           ZAP   COUNT,=P'0'              Initialize count for dummy
           MVI   EXIT,C'N'                Turn OFF 'exit loop' flag
           MVI   FOUND,C'N'               Turn OFF 'entry found' flag
           DO UNTIL=(CLI,EXIT,EQ,C'Y')    Do until exit flag ON
             UNPK   SUFF,COUNT            Make suffix for dummy
             MVZ    SUFF+2(1),=X'F0'       VPASL entry displayable
             IF (CLI,INDICATE,EQ,C'0')      Entering AQUA ?
               MVC    TERMLOC+2(2),SUFF+1   Yes; to locate a dummy
             ELSE                           No;
               MVC    TERMSET+2(2),SUFF+1      to reset entry to dummy
             ENDIF
             IF (CLC,TRMID,EQ,TERMLOC)      Relevant entry found ?
               MVI EXIT,C'Y'                Yes; set 'exit loop' and
               MVI FOUND,C'Y'                    'located' flags ON
             ELSE                           No;
               S  R8,=F'1'                   Dec # of VPASL entries
               IF (C,R8,GT,=F'0')            If more entries,
                 AR  VPASLBAR,R9              then address next, and
                 AP  COUNT,=P'1'               increment dummy suffix
               ELSE                          ELSE
                 MVI EXIT,C'Y'                 Quit
               ENDIF
             ENDIF
           ENDDO
           IF (CLI,FOUND,EQ,C'Y')           Relevant VPASL entry found?
             MVC  TRMID,TERMSET             Yes; update terminal and
             MVC  PRTID,PRINTER              hardcopy destination-ids.
           ELSE                             No;
             MVC  MELD1,MELDING2             DLNVPASL too small
             EXEC CICS WRITEQ TD QUEUE('CSMT') LENGTH(78) FROM(MELD1)
           ENDIF
         ELSE
            MVC  MELD1,MELDING4              DLNVPASL not in the PPT
            EXEC CICS WRITEQ TD QUEUE('CSMT') LENGTH(78) FROM(MELD1)
         ENDIF
RETURN   DS    0H
         EXEC CICS RETURN
MESG2    DS 0H
         MVC    MELD1,MELDING1         Did not find this user-id.
         MVC    MELD1+23(8),USERID      on VSAM user/printer file
         EXEC CICS WRITEQ TD QUEUE('CSMT') LENGTH(78) FROM(MELD1)
         B      RETURN
MESG3    DS 0H
         MVC    MELD1,MELDING3         Printer not defined
         MVC    MELD1+23(4),PRINTER     to CICS (TCT)
         EXEC CICS WRITEQ TD QUEUE('CSMT') LENGTH(78) FROM(MELD1)
         B      RETURN
MELDING1 DC    CL78'STAIRS/AQUA: User-Id            not found in user/p+
               rinter VSAM file.'
MELDING2 DC    CL78'STAIRS/AQUA: DLNVPASL table needs to be expanded fo+
               r more user/printer pairs'
MELDING3 DC    CL78'STAIRS/AQUA: Printer            not defined to CICS+
                (TCT)'
MELDING4 DC    CL78'STAIRS/AQUA: DLNVPASL not defined to CICS (PPT)'
LRECL    DC    H'12'                   Length of VSAM logical record:  +
                                       User-id (CL8)/printer-id (CL4)
         END   ,


Kjell Arne Eldhuset
Systems Programmer
Statoil (Norway)

