VTAM secondary program operator

While investigating problems encountered with terminals in the
CICS network, I have often wanted to display the VTAM status of
a particular terminal or to reactivate a minor node.  The only
methods available were to use the ROSCOE console command
facility or to enter the commands on the computer room console.

The following program solves the problem by allowing VTAM
display and vary commands to be issued using the SENDCMD
macro.  It then displays the result of the commands entered by use
of the RCVCMD macro.  If the display does not fit onto one
screen the remainder can be displayed by pressing the ENTER
key.  No further commands can be entered until the display is
complete.  The program is terminated with CLEAR or PF3.

I could have used the CICS ACB for VTAM communication but
chose to set up a separate ACB, which is opened and closed
within the program and can therefore be shared across CICS
systems.  If the ACB fails to open, a diagnostic message is
displayed.

The following VTAM coding should be added to your CICS
major node:

CICSVPO  APPL  AUTH=(ACQ,NOTSO,PASS,SPO),                             X
               PRTCT=CICSVPO,                                         X
               ACBNAME=CICSVPO

Notes:
%   The ACB is closed twice to purge any replies that have not
    been received.

%   It is advisable to protect this transaction as the V NET
    command is extremely powerful.


PROGRAM SOURCE CODE

         PUNCH '  SETCODE AC(1)'
*  CICS VTAM secondary operator program                             *
* Program is non-reenterant
VTAMOPR  CSECT
         LA    R4,ACB
         USING IFGACB,R4               | R4 --> ACB
         LA    R5,RPLSEND
         USING IFGRPL,R5               | R5 --> RPL
         MVC   #COMMAND(4),=X'00037777'
         MVC   #MSGH(4),=X'00037777'
* Open the VTAM acb, send initial map
         OPEN  ACB                     | Open VTAM ACB
         LTR   R15,R15                 | Check open successful
         BNZ   BADOPEN
         MVC   MESSO(40),=CL40'Enter VTAM command, CLEAR to terminate'
         MVC   PFKEYSO(76),@PFKEYS
         BAL   R10,ASKTIME
         EXEC CICS SEND MAP('VTAMM') MAPSET('VTAMS') ERASE
* Get next command
GETCMD   EXEC CICS HANDLE AID PF3(ENDUP) PF15(ENDUP) CLEAR(ENDUP)
         EXEC CICS HANDLE CONDITION MAPFAIL(RESEND)
         EXEC CICS RECEIVE MAP('VTAMM') MAPSET('VTAMS')
         CLC   CMDO(6),=CL6'D NET,'
         BE    SENDCMD
         CLC   CMDO(6),=CL6'V NET,'
         BE    SENDCMD
         MVC   MESSO(40),=CL40'Invalid VTAM command - re-enter'
RESEND   CLI   #MORE,X'FF'
         BE    SETLIMIT
         EXEC CICS SEND MAP('VTAMM') MAPSET('VTAMS')
         B     GETCMD
* Send command to VTAM
SENDCMD  DS    0H
         LA    R1,L10
         LA    R2,20
CLEARIT  MVI   0(R1),C' '              | Clear display lines
         MVC   1(77,R1),0(R1)
         LA    R1,83(R1)
         BCT   R2,CLEARIT
         LA    R2,68
         ST    R2,RPLRLEN
         MVC   #COMMAND+4(64),CMDI
         SENDCMD RPL=RPLSEND,                                          X
               AREA=#COMMAND,                                          X
               OPTCD=SYN,                                              X
               ACB=ACB
         LTR   R15,R15
         BNZ   BADSEND
         LA    R7,L10
         LA    R6,20
* Receive replies until FDBK2 indicates none left
SETLIMIT LA    R8,50
RECEIVE  LA    R5,RPLRCV
         USING IFGRPL,R5               | R5 --> RPL
         RCVCMD RPL=RPLRCV,                                            X
               ACB=ACB,                                                X
               AREA=#MSGH,                                             X
               AREALEN=168,                                            X
               OPTCD=NQ
         MVC   #RPL(32),RPLRCV
         LTR   R15,R15                 | Check RCVCMD return code
         BNZ   RCVERROR
         CLI   RPLFDB2,X'06'           | If 06 then reply received.
         BNE   RECEIVED
         BCT   R8,RECEIVE
RECEIVED TM    #MSGH+1,POHEND
         BO    FINISHED
* Write message to map
         MVC   0(78,R7),#MSG
         MVI   #MSG,C' '               | CLEAR THE MESSAGE AREA
         MVC   #MSG+1(79),#MSG
         LA    R7,83(R7)
         BCT   R6,SETLIMIT
         TM    #MSGH+1,POHEND
         BO    FINISHED
         CLI   #MSGH+1,X'01'
         BE    FINISHED
         MVI   #MORE,X'FF'
* Map full or no further messages - send map.
FINISHED DS    0H
         CLI   #MORE,X'FF'
         BNE   NOMORE
         MVC   MESSO(40),=CL40'Press ENTER for rest of display'
         MVI   #MORE,X'00'
         OI    CMDA,DFHBMASB
         MVC   PFKEYSO(76),@PFKEYS
         BAL   R10,ASKTIME
         EXEC CICS IGNORE CONDITION MAPFAIL
         EXEC CICS SEND MAP('VTAMM') MAPSET('VTAMS')
         EXEC CICS RECEIVE MAP('VTAMM') MAPSET('VTAMS')
         LA    R1,L10
         LA    R2,20
CLEARIT2 MVI   0(R1),C' '
         MVC   1(77,R1),0(R1)
         LA    R1,83(R1)
         BCT   R2,CLEARIT2
         LA    R7,L10
         LA    R6,20
         B     SETLIMIT
NOMORE   MVC   MESSO(40),=CL40'Enter VTAM command, CLEAR to terminate'
         MVC   PFKEYSO(76),@PFKEYS
         BAL   R10,ASKTIME
         MVI   CMDA,DFHBMBRY
SENDIT   EXEC CICS SEND MAP('VTAMM') MAPSET('VTAMS')
         B     GETCMD
* Return to CICS
ENDUP    EXEC CICS SEND CONTROL ERASE FREEKB
         CLOSE ACB
         CLOSE ACB                     | Second close is intentional
         EXEC CICS SEND TEXT FROM(@END1) LENGTH(78) ACCUM
         EXEC CICS SEND TEXT FROM(@END2) LENGTH(78) ACCUM
         EXEC CICS SEND PAGE
         EXEC CICS RETURN
* Get and display current time
ASKTIME  EXEC CICS ASKTIME
         UNPK  TEMPTIME(8),EIBTIME
         MVC   @TIME(2),TEMPTIME+2
         MVC   @TIME+3(2),TEMPTIME+4
         MVC   @TIME+6(2),TEMPTIME+6
         MVI   @TIME+2,C':'
         MVI   @TIME+5,C':'
         OI    @TIME+1,X'F0'
         OI    @TIME+4,X'F0'
         OI    @TIME+7,X'F0'
         UNPK  @DATE(5),EIBDATE
         OI    @DATE+4,X'F0'
         EXEC CICS ASSIGN APPLID(@APPLID)
         BR    R10
@TIME    EQU   PFKEYSO+45
@DATE    EQU   PFKEYSO+55
@APPLID  EQU   PFKEYSO+65
*  Vtam exit
TPEND    DS    0H
         USING TPEND,R15
         BR    R14
         DROP  R15
* ACB open error
BADOPEN  CVD   R15,#DOUBLE
         UNPK  #RC(4),#DOUBLE
         OI    #RC+3,X'F0'
         MVC   #OPENMSG+40(4),#RC
         EXEC CICS SEND TEXT FROM(#OPENMSG) LENGTH(80)
         EXEC CICS RETURN
* SENDCMD error
BADSEND  LA    R5,RPLSEND
         USING IFGRPL,R5               | R5 --> RPL
         CVD   R15,#DOUBLE
         UNPK  #RC(4),#DOUBLE
         OI    #RC+3,X'F0'
         MVC   #SENDMSG+40(2),#RC+2
         XR    R2,R2
         IC    R2,RPLRTNCD
         CVD   R2,#DOUBLE
         UNPK  #RC(4),#DOUBLE
         OI    #RC+3,X'F0'
         MVC   #SENDMSG+43(4),#RC
         MVC   @END1+3(70),#SENDMSG
         B     ENDUP
         DROP  R5
*RCVCMD  error
RCVERROR LA    R5,RPLRCV
         USING IFGRPL,R5               | R5 --> RPL
         CVD   R15,#DOUBLE
         UNPK  #RC(4),#DOUBLE
         OI    #RC+3,X'F0'
         MVC   #RCVMSG+40(2),#RC+2
         XR    R2,R2
         IC    R2,RPLRTNCD
         CVD   R2,#DOUBLE
         UNPK  #RC(4),#DOUBLE
         OI    #RC+3,X'F0'
         MVC   #RCVMSG+43(4),#RC
         MVC   @END1+3(70),#RCVMSG
         B     ENDUP
         DROP  R5
* RPL expansions
RPLSEND  RPL   AM=VTAM
RPLRCV   RPL   AM=VTAM
* ACB expansion
ACB      ACB   AM=VTAM,                                                X
               APPLID=POIID,                                           X
               PASSWD=POIPW,                                           X
               EXLST=EXLST,                                            X
               MACRF=NLOGON
* ACB exit list
EXLST    EXLST AM=VTAM,TPEND=TPEND
* Constants
POIID    DC    X'08',CL8'CICSVPO'      VTAM ACB name
POIPW    DC    X'08',CL8'CICSVPO'      VTAM ACB password
#OPENMSG DC    CL80'VTAM: Open of ACB failed - return code XX'
#RCVMSG  DC    CL80'VTAM: Non-zero return code from RCVCMD XX/XX'
#SENDMSG DC    CL80'VTAM: Non-zero return code from SENDCMD XX/XX'
@END1    DC    X'1DC913',CL75' '
@END2    DC    X'1DE8',CL76'VTAMOPR program terminated'
@PFKEYS  DC    CL76' '
         ORG   @PFKEYS+1
         DC    X'1DE8',C'PF3 ',X'1D60',C'END ',X'1D40'
         ORG
* EIB Dsect
DFHEISTG DSECT
#DOUBLE  DS    D
#COMMAND DS    CL68
#MSGH    DC    X'00037777'             | VTAM message header
#MSG     DC    CL160' '                | VTAM message return area
#RC      DS    X
#MORE    DS    X                       | Set to FF if more
#RPL     DS    CL32
TEMPTIME DS    CL8
         COPY VTAMS
* Other DSECTS
         COPY DFHBMSCA
         IFGACB AM=VTAM
         IFGRPL AM=VTAM
         ISTDPOHD
         END


MAP SOURCE CODE

VTAMS   DFHMSD TYPE=&SYSPARM,TIOAPFX=YES,STORAGE=AUTO,                 X
               CTRL=(FRSET,FREEKB),EXTATT=YES,LANG=ASM,MODE=INOUT
VTAMM   DFHMDI DATA=FIELD,SIZE=(024,080)
CMD     DFHMDF POS=(01,001),LENGTH=070,ATTRB=(UNPROT,BRT,IC)
MESS    DFHMDF POS=(02,001),LENGTH=070,ATTRB=(ASKIP,BRT)
L1      DFHMDF POS=(04,002),LENGTH=076,ATTRB=(ASKIP)
L2      DFHMDF POS=(05,002),LENGTH=076,ATTRB=(ASKIP)
L3      DFHMDF POS=(06,002),LENGTH=076,ATTRB=(ASKIP)
L4      DFHMDF POS=(07,002),LENGTH=076,ATTRB=(ASKIP)
L5      DFHMDF POS=(08,002),LENGTH=076,ATTRB=(ASKIP)
L6      DFHMDF POS=(09,002),LENGTH-076,ATTRB=(ASKIP)
L7      DFHMDF POS=(10,002),LENGTH=076,ATTRB=(ASKIP)
L8      DFHMDF POS=(11,002),LENGTH=076,ATTRB=(ASKIP)
L9      DFHMDF POS=(12,002),LENGTH=076,ATTRB=(ASKIP)
L10     DFHMDF POS=(13,002),LENGTH=076,ATTRB=(ASKIP)
L11     DFHMDF POS=(14,002),LENGTH=076,ATTRB=(ASKIP)
L12     DFHMDF POS=(15,002),LENGTH=076,ATTRB=(ASKIP)
L13     DFHMDF POS=(16,002),LENGTH=076,ATTRB=(ASKIP)
L14     DFHMDF POS=(17,002),LENGTH=076,ATTRB=(ASKIP)
L15     DFHMDF POS=(18,002),LENGTH=076,ATTRB=(ASKIP)
L16     DFHMDF POS=(19,002),LENGTH=076,ATTRB=(ASKIP)
L17     DFHMDF POS=(20,002),LENGTH=076,ATTRB=(ASKIP)
L18     DFHMDF POS=(21,002),LENGTH=076,ATTRB=(ASKIP)
L19     DFHMDF POS=(22,002),LENGTH=076,ATTRB=(ASKIP)
L20     DFHMDF POS=(23,002),LENGTH=076,ATTRB=(ASKIP)
PFKEYS  DFHMDF POS=(24,002),LENGTH=076,ATTRB=(ASKIP)
        DFHMSD TYPE=FINAL
               END


Paul Beesley
Senior Systems Programmer
Revlon Group (UK) ) Xephon 1989

