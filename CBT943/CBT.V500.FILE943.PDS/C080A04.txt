Creating a read-only mode for VSAM and DL/I


BACKGROUND

As in many installations, our users require 24-hour access to
production CICS. Purely from a CICS standpoint, this level of
availability is no longer difficult to achieve, and yet, from a
disaster recovery standpoint, there is the competing aim of
providing synchronized back-up copies of all production
datasets. For years this meant bringing down production CICS
regions (along with other production environments) during the
nightly back-up window. We solved the dilemma by providing
an enquiry-mode CICS environment during the back-up
window (roughly 2.00 to 4.00 am) and switching back to
normal operations upon its completion. The compromise meets
our users' needs and enables us to satisfy our disaster recovery
policy of never risking the loss of more than one day's data.


DETAILS OF THE READ-ONLY SOLUTION

To create the read-only CICS environment and to switch back,
I wrote a series of five command-level programs that operate
on FCT-defined (ie VSAM) and DL/I datasets. The programs
have run without failure for over a year in CICS 1.7 and 2.1
environments, under MVS/XA and MVS/ESA. Synchronized
back-ups have been taken nightly with complete integrity while
production datasets were allocated read-only to CICS. All five
programs can run in 31-bit addressing mode.

Read-only CICS is invoked initially by transaction FIL1, which
points to program SYSOFILA and executes just prior to the
start of the back-up window. Program SYSOFILA first links to
SYSOFILB, which in turn records current FCT FILSTAT and
SERVREQ settings for each VSAM dataset in the CICS
region. These settings are kept in a recoverable temporary
storage queue so that we can return the FCT datasets to their
original state at the completion of the back-up window.
SYSOFILA then begins to turn on the read-only mode. To
accomplish this, we format a series of CEMT SET arguments
and pass them to a started task, transaction FIL3 (program
SYSOFILX). SYSOFILX enlists the services of DFHEMTA,
the programmable interface to master terminal functions. FIL3
must be single-threaded via CMXT and TCLASS in order to
obtain the required serial execution of the CEMT commands.

Returning the datasets to their original state, as you might
expect, is roughly the reverse of setting the read-only mode.
Transaction FIL2, which points to SYSOFILC, runs at the
completion of the back-up window. Again, we format CEMT
SET arguments and pass them to the single-threaded FIL3
transaction for execution. A slight difference in the process is
that, whereas SYSOFILA formats the arguments for both DL/I
and FCT datasets, SYSOFILC formats the DL/I arguments and
relies on the linked program (SYSOFILD) to format the
appropriate arguments for FCT datasets. Arguments for the
VSAM datasets are based on their respective FCT settings
retrieved from temporary storage.


OPERATIONAL ISSUES

Read-only mode must be turned on in all CICS regions that
contain datasets for which you want back-up copies. This may
mean a single DOR or multiple AORs, depending on your
installation.

Where multiple regions are involved,  all of them must be in
read-only mode before you start your synchronized back-ups.
You can manage this process manually, but an automated
operations package works especially well here. It can intercept
the messages indicating successful transition to read-only
(issued by SYSOFLX) and then initiate the back-up window.
Likewise, it can detect the successful completion of the back-
up window and then initiate the return to normal operations in
each CICS region.

Another operational issue affects applications: what happens
when a transaction attempts to update a dataset that is in read-
only mode?  There are two cases:

1      If the dataset is VSAM (ie FCT), the transaction will raise
      the invalid request condition (AEIP).

2      If the dataset is DL/I, the attempt to schedule a PSB with
      update intent will fail.

In either case, you will see some harmless transaction abends,
assuming that you do nothing to circumvent them. There are
several good alternatives to doing nothing:

1      You could disable all but enquiry transactions, perhaps
      with the aid of an automated operations package.

2      You could have applications issue HANDLE CONDITION
      INVREQ for VSAM and interrogate the UIBFCTR and
      UIBDLTR return codes for DL/I and send a message to the
      terminal that CICS is temporarily read-only.

3      You could set a flag in the CWA indicating read-only or
      normal mode, from which applications could elect to send
      enquiry or normal transaction menus.

People often ask how long it takes to make the transition from
normal mode to read-only, and vice versa. We have three
AORs that are set simultaneously, so the limiting times are for
AOR1 and AOR3 (see Figure 1).


SYSOFILA PROGRAM SOURCE

* FUNCTION: SET DLI AND FCT DATASETS TO READ-ONLY
DFHEISTG DSECT                                                           notes
XFDATA   DS    CL25
SYSOFILA DFHEIENT CODEREG=(2,3),DATAREG=(5),EIBREG=(6)
         EXEC  CICS HANDLE CONDITION ERROR(ABEND)
         EXEC  CICS LINK PROGRAM('SYSOFILB')
         MVC   XFDATA,=C'DLI(*) DUMPDB            '                        1
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVC   XFDATA,=C'DAT(*) CLO DIS           '                        2
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVC   XFDATA,=C'DAT(*) NOADD NODEL NOUPD '                        3
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVC   XFDATA,=C'DAT(*) OPE ENA           '
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVI   XFDATA,X'80'                                                4
         MVC   XFDATA+1(24),XFDATA
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         B     RETURN
ABEND    DS    0H
         EXEC  CICS ASSIGN APPLID(MSG1APL)
         MVC   MSGOUT+4(80),MSG1
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         EXEC  CICS ABEND ABCODE('FILA')
RETURN   DS    0H
         EXEC  CICS RETURN
MSG1     DS   0CL80
         DC    CL10'XFIL001E  '
MSG1APL  DS    CL8
         DC    CL62' SET FILES TO READ-ONLY ENCOUNTERED ERROR(S)'
         LTORG
MSGOUT   WTO   '1234567890123456789012345678901234567890123456789012345X
               6789012345678901234567890',MF=L,DESC=6,ROUTCDE=10
         END


Notes on SYSOFILA

1      CEMT SET DLI(*) DUMPDB is equivalent to a
      combination of CEMT SET DLI(*) STOPPED and CEMT
      SET DLI(*) ACCESS(RO). The console will indicate
      READY to show that the databases are in read-only mode
      and ready to be copied.

2      FCT datasets must first be closed and disabled before their
      SERVREQ settings can be modified.

3      This CEMT command will eliminate any and all update
      capability for FCT datasets.

4      Starting transaction FIL3 with the X'80' data string
      indicates that the read-only process has completed - see
      program SYSOFILX.


SYSOFILB PROGRAM SOURCE

* FUNCTION: STORE FCT SETTINGS IN RECOVERABLE AUX TSQ
DFHEISTG DSECT                                                           notes
ADDSTAT  DS    F
DELSTAT  DS    F
UPDSTAT  DS    F
OPESTAT  DS    F
ENASTAT  DS    F
TSQREC   DS   0CL9
DDNAME   DS    CL8
STATBYTE DS    CL1       BITS: 0 1 2 3 4 5 6 7
*                              | | | | | | | |__ ADD
*                              | | | | | | |____ DELETE
*                              | | | | | |______ UPDATE
*                              | | | | |________ RESERVED
*                              | | | |__________ RESERVED
*                              | | |____________ RESERVED
*                              | |______________ ENABLED
*                              |________________ OPEN
SYSOFILB DFHEIENT CODEREG=(2,3),DATAREG=(5),EIBREG=(6)
         EXEC  CICS HANDLE CONDITION ERROR(ABEND)
         EXEC  CICS HANDLE CONDITION END(ENDINQ)
         EXEC  CICS INQUIRE DATASET START
SCANFCT  DS    0H
         EXEC  CICS INQUIRE DATASET(DDNAME) NEXT                       X
               ADD(ADDSTAT)                                            X
               DELETE(DELSTAT)                                         X
               UPDATE(UPDSTAT)                                         X
               OPENSTATUS(OPESTAT)                                     X
               ENABLESTATUS(ENASTAT)
         XC    STATBYTE,STATBYTE
CHKADD   CLC   ADDSTAT,DFHVALUE(ADDABLE)                                   1
         BNE   CHKDEL
         OI    STATBYTE,B'00000001'
CHKDEL   CLC   DELSTAT,DFHVALUE(DELETABLE)
         BNE   CHKUPD
         OI    STATBYTE,B'00000010'
CHKUPD   CLC   UPDSTAT,DFHVALUE(UPDATABLE)
         BNE   CHKOPE
         OI    STATBYTE,B'00000100'
CHKOPE   CLC   OPESTAT,DFHVALUE(OPEN)
         BNE   CHKENA
         OI    STATBYTE,B'10000000'
CHKENA   CLC   ENASTAT,DFHVALUE(ENABLED)
         BE    SETENA
         CLC   ENASTAT,DFHVALUE(UNENABLED)
         BNE   TESTSTAT
SETENA   OI    STATBYTE,B'01000000'
         B     PUTTSQ
TESTSTAT TM    STATBYTE,B'11000111'                                        2
         BZ    SCANFCT
PUTTSQ   EXEC  CICS WRITEQ TS AUXILIARY                                X   3
               QUEUE('SYSFSTAT')                                       X
               FROM(TSQREC)                                            X
               LENGTH(9)
         B     SCANFCT
ENDINQ   DS    0H
         EXEC  CICS INQUIRE DATASET END
         B     RETURN
ABEND    DS    0H
         EXEC  CICS ASSIGN APPLID(MSG1APL)
         MVC   MSGOUT+4(80),MSG1
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         EXEC  CICS ABEND ABCODE('FILB')
RETURN   DS    0H
         EXEC  CICS RETURN
MSG1     DS   0CL80
         DC    CL10'XFIL001E  '
MSG1APL  DS    CL8
         DC    CL62' SET FILES TO READ-ONLY ENCOUNTERED ERROR(S)'
         LTORG
MSGOUT   WTO   '1234567890123456789012345678901234567890123456789012345X
               6789012345678901234567890',MF=L,DESC=6,ROUTCDE=10
         END

Notes on SYSOFILB

1      Information on CICS-value data-areas (CVDA) can be
      found in the CICS Customization Guide under INQUIRE
      and SET functions.

2      If the status byte indicates a closed and disabled dataset
      with no update capabilities, there is no need to write a
      temporary storage record. The dataset will be in the same
      state after transaction FIL2 executes following the back-up window.

3      The temporary storage queue, here called SYSFSTAT,
      must be auxiliary. There should also be an entry in
      DFHTST specifying the queue as recoverable. Following
      this advice will allow you to reset your files even if the
      CICS region abends while in read-only mode.


SYSOFILC PROGRAM SOURCE

* FUNCTION: DRIVER TO RESET DLI AND FCT DATASETS
DFHEISTG DSECT                                                           notes
XFDATA   DS    CL25
SYSOFILC DFHEIENT CODEREG=(2,3),DATAREG=(5),EIBREG=(6)
         EXEC  CICS HANDLE CONDITION ERROR(ABEND)
         MVC   XFDATA,=C'DLI(*) STARTED           '                        1
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVC   XFDATA,=C'DAT(*) CLO DIS           '                        2
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         EXEC  CICS LINK PROGRAM('SYSOFILD')
         MVI   XFDATA,X'FF'                                                3
         MVC   XFDATA+1(24),XFDATA
         EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         B     RETURN
ABEND    DS    0H
         EXEC  CICS ASSIGN APPLID(MSG1APL)
         MVC   MSGOUT+4(80),MSG1
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         EXEC  CICS ABEND ABCODE('FILC')
RETURN   DS    0H
         EXEC  CICS RETURN
MSG1     DS   0CL80
         DC    CL10'XFIL002E  '
MSG1APL  DS    CL8
         DC    CL62' RESET FILES ENCOUNTERED ERROR(S)'
         LTORG
MSGOUT   WTO   '1234567890123456789012345678901234567890123456789012345X
               6789012345678901234567890',MF=L,DESC=6,ROUTCDE=10
         END

Notes on SYSOFILC

1      CEMT SET DLI(*) STARTED will return update
      capability to any DL/I datasets that had it prior to the
      DUMPDB command.

2      FCT datasets must first be closed and disabled before their
      SERVREQ settings can be modified.

3      Starting transaction FIL3 with the X'FF' data string
      indicates that the reset process has completed - see
      program SYSOFILX.


SYSOFILD PROGRAM SOURCE

* FUNCTION: RESET FCT SETTINGS TO VALUES STOWED IN AUX TSQ
DFHEISTG DSECT                                                           notes
TSQREC   DS   0CL9
DDNAME   DS    CL8
STATBYTE DS    CL1     BITS: 0 1 2 3 4 5 6 7
*                            | | | | | | | |__ ADD
*                            | | | | | | |____ DELETE
*                            | | | | | |______ UPDATE
*                            | | | | |________ RESERVED
*                            | | | |__________ RESERVED
*                            | | |____________ RESERVED
*                            | |______________ ENABLED
*                            |________________ OPEN
TSLEN    DS    H
XFDATA   DS    CL25
SYSOFILD DFHEIENT CODEREG=(2,3),DATAREG=(5),EIBREG=(6)
         EXEC  CICS HANDLE CONDITION ERROR(ABEND)
         EXEC  CICS HANDLE CONDITION ITEMERR(RETURN)
         MVC   TSLEN,=H'9'
         MVC   XFDATA(14),=C'DAT(        ) '
READTSQ  DS    0H
         EXEC  CICS READQ TS NEXT                                      X
               QUEUE('SYSFSTAT')                                       X
               INTO(TSQREC)                                            X
               LENGTH(TSLEN)
         MVI   XFDATA+14,X'40'
         MVC   XFDATA+15(11),XFDATA+14
         MVC   XFDATA+4(8),DDNAME
         TM    STATBYTE,B'00000111'                                        1
         BZ    CHKLEFT
CHKADD   TM    STATBYTE,B'00000001'
         BZ    CHKDEL
         MVC   XFDATA+14(3),=C'ADD'
CHKDEL   TM    STATBYTE,B'00000010'
         BZ    CHKUPD
         MVC   XFDATA+18(3),=C'DEL'
CHKUPD   TM    STATBYTE,B'00000100'
         BZ    RESET1
         MVC   XFDATA+22(3),=C'UPD'
RESET1   EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         MVI   XFDATA+14,X'40'
         MVC   XFDATA+15(11),XFDATA+14
         NI    STATBYTE,X'F0'                                              2
CHKLEFT  CLI   STATBYTE,B'11000000'
         BE    OPEENA
         CLI   STATBYTE,B'01000000'
         BE    CLOENA
         CLI   STATBYTE,B'10000000'
         BE    OPEDIS
         B     READTSQ
OPEENA   MVC   XFDATA+14(7),=C'OPE ENA'
         B     RESET2
CLOENA   MVC   XFDATA+14(7),=C'CLO ENA'
         B     RESET2
OPEDIS   MVC   XFDATA+14(7),=C'OPE DIS'
         B     RESET2
RESET2   EXEC  CICS START TRANSID('FIL3')                              X
               FROM(XFDATA)                                            X
               LENGTH(25)
         B     READTSQ
ABEND    DS    0H
         EXEC  CICS ASSIGN APPLID(MSG1APL)
         MVC   MSGOUT+4(80),MSG1
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         EXEC  CICS ABEND ABCODE('FILD')
RETURN   DS    0H
         EXEC  CICS IGNORE CONDITION QIDERR
         EXEC  CICS DELETEQ TS QUEUE('SYSFSTAT')
         EXEC  CICS RETURN
MSG1     DS   0CL80
         DC    CL10'XFIL002E  '
MSG1APL  DS    CL8
         DC    CL62' RESET FILES ENCOUNTERED ERROR(S)'
         LTORG
MSGOUT   WTO   '1234567890123456789012345678901234567890123456789012345X
               6789012345678901234567890',MF=L,DESC=6,ROUTCDE=10
         END

Notes on SYSOFILD

1      If the status byte indicates a dataset with no update
      functions, we need only reset its open/enabled status.

2      The NI instruction allows us to test the high-order bits
      (open/enabled status) without regard for the low-order bits.

SYSOFILX PROGRAM SOURCE

* FUNCTION: LINK DFHEMTA WITH FILE COMMAND PASSED IN START
DFHEISTG DSECT                                                           notes
XFDATA   DS    CL25
XFLENG   DS    H
EMTALIST DS   0CL20
EMTA1    DS    F
EXTA2    DS    F
EMTA3    DS    F
EMTA4    DS    F
EMTA5    DS    F
COMMAND  DS    CL34
COMLENG  DS    H
INDBYTE  DS    CL1
RETAREA  DS    CL100
RETLENG  DS    H
CWAREG   EQU   7                                                           1
CWADS    DSECT
         USING CWADS,CWAREG
         COPY  SYSCCWAA
SYSOFILX DFHEIENT CODEREG=(2,3),DATAREG=(5),EIBREG=(6)
         EXEC  CICS HANDLE CONDITION ERROR(ERRORS)
         MVC   XFLENG,=H'25'
         EXEC  CICS RETRIEVE                                           X
               INTO(XFDATA)                                            X
               LENGTH(XFLENG)
         CLC   XFDATA(10),=X'80808080808080808080'                         2
         BE    PUTMSG1
         CLC   XFDATA(10),=X'FFFFFFFFFFFFFFFFFFFF'                         3
         BE    PUTMSG2
         LA    4,COMMAND
         ST    4,EMTA1
         LA    4,COMLENG
         ST    4,EMTA2
         LA    4,INDBYTE
         ST    4,EMTA3
         LA    4,RETAREA
         ST    4,EMTA4
         LA    4,RETLENG
         ST    4,EMTA5
         MVC   COMMAND(9),=C'CEMT SET '
         MVC   COMMAND+9(25),XFDATA
         MVC   COMLENG,=H'34'
         XC    INDBYTE,INDBYTE
         XC    RETAREA,RETAREA
         MVC   RETLENG,=H'100'
         EXEC  CICS LINK PROGRAM('DFHEMTA')                            X   4
               COMMAREA(EMTALIST)                                      X
               LENGTH(20)
         B     RETURN
ERRORS   DS    0H
         EXEC  CICS DUMP TASK DUMPCODE('FILX')
         B     RETURN
PUTMSG1  DS    0H
         EXEC  CICS ADDRESS CWA(CWAREG)                                    5
         OI    MODESW,X'FF'
         EXEC  CICS ASSIGN APPLID(MSG1APL)
         MVC   MSGOUT+4(80),MSG1
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         B     RETURN
PUTMSG2  DS    0H
         EXEC  CICS ADDRESS CWA(CWAREG)
         XC    MODESW,MODESW
         EXEC  CICS ASSIGN APPLID(MSG2APL)
         MVC   MSGOUT+4(80),MSG2
         LA    1,MSGOUT
         WTO   MF=(E,(1))
         B     RETURN
RETURN   DS    0H
         EXEC  CICS RETURN
MSG1     DS   0CL80
         DC    CL10'XFIL001I  '
MSG1APL  DS    CL8
         DC    CL62' FILES NOW SET TO READ-ONLY STATUS'
MSG2     DS   0CL80
         DC    CL10'XFIL002I  '
MSG2APL  DS    CL8
         DC    CL62' FILES NOW RESET TO FORMER STATUS'
         LTORG
MSGOUT   WTO   '1234567890123456789012345678901234567890123456789012345X
               6789012345678901234567890',MF=L,DESC=6,ROUTCDE=10
         END

Notes on SYSOFILX

1      Code for addressing the CWA is optional. You may want
      to set a flag in the CWA indicating read-only or normal
      mode - see code at labels PUTMSG1 and PUTMSG2, as
      well as the Operational issues section of this article.
      SYSCCWAA should be the name of your CWA DSECT.

2      The X'80' data string indicates that the read-only mode is
      on. We will write a happy message and, optionally, set the
      CWA flag.

3      The X'FF' data string indicates that we are back in normal
      mode. Send another good message and reset CWA flag.

4      The CICS Customization Guide documents DFHEMTA
      and the required parameter list.

5      MODESW is a 1-byte flag defined in the CWA. A value of
      X'FF' indicates read-only mode, while X'00' indicates
      normal. This flag can be very useful for applications
      programmers.

Russell Hunt
CICS Systems Programmer (USA)                               c Reserved 1992

