An automatic print re-routing utility

The following program is used at our shop to monitor all the
AID elements chained for transient data destinations queued for
printing and to check the status of the primary printer.  If the
primary printer is not available the print is automatically re-
routed to an alternative printer if there is one available.

The integrity of the original data has been taken into account
and several checks are made before the re-routing can take
place.  For example, the alternative printer is checked to ensure
the following conditions exist:

o      The printer is 'in service'

o      The printer is not busy

o      The printer is defined in the TCT

o      The printer is in an 'intervention required' condition.

SOFTWARE REQUIREMENTS

o      CICS 2.1 or CICS 1.7

o      MVS/XA.

TABLE DEFINITIONS

PPT entries

      DFHPPT TYPE=ENTRY,PROGRAM=XSPROUTP,PGMLANG=ASSEMBLER
      DFHPPT TYPE=ENTRY,PROGRAM=XSPPTABL,PGMLANG=ASSEMBLER
      DFHPPT TYPE=ENTRY,PROGRAM=XSPPRNTP,PGMLANG=ASSEMBLER

PCT entries

      DFHPCT TYPE=ENTRY,TRANSID=XQST,PROGRAM=XSPROUTP
      DFHPCT TYPE=ENTRY,TRANSID=XPRT,PROGRAM=XSPPRNTP

CUSTOMIZATION

Pairs of primary and alternate printer-ids eligible for re-routing
are defined in a table called XSSPTABL.

XSPROUTP SOURCE

         TITLE 'R E R O U T E   P R I N T   P R O G R A M  '
***********************************************************************
* MODULE NAME = XSPROUTP                                              *
* LEVEL = CICS2.1.1                                                   *
* DESCRIPTIVE NAME = REROUTE PRINT PROGRAM                            *
* FUNCTION = MONITORS ALL THE AID ELEMENTS CHAINED OFF DCTS QUEUED    *
*            FOR THE XXXX PRINT TRANSACTION AND CHECKS THE STATUS     *
*            OF THE PRIMARY PRINTER . IF THE PRIMARY PRINTER IS NOT   *
*            AVAILABLE THE PRINT IS AUTOMATICALLY REROUTED TO AN      *
*            ALTERNATE PRINTER IF AVAILABLE                           *
* DEPENDENCIES = NONE                                                 *
***********************************************************************
         DFHREGS                   EQUATE REGISTERS
AIDCBAR  EQU  R7
DCTCBAR  EQU  R8
TIOABAR  EQU  R9
TCTTEAR  EQU  R1/
         COPY DFHCSADS         CSA DSECT
         COPY DFHTCADS         TCA DSECT
TWAICLL  DS    H         LENGTH OF IC DATA
TWAICBB  DS    H         MUST BE SET TO ZERO
TWAQID   DS    CL4       QUEUE ID
         DFHTCTZE CICSYST=YES
         COPY DFHAIDDS         AID DSECT
         COPY DFHDCTDS         DCT DSECT
XSPROUTP CSECT
         BALR  R3,/
         USING *,R3
         L     DCTCBAR,CSADCTBA    POINT TO BEG OF DCT TABLE
         LTR   DCTCBAR,DCTCBAR     JUST IN CASE ANY DCT ?
         BZ    $SLEEP              ... NO
$PROCESS DS    /H
         CLC   TDDCTDID,=F'-1'     END OF TABLE REACHED
         BE    $SLEEP              ... YES
         TM    TDDCTDT,X'8/'       TYPE=INTRA
         BZ    $NXTDCT             ... NO THEN IGNORE
         L     AIDCBAR,TDDCTAAD    CURRENT ATI AID
         LTR   AIDCBAR,AIDCBAR     ...ANY ELEMENT FOUND ?
         BZ    $NXTDCT             ... I GUESS NOT
**       CLC   AIDTRNID,=C'XPR1'   XXXX TRANS ELIGIBLE FOR REROUTE
**       BE    $TSTATUS
**       CLC   AIDTRNID,=C'XPRT'   TRANS ELIGIBLE FOR REROUTE
**       BNE   $NXTDCT
$TSTATUS DS    /H
         MVC   TCATPTA(4),AIDTRMID
         DFHTC CTYPE=LOCATE,TERM=ID
         DFHTC CTYPE=CHECK,INVID=$ALLOK
         L     TCTTEAR,TCATPTA
**********************************************************************
*** THIS ROUTINE WILL DECIDE WHICH PRINTER TO BE USED. THE PRIMARY ***
*** PRINTER IS TESTED FIRST. IF IT IS NOT AVAILABLE THE ALTERNATE  ***
*** PRINTER IS TESTED.                                             ***
*** THIS ROUTINE IS CONDITIONAL IF ANY ERROR IS ENCOUNTERED        ***
*** THE ALT PRINT TRANSACTION IS NOT STARTED .                     ***
*** THIS APPROACH IS TAKEN TO KEEP THE INTEGRITY OF THE ORIGINAL   ***
*** DATA CREATED INTACT .                                          ***
**********************************************************************
         TM    TCTTETS,TCTTESOS     IS PRINTER OUT OF SERVICE ?
         BO    $CHKALT              ... YES
         TM    TCTEIINT,TCTEINT     INTERVENTION REQUIRED ?
**                                  EXAMPLE PRINTER OUT OF PAPER
**                                  DEVICE NOT PHYSICALLY ATTACHED
         BO    $CHKALT              ...YES
         B     $ALLOK
$CHKALT  DS    /H
         MVC  TCAPCPI,=CL8'XSPPTABL'  PRINTER/ALT PRINTER TABLE NAME
         DFHPC TYPE=LOAD,                                              X
               PGMIDER=$ALLOK       IF ERROR IGNORE ALTPRINT ROUTINE
         L     R5,TCAPCLA           GET ADDRESS OF TABLE JUST LOADED
$PRTSCAN DS    /H
         CLC   /(4,R5),=F'-1'        END  OF TABLE REACHED ?
         BE    $ALLOK                IGNORE ALTERNATE PRINTER ATTEMPT
         CLC   TCTTETI,/(R5)         PRINTER ID FOUND IN TABLE
         BE    $ALTCHK             ...YES GO SCHEDULE ALTERNATE PRINTER
         A     R5,=F'8'              BUMP TO NEXT TABLE ENTRY
         B     $PRTSCAN              DO IT UNTIL EXHAUSTED
* BEFORE STARTING THE REROUTE TRANSACTION ASSURE THE AVAILABILITY
* OF THE ALTERNATE PRINTER
$ALTCHK  DS    /H
         MVC   TCATPTA(4),4(R5)     GET ALTERNATE PRINTER ID
         DFHTC CTYPE=LOCATE,TERM=ID
         DFHTC CTYPE=CHECK,INVID=$ALLOK    IGNORE REQUEST
         L     TCTTEAR,TCATPTA
         TM    TCTTETS,TCTTESOS     IS PRINTER OUT OF SERVICE ?
         BO    $ALLOK               ... YES DO NOT REROUTE PRINTOUT
         TM    TCTEIINT,TCTEINT     INTERVENTION REQUIRED ?
         BO    $ALLOK               ...YES DO NOT REROUTE PRINTOUT
         OC    TCTTECA,TCTTECA      ANY TASK ALREADY ATTACHED
         BNZ   $ALLOK               ... YES TRY LATER
*** AT THIS POINT THE REPORT IS ELIGIBLE FOR REROUTING
$FNDID   DS    /H
         MVC   TWAQID,/(R5)        GET QUEUE ID FROM TABLE
         MVC   TCAICTID,4(R5)      ALTERNATE PRINTER ID FROM TABLE
         MVC   TWAICBB,=H'/'       INITIALIZE BBBB FIELD
         MVC   TWAICLL,=AL2(8)     LENGTH OF DATA + LLLLBBBB
         DFHIC TYPE=PUT,           INITIATE                            X
               TRANSID=XPRT,       TRANSACTION XPRT                    X
               INTRVAL=//////,     IMMEDIATELY                         X
               TRMIDNT=YES,        TERMID IN TCA                       X
               ICDADDR=TWAICLL,    PASSED DATA                         X
               ERROR=$ALLOK,       IF ERROR IGNORE ALTERNATE PRINTER   X
               NORESP=$ALLOK       ... GO TEST FOR MORE DATA
$ALLOK   DS    /H
         B     $NXTDCT
* SCAN THE WHOLE DCT FOR AIDS CREATED  FOR UCFD TRANSACTION
$NXTDCT  DS    /H
         AH    DCTCBAR,TDDCTELN    POINT TO NXT DCT ENTRY
         CLC   TDDCTDID,=F'-1'     END OF TABLE REACHED
         BE    $SLEEP              ... YES
         B     $PROCESS            TRY NEXT ENTRY
$SLEEP   DS    /H                 FOR 5 MINUTES
         DFHIC TYPE=INITIATE,INTRVAL=///5//,TRANSID=XQST,              X
               NORESP=RETURN,ERROR=RETURN
*        R E T U R N  T O  C I C S
RETURN   DS    /H
         DFHPC TYPE=RETURN
*        A B E N D  T R A N S A C T I O N
ROUTEXIT DS    /H
         MVC   TCAPCAC,=C'AQST'       ABEND CODE
         DFHPC TYPE=ABEND
         LTORG
         END   XSPROUTP

XSPPRNTP SOURCE

         COPY  DFHCSADS
         COPY  DFHTCADS
         COPY  DFHTCTTE
         COPY  DFHTIOA
         COPY  DFHTDIA
TCTTEAR  EQU   11
TIOABAR  EQU   9
TDIABAR  EQU   8
BASEREG  EQU   1/
XSPPRNTP CSECT
         BALR  BASEREG,/
         USING *,BASEREG
         L     TCTTEAR,TCAFCAAA
         DFHIC TYPE=GET,NORESP=$GETOK
         DFHPC TYPE=ABEND,ABCODE=APRI
$GETOK   DS    /H
         L     R6,TCAICDA
$DATAOK  DS    /H
         MVC   TCATDDI,4(R6)            ORIGINAL QUEUE NAME
         DFHTD TYPE=GET,NORESP=TDOK,QUEZERO=$ALLDONE
         DFHPC TYPE=ABEND,ABCODE=APRT
TDOK     L     TDIABAR,TCATDAA          ESTABLISH ADDRESSABILITY
         DFHSC TYPE=GETMAIN,CLASS=TERM,INITIMG=//,NUMBYTE=2///
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         SR    3,3                      CLEAR REG 3 PAD CHAR FOR MOVE
         LH    3,TDIAIRL                DATA LENGTH + 4
         SH    3,=H'4'                  SUBTRACT LL FOR MOVE
         LA    2,TIOADBA                TO ADDRESS  FOR MOVE
         LA    4,TDIADBA                FROM ADDRESS FOR MOVE
         LR    5,3                      PAD CHAR + LENGTH FOR MOVE
         MVCL  2,4                      MOVE TO TIOA
         LA    2,TIOADBA                RESTORE TIOA DATA ADDRESS
         SR    3,3                      CLEAR REG 3
         LH    3,TDIAIRL                DATA LENGTH + 4
         SH    3,=H'4'                  SUBTRACT LL
         AR    2,3                      POSITION TO END OF DATA IN TIOA
         MVI   /(2),X'15'               INSERT NL CHARACTER
         MVI   1(2),X'19'               INSERT EOM CHARACTER
         LA    3,2(3)                   LENGTH FOR WRITE (DATA+NL+EOM)
         STH   3,TIOATDL                LENGTH FOR WRITE
         DFHTC TYPE=(WRITE,ERASE,WAIT),CTLCHAR=C8
         B     $DATAOK
*                                       NL IN DATA + START PRINTER
$ALLDONE DFHPC TYPE=RETURN
         LTORG
         END

XSPPTABL EXAMPLE

XSPPTABL CSECT
*              R E R O U T E   P R I N T  T A B L E
*                PRINTER    ALTPRINTER    LOCATION
*                -------    ----------    --------
         DC   CL4'PRT1',CL4'PRT2'         NYC
         DC   CL4'PRT3',CL4'PRT4'         LA

* ADD AS MANY ENTRIES AS NEEDED HERE

         DC   CL4'XXXX',CL4'XXXX'         DUMMY
         DC   XL4'FFFFFFFF'               END OF TABLE
         END


Eric Dubois
Systems Consultant
Paine Webber Inc (USA)


