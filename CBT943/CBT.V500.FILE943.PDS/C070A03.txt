CICS security - part 2

The first program which needs to be created is the sign-on file
maintenance program.  Part 2 deals with this program, its
associated map, and the creation of the sign-on file.


THE SECURITY FILE

The major problem with creating an easy to use system for on-
line maintenance of a security file is security of the file itself.
Because the file is a VSAM KSDS file, protection in batch is a
simple matter of assigning a password to the file and catalog.
However, because the VSAM password is specified to CICS at
the FCT level, it would be simple for any programmer to write
a program to access the file on-line.  If you are running CICS
1.7 or later, you can use CICS resource level checking, by
specifying RSLC=YES for all non-sign-on transactions, and
assigning a resource level key to the security file in the FCT.
Note that resource level checking only works on transactions
using the command-level interface, so it will have no effect on
these sign-on programs unless you write them in command
level.  The sign-on file maintenance program should therefore
be given a CICS transaction key which only authorized security
administrators have access to.

The file name used in these programs is V999, and the file
layout is as follows:

Field                      Position            Description
Name                    1-20      Key field, operator name
Password             21-24      Encrypted operator password
Operator id      25-27      Standard CICS operator id
Security key      28-30      CICS security keys
Operator priority      31      CICS operator priority
Date last updated *      32-35      Last password update
Date last used *      36-39      When this operator last signed on
Old password 1      40-43      Previous password
Old password 2      44-47      Password before previous one
GENER/OL password      48-51      See the GENER/OL interface
User name      52-71      Operator's actual name
Last attempt      72      See note below
Failed attempts      73      Number of failed sign on attempts

* These dates, like the dates CICS deals with, are packed fields
containing the Julian date.

Notes

Where an occasional user's password has expired, he will be
given the opportunity to change his password when he next
signs on.  The opportunity is only given once and this indicator
will be set to 1 (from 0) if the operator fails to change the
password.  Once this indicator is set, log-on attempts using this
sign-on code will not be permitted.  The indicator is displayed
on the maintenance screen next to the LAST UPDATED field,
and can be set or unset by the security administrator.  Setting
the indicator is also a method of temporarily invalidating the
sign-on code.  This can be useful if a person leaves, but you
wish to retain his sign-on code because it may be passed on to
his replacement.  By setting this indicator, you can ensure that
the password is changed before it is allocated to a new user.

The following VSAM AMS definition will create the file.  This
definition is for 3375 disk drives, and will provide enough
space for over 2,000 sign-on codes.

DEFINE CL (NAME(V999.PROD) FILE(V999) SHR(2) VOL(vvvvvv) -
          IMBED KEYS(20 0) REPLICATE READPW(filepassword) -
          BUFSP(4096) FSPC(20 20) ) -
     DATA (NAME(V999.PROD.DATA) RECSZ(100 100) -
          TRACKS(12 3) CISZ(1024) ) -
     INDEX (NAME(V999.PROD.INDEX) TRACKS(3 1) CISZ(512) ) -
     CAT (vvvvvv.UCAT/catalogpassword)

The following FCT entry will define the file to CICS 1.7:

V999     DFHFCT TYPE=DATASET,DATASET=V999,ACCMETH=VSAM,                C
                FILSTAT=(ENABLED,OPENED),LSRPOOL=NONE,                 C
                RECFORM=(FIXED,BLOCKED),                               C
                SERVREQ=(ADD,BROWSE,DELETE,READ,UPDATE),               C
                LOG=YES,JID=SYSTEM,JREQ=(WN,WU),                       C
                PASSWD=filepassword,STRNO=12

Notes

1      To avoid buffer contention, the file does not use the LSR pool.

2      The number of strings allocated can be reduced for small
      systems with few users signing on, and enlarged for larger
      systems.  Note that CICS 1.7 uses significantly more
      strings than previous releases, so pre-1.7 users should be
      able to reduce the STRNO value.

3      Journalling to the system log is specified.

Having created the file and its FCT entry, a record should be
loaded using a utility such as SELCOPY.  Once this record is
loaded, the file can be made available to CICS.  The entire file
could be loaded using such a utility, although it would be
unusable because the password would need encryption.  The
program does allow unencrypted passwords to be altered later
however.  It would therefore be possible for the security
administrator to create the file, log on using the supplied CICS
security program DFHSNP, and then use the security
maintenance program to encrypt the passwords.  How this is
done is discussed below.


THE MAINTENANCE PROGRAM

The program itself is simple to use.  Once the transaction code
has been entered, the screen layout shown in Figure 1 is
displayed.  All functions are driven from this screen.  The
program creates, modifies, and deletes sign-on entries.  It can
be browsed using a generic key, or by using part or all of the
user's real name.  To add a record, type in the details into the
blank screen and press ENTER.  To update a record, type in
the key (operator name) and press PF1, pressing PF1 again to
perform the update (a message will inform you of a successful
update).  To browse, type in all or part of the key at which you
wish to start browsing, and press PF2; keep pressing PF2 to
browse through.  To delete, read the record for update and
press PF9 (see below for details).  To scan for a user's real
name, type the part of the name required and press PF5.

Now refer to the screen layouts.  Figure 1 shows the layout
presented to the security administrator on entry to the program.
To create a sign-on code, fill in the details, as in the example
in Figure 2.  Note that Freddy Smith has been given access to
applications 3, 7, and 22, by typing a 'Y' next to the
application identifier.  This will set the appropriate CICS
security keys.  Note also that after typing the password, the
cursor will move to a field to the right of the 'LAST
UPDATED' field.  Anything typed in this field will be ignored
(see the next paragraph for an explanation).

Figure 3 is the result of filling in the NAME field and pressing
PF1, or of browsing through to FSMITH using the PF2 key.
You can see that the fields in the top right hand corner are now
filled in.  The LAST UPDATED field refers to when the
password was last updated, while the LAST USED field refers
to the the last time the user actually used this sign-on code.
The zero to the right of the LAST UPDATED field is used to
enable this sign-on code, and is automatically set to zero unless
changed to '1' by this program, or unless the user fails to
change his sign-on code when instructed to do so.  This
program can be used to reset this code back to '0' (ie enable
the sign-on code), if for example, the security administrator is
requested to do so to enable the user to make the change.

Figure 4 shows this example sign-on code being changed to
remove access to application 7.  The NAME field has been
entered, and PF1 pressed.  'N' has been entered next to
application 7, and PF1 pressed again.  The message 'UPDATE
OK - PRESS ENTER' in the top right hand corner confirms the
update.

The security file maintenance program was written on the basis
that there is very limited access to the file and the transaction.
If you intend updating a record, this program (unlike the actual
sign-on program itself) will read it with update intent.  This
means that the record, plus all the other records on the same
VSAM control interval, will be locked out to all other users
until the update is cancelled or completed.  If you merely wish
to look at a record, use browse rather than update mode.

The following notes are provided to describe the functions of
key sections of the code.  This is to illustrate some techniques
which users who already have their own security system might
like to include.  Note also that the map, SIGNMP3, is
included.  This map provides the basic screen layout for this
program.  You should not change this name when cataloging
the map as it is used internally within the file maintenance
program.  Examine this map carefully, because it provides a
description for each of the 24 security keys it supports (see
Figure 1).  This description should be altered to suit your
installation's standards for transaction security keys.

The program only supports 24 of the 64 security keys now
available under CICS 1.7.  Note that SNNT is a user-specific
control block and should not be confused with the list of sign-
on codes defined in DFHSNT.  It has two fields for the security
keys: SNNTSK and SNNTSKE.  It is assumed that for
compatibility with previous releases, SNNTSK contains the
security keys 1 to 24, while SNNTSKE contains security keys
from 25 to 64.  The sign-on program therefore does not use
SNNTSKE.

The PCT entry is quite straightforward, with a TWA size of 89
bytes and a security key allocated to only authorized personnel.
PPT entries are required for the program and mapset, both are
Assembler language.  The program is not called externally, so
the program name and transaction code used is a matter of
choice (the CSECT name is SNP3).

Part 2 of our look at CICS security will be continued next
month, when we shall be publishing the source code for the
program, SNP3, and its associated map, SIGNMP3.


Robin Lynch
Software Support Manager (UK)                  c Xephon/Reserved 1991

