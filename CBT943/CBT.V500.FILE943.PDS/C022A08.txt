 Keeping remote BTAM lines in service

Here is a timesaver that may prove beneficial to some of you who are still
unfortunate enough to be struggling with remote BTAM/CICS lines and controllers.
As you are probably well aware, BTAM/BSC is not the most robust of protocols,
especially if you are dealing with long lines that travel any significant
distance.

Our leased data lines run approximately 2000 miles between the host in Portland,
Oregon, and Harris 8000s in Springfield, Ohio.  Whenever the line(s) pick up a
little noise, take a few gain or phase 'hits', or drop carrier for a couple of
seconds, BTAM's standard response is to put any CICS lines and their associated
terminals (as defined in the TCT) out of service.  Besides being extremely
painful for the remote users, it can waste a significant amount of computer
operations' time checking the line(s) status and putting them back in service.
On a bad day, we have had the lines drop two dozen times or more.

The objective of the command-level COBOL program, LINECHK, was two-fold:
firstly, we wanted to minimise the amount of down-time our remote users were
having due to temporary 'burps' on the line(s);  secondly, we wanted to minimise
the amount of time our computer operators and various members of DP staff were
spending babysitting the network because of temporary line hits.  This program
is currently running on a CICS 1.6.0 system under DOS/VSE 1.3.5.

Our objectives are actually accomplished via two separate programs.  The first
program, CEMTCMD, is a kind of catch-all program that we execute as part of our
CICS DFHPLTPI initialisation processing.  This program's main purpose is to
execute any CEMT commands necessary during CICS fire-up.  The last thing it does
before returning control to CICS is to issue an interval control start command
for the LINECHK program (transaction-id LCHK).  LINECHK is the program that is
monitoring our remote network and making our jobs a little easier.

TThe LINECHCK program sleeps in a corner of CICS on the ICE chain.  Currently we
have it set to wake up five minutes after CICS comes up and to start monitoring
the remote lines.  It does a CEMT enquiry command on each line in our network.
If it finds a line out of service, it issues a CEMT INS command and increments
an OUTSRV counter for that line.  After checking all of the lines, it saves its
counters in temporary storage, and issues an interval control start command for
itself, specifying a one- minute interval.  It then returns control to CICS and
sleeps for the specified interval.  LINECHK will attempt to put a line back in
service up to nine times in a row before giving up and issuing a message to the
operator that the line is permanently down and requires manual intervention.  It
will then stop trying.

Even though LINECHK comes up automatically at CICS fire-up, we have built in the
ability for our operators to stop and start it at will if they deem it
necessary.  By issuing the command LCHK CANCEL from a clear CICS screen, LINECHK
will cancel itself off the ICE chain and cease its one-minute repetitions.  When
the line or controller problem has been resolved, LCHK START can be issued from
a clear CICS screen, and will set itself up on the ICE chain again and resume
its one-minute cycle.

LINECHK takes up just over 7K of storage, not counting its link to the DFHEMTA
program.  We have noticed no obvious overhead or impact on our CICS system since
it was installed.  If you have an extremely busy CICS system you may want to
increase your MXT and AMXT values in your SIT by 1 or 2 to help ensure that
LINECHK will not be slowed down waiting on either of these.

The code in both CEMTCMD and LINECHK is fairly well documented: most people
should be able to follow it very easily.  One word of caution - if you refer to
the appropriate IBM CICS publications on executing CEMT commands from within an
application program, you will note that IBM does not guarantee the format of the
pass area returned to your application from one CICS release to another.
Therefore, both programs should be checked and thoroughly tested when migrating
from one release of CICS to another.
CEMTCMD

 IDENTIFICATION DIVISION.
      .
*  THIS PROGRAM IS EXECUTED ONCE AT CICS FIRE-UP.           *
*  PROGRAM IS KICKED OFF VIA ENTRY IN CICS PROGRAM LIST     *
*  TABLE 'DFHPLTXX'.                                        *
*  THE PURPOSE OF THIS PROGRAM IS TO SWITCH THE CICS DUMP   *
*  DATASETS FROM DUMPSET A TO DUMPSET B, AND BACK TO        *
*  DUMPSET A. THIS SWITCHING CLEARS THE DUMP DATASETS AT    *
*  CICS START-UP WITHOUT OPERATOR INTERVENTION.             *
*  PROGRAM LEAVES DUMPSET A OPEN IN 'AUT' (AUTOSWITCH)      *
*  MODE.                                                    *
*  LAST FUNCTION PERFORMED BEFORE RETURN TO CICS IS         *
*  TO EXECUTE A CICS START FOR TRANSID 'LCHK'. THIS         *
*  TRANSACTION 'WAKES UP' EVERY XX MINUTES AND CHECKS       *
*  THE DEDICATED CICS BTAM LINES. IF THEY ARE OUT OF        *
*  SERVICE, 'LINECHK' WILL PUT THEM BACK IN AUTOMATICALLY.  *
 ENVIRONMENT DIVISION.
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 01  FILLER.
     05  FILLER              PIC X(8)   VALUE 'WORKING '.
     05  FILLER              PIC X(8)   VALUE 'STORAGE '.
     05  FILLER              PIC X(8)   VALUE 'STARTS  '.
     05  FILLER              PIC X(8)   VALUE 'HERE >>>'.
 01  WS-VARIABLES.
     05  WS-P-SUB            PIC S9(4)  COMP VALUE +0.
 01  WS-DUMMY-RECORD.
     05  FILLER.
         10  WS-S0A0-OUT-CNT     PIC S9(4) COMP VALUE +0.
         10  WS-S0C0-OUT-CNT     PIC S9(4) COMP VALUE +0.
         10  WS-S0D0-OUT-CNT     PIC S9(4) COMP VALUE +0.
         10  WS-WT01-OUT-CNT     PIC S9(4) COMP VALUE +0.
     05  FILLER.
         10  WS-CONS-MSG-S0A0    PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-S0C0    PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-S0D0    PIC S9(4) COMP VALUE +0.
         10  WS-CONS-MSG-WT01    PIC S9(4) COMP VALUE +0.
 01  WS-CONSTANTS.
     05  WS-TEMP-QUEUE-LEN   PIC S9(4) COMP VALUE +16.
     05  WS-COMMAREA-LENGTH  PIC S9(4) COMP VALUE +20.
     05  WS-GETMAIN-LENGTH   PIC S9(4) COMP VALUE +122.
     05  WS-MESSAGE-LENGTH   PIC S9(4) COMP VALUE +58.
 01  WS-MESSAGES.
     05  WS-MSG-1            PIC X(58)      VALUE
         '* SWITCHING AND CLEARING DUMP DATASETS ***   '.
     05  WS-MSG-2            PIC X(58)      VALUE
         '* DUMP DATASET A  SET TO AUTOSWITCH STATUS *** '.
     05  WS-MSG-3            PIC X(58)      VALUE
         '* ERROR DURING EXECUTION OF: CEMT SET DUMP SWI '.
     05  WS-MSG-4            PIC X(58)      VALUE
         '* ERROR DURING EXECUTION OF: CEMT SET DUMP AUTO '.
     05  WS-MSG-5            PIC X(58)      VALUE
         '* PLEASE NOTIFY SYSTEMS SOFTWARE *** '.
 01  WS-COMMAREA.
     05  FIVE-ADCONS.
         10  WS-ADCON1       PIC S9(8) COMP.
         10  WS-ADCON2       PIC S9(8) COMP.
         10  WS-ADCON3       PIC S9(8) COMP.
         10  WS-ADCON4       PIC S9(8) COMP.
         10  WS-ADCON5       PIC S9(8) COMP.
 01  FILLER          PIC X(22)  VALUE 'END OF WORKING STORAGE'.
 LINKAGE SECTION.
 01  DFHCOMMAREA PIC X(01).
 01  DFHBLLDS    COPY    DFHBLLDS.
     02  PTR-CMDTAB1                 PIC S9(8)  COMP.
  01  DFHCSADS        COPY    DFHCSADS.
 01  FILLER PIC X(01).
 01  FILLER PIC X(01).
 01  CMDTAB1.
     05  CMDTAB1-ADDRESSED-DATA.
         10  CMDTAB1-CEMT-CMD        PIC X(17).
         10  CMDTAB1-CEMT-CMD-LEN    PIC S9(4)   COMP.
         10  CMDTAB1-CEMT-CMD-OP-IND PIC X.
         10  CMDTAB1-TEXT-RETURNED.
             15  FILLER                  PIC X(06).
             15  CMDTAB1-RESP-LEN        PIC S9(4)  COMP.
             15  CMDTAB1-NO-OF-TXT-LINES PIC S9(4)  COMP.
             15  CMDTAB1-TRANS-RESP-CODE PIC S9(4)  COMP.
             15  FILLER                  PIC X(88).
         10  CMDTAB1-CEMT-CMD-MAX-OP-L   PIC S9(4)    COMP.
 PROCEDURE DIVISION.
 A010-MAINLINE.
*   ADDRESS THE CSA FOR POSSIBLE FUTURE USE
     EXEC CICS ADDRESS CSA(CSACBAR) END-EXEC.
*   GETMAIN SOME STORAGE TO PASS 'CEMT' PARAMETERS TO DFHEMTA
     EXEC CICS GETMAIN SET(PTR-CMDTAB1) LENGTH(WS-GETMAIN-LENGTH)
               END-EXEC.
*   BUILD PARAMETER LIST AND ADDRESS LIST FOR DFHEMTA
     MOVE LOW-VALUES TO CMDTAB1-ADDRESSED-DATA.
     MOVE 'CEMT SET DUMP SWI' TO CMDTAB1-CEMT-CMD.
     MOVE +17                 TO CMDTAB1-CEMT-CMD-LEN.
     MOVE +100                TO CMDTAB1-CEMT-CMD-MAX-OP-L.
     MOVE PTR-CMDTAB1         TO WS-ADCON1.
     ADD +17  TO WS-ADCON1 GIVING   WS-ADCON2.
     ADD +2   TO WS-ADCON2 GIVING   WS-ADCON3.
     ADD +1   TO WS-ADCON3 GIVING   WS-ADCON4.
     ADD +100 TO WS-ADCON4 GIVING   WS-ADCON5.
*   SWITCH DUMP DATASETS TWICE TO CLEAR
     PERFORM A020-EXECUTE-CEMT-CMD  THRU  A020-EXIT
         VARYING WS-P-SUB FROM 1 BY 1
             UNTIL WS-P-SUB GREATER THAN 2.
*   LEAVE DUMP DATASET IN AUTOSWITCH STATUS
     MOVE 'CEMT SET DUMP AUT' TO CMDTAB1-CEMT-CMD.
     PERFORM A020-EXECUTE-CEMT-CMD  THRU  A020-EXIT.
*   WRITE DUMMY RECORD TO TEMP STORAGE MAIN FOR 'LINECHK'.
     EXEC CICS WRITEQ TS QUEUE ('LCHKCNTS') FROM  (WS-DUMMY-RECORD)
               LENGTH(WS-TEMP-QUEUE-LEN) MAIN END-EXEC.
*   START 'LINECHK' PROGRAM 5 MINUTES FROM NOW IN ORDER
*   TO KEEP BTAM LINES UP IN SPRINGFIELD OHIO.
*   NOTE: INTERVAL IS IN HH:MM:SS FORMAT
     EXEC CICS START TRANSID ('LCHK') INTERVAL(000500)
               REQID   ('CNCLCHK') END-EXEC.
     EXEC CICS RETURN END-EXEC.
     GOBACK.
 A010-EXIT.
     EXIT.
 A020-EXECUTE-CEMT-CMD.
*   LINK TO DFHEMTA. EXECUTE 'CEMT' COMMAND.
     EXEC CICS LINK PROGRAM('DFHEMTA') COMMAREA(FIVE-ADCONS)
               LENGTH(WS-COMMAREA-LENGTH) END-EXEC.
     IF CMDTAB1-TRANS-RESP-CODE NOT EQUAL ZERO
         GO TO X010-BAD-RC.
 A020-EXIT.
     EXIT.
 X010-BAD-RC.
     IF CMDTAB1-CEMT-CMD EQUAL 'CEMT SET DUMP SWI'
         EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-3)
                   LENGTH(WS-MESSAGE-LENGTH) END-EXEC
         EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-5)
                   LENGTH(WS-MESSAGE-LENGTH) END-EXEC.
     IF CMDTAB1-CEMT-CMD EQUAL 'CEMT SET DUMP AUT'
          EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-4)
                   LENGTH(WS-MESSAGE-LENGTH) END-EXEC
         EXEC CICS WRITEQ TD QUEUE('CSMT') FROM(WS-MSG-5)
                   LENGTH(WS-MESSAGE-LENGTH) END-EXEC.
     EXEC CICS RETURN END-EXEC.


This article will be concluded next month, when we shall be printing the source
code for LINECHK.

Scott Northcote
Systems Software Programmer
Cascade Corporation (USA)     ) Cascade Corporation 1987





















































