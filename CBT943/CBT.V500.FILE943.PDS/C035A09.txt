 Sharing VSAM files between separate VSE-ids
Here are some thoughts on and experiences with running multiple VSE guest-ids,
each with its own CICS system.
When we decided to convert our 3 500 000 card file to a DL/I database we found
that the unload and load with DL/I utilities would take 24 hours (we were then
running a 370/138).  This was the first step in what was to become an on-line
system so we settled for read-only access for the database and collected all
update transactions in a file called the pending file, from which they were
applied when CICS was shut-down at 17.00.  When another database was added to
the system we used the same concept.  We thus avoided DL/I dynamic transaction
backout and its complications.  We found that the pending file had advantages
other than avoiding on-line update for the database.  We also found that before
deciding on on-line update it pays to have a very close look at systems design
and decide whether it is really necessary to do this.
The cluster for the pending file is deleted and redefined daily after all
updates have been applied and all files and databases have been backed up.
We have been running multiple VSE guest-ids for some years now and were forced
to share VSAM files between them.  We needed only read access to these files but
were required to grant WR access to the disk volumes on account of VSAM user
catalog requirements.  All our VSAM volumes have their own user catalog.  The
VSAM master catalog is shared between our five VSE-ids.  All VSAM clusters are
defined with SHAREOPTIONS (2,4).  If a CICS partition in one VSE-id updates a
file, the other CICS partitions have read access only (handled by FCT entry).
The VM Virtual reserve/release feature ensures that no simultaneous accesses to
the files take place.  The VSE part of this is handled through the lock file and
its mechanisms.
A similar method is employed sharing DL/I databases between CICS partitions in
separate VSE-ids, without having to use Inter System Communication with all its
complications.  All PSBs used by the first CICS system are for read-only
processing.  The PSB used by the second one has a special PROCOPT of GO,
described in SH24-5011 pages 4-53 and 4-54.
We found one snag: whenever a root segment had been added to the database or
whenever an account had been updated, the second system would report a NOT FOUND
condition the following day.  That problem was solved by closing and opening the
database in the second CICS system at the end of all daily processing that takes
place in the first system.  A package is available that opens and closes
databases and VSAM files under CICS.  This is done from a batch partition and so
can be incorporated in the job stream that processes the updates.  The only
thing to remember is that this closing/opening takes place in the second VSE-id
with the special PROCOPT.
The requirements and pre-requisites for sharing VSAM files and DL/I databases
are given below:
PRE-REQUISITES
%    A VSAM Master Catalog shared between VSE-ids on a disk volume MW accessible
to both VSE-ids.
%    A VSAM User Catalog for each disk volume or group of disk volumes defined
in this VSAM master catalog.
%    The disk volumes described above are accessible MW for both VSE-ids.
%    A lock file defined in each VSE-id accessible MW for each VSE-id.
%    All VSAM clusters defined with SHAREOPTION (2,4).
Required in VSE-id-1 directory entry
%    For the lock file:
     MDISK 239 3380 start tracks volume MWV ALL
%    For VSAM volumes:
     MDISK 250 3380 start tracks volume MWV ALL
Required in VSE-id-2 directory entry
%    For the lock file:
     MDISK 239 3380 start tracks volume MWV ALL
%    For VSAM volumes:
     MDISK 250 3380 start tracks volume MVW ALL
starts and tracks are the same values in both entries.
Required in VSE-id-1 ASI
%    For LOCK-file:
     ADD 239,3380,SHR
     DLF UNIT=239,VOLID=VOLID,CYL=1,TYPE=F
This part is only required for the first IPL to format the lock file.
 %    For VSAM volumes:
     ADD 250,3380,SHR
Required in VSE-id-2 ASI
%    For LOCK-file:
     ADD 239,3380,SHR DLF UNIT=239
%    For VSAM volumes:
     ADD 250,3380,SHR
SOME HINTS AND POINTERS
Depending on the number of VSAM files being shared and the number of VSE-ids
involved traffic on the lock file can be considerable.  For this reason we have
it defined as a 2-cylinder mini-disk on a volume that is also used by our CMS
users.  It is unwise to keep this file on the disk volume that contains SYSRES,
the VSAM master catalog, or compiler or sort work areas.  If traffic on the lock
file becomes so heavy that it impedes other users, a choice of four packages is
available to emulate a lock file and reduce the number of I/Os to the volume on
which it resides.
Depending on the Directory Maintenance package in use it might be necessary to
execute DIRM EXTN OFF before adding the MDISKs to the VSE-ids.  Do not forget to
execute DIRM EXTN ON when finished.
DIRMAP will always show error messages for the LOCKFILE extents because the same
volume and extents have been defined in multiple ids.
It is necessary to define shared volumes in each id as MDISK with MWV, taking
into consideration that they are on a different virtual control unit from the
unshared ones in the same id.  We solve this problem by using 2uu for shared
volumes and 1uu for unshared ones.  To make it easier to remember they have the
same cuu in all ids where they occur.

Jan P Broekhof
Software Analyst
Toronto Hydro Electric System (Canada)  ) Xephon 1988




































