CICS 1.7 and the shared storage subpool

After installing CICS 1.7 under MVS/XA, we noticed a
dramatic increase in the size of the shared storage subpool.
Also, in comparing the trace entries between CICS 1.7 and
CICS 1.6.1, we noticed an increase in GETMAINs per
transaction against the shared subpool.  In our particular
environment the additional CPU resource to execute an
identical workload increased 27 percent.

Upon investigation, we determined that many of the Dynamic
Storage Area (DSA) pages allocated to the shared subpool
contained a single FAQE of 16 (hexadecimal 10) bytes.  Every
time a GETMAIN was performed against the shared subpool
each of these 16-byte FAQEs had to be referenced.  Review of
our shared storage GETMAINs indicated that the smallest
GETMAIN was for 32-byte Temporary Storage TSGID Table
(TSGID) control blocks.  The size of the TSGID is controlled
by the SIT parameter TSMGSET.  We were using the
minimum value of four.  (The size of the TSGID is 16 bytes
plus 4 bytes for each pointer entry.)

Other major control blocks in the shared storage pool were
terminal control blocks created by transaction routing.  In CICS
1.6.1, a single GETMAIN was performed for the surrogate
TCTTE and the TCTUA.  In CICS 1.7 an additional control
block, the TCTTE Extension (hexadecimal 30 bytes), was
added and the GETMAIN for the surrogate TCTTE
(hexadecimal 130 bytes) and TCTUA (hexadecimal 110 bytes)
were split apart.  TCTUA size will vary depending on the value
you have specified for USERAREALEN in the TYPETERM
definition used by the terminal.  The GETMAINed storage
length will be USERAREALEN plus four bytes rounded to
double-double word length or double-double-double word if the
USERMOD discussed later is applied.  This change resulted in
three GETMAINs from the shared storage subpool where only
one had been performed in CICS 1.6.1.  The additional
GETMAINs in combination with the longer FAQE chains were
responsible for a large portion of the CPU resource increase.

We opened a problem with the CICS support team and
contacted our local IBM SEs.  IBM's first response was that the
new code functioned as designed.  We were able to convince
level two support to contact the CICS development team and
review the changes between CICS 1.6.1 and CICS 1.7.

In an immediate effort to decrease the additional overhead we
changed our page size to 4K from 2K.  This decreased the
number of pages allocated to the shared subpool and as a result
decreased the number of 16-byte FAQEs that had to be
searched for each shared storage GETMAIN.  This decreased
the CPU resource additional overhead from 27 percent to 22
percent.  The impact on the amount of storage allocated to used
DSA pages was a small increase of 2-3 percent.

We were not yet satisfied that we had done everything we
could to reduce the CPU overhead.  In DFHSCP we found the
code that rounds GETMAINs to double-double word lengths.
That code is in the First Fit FAQE Search routine, SCFRSTFT.
Because that code is common to GETMAINs for multiple
subpools we decided to duplicate the code in the Shared
Subpool GETMAIN Routine near label SCSHRGET and round
the GETMAIN length to a double-double-double word
(hexadecimal 20).  This change would eliminate the 16-byte
FAQEs in the shared subpool and shorten the instruction path
to perform a shared storage GETMAIN.  This decreased the
CPU resource additional overhead from 22 percent to 5
percent.  The amount of storage allocated to the shared subpool
increased by less than 2 percent.

By sacrificing a small amount of DSA we were able to
eliminate much of the additional storage control overhead
introduced by CICS 1.7.  We expect to reduce the CPU per
transaction slightly once the APAR is closed and installed.
Before you consider installing the following USERMOD or
changing your page size you should carefully analyse the
GETMAINs in your shared subpool.  First analyse the FAQE
chain for the shared subpool and record the lengths of the
individual FAQEs (see Figure 1).  A pattern will generally
develop at the beginning of the FAQE chain.  There will be
FAQEs all less than a certain value.  In our system that was 16
(hexadecimal 10) bytes.

Next, analyse the shared subpool GETMAINs.  This is easily
done by running Auxiliary Trace and reviewing the C8 trace
entries with hexadecimal 80, 93, 96, 97, 99, or 9F in the first
byte of field B (see Figure 2).  You will find that the smallest
GETMAIN will be a double-double word larger than the
FAQEs at the beginning of the FAQE chain.  The length of the
GETMAIN is found in the low order halfword of field B of the
trace entry.

If you find your smallest GETMAINed length is 32
(hexadecimal 20) bytes and you have many FAQEs of 16
(hexadecimal 10) bytes at the beginning of your shared storage
FAQE chain, you may benefit from the USERMOD.  If your
system is virtual storage constrained below the 16-megabyte
line this USERMOD and a 4K page size change may have an
adverse effect on your system's performance.

It should be noted here that much of the increase in the shared
subpool size is due to moving the TCT control blocks from a
nucleus table to a dynamic install area in the DSA.  Many of
these control blocks are built during system initialisation and
are permanent.  However, the terminal control blocks described
in this article are allocated only for the length of the routed
transaction and are then released.  The TSGID control block is
obtained when a temporary storage queue is created and deleted
when the queue is deleted.

USERMOD

++USERMOD(ZZSCP01) .
++VER(C150) FMID(HCI1703)
   /*
    DESCRIPTION:
                 USERMOD to DFHSCP to double-double double word align
                 shared storage to eliminate 10(H) byte FAQEs.
                 Changes in DFHSCP should follow the LA instruction
                 after label SCSHRGET.
                 Change in DFHSCPP should follow
                     FFFFFFF0 DC X'FFFFFFF0'.
       */ .
++MACUPD(DFHSCP)  .
./ CHANGE NAME=DFHSCP
         L     R1,PAMNBYTE         LOAD NUMBER OF BYTES REQUESTED      16963000
         LA    R1,31(R1)           ROUND NUMBER UP TO NEAREST          16965000
         N     R1,FFFFFFE0         .. DOUBLE-DOUBLE-DOUBLE WORD        16967000
         ST    R1,PAMNBYTE         .. STORE NEW LENGTH                 16968000
./ ENDUP
++MACUPD(DFHSCPP)  .
./ CHANGE NAME=DFHSCPP
FFFFFFE0 DC    X'FFFFFFE0'                                    @BA2178  05385800
./ ENDUP


Mark J Sobotka
CICS Systems Project Leader (USA) ) Reserved 1989


