Enquiring on programs in DFHRPL (continued)

This month we continue Christopher Frank's article by publishing
the first part of his program which helps to make the CICS
Relocatable Program Library more manageable.

         TITLE 'CICS PROGRAM LIBRARY INQUIRY PROGRAM'
         GBLB  &BLDL
&BLDL    SETB  1             <==== THIS GLOBAL IS USED TO SELECT
*                                  WHETHER OS BLDL REQUESTS ARE
*                                  TO BE SUPPORTED. IF BLDL SUPPORT
*                                  IS NOT SELECTED, LIBRARY PLACEMENT
*                                  WILL BE LIMITED TO 24-BIT PROGRAMS
*                                  THAT ARE SPECIFIED IN THE PPT. WITH
*                                  BLDL SUPPORT, ANY LOAD MODULE IN
*                                  ANY OF THE RPL LIBRARIES CAN BE
*                                  INQUIRED ON.
*                                  FOR BLDL SUPPORT, SPECIFY A '1'.
*                                  FOR NO BLDL SUPPORT, SPECIFY A '0'.
         COPY  DFHCSADS
         DFHTCA CICSYST=YES
*        TRANSACTION WORK AREA
         AIF   (NOT &BLDL).BLDL00
*        BLDL PARAMETER LIST
BLLIST   DS    0F                  BLDL PARAMETER LIST -
BLENTCT  DS    H                   .. NUMBER OF ENTRIES
BLENTRY  DS    H                   .. ENTRY LENGTH
BLENTST  DS    0X                  .. 1'ST ENTRY -
BLPGMID  DS    CL8                 ..... PROGRAM ID
BLTTR    DS    0CL4                ..... DASD ADDRESS -
         DS    CL2                 ........ RELATIVE TRACK NUMBER
         DS    C                   ........ RELATIVE RECORD NUMBER
         DS    C                   ........ CONCATENATION INDEX
         DS    CL12                ..... UNUSED
BLLNGTH  DS    CL3                 ..... LOAD MODULE SIZE
         DS    CL6                 ..... UNUSED
BLAMFLG  DS    C                   ..... AMODE FLAGS
         DS    CL28                ..... UNUSED
BLENTLN  EQU   *-BLENTST           LENGTH OF ENTRY
BLLSTLN  EQU   *-BLLIST            LENGTH OF PARAMETER LIST
.BLDL00  ANOP
*        WORK AND SAVE AREAS
WORKAREA DS    D                   WORKAREA
PGMID    DS    CL8                 PROGRAM ID
TRANID   DS    CL4                 ORIGINATING TRANID
TTRINDX  DS    X                   INDEX TO RPL DATASET
INDXCNT  DS    X                   INDEX COUNTER FOR JFCB SCAN
FLAGS    DS    X                   STATUS FLAGS
CIBLDL   EQU   X'80'                 1... .... - CICS BLDL REQUIRED
OSBLDL   EQU   X'40'                 .1.. .... - OS BLDL REQUIRED
NOBLDL   EQU   X'20'                 ..1. .... - BLDL NOT ALLOWED
*                                    ...1 .... - UNUSED
*                                                REQUEST TYPE --
LISTREQ  EQU   X'08'                 .... 1... -   RPL LIST REQUEST
PPTREQ   EQU   X'04'                 .... .1.. -   PGM/MAP/PTN INQUIRY
NPPTREQ  EQU   X'02'                 .... ..1. -   NON-PPT INQUIRY REQ
*                                    .... ...1 -   UNUSED
         DS    X                   UNUSED
         DFHSIT  TYPE=DSECT
         DFHSIPD TYPE=DSECT
         COPY  DFHAID
         COPY  DFHPPTDS
PPTCBAR  EQU   3
         COPY  DFHPCTDS
PCTCBAR  EQU   0
         COPY  DFHTCTTE
TCTTEAR  EQU   10
         COPY  DFHTIOA
TIOABAR  EQU   9
         IKJTCB   DSECT=YES,LIST=YES
         IEFJFCBN LIST=YES
         IEFTIOT1
         IHADCB DSORG=PO
* MODULE NAME = CRPLPGM                                               *
* MODULE TYPE = ASSEMBLER, REENTERENT, CICS MACRO LEVEL.              *
* MODULE SIZE = 2,648 BYTES.                                          *
* DESCRIPTIVE NAME = CICS PROGRAM LIBRARY INQUIRY PROGRAM.            *
* STATUS = 1.7.0 -- MVS/XA                                            *
* FUNCTION - ALLOWS AN OPERATOR OR PROGRAMMER TO DISPLAY THE LOCATION *
*            IN THE CICS RPL OF ANY CICS PROGRAM OR MAPSET, AS WELL   *
*            AS SOME INFORMATION ABOUT THAT PROGRAM.                  *
*            ALSO WILL DISPLAY THE LOCATION OF ANY LOAD MODULE IN THE *
*            RPL, BUT ONLY THE LENGH AND AMODE WILL BE SUPPLIED.      *
* OPERATION - 'CRPL' RETURNS A 'PROMPT' SCREEN THAT ALLOWS THE USER   *
*             TO SELECT THE 'LIST' OPTION OR SPECIFY A RESOURCE ID.   *
*             'CRPL LIST' LISTS THE LIBRARIES THAT COMPRISE THE RPL.  *
*             'CRPL ID=XXXXXX' ALSO LISTS THE RPL LIBRARIES, AND      *
*             WILL HIGHLIGHT THE LIBRARY THAT THE SPECIFIED RESOURCE  *
*             RESIDES IN. THIS COULD BE A PROGRAM, MAPSET, PARTITION  *
*             SET, OR ANY LOAD MODULE (FOR EXAMPLE, AN ASSEMBLED CICS *
*             TABLE) THAT RESIDES IN ONE OF THE RPL LIBRARIES. SOME   *
*             INFORMATION ABOUT THAT PROGRAM WILL BE RETURNED AS WELL.*
*             'CRPL TRAN=XXXX' AGAIN LISTS THE RPL LIBRARIES, BUT     *
*             WILL LOCATE THE PROGRAM ASSOCIATED WITH THAT TRANS-     *
*             ACTION AND HIGHLIGHT THE LIBRARY THAT THE SPECIFIED     *
*             PROGRAM RESIDES IN. SOME INFORMATION ABOUT THAT PROGRAM *
*             WILL BE RETURNED AS WELL.                               *
* NOTE - THIS PROGRAM DOES NOT CONFORM TO THE SUPPORTED CICS MACRO    *
*        LEVEL INTERFACE. UNSUPPORTED MACROS ARE --                   *
*           OS --- BLDL                                               *
*           CICS - DFHKC CTYPE=LOCATE                                 *
*                  DFHPC CTYPE=LOCATE                                 *
*                  DFHPC TYPE=BLDL                                    *
*        THE FOLLOWING CONTROL BLOCKS ARE ACCESSED --                 *
*           OS --- CVT+0    (ACTIVE TCB POINTERS)                     *
*                  DCBTIOT  (OFFSET INTO TIOT)                        *
*                  JFCBDSNM (DSNAME IN JFCB)                          *
*                  JFCBVOLS (VOLSER IN JFCB)                          *
*                  PSA+16   (CVT POINTER)                             *
*           CICS - CSASITBA (SIT ADDRESS)                             *
*                  PCTIPIA  (PROGRAM ID ASSOCIATED WITH PCT ENTRY)    *
*                  PCTTI    (TRANID)                                  *
*                  PPTCCR   (PROGRAM TGT SIZE)                        *
*                  PPTCOTP  (PROGRAM WSS SIZE)                        *
*                  PPTCSA   (PROGRAM STORAGE ADDRESS)                 *
*                  PPTDASA  (DASD ADDRESS OF PROGRAM)                 *
*                  PPTFLGS  (PROGRAM FLAGS)                           *
*                  PPTSAR   (PROGRAM LENGTH)                          *
*                  PPTTI    (PROGRAM ID)                              *
*                  PPTTLR   (PROGRAM LANGUAGE)                        *
*                  PPTTLR2  (PROGRAM FLAGS)                           *
*                  PPTTYPE  (PPT TYPE INTRY)                          *
*                  SILLIBA  (RPL LIBRARY DCB ADDRESS)                 *
*                  SITCOMA  (SIP COMMON AREA)                         *
*                  TCAFCAAA (TCTTE ADDRESS)                           *
*                  TCAKCFA  (COMMON AREA - PCT ENTRY ADDRESS)         *
*                  TCAKCTI  (COMMON AREA - TRANID)                    *
*                  TCAPCLA  (COMMON AREA - PPT ENTRY ADDRESS)         *
*                  TCAPCPI  (COMMON AREA - PROGRAM ID)                *
*                  TCAPCTR  (COMMON AREA - PC RETURN CODES)           *
*                  TCASCNB  (SCP - STORAGE SIZE)                      *
*                  TCASCSA  (SCP - STORAGE ADDRESS)                   *
*                  TCASYAA  (TCA SYSTEM AREA ADDRESS)                 *
*                  TCATCPC  (PCT ENTRY ADDRESS)                       *
*                  TCBS+4   (CURRENT TCB)                             *
*                  TCBTIO   (TIOT POINTER)                            *
*                  TCTTEAID (ATTENTION IDENTIFIER)                    *
*                  TCTTEDA  (CURRENT TIOA ADDRESS)                    *
*                  TCTTETC  (NEXT-TRANID)                             *
*                  TIOADBA  (TERMINAL DATA START)                     *
*                  TIOASAL  (TIOA STORAGE LENGTH)                     *
*                  TIOATDL  (TERMINAL DATA LENGTH)                    *
*                  TIOEDDNM (DDNAME IN TIOT ENTRY)                    *
*                  TIOEJFCB (JFCB POINTER)                            *
*                  TIOELNGH (TIOT ENTRY LENGTH)                       *
START    CSECT
         BALR  R6,0                ESTABLISH
         USING *,R6                   ADDRESSABILITY
         B     L00100              BYPASS EYECATCHER
         DC    CL8'CRPLPGM'        MODULE NAME
         DC    CL8'&SYSDATE'       DATE
         DC    CL8'&SYSTIME'       TIME
L00100   L     TCTTEAR,TCAFCAAA    ADDRESS TCTTE
         L     TIOABAR,TCTTEDA     ADDRESS TIOA
         L     R1,TCASYAA          ADDRESS TCA SYSTEM AREA
         L     R1,TCATCPC-DFHSYTCA(,R1)  ADDRESS OWNING PCT ENTRY
         MVC   TRANID,PCTTI-DFHPCTDS(R1)  RETAIN ORIGINATING TRANID
         LA    R1,TIOADBA          ADDRESS START OF DATA
         LH    R2,TIOATDL          FETCH DATA LENGTH
***      ANALYZE INPUT TO SEE IF THIS IS AN INITIAL 'LIST' REQUEST.
*        IF AN INITIAL OR SUBSEQUENT RESOURCE INQUIRY REQUEST,
***      ADDRESS THE RESOURCE NAME.
         CLI   TCTTEAID,DFHENTER   'ENTER' KEY USED?
         BE    L00200              ..YES
         DFHTC TYPE=ERASE          ..NO  - SET ERASE ATTRIBUTE
         XC    TIOATDL,TIOATDL             CLEAR TIOA
         B     L09999                      AND EXIT
L00200   LTR   R2,R2               ANY DATA IN TIOA?
         BZ    L01500              ..NO  - ASSUME A 'LIST' REFRESH
         CLI   0(R1),X'11'         SBA IN DATA STREAM?
         BNE   L00300              ..NO
         LA    R1,3(,R1)           ..YES - BYPASS IT
         SH    R2,=H'3'                    ADJUST REMAINING LENGTH
L00300   MVC   PGMID,0(R1)         SAVE INPUT AS ASSUMED RESOURCE NAME
         CLC   0(L'TRANID,R1),TRANID  INITIAL REQUEST?
         BNE   L00400              ..NO  -
         LA    R1,L'TRANID(,R1)    ADJUST DATA POINTER
         SH    R2,=Y(L'TRANID)     END OF DATA?
         BNP   L00900              ..YES - GO PROMPT USER
*        DETERMINE IF A 'LIST' FUNCTION WAS REQUESTED.
L00400   CLC   0(4,R1),=C'LIST'    LIST REQUEST?
         BNE   L00500              ..NO
         XC    PGMID,PGMID         ..YES - CLEAR OUT ANY ASSUMED NAME
         OI    FLAGS,LISTREQ       SAVE REQUEST TYPE
         B     L01500              GO PROCESS REQUEST
*        DETERMINE IF A 'PROGRAM' LOCATE FUNCTION WAS REQUESTED.
L00500   CLC   0(3,R1),=C'ID='     EXPLICIT RESOURCE REQUEST?
         BNE   L00600              ..NO  -
         MVC   PGMID,3(R1)         SAVE ASSUMED RESOURCE NAME
         OI    FLAGS,PPTREQ        SAVE REQUEST TYPE
         B     L00800              AND GO START PROCESSING
*        DETERMINE IF A 'TRANID' PROGRAM LOCATE FUNCTION WAS REQUESTED.
L00600   CLC   0(5,R1),=C'TRAN='   'TRANID' PROGRAM LOCATE REQUEST?
         BNE   L00700              ..NO  - CONTINUE
         MVC   TCAKCTI,5(R1)       MOVE TRANID TO TCA
         OC    TCAKCTI,=CL4' '     SPACE/UCTRAN THE ID
         DFHKC CTYPE=LOCATE        LOCATE TRANID IN PCT
         B     ERR020              ..NOT FOUND
         L     R1,TCAKCFA          ..FOUND - ADDRESS IT
         MVC   PGMID,PCTIPIA-DFHPCTDS(R1)  SAVE ASSOCIATED RESOURCE NAME
         OI    FLAGS,PPTREQ        SAVE REQUEST TYPE
         B     L00800              GO START PROCESSING
L00700   LA    R1,1(,R1)           BUMP SCAN REGISTER
         BCT   R2,L00400           LOOP
         OI    FLAGS,PPTREQ        ..ASSUME RESOURCE REQUEST
***      OBTAIN THE REQUESTED PROGRAM'S CONCATENATION INDEX FROM THE
*        DASD ADDRESS IN THE PPT ENTRY. IF IT IS NOT LOADED, LOAD
*        THE PROGRAM TO OBTAIN THE INFORMATION.
*        CERTAIN PROGRAMS (COBOLII, ETC) ARE OS LOADED, AND THESE
*        HAVE A DUMMY TTR IN THE PPT ENTRY. FOR THESE WE MUST
***      DO AN OS BLDL TO OBTAIN THE DASD ADDRESS.
L00800   CLC   PGMID,=CL8' '       BLANKS INSTEAD OF NAME?
         BNL   L01000              ..NO  - GO PERFORM LOCATE
L00900   MVC   TIOADBA(PROMPTL),PROMPT  MOVE PROMPT MAP TO TIOA
         MVC   TIOATDL,=Y(PROMPTL) PUT LENGTH IN TIOA
         MVC   TCTTETC,TRANID      SET NEXT TRAN IN TCTTE
         B     L09999              GO PROMPT USER FOR ID
L01000   OC    PGMID,=CL8' '       MAKE IT UPPERCASE/SPACE-FILLED
         MVC   TCAPCPI,PGMID       PUT PROGRAM ID IN TCA
         DFHPC CTYPE=LOCATE        GO FIND IT
         B     L01300              ** NON-PPT PROGRAM **
         L     R3,TCAPCLA          LOAD PPT ENTRY ADDRESS
         OC    PPTDASA,PPTDASA     PROGRAM INFO AVAILABLE?
         BNZ   L01100              ..YES - USE EXISTING DASD ADDRESS
         ST    PPTCBAR,TCAPCPI     SET PPT ADDR FOR BLDL
         DFHPC TYPE=BLDL           PERFORM CICS BLDL
         CLI   TCAPCTR,X'00'       BLDL SUCCESSFUL?
         BNE   ERR030              ..NO
         OI    FLAGS,CIBLDL        INDICATE CICS BLDL PERFORMED
L01100   CLC   PPTDASA,=A(-1)      DUMMY TTR IN PPT?
         BE    L01200              ..YES - GO DO OS BLDL
         MVC   TTRINDX,PPTDASA+3   FETCH CONCATENATION INDEX
         B     L01500              GO PROCESS LIST REQUEST
L01200   NI    FLAGS,255-CIBLDL    RESET CICS BLDL INDICATOR
         B     L01400              GO DO OS BLDL
L01300   OI    FLAGS,NPPTREQ       INDICATE RESOURCE IS NOT IN PPT
L01400   AIF   (&BLDL).BLDL05
         OI    FLAGS,NOBLDL        OS BLDL NOT SUPPORTED
         B     L01500              CONTINUE PROGRAM PROCESSING
.BLDL05  ANOP
         AIF   (NOT &BLDL).BLDL10
         L     R2,CSASITBA         GET SIT ADDRESS
         L     R2,SITCOMA-DFHSITDS(,R2)  ADDRESS SIP COMMON AREA
         L     R2,SILLIBA-SIPCOM(,R2)  GET DFHRPL DCB ADDRESS
         MVC   BLENTCT,=H'01'      SET BLDL COUNT TO 1
         MVC   BLENTRY,=Y(BLENTLN) SET BLDL ENTRY LENGTH TO 1
         MVC   BLPGMID,PGMID       PUT MODULE NAME IN BLDL LIST
         BLDL  0(R2),BLLIST        *** ISSUE BLDL ***
         OC    BLTTR,BLTTR         DASD ADDRESS RETURNED?
         BZ    ERR030              ..NO  - ERROR
         OI    FLAGS,OSBLDL        INDICATE OS BLDL PERFORMED
         MVC   TTRINDX,BLTTR+3     FETCH CONCATENATION INDEX
.BLDL10 ANOP
***      LIST THE LIBRARIES CONCATENATED IN DFHRPL.
*        LOCATE DFHRPL'S DCB AND TIOT ENTRY(S) IN CORE. THEN
*        SCAN DOWN THE JFCB'S FOR EACH CONCATENATED LIBRARY IN THE
*        RPL, AND DISPLAY THEIR DATASET NAMES.
*        IF THIS WAS AN 'ID=' REQUEST, WE ALSO HIGHLIGHT THE
*        LIBRARY THAT THE SPECIFIED RESOURCE RESIDES IN.
*        ON ENTRY - R0  - PROGRAM CORE ADDRESS
*                   R1  - CONCATENATION INDEX OF LOADED-FROM DSN.
***                 R11 - RETURN ADDRESS.
L01500   L     R2,CSASITBA         GET SIT ADDRESS
         L     R2,SITCOMA-DFHSITDS(,R2)  ADDRESS SIP COMMON AREA
         L     R2,SILLIBA-SIPCOM(,R2)  GET DFHRPL DCB ADDRESS
         LH    R2,DCBTIOT-IHADCB(,R2)  GET OFFSET INTO TIOT
         L     R5,16                ADDRESS THE CVT
         L     R5,0(,R5)            ADDRESS TCB POINTERS
         L     R5,4(,R5)            ADDRESS OUR TCB
         L     R5,TCBTIO-TCB(,R5)   ADDRESS OUR TIOT
         LA    R5,0(R2,R5)          ADDRESS DFHRPL'S TIOT ENTRY
         CLC   TIOEDDNM-TIOENTRY(8,R5),=CL8'DFHRPL'  IS IT RIGHT?
         BNE   ERR010               ..NO  - LOAD ERROR RETURN
***      IF THE TIOA WE CURRENTLY HAVE IS TOO SMALL, FREE IT AND
***      GETMAIN A LARGER ONE.
         CLC   TIOASAL,=AL2(TIOASZE+12) IS THE CURRENT TIOA BIG ENOUGH?
         BNL   L01600              ..YES
         ST    TIOABAR,TCASCSA     PUT TIOA ADDRESS IN TCA
         DFHSC TYPE=FREEMAIN       FREE IT
         MVC   TCASCNB,=AL2(TIOASZE)  MOVE SIZE NEEDED TO TCA
         DFHSC TYPE=GETMAIN,CLASS=TERM
         L     TIOABAR,TCASCSA     ADDRESS NEW TIOA
         ST    TIOABAR,TCTTEDA     POINT TCTTE AT IT
L01600   LA    R2,TIOADBA          ADDRESS START OF DATA
         MVC   TIOADBA(LISTMGL),LISTMG  MOVE HEADER TO TIOA
         LA    R2,LISTMGL(,R2)     BUMP TIOA DATA POINTER
***      CHASE JFCB CHAIN, AND MOVE EACH LIBRARY'S DSN TO A LINE
*        ON THE SCREEN. ON ENTRY -
*          REG2 - CURRENT POSITION IN TIOA.
*          REG4 - JFCB ENTRY(S).
***        REG5 - DFHRPL TIOT ENTRY.
         LA    R4,16               LOAD LOOP CONTROL
L01700   ICM   R4,7,TIOEJFCB-TIOENTRY(R5)  ADDRESS 1'ST JFCB
         LA    R4,16(,R4)          BUMP PAST JFCB PREFIX
         MVC   0(DSNLINEL,R2),DSNLINE  MOVE DSN LINE TO TIOA
         XR    R1,R1               CLEAR
         XC    WORKAREA,WORKAREA   CLEAR OUT WORKAREA
         IC    R1,INDXCNT          PICK UP SEQUENCE COUNT
         CVD   R1,WORKAREA         CONVERT TOTAL TO DECIMAL
         OI    WORKAREA+7,X'0F'    CONVERT SIGN TO ZONE
         UNPK  DSNSEQ-DSNLINE(L'DSNSEQ,R2),WORKAREA+6(2)
*                                  PUT SEQUENCE COUNT NEXT TO DSNAME
         MVI   DSNSEQ-DSNLINE(R2),C'+'  ADD OFFSET INDICATOR
         MVC   DSNNAME-DSNLINE(L'DSNNAME,R2),JFCBDSNM-INFMJFCB(R4)
*                                  PUT DSN OF THIS LIBRARY IN LINE
         MVC   DSNVOL-DSNLINE(L'DSNVOL,R2),JFCBVOLS-INFMJFCB(R4)
*                                  PUT VOLSER OF THIS LIBRARY IN LINE
         OC    PGMID,PGMID         RESOURCE REQUEST?
         BZ    L01800              ..NO
         AIF   (&BLDL).BLDL15
         TM    FLAGS,NOBLDL        IS THE TTRINDX VALID (BLDL VALID)?
         BO    L01800              ..NO  - DO NOT HILIST ANY DSN'S
.BLDL15  ANOP
         CLC   TTRINDX,INDXCNT     PROGRAM IN CURRENT LIBRARY?
         BNE   L01800              ..NO  - RETURN
         MVI   DSNHLITE+1-DSNLINE(R2),X'F8'  INTENSIFY THIS LINE
L01800   LA    R1,1(,R1)           UPDATE INDEX COUNT
         STC   R1,INDXCNT          AND SAVE IT
         IC    R1,TIOELNGH-TIOENTRY(R5)  GET ENTRY LENGTH
         AR    R5,R1               GO TO NEXT TIOT ENTRY
         LA    R2,DSNLINEL(,R2)    POINT PAST THIS LINE IN TIOA
         CLC   TIOEDDNM-TIOENTRY(8,R5),=CL8' '  STILL IN DFHRPL?
         BNE   L01850              ..NO  - CONTINUE
         BCT   R4,L01700           ..YES - LOOP
***      DONE SCANNING TIOT. IF AN 'ID=' REQUEST, OBTAIN AND
*        RETURN INFORMATION ABOUT THIS PROGRAM, EITHER FROM THE PPT
***      ENTRY OR FROM THE BLDL PARAMETER LIST.
L01850   OC    PGMID,PGMID         WAS THIS A RESOURCE REQUEST?
         BZ    L05400              ..NO  - RETURN
         LR    R4,R2               SET 'TO' ADDRESS FOR MOVE OF MAP
         LA    R5,PGMINFOL         FETCH LENGTH OF INFO MAP
         LA    R0,PGMINFO          ADDRESS 'FROM' AREA
         LR    R1,R5               SET LENGTH
         MVCL  R4,R0               MOVE MAP TO SCREEN
*        SET NAME AND DEFINITION TYPE IN MAP
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L01900              ..YES - GET TYPE FROM PPT ENTRY
         MVC   PGMMDEF-PGMINFO(L'LMODID,R2),LMODID SHOW AS A LOADMODULE
         LA    R14,L'LMODID        LOAD OFFSET FOR LOAD MODULE NAME
         B     L02200              CONTINUE
L01900   TM    PPTTYPE,PPTMAPST    MAPSET DEFINITION?
         BNO   L02000              ..NO
         MVC   PGMMDEF-PGMINFO(L'PGMMAP,R2),PGMMAP  SHOW AS A MAPSET
         LA    R14,L'PGMMAP        LOAD OFFSET FOR MAPSET NAME
         B     L02200              CONTINUE
L02000   TM    PPTTYPE,PPTPTNST    PARTITION SET DEFINITION?
         BNO   L02100              ..NO
         MVC   PGMMDEF-PGMINFO(L'PGMMPTN,R2),PGMMPTN SHOW AS PART'N SET
         LA    R14,L'PGMMPTN       LOAD OFFSET FOR PARTITION SET NAME
         B     L02200              CONTINUE
L02100   MVC   PGMMDEF-PGMINFO(L'PGMMID,R2),PGMMID  SHOW AS A PROGRAM
         LA    R14,L'PGMMID        LOAD OFFSET FOR PROGRAM NAME
L02200   LA    R14,0(R2,R14)       POINT TO NAME FIELD IN MAP
         MVC   PGMMDEF-PGMINFO(3,R14),=X'1DC913'  SET IC/INT/MDT FLAGS
         MVC   PGMMDEF-PGMINFO+3(L'PGMID,R14),PGMID
*                                  SET RESOURCE NAME IN MAP
         MVC   PGMMDEF+3+L'PGMID-PGMINFO(3,R14),=X'1DF8'
*                                  PROTECT REMAINDER OF FIELD
         TM    FLAGS,NOBLDL+NPPTREQ NON-PPT RESOURCE AND NO BLDL?
         BNO   L02300              ..NO
         MVC   PGMMDEF+3+L'PGMID+2-PGMINFO(L'NOTINPPT,R14),NOTINPPT
*                                  SHOW THAT THE NAME WAS NOT FOUND
         B     L05400              GO FINISH
*        SET RPL SEQUENCE COUNT.
L02300   MVC   PGMMDEF+3+L'PGMID+2-PGMINFO(L'RPLSEQ,R14),RPLSEQ
*                                  MOVE SEQUENCE MESSAGE TO MAP
         XR    R1,R1               CLEAR
         XC    WORKAREA,WORKAREA   CLEAR OUT WORKAREA
         IC    R1,TTRINDX          PICK UP SEQUENCE COUNT
         CVD   R1,WORKAREA         CONVERT TOTAL TO DECIMAL
         OI    WORKAREA+7,X'0F'    CONVERT SIGN TO ZONE
         UNPK  PGMMDEF+3+L'PGMID+2+L'RPLSEQ-PGMINFO(3,14),WORKAREA+6(2)
*                                  PUT SEQUENCE COUNT IN MAP
         MVI   PGMMDEF+3+L'PGMID+2+L'RPLSEQ-PGMINFO(R14),C'+'
*                                  ADD OFFSET INDICATOR
         MVI   PGMMDEF+3+L'PGMID+2+L'RPLSEQ+3-PGMINFO(R14),C')'
*                                  ADD OFFSET INDICATOR
*        SET PROGRAM LOAD ADDRESS IN MAP
         AIF   (NOT &BLDL).BLDL25
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L02700              ..YES - GET LOAD ADDRESS FROM PPT
         MVC   PGMMADR-PGMINFO(3,R2),=C'N/A' SHOW ADDR AS UNAVAILABLE
         B     L02800              CONTINUE
L02700   DS    0H
.BLDL25  ANOP
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         L     R0,PPTCSA           FETCH PROGRAM'S STORAGE ADDRESS
         SLL   R0,4                MAKE ROOM FOR SIGN
         ST    R0,WORKAREA         SAVE ADDRESS
         OI    WORKAREA+3,X'0F'    MAKE IT PACKED
         UNPK  PGMMADR-PGMINFO(L'PGMMADR,R2),WORKAREA(4)  UNPACK IT
         TR    PGMMADR-PGMINFO(L'PGMMADR,R2),HEXDISPL-240
*                                  MAKE IT DISPLAYABLE
*        SET PROGRAM LENGTH IN MAP
L02800   XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         AIF   (NOT &BLDL).BLDL30
         TM    FLAGS,NPPTREQ       IS MODULE IN THE PPT?
         BNO   L02900              ..YES - GET LENGTH FROM PPT ENTRY
         XR    R0,R0               CLEAR
         ICM   R0,B'0111',BLLNGTH  GET LENGTH FROM BLDL PARM AREA
         B     L03000              CONTINUE
L02900   DS    0H
.BLDL30  ANOP
         L     R0,PPTSAR           FETCH PROGRAM'S LENGTH

We shall conclude this article next month with the publication of
the remainder of the source code for this program.

Christopher Frank
Lead Systems Programmer
Western Life Insurance (USA) ) Xephon 1989


