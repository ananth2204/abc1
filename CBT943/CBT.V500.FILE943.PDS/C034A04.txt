 Locating the RACF user-id
Our operating environment is a mixture of CICS 1.6.1 and CICS 1.7 (we are in the
process of migrating to CICS 1.7) running under MVS/XA.  We use the RACF-
compatible CA-TOP SECRET security system.  Midway through the migration process,
a new application system was purchased from a software vendor on a trial and
evaluation basis.  Naturally, it was installed in a test CICS.  The specific
test CICS system had already been migrated to CICS 1.7.  This application system
began, as many systems do, by prompting the user for a name and password on an
entry screen.  However, it also provided a means to bypass the entry screen by
obtaining the userUs RACF user-id and performing the system sign-on functions
based on that.  Since the system was installed under CICS 1.7, the RACF user-id
was readily available via the EXEC CICS ASSIGN USERID() command.
The application testing was completed and the decision was made to purchase the
system.  The purchase decision was closely followed by the decision to implement
the application in a production CICS environment as soon as possible.
Unfortunately, the production CICS system had not yet been upgraded to CICS 1.7
and we found ourselves faced with the requirement to implement an application
that depended on the CICS 1.7 ASSIGN USERID() feature under CICS 1.6.1.  Since
the RACF user-id is not available using CICS 1.6.1 services, we had to emulate
this function with a program of our own.
The GETUSER program was developed to use standard IBM DSECTS and storage
pointers to get to the USERID in the IHAACEE RACF user control block.  Since we
are in an MVS/XA shop, the RACF control blocks are above the line.  The program
had to be coded to provide access to above the line data.  GETUSER has been
utilised in both CICS 1.6.1 and in CICS 1.7 with no problems.  You may have to
add either SYS1.MACLIB or SYS1.AMODGEN libraries to your Assembler procedure.
A recent (May 1988) issue of CICS Update included an excellent article by Paul
Timberlake (Expiration warnings for CICS users) that provided a technique for
locating the ACEE in a CICS 1.7 environment.  This approach will not work under
CICS 1.6.1 because the TCTTESNT field included in the pointer chain was not
introduced until Release 1.7.  The alternative for Version 1.6.1 users who wish
to access the ACEE is to use the TCTTEXSA pointer field as shown in Figure 1.
TCTTEXSA is at TCTTE offset XT9AU in CICS 1.7 and at TCTTE offset XT8CU in CICS
1.6.1.  It points directly to IHAACEE.  This makes access to the ACEE available
regardless of the release of CICS that you happen to be using.  If you are
running CICS 1.7, this technique accomplishes the objective of addressing the
ACEE with one less step in the pointer chain.  The elimination of an instruction
to load one more register with a pointer is not significant, but keeping that
register available for other users may be.
Mr Timberlake also demonstrated a different technique than the one that I used
for switching to 31-bit mode to access data Tabove the lineU in an MVS/XA
environment.  I happen to like this technique better than my own, but have left
mine unchanged as an example of one alternative.  Once again, we see that there
are no TrightU solutions.  There are always alternative approaches to solving
any problem, each of them as good as the others.
         GBLB  &DFHEIMX
&DFHEIMX SETB  1
*  SETTING DFHEIMX = 1 ENSURES THAT R13 POINTS TO CSA
*                      (NOT ALWAYS TRUE IN COMMAND LEVEL)
***FUNCTION: LOCATE AND RETURN THE RACF USERID FOR THE USER      ***
*            CURRENTLY SIGNED ON AT THIS TERMINAL                  *
*     LEVEL: CICS COMMAND LEVEL - NOTE THAT AN 8 BYTE TWA COULD BE *
*            EASILY USED IF A MACRO LEVEL INTERFACE WERE NEEDED    *
*     INPUT: NONE                                                  *
*    OUTPUT: AN 8 BYTE COMMAREA RETURNED TO THE CALLING PROGRAM    *
*            WILL CONTAIN EITHER SPACES OR THE RACF USERID PADDED  *
*            WITH SPACES                                           *
* REGISTERS: R2  - TCTTE DSECT POINTER                             *
*            R3  - GETUSER CODE BASE REGISTER                      *
*            R4  - IHAACEE DSECT POINTER                           *
*            R5  - USER COMMAREA POINTER                           *
*            R6  - UTILITY                                         *
*            R9  - DFHEIBR DSECT POINTER                           *
*            R10 - DFHEIPLR (DYNAMIC STORAGE) POINTER              *
*            R11 - TCT DSECT POINTER                               *
*            R12 - CICS TCA POINTER                                *
 ***          R13 - CICS CSA POINTER                              ***
DFHEISTG DESECT
HOLDADDR DS     AL4
HOLDUSER DS     CL8
HOLDLEN  DS     XL1
ACCEBAR  EQU    4            RACF ACEE POINTER
CABASE   EQU    5            COMMAREA POINTER
TCTTEAR  EQU    11           TCTTE POINTER
CSACBAR  EQU    13           COMMON SYSTEM AREA POINTER
CADSECT  DSECT               USER COMMAREA
CAUSERID DS    CL8
         IHAACEE                       RACF USER CONTROL BLOCK
         COPY DFHCSADS                 CSA DSECT
         DFHTCA CICSYST=YES            TCA DSECT
         DFHTCTZE CICSYST=YES          TCT DSECT
GETUSER  DFHEIENT CODEREG=(3),DATAREG=(10),EIBREG=(9)
         CLC   EIBCALEN,=H'8'          IS COMMAREA 8 BYTES LONG
         BNE   GOBACK                  NO - RETURN TO CALLER
         USING CADSECT,CABASE          SET ADDRESSABILITY TO COMMAREA
         L     CABASE,DFHEICAP          GET ADDRESS OF COMMAREA
         MVC   CAUSERID,=C'        '    MOVE SPACES TO CAUSERID FIELD
         USING DFHCSADS,CSACBAR        SET ADDRESSABILITY TO CSA
         L     TCACBAR,CSACDTA          GET TCA ADDRESS FROM CSA
         USING DFHTCADS,TCACBAR        SET ADDRESSABILITY TO TCA
         L     TCTTEAR,TCAFCAAA         GET TCTTE ADDRESS FROM TCA
         USING DFHTCTTE,TCTTEAR        SET ADDRESSABILITY TO TCTTE
         CLC   TCTTEXSA,=X'00000000'    TCTTEXSA = 0? (NO USER!!!)
         BE    GOBACK                   NO EXT SECURITY CNTL BLOCK
         L     ACCEBAR,TCTTEXSA         GET ACEE ADDRESS FROM TCT
         USING ACEE,ACCEBAR            SET ADDRESSABILITY TO ACEE
         L     R1,SETMOD31             LOAD GOMODE31 ADDR FOR USE WITH
         BSM   0,R1                    BSM TO INVOKE 31 BIT ADDR MODE
SETMOD31 DC    A(GOMODE31+X'80000000')
GOMODE31 MVC   HOLDLEN,ACEEUSRL        GET USERID LEN
         MVC   HOLDUSER,ACEEUSRI       GET USERID
         LA    R1,GOMODE24             LOAD GOMODE24 ADDR FOR USE WITH
         BSM   0,R1                    BSM TO INVOKE 24 BIT ADDR MODE
GOMODE24 SR    R6,R6
         IC    R6,HOLDLEN              GET USERID LENGTH
         BCTR  R6,0                    DECREMENT IT BY 1
         EX    R6,MVCVERB              EXECUTE MOVE
GOBACK   EXEC CICS RETURN
MVCVERB  MVC   CAUSERID,HOLDUSER
         END


Keith Alloway
Systems Programmer
Associated Grocers Inc (USA)  ) Xephon 1988

















