Setting printers to 'create' at start-up

With CICS warm and emergency starts, printers will retain the
same state they were in from the last CICS cycle.  If for some
reason a printer was set to 'nocreate' mode during the last cycle
and remained that way at shutdown, it will come up that way
the next time and require a master terminal operator to set it to
'create'.  This became a constant occurrence in our shop
(especially with a printer attached to a LAN) so I decided to
write a CICS program to place all CICS printers automatically
in 'create' mode during CICS start-up via the PLTPI.

A naming convention of RDO groups for printers is necessary
for the logic to work.  My method is to correlate the RDO
printer group name suffixes to the suffixes of the CICS regions.
Our regions are named starting with the literal 'CICS' followed
by a suffix.  The RDO printer group names start with 'FSPRT'
followed by a suffix corresponding to a particular CICS region.

First, the region the program is running in is determined.  The
suffix is extracted from the region name and plugged into the
printer group name.  The CSD file is then read to get the names
of all the printers installed for this region.  The record layouts
for the CSD file were obtained from the May 1989 issue of
CICS Update in Garry Barker's article entitled CSD record
formats.  A table is built containing the printer-ids.  This table
is then used to issue the 'EXEC CICS SET TERMINAL'
command for each.

There has been logic added to the CSD file open routine to
allow for the instance where multiple CICS regions are started
simultaneously.  I guess this could have been handled by using
a set command to put it into read-only mode.  Instead, I
decided to use interval control and retry the open every five
seconds for five times.

Another thing to note is that because of the sync point time in
CICS during start-up the messages from this program always
seem to appear after the 'control is being given' message.


*** THIS PROGRAM SETS ALL PRINTERS FOR A CICS REGION TO CREATE MODE ***
* AND INSERVICE. IT IS EXECUTED AT START-UP VIA PLTPI.                *
*   FIRST, THE REGION THE PROGRAM IS RUNNING IN IS DETERMINED. THEN   *
* THE CSD FILE IS READ TO GET THE NAMES OF ALL THE PRINTERS INSTALLED *
* FOR THIS REGION. THE RDO GROUPS FOR OUR PRINTERS ARE FSPRTA, FSPRTP,*
* ETC.                                                                *
*   A TABLE IS BUILT CONTAINING THE PRINTER IDS.  THIS TABLE IS THEN  *
*** USED TO ISSUE THE 'EXEC CICS SET TERMINAL' COMMAND FOR EACH.    ***
         USING DFHCSADS,CSACBAR        ADDRESS THE CSA
         COPY  DFHCSADS
         COPY  DFHTCADS
         COPY  DFHTCTTE
         COPY  DFHTCTFX
CSACBAR  EQU   7                       REGISTER FOR CSA DSECT
TCTTEAR  EQU   8                       REGISTER FOR TCTTE
TCTPFBAR EQU   9                       REGISTER FOR TCTTE
DFHEISTG DSECT                         TIME FOR SOME DYNAMIC STORAGE
RETRYOPN DS    PL1
JOBNAME  DS    CL8
EOFSWI   DS    CL1
SCREATE  DS    F
SINSERV  DS    F
RECLGTH  DS    H
SAVEKEY  DS    CL8
PRTID    DS    CL4
WTOMSG   DS    CL50
PRTTBLE  DS    CL320
ROUTELST EQU   *
CONSLID  DS    CL4
         DS    CL2
         DS    CL3
         DS    CL1
         DS    CL6
ENDRLST  DS    CL2
CSDREC   EQU   *              CSD RECORD LAYOUT
CSDKEY   DS    0CL22
CSDGROUP DS    CL8
         ORG   CSDGROUP
CSDLIST  DS    CL8
CSDSEQNR DS    XL4
CSDETYPE DS    XL2
CSDRSRCE DS    CL8
CSDRECL  DS    XL2
CSDTIME  DS    PL6
CSDUNKWN DS    CL14
CSDVARCT DS    XL1
CSDFIXCT DS    XL1
CSDFXVAR DS    CL454
*        PROVIDE EXEC INTERFACE ENTRY TO PROGRAM                      *
SPLTSET  DFHEIENT
*** DETERMINE PRINTER GROUP NAME FOR THIS REGION AND BUILD A TABLE  ***
*   CONTAINING ALL PRINTERS WITHIN THAT GROUP TO BE USED LATER        *
*   BY THE EXEC CICS SET COMMAND TO PLACE INTO CRE MODE. AN ASTERISK  *
*** IS USED TO INDICATE END OF TABLE.                               ***
BEGIN    EQU   *
         MVC   WTOMSG,MSG1             SEND 'PGM STARTED' MSG
         BAL   R8,SENDMSG
         BAL   R2,OPENCSD              GO OPEN DA DATASET
         EXEC  CICS ADDRESS CSA(CSACBAR)
         L     TCTPFBAR,CSATCTBA       GET ADDRSBLTY TO TCT SUFFIX
         USING DFHTCTFX,TCTPFBAR
         MVC   JOBNAME,TCTVJBNM          GET JOBNAME
         MVC   CSDGROUP,=C'FSPRT   '     SETUP PRINTER GROUP NAME
         MVC   CSDGROUP+5(1),JOBNAME+4   SET GRPNAME FOR THIS REGION
         MVC   SAVEKEY,CSDGROUP    SAVE CURRENT PRT GRP FOR COMPARE
BLDPRTTB EQU   *
         BAL   R2,STARTBR          START THE BROWSE
         LA    R6,PRTTBLE          POINT R6 TO START OF PRINTER TABLE
         MVI   EOFSWI,C'0'         INIT EOF SWITCH
GRPLOOP  EQU   *
         BAL   R2,BROWSE           READ CSD FILE
         CLI   EOFSWI,C'1'         DID WE HIT END OF FILE?
         BE    ENDGROUP            YES:  FINISH BUILDING TABLE
         CLC   CSDGROUP,SAVEKEY    STILL ON LIST WE WANT?
         BNE   ENDGROUP            NO:  WE'RE FINISHED BUILDING TABLE
         CLC   CSDETYPE,=X'0006'   YES: IS THIS GROUP HEADER REC?
         BE    GRPLOOP                  YES: WE DON'T WANT IT
         MVC   0(8,R6),CSDRSRCE         NO:  MOVE PRTNAME TO TABLE
         LA    R6,8(R6)            BUMP TO NEXT TABLE SLOT
         B     GRPLOOP                  GO GET NEXT RECORD
ENDGROUP EQU   *
         EXEC  CICS ENDBR DATASET('DFHCSD')
         MVC   0(8,R6),=C'********' INDICATE END OF PRINTER TABLE
         LA    R6,PRTTBLE         POINT BACK TO START OF PRINTER TABLE
*  READ GROUP TABLE AND PROCESS GROUPS.                               *
         MVC   SCREATE,DFHVALUE(CREATE)     YES, THIS IS KINDA FUNKY,
         MVC   SINSERV,DFHVALUE(INSERVICE)  BUT IT'S THE ONLY WAY.
GETPRT   EQU *
         MVC   PRTID(4),0(R6)     MOVE PRINTER ID FOR SET
         BAL   R2,SETCRE          ISSUE SET TERMINAL COMMAND
         LA    R6,8(R6)           BUMP TO NEXT GROUP IN TABLE
         CLC   0(8,R6),=C'********'  END OF GROUP TABLE?
         BE    RETURN                YES: SEE IF ANY MORE LISTS
         BE    GETPRT                NO:  GO PROCESS NEXT GROUP
RETURN   EQU   *                   RETURN TO CICS
         BAL   R2,CLOSECSD         CLOSE DA DATASET
         MVC   WTOMSG,MSG8         SEND 'PROGRAM ENDED' MSG
         BAL   R8,SENDMSG
         DFHEIRET
OPENCSD  EQU   *                   ISSUE OPEN FOR CSD FILE
         ZAP   RETRYOPN,=P'1'
OPNRETRY EQU   *
         EXEC  CICS HANDLE CONDITION ERROR(BADOPEN)
         EXEC  CICS SET DATASET('DFHCSD') OPEN
         MVC   WTOMSG,MSG2B             SEND 'OPEN SUCCESS' MSG
         BAL   R8,SENDMSG
         BR    R2
BADOPEN  EQU   *
         CP    RETRYOPN,=P'5'           HAVE WE TRIED 5 TIMES?
         BH    OPENFAIL                 YES: GET OUTA DODGE.
         AP    RETRYOPN,=P'1'           NO: LET'S TRY AGAIN
         MVC   WTOMSG,MSG2A             SEND 'WILL RETRY' MSG
         BAL   R8,SENDMSG
         EXEC  CICS DELAY INTERVAL(5)
         B     OPNRETRY
OPENFAIL EQU   *
         MVC   WTOMSG,MSG2              SEND 'NO MORE RETRIES' MSG
         BAL   R8,SENDMSG
         B     RETURN
*      ISSUE STARTBR COMMAND AT BEGINNING OF PRINTER GROUP.           *
STARTBR  EQU   *
         EXEC CICS HANDLE CONDITION ERROR(BADSETL)
         EXEC  CICS STARTBR DATASET('DFHCSD')                          X
                            RIDFLD(CSDGROUP)                           X
                            KEYLENGTH(8)                               X
                            GENERIC                                    X
                            EQUAL
         BR    R2
BADSETL  EQU   *
         MVC   WTOMSG,MSG3         SEND 'START BROWSE' FAILED MSG
         BAL   R8,SENDMSG
         B     RETURN
BROWSE   EQU   *                    ISSUE READNEXT
         EXEC CICS HANDLE CONDITION ENDFILE(EOF)                       X
                                ERROR(BADBROW)
         MVC   RECLGTH,=H'500'
         EXEC  CICS READNEXT DATASET('DFHCSD')                         X
                             INTO(CSDREC)                              X
                             LENGTH(RECLGTH)                           X
                             RIDFLD(CSDGROUP)
         BR    R2
BADBROW  EQU   *
         MVC   WTOMSG,MSG4             SEND 'READNEXT FAILED' MSG
         BAL   R8,SENDMSG
         B     RETURN
EOF      EQU   *
         MVI   EOFSWI,C'1'          SET EOF SWITCH
         BR    R2
SETCRE   EQU   *                    SET TERMINAL TO CREATE MODE
         EXEC  CICS HANDLE CONDITION ERROR(SETERR)
         EXEC  CICS SET TERMINAL(PRTID)    CREATESESS(SCREATE)         X
                                           SERVSTATUS(SINSERV)
         EXEC  CICS INQUIRE TERMINAL(PRTID) CREATESESS(SCREATE)        X
                                           SERVSTATUS(SINSERV)
         CLC   SCREATE,DFHVALUE(CREATE)
         BNE   SETERR
         CLC   SINSERV,DFHVALUE(INSERVICE)
         BNE   SETERR
SETERR   EQU   *
         B     SETRET
         MVC   WTOMSG,MSG5              SEND 'SET COMMAND FAILED' MSG
         MVC   WTOMSG+45(4),PRTID
         BAL   R8,SENDMSG
SETRET   EQU   *
         BR    R2
CLOSECSD EQU   *                    ISSUE CLOSE FOR CSD FILE
         EXEC  CICS HANDLE CONDITION ERROR(BADCLOSE)
         EXEC  CICS SET DATASET('DFHCSD') CLOSED
         BR    R2
BADCLOSE EQU   *
         MVC   WTOMSG,MSG6              SEND 'CLOSE FAILED' MSG
         BAL   R8,SENDMSG
         B     RETURN
SENDMSG  EQU   *                        SEND CONSOLE MESSAGE
         MVI   ROUTELST,C' '
         MVC   ROUTELST+1(15),ROUTELST
         MVC   CONSLID,=C'CN00'
         MVC   ENDRLST,=H'-1'
         EXEC  CICS HANDLE CONDITION ERROR(BADROUTE)
         EXEC  CICS ROUTE LIST(ROUTELST)
         EXEC  CICS SEND TEXT FROM(WTOMSG) LENGTH(50) ACCUM PAGING
         EXEC  CICS SEND PAGE AUTOPAGE RELEASE
         B     ROUTERET
BADROUTE EQU   *
         MVC   WTOMSG,MSG7        SEND 'ROUTE CONSOLE MSG FAILED' MSG
         BAL   R8,SENDMSG
         B     RETURN
ROUTERET EQU   *
         BR    R8
         LTORG
MSG1  DC       C'FDP0100I PRINTER SET PROGRAM STARTED              '
MSG2  DC       C'FDP0100I OPEN FAILED FOR CSD FILE. NO MORE RETRIES'
MSG2A DC       C'FDP0100I OPEN FAILED FOR CSD FILE. WILL RETRY.    '
MSG2B DC       C'FDP0100I OPEN SUCCESSFUL FOR CSD FILE.            '
MSG3  DC       C'FDP0100I START BROWSE COMMAND FAILED              '
MSG4  DC       C'FDP0100I READNEXT COMMAND FAILED                  '
MSG5  DC       C'FDP0100I SET COMMAND FAILED FOR PRINTER ID - XXXX '
MSG6  DC       C'FDP0100I CLOSE FAILED FOR CSD FILE                '
MSG7  DC       C'FDP0100I ROUTE CONSOLE MESSAGE FAILED             '
MSG8  DC       C'FDP0100I PRINTER SET PROGRAM ENDED                '
         END


David L Kyre
Communications Systems Programmer
S C Financial Data Systems (USA)

