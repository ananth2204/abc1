A CICS resource monitor for everyone


Introduction

In many shops, there is a valid need for many support
personnel (particularly application programmers and help desk
staff) to have read access to CICS system resources. These
groups can be more effective in their jobs if they have the
capability to display the attributes of various resources
currently active in a region. Many problems can be identified
or resolved at their level instead of escalating the problems to
the systems programmer level.

The information they need can be accessed through the CEMT
and CECI INQUIRE transactions or through third-party
monitors. However, these tools are usually available only to
systems programmers and operations staff, especially in the
production environment.

There are several reasons for this situation. First, this is usually
dictated by data security or computer audit recommendations.
Second, these tools can not only examine the attributes of the
resource but modify them as well including disabling and
enabling resources or even shutting down CICS. Furthermore,
these tools are usually resource intensive and thus impractical
to be made available to a multitude of users.

Therefore, there is a need for a scaled down version of a
monitor that can be used by everyone. This monitor should
have the display capability only and use few resources. It
should also enhance CEMT's screens by showing information
that is readily available.


Systems Programming Commands

In CICS/ESA Version 3, there is a set of command-level
EXEC CICS commands that is equivalent to most of the
functions of the master terminal transaction, CEMT. These
systems programming commands are documented in the
System Programming Reference (SC33-0670) manual. By
using a subset of these commands, I wrote an application that
contains EXEC CICS INQUIRE commands to browse the
attributes of various resource types. This is structured as
follows:

      EXEC CICS INQUIRE resource-type START
      EXEC CICS INQUIRE resource-type NEXT (attribute list)
          loop until end of list or screen is full
      EXEC CICS INQUIRE resource-type END

Accessing resources using the old traditional approach of
starting from the CSA and then navigating through the various
control blocks was considered. Although the EXEC CICS
ADDRESS (CSA) is no longer supported in Version 3.2.1, it is
still possible to access the CSA via global exits. However, this
approach is not as straightforward and is not in line with IBM's
future direction.

This application is written in CICS/ESA Version 3.2.1.
However, for users of earlier releases before Version 3, this
application can still be used as a program shell. In the
Customization Guide  (SC33-0507), the programmable
interface to the master terminal program (DFHEMTA) and a
subset of the SP commands are documented. However, you
need to figure out how to code the equivalent of browsing the
resource list.


Features

This application is a complete application by itself. It contains
several user friendly interfaces including: cursor positioning,
PF key invoked functions, scrolling, command line selection
with help on command syntax, screen refresh, date and time
stamp, and start list specification.

This application is written to use minimal resources. Unlike
CEMT, it was coded as pseudo-conversational. It does not use
any file I/O. It also does not use any BMS maps. The screens
are formatted within the program: a single EXEC CICS SEND
command handles all the screens.

The screens display more information than CEMT. Also, most
screens were designed to show one line per object (instead of
the two lines per object in CEMT) so they list twice as many
objects.


Usage Notes

To invoke the application, key in the SHOW transaction from a
cleared screen. If incorrect or no parameters are specified in the
command line, the help screen is displayed (Figure 1). To
select a resource type to display, either press a desired PF key
or enter a command like: SHOW TERMS. To specify a
specific item to start the list from, use the command: SHOW
TERM=1001. Pressing ENTER will refresh the screen
information, PF08 will scroll forward, PF07 will scroll to the
top of the list, and CLEAR will exit the application.


'Show Tasks' Screen

This screen (Figure 2) shows the active tasks currently running
in the region, in a way similar to CEMT's INQUIRE TASK
command. However, it displays additional information
including:

o      USERID - the user-id associated with the task.

o      RUNSTATUS - the processing queue the task is on, ie
      running, dispatchable, or suspended.

o      SUSPENDTYPE, SUSPENDVALU, and SUSPENDTIME.

o      STARTCODE - indicates how the task was started, ie
      terminal operator, return transaction-id, started task, TD
      queue, etc.

o      FACILITY and FACILITYPE - the name and type of
      facility that initiated this task.

The code fragment used to display this information illustrates
the recommended way of accessing the tasks. The traditional
route of navigating through the Dispatch Control Area (DCA)
chain is no longer a viable alternative in CICS Version 3.2.


'Show Terminals' Screen

Figure 3 shows the terminal-ids and the associated users active
in the region. Again, the additional information shown here
that is not in CEMT's INQUIRE TERMINALS command
consists of:

o      USERID and USERNAME.

o      TRAN and TASKN - displays the currently executing
      transaction and task number associated with the terminal.

o      NEXTTRAN - displays the next transaction that will be
      invoked when the user at the terminal presses an AID key.

With the terminal, user, and transaction information shown,
one can identify that users are associated with specific
applications by just looking at one screen. In my shop we have
a DB2 table for telephone numbers so I added a code fragment
that displays the telephone numbers of users as well.


'Show Transactions' Screen

Figure 4 displays the transactions defined in the region.
Additional information shown that is not in the CEMT
equivalent is:

o      PROFILE - (in shops that use RDO) the profile associated
      with the transaction.

o      REMOTENAME and REMOTESYS - for transactions that
      are defined as remote in shops that utilize MRO or ISC.


'Show Programs' Screen

Figure 5 presents the programs, maps, and partition sets
defined in the region. Again, this screen has more information
than CEMT.

o      DATALOCATION - tells you whether the program can
      accept data addresses higher than 16 megabytes. Handy
      information when more programs exploit addresses above
      the line.

o      COBOLTYPE - shows whether the program uses COBOL
      or COBOL II.

o      ENTRYPOINT and LOADPOINT - addresses of the most
      recently loaded copy of the program. If the program is not
      in use a null pointer, X'FF000000', is returned.

The objects are displayed one per line instead of one per two
lines as in CEMT.


'Show Files' Screen

Figure 6 presents information about VSAM, BDAM and
remote files. Enhancement to CEMT's INQUIRE DATASET
SCREEN include:

o      STRINGS - number of concurrent operations that may be done.

o      TYPE - for VSAM files indicates ESDS, KSDS, or RRDS.

o      OBJECT - for VSAM files indicates whether this is a
      BASE or PATH.

o      RECORDFORMAT and RECORDSIZE - describes format
      and size of the records.

o      KEYLENGTH and KEYPOSITION - length and position
      of keys.

o      REMOTENAME and REMOTESYSTEM - information
      for files that are defined as remote.


Implementation Notes

Compile the CSY710 program specifying the SP parameter in
the translator step. Define the SHOW transaction in the PCT
and CSY710 in the PPT. CICS uses an external security
manager (such as RACF) to do command security checking for
SP commands, therefore request your data security
administrator to define appropriate rules.

This article will be concluded next month with the publication
of the source code for the monitoring program.

Larry Prestosa
Systems Engineer
USAir (USA)

