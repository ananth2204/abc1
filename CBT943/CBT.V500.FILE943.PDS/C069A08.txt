Avoiding I/O operations through Hiperspaces

CICS applications can take advantage of MVS/ESA Data
Windowing Services (DWS) that exploit Hiperspaces.  The
callable routines of DWS are available to Assembler and also
high-level languages.  With DWS, the caller can specify that a
Hiperspace is defined as a temporary data object.  After storing
large data in the Hiperspace, DWS allows access to temporary
data objects without performing any physical I/O operations.


VIEWING A LARGE DATA OBJECT

In the following example, the CICS application HSR1APPL
allows the viewing of a large data object on a screen.

DFHEISTG DSECT
LEN1     DS    H
LEN2     DS    H
SCREEN1  DS    CL1920
         COPY  DFHAID
COMMAREA DSECT
COMMFELD DS    CL17
         ORG   COMMFELD
COMRECC  DS    F    ACTUAL RECORD COUNT FOR LOCATING DATA IN HIPERSPACE
COMEODC  DS    F    RECORD COUNT AT END OF DATA (EOD) CONDITION
COMPFSCH DS    CL1  VIEW LEFT/RIGHT CONDITION
COMOBJID DS    CL8  HIPERSPACE IDENTIFIER
HSR1APPL DFHEIENT CODEREG=(3),DATAREG=(13,12),EIBREG=11
         LH    2,EIBCALEN
         CH    2,=H'0'
         BE    COMEMPTY
         L     9,DFHEICAP
         USING COMMAREA,9
         L     10,COMRECC
         B     KEYS
COMEMPTY CALL  DWSCALL1,(OBJID1,EODCOUNT),VL          see DWSCALL1 below
         EXEC CICS GETMAIN SET(9) LENGTH(17)
         USING COMMFELD,9
         XR    10,10                    INIT ACTUAL RECORD COUNT
         MVC   COMEODC(4),EODCOUNT      PROVIDE EOD RECORD COUNT
         MVI   COMPFSCH,X'FF'           SET VIEW LEFT CONDITION
         MVC   COMOBJID(8),OBJID1       PROVIDE HIPERSPACE IDENTIFIER
KEYS     CLI   EIBAID,X'7D'             KEY PRESSED: ENTER
         BE    SENDSCR
         CLI   EIBAID,X'F3'             PF3 TRANSACTION ENDED
         BE    TRXEND
         CLI   EIBAID,C'4'              PF4 VIEW TOP
         BE    LABEL4
         CLI   EIBAID,C'5'              PF5 VIEW BOTTOM
         BE    LABEL5
         CLI   EIBAID,C'7'              PF7 SCROLL UP
         BE    LABEL7
         CLI   EIBAID,C'8'              PF8 SCROLL DOWN
         BE    LABEL8
         CLI   EIBAID,C':'              PF10 VIEW LEFT
         BE    LABEL10
         CLI   EIBAID,C'#'              PF11 VIEW RIGHT
         BE    LABEL11
         B     SENDSCR                  ANYKEY
LABEL4   XR    10,10                    INIT ACTUAL RECORD COUNT
         B     SENDSCR
LABEL5   L     10,COMEODC               LOAD EOD RECORD COUNT
LABEL7   S     10,=F'22'                PROVIDE ACTUAL RECORD COUNT FOR
         LTR   10,10                    SCROLL UP
         BP    SENDSCR
         BZ    SENDSCR
         XR    10,10        IF LESS THAN ZERO --> CORRECT RECORD COUNT
         B     SENDSCR
LABEL8   L     8,COMEODC                PROVIDE ACTUAL RECORD COUNT FOR
         S     8,=F'22'                 SCROLL DOWN
         C     8,COMRECC    GREATER THAN EOD RECORD COUNT?
         BNH   SENDSCR
         A     10,=F'22'
         B     SENDSCR
LABEL10  EQU   *
         MVI   COMPFSCH,X'FF'           SET VIEW LEFT CONDITION
         B     SENDSCR
LABEL11  EQU   *
         MVI   COMPFSCH,X'00'           SET VIEW RIGHT CONDITION
         B     SENDSCR
SENDSCR  EQU   *
         MVC   OBJID1(8),COMOBJID       PROVIDE HIPERSPACE IDENTIFIER
         ST    10,COMRECC               UPDATE ACTUAL RECORD COUNT
         ST    10,RECORDC
         EXEC CICS GETMAIN SET(5) LENGTH(3192) INITIMG(BLANK)
         CALL  DWSCALL2,(OBJID1,RECORDC,(5)),VL       see DWSCALL2 below
         LA    4,22
         LA    6,SCREEN1
SENDSCRL MVI   0(6),X'40'               FILL 22 LINES OF THE SCREEN
         MVC   1(79,6),0(6)             WITH DATA LOCATING IN
         CLI   COMPFSCH,X'00'           HIPERSPACE
         BNE   CONT1
         MVC   0(80,6),53(5)
         B     CONT2
CONT1    MVC   0(80,6),0(5)
CONT2    LA    5,133(5)
         LA    6,80(6)
         BCT   4,SENDSCRL
SENDSCRP MVI   0(6),C'_'                FILL THE LAST TWO LINES OF THE
         MVC   1(79,6),0(6)             SCREEN WITH SERVICE FUNCTIONS
         LA    6,80(6)
         MVC   0(40,6),PFTEXT1
         MVC   40(40,6),PFTEXT2
         MVC   LEN1,=H'1920'            SEND SCREEN
         EXEC CICS SEND FROM(SCREEN1) LENGTH(LEN1) ERASE
         MVC   LEN2,=H'17'
         EXEC  CICS RETURN TRANSID('HSR1') COMMAREA(COMMFELD)          *
               LENGTH(LEN2)
TRXEND   MVC   OBJID1(8),COMOBJID
         CALL  DWSCALL3,(OBJID1),VL                   see DWSCALL3 below
         EXEC CICS SEND TEXT FROM(TEXT) LENGTH(LEN5) ERASE FREEKB
         EXEC  CICS RETURN
RECORDC  DS    F
EODCOUNT DS    CL4
OBJID1   DS    CL8
BLANK    DC    C' '
LEN5     DC    H'17'
TEXT     DC    C'TRANSACTION ENDED'
PFTEXT1  DC    CL40'PF3 END     PF4 TOP / PF5 BOTTOM    PF7 '
PFTEXT2  DC    CL40'UP / PF8 DOWN     PF10 LEFT / PF11 RIGHT'
         END   HSR1APPL


DWSCALL1 - LOADING LARGE DATA INTO THE HIPERSPACE

DWSCALL1 CSECT
         MSAVE 6            USER-DEFINED MACRO OF LINKAGE CONVENTIONS
         LR    10,1         ADDRESS PARAMETER LIST
         LA    12,1
* LINK TO A USER-WRITTEN MODULE FOR DYNAMIC ALLOCATION OF AN
* EXTRA TD QUEUE DATASET OR OTHERWISE ORGANIZED SEQUENTIAL DATASET
         LINK  EP=DYNAL
         OPEN  (PRINTDYN,INPUT)
* CREATE STANDARD TYPE HIPERSPACE FOR A TEMPORARY DATA OBJECT
         CALL  CSRIDAC,(OPBEGIN,TEMP,OBJNAME,YES,NEW,ACCMODE,          *
               OBJSIZE,OBJID1,LSIZE,RC,RSN)
         L     11,0(10)
         MVC   0(8,11),OBJID1
* GETMAIN 1 PAGE OF VIRTUAL STORAGE TO USE AS A WINDOW (BASEREG. 3)
         GETMAIN EU,LV=4096,BNDRY=PAGE,A=WINDWPTR
         L     3,WINDWPTR
         LA    4,ZERO      INIT THE 4K BLOCK NUMBER OF THE
         ST    4,OFFSET1   TEMPORARY DATA OBJECT BEGINNING WITH ZERO
         XR    8,8
         XR    9,9
* MAP A WINDOW TO ONE BLOCK OF THE DATA OBJECT (BEGIN VIEWING)
NEWVIEW  CALL  CSRVIEW,(OPBEGIN,OBJID1,OFFSET1,SPAN1,(3),ACCSEQ,       *
               REPLACE,RC,RSN)
         MVC   0(137,3),=137X'40'
LOOP22   GET   PRINTDYN,(3)
         A     9,=F'1'      USE REGISTER 9 FOR EOD RECORD COUNT
         A     8,=F'1'
         C     8,=F'22'
         BE    SAVEBLKS
         LA    3,137(3)                WRITE DATA IN THE WINDOW
         MVC   0(137,3),=137X'40'
         B     LOOP22
*  SAVE WINDOW INSERTS TO THE TEMPORARY DATA OBJECT
SAVEBLKS CALL  CSRSCOT,(OBJID1,OFFSET1,SPAN1,RC,RSN)
         L     3,WINDWPTR
*  END A VIEW
         CALL  CSRVIEW,(OPEND,OBJID1,OFFSET1,SPAN1,(3),ACCSEQ,         *
               REPLACE,RC,RSN)
         LTR   12,12
         BZ    RETURN
         XR    8,8
         A     4,=F'1'      INCREMENT BLOCK-NUMBER WITHIN HIPERSPACE
         ST    4,OFFSET1
         L     3,WINDWPTR
         B     NEWVIEW
EOF      CLOSE (PRINTDYN)
FILL     LA    3,137(3)      FILL REMAINING RECORDS OF LAST HIPERSPACE
         MVC   0(137,3),=137X'40'      BLOCK WITH BLANKS TILL RECORD
         A     9,=F'1'                 COUNT 22 IS REACHED
         A     8,=F'1'
         C     8,=F'22'
         BNE   FILL
         LA    12,ZERO
         B     SAVEBLKS
RETURN   ST    9,EOFCOUNT
         L     11,4(10)
         MVC   0(4,11),EOFCOUNT
         L     13,$SAVE+4        INSTRUCTIONS
         RETURN (14,12),RC=0         RELATED TO MSAVE
ZERO     EQU   0
         DS    0D
EOFCOUNT DS    F
OPBEGIN  DC    CL5'BEGIN'        OPERATION TYPE OF DATA WINDOWING
OPEND    DC    CL4'END '         SERVICES
TEMP     DC    CL9'TEMPSPACE'    OBJECT TYPE: TEMPORARY DATA OBJECT
OBJNAME  DC    CL8'        '
YES      DC    CL3'YES'          SCROLL AREA=YES
NEW      DC    CL3'NEW'          NEW DATA OBJECT
ACCSEQ   DC    CL4'SEQ '         SEQUENTIAL ACCESS
ACCMODE  DC    CL6'UPDATE'       UPDATE MODE
REPLACE  DC    CL7'REPLACE'      REPLACE DATA IN WINDOW
OBJSIZE  DC    F'2560'           SIZE OF DATA OBJECT IS 10MB
SPAN1    DC    F'1'              4K-PROCESSING BETWEEN GETMAINED AREA
*                                AND DATA OBJECT
OBJID1   DS    CL8               OBJECT IDENTIFIER
LSIZE    DS    F                 LOGICAL SIZE OF DATA OBJECT
OFFSET1  DS    F                 4K-BLOCK NUMBER F'0',F'1',F'2' ...
RC       DS    F                 RETURN CODE FROM SERVICE
RSN      DS    F                 REASON CODE FROM SERVICE
WINDWPTR DS    F                 ADDRESS OF GETMAINED WINDOW
PRINTDYN DCB   DDNAME=PRINTDYN,DSORG=PS,MACRF=GM,EODAD=EOF,            *
               RECFM=V,LRECL=137,BLKSIZE=141
         END


DWSCALL2 - ACCESSING DATA IN THE HIPERSPACE

DWSCALL2 CSECT
         MSAVE 6
         LR    10,1                 ADDRESS PARAMETER LIST
         L     11,0(10)
         MVC   OBJID1(8),0(11)      PROVIDE HIPERSPACE IDENTIFIER
         L     11,4(10)
         MVC   RECORDC(4),0(11)
         L     8,RECORDC            TAKE THE RECORD COUNT
         SRDA  8,32(0)              TO FIND OUT
         D     8,=F'22'             THE REQUESTED BLOCK NUMBER
         ST    9,OFFSET1            OF THE TEMPORARY DATA OBJECT
         XR    4,4
         L     12,8(10)
         GETMAIN EU,LV=4096,BNDRY=PAGE,A=WINDWPTR
         L     3,WINDWPTR
         CALL  CSRVIEW,(OPBEGIN,OBJID1,OFFSET1,SPAN1,(3),ACCSEQ,       *
               REPLACE,RC,RSN)
         LA    3,4(3)
LOOP22   EQU   *
         MVC   0(133,12),0(3)       PROCESS DATA WITHOUT PERFORMING
         A     4,=F'1'              ANY I/O OPERATIONS
         C     4,=F'22'
         BE    CONTIN
         LA    3,137(3)
         LA    12,133(12)
         B     LOOP22
CONTIN   L     3,WINDWPTR
         CALL  CSRVIEW,(OPEND,OBJID1,OFFSET1,SPAN1,(3),ACCSEQ,         *
               REPLACE,RC,RSN)
RETURN   L     13,$SAVE+4
         RETURN (14,12),RC=0
RECORDC  DS    CL4
EOFCOUNT DS    CL4
         DS    0D
OPBEGIN  DC    CL5'BEGIN'
OPEND    DC    CL4'END '
ACCSEQ   DC    CL4'SEQ '
REPLACE  DC    CL7'REPLACE'
SPAN1    DC    F'1'
OBJID1   DS    CL8
OFFSET1  DS    F
RC       DS    F
RSN      DS    F
WINDWPTR DS    F
         END


DWSCALL3 - DELETING A TEMPORARY DATA OBJECT

DWSCALL3 CSECT
         MSAVE 6
         LR    10,1
         L     11,0(10)
         MVC   OBJID1(8),0(11)
* TERMINATE ACCESS TO THE OBJECT AND DELETE TEMPORARY HIPERSPACE
         CALL  CSRIDAC,(OPEND,TEMP,OBJNAME,YES,OLD,ACCMODE,            *
               OBJSIZE,OBJID1,LSIZE,RC,RSN)
RETURN   L     13,$SAVE+4
         RETURN (14,12),RC=0
         DS    0D
OPBEGIN  DC    CL5'BEGIN'
OPEND    DC    CL4'END '
TEMP     DC    CL9'TEMPSPACE'
OBJNAME  DC    CL8'        '
YES      DC    CL3'YES'
OLD      DC    CL3'OLD'
ACCMODE  DC    CL6'UPDATE'
OBJSIZE  DC    F'2560'
OBJID1   DS    CL8
LSIZE    DS    F
RC       DS    F
RSN      DS    F
         END


Gerrit Herlyn
CICS Systems Programmer
TWS Stuttgart (Germany)                         c  TWS 1991

