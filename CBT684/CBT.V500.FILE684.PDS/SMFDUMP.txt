SMFDUMP  TITLE 'SMF DUMP ROUTINE TO DUMP - S M F - DATA SETS '
SMFDUMP  CSECT
*/* LIB: CPAC.SAMPLIB(SMFDUMP)
*/* DOC: THIS PROGRAM USED TO DUMP NON-EMPTY SMF DATA SETS,
*/*      THIS SAMPLE SMFDUMP IS FOR MVS VERSION 5.
***********************************************************************
*                                                                     *
*                                                                     *
*             MODULE NAME = SMFDUMP                                   *
*                                                                     *
*             DESCRIPTIVE NAME =                                      *
*                ROUTINE TO DUMP THE SMF DATASETS                     *
*                                                                     *
*             COPYRIGHT = 5751-CS1                                    *
*                         INTERNATIONAL BUSINESS MACHINES             *
*                         CORPORATION, 1983, 1988                     *
*                                                                     *
*             FUNCTION =                                              *
*                DUMP ALL FULL AND ACTIVE SMF DATA SETS            @D5A
*                                                                     *
*                OPERATION =                                          *
*                   CHECK THAT DUMPOUT DD IS PRESENT.                 *
*                   CHECK THAT DUMPOUT DEVICE TYPE IS DISK OR TAPE    *
*                   IF ALTERNATE SMF DATASETS ARE ELIGIBLE TO      @D5A
*                     BE DUMPED, THEN DUMP THEM                    @D5A
*                   IF CURRENT SMF DATASET IS ELIGIBLE TO BE       @D5A
*                     DUMPED, THEN SWITCH SMF AND DUMP WHAT WAS    @D5A
*                     THE PRIMARY SMF DATASET                      @D5A
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                                                                     *
*                 RESTRICTIONS =                                      *
*                    SMF MUST BE ACTIVE.                           @D5A
*                    SMF DATA SETS MUST BE VSAM DATA SETS.         @D5A
*                    DUMPOUT DEVICE MUST BE DISK OR TAPE.             *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 3  = WORK REGISTERS               *
*                    REGISTERS 4 TO 6  = UNUSED                       *
*                    REGISTER  7       = LINKAGE TO INTERNAL ROUTINES *
*                    REGISTERS 8 TO 9  = UNUSED                       *
*                    REGISTERS 10      = ADDRESSABILITY TO IEEMBRDS   *
*                                       (RECORDING DATA SET BLOCKS)@D5A
*                    REGISTER  11      = ADDRESSABILITY TO SMCA DSECT *
*                    REGISTER  12      = ADDRESSABILITY TO SMFDUMP    *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 1200 BYTES                             *
*                                                                     *
*                ATTRIBUTES = KEY 8, NON-REENTRANT,                   *
*                   PROBLEM PROGRAM STATE,AUTHORIZED                  *
*                                                                     *
*             ENTRY POINTS = SMFDUMP (ONLY ENTRY POINT)               *
*                                                                     *
*                LINKAGE = STANDARD OS LINKAGE CONVENTIONS         @D7C
*                                                                     *
*             INPUT = NONE                                            *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODES =                                       *
*                   00 = NORMAL RETURN                                *
*                   04 = NO SMF DATASETS AVAILABLE TO DUMP            *
*                   08 = IFASMFDP RETURNED NON-ZERO RETURN CODE       *
*                   12 = UNABLE TO SWITCH SMF RECORDING               *
*                   16 = DUMPOUT DD MISSING                           *
*                   20 = NOT AN MVS/SP SYSTEM                      @D1C
*                                                                     *
*             EXIT - ERROR = NONE - PROGRAM WILL RETURN WITH          *
*                CODE IN REGISTER 15                                  *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = IFASMFDP, IKJEFF18                        *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = SMCA, CVT.                          *
*                                                                     *
*                NOTE: IFASMFDP RUNS WITH RMODE=24 AND AMODE=24.   @D7A
*                      SMFDUMP RUNS WITH RMODE=24 BECAUSE IT MUST  @D7A
*                      PASS IFASMFDP A SAVEAREA IN 24-BIT ADDRESS  @D7A
*                      SPACE.                                      @D7A
*                      REQUIREMENT FOR VERSION 5:                  @D7A
*                      SMFDUMP RUNS WITH AMODE=31 TO ADDRESS THE   @D7A
*                      RDS CONTROL BLOCK.                          @D7A
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, DEVTYPE, WTO, MODESET, RETURN, DYNALLOC, *
*                   STIMER, LINK, IEESMCA, IKJEFFDF.                  *
*                                                                     *
*             MESSAGES =                                              *
*                DAIRFAIL SERVICE ROUTINE IS USED TO ISSUE MESSAGES.  *
*                THOSE ISSUED BY THE COMMAND ARE FOUND FOLLOWING THE  *
*                LABEL ERRMSGS.                                       *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
*             ADDITIONAL INFORMATION:                                 *
*                THE SMFDUMP PROGRAM WILL 'SWITCH' BETWEEN SMF        *
*                DATA SETS AND WAIT FOR THE SWITCH TO OCCUR.          *
*                THE WAIT TIME IS SET BY THE EQUATE STATEMENT         *
*                'WAITLIM' AND MAY BE CHANGED BY ADDING 60 FOR        *
*                EACH ADDITIONAL MINUTE OF WAIT TIME.                 *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                                                                     *
*$MOD=(SMFDUMP) COMP(SMF) HDLD(MVS):                                  *
*$CC= REASONCD,RELEASE#,DATECHGD,CINIT: DESCRIPTION                   *
*$D1=  MSPIPOG,        ,        ,       CHANGED IN MVS/SP IPO 3.8 G   *
*$D2=  MSPIPOF,        ,        ,       CHANGED IN MVS/SP IPO 3.8 F   *
*$D3=  MSPIPOH,        ,        ,       ...........................   *
*$D4=  MSPIPOI,        ,        ,       ...........................   *
*$D5=  MSEIPO4,        ,        ,       CHANGED TO SUPPORT MVS/SE2    *
*$D6=CR#I70140,        ,        ,       INSURE INTEGERITY OF SMFDUMPW *
*$D6=  -------------------------------- DATASET.                      *
*$D7=  CR24926,    9402,04/25/94, FJB   SUPPORT 44 CHARACTER DSNAMES  *
*$D7=  -------------------------------- FOR SMF DUMP DATASETS, AND    *
*$D7=  -------------------------------- FOR VERSION 5.1 CHANGES.      *
*$D8=  PR01623,   9402P,09/20/94, WGL   FIX MULTILINE WTO             *
*$D9=  PR02195,   9601P,01/18/96, JMC   FIXED RDS OFFSETS             *
*                                                                     *
***********************************************************************
         EJECT
SMFDUMP  CSECT ,                       CSECT NAME DECLARED
SMFDUMP  AMODE 31                      ADDRESS MODE,TO ADDRESS RDS @D7A
SMFDUMP  RMODE 24                      RESIDENCE MODE              @D7A
*
*  CONSTANT EQUATES
*
CMDSVC   EQU   34                      SVC TO ISSUE COMMAND
ISITSP   EQU   X'80'                   HIGH-ORDER BIT CVTSMCA      @D1C
*                                        TO INDICATE SP SYSTEM     @D1C
DASD     EQU   X'20'                   UCB DEVICE TYPE FOR DASD DEVICES
TAPE     EQU   X'80'                   UCB DEVICE TYPE FOR TAPE DEVICES
WAITLIM  EQU   3600                    60 SECONDS/MINUTE           @D4A
*                                          FOR 60 MINUTES          @D4A
*
K0       EQU   0                       CONSTANT 0
K1       EQU   1                       CONSTANT 1
K2       EQU   2                       CONSTANT 2
K4       EQU   4                       CONSTANT 4
K8       EQU   8                       CONSTANT 8
K12      EQU   12                      CONSTANT 12
K15      EQU   15                      CONSTANT 15                 @D5A
K16      EQU   16                      CONSTANT 16
K20      EQU   20                      CONSTANT 20                 @D5A
*
* REGISTER EQUATES
*
R00      EQU   00
R01      EQU   01
R02      EQU   02
R03      EQU   03
R04      EQU   04
R05      EQU   05
R06      EQU   06
R07      EQU   07
R08      EQU   08
R09      EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SAVE  (14,12),,SMFDUMP_&SYSDATE SAVE REGISTERS
         USING SMFDUMP,R12             SET UP BASE ADDRESSABILITY
         LR    R12,R15                 LOAD BASE REG WITH ENTRY POINT
         LA    R14,SAVE                GET ADDRESS OF REGISTER SAVE
         ST    R13,K4(R14)             SAVE CALLER'S SAVE AREA ADDR
         ST    R14,K8(R13)             SAVE MY SAVE AREA ADDRESS
         LR    R13,R14                 LOAD SAVE AREA ADDRESS
*                                                                  @D3A
* ISSUE SMFDUMP PROGRAM STARTED MESSAGE                            @D3A
*                                                                  @D3A
         WTO   MF=(E,MSG000)           ISSUE STARTED MESSAGE       @D3A
*
* CHECK FOR DUMPOUT DD PRESENT
*
         DEVTYPE DDOUT,DEVAREA         GET DEVICE TYPE OF DUMPOUT DD
         LTR   R15,R15                 IS DUMPOUT DD PRESENT?
         BNZ   NODDOUT                 DD MISSING BR TO ERROR RTN
*
* CHECK DEVICE TYPE OF DUMPOUT DEVICE(TAPE OR DASD)
*
         CLI   DEVAREA+K2,TAPE         IS DUMPOUT A TAPE DEVICE
         BE    OKTODUMP                YES, BR TO CONTINUE PROCESSING
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DEVICE
         BNE   NOCANDMP                NO, INVLAID DEVICE TYPE BR
*                                                                  @D6A
* IF DASD, GET UCB ADDRESS OF DUMPOUT FOR RESERVE                  @D6A
*                                                                  @D6A
         EXTRACT TIOTADDR,FIELDS=TIOT  GET TIOT ADDRESS            @D6A
         SR    R02,R02                 CLEAR WORK REG              @D6A
         L     R03,TIOTADDR            LOAD TIOT POINTER           @D6A
         USING TIOT1,R03                                           @D6A
NEXTDD   ICM   R02,1,TIOELNGH          GET LENGTH OF DD ENTRY      @D6A
         BZ    NODDOUT                 END OF TIOT                 @D6A
         CLC   TIOEDDNM,DDOUT          IS THIS OUR DD STMT         @D6A
         BE    DDFOUND                 YES - BRANCH                @D6A
         LA    R03,0(R02,R03)          POINT TO NEXT DD ENTRY      @D6A
         B     NEXTDD                  AND PROCESS IT              @D6A
DDFOUND  MVC   OUTUCB+1(3),TIOEFSRT    SAVE UCB ADDRESS            @D6A
         DROP  R03                                                 @D6A
*                                                                  @D5A
* TEST IF THIS SYSTEM IS RUNNING MVS/SP                            @D1C
*                                                                  @D5A
OKTODUMP L     R11,CVTPTR              LOAD ADDRESS OF CVT         @D7C
         USING CVTMAP,R11              TELL THE ASSEMBLER          @D7A
         TM    CVTSMCA,ISITSP          CHECK FOR MVS/SP  INSTD     @D7C
         BZ    NOSP                    NO - ERROR                  @D1C
         L     R11,CVTSMCA             GET ADDRESS OF SMCA         @D7C
         DROP  R11                     FINISHED WITH CVT           @D7A
         USING SMCABASE,R11            GET SMCA BASE ADDRESS
*                                                                  @D5A
* DUMP ALL VSAM SMF DATA SETS THAT ARE FULL                        @D5A
*                                                                  @D5A
         ENQ   (SMFQNAME,SMFRNAME,E,,SYSTEM) ENQ ON SMF SMFW-Q     @D5A
DMPINACT MVC   ACTRDS,SMCASVCR         SAVE ACTIVE RDS             @D5A
         ICM   R10,K15,SMCAFRDS        POINT TO FIRST RDS          @D5A
         BZ    SMFERROR                IF SMF NOT ACTIVE, EXIT     @D5A
         USING IEEMBRDS,R10                                        @D5A
GETNSMF  TM    RDSFLG1,RDSDUMP         IS SMF DATASET FULL         @D5A
         BZ    SMFBUMP                 NO - GET NEXT ONE           @D5A
         MVC   SMFDSN,RDSNAME          MOVE IN  SMF  DATASET NAME  @D7C
         BAL   R07,DALOC               CALL DUMP SUBROUTINE
SMFBUMP  L     R10,RDSNEXT             GET NEXT RDS                @D5A
         TM    RDSFLG2,RDSLOST         IS THIS THE DUMMY RDS?      @D5A
         BZ    GETNSMF                 NO-PROCESS NEXT DATA SET    @D5A
*                                                                  @D5A
* ALL INACTIVE SMF DATA SETS HAVE BEEN DUMPED.                     @D5A
* TEST IF A SWITCH OCCURED DURING DUMPING.                         @D5A
*                                                                  @D5A
         C     R10,ACTRDS              WAS ACTIVE RDS THE DUMMY    @D2C
         BE    DODEQ                   YES, THEN DEQ AND EXIT      @D2C
         CLC   SMCASVCR,ACTRDS         IS SAME RDS STILL ACTIVE    @D5A
         BNE   DMPINACT                NO, START ALL OVER AGN      @D5A
         EJECT
*
* ISSUE OPERATOR 'SWITCH SMF' COMMAND AND WAIT FOR COMPLETION
*
SMFSWTCH DS    0H
         L     R10,SMCASVCR            GET ADDR OF ACTIVE RDS      @D5A
         DROP  R11                     FINISHED WITH SMCABASE      @D7A
         MODESET MF=(E,SUPRMOD)        GET IN SUPR STATE FOR SVC 34  #
         SLR   R00,R00                 CLEAR REG 0
         LA    R01,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   CMDSVC                  ISSUE COMMAND VIA SVC 34
         MODESET MF=(E,PROBMOD)        GET BACK IN PROB STATE
         WTO   MF=(E,MSG010)           DISPLAY SWITCHED MESSAGE    @D3A
         LA    R03,WAITLIM             SET LOOP COUNTER TO WAIT TIME
CHKYX    TM    RDSFLG1,RDSDUMP         HAS SWITCH OCCURED ?        @D5A
         BO    DOLAST1                 YES - DON'T WAIT            @D2C
         STIMER WAIT,BINTVL=ONESEC     WAIT FOR ONE SECOND
         BCT   R03,CHKYX               LOOP BACK TO TRY AGAIN
         DEQ   MF=(E,DEQLIST)          DEQ ON SMF SMFWRITER-Q        #
         WTO   MF=(E,MSG002)           UNABLE TO SWITCH ERROR MESSAGE
         LA    R15,K12                 BAD RETURN CAN GO NO FURTHER
         B     EXITR                   RETURN TO CALLER'S CALLER
*
* DUMP ALTERNATE SMF DATASET AFTER SWITCH OCCURRED                 @D5A
*
DOLAST1  MVC   SMFDSN,RDSNAME          MOVE IN  SMF  DATASET NAME  @D7C
         BAL   R07,DALOC               CALL RTN TO DUMP INACTIVE SMF
DODEQ    DEQ   MF=(E,DEQLIST)          DEQ ON SMF SMFWRITER-Q      @D2C
*
* RETURN BACK TO CALLER
*
EXIT     SLR   R15,R15                 SET NORMAL RETURN CODE
EXITR    L     R13,K4(R13)             LOAD CALLERS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)        RETURN TO CALLER
         EJECT
*                                                                  @D5A
NOSP     WTO   MF=(E,MSG009)           ISSUE NO SP  SYSTEM MSG     @D1C
         LA    R15,K20                 LOAD RETURN CODE            @D5A
         B     EXITR                   BR TO EXIT                  @D5A
*
SMFERROR WTO   MF=(E,MSG003)           ISSUE NO DATASET TO DUMP MESSAGE
         LA    R15,K4                  LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RETURN CODE
*
NOCANDMP WTO   MF=(E,MSG008)           ISSUE INVALID DEVICE TYPE MSG
         LA    R15,K16                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RET. CODE
*
NODDOUT  WTO   MF=(E,MSG001)           ISSUE DUMPOUT DD MISSING MSG
         LA    R15,K16                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RET. CODE
*
*  ROUTINE TO ALLOCATE  S M F  DATASET AS DDNAME DUMPIN
*
DALOC    DS    0H                      ALLOC SUBROUTINE
         XC    FREEER(K4),FREEER       CLEAR DYNALLOC ERROR AREAS
         LA    R01,FREE                LOAD DYNALLOC PARM LIST
         DYNALLOC                      FREE DDNAME DUMPIN
         XC    ALOCER(K4),ALOCER       CLEAR DYNALLOC ERROR AREAS
         LA    R01,ALOC                LOAD PARM LIST ADDRESS
         DYNALLOC                      ALLOC  SMF  DATASET DD=DUMPIN
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DYNERR                  IF ZERO THEN ALLOC OK
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DVC       @D6A
         BNE   RESDONE                 NO, DONT RESERVE            @D6A
         RESERVE MF=(E,OUTRSV)         RESERVE DUMPOUT             @D6A
RESDONE  EQU   *                                                   @D6A
         LINK  SF=(E,LINKDUMP)         LINK TO SMF UTILITY
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DUMPERR                 IF ZERO THEN BR TO EXIT ROUTINE
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DVC       @D6A
         BNE   DEQDONE                 NO, DONT DEQUEUE            @D6A
         DEQ   MF=(E,OUTDEQ)           RELEASE DUMPOUT             @D6A
DEQDONE  EQU   *                                                   @D6A
         MVC   MSG2DSN,SMFDSN          SMF DATASET NAME TO MESSAGE @D7C
         WTO   TEXT=((MSG1,),(MSG2,)),MF=(E,MSG007) ISSUE MSG      @D7C
CHKDMP   EQU   *
         TM    RDSFLG1,RDSDUMP         HAS DUMP BEEN POSTED?       @D4A
         BZR   R07                     YES - DON'T WAIT ANYMORE    @D4A
         DROP  R10                     FINISHED WITH IEEMBRDS      @D7A
         STIMER WAIT,BINTVL=ONESEC     WAIT FOR ONE SECOND         @D4A
         B     CHKDMP                  LOOP BACK TO CHK AGAIN      @D4A
*
DUMPERR  WTO   MF=(E,MSG006)           ISSUE DUMP FAILED MESSAGE
         LA    R15,K8                  SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
*
DYNERR   ST    R15,DRFLR15             SAVE RETCODE FOR DAIRFAIL
         LA    R01,DRFLPARM            LOAD DAIRFAIL PARM LIST ADDRESS
         XC    DRFLPARM(DFLEN),DRFLPARM CLEAR AREA FIRST
         USING DFDSECTD,R01            SET ADDRESSIBLITY TO PARM LIST
         LA    R15,ALOCRB              GET ADDRESS OF ALLOCATION RB
         ST    R15,DFS99RBP            SAVE IN DAIRFAIL PARM LIST
         LA    R15,DRFLR15             GET ADDRESS OF SAVED REG 15
         ST    R15,DFRCP               SAVE IN DAIRFAIL PARM LIST
         LA    R15,FULL0               GET ADDRESS OF OF DUMMY F02
         ST    R15,DFJEFF02            SAVE IN DAIRFAIL PARM LIST
         LA    R15,DRFLID              GET ADDRESS OF CALLER'S FLAGS
         ST    R15,DFIDP               SAVE IN DAIRFAIL PARM LIST
         DROP  R01
         LINK  SF=(E,LINKDRFL)         LINK TO DAIRFAIL SERVICE ROUTINE
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DRFLERR                 IF NOT ZERO THEN GOTO DRFL ERR
         WTO   MF=(E,MSG005)           ELSE ISSUE DYNALLOC FAILED MSG
         LA    R15,K12                 SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
*
DRFLERR  WTO   MF=(E,MSG004)           ELSE ISSUE DAIRFAIL ERROR MSG
         LA    R15,K16                 SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
         EJECT
*
*  DATA AREA
*
         DS    0D                                                    #
SAVE     DC    18F'0'                  REGISTER SAVE AREA
SMFQNAME DC    CL8'IPOSMF01'           QNAME FOR IFASMFDP      SIPO50#
SMFRNAME DC    CL7'DATASET'            RNAME FOR IFASMFDP            #
DEQLIST  DEQ   (SMFQNAME,SMFRNAME,,SYSTEM),MF=L     SMF SMFWRITER-Q  #
CMDISMF  DC    Y(12),Y(00),CL08'I SMF' COMMAND (I SMF) SVC 34 INPUT
ACTRDS   DC    F'0'                    ACTIVE RECORDING DS         @D5A
TIOTADDR DC    F'0'                    ADDRESS OF TIOT             @D6A
OUTRSV   RESERVE (SMFQNAME,OUTRNAME,E,,SYSTEMS),UCB=OUTUCB,MF=L    @D6A
OUTDEQ   DEQ   (SMFQNAME,OUTRNAME,,SYSTEMS),MF=L RLSE DUMPOUT      @D6A
OUTRNAME DC    CL7'DUMPOUT'            RNAME FOR RESERVE           @D6A
OUTUCB   DC    F'0'                    UCB ADDRESS FOR RSVE        @D6A
*
*  CONTROL FOR SVC 99 TO FREE DDNAME DUMPIN
*
FREE     DC    A(FREERB+X'80000000')   RB POINTER                  @D7C
FREERB   DS    0F                      REQUEST BLOCK FO DYNALLOC
         DC    AL1(20),AL1(02),AL2(0)  LENGTH,UNALLOC_VERB,FLAGS
FREEER   DC    AL2(0)                  ERROR CODE
FREEIN   DC    AL2(0)                  INFO CODE
         DC    A(FREETP)               TXT UNIT LIST POINTER
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
FREETP   CALL  ,(FREEDDN),VL,MF=L      TEXT UNIT POINTERS
FREEDDN  DC    XL2'1',XL2'1',XL2'8',CL8'DUMPIN'  FREE DDNAME=DUMPIN
*
*  CONTROL FOR SVC 99 TO ALLOCATE DDNAME DUMPIN TO  SMF DATASET NAME
*
ALOC     DC    A(ALOCRB+X'80000000')   RB POINTER                  @D7C
ALOCRB   DS    0F
         DC    AL1(20)                 LENGTH
         DC    AL1(01)                 ALLOC_VERB
         DC    AL2(0)                  FLAGS
ALOCER   DC    AL2(0)                  ERROR CODE
ALOCIN   DC    AL2(0)                  INFO CODE
         DC    A(ALOCTP)               TEXT UNIT LIST POINTER
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
ALOCTP   CALL  ,(ALOCDDN,ALOCDSN,ALOCDSP,ALOCVBS),VL,MF=L TU POINTERS
ALOCDDN  DC    XL2'1'                  TEXT UNIT FOR DDNAME        @D7C
         DC    X'0001'                 NUMBER                      @D7C
         DC    AL2(8)                  DDNAME LENGTH               @D7C
         DC    CL8'DUMPIN'             DDNAME=DUMPIN               @D7C
ALOCDSN  DC    XL2'2'                  DATASET NAME KEY            @D7C
         DC    X'0001'                 NUMBER                      @D7C
         DC    AL2(L'SMFDSN)           DATASET NAME LENGTH         @D7C
SMFDSN   DC    CL44' '                 SMF DATASET NAME            @D7C
ALOCDSP  DC    XL2'4'
         DC    XL2'1'
         DC    XL2'1'
         DC    XL1'08'                 DISP=SHR
ALOCVBS  DC    XL2'49'
         DC    XL2'1'
         DC    XL2'1'
         DC    XL1'58'                 RECFM=VBS
*
* PROGRAM CONSTANTS
*
ONESEC   DC    F'100'                  100 HUNDREDTHS SEC. FOR STIMER
DDOUT    DC    CL8'DUMPOUT'            OUTPUT DDNAME FOR TIOT SCAN
DEVAREA  DC    2F'0'                   OUTPUT FOR DEVTYPE MACRO
         IKJEFFDF DFDSECT=YES          DAIRFAIL PARM LIST MAP
SMFDUMP  CSECT
FULL0    DC    F'0'                    ADDRESS OF NULL IKJEFF02 ROUTINE
DRFLR15  DC    A(0)
DRFLPARM DC    XL(DFLEN)'00'
DRFLID   DC    AL1(DFWTP)
         DC    AL1(DFSVC99)
SAVEYORX DC    C' '                    SAVE AREA FOR ALT. MAN_ DATASET
*
MSG1     DC    AL2(L'MSG1TXT)                                      @D7A
MSG1TXT  DC    C'SMFDUMP COMPLETED FOR DATASET: '                  @D7A
MSG2     DC    AL2(MSG2LEN)                                        @D7A
MSG2TXT  DC    C'DSNAME='                                          @D7A
MSG2DSN  DC    CL44' '                                             @D7A
MSG2LEN  EQU   *-MSG2TXT                                           @D7A
*
*
* MODESETS ISSUED
*
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L GET IN SUPR STATE FOR SVC 34
PROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L GET BACK IN PROB STATE
*
* LINKS ISSUED
*
LINKDRFL LINK  EP=IKJEFF18,SF=L        LINK TO DAIRFAIL SERVICE ROUTINE
LINKDUMP LINK  EP=IFASMFDP,SF=L        LINK TO IFASMFDP SMF DUMP RTN
*
* MESSAGES ISSUED
*
ERRMSGS  DS    0F
MSG000   WTO   'SMFDUMP VERSION 1 RELEASE 9 - STARTED',                X
               ROUTCDE=(11),MF=L
MSG001   WTO   'SMFDUMP DUMPOUT DD MISSING',                           X
               ROUTCDE=(11),MF=L
MSG002   WTO   'SMFDUMP SWITCH OF SMF FAILED TO OCCUR',                X
               ROUTCDE=(11),MF=L
MSG003   WTO   'SMFDUMP NO SMF DATASETS ELIGIBLE FOR DUMP',            X
               ROUTCDE=(11),MF=L
MSG004   WTO   'SMFDUMP DYNAMIC ALLOCATION FAILED, AND DAIRFAIL',      X
               ROUTCDE=(11),MF=L
MSG005   WTO   'SMFDUMP DYNAMIC ALLOCATION FAILED',                    X
               ROUTCDE=(11),MF=L
MSG006   WTO   'SMFDUMP IFASMFDP PROGRAM FAILED TO DUMP SMF',          X
               ROUTCDE=(11),MF=L
MSG007   WTO   TEXT=((,D),(,DE)),ROUTCDE=(1,2,11),MF=L             @D8C
MSG008   WTO   'SMFDUMP DUMPOUT DD INVALID DEVICE TYPE ',              X
               ROUTCDE=(11),MF=L
MSG009   WTO   'SMFDUMP NO MVS/SP INSTALLED ',                     @D1CX
               ROUTCDE=(11),MF=L                                   @D5A
MSG010   WTO   'SMFDUMP SWITCH SMF COMMAND ISSUED',                @D3AX
               ROUTCDE=(11),MF=L                                   @D3A
*
* PATCH AREA
*
         DS    0D
MODLEN   EQU   *-SMFDUMP           EQUATE FOR MODULE LENGTH(- PATCH)
PTCHLEN  EQU   ((MODLEN+7)/8+7)/8*8 PATCH AREA LENGTH EQUATE
PTCHLNTH DC    Y(PTCHLEN)          LENGTH OF PATCH AREA
PTCHBASE DC    S(PATCH)            BASE DISPLACED ADDRESS OF PATCH
PATCH    DC    XL(PTCHLEN)'00'     PATCH AREA
*
         EJECT
         IEESMCA ,                 SMCA DSECT IN SYS1.AMODGEN
         EJECT ,                                                   @D6A
         IEFTIOT1 ,                TIOT MAPPING DSECT              @D6A
         EJECT ,                                                   @D7A
IEEMBRDS DSECT                                                     @D5A
RDSID    DS    CL4                 CONTROL BLOCK ID                @D5A
RDSNEXT  DS    F                   FORWARD CHAIN POINTER           @D5A
RDSPREV  DS    F                   BACKWARD CHAIN POINTER          @D5A
*                                                                  @D5A
RDSFLG1  DS    X                                                   @D5A
RDSFREE  EQU   X'10'               1 - NEED TO FREE DATASET        @D5A
RDSDUMP  EQU   X'08'               1 - OPER HAS BEEN TOLD TO       @D5A
*                                      DUMP DS                     @D5A
RDSREADY EQU   X'04'               1 - DS IS OPEN AND READY        @D5A
RDSCLOSE EQU   X'02'               1 - DS NEEDS TO BE CLOSED       @D5A
RDSNDOP  EQU   X'01'               1 - DS NEEDS TO BE OPENED       @D5A
*                                                                  @D5A
RDSFLG2  DS    X                                                   @D5A
RDSLOST  EQU   X'80'               DUMMY RDS FOR LOST DATA         @D5A
RDSPHYER EQU   X'40'               1 - PHYSICAL I/O ERROR          @D5A
RDSLOGER EQU   X'20'               1 - LOGICAL I/O ERROR           @D5A
*                                                                  @D5A
RDSFLG3  DS    X                   RESERVED                        @D5A
RDSNLEN  DS    X                   RESERVED                        @D5A
RDSNAME  DS    CL44                DATASET NAME                    @D7C
RDSVOLID DS    CL6                 VOLUME SERIAL                   @D5A
         DS    CL2                                                 @D9A
RDSDDN   DS    CL8                 DDNAME RETND BY DYNALLOC        @D5A
RDSCAPTY DS    F                   CAPACITY IN # OF BLOCKS         @D5A
RDSNXTBL DS    F                   NUMBER OF NEXT AVAIL BLOCK      @D5A
RDSBQE   DS    F                   ADDR OF BQE BEING WRITTEN       @D5A
RDSAVSPC DS    F                   AVAIL SPACE FROM SHOWCB         @D5A
RDSENRBA DS    F                   ENDRBA FROM SHOWCB              @D5A
RDSCINV  DS    F                   CONTROL INTERVAL SIZE           @D5A
RDSDOMID DS    2F                  MSG # OF DUMP MSG               @D5A
RDSRPL   DS    CL76                VSAM RPL                        @D5A
RDSACB   DS    CL76                VSAM ACB                        @D5A
*
         PRINT OFF                                                 @D7A
         CVT   DSECT=YES               MAP THE CVT AREA            @D7A
         AGO   .FINI
.FINI    ANOP
         PRINT ON
         END   SMFDUMP
