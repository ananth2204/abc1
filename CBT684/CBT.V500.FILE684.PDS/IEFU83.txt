IEFU83   TITLE 'SMF RECORD (SVC 83 ENTRY) CONFIRMATION USER EXIT'
***********************************************************************
*                                                                     *
* MODULE: IEFU83 - SMF RECORD WRITE CONFIRMATION EXIT (SVC ENTRY)     *
*                                                                     *
* FUNCTION: TO ALLOW OR SUPPRESS THE WRITING OF SMF RECORDS           *
*           ACCORDING TO USER SPECIFICATION.  IN ADDITION, TO         *
*           PERFORM USER SPECIFIC PROCESSING.                         *
*                                                                     *
* MACROS: FROM SYS1.MACLIB AND SYS1.MODGEN.                           *
*                                                                     *
* ENTRY:  THIS MODULE RECEIVES CONTROL FROM SVC83/IGC0008C BEFORE     *
*         IT WRITES EACH SMF RECORD TO THE SMF DATASET.  NOTE THAT    *
*         THIS ROUTINE DOES NOT RECEIVE CONTROL FOR RECORDS FOR       *
*         WHICH WRITING HAS BEEN SUPPRESSED BY THE SYSTEM SMF OPTIONS *
*         OR RECORDS WHICH ARE WRITTEN VIA THE SMF BRANCH ENTRY.      *
*                                                                     *
*         REGISTERS AT ENTRY:                                         *
*         R1  -  ADDRESS OF SMF RECORD RDW                            *
*         R13 -  ADDRESS OF 72 BYTE SAVEAREA                          *
*         R14 -  RETURN ADDRESS                                       *
*         R15 -  ADDRESS OF IEFU83 (ENTRY POINT)                      *
*                                                                     *
* EXIT:   THIS MODULE MUST RESTORE ALL REGISTERS EXCEPT R15 WHICH     *
*         CONTAINS A RETURN CODE.  THE SMF RECORD MAY BE MODIFIED     *
*         BY THIS EXIT.                                               *
*                                                                     *
*         RETURN CODES:                                               *
*         0   -  WRITE THE SMF RECORD TO THE SMF DATASET.             *
*         4   -  SUPPRESS THE WRITING OF THE SMF RECORD.              *
*                                                                     *
* ATTRIBUTES: REUS,RENT,REFR, KEY 0, ENABLED, AMODE=31, RMODE=ANY.    *
*                                                                     *
* NOTE: GETMAINS DONE FOR SUBPOOL 231 (CSA, TCB'S KEY, FETCH          *
*       PROTECTED, PAGEABLE, NONSWAPABLE) BECAUSE THE REGION MAY BE   *
*       FULL WITH THE USER'S OWN DATA.                                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* WRITTEN BY:  GREG PRICE    FERNTREE COMPUTER SERVICES (MELB. AUST.) *
*              15 OCT 92     MVS/SP4.2.0                              *
*                                                                     *
*              20 OCT 92     DISPLAY 'VTOC FOR VOLSER' INSTEAD OF     *
*                            44X'04' WHEN VTOC IS ACCESSED (14/15).   *
*                                                                     *
*              22 OCT 92     REARRANGE 14/15/64 MESSAGES SO THERE     *
*                            IS ALWAYS ROOM TO SHOW THE BLOCK SIZE.   *
*                                                                     *
*              17 DEC 92     ISSUE MESSAGE FOR TAPE E-O-V AND SHOW    *
*                            VOLUME SERIAL NUMBER FOR TAPE RECORDS.   *
*                            SHOW '<1KB' FOR 1 TO 1023 BYTES RATHER   *
*                            THAN '0KB' WHICH COULD BE MISLEADING.    *
*                                                                     *
*              29 JAN 93     SUPPRESS MESSAGE IF DDNAME IS 'SMPPTS'   *
*                            AND AN INPUT BPAM FILE IS ACCESSED TO    *
*                            VASTLY REDUCE SMP APPLY AND ACCEPT       *
*                            PROCESSING MESSAGE VOLUMES.              *
*                                                                     *
*              09 FEB 93     NEW TAPE PROCESSING: MAKE AN "M" MESSAGE *
*                            FOR EACH TAPE VOLUME (E-O-V AND CLOSE)   *
*                            SHOWING BLOCK COUNT AND BYTE COUNT WHERE *
*                            PRACTICABLE.                             *
*                            ALSO, MAKE A "C" MESSAGE FOR CLOSE WITH  *
*                            THE TOTAL EXCP COUNT FOR THE WHOLE FILE. *
*                                                                     *
*              19 FEB 93     SUPPRESS PROBABLY MISLEADING BYTE        *
*                            COUNT FOR VARIABLE-LENGTH UNBLOCKED      *
*                            RECORDS, AS IS ALSO DONE FOR RECFM=U.    *
*                                                                     *
*              31 MAY 93     SHOW BYTE TRANSFERRED COUNT ESTIMATE     *
*                            IF RECFM=VB BY CORRECTING JFCRFO IN      *
*                            PREVIOUS CHANGE TO JFCRFB.               *
*                                                                     *
*              03 MAY 94     INCLUDE KEY IN BYTE COUNT FOR DISK       *
*                            FILES.  FOR VARIABLE LENGTH RECORDS      *
*                            ONLY ESTIMATE BYTE COUNT WHEN BLOCKED    *
*                            AND ONLY FOR OUTPUT (TYPE 15) BUT NOT    *
*                            IF QSAM LOCATE MODE IS USED.  BYTE       *
*                            COUNT COULD BE WRONG ON INPUT BECAUSE    *
*                            THE FILE MAY HAVE BEEN CREATED WITH      *
*                            QSAM LOCATE MODE.  QSAM LOCATE MODE      *
*                            ON OUTPUT (DSORG=PS,MACRF=PL) WILL       *
*                            ALWAYS PRODUCE SHORT BLOCKS (UNLESS      *
*                            ALL RECORDS HAVE MAXIMUM LENGTH, IN      *
*                            WHICH CASE THERE IS NO BLOCKING).        *
*                            EXPECTED "SHORTNESS" IS BLOCKSIZE        *
*                            MINUS LOGICAL-RECORD-LENGTH BYTES.       *
*                            REPLACE BYTE COUNT ESTIMATE FOR QSAM     *
*                            PUT LOCATE FOR VARIABLE LENGTH RECORDS   *
*                            WITH 'BLKNG=1' WHEN BLKSIZE = LRECL+4    *
*                            AND WITH 'BLKNG<2' WHEN BLKSIZE IS NOT   *
*                            GREATER THAN TWICE THE LRECL.            *
*                                                                     *
*              14 MAY 96     USE 4K AS BLOCK SIZE WHEN CALCULATING    *
*                            PDSE BYTE TRANSFER COUNT.                *
*                            (REASSEMBLE REQUIRED FOR SP5.2.2/DFSMS.) *
*                                                                     *
*              04 JUN 96     ALWAYS ISSUE U83064I UNLESS TSO USER.    *
*                            REMOVE ROUTCDE 11 FROM U83021I.          *
*                            USE U83E14I AND U83E15I FOR EXTENDED     *
*                            FORMAT (AS WELL AS PDSE) FILES.          *
*                                                                     *
*              28 JAN 98     EXTEND OPNTYPES TABLE TO FULL SIZE.      *
*                            ADD 'OUTINX' AND 'EXTEND' TO OPNTYPES.   *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*             PERFORMED PROCESSING:                                   *
*                                                                     *
*  TYPE 14  - ISSUE A WTO MESSAGE CONTAINING VARIOUS FILE DETAILS     *
*             INCLUDING THE EXCP COUNT FOR BATCH JOBS ONLY.           *
*                                                                     *
*  TYPE 15  - ISSUE A WTO MESSAGE CONTAINING VARIOUS FILE DETAILS     *
*             INCLUDING THE EXCP COUNT FOR BATCH JOBS ONLY.           *
*                                                                     *
*  TYPE 21  - ISSUE A WTO MESSAGE SIMILAR TO THE MVT IEC209I MESSAGE. *
*                                                                     *
*  TYPE 64  - ISSUE A WTO MESSAGE CONTAINING VARIOUS FILE DETAILS     *
*             INCLUDING THE EXCP COUNT UNLESS FOR TSO USER.           *
*                                                                     *
*         MPF CAN BE USED TO ADVANTAGE TO CONTROL THE DISTRIBUTION    *
*         OF MESSAGES ISSUED BY THIS EXIT.                            *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*     IT IS EXPECTED THAT MOST INSTALLATIONS WOULD NOT WANT THE       *
*  MESSAGES GENERATED BY THIS EXIT TO BE DISPLAYED ON SYSTEM OPERATOR *
*  CONSOLES.  MPF IS THE BEST PLACE TO EFFECT THIS.  'MCS=HRDCPY'     *
*  COULD BE SPECIFIED ON THE WTO MACROS, BUT THIS INTRODUCES SOME     *
*  COMPLICATIONS WHEN MESSAGE HANDLING IS FURTHER CUSTOMIZED BY       *
*  INSTALLATION-SUPPLIED MPF EXITS SUCH AS 'MSGNOLOG'.                *
*                                                                     *
*     THE IDEA IS THAT 'U83021I' APPEARS IN THE JOB LOG WITH THE      *
*  TAPE MOUNT AND DEMOUNT MESSAGES.  HENCE, ROUTCDE=(3,5) FOR THIS    *
*  MESSAGE.  THE MPF EXIT 'MSGJOBLG' CAN BE USED TO PREVENT THIS      *
*  MESSAGE APPEARING ON THE SYSTEM LOG.                               *
*                                                                     *
*     IT IS INTENDED THAT THE FILE ACTIVITY MESSAGES APPEAR IN THE    *
*  JOB MESSAGES, BUT NOT THE JOB LOG.  ROUTCDE=(11) IS USED FOR THE   *
*  JOB MESSAGES DATA SET.  THE MPF EXIT 'MSGNOJLG' CAN BE USED TO     *
*  PREVENT THE MESSAGES APPEARING IN THE JOB LOG DATA SET.            *
*                                                                     *
*     IN SUMMARY, MESSAGES ARE ISSUED HERE WITH THE WIDEST DESIRABLE  *
*  DISTRIBUTION, TO BE LIMITED ACCORDING TO INSTALLATION REQUIREMENTS *
*  BY MPF (MESSAGE PROCESSING FACILITY).  THUS, MESSAGE DISTRIBUTION  *
*  CAN BE CUSTOMIZED DYNAMICALLY WITH THE 'SET MPF' MVS COMMAND,      *
*  WITHOUT THE NEED TO RE-INSTALL THIS EXIT OR EVEN RE-IPL.           *
*                                                                     *
*     IF A REQUIRED MESSAGE IS BASED UPON AN SMF RECORD TYPE NOT      *
*  USUALLY COLLECTED BY AN INSTALLATION, THE SMF OPTIONS CAN BE       *
*  ALTERED TO REQUEST THAT THE SMF RECORD TYPE IS TO BE COLLECTED,    *
*  AND THIS EXIT CAN BE CHANGED TO DELETE THE SMF RECORD AFTER THE    *
*  APPROPRIATE MESSAGE HAS BEEN ISSSUED.  THE SOURCE CODE ALTERATION  *
*  FOR THIS IS SIMPLY TO CHANGE THE RELEVANT 'B     WRITEREC'         *
*  INSTRUCTION TO 'B     SUPRSREC'.                                   *
*                                                                     *
***********************************************************************
         EJECT
IEFU83N  CSECT
IEFU83N  AMODE 31
IEFU83N  RMODE ANY
***********************************************************************
*                                                                     *
*  REGISTER USAGE                                                     *
*                                                                     *
R0       EQU   0                                                      *
R1       EQU   1                                                      *
R2       EQU   2                    SMF RECORD BASE                   *
R3       EQU   3                    WORK (MESSAGE BUFFER POINTER)     *
R4       EQU   4                    WORK                              *
R5       EQU   5                    WORK                              *
R6       EQU   6                                                      *
R7       EQU   7                                                      *
R8       EQU   8                                                      *
R9       EQU   9                    WORK AREA BASE                    *
R10      EQU   10                                                     *
R11      EQU   11                                                     *
R12      EQU   12                   PROGRAM BASE                      *
R13      EQU   13                   CALLER'S SAVE AREA BASE           *
R14      EQU   14                   RETURN ADDRESS                    *
R15      EQU   15                   ENTRY POINT, WORK, RETURN CODE    *
*                                                                     *
***********************************************************************
         TITLE 'MAINLINE - GLOBAL PROCESSING AND RECORD TYPE CHECK'
         J     U83$
         DC    AL1(15),CL15'IEFU83 &SYSDATE'
U83$     DS    0H
         STM   R14,R12,12(R13)      SAVE REGISTERS
         LR    R12,R15              R12 - PROGRAM BASE REGISTER
         USING IEFU83N,R12
         ICM   R2,15,0(R1)          R2  - SMF RECORD BASE REGISTER
         JZ    WRITEREC             ZERO ADDRESS - CAN'T FIND RECORD
         USING SMFRECD,R2
         SPACE
         CLI   SMF14RTY,14          TYPE 14 RECORD?
         JE    REC1415$             YES
         CLI   SMF14RTY,15          TYPE 15 RECORD?
         JE    REC1415$             YES
         CLI   SMF21RTY,21          TYPE 21 RECORD?
         JE    REC21$               YES
         CLI   SMF64RTY,64          TYPE 64 RECORD?
         JE    REC64$               YES
         CLI   5(R2),118            TYPE TCPIP RECORD ??
         JE    REC118$              YES
         SPACE
WRITEREC DS    0H
         LM    R14,R12,12(R13)      EXIT AND WRITE RECORD
         SR    R15,R15                       RC=0
         BR    R14
         SPACE
SUPRSREC DS    0H
         LM    R14,R12,12(R13)      EXIT AND SUPPRESS RECORD
         LA    R15,4                         RC=4
         BR    R14
         SPACE 2
         USING PSA,0
         TITLE 'SMF RECORD 14 AND 15 - NON-VSAM DATA SET CLOSE/E-O-V'
***********************************************************************
*                                                                     *
* RECORD TYPE 14 AND 15 PROCESSING: FORMAT AND WRITE A U83@##I        *
*  MESSAGE WHERE ## IS '14' OR '15', AS APPROPRIATE, AND @ IS (IN     *
*  ORDER OF PRECEDENCE) 'M' FOR EACH MAGNETIC TAPE VOLUME E-O-V AND   *
*  CLOSE, 'C' FOR CLOSE ON MAGNETIC TAPE DATA SETS, 'I' FOR ISAM      *
*  DATA SETS, 'D' FOR BDAM DATA SETS, 'V' FOR VIO DATA SETS, 'T' FOR  *
*  OTHER TEMPORARY DATA SETS, 'E' FOR PDSE DATA SETS, AND OTHERWISE   *
*  'P' FOR OTHER (DISK) PERMANENT DATA SETS.                          *
*                                                                     *
* U83@##I ???PUT ??AM FILE DDDDDDDD CLOSED 123456789 EXCPS FOR        *
*         12345678901234567890123456789012345678901234 BLKSZ=12345    *
*         12345KB                                                     *
***********************************************************************
         SPACE
REC1415$ DS    0H
         L     R4,PSAAOLD           POINT TO CURRENT ASCB
         USING ASCB,R4
         L     R3,ASCBASXB        * GET ASCB EXTENSION ADDR
         USING ASXB,3              * ESTABLISH ADDRESSABILITY
         L     R3,ASXBSENV        * GET ACEE ADDR
         LTR   R3,R3               ACEE PRESENT ??
         JZ    NOACEE              NOPE ---
         USING ACEE,R3              * ESTABLISH ADDRESSABILITY
         MVC   SMF14UID,ACEEUSRI * COPY USER ID
         DROP  R3                   * FREE WORK REGISTER
NOACEE   DS    0H
         ICM   R1,B'1111',ASCBJBNI  BATCH JOB?
         JZ    WRITEREC             NO, DO NOT DISPLAY ANY MESSAGE
         DROP  R4                   ASCB
         TM    SMF14RIN,SMF14EOV+SMF14DAD
         JO    WRITEREC             NO MESSAGE FOR DASD E-O-V RECORDS
         GETMAIN RC,LV=WK14LEN,SP=231,LOC=(ANY)
         LTR   R15,R15              TEST FOR SUCCESSFUL GETMAIN
         JNZ   WRITEREC             FAILURE - JUST WRITE SMF RECORD
         LR    R9,R1                ADDRESS GETMAINED AREA
         USING WK83AREA,R9
         MVC   WTOU83D(WTO1415L),WTO1415S INITIALIZE WTO PARAMETER LIST
         CLI   SMF14RTY,14          TYPE 14 SMF RECORD?
         JE    T1415OK              YES, CORRECT NUMBER IN MESSAGE
         MVI   WTOMSGID+5,C'5'      NO, MUST BE A TYPE 15 SMF RECORD
T1415OK  DS    0H
         TM    SMF14RIN,SMF14DAD    MAGNETIC TAPE VOLUME (CLOSE/E-O-V)?
         JZ    DSOR1415             YES, MESSAGE ID AND TEXT IS CORRECT
CLOS1415 DS    0H
         MVI   WTOMSGID+3,C'C'      TRY FOR CLOSE ON MAGNETIC TAPE
         TM    SMF14RIN,SMF14DAD    MAGNETIC TAPE DATA SET?
         JZ    ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'I'      NO, TRY FOR ISAM
         TM    SMF14RIN,SMF14IS+SMF14JIS  ISAM?
         JNZ   ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'D'      NO, TRY FOR BDAM
         TM    SMF14RIN,SMF14DDA    BDAM?
         JNZ   ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'V'      NO, TRY FOR VIO
         TM    SMF14RIN,SMF14VIO    VIO?
         JNZ   ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'T'      NO, TRY FOR NON-VIO TEMPORARY
         TM    SMF14RIN,SMF14TDS    TEMPORARY?
         JNZ   ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'E'      NO, TRY FOR PDSE OR STRIPED
         TM    SMF14RIN+1,SMF14IPD+SMF14STR  PDSE OR EXTENDED FORMAT?
         JNZ   ID1415OK             YES, MESSAGE ID IS CORRECT
         MVI   WTOMSGID+3,C'P'      NO, SIGNAL PERMANENT DISK FILE
ID1415OK DS    0H
         MVC   WTOAMDES,=C' EXCPS FOR '   LOAD CORRECT DESCRIPTION
DSOR1415 DS    0H
         TM    SMFDCBMF,X'80'       EXCP PROCESSING USED?
         JNZ   AM1415OK             YES, MESSAGE IS CORRECT
         TM    SMFDCBOR,JFCORGIS+JFCORGPS+JFCORGDA+JFCORGPO
*                                   KNOWN DATA SET ORGANIZATION?
         JZ    AM1415OK             NO, JUST SAY EXCP
         MVC   WTOAMNAM,=C'ISAM'    YES
         TM    SMFDCBOR,JFCORGIS    DCBDSORG=IS?
         JO    AM1415OK             YES
         MVC   WTOAMNAM,=C'BDAM'    NO
         TM    SMFDCBOR,JFCORGDA    DCBDSORG=DA?
         JO    AM1415OK             YES
         MVC   WTOAMNAM,=C'BPAM'    NO
         TM    SMFDCBOR,JFCORGPO    DCBDSORG=PO?
         JO    PTSCHECK             YES, GO CHECK FOR SMPPTS INPUT
         MVC   WTOAMNAM,=C'BSAM'    NO, DCBDSORG=PS
         LA    R1,SMFDCBMF          POINT TO DCBMACRF
         LA    R0,2                 2 BYTES TO TEST (INPUT AND OUTPUT)
MACR14LP DS    0H
         TM    0(R1),X'60'          TEST BASIC AND QUEUED BITS
         JM    PS14TEST             DIFFERENT SO SEE WHICH TYPE
         LA    R1,1(,R1)            POINT TO NEXT BYTE
         BRCT  R0,MACR14LP
         J     AM1415OK             SHOULD NOT HAPPEN BUT LEAVE AS BSAM
PTSCHECK DS    0H
         TM    SMFDEBOP,X'0F'       BPAM FILE OPENED FOR INPUT?
         JNZ   AM1415OK             NO, PRODUCE THE MESSAGE
         CLC   =CL8'SMPPTS  ',SMFTIOE5  TEST FOR SMP PTS FILE TO
         JE    MS1415FM                 REDUCE APPLY/ACCEPT MSG VOLUMES
         J     AM1415OK             OTHERWISE, PRODUCE THE MESSAGE
PS14TEST DS    0H
         TM    0(R1),X'40'          IS THE QUEUED BIT ON?
         JZ    AM1415OK             NO, SO THE BASIC BIT IS ON
         MVC   WTOAMNAM,=C'QSAM'    YES
AM1415OK DS    0H
         MVC   WTOAMDDN,SMFTIOE5    SHOW THE DDNAME (LOGICAL FILE NAME)
         IC    R1,SMFDEBOP          NO, GET DEBOPATB I/O METHOD FLAGS
         SLL   R1,28                SHIFT OUT DISPOSITION FLAGS
         SRL   R1,28-3              MULTIPLY BY EIGHT FOR INDEX
         LA    R1,OPNTYPES(R1)      POINT TO OPEN TYPE LITERAL
         MVC   WTOAMOPN,0(R1)       SHOW THE OPEN TYPE
OPND1415 DS    0H
         TM    SMF14RIN,SMF14DAD    DASD DATA SET?
         JZ    LD1415DS             NO, SHOW DATA SET NAME
         CLI   JFCBDSNM,X'04'       YES, ACCESSING THE VTOC?
         JNE   LD1415DS             NO, SHOW DATA SET NAME
         MVC   WTOAMDSN(7),=C'VTOC OF'  YES, DO NOT SHOW X'04' BYTES
         MVC   WTOAMDSN+8(6),JFCBVOLS        BUT 'VTOC OF VOLSER'
         J     DS1415OK             DATA SET NAME FIELD NOW LOADED
LD1415DS DS    0H
         MVC   WTOAMDSN,JFCBDSNM    SHOW THE DSN (PHYSICAL FILE NAME)
         CLI   WTOMSGID+3,C'M'      MAGNETIC TAPE VOLUME MESSAGE?
         JNE   DS1415OK             NO, GO LOOP THROUGH UCB SECTIONS
         MVI   WTOAMSLA,C'/'        YES, SO INDICATE ON THIS TAPE ONLY
         MVC   WTOAMVOL,SMFSRTEV    SHOW TAPE VOLUME WITH THIS EXCP CT
         ICM   R5,15,SMFDCBBL       LOAD VOLUME EXCP COUNT
         J     UN1415EX             DISPLAY THIS AS THE EXCP COUNT
DS1415OK DS    0H
         SLR   R5,R5                CLEAR EXCP COUNT ACCUMULATOR
         SLR   R0,R0                CLEAR FOR INSERT
         ICM   R0,1,SMF14NUC        GET THE NUMBER OF UCB SECTIONS
         JZ    UN1415EX             HANDLE BAD DATA
         SLR   R1,R1                CLEAR FOR INSERT
         ICM   R1,1,SMF14SUC        GET THE UCB SECTION SIZE
         JZ    UN1415EX             HANDLE BAD DATA
         LA    R15,SMF14UCB         POINT TO THE FIRST UCB SECTION
         USING SMF14UCB,R15         NO
UN1415LP DS    0H
         ICM   R4,15,SMFEXCP        GET THE EXCP COUNT FOR THIS UNIT
         ALR   R5,R4                ADD TO THE ACCUMULATOR
         ALR   R15,R1               POINT TO THE NEXT UCB SECTION
         BRCT  R0,UN1415LP          PROCESS NEXT UCB SECTION IF ANY
         DROP  R15                  SMF14UCB
UN1415EX DS    0H
         CVD   R5,WORK              GET DECIMAL TOTAL EXCP COUNT
         MVC   WTOAMXCP,ED9         LOAD EDIT MASK
         ED    WTOAMXCP,WORK+3      SHOW EXCP COUNT UP TO (10**9)-1
         SLR   R15,R15              CLEAR FOR INSERT
         ICM   R15,3,JFCBLKSI       GET THE DATA SET BLOCK SIZE
         TM    SMF14RIN+1,SMF14IPD  PDSE?
         JNZ   PDSE1415             YES
         LTR   R15,R15              TEST THE BLOCK SIZE
         JZ    MS1415OK             ZERO, SO SKIP CALCULATION
         TM    JFCRECFM,JFCUND      UNDEFINED RECORD FORMAT?
         JNM   BLSZ1415             YES, JUST SHOW BLOCK SIZE
         TM    JFCRECFM,JFCFIX      FIXED FORMAT?
         JO    NVPL1415             YES, "NOT VARIABLE PUT LOCATE"
         TM    JFCRECFM,JFCRFB      VARIABLE RECORDS, BUT BLOCKED?
         JZ    BLSZ1415             NO, JUST SHOW BLOCK SIZE
         CLI   SMF14RTY,14          OPENED FOR INPUT (OR RDBACK)?
         JE    BLSZ1415             YES, FILE MAY BE FROM PUT LOCATE
         TM    SMFDCBMF+1,X'48'     OUTPUT, BUT IS IT QSAM PUT LOCATE?
         JNO   NVPL1415             NO, "NOT VARIABLE PUT LOCATE"
         SLR   R0,R0
         ICM   R0,3,JFCLRECL        GET THE LOGICAL RECORD LENGTH
         JNP   BLSZ1415             JUST SHOW BLOCK SIZE IF STRANGE
         LR    R14,R15              COPY BLOCK SIZE
         SR    R14,R0               SUBTRACT LRECL
         CR    R14,R0               IS DIFFERENCE BIGGER THAN LRECL?
         JH    BLSZ1415             YES, JUST SHOW BLOCK SIZE
         MVC   WTOAMSIZ+1(7),=C'BLKNG<2'  NO, GETTING SHORT BLOCKS
         LA    R0,4                 GET FOUR
         CR    R14,R0               IS IT TRUE THAT BLKSIZE=LRECL+4?
         JH    BLSZ1415             NO, CAN'T PROVE NO BLOCKING AT ALL
         MVC   WTOAMSCL,=C'=1'      YES, INDICATE ABSOLUTELY UNBLOCKED
         J     BLSZ1415             NOW SHOW THE BLOCK SIZE
PDSE1415 DS    0H
         LTR   R5,R5                ANY EXCPS?
         JNZ   PDSEEXCP             YES
         LTR   R15,R15              IS THE BLOCK SIZE ZERO?
         JZ    MS1415OK             YES, SO SKIP ITS DISPLAY
         J     BLSZ1415             NO, SHOW THE BLOCK SIZE
PDSEEXCP DS    0H
         SLR   R4,R4                CLEAR FOR SHIFT
         SLDL  R4,12                MULTIPLY EXCP COUNT BY 4096
         J     PDSEBLKS             GO SHOW THE BYTE TRANSFER COUNT
NVPL1415 DS    0H
         TM    SMFDCBOR,JFCORGPS    SEQUENTIAL FILE PROCESSING?
         JZ    BLSZ1415             NO, JUST SHOW BLOCK SIZE
         CLI   WTOMSGID+3,C'M'      MAGNETIC TAPE VOLUME MESSAGE?
         JE    SQ1415OK             YES, CAN SHOW BYTE COUNT RELIABLY
         TM    SMFDCBMF,X'80'       EXCP ACCESS METHOD USED?
         JNZ   BLSZ1415             YES, JUST SHOW BLOCK SIZE
         CLI   SMF14RTY,14          OPENED FOR INPUT (OR RDBACK)?
         JNE   PMBR1415             NO
         BCTR  R5,0                 YES, DECREMENT FOR E-O-F (OR TM)
PMBR1415 DS    0H
         TM    JFCDSORG,JFCORGPO    SEQUENTIAL ACCESS OF A PDS?
         JZ    SQ1415OK             NO
         LA    R15,256              YES, GET PDS DIRECTORY BLOCK SIZE
         CLC   JFCBELNM,=CL8' '     SEQUENTIAL ACCESS OF A PDS MEMBER?
         JE    SQ1415OK             NO
         BCTR  R5,0                 YES, DECREMENT EXCP COUNT FOR BLDL
         LA    R15,WTOAMDSN+43      POINT TO LAST DSNAME CHARACTER
NVSDSNLP DS    0H
         CLI   0(R15),C' '          TRAILING BLANK?
         JNE   NVSMEMNM             NO
         BRCT  R15,NVSDSNLP         YES, BACK UP ONE AND TEST AGAIN
NVSMEMNM DS    0H
         CLI   11(R15),C' '         ROOM FOR '(*MEMBER*)'?
         JNE   NVSMEMDN             NO, DO NOT SHOW MEMBER NAME
         MVI   1(R15),C'('          YES, SUPPLY LEFT PARENTHESIS
         MVC   2(8,R15),JFCBELNM    LOAD PDS MEMBER NAME
NVSMEMLP DS    0H
         CLI   9(R15),C' '          TRAILING BLANK?
         JNE   NVSMEMOK             NO
         BRCT  R15,NVSMEMLP         YES, BACK UP ONE AND TEST AGAIN
NVSMEMOK DS    0H
         MVI   10(R15),C')'         SUPPLY RIGHT PARENTHESIS
NVSMEMDN DS    0H
         SLR   R15,R15              CLEAR FOR INSERT
         ICM   R15,3,JFCBLKSI       GET THE DATA SET BLOCK SIZE
SQ1415OK DS    0H
         LTR   R5,R5                POSITIVE EXCP COUNT?
         JNP   BLSZ1415             NO, JUST SHOW BLOCK SIZE
         TM    SMF14RIN,SMF14DAD    DASD DATA SET?
         JZ    SEQKEYOK             NO, CAN'T HAVE A KEY
         SLR   R0,R0                YES
         IC    R0,JFCKEYLE          GET THE KEY LENGTH USED
         AR    R15,R0               ALSO COUNT KEY BYTES TRANSFERRED
SEQKEYOK DS    0H
         MR    R4,R15               GET BYTES (BLOCK_COUNT*SIZE)
PDSEBLKS DS    0H
         MVC   WTOAMSIZ+4(2),=C'<1' REPLACE '0KB' WITH '<1KB'
         LA    R1,=C'KMGT'          POINT TO KILO/MEGA/GIGA/TERA FLAGS
SZ1415LP DS    0H
         SRDA  R4,10                DIVIDE BY 1024
         JZ    SZ1415DN             IF ZERO THEN LESS THAN ONE
         LTR   R4,R4                NUMBER LARGER THAN ONE FULLWORD?
         JNZ   SZ1415BG             YES, TOO BIG
         CL    R5,=F'99999'         NO, IS NUMBER BIGGER THAN 99,999?
         JNH   SZ1415OK             NO, SHOW THE NUMBER
SZ1415BG DS    0H
         LA    R1,1(,R1)            POINT TO NEXT SCALE INDICATOR
         J     SZ1415LP             CONTINUE TO SCALE DOWN
SZ1415OK DS    0H
         CVD   R5,WORK              SHOW THE APPROXIMATE BYTE COUNT
         MVC   WTOAMSIZ,ED5         LOAD EDIT MASK
         ED    WTOAMSIZ,WORK+5
SZ1415DN DS    0H
         MVC   WTOAMSCL(1),0(R1)    SHOW SCALING INDICATOR
         MVI   WTOAMSCL+1,C'B'      INDICATE BYTES
         ICM   R15,3,JFCBLKSI       GET THE DATA SET BLOCK SIZE AGAIN
         JZ    MS1415OK             HANDLE PDSE WITH ZERO BLOCK SIZE
BLSZ1415 DS    0H
         CVD   R15,WORK             SHOW BLOCK SIZE
         OI    WORK+7,15            PREPARE FOR UNPACK
         MVC   WTOAMBLK,=C'BLKSZ='
         UNPK  WTOAMBLS,WORK+5(3)   LOAD BLOCK SIZE NUMERICS
BLSZ14LP DS    0H
         CLI   WTOAMBLS,C'0'        LEADING ZERO?
         JNE   MS1415OK             NO, FORMATTING COMPLETE
         MVC   WTOAMBLS,WTOAMBLS+1  YES, SHUFFLE UP TO SUPPRESS IT
         J     BLSZ14LP             CONTINUE WITH LEADING ZERO CHECK
MS1415OK DS    0H                   MESSAGE NOW READY FOR DISPLAY
         SPACE
         WTO   MF=(E,WTOU83D)       DISPLAY U83?14I OR U83?15I
         SPACE
         CLI   WTOMSGID+3,C'M'      MAGNETIC TAPE VOLUME MESSAGE?
         JNE   MS1415FM             NO, GO TIDY UP AND EXIT
         TM    SMF14RIN,SMF14EOV    CLOSE OF TAPE FILE?
         JO    MS1415FM             NO, JUST E-O-V FOR THIS VOLUME
         MVI   WTOAMSLA,C' '        YES, PRODUCE EXTRA MESSAGE TO SHOW
         MVC   WTOAMVOL,=C'CLOSED'       EXCP (AS OPPOSED TO BLOCK)
         MVI   WTOAMBLK,C' '             COUNT FOR WHOLE FILE
         MVC   WTOAMBLK+1(18),WTOAMBLK
         J     CLOS1415
         SPACE
         DROP  R9                   WK83AREA
         SPACE
MS1415FM DS    0H                   FREE GETMAINED STORAGE
         FREEMAIN RU,LV=WK14LEN,A=(R9),SP=231
         J     WRITEREC             ALL DONE, GO WRITE TYPE 14/15 REC
         TITLE 'SMF RECORD 21 - ERROR STATISTICS BY VOLUME (TAPE ONLY)'
***********************************************************************
*                                                                     *
* RECORD TYPE 21 PROCESSING:  FORMAT AND WRITE A U83021I MESSAGE      *
*  BASED ON IEC209I FROM OS/MVT.  COUNTERS ARE ONLY SHOWN IF          *
*  NON-ZERO, EXCEPT THE SSCH COUNT WHICH IS ALWAYS SHOWN.             *
*                                                                     *
* U83021I JJJJJJJJ,VVVVVV,DEV,SIO=12345,DEN=1,BLKSIZE=12345,          *
*         TR=123,TW=123,PR=123,PW=123,NB=123,ERG=12345,CLN=12345,     *
*         TRF=12345,TRB=12345,TRW=12345,BR=123456789,BW=123456789     *
*                                                                     *
***********************************************************************
         SPACE
REC21$   DS    0H
         GETMAIN RC,LV=WK21LEN,SP=231,LOC=(ANY)
         LTR   R15,R15              TEST FOR SUCCESSFUL GETMAIN
         JNZ   WRITEREC             FAILURE - JUST WRITE SMF RECORD
         LR    R9,R1                ADDRESS GETMAINED AREA
         USING WK83AREA,R9
         MVC   WTOU83D(WTO21L),WTO21S     INITIALIZE WTO PARAMETER LIST
         L     R4,548               POINT TO CURRENT ASCB
         USING ASCB,R4
         ICM   R1,B'1111',ASCBJBNI  POINT TO ADDRESS SPACE NAME
         JNZ   LDJOB21              USE IT IF FOUND
         ICM   R1,B'1111',ASCBJBNS  POINT TO ADDRESS SPACE NAME
         JNZ   LDJOB21              USE IT IF FOUND
         DROP  R4                   ASCB
         LA    R1,=C'STARTING'      IN CASE OF NULL JOB NAME POINTER
LDJOB21  DS    0H
         MVC   WTOTEXT(8),0(R1)     LOAD ADDRESS SPACE NAME
         LA    R3,WTOTEXT+7         POINT TO LAST BYTE OF JOB NAME
JOB21LP  DS    0H
         CLI   0(R3),C' '           TRAILING BLANK?
         JNE   JOB21OK              NO
         BRCT  R3,JOB21LP           YES, BACK UP ONE AND TEST AGAIN
JOB21OK  DS    0H
         MVI   1(R3),C','           SUPPLY SEPARATOR
         MVC   2(6,R3),SMF21VOL     LOAD TAPE VOLUME SERIAL NUMBER
VOL21LP  DS    0H
         CLI   7(R3),C' '           TRAILING BLANK?
         JNE   VOL21OK              NO
         BRCT  R3,VOL21LP           YES, BACK UP ONE AND TEST AGAIN
VOL21OK  DS    0H
         MVI   8(R3),C','           SUPPLY SEPARATOR
         UNPK  9(5,R3),SMF21CA(3)   LOAD DEVICE NUMBER
         TR    9(4,R3),HEX-240      MAKE PRINTABLE HEX CHARACTERS
         MVI   13(R3),C','          SUPPLY SEPARATOR
         CLI   9(R3),C'0'           LEADING ZERO IN DEVICE NUMBER?
         JNE   DEV21OK              NO
         MVC   9(5,R3),10(R3)       YES, SUPPRESS IT
         BCTR  R3,0                 ADJUST POINTER
DEV21OK  DS    0H
         LA    R3,14(,R3)           POINTER TO FIRST BLANK AFTER COMMA
         SLR   R0,R0                CLEAR FOR INSERTS
         ICM   R0,3,SMF21SIO        LOAD SSCH COUNT
         LA    R1,=C'SIO'           POINT TO LABEL
         BRAS  R14,CNTR3FST         SHOW I/O COUNT
         TM    SMF21DEN,X'03'       VALID DENSITY?
         JNO   DEN21OK              NO
         IC    R0,SMF21DEN          YES, GET DENSITY BYTE FOR 2400/3400
         LR    R1,R0                COPY IT
         SLL   R0,24+2
         SRL   R0,24+2+4            GET BITS 2 AND 3 AS A NUMBER
         SLL   R1,6                 GET BITS 0 AND 1 AS A NUMBER
         AR    R1,R0                ADD THE TWO NUMBERS (GET 0 TO 6)
         MVC   0(5,R3),=C',DEN='    SUPPLY DENSITY LABEL
         STC   R1,5(,R3)            SUPPLY DENSITY VALUE
         OI    5(R3),X'F0'          MAKE PRINTABLE (ASSUME < 10)
         LA    R3,6(,R3)            ADJUST DISPLAY LINE POINTER
DEN21OK  DS    0H
         ICM   R0,3,SMF21BLS        LOAD BLOCKSIZE
         JZ    BLS21OK              ZERO SO DON'T SHOW IT
*        LA    R1,=C'BLS'           POINT TO LABEL
         MVC   0(5,R3),=C',BLKS'    WANT 'BLKSIZE=', NOT 'BLS='
         LA    R3,5(,R3)            ADJUST DISPLAY LINE POINTER
         LA    R1,=C'IZE'           POINT TO LABEL
         BRAS  R14,CNTR3FST         SHOW BLOCKSIZE
         SPACE
BLS21OK  DS    0H
         IC    R0,SMF21TR           LOAD TEMPORARY READ ERROR COUNT
         LA    R1,=C'TR'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW TEMPORARY READ ERROR COUNT
         SPACE
         IC    R0,SMF21TW           LOAD TEMPORARY WRITE ERROR COUNT
         LA    R1,=C'TW'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW TEMPORARY WRITE ERROR COUNT
         SPACE
         IC    R0,SMF21PR           LOAD PERMANENT READ ERROR COUNT
         LA    R1,=C'PR'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW PERMANENT READ ERROR COUNT
         SPACE
         IC    R0,SMF21PW           LOAD PERMANENT WRITE ERROR COUNT
         LA    R1,=C'PW'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW PERMANENT WRITE ERROR COUNT
         SPACE
         IC    R0,SMF21NB           LOAD NOISE BLOCK COUNT
         LA    R1,=C'NB'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW NOISE BLOCK COUNT
         SPACE
         ICM   R0,3,SMF21ERG        LOAD ERASE GAP COUNT
         LA    R1,=C'ERG'           POINT TO LABEL
         BRAS  R14,COUNTER3         SHOW ERASE GAP COUNT
         SPACE
         ICM   R0,3,SMF21CLN        LOAD CLEANER ACTION COUNT
         LA    R1,=C'CLN'           POINT TO LABEL
         BRAS  R14,COUNTER3         SHOW CLEANER ACTION COUNT
         SPACE
         ICM   R0,3,SMF21TRF        LOAD TEMP READ FORWARD ERROR COUNT
         LA    R1,=C'TRF'           POINT TO LABEL
         BRAS  R14,COUNTER3         SHOW TEMP READ FORWARD ERROR COUNT
         SPACE
         ICM   R0,3,SMF21TRB        LOAD TEMP READ BACKWARD ERROR COUNT
         LA    R1,=C'TRB'           POINT TO LABEL
         BRAS  R14,COUNTER3         SHOW TEMP READ BACKWARD ERROR COUNT
         SPACE
         ICM   R0,3,SMF21TWF        LOAD TEMPORARY WRITE ERROR COUNT
         LA    R1,=C'TWF'           POINT TO LABEL
         BRAS  R14,COUNTER3         SHOW TEMPORARY WRITE ERROR COUNT
         SPACE
         ICM   R0,7,SMF21BR         LOAD 4K BYTES READ COUNT
         LA    R1,=C'BR'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW 4K BYTES READ COUNT
         SPACE
         ICM   R0,7,SMF21BW         LOAD 4K BYTES WRITTEN COUNT
         LA    R1,=C'BW'            POINT TO LABEL
         BRAS  R14,COUNTER2         SHOW 4K BYTES WRITTEN COUNT
         SPACE
         WTO   MF=(E,WTOU83D)       DISPLAY U83021I
         SPACE
         FREEMAIN RU,LV=WK21LEN,A=(R9),SP=231
         J     WRITEREC             ALL DONE, GO AND WRITE TYPE 21 REC
         SPACE
COUNTER2 DS    0H                   SHOW COUNTER WITH 2-CHARACTER LABEL
         LTR   R0,R0                NON-ZERO VALUE?
         BZR   R14                  NO, SUPPRESS DISPLAY OF ZERO
         MVI   0(R3),C','           SUPPLY SEPARATOR
         CVD   R0,WORK              GET DECIMAL VALUE
         OI    WORK+7,15            PREPARE FOR UNPACK
         MVC   1(2,R3),0(R1)        LOAD VALUE LABEL (2 CHARACTERS)
         J     CNTRCMN              BRANCH TO COMMON CODE
         SPACE
COUNTER3 DS    0H                   SHOW COUNTER WITH 3-CHARACTER LABEL
         LTR   R0,R0                NON-ZERO VALUE?
         BZR   R14                  NO, SUPPRESS DISPLAY OF ZERO
         MVI   0(R3),C','           SUPPLY SEPARATOR
         LA    R3,1(,R3)            POINT PAST SEPARATOR
CNTR3FST DS    0H
         CVD   R0,WORK              GET DECIMAL VALUE
         OI    WORK+7,15            PREPARE FOR UNPACK
         MVC   0(3,R3),0(R1)        LOAD VALUE LABEL (3 CHARACTERS)
CNTRCMN  DS    0H
         MVI   3(R3),C'='
         UNPK  4(9,R3),WORK+3(5)    LOAD NUMERIC COUNT
         LA    R0,13                GET LENGTH OF TEXT ADDED
CNTR0LP  DS    0H
         CLI   4(R3),C'0'           LEADING ZERO?
         JNE   CNTROKAY             NO
         MVC   4(9,R3),5(R3)        YES, SUPPRESS IT
         BRCT  R0,CNTR0LP           CONTINUE LEADING ZERO CHECK
CNTROKAY DS    0H
         ALR   R3,R0                POINT PAST ADDED MESSAGE TEXT
         BR    R14                  RETURN TO CALLER
         SPACE
         DROP  R9                   WK83AREA
         TITLE 'SMF RECORD 64 - VSAM DATA SET CLOSE'
***********************************************************************
*                                                                     *
* RECORD TYPE 64: FORMAT AND WRITE A U83064I MESSAGE.                 *
*                                                                     *
* U83064I ???PUT VSAM FILE DDDDDDDD CLOSED 123456789 EXCPS FOR        *
*         12345678901234567890123456789012345678901234 BLKSZ=12345    *
*         12345KB                                                     *
***********************************************************************
         SPACE
REC64$   DS    0H
         L     R4,PSAAOLD           POINT TO CURRENT ASCB
         USING ASCB,R4
         ICM   R1,B'1111',ASCBTSB   TIME SHARING USER?
         JNZ   WRITEREC             YES, DO NOT DISPLAY ANY MESSAGE
         DROP  R4                   ASCB
         TM    SMF64RIN,X'80'       RECORD WRITTEN BY CLOSE?
         JZ    WRITEREC             NO, BY EOV, SO DO NOT MAKE A MSG
         GETMAIN RC,LV=WK64LEN,SP=231,LOC=(ANY)
         LTR   R15,R15              TEST FOR SUCCESSFUL GETMAIN
         JNZ   WRITEREC             FAILURE - JUST WRITE SMF RECORD
         LR    R9,R1                ADDRESS GETMAINED AREA
         USING WK83AREA,R9
         MVC   WTOU83D(WTO64L),WTO64S INITIALIZE WTO PARAMETER LIST
         SLR   R3,R3                CLEAR FOR INSERT
         ICM   R3,3,SMF64ESL        GET EXTENT SECTION LENGTH
         LA    R3,SMF64FEX(R3)      POINT PAST EXTENT SECTION
         USING SMF64STS,R3          STATISTICS SECTION ADDRESSABILITY
         LA    R0,176
         CLM   R0,15,SMF64SLN       STATISTICS SECTION LONG ENOUGH?
         JH    REC64XIT             NO, DO NOT WRITE ANY MESSAGE
         MVC   WTOAMDDN,SMF64DDN    SHOW THE DDNAME (LOGICAL FILE NAME)
         IC    R1,SMF64MC1          GET ACBMACR1 FLAGS
         SLL   R1,29                SHIFT OUT UNWANTED FLAGS
         SRL   R1,30                GET GET/PUT READ/WRITE FLAGS
         SLA   R1,3                 MULTIPLY BY EIGHT FOR INDEX
         JZ    OPENED64             BOTH FLAGS OFF SO LEAVE BLANK
         LA    R1,VOPNTYPS-8(R1)    POINT TO OPEN TYPE LITERAL
         MVC   WTOAMOPN,0(R1)       SHOW THE OPEN TYPE
OPENED64 DS    0H
         MVC   WTOAMDSN,SMF64DNM    SHOW THE DSN (PHYSICAL FILE NAME)
         CLI   WTOAMDSN,C'$'        VALID NAME?
         JNL   DSN64OK              POSSIBLY, ASSUME THAT IT IS
         MVC   WTOAMDSN,SMF64CLN    NO, SHOW THE JCL DATA SET NAME
DSN64OK  DS    0H
         ICM   R5,15,SMF64DEP       GET THE EXCP COUNT CHANGE
         JM    REC64XIT             DO NOT ISSUE MESSAGE IF NEGATIVE
         CVD   R5,WORK              GET DECIMAL TOTAL EXCP COUNT
         MVC   WTOAMXCP,ED9         LOAD EDIT MASK
         ED    WTOAMXCP,WORK+3      SHOW EXCP COUNT UP TO (10**9)-1
         ICM   R15,15,SMF64DBS      GET THE DATA SET BLOCK SIZE
         JNP   MESG64OK             ZERO SO SKIP CALCULATION
         CVD   R15,WORK             SHOW BLOCK SIZE
         OI    WORK+7,15            PREPARE FOR UNPACK
         MVC   WTOAMBLK,=C'BLKSZ='
         UNPK  WTOAMBLS,WORK+5(3)   LOAD BLOCK SIZE NUMERICS
BLSZ64LP DS    0H
         CLI   WTOAMBLS,C'0'        LEADING ZERO?
         JNE   BLSZ64OK             NO, FORMATTING COMPLETE
         MVC   WTOAMBLS,WTOAMBLS+1  YES, SHUFFLE UP TO SUPPRESS IT
         J     BLSZ64LP             CONTINUE WITH LEADING ZERO CHECK
BLSZ64OK DS    0H
         LTR   R5,R5                ANY EXCPS?
         JZ    MESG64OK             NO, SUPPRESS DISPLAY OF '0KB'
         MR    R4,R15               YES, GET BYTES (BLOCK COUNT*SIZE)
         MVC   WTOAMSIZ+4(2),=C'<1' REPLACE '0KB' WITH '<1KB'
         LA    R1,=C'KMGT'          POINT TO KILO/MEGA/GIGA/TERA FLAGS
SIZE64LP DS    0H
         SRDA  R4,10                DIVIDE BY 1024
         JZ    SIZE64DN             IF ZERO THEN LESS THAN ONE
         LTR   R4,R4                NUMBER LARGER THAN ONE FULLWORD?
         JNZ   SIZE64BG             YES, TOO BIG
         CL    R5,=F'99999'         NO, IS NUMBER BIGGER THAN 99,999?
         JNH   SIZE64OK             NO, SHOW THE NUMBER
SIZE64BG DS    0H
         LA    R1,1(,R1)            POINT TO NEXT SCALE INDICATOR
         J     SIZE64LP             CONTINUE TO SCALE DOWN
SIZE64OK DS    0H
         CVD   R5,WORK              SHOW THE APPROXIMATE BYTE COUNT
         MVC   WTOAMSIZ,ED5         LOAD EDIT MASK
         ED    WTOAMSIZ,WORK+5
SIZE64DN DS    0H
         MVC   WTOAMSCL(1),0(R1)    SHOW SCALING INDICATOR
         MVI   WTOAMSCL+1,C'B'      INDICATE BYTES
MESG64OK DS    0H                   MESSAGE NOW READY FOR DISPLAY
         SPACE
         WTO   MF=(E,WTOU83D)       DISPLAY U83064I
         SPACE
         DROP  R9,R3                WK83AREA, SMF64STS
REC64XIT DS    0H
         SPACE
         FREEMAIN RU,LV=WK64LEN,A=(R9),SP=231
         J     WRITEREC             ALL DONE, GO WRITE TYPE 64 RECORD
         TITLE 'TCP/IP FTP STATISTICS RECORDS'
*---------------------------------------------------------------------*
*---     THIS MODIFICATION INSERTED BY RICK FOCHTMAN, BOARD OF     ---*
*---     TRADE CLEARING CORP., TO PROVIDE FTP STATISTICS ON        ---*
*---     SYSLOG IN REAL TIME.  THE DSECT SMFFTP76 WAS EXTRACTED    ---*
*---     FROM MACRO EZASMF76, FOUND IN THE SEZACMAC DATASET FOR    ---*
*---     TCP/IP.  LOGIC IS FAIRLY SIMPLE AND REASONABLY WELL       ---*
*---     DOCUMENTED.                                               ---*
*---------------------------------------------------------------------*
REC118$  DS    0H
         WTO   'U83FTPI TYPE 118 RECORD LOCATED.'
         CLC   22(2,R2),=H'75'     FTP SUBTYPE ??
         JNE   WRITEREC            NOPE; SKIP IT
         WTO   'U83FTPI SUBTYPE 75 LOCATED.'
         GETMAIN RC,LV=WK118LEN,SP=231,LOC=(ANY)
         LR    R8,R1               COPY STORAGE ADDRESS
         LA    R9,WK118LEN         AND LENGTH
         LA    R14,0               SOURCE TO ZEROS
         LA    R15,0               LENGTH/PAD TO ZEROS
         MVCL  R8,R14              CLEAR THE AREA
         LR    R9,R1               COPY STORAGE ADDRESS
         USING WK118,R9             AND BASE MY DSECT
         USING SMFFTP76,R2         RECORD DSECT BASE
         LH    R3,0(,R2)           LOAD RECORD LENGTH
         BCTR  R3,R0               DECR BY ONE (POINT TO LAST BYTE)
         LA    R4,INWTO            POINT TO MESSAGE INIT'S
         LA    R5,INWTOL           AND LENGTH
         LR    R15,R5              COPY FOR OUTPUT LEN
         LA    R14,HDRL            OUTPUT POINTER
         MVCL  R14,R4              INIT THE MESSAGES
         MVC   FTPID,SMFFTPSU      USERID
         MVC   FTPDSN,SMFFTDSN     DSNAME
         #CVIP FTPIPO,SMFFTPSA,EDWK1     FROM ADDRESS
         #CVIP FTPIPI,SMFFTPSL,EDWK1     TO ADDRESS
         $CVTIME FTPSTT,SMFFTTRS         START TIME
         $CVTIME FTPEDT,SMFFTTRE         END TIME
         MVC   FTPEDT-3(3),=C' / '
         MVC   FTPCMD,SMFFTPCM     FTP SUBCOMMAND
         MVC   FTPTYP,SMFFTPFM     FORMAT, MODE AND STRUCTURE
         EDIT  FTPBCT,SMFFTTBC,'Z,ZZZ,ZZZ,ZZZ',                        X
               WRKA=EDWK1,WRKB=EDWK2
         WTO   TEXT=((HDRL,),(DL1,),(DL2,),(DL2A,),(DL3,),(DL4,)),     X
               MCSFLAG=HRDCPY,DESC=12,MF=(E,SMF76MSG)
         FREEMAIN RC,LV=WK118LEN,A=(R9),SP=231
         J     WRITEREC             ALL DONE, GO WRITE TYPE 64 RECORD
         DROP  R2,R9
         TITLE 'STATIC AREA AND LITERAL POOL'
*-------------------------------------------------------------------
*---     DATA TO INITIALIZE MLWTO AREA
*------------------------------------------------------------------
INWTO  DC  AL2(L'HDR)
       DC  CL35'U83FTPI ----- FTP STATISTICS -----'
       DC  AL2(L'LINE1)
       DC  CL58'ID: XXXXXXXX   TIME START/STOP XX:XX:XX / XX:XX:XX'
       DC  AL2(L'LINE2)
       DC  CL58'IP ADDRESS TO/FROM: XXX.XXX.XXX.XXX / XXX.XXX.XXX.XXX'
       DC  AL2(L'LINE2A)
       DC  CL47'SUBCOMMAND: XXXX  FORMAT/XFER/STRUCTURE: XXXX '
       DC  AL2(L'LINE3)
       DC  CL31'BYTE COUNT: X,XXX,XXX,XXX'
       DC  AL2(L'LINE4)
       DC  CL54'DSNAME: XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
SMF76WTO WTO   TEXT=((,L),(,D),(,D),(,D),(,D),(,DE)),DESC=12,          X
               MCSFLAG=HRDCPY,MF=L
INWTOL   EQU   *-INWTO
HEX      DC    C'0123456789ABCDEF'
ED5      DC    XL6'402020202120'
ED9      DC    XL10'40202020202020202120'
*                 OPEN TYPE      DEBOPATB SETTING
OPNTYPES DC    CL8' INPUT  '       0000      0
         DC    CL8'RDBACK  '       0001      1
         DC    CL8'?0010?  '       0010      2
         DC    CL8' INOUT  '       0011      3
         DC    CL8'UPDATE  '       0100      4
         DC    CL8'?0101?  '       0101      5
         DC    CL8'OUTINX  '       0110      6
         DC    CL8' OUTIN  '       0111      7
         DC    CL8'?1000?  '       1000      8
         DC    CL8'?1001?  '       1001      9
         DC    CL8'?1010?  '       1010      A
         DC    CL8'?1011?  '       1011      B
         DC    CL8'?1100?  '       1100      C
         DC    CL8'?1101?  '       1101      D
         DC    CL8'EXTEND  '       1110      E
*        DC    CL8'OUTPUT  '       1111      F
*                 OPEN TYPE      ACBMACR1 SETTING
VOPNTYPS DC    CL8'OUTPUT  '       .01.      2
         DC    CL8' INPUT  '       .10.      4
         DC    CL8'UPDATE  '       .11.      6
         SPACE
*        WTO TEMPLATES - 125 CHARS (MSGID + ' ' + UP TO 117 TEXT)
         SPACE
WTO1415S WTO   'U83M14I OUTPUT EXCP FILE *DDNAME* CLOSED 123456789 BLOC+
               KS OF DSNAME                                            +
                             ',ROUTCDE=(11),MF=L
WTO1415L EQU   *-WTO1415S
         SPACE
WTO21S   WTO   'U83021I JOB-NAME                                       +
                                                                       +
                             ',ROUTCDE=(3,5),MF=L
WTO21L   EQU   *-WTO21S
         SPACE
WTO64S   WTO   'U83064I        VSAM FILE *DDNAME* CLOSED 123456789 EXCP+
               S FOR 12345678.12345678.12345678.12345678.12345678      +
                             ',ROUTCDE=(11),MF=L
WTO64L   EQU   *-WTO64S
         SPACE 2
         LTORG
         SPACE 2
         DS    0D                   END OF CSECT
         TITLE 'DYNAMIC AREA DEFINITIONS'
WK118    DSECT
         DS    18F
EDWK1    DS    D
EDWK2    DS    CL16
*----------------------------------------------------------
*---     MLWTO AREA IN THE WORK DSECT
*----------------------------------------------------------
HDRL   DC  AL2(L'HDR)
HDR    DC  CL35'U83FTPI ----- FTP STATISTICS -----'
DL1    DC  AL2(L'LINE1)
LINE1 DC CL58'ID: XXXXXXXX  TIME START/STOP XX:XX:XX.XX / XX:XX:XX.XX'
DL2    DC  AL2(L'LINE2)
LINE2  DC  CL58'IP ADDRESS TO/FROM: XXX.XXX.XXX.XXX / XXX.XXX.XXX.XXX'
DL2A   DC  AL2(L'LINE2A)
LINE2A DC  CL47'SUBCOMMAND: XXXX  FORMAT/XFER/STRUCTURE: XXXX '
DL3    DC  AL2(L'LINE3)
LINE3  DC  CL31'BYTE COUNT: X,XXX,XXX,XXX'
DL4    DC  AL2(L'LINE4)
LINE4  DC  CL54'DSNAME: XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX'
FTPID    EQU   LINE1+4,8
FTPSTT   EQU   LINE1+31
FTPEDT   EQU   LINE1+45
FTPIPI   EQU   LINE2+20
FTPIPO   EQU   LINE2+38
FTPCMD   EQU   LINE2A+12,4
FTPTYP   EQU   LINE2A+41,4
FTPBCT   EQU   LINE3+12,13
FTPDSN   EQU   LINE4+8,44
SMF76MSG WTO   TEXT=((,L),(,D),(,D),(,D),(,D),(,DE)),DESC=12,          X
               MCSFLAG=HRDCPY,MF=L
END118   DS    0D
WK118LEN EQU   *-WK118             AREA LENGTH
         SPACE 3
*---------------------------------------------------------------------*
*                DSECT FOR FTP SMF RECORDS (SUBTYPE 75)               *
*---------------------------------------------------------------------*
SMFFTP76 DSECT                    DSECT TO DESCRIBE FTP SMF RECORDS
SMFFTPHD DS    CL24               STANDARD SMF HEADER WITH SUBTYPES
*
SMFFTPCM DS    CL4                FTP SUBCOMMAND
*
SMFFTPTY DS    CL4                FTP SERVER=FILE TYPE (SEQ, JES, SQL)
*                             OR  FTP CLIENT=VALUE OF REPLY TO FTP CMD
*
SMFFTPSA DS    F                  FTP SERVER REMOTE IP ADDRESS   OR
*                                 FTP CLIENT LOCAL  IP ADDRESS
*
SMFFTPSL DS    F                  FTP SERVER LOCAL   IP ADDRESS  OR
*                                 FTP CLIENT FOREIGN IP ADDRESS
*
SMFFTPCP DS    CL2                FTP CLIENT LOCAL   PORT
SMFFTPCF DS    CL2                FTP CLIENT FOREIGN PORT
SMFFTPR2 DS    CL4                FTP CLIENT RESERVED
*
SMFFTPSU DS    CL8                FTP SERVER LOCAL  USER ID      OR
*                                 FTP CLIENT REMOTE USER ID
*
SMFFTPFM DS    CL1                FTP DATA FORMAT
SMFFTPFA EQU   C'A'                   A = ASCII
SMFFTPFE EQU   C'E'                   E = EBCDIC
SMFFTPFI EQU   C'I'                   I = IMAGE
*
SMFFTPMO DS    CL1                FTP MODE
SMFFTPMB EQU   C'B'                   B = BLOCK
SMFFTPMC EQU   C'C'                   C = COMPRESSED
SMFFTPMS EQU   C'S'                   S = STREAM
*
SMFFTPST DS    CL1                FTP STRUCTURE
SMFFTPSF EQU   C'F'                   F = FILE
*
SMFFTPDT DS    CL1                FTP DATA SET TYPE
SMFFTPDB EQU   C' '                   BLANK = SEQUENTIAL
SMFFTPDP EQU   C'P'                   P     = PDS
*
SMFFTTRS DS    F                  FTP START TIME OF TRANSMISSION
SMFFTTRE DS    F                  FTP END   TIME OF TRANSMISSION
SMFFTTBC DS    F                  FTP BYTE COUNT OF TRANSMISSION
*
SMFFTPXD DS    CL1                FTP ID
SMFFTPXC EQU   C'C'                   C = CLIENT
SMFFTPXS EQU   C'S'                   S = SERVER
*
SMFFTSLR DS    CL3                FTP SERVER - LAST REPLY TO CLIENT
*
SMFFTDSN DS    CL44               FTP DATA SET NAME
SMFFTMEM DS    CL8                FTP MEMBER NAME FOR PDS
SMFFTRS2 DS    CL8                FTP RESERVED FOR ABNORMAL END INFO.
*
SMFFTDS2 DS    CL44               FTP SECOND DATA SET NAME (IF NEEDED)
*                                 OR  FTP CLIENT LOCAL DIRECTORY
*
SMFFTMM2 DS    CL8                FTP SECOND MEMBER NAME FOR PDS
*
SMFFTSTC DS    CL8                FTP SERVER STARTED TASK QUALIFIER OR
*                                 FTP CLIENT USER ID OF FTP USER
*
SMFFTHST DS    CL8                FTP TCP/IP HOST NAME
*
SMFFTSRP DS    CL2                FTP SERVER REMOTE PORT NUMBER
SMFFTSLP DS    CL2                FTP SERVER LOCAL  PORT NUMBER
SMFFTOF1 DS    AL2                OFFSET TO THE FIRST HFS FILE FIELD
SMFFTOF2 DS    AL2                OFFSET TO THE SECOND HFS FILE FIELD
SMFFTBYF DS    XL8                BYTES TRANSFERRED COUNTER IN DOUBLE
SMFFTGIG DS    AL4                4-GIGABYTE COUNTER FOR BYTEXFER
SMFFTVAR DS    0C                 VAR-LENGTH FIELDS
*
WK83AREA DSECT
WORK     DS    D
WTOU83D  WTO   '1234567890123456789012345678901234567890123456789012345+
               67890123456789012345678901234567890123456789012345678901+
               23456789012345',ROUTCDE=(11),MF=L
         ORG   WTOU83D+4
WTOMSGID DS    CL8                  U83###I
WTOTEXT  DS    CL112
         ORG   WTOTEXT
WTOAMOPN DS    CL6                  OPEN TYPE
         DS    CL1                  ' '
WTOAMNAM DS    CL4                  ACCESS METHOD
         DS    CL6                  ' FILE '
WTOAMDDN DS    CL8                  DDNAME
WTOAMSLA DS    CL1                  ' ' OR '/'
WTOAMVOL DS    CL6                  'CLOSED' OR TAPE VOLSER
WTOAMXCP DS    CL10                 EXCP COUNT
WTOAMDES DS    CL11                 ' EXCPS FOR ' OR ' BLOCKS OF '
WTOAMDSN DS    CL44                 DSNAME
         DS    CL1                  ' '
WTOAMBLK DS    CL6                  'BLKSZ='
WTOAMBLS DS    CL5                  DATA SET BLOCK SIZE
WTOAMSIZ DS    CL6                  UPPER LIMIT TO BYTE COUNT
WTOAMSCL DS    CL2                  'KB'/'MB'/'GB'/'TB'
         ORG
         SPACE
         DS    0D
WK14LEN  EQU   *-WK83AREA
WK21LEN  EQU   *-WK83AREA
WK64LEN  EQU   *-WK83AREA
         EJECT
         TITLE 'SMF RECORD STRUCTURES'
SMFRECD  DSECT
         IFASMFR (14)
         SPACE
         ORG   SMFJFCB1
         IEFJFCBN
         EJECT
         ORG   SMFRECD
         IFASMFR (21)
         EJECT
         ORG   SMFRECD
         IFASMFR (64)
         EJECT
         TITLE 'SYSTEM CONTROL BLOCKS'
         IHAPSA
         SPACE 3
         IHAASCB
         SPACE 3
         IHAASXB                   * ASXB MAPPING
         SPACE 3
         IHAACEE                   * ACEE MAPPING
         SPACE 3
         IEFJMR                    * MAP JOB MANAGEMENT RECORD
         SPACE 3
*        EZASMF76 FTP=YES
         END
