CSWP     TITLE 'CHKSWAP --- INITIATE A PROGRAM IN NON-SWAPPABLE MODE'
*---------------------------------------------------------------------*
*    THIS IS A BATCH PROGRAM WHICH WILL RUN ANOTHER PROGRAM AS        *
*                          NONSWAPPABLE                               *
*                                                                     *
*    I PRESUME THAT THE AUTHOR OF THIS PROGRAM WAS RICK FOCHTMAN.     *
*                                                                     *
*    EXAMPLE USAGE:  ANY PARM FOR THE CALLED PROGRAM COMES            *
*                    AFTER THE SLASH IN THE PARM FIELD OF THE         *
*                    EXEC CARD.  THE SLASH IS REQUIRED, EVEN          *
*                    IF THERE IS NO PARM FOR THE CALLED PROGRAM.      *
*                                                                     *
*            PARM FIELD IN THE EXEC CARD:  'PGMNAME/ITS PARMS'        *
*                                                                     *
*            //STEPLIB DD   IS THE LIBRARY CONTAINING CHKSWAP         *
*            //TASKLIB DD   IS THE TASKLIB CONTAINING THE CALLED      *
*                           PROGRAM.                                  *
*                                                                     *
*    //   JOB CARD                                                    *
*    //*                                                              *
*    //*   RUN A PROGRAM NONSWAPPABLE                                 *
*    //*                                                              *
*    //ATTNSWP EXEC PGM=CHKSWAP,PARM='AMBLIST/'                       *
*    //STEPLIB  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB                     *
*    //TASKLIB  DD  DISP=SHR,DSN=SYS1.LINKLIB                         *
*    //SYSPRINT DD  SYSOUT=*                                          *
*    //SYSLIB   DD  DSN=SYS1.W$$.LINKLIB,DISP=SHR                     *
*    //SYSIN    DD *                                                  *
*     LISTLOAD OUTPUT=XREF,MEMBER=OFFLOAD                             *
*    /*                                                               *
*                                                                     *
*    ORIGINAL JCL TO RUN THE PROGRAM WITHOUT CHKSWAP:                 *
*                                                                     *
*    //   JOB CARD                                                    *
*    //*                                                              *
*    //STEP1    EXEC PGM=AMBLIST                                      *
*    //SYSPRINT DD SYSOUT=*                                           *
*    //SYSLIB   DD DSN=SYS1.W$$.LINKLIB,DISP=SHR                      *
*    //SYSIN    DD *                                                  *
*     LISTLOAD OUTPUT=XREF,MEMBER=OFFLOAD                             *
*    /*                                                               *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*    NOTES:   (FROM SAM GOLOB)                                        *
*                                                                     *
*    THE WAY THIS PROGRAM IS SET UP, IT HAS TO BE LINKEDITED WITH     *
*    SETCODE AC(1) AND IT HAS TO BE RUN FROM AN APF-AUTHORIZED        *
*    LOAD LIBRARY.  HOWEVER, IF YOU HAVE AN IN-HOUSE SVC THAT DOES    *
*    AUTHORIZATIONS, YOU CAN INSERT THE CALLS FOR IT AFTER LABEL      *
*    PGML6, WHERE THE $AUTH CALLS USED TO BE.  WHEN YOU RUN THIS      *
*    PROGRAM NON-APF-AUTHORIZED, USING THE SVC, IT IS PROBABLY        *
*    SAFER, BUT NOT EVERYBODY HAS AN "AUTH SVC".  I'M NOT SURE HOW    *
*    THE RSAPF=YES PARM IN THE ATTACH MACRO WORKS, WHEN THIS ENTIRE   *
*    PROGRAM IS BEING RUN APF-AUTHORIZED.                             *
*                                                                     *
*---------------------------------------------------------------------*
*---     STANDARD NON-REENTRANT LINKAGE STUFF                      ---*
*---------------------------------------------------------------------*
CHKSWAP  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'CHKSWAP'  CSECT IDENTIFIER
         STM   R14,R12,12(R13)     STORE REGISTERS
         BAL   R2,92(,R15)         BAL AROUND
         USING *,R13
         DS    18F
         XC    0(72,R2),0(R2)      CLEAR NEW SAVE AREA
         ST    R2,8(,R13)          STORE FORWARD AND
         ST    R13,4(,R2)          BACK POINTERS
         LR    R13,R2              LOAD PROGRAM BASE
*---------------------------------------------------------------------*
*---     COPY AND INTERPRET THE PARM FIELD                         ---*
*---------------------------------------------------------------------*
         L     R2,0(,R1)           LOAD PARM STRING POINTER
         LH    R3,0(,R2)           LOAD PARM STRING LENGTH
         LA    R3,1(,R3)           INCREMENT BY ONE
         EX    R3,COPYPARM         COPY TO SCANNING AREA
         LA    R2,PARM             POINT TO PARM AREA
         LH    R5,PARMLEN          LOAD ITS LENGTH
         LA    R5,0(R2,R5)         POINT PAST LAST CHARACTER
         BCTR  R5,R0               BACK UP BY ONE
         LA    R4,1                LOAD BXLE INCREMENT
         LA    R6,PGMNAME          POINT TO PROGRAM NAME FIELD
         LA    R7,9                LOAD MAX PROGRAM-NAME LENGTH
         MVC   PGMNAME,=CL8' '     AND BLANK IT OUT
PGML1    DS    0H
         CLI   0(R2),C'/'          END OF PROGRAM NAME ??
         BE    PGML2               YES ---
         MVC   0(1,R6),0(R2)       NOPE; COPY A CHARACTER
         LA    R6,1(,R6)           INCREMENT OUTPUT POINTER
         BCT   R7,*+8              COUNT NAME CHARACTERS DOWN
         B     ABENDX              TOO LONG; DIE HORRIBLY
         BXLE  R2,R4,PGML1         LOOP FOR WHOLE NAME
         B     ABENDX              NO SLASH FOUND; DIE HORRIBLY
*---------------------------------------------------------------------*
*---     PROGRAM NAME STRIPPED OUT. NOW SHORTEN THE COPIED PARM    ---*
*---------------------------------------------------------------------*
PGML2    DS    0H
         LH    R3,PARMLEN          LOAD THE PARM LENGTH
         XC    PARMLEN,PARMLEN     CLOBBER (REPLACED LATER)
PGML3    DS    0H
         CLI   PARMLEN+1,C'/'      FAR ENOUGH ??
         BE    PGML4               YES ---
         BCTR  R3,R0               NOPE; DECREMENT THE LENGTH
         MVC   PARM-1(L'PARM),PARM SHIFT PARM LEFT A BYTE
         B     PGML3               AND LOOP, SEARCHINGLY
PGML4    DS    0H
         CH    R3,=H'1'            PARM LESS THAN ONE ??
         BNL   PGML5               NOPE ---
         LA    R3,0                YES; ASSUME ZERO
         STH   R3,PARMLEN          STORE NEW PARM LENGTH
*        B     PGML6               SKIP PARM MOVE
*---------------------------------------------------------------------*
*---     REPLACE THE PARM WITH UPDATED VALUE                       ---*
*---------------------------------------------------------------------*
PGML5    DS    0H
         L     R2,4(,R13)          LOAD SAVE AREA BACK POINTER
         L     R2,24(,R2)          LOAD ORIG. REGISTER-1 VALUE
         L     R2,0(,R2)           LOAD PARM STRING POINTER
         STH   R3,PARMLEN          STORE NEW PARM LENGTH
         LA    R3,1(,R3)           BUILD LENGTH FOR MVC
         EX    R3,REPLPARM         AND REPLACE THE PARM VALUE
*---------------------------------------------------------------------*
*---     CHECK FOR EXISTENCE OF THE PROGRAM. ABEND IF MISSING.     ---*
*---------------------------------------------------------------------*
PGML6    DS    0H
*        $AUTH ON,KEY=FAR
         MODESET MODE=SUP
*        $AUTH OFF,KEY=FAR
         OPEN  (TASKLIB,INPUT)
         BLDL  TASKLIB,PGMBLDL     ISSUE BLDL FOR PROGRAM NAME
         LTR   R15,R15             IS IT PRESENT ??
         BNZ   ABENDY              NOPE ---
*---------------------------------------------------------------------*
*---     SET MYSELF AUTHORIZED AND NON-SWAPPABLE                   ---*
*---------------------------------------------------------------------*
         SYSEVENT DONTSWAP         SET NON-SWAPPABLE
*---------------------------------------------------------------------*
*---     ATTACH THE SUBJECT PROGRAM, RESETING APF AS WE GO         ---*
*---------------------------------------------------------------------*
         ATTACH EPLOC=PGMNAME,RSAPF=YES,ECB=TASKECB,SM=PROB,           X
               DCB=TASKLIB,ESTAI=ABEND,PARAM=(PARMLEN),VL=1
         LTR   R15,R15             ATTACH OK ??
         BNZ   ATTFAIL             NOPE
         ST    R1,TASKTCB          SAVE TCB ADDRESS
         WAIT  1,ECB=TASKECB       LET THE TASK COMPLETE
         CLOSE TASKLIB             DONE WITH THE TASKLIB
         L     R3,TASKECB          LOAD THE ECB
         N     R3,TRIMMER          TRIM COMPLETION BITS
         LTR   R3,R3               NON-ZERO ??
         BNZ   CHECKEND            YES; CHECK COMPLETION STUFF
NORMRET  DS    0H
         DETACH TASKTCB
         LR    R15,R3
         L     R13,4(,R13)         LOAD BACK POINTER
         L     R14,12(,R13)        RESTORE THE RETURN ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         BR    R14                 AND RETURN TO THE SYSTEM
*---------------------------------------------------------------------*
*---     NON-ZERO CODE IN ECB. CHECK FOR POSSIBLE ABEND            ---*
*---------------------------------------------------------------------*
CHECKEND DS    0H
         CLI   ABEFLAG,0           DID SUBTASK ABEND ??
         BE    NORMRET             NOPE ---
         N     R3,TRIMMER          CLEAR OFF GARBAGE FLAG BITS
         WTO   'CHKSWAP --- SUBTASK ABENDED. ABEND IS PROPOGATED',     X
               ROUTCDE=(1,11)
         ABEND (R3)
*---------------------------------------------------------------------*
*---     ABENDS, WITH APPROPRIATE MESSAGES                         ---*
*---------------------------------------------------------------------*
ATTFAIL  DS    0H
         WTO   'CHKSWAP - PROBLEM PROGRAM ATTACH FAILED',ROUTCDE=11
         WTO   'ABENDCODE MINUS 1000 EQUALS ATTACH R.C.',ROUTCDE=11
         LA    R2,1000(,R15)
         ABEND (R2),DUMP,STEP
ABENDX   DS    0H
         WTO   'CHKSWAP - INVALID PGM NAME/PARM FIELD',ROUTCDE=11
         ABEND 1000,DUMP,STEP
ABENDY   DS    0H
         WTO   'CHKSWAP - SPECIFIED PROGRAM NOT LOCATED BY BLDL',      X
               ROUTCDE=11
         ABEND X'806',DUMP,STEP,SYSTEM
*---------------------------------------------------------------------*
*---     TCB STAI EXIT ROUTINE. SET THE ABEND FLAG AND RETURN      ---*
*---------------------------------------------------------------------*
ABEND    DS    0H
         USING *,R15
         OI    ABEFLAG,255         SET THE ABEND FLAG
         LA    R15,0               SET 'CONTINUE' RETURN CODE
         BR    R14                 AND RETURN TO SYSTEM
         DROP  R15
*---------------------------------------------------------------------*
*---     CONSTANTS, DATA AREAS AND 'EX'ED INSTRUCTIONS             ---*
*---------------------------------------------------------------------*
         LTORG
ABEFLAG  DC    X'00'
TASKECB  DC    F'0'                SUBTASK ECB
TASKTCB  DC    A(0)                SUBTASK TCB ADDRESS
TRIMMER  DC    X'3FFFFFFF'
COPYPARM MVC   PARMLEN(0),0(R2)    COPY PARM TO MY AREA
REPLPARM MVC   0(0,R2),PARMLEN     REPLACE ORIGINAL PARM
TASKLIB  DCB   DSORG=PO,MACRF=R,DDNAME=TASKLIB
PARMLEN  DS    H                   PARM STRING LENGTH
PARM     DS    CL200               ACTUAL PARM AREA
         DC    XL2'00'             PADS FOR SHIFTING PARM
         DS    0F                  ALIGNMENT FOR BLDL
PGMBLDL  DC    AL2(1,72)           BLDL NAME COUNT, LIST LENGTH
PGMNAME  DC    CL8' '              PROGRAM NAME
         DS    CL64                BLDL RETURN AREA
         IKJTCB
         END
