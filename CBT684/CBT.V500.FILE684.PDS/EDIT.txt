         MACRO
&LABEL   EDIT  &TO,&FROM,&PIC,                                         X
               &WRKA=CWADOUBL,&WRKB=CWATEMP,&WRKC=CWAEDIT
         GBLA  &EDITCTR
         GBLA  &RPMEDIT            EDIT MACRO EXTERNAL REQUIREMENT FLAG
         GBLA  &RPDOUBL            EDIT MACRO EXTERNAL REQUIREMENT FLAG
         GBLA  &RPMTEMP            EDIT MACRO EXTERNAL REQUIREMENT FLAG
         LCLA  &SIZE,&LENGTH,&LEN,&LEN1,&LEN2,&LEN3
.*
         LCLA  &PTR,&NI,&ZE,&AS,&PL,&MI,&SI,&DO,&SUM,&$,&POS
         LCLA  &DIGITS,&MASKSIZ,&CTR,&NEWSIZ,&FROML,&OFFSET
         LCLA  &FLEN,&CO
         LCLC  &FILL,&C,&B,&DRIFT,&MASK,&X(24)
         LCLC  &FLOC
&SIZE    SETA  K'&PIC              GET PICTURE SIZE+2.
.*
.*       CHECK FOR HEX FORMATTING.
         AIF   (&SIZE LT 4).PICTURE
         AIF   ('&PIC'(1,4) NE 'HEX(').PICTURE
.**********************************************************************
.*
.*       HEXADECIMAL FORMATING
.*
.**********************************************************************
&EDITCTR SETA  &EDITCTR+1
&LENGTH  SETA  &SIZE-5
&C       SETC  '&PIC'(5,&LENGTH)
&LEN     SETA  &C
&LEN1    SETA  2*&LEN
&LEN2    SETA  1+&LEN
&LEN3    SETA  2*&LEN+1
&LABEL   MVC   &WRKA.(1),&TO+&LEN1
         UNPK  &TO.(&LEN3),&FROM.(&LEN2)
         MVC   &TO+&LEN1.(1),&WRKA
         TR    &TO.(&LEN1),&WRKC-240 .TRANSLATE TO CHARACTERS.
&RPMEDIT SETA  1                   SET EXTERNAL DATA REQUIRED.
         MEXIT
.*
.**********************************************************************
.*
.*       PICTURE CHARACTER FORMATING
.*
.**********************************************************************
.PICTURE ANOP
.********
.*       CONSTRUCT EDIT MASK
.********
&RPDOUBL SETA  1                   SET EXTERNAL DATA REQUIRED.
&RPMTEMP SETA  1                   SET EXTERNAL DATA REQUIRED.
&FILL    SETC  '40'                DEFAULT FILL CHARACTER.
&PTR     SETA  2                   SET DEFAULT SCAN POINTER.
&C       SETC  '&PIC        '
         AIF   ('&C'(1,1) EQ '''').LOOP  BR IF LEADING APOST.
         AIF   ('&C'(1,4) NE 'PIC''').PIC1
&PTR     SETA  5                   SET NEW SCAN START.
         AGO   .LOOP
.PIC1    AIF   ('&C'(1,8) NE 'PICTURE''').ERROR3
&PTR     SETA  9                   SET NEW SCAN START.
.LOOP    ANOP
.*
.*       ISOLATE PICTURE CHARACTERS.
&C       SETC  '&PIC'(&PTR,1)
         AIF   ('&C' EQ '9').CNINE
         AIF   ('&C' EQ 'Z').CZERO
         AIF   ('&C' EQ '*').CASTER
         AIF   ('&C' EQ ',').CCOMMA
         AIF   ('&C' EQ '.').CPERIOD
         AIF   ('&C' EQ '/').CSLASH
         AIF   ('&C' EQ ':').CCOLON
         AIF   ('&C' EQ '_').CUNDL
         AIF   ('&C' EQ 'B').CBLANK
         AIF   ('&C' EQ 'H').CHYPHEN
         AIF   ('&C' EQ '$').CDOLLAR
         AIF   ('&C' EQ 'S').CSIGN
         AIF   ('&C' EQ '+').CPLUS
         AIF   ('&C' EQ '-').CMINUS
         AIF   ('&C' EQ 'C').CREDITC
         AIF   ('&C' EQ 'R').CREDITR
         AIF   ('&C' EQ 'D').CDEBITD
         AIF   ('&C' EQ 'B').CDEBITB
         AIF   ('&C' EQ '''').END
         AGO   .ERROR0
.*                                 DIGIT SELECT CHAR '9'
.CNINE   ANOP
&NI      SETA  &NI+1               SET OCCURANCE OF '9'
         AGO   .ADD20
.*                                 DIGIT SELECT CHAR 'Z'
.CZERO   AIF   ((&NI GT 0) OR (&AS GT 0)).ERROR1
&ZE      SETA  &ZE+1
         AGO   .ADD
.*                                 DIGIT SELECT CHAR '*'
.CASTER  AIF   ((&NI GT 0) OR (&ZE GT 0)).ERROR1
&AS      SETA  &AS+1
&FILL    SETC  '5C'                RESET FILL CHARACTER.
         AGO   .ADD
.*                                 DIGIT SELECT CHAR '*'
.CUNDL   AIF   ((&NI GT 0) OR (&ZE GT 0)).ERROR1
&AS      SETA  &AS+1
&FILL    SETC  '6D'                RESET FILL CHARACTER.
         AGO   .ADD
.*                                 INSERTION CHAR ','
.CCOMMA  ANOP
&B       SETC  '6B'
         AGO   .NEXT
.*                                 INSERTION CHAR '.'
.CPERIOD ANOP
&B       SETC  '4B'
         AGO   .NEXT
.*                                 INSERTION CHAR ':'
.CCOLON  ANOP
&B       SETC  '7A'
         AGO   .NEXT
.*                                 INSERTION CHAR '/'
.CSLASH  ANOP
&B       SETC  '61'
         AGO   .NEXT
.*                                 INSERTION CHAR 'B'
.CBLANK  ANOP
&B       SETC  '40'
         AGO   .NEXT
.*                                 INSERTION CHAR 'H'
.CHYPHEN ANOP
&B       SETC  '60'
         AGO   .NEXT
.*                                 INSERTION CHAR 'CR'
.CREDITC ANOP
&B       SETC  'C3'
         AGO   .NEXT
.CREDITR ANOP
&B       SETC  'D9'
         AGO   .NEXT
.*                                 INSERTION CHAR 'DB'
.CDEBITD ANOP
&B       SETC  'C4'
         AGO   .NEXT
.CDEBITB ANOP
&B       SETC  'C2'
         AGO   .NEXT
.*                                 DRIFTING/INSERTION CHAR '$'
.CDOLLAR ANOP
&SUM     SETA  &NI+&ZE+&AS+&PL+&MI+&SI
         AIF   (&SUM NE 0).ERROR1
         AIF   ('&PIC'(&PTR+1,1) EQ '&C').DRIFT
         AIF   ('&PIC'(&PTR+2,1) EQ '&C').DRIFT
         AIF   (&DO GT 0).DRIFT
&B       SETC  '5B'
&$       SETA  &MASKSIZ+1          SAVE FIXED POSITION OF DOLLAR.
         AGO   .NEXT
.*                                 DRIFTING CHAR '+'
.CPLUS   ANOP
&PL      SETA  &PL+1
&SUM     SETA  &NI+&ZE+&AS+&MI+&SI+&DO
.TEST    AIF   (&SUM NE 0).ERROR1
         AGO   .DRIFT1
.*                                 DRIFTING CHAR '-'
.CMINUS  ANOP
         AIF   ((&MI EQ 0) AND ((&NI+&ZE) GT 0)).CMINUSS
&MI      SETA  &MI+1
&SUM     SETA  &NI+&ZE+&AS+&PL+&SI+&DO
         AGO   .TEST
.CMINUSS ANOP
         AIF   ((&AS+&PL+&SI) GT 0).ERROR1
&B       SETC  '60'                STATIC USE OF '-'
         AGO   .NEXT               (I.E.  EDIT ...,'999-')
.*                                 DRIFTING CHAR 'S'
.CSIGN   ANOP
&SI      SETA  &SI+1
&SUM     SETA  &NI+&ZE+&AS+&PL+&MI+&DO
         AGO   .TEST
.DRIFT   ANOP
&DO      SETA  &DO+1
.DRIFT1  ANOP
&DRIFT   SETC  '&C'                SAVE DRIFTING CHAR TYPE.
&B       SETC  '40'                RESERVE SPACE FOR DRIFTING CHAR.
         AIF   (&PL+&MI+&SI+&DO EQ 1).NEXT
.ADD     ANOP
&POS     SETA  &MASKSIZ+1          SAVE DIGIT SELECT POSITION.
.ADD20   ANOP
&B       SETC  '20'                ADD DIGIT SELECTOR.
&DIGITS  SETA  &DIGITS+1           COUNT DIGIT SELECTORS.
.NEXT    ANOP
&MASKSIZ SETA  &MASKSIZ+1          INCREMENT LITERAL BYTE COUNT.
&X(&MASKSIZ) SETC '&B'              ADD BYTE TO MASK.
&PTR     SETA &PTR+1               INCREMENT PICTURE SCAN POINTER.
         AGO   .LOOP
.********
.*       CONSTRUCT INSTRUCTION SEQUENCE
.********
.END     ANOP
&B       SETC  '&LABEL'
&FLOC    SETC  '&FROM'             SET DEFAULT SOURCE LOCATION.
         AIF   (('&FROM'(1,1) EQ '(') AND                              X
               ('&FROM'(K'&FROM,1) EQ ')')).REGISTR
&C       SETC  T'&FROM
         MNOTE *,'  C IS &C TYPE '
&FLEN    SETA  L'&FROM             SET DEFAULT SOURCE LENGTH.
.*                                 INPUT AREA TYPE CHECK.
         AIF   ('&C' EQ 'P').PACKED
         AIF   ('&C' EQ 'Z').ZONED
         AIF   ('&C' EQ 'H').BINARY
         AIF   ('&C' EQ 'F').BINARY
         AIF   ('&C' EQ 'X').BINARY
         AIF   ('&C' EQ 'Y').BINARY
         AIF   ('&C' EQ 'A').BINARY
         AIF   ('&C' EQ 'R').BINARY
         AIF   ('&C' EQ 'G').BINARY
         AIF   ('&C' EQ 'B').BINARY
         AGO   .ERROR2
.REGISTR ANOP
&FLOC    SETC  '&FROM'(2,K'&FROM-2)
&B       CVD   &FLOC,&WRKA         .CONVERT DATA FOR EDIT.
         AGO   .BINARY2
.BINARY  AIF   (&FLEN EQ 4).FULLWD
         AIF   (&FLEN EQ 2).HALFWD
&B       SR    14,14               .CLEAR A WORK REGISTER.
         AIF   (&FLEN EQ 1).BYTE
         ICM   14,B'0111',&FLOC    .GET INPUT DATA FIELD.
         AGO   .BINARY1
.FULLWD  ANOP
&B       L     14,&FROM            .GET INPUT DATA FIELD.
         AGO   .BINARY1
.HALFWD  ANOP
&B       LH    14,&FROM            .GET INPUT DATA FIELD.
         AGO   .BINARY1
.BYTE    IC    14,&FROM            .GET INPUT DATA FIELD.
.BINARY1 CVD   14,&WRKA            .CONVERT DATA FOR EDIT.
         AGO   .BINARY2
.ZONED   ANOP
&B       PACK  &WRKA,&FROM         .CONVERT DATA FOR EDIT.
.BINARY2 ANOP
&FLEN    SETA  8                   SET WORK AREA LENGTH.
&FLOC    SETC  '&WRKA'             SET WORK AREA LOCATION.
&B       SETC  ''
.PACKED  ANOP
&SUM     SETA &ZE+&AS+&SI+&PL+&DO+&MI
         AIF   (&SUM EQ 0).NOFILL
&X(&POS) SETC   '21'                START SIGNIFICANCE.
.NOFILL  ANOP
&CTR     SETA 24
.LOOP1   ANOP
&MASK    SETC '&MASK'.'&X(25-&CTR)'
&CTR     SETA &CTR-1
         AIF   (&CTR NE 0).LOOP1
         AIF   (&SUM NE 0).CASE2
.*                                  CASE 1: NO FILL CHARACTERS,
.*                                          NO DRIFTING CHARACTERS.
.CASE1   ANOP
&CTR     SETA  3                   SET DEFAULT MASK PREFIX SIZE.
&C       SETC  '20'                USE EXTRA DIGIT SELECTOR IF ODD.
         AIF   (&DIGITS/2*2 NE &DIGITS).ODD1
&CTR     SETA  2                   SET NEW PREFIX SIZE.
&C       SETC  ''
.ODD1    ANOP
         AIF   ((&FLEN*2-1) GT &DIGITS).USESRC1
&B       ZAP   &WRKA,&FROM         SET UP TEMPORARY DECIMAL FIELD.
&FLEN    SETA  8                   SET WORK AREA LENGTH.
&FLOC    SETC  '&WRKA'             SET WORK AREA LOCATION.
&B       SETC  ''
.USESRC1 ANOP
&MASK    SETC  '&FILL&C.21&MASK'   ADD PREFIX TO MASK.
&NEWSIZ  SETA  &MASKSIZ+&CTR       ADD PREFIX SIZE TO MASK SIZE.
&OFFSET  SETA  &FLEN-(&DIGITS+3)/2
&B       MVC   &WRKB.(&NEWSIZ),=X'&MASK' SET UP EDIT MASK.
         ED    &WRKB.(&NEWSIZ),&FLOC+&OFFSET EDIT THE PICTURE.
         MVC   &TO.(&MASKSIZ),&WRKB+&CTR .MOVE PICTURE TO USER AREA.
         AIF   (&$ NE 0).ADD$
         MEXIT
.*                                 CASE 2: FILL CHARACTERS,
.*                                          NO DRIFTING CHARACTERS.
.CASE2   ANOP
&CTR     SETA  1                   SET DEFAULT MASK PREFIX SIZE.
&C       SETC  ''                  USE EXTRA DIGIT SELECTOR IF EVEN.
         AIF   (&DIGITS/2*2 NE &DIGITS).ODD2
&CTR     SETA  2                   SET NEW PREFIX SIZE.
&C       SETC  '20'
.ODD2    ANOP
         AIF   ((&FLEN*2-1) GE &DIGITS).USESRC2
&B       ZAP   &WRKA,&FROM         SET UP TEMPORARY DECIMAL FIELD.
&FLEN    SETA  8                   SET WORK AREA LENGTH.
&FLOC    SETC  '&WRKA'             SET WORK AREA LOCATION.
&B       SETC  ''
.USESRC2 ANOP
         AIF   (&PL+&MI+&SI+&DO GT 0).CASE3
&MASK    SETC  '&FILL&C&MASK'      ADD PREFIX TO MASK.
&NEWSIZ  SETA  &MASKSIZ+&CTR       ADD PREFIX SIZE TO MASK SIZE.
&OFFSET  SETA  &FLEN-(&DIGITS+2)/2
&B       MVC   &WRKB.(&NEWSIZ),=X'&MASK' .SET UP EDIT MASK.
         ED    &WRKB.(&NEWSIZ),&FLOC+&OFFSET     .EDIT THE PICTURE.
         MVC   &TO.(&MASKSIZ),&WRKB+&CTR .MOVE PIC TO USER AREA.
         AIF   (&$ NE 0).ADD$
         MEXIT
.*                                 CASE 3: DRIFTING CHARACTERS.
.*
.CASE3   ANOP
&MASK    SETC  '40&C&MASK.60'      ADD PREFIX,SUFFIX TO MASK.
&POS     SETA  &POS+&CTR           ADJUST POS ACCORDINGLY.
&NEWSIZ  SETA  &MASKSIZ+&CTR+1     ADD PREFIX,SUFFIX SIZE TO MASK SIZE.
&OFFSET  SETA  &FLEN-(&DIGITS+2)/2
&B       MVC   &WRKB.(&NEWSIZ),=X'&MASK' . SET UP EDIT MASK.
         LA    1,&WRKB+&POS        .SET REG 1 IF SIGNIFICANCE FORCED.
         EDMK  &WRKB.(&NEWSIZ),&FLOC+&OFFSET  .EDIT THE PICTURE.
         BCTR  1,0                 .POINT TO THE RIGHTMOST BLANK.
&NEWSIZ  SETA  &MASKSIZ+&CTR       SET 'SIGN' POSITION.
         AIF   ('&DRIFT' EQ '+').POSONLY
         AIF   ('&DRIFT' EQ '-').NEG
         AIF   ('&DRIFT' EQ 'S').POS
         MVI   0(1),C'$'           INSERT DOLLAR SIGN.
         AGO   .MOVE
.NEG     ANOP
&PTR     SETA  &MASKSIZ+&CTR
         MVC   0(1,1),&WRKB+&PTR    .INSERT MINUS OR BLANK.
         AGO   .MOVE
.POSONLY CLI   &WRKB+&NEWSIZ,C'-'  FIELD NEGATIVE ?
         JE    *+8                 BR IF YES.
         MVI   0(1),C'+'           INSERT PLUS SIGN.
         AGO   .MOVE
.POS     CLI   &WRKB+&NEWSIZ,C'-'  FIELD NEGATIVE ?
         JE    *+12                BR IF YES.
         MVI   0(1),C'+'           INSERT PLUS SIGN.
         J     *+8                 CONTINUE PROCESSING.
         MVI   0(1),C'-'           INSERT MINUS SIGN.
.MOVE    MVC   &TO.(&MASKSIZ),&WRKB+&CTR  .MOVE PIC TO USER AREA.
         AIF   (&$ NE 0).ADD$
         MEXIT
.ADD$    ANOP
&$       SETA  &$-1                GET OFFSET POSITION.
         MVI   &TO+&$,C'$'         INSERT DOLLAR SIGN.
         MEXIT
.*
.ERROR0  MNOTE 2,'** ERROR- ''&C'' IS AN INVALID PICTURE CHARACTER'
         SPACE 2
         MEXIT
.ERROR1  MNOTE 2,'** ERROR- INVALID USE OF ''&C'' IN PICTURE'
         SPACE 2
         MEXIT
.ERROR2  MNOTE 2,'** ERROR- INPUT DATA SYMBOL MUST HAVE Z,P,H,F,Y,A,B, X
               OR X TYPE ATTRIBUTE'
         SPACE 2
         MEXIT
.ERROR3  MNOTE 2,'** ERROR- SYNTAX ERROR IN 3RD OPERAND'
         MNOTE *,'          SHOULD BE SPECIFIED AS:'
         MNOTE *,'          EDIT OUT,IN,PIC''...'''
         SPACE 2
         MEND
