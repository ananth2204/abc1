//CHSYASM  JOB   (0227,CHSY),'FOCHTMAN - SYSTEMS',
//         CLASS=S,NOTIFY=CHSY227,MSGCLASS=X
//ASM      EXEC  PGM=ASMA90,
//         PARM='NORLD,BATCH,NODECK,OBJECT'
//SYSPRINT DD    SYSOUT=*
//SYSLIB   DD    DSN=SYS1.MACLIB,DISP=SHR
//         DD    DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD    UNIT=VIO,SPACE=(CYL,(3,1))
//SYSUT2   DD    UNIT=VIO,SPACE=(CYL,(3,1))
//SYSUT3   DD    UNIT=VIO,SPACE=(CYL,(3,1))
//SYSLIN DD      UNIT=VIO,SPACE=(TRK,(3,1)),DISP=(,PASS),
//         RECFM=FB,LRECL=80,BLKSIZE=0
//SYSIN    DD    *
PDSUPDTE TITLE 'GLOBAL PDS UPDATE PROGRAM --- MAIN MODULE'
***********************************************************************
*                                                                     *
*  TITLE: PDSUPDTE                                                    *
*                                                                     *
*  FUNCTION: PROVIDE A FACILITY FOR GLOBALLY UPDATING ALL MEMBERS     *
*            OF A PARTITIONED DATA SET.                               *
*                                                                     *
*  INPUT: DDNAME=SYSIN A SERIES OF CONTROL STATEMENTS CONTAINING      *
*         THE STRINGS TO BE REPLACED AND THE REPLACEMENT STRINGS      *
*         IN THE FORMAT  OLDSTRING:NEWSTRING:                         *
*         ALL CONTROL STATEMENTS MUST START IN COLUMN 1 AND MAY NOT   *
*         BE CONTINUED. AS MANY CONTROL STATEMENTS AS DESIRED MAY BE  *
*         SUPPLIED.                                                   *
*                                                                     *
*  OUTPUT: DDNAME=SYSPRINT, QSAM SUPPORTED DEVICE, RECFM=FBA,         *
*          LRECL=133. BLKSIZE MAY BE SUPPLIED OR ALLOWED TO DEFAULT   *
*          TO 3059.                                                   *
*                                                                     *
*  PDS DDNAMES: DDNAME MUST START WITH THE CHARACTER "@". AGAIN, AS   *
*               MANY AS DESIRED MAY BE SUPPLIED.                      *
*                                                                     *
*  OUTPUT LISTING: THE FIRST PAGE CONTAINS A LISTING OF THE STRING    *
*                  REPLACEMENTS TO BE PERFORMED. IF YOU SUPPLIED A    *
*                  STRING REPLACEMENT AND IT DOES NOT APPEAR HERE,    *
*                  CHECK THE APPROPRIATE CONTROL CARD FOR ERRORS.     *
*                  THE SECOND PAGE CONTAINS A LISTING OF THE DDNAMES  *
*                  AND DATASET NAMES TO BE UPDATED.                   *
*                  THE THIRD PAGE IS THE BEGINNING OF THE REPLACE     *
*                  LISTING. EACH MODIFIED RECORD IS DISPLAYED,        *
*                  BEFORE ANY REPLACEMENTS AND AFTER ALL REPLACE-     *
*                  MENTS. THE FIRST ITEM ON THE LINE IS THE DDNAME,   *
*                  FOLLOWED BY THE MEMBER NAME AND THE UNMODIFIED     *
*                  RECORD. THE SECOND LINE CONTAINS ONLY THE MODIFIED *
*                  RECORD.                                            *
*                                                                     *
*  PARMS: A PARM OF "CHECK" WILL INHIBIT PDS REWRITING, SO THAT THE   *
*         RESULTS OF A RUN MAY BE EXAMINED WITHOUT ACTUALLY ALTERING  *
*         THE PDS. UNLESS A PARM OF "ALTER" IS SUPPLIED, THIS IS THE  *
*         DEFAULT CONDITION.                                          *
*                                                                     *
*  ATTRIBUTES: NON-REENTRANT, NON-REUSABLE, PROBLEM STATE             *
*                                                                     *
*  EXTERNAL ROUTINES: DIRIO, BPAMIO, TIOT, CTLPARSE                   *
*                                                                     *
*  AUTHOR: RICK FOCHTMAN, SENIOR SYSTEMS PROGRAMMER                   *
*          TRAILER TRAIN COMPANY                                      *
*          300 SOUTH WACKER DRIVE,                                    *
*          CHICAGO, ILLINOIS                                          *
*          (312) 786-1200                                             *
*                                                                     *
***********************************************************************
         EJECT
*---                                                               ---*
*---     STANDARD NON-REENTRANT ENTRY LINKAGE                      ---*
*---                                                               ---*
PDSUPDTE CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'PDSUPDTE' CSECT EYE-POPPER
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         BAL   R2,92(,R15)         'BAL' AROUND NEW SAVE AREA
         USING *,R13               BASE REGISTER DEFINITION
         DS    18F                 AND NEW SAVE AREA
         XC    0(72,R2),0(R2)      CLEAR NEW SAVE AREA
         ST    R2,8(,R13)          STORE FORWARD AND
         ST    R13,4(,R2)          BACKWARD POINTERS
         LR    R13,R2              LOAD PGM BASE REGISTER
*---                                                               ---*
*---     OPEN THE SYSPRINT FILE AND CHECK THE ENTRY PARM. IF PARM  ---*
*---     IS NOT 'ALTER', INHIBIT REWRITE.                          ---*
*---                                                               ---*
         OPEN  (SYSPRINT,OUTPUT)   OPEN THE LISTING FILE
         L     R1,4(,R13)          LOAD BACK POINTER
         L     R1,24(,R1)          RESTORE REGISTER 1
         L     R1,0(,R1)           LOAD PARM STRING POINTER
         CLC   0(2,R1),=H'5'       PARM STRING 'CHECK' ??
         BNE   CHECK               NOPE
         CLC   2(5,R1),=C'ALTER'   HUH ??
         BNE   CHECK               NOPE ---
         OI    FLAG1,REWRITE       ALLOW WRITES
CHECK    DS    0H
*---                                                               ---*
*---     CALL CTLPARSE TO READ AND PROCESS CONTROL CARDS           ---*
*---                                                               ---*
         CALL  CTLPARSE            CALL CONTROL-STMT PARSER
         ST    R15,CTLLINK         AND STORE ADDRESS OF CTL-LIST
         LTR   R4,R15              NULL POINTER ??
         BZ    ENDJOB              YES; NOTHING TO CHANGE OR LIST
*---                                                               ---*
*---     LIST THE INPUT CONTROL INFORMATION                        ---*
*---                                                               ---*
         MVC   TITLE,TITLE1        DEFINE THE FIRST TITLE LINE
         MVI   FROM,C'1'
DSPL1    DS    0H
         SR    R5,R5               CLEAR A WORK REGISTER
         LA    R6,STRING1          POINT OUT THE FIRST STRING
         IC    R5,4(,R4)           INSERT LENGTH-1
         LA    R10,5(,R4)          POINT TO ACTUAL STRING
         EX    R5,MVC1             MOVE STRING TO LINE
         MVC   LINE,FROM
         BAL   R6,PRINTER          AND DISPLAY 'FROM' STRING
         MVI   FROM,C'0'
         MVC   STRING1,STRING2     CLEAR THAT AREA
         LA    R6,STRING2          POINT OUT 'TO' STRING
         LA    R10,1(R5,R10)       POINT TO LENGTH FIELD
         IC    R5,0(,R10)          INSERT 'TO' LENGTH
         LA    R10,1(,R10)         POINT TO ACTUAL STRING
         EX    R5,MVC1             MOVE TO PRINT AREA
         MVC   LINE,TO
         BAL   R6,PRINTER
         MVC   STRING2,STRING1     RE-BLANK THAT AREA
         L     R4,0(,R4)           LOAD NEXT  LINK POINTER
         LTR   R4,R4               NULL POINTER ??
         BNZ   DSPL1               NOPE ---
*---                                                               ---*
*---     LOCATE AND DISPLAY THE DDNAMES AND DSNAMES TO UPDATE      ---*
*---                                                               ---*
         MVC   TITLE,TITLE2
         MVI   DDXLINE,C'1'
TIOTLP1  DS    0H
         CALL  TIOT,DDNAME         FETCH A DDNAME
         LTR   R15,R15             NON-ZERO RETURN CODE ??
         BNZ   TIOTLP2             YES; ALL DONE
         CLI   DDNAME,C'@'         DOES DDNAME START WITH '@' ??
         BNE   TIOTLP1             NOPE; IGNORE IT
         MVC   DDCB+40(8),DDNAME   COPY DDNAME INTO DCB
         RDJFCB DDCB               READ IN THE JFCB
         MVC   DSNAME(44),JFCB     COPY DSNAME TO OUTPUT LINE
         MVC   LINE,DDXLINE
         BAL   R6,PRINTER          OUTPUT DDNAME, DSNAME
         MVI   DDXLINE,C'0'
         B     TIOTLP1             AND CONTINUE TIOT SCAN
TIOTLP2  DS    0H
*---                                                               ---*
*---     RESET THE TIOT SCANNER TO THE BEGINNING AGAIN             ---*
*---                                                               ---*
         CALL  TIOT,ZERO           RESET TIOT SCANNER
*---                                                               ---*
*---     OUTPUT THE REPLACEMENT TITLES AND START MAIN LOOP         ---*
*---                                                               ---*
         MVC   TITLE,TITLE3
         MVI   OLDLINE,C'1'
PDSLP0   DS    0H
         CALL  BPAMIO,(DDNAME,,CLOSE) CLOSE THE PDS
         CALL  TIOT,DDNAME         FETCH A DDNAME
         LTR   R15,R15             TIOT SCAN DONE ??
         BNZ   ALLDONE             YES; I'M ALL THROUGH
         CLI   DDNAME,C'@'         SPECIAL DDNAME ??
         BNE   PDSLP0              NOPE; TRY AGAIN
         MVC   DDN,DDNAME          COPY DDNAME TO OUTPUT LINE
*---                                                               ---*
*---     OPEN THE PDS FOR UPDAT I/O  (READ I/O IF NO ALTER)        ---*
*---                                                               ---*
         TM    FLAG1,REWRITE        IS ALTER FLAG SET ??
         BZ    PDSINPUT             NOPE; JUST OPEN FOR INPUT
         CALL  BPAMIO,(DDNAME,,OPEN) OPEN THE PDS
         B     PDSLP1               GO PROCESS THE PDS
PDSINPUT DS    0H
         CALL  BPAMIO,(DDNAME,,OPENIN) OPEN THE PDS
*---                                                               ---*
*---     READ A MEMBER NAME FROM THE DIRECTORY                     ---*
*---                                                               ---*
PDSLP1   DS    0H
         CALL  DIRIO,(DDNAME,MEMBER,TTRC)  READ A MEMBER NAME
         LTR   R15,R15             IS DIRECTORY DONE ??
         BNZ   PDSLP0              YES; TRY FOR ANOTHER DD CARD
*---                                                               ---*
*---     'POINT' TO THE MEMBER                                     ---*
*---                                                               ---*
PDSLP2   DS    0H
         CALL  BPAMIO,(TTRC,,FIND)
         LTR   R15,R15             MEMBER FOUND ??
         BNZ   PDSLP1              NOPE; SKIP IT
*---                                                               ---*
*---     AND START READING THE MEMBER                              ---*
*---                                                               ---*
PDSLP3   DS    0H
         CALL  BPAMIO,(LREC,,READ) READ A LOGICAL RECORD
         LTR   R15,R15             END-OF-FILE ON THIS MEMBER ??
         BNZ   PDSLP1              YES; SKIP TO NEXT MEMBER
*
* SCAN AND CHANGE CODE GOES HERE
*
DOSCAN   DS    0H
         MVC   NREC,LREC           COPY ACTUAL RECORD
         LA    R4,NREC             POINT TO SCAN FIELD START
SCAN1    DS    0H
         CLI   0(R4),C' ' BLANK IN THIS POSITION ??
         BNE   SCAN1A              NOPE ---
         LA    R3,NREC+70          POINT TO LAST USEFUL BYTE
         SR    R3,R4               COMPUTE LENGTH TO SCAN
         BNP   SCANEND             NOTHING LEFT TO SCAN ---
         EX    R3,BLKSCAN          SCAN FOR A NON-BLANK CHARACTER
         BC    8,SCANEND           NONE FOUND; ALL DONE
         LA    R4,0(,R1)           COPY NON-BLANK ADDRESS
SCAN1A   DS    0H
         LA    R3,NREC+70          POINT TO LAST POSSIBLE COLUMN
         SR    R3,R4               COMPUTE THE LENGTH TO SCAN
         BNP   SCANEND             COMPUTE THE LENGTH TO SCAN
         EX    R3,TRT1             AND SCAN FOR A DELIMITER
         BC    8,SCANEND           NO DELIMITER; ALL DONE HERE
         SR    R1,R4               COMPUTE LENGTH OF FOUND STRING
         BNZ   CONTSCAN            NONZERO LENGTH; CHECK STRING
         LA    R4,1(,R4)           BUMP TO NEXT CHAR
         B     SCAN1               AND TRY AGAIN
CONTSCAN DS    0H
         BCTR  R1,R0               DECREMENT FOR COMPARE
         N     R2,=A(255)          CLOBBER JUNK IN R2
         BAL   R9,CHKSUB           GO CHECK FOR A SUBSTITUTION
         B     SCAN2               NO SUBSTITUTION; CONTINUE SCAN
         B     SCAN1               ---
SCAN2    DS    0H
         LA    R4,2(R1,R4)         BUMP PAST THIS DELIMITER
         B     SCAN1               AND CONTINUE SCAN
SCANEND  DS    0H
         TM    FLAG1,CHANGE        DID THE RECORD CHANGE ??
         BZ    PDSLP3              NOPE ---
         CLC   LREC+70(2),=C'  '   BLANKS IN 71/72 ??
         BE    PROLD               YES
         MVC   LREC+81(13),=C'*** CHECK ***'
PROLD    DS    0H
         MVC   LINE,OLDLINE
         MVC   LREC+81(13),=CL13' '
         BAL   R6,PRINTER
         MVI   OLDLINE,C'0'
         CLC   NREC+70(2),=C'  '   BLANKS IN 71/72 ??
         BE    PRNEW               YES
         MVC   NREC+81(13),=C'*** CHECK ***'
PRNEW    DS    0H
         MVC   LINE,NEWLINE
         MVC   NREC+81(13),=CL13' '
         BAL   R6,PRINTER
         TM    FLAG1,REWRITE       IS REWRITING ALLOWED ??
         BZ    NREWRITE            NOPE ---
         CALL  BPAMIO,(NREC,,WRITE) YES; REWRITE THE RECORD
NREWRITE DS    0H
         NI    FLAG1,255-CHANGE    TURN OFF THE CHANGE FLAG
         B     PDSLP3
ENDJOB   DS    0H
ALLDONE  DS    0H
         L     R13,4(,R13)         LOAD SAVE AREA BACK POINTER
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,0               SET RETURN CODE ZERO
         MVI   12(R13),255         SET DONE FLAG
         BR    R14
         EJECT
CHKSUB   DS    0H
         L     R8,CTLLINK          LOAD CHAIN LINK POINTER
CHK0     DS    0H
         LTR   R8,R8               LINK FIELD ZERO ??
         BZR   R9                  YES; NOTHING LEFT TO CHECK
         CLM   R1,B'0001',4(R8)    LENGTH MATCH ??
         BNE   CHK1                NOPE; SKIP THIS LINK
         EX    R1,CHKCLC           ACTUAL STRING MATCH ??
         BNE   CHK1                NOPE ---
         LA    R5,NREC             POINT TO START OF RECORD
         LR    R6,R4               COPY SCAN CURSOR
         SR    R6,R5               COMPUTE A LENGTH
         BCTR  R6,R0
         EX    R6,MVSTR1           MOVE PRE-CURSOR STUFF
         LA    R11,WKSTR+1(R6)     POINT TO NEW-STRING LOCATION
         LA    R3,4(,R8)           POINT TO OLD STRING
         IC    R2,0(,R3)           INSERT OLD LENGTH
         LA    R3,2(R2,R3)         POINT TO NEW STRING
         LA    R4,1(R1,R4)         POINT TO REST OF GOOD STUFF
         IC    R1,0(,R3)           INSERT NEW STRING LENGTH
         EX    R1,MVSTR2           MOVE IN REPLACEMENT STRING
         LA    R11,1(R1,R11)       POINT TO REMAINDER STUFF
         LA    R1,NREC+70          POINT TO END OF GOOD STUFF
         SR    R1,R4               COMPUTE LENGTH
         BNP   CHKEND              ALL DONE
         BCTR  R1,R0               DECREMENT BY ONE
         EX    R1,MVSTR3           MOVE IT OVER
         MVC   NREC(71),WKSTR      COPY MODIFIED STRING BACK
CHKEND   DS    0H
         OI    FLAG1,CHANGE        SHOW THAT A CHANGE OCCURED
         C     R4,=A(NREC+72)      PAST END YET ??
         BH    SCANEND             YES; SCAN IS DONE
         B     4(,R9)              RETURN4
CHK1     DS    0H
         L     R8,0(,R8)           LOAD NEXT LINK POINTER
         B     CHK0
         EJECT
PRINTER  UPO   SYSPRINT,LINE,(TITLE)
         BR    R6
LINE     DC    CL133' '
TITLE    DC    CL133' '
         EJECT
*---                                                               ---*
*---     MISC. CONSTANTS, DATA AREAS AND 'EX'ECUTED INSTRUCTIONS   ---*
*---                                                               ---*
FLAG1    DC    X'00'               VARIOUS FLAG BITS
REWRITE  EQU   B'10000000'         ALLOW PDS UPDATE WRITES
BLKDLM   EQU   B'01000000'         DELIMITER WAS A BLANK (NOT USED)
CHANGE   EQU   B'00100000'         ACTUAL LINE HAS CHANGED
ZERO     EQU   0                   FOR GENERATING ZERO ADCONS IN CALLS
TTRC     DS    F                   TTRC OF CURRENT MEMBER
*---                                                               ---*
*---     KEYS FOR VARIOUS BPAMIO CALLS                             ---*
*---                                                               ---*
FIND     DC    F'0'                FIND A MEMBER
READ     DC    F'4'                RETURN A LOGICAL RECORD
WRITE    DC    F'8'                REPLACE A LOGICAL RECORD
CLOSE    DC    F'12'               CLOSE A PDS
OPEN     DC    F'16'               OPEN A PDS
OPENIN   DC    F'20'               OPEN A PDS
*---                                                               ---*
*---     DC'S FOR DISPLAY OF OLD AND NEW LOGICAL RECORDS           ---*
*---                                                               ---*
OLDLINE  DC    CL133'0'            FOR PRE-CHANGE RECORD DISPLAY
         ORG   OLDLINE+3
DDN      DS    CL8                 CURRENT MEMBER NAME
         ORG   OLDLINE+13
MEMBER   DS    CL80                BPAMIO INPUT RECORD AREA
         ORG   OLDLINE+24          BPAMIO INPUT RECORD AREA
LREC     DS    CL80                BPAMIO INPUT RECORD AREA
         ORG
NEWLINE  DC    CL133' '
         ORG   NEWLINE+24
NREC     DS    CL80                BPAMIO OUTPUT RECORD AREA
         ORG
*---                                                               ---*
*---     VARIOUS TITLE LINES                                       ---*
*---                                                               ---*
TITLE1   DC    CL133'1 THE FOLLOWING LIST DESCRIBES THE ACCEPTED INPUT X
               PARAMETERS:'
TITLE2   DC    CL133'1 THE FOLLOWING LIST DESCRIBES THE DDNAMES AND PDSX
               ''S TO BE EXAMINED/UPDATED:'
TITLE3   DC    CL133'1     SUMMARY OF MEMBER NAMES AND CHANGES'
*---                                                               ---*
*---     DC'S FOR DISPLAYING THE DDNAMES AND DSNAMES               ---*
*---                                                               ---*
DDXLINE  DC    CL133'0'
         ORG   DDXLINE+10
DDNAME   DS    CL8
         DS    CL5
DSNAME   DS    CL44
         ORG
*---                                                               ---*
*---     DC'S FOR DISPLAYING THE ACCEPTED CHANGE CONTROLS          ---*
*---                                                               ---*
FROM     DC    CL17'0 OLD STRING ==> '
STRING1  DC    CL116' '
TO       DC    CL17'  NEW STRING ==> '
STRING2  DC    CL116' '
*---                                                               ---*
*---     VARIOUS AND SUNDRY 'EX'ECUTED INSTRUCTIONS                ---*
*---                                                               ---*
MVC1     MVC   0(0,R6),0(R10)      COPY STRINGS TO PRINT LINES
MVSTR1   MVC   WKSTR(0),0(R5)
MVSTR2   MVC   0(0,R11),1(R3)
MVSTR3   MVC   0(0,R11),0(R4)
CHKCLC   CLC   0(0,R4),5(R8)
TRT1     TRT   0(0,R4),TRTAB
BLKSCAN  TRT   0(0,R4),TRBLANK
*---                                                               ---*
*---     TRANSLATE-AND-TEST TABLES USED FOR ALTERATION SCAN        ---*
*---                                                               ---*
TRBLANK  DC    256X'00'
         ORG   TRBLANK+C' '
         DC    X'01'
         ORG
TRTAB    DC    256X'00'            SCANNING TRT TABLE
         ORG   TRTAB+C'='
         DC    X'01'
         ORG   TRTAB+C''''
         DC    X'01'
         ORG   TRTAB+C','
         DC    X'01'
         ORG   TRTAB+C'('
         DC    X'01'
         ORG   TRTAB+C')'
         DC    X'01'
         ORG   TRTAB+C'/'
         DC    X'01'
         ORG   TRTAB+C' '
         DC    X'01'
         ORG
*---                                                               ---*
*---     ADDRESS OF LIST OF ACCEPTED ALTER CONTROLS                ---*
*---                                                               ---*
CTLLINK  DC    A(0)
*---                                                               ---*
*---     LISTING DATA CONTROL BLOCK (NOTE MISSING BLKSIZE)         ---*
*---                                                               ---*
SYSPRINT DCB   DSORG=PS,                                               X
               DDNAME=SYSPRINT,                                        X
               MACRF=PM,                                               X
               RECFM=FBA,                                              X
               LRECL=133,                                              X
               EXLST=PRTEXIT
*---                                                               ---*
*---     SYSPRINT DCB COMPLETION EXIT. FILL IN MISSING BLKSIZE.    ---*
*---                                                               ---*
PRTEXIT  DS    0F
         DC    X'85',AL3(PRTEXIT+4)
         NC    62(2,R1),62(R1)     IS BLKSIZE STILL ZERO ??
         BNZR  R14                 NOPE; RETURN TO O/C/E
         MVC   62(2,R1),=H'3059'   DEFAULT BLKSIZE
         BR    R14                 RETURN TO O/C/E
*---                                                               ---*
*---     DUMMY DCB, USED ONLY FOR READING IN JFCB'S                ---*
*---                                                               ---*
DDCB     DCB   DSORG=PS,DDNAME=XXXXXXXX,MACRF=E,EXLST=DDCBEXIT
*---                                                               ---*
*---     JFCB EXIT LIST FOR READING JFCB'S IN FOR DUMMY DCB        ---*
*---                                                               ---*
DDCBEXIT DS    0F
         DC    X'87',AL3(JFCB)
JFCB     DS    22D
         LTORG ,
WKSTR    DC    50CL7' '
         END
BPAMIO   TITLE 'PDSUPDTE GLOBAL PDS UPDATE PROGRAM --- BPAM I/O '
***********************************************************************
*                                                                     *
*  TITLE: BPAMIO                                                      *
*                                                                     *
*  FUNCTION: CENTRALIZED FACILITY FOR UPDATE-MODE BPAM I/O            *
*                                                                     *
*  INPUT: A THREE-WORD PARAMETER LIST, THE THIRD WORD DESCRIBING      *
*         THE FUNCTION TO BE PERFORMED. THE REMAINING TWO WORDS       *
*         ARE DEPENDENT UPON THE THIRD WORD.                          *
*                                                                     *
*         WORD 3 = 0 (FIND REQUEST):                                  *
*              WORD 1 => MEMBER TTRC, IN FORM ACQUIRED BY READING     *
*                        THE DIRECTORY WITHOUT BLDL. (NO CONCAT-      *
*                        ENATION NUMBER)                              *
*              RETURNS: ACTUAL RETURN CODE FROM 'POINT' MACRO         *
*                                                                     *
*         WORD 3 = 4 (READ REQUEST)                                   *
*              WORD 1 => LOCATION FOR OUTPUT LOGICAL RECORD           *
*              RETURNS: 0 FOR SUCCESSFUL COMPLETION                   *
*                       4 FOR END-OF-FILE ON MEMBER                   *
*                       8 FOR UNOPENED DCB                            *
*                                                                     *
*         WORD 3 = 8 (WRITE REQUEST)                                  *
*              WORD 1 => LOGICAL RECORD TO BE REWRITTEN               *
*              NO RETURN CODES                                        *
*                                                                     *
*         WORD 3 = 12 (CLOSE REQUEST)                                 *
*              WORDS 1 AND 2 NOT SIGNIFICANT                          *
*                                                                     *
*         WORD 3 = 16 (OPEN REQUEST)                                  *
*              WORD 1 => 8 CHARACTER DDNAME, RIGH PADDED WITH         *
*                        BLANKS AS NEEDED.                            *
*              WORD 2 IGNORED.                                        *
*                                                                     *
*  MACROS: GETBUF, FREEBUF, FREEPOOL, READ, WRITE, POINT,CHECK,DCB,   *
*          OPEN, CLOSE                                                *
*                                                                     *
*  ATTRIBUTES: NONREENTRANT, NONREUSABLE, PROBLEM PROGRAM SUBROUTINE  *
*                                                                     *
*  AUTHOR: RICK FOCHTMAN, SENIOR SYSTEMS PROGRAMMER                   *
*          TRAILER TRAIN COMPANY                                      *
*          300 SOUTH WACKER DRIVE,                                    *
*          CHICAGO, ILLINOIS                                          *
*          (312) 786-1200                                             *
***********************************************************************
         EJECT
*---                                                               ---*
*---     PERFORM STANDARD ENTRY LINKAGE                            ---*
*---                                                               ---*
BPAMIO   CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'BPAMIO'   EYE-POPPER
         STM   R14,R12,12(R13)     SAVE ENTRY REGS
         BAL   R2,92(,R15)         'BAL' AROUND
         USING *,R13               BASE REGISTER DEFINITION
         DS    18F                 AND NEW SAVE AREA
         XC    0(72,R2),0(R2)      CLEAR NEW SAVE AREA
         ST    R13,4(,R2)          STORE BACKWARD AND
         ST    R2,8(,R13)          FORWARD POINTERS
         LR    R13,R2              AND LOAD PGM BASE
*---                                                               ---*
*---     LOAD PARMS AND BRANCH TO APPROPRIATE SUBROUTINE           ---*
*---                                                               ---*
         LM    R2,R4,0(R1)         LOAD PARM POINTERS
         L     R4,0(,R4)           LOAD FUNCTION IDENTIFIER
         B     *+4(R4)             GO TO INDICATED CODE
         B     FIND                FIND A MEMBER
         B     READ                RETURN A LOGICAL RECORD
         B     WRITE               REPLACE A LOGICAL RECORD
         B     CLOSE               CLOSE A PDS
         B     OPEN                OPEN A PDS FOR UPDAT
         B     OPENIN              OPEN A PDS FOR INPUT
*---                                                               ---*
*---     FIND REQUEST                                              ---*
*---           R2 ==> MEMBER TTRC                                  ---*
*---           RETURNS 'POINT' RETURN CODE                         ---*
*---                                                               ---*
FIND     DS    0H
         NI    REWRITE,255-EODAD   TURN OFF EODAD FLAG
         POINT PDS,(2)             POINT TO PDS MEMBER
         B     RET                 AND RETURN TO CALLER
*---                                                               ---*
*---     OPEN REQUEST                                              ---*
*---           R2 ==> DDNAME                                       ---*
*---           RETURNS: 0 = SUCCESSFUL OPEN                        ---*
*---                    4 = DCB OPEN; NEEDS CLOSE CALL             ---*
*---                                                               ---*
OPEN     DS    0H
         TM    PDS+48,X'10'        IS DCB OPEN ??
         BNZ   RC4                 YES; REQUEST A CLOSE CALL
         MVC   PDS+40(8),0(R2)     MOVE IN THE DDNAME
         MVC   DDN,0(R2)           AND COPY TO SAVE FIELD
         OPEN  (PDS,UPDAT)         OPEN THE PDS FOR UPDAT
         GETBUF PDS,(5)            LOCATE THE BUFFER
         ST    R5,BUFFER           AND SAVE ITS ADDRESS
         XC    REWRITE,REWRITE     CLEAR UPDAT FLAG
         B     RC0                 AND RETURN, CODE 0
*---                                                               ---*
*---     OPEN REQUEST                                              ---*
*---           R2 ==> DDNAME                                       ---*
*---           RETURNS: 0 = SUCCESSFUL OPEN                        ---*
*---                    4 = DCB OPEN; NEEDS CLOSE CALL             ---*
*---                                                               ---*
OPENIN   DS    0H
         TM    PDS+48,X'10'        IS DCB OPEN ??
         BNZ   RC4                 YES; REQUEST A CLOSE CALL
         MVC   PDS+40(8),0(R2)     MOVE IN THE DDNAME
         MVC   DDN,0(R2)           AND COPY TO SAVE FIELD
         OPEN  (PDS,INPUT)         OPEN THE PDS FOR INPUT
         GETBUF PDS,(5)            LOCATE THE BUFFER
         ST    R5,BUFFER           AND SAVE ITS ADDRESS
         XC    REWRITE,REWRITE     CLEAR UPDAT FLAG
         B     RC0                 AND RETURN, CODE 0
*---                                                               ---*
*---     CLOSE REQUEST. PARAMETERS IGNORED.                        ---*
*---                                                               ---*
CLOSE    DS    0H
         TM    PDS+48,X'10'        IS DCB OPEN ??
         BZ    RC0                 NOPE; NOTHING TO DO
         L     R4,BUFFER           LOAD BUFFER ADDRESS
         FREEBUF PDS,(4)           RELEASE THE BUFFER
         CLOSE (PDS)               CLOSE THE DCB
         FREEPOOL PDS              RELEASE THE BUFFER POOL
         B     RC0                 AND RETURN, CODE = 0
*---                                                               ---*
*---     WRITE REQUEST.                                            ---*
*---           R2 ==> LOGICAL RECORD TO BE REWRITTEN               ---*
*---                                                               ---*
*---     A WRITE REQUEST UPDATES THE RECORD IN THE IN-CORE         ---*
*---     BLOCK AND SETS A FLAG. ANY ACTUAL I/O IS DONE BY THE      ---*
*---     READ SUBROUTINE.                                          ---*
*---                                                               ---*
WRITE    DS    0H
         L     R5,CURS             LOAD CURSOR ADDRESS
         MVC   0(80,R5),0(R2)      MOVE RECORD INTO BLOCK
         OI    REWRITE,NEEDED      SHOW A REWRITE NEEDED
         B     RC0                 RETURN, CODE = 0
*---                                                               ---*
*---     READ REQUEST                                              ---*
*---           R2 ==> LOCATION TO PLACE THE LOGICAL RECORD         ---*
*---           RETURNS: 0 FOR SUCCESSFUL COMPLETION                ---*
*---                    4 FOR END-OF-FILE ON THIS MEMBER           ---*
*---                    8 FOR DCB NOT OPENED                       ---*
*---                                                               ---*
*---     IF REWRITE FLAG IS ON, REWRITE THE PREVIOUS BLOCK FIRST   ---*
*---                                                               ---*
READ     DS    0H
         TM    PDS+48,X'10'        IS PDS OPEN ??
         BZ    RC8                 NOPE --- PROBLEMS
         TM    REWRITE,EODAD       END-OF-FILE ALREADY HIT ??
         BNZ   RC4                 YES ---
         L     R4,CURS             LOAD DEBLOCKING CURSOR
         LA    R4,80(,R4)          POINT TO NEXT LOGICAL RECORD
         C     R4,BUFEND           PAST END OF BUFFER ??
         BL    NOIO                NOPE; STILL OK
         TM    REWRITE,NEEDED      IS A REWRITE NEEDED ??
         BZ    JUSTREAD            NOPE ---
         L     R4,BUFFER           LOAD BUFFER POINTER WORD
         WRITE DECB,SF,,(4),MF=E   YES; DO THAT NOW
         CHECK DECB                WAIT FOR COMPLETION
         NI    REWRITE,255-NEEDED  TURN OFF REWRITE FLAG
         MVC   CURS,BUFFER         RESET THE CURSOR
JUSTREAD DS    0H
         L     R4,BUFFER           LOAD BUFFER ADDRESS
         READ  DECB,SF,,(4),MF=E   READ A BLOCK
         CHECK DECB                WAIT FOR COMPLETION
         ST    R4,CURS             STORE NEW CURSOR ADDRESS
         LH    R5,PDS+62           LOAD PDS BLKSIZE
         L     R6,DECB+16          LOAD IOB ADDRESS
         LH    R6,14(,R6)          LOAD RESIDUAL LENGTH
         SR    R5,R6               COMPUTE ACTUAL BLOCK LENGTH
         BCTR  R5,R0               DECREMENT BY ONE
         A     R5,CURS             POINT TO END OF BLOCK
         ST    R5,BUFEND           AND SAVE THAT ADDRESS
         MVC   0(80,R2),0(R4)      RETURN THE FIRST LOGICAL RECORD
         B     RC0                 RETURN, CODE = 0
NOIO     DS    0H
         MVC   0(80,R2),0(R4)      RETURN HIM A RECORD
         ST    R4,CURS             SAVE CURSOR ADDRESS
         B     RC0                 RETURN, CODE = 0
*---                                                               ---*
*---     SET CODE ZERO FOR RETURN                                  ---*
*---                                                               ---*
RC0      DS    0H
         LA    R15,0               SET RETURN CODE = 0
         B     RET                 AND RETURN
*---                                                               ---*
*---     SET CODE FOUR FOR RETURN                                  ---*
*---                                                               ---*
RC4      DS    0H
         LA    R15,4               SET RETURN CODE 4
         B     RET                 AND RETURN
*---                                                               ---*
*---     SET CODE 8 FOR RETURN                                     ---*
*---                                                               ---*
RC8      DS    0H
         LA    R15,8               SET RETURN CODE = 8
*---                                                               ---*
*---     RETURN, LEAVING R15 UNCHANGED                             ---*
*---                                                               ---*
RET      DS    0H
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         L     R14,12(,R13)        LOAD RETURN ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         MVI   12(R13),255         SET 'DONE' FLAG
         BR    R14                 AND RETURN
*---                                                               ---*
*---     EODAD ROUTINE FOR PDS INPUT ACCESS                        ---*
*---                                                               ---*
PDSEOD   DS    0H
         OI    REWRITE,EODAD       TURN ON EOF FLAG
         B     RC4                 RETURN, CODE = 4
         EJECT
*---                                                               ---*
*---     VARIOUS AND SUNDRY CONSTANTS AND DATA AREAS               ---*
*---                                                               ---*
DDN      DC    CL8' '              CURRENT PDS DDNAME
CURS     DC    A(0)                DEBLOCKING CURSOR
BUFFER   DC    A(0)                BUFFER ADDRESS
BUFEND   DC    A(0)                END OF BUFFER ADDRESS
REWRITE  DC    X'00'               REWRITE FLAG
EODAD    EQU   X'80'               END-OF-FILE FLAG
NEEDED   EQU   X'40'               REWRITE-NEEDED FLAG
         READ  DECB,SF,PDS,,MF=L   BPAM DECB
PDS      DCB   DSORG=PO,                                               X
               DDNAME=XXXXXXXX,                                        X
               MACRF=(R,W),                                            X
               EODAD=PDSEOD,                                           X
               BUFNO=1
         END
CTLPARSE TITLE 'PDS GLOBAL UPDATER --- CONTROL CARD SCAN'
***********************************************************************
*                                                                     *
*  TITLE: CTLPARSE                                                    *
*                                                                     *
*   FUNCTION: SCAN AND PARSE THE CONTROL STATEMENTS FOR THE GLOBAL    *
*             PDS UPDATE PROGRAM.                                     *
*                                                                     *
*   PARAMETERS: NONE                                                  *
*                                                                     *
*   RETURNS: PARAMETERS, IN SPECIAL SINGLY-LINKED LIST, IN R15        *
*            THE ACTUAL RETURN VALUE IS THE ADDRESS OF THE FIRST      *
*            LIST ELEMENT.                                            *
*                                                                     *
*   EXTERNAL ROUTINES: NONE                                           *
*                                                                     *
*   EXTERNAL FILES: SYSIN. QSAM SUPPORTED; BLKSIZE MUST BE MULTIPLE   *
*                   OF 80. DEFAULTS TO 80.                            *
*                                                                     *
*   ATTRIBUTES: NON-REENTRANT, NON-REUSABLE PROBLEM PROGRAM           *
*                                                                     *
*   AUTHOR: RICK FOCHTMAN, SENIOR SYSTEMS PROGRAMMER                  *
*           TRAILER TRAIN COMPANY                                     *
*           300 SOUTH WACKER DRIVE                                    *
*           CHICAGO, ILLINOIS                                         *
*           (312) 786-1200                                            *
*                                                                     *
***********************************************************************
         EJECT
*---                                                               ---*
*---     PERFORM STANDARD ENTRY LINKAGE STUFF. BASE IS R13         ---*
*---                                                               ---*
CTLPARSE CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'CTLPARSE' CSECT IDENTIFIER
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         BAL   R2,92(,R15)         BAL AROUND
         USING *,R13               BASE REGISTER DEFINITION
         DS    18F                 AND NEW SAVE AREA
         XC    0(72,R2),0(R2)      CLEAR OUT NEW S.A.
         ST    R2,8(,R13)          STORE BACKWARD AND
         ST    R13,4(,R2)          FORWARD POINTER
         LR    R13,R2              LOAD PGM BASE REGISTER
*---                                                               ---*
*---     OPEN THE SYSIN FILE AND INITIALIZE THE CHAIN POINTER      ---*
*---                                                               ---*
         OPEN  (SYSIN)             OPEN THE INPUT FILE
         XC    LINK,LINK           AND CLEAR OUT THE CHAIN FIELD
*---                                                               ---*
*---     READ A SINGLE CARD, USING QSAM I/O                        ---*
*---                                                               ---*
INCARD   DS    0H
         GET   SYSIN,CARD          READ A SINGLE INPUT CARD
*---                                                               ---*
*---     POINT TO FIRST NON-BLANK. FORGET LEADING BLANKS           ---*
*---                                                               ---*
         LA    R3,CARD             START DELETING LEADING BLANKS
         CLI   0(R3),C' '          LEADING BLANK ??
         BNE   *+12                NOPE; START SCAN HERE
         LA    R3,1(,R3)           YES; BUMP TO NEXT COLUMN
         B     *-12                CONTINUE SCANNING ---
*---                                                               ---*
*---     SET UP AND SCAN FOR THE SPECIAL DELIMITER CHARACTERS      ---*
*---                                                               ---*
         LA    R4,CARD+71          POINT TO CC 72
         CR    R3,R4               ARE WE PAST THAT ??
         BNL   INCARD              YES; IGNORE THIS CARD
         SR    R4,R3               COMPUTE ACTUAL LENGTH
         BCTR  R4,R0               FOR TRT INSTRUCTION
         EX    R4,TRT1             SCAN FOR A ':' CHARACTER
         BC    8,INCARD            NONE FOUND; SKIP THIS CARD
         SR    R1,R3               COMPUTE STRING LENGTH
         BCTR  R1,R0               FOR MOVES
         STC   R1,STR1             SAVE COMPUTED LENGTH
         ST    R3,STR1A            AND ADDRESS
         LA    R3,2(R1,R3)         POINT TO SECOND STRING
         LA    R4,CARD+71          POINT TO CC 72
         SR    R4,R3               COMPUTE REMAINING
         BCTR  R4,R0               LENGTH
         LTR   R4,R4               IS REMAINING LENGTH ZERO ??
         BNP   INCARD              YES; IGNORE THIS CARD
         EX    R4,TRT1             SCAN FOR A ':' CHARACTER
         BC    8,INCARD            NOT FOUND; IGNORE THIS CARD
         SR    R1,R3               COMPUTE STRING
         BCTR  R1,R0               LENGTH
         STC   R1,STR2             STORE LENGTH
         ST    R3,STR2A            AND ADDRESS
*---                                                               ---*
*---     SCAN WAS COMPLETE AND SUCCESSFUL. NOW GRAB STORAGE        ---*
*---     FOR A LIST LINK AND INITIALIZE IT. THE ORDER WILL BE      ---*
*---     THE REVERSE OF THE INPUT CARDS, BUT WE DON'T CARE.        ---*
*---                                                               ---*
         SR    R2,R2               CLEAR A WORK REGISTER
         IC    R2,STR1             INSERT STRING1 LENGTH
         LA    R0,13(R1,R2)        LOAD LENGTH INTO REGISTER 0
         LA    R2,1                INSERT SUBPOOL NUMBER
         SLL   R2,24               SHIFT TO SUBPOOL POSITION
         OR    R0,R2               ADD SUBPOOL TO GETMAIN PARM
         GETMAIN R,LV=(0)          GRAB A HUNK OF CORE
         MVC   0(4,R1),LINK        ADD LINK TO CHAIN
         ST    R1,LINK             AND STORE NEW START
         LA    R1,4(,R1)           POINT TO FIRST STRING AREA
         SR    R2,R2               CLEAR A WORK REGISTER
         IC    R2,STR1             INSERT STRING 1 LENGTH
         STC   R2,0(,R1)           SAVE IN LINK AREA
         L     R3,STR1A            LOAD STRING ADDRESS
         EX    R2,MVSTR1           COPY IN STRING-1
         LA    R1,2(R2,R1)         POINT TO SECOND-STRING AREA
         IC    R2,STR2             INSERT ITS LENGTH
         STC   R2,0(,R1)           AND STORE IT
         L     R3,STR2A            AND LOAD ITS ADDRESS
         EX    R2,MVSTR1           AND MOVE IT IN
         B     INCARD              AND GO FOR ANOTHER CARD
*---                                                               ---*
*---     END-OF-FILE ON SYSIN. CLEAN UP AND RETURN TO CALLER       ---*
*---                                                               ---*
INPUTEOD DS    0H
         CLOSE SYSIN               CLOSE THE FILE AND
         FREEPOOL SYSIN            RELEASE THE BUFFER POOL
         L     R15,LINK            LOAD THE CHAIN ADDRESS
         L     R13,4(,R13)         LOAD BACK POINTER
         L     R14,12(,R13)        AND RETURN ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGS
         MVI   12(R13),255         SET 'DONE' FLAG
         BR    R14                 AND RETURN TO CALLER
         TITLE 'CONSTANTS, DATA AREAS AND SYSIN DCB STUFF'
*---                                                               ---*
*---     MISCELLANEOUS STORAGE AREAS FOR CARDS AND STRINGS         ---*
*---                                                               ---*
STR1     DC    X'00'               LENGTH OF 'FROM' STRING
STR2     DC    X'00'               LENGTH OF 'TO' STRING
STR1A    DC    A(0)                ADDRESS OF 'FROM' STRING
STR2A    DC    A(0)                ADDRESS OF 'TO' STRING
LINK     DC    A(0)                ADDRESS OF NEXT LINK
TRT1     TRT   0(0,R3),TRTAB       SCANNING INSTRUCTION
MVSTR1   MVC   1(0,R1),0(R3)       MOVING INSTRUCTION
CARD     DS    CL80
*---                                                               ---*
*---     TRANSLATE AND TEST TABLE USED FOR THE SCAN. TO CHANGE     ---*
*---     THE INPUT DELIMITER, THIS TABLE MUST BE CHANGED.          ---*
*---                                                               ---*
TRTAB    DC    256X'00'            TRANSLATE-AND-TEST TABLE
         ORG   TRTAB+C':'
         DC    X'04'
         ORG
         EJECT
*---                                                               ---*
*---     SYSIN FILE DESCRIPTION. NOTE MISSING BLKSIZE.             ---*
*---                                                               ---*
SYSIN    DCB   DSORG=PS,                                               X
               MACRF=GM,                                               X
               DDNAME=SYSIN,                                           X
               EODAD=INPUTEOD,                                         X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EXLST=EXIT1
         EJECT
*---                                                               ---*
*---     DCB COMPLETION EXIT. BLKSIZE GETS FILLED IN HERE IF       ---*
*---     NOT SUPPLIED FROM ANY OTHER SOURCE                        ---*
*---                                                               ---*
EXIT1    DS    0F
         DC    X'85',AL3(EXIT1+4)  DCB EXIT LIST FOR SYSIN DCB
         NC    62(2,R1),62(R1)     IS BLKSIZE STILL ZERO ??
         BNZR  R14                 NOPE ---
         MVC   62(2,R1),82(R1)     YES; ASSUME LRECL = BLKSIZE
         BR    R14                 RETURN TO O/C/E
         LTORG ,                   DISPLAY THE LITERAL POOL
         END
DIRIO    TITLE 'PDS GLOBAL UPDATER --- PDS DIRECTORY I/O ROUTINE'
***********************************************************************
*                                                                     *
*  TITLE: DIRIO                                                       *
*                                                                     *
*  FUNCTION: READ, DEBLOCK AND RETURN THE DIRECTORY OF A              *
*            PARTITIONED DATA SET, ONE MEMBER AT A TIME               *
*            ALSO RETURNS THE TTRC BYTES FROM THE DIRECTORY           *
*            ENTRY IN A SEPARATE PARM.                                *
*                                                                     *
*  PARAMETERS: A THREE WORD LIST OF ADDRESSES.                        *
*              WORD 1 ==> DDNAME OF PDS                               *
*              WORD 2 ==> MEMBER NAME OUTPUT AREA                     *
*              WORD 3 ==> TTRC FROM DIRECTORY ENTRY                   *
*                                                                     *
*  RETURN CODES: 0 FOR SUCCESSFUL COMPLETION                          *
*                4 FOR END OF FILE                                    *
*                                                                     *
*  ATTRIBUTES: NON-REENTRANT, NON-REUSABLE PROBLEM SUBROUTINE         *
*                                                                     *
*  AUTHOR: RICK FOCHTMAN, SENIOR SYSTEMS PROGRAMMER                   *
*          TRAILER TRAIN COMPANY                                      *
*          300 SOUTH WACKER DRIVE                                     *
*          CHICAGO, ILLINOIS                                          *
*          (312) 786-1200                                             *
*                                                                     *
***********************************************************************
         EJECT
*---                                                               ---*
*---     PERFORM STAND ENTRY LINKAGE                               ---*
*---                                                               ---*
DIRIO    CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'DIRIO'    CSECT IDENTIFIER
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         BAL   R2,92(,R15)         'BAL' AROUND
         USING *,R13               BASE REGISTER DEFINITION AND
         DS    18F                 NEW SAVE AREA
         XC    0(72,R2),0(R2)      CLEAR NEW S.A.
         ST    R2,8(,R13)          STORE FORWARD AND
         ST    R13,4(,R2)          BACK POINTERS
         LR    R13,R2              LOAD PGM BASE REGISTER
         LM    R2,R4,0(R1)         LOAD THE DDNAME & MEMBER POINTERS
         CLC   DDN,0(R2)           SAME AS LAST TIME ??
         BE    NOCLOSE             YES---
         TM    DIR+48,X'10'        IS DIRECTORY OPEN ??
         BZ    JUSTOPEN            NO, SO JUST OPEN IT
         CLOSE DIR                 CLOSE THE DIRECTORY DCB
         FREEPOOL DIR              AND RELEASE ITS BUFFER POOL
JUSTOPEN DS    0H
         MVC   DDN,0(R2)           COPY DDNAME TO SAVE AREA
         MVC   DIR+40(8),0(R2)     AND COPY DDNAME TO DCB
         XC    CURS,CURS           ZERO OUT THE SCAN CURSOR
         OPEN  (DIR,INPUT)         OPEN THE DIRECTORY FOR INPUT
NOCLOSE  DS    0H
         NC    CURS,CURS           IS SCAN CURSOR ZERO ??
         BNE   DBLK                NO; JUST CONTINUE DEBLOCKING
DIRIN    DS    0H
         GET   DIR,BLOCK           YES; READ IN A DIRECTORY BLOCK
         LH    R9,BLOCK            LOAD BYTES-USED COUNT
         LA    R8,BLOCK(R9)        POINT JUST PAST END
         BCTR  R8,R0               DECREMENT BY ONE
         ST    R8,END              STORE BLOCK-END POINTER
         LA    R9,BLOCK+2          POINT TO FIRST MEMBER NAME
         ST    R9,CURS             STORE A NEW CURSOR VALUE
DBLK     DS    0H
         L     R9,CURS             LOAD DEBLOCKING CURSOR VALUE
         CLC   0(8,R9),FENCE       END-OF-DIRECTORY MARKER ??
         BE    DIREOD              YES; INDICATE END-OF-FILE
         MVC   0(8,R3),0(R9)       RETURN THIS MEMBER NAME
         MVC   0(4,R4),8(R9)       RETURN TTRC TO CALLER
         NI    3(R4),X'80'         LEAVE ONLY ALIAS BIT
         LA    R4,0                CLEAR A WORK REGISTER
         IC    R4,11(,R9)          INSERT 'L' OF TTRL FIELD
         N     R4,=A(X'1F')        CLOBBER ALIAS/NOTELIST BITS
         SLL   R4,1                MULTIPLY BY TWO
         LA    R9,12(R4,R9)        POINT TO NEXT DIRECTORY ENTRY
         ST    R9,CURS             STORE NEW DEBLOCKING CURSOR
         C     R9,END              PAST END OF DIRECTORY BLOCK ??
         BL    RET0                NOPE ---
         GET   DIR,BLOCK           YES; READ IN ANOTHER BLOCK
         LH    R8,BLOCK            LOAD BYTES-USER COUNT
         LA    R8,BLOCK(R8)        POINT JUST PAST LAST BYTE
         BCTR  R8,R0               DECREMENT BY ONE
         ST    R8,END              AND STORE NEW END POINTER
         LA    R9,BLOCK+2          POINT TO FIRST MEMBER NAME
         ST    R9,CURS             STORE NEW DEBLOCKING CURSOR
RET0     DS    0H
         LA    R15,0               SET RETURN CODE ZERO
RET      DS    0H
         L     R13,4(,R13)         LOAD BACK POINTER
         L     R14,12(,R13)        LOAD RETURN ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         MVI   12(R13),255         SET 'DONE' FLAG
         BR    R14                 AND RETURN TO CALLER
RET4     DS    0H
         LA    R15,4               SET RETURN CODE 4
         B     RET                 AND RETURN TO CALLER
DIREOD   DS    0H
         CLOSE DIR                 CLOSE THE DIRECTORY
         XC    CURS,CURS           NULLIFY THE CURSOR VALUE
         XC    0(8,R3),0(R3)       NULLIFY THE RETURN MEMBER NAME
         B     RET4                RETURN, CODE = 4
DDN      DC    CL8' '              SUPPLIED/CURRENT DDNAME
FENCE    DC    XL8'FFFFFFFFFFFFFFFF' SPECIAL END-OF-DIRECTORY NAME
CURS     DC    A(0)                SCAN CURSOR
END      DS    A                   END OF USEFUL DATA
BLOCK    DS    256X'00'            DIRECTORY BLOCK INPUT AREA
DIR      DCB   DSORG=PS,                                               X
               DDNAME=XXXXXXXX,                                        X
               RECFM=FB,                                               X
               LRECL=256,                                              X
               BLKSIZE=256,                                            X
               MACRF=GM,                                               X
               EODAD=DIREOD
         END
TIOT     TITLE 'GLOBAL PDS UPDATE PROGRAM --- TIOT DDNAME EXTRACT'
***********************************************************************
*                                                                     *
*  TITLE: TIOT                                                        *
*                                                                     *
*   FUNCTION: EXTRACT AND RETURN THE DDNAMES FROM THE TASK I/O TABLE, *
*             ONE DDNAME PER CALL.                                    *
*                                                                     *
*   PARAMETERS: EITHER THE ADDRESS TO WHICH THE DDNAME IS TO BE       *
*               COPIED, OR ZERO, SIGNALLING THAT THE TIOT SCAN IS     *
*               TO RESTART AT THE BEGINNING OF THE TIOT.              *
*                                                                     *
*   RETURN CODES: 0 ==> SUCCESSFUL COMPLETION. RESET IS COMPLETE OR   *
*                       A DDNAME HAS BEEN COPIED.                     *
*                 4 ==> TIOT IS EXHAUSTED. ALL DDNAMES HAVE BEEN      *
*                       EXTRACTED.                                    *
*                                                                     *
*   ATTRIBUTES: NON-REENTRANT, NON-REUSABLE, PROBLEM TASK             *
*                                                                     *
*   AUTHOR: RICK FOCHTMAN, SENIOR SYSTEMS PROGRAMMER                  *
*           TRAILER TRAIN COMPANY                                     *
*           300 SOUTH WACKER DRIVE,                                   *
*           CHICAGO, ILLINOIS                                         *
*           (312) 786-1200                                            *
*                                                                     *
***********************************************************************
         EJECT
*---                                                               ---*
*---     ENTRY LINKAGE GOODIES: BASE IS R13                        ---*
*---                                                               ---*
TIOT     CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         B     12(,R15)            BRANCH AROUND
         DC    X'07',CL7'TIOT'     CSECT IDENTIFIER
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         BAL   R2,92(,R15)         'BAL' AROUND
         USING *,R13               BASE REGISTER DEFINITION AND
         DS    18F                 NEW SAVE AREA
         XC    0(72,R2),0(R2)      CLEAR NEW S.A.
         ST    R2,8(,R13)          STORE FORWARD AND
         ST    R13,4(,R2)          BACK POINTERS
         LR    R13,R2              LOAD PGM BASE REGISTER
*---                                                               ---*
*---     LOCATE PARM POINTER AND CHECK FOR RESET                   ---*
*---                                                               ---*
         L     R3,0(,R1)           LOAD PARM ADDRESS
         LTR   R3,R3               RESET CALL ??
         BNZ   NORESET             NOPE ---
         XC    TIOTPTR,TIOTPTR     YES; CLOBBER TIOT ADDRESS
         LA    R15,0               SET RETURN CODE ZERO
         B     RETURN              AND RETURN TO CALLER
*---                                                               ---*
*---     LOCATE TIOT, SKIP PAST JOB/STEP/PROCSTEP NAMES, RETURN A  ---*
*---     DDNAME AND SAVE THE SCAN ADDRESS                          ---*
*---                                                               ---*
NORESET  DS    0H
         NC    TIOTPTR,TIOTPTR     IS TIOT POINTER NULL ??
         BNZ   NOEXTRCT            NOPE --- SKIP THE 'EXTRACT'
         EXTRACT TIOTPTR,FIELDS=TIOT  FETCH THE TIOT ADDRESS
         L     R2,TIOTPTR          LOAD TIOT ADDRESS
         LA    R2,24(,R2)          SKIP JOB/STEP NAMES
         ST    R2,TIOTPTR          AND STORE UPDATED ADDRESS
         MVC   0(8,R3),4(R2)       COPY OUT THE DDNAME
         LA    R15,0               SET RETURN CODE ZERO
         B     RETURN              AND RETURN TO CALLER
*---                                                               ---*
*---     ALREADY HAVE TIOT ADDRESS; JUST FETCH THE NEXT DDNAME     ---*
*---                                                               ---*
NOEXTRCT DS    0H
         L     R2,TIOTPTR          LOAD TIOT ADDRESS
         SR    R4,R4               CLEAR A WORK REGISTER
         IC    R4,0(,R2)           INSERT TIOE LENGTH
         LTR   R4,R4               ZERO ??
         BZ    RET4                YES; ALL DONE WITH TIOT
         LA    R2,0(R4,R2)         BUMP TO NEXT TIOE
         MVC   0(8,R3),4(R2)       COPY DDNAME OVER
         ST    R2,TIOTPTR          AND SAVE UPDATED POINTER
         LA    R15,0               SET ZERO RETURN CODE
*---                                                               ---*
*---     STANDARD RETURN LINKAGE. R15 ALREADY HAS RETURN CODE      ---*
*---                                                               ---*
RETURN   DS    0H
         L     R13,4(,R13)         LOAD BACK POINTER
         L     R14,12(,R13)        LOAD RETURN ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         MVI   12(R13),255         SET 'DONE' FLAG
         BR    R14                 AND RETURN TO CALLER
*---                                                               ---*
*---     SET RETURN CODE = 4                                       ---*
*---                                                               ---*
RET4     DS    0H
         LA    R15,4               SET RETURN CODE 4
         B     RETURN              AND RETURN TO CALLER
*---                                                               ---*
*---  MY ONE AND ONLY CLAIM TO NON-REENTRANCY AND NON-REUSABILITY  ---*
*---                                                               ---*
TIOTPTR  DC    A(0)                TIOT SCAN POINTER
         LTORG ,                   DISPLAY THE LITERAL POOL
         END
//LINK     EXEC  PGM=IEWL,
//         PARM='LIST,LET,NCAL,XREF'
//SYSPRINT DD    SYSOUT=*
//SYSLMOD  DD    DSN=CHSY227.MISC.LOAD,DISP=SHR
//SYSLIN   DD    DSN=*.ASM.SYSLIN,DISP=(OLD,DELETE)
//         DD    *
 ENTRY PDSUPDTE
 NAME  PDSUPDTE(R)
