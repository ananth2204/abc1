*          DATA SET FG20188710 AT LEVEL 030 AS OF 02/13/04
GETDSN   TITLE 'GET DATASET NAME OR VOLUME SERIAL NUMBER'               00001
*********************************************************************** 00006
*                                                                     * 00006
* SEGMENT NAME:                                                       * 00006
*                                                                     * 00006
*    GETDSN                                                           * 00006
*                                                                     * 00030
* INPUTS (*TO FUNCTIONS):                                             * 00030
*                                                                     * 00007
*    DDNAME -- A CHARACTER(8) PL/I STRING PASSED AS INPUT. (*2)       * 00007
*                                                                     * 00010
*    MEMBER -- A CHARACTER(8) PL/I STRING WHERE WE HAVE TO PUT THE    * 00010
*       DATASET MEMBER NAME, IF IT EXISTS. (*2)                       * 00010
*                                                                     * 00022
*    TIOTADDR -- THE ADDRESS OF THE TASK INPUT OUTPUT TABLE. (*2)     * 00022
*                                                                     * 00014
*    STATUSFL -- A BYTE WITH INTERNAL STATUS FLAGS (*3)               * 00014
*                                                                     * 00015
*       NAME     PATTERN  DESCRIPITION                                * 00015
*                                                                     * 00016
*       GETDSNC  1....... GETDSN CALLED                               * 00017
*                         SET WHEN ENTRY POINT GETDSN GETS CALLED,    * 00018
*       GETMEMC  .1...... GETMEM CALLED                               * 00019
*                         SET WHEN ENTRY POINT GETMEM GETS CALLED,    * 00020
*                         RESET WHEN ENTRY POINT GETVOL GETS CALLLED  * 00020
*                                                                     * 00023
* FUNCTIONS:                                                          * 00023
*                                                                     * 00023
*    1. DEPENDING ON WHICH ENTRY POINT GETS CALLED, SET/RESET THE     * 00023
*       GETDSNC BIT.                                                  * 00023
*                                                                     * 00026
*    2. GET THE TASK INPUT OUTPUT TABLE ADDRESS.  SCAN THROUGH THE DD * 00026
*       ENTRIES UNTIL THE DDNAME IS FOUND, OR UNTIL THE END OF THE    * 00026
*       TIOT IS REACHED.  GET THE JOB FILE CONTROL BLOCK ADDRESS.     * 00026
*       BLANK OUT DSNAME, MEMBER, OR VOLSER.                          * 00026
*                                                                     * 00038
*    3. DEPENDING ON THE ENTRY POINT CALLED, MOVE THE DATASET NAME,   * 00038
*       MEMBER NAME, OR THE VOLUME SERIAL NUMBER IN THE PL/I STRING   * 00038
*       PASSED TO US.                                                 * 00038
*                                                                     * 00025
* OUTPUTS (*FROM FUNCTIONS):                                          * 00025
*                                                                     * 00014
*    STATUSFL -- A BYTE WITH INTERNAL STATUS FLAGS (*1,2)             * 00014
*                                                                     * 00015
*       NAME     PATTERN  DESCRIPITION                                * 00015
*                                                                     * 00016
*       GETDSNC  1....... GETDSN CALLED                               * 00017
*                         SET WHEN ENTRY POINT GETDSN GETS CALLED,    * 00018
*       GETMEMC  .1...... GETMEM CALLED                               * 00019
*                         SET WHEN ENTRY POINT GETMEM GETS CALLED,    * 00020
*                         RESET WHEN ENTRY POINT GETVOL GETS CALLLED  * 00020
*                                                                     * 00008
*    DSNAME -- A CHARACTER(44) PL/I STRING WHERE WE HAVE TO PUT THE   * 00008
*       DATASET NAME. (*2,3)                                          * 00008
*                                                                     * 00010
*    MEMBER -- A CHARACTER(8) PL/I STRING WHERE WE HAVE TO PUT THE    * 00010
*       DATASET MEMBER NAME, IF IT EXISTS. (*2,3)                     * 00010
*                                                                     * 00022
*    TIOTADDR -- THE ADDRESS OF THE TASK INPUT OUTPUT TABLE. (*2)     * 00022
*                                                                     * 00012
*    VOLSER -- A CHARACTER(6) PL/I STRING WHERE WE HAVE TO PUT THE    * 00012
*       VOLUME SERIAL NUMBER. (*2,3)                                  * 00012
*                                                                     * 00046
* NOTES:                                                              * 00046
*                                                                     * 00046
*    1. SAMPLE DECLARES AND CALLS:                                    * 00046
*                                                                     * 00047
*       DECLARE  GETDSN  ENTRY(CHAR(8)) RETURNS(CHAR(44));            * 00047
*       DECLARE  DDNAME  CHAR(8) INIT('DD1');                         * 00048
*       DECLARE  DSNAME  CHAR(8);                                     * 00049
*                                                                     * 00050
*       DSNAME = GETDSN(DDNAME);                                      * 00050
*                                                                     * 00051
*       DECLARE  GETVOL  ENTRY(CHAR(8)) RETURNS(CHAR(6));             * 00051
*       DECLARE  VOLUME  CHAR(6);                                     * 00052
*                                                                     * 00053
*       VOLUME = GETVOL(DDNAME);                                      * 00053
*                                                                     * 00054
*       DECLARE  GETMEM  ENTRY(CHAR(8)) RETURNS(CHAR(8));             * 00054
*       DECLARE  MEMBER  CHAR(8);                                     * 00055
*                                                                     * 00056
*       MEMBER = GETMEM(DDNAME);                                      * 00056
*       DECLARE  MODE    FIXED BINARY(15);                            * 00057
*                                                                     * 00058
*       MODE   = GETMODE();                                           * 00058
*                                                                     * 00060
*    2. EACH FUNCTION RETURNS A BLANK STRING IF THE DDNAME IS NOT     * 00060
*       FOUND.                                                        * 00060
*                                                                     * 00061
*    3. ISSUE HISTORY:                                                * 00061
*                                                                     * 00062
*       REASON FOR ISSUE 07:                                          * 00062
*       MAKE REENTRANT, MAKE 31 BIT COMPATIBLE                        * 00063
*                                                                     * 00064
*       REASON FOR ISSUE 08:                                          * 00064
*       ADD ENTRY POINT GETMODE TO GET THE CURRENT ADDRESSING MODE.   * 00065
*                                                                     * 00066
*       REASON FOR ISSUE 09:                                          * 00066
*       THE JFCB MOVES ABOVE THE LINE WITH ESA, USE THE SWAREQ        * 00067
*       ROUTINE TO TRANSLATE THE 3 BYTE TOKEN IN THE TIOT TO THE 4    * 00067
*       BYTE ADDRESS. THIS NEW ROUTINE CALLS THE SWAREQ MACRO IN RL   * 00067
*       MODE.                                                         * 00067
*                                                                     * 00070
*       REASON FOR ISSUE 10:  11/14/2003                              * 00070
*       ADD AMODE AND RMODE CARDS TO GET RID OF LINKER MESSAGES       * 00071
*                                                                     * 00072
*********************************************************************** 00072
         EJECT                                                          00073
         PRINT OFF                                                      00074
         GBLC  &XA                                                      00075
&XA      SETC  'YES'                                                    00076
         AIF   ('&XA' NE 'YES').NOXA1                                   00077
*          DATA SET TESTSYS    AT LEVEL 000 AS OF 09/18/86
         MACRO                                                          00001
&LABL    TESTSYS  &XAADDR,&S370ADDR                                     00002
.*                                                                      00003
.*     THIS MACRO WILL TEST THE SYSTEM ENVIRONMENT TO DETERMINE         00004
.*     IF THE PROGRAM IS RUNNING UNDER MVS XA OR MVS 370.               00005
.*     THE TWO POSITIONAL PARAMETERS ARE THE BRANCH ADDRESS IF          00006
.*     THIS IS AN XA ENVIRONMENT AND THE BRANCH ADDRESS IF THIS         00007
.*     IS A SYSTEM 370 ENVIRONMENT.  EITHER OR BOTH OF THE PARMS        00008
.*     MAY BE OMMITTED.                                                 00009
.*                                                                      00010
.*     THIS MACRO USES REGISTER 15                                      00011
.*                                                                      00012
.*     EXAMPLES:                                                        00013
.*********************************************************************  00014
.*               TESTSYS LABELXA,LABEL370                               00015
.*                 . THIS POINT WILL NEVER BE REACHED                   00016
.*     LABELXA   DS    0H                                               00017
.*                 .                                                    00018
.*               MVS XA SPECIFIC CODE                                   00019
.*                 .                                                    00020
.*     LABEL370  DS    0H                                               00021
.*                 .                                                    00022
.*               MVS 370 SPECIFIC CODE                                  00023
.*                 .                                                    00024
.*********************************************************************  00025
.*               TESTSYS LABELXA                                        00026
.*                 .                                                    00027
.*               MVS 370 SPECIFIC CODE                                  00028
.*                 .                                                    00029
.*     LABELXA   DS    0H                                               00030
.*                 .                                                    00031
.*               MVS XA SPECIFIC CODE                                   00032
.*                 .                                                    00033
.*********************************************************************  00034
.*               TESTSYS ,LABEL370                                      00035
.*                 .                                                    00036
.*               MVS XA SPECIFIC CODE                                   00037
.*                 .                                                    00038
.*     LABEL370  DS    0H                                               00039
.*                 .                                                    00040
.*               MVS 370 SPECIFIC CODE                                  00041
.*                 .                                                    00042
.*********************************************************************  00043
         L    15,16               POINT TO CVT                          00044
         TM    CVTDCB-CVT(15),CVTMVSE                                   00045
         AIF   ('&XAADDR' EQ '').NOXA                                   00046
         BO    &XAADDR                                                  00047
.NOXA    ANOP                                                           00048
         AIF   ('&S370ADDR' EQ '').NO370                                00049
         BZ    &S370ADDR                                                00050
.NO370   ANOP                                                           00051
         MEND                                                           00052
*          DATA SET SMODE      AT LEVEL 000 AS OF 02/26/93
         MACRO                                                          00001
&LABL    SMODE  &MODE,&CLEAR=YES                                        00002
.*                                                                      00003
.*       THIS MACRO WILL SWITCH TO 24 OR 31 BIT ADDRESSING MODE IN      00004
.*       AN MVS XA ENVIRONMENT.  THE CURRENT ADDRESSING MODE IS         00005
.*       SAVED IN THE HIGH BIT OF REGISTER 14.                          00006
.*                                                                      00007
.*       VALID VALUES FOR &MODE MODE ARE:                               00008
.*       24  -  SWITCH TO 24 BIT ADDRESSING MODE                        00009
.*       31  -  SWITCH TO 31 BIT ADDRESSING MODE                        00010
.*       (R0)-(R14) SWITCH TO THE ADDRESSING MODE SPECIFIED IN THE      00011
.*              HIGH BIT OF THE SPECIFIED REGISTER.  OTHER BITS CLEARED 00012
.*              BY THIS MACRO.                                          00013
.*       CLEAR - IF YES (THE DEFAULT) AND A REGISTER VALUE IS SPECIFIED 00014
.*               FOR MODE, THE LOW ORDER 31 BITS IN THE WORD ARE        00015
.*               CLEARED PRIOR TO ORING IN THE HIGH BIT.  CLEAR SHOULD  00016
.*               REMAIN YES UNLESS THE USER IS SURE OTHER BITS IN THE   00017
.*               REGISTER SPECIFIED BY MODE ARE ZERO                    00018
.*                                                                      00019
.*       THIS MACRO USES REGISTERS 14 AND 15                            00020
.*                                                                      00021
         AIF   (('&MODE' EQ '24') OR                                   X00022
               ('&MODE' EQ '31')  OR                                   X00023
               ('&MODE'(1,1) EQ '(')).PARMOK                            00024
         MNOTE 8,'INVALID MODE SPECIFIED, 24 AND 31 ARE VALID VALUES'   00025
         MEXIT                                                          00026
.PARMOK  ANOP                                                           00027
         AIF   ('&MODE'(1,1) EQ '(').REGPARM                            00028
         CNOP  0,4                  MAKE SURE "A" CON IS ALIGNED        00029
         L     15,*+8               LOAD NEW AMODE                      00030
         SLR   14,14                CLEAR OLD AMODE REGISTER            00031
         BSM   14,15                BRANCH AROUND CONST AND SET AMODE   00032
         AIF   ('&MODE' EQ '31').MODE31                                 00033
         DC    A(X'00000000'+(*+4))                                     00034
         MEXIT                                                          00035
.MODE31  ANOP                                                           00036
         DC    A(X'80000000'+(*+4))                                     00037
         MEXIT                                                          00038
.REGPARM ANOP                                                           00039
         AIF   ('&CLEAR' NE 'YES').NOCLEAR                              00040
         SRL   &MODE(1),31          SHIFT OUT ALL BUT HIGH BYTE         00041
         SLL   &MODE(1),31          SHIFT IN ZEROS FOR THE OR INSTR     00042
.NOCLEAR ANOP                                                           00043
         LA    15,*+10              ADDR JUST PAST BSM INSTR            00044
         OR    15,&MODE(1)          SET HIGH ORDER BIT FROM PARM        00045
         SLR   14,14                CLEAR OLD AMODE REGISTER            00046
         BSM   14,15                BRANCH AROUND CONST AND SET AMODE   00047
         MEND                                                           00048
.NOXA1   ANOP                                                           00080
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00084
GETDSN1  AMODE ANY                                                      00085
GETDSN1  RMODE ANY                                                      00086
GETDSN   RENTR BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)                  00087
         SPACE 2                                                        00088
         L     R11,COMBASE              EXTABLISH                       00089
         DROP  R11                      COMMON                          00090
         USING GETDSN,R11               ADDRESSABILITY                  00091
         SPACE 2                                                        00092
         MVI   STATUSFL,CGETDSN         INDICATE THAT GETDSN WAS CALLED 00093
         B     COMCODE                  GO TO THE COMMON CODE           00094
         EJECT                                                          00095
         DS    0D                                                       00096
GETMEM   RENTR *,BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)                00097
         SPACE 2                                                        00098
         L     R11,COMBASE              ESTABLISH                       00099
         DROP  R11                      COMMON                          00100
         USING GETDSN,R11               ADDRESSABILITY                  00101
         SPACE 2                                                        00102
         MVI   STATUSFL,CGETMEM         INDICATE THAT GETMEM WAS CALLED 00103
         B     COMCODE                  GO TO THE COMMON CODE           00104
         EJECT                                                          00105
         DS    0D                                                       00106
GETVOL   RENTR *,BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)                00107
         SPACE 2                                                        00108
         L     R11,COMBASE              ESTABLISH                       00109
         DROP  R11                      COMMON                          00110
         USING GETDSN,R11               ADDRESSABILITY                  00111
         SPACE 2                                                        00112
         MVI   STATUSFL,CGETVOL         INDICATE THAT GETVOL WAS CALLED 00113
         EJECT                                                          00114
*********************************************************************** 00115
*                                                                     * 00115
* COMMON EXECUTION CODE STARTS HERE. A FLAG HAS BEEN SET IN THE       * 00115
* PROLOG CODE TO SHOW WHETHER WE WANT THE DATASET NAME, MEMBER NAME,  * 00115
* OR VOLSER FROM THE JFCB. USE THIS FLAG TO CLEAR THE CORRECT LENGTH  * 00115
* IN THE TARGET PARM.                                                 * 00115
*                                                                     * 00120
*      REGISTER USAGE:                                                * 00120
*              R4  -> DDNAME                                          * 00121
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER                * 00122
*              R6  -> THE TIOT                                        * 00123
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT         * 00124
*              R11 -  BASE REGISTER                                   * 00125
*              R12 -  PL/I TCA, DO NOT MODIFY                         * 00126
*              R13 -> LOWER DSA AND SAVE AREA                         * 00127
*                                                                     * 00128
*********************************************************************** 00128
         SPACE                                                          00129
COMCODE  DS    0H                       HERE STARTS THE COMMON CODE     00130
         LM    R4,R5,0(R10)             LOAD PARAMETER LOCATOR ADDR.    00131
*                                       R4 -> LOCATOR -> DDNAME         00132
*                                       R5 -> LOCATOR -> DSN./VOL. SER. 00133
         L     R4,0(R4)                 LOAD DDNAME ADDRESS             00134
         L     R5,0(R5)                 LOAD DSN. OR VOL. SER. ADDRESS  00135
         MVI   0(R5),C' '               FILL OUT A BLANK AS FIRST       00136
*                                       DSNAME OR VOL. SER. CHARACTER   00137
         MVC   1(5,R5),0(R5)            PROPAGATE THAT BLANK FOR 5 MORE 00138
*                                       CHARACTERS, THEREBY BLANKING    00139
*                                       OUT THE VOLSER                  00140
         AIF   ('&XA' NE 'YES').NOXA3                                   00141
         SLR   R9,R9                                                    00142
         BSM   R9,0                     SAVE CURRENT ADDRESSING MODE    00143
.NOXA3   ANOP                                                           00144
         SPACE                                                          00145
         TM    STATUSFL,CGETDSN         IS THIS A GETDSN CALL?          00146
         BNO   MEMCK                    NO, THEN CHECK FOR GETMEM       00147
         MVC   6(38,R5),5(R5)           PROPAGATE THE SIXTH BLANK FOR   00148
         B     GETTIOT                  38 MORE SPACES                  00149
         SPACE 2                                                        00150
MEMCK    DS    0H                                                       00151
         TM    STATUSFL,CGETMEM         IS THIS A GETMEM CALL ?         00152
         BNO   GETTIOT                  NO, THEN GOTO GETTIOT           00153
         MVC   6(2,R5),5(R5)            BLANK TWO MORE SPACES FOR MEM   00154
         SPACE 2                                                        00155
GETTIOT  DS    0H                                                       00156
         L     R6,16                    POINT TO THE CVT                00157
         L     R6,0(R6)                 POINT TO THE TCB DOUBLEWORD     00158
         L     R6,0(R6)                 POINT TO OUR TCB                00159
         USING TCB,R6                   ADDRESS THE TCB                 00160
         SPACE                                                          00161
         L     R6,TCBTIO                GET ADDR OF THE TIOT            00162
         DROP  R6                       DON'T NEED THE TCB ANY MORE     00163
         USING TIOT1,R6                 ADDRESS THE TIOT                00164
         EJECT                                                          00165
*********************************************************************** 00166
*                                                                     * 00166
* SCAN THE TIOT ENTRIES LOOKING FOR THE DDNAME WE WANT.               * 00166
*                                                                     * 00168
*      REGISTER USAGE:                                                * 00168
*              R4  -> DDNAME                                          * 00169
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER                * 00170
*              R6  -> THE TIOT ENTRY UNDER CONSIDERATION              * 00171
*              R7  -  WORK REGISTER USED TO BUMP TIOT POINTER TO NEXT * 00172
*                     ENTRY                                           * 00172
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT         * 00173
*              R11 -  BASE REGISTER                                   * 00174
*              R12 -  PL/I TCA, DO NOT MODIFY                         * 00175
*              R13 -> LOWER DSA AND SAVE AREA                         * 00176
*                                                                     * 00177
*********************************************************************** 00177
         SPACE                                                          00178
TIOTSCAN DS    0H                                                       00179
         CLI   TIOELNGH,X'00'           IS THIS THE END OF THE TIOT ?   00180
         BE    RETURN                   YES, SO WE DIDN'T FIND THE DD   00181
*                                       ENTRY AND WE RETURN             00182
         CLC   0(8,R4),TIOEDDNM         IS THIS DD ENTRY THE ONE ?      00183
         BE    DDFOUND                  YES, SO GO TO DDFOUND           00184
         SLR   R7,R7                    NO, SO CLEAR R7                 00185
         IC    R7,TIOELNGH              AND LOAD THE DDENTRY LENGTH     00186
         AR    R6,R7                    AND POSITION R6 TO POINT TO     00187
*                                       THE NEXT DD ENTRY               00188
         B     TIOTSCAN                 AND SCAN THE NEXT TIOT DD ENTRY 00189
         EJECT                                                          00190
*********************************************************************** 00191
*                                                                     * 00191
* WE HAVE FOUND THE DDNAME WE ARE LOOKING FOR IN THE TIOT. CONVERT    * 00191
* THE JCFB TOKEN IN THE TIOT TO THE REAL JCFB ADDRESS WHICH IS 4      * 00191
* BYTES LONG.                                                         * 00191
*                                                                     * 00195
*      REGISTER USAGE:                                                * 00195
*              R4  -> DDNAME                                          * 00196
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER                * 00197
*              R6  -> THE TIOT ENTRY UNDER CONSIDERATION              * 00198
*              R7  -> JFCB FOR DDNAME                                 * 00199
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT         * 00200
*              R11 -  BASE REGISTER                                   * 00201
*              R12 -  PL/I TCA, DO NOT MODIFY                         * 00202
*              R13 -> LOWER DSA AND SAVE AREA                         * 00203
*                                                                     * 00204
*********************************************************************** 00204
         SPACE                                                          00205
DDFOUND  DS    0H                                                       00206
         AIF   ('&XA' NE 'YES').NOXA5                                   00207
         SMODE 31                                                       00208
         SPACE                                                          00209
         LA    R1,TIOEJFCB              POINT TO THE JFCB TOKEN         00210
         L     R15,=V(SWAREQ)           POINT TO THE CONVERT ROUTINE    00211
         BALR  R14,R15                  CONVERT TOKEN TO ADDRESS        00212
         SPACE                                                          00213
         LR    R7,R0                    RETURNED JFCB ADDR IN R0        00214
         AGO   .XA5                                                     00215
.NOXA5   ANOP                                                           00216
         SLR   R7,R7                    CLEAR R7 FOR LOADING JFCB ADDR  00217
         ICM   R7,X'7',TIOEJFCB         GET THE JFCB ADDRESS            00218
         LA    R7,16(R7)                                                00219
.XA5     ANOP                                                           00220
         DROP  R6                                                       00221
         USING INFMJFCB,R7              WE USE R7 AS THE JFCB           00222
*                                       BASE REGISTER                   00223
         TM    STATUSFL,CGETDSN         WAS GETDSN CALLED ?             00224
         BNO   MEMNAM                   NO, THEN CHECK THE MEMNAM       00225
         MVC   0(44,R5),JFCBDSNM        GET THE DATASET NAME            00226
         B     RETURN                   AND RETURN                      00227
         SPACE 2                                                        00228
MEMNAM   DS    0H                                                       00229
         TM    STATUSFL,CGETMEM         WAS GETMEM CALLED ?             00230
         BNO   VOLSER                   NO, SO THE VOL. SER. IS NEEDED  00231
         TM    JFCBIND1,JFCPDS          IS THIS DATASET A PDS?          00232
         BNO   RETURN                   NO, THEN RETURN                 00233
         MVC   0(8,R5),JFCBELNM         GET THE MEMBER                  00234
         B     RETURN                   AND RETURN                      00235
         SPACE 2                                                        00236
VOLSER   DS    0H                                                       00237
         MVC   0(6,R5),JFCBVOLS         GET THE FIRST VOL. SER. NUMBER  00238
         EJECT                                                          00239
*********************************************************************** 00240
*                                                                     * 00240
* WE ARE DONE, RESTORE THE ADDRESSING MODE AND RETURN TO THE CALLER.  * 00240
*                                                                     * 00243
*********************************************************************** 00243
         SPACE                                                          00244
RETURN   DS    0H                                                       00245
         AIF   ('&XA' NE 'YES').NOXA4                                   00246
         SMODE (R9)                     RESTORE THE ADDRESSING MODE     00247
.NOXA4   ANOP                                                           00248
         REXIT                          RETURN                          00249
         SPACE                                                          00250
COMBASE  DC    V(GETDSN)                THE COMMON BASE ADDRESS         00251
         LTORG                                                          00252
         TITLE 'GETMODE - GET CURRENT ADDRESSING MODE FOR PL/I'         00253
*********************************************************************** 00254
*                                                                     * 00254
* SEGMENT NAME:                                                       * 00254
*                                                                     * 00254
*    GETMODE -- GET CURRENT ADDRESSING MODE FOR PL/I                  * 00254
*                                                                     * 00262
* FUNCTIONS:                                                          * 00262
*                                                                     * 00262
*    1. INITIALIZE THE TARGET PARM TO ZERO (AMODE=24).                * 00262
*                                                                     * 00264
*    2. IF THIS IS NOT AN XA SYSTEM, RETURN ZERO.                     * 00264
*                                                                     * 00266
*    3. CURRENT ADDRESSING MODE FROM THE PSW IS ZERO, THEN RETURN     * 00266
*       ZERO.                                                         * 00266
*                                                                     * 00268
*    4. IF THE CURRENT INSTRUCTION ADDRESS IS GREATER THAN 16 MEG,    * 00268
*       RETURN 2, OTHERWISE, RETURN 1.                                * 00268
*                                                                     * 00263
* OUTPUTS (*FROM FUNCTIONS):                                          * 00263
*                                                                     * 00255
*    MODE -- ADDRESSING MODE (*1,2,3)                                 * 00255
*       THE CURRENT ADDRESSING MODE IS RETURNED IN A FIXED BINARY 15  * 00256
*       VARIABLE                                                      * 00256
*       VALUES: 0  -  ADDRESSING MODE 24                              * 00258
*               1  -  ADDRESSING MODE 31                              * 00259
*               2  -  RESIDENTCY MODE 31                              * 00260
*                                                                     * 00270
*********************************************************************** 00270
         SPACE                                                          00271
GETMODE1 AMODE 31                                                       00272
GETMODE1 RMODE ANY                                                      00273
GETMODE  RENTR BASE=11,PARM=10                                          00274
         L     R10,0(R10)               POINT TO FIXED BIN 15           00275
         XC    0(2,R10),0(R10)          INITIALIZE IT TO ZERO.          00276
         SPACE                                                          00277
         AIF   ('&XA' NE 'YES').NOXA2                                   00278
         TESTSYS ,MODERET               RETURN IF NOT XA SYSTEM         00279
         SPACE                                                          00280
         SLR   R2,R2                    CLEAR WORK REGISTER             00281
         BSM   R2,0                     GET CURRENT ADDRESSING MODE     00282
         LTR   R2,R2                    IS THE MODE ZERO?               00283
         BZ    MODERET                  IF SO, RETURN ZERO              00284
         SPACE                                                          00285
         BASR  R2,0                     SAVE INSTRUCTION ADDRESS        00286
         LA    R2,0(R2)                 CLEAR HIGH BIT                  00287
         C     R2,=X'00FFFFFF'          COMPARE TO MAX 24 BIT ADDR      00288
         BNH   RET1                                                     00289
         SPACE                                                          00290
         LA    R2,2                     SHOW RMODE=31                   00291
         STH   R2,0(R10)                AND PUT IN RETURNED PARM        00292
         B     MODERET                                                  00293
         SPACE                                                          00294
RET1     DS    0H                                                       00295
         LA    R2,1                     SHOW AMODE=31 RMODE=24          00296
         STH   R2,0(R10)                AND PUT IN RETURNED PARM        00297
.NOXA2   ANOP                                                           00298
         SPACE                                                          00299
MODERET  DS    0H                                                       00300
         REXIT                          RETURN                          00301
         LTORG                                                          00302
         DROP  R11                                                      00303
         EJECT                                                          00304
*********************************************************************** 00305
*                                                                     * 00305
* THIS WORKAREA IS USED FOR THE GETDSN, GETVOL, AND GETMEM ROUTINES.  * 00305
*                                                                     * 00308
*********************************************************************** 00308
         SPACE 2                                                        00309
WORKAREA DSECT                                                          00310
         DS    30F                      SAVE AREA                       00311
STATUSFL DS    XL1                      X'80' INDICATES                 00312
*                                       ENTRY POINT GETDSN WAS CALLED   00313
*                                       X'40' INDICATES                 00314
*                                       ENTRY POINT GETMEM WAS CALLED   00315
*                                       X'00' INDICATES                 00316
*                                       ENTRY POINT GETVOL WAS CALLED   00317
CGETDSN  EQU   X'80'                                                    00318
CGETMEM  EQU   X'40'                                                    00319
CGETVOL  EQU   X'00'                                                    00320
         DS    0D                                                       00321
WORKLEN  EQU   *-WORKAREA                                               00322
         SPACE 2                                                        00323
         PRINT NOGEN                                                    00324
MYTIOD   DSECT                                                          00325
         IEFTIOT1                       TASK INPUT OUTPUT TABLE MACRO   00326
         SPACE 2                                                        00327
         IEFJFCBN                       JOB FILE CONTROL BLOCK MACRO    00328
         SPACE 2                                                        00329
         IKJTCB                         TASK CONTROL BLOCK MACRO        00330
         SPACE                                                          00331
         CVT    DSECT=YES                                               00332
         SPACE                                                          00333
         SYMBAR MODE=DEC                                                00334
         END                                                            00335
*          DATA SET FG50129201 AT LEVEL 015 AS OF 04/01/04
STRREA   TITLE 'OMVS_STR_REASON'                                        00001
         PRINT OFF                                                      00002
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
*          DATA SET CONTROL    AT LEVEL 000 AS OF 06/28/04
         MACRO ,                                                        00001
         CONTROL &DSECT=YES,&LIT=YES                                    00002
.*                                                                      00003
.*   MACRO/SUBSET CONTROL  IN FG501285                                  00004
.*                                                                      00005
.*  THIS DSECT DESCRIBES THE HFS /PAN/<PAN_HFS_NAME>/.CONTROL/.CONTROL  00006
.*  DATASET.                                                            00007
.*                                                                      00008
         SPACE                                                          00009
          AIF   ('&DSECT' EQ 'NO').NODSECT                              00010
CONTROL  DSECT                                                          00011
.NODSECT ANOP                                                           00012
CNTLREV  DS    F                     REVISION CODE                      00013
CNTLCC   DS    F                     LIBRARY CONTROL CODE               00014
CNTLFLG  DS    2F                    ++SUPRESS FLAGS WORD 1             00015
         DS    0D                    FORCE ALIGNMENT TO DOUBLEWORD LEN  00016
CONTROLL EQU   *-CNTLREV                                                00017
         SPACE                                                          00018
          AIF   ('&LIT' EQ 'NO').NOLIT                                  00019
* CURRENT REVSION CODE                                                  00020
CREVCODE EQU   1                                                        00021
         SPACE                                                          00022
* CURRENT REVSION CODE ERROR CODE                                       00023
JRREVERR EQU   29183                                                    00024
         SPACE                                                          00025
* SUPRESS FLAG VALUES, WORD 1  (SUPFLG0)                                00026
SUPADD   EQU   X'00000001'           ++SUPRESS ADD                      00027
SUPALLOC EQU   X'00000002'           ++SUPRESS ALLOCATE                 00028
SUPATTCH EQU   X'00000004'           ++SUPRESS ATTACH                   00029
SUPCOMNT EQU   X'00000008'           ++SUPRESS COMMENT                  00030
SUPCOPY  EQU   X'00000010'           ++SUPRESS COPY                     00031
SUPDETCH EQU   X'00000020'           ++SUPRESS DETACH                   00032
SUPEXEC  EQU   X'00000040'           ++SUPRESS EXEC                     00033
SUPFORMT EQU   X'00000080'           ++SUPRESS FORMAT                   00034
SUPINSRT EQU   X'00000100'           ++SUPRESS INSERT                   00035
SUPLEVEL EQU   X'00000200'           ++SUPRESS LEVEL                    00036
SUPOPTN  EQU   X'00000400'           ++SUPRESS OPTION                   00037
SUPREN   EQU   X'00000800'           ++SUPRESS RENAME                   00038
SUPRESEQ EQU   X'00001000'           ++SUPRESS RESEQ                    00039
SUPSELCT EQU   X'00002000'           ++SUPRESS SELECT                   00040
SUPSTATU EQU   X'00004000'           ++SUPRESS STATUS                   00041
SUPUPDTE EQU   X'00008000'           ++SUPRESS UPDATE                   00042
SUPUSER  EQU   X'00010000'           ++SUPRESS USER                     00043
SUPUSING EQU   X'00020000'           ++SUPRESS USING                    00044
SUPWRITE EQU   X'00040000'           ++SUPRESS WRITE                    00045
         SPACE                                                          00046
* SUPRESS FLAG VALUES, WORD 2  (SUPFLG1)                                00047
SUPACTIV EQU   X'00000001'           ++SUPRESS ACTIVE                   00048
SUPALL   EQU   X'00000002'           ++SUPRESS ALL                      00049
SUPDISAB EQU   X'00000004'           ++SUPRESS DISABLE                  00050
SUPENABL EQU   X'00000008'           ++SUPRESS ENABLE                   00051
SUPINACT EQU   X'00000010'           ++SUPRESS INACTIVE                 00052
SUPPREFX EQU   X'00000020'           ++SUPRESS PREFIX                   00053
SUPPRINT EQU   X'00000040'           ++SUPRESS PRINT                    00054
SUPPROD  EQU   X'00000080'           ++SUPRESS PROD                     00055
SUPPUNCH EQU   X'00000100'           ++SUPRESS PUNCH                    00056
SUPTEMP  EQU   X'00000200'           ++SUPRESS TEMP                     00057
SUPWORK  EQU   X'00000400'           ++SUPRESS WORK                     00058
SUPSTAR  EQU   X'00000800'           ++SUPRESS *                        00059
.NOLIT   ANOP                                                           00060
         MEND  , LIBDATA                                   RES 10/2003  00061
         PRINT ON                                                       00007
*********************************************************************** 00022
*                                                                     * 00022
* SEGMENT NAME:                                                       * 00022
*                                                                     * 00022
*    STRREA -- OMVS_STR_REASON                                        * 00022
*                                                                     * 00023
*       THIS MODULE RETURNS THE ERROR MESSSAGE CORRESPONDING TO A     * 00023
*       PASSED ERRNOJR UNDER OPEN MVS.                                * 00023
*                                                                     * 00041
* INPUTS (*TO FUNCTIONS):                                             * 00041
*                                                                     * 00026
*    ERRNOJR -- FULLWORD INT (*1,3,4)                                 * 00026
*       THIS IS THE ADDRESS OF A FULLWORD CONTAINING  THE REASON CODE * 00027
*       TO BE INTERPRETED.                                            * 00027
*                                                                     * 00040
* FUNCTIONS:                                                          * 00040
*                                                                     * 00040
*    1. LOAD THE PARM LIST INTO REGISTERS                             * 00040
*                                                                     * 00045
*    2. ZERO THE LENGTH IN CASE OF ERROR.                             * 00045
*                                                                     * 00048
*    3. DETERMINE WHICH TABLE TO USE.  ERRORS > 29000 ARE IN A        * 00048
*       SEPARATE TABLE.                                               * 00048
*                                                                     * 00052
*    4. CONVERT THE ERRO TO AN OFFSET IN THE TABLE AND SEE IF IT IS   * 00052
*       IN IN RANGE.                                                  * 00052
*                                                                     * 00057
*    5. LOAD THE ADDRESS OF THE MESSAGE AND SEE IF IT IS ZERO THIS    * 00057
*       MEANS UNKNOWN ERRNOJR, NO MESSAGE,.                           * 00057
*                                                                     * 00060
*    6. FIND THE END OF THE MESSAGE AND CALCULATE THE LENGTH.         * 00060
*                                                                     * 00062
*    7. PLACE THE LENGTH AND THE MESSAGE ADDRESS IN THE RETURNED      * 00062
*       PARMS.                                                        * 00062
*                                                                     * 00042
* OUTPUTS (*FROM FUNCTIONS):                                          * 00042
*                                                                     * 00030
*    LEN -- PONTER TO FULLWORD INT (*1,2,4,7)                         * 00030
*       THIS IS THE ADDRESS OF A FULLWORD TO CONTAIN THE LENGTH OF    * 00031
*       THE RETURNED MESSAGE.  IF NO MESSAGE IS RETURNED, THE LENGTH  * 00031
*       IS SET TO ZERO.                                               * 00031
*                                                                     * 00035
*    MSG -- POINTER TO FULLWORD ADDR E   THIS IS THE ADDRESS OF A     * 00035
*       FULLWORD TO CONTAIN THE MESSAGE ADDRESS. THE MESSAGE ADDRESS  * 00035
*       IS A STATIC STRING WHICH IS TERMINATED BY A BYTE OF ZEROS.    * 00035
*       (*1,7)                                                        * 00035
*                                                                     * 00067
* NOTES:                                                              * 00067
*                                                                     * 00067
*    1. SAMPLE CALL:                                                  * 00067
*                 CALL  STRREA,(ERRNOJR,LEN,MSGADDR)                  * 00068
*       ERRNO    DC  F'123'                                           * 00069
*       LEN      DC  F'0'                                             * 00070
*       MSGADDR  DC  A(0)                                             * 00071
*                                                                     * 00072
*********************************************************************** 00072
         EJECT                                                          00073
STRREA   RENTR  BASE=11,PARM=(10,PARMS),WORK=(WORKLEN,WORKAREA),       X00074
               ENV=OS,MAIN=YES                                          00075
STRREA   AMODE 31                                                       00076
STRREA   RMODE ANY                                                      00077
         EJECT                                                          00078
         LM    R4,R6,0(R10)        LOAD PARM LIST INTO REGS             00079
         L     R4,0(R4)            R4 CONTAINS THE ERRNOJR (REASON)     00080
*                                  R5 POINTS TO LEN FULLWORD            00081
*                                  R6 POINTS TO MSG ADDR                00082
         N     R4,=X'0000FFFF'     ONLY THE LOW HALFWORD COUNTS         00083
         XC    0(4,R5),0(R5)       ZERO THE LEN                         00084
         L     R15,=A(PLINULL)                                          00085
         ST    R15,0(,R6)                                               00086
         SPACE                                                          00087
         L     R7,=A(ETAB)                                              00088
         L     R8,=A(LASTMSG)                                           00089
         C     R4,=F'29000'                                             00090
         BL    KEEP1                                                    00091
         SPACE                                                          00092
         L     R7,=A(ETAB2)                                             00093
         L     R8,=A(LASTMSG2)                                          00094
         S     R4,=F'29000'                                             00095
         SPACE                                                          00096
KEEP1    DS    0H                                                       00097
         SLA   R4,2                MULTIPLY ERRNO BY 4                  00098
         LA    R14,0(R4,R7)        POINT TO THE ERROR ADDR              00099
         CR    R14,R8              ARE WE PAST THE TABLE?               00100
         BH    RETURN              YES, NO MESSAGE                      00101
         SPACE                                                          00102
         L     R15,0(R14)          LOAD THE MESSAGE ADDR                00103
         LTR   R15,R15             IS IT ZERO?                          00104
         BZ    RETURN              IF SO, NO MESSAGE                    00105
         SPACE                                                          00106
*        NOTE THAT ALL MESSAGES ARE LESS THAN 255 CHARACTERS            00107
         TRT   0(256,R15),FINDNUL  FIND END OF MESSAGE                  00108
         SR    R1,R15              CALCULATE THE LENGTH                 00109
         ST    R1,0(,R5)           SAVE THE LENGTH                      00110
         ST    R15,0(,R6)          SAVE THE MESSAGE ADDR                00111
         EJECT                                                          00112
RETURN   DS    0H                                                       00113
         REXIT ENV=BOTH                                                 00114
         EJECT                                                          00115
*                    0 1 2 3 4 5 6 7 8 9 A B C D E F                    00116
FINDNUL  DC    XL16'FF000000000000000000000000000000'  00               00117
         DC    XL16'00000000000000000000000000000000'  10               00118
         DC    XL16'00000000000000000000000000000000'  20               00119
         DC    XL16'00000000000000000000000000000000'  30               00120
         DC    XL16'00000000000000000000000000000000'  40               00121
         DC    XL16'00000000000000000000000000000000'  50               00122
         DC    XL16'00000000000000000000000000000000'  60               00123
         DC    XL16'00000000000000000000000000000000'  70               00124
         DC    XL16'00000000000000000000000000000000'  80               00125
         DC    XL16'00000000000000000000000000000000'  90               00126
         DC    XL16'00000000000000000000000000000000'  A0               00127
         DC    XL16'00000000000000000000000000000000'  B0               00128
         DC    XL16'00000000000000000000000000000000'  C0               00129
         DC    XL16'00000000000000000000000000000000'  D0               00130
         DC    XL16'00000000000000000000000000000000'  E0               00131
         DC    XL16'00000000000000000000000000000000'  F0               00132
         EJECT                                                          00133
*****************************************************************       00134
*                                                               *       00135
* REASON CODE TABLES  ETAB 0 - 1480   ETAB2  29000 29700        *       00136
*                                                               *       00137
*****************************************************************       00138
         LTORG                                                          00139
PLINULL  EQU   X'FF000000'                                              00140
         SPACE                                                          00141
ETAB     DC    1480A(0)                                                 00142
LASTMSG  EQU   *                                                        00143
ETAB2    DC    700A(0)                                                  00144
LASTMSG2 EQU   *                                                        00145
         EJECT                                                          00146
*****************************************************************       00147
*                                                               *       00148
* R E A S O N   C O D E S  =  E R R N O  J R.                   *       00149
*                                                               *       00150
*                                                               *       00151
*****************************************************************       00152
*         ORG   ETAB+(4*JROK)                                           00153
*         DC    A(MJROK)                                                00154
*         ORG                                                           00155
*MJROK DC C'The return code value describes the error'                  00156
*         DC    X'00'                                                   00157
         ORG   ETAB+(4*JRNOTKEY8)                                       00158
         DC    A(MJRNOTKEY8)                                            00159
         ORG                                                            00160
MJRNOTKEY8 DC C'The task is not in PSW key 8'                           00161
         DC    X'00'                                                    00162
         ORG   ETAB+(4*JRMAXCHILD)                                      00163
         DC    A(MJRMAXCHILD)                                           00164
         ORG                                                            00165
MJRMAXCHILD DC C'The maximum number of processes for this user ID has ' 00166
         DC    C'been exceeded'                                         00167
         DC    X'00'                                                    00168
         ORG   ETAB+(4*JRMAXUIDS)                                       00169
         DC    A(MJRMAXUIDS)                                            00170
         ORG                                                            00171
MJRMAXUIDS DC C'The maximum number of OpenMVS user IDs is exceeded'     00172
         DC    X'00'                                                    00173
         ORG   ETAB+(4*JRAPPCERRALLOC)                                  00174
         DC    A(MJRAPPCERRALLOC)                                       00175
         ORG                                                            00176
MJRAPPCERRALLOC DC C'An APPC/MVS Allocate Conversation error occurred'  00177
         DC    X'00'                                                    00178
         ORG   ETAB+(4*JRAPPCERRSEND)                                   00179
         DC    A(MJRAPPCERRSEND)                                        00180
         ORG                                                            00181
MJRAPPCERRSEND DC C'An APPC/MVS Send_Data error occurred'               00182
         DC    X'00'                                                    00183
         ORG   ETAB+(4*JRAPPCERRRECV)                                   00184
         DC    A(MJRAPPCERRRECV)                                        00185
         ORG                                                            00186
MJRAPPCERRRECV DC C'An APPC/MVS Receive_and_Wait error occurred'        00187
         DC    X'00'                                                    00188
         ORG   ETAB+(4*JRAPPCERRACCEPT)                                 00189
         DC    A(MJRAPPCERRACCEPT)                                      00190
         ORG                                                            00191
MJRAPPCERRACCEPT DC C'An APPC/MVS Accept_Conversation error occurred'   00192
         DC    X'00'                                                    00193
         ORG   ETAB+(4*JRFORKEXITRCPARENTNOROOM)                        00194
         DC    A(MJRFORKEXITRCPARENTNOROOM)                             00195
         ORG                                                            00196
MJRFORKEXITRCPARENTNOROOM DC C'Not enough work space exists for a pare' 00197
         DC    C'nt fork exit'                                          00198
         DC    X'00'                                                    00199
         ORG   ETAB+(4*JRFORKEXITRCPARENTBADENV)                        00200
         DC    A(MJRFORKEXITRCPARENTBADENV)                             00201
         ORG                                                            00202
MJRFORKEXITRCPARENTBADENV DC C'Forking is not supported under the curr' 00203
         DC    C'ent parent environment'                                00204
         DC    X'00'                                                    00205
         ORG   ETAB+(4*JRFORKVSMLISTTOOLARGE)                           00206
         DC    A(MJRFORKVSMLISTTOOLARGE)                                00207
         ORG                                                            00208
MJRFORKVSMLISTTOOLARGE DC C'The storage is insufficient to hold VSMLIS' 00209
         DC    C'T output'                                              00210
         DC    X'00'                                                    00211
         ORG   ETAB+(4*JRKERNELREADY)                                   00212
         DC    A(MJRKERNELREADY)                                        00213
         ORG                                                            00214
MJRKERNELREADY DC C'The system is not in a ready state'                 00215
         DC    X'00'                                                    00216
         ORG   ETAB+(4*JRMAXPROC)                                       00217
         DC    A(MJRMAXPROC)                                            00218
         ORG                                                            00219
MJRMAXPROC DC C'The maximum number of processes was exceeded'           00220
         DC    X'00'                                                    00221
         ORG   ETAB+(4*JRNOSECURITYPRODUCT)                             00222
         DC    A(MJRNOSECURITYPRODUCT)                                  00223
         ORG                                                            00224
MJRNOSECURITYPRODUCT DC C'A security product is not installed'          00225
         DC    X'00'                                                    00226
         ORG   ETAB+(4*JRFILESYSNOTTHERE)                               00227
         DC    A(MJRFILESYSNOTTHERE)                                    00228
         ORG                                                            00229
MJRFILESYSNOTTHERE DC C'The file system named does not exist'           00230
         DC    X'00'                                                    00231
         ORG   ETAB+(4*JRFILESYSWASRESET)                               00232
         DC    A(MJRFILESYSWASRESET)                                    00233
         ORG                                                            00234
MJRFILESYSWASRESET DC C'The file system named was reset by another use' 00235
         DC    C'r'                                                     00236
         DC    X'00'                                                    00237
         ORG   ETAB+(4*JRNEGATIVEVALUEINVALID)                          00238
         DC    A(MJRNEGATIVEVALUEINVALID)                               00239
         ORG                                                            00240
MJRNEGATIVEVALUEINVALID DC C'A negative value cannot be supplied for o' 00241
         DC    C'ne of the parameters'                                  00242
         DC    X'00'                                                    00243
         ORG   ETAB+(4*JRUNLMOUNTRO)                                    00244
         DC    A(MJRUNLMOUNTRO)                                         00245
         ORG                                                            00246
MJRUNLMOUNTRO DC C'The unlink call was on a read-only file system'      00247
         DC    X'00'                                                    00248
         ORG   ETAB+(4*JRRFILEWRONLY)                                   00249
         DC    A(MJRRFILEWRONLY)                                        00250
         ORG                                                            00251
MJRRFILEWRONLY DC C'A call tried to read a file opened as write-only'   00252
         DC    X'00'                                                    00253
         ORG   ETAB+(4*JRWFILERDONLY)                                   00254
         DC    A(MJRWFILERDONLY)                                        00255
         ORG                                                            00256
MJRWFILERDONLY DC C'A call tried to write to a file opened as read-onl' 00257
         DC    C'y'                                                     00258
         DC    X'00'                                                    00259
         ORG   ETAB+(4*JRNEGFILEDES)                                    00260
         DC    A(MJRNEGFILEDES)                                         00261
         ORG                                                            00262
MJRNEGFILEDES DC C'A negative file descriptor was requested'            00263
         DC    X'00'                                                    00264
         ORG   ETAB+(4*JRFILEDESNOTINUSE)                               00265
         DC    A(MJRFILEDESNOTINUSE)                                    00266
         ORG                                                            00267
MJRFILEDESNOTINUSE DC C'The requested file descriptor is not in use'    00268
         DC    X'00'                                                    00269
         ORG   ETAB+(4*JRMKDIREXIST)                                    00270
         DC    A(MJRMKDIREXIST)                                         00271
         ORG                                                            00272
MJRMKDIREXIST DC C'The requested file directory already exists'         00273
         DC    X'00'                                                    00274
         ORG   ETAB+(4*JRPATHTOOLONG)                                   00275
         DC    A(MJRPATHTOOLONG)                                        00276
         ORG                                                            00277
MJRPATHTOOLONG DC C'The pathname is too long'                           00278
         DC    X'00'                                                    00279
         ORG   ETAB+(4*JRNULLINPATH)                                    00280
         DC    A(MJRNULLINPATH)                                         00281
         ORG                                                            00282
MJRNULLINPATH DC C'The pathname or file name contains a null'           00283
         DC    X'00'                                                    00284
         ORG   ETAB+(4*JRCOMPNOTDIR)                                    00285
         DC    A(MJRCOMPNOTDIR)                                         00286
         ORG                                                            00287
MJRCOMPNOTDIR DC C'A node in the pathname is not a directory'           00288
         DC    X'00'                                                    00289
         ORG   ETAB+(4*JRDIRNOTFOUND)                                   00290
         DC    A(MJRDIRNOTFOUND)                                        00291
         ORG                                                            00292
MJRDIRNOTFOUND DC C'A directory in the pathname was not found'          00293
         DC    X'00'                                                    00294
         ORG   ETAB+(4*JRCOMPNAMETOOLONG)                               00295
         DC    A(MJRCOMPNAMETOOLONG)                                    00296
         ORG                                                            00297
MJRCOMPNAMETOOLONG DC C'A component in the pathname was too long'       00298
         DC    X'00'                                                    00299
         ORG   ETAB+(4*JRINVOPENFLAGS)                                  00300
         DC    A(MJRINVOPENFLAGS)                                       00301
         ORG                                                            00302
MJRINVOPENFLAGS DC C'The open call detected incorrect open flags'       00303
         DC    X'00'                                                    00304
         ORG   ETAB+(4*JRTRNOTREGFILE)                                  00305
         DC    A(MJRTRNOTREGFILE)                                       00306
         ORG                                                            00307
MJRTRNOTREGFILE DC C'Truncate is valid only on a regular file'          00308
         DC    X'00'                                                    00309
         ORG   ETAB+(4*JRCLNEEDCLOSE)                                   00310
         DC    A(MJRCLNEEDCLOSE)                                        00311
         ORG                                                            00312
MJRCLNEEDCLOSE DC C'The closedir call was for a file that was opened w' 00313
         DC    C'ith the open call'                                     00314
         DC    X'00'                                                    00315
         ORG   ETAB+(4*JRPFSDEAD)                                       00316
         DC    A(MJRPFSDEAD)                                            00317
         ORG                                                            00318
MJRPFSDEAD DC C'The file system owning the file is no longer active'    00319
         DC    X'00'                                                    00320
         ORG   ETAB+(4*JRMKDIR)                                         00321
         DC    A(MJRMKDIR)                                              00322
         ORG                                                            00323
MJRMKDIR DC C'The mkdir service is not supported by this file system'   00324
         DC    X'00'                                                    00325
         ORG   ETAB+(4*JRCLOSE)                                         00326
         DC    A(MJRCLOSE)                                              00327
         ORG                                                            00328
MJRCLOSE DC C'The vnode operation CLOSE is not supported by this file ' 00329
         DC    C'system'                                                00330
         DC    X'00'                                                    00331
         ORG   ETAB+(4*JRRDWR)                                          00332
         DC    A(MJRRDWR)                                               00333
         ORG                                                            00334
MJRRDWR DC C'Vnode operation RDWR is not supported by this file system' 00335
         DC    X'00'                                                    00336
         ORG   ETAB+(4*JRLOOKUP)                                        00337
         DC    A(MJRLOOKUP)                                             00338
         ORG                                                            00339
MJRLOOKUP DC C'Lookup is not supported by this file system'             00340
         DC    X'00'                                                    00341
         ORG   ETAB+(4*JRAPPCCHECKSTATE)                                00342
         DC    A(MJRAPPCCHECKSTATE)                                     00343
         ORG                                                            00344
MJRAPPCCHECKSTATE DC C'An APPC/MVS receive error occurred while the AP' 00345
         DC    C'PC/MVS status was being checked'                       00346
         DC    X'00'                                                    00347
         ORG   ETAB+(4*JROPEN)                                          00348
         DC    A(MJROPEN)                                               00349
         ORG                                                            00350
MJROPEN DC C'The open service is not supported by this file system'     00351
         DC    X'00'                                                    00352
         ORG   ETAB+(4*JRCREATE)                                        00353
         DC    A(MJRCREATE)                                             00354
         ORG                                                            00355
MJRCREATE DC C'The create service is not supported by this file system' 00356
         DC    X'00'                                                    00357
         ORG   ETAB+(4*JRNOPATH)                                        00358
         DC    A(MJRNOPATH)                                             00359
         ORG                                                            00360
MJRNOPATH DC C'The path length is not greater than 0'                   00361
         DC    X'00'                                                    00362
         ORG   ETAB+(4*JRNOTACTIVE)                                     00363
         DC    A(MJRNOTACTIVE)                                          00364
         ORG                                                            00365
MJRNOTACTIVE DC C'The OpenMVS kernel is not active'                     00366
         DC    X'00'                                                    00367
         ORG   ETAB+(4*JRCHDNOTDIR)                                     00368
         DC    A(MJRCHDNOTDIR)                                          00369
         ORG                                                            00370
MJRCHDNOTDIR DC C'The chdir, fchdir, or chroot service is valid only f' 00371
         DC    C'or directory files'                                    00372
         DC    X'00'                                                    00373
         ORG   ETAB+(4*JRCHDNOENT)                                      00374
         DC    A(MJRCHDNOENT)                                           00375
         ORG                                                            00376
MJRCHDNOENT DC C'The chdir or chroot service was invoked with the name' 00377
         DC    C' of a nonexisting file'                                00378
         DC    X'00'                                                    00379
         ORG   ETAB+(4*JRINVALIDNAME)                                   00380
         DC    A(MJRINVALIDNAME)                                        00381
         ORG                                                            00382
MJRINVALIDNAME DC C'File system name characters must be greater than 4' 00383
         DC    C'0 (hex) and less than FF (hex)'                        00384
         DC    X'00'                                                    00385
         ORG   ETAB+(4*JRMKDIRRONLY)                                    00386
         DC    A(MJRMKDIRRONLY)                                         00387
         ORG                                                            00388
MJRMKDIRRONLY DC C'The directory cannot be created in a read-only file' 00389
         DC    C' system'                                               00390
         DC    X'00'                                                    00391
         ORG   ETAB+(4*JRLNKDIR)                                        00392
         DC    A(MJRLNKDIR)                                             00393
         ORG                                                            00394
MJRLNKDIR DC C'Hard links cannot be made to directory files'            00395
         DC    X'00'                                                    00396
         ORG   ETAB+(4*JRLSKONPIPE)                                     00397
         DC    A(MJRLSKONPIPE)                                          00398
         ORG                                                            00399
MJRLSKONPIPE DC C'The lseek service cannot be performed on a pipe or s' 00400
         DC    C'ocket'                                                 00401
         DC    X'00'                                                    00402
         ORG   ETAB+(4*JRLSKOFFSETISINVALID)                            00403
         DC    A(MJRLSKOFFSETISINVALID)                                 00404
         ORG                                                            00405
MJRLSKOFFSETISINVALID DC C'The offset given for lseek service is incor' 00406
         DC    C'rect'                                                  00407
         DC    X'00'                                                    00408
         ORG   ETAB+(4*JRLSKWHENCEISINVALID)                            00409
         DC    A(MJRLSKWHENCEISINVALID)                                 00410
         ORG                                                            00411
MJRLSKWHENCEISINVALID DC C'The whence given for the lseek service is i' 00412
         DC    C'ncorrect'                                              00413
         DC    X'00'                                                    00414
         ORG   ETAB+(4*JRFSNOTSTART)                                    00415
         DC    A(MJRFSNOTSTART)                                         00416
         ORG                                                            00417
MJRFSNOTSTART DC C'The file system specified was not started'           00418
         DC    X'00'                                                    00419
         ORG   ETAB+(4*JRISMOUNTED)                                     00420
         DC    A(MJRISMOUNTED)                                          00421
         ORG                                                            00422
MJRISMOUNTED DC C'The file system is already mounted'                   00423
         DC    X'00'                                                    00424
         ORG   ETAB+(4*JRMOUNTPT)                                       00425
         DC    A(MJRMOUNTPT)                                            00426
         ORG                                                            00427
MJRMOUNTPT DC C'A problem was found with the mount point specified'     00428
         DC    X'00'                                                    00429
         ORG   ETAB+(4*JRUNLNOENT)                                      00430
         DC    A(MJRUNLNOENT)                                           00431
         ORG                                                            00432
MJRUNLNOENT DC C'The file to be unlinked does not exist'                00433
         DC    X'00'                                                    00434
         ORG   ETAB+(4*JRUNLDIR)                                        00435
         DC    A(MJRUNLDIR)                                             00436
         ORG                                                            00437
MJRUNLDIR DC C'The unlink service was requested on a directory file'    00438
         DC    X'00'                                                    00439
         ORG   ETAB+(4*JRREADONLYFILESETWRITEREQ)                       00440
         DC    A(MJRREADONLYFILESETWRITEREQ)                            00441
         ORG                                                            00442
MJRREADONLYFILESETWRITEREQ DC C'An open request for write was entered ' 00443
         DC    C'for a file system that was mounted read-only'          00444
         DC    X'00'                                                    00445
         ORG   ETAB+(4*JRREADONLYFILESETCREATREQ)                       00446
         DC    A(MJRREADONLYFILESETCREATREQ)                            00447
         ORG                                                            00448
MJRREADONLYFILESETCREATREQ DC C'A file cannot be created in a read-onl' 00449
         DC    C'y file system'                                         00450
         DC    X'00'                                                    00451
         ORG   ETAB+(4*JRNOFILENOCREATFLAG)                             00452
         DC    A(MJRNOFILENOCREATFLAG)                                  00453
         ORG                                                            00454
MJRNOFILENOCREATFLAG DC C'A service tried to open a nonexistent file w' 00455
         DC    C'ithout O_CREAT'                                        00456
         DC    X'00'                                                    00457
         ORG   ETAB+(4*JRFILEEXISTSEXCLFLAGSET)                         00458
         DC    A(MJRFILEEXISTSEXCLFLAGSET)                              00459
         ORG                                                            00460
MJRFILEEXISTSEXCLFLAGSET DC C'The file exists, but O_EXCL is specified' 00461
         DC    C' on the open call'                                     00462
         DC    X'00'                                                    00463
         ORG   ETAB+(4*JRDIRWRITEREQUEST)                               00464
         DC    A(MJRDIRWRITEREQUEST)                                    00465
         ORG                                                            00466
MJRDIRWRITEREQUEST DC C'The service tried to open a directory for writ' 00467
         DC    C'e access'                                              00468
         DC    X'00'                                                    00469
         ORG   ETAB+(4*JROPENFLAGCONFLICT)                              00470
         DC    A(MJROPENFLAGCONFLICT)                                   00471
         ORG                                                            00472
MJROPENFLAGCONFLICT DC C'The call tried to open a file with O_RDONLY a' 00473
         DC    C'nd O_TRUNC specified'                                  00474
         DC    X'00'                                                    00475
         ORG   ETAB+(4*JRPARMTOOLONG)                                   00476
         DC    A(MJRPARMTOOLONG)                                        00477
         ORG                                                            00478
MJRPARMTOOLONG DC C'On the mount, a parameter field longer than 1024 w' 00479
         DC    C'as specified'                                          00480
         DC    X'00'                                                    00481
         ORG   ETAB+(4*JRREMOVE)                                        00482
         DC    A(MJRREMOVE)                                             00483
         ORG                                                            00484
MJRREMOVE DC C'Vn_Remove is not supported by the physical file system'  00485
         DC    X'00'                                                    00486
         ORG   ETAB+(4*JRBOTHMODE)                                      00487
         DC    A(MJRBOTHMODE)                                           00488
         ORG                                                            00489
MJRBOTHMODE DC C'On the mount service, both read and read/write were s' 00490
         DC    C'pecified'                                              00491
         DC    X'00'                                                    00492
         ORG   ETAB+(4*JRNEITHERMODE)                                   00493
         DC    A(MJRNEITHERMODE)                                        00494
         ORG                                                            00495
MJRNEITHERMODE DC C'On the mount service, neither read nor read/write ' 00496
         DC    C'were specified'                                        00497
         DC    X'00'                                                    00498
         ORG   ETAB+(4*JRBUFFTOOSMALL)                                  00499
         DC    A(MJRBUFFTOOSMALL)                                       00500
         ORG                                                            00501
MJRBUFFTOOSMALL DC C'The buffer for return information is too small'    00502
         DC    X'00'                                                    00503
         ORG   ETAB+(4*JRFILENOTTHERE)                                  00504
         DC    A(MJRFILENOTTHERE)                                       00505
         ORG                                                            00506
MJRFILENOTTHERE DC C'The requested file does not exist'                 00507
         DC    X'00'                                                    00508
         ORG   ETAB+(4*JRREADDIR)                                       00509
         DC    A(MJRREADDIR)                                            00510
         ORG                                                            00511
MJRREADDIR DC C'The readdir service vnode operation is not supported'   00512
         DC    X'00'                                                    00513
         ORG   ETAB+(4*JRGETATTR)                                       00514
         DC    A(MJRGETATTR)                                            00515
         ORG                                                            00516
MJRGETATTR DC C'GetAttr is not supported by this file system'           00517
         DC    X'00'                                                    00518
         ORG   ETAB+(4*JRRDDFILENOTDIR)                                 00519
         DC    A(MJRRDDFILENOTDIR)                                      00520
         ORG                                                            00521
MJRRDDFILENOTDIR DC C'The readdir service request was on a file that w' 00522
         DC    C'as not opened as a directory'                          00523
         DC    X'00'                                                    00524
         ORG   ETAB+(4*JRTARGETNOTDIR)                                  00525
         DC    A(MJRTARGETNOTDIR)                                       00526
         ORG                                                            00527
MJRTARGETNOTDIR DC C'The opendir service did not specify a directory'   00528
         DC    X'00'                                                    00529
         ORG   ETAB+(4*JROPENDIRNOTFOUND)                               00530
         DC    A(MJROPENDIRNOTFOUND)                                    00531
         ORG                                                            00532
MJROPENDIRNOTFOUND DC C'The directory specified on the opendir service' 00533
         DC    C' did not exist'                                        00534
         DC    X'00'                                                    00535
         ORG   ETAB+(4*JRNOTPRB)                                        00536
         DC    A(MJRNOTPRB)                                             00537
         ORG                                                            00538
MJRNOTPRB DC C'The current request block is not a program request bloc' 00539
         DC    C'k'                                                     00540
         DC    X'00'                                                    00541
         ORG   ETAB+(4*JRSPFILEEXISTS)                                  00542
         DC    A(MJRSPFILEEXISTS)                                       00543
         ORG                                                            00544
MJRSPFILEEXISTS DC C'The file specified on the mknod service already e' 00545
         DC    C'xisted'                                                00546
         DC    X'00'                                                    00547
         ORG   ETAB+(4*JRREADONLYFILESETMKNODREQ)                       00548
         DC    A(MJRREADONLYFILESETMKNODREQ)                            00549
         ORG                                                            00550
MJRREADONLYFILESETMKNODREQ DC C'A special file cannot be created on a ' 00551
         DC    C'read-only file system'                                 00552
         DC    X'00'                                                    00553
         ORG   ETAB+(4*JRRMDIR)                                         00554
         DC    A(MJRRMDIR)                                              00555
         ORG                                                            00556
MJRRMDIR DC C'The rmdir service vnode operation is not supported'       00557
         DC    X'00'                                                    00558
         ORG   ETAB+(4*JRPATHNOTDIR)                                    00559
         DC    A(MJRPATHNOTDIR)                                         00560
         ORG                                                            00561
MJRPATHNOTDIR DC C'The pathname does not specify a directory'           00562
         DC    X'00'                                                    00563
         ORG   ETAB+(4*JRREADONLYFS)                                    00564
         DC    A(MJRREADONLYFS)                                         00565
         ORG                                                            00566
MJRREADONLYFS DC C'This operation does not work on a read-only file sy' 00567
         DC    C'stem'                                                  00568
         DC    X'00'                                                    00569
         ORG   ETAB+(4*JRDIFFFILESETS)                                  00570
         DC    A(MJRDIFFFILESETS)                                       00571
         ORG                                                            00572
MJRDIFFFILESETS DC C'The rename service is not supported across file s' 00573
         DC    C'ystems'                                                00574
         DC    X'00'                                                    00575
         ORG   ETAB+(4*JRNEWNOTDIR)                                     00576
         DC    A(MJRNEWNOTDIR)                                          00577
         ORG                                                            00578
MJRNEWNOTDIR DC C'The new name specified on the rename service is not ' 00579
         DC    C'a directory'                                           00580
         DC    X'00'                                                    00581
         ORG   ETAB+(4*JRNEWISDIR)                                      00582
         DC    A(MJRNEWISDIR)                                           00583
         ORG                                                            00584
MJRNEWISDIR DC C'The new name specified on the rename service is a dir' 00585
         DC    C'ectory'                                                00586
         DC    X'00'                                                    00587
         ORG   ETAB+(4*JROLDNOEXIST)                                    00588
         DC    A(MJROLDNOEXIST)                                         00589
         ORG                                                            00590
MJROLDNOEXIST DC C'The old name specified on the rename service does n' 00591
         DC    C'ot exist'                                              00592
         DC    X'00'                                                    00593
         ORG   ETAB+(4*JRISFSROOT)                                      00594
         DC    A(MJRISFSROOT)                                           00595
         ORG                                                            00596
MJRISFSROOT DC C'The name specified is in use as a file system root'    00597
         DC    X'00'                                                    00598
         ORG   ETAB+(4*JRRENAME)                                        00599
         DC    A(MJRRENAME)                                             00600
         ORG                                                            00601
MJRRENAME DC C'The rename service vnode operation is not supported'     00602
         DC    X'00'                                                    00603
         ORG   ETAB+(4*JRDOTORDOTDOT)                                   00604
         DC    A(MJRDOTORDOTDOT)                                        00605
         ORG                                                            00606
MJRDOTORDOTDOT DC C'The requested function cannot be performed against' 00607
         DC    C' dot (.) or dot-dot (..)'                              00608
         DC    X'00'                                                    00609
         ORG   ETAB+(4*JRKERNELDOWN)                                    00610
         DC    A(MJRKERNELDOWN)                                         00611
         ORG                                                            00612
MJRKERNELDOWN DC C'The kernel has ended during this service'            00613
         DC    X'00'                                                    00614
         ORG   ETAB+(4*JRBADENTRYCODE)                                  00615
         DC    A(MJRBADENTRYCODE)                                       00616
         ORG                                                            00617
MJRBADENTRYCODE DC C'An incorrect entry code was specified on this req' 00618
         DC    C'uest'                                                  00619
         DC    X'00'                                                    00620
         ORG   ETAB+(4*JRFDALLOCERR)                                    00621
         DC    A(MJRFDALLOCERR)                                         00622
         ORG                                                            00623
MJRFDALLOCERR DC C'An error occurred while trying to allocate a file d' 00624
         DC    C'escriptor page.'                                       00625
         DC    X'00'                                                    00626
         ORG   ETAB+(4*JRBYTES2RWZERO)                                  00627
         DC    A(MJRBYTES2RWZERO)                                       00628
         ORG                                                            00629
MJRBYTES2RWZERO DC C'The number of bytes requested to read or write is' 00630
         DC    C' negative'                                             00631
         DC    X'00'                                                    00632
         ORG   ETAB+(4*JRRWDFILENOTDIR)                                 00633
         DC    A(MJRRWDFILENOTDIR)                                      00634
         ORG                                                            00635
MJRRWDFILENOTDIR DC C'The rewinddir service was on a file that is not ' 00636
         DC    C'a directory'                                           00637
         DC    X'00'                                                    00638
         ORG   ETAB+(4*JRROOTNODE)                                      00639
         DC    A(MJRROOTNODE)                                           00640
         ORG                                                            00641
MJRROOTNODE DC C'The requested operation cannot be done on a root'      00642
         DC    X'00'                                                    00643
         ORG   ETAB+(4*JRINVALIDSIGNAL)                                 00644
         DC    A(MJRINVALIDSIGNAL)                                      00645
         ORG                                                            00646
MJRINVALIDSIGNAL DC C'A signal number specified is incorrect      '     00647
         DC    X'00'                                                    00648
         ORG   ETAB+(4*JRINVALIDSIGACT)                                 00649
         DC    A(MJRINVALIDSIGACT)                                      00650
         ORG                                                            00651
MJRINVALIDSIGACT DC C'The action is incorrect for the specified signal' 00652
         DC    X'00'                                                    00653
         ORG   ETAB+(4*JRINVALIDSIGHOW)                                 00654
         DC    A(MJRINVALIDSIGHOW)                                      00655
         ORG                                                            00656
MJRINVALIDSIGHOW DC C'The how operand specified is incorrect'           00657
         DC    X'00'                                                    00658
         ORG   ETAB+(4*JRNOTFORDIR)                                     00659
         DC    A(MJRNOTFORDIR)                                          00660
         ORG                                                            00661
MJRNOTFORDIR DC C'The system cannot perform the requested function on ' 00662
         DC    C'a directory'                                           00663
         DC    X'00'                                                    00664
         ORG   ETAB+(4*JROLDPARTOFNEW)                                  00665
         DC    A(MJROLDPARTOFNEW)                                       00666
         ORG                                                            00667
MJROLDPARTOFNEW DC C'The old name specified on the rename service is p' 00668
         DC    C'art of the new name'                                   00669
         DC    X'00'                                                    00670
         ORG   ETAB+(4*JRTROPENEDRO)                                    00671
         DC    A(MJRTROPENEDRO)                                         00672
         ORG                                                            00673
MJRTROPENEDRO DC C'The ftruncate service was for a file opened in read' 00674
         DC    C'-only mode'                                            00675
         DC    X'00'                                                    00676
         ORG   ETAB+(4*JRTRMOUNTEDRO)                                   00677
         DC    A(MJRTRMOUNTEDRO)                                        00678
         ORG                                                            00679
MJRTRMOUNTEDRO DC C'The ftruncate service was for a file on a file sys' 00680
         DC    C'tem mounted in read-only mode'                         00681
         DC    X'00'                                                    00682
         ORG   ETAB+(4*JRTRNEGOFFSET)                                   00683
         DC    A(MJRTRNEGOFFSET)                                        00684
         ORG                                                            00685
MJRTRNEGOFFSET DC C'A negative offset was given to a file truncate ser' 00686
         DC    C'vice'                                                  00687
         DC    X'00'                                                    00688
         ORG   ETAB+(4*JROUTOFLOCKS)                                    00689
         DC    A(MJROUTOFLOCKS)                                         00690
         ORG                                                            00691
MJROUTOFLOCKS DC C'The file system has run out of locks'                00692
         DC    X'00'                                                    00693
         ORG   ETAB+(4*JRMOUNT)                                         00694
         DC    A(MJRMOUNT)                                              00695
         ORG                                                            00696
MJRMOUNT DC C'The mount service VFS operation is not supported'         00697
         DC    X'00'                                                    00698
         ORG   ETAB+(4*JRUMOUNT)                                        00699
         DC    A(MJRUMOUNT)                                             00700
         ORG                                                            00701
MJRUMOUNT DC C'The unmount service VFS operation is not supported'      00702
         DC    X'00'                                                    00703
         ORG   ETAB+(4*JRSYNC)                                          00704
         DC    A(MJRSYNC)                                               00705
         ORG                                                            00706
MJRSYNC DC C'The Sync VFS operation is not supported'                   00707
         DC    X'00'                                                    00708
         ORG   ETAB+(4*JRSTATFS)                                        00709
         DC    A(MJRSTATFS)                                             00710
         ORG                                                            00711
MJRSTATFS DC C'The StatFS VFS operation is not supported'               00712
         DC    X'00'                                                    00713
         ORG   ETAB+(4*JRVGET)                                          00714
         DC    A(MJRVGET)                                               00715
         ORG                                                            00716
MJRVGET DC C'The VGet VFS operation is not supported'                   00717
         DC    X'00'                                                    00718
         ORG   ETAB+(4*JRINVALIDPARMS)                                  00719
         DC    A(MJRINVALIDPARMS)                                       00720
         ORG                                                            00721
MJRINVALIDPARMS DC C'An incorrect combination of parameters was specif' 00722
         DC    C'ied'                                                   00723
         DC    X'00'                                                    00724
         ORG   ETAB+(4*JRFSPARENTFS)                                    00725
         DC    A(MJRFSPARENTFS)                                         00726
         ORG                                                            00727
MJRFSPARENTFS DC C'The file system has file systems mounted on it'      00728
         DC    X'00'                                                    00729
         ORG   ETAB+(4*JRFSUNMOUNTINPROGRESS)                           00730
         DC    A(MJRFSUNMOUNTINPROGRESS)                                00731
         ORG                                                            00732
MJRFSUNMOUNTINPROGRESS DC C'An unmount service is already in progress'  00733
         DC    X'00'                                                    00734
         ORG   ETAB+(4*JRFSMUSTRESET)                                   00735
         DC    A(MJRFSMUSTRESET)                                        00736
         ORG                                                            00737
MJRFSMUSTRESET DC C'An unmount service must specify reset when already' 00738
         DC    C' unmounting'                                           00739
         DC    X'00'                                                    00740
         ORG   ETAB+(4*JRFSFORCEUMOUNT)                                 00741
         DC    A(MJRFSFORCEUMOUNT)                                      00742
         ORG                                                            00743
MJRFSFORCEUMOUNT DC C'Reset fails when the file system is forced to un' 00744
         DC    C'mount'                                                 00745
         DC    X'00'                                                    00746
         ORG   ETAB+(4*JRAUDIT)                                         00747
         DC    A(MJRAUDIT)                                              00748
         ORG                                                            00749
MJRAUDIT DC C'The audit vnode operation is not supported'               00750
         DC    X'00'                                                    00751
         ORG   ETAB+(4*JRUSERNOTPRIVILEGED)                             00752
         DC    A(MJRUSERNOTPRIVILEGED)                                  00753
         ORG                                                            00754
MJRUSERNOTPRIVILEGED DC C'The requester of the service is not privileg' 00755
         DC    C'ed'                                                    00756
         DC    X'00'                                                    00757
         ORG   ETAB+(4*JRMUSTUMOUNTIMMED)                               00758
         DC    A(MJRMUSTUMOUNTIMMED)                                    00759
         ORG                                                            00760
MJRMUSTUMOUNTIMMED DC C'An immediate unmount must precede a forced unm' 00761
         DC    C'ount'                                                  00762
         DC    X'00'                                                    00763
         ORG   ETAB+(4*JRNOTQUIESCED)                                   00764
         DC    A(MJRNOTQUIESCED)                                        00765
         ORG                                                            00766
MJRNOTQUIESCED DC C'A quiesce service must precede an unquiesce'        00767
         DC    X'00'                                                    00768
         ORG   ETAB+(4*JRQUIESCED)                                      00769
         DC    A(MJRQUIESCED)                                           00770
         ORG                                                            00771
MJRQUIESCED DC C'There was a previous quiesce request'                  00772
         DC    X'00'                                                    00773
         ORG   ETAB+(4*JRINVALIDREQUESTER)                              00774
         DC    A(MJRINVALIDREQUESTER)                                   00775
         ORG                                                            00776
MJRINVALIDREQUESTER DC C'The requester of the function cannot make the' 00777
         DC    C' request'                                              00778
         DC    X'00'                                                    00779
         ORG   ETAB+(4*JRPFSSUSPEND)                                    00780
         DC    A(MJRPFSSUSPEND)                                         00781
         ORG                                                            00782
MJRPFSSUSPEND DC C'The PFS is waiting to restart.'                      00783
         DC    X'00'                                                    00784
         ORG   ETAB+(4*JRPFSABEND)                                      00785
         DC    A(MJRPFSABEND)                                           00786
         ORG                                                            00787
MJRPFSABEND DC C'The physical file system abended'                      00788
         DC    X'00'                                                    00789
         ORG   ETAB+(4*JRNOSTORAGE)                                     00790
         DC    A(MJRNOSTORAGE)                                          00791
         ORG                                                            00792
MJRNOSTORAGE DC C'Insufficient storage to copy user parameters'         00793
         DC    X'00'                                                    00794
         ORG   ETAB+(4*JRACTIVEPROCESS)                                 00795
         DC    A(MJRACTIVEPROCESS)                                      00796
         ORG                                                            00797
MJRACTIVEPROCESS DC C'Multiple processes in the address space prevent ' 00798
         DC    C'the termination of the job step process'               00799
         DC    X'00'                                                    00800
         ORG   ETAB+(4*JRPFSCTL)                                        00801
         DC    A(MJRPFSCTL)                                             00802
         ORG                                                            00803
MJRPFSCTL DC C'The Pfsctl operation is not supported'                   00804
         DC    X'00'                                                    00805
         ORG   ETAB+(4*JRPFSINITFAILED)                                 00806
         DC    A(MJRPFSINITFAILED)                                      00807
         ORG                                                            00808
MJRPFSINITFAILED DC C'The file system did not initialize'               00809
         DC    X'00'                                                    00810
         ORG   ETAB+(4*JRSPAWNNOCOMMONSTG)                              00811
         DC    A(MJRSPAWNNOCOMMONSTG)                                   00812
         ORG                                                            00813
MJRSPAWNNOCOMMONSTG DC C'Spawn cannot be completed because not enough ' 00814
         DC    C'common storage is available to complete the request'   00815
         DC    X'00'                                                    00816
         ORG   ETAB+(4*JRSPAWNARGSTOOBIG)                               00817
         DC    A(MJRSPAWNARGSTOOBIG)                                    00818
         ORG                                                            00819
MJRSPAWNARGSTOOBIG DC C'Spawn cannot be completed because the total le' 00820
         DC    C'ngth of arguments specified by the caller exceeds the' 00821
         DC    C' system imposed limit of 1 finespace.000 finespace.00' 00822
         DC    C'0 bytes'                                               00823
         DC    X'00'                                                    00824
         ORG   ETAB+(4*JRFUNCUNDEFINED)                                 00825
         DC    A(MJRFUNCUNDEFINED)                                      00826
         ORG                                                            00827
MJRFUNCUNDEFINED DC C'The oe_env_np (BPX1ENV) service cannot be comple' 00828
         DC    C'ted because the Function_code specified is undefined'  00829
         DC    X'00'                                                    00830
         ORG   ETAB+(4*JRBADARGCOUNT)                                   00831
         DC    A(MJRBADARGCOUNT)                                        00832
         ORG                                                            00833
MJRBADARGCOUNT DC C'The oe_env_np (BPX1ENV) service cannot be complete' 00834
         DC    C'd because the number of input or output arguments are' 00835
         DC    C' incorrect for the Function_code specified'            00836
         DC    X'00'                                                    00837
         ORG   ETAB+(4*JRBADINPUTVALUE)                                 00838
         DC    A(MJRBADINPUTVALUE)                                      00839
         ORG                                                            00840
MJRBADINPUTVALUE DC C'The oe_env_np (BPX1ENV) service cannot be comple' 00841
         DC    C'ted because an input argument contained an undefined ' 00842
         DC    C'value'                                                 00843
         DC    X'00'                                                    00844
         ORG   ETAB+(4*JRNOUSEREXIT)                                    00845
         DC    A(MJRNOUSEREXIT)                                         00846
         ORG                                                            00847
MJRNOUSEREXIT DC C'A pthread_quiesce (BPX1PTQ) service FREEZE_EXIT req' 00848
         DC    C'uest cannot complete because no user exit has been re' 00849
         DC    C'gistered with the oe_env_np (BPX1ENV) service'         00850
         DC    X'00'                                                    00851
         ORG   ETAB+(4*JRPROCESSNOTFROZEN)                              00852
         DC    A(MJRPROCESSNOTFROZEN)                                   00853
         ORG                                                            00854
MJRPROCESSNOTFROZEN DC C'A pthread_quiesce (BPX1PTQ) service FREEZE_EX' 00855
         DC    C'IT request cannot complete because the process is  no' 00856
         DC    C't frozen'                                              00857
         DC    X'00'                                                    00858
         ORG   ETAB+(4*JRFREEZEEXITTOOSLOW)                             00859
         DC    A(MJRFREEZEEXITTOOSLOW)                                  00860
         ORG                                                            00861
MJRFREEZEEXITTOOSLOW DC C'A pthread_quiesce (BPX1PTQ) service FREEZE_E' 00862
         DC    C'XIT request cannot complete because user exits did no' 00863
         DC    C't return in the expected time'                         00864
         DC    X'00'                                                    00865
         ORG   ETAB+(4*JRRESRPORTSPECIFIED)                             00866
         DC    A(MJRRESRPORTSPECIFIED)                                  00867
         ORG                                                            00868
MJRRESRPORTSPECIFIED DC C'During a Socket Bind request, a Reserved Por' 00869
         DC    C't was incorrectly specified'                           00870
         DC    X'00'                                                    00871
         ORG   ETAB+(4*JRRESRPORTNOTAVAIL)                              00872
         DC    A(MJRRESRPORTNOTAVAIL)                                   00873
         ORG                                                            00874
MJRRESRPORTNOTAVAIL DC C'All port zero, INADDR_ANY, reserved ports are' 00875
         DC    C' in use'                                               00876
         DC    X'00'                                                    00877
         ORG   ETAB+(4*JRRESRPORTUSED)                                  00878
         DC    A(MJRRESRPORTUSED)                                       00879
         ORG                                                            00880
MJRRESRPORTUSED DC C'A sockets port assignment conflict exists between' 00881
         DC    C' OMVS and a Transport Provider'                        00882
         DC    X'00'                                                    00883
         ORG   ETAB+(4*JRTLSREQUESTINVALID)                             00884
         DC    A(MJRTLSREQUESTINVALID)                                  00885
         ORG                                                            00886
MJRTLSREQUESTINVALID DC C'An invalid request has been passed for Task ' 00887
         DC    C'Level Security.'                                       00888
         DC    X'00'                                                    00889
         ORG   ETAB+(4*JRNORESERVEDPORTS)                               00890
         DC    A(MJRNORESERVEDPORTS)                                    00891
         ORG                                                            00892
MJRNORESERVEDPORTS DC C'A bind() syscall that specified port number ze' 00893
         DC    C'ro and IP address INADDR_ANY, failed because no ports' 00894
         DC    C' were reserved.'                                       00895
         DC    X'00'                                                    00896
         ORG   ETAB+(4*JRTLSIDTYPEINVALID)                              00897
         DC    A(MJRTLSIDTYPEINVALID)                                   00898
         ORG                                                            00899
MJRTLSIDTYPEINVALID DC C'An invalid ID type has been passed for Task L' 00900
         DC    C'evel Security.'                                        00901
         DC    X'00'                                                    00902
         ORG   ETAB+(4*JRTLSIDLENGTHINVALID)                            00903
         DC    A(MJRTLSIDLENGTHINVALID)                                 00904
         ORG                                                            00905
MJRTLSIDLENGTHINVALID DC C'An invalid ID length has been passed for Ta' 00906
         DC    C'sk Level Security.'                                    00907
         DC    X'00'                                                    00908
         ORG   ETAB+(4*JRTLSADDRESSLENGTHINVALID)                       00909
         DC    A(MJRTLSADDRESSLENGTHINVALID)                            00910
         ORG                                                            00911
MJRTLSADDRESSLENGTHINVALID DC C'An invalid address length has been pas' 00912
         DC    C'sed for Task Level Security.'                          00913
         DC    X'00'                                                    00914
         ORG   ETAB+(4*JRTLSCALLERISIPT)                                00915
         DC    A(MJRTLSCALLERISIPT)                                     00916
         ORG                                                            00917
MJRTLSCALLERISIPT DC C'The calling task is IPT.'                        00918
         DC    X'00'                                                    00919
         ORG   ETAB+(4*JRTLSNOTDONEBYOE)                                00920
         DC    A(MJRTLSNOTDONEBYOE)                                     00921
         ORG                                                            00922
MJRTLSNOTDONEBYOE DC C'Task level security already exists, but it was ' 00923
         DC    C'not created by a previous call to pthread_security_np' 00924
         DC    C'.'                                                     00925
         DC    X'00'                                                    00926
         ORG   ETAB+(4*JRNOPTRACETASKSEC)                               00927
         DC    A(MJRNOPTRACETASKSEC)                                    00928
         ORG                                                            00929
MJRNOPTRACETASKSEC DC C'Ptrace is active in the caller apos.s address ' 00930
         DC    C'space, task level security not allowed concurrently w' 00931
         DC    C'ith Ptrace.'                                           00932
         DC    X'00'                                                    00933
         ORG   ETAB+(4*JRSAFRESOURCEUNDEFINED)                          00934
         DC    A(MJRSAFRESOURCEUNDEFINED)                               00935
         ORG                                                            00936
MJRSAFRESOURCEUNDEFINED DC C'The resource specified by the caller is n' 00937
         DC    C'ot defined to RACF.'                                   00938
         DC    X'00'                                                    00939
         ORG   ETAB+(4*JRSAFNOUUIDTOUSER)                               00940
         DC    A(MJRSAFNOUUIDTOUSER)                                    00941
         ORG                                                            00942
MJRSAFNOUUIDTOUSER DC C'No mapping to a RACF userid exists for the DCE' 00943
         DC    C' UUID specified.'                                      00944
         DC    X'00'                                                    00945
         ORG   ETAB+(4*JRSAFNOUSERTOUUID)                               00946
         DC    A(MJRSAFNOUSERTOUUID)                                    00947
         ORG                                                            00948
MJRSAFNOUSERTOUUID DC C'No mapping to a DCE UUID exists for the RACF U' 00949
         DC    C'serid specified.'                                      00950
         DC    X'00'                                                    00951
         ORG   ETAB+(4*JRSAFNODCECLASS)                                 00952
         DC    A(MJRSAFNODCECLASS)                                      00953
         ORG                                                            00954
MJRSAFNODCECLASS DC C'The RACF DCEUUIDS class is not active.'           00955
         DC    X'00'                                                    00956
         ORG   ETAB+(4*JRSAFNOCELLUUID)                                 00957
         DC    A(MJRSAFNOCELLUUID)                                      00958
         ORG                                                            00959
MJRSAFNOCELLUUID DC C'The local cell UUID could not be determined for ' 00960
         DC    C'this RACF userid to DCE UUID conversion request.'      00961
         DC    X'00'                                                    00962
         ORG   ETAB+(4*JRCLASSLENERR)                                   00963
         DC    A(MJRCLASSLENERR)                                        00964
         ORG                                                            00965
MJRCLASSLENERR DC C'The length of the RACF class name is outside of th' 00966
         DC    C'e allowable range of 1 to 8.'                          00967
         DC    X'00'                                                    00968
         ORG   ETAB+(4*JRENTITYLENERR)                                  00969
         DC    A(MJRENTITYLENERR)                                       00970
         ORG                                                            00971
MJRENTITYLENERR DC C'The length of the RACF entity name is outside of ' 00972
         DC    C'the allowable range of 1 to 246.'                      00973
         DC    X'00'                                                    00974
         ORG   ETAB+(4*JRACCESSUNDEFINED)                               00975
         DC    A(MJRACCESSUNDEFINED)                                    00976
         ORG                                                            00977
MJRACCESSUNDEFINED DC C'The access type specified is undefined.'        00978
         DC    X'00'                                                    00979
         ORG   ETAB+(4*JRNOTSERVERAUTHORIZED)                           00980
         DC    A(MJRNOTSERVERAUTHORIZED)                                00981
         ORG                                                            00982
MJRNOTSERVERAUTHORIZED DC C'The calling address space is not permitted' 00983
         DC    C' to the BPX.SERVER Facility class or the BPX.SERVER F' 00984
         DC    C'acility class is undefined and caller not a superuser' 00985
         DC    C' (UID=0)'                                              00986
         DC    X'00'                                                    00987
         ORG   ETAB+(4*JRNORESOURCEACCESS)                              00988
         DC    A(MJRNORESOURCEACCESS)                                   00989
         ORG                                                            00990
MJRNORESOURCEACCESS DC C'The user specified by the caller does not hav' 00991
         DC    C'e the access specified to the resource'                00992
         DC    X'00'                                                    00993
         ORG   ETAB+(4*JRSURROGATEUNDEFINED)                            00994
         DC    A(MJRSURROGATEUNDEFINED)                                 00995
         ORG                                                            00996
MJRSURROGATEUNDEFINED DC C'The RACF SURROGAT class has not been activa' 00997
         DC    C'ted or no SURROGAT class profile has been defined for' 00998
         DC    C' the client'                                           00999
         DC    X'00'                                                    01000
         ORG   ETAB+(4*JRNOSURROGATEPERM)                               01001
         DC    A(MJRNOSURROGATEPERM)                                    01002
         ORG                                                            01003
MJRNOSURROGATEPERM DC C'The server is not permitted to the SURROGAT cl' 01004
         DC    C'ass profile defined for the client'                    01005
         DC    X'00'                                                    01006
         ORG   ETAB+(4*JRSAFNOTAUTHORIZED)                              01007
         DC    A(MJRSAFNOTAUTHORIZED)                                   01008
         ORG                                                            01009
MJRSAFNOTAUTHORIZED DC C'The calling address space is not authorized t' 01010
         DC    C'o use this service'                                    01011
         DC    X'00'                                                    01012
         ORG   ETAB+(4*JRNOBUFSTORAGE)                                  01013
         DC    A(MJRNOBUFSTORAGE)                                       01014
         ORG                                                            01015
MJRNOBUFSTORAGE DC C'Storage could not be obtained for I/O buffers    ' 01016
         DC    C'   '                                                   01017
         DC    X'00'                                                    01018
         ORG   ETAB+(4*JRNOVSMLIST)                                     01019
         DC    A(MJRNOVSMLIST)                                          01020
         ORG                                                            01021
MJRNOVSMLIST DC C'Fork cannot be completed because the parent process ' 01022
         DC    C'ended prematurely'                                     01023
         DC    X'00'                                                    01024
         ORG   ETAB+(4*JRFORKNORESOURCE)                                01025
         DC    A(MJRFORKNORESOURCE)                                     01026
         ORG                                                            01027
MJRFORKNORESOURCE DC C'Fork cannot be processed for lack of resource'   01028
         DC    X'00'                                                    01029
         ORG   ETAB+(4*JRSAFNOUSER)                                     01030
         DC    A(MJRSAFNOUSER)                                          01031
         ORG                                                            01032
MJRSAFNOUSER DC C'The user ID is not defined to the security product'   01033
         DC    X'00'                                                    01034
         ORG   ETAB+(4*JRSAFGROUPNOOMVS)                                01035
         DC    A(MJRSAFGROUPNOOMVS)                                     01036
         ORG                                                            01037
MJRSAFGROUPNOOMVS DC C'The current group does not have a GID defined i' 01038
         DC    C'n the OMVS segment.'                                   01039
         DC    X'00'                                                    01040
         ORG   ETAB+(4*JRSAFUSERNOOMVS)                                 01041
         DC    A(MJRSAFUSERNOOMVS)                                      01042
         ORG                                                            01043
MJRSAFUSERNOOMVS DC C'The user ID is not authorized to use OMVS'        01044
         DC    X'00'                                                    01045
         ORG   ETAB+(4*JRSAFNOUID)                                      01046
         DC    A(MJRSAFNOUID)                                           01047
         ORG                                                            01048
MJRSAFNOUID DC C'The user ID has no UID'                                01049
         DC    X'00'                                                    01050
         ORG   ETAB+(4*JRSAFNOGID)                                      01051
         DC    A(MJRSAFNOGID)                                           01052
         ORG                                                            01053
MJRSAFNOGID DC C'The user ID is in a group that has no GID'             01054
         DC    X'00'                                                    01055
         ORG   ETAB+(4*JRSAFINTERNAL)                                   01056
         DC    A(MJRSAFINTERNAL)                                        01057
         ORG                                                            01058
MJRSAFINTERNAL DC C'An internal error occurred in the security product' 01059
         DC    X'00'                                                    01060
         ORG   ETAB+(4*JRSTATUSPOSTED)                                  01061
         DC    A(MJRSTATUSPOSTED)                                       01062
         ORG                                                            01063
MJRSTATUSPOSTED DC C'A request was received to dub a thread for a proc' 01064
         DC    C'ess that is stopped or has ended'                      01065
         DC    X'00'                                                    01066
         ORG   ETAB+(4*JRTRUNC)                                         01067
         DC    A(MJRTRUNC)                                              01068
         ORG                                                            01069
MJRTRUNC DC C'Vnode operation trunc is not supported by this file syst' 01070
         DC    C'em'                                                    01071
         DC    X'00'                                                    01072
         ORG   ETAB+(4*JRFSYNC)                                         01073
         DC    A(MJRFSYNC)                                              01074
         ORG                                                            01075
MJRFSYNC DC C'Vnode operation fsync is not supported by this file syst' 01076
         DC    C'em'                                                    01077
         DC    X'00'                                                    01078
         ORG   ETAB+(4*JRSETATTR)                                       01079
         DC    A(MJRSETATTR)                                            01080
         ORG                                                            01081
MJRSETATTR DC C'Vnode operation setattr is not supported by this file ' 01082
         DC    C'system'                                                01083
         DC    X'00'                                                    01084
         ORG   ETAB+(4*JRSYMFILEALREADYEXISTS)                          01085
         DC    A(MJRSYMFILEALREADYEXISTS)                               01086
         ORG                                                            01087
MJRSYMFILEALREADYEXISTS DC C'The file requested for creation as a symb' 01088
         DC    C'olic link already exists'                              01089
         DC    X'00'                                                    01090
         ORG   ETAB+(4*JRSYMLINK)                                       01091
         DC    A(MJRSYMLINK)                                            01092
         ORG                                                            01093
MJRSYMLINK DC C'The symbolic link vnode operation is not supported'     01094
         DC    X'00'                                                    01095
         ORG   ETAB+(4*JRFILENOTSYMLINK)                                01096
         DC    A(MJRFILENOTSYMLINK)                                     01097
         ORG                                                            01098
MJRFILENOTSYMLINK DC C'The file requested for readlink service is not ' 01099
         DC    C'a symbolic link'                                       01100
         DC    X'00'                                                    01101
         ORG   ETAB+(4*JRREADLINK)                                      01102
         DC    A(MJRREADLINK)                                           01103
         ORG                                                            01104
MJRREADLINK DC C'The readlink vnode operation is not supported'         01105
         DC    X'00'                                                    01106
         ORG   ETAB+(4*JRMKNODINVALIDTYPE)                              01107
         DC    A(MJRMKNODINVALIDTYPE)                                   01108
         ORG                                                            01109
MJRMKNODINVALIDTYPE DC C'The mknod service invoked with incorrect file' 01110
         DC    C' type parameter'                                       01111
         DC    X'00'                                                    01112
         ORG   ETAB+(4*JRENDINGSLASHMKNOD)                              01113
         DC    A(MJRENDINGSLASHMKNOD)                                   01114
         ORG                                                            01115
MJRENDINGSLASHMKNOD DC C'The pathname ended with a slash on the mknod ' 01116
         DC    C'service'                                               01117
         DC    X'00'                                                    01118
         ORG   ETAB+(4*JRENDINGSLASHOCREAT)                             01119
         DC    A(MJRENDINGSLASHOCREAT)                                  01120
         ORG                                                            01121
MJRENDINGSLASHOCREAT DC C'The pathname in the open service, with the O' 01122
         DC    C'_CREAT option, ended with slash'                       01123
         DC    X'00'                                                    01124
         ORG   ETAB+(4*JRLNKNOENT)                                      01125
         DC    A(MJRLNKNOENT)                                           01126
         ORG                                                            01127
MJRLNKNOENT DC C'The service tried to link to nonexistent file'         01128
         DC    X'00'                                                    01129
         ORG   ETAB+(4*JRLNKNEWPATHEXISTS)                              01130
         DC    A(MJRLNKNEWPATHEXISTS)                                   01131
         ORG                                                            01132
MJRLNKNEWPATHEXISTS DC C'The service tried to add a link whose name al' 01133
         DC    C'ready exists'                                          01134
         DC    X'00'                                                    01135
         ORG   ETAB+(4*JRLNKACROSSFILESETS)                             01136
         DC    A(MJRLNKACROSSFILESETS)                                  01137
         ORG                                                            01138
MJRLNKACROSSFILESETS DC C'The service tried to link across file system' 01139
         DC    C's'                                                     01140
         DC    X'00'                                                    01141
         ORG   ETAB+(4*JRLNKROFILESET)                                  01142
         DC    A(MJRLNKROFILESET)                                       01143
         ORG                                                            01144
MJRLNKROFILESET DC C'The service tried to add a directory entry on a r' 01145
         DC    C'ead-only file system'                                  01146
         DC    X'00'                                                    01147
         ORG   ETAB+(4*JRLINK)                                          01148
         DC    A(MJRLINK)                                               01149
         ORG                                                            01150
MJRLINK DC C'Vn_Link is not supported by this physical file system'     01151
         DC    X'00'                                                    01152
         ORG   ETAB+(4*JREXECNMLENZERO)                                 01153
         DC    A(MJREXECNMLENZERO)                                      01154
         ORG                                                            01155
MJREXECNMLENZERO DC C'The length of the executable name passed was zer' 01156
         DC    C'o'                                                     01157
         DC    X'00'                                                    01158
         ORG   ETAB+(4*JRFSFAILQUIESCE)                                 01159
         DC    A(MJRFSFAILQUIESCE)                                      01160
         ORG                                                            01161
MJRFSFAILQUIESCE DC C'Dub or fork cannot complete, because the working' 01162
         DC    C' directory is unmounted'                               01163
         DC    X'00'                                                    01164
         ORG   ETAB+(4*JRNOTPERMITTED)                                  01165
         DC    A(MJRNOTPERMITTED)                                       01166
         ORG                                                            01167
MJRNOTPERMITTED DC C'You are not permitted to signal to the specified ' 01168
         DC    C'process ID (PID)'                                      01169
         DC    X'00'                                                    01170
         ORG   ETAB+(4*JRBUFFLENINVALID)                                01171
         DC    A(MJRBUFFLENINVALID)                                     01172
         ORG                                                            01173
MJRBUFFLENINVALID DC C'The length of the buffer is less than or equal ' 01174
         DC    C'to zero or less than a minimum length'                 01175
         DC    X'00'                                                    01176
         ORG   ETAB+(4*JRNOTREGISTERED)                                 01177
         DC    A(MJRNOTREGISTERED)                                      01178
         ORG                                                            01179
MJRNOTREGISTERED DC C'The call is not registered for signals'           01180
         DC    X'00'                                                    01181
         ORG   ETAB+(4*JRNOTSUPPORTEDFORFILETYPE)                       01182
         DC    A(MJRNOTSUPPORTEDFORFILETYPE)                            01183
         ORG                                                            01184
MJRNOTSUPPORTEDFORFILETYPE DC C'The requested service is not supported' 01185
         DC    C' for this file type'                                   01186
         DC    X'00'                                                    01187
         ORG   ETAB+(4*JRINVALIDSYMLINKLEN)                             01188
         DC    A(MJRINVALIDSYMLINKLEN)                                  01189
         ORG                                                            01190
MJRINVALIDSYMLINKLEN DC C'The contents specified for the symbolic link' 01191
         DC    C' has an incorrect length'                              01192
         DC    X'00'                                                    01193
         ORG   ETAB+(4*JRINVALIDSYMLINKCOMP)                            01194
         DC    A(MJRINVALIDSYMLINKCOMP)                                 01195
         ORG                                                            01196
MJRINVALIDSYMLINKCOMP DC C'The contents specified for symbolic link ha' 01197
         DC    C's an incorrect component'                              01198
         DC    X'00'                                                    01199
         ORG   ETAB+(4*JRFILENOTOPEN)                                   01200
         DC    A(MJRFILENOTOPEN)                                        01201
         ORG                                                            01202
MJRFILENOTOPEN DC C'The file is not opened'                             01203
         DC    X'00'                                                    01204
         ORG   ETAB+(4*JRTOOMANYSYMLINKS)                               01205
         DC    A(MJRTOOMANYSYMLINKS)                                    01206
         ORG                                                            01207
MJRTOOMANYSYMLINKS DC C'Too many symbolic links were encountered in th' 01208
         DC    C'e pathname'                                            01209
         DC    X'00'                                                    01210
         ORG   ETAB+(4*JRMVSARGTOOBIG)                                  01211
         DC    A(MJRMVSARGTOOBIG)                                       01212
         ORG                                                            01213
MJRMVSARGTOOBIG DC C'The execMVS argument string was too long'          01214
         DC    X'00'                                                    01215
         ORG   ETAB+(4*JREXECNOTREGFILE)                                01216
         DC    A(MJREXECNOTREGFILE)                                     01217
         ORG                                                            01218
MJREXECNOTREGFILE DC C'The filename specified on the exec is not a reg' 01219
         DC    C'ular file'                                             01220
         DC    X'00'                                                    01221
         ORG   ETAB+(4*JRAPPCERRRECVINCOMP)                             01222
         DC    A(MJRAPPCERRRECVINCOMP)                                  01223
         ORG                                                            01224
MJRAPPCERRRECVINCOMP DC C'An APPC/MVS Receive_and_Wait error occurred.' 01225
         DC    C'  The data is incomplete'                              01226
         DC    X'00'                                                    01227
         ORG   ETAB+(4*JRFORKNOACCESS)                                  01228
         DC    A(MJRFORKNOACCESS)                                       01229
         ORG                                                            01230
MJRFORKNOACCESS DC C'The call tried an unauthorized access to a fork c' 01231
         DC    C'hild transaction program'                              01232
         DC    X'00'                                                    01233
         ORG   ETAB+(4*JRINACTIVE)                                      01234
         DC    A(MJRINACTIVE)                                           01235
         ORG                                                            01236
MJRINACTIVE DC C'The vnode operation inactive is not supported by the ' 01237
         DC    C'file system'                                           01238
         DC    X'00'                                                    01239
         ORG   ETAB+(4*JRINVALIDMAJORNUMBER)                            01240
         DC    A(MJRINVALIDMAJORNUMBER)                                 01241
         ORG                                                            01242
MJRINVALIDMAJORNUMBER DC C'Character special file system detected an i' 01243
         DC    C'ncorrect device major number'                          01244
         DC    X'00'                                                    01245
         ORG   ETAB+(4*JRRDANDWRTFORPIPE)                               01246
         DC    A(MJRRDANDWRTFORPIPE)                                    01247
         ORG                                                            01248
MJRRDANDWRTFORPIPE DC C'The open call on a pipe was for read/write'     01249
         DC    X'00'                                                    01250
         ORG   ETAB+(4*JROPENFORWRITENOREADERS)                         01251
         DC    A(MJROPENFORWRITENOREADERS)                              01252
         ORG                                                            01253
MJROPENFORWRITENOREADERS DC C'Open for write was done before any open ' 01254
         DC    C'for read'                                              01255
         DC    X'00'                                                    01256
         ORG   ETAB+(4*JRNOREADERS)                                     01257
         DC    A(MJRNOREADERS)                                          01258
         ORG                                                            01259
MJRNOREADERS DC C'The service tried to write before any open for reads' 01260
         DC    X'00'                                                    01261
         ORG   ETAB+(4*JRINVPARMLENGTH)                                 01262
         DC    A(MJRINVPARMLENGTH)                                      01263
         ORG                                                            01264
MJRINVPARMLENGTH DC C'The parameter length is incorrect or negative'    01265
         DC    X'00'                                                    01266
         ORG   ETAB+(4*JRBADADDRESS)                                    01267
         DC    A(MJRBADADDRESS)                                         01268
         ORG                                                            01269
MJRBADADDRESS DC C'An incorrect address was encountered when the syste' 01270
         DC    C'm tried to access data'                                01271
         DC    X'00'                                                    01272
         ORG   ETAB+(4*JRSIGDURINGWAIT)                                 01273
         DC    A(MJRSIGDURINGWAIT)                                      01274
         ORG                                                            01275
MJRSIGDURINGWAIT DC C'A signal occurred during a wait'                  01276
         DC    X'00'                                                    01277
         ORG   ETAB+(4*JRRDNORWRTFORPIPE)                               01278
         DC    A(MJRRDNORWRTFORPIPE)                                    01279
         ORG                                                            01280
MJRRDNORWRTFORPIPE DC C'The open service on a pipe was for neither rea' 01281
         DC    C'd nor write'                                           01282
         DC    X'00'                                                    01283
         ORG   ETAB+(4*JRNODATA)                                        01284
         DC    A(MJRNODATA)                                             01285
         ORG                                                            01286
MJRNODATA DC C'There is no data in this pipe'                           01287
         DC    X'00'                                                    01288
         ORG   ETAB+(4*JRUSERNOTAUTHORIZED)                             01289
         DC    A(MJRUSERNOTAUTHORIZED)                                  01290
         ORG                                                            01291
MJRUSERNOTAUTHORIZED DC C'The user is not authorized for the requested' 01292
         DC    C' file descriptor'                                      01293
         DC    X'00'                                                    01294
         ORG   ETAB+(4*JRFILEISBLOCKED)                                 01295
         DC    A(MJRFILEISBLOCKED)                                      01296
         ORG                                                            01297
MJRFILEISBLOCKED DC C'The file is blocked'                              01298
         DC    X'00'                                                    01299
         ORG   ETAB+(4*JRIOCTL)                                         01300
         DC    A(MJRIOCTL)                                              01301
         ORG                                                            01302
MJRIOCTL DC C'The ioctl service is not supported by this file system'   01303
         DC    X'00'                                                    01304
         ORG   ETAB+(4*JRINVALIDPID)                                    01305
         DC    A(MJRINVALIDPID)                                         01306
         ORG                                                            01307
MJRINVALIDPID DC C'The process ID (PID) was not found, so the signal w' 01308
         DC    C'as not sent'                                           01309
         DC    X'00'                                                    01310
         AIF   ('&SYSTEM_ID'(1,4) NE 'z/OS').NOTZOS1                    01311
         ORG   ETAB+(4*JRVFSIOCTL)                                      01312
         DC    A(MJRVFSIOCTL)                                           01313
         ORG                                                            01314
MJRVFSIOCTL DC C'The Vfsioctl service is not supported by this file sy' 01315
         DC    C'stem'                                                  01316
         DC    X'00'                                                    01317
.NOTZOS1 ANOP                                                           01318
         ORG   ETAB+(4*JRINVRBSTATE)                                    01319
         DC    A(MJRINVRBSTATE)                                         01320
         ORG                                                            01321
MJRINVRBSTATE DC C'Callable services cannot be nested'                  01322
         DC    X'00'                                                    01323
         ORG   ETAB+(4*JRWRONGINSTANCE)                                 01324
         DC    A(MJRWRONGINSTANCE)                                      01325
         ORG                                                            01326
MJRWRONGINSTANCE DC C'The process is not known to current kernel insta' 01327
         DC    C'nce'                                                   01328
         DC    X'00'                                                    01329
         ORG   ETAB+(4*JRINVTERMSTAT)                                   01330
         DC    A(MJRINVTERMSTAT)                                        01331
         ORG                                                            01332
MJRINVTERMSTAT DC C'An incorrect process termination status was passed' 01333
         DC    C' to BPX1MPC'                                           01334
         DC    X'00'                                                    01335
         ORG   ETAB+(4*JRACTIVETHREADS)                                 01336
         DC    A(MJRACTIVETHREADS)                                      01337
         ORG                                                            01338
MJRACTIVETHREADS DC C'The process could not be terminated because ther' 01339
         DC    C'e are multiple threads still running in the process.'  01340
         DC    X'00'                                                    01341
         ORG   ETAB+(4*JRBADEXITSTATUSADDR)                             01342
         DC    A(MJRBADEXITSTATUSADDR)                                  01343
         ORG                                                            01344
MJRBADEXITSTATUSADDR DC C'An incorrect exit status address was passed ' 01345
         DC    C'to the wait call'                                      01346
         DC    X'00'                                                    01347
         ORG   ETAB+(4*JRPROCESSENDING)                                 01348
         DC    A(MJRPROCESSENDING)                                      01349
         ORG                                                            01350
MJRPROCESSENDING DC C'The current process is ending'                    01351
         DC    X'00'                                                    01352
         ORG   ETAB+(4*JRSIGNALSNOTBLOCKED)                             01353
         DC    A(MJRSIGNALSNOTBLOCKED)                                  01354
         ORG                                                            01355
MJRSIGNALSNOTBLOCKED DC C'The service did not complete because signals' 01356
         DC    C' are not blocked'                                      01357
         DC    X'00'                                                    01358
         ORG   ETAB+(4*JRFDTOOBIG)                                      01359
         DC    A(MJRFDTOOBIG)                                           01360
         ORG                                                            01361
MJRFDTOOBIG DC C'The requested file descriptor exceeds the Open_max li' 01362
         DC    C'mit'                                                   01363
         DC    X'00'                                                    01364
         ORG   ETAB+(4*JROPENMAX)                                       01365
         DC    A(MJROPENMAX)                                            01366
         ORG                                                            01367
MJROPENMAX DC C'The maximum number of open files for this process was ' 01368
         DC    C'reached'                                               01369
         DC    X'00'                                                    01370
         ORG   ETAB+(4*JRIOBUFLENGTHINVALID)                            01371
         DC    A(MJRIOBUFLENGTHINVALID)                                 01372
         ORG                                                            01373
MJRIOBUFLENGTHINVALID DC C'The input argument buffer length was incorr' 01374
         DC    C'ect'                                                   01375
         DC    X'00'                                                    01376
         ORG   ETAB+(4*JRINVALIDAMODE)                                  01377
         DC    A(MJRINVALIDAMODE)                                       01378
         ORG                                                            01379
MJRINVALIDAMODE DC C'An incorrect access mode was specified on the acc' 01380
         DC    C'ess service'                                           01381
         DC    X'00'                                                    01382
         ORG   ETAB+(4*JRACCESS)                                        01383
         DC    A(MJRACCESS)                                             01384
         ORG                                                            01385
MJRACCESS DC C'The access vnode operation is not supported'             01386
         DC    X'00'                                                    01387
         ORG   ETAB+(4*JRFSFAILCHDIR)                                   01388
         DC    A(MJRFSFAILCHDIR)                                        01389
         ORG                                                            01390
MJRFSFAILCHDIR DC C'The dub failed, due to an error with the initial h' 01391
         DC    C'ome directory'                                         01392
         DC    X'00'                                                    01393
         ORG   ETAB+(4*JRBADAUDITOPTION)                                01394
         DC    A(MJRBADAUDITOPTION)                                     01395
         ORG                                                            01396
MJRBADAUDITOPTION DC C'An incorrect option code was specified for the ' 01397
         DC    C'chaudit service'                                       01398
         DC    X'00'                                                    01399
         ORG   ETAB+(4*JREXECFILETOOBIG)                                01400
         DC    A(MJREXECFILETOOBIG)                                     01401
         ORG                                                            01402
MJREXECFILETOOBIG DC C'The size of the specified file exceeds the priv' 01403
         DC    C'ate region of the caller'                              01404
         DC    X'00'                                                    01405
         ORG   ETAB+(4*JRINVALIDCURSOR)                                 01406
         DC    A(MJRINVALIDCURSOR)                                      01407
         ORG                                                            01408
MJRINVALIDCURSOR DC C'The cursor value passed to the w_getmntent call ' 01409
         DC    C'is incorrect'                                          01410
         DC    X'00'                                                    01411
         ORG   ETAB+(4*JRPTYSLAVEOPENED)                                01412
         DC    A(MJRPTYSLAVEOPENED)                                     01413
         ORG                                                            01414
MJRPTYSLAVEOPENED DC C'The open of the master pseudo-TTY failed, becau' 01415
         DC    C'se the associated slave pseudo-TTY is still open'      01416
         DC    X'00'                                                    01417
         ORG   ETAB+(4*JRPTYMINORINVALID)                               01418
         DC    A(MJRPTYMINORINVALID)                                    01419
         ORG                                                            01420
MJRPTYMINORINVALID DC C'The device minor number is larger than the MAX' 01421
         DC    C'PTYS parameter in the BPXPRMxx member.'                01422
         DC    X'00'                                                    01423
         ORG   ETAB+(4*JRPTYALREADYACTIVE)                              01424
         DC    A(MJRPTYALREADYACTIVE)                                   01425
         ORG                                                            01426
MJRPTYALREADYACTIVE DC C'The device minor number is already active'     01427
         DC    X'00'                                                    01428
         ORG   ETAB+(4*JRSIGNALRECEIVED)                                01429
         DC    A(MJRSIGNALRECEIVED)                                     01430
         ORG                                                            01431
MJRSIGNALRECEIVED DC C'The call was interrupted by a signal'            01432
         DC    X'00'                                                    01433
         ORG   ETAB+(4*JRPTYDIFFERENTUID)                               01434
         DC    A(MJRPTYDIFFERENTUID)                                    01435
         ORG                                                            01436
MJRPTYDIFFERENTUID DC C'The process UID is different from the UID of t' 01437
         DC    C'he process that opened the master pseudo-TTY'          01438
         DC    X'00'                                                    01439
         ORG   ETAB+(4*JRPTYMASTERCLOSED)                               01440
         DC    A(MJRPTYMASTERCLOSED)                                    01441
         ORG                                                            01442
MJRPTYMASTERCLOSED DC C'There is no corresponding master pseudo-TTY fi' 01443
         DC    C'le open'                                               01444
         DC    X'00'                                                    01445
         ORG   ETAB+(4*JRPTYDIFFERENTFILE)                              01446
         DC    A(MJRPTYDIFFERENTFILE)                                   01447
         ORG                                                            01448
MJRPTYDIFFERENTFILE DC C'A slave pseudo-TTY file for this minor number' 01449
         DC    C' with a different filename is already open'            01450
         DC    X'00'                                                    01451
         ORG   ETAB+(4*JRPTYSLAVENOTINIT)                               01452
         DC    A(MJRPTYSLAVENOTINIT)                                    01453
         ORG                                                            01454
MJRPTYSLAVENOTINIT DC C'The slave pseudo-TTY support did not complete ' 01455
         DC    C'successfully'                                          01456
         DC    X'00'                                                    01457
         ORG   ETAB+(4*JRPTYINPUTSTOPPED)                               01458
         DC    A(MJRPTYINPUTSTOPPED)                                    01459
         ORG                                                            01460
MJRPTYINPUTSTOPPED DC C'The nonblocked write failed, because input is ' 01461
         DC    C'stopped'                                               01462
         DC    X'00'                                                    01463
         ORG   ETAB+(4*JREOFALREADYSENT)                                01464
         DC    A(MJREOFALREADYSENT)                                     01465
         ORG                                                            01466
MJREOFALREADYSENT DC C'The write to the master pseudo-TTY failed, beca' 01467
         DC    C'use all slaves are closed and HUPCL was set'           01468
         DC    X'00'                                                    01469
         ORG   ETAB+(4*JRPTYORPHANEDWRITE)                              01470
         DC    A(MJRPTYORPHANEDWRITE)                                   01471
         ORG                                                            01472
MJRPTYORPHANEDWRITE DC C'The write service is processing in a backgrou' 01473
         DC    C'nd, orphaned process group'                            01474
         DC    X'00'                                                    01475
         ORG   ETAB+(4*JRPTYOUTPUTSTOPPED)                              01476
         DC    A(MJRPTYOUTPUTSTOPPED)                                   01477
         ORG                                                            01478
MJRPTYOUTPUTSTOPPED DC C'Write cannot be processed, because output has' 01479
         DC    C' stopped'                                              01480
         DC    X'00'                                                    01481
         ORG   ETAB+(4*JRPTYNODATA)                                     01482
         DC    A(MJRPTYNODATA)                                          01483
         ORG                                                            01484
MJRPTYNODATA DC C'Data or room is not available on the queue'           01485
         DC    X'00'                                                    01486
         ORG   ETAB+(4*JRPTYORPHANEDREAD)                               01487
         DC    A(MJRPTYORPHANEDREAD)                                    01488
         ORG                                                            01489
MJRPTYORPHANEDREAD DC C'The read service is processing in a background' 01490
         DC    C', orphaned process group'                              01491
         DC    X'00'                                                    01492
         ORG   ETAB+(4*JRPTYSIGTTINBLOCKED)                             01493
         DC    A(MJRPTYSIGTTINBLOCKED)                                  01494
         ORG                                                            01495
MJRPTYSIGTTINBLOCKED DC C'The process is in a background process group' 01496
         DC    C' and SIGTTIN is blocked or ignored'                    01497
         DC    X'00'                                                    01498
         ORG   ETAB+(4*JRPTYNOBUFSTORAGE)                               01499
         DC    A(MJRPTYNOBUFSTORAGE)                                    01500
         ORG                                                            01501
MJRPTYNOBUFSTORAGE DC C'Storage is not available for pseudo-TTY buffer' 01502
         DC    C's'                                                     01503
         DC    X'00'                                                    01504
         ORG   ETAB+(4*JRPTATTEMPTEDCRSTORE)                            01505
         DC    A(MJRPTATTEMPTEDCRSTORE)                                 01506
         ORG                                                            01507
MJRPTATTEMPTEDCRSTORE DC C'Ptrace attempted to store into a control re' 01508
         DC    C'gister'                                                01509
         DC    X'00'                                                    01510
         ORG   ETAB+(4*JRPTATTEMPTEDPSW0STORE)                          01511
         DC    A(MJRPTATTEMPTEDPSW0STORE)                               01512
         ORG                                                            01513
MJRPTATTEMPTEDPSW0STORE DC C'Ptrace attempted to store into the left h' 01514
         DC    C'alf of PSW'                                            01515
         DC    X'00'                                                    01516
         ORG   ETAB+(4*JRPTDBDEQUALSDBR)                                01517
         DC    A(MJRPTDBDEQUALSDBR)                                     01518
         ORG                                                            01519
MJRPTDBDEQUALSDBR DC C'The ptrace debugger process ID (PID) is the sam' 01520
         DC    C'e as the debugged PID'                                 01521
         DC    X'00'                                                    01522
         ORG   ETAB+(4*JRPTDBDPARENTTERM)                               01523
         DC    A(MJRPTDBDPARENTTERM)                                    01524
         ORG                                                            01525
MJRPTDBDPARENTTERM DC C'The ptrace debugged parent (debugger) ended'    01526
         DC    X'00'                                                    01527
         ORG   ETAB+(4*JRPTDBDPIDNOTFOUND)                              01528
         DC    A(MJRPTDBDPIDNOTFOUND)                                   01529
         ORG                                                            01530
MJRPTDBDPIDNOTFOUND DC C'The ptrace target debugged process ID (PID) i' 01531
         DC    C's incorrect'                                           01532
         DC    X'00'                                                    01533
         ORG   ETAB+(4*JRPTDBRPIDNOTFOUND)                              01534
         DC    A(MJRPTDBRPIDNOTFOUND)                                   01535
         ORG                                                            01536
MJRPTDBRPIDNOTFOUND DC C'The ptrace debugger ended'                     01537
         DC    X'00'                                                    01538
         ORG   ETAB+(4*JRPTDBRZOMBIE)                                   01539
         DC    A(MJRPTDBRZOMBIE)                                        01540
         ORG                                                            01541
MJRPTDBRZOMBIE DC C'Ptrace debugger is ending'                          01542
         DC    X'00'                                                    01543
         ORG   ETAB+(4*JRPTINVCALLINGMODE)                              01544
         DC    A(MJRPTINVCALLINGMODE)                                   01545
         ORG                                                            01546
MJRPTINVCALLINGMODE DC C'The ptrace caller mode is incorrect'           01547
         DC    X'00'                                                    01548
         ORG   ETAB+(4*JRPTINVDBDADDRESS)                               01549
         DC    A(MJRPTINVDBDADDRESS)                                    01550
         ORG                                                            01551
MJRPTINVDBDADDRESS DC C'An incorrect address was supplied for the debu' 01552
         DC    C'gged process'                                          01553
         DC    X'00'                                                    01554
         ORG   ETAB+(4*JRPTINVDBRADDRESS)                               01555
         DC    A(MJRPTINVDBRADDRESS)                                    01556
         ORG                                                            01557
MJRPTINVDBRADDRESS DC C'An incorrect address was supplied for the debu' 01558
         DC    C'gger process'                                          01559
         DC    X'00'                                                    01560
         ORG   ETAB+(4*JRPTINVFPRNUMBER)                                01561
         DC    A(MJRPTINVFPRNUMBER)                                     01562
         ORG                                                            01563
MJRPTINVFPRNUMBER DC C'The ptrace call has an incorrect floating point' 01564
         DC    C' register number'                                      01565
         DC    X'00'                                                    01566
         ORG   ETAB+(4*JRPTINVGPRNUMBER)                                01567
         DC    A(MJRPTINVGPRNUMBER)                                     01568
         ORG                                                            01569
MJRPTINVGPRNUMBER DC C'The ptrace call has an incorrect general regist' 01570
         DC    C'er number'                                             01571
         DC    X'00'                                                    01572
         ORG   ETAB+(4*JRPTINVLENGTH)                                   01573
         DC    A(MJRPTINVLENGTH)                                        01574
         ORG                                                            01575
MJRPTINVLENGTH DC C'The ptrace length is incorrect'                     01576
         DC    X'00'                                                    01577
         ORG   ETAB+(4*JRPTINVNUMBERTHREADS)                            01578
         DC    A(MJRPTINVNUMBERTHREADS)                                 01579
         ORG                                                            01580
MJRPTINVNUMBERTHREADS DC C'The ptrace target process has no threads   ' 01581
         DC    C'   '                                                   01582
         DC    X'00'                                                    01583
         ORG   ETAB+(4*JRPTINVPTRACESTATE)                              01584
         DC    A(MJRPTINVPTRACESTATE)                                   01585
         ORG                                                            01586
MJRPTINVPTRACESTATE DC C'The ptrace mode of target process is incorrec' 01587
         DC    C't'                                                     01588
         DC    X'00'                                                    01589
         ORG   ETAB+(4*JRPTINVREQUEST)                                  01590
         DC    A(MJRPTINVREQUEST)                                       01591
         ORG                                                            01592
MJRPTINVREQUEST DC C'The ptrace request was not valid'                  01593
         DC    X'00'                                                    01594
         ORG   ETAB+(4*JRPTINVSIGNALNUMBER)                             01595
         DC    A(MJRPTINVSIGNALNUMBER)                                  01596
         ORG                                                            01597
MJRPTINVSIGNALNUMBER DC C'The ptrace service does not have a valid sig' 01598
         DC    C'nal number'                                            01599
         DC    X'00'                                                    01600
         ORG   ETAB+(4*JRPTINVUAREAOFFSET)                              01601
         DC    A(MJRPTINVUAREAOFFSET)                                   01602
         ORG                                                            01603
MJRPTINVUAREAOFFSET DC C'The ptrace service does not have a valid offs' 01604
         DC    C'et into the user area'                                 01605
         DC    X'00'                                                    01606
         ORG   ETAB+(4*JRPTOLDDBRPIDNOTFOUND)                           01607
         DC    A(MJRPTOLDDBRPIDNOTFOUND)                                01608
         ORG                                                            01609
MJRPTOLDDBRPIDNOTFOUND DC C'The ptrace original debugger ended'         01610
         DC    X'00'                                                    01611
         ORG   ETAB+(4*JRPTPROCESSNOTPTRACED)                           01612
         DC    A(MJRPTPROCESSNOTPTRACED)                                01613
         ORG                                                            01614
MJRPTPROCESSNOTPTRACED DC C'The ptrace target process is not in ptrace' 01615
         DC    C' mode'                                                 01616
         DC    X'00'                                                    01617
         ORG   ETAB+(4*JRPTPROCESSNOTSTOPPED)                           01618
         DC    A(MJRPTPROCESSNOTSTOPPED)                                01619
         ORG                                                            01620
MJRPTPROCESSNOTSTOPPED DC C'The ptrace target process was not stopped ' 01621
         DC    C'for ptrace'                                            01622
         DC    X'00'                                                    01623
         ORG   ETAB+(4*JRPTPROCESSTERM)                                 01624
         DC    A(MJRPTPROCESSTERM)                                      01625
         ORG                                                            01626
MJRPTPROCESSTERM DC C'The ptrace target process ended'                  01627
         DC    X'00'                                                    01628
         ORG   ETAB+(4*JRPTRESTRICTEDPROCESS)                           01629
         DC    A(MJRPTRESTRICTEDPROCESS)                                01630
         ORG                                                            01631
MJRPTRESTRICTEDPROCESS DC C'The ptrace target process is restricted fr' 01632
         DC    C'om debugging'                                          01633
         DC    X'00'                                                    01634
         ORG   ETAB+(4*JRPTSIGINTERRUPT)                                01635
         DC    A(MJRPTSIGINTERRUPT)                                     01636
         ORG                                                            01637
MJRPTSIGINTERRUPT DC C'The ptrace request was interrupted by a signal ' 01638
         DC    C'for the debugger'                                      01639
         DC    X'00'                                                    01640
         ORG   ETAB+(4*JREXECPARMERR)                                   01641
         DC    A(MJREXECPARMERR)                                        01642
         ORG                                                            01643
MJREXECPARMERR DC C'An error occurred when copying parameters passed t' 01644
         DC    C'o the exec service'                                    01645
         DC    X'00'                                                    01646
         ORG   ETAB+(4*JRCHOWNTOPIPE)                                   01647
         DC    A(MJRCHOWNTOPIPE)                                        01648
         ORG                                                            01649
MJRCHOWNTOPIPE DC C'The fchown service was issued against a pipe'       01650
         DC    X'00'                                                    01651
         ORG   ETAB+(4*JRCHAUDTOPIPE)                                   01652
         DC    A(MJRCHAUDTOPIPE)                                        01653
         ORG                                                            01654
MJRCHAUDTOPIPE DC C'The fchaudit service was issued against a pipe'     01655
         DC    X'00'                                                    01656
         ORG   ETAB+(4*JRBADRBSTATE)                                    01657
         DC    A(MJRBADRBSTATE)                                         01658
         ORG                                                            01659
MJRBADRBSTATE DC C'The caller apos.s request block state was incorrect' 01660
         DC    X'00'                                                    01661
         ORG   ETAB+(4*JRINVALIDSIGPROC)                                01662
         DC    A(MJRINVALIDSIGPROC)                                     01663
         ORG                                                            01664
MJRINVALIDSIGPROC DC C'The mask address was incorrect'                  01665
         DC    X'00'                                                    01666
         ORG   ETAB+(4*JRBADALET)                                       01667
         DC    A(MJRBADALET)                                            01668
         ORG                                                            01669
MJRBADALET DC C'An incorrect ALET was given as input'                   01670
         DC    X'00'                                                    01671
         ORG   ETAB+(4*JRQUIESCING)                                     01672
         DC    A(MJRQUIESCING)                                          01673
         ORG                                                            01674
MJRQUIESCING DC C'The call did not complete.  The file system is unmou' 01675
         DC    C'nting'                                                 01676
         DC    X'00'                                                    01677
         ORG   ETAB+(4*JRPTYINVALIDACTION)                              01678
         DC    A(MJRPTYINVALIDACTION)                                   01679
         ORG                                                            01680
MJRPTYINVALIDACTION DC C'The action code is incorrect'                  01681
         DC    X'00'                                                    01682
         ORG   ETAB+(4*JRPTYINVALIDCCFLAG)                              01683
         DC    A(MJRPTYINVALIDCCFLAG)                                   01684
         ORG                                                            01685
MJRPTYINVALIDCCFLAG DC C'The c_cflag bits are incorrect'                01686
         DC    X'00'                                                    01687
         ORG   ETAB+(4*JRPTYINVALIDCLFLAG)                              01688
         DC    A(MJRPTYINVALIDCLFLAG)                                   01689
         ORG                                                            01690
MJRPTYINVALIDCLFLAG DC C'The c_lflag bits are incorrect'                01691
         DC    X'00'                                                    01692
         ORG   ETAB+(4*JRPTYINVALIDCIFLAG)                              01693
         DC    A(MJRPTYINVALIDCIFLAG)                                   01694
         ORG                                                            01695
MJRPTYINVALIDCIFLAG DC C'The c_iflag bits are incorrect'                01696
         DC    X'00'                                                    01697
         ORG   ETAB+(4*JRPTYINVALIDCOFLAG)                              01698
         DC    A(MJRPTYINVALIDCOFLAG)                                   01699
         ORG                                                            01700
MJRPTYINVALIDCOFLAG DC C'The c_oflag bits are incorrect'                01701
         DC    X'00'                                                    01702
         ORG   ETAB+(4*JRPTYINVALIDOUTBAUD)                             01703
         DC    A(MJRPTYINVALIDOUTBAUD)                                  01704
         ORG                                                            01705
MJRPTYINVALIDOUTBAUD DC C'The output baud rate is incorrect'            01706
         DC    X'00'                                                    01707
         ORG   ETAB+(4*JRPTYINVALIDINBAUD)                              01708
         DC    A(MJRPTYINVALIDINBAUD)                                   01709
         ORG                                                            01710
MJRPTYINVALIDINBAUD DC C'The input baud rate is incorrect'              01711
         DC    X'00'                                                    01712
         ORG   ETAB+(4*JRPTYBGCALL)                                     01713
         DC    A(MJRPTYBGCALL)                                          01714
         ORG                                                            01715
MJRPTYBGCALL DC C'This is a background process'                         01716
         DC    X'00'                                                    01717
         ORG   ETAB+(4*JRINVIOCTLCMD)                                   01718
         DC    A(MJRINVIOCTLCMD)                                        01719
         ORG                                                            01720
MJRINVIOCTLCMD DC C'The input command value is incorrect'               01721
         DC    X'00'                                                    01722
         ORG   ETAB+(4*JRPTYNOCNTLTERM)                                 01723
         DC    A(MJRPTYNOCNTLTERM)                                      01724
         ORG                                                            01725
MJRPTYNOCNTLTERM DC C'The caller has no controlling terminal'           01726
         DC    X'00'                                                    01727
         ORG   ETAB+(4*JRPTYDIFFSESSION)                                01728
         DC    A(MJRPTYDIFFSESSION)                                     01729
         ORG                                                            01730
MJRPTYDIFFSESSION DC C'This is not the caller apos.s controlling termi' 01731
         DC    C'nal'                                                   01732
         DC    X'00'                                                    01733
         ORG   ETAB+(4*JRPTEDISAUTHORIZED)                              01734
         DC    A(MJRPTEDISAUTHORIZED)                                   01735
         ORG                                                            01736
MJRPTEDISAUTHORIZED DC C'The ptrace debugged process is running in sup' 01737
         DC    C'ervisor state'                                         01738
         DC    X'00'                                                    01739
         ORG   ETAB+(4*JRPTLDBUFFERTOOSMALL)                            01740
         DC    A(MJRPTLDBUFFERTOOSMALL)                                 01741
         ORG                                                            01742
MJRPTLDBUFFERTOOSMALL DC C'The ptrace loader information request buffe' 01743
         DC    C'r is too small'                                        01744
         DC    X'00'                                                    01745
         ORG   ETAB+(4*JRPTDBRPARENTEQUALSDBD)                          01746
         DC    A(MJRPTDBRPARENTEQUALSDBD)                               01747
         ORG                                                            01748
MJRPTDBRPARENTEQUALSDBD DC C'The ptrace debugger parent PID is the sam' 01749
         DC    C'e as debugged PID'                                     01750
         DC    X'00'                                                    01751
         ORG   ETAB+(4*JRPTYNOTPGLEADER)                                01752
         DC    A(MJRPTYNOTPGLEADER)                                     01753
         ORG                                                            01754
MJRPTYNOTPGLEADER DC C'The process is not a process group leader'       01755
         DC    X'00'                                                    01756
         ORG   ETAB+(4*JRPTYNOTSLAVE)                                   01757
         DC    A(MJRPTYNOTSLAVE)                                        01758
         ORG                                                            01759
MJRPTYNOTSLAVE DC C'Unsupported function against master TTY'            01760
         DC    X'00'                                                    01761
         ORG   ETAB+(4*JRPTYBADQUESEL)                                  01762
         DC    A(MJRPTYBADQUESEL)                                       01763
         ORG                                                            01764
MJRPTYBADQUESEL DC C'The queue selector is not valid'                   01765
         DC    X'00'                                                    01766
         ORG   ETAB+(4*JRPTYNOSESSLEADER)                               01767
         DC    A(MJRPTYNOSESSLEADER)                                    01768
         ORG                                                            01769
MJRPTYNOSESSLEADER DC C'The system is unable to locate the session lea' 01770
         DC    C'der'                                                   01771
         DC    X'00'                                                    01772
         ORG   ETAB+(4*JRNOCTTY)                                        01773
         DC    A(MJRNOCTTY)                                             01774
         ORG                                                            01775
MJRNOCTTY DC C'There is no controlling terminal for this process'       01776
         DC    X'00'                                                    01777
         ORG   ETAB+(4*JRPTYHUPCLCLOSE)                                 01778
         DC    A(MJRPTYHUPCLCLOSE)                                      01779
         ORG                                                            01780
MJRPTYHUPCLCLOSE DC C'The slave pseudo-TTY file was previously closed ' 01781
         DC    C'with the termios HUPCL flag set'                       01782
         DC    X'00'                                                    01783
         ORG   ETAB+(4*JRFSINUSE)                                       01784
         DC    A(MJRFSINUSE)                                            01785
         ORG                                                            01786
MJRFSINUSE DC C'The requested file system is still in use'              01787
         DC    X'00'                                                    01788
         ORG   ETAB+(4*JRPTYINVALIDPGID)                                01789
         DC    A(MJRPTYINVALIDPGID)                                     01790
         ORG                                                            01791
MJRPTYINVALIDPGID DC C'The requested process group ID is not valid'     01792
         DC    X'00'                                                    01793
         ORG   ETAB+(4*JRPTYNOTINSESSION)                               01794
         DC    A(MJRPTYNOTINSESSION)                                    01795
         ORG                                                            01796
MJRPTYNOTINSESSION DC C'The process group ID (PGID) does not exist in ' 01797
         DC    C'the caller apos.s session'                             01798
         DC    X'00'                                                    01799
         ORG   ETAB+(4*JRBRLMNOTACTIVE)                                 01800
         DC    A(MJRBRLMNOTACTIVE)                                      01801
         ORG                                                            01802
MJRBRLMNOTACTIVE DC C'The byte-range lock manager is not active'        01803
         DC    X'00'                                                    01804
         ORG   ETAB+(4*JRBRLMFILELOCKRECYCLING)                         01805
         DC    A(MJRBRLMFILELOCKRECYCLING)                              01806
         ORG                                                            01807
MJRBRLMFILELOCKRECYCLING DC C'File lock is being recycled. Do not use ' 01808
         DC    C'until the file is closed by all users'                 01809
         DC    X'00'                                                    01810
         ORG   ETAB+(4*JRBRLMBADFILETYPE)                               01811
         DC    A(MJRBRLMBADFILETYPE)                                    01812
         ORG                                                            01813
MJRBRLMBADFILETYPE DC C'Byte-range locking can be performed only on re' 01814
         DC    C'gular files'                                           01815
         DC    X'00'                                                    01816
         ORG   ETAB+(4*JRBRLMNOREADACCESS)                              01817
         DC    A(MJRBRLMNOREADACCESS)                                   01818
         ORG                                                            01819
MJRBRLMNOREADACCESS DC C'Shared byte-range locks are only for files op' 01820
         DC    C'en for read'                                           01821
         DC    X'00'                                                    01822
         ORG   ETAB+(4*JRBRLMNOWRITEACCESS)                             01823
         DC    A(MJRBRLMNOWRITEACCESS)                                  01824
         ORG                                                            01825
MJRBRLMNOWRITEACCESS DC C'Exclusive byte-range locks are only for file' 01826
         DC    C's open for write'                                      01827
         DC    X'00'                                                    01828
         ORG   ETAB+(4*JRBRLMBADL_TYPE)                                 01829
         DC    A(MJRBRLMBADL_TYPE)                                      01830
         ORG                                                            01831
MJRBRLMBADL_TYPE DC C'A byte-range lock request specified an l_type th' 01832
         DC    C'at is not valid'                                       01833
         DC    X'00'                                                    01834
         ORG   ETAB+(4*JRBRLMINVALIDRANGE)                              01835
         DC    A(MJRBRLMINVALIDRANGE)                                   01836
         ORG                                                            01837
MJRBRLMINVALIDRANGE DC C'A byte-range lock extends to before the start' 01838
         DC    C' of the file'                                          01839
         DC    X'00'                                                    01840
         ORG   ETAB+(4*JRBRLMBADL_WHENCE)                               01841
         DC    A(MJRBRLMBADL_WHENCE)                                    01842
         ORG                                                            01843
MJRBRLMBADL_WHENCE DC C'A byte-range lock request specified an l_whenc' 01844
         DC    C'e that is not valid'                                   01845
         DC    X'00'                                                    01846
         ORG   ETAB+(4*JRBRLMRANGENOTAVAILABLE)                         01847
         DC    A(MJRBRLMRANGENOTAVAILABLE)                              01848
         ORG                                                            01849
MJRBRLMRANGENOTAVAILABLE DC C'All or part of requested range is held b' 01850
         DC    C'y another user'                                        01851
         DC    X'00'                                                    01852
         ORG   ETAB+(4*JRBRLMDEADLOCKDETECTED)                          01853
         DC    A(MJRBRLMDEADLOCKDETECTED)                               01854
         ORG                                                            01855
MJRBRLMDEADLOCKDETECTED DC C'Waiting on the specified range causes a d' 01856
         DC    C'eadlock'                                               01857
         DC    X'00'                                                    01858
         ORG   ETAB+(4*JRBRLMSIGNALPOSTED)                              01859
         DC    A(MJRBRLMSIGNALPOSTED)                                   01860
         ORG                                                            01861
MJRBRLMSIGNALPOSTED DC C'While the process was waiting for a byte-rang' 01862
         DC    C'e lock, a signal was posted'                           01863
         DC    X'00'                                                    01864
         ORG   ETAB+(4*JRBRLMBADL_LEN)                                  01865
         DC    A(MJRBRLMBADL_LEN)                                       01866
         ORG                                                            01867
MJRBRLMBADL_LEN DC C'A byte-range lock request specified an incorrect ' 01868
         DC    C'l_len'                                                 01869
         DC    X'00'                                                    01870
         ORG   ETAB+(4*JRREADUSERSTORAGEFAILED)                         01871
         DC    A(MJRREADUSERSTORAGEFAILED)                              01872
         ORG                                                            01873
MJRREADUSERSTORAGEFAILED DC C'A read error occurred on the user data a' 01874
         DC    C'rea passed to the service'                             01875
         DC    X'00'                                                    01876
         ORG   ETAB+(4*JRWRITEUSERSTORAGEFAILED)                        01877
         DC    A(MJRWRITEUSERSTORAGEFAILED)                             01878
         ORG                                                            01879
MJRWRITEUSERSTORAGEFAILED DC C'A write error occurred on the user data' 01880
         DC    C' area passed to the service'                           01881
         DC    X'00'                                                    01882
         ORG   ETAB+(4*JRBRLMALREADYWAITING)                            01883
         DC    A(MJRBRLMALREADYWAITING)                                 01884
         ORG                                                            01885
MJRBRLMALREADYWAITING DC C'Request includes a range already being wait' 01886
         DC    C'ed on'                                                 01887
         DC    X'00'                                                    01888
         ORG   ETAB+(4*JRBRLMPROMOTEPENDING)                            01889
         DC    A(MJRBRLMPROMOTEPENDING)                                 01890
         ORG                                                            01891
MJRBRLMPROMOTEPENDING DC C'Another user is waiting to promote the requ' 01892
         DC    C'ested range'                                           01893
         DC    X'00'                                                    01894
         ORG   ETAB+(4*JRPTYNOPTYRSTORAGE)                              01895
         DC    A(MJRPTYNOPTYRSTORAGE)                                   01896
         ORG                                                            01897
MJRPTYNOPTYRSTORAGE DC C'There is not enough storage in the kernel add' 01898
         DC    C'ress space'                                            01899
         DC    X'00'                                                    01900
         ORG   ETAB+(4*JRBRLMPROCESSBROKEN)                             01901
         DC    A(MJRBRLMPROCESSBROKEN)                                  01902
         ORG                                                            01903
MJRBRLMPROCESSBROKEN DC C'This process has been marked broken for byte' 01904
         DC    C' locking'                                              01905
         DC    X'00'                                                    01906
         ORG   ETAB+(4*JRPTYCONNECTIONINOP)                             01907
         DC    A(MJRPTYCONNECTIONINOP)                                  01908
         ORG                                                            01909
MJRPTYCONNECTIONINOP DC C'The pseudo-TTY connection is inoperative'     01910
         DC    X'00'                                                    01911
         ORG   ETAB+(4*JRBRLMUNLOCKWHILEWAIT)                           01912
         DC    A(MJRBRLMUNLOCKWHILEWAIT)                                01913
         ORG                                                            01914
MJRBRLMUNLOCKWHILEWAIT DC C'The unlock service is not valid while the ' 01915
         DC    C'process is waiting for a lock'                         01916
         DC    X'00'                                                    01917
         ORG   ETAB+(4*JRBRLMOBJANDPROCBROKEN)                          01918
         DC    A(MJRBRLMOBJANDPROCBROKEN)                               01919
         ORG                                                            01920
MJRBRLMOBJANDPROCBROKEN DC C'The object and process are marked broken ' 01921
         DC    C'for byte locking'                                      01922
         DC    X'00'                                                    01923
         ORG   ETAB+(4*JRFD2TOOSMALL)                                   01924
         DC    A(MJRFD2TOOSMALL)                                        01925
         ORG                                                            01926
MJRFD2TOOSMALL DC C'The second file descriptor cannot be smaller than ' 01927
         DC    C'the first'                                             01928
         DC    X'00'                                                    01929
         ORG   ETAB+(4*JRNOTAUTHORIZED)                                 01930
         DC    A(MJRNOTAUTHORIZED)                                      01931
         ORG                                                            01932
MJRNOTAUTHORIZED DC C'Unauthorized caller of BPX1PTC in an authorized ' 01933
         DC    C'environment'                                           01934
         DC    X'00'                                                    01935
         ORG   ETAB+(4*JRPTATEYE)                                       01936
         DC    A(MJRPTATEYE)                                            01937
         ORG                                                            01938
MJRPTATEYE DC C'The pthread attribute area contains an incorrect eyeca' 01939
         DC    C'tcher'                                                 01940
         DC    X'00'                                                    01941
         ORG   ETAB+(4*JRPTATADDRERROR)                                 01942
         DC    A(MJRPTATADDRERROR)                                      01943
         ORG                                                            01944
MJRPTATADDRERROR DC C'The pthread attribute area address is incorrect'  01945
         DC    X'00'                                                    01946
         ORG   ETAB+(4*JRPTCNOTSUPP)                                    01947
         DC    A(MJRPTCNOTSUPP)                                         01948
         ORG                                                            01949
MJRPTCNOTSUPP DC C'BPX1PTC is not supported from the calling task'      01950
         DC    X'00'                                                    01951
         ORG   ETAB+(4*JRALLFILESNOTCLOSED)                             01952
         DC    A(MJRALLFILESNOTCLOSED)                                  01953
         ORG                                                            01954
MJRALLFILESNOTCLOSED DC C'All requested files were not closed'          01955
         DC    X'00'                                                    01956
         ORG   ETAB+(4*JREXITRTNERROR)                                  01957
         DC    A(MJREXITRTNERROR)                                       01958
         ORG                                                            01959
MJREXITRTNERROR DC C'An error occurred in the user exit called by the ' 01960
         DC    C'exec'                                                  01961
         DC    X'00'                                                    01962
         ORG   ETAB+(4*JRTHREADTERM)                                    01963
         DC    A(MJRTHREADTERM)                                         01964
         ORG                                                            01965
MJRTHREADTERM DC C'The service was rejected because the requesting thr' 01966
         DC    C'ead is terminating'                                    01967
         DC    X'00'                                                    01968
         ORG   ETAB+(4*JRLIGHTWEIGHTTHID)                               01969
         DC    A(MJRLIGHTWEIGHTTHID)                                    01970
         ORG                                                            01971
MJRLIGHTWEIGHTTHID DC C'The thread specified is a lightweight thread'   01972
         DC    X'00'                                                    01973
         ORG   ETAB+(4*JRALREADYDETACHED)                               01974
         DC    A(MJRALREADYDETACHED)                                    01975
         ORG                                                            01976
MJRALREADYDETACHED DC C'The thread specified is already detached'       01977
         DC    X'00'                                                    01978
         ORG   ETAB+(4*JRTHREADNOTFOUND)                                01979
         DC    A(MJRTHREADNOTFOUND)                                     01980
         ORG                                                            01981
MJRTHREADNOTFOUND DC C'The thread specified was not found'              01982
         DC    X'00'                                                    01983
         ORG   ETAB+(4*JRHEAVYWEIGHT)                                   01984
         DC    A(MJRHEAVYWEIGHT)                                        01985
         ORG                                                            01986
MJRHEAVYWEIGHT DC C'The new thread was not started and the existing th' 01987
         DC    C'read is a heavyweight thread'                          01988
         DC    X'00'                                                    01989
         ORG   ETAB+(4*JRGETFIRST)                                      01990
         DC    A(MJRGETFIRST)                                           01991
         ORG                                                            01992
MJRGETFIRST DC C'The first call did not specify PTGetNewThread'         01993
         DC    X'00'                                                    01994
         ORG   ETAB+(4*JRALREADYJOINED)                                 01995
         DC    A(MJRALREADYJOINED)                                      01996
         ORG                                                            01997
MJRALREADYJOINED DC C'The thread specified was already joined by anoth' 01998
         DC    C'er thread'                                             01999
         DC    X'00'                                                    02000
         ORG   ETAB+(4*JRJOINEXITSTATPTR)                               02001
         DC    A(MJRJOINEXITSTATPTR)                                    02002
         ORG                                                            02003
MJRJOINEXITSTATPTR DC C'The address of the exit status parameter is no' 02004
         DC    C't correct'                                             02005
         DC    X'00'                                                    02006
         ORG   ETAB+(4*JRJOINTOSELF)                                    02007
         DC    A(MJRJOINTOSELF)                                         02008
         ORG                                                            02009
MJRJOINTOSELF DC C'The thread attempted to join to itself'              02010
         DC    X'00'                                                    02011
         ORG   ETAB+(4*JRJOINLOOP)                                      02012
         DC    A(MJRJOINLOOP)                                           02013
         ORG                                                            02014
MJRJOINLOOP DC C'The connection would result in thread waiting for its' 02015
         DC    C'elf'                                                   02016
         DC    X'00'                                                    02017
         ORG   ETAB+(4*JRALREADYPTEXITED)                               02018
         DC    A(MJRALREADYPTEXITED)                                    02019
         ORG                                                            02020
MJRALREADYPTEXITED DC C'The calling thread has already been exited thr' 02021
         DC    C'ough a call to the BPX1PTX service'                    02022
         DC    X'00'                                                    02023
         ORG   ETAB+(4*JRALREADYTERMINATED)                             02024
         DC    A(MJRALREADYTERMINATED)                                  02025
         ORG                                                            02026
MJRALREADYTERMINATED DC C'The thread specified has already ended'       02027
         DC    X'00'                                                    02028
         ORG   ETAB+(4*JRBROKENBRLMRECYCLING)                           02029
         DC    A(MJRBROKENBRLMRECYCLING)                                02030
         ORG                                                            02031
MJRBROKENBRLMRECYCLING DC C'The byte-range-lock manager is broken and ' 02032
         DC    C'is currently recycling'                                02033
         DC    X'00'                                                    02034
         ORG   ETAB+(4*JRPTATSYSOFF)                                    02035
         DC    A(MJRPTATSYSOFF)                                         02036
         ORG                                                            02037
MJRPTATSYSOFF DC C'The system offset value in the pthread attribute ar' 02038
         DC    C'ea is incorrect'                                       02039
         DC    X'00'                                                    02040
         ORG   ETAB+(4*JRPTATSYSLEN)                                    02041
         DC    A(MJRPTATSYSLEN)                                         02042
         ORG                                                            02043
MJRPTATSYSLEN DC C'The system length value in the pthread attribute ar' 02044
         DC    C'ea is incorrect'                                       02045
         DC    X'00'                                                    02046
         ORG   ETAB+(4*JRPTATLEN)                                       02047
         DC    A(MJRPTATLEN)                                            02048
         ORG                                                            02049
MJRPTATLEN DC C'The total length value in the pthread attribute area i' 02050
         DC    C's incorrect'                                           02051
         DC    X'00'                                                    02052
         ORG   ETAB+(4*JRRMGWRONGDATALEN)                               02053
         DC    A(MJRRMGWRONGDATALEN)                                    02054
         ORG                                                            02055
MJRRMGWRONGDATALEN DC C'Resource data area length is not correct for t' 02056
         DC    C'his release'                                           02057
         DC    X'00'                                                    02058
         ORG   ETAB+(4*JRINVOPTION)                                     02059
         DC    A(MJRINVOPTION)                                          02060
         ORG                                                            02061
MJRINVOPTION DC C'Incorrect option specified on call to BPX1PTX'        02062
         DC    X'00'                                                    02063
         ORG   ETAB+(4*JRINITRTN)                                       02064
         DC    A(MJRINITRTN)                                            02065
         ORG                                                            02066
MJRINITRTN DC C'The initialization routine is not valid for the curren' 02067
         DC    C't environment'                                         02068
         DC    X'00'                                                    02069
         ORG   ETAB+(4*JRPTATWEIGHT)                                    02070
         DC    A(MJRPTATWEIGHT)                                         02071
         ORG                                                            02072
MJRPTATWEIGHT DC C'The pthread attribute area contains an incorrect we' 02073
         DC    C'ight value'                                            02074
         DC    X'00'                                                    02075
         ORG   ETAB+(4*JRPTATSYNCTYPE)                                  02076
         DC    A(MJRPTATSYNCTYPE)                                       02077
         ORG                                                            02078
MJRPTATSYNCTYPE DC C'The pthread attribute area contains an incorrect ' 02079
         DC    C'Sync Type value'                                       02080
         DC    X'00'                                                    02081
         ORG   ETAB+(4*JRPTATDETACHSTATE)                               02082
         DC    A(MJRPTATDETACHSTATE)                                    02083
         ORG                                                            02084
MJRPTATDETACHSTATE DC C'The pthread attribute area contains an incorre' 02085
         DC    C'ct detach state value'                                 02086
         DC    X'00'                                                    02087
         ORG   ETAB+(4*JRNOSUCHPID)                                     02088
         DC    A(MJRNOSUCHPID)                                          02089
         ORG                                                            02090
MJRNOSUCHPID DC C'The process ID is incorrect'                          02091
         DC    X'00'                                                    02092
         ORG   ETAB+(4*JRPIDEQSESSLEADER)                               02093
         DC    A(MJRPIDEQSESSLEADER)                                    02094
         ORG                                                            02095
MJRPIDEQSESSLEADER DC C'The process ID is a session leader'             02096
         DC    X'00'                                                    02097
         ORG   ETAB+(4*JRTOOMANY)                                       02098
         DC    A(MJRTOOMANY)                                            02099
         ORG                                                            02100
MJRTOOMANY DC C'The event list specified contained more than one event' 02101
         DC    X'00'                                                    02102
         ORG   ETAB+(4*JRPIDDIFFERENTSESSION)                           02103
         DC    A(MJRPIDDIFFERENTSESSION)                                02104
         ORG                                                            02105
MJRPIDDIFFERENTSESSION DC C'The process ID is in a session different f' 02106
         DC    C'rom the caller'                                        02107
         DC    X'00'                                                    02108
         ORG   ETAB+(4*JREXECAFTERFORK)                                 02109
         DC    A(MJREXECAFTERFORK)                                      02110
         ORG                                                            02111
MJREXECAFTERFORK DC C'The process ID was called by the exec service af' 02112
         DC    C'ter the fork service'                                  02113
         DC    X'00'                                                    02114
         ORG   ETAB+(4*JRTIMEOUTNOTAUTH)                                02115
         DC    A(MJRTIMEOUTNOTAUTH)                                     02116
         ORG                                                            02117
MJRTIMEOUTNOTAUTH DC C'The caller to BPX1CPO service specified the CW_' 02118
         DC    C'TIMEOUT event but is not authorized'                   02119
         DC    X'00'                                                    02120
         ORG   ETAB+(4*JRNOTDESCENDANT)                                 02121
         DC    A(MJRNOTDESCENDANT)                                      02122
         ORG                                                            02123
MJRNOTDESCENDANT DC C'The process ID is not an immediate descendant of' 02124
         DC    C' the caller.'                                          02125
         DC    X'00'                                                    02126
         ORG   ETAB+(4*JRPGIDDIFFERENTSESSION)                          02127
         DC    A(MJRPGIDDIFFERENTSESSION)                               02128
         ORG                                                            02129
MJRPGIDDIFFERENTSESSION DC C'Process group ID is in a session differen' 02130
         DC    C't from the caller'                                     02131
         DC    X'00'                                                    02132
         ORG   ETAB+(4*JRCALLERISPGLEADER)                              02133
         DC    A(MJRCALLERISPGLEADER)                                   02134
         ORG                                                            02135
MJRCALLERISPGLEADER DC C'The caller is already a process group leader'  02136
         DC    X'00'                                                    02137
         ORG   ETAB+(4*JRNULLMASK)                                      02138
         DC    A(MJRNULLMASK)                                           02139
         ORG                                                            02140
MJRNULLMASK DC C'The caller specified a null signal mask'               02141
         DC    X'00'                                                    02142
         ORG   ETAB+(4*JRRDLBUFFLENINVALID)                             02143
         DC    A(MJRRDLBUFFLENINVALID)                                  02144
         ORG                                                            02145
MJRRDLBUFFLENINVALID DC C'The length of the buffer is less than zero'   02146
         DC    X'00'                                                    02147
         ORG   ETAB+(4*JRPSWKEYNOTVALID)                                02148
         DC    A(MJRPSWKEYNOTVALID)                                     02149
         ORG                                                            02150
MJRPSWKEYNOTVALID DC C'The PSW key of the caller is not a valid key'    02151
         DC    X'00'                                                    02152
         ORG   ETAB+(4*JRALREADYSIGSETUP)                               02153
         DC    A(MJRALREADYSIGSETUP)                                    02154
         ORG                                                            02155
MJRALREADYSIGSETUP DC C'BPX1MSS found the process already set up for s' 02156
         DC    C'ignals'                                                02157
         DC    X'00'                                                    02158
         ORG   ETAB+(4*JRNOTSIGSETUP)                                   02159
         DC    A(MJRNOTSIGSETUP)                                        02160
         ORG                                                            02161
MJRNOTSIGSETUP DC C'The service found the current task was not set up ' 02162
         DC    C'for signals'                                           02163
         DC    X'00'                                                    02164
         ORG   ETAB+(4*JRENDINGSLASHSYMLINK)                            02165
         DC    A(MJRENDINGSLASHSYMLINK)                                 02166
         ORG                                                            02167
MJRENDINGSLASHSYMLINK DC C'The pathname ended with slash on the symlin' 02168
         DC    C'k service'                                             02169
         DC    X'00'                                                    02170
         ORG   ETAB+(4*JRUNDEFEVENTS)                                   02171
         DC    A(MJRUNDEFEVENTS)                                        02172
         ORG                                                            02173
MJRUNDEFEVENTS DC C'The specified event list contains undefined events' 02174
         DC    X'00'                                                    02175
         ORG   ETAB+(4*JRNOEVENTS)                                      02176
         DC    A(MJRNOEVENTS)                                           02177
         ORG                                                            02178
MJRNOEVENTS DC C'The specified event list is zero'                      02179
         DC    X'00'                                                    02180
         ORG   ETAB+(4*JRIPTCANNOTLEAVE)                                02181
         DC    A(MJRIPTCANNOTLEAVE)                                     02182
         ORG                                                            02183
MJRIPTCANNOTLEAVE DC C'The caller has daughter tasks. Termination is d' 02184
         DC    C'enied'                                                 02185
         DC    X'00'                                                    02186
         ORG   ETAB+(4*JRNOTSETUP)                                      02187
         DC    A(MJRNOTSETUP)                                           02188
         ORG                                                            02189
MJRNOTSETUP DC C'The thread is not set up for cond_wait or cond_timed_' 02190
         DC    C'wait'                                                  02191
         DC    X'00'                                                    02192
         ORG   ETAB+(4*JRALREADYSETUP)                                  02193
         DC    A(MJRALREADYSETUP)                                       02194
         ORG                                                            02195
MJRALREADYSETUP DC C'The thread is already set up for cond_setup, cond' 02196
         DC    C'_wait, or cond_timed_wait'                             02197
         DC    X'00'                                                    02198
         ORG   ETAB+(4*JROUTOFRANGE)                                    02199
         DC    A(MJROUTOFRANGE)                                         02200
         ORG                                                            02201
MJROUTOFRANGE DC C'The value specified for a parameter is outside the ' 02202
         DC    C'allowable range'                                       02203
         DC    X'00'                                                    02204
         ORG   ETAB+(4*JRNANOSECONDSTOOBIG)                             02205
         DC    A(MJRNANOSECONDSTOOBIG)                                  02206
         ORG                                                            02207
MJRNANOSECONDSTOOBIG DC C'The value specified for nanoseconds is outsi' 02208
         DC    C'de the allowable range'                                02209
         DC    X'00'                                                    02210
         ORG   ETAB+(4*JRTIMEOUT)                                       02211
         DC    A(MJRTIMEOUT)                                            02212
         ORG                                                            02213
MJRTIMEOUT DC C'The time for the service to wait has expired'           02214
         DC    X'00'                                                    02215
         ORG   ETAB+(4*JRDUP2ERROR)                                     02216
         DC    A(MJRDUP2ERROR)                                          02217
         ORG                                                            02218
MJRDUP2ERROR DC C'A problem occurred with the requested file descripto' 02219
         DC    C'r'                                                     02220
         DC    X'00'                                                    02221
         ORG   ETAB+(4*JRACCEPT)                                        02222
         DC    A(MJRACCEPT)                                             02223
         ORG                                                            02224
MJRACCEPT DC C'Vnode operation accept is not supported by this file sy' 02225
         DC    C'stem'                                                  02226
         DC    X'00'                                                    02227
         ORG   ETAB+(4*JRBIND)                                          02228
         DC    A(MJRBIND)                                               02229
         ORG                                                            02230
MJRBIND DC C'Vnode operation bind is not supported by this file system' 02231
         DC    X'00'                                                    02232
         ORG   ETAB+(4*JRCONNECT)                                       02233
         DC    A(MJRCONNECT)                                            02234
         ORG                                                            02235
MJRCONNECT DC C'Vnode operation connect is not supported by this file ' 02236
         DC    C'system'                                                02237
         DC    X'00'                                                    02238
         ORG   ETAB+(4*JRGETHOST)                                       02239
         DC    A(MJRGETHOST)                                            02240
         ORG                                                            02241
MJRGETHOST DC C'Vnode operation gethost is not supported by this file ' 02242
         DC    C'system'                                                02243
         DC    X'00'                                                    02244
         ORG   ETAB+(4*JRGETNAME)                                       02245
         DC    A(MJRGETNAME)                                            02246
         ORG                                                            02247
MJRGETNAME DC C'Vnode operation getname is not supported by this file ' 02248
         DC    C'system'                                                02249
         DC    X'00'                                                    02250
         ORG   ETAB+(4*JRSOCKOPT)                                       02251
         DC    A(MJRSOCKOPT)                                            02252
         ORG                                                            02253
MJRSOCKOPT DC C'Vnode operation sockopt is not supported by this file ' 02254
         DC    C'system'                                                02255
         DC    X'00'                                                    02256
         ORG   ETAB+(4*JRLISTEN)                                        02257
         DC    A(MJRLISTEN)                                             02258
         ORG                                                            02259
MJRLISTEN DC C'Vnode operation listen is not supported by this file sy' 02260
         DC    C'stem'                                                  02261
         DC    X'00'                                                    02262
         ORG   ETAB+(4*JRREADWRITEV)                                    02263
         DC    A(MJRREADWRITEV)                                         02264
         ORG                                                            02265
MJRREADWRITEV DC C'Vnode operation readwritev is not supported by this' 02266
         DC    C' file system'                                          02267
         DC    X'00'                                                    02268
         ORG   ETAB+(4*JRSNDRCV)                                        02269
         DC    A(MJRSNDRCV)                                             02270
         ORG                                                            02271
MJRSNDRCV DC C'Vnode operation sndrcv is not supported by this file sy' 02272
         DC    C'stem'                                                  02273
         DC    X'00'                                                    02274
         ORG   ETAB+(4*JRSNDTORCVFM)                                    02275
         DC    A(MJRSNDTORCVFM)                                         02276
         ORG                                                            02277
MJRSNDTORCVFM DC C'Vnode operation sndtorcvfm is not supported by this' 02278
         DC    C' file system'                                          02279
         DC    X'00'                                                    02280
         ORG   ETAB+(4*JRSRMSG)                                         02281
         DC    A(MJRSRMSG)                                              02282
         ORG                                                            02283
MJRSRMSG DC C'Vnode operation srmsg is not supported by this file syst' 02284
         DC    C'em'                                                    02285
         DC    X'00'                                                    02286
         ORG   ETAB+(4*JRSELECT)                                        02287
         DC    A(MJRSELECT)                                             02288
         ORG                                                            02289
MJRSELECT DC C'Vnode operation select is not supported by this file sy' 02290
         DC    C'stem'                                                  02291
         DC    X'00'                                                    02292
         ORG   ETAB+(4*JRSETPEER)                                       02293
         DC    A(MJRSETPEER)                                            02294
         ORG                                                            02295
MJRSETPEER DC C'Vnode operation setpeer is not supported by this file ' 02296
         DC    C'system'                                                02297
         DC    X'00'                                                    02298
         ORG   ETAB+(4*JRSHUTDOWN)                                      02299
         DC    A(MJRSHUTDOWN)                                           02300
         ORG                                                            02301
MJRSHUTDOWN DC C'Vnode operation shutdown is not supported by this fil' 02302
         DC    C'e system'                                              02303
         DC    X'00'                                                    02304
         ORG   ETAB+(4*JRSOCKET)                                        02305
         DC    A(MJRSOCKET)                                             02306
         ORG                                                            02307
MJRSOCKET DC C'VFS operation socket is not supported by this file syst' 02308
         DC    C'em'                                                    02309
         DC    X'00'                                                    02310
         ORG   ETAB+(4*JRNOSOCKET)                                      02311
         DC    A(MJRNOSOCKET)                                           02312
         ORG                                                            02313
MJRNOSOCKET DC C'The requested operation cannot be performed on a sock' 02314
         DC    C'et file descriptor'                                    02315
         DC    X'00'                                                    02316
         ORG   ETAB+(4*JRMUSTBESOCKET)                                  02317
         DC    A(MJRMUSTBESOCKET)                                       02318
         ORG                                                            02319
MJRMUSTBESOCKET DC C'The requested operation is only valid on a socket' 02320
         DC    C' file descriptor'                                      02321
         DC    X'00'                                                    02322
         ORG   ETAB+(4*JRTARGETENDING)                                  02323
         DC    A(MJRTARGETENDING)                                       02324
         ORG                                                            02325
MJRTARGETENDING DC C'The target process is ending'                      02326
         DC    X'00'                                                    02327
         ORG   ETAB+(4*JRQUIESCETYPEINVALID)                            02328
         DC    A(MJRQUIESCETYPEINVALID)                                 02329
         ORG                                                            02330
MJRQUIESCETYPEINVALID DC C'The quiescetype specified by the caller is ' 02331
         DC    C'invalid'                                               02332
         DC    X'00'                                                    02333
         ORG   ETAB+(4*JRLASTTHREAD)                                    02334
         DC    A(MJRLASTTHREAD)                                         02335
         ORG                                                            02336
MJRLASTTHREAD DC C'The last pthread is exiting when the PTFAILIFLASTTH' 02337
         DC    C'READ option is specified'                              02338
         DC    X'00'                                                    02339
         ORG   ETAB+(4*JRDOMAINNOTSUPPORTED)                            02340
         DC    A(MJRDOMAINNOTSUPPORTED)                                 02341
         ORG                                                            02342
MJRDOMAINNOTSUPPORTED DC C'The requested domain is not supported'       02343
         DC    X'00'                                                    02344
         ORG   ETAB+(4*JRNETWORK)                                       02345
         DC    A(MJRNETWORK)                                            02346
         ORG                                                            02347
MJRNETWORK DC C'Vfs operation network is not supported by this file sy' 02348
         DC    C'stem'                                                  02349
         DC    X'00'                                                    02350
         ORG   ETAB+(4*JROUTOFVDECELLS)                                 02351
         DC    A(MJROUTOFVDECELLS)                                      02352
         ORG                                                            02353
MJROUTOFVDECELLS DC C'All Vde cells have been allocated'                02354
         DC    X'00'                                                    02355
         ORG   ETAB+(4*JRTOKENMAX)                                      02356
         DC    A(MJRTOKENMAX)                                           02357
         ORG                                                            02358
MJRTOKENMAX DC C'The maximum number of Vnode tokens have been allocate' 02359
         DC    C'd for this process'                                    02360
         DC    X'00'                                                    02361
         ORG   ETAB+(4*JRVTOKENFREED)                                   02362
         DC    A(MJRVTOKENFREED)                                        02363
         ORG                                                            02364
MJRVTOKENFREED DC C'The Vnode token has already been released'          02365
         DC    X'00'                                                    02366
         ORG   ETAB+(4*JRWRONGPID)                                      02367
         DC    A(MJRWRONGPID)                                           02368
         ORG                                                            02369
MJRWRONGPID DC C'The process does not own this Vde'                     02370
         DC    X'00'                                                    02371
         ORG   ETAB+(4*JRSTALEVNODETOK)                                 02372
         DC    A(MJRSTALEVNODETOK)                                      02373
         ORG                                                            02374
MJRSTALEVNODETOK DC C'The Vnode token is stale'                         02375
         DC    X'00'                                                    02376
         ORG   ETAB+(4*JRINVALIDVNODETOK)                               02377
         DC    A(MJRINVALIDVNODETOK)                                    02378
         ORG                                                            02379
MJRINVALIDVNODETOK DC C'The Vnode token does not point to a Vde'        02380
         DC    X'00'                                                    02381
         ORG   ETAB+(4*JRNOTREGISTEREDSERVER)                           02382
         DC    A(MJRNOTREGISTEREDSERVER)                                02383
         ORG                                                            02384
MJRNOTREGISTEREDSERVER DC C'The process is not a registered server'     02385
         DC    X'00'                                                    02386
         ORG   ETAB+(4*JRINVALIDREGTYPE)                                02387
         DC    A(MJRINVALIDREGTYPE)                                     02388
         ORG                                                            02389
MJRINVALIDREGTYPE DC C'The server type supplied in NRegSType is not va' 02390
         DC    C'lid'                                                   02391
         DC    X'00'                                                    02392
         ORG   ETAB+(4*JRNAMETOOLONG)                                   02393
         DC    A(MJRNAMETOOLONG)                                        02394
         ORG                                                            02395
MJRNAMETOOLONG DC C'The name supplied is longer than the allowed maxim' 02396
         DC    C'um'                                                    02397
         DC    X'00'                                                    02398
         ORG   ETAB+(4*JRALREADYREGISTERED)                             02399
         DC    A(MJRALREADYREGISTERED)                                  02400
         ORG                                                            02401
MJRALREADYREGISTERED DC C'The process is already registered as a serve' 02402
         DC    C'r'                                                     02403
         DC    X'00'                                                    02404
         ORG   ETAB+(4*JRINVALIDNREG)                                   02405
         DC    A(MJRINVALIDNREG)                                        02406
         ORG                                                            02407
MJRINVALIDNREG DC C'An incorrect NReg parameter list was passed'        02408
         DC    X'00'                                                    02409
         ORG   ETAB+(4*JRNOLEADINGSLASH)                                02410
         DC    A(MJRNOLEADINGSLASH)                                     02411
         ORG                                                            02412
MJRNOLEADINGSLASH DC C'The pathname does not begin with /'              02413
         DC    X'00'                                                    02414
         ORG   ETAB+(4*JRSTALEVFSTOK)                                   02415
         DC    A(MJRSTALEVFSTOK)                                        02416
         ORG                                                            02417
MJRSTALEVFSTOK DC C'The VFS token is stale'                             02418
         DC    X'00'                                                    02419
         ORG   ETAB+(4*JRSMALLATTR)                                     02420
         DC    A(MJRSMALLATTR)                                          02421
         ORG                                                            02422
MJRSMALLATTR DC C'The Attr length parameter was too small'              02423
         DC    X'00'                                                    02424
         ORG   ETAB+(4*JRSMALLMNTE)                                     02425
         DC    A(MJRSMALLMNTE)                                          02426
         ORG                                                            02427
MJRSMALLMNTE DC C'The Mnte length parameter was too small'              02428
         DC    X'00'                                                    02429
         ORG   ETAB+(4*JRRWNOTREGFILE)                                  02430
         DC    A(MJRRWNOTREGFILE)                                       02431
         ORG                                                            02432
MJRRWNOTREGFILE DC C'The rdwr call is valid only on a regular file'     02433
         DC    X'00'                                                    02434
         ORG   ETAB+(4*JRDUBSETTING)                                    02435
         DC    A(MJRDUBSETTING)                                         02436
         ORG                                                            02437
MJRDUBSETTING DC C'The dub setting value specified on the BPX1SDD serv' 02438
         DC    C'ice call is not correct'                               02439
         DC    X'00'                                                    02440
         ORG   ETAB+(4*JRINVALIDATT)                                    02441
         DC    A(MJRINVALIDATT)                                         02442
         ORG                                                            02443
MJRINVALIDATT DC C'The Attribute structure passed to BPX1CHR or BPX1FC' 02444
         DC    C'R was not valid'                                       02445
         DC    X'00'                                                    02446
         ORG   ETAB+(4*JRINVALIDOSS)                                    02447
         DC    A(MJRINVALIDOSS)                                         02448
         ORG                                                            02449
MJRINVALIDOSS DC C'The OSS is not valid'                                02450
         DC    X'00'                                                    02451
         ORG   ETAB+(4*JRSMALLFSATTR)                                   02452
         DC    A(MJRSMALLFSATTR)                                        02453
         ORG                                                            02454
MJRSMALLFSATTR DC C'The FSAttr length parameter was too small'          02455
         DC    X'00'                                                    02456
         ORG   ETAB+(4*JRAPFAUTHCHANGE)                                 02457
         DC    A(MJRAPFAUTHCHANGE)                                      02458
         ORG                                                            02459
MJRAPFAUTHCHANGE DC C'A local process exec tried to change APF authori' 02460
         DC    C'zation'                                                02461
         DC    X'00'                                                    02462
         ORG   ETAB+(4*JRIDCHANGE)                                      02463
         DC    A(MJRIDCHANGE)                                           02464
         ORG                                                            02465
MJRIDCHANGE DC C'A local process exec tried to change the UID / GID   ' 02466
         DC    C'   '                                                   02467
         DC    X'00'                                                    02468
         ORG   ETAB+(4*JROTHERPROCESSES)                                02469
         DC    A(MJROTHERPROCESSES)                                     02470
         ORG                                                            02471
MJROTHERPROCESSES DC C'An exec was attempted that would terminate the ' 02472
         DC    C'other processes in the address space'                  02473
         DC    X'00'                                                    02474
         ORG   ETAB+(4*JRPTREQUESTDENIED)                               02475
         DC    A(MJRPTREQUESTDENIED)                                    02476
         ORG                                                            02477
MJRPTREQUESTDENIED DC C'The ptrace request is not allowed for the curr' 02478
         DC    C'ent debugged program environment'                      02479
         DC    X'00'                                                    02480
         ORG   ETAB+(4*JRINVALIDFUIO)                                   02481
         DC    A(MJRINVALIDFUIO)                                        02482
         ORG                                                            02483
MJRINVALIDFUIO DC C'An incorrect FUio area was passed'                  02484
         DC    X'00'                                                    02485
         ORG   ETAB+(4*JRTOKDIR)                                        02486
         DC    A(MJRTOKDIR)                                             02487
         ORG                                                            02488
MJRTOKDIR DC C'The VNODE token specifies a directory'                   02489
         DC    X'00'                                                    02490
         ORG   ETAB+(4*JRTOKNOTDIR)                                     02491
         DC    A(MJRTOKNOTDIR)                                          02492
         ORG                                                            02493
MJRTOKNOTDIR DC C'The VNODE token does not specify a directory'         02494
         DC    X'00'                                                    02495
         ORG   ETAB+(4*JRINVALIDATTR)                                   02496
         DC    A(MJRINVALIDATTR)                                        02497
         ORG                                                            02498
MJRINVALIDATTR DC C'The supplied Attribute structure was not valid'     02499
         DC    X'00'                                                    02500
         ORG   ETAB+(4*JRMAXTASKS)                                      02501
         DC    A(MJRMAXTASKS)                                           02502
         ORG                                                            02503
MJRMAXTASKS DC C'The number of tasks in the process is greater than th' 02504
         DC    C'e maximum allowable limit'                             02505
         DC    X'00'                                                    02506
         ORG   ETAB+(4*JRMAXSOCKETS)                                    02507
         DC    A(MJRMAXSOCKETS)                                         02508
         ORG                                                            02509
MJRMAXSOCKETS DC C'The number of active sockets is equal to the value ' 02510
         DC    C'specified on the MAXSOCKETS parmlib statement'         02511
         DC    X'00'                                                    02512
         ORG   ETAB+(4*JRNOTDIR)                                        02513
         DC    A(MJRNOTDIR)                                             02514
         ORG                                                            02515
MJRNOTDIR DC C'The name does not specify a directory'                   02516
         DC    X'00'                                                    02517
         ORG   ETAB+(4*JREXTERNALLINK)                                  02518
         DC    A(MJREXTERNALLINK)                                       02519
         ORG                                                            02520
MJREXTERNALLINK DC C'An external symbolic link was found but is not su' 02521
         DC    C'pported'                                               02522
         DC    X'00'                                                    02523
         ORG   ETAB+(4*JRSOCKETNAMED)                                   02524
         DC    A(MJRSOCKETNAMED)                                        02525
         ORG                                                            02526
MJRSOCKETNAMED DC C'A Bind request was received for a socket that was ' 02527
         DC    C'previously named'                                      02528
         DC    X'00'                                                    02529
         ORG   ETAB+(4*JRSOCANWKBITON)                                  02530
         DC    A(MJRSOCANWKBITON)                                       02531
         ORG                                                            02532
MJRSOCANWKBITON DC C'Duplicate NETWORK parmlib statements exist'        02533
         DC    X'00'                                                    02534
         ORG   ETAB+(4*JRLISTENNOTACCEPTED)                             02535
         DC    A(MJRLISTENNOTACCEPTED)                                  02536
         ORG                                                            02537
MJRLISTENNOTACCEPTED DC C'A listen syscall was issued for a socket tha' 02538
         DC    C't has not been bound, for a socket that is already a ' 02539
         DC    C'server, or for a socket that is already connected'     02540
         DC    X'00'                                                    02541
         ORG   ETAB+(4*JRSOCKETCLOSED)                                  02542
         DC    A(MJRSOCKETCLOSED)                                       02543
         ORG                                                            02544
MJRSOCKETCLOSED DC C'An attempt was made to read, write or connect to ' 02545
         DC    C'a socket that is closed'                               02546
         DC    X'00'                                                    02547
         ORG   ETAB+(4*JRTOOMANYTHDS)                                   02548
         DC    A(MJRTOOMANYTHDS)                                        02549
         ORG                                                            02550
MJRTOOMANYTHDS DC C'An attempt was made to create another thread but t' 02551
         DC    C'he process limit for pthreads has already been reache' 02552
         DC    C'd'                                                     02553
         DC    X'00'                                                    02554
         ORG   ETAB+(4*JRSOCKETCALLPARMERROR)                           02555
         DC    A(MJRSOCKETCALLPARMERROR)                                02556
         ORG                                                            02557
MJRSOCKETCALLPARMERROR DC C'A socket syscall contains incorrect parame' 02558
         DC    C'ters'                                                  02559
         DC    X'00'                                                    02560
         ORG   ETAB+(4*JRRECOVERY)                                      02561
         DC    A(MJRRECOVERY)                                           02562
         ORG                                                            02563
MJRRECOVERY DC C'The recovery VFS operation is not supported      '     02564
         DC    X'00'                                                    02565
         ORG   ETAB+(4*JRINVALIDROUTINE)                                02566
         DC    A(MJRINVALIDROUTINE)                                     02567
         ORG                                                            02568
MJRINVALIDROUTINE DC C'An incorrect routine address was passed      '   02569
         DC    X'00'                                                    02570
         ORG   ETAB+(4*JRROUTINEERROR)                                  02571
         DC    A(MJRROUTINEERROR)                                       02572
         ORG                                                            02573
MJRROUTINEERROR DC C'An error occurred while the user-provided routine' 02574
         DC    C' was in control      '                                 02575
         DC    X'00'                                                    02576
         ORG   ETAB+(4*JRNOLISTS)                                       02577
         DC    A(MJRNOLISTS)                                            02578
         ORG                                                            02579
MJRNOLISTS DC C'A Select request was issued without a read, write or e' 02580
         DC    C'xception list      '                                   02581
         DC    X'00'                                                    02582
         ORG   ETAB+(4*JRLISTTOOLONG)                                   02583
         DC    A(MJRLISTTOOLONG)                                        02584
         ORG                                                            02585
MJRLISTTOOLONG DC C'The read, write or exception list is too long     ' 02586
         DC    C' '                                                     02587
         DC    X'00'                                                    02588
         ORG   ETAB+(4*JRLISTTOOSHORT)                                  02589
         DC    A(MJRLISTTOOSHORT)                                       02590
         ORG                                                            02591
MJRLISTTOOSHORT DC C'The read, write or exception list is too short to' 02592
         DC    C' contain the specified number of file descriptorsand ' 02593
         DC    C'message queue identifiers      '                       02594
         DC    X'00'                                                    02595
         ORG   ETAB+(4*JRMSOUTOFRANGE)                                  02596
         DC    A(MJRMSOUTOFRANGE)                                       02597
         ORG                                                            02598
MJRMSOUTOFRANGE DC C'The value specified for microseconds is outside t' 02599
         DC    C'he allowable range      '                              02600
         DC    X'00'                                                    02601
         ORG   ETAB+(4*JRSECOUTOFRANGE)                                 02602
         DC    A(MJRSECOUTOFRANGE)                                      02603
         ORG                                                            02604
MJRSECOUTOFRANGE DC C'The value specified for seconds is outside the a' 02605
         DC    C'llowable range'                                        02606
         DC    X'00'                                                    02607
         ORG   ETAB+(4*JRNOFDS)                                         02608
         DC    A(MJRNOFDS)                                              02609
         ORG                                                            02610
MJRNOFDS DC C'The read, write or exception list did not contain any fi' 02611
         DC    C'le descriptors, or the Number_FDs parameter was not g' 02612
         DC    C'reater than 0'                                         02613
         DC    X'00'                                                    02614
*****************************************************************       02615
         ORG   ETAB+(4*JRINCORRECTSOCKETTYPE)                           02616
         DC    A(MJRINCORRECTSOCKETTYPE)                                02617
         ORG                                                            02618
MJRINCORRECTSOCKETTYPE DC C'The socket type is incorrect for the reque' 02619
         DC    C'st'                                                    02620
         DC    X'00'                                                    02621
         ORG   ETAB+(4*JRWOULDBLOCK)                                    02622
         DC    A(MJRWOULDBLOCK)                                         02623
         ORG                                                            02624
MJRWOULDBLOCK DC C'The O_NONBLOCK flag is set and this request would b' 02625
         DC    C'lock'                                                  02626
         DC    X'00'                                                    02627
         ORG   ETAB+(4*JREXCEEDSBACKLOGCOUNT)                           02628
         DC    A(MJREXCEEDSBACKLOGCOUNT)                                02629
         ORG                                                            02630
MJREXCEEDSBACKLOGCOUNT DC C'This connect request exceeds the connect b' 02631
         DC    C'acklog count that was specified on the Listen request' 02632
         DC    X'00'                                                    02633
         ORG   ETAB+(4*JRLEVELNOTSUPP)                                  02634
         DC    A(MJRLEVELNOTSUPP)                                       02635
         ORG                                                            02636
MJRLEVELNOTSUPP DC C'The value specified for Level is not supported by' 02637
         DC    C' the physical file system'                             02638
         DC    X'00'                                                    02639
         ORG   ETAB+(4*JRINVOPOPT)                                      02640
         DC    A(MJRINVOPOPT)                                           02641
         ORG                                                            02642
MJRINVOPOPT DC C'The Option name specified is not valid'                02643
         DC    X'00'                                                    02644
         ORG   ETAB+(4*JRBUFF)                                          02645
         DC    A(MJRBUFF)                                               02646
         ORG                                                            02647
MJRBUFF DC C'The buffer for return information is too small'            02648
         DC    X'00'                                                    02649
         ORG   ETAB+(4*JROPTNOTSUPP)                                    02650
         DC    A(MJROPTNOTSUPP)                                         02651
         ORG                                                            02652
MJROPTNOTSUPP DC C'The Option name specified is not supported'          02653
         DC    X'00'                                                    02654
         ORG   ETAB+(4*JRPTASYNCTHREAD)                                 02655
         DC    A(MJRPTASYNCTHREAD)                                      02656
         ORG                                                            02657
MJRPTASYNCTHREAD DC C'The ptrace request is not allowed because the ta' 02658
         DC    C'rget thread is asynchronous'                           02659
         DC    X'00'                                                    02660
         ORG   ETAB+(4*JRSOCKETNOTCON)                                  02661
         DC    A(MJRSOCKETNOTCON)                                       02662
         ORG                                                            02663
MJRSOCKETNOTCON DC C'The requested socket is not connected'             02664
         DC    X'00'                                                    02665
         ORG   ETAB+(4*JRPTYNOPTYSSTORAGE)                              02666
         DC    A(MJRPTYNOPTYSSTORAGE)                                   02667
         ORG                                                            02668
MJRPTYNOPTYSSTORAGE DC C'There is insufficient storage in the kernel a' 02669
         DC    C'ddress space'                                          02670
         DC    X'00'                                                    02671
         ORG   ETAB+(4*JRSOCKRDWRSIGNAL)                                02672
         DC    A(MJRSOCKRDWRSIGNAL)                                     02673
         ORG                                                            02674
MJRSOCKRDWRSIGNAL DC C'Signal interrupt during socket read or write pr' 02675
         DC    C'ocessing'                                              02676
         DC    X'00'                                                    02677
         ORG   ETAB+(4*JRSOCKBUFMAX)                                    02678
         DC    A(MJRSOCKBUFMAX)                                         02679
         ORG                                                            02680
MJRSOCKBUFMAX DC C'There is insufficient storage for the socket messag' 02681
         DC    C'e'                                                     02682
         DC    X'00'                                                    02683
         ORG   ETAB+(4*JRINVALIDMSGH)                                   02684
         DC    A(MJRINVALIDMSGH)                                        02685
         ORG                                                            02686
MJRINVALIDMSGH DC C'The socket message header is not correct'           02687
         DC    X'00'                                                    02688
         ORG   ETAB+(4*JRSOCKNONAME)                                    02689
         DC    A(MJRSOCKNONAME)                                         02690
         ORG                                                            02691
MJRSOCKNONAME DC C'The request requires a socket name structure'        02692
         DC    X'00'                                                    02693
         ORG   ETAB+(4*JRINVALIDSERVERNAMELEN)                          02694
         DC    A(MJRINVALIDSERVERNAMELEN)                               02695
         ORG                                                            02696
MJRINVALIDSERVERNAMELEN DC C'The server name length supplied in NRegSN' 02697
         DC    C'ameLen is too long or negative'                        02698
         DC    X'00'                                                    02699
         ORG   ETAB+(4*JRNOOOBDATAAVAIL)                                02700
         DC    A(MJRNOOOBDATAAVAIL)                                     02701
         ORG                                                            02702
MJRNOOOBDATAAVAIL DC C'The MSG_OOB flag is set but no OOB data is avai' 02703
         DC    C'lable or OOB data is inline'                           02704
         DC    X'00'                                                    02705
         ORG   ETAB+(4*JRINCORRECTTYPEFORFLAG)                          02706
         DC    A(MJRINCORRECTTYPEFORFLAG)                               02707
         ORG                                                            02708
MJRINCORRECTTYPEFORFLAG DC C'MSG_OOB flag is set but socket is not a s' 02709
         DC    C'tream socket'                                          02710
         DC    X'00'                                                    02711
         ORG   ETAB+(4*JRSOCKSHUTDOWN)                                  02712
         DC    A(MJRSOCKSHUTDOWN)                                       02713
         ORG                                                            02714
MJRSOCKSHUTDOWN DC C'Socket has been shutdown'                          02715
         DC    X'00'                                                    02716
         ORG   ETAB+(4*JRMSGHINVALID)                                   02717
         DC    A(MJRMSGHINVALID)                                        02718
         ORG                                                            02719
MJRMSGHINVALID DC C'msg_controllen or a cmsg_len has an incorrect leng' 02720
         DC    C'th'                                                    02721
         DC    X'00'                                                    02722
         ORG   ETAB+(4*JRNOADDRSPACE)                                   02723
         DC    A(MJRNOADDRSPACE)                                        02724
         ORG                                                            02725
MJRNOADDRSPACE DC C'The caller apos.s address space name cannot be det' 02726
         DC    C'ermined'                                               02727
         DC    X'00'                                                    02728
         ORG   ETAB+(4*JRNONAME)                                        02729
         DC    A(MJRNONAME)                                             02730
         ORG                                                            02731
MJRNONAME DC C'The name length is zero'                                 02732
         DC    X'00'                                                    02733
         ORG   ETAB+(4*JRLISTLENBAD)                                    02734
         DC    A(MJRLISTLENBAD)                                         02735
         ORG                                                            02736
MJRLISTLENBAD DC C'The length of one or all of the input bit lists is ' 02737
         DC    C'not a multiple of four or is not more than 256 bytes'  02738
         DC    X'00'                                                    02739
         ORG   ETAB+(4*JRINVUSEROP)                                     02740
         DC    A(MJRINVUSEROP)                                          02741
         ORG                                                            02742
MJRINVUSEROP DC C'The value specifed for the User Option was not 0 or ' 02743
         DC    C'1'                                                     02744
         DC    X'00'                                                    02745
         ORG   ETAB+(4*JRSOCKETPROTOCOLINVALID)                         02746
         DC    A(MJRSOCKETPROTOCOLINVALID)                              02747
         ORG                                                            02748
MJRSOCKETPROTOCOLINVALID DC C'The protocol argument on the socket or s' 02749
         DC    C'ocketpair syscall was not 0.  The physical file syste' 02750
         DC    C'm only supports a value of 0 for the protocol'         02751
         DC    X'00'                                                    02752
         ORG   ETAB+(4*JRNAMEEXISTS)                                    02753
         DC    A(MJRNAMEEXISTS)                                         02754
         ORG                                                            02755
MJRNAMEEXISTS DC C'The name specified in the request is already in use' 02756
         DC    X'00'                                                    02757
         ORG   ETAB+(4*JRLISTENNOTDONE)                                 02758
         DC    A(MJRLISTENNOTDONE)                                      02759
         ORG                                                            02760
MJRLISTENNOTDONE DC C'The socket is not ready to accept connections'    02761
         DC    X'00'                                                    02762
         ORG   ETAB+(4*JRLISTENNOTSTREAM)                               02763
         DC    A(MJRLISTENNOTSTREAM)                                    02764
         ORG                                                            02765
MJRLISTENNOTSTREAM DC C'A listen syscall was issued for a socket that ' 02766
         DC    C'is not a stream socket.  Listen is only valid for str' 02767
         DC    C'eam sockets'                                           02768
         DC    X'00'                                                    02769
         ORG   ETAB+(4*JRLISTENALREADYDONE)                             02770
         DC    A(MJRLISTENALREADYDONE)                                  02771
         ORG                                                            02772
MJRLISTENALREADYDONE DC C'A listen request has already been completed'  02773
         DC    X'00'                                                    02774
         ORG   ETAB+(4*JRSTLACTIONINVALID)                              02775
         DC    A(MJRSTLACTIONINVALID)                                   02776
         ORG                                                            02777
MJRSTLACTIONINVALID DC C'The value specified for the action parameter ' 02778
         DC    C'is not valid'                                          02779
         DC    X'00'                                                    02780
         ORG   ETAB+(4*JRSTLTASKSINVALID)                               02781
         DC    A(MJRSTLTASKSINVALID)                                    02782
         ORG                                                            02783
MJRSTLTASKSINVALID DC C'The value specified for the task limit is not ' 02784
         DC    C'valid'                                                 02785
         DC    X'00'                                                    02786
         ORG   ETAB+(4*JRSTLTHREADSINVALID)                             02787
         DC    A(MJRSTLTHREADSINVALID)                                  02788
         ORG                                                            02789
MJRSTLTHREADSINVALID DC C'The value specified for the thread limit is ' 02790
         DC    C'not valid'                                             02791
         DC    X'00'                                                    02792
         ORG   ETAB+(4*JRTCPERROR)                                      02793
         DC    A(MJRTCPERROR)                                           02794
         ORG                                                            02795
MJRTCPERROR DC C'Tcp returned an error identified by the return code'   02796
         DC    X'00'                                                    02797
         ORG   ETAB+(4*JRNOSPACE)                                       02798
         DC    A(MJRNOSPACE)                                            02799
         ORG                                                            02800
MJRNOSPACE DC C'Pthread_create failed, due to unavailable user address' 02801
         DC    C' space storage'                                        02802
         DC    X'00'                                                    02803
         ORG   ETAB+(4*JRMAXTCPPATHIDS)                                 02804
         DC    A(MJRMAXTCPPATHIDS)                                      02805
         ORG                                                            02806
MJRMAXTCPPATHIDS DC C'The maximum number of Tcp/Ip path IDs has been e' 02807
         DC    C'xceeded'                                               02808
         DC    X'00'                                                    02809
         ORG   ETAB+(4*JRPTNOTXTDEVENT)                                 02810
         DC    A(MJRPTNOTXTDEVENT)                                      02811
         ORG                                                            02812
MJRPTNOTXTDEVENT DC C'The ptrace request is not allowed because the ta' 02813
         DC    C'rget process is not stopped for an extended event'     02814
         DC    X'00'                                                    02815
         ORG   ETAB+(4*JRPTTOOMANYEVENTS)                               02816
         DC    A(MJRPTTOOMANYEVENTS)                                    02817
         ORG                                                            02818
MJRPTTOOMANYEVENTS DC C'The ptrace PT_EVENTS request attempted to add ' 02819
         DC    C'more events than the specified maximum'                02820
         DC    X'00'                                                    02821
         ORG   ETAB+(4*JRTCPNOTACTIVE)                                  02822
         DC    A(MJRTCPNOTACTIVE)                                       02823
         ORG                                                            02824
MJRTCPNOTACTIVE DC C'No AF_INET socket provider is active'              02825
         DC    X'00'                                                    02826
         ORG   ETAB+(4*JRMAXINETSOCKETS)                                02827
         DC    A(MJRMAXINETSOCKETS)                                     02828
         ORG                                                            02829
MJRMAXINETSOCKETS DC C'The number of active INET sockets is equal to t' 02830
         DC    C'he value specified on the MAXSOCKETS parmlib statemen' 02831
         DC    C't'                                                     02832
         DC    X'00'                                                    02833
         ORG   ETAB+(4*JRECBERROR)                                      02834
         DC    A(MJRECBERROR)                                           02835
         ORG                                                            02836
MJRECBERROR DC C'The last ECB pointer in the list of ECB pointers does' 02837
         DC    C' not have the high order bit ( apos.80000000 apos.x) ' 02838
         DC    C'set on to indicate that it is the last ECB pointer in' 02839
         DC    C' the list'                                             02840
         DC    X'00'                                                    02841
         ORG   ETAB+(4*JRECBLISTBAD)                                    02842
         DC    A(MJRECBLISTBAD)                                         02843
         ORG                                                            02844
MJRECBLISTBAD DC C'An error occurred accessing the list of pointers to' 02845
         DC    C' ECBs on a call to the MVSpauseInit service'           02846
         DC    X'00'                                                    02847
         ORG   ETAB+(4*JRECBSTATEBAD)                                   02848
         DC    A(MJRECBSTATEBAD)                                        02849
         ORG                                                            02850
MJRECBSTATEBAD DC C'An error occurred accessing one or more of the inp' 02851
         DC    C'ut ECBs on a call to the MVSpauseInit or MVSpause ser' 02852
         DC    C'vice'                                                  02853
         DC    X'00'                                                    02854
         ORG   ETAB+(4*JRECBLISTNOTSETUP)                               02855
         DC    A(MJRECBLISTNOTSETUP)                                    02856
         ORG                                                            02857
MJRECBLISTNOTSETUP DC C'The MVSpause service was called but the MVSpau' 02858
         DC    C'seInit service was never called to prepare for an MVS' 02859
         DC    C'pause'                                                 02860
         DC    X'00'                                                    02861
         ORG   ETAB+(4*JRSOCKETTYPENOTSUPPORTED)                        02862
         DC    A(MJRSOCKETTYPENOTSUPPORTED)                             02863
         ORG                                                            02864
MJRSOCKETTYPENOTSUPPORTED DC C'The requested socket type is not suppor' 02865
         DC    C'ted'                                                   02866
         DC    X'00'                                                    02867
         ORG   ETAB+(4*JRECBWAITBITON)                                  02868
         DC    A(MJRECBWAITBITON)                                       02869
         ORG                                                            02870
MJRECBWAITBITON DC C'The wait bit (the high order bit) was on in the s' 02871
         DC    C'pecified event control block (ECB)'                    02872
         DC    X'00'                                                    02873
         ORG   ETAB+(4*JRINVALIDVLOK)                                   02874
         DC    A(MJRINVALIDVLOK)                                        02875
         ORG                                                            02876
MJRINVALIDVLOK DC C'The supplied VLock structure was not valid'         02877
         DC    X'00'                                                    02878
         ORG   ETAB+(4*JRINVALIDSERVERPID)                              02879
         DC    A(MJRINVALIDSERVERPID)                                   02880
         ORG                                                            02881
MJRINVALIDSERVERPID DC C'The supplied VLokServerPID value was not vali' 02882
         DC    C'd'                                                     02883
         DC    X'00'                                                    02884
         ORG   ETAB+(4*JRNOLOCKERTOKEN)                                 02885
         DC    A(MJRNOLOCKERTOKEN)                                      02886
         ORG                                                            02887
MJRNOLOCKERTOKEN DC C'No Locker token was specified in the Vlock struc' 02888
         DC    C'ture'                                                  02889
         DC    X'00'                                                    02890
         ORG   ETAB+(4*JRBRLMOBJECTMISSING)                             02891
         DC    A(MJRBRLMOBJECTMISSING)                                  02892
         ORG                                                            02893
MJRBRLMOBJECTMISSING DC C'No Object was specified in the Vlock structu' 02894
         DC    C're'                                                    02895
         DC    X'00'                                                    02896
         ORG   ETAB+(4*JRBRLMWRONGLEVEL)                                02897
         DC    A(MJRBRLMWRONGLEVEL)                                     02898
         ORG                                                            02899
MJRBRLMWRONGLEVEL DC C'The byte-range lock manager does not support th' 02900
         DC    C'e request'                                             02901
         DC    X'00'                                                    02902
         ORG   ETAB+(4*JRBRLMLOCKERNOTREGISTERED)                       02903
         DC    A(MJRBRLMLOCKERNOTREGISTERED)                            02904
         ORG                                                            02905
MJRBRLMLOCKERNOTREGISTERED DC C'The Locker token specified in the Vloc' 02906
         DC    C'k structure is not registered'                         02907
         DC    X'00'                                                    02908
         ORG   ETAB+(4*JRMULTIPROC)                                     02909
         DC    A(MJRMULTIPROC)                                          02910
         ORG                                                            02911
MJRMULTIPROC DC C'The specified function is not supported in an addres' 02912
         DC    C's space running multiple processes'                    02913
         DC    X'00'                                                    02914
         ORG   ETAB+(4*JRTASKACEE)                                      02915
         DC    A(MJRTASKACEE)                                           02916
         ORG                                                            02917
MJRTASKACEE DC C'The specified function is not supported when a task l' 02918
         DC    C'evel ACEE is active for the calling task'              02919
         DC    X'00'                                                    02920
         ORG   ETAB+(4*JRUSERNAMELENERROR)                              02921
         DC    A(MJRUSERNAMELENERROR)                                   02922
         ORG                                                            02923
MJRUSERNAMELENERROR DC C'The user name length value was incorrect.'     02924
         DC    X'00'                                                    02925
         ORG   ETAB+(4*JRPASSWORDLENERROR)                              02926
         DC    A(MJRPASSWORDLENERROR)                                   02927
         ORG                                                            02928
MJRPASSWORDLENERROR DC C'The password length value was incorrect.'      02929
         DC    X'00'                                                    02930
         ORG   ETAB+(4*JRNEWPASSWORDLENERROR)                           02931
         DC    A(MJRNEWPASSWORDLENERROR)                                02932
         ORG                                                            02933
MJRNEWPASSWORDLENERROR DC C'The password length value was incorrect.'   02934
         DC    X'00'                                                    02935
         ORG   ETAB+(4*JRMIXEDSECURITYENV)                              02936
         DC    A(MJRMIXEDSECURITYENV)                                   02937
         ORG                                                            02938
MJRMIXEDSECURITYENV DC C'The specified function is not supported after' 02939
         DC    C' a seteuid has changed the security environment of th' 02940
         DC    C'e caller'                                              02941
         DC    X'00'                                                    02942
         ORG   ETAB+(4*JRTSO)                                           02943
         DC    A(MJRTSO)                                                02944
         ORG                                                            02945
MJRTSO DC C'The specified function is not supported in a TSO space run' 02946
         DC    C'ning multiple processes'                               02947
         DC    X'00'                                                    02948
         ORG   ETAB+(4*JRENVDIRTY)                                      02949
         DC    A(MJRENVDIRTY)                                           02950
         ORG                                                            02951
MJRENVDIRTY DC C'The specified function is not supported in an address' 02952
         DC    C' space where a load was done that is not program cont' 02953
         DC    C'rolled.'                                               02954
         DC    X'00'                                                    02955
         ORG   ETAB+(4*JRIPCBADID)                                      02956
         DC    A(MJRIPCBADID)                                           02957
         ORG                                                            02958
MJRIPCBADID DC C'The ID is not valid or has been removed from the syst' 02959
         DC    C'em'                                                    02960
         DC    X'00'                                                    02961
         ORG   ETAB+(4*JRIPCDENIED)                                     02962
         DC    A(MJRIPCDENIED)                                          02963
         ORG                                                            02964
MJRIPCDENIED DC C'Access was denied because the caller does not have t' 02965
         DC    C'he correct permission'                                 02966
         DC    X'00'                                                    02967
         ORG   ETAB+(4*JRIPCEXISTS)                                     02968
         DC    A(MJRIPCEXISTS)                                          02969
         ORG                                                            02970
MJRIPCEXISTS DC C'The caller issued CREATE, EXCL and the key was alrea' 02971
         DC    C'dy defined to InterProcess Communications'             02972
         DC    X'00'                                                    02973
         ORG   ETAB+(4*JRIPCMAXIDS)                                     02974
         DC    A(MJRIPCMAXIDS)                                          02975
         ORG                                                            02976
MJRIPCMAXIDS DC C'The number of IDs exceeds the system limit and the c' 02977
         DC    C'reate fails'                                           02978
         DC    X'00'                                                    02979
         ORG   ETAB+(4*JRIPCNOEXIST)                                    02980
         DC    A(MJRIPCNOEXIST)                                         02981
         ORG                                                            02982
MJRIPCNOEXIST DC C'The caller tried to locate a member for the key spe' 02983
         DC    C'cified but it does not exist'                          02984
         DC    X'00'                                                    02985
         ORG   ETAB+(4*JRIPCRETRY)                                      02986
         DC    A(MJRIPCRETRY)                                           02987
         ORG                                                            02988
MJRIPCRETRY DC C'NOWAIT was specified but the operation could not be p' 02989
         DC    C'erformed immediately'                                  02990
         DC    X'00'                                                    02991
         ORG   ETAB+(4*JRIPCSIGNALED)                                   02992
         DC    A(MJRIPCSIGNALED)                                        02993
         ORG                                                            02994
MJRIPCSIGNALED DC C'An IPC wait was interrupted by a signal'            02995
         DC    X'00'                                                    02996
         ORG   ETAB+(4*JRIPCBADFLAGS)                                   02997
         DC    A(MJRIPCBADFLAGS)                                        02998
         ORG                                                            02999
MJRIPCBADFLAGS DC C'Extraneous bits were set in the flags word paramet' 03000
         DC    C'er or in the mode flag bit field.'                     03001
         DC    X'00'                                                    03002
         ORG   ETAB+(4*JRMSQBADTYPE)                                    03003
         DC    A(MJRMSQBADTYPE)                                         03004
         ORG                                                            03005
MJRMSQBADTYPE DC C'Message type must be greater than zero'              03006
         DC    X'00'                                                    03007
         ORG   ETAB+(4*JRMSQBADSIZE)                                    03008
         DC    A(MJRMSQBADSIZE)                                         03009
         ORG                                                            03010
MJRMSQBADSIZE DC C'The message length exceeds the system limit or is l' 03011
         DC    C'ess than zero.'                                        03012
         DC    X'00'                                                    03013
         ORG   ETAB+(4*JRMSQNOMSG)                                      03014
         DC    A(MJRMSQNOMSG)                                           03015
         ORG                                                            03016
MJRMSQNOMSG DC C'No message of the type requested was found'            03017
         DC    X'00'                                                    03018
         ORG   ETAB+(4*JRMSQ2BIG)                                       03019
         DC    A(MJRMSQ2BIG)                                            03020
         ORG                                                            03021
MJRMSQ2BIG DC C'The message to receive was too large for the buffer an' 03022
         DC    C'd MSG_NOERROR was not specified'                       03023
         DC    X'00'                                                    03024
         ORG   ETAB+(4*JRSEMA4BADADJ)                                   03025
         DC    A(MJRSEMA4BADADJ)                                        03026
         ORG                                                            03027
MJRSEMA4BADADJ DC C'The value specified would exceed the system limit ' 03028
         DC    C'for semadj'                                            03029
         DC    X'00'                                                    03030
         ORG   ETAB+(4*JRSEMA4BADNOPS)                                  03031
         DC    A(MJRSEMA4BADNOPS)                                       03032
         ORG                                                            03033
MJRSEMA4BADNOPS DC C'Number of semaphore operation exceeds the system ' 03034
         DC    C'limit'                                                 03035
         DC    X'00'                                                    03036
         ORG   ETAB+(4*JRSEMA4BADNSEMS)                                 03037
         DC    A(MJRSEMA4BADNSEMS)                                      03038
         ORG                                                            03039
MJRSEMA4BADNSEMS DC C'Semaphore ID already exists for the KEY, but the' 03040
         DC    C' number of semaphores is less than requested'          03041
         DC    X'00'                                                    03042
         ORG   ETAB+(4*JRTYPENOTPID)                                    03043
         DC    A(MJRTYPENOTPID)                                         03044
         ORG                                                            03045
MJRTYPENOTPID DC C'A msgrcv or msgsnd did not have its process ID as t' 03046
         DC    C'ype'                                                   03047
         DC    X'00'                                                    03048
         ORG   ETAB+(4*JRSEMA4BADSEMN)                                  03049
         DC    A(MJRSEMA4BADSEMN)                                       03050
         ORG                                                            03051
MJRSEMA4BADSEMN DC C'The semaphore number is invalid'                   03052
         DC    X'00'                                                    03053
         ORG   ETAB+(4*JRSEMA4BADVALUE)                                 03054
         DC    A(MJRSEMA4BADVALUE)                                      03055
         ORG                                                            03056
MJRSEMA4BADVALUE DC C'The value specified would exceed the system limi' 03057
         DC    C't'                                                     03058
         DC    X'00'                                                    03059
         ORG   ETAB+(4*JRSEMA4BIGNSEMS)                                 03060
         DC    A(MJRSEMA4BIGNSEMS)                                      03061
         ORG                                                            03062
MJRSEMA4BIGNSEMS DC C'The number of semaphores exceeds the system maxi' 03063
         DC    C'mum'                                                   03064
         DC    X'00'                                                    03065
         ORG   ETAB+(4*JRSEMA4ZERONSEMS)                                03066
         DC    A(MJRSEMA4ZERONSEMS)                                     03067
         ORG                                                            03068
MJRSEMA4ZERONSEMS DC C'The number of semaphores specified was zero and' 03069
         DC    C' the semaphore does not exist'                         03070
         DC    X'00'                                                    03071
         ORG   ETAB+(4*JRSHMBADSIZE)                                    03072
         DC    A(MJRSHMBADSIZE)                                         03073
         ORG                                                            03074
MJRSHMBADSIZE DC C'The shared memory segment size is incorrect or outs' 03075
         DC    C'ide the system defined range of valid segment sizes.'  03076
         DC    X'00'                                                    03077
         ORG   ETAB+(4*JRSHMMAXATTACH)                                  03078
         DC    A(MJRSHMMAXATTACH)                                       03079
         ORG                                                            03080
MJRSHMMAXATTACH DC C'The number of shared memory attaches for the curr' 03081
         DC    C'ent process exceeds the system defined maximum.'       03082
         DC    X'00'                                                    03083
         ORG   ETAB+(4*JRIPCREMOVED)                                    03084
         DC    A(MJRIPCREMOVED)                                         03085
         ORG                                                            03086
MJRIPCREMOVED DC C'During a wait, the IPC member ID was removed from t' 03087
         DC    C'he system'                                             03088
         DC    X'00'                                                    03089
         ORG   ETAB+(4*JRMSQQBYTES)                                     03090
         DC    A(MJRMSQQBYTES)                                          03091
         ORG                                                            03092
MJRMSQQBYTES DC C'Not permitted to increase message qbytes or attempt ' 03093
         DC    C'by superuser to set message qbytes exceeds system lim' 03094
         DC    C'it.'                                                   03095
         DC    X'00'                                                    03096
         ORG   ETAB+(4*JRBADPERFGROUP)                                  03097
         DC    A(MJRBADPERFGROUP)                                       03098
         ORG                                                            03099
MJRBADPERFGROUP DC C'The specified priority or nice value represents a' 03100
         DC    C' performance group that could not be used.'            03101
         DC    X'00'                                                    03102
         ORG   ETAB+(4*JRBADSERVCLASS)                                  03103
         DC    A(MJRBADSERVCLASS)                                       03104
         ORG                                                            03105
MJRBADSERVCLASS DC C'The specified priority or nice value represents a' 03106
         DC    C' service class that could not be used.'                03107
         DC    X'00'                                                    03108
         ORG   ETAB+(4*JRMSQQUEUEFULLMESSAGES)                          03109
         DC    A(MJRMSQQUEUEFULLMESSAGES)                               03110
         ORG                                                            03111
MJRMSQQUEUEFULLMESSAGES DC C'IPC_NOWAIT was specified but the operatio' 03112
         DC    C'n was not done because there was no room in the messa' 03113
         DC    C'ge queue due to the number of messages in the message' 03114
         DC    C' queue'                                                03115
         DC    X'00'                                                    03116
         ORG   ETAB+(4*JRMSQQUEUEFULLBYTES)                             03117
         DC    A(MJRMSQQUEUEFULLBYTES)                                  03118
         ORG                                                            03119
MJRMSQQUEUEFULLBYTES DC C'IPC_NOWAIT was specified and the operation w' 03120
         DC    C'as not done because there was no room in the message ' 03121
         DC    C'queue due to the number of bytes in the message queue' 03122
         DC    X'00'                                                    03123
         ORG   ETAB+(4*JRRFILENOREAD)                                   03124
         DC    A(MJRRFILENOREAD)                                        03125
         ORG                                                            03126
MJRRFILENOREAD DC C'A call tried to read a file opened without read ac' 03127
         DC    C'cess'                                                  03128
         DC    X'00'                                                    03129
         ORG   ETAB+(4*JRSEMSTORAGELIMIT)                               03130
         DC    A(MJRSEMSTORAGELIMIT)                                    03131
         ORG                                                            03132
MJRSEMSTORAGELIMIT DC C'The semget or semop failed because the semapho' 03133
         DC    C're storage limit was reached'                          03134
         DC    X'00'                                                    03135
         ORG   ETAB+(4*JRINHEEYE)                                       03136
         DC    A(MJRINHEEYE)                                            03137
         ORG                                                            03138
MJRINHEEYE DC C'The inheritance area contains an incorrect eyecatcher ' 03139
         DC    C'value'                                                 03140
         DC    X'00'                                                    03141
         ORG   ETAB+(4*JRINHELENGTH)                                    03142
         DC    A(MJRINHELENGTH)                                         03143
         ORG                                                            03144
MJRINHELENGTH DC C'The length specified for the inheritance area conta' 03145
         DC    C'ins an incorrect value'                                03146
         DC    X'00'                                                    03147
         ORG   ETAB+(4*JRINHEVERSION)                                   03148
         DC    A(MJRINHEVERSION)                                        03149
         ORG                                                            03150
MJRINHEVERSION DC C'The inheritance area contains an incorrect version' 03151
         DC    C' number'                                               03152
         DC    X'00'                                                    03153
         ORG   ETAB+(4*JRSPAWNTOOMANYFDS)                               03154
         DC    A(MJRSPAWNTOOMANYFDS)                                    03155
         ORG                                                            03156
MJRSPAWNTOOMANYFDS DC C'The count of file descriptors specified is gre' 03157
         DC    C'ater than the maximum supported by the system.'        03158
         DC    X'00'                                                    03159
         ORG   ETAB+(4*JRSHMMAXSPAGES)                                  03160
         DC    A(MJRSHMMAXSPAGES)                                       03161
         ORG                                                            03162
MJRSHMMAXSPAGES DC C'The operation was not done because the system wid' 03163
         DC    C'e limit for shared memory segment pages was exceeded'  03164
         DC    X'00'                                                    03165
         ORG   ETAB+(4*JRNOACCESS)                                      03166
         DC    A(MJRNOACCESS)                                           03167
         ORG                                                            03168
MJRNOACCESS DC C'Caller does not have access to function'               03169
         DC    X'00'                                                    03170
         ORG   ETAB+(4*JRFDLISTTOOBIG)                                  03171
         DC    A(MJRFDLISTTOOBIG)                                       03172
         ORG                                                            03173
MJRFDLISTTOOBIG DC C'The size of the file descriptor list is larger th' 03174
         DC    C'an can be currently supported.'                        03175
         DC    X'00'                                                    03176
         ORG   ETAB+(4*JRBADFDLIST)                                     03177
         DC    A(MJRBADFDLIST)                                          03178
         ORG                                                            03179
MJRBADFDLIST DC C'The file descriptor list supplied on the call to BPX' 03180
         DC    C'1SPN is not accessible by the caller.'                 03181
         DC    X'00'                                                    03182
         ORG   ETAB+(4*JRNOTMAPPED)                                     03183
         DC    A(MJRNOTMAPPED)                                          03184
         ORG                                                            03185
MJRNOTMAPPED DC C'One or more specified pages are not mapped'           03186
         DC    X'00'                                                    03187
         ORG   ETAB+(4*JRCLNYASCREFAILED)                               03188
         DC    A(MJRCLNYASCREFAILED)                                    03189
         ORG                                                            03190
MJRCLNYASCREFAILED DC C'The ASCRE macro issued to start a colony addre' 03191
         DC    C'ss space returned a failing return code.'              03192
         DC    X'00'                                                    03193
         ORG   ETAB+(4*JRCLNYSTARTFAILED)                               03194
         DC    A(MJRCLNYSTARTFAILED)                                    03195
         ORG                                                            03196
MJRCLNYSTARTFAILED DC C'A colony address space failed to initialize.'   03197
         DC    X'00'                                                    03198
         ORG   ETAB+(4*JRCLNYNOTSTOPPED)                                03199
         DC    A(MJRCLNYNOTSTOPPED)                                     03200
         ORG                                                            03201
MJRCLNYNOTSTOPPED DC C'The colony address space could not be stopped.'  03202
         DC    X'00'                                                    03203
         ORG   ETAB+(4*JRCLNYNOCOMMONSTORAGE)                           03204
         DC    A(MJRCLNYNOCOMMONSTORAGE)                                03205
         ORG                                                            03206
MJRCLNYNOCOMMONSTORAGE DC C'The system was unable to obtain storage in' 03207
         DC    C' common for a control block to represent a colony add' 03208
         DC    C'ress space.'                                           03209
         DC    X'00'                                                    03210
         ORG   ETAB+(4*JRPFSNOTDUBBED)                                  03211
         DC    A(MJRPFSNOTDUBBED)                                       03212
         ORG                                                            03213
MJRPFSNOTDUBBED DC C'The PFS task calling an OSI service is not dubbed' 03214
         DC    C'.'                                                     03215
         DC    X'00'                                                    03216
         ORG   ETAB+(4*JRCLNYNOTSTARTED)                                03217
         DC    A(MJRCLNYNOTSTARTED)                                     03218
         ORG                                                            03219
MJRCLNYNOTSTARTED DC C'An attempt was made to start a PFS within a col' 03220
         DC    C'ony address space.  The colony was either not complet' 03221
         DC    C'ely initialized or it was being terminated.'           03222
         DC    X'00'                                                    03223
         ORG   ETAB+(4*JRPTYCHGFROMSLAVE)                               03224
         DC    A(MJRPTYCHGFROMSLAVE)                                    03225
         ORG                                                            03226
MJRPTYCHGFROMSLAVE DC C'An attempt was made to change a termios flag f' 03227
         DC    C'rom the slave pty, which is only allowed from the mas' 03228
         DC    C'ter.'                                                  03229
         DC    X'00'                                                    03230
         ORG   ETAB+(4*JRCLNYPFSNOTSTARTED)                             03231
         DC    A(MJRCLNYPFSNOTSTARTED)                                  03232
         ORG                                                            03233
MJRCLNYPFSNOTSTARTED DC C'An attempt was made to stop or clean up a co' 03234
         DC    C'lony PFS that was not previously started.'             03235
         DC    X'00'                                                    03236
         ORG   ETAB+(4*JRCLNYPFSNOTDONE)                                03237
         DC    A(MJRCLNYPFSNOTDONE)                                     03238
         ORG                                                            03239
MJRCLNYPFSNOTDONE DC C'An attempt was made to clean up a colony PFS th' 03240
         DC    C'at was not completely terminated.'                     03241
         DC    X'00'                                                    03242
         ORG   ETAB+(4*JRDEVCONFIGTYPEERROR)                            03243
         DC    A(MJRDEVCONFIGTYPEERROR)                                 03244
         ORG                                                            03245
MJRDEVCONFIGTYPEERROR DC C'An attempt was made to configure a device d' 03246
         DC    C'river that was not defined.'                           03247
         DC    X'00'                                                    03248
         ORG   ETAB+(4*JRPTYNEEDPKT3270)                                03249
         DC    A(MJRPTYNEEDPKT3270)                                     03250
         ORG                                                            03251
MJRPTYNEEDPKT3270 DC C'An attempt was made to set 3270 Passthru mode w' 03252
         DC    C'ithout 3270 Packet mode.'                              03253
         DC    X'00'                                                    03254
         ORG   ETAB+(4*JRMMAPOVEREOF)                                   03255
         DC    A(MJRMMAPOVEREOF)                                        03256
         ORG                                                            03257
MJRMMAPOVEREOF DC C'The extended file cannot be mapped over its EOF po' 03258
         DC    C'int'                                                   03259
         DC    X'00'                                                    03260
         ORG   ETAB+(4*JRRAISEHARDLIMIT)                                03261
         DC    A(MJRRAISEHARDLIMIT)                                     03262
         ORG                                                            03263
MJRRAISEHARDLIMIT DC C'An attempt was made to raise a hard limit witho' 03264
         DC    C'ut superuser authority.'                               03265
         DC    X'00'                                                    03266
         ORG   ETAB+(4*JRINVALIDRESOURCE)                               03267
         DC    A(MJRINVALIDRESOURCE)                                    03268
         ORG                                                            03269
MJRINVALIDRESOURCE DC C'The input resource value is not valid.'         03270
         DC    X'00'                                                    03271
         ORG   ETAB+(4*JRSOFTEXCEEDSHARD)                               03272
         DC    A(MJRSOFTEXCEEDSHARD)                                    03273
         ORG                                                            03274
MJRSOFTEXCEEDSHARD DC C'An attempt was made to raise a soft limit abov' 03275
         DC    C'e its hard limit.'                                     03276
         DC    X'00'                                                    03277
         ORG   ETAB+(4*JRSOFTBELOWUSAGE)                                03278
         DC    A(MJRSOFTBELOWUSAGE)                                     03279
         ORG                                                            03280
MJRSOFTBELOWUSAGE DC C'An attempt was made to lower a soft limit below' 03281
         DC    C' the current usage for the resource.'                  03282
         DC    X'00'                                                    03283
         ORG   ETAB+(4*JRINVALIDWHO)                                    03284
         DC    A(MJRINVALIDWHO)                                         03285
         ORG                                                            03286
MJRINVALIDWHO DC C'The input who value is not valid.'                   03287
         DC    X'00'                                                    03288
         ORG   ETAB+(4*JRPTYMUTUALLYEXCLUSIVE)                          03289
         DC    A(MJRPTYMUTUALLYEXCLUSIVE)                               03290
         ORG                                                            03291
MJRPTYMUTUALLYEXCLUSIVE DC C'An attempt was made to set mutually exclu' 03292
         DC    C'sive bits.'                                            03293
         DC    X'00'                                                    03294
         ORG   ETAB+(4*JRMMAPSTGEXCEEDED)                               03295
         DC    A(MJRMMAPSTGEXCEEDED)                                    03296
         ORG                                                            03297
MJRMMAPSTGEXCEEDED DC C'The system-wide limit on the amount of memory ' 03298
         DC    C'consumed by memory mapped areas is exceeded'           03299
         DC    X'00'                                                    03300
         ORG   ETAB+(4*JRPATHCONF)                                      03301
         DC    A(MJRPATHCONF)                                           03302
         ORG                                                            03303
MJRPATHCONF DC C'The Vnode operation pathconf is not supported by this' 03304
         DC    C' file system'                                          03305
         DC    X'00'                                                    03306
         ORG   ETAB+(4*JRNOTPAGE)                                       03307
         DC    A(MJRNOTPAGE)                                            03308
         ORG                                                            03309
MJRNOTPAGE DC C'A location specified or generated is not on a page bou' 03310
         DC    C'ndary'                                                 03311
         DC    X'00'                                                    03312
         ORG   ETAB+(4*JRMMAPBADTYPE)                                   03313
         DC    A(MJRMMAPBADTYPE)                                        03314
         ORG                                                            03315
MJRMMAPBADTYPE DC C'The value of the map_type is not valid'             03316
         DC    X'00'                                                    03317
         ORG   ETAB+(4*JRHARDWARE)                                      03318
         DC    A(MJRHARDWARE)                                           03319
         ORG                                                            03320
MJRHARDWARE DC C'A request was made for a hardware that is not availab' 03321
         DC    C'le'                                                    03322
         DC    X'00'                                                    03323
         ORG   ETAB+(4*JRADDRESSNOTAVAILABLE)                           03324
         DC    A(MJRADDRESSNOTAVAILABLE)                                03325
         ORG                                                            03326
MJRADDRESSNOTAVAILABLE DC C'A request was made for a storage address, ' 03327
         DC    C'but it could not be satisfied'                         03328
         DC    X'00'                                                    03329
         ORG   ETAB+(4*JRPROCMAXMMAP)                                   03330
         DC    A(MJRPROCMAXMMAP)                                        03331
         ORG                                                            03332
MJRPROCMAXMMAP DC C'The process has exceeded the maximum number of mma' 03333
         DC    C'ps'                                                    03334
         DC    X'00'                                                    03335
         ORG   ETAB+(4*JRMMAPFILEADDRESS)                               03336
         DC    A(MJRMMAPFILEADDRESS)                                    03337
         ORG                                                            03338
MJRMMAPFILEADDRESS DC C'File_offset + map_length exceeds file size'     03339
         DC    X'00'                                                    03340
         ORG   ETAB+(4*JRIARVSERV)                                      03341
         DC    A(MJRIARVSERV)                                           03342
         ORG                                                            03343
MJRIARVSERV DC C'An invocation of IARVSERV service failed.'             03344
         DC    X'00'                                                    03345
         ORG   ETAB+(4*JRPTYPENDINGCONTROLINFO)                         03346
         DC    A(MJRPTYPENDINGCONTROLINFO)                              03347
         ORG                                                            03348
MJRPTYPENDINGCONTROLINFO DC C'An attempt was made to write to a master' 03349
         DC    C' pty in 3270 packet mode when control information was' 03350
         DC    C' pending'                                              03351
         DC    X'00'                                                    03352
         ORG   ETAB+(4*JRZEROORNEGATIVE)                                03353
         DC    A(MJRZEROORNEGATIVE)                                     03354
         ORG                                                            03355
MJRZEROORNEGATIVE DC C'An input parameter must be greater than zero'    03356
         DC    X'00'                                                    03357
         ORG   ETAB+(4*JRNOUSERSTORAGE)                                 03358
         DC    A(MJRNOUSERSTORAGE)                                      03359
         ORG                                                            03360
MJRNOUSERSTORAGE DC C'The service could not obtain enough storage in u' 03361
         DC    C'ser address space subpool 129.'                        03362
         DC    X'00'                                                    03363
         ORG   ETAB+(4*JRASYNCHMOUNT)                                   03364
         DC    A(MJRASYNCHMOUNT)                                        03365
         ORG                                                            03366
MJRASYNCHMOUNT DC C'The request to mount a file system will complete a' 03367
         DC    C'synchronously.  The system rejects all vnode (file) o' 03368
         DC    C'perations against the file system.'                    03369
         DC    X'00'                                                    03370
         ORG   ETAB+(4*JRPFSOPNOTSUPPORTED)                             03371
         DC    A(MJRPFSOPNOTSUPPORTED)                                  03372
         ORG                                                            03373
MJRPFSOPNOTSUPPORTED DC C'The pfsctl command is not supported by this ' 03374
         DC    C'PFS.'                                                  03375
         DC    X'00'                                                    03376
         ORG   ETAB+(4*JRPFSOPNOTPERMITTED)                             03377
         DC    A(MJRPFSOPNOTPERMITTED)                                  03378
         ORG                                                            03379
MJRPFSOPNOTPERMITTED DC C'Not authorized to perform this pfsctl operat' 03380
         DC    C'ion.'                                                  03381
         DC    X'00'                                                    03382
         ORG   ETAB+(4*JRPFSARGLENBAD)                                  03383
         DC    A(MJRPFSARGLENBAD)                                       03384
         ORG                                                            03385
MJRPFSARGLENBAD DC C'The argument length is not valid for this pfsctl ' 03386
         DC    C'operation.'                                            03387
         DC    X'00'                                                    03388
         ORG   ETAB+(4*JRCAPTUREFAILURE)                                03389
         DC    A(MJRCAPTUREFAILURE)                                     03390
         ORG                                                            03391
MJRCAPTUREFAILURE DC C'A memory capture (IARVSERV) failed'              03392
         DC    X'00'                                                    03393
         ORG   ETAB+(4*JRBADSIGINFOADDR)                                03394
         DC    A(MJRBADSIGINFOADDR)                                     03395
         ORG                                                            03396
MJRBADSIGINFOADDR DC C'An incorrect siginfo_t address was passed to th' 03397
         DC    C'e waitid call'                                         03398
         DC    X'00'                                                    03399
         ORG   ETAB+(4*JRBADRUSAGEADDR)                                 03400
         DC    A(MJRBADRUSAGEADDR)                                      03401
         ORG                                                            03402
MJRBADRUSAGEADDR DC C'An incorrect rusage address was passed to the wa' 03403
         DC    C'it3 call'                                              03404
         DC    X'00'                                                    03405
         ORG   ETAB+(4*JRPTYNOTRTSTORAGE)                               03406
         DC    A(MJRPTYNOTRTSTORAGE)                                    03407
         ORG                                                            03408
MJRPTYNOTRTSTORAGE DC C'Storage is not available for pseudo-TTY scan t' 03409
         DC    C'ables'                                                 03410
         DC    X'00'                                                    03411
         ORG   ETAB+(4*JRBADSTDEV)                                      03412
         DC    A(MJRBADSTDEV)                                           03413
         ORG                                                            03414
MJRBADSTDEV DC C'The device number specified to osi_mountstatus does n' 03415
         DC    C'ot refer to a mounted file system.'                    03416
         DC    X'00'                                                    03417
         ORG   ETAB+(4*JROPENFILELIMITMAX)                              03418
         DC    A(MJROPENFILELIMITMAX)                                   03419
         ORG                                                            03420
MJROPENFILELIMITMAX DC C'The Open file limit cannot exceed 64K'         03421
         DC    X'00'                                                    03422
         ORG   ETAB+(4*JRFDOPENABOVELIMIT)                              03423
         DC    A(MJRFDOPENABOVELIMIT)                                   03424
         ORG                                                            03425
MJRFDOPENABOVELIMIT DC C'A file descriptor is open above requested lim' 03426
         DC    C'it      '                                              03427
         DC    X'00'                                                    03428
         ORG   ETAB+(4*JRWRITEBEYONDLIMIT)                              03429
         DC    A(MJRWRITEBEYONDLIMIT)                                   03430
         ORG                                                            03431
MJRWRITEBEYONDLIMIT DC C'Cannot write beyond the file size limit      ' 03432
         DC    X'00'                                                    03433
         ORG   ETAB+(4*JRSYSCALLFAILALL)                                03434
         DC    A(MJRSYSCALLFAILALL)                                     03435
         ORG                                                            03436
MJRSYSCALLFAILALL DC C'An attempt to process a syscall for a socket fa' 03437
         DC    C'iled on all of the transport providers supporting the' 03438
         DC    C' socket.'                                              03439
         DC    X'00'                                                    03440
         ORG   ETAB+(4*JRSYSCALLFAILONE)                                03441
         DC    A(MJRSYSCALLFAILONE)                                     03442
         ORG                                                            03443
MJRSYSCALLFAILONE DC C'An attempt to process a syscall for a socket fa' 03444
         DC    C'iled on one of the transport providers supporting the' 03445
         DC    C' socket.'                                              03446
         DC    X'00'                                                    03447
         ORG   ETAB+(4*JRSYSCALLFAILSOME)                               03448
         DC    A(MJRSYSCALLFAILSOME)                                    03449
         ORG                                                            03450
MJRSYSCALLFAILSOME DC C'An attempt to process a syscall for a socket f' 03451
         DC    C'ailed on some of the transport providers supporting t' 03452
         DC    C'he socket.'                                            03453
         DC    X'00'                                                    03454
         ORG   ETAB+(4*JRSETSOCKOPTFAILALL)                             03455
         DC    A(MJRSETSOCKOPTFAILALL)                                  03456
         ORG                                                            03457
MJRSETSOCKOPTFAILALL DC C'An attempt to set socket options failed on a' 03458
         DC    C'll of the transport providers supporting the socket. ' 03459
         DC    C'     '                                                 03460
         DC    X'00'                                                    03461
         ORG   ETAB+(4*JRSETSOCKOPTFAILONE)                             03462
         DC    A(MJRSETSOCKOPTFAILONE)                                  03463
         ORG                                                            03464
MJRSETSOCKOPTFAILONE DC C'An attempt to set socket options failed on o' 03465
         DC    C'ne of the transport providers supporting the socket. ' 03466
         DC    C'     '                                                 03467
         DC    X'00'                                                    03468
         ORG   ETAB+(4*JRSETSOCKOPTFAILSOME)                            03469
         DC    A(MJRSETSOCKOPTFAILSOME)                                 03470
         ORG                                                            03471
MJRSETSOCKOPTFAILSOME DC C'An attempt to set socket options failed on ' 03472
         DC    C'some of the transport providers supporting the socket' 03473
         DC    C'.      '                                               03474
         DC    X'00'                                                    03475
         ORG   ETAB+(4*JRRLIMITCANTCREATE)                              03476
         DC    A(MJRRLIMITCANTCREATE)                                   03477
         ORG                                                            03478
MJRRLIMITCANTCREATE DC C'You cannot create files when RLIMIT_FSIZE is ' 03479
         DC    C'0.'                                                    03480
         DC    X'00'                                                    03481
         ORG   ETAB+(4*JRNOTSTDFILE)                                    03482
         DC    A(MJRNOTSTDFILE)                                         03483
         ORG                                                            03484
MJRNOTSTDFILE DC C'Only standard files can be mmap'                     03485
         DC    X'00'                                                    03486
         ORG   ETAB+(4*JRBADIDTYPE)                                     03487
         DC    A(MJRBADIDTYPE)                                          03488
         ORG                                                            03489
MJRBADIDTYPE DC C'An invalid ID type was passed.'                       03490
         DC    X'00'                                                    03491
         ORG   ETAB+(4*JRBADOPTIONS)                                    03492
         DC    A(MJRBADOPTIONS)                                         03493
         ORG                                                            03494
MJRBADOPTIONS DC C'Incorrect options were passed on the options parame' 03495
         DC    C'ter.'                                                  03496
         DC    X'00'                                                    03497
         ORG   ETAB+(4*JRPTYNOTCNTLTERM)                                03498
         DC    A(MJRPTYNOTCNTLTERM)                                     03499
         ORG                                                            03500
MJRPTYNOTCNTLTERM DC C'The device is not associated with a controlling' 03501
         DC    C' terminal'                                             03502
         DC    X'00'                                                    03503
         ORG   ETAB+(4*JRPREVSOCKERROR)                                 03504
         DC    A(MJRPREVSOCKERROR)                                      03505
         ORG                                                            03506
MJRPREVSOCKERROR DC C'A previous error caused this socket to become un' 03507
         DC    C'usable.'                                               03508
         DC    X'00'                                                    03509
         ORG   ETAB+(4*JRBADOSI)                                        03510
         DC    A(MJRBADOSI)                                             03511
         ORG                                                            03512
MJRBADOSI DC C'The Osi structure passed is not valid'                   03513
         DC    X'00'                                                    03514
         ORG   ETAB+(4*JRBADPFSID)                                      03515
         DC    A(MJRBADPFSID)                                           03516
         ORG                                                            03517
MJRBADPFSID DC C'The value of the OsiPfsId field is not valid'          03518
         DC    X'00'                                                    03519
         ORG   ETAB+(4*JRFRRACTIVE)                                     03520
         DC    A(MJRFRRACTIVE)                                          03521
         ORG                                                            03522
MJRFRRACTIVE DC C'An FRR is established'                                03523
         DC    X'00'                                                    03524
         ORG   ETAB+(4*JRPTYQUEUECHANGE)                                03525
         DC    A(MJRPTYQUEUECHANGE)                                     03526
         ORG                                                            03527
MJRPTYQUEUECHANGE DC C'A termios option change requires all output be ' 03528
         DC    C'read or flushed before further writes'                 03529
         DC    X'00'                                                    03530
         ORG   ETAB+(4*JRINTERVALTYPEINVALID)                           03531
         DC    A(MJRINTERVALTYPEINVALID)                                03532
         ORG                                                            03533
MJRINTERVALTYPEINVALID DC C'The IntervalType is not valid'              03534
         DC    X'00'                                                    03535
         ORG   ETAB+(4*JRPTYORPHANED)                                   03536
         DC    A(MJRPTYORPHANED)                                        03537
         ORG                                                            03538
MJRPTYORPHANED DC C'The syscall is processing in an orphaned process g' 03539
         DC    C'roup'                                                  03540
         DC    X'00'                                                    03541
         ORG   ETAB+(4*JRTRANSPORTDRIVERNOTACCESSIBLE)                  03542
         DC    A(MJRTRANSPORTDRIVERNOTACCESSIBLE)                       03543
         ORG                                                            03544
MJRTRANSPORTDRIVERNOTACCESSIBLE DC C'The transport driver specified is' 03545
         DC    C' not being used by the socket specified.'              03546
         DC    X'00'                                                    03547
         AIF   ('&SYSTEM_ID'(1,4) NE 'z/OS').NOTZOS2                    03548
         ORG   ETAB+(4*JRINVSIGNALFORPROCESS)                           03549
         DC    A(MJRINVSIGNALFORPROCESS)                                03550
         ORG                                                            03551
MJRINVSIGNALFORPROCESS DC C'The specified signal number is incorrect'   03552
         DC    X'00'                                                    03553
         ORG   ETAB+(4*JRUSERNAMEBAD)                                   03554
         DC    A(MJRUSERNAMEBAD)                                        03555
         ORG                                                            03556
MJRUSERNAMEBAD DC C'The user name is not a valid MVS user name.'        03557
         DC    X'00'                                                    03558
.NOTZOS2 ANOP                                                           03559
         ORG   ETAB+(4*JRTOOMANYFDS)                                    03560
         DC    A(MJRTOOMANYFDS)                                         03561
         ORG                                                            03562
MJRTOOMANYFDS DC C'Too many Fds were specified'                         03563
         DC    X'00'                                                    03564
         ORG   ETAB+(4*JRMICROSECONDSTOOBIG)                            03565
         DC    A(MJRMICROSECONDSTOOBIG)                                 03566
         ORG                                                            03567
MJRMICROSECONDSTOOBIG DC C'The value specified for microseconds is out' 03568
         DC    C'side the allowable range'                              03569
         DC    X'00'                                                    03570
         ORG   ETAB+(4*JRSTIMERMMAX)                                    03571
         DC    A(MJRSTIMERMMAX)                                         03572
         ORG                                                            03573
MJRSTIMERMMAX DC C'A 32E system abend has been intercepted by the sysc' 03574
         DC    C'all. See the appropriate MVS System Codes manual'      03575
         DC    X'00'                                                    03576
         ORG   ETAB+(4*JRNOCLNYTHREADSPPT)                              03577
         DC    A(MJRNOCLNYTHREADSPPT)                                   03578
         ORG                                                            03579
MJRNOCLNYTHREADSPPT DC C'Colony thread support has not been built'      03580
         DC    X'00'                                                    03581
         ORG   ETAB+(4*JRSHSPMASK)                                      03582
         DC    A(MJRSHSPMASK)                                           03583
         ORG                                                            03584
MJRSHSPMASK DC C'The shared subpool mask is not valid for the current ' 03585
         DC    C'environment'                                           03586
         DC    X'00'                                                    03587
         ORG   ETAB+(4*JRBADOPTNFLAGS)                                  03588
         DC    A(MJRBADOPTNFLAGS)                                       03589
         ORG                                                            03590
MJRBADOPTNFLAGS DC C'Extraneous bits were set in the option flags para' 03591
         DC    C'meter.'                                                03592
         DC    X'00'                                                    03593
         ORG   ETAB+(4*JRNEGFILESIZELIMIT)                              03594
         DC    A(MJRNEGFILESIZELIMIT)                                   03595
         ORG                                                            03596
MJRNEGFILESIZELIMIT DC C'One of the file size limits specified is nega' 03597
         DC    C'tive.'                                                 03598
         DC    X'00'                                                    03599
         ORG   ETAB+(4*JRNOSAFSUPPORT)                                  03600
         DC    A(MJRNOSAFSUPPORT)                                       03601
         ORG                                                            03602
MJRNOSAFSUPPORT DC C'The installed Security product does not support t' 03603
         DC    C'his function.'                                         03604
         DC    X'00'                                                    03605
         ORG   ETAB+(4*JRPTNOSTORAGE)                                   03606
         DC    A(MJRPTNOSTORAGE)                                        03607
         ORG                                                            03608
MJRPTNOSTORAGE DC C'Not enough storage is available for ptrace'         03609
         DC    X'00'                                                    03610
         ORG   ETAB+(4*JRPTBUFNOTFOUND)                                 03611
         DC    A(MJRPTBUFNOTFOUND)                                      03612
         ORG                                                            03613
MJRPTBUFNOTFOUND DC C'A Pt_Uncapture ptrace request was issued for a s' 03614
         DC    C'pecific buffer but the buffer was not previously capt' 03615
         DC    C'ured with a Pt_Capture request.'                       03616
         DC    X'00'                                                    03617
         ORG   ETAB+(4*JRPTTSO)                                         03618
         DC    A(MJRPTTSO)                                              03619
         ORG                                                            03620
MJRPTTSO DC C'The specified ptrace function is not supported in a TSO ' 03621
         DC    C'address space.'                                        03622
         DC    X'00'                                                    03623
         ORG   ETAB+(4*JRAUTHCALLER)                                    03624
         DC    A(MJRAUTHCALLER)                                         03625
         ORG                                                            03626
MJRAUTHCALLER DC C'The caller of this service is authorized.  Authoriz' 03627
         DC    C'ed callers are not permitted to load or call unauthor' 03628
         DC    C'ized programs.'                                        03629
         DC    X'00'                                                    03630
         ORG   ETAB+(4*JRSINGLETDREQD)                                  03631
         DC    A(MJRSINGLETDREQD)                                       03632
         ORG                                                            03633
MJRSINGLETDREQD DC C'The Common Inet Sockets ioctl command requires th' 03634
         DC    C'at a single transport driver be connected to the sock' 03635
         DC    C'et.'                                                   03636
         DC    X'00'                                                    03637
         ORG   ETAB+(4*JRBATSEL)                                        03638
         DC    A(MJRBATSEL)                                             03639
         ORG                                                            03640
MJRBATSEL DC C'The batch-select VFS operation is not supported.      '  03641
         DC    X'00'                                                    03642
         ORG   ETAB+(4*JRREALPAGENOTSUPPORTED)                          03643
         DC    A(MJRREALPAGENOTSUPPORTED)                               03644
         ORG                                                            03645
MJRREALPAGENOTSUPPORTED DC C'A Fuio area containing a real page addres' 03646
         DC    C's was passed.'                                         03647
         DC    X'00'                                                    03648
         ORG   ETAB+(4*JRBADMVSPGMNAME)                                 03649
         DC    A(MJRBADMVSPGMNAME)                                      03650
         ORG                                                            03651
MJRBADMVSPGMNAME DC C'A call to the exec or loadHFS service specified ' 03652
         DC    C'a file that resolves to an MVS program name that is n' 03653
         DC    C'ot valid.'                                             03654
         DC    X'00'                                                    03655
         ORG   ETAB+(4*JRMVSLOADFAILURE)                                03656
         DC    A(MJRMVSLOADFAILURE)                                     03657
         ORG                                                            03658
MJRMVSLOADFAILURE DC C'A call to the loadHFS service resulted in a fai' 03659
         DC    C'lure in the MVS Load service.'                         03660
         DC    X'00'                                                    03661
         ORG   ETAB+(4*JRMVSPGMNOTFOUND)                                03662
         DC    A(MJRMVSPGMNOTFOUND)                                     03663
         ORG                                                            03664
MJRMVSPGMNOTFOUND DC C'A call to the exec or loadHFS service specified' 03665
         DC    C' a file that resolves to an MVS program that cannot b' 03666
         DC    C'e found.'                                              03667
         DC    X'00'                                                    03668
         ORG   ETAB+(4*JRNOCONSOLEBUFFERS)                              03669
         DC    A(MJRNOCONSOLEBUFFERS)                                   03670
         ORG                                                            03671
MJRNOCONSOLEBUFFERS DC C'The write to /dev/console cannot complete'     03672
         DC    X'00'                                                    03673
         ORG   ETAB+(4*JRPTMAXCAPTURE)                                  03674
         DC    A(MJRPTMAXCAPTURE)                                       03675
         ORG                                                            03676
MJRPTMAXCAPTURE DC C'The ptrace capture request would exceed maximum a' 03677
         DC    C'llowed'                                                03678
         DC    X'00'                                                    03679
         ORG   ETAB+(4*JRCPCNNOTENABLED)                                03680
         DC    A(MJRCPCNNOTENABLED)                                     03681
         ORG                                                            03682
MJRCPCNNOTENABLED DC C'Code Page Change Notification is not enabled'    03683
         DC    X'00'                                                    03684
         ORG   ETAB+(4*JRSHRSTGSHORTAGE)                                03685
         DC    A(MJRSHRSTGSHORTAGE)                                     03686
         ORG                                                            03687
MJRSHRSTGSHORTAGE DC C'Request for shared storage exceeds amount avail' 03688
         DC    C'able'                                                  03689
         DC    X'00'                                                    03690
         ORG   ETAB+(4*JRPTYNEEDPKTXTND)                                03691
         DC    A(MJRPTYNEEDPKTXTND)                                     03692
         ORG                                                            03693
MJRPTYNEEDPKTXTND DC C'An attempt was made to set 3270 Passthru mode w' 03694
         DC    C'ithout 3270 Packet mode.'                              03695
         DC    X'00'                                                    03696
******************************************************************      03697
         ORG   ETAB+(4*JRWAITFOREVER)                                   03698
         DC    A(MJRWAITFOREVER)                                        03699
         ORG                                                            03700
MJRWAITFOREVER DC C'The timeout value specified wait forever, but ther' 03701
         DC    C'e were no events to wait for.'                         03702
         DC    X'00'                                                    03703
         ORG   ETAB+(4*JRINVALIDNFDS)                                   03704
         DC    A(MJRINVALIDNFDS)                                        03705
         ORG                                                            03706
MJRINVALIDNFDS DC C'The NFDS parameter is larger than the OPEN_MAX(MAX' 03707
         DC    C'FILEPROC) value.'                                      03708
         DC    X'00'                                                    03709
         ORG   ETAB+(4*JRPTYNOTMASTER)                                  03710
         DC    A(MJRPTYNOTMASTER)                                       03711
         ORG                                                            03712
MJRPTYNOTMASTER DC C'Unsupported function against slave TTY'            03713
         DC    X'00'                                                    03714
         ORG   ETAB+(4*JRFSUNAUTHCLNT)                                  03715
         DC    A(MJRFSUNAUTHCLNT)                                       03716
         ORG                                                            03717
MJRFSUNAUTHCLNT DC C'An unauthenticated client is denied access.'       03718
         DC    X'00'                                                    03719
         ORG   ETAB+(4*JRBADBUFLEN)                                     03720
         DC    A(MJRBADBUFLEN)                                          03721
         ORG                                                            03722
MJRBADBUFLEN DC C'The length of the buffer is not valid      '          03723
         DC    X'00'                                                    03724
         ORG   ETAB+(4*JRBADSTGKEY)                                     03725
         DC    A(MJRBADSTGKEY)                                          03726
         ORG                                                            03727
MJRBADSTGKEY DC C'The message data could not be fetched using the spec' 03728
         DC    C'ified storage key'                                     03729
         DC    X'00'                                                    03730
         ORG   ETAB+(4*JRNOFDSTOOMANYQIDS)                              03731
         DC    A(MJRNOFDSTOOMANYQIDS)                                   03732
         ORG                                                            03733
MJRNOFDSTOOMANYQIDS DC C'The number of Fds specified is negative or to' 03734
         DC    C'o many Msg Q Ids specified on select or poll service'  03735
         DC    X'00'                                                    03736
         ORG   ETAB+(4*JRINVHDR)                                        03737
         DC    A(MJRINVHDR)                                             03738
         ORG                                                            03739
MJRINVHDR DC C'Invalid parameter list header'                           03740
         DC    X'00'                                                    03741
         ORG   ETAB+(4*JROUTOFMOUNTENTRIES)                             03742
         DC    A(MJROUTOFMOUNTENTRIES)                                  03743
         ORG                                                            03744
MJROUTOFMOUNTENTRIES DC C'The system is unable to obtain an entry in t' 03745
         DC    C'he file system mount table in the OMVS couple data se' 03746
         DC    C't'                                                     03747
         DC    X'00'                                                    03748
         ORG   ETAB+(4*JRPTYUNSUPPORTEDATTR)                            03749
         DC    A(MJRPTYUNSUPPORTEDATTR)                                 03750
         ORG                                                            03751
MJRPTYUNSUPPORTEDATTR DC C'Attempt to change attribute to unsupported ' 03752
         DC    C'value      '                                           03753
         DC    X'00'                                                    03754
         ORG   ETAB+(4*JRTGTMEMBERINACTIVE)                             03755
         DC    A(MJRTGTMEMBERINACTIVE)                                  03756
         ORG                                                            03757
MJRTGTMEMBERINACTIVE DC C'The XCF member represented by the input memb' 03758
         DC    C'er token is not active'                                03759
         DC    X'00'                                                    03760
         ORG   ETAB+(4*JRSTALEVFS)                                      03761
         DC    A(MJRSTALEVFS)                                           03762
         ORG                                                            03763
MJRSTALEVFS DC C'The Vfs passed to complete asynchronous mount does no' 03764
         DC    C't represent an outstanding asynchronous mount.'        03765
         DC    X'00'                                                    03766
         ORG   ETAB+(4*JRNOAREA)                                        03767
         DC    A(MJRNOAREA)                                             03768
         ORG                                                            03769
MJRNOAREA DC C'The State Area has not been established.'                03770
         DC    X'00'                                                    03771
         ORG   ETAB+(4*JRBADSUBFIELD)                                   03772
         DC    A(MJRBADSUBFIELD)                                        03773
         ORG                                                            03774
MJRBADSUBFIELD DC C'A subfield of the Argument is not valid.'           03775
         DC    X'00'                                                    03776
         ORG   ETAB+(4*JRNOCHANGEIDENTITY)                              03777
         DC    A(MJRNOCHANGEIDENTITY)                                   03778
         ORG                                                            03779
MJRNOCHANGEIDENTITY DC C'The invoker is not authorized to change MVS u' 03780
         DC    C'serids.'                                               03781
         DC    X'00'                                                    03782
         ORG   ETAB+(4*JRBADID)                                         03783
         DC    A(MJRBADID)                                              03784
         ORG                                                            03785
MJRBADID DC C'An incorrect ID value was passed to the BPX1WTE service.' 03786
         DC    X'00'                                                    03787
         ORG   ETAB+(4*JRNOWORKUNIT)                                    03788
         DC    A(MJRNOWORKUNIT)                                         03789
         ORG                                                            03790
MJRNOWORKUNIT DC C'Attempt to transfer work via BPX1SPW call failed'    03791
         DC    X'00'                                                    03792
         ORG   ETAB+(4*JRNOWLMCONN)                                     03793
         DC    A(MJRNOWLMCONN)                                          03794
         ORG                                                            03795
MJRNOWLMCONN DC C'Attempt to refresh work via BPX1SPW call failed'      03796
         DC    X'00'                                                    03797
         ORG   ETAB+(4*JRNOMULTI)                                       03798
         DC    A(MJRNOMULTI)                                            03799
         ORG                                                            03800
MJRNOMULTI DC C'Attempt to issue multiple BPX1CCS calls      '          03801
         DC    X'00'                                                    03802
         ORG   ETAB+(4*JRMSGLENGTHERR)                                  03803
         DC    A(MJRMSGLENGTHERR)                                       03804
         ORG                                                            03805
MJRMSGLENGTHERR DC C'Message length to the console was exceeded      '  03806
         DC    X'00'                                                    03807
         ORG   ETAB+(4*JRINVALIDCLASSIFY)                               03808
         DC    A(MJRINVALIDCLASSIFY)                                    03809
         ORG                                                            03810
MJRINVALIDCLASSIFY DC C'The classification area is not accessible to t' 03811
         DC    C'he current caller'                                     03812
         DC    X'00'                                                    03813
         ORG   ETAB+(4*JRNOENCLAVE)                                     03814
         DC    A(MJRNOENCLAVE)                                          03815
         ORG                                                            03816
MJRNOENCLAVE DC C'No enclave is associated with the calling thread or ' 03817
         DC    C'process.'                                              03818
         DC    X'00'                                                    03819
         ORG   ETAB+(4*JRSUBSYSNOTFND)                                  03820
         DC    A(MJRSUBSYSNOTFND)                                       03821
         ORG                                                            03822
MJRSUBSYSNOTFND DC C'No process was found with the associated subsyste' 03823
         DC    C'mtype and subsystem name.'                             03824
         DC    X'00'                                                    03825
         ORG   ETAB+(4*JRAPPLDATALENERR)                                03826
         DC    A(MJRAPPLDATALENERR)                                     03827
         ORG                                                            03828
MJRAPPLDATALENERR DC C'The application data area is too large to be pr' 03829
         DC    C'ocessed'                                               03830
         DC    X'00'                                                    03831
         ORG   ETAB+(4*JRINVALIDAPPLDATA)                               03832
         DC    A(MJRINVALIDAPPLDATA)                                    03833
         ORG                                                            03834
MJRINVALIDAPPLDATA DC C'The application data area passed was not acces' 03835
         DC    C'sible'                                                 03836
         DC    X'00'                                                    03837
         ORG   ETAB+(4*JRINVALIDAPPLDATA2)                              03838
         DC    A(MJRINVALIDAPPLDATA2)                                   03839
         ORG                                                            03840
MJRINVALIDAPPLDATA2 DC C'The application data area is not accessible t' 03841
         DC    C'o the current caller'                                  03842
         DC    X'00'                                                    03843
         ORG   ETAB+(4*JRINVALIDSFDL)                                   03844
         DC    A(MJRINVALIDSFDL)                                        03845
         ORG                                                            03846
MJRINVALIDSFDL DC C'The file descriptor list passed was not accessible' 03847
         DC    X'00'                                                    03848
         ORG   ETAB+(4*JRNEWLOCATIONERR)                                03849
         DC    A(MJRNEWLOCATIONERR)                                     03850
         ORG                                                            03851
MJRNEWLOCATIONERR DC C'The new tag data area passed was not accessible' 03852
         DC    X'00'                                                    03853
         ORG   ETAB+(4*JROLDLOCATIONERR)                                03854
         DC    A(MJROLDLOCATIONERR)                                     03855
         ORG                                                            03856
MJROLDLOCATIONERR DC C'The old tag data area passed was not accessible' 03857
         DC    X'00'                                                    03858
         ORG   ETAB+(4*JRNEWLENBAD)                                     03859
         DC    A(MJRNEWLENBAD)                                          03860
         ORG                                                            03861
MJRNEWLENBAD DC C'The new tag data length was not valid'                03862
         DC    X'00'                                                    03863
         ORG   ETAB+(4*JRMSGATTRERR)                                    03864
         DC    A(MJRMSGATTRERR)                                         03865
         ORG                                                            03866
MJRMSGATTRERR DC C'Message attribute error detected'                    03867
         DC    X'00'                                                    03868
         ORG   ETAB+(4*JRNOACK)                                         03869
         DC    A(MJRNOACK)                                              03870
         ORG                                                            03871
MJRNOACK DC C'No acknowledgement signal from remote system      '       03872
         DC    X'00'                                                    03873
         ORG   ETAB+(4*JRINACCESSIBLE)                                  03874
         DC    A(MJRINACCESSIBLE)                                       03875
         ORG                                                            03876
MJRINACCESSIBLE DC C'The user storage is inaccessible      '            03877
         DC    X'00'                                                    03878
         ORG   ETAB+(4*JRIEFDDSRVFAILED)                                03879
         DC    A(MJRIEFDDSRVFAILED)                                     03880
         ORG                                                            03881
MJRIEFDDSRVFAILED DC C'The macro IEFDDSRV failed'                       03882
         DC    X'00'                                                    03883
         ORG   ETAB+(4*JRSVC99FAILED)                                   03884
         DC    A(MJRSVC99FAILED)                                        03885
         ORG                                                            03886
MJRSVC99FAILED DC C'SVC 99 (Allocate) failed'                           03887
         DC    X'00'                                                    03888
         ORG   ETAB+(4*JRDEVNOTONLINE)                                  03889
         DC    A(MJRDEVNOTONLINE)                                       03890
         ORG                                                            03891
MJRDEVNOTONLINE DC C'Specified device is not online'                    03892
         DC    X'00'                                                    03893
         ORG   ETAB+(4*JRDEVNOTFOUND)                                   03894
         DC    A(MJRDEVNOTFOUND)                                        03895
         ORG                                                            03896
MJRDEVNOTFOUND DC C'Specified device is not found'                      03897
         DC    X'00'                                                    03898
         ORG   ETAB+(4*JRALREADYINPROGRESS)                             03899
         DC    A(MJRALREADYINPROGRESS)                                  03900
         ORG                                                            03901
MJRALREADYINPROGRESS DC C'Another config request is in progress      '  03902
         DC    X'00'                                                    03903
         ORG   ETAB+(4*JRINVALIDVERSION)                                03904
         DC    A(MJRINVALIDVERSION)                                     03905
         ORG                                                            03906
MJRINVALIDVERSION DC C'Config request has invalid version number      ' 03907
         DC    X'00'                                                    03908
         ORG   ETAB+(4*JRNOTAUTHWLM)                                    03909
         DC    A(MJRNOTAUTHWLM)                                         03910
         ORG                                                            03911
MJRNOTAUTHWLM DC C'Server_init service call failed permission check fo' 03912
         DC    C'r BPX.WLMSERVER facility class profile.'               03913
         DC    X'00'                                                    03914
         ORG   ETAB+(4*JRTARGETIPNOTFOUND)                              03915
         DC    A(MJRTARGETIPNOTFOUND)                                   03916
         ORG                                                            03917
MJRTARGETIPNOTFOUND DC C'Target IP address cannot be found'             03918
         DC    X'00'                                                    03919
         ORG   ETAB+(4*JRESCONNOTCONFIGURED)                            03920
         DC    A(MJRESCONNOTCONFIGURED)                                 03921
         ORG                                                            03922
MJRESCONNOTCONFIGURED DC C'The ESCON connection is not configured     ' 03923
         DC    C' '                                                     03924
         DC    X'00'                                                    03925
         ORG   ETAB+(4*JRPTYSLAVELOCKED)                                03926
         DC    A(MJRPTYSLAVELOCKED)                                     03927
         ORG                                                            03928
MJRPTYSLAVELOCKED DC C'A grantpt() was issued against the master pty b' 03929
         DC    C'ut an unlockpt() has not yet been issued.'             03930
         DC    X'00'                                                    03931
         ORG   ETAB+(4*JRPTYSLAVENOTLOCKED)                             03932
         DC    A(MJRPTYSLAVENOTLOCKED)                                  03933
         ORG                                                            03934
MJRPTYSLAVENOTLOCKED DC C'The slave pty is not locked either because g' 03935
         DC    C'rantpt was not done or because grantpt has already be' 03936
         DC    C'en issued.'                                            03937
         DC    X'00'                                                    03938
         ORG   ETAB+(4*JRPTYGRANTPTDONE)                                03939
         DC    A(MJRPTYGRANTPTDONE)                                     03940
         ORG                                                            03941
MJRPTYGRANTPTDONE DC C'grantpt() has already been issued.  This grantp' 03942
         DC    C't is redundant.'                                       03943
         DC    X'00'                                                    03944
         ORG   ETAB+(4*JRSRBSNOTALLOWED)                                03945
         DC    A(MJRSRBSNOTALLOWED)                                     03946
         ORG                                                            03947
MJRSRBSNOTALLOWED DC C'Issuing syscalls from an SRB is not allowed'     03948
         DC    X'00'                                                    03949
         ORG   ETAB+(4*JRNOTSRBSYSCALL)                                 03950
         DC    A(MJRNOTSRBSYSCALL)                                      03951
         ORG                                                            03952
MJRNOTSRBSYSCALL DC C'The syscall requested is not supported in SRB mo' 03953
         DC    C'de'                                                    03954
         DC    X'00'                                                    03955
         ORG   ETAB+(4*JRRTSSCONNERR)                                   03956
         DC    A(MJRRTSSCONNERR)                                        03957
         ORG                                                            03958
MJRRTSSCONNERR DC C'Fork child processing failed due to a RTSS connect' 03959
         DC    C'ion error.'                                            03960
         DC    X'00'                                                    03961
         ORG   ETAB+(4*JRRTSSENVERR)                                    03962
         DC    A(MJRRTSSENVERR)                                         03963
         ORG                                                            03964
MJRRTSSENVERR DC C'Fork parent processing failed due to a RTSS environ' 03965
         DC    C'ment error.'                                           03966
         DC    X'00'                                                    03967
         ORG   ETAB+(4*JRASYNCAUTHERR)                                  03968
         DC    A(MJRASYNCAUTHERR)                                       03969
         ORG                                                            03970
MJRASYNCAUTHERR DC C'User is not authorized for asynchronous i/o.'      03971
         DC    X'00'                                                    03972
         ORG   ETAB+(4*JRASYNCRWLENZERO)                                03973
         DC    A(MJRASYNCRWLENZERO)                                     03974
         ORG                                                            03975
MJRASYNCRWLENZERO DC C'Zero length asynchronous read or write not perm' 03976
         DC    C'itted.'                                                03977
         DC    X'00'                                                    03978
         ORG   ETAB+(4*JRASYNCBADMSGHDRLEN)                             03979
         DC    A(MJRASYNCBADMSGHDRLEN)                                  03980
         ORG                                                            03981
MJRASYNCBADMSGHDRLEN DC C'AioBuffSize is not set to correct message he' 03982
         DC    C'ader length.'                                          03983
         DC    X'00'                                                    03984
         ORG   ETAB+(4*JRASYNCBADCMD)                                   03985
         DC    A(MJRASYNCBADCMD)                                        03986
         ORG                                                            03987
MJRASYNCBADCMD DC C'AioCmd is not set to a supported value.'            03988
         DC    X'00'                                                    03989
         ORG   ETAB+(4*JRASYNCBADNOTIFYTYPE)                            03990
         DC    A(MJRASYNCBADNOTIFYTYPE)                                 03991
         ORG                                                            03992
MJRASYNCBADNOTIFYTYPE DC C'AioNotifyType is not set to a supported val' 03993
         DC    C'ue.'                                                   03994
         DC    X'00'                                                    03995
         ORG   ETAB+(4*JRASYNCBADOFFSET)                                03996
         DC    A(MJRASYNCBADOFFSET)                                     03997
         ORG                                                            03998
MJRASYNCBADOFFSET DC C'AioOffset is a negative value.'                  03999
         DC    X'00'                                                    04000
         ORG   ETAB+(4*JRASYNCBADAIOCBLEN)                              04001
         DC    A(MJRASYNCBADAIOCBLEN)                                   04002
         ORG                                                            04003
MJRASYNCBADAIOCBLEN DC C'The input length for the AioCb is not a suppo' 04004
         DC    C'rted length.'                                          04005
         DC    X'00'                                                    04006
         ORG   ETAB+(4*JRASYNCBADSOCKADDR)                              04007
         DC    A(MJRASYNCBADSOCKADDR)                                   04008
         ORG                                                            04009
MJRASYNCBADSOCKADDR DC C'The AioSockAddr or AioSockAddrLen contains a ' 04010
         DC    C'bad value.'                                            04011
         DC    X'00'                                                    04012
         ORG   ETAB+(4*JRCANCEL)                                        04013
         DC    A(MJRCANCEL)                                             04014
         ORG                                                            04015
MJRCANCEL DC C'Vnode operation CANCEL is not supported by this file sy' 04016
         DC    C'stem'                                                  04017
         DC    X'00'                                                    04018
         ORG   ETAB+(4*JRDUPLICATECANCEL)                               04019
         DC    A(MJRDUPLICATECANCEL)                                    04020
         ORG                                                            04021
MJRDUPLICATECANCEL DC C'A cancel operation is already in progress for ' 04022
         DC    C'the target asyncio request.'                           04023
         DC    X'00'                                                    04024
         ORG   ETAB+(4*JRASYNCNOTSINGLETD)                              04025
         DC    A(MJRASYNCNOTSINGLETD)                                   04026
         ORG                                                            04027
MJRASYNCNOTSINGLETD DC C'The AsyncIO operation can not be performed be' 04028
         DC    C'cause this socket does not have a chosen transport st' 04029
         DC    C'ack.'                                                  04030
         DC    X'00'                                                    04031
         ORG   ETAB+(4*JRSMFNOTAUTHORIZED)                              04032
         DC    A(MJRSMFNOTAUTHORIZED)                                   04033
         ORG                                                            04034
MJRSMFNOTAUTHORIZED DC C'The __smf_record function can not be performe' 04035
         DC    C'd because the caller is not permitted to the BPX.SMF ' 04036
         DC    C'facility class.'                                       04037
         DC    X'00'                                                    04038
         ORG   ETAB+(4*JRSMFNOTACCEPTING)                               04039
         DC    A(MJRSMFNOTACCEPTING)                                    04040
         ORG                                                            04041
MJRSMFNOTACCEPTING DC C'SMF is not recording SMF records of the type a' 04042
         DC    C'nd subtype requested.'                                 04043
         DC    X'00'                                                    04044
         ORG   ETAB+(4*JRSMFNOTACTIVE)                                  04045
         DC    A(MJRSMFNOTACTIVE)                                       04046
         ORG                                                            04047
MJRSMFNOTACTIVE DC C'SMF is not active.'                                04048
         DC    X'00'                                                    04049
         ORG   ETAB+(4*JRSMFBADRECORDLENGTH)                            04050
         DC    A(MJRSMFBADRECORDLENGTH)                                 04051
         ORG                                                            04052
MJRSMFBADRECORDLENGTH DC C'The the length of the SMF record passed to ' 04053
         DC    C'__smf_recordis either too large or too small.'         04054
         DC    X'00'                                                    04055
         ORG   ETAB+(4*JRENCLAVESEXIST)                                 04056
         DC    A(MJRENCLAVESEXIST)                                      04057
         ORG                                                            04058
MJRENCLAVESEXIST DC C'The calling work manager has enclaves that it cr' 04059
         DC    C'eated that have yet to be serviced.'                   04060
         DC    X'00'                                                    04061
         ORG   ETAB+(4*JRBINDNOTDONE)                                   04062
         DC    A(MJRBINDNOTDONE)                                        04063
         ORG                                                            04064
MJRBINDNOTDONE DC C'Bind() must be issued before issuing read/write'    04065
         DC    X'00'                                                    04066
         ORG   ETAB+(4*JRPINGSELF)                                      04067
         DC    A(MJRPINGSELF)                                           04068
         ORG                                                            04069
MJRPINGSELF DC C'Ping to self is not supported'                         04070
         DC    X'00'                                                    04071
         ORG   ETAB+(4*JRDUPLICATEREQ)                                  04072
         DC    A(MJRDUPLICATEREQ)                                       04073
         ORG                                                            04074
MJRDUPLICATEREQ DC C'Requested connection already exists'               04075
         DC    X'00'                                                    04076
         ORG   ETAB+(4*JRTRLENOTFOUND)                                  04077
         DC    A(MJRTRLENOTFOUND)                                       04078
         ORG                                                            04079
MJRTRLENOTFOUND DC C'Target TRLE name cannot be found'                  04080
         DC    X'00'                                                    04081
         ORG   ETAB+(4*JRFASTPATHRANGE)                                 04082
         DC    A(MJRFASTPATHRANGE)                                      04083
         ORG                                                            04084
MJRFASTPATHRANGE DC C'A new socket descriptor is too large for Fastpat' 04085
         DC    C'h.'                                                    04086
         DC    X'00'                                                    04087
         ORG   ETAB+(4*JRROSALREADYREG)                                 04088
         DC    A(MJRROSALREADYREG)                                      04089
         ORG                                                            04090
MJRROSALREADYREG DC C'An error occurred during process signal initiali' 04091
         DC    C'zation'                                                04092
         DC    X'00'                                                    04093
         ORG   ETAB+(4*JRASYNCSIGKEY0ERR)                               04094
         DC    A(MJRASYNCSIGKEY0ERR)                                    04095
         ORG                                                            04096
MJRASYNCSIGKEY0ERR DC C'A caller in key 0 cannot request signals for a' 04097
         DC    C'sync i/o.'                                             04098
         DC    X'00'                                                    04099
         ORG   ETAB+(4*JRASYNCEXITMODETCB)                              04100
         DC    A(MJRASYNCEXITMODETCB)                                   04101
         ORG                                                            04102
MJRASYNCEXITMODETCB DC C'A request for ExitMode of TCB was requested f' 04103
         DC    C'or a user who is either not running on a TCB or runni' 04104
         DC    C'ng in key 0.'                                          04105
         DC    X'00'                                                    04106
         ORG   ETAB+(4*JRASYNCOPNOTSUPP)                                04107
         DC    A(MJRASYNCOPNOTSUPP)                                     04108
         ORG                                                            04109
MJRASYNCOPNOTSUPP DC C'The AsyncIO operation can not be performed beca' 04110
         DC    C'use the socket transport does not support asynchronou' 04111
         DC    C's I/O or asynchronous select included a physical file' 04112
         DC    C' system that could not support this operation.'        04113
         DC    X'00'                                                    04114
         ORG   ETAB+(4*JRASYNCBADSIGNO)                                 04115
         DC    A(MJRASYNCBADSIGNO)                                      04116
         ORG                                                            04117
MJRASYNCBADSIGNO DC C'The AsyncIO operation specified a signal number ' 04118
         DC    C'that   does not fall within the valid range of values' 04119
         DC    C'.'                                                     04120
         DC    X'00'                                                    04121
         ORG   ETAB+(4*JRPRIVILIGEDFILE)                                04122
         DC    A(MJRPRIVILIGEDFILE)                                     04123
         ORG                                                            04124
MJRPRIVILIGEDFILE DC C'The operation is not allowed on a priviliged fi' 04125
         DC    C'le'                                                    04126
         DC    X'00'                                                    04127
         ORG   ETAB+(4*JRROUTEEXISTS)                                   04128
         DC    A(MJRROUTEEXISTS)                                        04129
         ORG                                                            04130
MJRROUTEEXISTS DC C'The oeifconfig contained a duplicate destination I' 04131
         DC    C'P address'                                             04132
         DC    X'00'                                                    04133
         ORG   ETAB+(4*JRHOMEEXISTS)                                    04134
         DC    A(MJRHOMEEXISTS)                                         04135
         ORG                                                            04136
MJRHOMEEXISTS DC C'The oeifconfig contained a duplicate home IP addres' 04137
         DC    C's'                                                     04138
         DC    X'00'                                                    04139
         ORG   ETAB+(4*JRAPFNOTAUTHORIZED)                              04140
         DC    A(MJRAPFNOTAUTHORIZED)                                   04141
         ORG                                                            04142
MJRAPFNOTAUTHORIZED DC C'The chattr function can not be performed to c' 04143
         DC    C'hange the APF attribute because the caller is not per' 04144
         DC    C'mitted to the BPX.FILEATTR.APF facility class.'        04145
         DC    X'00'                                                    04146
         ORG   ETAB+(4*JRPGMNOTAUTHORIZED)                              04147
         DC    A(MJRPGMNOTAUTHORIZED)                                   04148
         ORG                                                            04149
MJRPGMNOTAUTHORIZED DC C'The chattr function can not be performed to c' 04150
         DC    C'hange the program control attribute because the calle' 04151
         DC    C'r is not permitted to the BPX.FILEATTR.PROGCTL facili' 04152
         DC    C'ty class.'                                             04153
         DC    X'00'                                                    04154
         ORG   ETAB+(4*JRPROGCNTL)                                      04155
         DC    A(MJRPROGCNTL)                                           04156
         ORG                                                            04157
MJRPROGCNTL DC C'A request to load an HFS executable that is not progr' 04158
         DC    C'am controlled was made into an environment that must ' 04159
         DC    C'be kept clean.'                                        04160
         DC    X'00'                                                    04161
         ORG   ETAB+(4*JRFILESZEXCDLIMIT)                               04162
         DC    A(MJRFILESZEXCDLIMIT)                                    04163
         ORG                                                            04164
MJRFILESZEXCDLIMIT DC C'A request to load a file into the LFS Cache wa' 04165
         DC    C's made for a file that exceeds the size limit of the ' 04166
         DC    C'cache.'                                                04167
         DC    X'00'                                                    04168
         ORG   ETAB+(4*JRFILEISEMPTY)                                   04169
         DC    A(MJRFILEISEMPTY)                                        04170
         ORG                                                            04171
MJRFILEISEMPTY DC C'A request to load a file into the LFS Cache was ma' 04172
         DC    C'de for a file that is empty.'                          04173
         DC    X'00'                                                    04174
         ORG   ETAB+(4*JRCACHENOTREGFILE)                               04175
         DC    A(MJRCACHENOTREGFILE)                                    04176
         ORG                                                            04177
MJRCACHENOTREGFILE DC C'Requests to load a file into the LFS Cache are' 04178
         DC    C' valid for only regular files.'                        04179
         DC    X'00'                                                    04180
         ORG   ETAB+(4*JRNOTMVSLOCALFILE)                               04181
         DC    A(MJRNOTMVSLOCALFILE)                                    04182
         ORG                                                            04183
MJRNOTMVSLOCALFILE DC C'Requests to load a file into the LFS Cache are' 04184
         DC    C' valid for only OS/390 local files.'                   04185
         DC    X'00'                                                    04186
         ORG   ETAB+(4*JRFILEINUSE)                                     04187
         DC    A(MJRFILEINUSE)                                          04188
         ORG                                                            04189
MJRFILEINUSE DC C'The file cannot be loaded into the LFS Cache because' 04190
         DC    C' the file is currently in use or the cleanup daemon h' 04191
         DC    C'as not completed.'                                     04192
         DC    X'00'                                                    04193
         ORG   ETAB+(4*JRNOFREEENTRY)                                   04194
         DC    A(MJRNOFREEENTRY)                                        04195
         ORG                                                            04196
MJRNOFREEENTRY DC C'No free entries in the interface control array'     04197
         DC    X'00'                                                    04198
         ORG   ETAB+(4*JRINHEUSERID)                                    04199
         DC    A(MJRINHEUSERID)                                         04200
         ORG                                                            04201
MJRINHEUSERID DC C'User Id specified in Inheritance structure is not v' 04202
         DC    C'alid.'                                                 04203
         DC    X'00'                                                    04204
         ORG   ETAB+(4*JRINHEREGION)                                    04205
         DC    A(MJRINHEREGION)                                         04206
         ORG                                                            04207
MJRINHEREGION DC C'Region size specified in Inheritance structure is n' 04208
         DC    C'ot valid.'                                             04209
         DC    X'00'                                                    04210
         ORG   ETAB+(4*JRINHECPUTIME)                                   04211
         DC    A(MJRINHECPUTIME)                                        04212
         ORG                                                            04213
MJRINHECPUTIME DC C'CPU Time specified in Inheritance structure is not' 04214
         DC    C' valid.'                                               04215
         DC    X'00'                                                    04216
         ORG   ETAB+(4*JRINHEACCTDATAPTR)                               04217
         DC    A(MJRINHEACCTDATAPTR)                                    04218
         ORG                                                            04219
MJRINHEACCTDATAPTR DC C'The account data pointer in the Inheritance st' 04220
         DC    C'ructurepoints to a location not addressable by the ca' 04221
         DC    C'ller'                                                  04222
         DC    X'00'                                                    04223
         ORG   ETAB+(4*JRINHECWD)                                       04224
         DC    A(MJRINHECWD)                                            04225
         ORG                                                            04226
MJRINHECWD DC C'CWD specified in Inheritance structure is not valid.'   04227
         DC    X'00'                                                    04228
         ORG   ETAB+(4*JRTOOMANYINTF)                                   04229
         DC    A(MJRTOOMANYINTF)                                        04230
         ORG                                                            04231
MJRTOOMANYINTF DC C'Too many configured interfaces already exist'       04232
         DC    X'00'                                                    04233
         ORG   ETAB+(4*JRBADIPADDR)                                     04234
         DC    A(MJRBADIPADDR)                                          04235
         ORG                                                            04236
MJRBADIPADDR DC C'An IP address in the configured interface is incorre' 04237
         DC    C'ct'                                                    04238
         DC    X'00'                                                    04239
         ORG   ETAB+(4*JRDATANOTAVAIL)                                  04240
         DC    A(MJRDATANOTAVAIL)                                       04241
         ORG                                                            04242
MJRDATANOTAVAIL DC C'There are no elements to read on ESCON receive qu' 04243
         DC    C'eue'                                                   04244
         DC    X'00'                                                    04245
         ORG   ETAB+(4*JRREQDENIED)                                     04246
         DC    A(MJRREQDENIED)                                          04247
         ORG                                                            04248
MJRREQDENIED DC C'The oeifconfig request is not accepted'               04249
         DC    X'00'                                                    04250
         ORG   ETAB+(4*JRBADMTUSIZE)                                    04251
         DC    A(MJRBADMTUSIZE)                                         04252
         ORG                                                            04253
MJRBADMTUSIZE DC C'The specified MTU size for the interface is incorre' 04254
         DC    C'ct'                                                    04255
         DC    X'00'                                                    04256
         ORG   ETAB+(4*JRNOTOSA)                                        04257
         DC    A(MJRNOTOSA)                                             04258
         ORG                                                            04259
MJRNOTOSA DC C'Current interface is not an OSA adapter'                 04260
         DC    X'00'                                                    04261
         ORG   ETAB+(4*JRBADOSAPORT)                                    04262
         DC    A(MJRBADOSAPORT)                                         04263
         ORG                                                            04264
MJRBADOSAPORT DC C'Incorrect OSA port number specified'                 04265
         DC    X'00'                                                    04266
         ORG   ETAB+(4*JRFORKEXITRCOVERLAYPGMNOTVALID)                  04267
         DC    A(MJRFORKEXITRCOVERLAYPGMNOTVALID)                       04268
         ORG                                                            04269
MJRFORKEXITRCOVERLAYPGMNOTVALID DC C'Contents Supervisor Fork Exit can' 04270
         DC    C'not fork overlay programs'                             04271
         DC    X'00'                                                    04272
         ORG   ETAB+(4*JRMSGMAXLINES)                                   04273
         DC    A(MJRMSGMAXLINES)                                        04274
         ORG                                                            04275
MJRMSGMAXLINES DC C'Maximum number of lines was exceeded      '         04276
         DC    X'00'                                                    04277
         ORG   ETAB+(4*JRRDDPLUSNOCURSORSUPP)                           04278
         DC    A(MJRRDDPLUSNOCURSORSUPP)                                04279
         ORG                                                            04280
MJRRDDPLUSNOCURSORSUPP DC C'FuioRddPlus is only supported with the ind' 04281
         DC    C'ex protocol, not the cursor protocol.'                 04282
         DC    X'00'                                                    04283
         ORG   ETAB+(4*JRBADMAXSENDRCVSIZE)                             04284
         DC    A(MJRBADMAXSENDRCVSIZE)                                  04285
         ORG                                                            04286
MJRBADMAXSENDRCVSIZE DC C'Incorrect Maximum send/receive size value sp' 04287
         DC    C'ecified'                                               04288
         DC    X'00'                                                    04289
         ORG   ETAB+(4*JRPTLDTOOMANYEXTENTS)                            04290
         DC    A(MJRPTLDTOOMANYEXTENTS)                                 04291
         ORG                                                            04292
MJRPTLDTOOMANYEXTENTS DC C'The ptrace loader information request faile' 04293
         DC    C'd because a load module had more than 16 extents'      04294
         DC    X'00'                                                    04295
         ORG   ETAB+(4*JRBADHANDLE)                                     04296
         DC    A(MJRBADHANDLE)                                          04297
         ORG                                                            04298
MJRBADHANDLE DC C'The lock handle on the lock parameter is not 0'       04299
         DC    X'00'                                                    04300
         ORG   ETAB+(4*JRNODEFAULT)                                     04301
         DC    A(MJRNODEFAULT)                                          04302
         ORG                                                            04303
MJRNODEFAULT DC C'Common Inet is running, but there are no transport p' 04304
         DC    C'roviders active to run as a Default.'                  04305
         DC    X'00'                                                    04306
         ORG   ETAB+(4*JRBLOCKSINFLUX)                                  04307
         DC    A(MJRBLOCKSINFLUX)                                       04308
         ORG                                                            04309
MJRBLOCKSINFLUX DC C'Unable to access internal blocks without lock'     04310
         DC    X'00'                                                    04311
         ORG   ETAB+(4*JRLINETFAIL)                                     04312
         DC    A(MJRLINETFAIL)                                          04313
         ORG                                                            04314
MJRLINETFAIL DC C'Local inet not correctly set up.'                     04315
         DC    X'00'                                                    04316
         ORG   ETAB+(4*JRNOEPHEMERALPORTS)                              04317
         DC    A(MJRNOEPHEMERALPORTS)                                   04318
         ORG                                                            04319
MJRNOEPHEMERALPORTS DC C'The supply of ephemeral port numbers is exhau' 04320
         DC    C'sted.'                                                 04321
         DC    X'00'                                                    04322
         ORG   ETAB+(4*JRSOCKETSYNRECEIVED)                             04323
         DC    A(MJRSOCKETSYNRECEIVED)                                  04324
         ORG                                                            04325
MJRSOCKETSYNRECEIVED DC C'A SYN was received on the socket connection.' 04326
         DC    X'00'                                                    04327
         ORG   ETAB+(4*JRSOCKETRSTRECEIVED)                             04328
         DC    A(MJRSOCKETRSTRECEIVED)                                  04329
         ORG                                                            04330
MJRSOCKETRSTRECEIVED DC C'A RST was received on the socket connection.' 04331
         DC    X'00'                                                    04332
         ORG   ETAB+(4*JRSELFCONNECT)                                   04333
         DC    A(MJRSELFCONNECT)                                        04334
         ORG                                                            04335
MJRSELFCONNECT DC C'Connect to self is not allowed'                     04336
         DC    X'00'                                                    04337
         ORG   ETAB+(4*JRALREADYCONN)                                   04338
         DC    A(MJRALREADYCONN)                                        04339
         ORG                                                            04340
MJRALREADYCONN DC C'The socket is already connected'                    04341
         DC    X'00'                                                    04342
         ORG   ETAB+(4*JRNOTSTREAM)                                     04343
         DC    A(MJRNOTSTREAM)                                          04344
         ORG                                                            04345
MJRNOTSTREAM DC C'The socket operation is only valid for a stream sock' 04346
         DC    C'et.'                                                   04347
         DC    X'00'                                                    04348
         ORG   ETAB+(4*JRSOCKETCONDROPPED)                              04349
         DC    A(MJRSOCKETCONDROPPED)                                   04350
         ORG                                                            04351
MJRSOCKETCONDROPPED DC C'The socket connection was severed.'            04352
         DC    X'00'                                                    04353
         ORG   ETAB+(4*JRMPMUPROCESS)                                   04354
         DC    A(MJRMPMUPROCESS)                                        04355
         ORG                                                            04356
MJRMPMUPROCESS DC C'Operation not permitted in a Multiproc/Multiuser p' 04357
         DC    C'rocess'                                                04358
         DC    X'00'                                                    04359
         ORG   ETAB+(4*JRTLSCERTIDLENINVALID)                           04360
         DC    A(MJRTLSCERTIDLENINVALID)                                04361
         ORG                                                            04362
MJRTLSCERTIDLENINVALID DC C'The certificate structure has an incorrect' 04363
         DC    C' length associated with it.'                           04364
         DC    X'00'                                                    04365
         ORG   ETAB+(4*JRTLSCERTTYPEINVALID)                            04366
         DC    A(MJRTLSCERTTYPEINVALID)                                 04367
         ORG                                                            04368
MJRTLSCERTTYPEINVALID DC C'The type of certificate used is not valid.'  04369
         DC    X'00'                                                    04370
         ORG   ETAB+(4*JRTLSCERTLENGTHINVALID)                          04371
         DC    A(MJRTLSCERTLENGTHINVALID)                               04372
         ORG                                                            04373
MJRTLSCERTLENGTHINVALID DC C'The length of the certificate is not vali' 04374
         DC    C'd.'                                                    04375
         DC    X'00'                                                    04376
         ORG   ETAB+(4*JRNOINITACEE)                                    04377
         DC    A(MJRNOINITACEE)                                         04378
         ORG                                                            04379
MJRNOINITACEE DC C'There is no SAF service available to manage a certi' 04380
         DC    C'ficate authorization.'                                 04381
         DC    X'00'                                                    04382
         ORG   ETAB+(4*JRNOCERTFORUSER)                                 04383
         DC    A(MJRNOCERTFORUSER)                                      04384
         ORG                                                            04385
MJRNOCERTFORUSER DC C'There is no userid defined for this certificate.' 04386
         DC    X'00'                                                    04387
         ORG   ETAB+(4*JRCERTINVALID)                                   04388
         DC    A(MJRCERTINVALID)                                        04389
         ORG                                                            04390
MJRCERTINVALID DC C'The certificate is not valid to the security servi' 04391
         DC    C'ce.'                                                   04392
         DC    X'00'                                                    04393
         ORG   ETAB+(4*JRKEEPALIVETO)                                   04394
         DC    A(MJRKEEPALIVETO)                                        04395
         ORG                                                            04396
MJRKEEPALIVETO DC C'The socket connection was severed.'                 04397
         DC    X'00'                                                    04398
         ORG   ETAB+(4*JRINETRECYCLED)                                  04399
         DC    A(MJRINETRECYCLED)                                       04400
         ORG                                                            04401
MJRINETRECYCLED DC C'One of the Transport Providers was activated afte' 04402
         DC    C'r the socket was opened.'                              04403
         DC    X'00'                                                    04404
         ORG   ETAB+(4*JRSWAPMISMATCH)                                  04405
         DC    A(MJRSWAPMISMATCH)                                       04406
         ORG                                                            04407
MJRSWAPMISMATCH DC C'An attempt was made to make the address space swa' 04408
         DC    C'ppablewhen no previous attempt to make the address sp' 04409
         DC    C'acenon-swappable was made.'                            04410
         DC    X'00'                                                    04411
         ORG   ETAB+(4*JRNOBACKLOGQ)                                    04412
         DC    A(MJRNOBACKLOGQ)                                         04413
         ORG                                                            04414
MJRNOBACKLOGQ DC C'An accept() request was issued for a serversocket t' 04415
         DC    C'hat does not have a backlog queue.'                    04416
         DC    X'00'                                                    04417
         ORG   ETAB+(4*JRFUNCTIONCODE)                                  04418
         DC    A(MJRFUNCTIONCODE)                                       04419
         ORG                                                            04420
MJRFUNCTIONCODE DC C'The function code for syscall is not valid.'       04421
         DC    X'00'                                                    04422
         ORG   ETAB+(4*JRIDENTITYTYPE)                                  04423
         DC    A(MJRIDENTITYTYPE)                                       04424
         ORG                                                            04425
MJRIDENTITYTYPE DC C'The identity type for the syscall is not valid.'   04426
         DC    X'00'                                                    04427
         ORG   ETAB+(4*JRCERTIFICATE)                                   04428
         DC    A(MJRCERTIFICATE)                                        04429
         ORG                                                            04430
MJRCERTIFICATE DC C'The security certificate was either not specified ' 04431
         DC    C'orthe length was not valid.'                           04432
         DC    X'00'                                                    04433
         ORG   ETAB+(4*JRCWDPLUSFILENAME)                               04434
         DC    A(MJRCWDPLUSFILENAME)                                    04435
         ORG                                                            04436
MJRCWDPLUSFILENAME DC C'The combined length of the CWD specified in th' 04437
         DC    C'e INHE and the filename parameter exceeded 1023 bytes' 04438
         DC    C'.'                                                     04439
         DC    X'00'                                                    04440
         ORG   ETAB+(4*JRFILECHANGEDDURINGLOAD)                         04441
         DC    A(MJRFILECHANGEDDURINGLOAD)                              04442
         ORG                                                            04443
MJRFILECHANGEDDURINGLOAD DC C'The file or its attributes changed while' 04444
         DC    C' the file was in the process of being loaded.'         04445
         DC    X'00'                                                    04446
         ORG   ETAB+(4*JRSECURITYENV)                                   04447
         DC    A(MJRSECURITYENV)                                        04448
         ORG                                                            04449
MJRSECURITYENV DC C'The syscall is prohibited with the caller:apos.s c' 04450
         DC    C'urrent security environment.'                          04451
         DC    X'00'                                                    04452
         ORG   ETAB+(4*JRSTORNOTAVAIL)                                  04453
         DC    A(MJRSTORNOTAVAIL)                                       04454
         ORG                                                            04455
MJRSTORNOTAVAIL DC C'An address was specified which is not available'   04456
         DC    X'00'                                                    04457
         ORG   ETAB+(4*JRNOTSEGMENT)                                    04458
         DC    A(MJRNOTSEGMENT)                                         04459
         ORG                                                            04460
MJRNOTSEGMENT DC C'A location specified or generated is not on a segme' 04461
         DC    C'nt boundary'                                           04462
         DC    X'00'                                                    04463
         ORG   ETAB+(4*JRMMAPTYPEMISMATCH)                              04464
         DC    A(MJRMMAPTYPEMISMATCH)                                   04465
         ORG                                                            04466
MJRMMAPTYPEMISMATCH DC C'A request specified the MAP_MEGA option but w' 04467
         DC    C'as already mapped without the option or did not speci' 04468
         DC    C'fy the  MAP_MEGA option but was already mapped with t' 04469
         DC    C'hat option.'                                           04470
         DC    X'00'                                                    04471
         ORG   ETAB+(4*JRWFILEMAPRDONLY)                                04472
         DC    A(MJRWFILEMAPRDONLY)                                     04473
         ORG                                                            04474
MJRWFILEMAPRDONLY DC C'A request tried to write to a file that is mapp' 04475
         DC    C'ed  as read-only'                                      04476
         DC    X'00'                                                    04477
         ORG   ETAB+(4*JRPTTYPENOTTRIED)                                04478
         DC    A(MJRPTTYPENOTTRIED)                                     04479
         ORG                                                            04480
MJRPTTYPENOTTRIED DC C'The entry in a ptrace PT_BlockReq request conta' 04481
         DC    C'ining this value in the status field was not processe' 04482
         DC    C'd because of an unexpected error'                      04483
         DC    X'00'                                                    04484
         ORG   ETAB+(4*JRPTBADBLKREQSTRUC)                              04485
         DC    A(MJRPTBADBLKREQSTRUC)                                   04486
         ORG                                                            04487
MJRPTBADBLKREQSTRUC DC C'The PtBRInfo block or related structure passe' 04488
         DC    C'd as input for a ptrace Pt_BlockReq request is not va' 04489
         DC    C'lid.'                                                  04490
         DC    X'00'                                                    04491
         ORG   ETAB+(4*JRPTSOMEBLKEDFAILED)                             04492
         DC    A(MJRPTSOMEBLKEDFAILED)                                  04493
         ORG                                                            04494
MJRPTSOMEBLKEDFAILED DC C'One or more entries in a Pt_BlockReq request' 04495
         DC    C' was not processed.'                                   04496
         DC    X'00'                                                    04497
         ORG   ETAB+(4*JRPTTYPENOTBLOCKABLE)                            04498
         DC    A(MJRPTTYPENOTBLOCKABLE)                                 04499
         ORG                                                            04500
MJRPTTYPENOTBLOCKABLE DC C'The entry in a ptrace PT_BlockReq request c' 04501
         DC    C'ontaining this value in the status field was not proc' 04502
         DC    C'essed because the type specified is not allowed in a ' 04503
         DC    C'blocked request.'                                      04504
         DC    X'00'                                                    04505
         ORG   ETAB+(4*JRTARGETPID)                                     04506
         DC    A(MJRTARGETPID)                                          04507
         ORG                                                            04508
MJRTARGETPID DC C'A target pid specified is incorrect'                  04509
         DC    X'00'                                                    04510
         ORG   ETAB+(4*JRSIGNALPID)                                     04511
         DC    A(MJRSIGNALPID)                                          04512
         ORG                                                            04513
MJRSIGNALPID DC C'A signal pid specified is incorrect'                  04514
         DC    X'00'                                                    04515
         ORG   ETAB+(4*JRNOCALLERPID)                                   04516
         DC    A(MJRNOCALLERPID)                                        04517
         ORG                                                            04518
MJRNOCALLERPID DC C'The Signal_Pid or Target_Pid did not containthe pi' 04519
         DC    C'd of the caller'                                       04520
         DC    X'00'                                                    04521
         ORG   ETAB+(4*JRANR)                                           04522
         DC    A(MJRANR)                                                04523
         ORG                                                            04524
MJRANR DC C'Vnode operation ACCEPT_AND_RECEIVE is not supported by thi' 04525
         DC    C's file system'                                         04526
         DC    X'00'                                                    04527
         ORG   ETAB+(4*JRSRX)                                           04528
         DC    A(MJRSRX)                                                04529
         ORG                                                            04530
MJRSRX DC C'Vnode operation SR_CSM is not supported by this file syste' 04531
         DC    C'm'                                                     04532
         DC    X'00'                                                    04533
         ORG   ETAB+(4*JRWRONGKEY)                                      04534
         DC    A(MJRWRONGKEY)                                           04535
         ORG                                                            04536
MJRWRONGKEY DC C'An error occurred during process signal initializatio' 04537
         DC    C'n'                                                     04538
         DC    X'00'                                                    04539
         ORG   ETAB+(4*JRPTBADBLKOFFSET)                                04540
         DC    A(MJRPTBADBLKOFFSET)                                     04541
         ORG                                                            04542
MJRPTBADBLKOFFSET DC C'A PtBRInfo entry has an offset that either poin' 04543
         DC    C'ts to within the PtBRInfo block or past the end of th' 04544
         DC    C'e area provided by the user.'                          04545
         DC    X'00'                                                    04546
         ORG   ETAB+(4*JRSSETTOOSMALL)                                  04547
         DC    A(MJRSSETTOOSMALL)                                       04548
         ORG                                                            04549
MJRSSETTOOSMALL DC C'The OldCount value supplied was too smallto accom' 04550
         DC    C'odate the number of built entries   '                  04551
         DC    X'00'                                                    04552
         ORG   ETAB+(4*JRINVALIDRANGE)                                  04553
         DC    A(MJRINVALIDRANGE)                                       04554
         ORG                                                            04555
MJRINVALIDRANGE DC C'The NewCount or OldCount was greater thanthe maxi' 04556
         DC    C'mum number of signals allowed'                         04557
         DC    X'00'                                                    04558
         ORG   ETAB+(4*JRINVALIDOPTION)                                 04559
         DC    A(MJRINVALIDOPTION)                                      04560
         ORG                                                            04561
MJRINVALIDOPTION DC C'The option specified is not supported'            04562
         DC    X'00'                                                    04563
         ORG   ETAB+(4*JRINVALIDBINSEMUNDO)                             04564
         DC    A(MJRINVALIDBINSEMUNDO)                                  04565
         ORG                                                            04566
MJRINVALIDBINSEMUNDO DC C'The requested operation violates binary sema' 04567
         DC    C'phore rules by specifying UNDO option.'                04568
         DC    X'00'                                                    04569
         ORG   ETAB+(4*JRINVALIDBINSEMNUMSEMOPS)                        04570
         DC    A(MJRINVALIDBINSEMNUMSEMOPS)                             04571
         ORG                                                            04572
MJRINVALIDBINSEMNUMSEMOPS DC C'The requested operation violates binary' 04573
         DC    C' semaphore rulesby specifying more than one operation' 04574
         DC    C' per semop.'                                           04575
         DC    X'00'                                                    04576
         ORG   ETAB+(4*JRINVALIDBINSEMNOTBINOP)                         04577
         DC    A(MJRINVALIDBINSEMNOTBINOP)                              04578
         ORG                                                            04579
MJRINVALIDBINSEMNOTBINOP DC C'The requested operation violates binary ' 04580
         DC    C'semaphore rulesby specifying too large a semop or sem' 04581
         DC    C'ctl value for the semval.'                             04582
         DC    X'00'                                                    04583
         ORG   ETAB+(4*JRINVALIDBINSEMFLAG)                             04584
         DC    A(MJRINVALIDBINSEMFLAG)                                  04585
         ORG                                                            04586
MJRINVALIDBINSEMFLAG DC C'A semgt request matched an existing key or I' 04587
         DC    C'D but the __IPC_BINSEM flag operand does not match.'   04588
         DC    X'00'                                                    04589
         ORG   ETAB+(4*JRINVALIDBINSEMSETALL)                           04590
         DC    A(MJRINVALIDBINSEMSETALL)                                04591
         ORG                                                            04592
MJRINVALIDBINSEMSETALL DC C'A requested semctl SETALL is being done af' 04593
         DC    C'ter a semop for a __IPC_BINSEM semaphore set.'         04594
         DC    X'00'                                                    04595
         ORG   ETAB+(4*JRNEGATIVELENGTH)                                04596
         DC    A(MJRNEGATIVELENGTH)                                     04597
         ORG                                                            04598
MJRNEGATIVELENGTH DC C'A negative length was specified for either the ' 04599
         DC    C' header length or trailer length on the SEND_FILESysc' 04600
         DC    C'all.'                                                  04601
         DC    X'00'                                                    04602
         ORG   ETAB+(4*JRINVALIDOFFSET)                                 04603
         DC    A(MJRINVALIDOFFSET)                                      04604
         ORG                                                            04605
MJRINVALIDOFFSET DC C'The offset parameter specified on the SEND_FILE ' 04606
         DC    C'syscall is not correct. It is either a negative numbe' 04607
         DC    C'r or it specifies an offset past the end   of the fil' 04608
         DC    C'e.'                                                    04609
         DC    X'00'                                                    04610
         ORG   ETAB+(4*JRTOOMANYBYTES)                                  04611
         DC    A(MJRTOOMANYBYTES)                                       04612
         ORG                                                            04613
MJRTOOMANYBYTES DC C'The FILE_BYTES parameter specified on the SEND_FI' 04614
         DC    C'LE syscall is larger than the file size.'              04615
         DC    X'00'                                                    04616
         ORG   ETAB+(4*JRSOCKETNONBLOCK)                                04617
         DC    A(MJRSOCKETNONBLOCK)                                     04618
         ORG                                                            04619
MJRSOCKETNONBLOCK DC C'The socket descriptor specified on the SEND_FIL' 04620
         DC    C'Esyscall is a non-blocking socket. SEND_FILE requires' 04621
         DC    C' a blocking socket.'                                   04622
         DC    X'00'                                                    04623
         ORG   ETAB+(4*JRLOCALSPAWNNOTALLOWED)                          04624
         DC    A(MJRLOCALSPAWNNOTALLOWED)                               04625
         ORG                                                            04626
MJRLOCALSPAWNNOTALLOWED DC C'A request to spawn a local child process ' 04627
         DC    C'could not be completed.'                               04628
         DC    X'00'                                                    04629
         ORG   ETAB+(4*JRINVALIDSFPLLEN)                                04630
         DC    A(MJRINVALIDSFPLLEN)                                     04631
         ORG                                                            04632
MJRINVALIDSFPLLEN DC C'The SFPL_LENGTH parameter specified on the SEND' 04633
         DC    C'_FILE syscall is not correct.'                         04634
         DC    X'00'                                                    04635
         ORG   ETAB+(4*JRPTINVFPCWRITE)                                 04636
         DC    A(MJRPTINVFPCWRITE)                                      04637
         ORG                                                            04638
MJRPTINVFPCWRITE DC C'The value specified for writing into the Floatin' 04639
         DC    C'g Point Control Register is not valid.'                04640
         DC    X'00'                                                    04641
         ORG   ETAB+(4*JRMAXAIOCBECB)                                   04642
         DC    A(MJRMAXAIOCBECB)                                        04643
         ORG                                                            04644
MJRMAXAIOCBECB DC C'The maximum number of AIOCBs with user defined ECB' 04645
         DC    C's was exceeded on the requested function.'             04646
         DC    X'00'                                                    04647
         ORG   ETAB+(4*JRCERTALREADYDEFINED)                            04648
         DC    A(MJRCERTALREADYDEFINED)                                 04649
         ORG                                                            04650
MJRCERTALREADYDEFINED DC C'The certificate being registered/deregister' 04651
         DC    C'ed     is already defined for another user.'           04652
         DC    X'00'                                                    04653
         ORG   ETAB+(4*JRCERTDOESNOTMEETREQ)                            04654
         DC    A(MJRCERTDOESNOTMEETREQ)                                 04655
         ORG                                                            04656
MJRCERTDOESNOTMEETREQ DC C'The certificate being registered/deregister' 04657
         DC    C'ed does not meet RACF requirements.'                   04658
         DC    X'00'                                                    04659
         ORG   ETAB+(4*JRLOCKFCNCODE)                                   04660
         DC    A(MJRLOCKFCNCODE)                                        04661
         ORG                                                            04662
MJRLOCKFCNCODE DC C'The value specified for the LockFcnCode parameter ' 04663
         DC    C'for the BPX1SLK service is not valid.'                 04664
         DC    X'00'                                                    04665
         ORG   ETAB+(4*JRLOCKREQTYPE)                                   04666
         DC    A(MJRLOCKREQTYPE)                                        04667
         ORG                                                            04668
MJRLOCKREQTYPE DC C'The value specified for the LockReqType parameter ' 04669
         DC    C'for the BPX1SLK service is not valid.'                 04670
         DC    X'00'                                                    04671
         ORG   ETAB+(4*JRLOCKTYPE)                                      04672
         DC    A(MJRLOCKTYPE)                                           04673
         ORG                                                            04674
MJRLOCKTYPE DC C'The value specified for the LockType parameter for th' 04675
         DC    C'e BPX1SLK service is not valid.'                       04676
         DC    X'00'                                                    04677
         ORG   ETAB+(4*JRLOCKADDR)                                      04678
         DC    A(MJRLOCKADDR)                                           04679
         ORG                                                            04680
MJRLOCKADDR DC C'The address specified for the LockAddr parameter for ' 04681
         DC    C'the BPX1SLK service is not a valid shared memory addr' 04682
         DC    C'ess.'                                                  04683
         DC    X'00'                                                    04684
         ORG   ETAB+(4*JRLOCKTOKEN)                                     04685
         DC    A(MJRLOCKTOKEN)                                          04686
         ORG                                                            04687
MJRLOCKTOKEN DC C'The value specified for the LockToken parameter for ' 04688
         DC    C'the BPX1SLK service is not valid.'                     04689
         DC    X'00'                                                    04690
         ORG   ETAB+(4*JRLOCKEDALREADY)                                 04691
         DC    A(MJRLOCKEDALREADY)                                      04692
         ORG                                                            04693
MJRLOCKEDALREADY DC C'The lock represented by the specified lock token' 04694
         DC    C'  is already in a held state.'                         04695
         DC    X'00'                                                    04696
         ORG   ETAB+(4*JRLOCKINUSE)                                     04697
         DC    A(MJRLOCKINUSE)                                          04698
         ORG                                                            04699
MJRLOCKINUSE DC C'The lock represented by the specified lock token  is' 04700
         DC    C' in use for a condition wait.'                         04701
         DC    X'00'                                                    04702
         ORG   ETAB+(4*JRLOCKSHMACC)                                    04703
         DC    A(MJRLOCKSHMACC)                                         04704
         ORG                                                            04705
MJRLOCKSHMACC DC C'The caller does not have read/write access to the s' 04706
         DC    C'hared memory in which the specified lock resides.'     04707
         DC    X'00'                                                    04708
         ORG   ETAB+(4*JRLOCKNOTOWNER)                                  04709
         DC    A(MJRLOCKNOTOWNER)                                       04710
         ORG                                                            04711
MJRLOCKNOTOWNER DC C'The calling thread does not own the lock represen' 04712
         DC    C'ted by the specified lock token.'                      04713
         DC    X'00'                                                    04714
         ORG   ETAB+(4*JRLOCKMAXCNTSYS)                                 04715
         DC    A(MJRLOCKMAXCNTSYS)                                      04716
         ORG                                                            04717
MJRLOCKMAXCNTSYS DC C'The maximum number of shared memory locks for th' 04718
         DC    C'e system have been initialized.'                       04719
         DC    X'00'                                                    04720
         ORG   ETAB+(4*JRLOCKMAXCNTTHD)                                 04721
         DC    A(MJRLOCKMAXCNTTHD)                                      04722
         ORG                                                            04723
MJRLOCKMAXCNTTHD DC C'The maximum number of shared memory locks for th' 04724
         DC    C'e calling thread have been obtained.'                  04725
         DC    X'00'                                                    04726
         ORG   ETAB+(4*JRLOCKMAXCNTRECURSE)                             04727
         DC    A(MJRLOCKMAXCNTRECURSE)                                  04728
         ORG                                                            04729
MJRLOCKMAXCNTRECURSE DC C'The maximum number of recursive lock obtains' 04730
         DC    C' for a given lock has been reached.'                   04731
         DC    X'00'                                                    04732
         ORG   ETAB+(4*JRLOCKSHMREMOVED)                                04733
         DC    A(MJRLOCKSHMREMOVED)                                     04734
         ORG                                                            04735
MJRLOCKSHMREMOVED DC C'The specified lock cannot be obtained because i' 04736
         DC    C't is in shared memory that has been removed.'          04737
         DC    X'00'                                                    04738
         ORG   ETAB+(4*JRBADAIOECB)                                     04739
         DC    A(MJRBADAIOECB)                                          04740
         ORG                                                            04741
MJRBADAIOECB DC C'An Ecb represented by AioEcbPtr in one of the input ' 04742
         DC    C'Aiocbs was found to be bad.'                           04743
         DC    X'00'                                                    04744
         ORG   ETAB+(4*JRNOPTSECENV)                                    04745
         DC    A(MJRNOPTSECENV)                                         04746
         ORG                                                            04747
MJRNOPTSECENV DC C'Only a thread level identity created with pthread_s' 04748
         DC    C'ecurity_np (BPX1TLS) can be propagated over a socket.' 04749
         DC    X'00'                                                    04750
         ORG   ETAB+(4*JRMULTITHREADED)                                 04751
         DC    A(MJRMULTITHREADED)                                      04752
         ORG                                                            04753
MJRMULTITHREADED DC C'The requested service cannot be performed in an ' 04754
         DC    C'address space with multiple user threads.'             04755
         DC    X'00'                                                    04756
         ORG   ETAB+(4*JRACTACCEPTUSERID)                               04757
         DC    A(MJRACTACCEPTUSERID)                                    04758
         ORG                                                            04759
MJRACTACCEPTUSERID DC C'The active identity for the caller/process was' 04760
         DC    C' propagated over a socket via accept(). The propagate' 04761
         DC    C'd identity must be cleaned up before another identity' 04762
         DC    C' can be propagted.'                                    04763
         DC    X'00'                                                    04764
         ORG   ETAB+(4*JRLOCKTOKENADDR)                                 04765
         DC    A(MJRLOCKTOKENADDR)                                      04766
         ORG                                                            04767
MJRLOCKTOKENADDR DC C'The address specified in the LockTokenAddr param' 04768
         DC    C'eter for the BPX1SLK service is not accessible.'       04769
         DC    X'00'                                                    04770
         ORG   ETAB+(4*JRNOTINWLMENCLAVE)                               04771
         DC    A(MJRNOTINWLMENCLAVE)                                    04772
         ORG                                                            04773
MJRNOTINWLMENCLAVE DC C'The unit of work is not in a WLM enclave. BPX1' 04774
         DC    C'WLM did not return an enclave token  .'                04775
         DC    X'00'                                                    04776
         ORG   ETAB+(4*JRCSMFAILURE)                                    04777
         DC    A(MJRCSMFAILURE)                                         04778
         ORG                                                            04779
MJRCSMFAILURE DC C'The get_buffer request to get a CSM buffer failed.'  04780
         DC    X'00'                                                    04781
         ORG   ETAB+(4*JRMAXQUEUEDSIGS)                                 04782
         DC    A(MJRMAXQUEUEDSIGS)                                      04783
         ORG                                                            04784
MJRMAXQUEUEDSIGS DC C'Maximum number of queued signal exceeded by the ' 04785
         DC    C'  invoking process.'                                   04786
         DC    X'00'                                                    04787
         ORG   ETAB+(4*JRSIGINFOLEN)                                    04788
         DC    A(MJRSIGINFOLEN)                                         04789
         ORG                                                            04790
MJRSIGINFOLEN DC C'The value specified for the SigInfo_Len parameter o' 04791
         DC    C'n a BPX1STW (sigtimedwait) syscall was not valid.'     04792
         DC    X'00'                                                    04793
         ORG   ETAB+(4*JRLEVELTOOHIGH)                                  04794
         DC    A(MJRLEVELTOOHIGH)                                       04795
         ORG                                                            04796
MJRLEVELTOOHIGH DC C'The load module format of the target executable f' 04797
         DC    C'ile is at a level higher than the current system supp' 04798
         DC    C'orts.'                                                 04799
         DC    X'00'                                                    04800
         ORG   ETAB+(4*JRBPXOINITSTARTED)                               04801
         DC    A(MJRBPXOINITSTARTED)                                    04802
         ORG                                                            04803
MJRBPXOINITSTARTED DC C'The OMVS initial process must be started by th' 04804
         DC    C'e system. Do not use the START operator command to st' 04805
         DC    C'art the OMVS initial process.'                         04806
         DC    X'00'                                                    04807
         ORG   ETAB+(4*JRBPXOINITNOTUID0)                               04808
         DC    A(MJRBPXOINITNOTUID0)                                    04809
         ORG                                                            04810
MJRBPXOINITNOTUID0 DC C'The userid associated with system procedure, B' 04811
         DC    C'PXOINIT, must have uid=0 in the OMVS segment in the s' 04812
         DC    C'ecurity database.'                                     04813
         DC    X'00'                                                    04814
         ORG   ETAB+(4*JRSTICKYBIT)                                     04815
         DC    A(MJRSTICKYBIT)                                          04816
         ORG                                                            04817
MJRSTICKYBIT DC C'A program with the sticky bit was found but it is no' 04818
         DC    C't supported on this call.'                             04819
         DC    X'00'                                                    04820
         ORG   ETAB+(4*JRMAXASYNCIO)                                    04821
         DC    A(MJRMAXASYNCIO)                                         04822
         ORG                                                            04823
MJRMAXASYNCIO DC C'The maximum number of outstanding async I/O request' 04824
         DC    C's has been exceeded by the invoking process.'          04825
         DC    X'00'                                                    04826
         ORG   ETAB+(4*JRNOTPTCREATED)                                  04827
         DC    A(MJRNOTPTCREATED)                                       04828
         ORG                                                            04829
MJRNOTPTCREATED DC C'Invoking task is not pthread created'              04830
         DC    X'00'                                                    04831
         ORG   ETAB+(4*JRNOTPTSECURITY)                                 04832
         DC    A(MJRNOTPTSECURITY)                                      04833
         ORG                                                            04834
MJRNOTPTSECURITY DC C'Current task security environment is not set up ' 04835
         DC    C'via pthread_security_np'                               04836
         DC    X'00'                                                    04837
         ORG   ETAB+(4*JRALREADYACTIVE)                                 04838
         DC    A(MJRALREADYACTIVE)                                      04839
         ORG                                                            04840
MJRALREADYACTIVE DC C'Requested function is already active'             04841
         DC    X'00'                                                    04842
         ORG   ETAB+(4*JRSECACTIVE)                                     04843
         DC    A(MJRSECACTIVE)                                          04844
         ORG                                                            04845
MJRSECACTIVE DC C'Task level security environment already active'       04846
         DC    X'00'                                                    04847
         ORG   ETAB+(4*JRINVOSENVTOK)                                   04848
         DC    A(MJRINVOSENVTOK)                                        04849
         ORG                                                            04850
MJRINVOSENVTOK DC C'Input osenv token is incorrect'                     04851
         DC    X'00'                                                    04852
         ORG   ETAB+(4*JRNOPERSIST)                                     04853
         DC    A(MJRNOPERSIST)                                          04854
         ORG                                                            04855
MJRNOPERSIST DC C'Unpersist requested but persist count is 0'           04856
         DC    X'00'                                                    04857
         ORG   ETAB+(4*JROSENVWLMMISMATCH)                              04858
         DC    A(MJROSENVWLMMISMATCH)                                   04859
         ORG                                                            04860
MJROSENVWLMMISMATCH DC C'osenv WLM Enclave membership does not match t' 04861
         DC    C'he current pthread WLM Enclave membership'             04862
         DC    X'00'                                                    04863
         ORG   ETAB+(4*JROSENVWRONGENCLAVE)                             04864
         DC    A(MJROSENVWRONGENCLAVE)                                  04865
         ORG                                                            04866
MJROSENVWRONGENCLAVE DC C'Current task is not associated with the osen' 04867
         DC    C'v WLM enclave'                                         04868
         DC    X'00'                                                    04869
         ORG   ETAB+(4*JROSENVBEGINENVOUTSTANDING)                      04870
         DC    A(MJROSENVBEGINENVOUTSTANDING)                           04871
         ORG                                                            04872
MJROSENVBEGINENVOUTSTANDING DC C'Current task is operating under an ou' 04873
         DC    C'tstanding WLM Begin environment. Enclave leave is not' 04874
         DC    C' allowed'                                              04875
         DC    X'00'                                                    04876
         ORG   ETAB+(4*JROSENVNOTEJOINEDTCB)                            04877
         DC    A(MJROSENVNOTEJOINEDTCB)                                 04878
         ORG                                                            04879
MJROSENVNOTEJOINEDTCB DC C'Current task did not issue WLM Enclave Join' 04880
         DC    C', but only inherited Enclave attribute from mother ta' 04881
         DC    C'sk'                                                    04882
         DC    X'00'                                                    04883
         ORG   ETAB+(4*JROSENVENCLAVESUBTASKEXISTS)                     04884
         DC    A(MJROSENVENCLAVESUBTASKEXISTS)                          04885
         ORG                                                            04886
MJROSENVENCLAVESUBTASKEXISTS DC C'Current task has residual subtasks p' 04887
         DC    C'ropagated to the enclave which are still associated w' 04888
         DC    C'ith the Enclave'                                       04889
         DC    X'00'                                                    04890
         ORG   ETAB+(4*JROSENVSECURITYMISMATCH)                         04891
         DC    A(MJROSENVSECURITYMISMATCH)                              04892
         ORG                                                            04893
MJROSENVSECURITYMISMATCH DC C'Current security environment does not ma' 04894
         DC    C'tch the value specified in the osenv token'            04895
         DC    X'00'                                                    04896
         ORG   ETAB+(4*JROSENVNOTACTIVE)                                04897
         DC    A(MJROSENVNOTACTIVE)                                     04898
         ORG                                                            04899
MJROSENVNOTACTIVE DC C'Osenv environment is not active'                 04900
         DC    X'00'                                                    04901
         ORG   ETAB+(4*JROSENVPERSISTCNTBAD)                            04902
         DC    A(MJROSENVPERSISTCNTBAD)                                 04903
         ORG                                                            04904
MJROSENVPERSISTCNTBAD DC C'There are no outstanding persist requests'   04905
         DC    X'00'                                                    04906
         ORG   ETAB+(4*JRWLMJOINERROR)                                  04907
         DC    A(MJRWLMJOINERROR)                                       04908
         ORG                                                            04909
MJRWLMJOINERROR DC C'Bad return code from IWMEJOIN macro'               04910
         DC    X'00'                                                    04911
         ORG   ETAB+(4*JRIWMELEAVERROR)                                 04912
         DC    A(MJRIWMELEAVERROR)                                      04913
         ORG                                                            04914
MJRIWMELEAVERROR DC C'Bad return code from IWMELEAV macro'              04915
         DC    X'00'                                                    04916
         ORG   ETAB+(4*JRNOTSUPINSYSPLEX)                               04917
         DC    A(MJRNOTSUPINSYSPLEX)                                    04918
         ORG                                                            04919
MJRNOTSUPINSYSPLEX DC C'Remount is not supported in sysplex. Unmount d' 04920
         DC    C'rain istried as unmount normal, but if it cannot comp' 04921
         DC    C'lete,an error is returned.'                            04922
         DC    X'00'                                                    04923
         ORG   ETAB+(4*JRSYSPLEXRECOVERYINPROG)                         04924
         DC    A(MJRSYSPLEXRECOVERYINPROG)                              04925
         ORG                                                            04926
MJRSYSPLEXRECOVERYINPROG DC C'An unmount was attempted while sysplex s' 04927
         DC    C'ystem recoverywas in progress.'                        04928
         DC    X'00'                                                    04929
         ORG   ETAB+(4*JRMUSTBEIMMED)                                   04930
         DC    A(MJRMUSTBEIMMED)                                        04931
         ORG                                                            04932
MJRMUSTBEIMMED DC C'An unmount was attempted in a sysplex for a filesy' 04933
         DC    C'stemthat is unowned, and Immed was not specified.'     04934
         DC    X'00'                                                    04935
         ORG   ETAB+(4*JRRESETALREADYINPROG)                            04936
         DC    A(MJRRESETALREADYINPROG)                                 04937
         ORG                                                            04938
MJRRESETALREADYINPROG DC C'Unmount reset is already in progress.'       04939
         DC    X'00'                                                    04940
         ORG   ETAB+(4*JRINVALIDSIZE)                                   04941
         DC    A(MJRINVALIDSIZE)                                        04942
         ORG                                                            04943
MJRINVALIDSIZE DC C'Buffer received by mount was too small.'            04944
         DC    X'00'                                                    04945
         ORG   ETAB+(4*JRUNKNOWNBLOCK)                                  04946
         DC    A(MJRUNKNOWNBLOCK)                                       04947
         ORG                                                            04948
MJRUNKNOWNBLOCK DC C'Control block received is unrecognized.'           04949
         DC    X'00'                                                    04950
         ORG   ETAB+(4*JRBADCOMBO)                                      04951
         DC    A(MJRBADCOMBO)                                           04952
         ORG                                                            04953
MJRBADCOMBO DC C'Conflicting values have been received.'                04954
         DC    X'00'                                                    04955
         ORG   ETAB+(4*JRNOWILDFROMSYS)                                 04956
         DC    A(MJRNOWILDFROMSYS)                                      04957
         ORG                                                            04958
MJRNOWILDFROMSYS DC C'Conflicting values have been received.'           04959
         DC    X'00'                                                    04960
         ORG   ETAB+(4*JRNOVALUES)                                      04961
         DC    A(MJRNOVALUES)                                           04962
         ORG                                                            04963
MJRNOVALUES DC C'No values for the chmount request have been given.'    04964
         DC    X'00'                                                    04965
         ORG   ETAB+(4*JRMUSTBESYSPLEX)                                 04966
         DC    A(MJRMUSTBESYSPLEX)                                      04967
         ORG                                                            04968
MJRMUSTBESYSPLEX DC C'This request only possible in a sysplex enivornm' 04969
         DC    C'ent.'                                                  04970
         DC    X'00'                                                    04971
         ORG   ETAB+(4*JRATTEMPTSEXHAUSTED)                             04972
         DC    A(MJRATTEMPTSEXHAUSTED)                                  04973
         ORG                                                            04974
MJRATTEMPTSEXHAUSTED DC C'Every attempt to move the filesystem has fai' 04975
         DC    C'led.'                                                  04976
         DC    X'00'                                                    04977
         ORG   ETAB+(4*JRLOSTSTATE)                                     04978
         DC    A(MJRLOSTSTATE)                                          04979
         ORG                                                            04980
MJRLOSTSTATE DC C'The filesystem can no longer be moved by this proces' 04981
         DC    C's.'                                                    04982
         DC    X'00'                                                    04983
         ORG   ETAB+(4*JRNOFROMSYS)                                     04984
         DC    A(MJRNOFROMSYS)                                          04985
         ORG                                                            04986
MJRNOFROMSYS DC C'The system specified as the FROMSYS can not be found' 04987
         DC    C'.'                                                     04988
         DC    X'00'                                                    04989
         ORG   ETAB+(4*JRNOFSFOUND)                                     04990
         DC    A(MJRNOFSFOUND)                                          04991
         ORG                                                            04992
MJRNOFSFOUND DC C'The filesystem requested to be moved can not be foun' 04993
         DC    C'd.'                                                    04994
         DC    X'00'                                                    04995
         ORG   ETAB+(4*JRINRECOVERY)                                    04996
         DC    A(MJRINRECOVERY)                                         04997
         ORG                                                            04998
MJRINRECOVERY DC C'The filesystem requested to be moved is in recovery' 04999
         DC    C'.'                                                     05000
         DC    X'00'                                                    05001
         ORG   ETAB+(4*JRNOMOUNTPOINTFOUND)                             05002
         DC    A(MJRNOMOUNTPOINTFOUND)                                  05003
         ORG                                                            05004
MJRNOMOUNTPOINTFOUND DC C'The mountpoint requested to be moved can not' 05005
         DC    C' be found.'                                            05006
         DC    X'00'                                                    05007
         ORG   ETAB+(4*JRBLACKHOLE)                                     05008
         DC    A(MJRBLACKHOLE)                                          05009
         ORG                                                            05010
MJRBLACKHOLE DC C'Filesystem is unowned.'                               05011
         DC    X'00'                                                    05012
         ORG   ETAB+(4*JRNOPLACE)                                       05013
         DC    A(MJRNOPLACE)                                            05014
         ORG                                                            05015
MJRNOPLACE DC C'This filesystem can not be placed.'                     05016
         DC    X'00'                                                    05017
         ORG   ETAB+(4*JRNOSYSTEMFOUND)                                 05018
         DC    A(MJRNOSYSTEMFOUND)                                      05019
         ORG                                                            05020
MJRNOSYSTEMFOUND DC C'There is no system with that name.'               05021
         DC    X'00'                                                    05022
         ORG   ETAB+(4*JRSYSPLEXDATASYNCLOST)                           05023
         DC    A(MJRSYSPLEXDATASYNCLOST)                                05024
         ORG                                                            05025
MJRSYSPLEXDATASYNCLOST DC C'The I/O request is rejected because the fi' 05026
         DC    C'le integritywas lost due to the failure of the file s' 05027
         DC    C'ystem server.'                                         05028
         DC    X'00'                                                    05029
         ORG   ETAB+(4*JRTDGONE)                                        05030
         DC    A(MJRTDGONE)                                             05031
         ORG                                                            05032
MJRTDGONE DC C'The socket Transport Driver has terminated and restarte' 05033
         DC    C'd.'                                                    05034
         DC    X'00'                                                    05035
         ORG   ETAB+(4*JRNODEVICEFOUND)                                 05036
         DC    A(MJRNODEVICEFOUND)                                      05037
         ORG                                                            05038
MJRNODEVICEFOUND DC C'The is no longer any device with that device num' 05039
         DC    C'ber.'                                                  05040
         DC    X'00'                                                    05041
         ORG   ETAB+(4*JRNOTMOVEABLE)                                   05042
         DC    A(MJRNOTMOVEABLE)                                        05043
         ORG                                                            05044
MJRNOTMOVEABLE DC C'This filesystem can not be moved.'                  05045
         DC    X'00'                                                    05046
         ORG   ETAB+(4*JRNOLONGERSERVER)                                05047
         DC    A(MJRNOLONGERSERVER)                                     05048
         ORG                                                            05049
MJRNOLONGERSERVER DC C'The server detected it is no longer the server.' 05050
         DC    X'00'                                                    05051
         ORG   ETAB+(4*JRLOCKCTL)                                       05052
         DC    A(MJRLOCKCTL)                                            05053
         ORG                                                            05054
MJRLOCKCTL DC C'The lockctl service vnode operation is not supported'   05055
         DC    X'00'                                                    05056
         ORG   ETAB+(4*JRCPLNOTAUTH)                                    05057
         DC    A(MJRCPLNOTAUTH)                                         05058
         ORG                                                            05059
MJRCPLNOTAUTH DC C'__cpl service call failed permission check for BPX.' 05060
         DC    C'CF facility class profile.'                            05061
         DC    X'00'                                                    05062
         ORG   ETAB+(4*JRCPLINVFCNCODE)                                 05063
         DC    A(MJRCPLINVFCNCODE)                                      05064
         ORG                                                            05065
MJRCPLINVFCNCODE DC C'__cpl service call failed because the supplied f' 05066
         DC    C'unction code is not valid.'                            05067
         DC    X'00'                                                    05068
         ORG   ETAB+(4*JRCPLINVBUFFLEN)                                 05069
         DC    A(MJRCPLINVBUFFLEN)                                      05070
         ORG                                                            05071
MJRCPLINVBUFFLEN DC C'__cpl service call failed because the supplied b' 05072
         DC    C'uffer length is not valid.'                            05073
         DC    X'00'                                                    05074
         ORG   ETAB+(4*JRCPLBUFFTOOSMALL)                               05075
         DC    A(MJRCPLBUFFTOOSMALL)                                    05076
         ORG                                                            05077
MJRCPLBUFFTOOSMALL DC C'__cpl service call failed because the supplied' 05078
         DC    C' buffer was too small for the data to be returned.'    05079
         DC    X'00'                                                    05080
         ORG   ETAB+(4*JRSYSPLEXBLACKHOLEIO)                            05081
         DC    A(MJRSYSPLEXBLACKHOLEIO)                                 05082
         ORG                                                            05083
MJRSYSPLEXBLACKHOLEIO DC C'The I/O request is rejected because access ' 05084
         DC    C'to the owning file system was lost.  This is a tempor' 05085
         DC    C'ary condition.'                                        05086
         DC    X'00'                                                    05087
         ORG   ETAB+(4*JRCPLINVSTRUCTYPE)                               05088
         DC    A(MJRCPLINVSTRUCTYPE)                                    05089
         ORG                                                            05090
MJRCPLINVSTRUCTYPE DC C'__cpl service call failed because one of the s' 05091
         DC    C'upplied structure entries is defined with an incorrec' 05092
         DC    C't type.'                                               05093
         DC    X'00'                                                    05094
         ORG   ETAB+(4*JRCPLCFNOTFOUND)                                 05095
         DC    A(MJRCPLCFNOTFOUND)                                      05096
         ORG                                                            05097
MJRCPLCFNOTFOUND DC C'__cpl service call failed because a Coupling Fac' 05098
         DC    C'ility at the appropriate level (level 8 or greater) c' 05099
         DC    C'ould not be found in the sysplex where this __cpl cal' 05100
         DC    C'lable service routine is running.'                     05101
         DC    X'00'                                                    05102
         ORG   ETAB+(4*JRSHRLIBNOTAUTHORIZED)                           05103
         DC    A(MJRSHRLIBNOTAUTHORIZED)                                05104
         ORG                                                            05105
MJRSHRLIBNOTAUTHORIZED DC C'The chattr function can not be performed t' 05106
         DC    C'o change the shared library attribute because the cal' 05107
         DC    C'ler is not permitted to the BPX.FILEATTR.SHRLIB facil' 05108
         DC    C'ity class.'                                            05109
         DC    X'00'                                                    05110
         ORG   ETAB+(4*JROUTOFAUTOMOUNTENTRIES)                         05111
         DC    A(MJROUTOFAUTOMOUNTENTRIES)                              05112
         ORG                                                            05113
MJROUTOFAUTOMOUNTENTRIES DC C'The system is unable to obtain an entry ' 05114
         DC    C'in the file system automount table in the OMVS couple' 05115
         DC    C' data set'                                             05116
         DC    X'00'                                                    05117
         ORG   ETAB+(4*JRNEEDABSPATH)                                   05118
         DC    A(MJRNEEDABSPATH)                                        05119
         ORG                                                            05120
MJRNEEDABSPATH DC C'An absolute path name must be used when performing' 05121
         DC    C'  a mount command from a userid that has changed root' 05122
         DC    C's.'                                                    05123
         DC    X'00'                                                    05124
         ORG   ETAB+(4*JRMAPBADFUNCTION)                                05125
         DC    A(MJRMAPBADFUNCTION)                                     05126
         ORG                                                            05127
MJRMAPBADFUNCTION DC C'The __Map function or sub-function code was not' 05128
         DC    C' valid.'                                               05129
         DC    X'00'                                                    05130
         ORG   ETAB+(4*JRNOTAUTHMAP)                                    05131
         DC    A(MJRNOTAUTHMAP)                                         05132
         ORG                                                            05133
MJRNOTAUTHMAP DC C'__map_init call failed permission check for BPX.MAP' 05134
         DC    C' facility class profile.'                              05135
         DC    X'00'                                                    05136
         ORG   ETAB+(4*JRBADBLKADDR)                                    05137
         DC    A(MJRBADBLKADDR)                                         05138
         ORG                                                            05139
MJRBADBLKADDR DC C'__map service was passed a bad block address.The bl' 05140
         DC    C'ock address specified was not within the map area, or' 05141
         DC    C' was not on a block boundary.'                         05142
         DC    X'00'                                                    05143
         ORG   ETAB+(4*JRMAPALREADYACTIVE)                              05144
         DC    A(MJRMAPALREADYACTIVE)                                   05145
         ORG                                                            05146
MJRMAPALREADYACTIVE DC C'__map_init requested for a process that alrea' 05147
         DC    C'dy had an __map environment active.'                   05148
         DC    X'00'                                                    05149
         ORG   ETAB+(4*JRMAPOUTOFBLOCKS)                                05150
         DC    A(MJRMAPOUTOFBLOCKS)                                     05151
         ORG                                                            05152
MJRMAPOUTOFBLOCKS DC C'__map service,  processing for a new block or c' 05153
         DC    C'onnect request, was asked to select a map block that ' 05154
         DC    C'was not currently in use, but none was available as a' 05155
         DC    C'll blocks were currently in use.'                      05156
         DC    X'00'                                                    05157
         ORG   ETAB+(4*JRMAPNOTACTIVE)                                  05158
         DC    A(MJRMAPNOTACTIVE)                                       05159
         ORG                                                            05160
MJRMAPNOTACTIVE DC C'__map service was requested but either no map env' 05161
         DC    C'ironment is active or the current map environment is ' 05162
         DC    C'being shut down.'                                      05163
         DC    X'00'                                                    05164
         ORG   ETAB+(4*JRMAPTOKENNOTFOUND)                              05165
         DC    A(MJRMAPTOKENNOTFOUND)                                   05166
         ORG                                                            05167
MJRMAPTOKENNOTFOUND DC C'__map service data block token not defined.'   05168
         DC    X'00'                                                    05169
         ORG   ETAB+(4*JRMAPBLOCKNOTINUSE)                              05170
         DC    A(MJRMAPBLOCKNOTINUSE)                                   05171
         ORG                                                            05172
MJRMAPBLOCKNOTINUSE DC C'__map service disconnect is issued for a map ' 05173
         DC    C'block that is not currently in use'                    05174
         DC    X'00'                                                    05175
         ORG   ETAB+(4*JRMAPBLOCKINUSE)                                 05176
         DC    A(MJRMAPBLOCKINUSE)                                      05177
         ORG                                                            05178
MJRMAPBLOCKINUSE DC C'__map service new block or connect specified a m' 05179
         DC    C'ap block that is currently in use.'                    05180
         DC    X'00'                                                    05181
         ORG   ETAB+(4*JRMAPBLOCKFREEPENDING)                           05182
         DC    A(MJRMAPBLOCKFREEPENDING)                                05183
         ORG                                                            05184
MJRMAPBLOCKFREEPENDING DC C'__map service connect request specified a ' 05185
         DC    C'data block that is currently being freed.'             05186
         DC    X'00'                                                    05187
         ORG   ETAB+(4*JRMAPBADSTORAGE)                                 05188
         DC    A(MJRMAPBADSTORAGE)                                      05189
         ORG                                                            05190
MJRMAPBADSTORAGE DC C'The parameter list either could not be accessed ' 05191
         DC    C'or was in read only storage and could not be updated.' 05192
         DC    X'00'                                                    05193
         ORG   ETAB+(4*JRRESERVEDVALUEINVALID)                          05194
         DC    A(MJRRESERVEDVALUEINVALID)                               05195
         ORG                                                            05196
MJRRESERVEDVALUEINVALID DC C'A reserved field contained a value other ' 05197
         DC    C'than zero'                                             05198
         DC    X'00'                                                    05199
         ORG   ETAB+(4*JRMAPARRAYCOUNTERR)                              05200
         DC    A(MJRMAPARRAYCOUNTERR)                                   05201
         ORG                                                            05202
MJRMAPARRAYCOUNTERR DC C'The array count was outside the valid values'  05203
         DC    X'00'                                                    05204
         ORG   ETAB+(4*JRNOTCLIENT)                                     05205
         DC    A(MJRNOTCLIENT)                                          05206
         ORG                                                            05207
MJRNOTCLIENT DC C'This system is not a client of the requested filesys' 05208
         DC    C'tem'                                                   05209
         DC    X'00'                                                    05210
         ORG   ETAB+(4*JRJOINTMSGSENT)                                  05211
         DC    A(MJRJOINTMSGSENT)                                       05212
         ORG                                                            05213
MJRJOINTMSGSENT DC C'The joint LFS/PFS message requested for osi_xmsg ' 05214
         DC    C'to send has already been sent'                         05215
         DC    X'00'                                                    05216
         ORG   ETAB+(4*JRNOWILDAUTOMOVE)                                05217
         DC    A(MJRNOWILDAUTOMOVE)                                     05218
         ORG                                                            05219
MJRNOWILDAUTOMOVE DC C'The automove setting can not be changed while m' 05220
         DC    C'ovinga collection of filesystems.'                     05221
         DC    X'00'                                                    05222
         ORG   ETAB+(4*JRINVALIDFSP)                                    05223
         DC    A(MJRINVALIDFSP)                                         05224
         ORG                                                            05225
MJRINVALIDFSP DC C'The file does not have a valid FSP.'                 05226
         DC    X'00'                                                    05227
         ORG   ETAB+(4*JRNOROOT)                                        05228
         DC    A(MJRNOROOT)                                             05229
         ORG                                                            05230
MJRNOROOT DC C'There is no system root mounted.'                        05231
         DC    X'00'                                                    05232
         ORG   ETAB+(4*JRMOVEINPROGRESS)                                05233
         DC    A(MJRMOVEINPROGRESS)                                     05234
         ORG                                                            05235
MJRMOVEINPROGRESS DC C'The filesystem is in the process of being moved' 05236
         DC    C' toa different server.'                                05237
         DC    X'00'                                                    05238
         ORG   ETAB+(4*JRBADBODYLENGTH)                                 05239
         DC    A(MJRBADBODYLENGTH)                                      05240
         ORG                                                            05241
MJRBADBODYLENGTH DC C'The MNTE2 does not have a correct body length co' 05242
         DC    C'dedinto the body length field in the MNTE header.'     05243
         DC    X'00'                                                    05244
         ORG   ETAB+(4*JRXCFNOSTORAGE)                                  05245
         DC    A(MJRXCFNOSTORAGE)                                       05246
         ORG                                                            05247
MJRXCFNOSTORAGE DC C'I/O buffer shortage for writing data through XCF'  05248
         DC    X'00'                                                    05249
         ORG   ETAB+(4*JRPFSFAILED)                                     05250
         DC    A(MJRPFSFAILED)                                          05251
         ORG                                                            05252
MJRPFSFAILED DC C'A PFS returned a RetVal of -1 with an errno and errn' 05253
         DC    C'ojrof zero.'                                           05254
         DC    X'00'                                                    05255
         ORG   ETAB+(4*JRPTINVGPRHNUMBER)                               05256
         DC    A(MJRPTINVGPRHNUMBER)                                    05257
         ORG                                                            05258
MJRPTINVGPRHNUMBER DC C'The ptrace call has an incorrect general regis' 05259
         DC    C'ter number'                                            05260
         DC    X'00'                                                    05261
         ORG   ETAB+(4*JRFILETOOLARGE)                                  05262
         DC    A(MJRFILETOOLARGE)                                       05263
         ORG                                                            05264
MJRFILETOOLARGE DC C'File size exceeded the value that can be held ino' 05265
         DC    C'bject of type off_t.'                                  05266
         DC    X'00'                                                    05267
         ORG   ETAB+(4*JRCANTEXPCLIENT)                                 05268
         DC    A(MJRCANTEXPCLIENT)                                      05269
         ORG                                                            05270
MJRCANTEXPCLIENT DC C'V_export of a sysplex client file system is not ' 05271
         DC    C'allowed.'                                              05272
         DC    X'00'                                                    05273
         ORG   ETAB+(4*JRISEXPORTED)                                    05274
         DC    A(MJRISEXPORTED)                                         05275
         ORG                                                            05276
MJRISEXPORTED DC C'Moving a file system that is exported is not allowe' 05277
         DC    C'd.'                                                    05278
         DC    X'00'                                                    05279
         ORG   ETAB+(4*JRFSQUIESCEDMT)                                  05280
         DC    A(MJRFSQUIESCEDMT)                                       05281
         ORG                                                            05282
MJRFSQUIESCEDMT DC C'A file system operation was rejected  because the' 05283
         DC    C' owning file system is quiescedand the operation cann' 05284
         DC    C'ot be delayed.order to prevent a latch deadlock.'      05285
         DC    X'00'                                                    05286
         ORG   ETAB+(4*JRMPTFSQUIESCED)                                 05287
         DC    A(MJRMPTFSQUIESCED)                                      05288
         ORG                                                            05289
MJRMPTFSQUIESCED DC C'A mount request was rejected because a file syst' 05290
         DC    C'em in the mount path is quiesced.'                     05291
         DC    X'00'                                                    05292
         ORG   ETAB+(4*JRMMAPSUSPENDED)                                 05293
         DC    A(MJRMMAPSUSPENDED)                                      05294
         ORG                                                            05295
MJRMMAPSUSPENDED DC C'A memory map request was rejected because the me' 05296
         DC    C'mory map function is suspended'                        05297
         DC    X'00'                                                    05298
         AIF   ('&SYSTEM_ID'(1,4) NE 'z/OS').NOTZOS3                    05299
         ORG   ETAB+(4*JRSFSDIAGACT)                                    05300
         DC    A(MJRSFSDIAGACT)                                         05301
         ORG                                                            05302
MJRSFSDIAGACT DC C'A Shared-FS diagnostic operation is  already in pro' 05303
         DC    C'gress.'                                                05304
         DC    X'00'                                                    05305
         ORG   ETAB+(4*JRINVALIDFILETAG)                                05306
         DC    A(MJRINVALIDFILETAG)                                     05307
         ORG                                                            05308
MJRINVALIDFILETAG DC C'The file tag supplied is invalid        '        05309
         DC    X'00'                                                    05310
         ORG   ETAB+(4*JRDOMPARMS)                                      05311
         DC    A(MJRDOMPARMS)                                           05312
         ORG                                                            05313
MJRDOMPARMS DC C'The CCADOMToken and CCAMsgIdList are mutually exclusi' 05314
         DC    C've, both were specified.'                              05315
         DC    X'00'                                                    05316
         ORG   ETAB+(4*JRTOOMANYMSGIDS)                                 05317
         DC    A(MJRTOOMANYMSGIDS)                                      05318
         ORG                                                            05319
MJRTOOMANYMSGIDS DC C'The maximum number of messages that can be delet' 05320
         DC    C'ed in one operation is 60, more then 60 were specifie' 05321
         DC    C'd.'                                                    05322
         DC    X'00'                                                    05323
         ORG   ETAB+(4*JRAUTHROUTINGCODE)                               05324
         DC    A(MJRAUTHROUTINGCODE)                                    05325
         ORG                                                            05326
MJRAUTHROUTINGCODE DC C'An unauthorized caller (not UID=0) specified a' 05327
         DC    C' message routing code reserved for authorized caller.' 05328
         DC    X'00'                                                    05329
         ORG   ETAB+(4*JRROUTCODE)                                      05330
         DC    A(MJRROUTCODE)                                           05331
         ORG                                                            05332
MJRROUTCODE DC C'An invalid message routing code was specified.       ' 05333
         DC    X'00'                                                    05334
         ORG   ETAB+(4*JRDESCCODE)                                      05335
         DC    A(MJRDESCCODE)                                           05336
         ORG                                                            05337
MJRDESCCODE DC C'An invalid message descriptor code was specified.'     05338
         DC    X'00'                                                    05339
         ORG   ETAB+(4*JRROUTINGLIST)                                   05340
         DC    A(MJRROUTINGLIST)                                        05341
         ORG                                                            05342
MJRROUTINGLIST DC C'All or part of the list of routing codes pointed t' 05343
         DC    C'o by CCARoutCdeList is not addressable by the caller.' 05344
         DC    X'00'                                                    05345
         ORG   ETAB+(4*JRDESCLIST)                                      05346
         DC    A(MJRDESCLIST)                                           05347
         ORG                                                            05348
MJRDESCLIST DC C'All or part of the list of descriptor codes pointed t' 05349
         DC    C'o by CCADescList is not addressable by the caller.'    05350
         DC    X'00'                                                    05351
         ORG   ETAB+(4*JRMSGIDLIST)                                     05352
         DC    A(MJRMSGIDLIST)                                          05353
         ORG                                                            05354
MJRMSGIDLIST DC C'All or part of the list of message ids to be deleted' 05355
         DC    C' pointed to by CCAMsgIdList is not addressable by the' 05356
         DC    C' caller.'                                              05357
         DC    X'00'                                                    05358
         ORG   ETAB+(4*JRTOOMANYROUTCODES)                              05359
         DC    A(MJRTOOMANYROUTCODES)                                   05360
         ORG                                                            05361
MJRTOOMANYROUTCODES DC C'The maximum number of routing codes that can ' 05362
         DC    C'be specified is 128 but was exceeded.'                 05363
         DC    X'00'                                                    05364
         ORG   ETAB+(4*JRTOOMANYDESCCODES)                              05365
         DC    A(MJRTOOMANYDESCCODES)                                   05366
         ORG                                                            05367
MJRTOOMANYDESCCODES DC C'The maximum number of descriptor codes that c' 05368
         DC    C'an be specified is 6 but was exceeded.'                05369
         DC    X'00'                                                    05370
         ORG   ETAB+(4*JRMSGID)                                         05371
         DC    A(MJRMSGID)                                              05372
         ORG                                                            05373
MJRMSGID DC C'All or part of the location specified by the caller for ' 05374
         DC    C'the returned message id (CCAMsgIDPtr) is not addressa' 05375
         DC    C'ble by the caller.'                                    05376
         DC    X'00'                                                    05377
         ORG   ETAB+(4*JRMEMBERLISTBAD)                                 05378
         DC    A(MJRMEMBERLISTBAD)                                      05379
         ORG                                                            05380
MJRMEMBERLISTBAD DC C'An inconsistency between the XCF representationo' 05381
         DC    C'f the BPXGRP member group and the local representatio' 05382
         DC    C'n exists.'                                             05383
         DC    X'00'                                                    05384
         ORG   ETAB+(4*JRRCVBUFTOOSMALL)                                05385
         DC    A(MJRRCVBUFTOOSMALL)                                     05386
         ORG                                                            05387
MJRRCVBUFTOOSMALL DC C'A message will not fit in the receive buffer.Th' 05388
         DC    C'e size of the receive buffer for the receiving socket' 05389
         DC    C',which was set by the setsockopt syscallwith the so_r' 05390
         DC    C'cvbuf option, is too smallto contain the data being s' 05391
         DC    C'ent to it.Truncation would occur.'                     05392
         DC    X'00'                                                    05393
         ORG   ETAB+(4*JRMUTUALEXCLINPROGRESS)                          05394
         DC    A(MJRMUTUALEXCLINPROGRESS)                               05395
         ORG                                                            05396
MJRMUTUALEXCLINPROGRESS DC C'Mutually-exclusive operations are current' 05397
         DC    C'ly in progress in the sysplex. The request cannot pro' 05398
         DC    C'ceed.'                                                 05399
         DC    X'00'                                                    05400
         ORG   ETAB+(4*JRUNMOUNTALLINPROG)                              05401
         DC    A(MJRUNMOUNTALLINPROG)                                   05402
         ORG                                                            05403
MJRUNMOUNTALLINPROG DC C'MODIFY FILESYS=UNMOUNTALL is in progress. MOU' 05404
         DC    C'NT cannot proceed.'                                    05405
         DC    X'00'                                                    05406
         ORG   ETAB+(4*JRQUIESCEINPROG)                                 05407
         DC    A(MJRQUIESCEINPROG)                                      05408
         ORG                                                            05409
MJRQUIESCEINPROG DC C'A pthread quiesce operation is already in progre' 05410
         DC    C'ss'                                                    05411
         DC    X'00'                                                    05412
         ORG   ETAB+(4*JRREQUESTTYPEERR)                                05413
         DC    A(MJRREQUESTTYPEERR)                                     05414
         ORG                                                            05415
MJRREQUESTTYPEERR DC C'The request type contains an incorrect value   ' 05416
         DC    C'   '                                                   05417
         DC    X'00'                                                    05418
         ORG   ETAB+(4*JRNOFREEZEEXIT)                                  05419
         DC    A(MJRNOFREEZEEXIT)                                       05420
         ORG                                                            05421
MJRNOFREEZEEXIT DC C'The pthread_quiesce_and_get_np service (BPX1PQG) ' 05422
         DC    C'cannot be performed because the Quick_freeze_exit has' 05423
         DC    C' not been registered'                                  05424
         DC    X'00'                                                    05425
         ORG   ETAB+(4*JRNOTEXITKEY)                                    05426
         DC    A(MJRNOTEXITKEY)                                         05427
         ORG                                                            05428
MJRNOTEXITKEY DC C'The PSW key of the caller is not same as key regist' 05429
         DC    C'ered under Quick_freeze_exit'                          05430
         DC    X'00'                                                    05431
         ORG   ETAB+(4*JRINVTHDQ)                                       05432
         DC    A(MJRINVTHDQ)                                            05433
         ORG                                                            05434
MJRINVTHDQ DC C'Incorrect quick pthread quiesce data structure      '   05435
         DC    X'00'                                                    05436
         ORG   ETAB+(4*JRNOTFROZEN)                                     05437
         DC    A(MJRNOTFROZEN)                                          05438
         ORG                                                            05439
MJRNOTFROZEN DC C'A pthread_quiesce_and_get_np (BPX1PQG) unfreeze_all ' 05440
         DC    C'request cannot complete because the process is  not f' 05441
         DC    C'rozen'                                                 05442
         DC    X'00'                                                    05443
         ORG   ETAB+(4*JRQFRZEXITERROR)                                 05444
         DC    A(MJRQFRZEXITERROR)                                      05445
         ORG                                                            05446
MJRQFRZEXITERROR DC C'A pthread_quiesce_and_get_np (BPX1PQG) service c' 05447
         DC    C'all failed because the language environment quick   f' 05448
         DC    C'reeze exit abnormally ended.'                          05449
         DC    X'00'                                                    05450
         ORG   ETAB+(4*JREXITALREADYREG)                                05451
         DC    A(MJREXITALREADYREG)                                     05452
         ORG                                                            05453
MJREXITALREADYREG DC C'The quick freeze exit has already been register' 05454
         DC    C'ed'                                                    05455
         DC    X'00'                                                    05456
         ORG   ETAB+(4*JRCANNOTDEREGISTER)                              05457
         DC    A(MJRCANNOTDEREGISTER)                                   05458
         ORG                                                            05459
MJRCANNOTDEREGISTER DC C'The quick freeze exit cannot be deregistered'  05460
         DC    X'00'                                                    05461
         ORG   ETAB+(4*JRREQUESTORTHREAD)                               05462
         DC    A(MJRREQUESTORTHREAD)                                    05463
         ORG                                                            05464
MJRREQUESTORTHREAD DC C'The requestor thread cannot be frozen'          05465
         DC    X'00'                                                    05466
         ORG   ETAB+(4*JRTHDSNOTSAFE)                                   05467
         DC    A(MJRTHDSNOTSAFE)                                        05468
         ORG                                                            05469
MJRTHDSNOTSAFE DC C'Specified threads cannot be frozen in a safe state' 05470
         DC    X'00'                                                    05471
         ORG   ETAB+(4*JRDUPTHREADS)                                    05472
         DC    A(MJRDUPTHREADS)                                         05473
         ORG                                                            05474
MJRDUPTHREADS DC C'Duplicate threads specified in data structure'       05475
         DC    X'00'                                                    05476
         ORG   ETAB+(4*JRSYSENTRYBAD)                                   05477
         DC    A(MJRSYSENTRYBAD)                                        05478
         ORG                                                            05479
MJRSYSENTRYBAD DC C'An inconsistency between the XCF representationand' 05480
         DC    C' the file system representation of a member in the BP' 05481
         DC    C'XGRP group exists.'                                    05482
         DC    X'00'                                                    05483
         ORG   ETAB+(4*JRFILENOTEMPTY)                                  05484
         DC    A(MJRFILENOTEMPTY)                                       05485
         ORG                                                            05486
MJRFILENOTEMPTY DC C'The file is not empty'                             05487
         DC    X'00'                                                    05488
         ORG   ETAB+(4*JRNODELREQUESTED)                                05489
         DC    A(MJRNODELREQUESTED)                                     05490
         ORG                                                            05491
MJRNODELREQUESTED DC C'The directory does not allow unlinks       '     05492
         DC    X'00'                                                    05493
         ORG   ETAB+(4*JRCONVERSIONERR)                                 05494
         DC    A(MJRCONVERSIONERR)                                      05495
         ORG                                                            05496
MJRCONVERSIONERR DC C'Unicode/390 conversion error'                     05497
         DC    X'00'                                                    05498
         ORG   ETAB+(4*JRUNCONVERTIBLECHAR)                             05499
         DC    A(MJRUNCONVERTIBLECHAR)                                  05500
         ORG                                                            05501
MJRUNCONVERTIBLECHAR DC C'Character is not convertible'                 05502
         DC    X'00'                                                    05503
         ORG   ETAB+(4*JRINVALIDCCSID)                                  05504
         DC    A(MJRINVALIDCCSID)                                       05505
         ORG                                                            05506
MJRINVALIDCCSID DC C'CCSID not supported'                               05507
         DC    X'00'                                                    05508
         ORG   ETAB+(4*JRCONVERSIONENV)                                 05509
         DC    A(MJRCONVERSIONENV)                                      05510
         ORG                                                            05511
MJRCONVERSIONENV DC C'Unicode/390 environmental error'                  05512
         DC    X'00'                                                    05513
         ORG   ETAB+(4*JRUNKNOWNCONVERSION)                             05514
         DC    A(MJRUNKNOWNCONVERSION)                                  05515
         ORG                                                            05516
MJRUNKNOWNCONVERSION DC C'Unicode/390 environmental error'              05517
         DC    X'00'                                                    05518
         ORG   ETAB+(4*JRNOTASKACEE)                                    05519
         DC    A(MJRNOTASKACEE)                                         05520
         ORG                                                            05521
MJRNOTASKACEE DC C'Invoker must have task level ACEE'                   05522
         DC    X'00'                                                    05523
         ORG   ETAB+(4*JRNOTWLMACEE)                                    05524
         DC    A(MJRNOTWLMACEE)                                         05525
         ORG                                                            05526
MJRNOTWLMACEE DC C'ACEE must be WLM created'                            05527
         DC    X'00'                                                    05528
         ORG   ETAB+(4*JRTLSDONEONIPT)                                  05529
         DC    A(MJRTLSDONEONIPT)                                       05530
         ORG                                                            05531
MJRTLSDONEONIPT DC C'IPT already invoked TLS_TASK_ACEE#'                05532
         DC    X'00'                                                    05533
         ORG   ETAB+(4*JRAMODE64)                                       05534
         DC    A(MJRAMODE64)                                            05535
         ORG                                                            05536
MJRAMODE64 DC C'Invalid addressing mode'                                05537
         DC    X'00'                                                    05538
         ORG   ETAB+(4*JRALREADYINSHUTDOWN)                             05539
         DC    A(MJRALREADYINSHUTDOWN)                                  05540
         ORG                                                            05541
MJRALREADYINSHUTDOWN DC C'The block or permanent process cannot be reg' 05542
         DC    C'istered'                                               05543
         DC    X'00'                                                    05544
         ORG   ETAB+(4*JRBLOCKPERMALREADYREGISTERED)                    05545
         DC    A(MJRBLOCKPERMALREADYREGISTERED)                         05546
         ORG                                                            05547
MJRBLOCKPERMALREADYREGISTERED DC C'The process or job is already regis' 05548
         DC    C'tered'                                                 05549
         DC    X'00'                                                    05550
         ORG   ETAB+(4*JRBLOCKPERMNOTREGISTERED)                        05551
         DC    A(MJRBLOCKPERMNOTREGISTERED)                             05552
         ORG                                                            05553
MJRBLOCKPERMNOTREGISTERED DC C'The process or job is not registered'    05554
         DC    X'00'                                                    05555
         ORG   ETAB+(4*JRJOBNAMENOTVALID)                               05556
         DC    A(MJRJOBNAMENOTVALID)                                    05557
         ORG                                                            05558
MJRJOBNAMENOTVALID DC C'The Job Name was not found'                     05559
         DC    X'00'                                                    05560
         ORG   ETAB+(4*JRJSTMUSTBEREGISTERED)                           05561
         DC    A(MJRJSTMUSTBEREGISTERED)                                05562
         ORG                                                            05563
MJRJSTMUSTBEREGISTERED DC C'The Job Step Process must be registered'    05564
         DC    X'00'                                                    05565
         ORG   ETAB+(4*JRNOTAUTHSHUTDOWN)                               05566
         DC    A(MJRNOTAUTHSHUTDOWN)                                    05567
         ORG                                                            05568
MJRNOTAUTHSHUTDOWN DC C'SHUTDOWN_REG call failed permission check for ' 05569
         DC    C'BPX.SHUTDOWN facility class profile'                   05570
         DC    X'00'                                                    05571
         ORG   ETAB+(4*JRUNSUPPORTEDENV)                                05572
         DC    A(MJRUNSUPPORTEDENV)                                     05573
         ORG                                                            05574
MJRUNSUPPORTEDENV DC C'Caller attempted to call a USS Service in an un' 05575
         DC    C'supported environment'                                 05576
         DC    X'00'                                                    05577
         ORG   ETAB+(4*JRRESTARTEDFD)                                   05578
         DC    A(MJRRESTARTEDFD)                                        05579
         ORG                                                            05580
MJRRESTARTEDFD DC C'The file descriptor is left over after OMVS Restar' 05581
         DC    C't'                                                     05582
         DC    X'00'                                                    05583
         ORG   ETAB+(4*JRFILESLOCKED)                                   05584
         DC    A(MJRFILESLOCKED)                                        05585
         ORG                                                            05586
MJRFILESLOCKED DC C'Command not allowed because one or more applicatio' 05587
         DC    C'ns have byte range locks on files in the filesystem.'  05588
         DC    X'00'                                                    05589
         ORG   ETAB+(4*JRINVIOCTLARG)                                   05590
         DC    A(MJRINVIOCTLARG)                                        05591
         ORG                                                            05592
MJRINVIOCTLARG DC C'The argument value used in the ioctl is not valid ' 05593
         DC    C'for the command'                                       05594
         DC    X'00'                                                    05595
         ORG   ETAB+(4*JRINVIOCTLARGLEN)                                05596
         DC    A(MJRINVIOCTLARGLEN)                                     05597
         ORG                                                            05598
MJRINVIOCTLARGLEN DC C'The length of the argument used with the ioctl ' 05599
         DC    C'command is not valid for the command'                  05600
         DC    X'00'                                                    05601
         ORG   ETAB+(4*JRSHUTDOWNINPROGRESS)                            05602
         DC    A(MJRSHUTDOWNINPROGRESS)                                 05603
         ORG                                                            05604
MJRSHUTDOWNINPROGRESS DC C'Kernel Shutdown is in progress on this syst' 05605
         DC    C'em.'                                                   05606
         DC    X'00'                                                    05607
         ORG   ETAB+(4*JRCDSFAILURE)                                    05608
         DC    A(MJRCDSFAILURE)                                         05609
         ORG                                                            05610
MJRCDSFAILURE DC C'A failure was encountered while trying to access th' 05611
         DC    C'e CDS.'                                                05612
         DC    X'00'                                                    05613
         ORG   ETAB+(4*JRCANNOTBEOWNER)                                 05614
         DC    A(MJRCANNOTBEOWNER)                                      05615
         ORG                                                            05616
MJRCANNOTBEOWNER DC C'This system can not be a file system owner thru ' 05617
         DC    C'a move or recovery operation.'                         05618
         DC    X'00'                                                    05619
         ORG   ETAB+(4*JRISMOUNTEDREALNAME)                             05620
         DC    A(MJRISMOUNTEDREALNAME)                                  05621
         ORG                                                            05622
MJRISMOUNTEDREALNAME DC C'A mounted file system has a real or alias na' 05623
         DC    C'me that conflicts with this mount request.'            05624
         DC    X'00'                                                    05625
.NOTZOS3 ANOP                                                           05626
******************************************************************      05627
*  ERRNOJR'S 7100-710F RESERVED FOR SNACKETS PFS             @PCA*      05628
******************************************************************      05629
******************************************************************      05630
*  ERRNOJR'S 7110-71FF Are available                         @PMA*      05631
******************************************************************      05632
         ORG   ETAB2+(4*(JRREVERR-29000))                               05633
         DC    A(MJRREVERR)                                             05634
         ORG                                                            05635
MJRREVERR DC C'revision code of library greater than program.'          05636
         DC    X'00'                                                    05637
******************************************************************      05638
*  ERRNOJR'S 7200-73FF RESERVED FOR TCP/IP               @QAC@PMA*      05639
******************************************************************      05640
         ORG   ETAB2+(4*(JRACKLENFAILURE-29000))                        05641
         DC    A(MJRACKLENFAILURE)                                      05642
         ORG                                                            05643
MJRACKLENFAILURE DC C'The size of the TPI data is not large enough to ' 05644
         DC    C'support the Prim_type field.'                          05645
         DC    X'00'                                                    05646
         ORG   ETAB2+(4*(JRUNEXPECTEDACK-29000))                        05647
         DC    A(MJRUNEXPECTEDACK)                                      05648
         ORG                                                            05649
MJRUNEXPECTEDACK DC C'The Prim_type received from the TPI request does' 05650
         DC    C' not match the request.'                               05651
         DC    X'00'                                                    05652
         ORG   ETAB2+(4*(JRALREADYBOUND-29000))                         05653
         DC    A(MJRALREADYBOUND)                                       05654
         ORG                                                            05655
MJRALREADYBOUND DC C'The Socket has already been bound by a previous r' 05656
         DC    C'equest.'                                               05657
         DC    X'00'                                                    05658
         ORG   ETAB2+(4*(JRNOTBOUND-29000))                             05659
         DC    A(MJRNOTBOUND)                                           05660
         ORG                                                            05661
MJRNOTBOUND DC C'Read not allowed on unbound socket unless it is RAW.'  05662
         DC    X'00'                                                    05663
         ORG   ETAB2+(4*(JRWRONGBAND-29000))                            05664
         DC    A(MJRWRONGBAND)                                          05665
         ORG                                                            05666
MJRWRONGBAND DC C'Message received on wrong band.'                      05667
         DC    X'00'                                                    05668
         ORG   ETAB2+(4*(JRTLIERROR-29000))                             05669
         DC    A(MJRTLIERROR)                                           05670
         ORG                                                            05671
MJRTLIERROR DC C'ERRNO returned by the transport layer interface.'      05672
         DC    X'00'                                                    05673
         ORG   ETAB2+(4*(JRCONNFAIL-29000))                             05674
         DC    A(MJRCONNFAIL)                                           05675
         ORG                                                            05676
MJRCONNFAIL DC C'Previous connection request on this socket failed.'    05677
         DC    X'00'                                                    05678
         ORG   ETAB2+(4*(JRCFGMREQLENERR-29000))                        05679
         DC    A(MJRCFGMREQLENERR)                                      05680
         ORG                                                            05681
MJRCFGMREQLENERR DC C'The size of the returned buffer is not large eno' 05682
         DC    C'ugh to support a CFGMREQ structure.'                   05683
         DC    X'00'                                                    05684
         ORG   ETAB2+(4*(JRBULKMODEERR-29000))                          05685
         DC    A(MJRBULKMODEERR)                                        05686
         ORG                                                            05687
MJRBULKMODEERR DC C'The type of socket request specified is not valid ' 05688
         DC    C'for a Bulkmode socket.'                                05689
         DC    X'00'                                                    05690
         ORG   ETAB2+(4*(JRIOCTLACCESSAUTHORIZATION-29000))             05691
         DC    A(MJRIOCTLACCESSAUTHORIZATION)                           05692
         ORG                                                            05693
MJRIOCTLACCESSAUTHORIZATION DC C'The user does not have access authori' 05694
         DC    C'ty for the requested ioctl.'                           05695
         DC    X'00'                                                    05696
         ORG   ETAB2+(4*(JRIOCTLSIZEINCORRECT-29000))                   05697
         DC    A(MJRIOCTLSIZEINCORRECT)                                 05698
         ORG                                                            05699
MJRIOCTLSIZEINCORRECT DC C'The size of the structure used in the ioctl' 05700
         DC    C' is not correct.'                                      05701
         DC    X'00'                                                    05702
         ORG   ETAB2+(4*(JRIOCTLAFNOTSUPPORTED-29000))                  05703
         DC    A(MJRIOCTLAFNOTSUPPORTED)                                05704
         ORG                                                            05705
MJRIOCTLAFNOTSUPPORTED DC C'The address family is not supported for th' 05706
         DC    C'e specified ioctl.'                                    05707
         DC    X'00'                                                    05708
         ORG   ETAB2+(4*(JRIOCTLRTTABLESIZE-29000))                     05709
         DC    A(MJRIOCTLRTTABLESIZE)                                   05710
         ORG                                                            05711
MJRIOCTLRTTABLESIZE DC C'The TCP/IP Route table does not fit in the bu' 05712
         DC    C'ffer provided.'                                        05713
         DC    X'00'                                                    05714
         ORG   ETAB2+(4*(JRIOCTLTPRIMNOTSET-29000))                     05715
         DC    A(MJRIOCTLTPRIMNOTSET)                                   05716
         ORG                                                            05717
MJRIOCTLTPRIMNOTSET DC C'No primary interface is defined to TCP/IP.'    05718
         DC    X'00'                                                    05719
         ORG   ETAB2+(4*(JRIOCTLLINKNAME-29000))                        05720
         DC    A(MJRIOCTLLINKNAME)                                      05721
         ORG                                                            05722
MJRIOCTLLINKNAME DC C'The ifr_name specified was not found to be a val' 05723
         DC    C'id, defined link name.'                                05724
         DC    X'00'                                                    05725
         ORG   ETAB2+(4*(JRDEVNUMINVALID-29000))                        05726
         DC    A(MJRDEVNUMINVALID)                                      05727
         ORG                                                            05728
MJRDEVNUMINVALID DC C'The device number specified is not valid for the' 05729
         DC    C' operation.'                                           05730
         DC    X'00'                                                    05731
         ORG   ETAB2+(4*(JRIPADDRINVALID-29000))                        05732
         DC    A(MJRIPADDRINVALID)                                      05733
         ORG                                                            05734
MJRIPADDRINVALID DC C'The IP address specified is not valid for the op' 05735
         DC    C'eration.'                                              05736
         DC    X'00'                                                    05737
         ORG   ETAB2+(4*(JRLINKNAMEINVALID-29000))                      05738
         DC    A(MJRLINKNAMEINVALID)                                    05739
         ORG                                                            05740
MJRLINKNAMEINVALID DC C'The link name specified is not valid for the o' 05741
         DC    C'peration.'                                             05742
         DC    X'00'                                                    05743
         ORG   ETAB2+(4*(JRINTERFACEINVALID-29000))                     05744
         DC    A(MJRINTERFACEINVALID)                                   05745
         ORG                                                            05746
MJRINTERFACEINVALID DC C'The interface specified is not valid for the ' 05747
         DC    C'operation.'                                            05748
         DC    X'00'                                                    05749
         ORG   ETAB2+(4*(JRDEVICECTCINVALID-29000))                     05750
         DC    A(MJRDEVICECTCINVALID)                                   05751
         ORG                                                            05752
MJRDEVICECTCINVALID DC C'The device conflicts with a CTC device.'       05753
         DC    X'00'                                                    05754
         ORG   ETAB2+(4*(JRDEVICECLAWINVALID-29000))                    05755
         DC    A(MJRDEVICECLAWINVALID)                                  05756
         ORG                                                            05757
MJRDEVICECLAWINVALID DC C'The device conflicts with a CLAW device.'     05758
         DC    X'00'                                                    05759
         ORG   ETAB2+(4*(JRDEVICELCSINVALID-29000))                     05760
         DC    A(MJRDEVICELCSINVALID)                                   05761
         ORG                                                            05762
MJRDEVICELCSINVALID DC C'The device conflicts with a LCS device.'       05763
         DC    X'00'                                                    05764
         ORG   ETAB2+(4*(JRLINKSMAXEXCEEDED-29000))                     05765
         DC    A(MJRLINKSMAXEXCEEDED)                                   05766
         ORG                                                            05767
MJRLINKSMAXEXCEEDED DC C'The number of link names has been exceeded.'   05768
         DC    X'00'                                                    05769
         ORG   ETAB2+(4*(JRINTERFACEALREADYSTOPPED-29000))              05770
         DC    A(MJRINTERFACEALREADYSTOPPED)                            05771
         ORG                                                            05772
MJRINTERFACEALREADYSTOPPED DC C'The Interface is already stopped.'      05773
         DC    X'00'                                                    05774
         ORG   ETAB2+(4*(JRINTERFACEALREADYSTARTED-29000))              05775
         DC    A(MJRINTERFACEALREADYSTARTED)                            05776
         ORG                                                            05777
MJRINTERFACEALREADYSTARTED DC C'The interface is already started.'      05778
         DC    X'00'                                                    05779
         ORG   ETAB2+(4*(JRDEVICENOTDEFINED-29000))                     05780
         DC    A(MJRDEVICENOTDEFINED)                                   05781
         ORG                                                            05782
MJRDEVICENOTDEFINED DC C'The device number specified is not defined.'   05783
         DC    X'00'                                                    05784
         ORG   ETAB2+(4*(JRDEVICEALREADYDEFINED-29000))                 05785
         DC    A(MJRDEVICEALREADYDEFINED)                               05786
         ORG                                                            05787
MJRDEVICEALREADYDEFINED DC C'The device is already defined.'            05788
         DC    X'00'                                                    05789
         ORG   ETAB2+(4*(JRDEVICEUNSUPPORTED-29000))                    05790
         DC    A(MJRDEVICEUNSUPPORTED)                                  05791
         ORG                                                            05792
MJRDEVICEUNSUPPORTED DC C'The device type is unsupported.'              05793
         DC    X'00'                                                    05794
         ORG   ETAB2+(4*(JRDEVICEACTIVE-29000))                         05795
         DC    A(MJRDEVICEACTIVE)                                       05796
         ORG                                                            05797
MJRDEVICEACTIVE DC C'The device type is active.'                        05798
         DC    X'00'                                                    05799
         ORG   ETAB2+(4*(JRCONFIGERR-29000))                            05800
         DC    A(MJRCONFIGERR)                                          05801
         ORG                                                            05802
MJRCONFIGERR DC C'Config statement is outside of Beg/End Statement.'    05803
         DC    X'00'                                                    05804
         ORG   ETAB2+(4*(JRAFNOTSUPPORTED-29000))                       05805
         DC    A(MJRAFNOTSUPPORTED)                                     05806
         ORG                                                            05807
MJRAFNOTSUPPORTED DC C'Address Family is not supported.'                05808
         DC    X'00'                                                    05809
         ORG   ETAB2+(4*(JRTCPNOTUP-29000))                             05810
         DC    A(MJRTCPNOTUP)                                           05811
         ORG                                                            05812
MJRTCPNOTUP DC C'TCP/IP is not initialized.'                            05813
         DC    X'00'                                                    05814
         ORG   ETAB2+(4*(JRUDPNOTUP-29000))                             05815
         DC    A(MJRUDPNOTUP)                                           05816
         ORG                                                            05817
MJRUDPNOTUP DC C'TCP/IP is not initialized.'                            05818
         DC    X'00'                                                    05819
         ORG   ETAB2+(4*(JRGETCONNERR-29000))                           05820
         DC    A(MJRGETCONNERR)                                         05821
         ORG                                                            05822
MJRGETCONNERR DC C'The connection was not in the proper state for retr' 05823
         DC    C'ieving.'                                               05824
         DC    X'00'                                                    05825
         ORG   ETAB2+(4*(JRPATFNDERR-29000))                            05826
         DC    A(MJRPATFNDERR)                                          05827
         ORG                                                            05828
MJRPATFNDERR DC C'Search for a restricted port failed.'                 05829
         DC    X'00'                                                    05830
         ORG   ETAB2+(4*(JRPATFNXERR-29000))                            05831
         DC    A(MJRPATFNXERR)                                          05832
         ORG                                                            05833
MJRPATFNXERR DC C'Search for restricted ports failed.'                  05834
         DC    X'00'                                                    05835
         ORG   ETAB2+(4*(JRPATADDERR-29000))                            05836
         DC    A(MJRPATADDERR)                                          05837
         ORG                                                            05838
MJRPATADDERR DC C'Add new restricted port failed.'                      05839
         DC    X'00'                                                    05840
         ORG   ETAB2+(4*(JRPATDELERR-29000))                            05841
         DC    A(MJRPATDELERR)                                          05842
         ORG                                                            05843
MJRPATDELERR DC C'Delete a restricted port failed.'                     05844
         DC    X'00'                                                    05845
         ORG   ETAB2+(4*(JRPATEXISTERR-29000))                          05846
         DC    A(MJRPATEXISTERR)                                        05847
         ORG                                                            05848
MJRPATEXISTERR DC C'Restricted port entry already existed.'             05849
         DC    X'00'                                                    05850
         ORG   ETAB2+(4*(JRPATNOTFOUND-29000))                          05851
         DC    A(MJRPATNOTFOUND)                                        05852
         ORG                                                            05853
MJRPATNOTFOUND DC C'Restricted port entry is not found.'                05854
         DC    X'00'                                                    05855
         ORG   ETAB2+(4*(JRINVALIDDADDR-29000))                         05856
         DC    A(MJRINVALIDDADDR)                                       05857
         ORG                                                            05858
MJRINVALIDDADDR DC C'Specified address is not valid.'                   05859
         DC    X'00'                                                    05860
         ORG   ETAB2+(4*(JRPORTRERR-29000))                             05861
         DC    A(MJRPORTRERR)                                           05862
         ORG                                                            05863
MJRPORTRERR DC C'The input specified in the port range statement is no' 05864
         DC    C't valid.'                                              05865
         DC    X'00'                                                    05866
         ORG   ETAB2+(4*(JRINTERFACEDEFINEDBYHOME-29000))               05867
         DC    A(MJRINTERFACEDEFINEDBYHOME)                             05868
         ORG                                                            05869
MJRINTERFACEDEFINEDBYHOME DC C'The interface has been used within a Ho' 05870
         DC    C'me statement.'                                         05871
         DC    X'00'                                                    05872
         ORG   ETAB2+(4*(JRDEVICEDEFINEDBYLINK-29000))                  05873
         DC    A(MJRDEVICEDEFINEDBYLINK)                                05874
         ORG                                                            05875
MJRDEVICEDEFINEDBYLINK DC C'The device is defined by a Link statement.' 05876
         DC    X'00'                                                    05877
         ORG   ETAB2+(4*(JRDEVICETYPEINVALID-29000))                    05878
         DC    A(MJRDEVICETYPEINVALID)                                  05879
         ORG                                                            05880
MJRDEVICETYPEINVALID DC C'The device type is not valid for the operati' 05881
         DC    C'on requested.'                                         05882
         DC    X'00'                                                    05883
         ORG   ETAB2+(4*(JRBSDROUTINGPARMSNEVERUSED-29000))             05884
         DC    A(MJRBSDROUTINGPARMSNEVERUSED)                           05885
         ORG                                                            05886
MJRBSDROUTINGPARMSNEVERUSED DC C'BSDRoutingParms were never configured' 05887
         DC    C' for TCP/IP.'                                          05888
         DC    X'00'                                                    05889
         ORG   ETAB2+(4*(JRBINDOUTSTATE-29000))                         05890
         DC    A(MJRBINDOUTSTATE)                                       05891
         ORG                                                            05892
MJRBINDOUTSTATE DC C'The current TPL state is not unbound when doing a' 05893
         DC    C' bind request.'                                        05894
         DC    X'00'                                                    05895
         ORG   ETAB2+(4*(JRBINDBADSOCKADDR-29000))                      05896
         DC    A(MJRBINDBADSOCKADDR)                                    05897
         ORG                                                            05898
MJRBINDBADSOCKADDR DC C'Bad Socket Address data present in the source ' 05899
         DC    C'IP address.'                                           05900
         DC    X'00'                                                    05901
         ORG   ETAB2+(4*(JRBINDADDRNACTIVE-29000))                      05902
         DC    A(MJRBINDADDRNACTIVE)                                    05903
         ORG                                                            05904
MJRBINDADDRNACTIVE DC C'Local address was not active when processing t' 05905
         DC    C'he bind request.'                                      05906
         DC    X'00'                                                    05907
         ORG   ETAB2+(4*(JRBINDNOPORT-29000))                           05908
         DC    A(MJRBINDNOPORT)                                         05909
         ORG                                                            05910
MJRBINDNOPORT DC C'No port is available. Port entries have reached the' 05911
         DC    C' maximum number.'                                      05912
         DC    X'00'                                                    05913
         ORG   ETAB2+(4*(JRBINDADDRINUSED-29000))                       05914
         DC    A(MJRBINDADDRINUSED)                                     05915
         ORG                                                            05916
MJRBINDADDRINUSED DC C'The INADDR_ANY is being used by other users. Th' 05917
         DC    C'e bind request fails.'                                 05918
         DC    X'00'                                                    05919
         ORG   ETAB2+(4*(JRUNBINDNOTIDLE-29000))                        05920
         DC    A(MJRUNBINDNOTIDLE)                                      05921
         ORG                                                            05922
MJRUNBINDNOTIDLE DC C'The requested connection was not in the proper s' 05923
         DC    C'tate for the request.'                                 05924
         DC    X'00'                                                    05925
         ORG   ETAB2+(4*(JROPTLERR-29000))                              05926
         DC    A(MJROPTLERR)                                            05927
         ORG                                                            05928
MJROPTLERR DC C'The value specified for option_length is not valid.'    05929
         DC    X'00'                                                    05930
         ORG   ETAB2+(4*(JRSENDLIMIT-29000))                            05931
         DC    A(MJRSENDLIMIT)                                          05932
         ORG                                                            05933
MJRSENDLIMIT DC C'The send buffer size is not valid. It is too big.'    05934
         DC    X'00'                                                    05935
         ORG   ETAB2+(4*(JRRCVDLIMIT-29000))                            05936
         DC    A(MJRRCVDLIMIT)                                          05937
         ORG                                                            05938
MJRRCVDLIMIT DC C'The received buffer size is not valid. It is too big' 05939
         DC    C'.'                                                     05940
         DC    X'00'                                                    05941
         ORG   ETAB2+(4*(JRBSTOPT-29000))                               05942
         DC    A(MJRBSTOPT)                                             05943
         ORG                                                            05944
MJRBSTOPT DC C'The value specified for option_value is not valid.'      05945
         DC    X'00'                                                    05946
         ORG   ETAB2+(4*(JRBRTOPT-29000))                               05947
         DC    A(MJRBRTOPT)                                             05948
         ORG                                                            05949
MJRBRTOPT DC C'The value specified for option_value is not valid.'      05950
         DC    X'00'                                                    05951
         ORG   ETAB2+(4*(JRIPOPT-29000))                                05952
         DC    A(MJRIPOPT)                                              05953
         ORG                                                            05954
MJRIPOPT DC C'The value specified for option_value is not valid.'       05955
         DC    X'00'                                                    05956
         ORG   ETAB2+(4*(JRTOSOPT-29000))                               05957
         DC    A(MJRTOSOPT)                                             05958
         ORG                                                            05959
MJRTOSOPT DC C'The value specified for type of service is not valid.'   05960
         DC    X'00'                                                    05961
         ORG   ETAB2+(4*(JRTTLOPT-29000))                               05962
         DC    A(MJRTTLOPT)                                             05963
         ORG                                                            05964
MJRTTLOPT DC C'The value specifed for time to live is not valid.'       05965
         DC    X'00'                                                    05966
         ORG   ETAB2+(4*(JRIPOPTLERR-29000))                            05967
         DC    A(MJRIPOPTLERR)                                          05968
         ORG                                                            05969
MJRIPOPTLERR DC C'The value specified for option_length is not valid.'  05970
         DC    X'00'                                                    05971
         ORG   ETAB2+(4*(JRTOSOPTLERR-29000))                           05972
         DC    A(MJRTOSOPTLERR)                                         05973
         ORG                                                            05974
MJRTOSOPTLERR DC C'The value specified for option_length is not valid.' 05975
         DC    X'00'                                                    05976
         ORG   ETAB2+(4*(JRTTLOPTLERR-29000))                           05977
         DC    A(MJRTTLOPTLERR)                                         05978
         ORG                                                            05979
MJRTTLOPTLERR DC C'The value specified for option_length is not valid.' 05980
         DC    X'00'                                                    05981
         ORG   ETAB2+(4*(JRCONNNOTIDLE-29000))                          05982
         DC    A(MJRCONNNOTIDLE)                                        05983
         ORG                                                            05984
MJRCONNNOTIDLE DC C'Connect request not in idle state.'                 05985
         DC    X'00'                                                    05986
         ORG   ETAB2+(4*(JRBROADCASTDEST-29000))                        05987
         DC    A(MJRBROADCASTDEST)                                      05988
         ORG                                                            05989
MJRBROADCASTDEST DC C'Cannot connect to a broadcast address.'           05990
         DC    X'00'                                                    05991
         ORG   ETAB2+(4*(JRCONNECTTOSELF-29000))                        05992
         DC    A(MJRCONNECTTOSELF)                                      05993
         ORG                                                            05994
MJRCONNECTTOSELF DC C'Connect address is the same as the source addres' 05995
         DC    C's.'                                                    05996
         DC    X'00'                                                    05997
         ORG   ETAB2+(4*(JRCONNTCBNOTFOUND-29000))                      05998
         DC    A(MJRCONNTCBNOTFOUND)                                    05999
         ORG                                                            06000
MJRCONNTCBNOTFOUND DC C'A TCB was not found for the specified socket.'  06001
         DC    X'00'                                                    06002
         ORG   ETAB2+(4*(JRBADTCBEYE-29000))                            06003
         DC    A(MJRBADTCBEYE)                                          06004
         ORG                                                            06005
MJRBADTCBEYE DC C'The TCB has been freed or overlaid.'                  06006
         DC    X'00'                                                    06007
         ORG   ETAB2+(4*(JRNOACCEPTTCB-29000))                          06008
         DC    A(MJRNOACCEPTTCB)                                        06009
         ORG                                                            06010
MJRNOACCEPTTCB DC C'There is no valid TCB on the accept queue.'         06011
         DC    X'00'                                                    06012
         ORG   ETAB2+(4*(JRDISCONTCBNOTFOUND-29000))                    06013
         DC    A(MJRDISCONTCBNOTFOUND)                                  06014
         ORG                                                            06015
MJRDISCONTCBNOTFOUND DC C'The TCB could not be found for disconnect.'   06016
         DC    X'00'                                                    06017
         ORG   ETAB2+(4*(JRPORTACCESSAUTH-29000))                       06018
         DC    A(MJRPORTACCESSAUTH)                                     06019
         ORG                                                            06020
MJRPORTACCESSAUTH DC C'User does not have authority to access this por' 06021
         DC    C't.'                                                    06022
         DC    X'00'                                                    06023
         ORG   ETAB2+(4*(JRPORTBUSY-29000))                             06024
         DC    A(MJRPORTBUSY)                                           06025
         ORG                                                            06026
MJRPORTBUSY DC C'Specified port is in use.'                             06027
         DC    X'00'                                                    06028
         ORG   ETAB2+(4*(JRSENDOPTLERR-29000))                          06029
         DC    A(MJRSENDOPTLERR)                                        06030
         ORG                                                            06031
MJRSENDOPTLERR DC C'The value specified for option_length is not valid' 06032
         DC    C'.'                                                     06033
         DC    X'00'                                                    06034
         ORG   ETAB2+(4*(JRRECVOPTLERR-29000))                          06035
         DC    A(MJRRECVOPTLERR)                                        06036
         ORG                                                            06037
MJRRECVOPTLERR DC C'The value specified for option_length is not valid' 06038
         DC    C'.'                                                     06039
         DC    X'00'                                                    06040
         ORG   ETAB2+(4*(JRBSTOPTLERR-29000))                           06041
         DC    A(MJRBSTOPTLERR)                                         06042
         ORG                                                            06043
MJRBSTOPTLERR DC C'The value specified for option_length is not valid.' 06044
         DC    X'00'                                                    06045
         ORG   ETAB2+(4*(JRBRTOPTLERR-29000))                           06046
         DC    A(MJRBRTOPTLERR)                                         06047
         ORG                                                            06048
MJRBRTOPTLERR DC C'The value specified for option_length is not valid.' 06049
         DC    X'00'                                                    06050
         ORG   ETAB2+(4*(JRRTINVALIDTOS-29000))                         06051
         DC    A(MJRRTINVALIDTOS)                                       06052
         ORG                                                            06053
MJRRTINVALIDTOS DC C'Specified route type of service is not valid.'     06054
         DC    X'00'                                                    06055
         ORG   ETAB2+(4*(JRRTINVALIDGATEWAYADDR-29000))                 06056
         DC    A(MJRRTINVALIDGATEWAYADDR)                               06057
         ORG                                                            06058
MJRRTINVALIDGATEWAYADDR DC C'Specified route gateway address is not va' 06059
         DC    C'lid.'                                                  06060
         DC    X'00'                                                    06061
         ORG   ETAB2+(4*(JRRTINVALIDPROTOCOL-29000))                    06062
         DC    A(MJRRTINVALIDPROTOCOL)                                  06063
         ORG                                                            06064
MJRRTINVALIDPROTOCOL DC C'Specified route protocol is not valid.'       06065
         DC    X'00'                                                    06066
         ORG   ETAB2+(4*(JRRTINVALIDTYPE-29000))                        06067
         DC    A(MJRRTINVALIDTYPE)                                      06068
         ORG                                                            06069
MJRRTINVALIDTYPE DC C'Specified route type is not valid.'               06070
         DC    X'00'                                                    06071
         ORG   ETAB2+(4*(JRRTINVALIDDEST-29000))                        06072
         DC    A(MJRRTINVALIDDEST)                                      06073
         ORG                                                            06074
MJRRTINVALIDDEST DC C'Specified route destination is not valid.'        06075
         DC    X'00'                                                    06076
         ORG   ETAB2+(4*(JRRTINVALIDMASK-29000))                        06077
         DC    A(MJRRTINVALIDMASK)                                      06078
         ORG                                                            06079
MJRRTINVALIDMASK DC C'Specified route subnet mask is not valid.'        06080
         DC    X'00'                                                    06081
         ORG   ETAB2+(4*(JRRTINVALIDHOSTADDR-29000))                    06082
         DC    A(MJRRTINVALIDHOSTADDR)                                  06083
         ORG                                                            06084
MJRRTINVALIDHOSTADDR DC C'Specified route host ip address is not valid' 06085
         DC    C'.'                                                     06086
         DC    X'00'                                                    06087
         ORG   ETAB2+(4*(JRHARDWARETYPENOTSUPPORTED-29000))             06088
         DC    A(MJRHARDWARETYPENOTSUPPORTED)                           06089
         ORG                                                            06090
MJRHARDWARETYPENOTSUPPORTED DC C'Specified hardware type is not suppor' 06091
         DC    C'ted.'                                                  06092
         DC    X'00'                                                    06093
         ORG   ETAB2+(4*(JRLINKTYPEINVALID-29000))                      06094
         DC    A(MJRLINKTYPEINVALID)                                    06095
         ORG                                                            06096
MJRLINKTYPEINVALID DC C'The link type is not valid for the operation r' 06097
         DC    C'equested.'                                             06098
         DC    X'00'                                                    06099
         ORG   ETAB2+(4*(JRNOHOMESTATEMENT-29000))                      06100
         DC    A(MJRNOHOMESTATEMENT)                                    06101
         ORG                                                            06102
MJRNOHOMESTATEMENT DC C'The link name does not have an associated home' 06103
         DC    C' statement.'                                           06104
         DC    X'00'                                                    06105
         ORG   ETAB2+(4*(JRIOCTLNOTSUPPORTED-29000))                    06106
         DC    A(MJRIOCTLNOTSUPPORTED)                                  06107
         ORG                                                            06108
MJRIOCTLNOTSUPPORTED DC C'The specified ioctl is not supported in this' 06109
         DC    C' version of TCP/IP.'                                   06110
         DC    X'00'                                                    06111
         ORG   ETAB2+(4*(JRLVLSOCNOSUP-29000))                          06112
         DC    A(MJRLVLSOCNOSUP)                                        06113
         ORG                                                            06114
MJRLVLSOCNOSUP DC C'The option_name that was specified is not supporte' 06115
         DC    C'd.'                                                    06116
         DC    X'00'                                                    06117
         ORG   ETAB2+(4*(JRLVLTCPNOSUP-29000))                          06118
         DC    A(MJRLVLTCPNOSUP)                                        06119
         ORG                                                            06120
MJRLVLTCPNOSUP DC C'The level that was specified is not supported.'     06121
         DC    X'00'                                                    06122
         ORG   ETAB2+(4*(JRLVLIPNOSUP-29000))                           06123
         DC    A(MJRLVLIPNOSUP)                                         06124
         ORG                                                            06125
MJRLVLIPNOSUP DC C'The option_name that was specified is not supported' 06126
         DC    C'.'                                                     06127
         DC    X'00'                                                    06128
         ORG   ETAB2+(4*(JRINVOPTLEN-29000))                            06129
         DC    A(MJRINVOPTLEN)                                          06130
         ORG                                                            06131
MJRINVOPTLEN DC C'The option length is not valid'                       06132
         DC    X'00'                                                    06133
         ORG   ETAB2+(4*(JRINVOPTVAL-29000))                            06134
         DC    A(MJRINVOPTVAL)                                          06135
         ORG                                                            06136
MJRINVOPTVAL DC C'The option value is not valid'                        06137
         DC    X'00'                                                    06138
         ORG   ETAB2+(4*(JRCONNALREADYEXISTS-29000))                    06139
         DC    A(MJRCONNALREADYEXISTS)                                  06140
         ORG                                                            06141
MJRCONNALREADYEXISTS DC C'The address is already in use.'               06142
         DC    X'00'                                                    06143
         ORG   ETAB2+(4*(JRSTARTNONDEVICEINVALID-29000))                06144
         DC    A(MJRSTARTNONDEVICEINVALID)                              06145
         ORG                                                            06146
MJRSTARTNONDEVICEINVALID DC C'An attempt was made to start an interfac' 06147
         DC    C'e which isnot a device.'                               06148
         DC    X'00'                                                    06149
         ORG   ETAB2+(4*(JRBADIOCTLTOIF-29000))                         06150
         DC    A(MJRBADIOCTLTOIF)                                       06151
         ORG                                                            06152
MJRBADIOCTLTOIF DC C'An internal error occurred between the ioctl and ' 06153
         DC    C'Interface layer.'                                      06154
         DC    X'00'                                                    06155
         ORG   ETAB2+(4*(JRLINKNOTDEFINED-29000))                       06156
         DC    A(MJRLINKNOTDEFINED)                                     06157
         ORG                                                            06158
MJRLINKNOTDEFINED DC C'The link name specified is not defined.'         06159
         DC    X'00'                                                    06160
         ORG   ETAB2+(4*(JRMAXSTARTSEXCEEDED-29000))                    06161
         DC    A(MJRMAXSTARTSEXCEEDED)                                  06162
         ORG                                                            06163
MJRMAXSTARTSEXCEEDED DC C'An internal limit of START DEVICEs has been ' 06164
         DC    C'exceeded.'                                             06165
         DC    X'00'                                                    06166
         ORG   ETAB2+(4*(JRDEVICEHASLINKS-29000))                       06167
         DC    A(MJRDEVICEHASLINKS)                                     06168
         ORG                                                            06169
MJRDEVICEHASLINKS DC C'An attempt was made to DELETE a device, but the' 06170
         DC    C' device has at least one LINK defined to it.'          06171
         DC    X'00'                                                    06172
         ORG   ETAB2+(4*(JRDEVICEHASNOLINKS-29000))                     06173
         DC    A(MJRDEVICEHASNOLINKS)                                   06174
         ORG                                                            06175
MJRDEVICEHASNOLINKS DC C'An attempt was made to START a device, but th' 06176
         DC    C'e device has no LINKs defined to it.'                  06177
         DC    X'00'                                                    06178
         ORG   ETAB2+(4*(JRINTERFACENOTDEFINED-29000))                  06179
         DC    A(MJRINTERFACENOTDEFINED)                                06180
         ORG                                                            06181
MJRINTERFACENOTDEFINED DC C'The interface specified is not defined.'    06182
         DC    X'00'                                                    06183
         ORG   ETAB2+(4*(JRRTALREADYEXISTS-29000))                      06184
         DC    A(MJRRTALREADYEXISTS)                                    06185
         ORG                                                            06186
MJRRTALREADYEXISTS DC C'The route already exists.'                      06187
         DC    X'00'                                                    06188
         ORG   ETAB2+(4*(JRRTNOTDEFINED-29000))                         06189
         DC    A(MJRRTNOTDEFINED)                                       06190
         ORG                                                            06191
MJRRTNOTDEFINED DC C'The route is not defined.'                         06192
         DC    X'00'                                                    06193
         ORG   ETAB2+(4*(JRRTREMOVEDIRECTERROR-29000))                  06194
         DC    A(MJRRTREMOVEDIRECTERROR)                                06195
         ORG                                                            06196
MJRRTREMOVEDIRECTERROR DC C'The route to be removed is a direct route.' 06197
         DC    X'00'                                                    06198
         ORG   ETAB2+(4*(JRGATEWAYUNREACHABLE-29000))                   06199
         DC    A(MJRGATEWAYUNREACHABLE)                                 06200
         ORG                                                            06201
MJRGATEWAYUNREACHABLE DC C'The gateway is unreachable by any routes.'   06202
         DC    X'00'                                                    06203
         ORG   ETAB2+(4*(JRRTREMOVEINDIRECTERROR-29000))                06204
         DC    A(MJRRTREMOVEINDIRECTERROR)                              06205
         ORG                                                            06206
MJRRTREMOVEINDIRECTERROR DC C'The route to be removed is an indirect r' 06207
         DC    C'oute.'                                                 06208
         DC    X'00'                                                    06209
         ORG   ETAB2+(4*(JRARPSVMULT-29000))                            06210
         DC    A(MJRARPSVMULT)                                          06211
         ORG                                                            06212
MJRARPSVMULT DC C'Multiple ATMARP servers are defined for the same lin' 06213
         DC    C'k.'                                                    06214
         DC    X'00'                                                    06215
         ORG   ETAB2+(4*(JRDEVICEMPCPTPINVALID-29000))                  06216
         DC    A(MJRDEVICEMPCPTPINVALID)                                06217
         ORG                                                            06218
MJRDEVICEMPCPTPINVALID DC C'A MPCPTP link was defined for an incorrect' 06219
         DC    C' device type.'                                         06220
         DC    X'00'                                                    06221
         ORG   ETAB2+(4*(JRDEVICEHCHINVALID-29000))                     06222
         DC    A(MJRDEVICEHCHINVALID)                                   06223
         ORG                                                            06224
MJRDEVICEHCHINVALID DC C'An HCH link was defined for an incorrect devi' 06225
         DC    C'ce type.'                                              06226
         DC    X'00'                                                    06227
         ORG   ETAB2+(4*(JRDEVICECDLCINVALID-29000))                    06228
         DC    A(MJRDEVICECDLCINVALID)                                  06229
         ORG                                                            06230
MJRDEVICECDLCINVALID DC C'A CDLC link was defined for an incorrect dev' 06231
         DC    C'ice type.'                                             06232
         DC    X'00'                                                    06233
         ORG   ETAB2+(4*(JRDEVICEX25INVALID-29000))                     06234
         DC    A(MJRDEVICEX25INVALID)                                   06235
         ORG                                                            06236
MJRDEVICEX25INVALID DC C'An X.25 link was defined for an incorrect dev' 06237
         DC    C'ice type.'                                             06238
         DC    X'00'                                                    06239
         ORG   ETAB2+(4*(JRDEVICEATMINVALID-29000))                     06240
         DC    A(MJRDEVICEATMINVALID)                                   06241
         ORG                                                            06242
MJRDEVICEATMINVALID DC C'An ATM link was defined for an incorrect devi' 06243
         DC    C'ce type.'                                              06244
         DC    X'00'                                                    06245
         ORG   ETAB2+(4*(JRLINKALREADYDEFINED-29000))                   06246
         DC    A(MJRLINKALREADYDEFINED)                                 06247
         ORG                                                            06248
MJRLINKALREADYDEFINED DC C'The link is already defined.'                06249
         DC    X'00'                                                    06250
         ORG   ETAB2+(4*(JRPVCALREADYDEFINED-29000))                    06251
         DC    A(MJRPVCALREADYDEFINED)                                  06252
         ORG                                                            06253
MJRPVCALREADYDEFINED DC C'The PVC is already defined.'                  06254
         DC    X'00'                                                    06255
         ORG   ETAB2+(4*(JRPVCNOTDEFINED-29000))                        06256
         DC    A(MJRPVCNOTDEFINED)                                      06257
         ORG                                                            06258
MJRPVCNOTDEFINED DC C'The PVC name specified is not defined.'           06259
         DC    X'00'                                                    06260
         ORG   ETAB2+(4*(JRLISNOTDEFINED-29000))                        06261
         DC    A(MJRLISNOTDEFINED)                                      06262
         ORG                                                            06263
MJRLISNOTDEFINED DC C'The LIS name specified is not defined.'           06264
         DC    X'00'                                                    06265
         ORG   ETAB2+(4*(JRARPSVNOTDEFINED-29000))                      06266
         DC    A(MJRARPSVNOTDEFINED)                                    06267
         ORG                                                            06268
MJRARPSVNOTDEFINED DC C'The ATMARPSV name specified is not defined.'    06269
         DC    X'00'                                                    06270
         ORG   ETAB2+(4*(JRLISINUSEFORDEVICE-29000))                    06271
         DC    A(MJRLISINUSEFORDEVICE)                                  06272
         ORG                                                            06273
MJRLISINUSEFORDEVICE DC C'Another LINK for this device already specifi' 06274
         DC    C'es this LIS.'                                          06275
         DC    X'00'                                                    06276
         ORG   ETAB2+(4*(JRPVCLINKNOTATM-29000))                        06277
         DC    A(MJRPVCLINKNOTATM)                                      06278
         ORG                                                            06279
MJRPVCLINKNOTATM DC C'An ATMPVC was defined for an incorrect link type' 06280
         DC    C'.'                                                     06281
         DC    X'00'                                                    06282
         ORG   ETAB2+(4*(JRLISINCONSISTENT-29000))                      06283
         DC    A(MJRLISINCONSISTENT)                                    06284
         ORG                                                            06285
MJRLISINCONSISTENT DC C'The LIS name is already defined with a differe' 06286
         DC    C'nt subnet value/mask.'                                 06287
         DC    X'00'                                                    06288
         ORG   ETAB2+(4*(JRLISOPTIONSUPDATED-29000))                    06289
         DC    A(MJRLISOPTIONSUPDATED)                                  06290
         ORG                                                            06291
MJRLISOPTIONSUPDATED DC C'An ATMLIS redefiniton caused the LIS options' 06292
         DC    C' to be updated.'                                       06293
         DC    X'00'                                                    06294
         ORG   ETAB2+(4*(JRPVCINUSEASARPSV-29000))                      06295
         DC    A(MJRPVCINUSEASARPSV)                                    06296
         ORG                                                            06297
MJRPVCINUSEASARPSV DC C'An attempt was made to delete an ATMPVC which ' 06298
         DC    C'is in use as an ATMARP server.'                        06299
         DC    X'00'                                                    06300
         ORG   ETAB2+(4*(JRLINKHASPVCS-29000))                          06301
         DC    A(MJRLINKHASPVCS)                                        06302
         ORG                                                            06303
MJRLINKHASPVCS DC C'An attempt was made to DELETE a LINK, but the LINK' 06304
         DC    C' has at least one ATMPVC defined to it.'               06305
         DC    X'00'                                                    06306
         ORG   ETAB2+(4*(JRLISHASLINKS-29000))                          06307
         DC    A(MJRLISHASLINKS)                                        06308
         ORG                                                            06309
MJRLISHASLINKS DC C'An attempt was made to DELETE an ATMLIS, but the A' 06310
         DC    C'TMLIS has at least one LINK defined to it.'            06311
         DC    X'00'                                                    06312
         ORG   ETAB2+(4*(JRLISHASARPSVS-29000))                         06313
         DC    A(MJRLISHASARPSVS)                                       06314
         ORG                                                            06315
MJRLISHASARPSVS DC C'An attempt was made to DELETE an ATMLIS, but the ' 06316
         DC    C'ATMLIS has at least one ATMARPSV defined to it.'       06317
         DC    X'00'                                                    06318
         ORG   ETAB2+(4*(JRARPSVINUSE-29000))                           06319
         DC    A(MJRARPSVINUSE)                                         06320
         ORG                                                            06321
MJRARPSVINUSE DC C'An attempt was made to DELETE an ATMARPSV, but at a' 06322
         DC    C't least one ATM device is using the ATMARPSV.'         06323
         DC    X'00'                                                    06324
         ORG   ETAB2+(4*(JRNOTINLIS-29000))                             06325
         DC    A(MJRNOTINLIS)                                           06326
         ORG                                                            06327
MJRNOTINLIS DC C'The IP address of a defined ATMARPSV is not in the sp' 06328
         DC    C'ecified LIS.'                                          06329
         DC    X'00'                                                    06330
         ORG   ETAB2+(4*(JRTELSTATERR-29000))                           06331
         DC    A(MJRTELSTATERR)                                         06332
         ORG                                                            06333
MJRTELSTATERR DC C'Attempt to update the telnet attributes when the co' 06334
         DC    C'nnection is not yet established.'                      06335
         DC    X'00'                                                    06336
         ORG   ETAB2+(4*(JRTELNFNDERR-29000))                           06337
         DC    A(MJRTELNFNDERR)                                         06338
         ORG                                                            06339
MJRTELNFNDERR DC C'Telnet session is not found'                         06340
         DC    X'00'                                                    06341
         ORG   ETAB2+(4*(JRARPSVALREADYDEFINED-29000))                  06342
         DC    A(MJRARPSVALREADYDEFINED)                                06343
         ORG                                                            06344
MJRARPSVALREADYDEFINED DC C'The ATMARPSV is already defined.'           06345
         DC    X'00'                                                    06346
         ORG   ETAB2+(4*(JRLISMISMATCH-29000))                          06347
         DC    A(MJRLISMISMATCH)                                        06348
         ORG                                                            06349
MJRLISMISMATCH DC C'The LIS name on the ATMARPSV PVC statement does no' 06350
         DC    C't match the LIS defined on the link to which the spec' 06351
         DC    C'ified PVC is defined.'                                 06352
         DC    X'00'                                                    06353
         ORG   ETAB2+(4*(JRDEVICESNAINVALID-29000))                     06354
         DC    A(MJRDEVICESNAINVALID)                                   06355
         ORG                                                            06356
MJRDEVICESNAINVALID DC C'A SNA link was defined for an incorrect devic' 06357
         DC    C'e type.'                                               06358
         DC    X'00'                                                    06359
         ORG   ETAB2+(4*(JRLINKHASNOPVCORLIS-29000))                    06360
         DC    A(MJRLINKHASNOPVCORLIS)                                  06361
         ORG                                                            06362
MJRLINKHASNOPVCORLIS DC C'An ATM link was defined but did not specify ' 06363
         DC    C'a LIS and has no PVCs defined to it.'                  06364
         DC    X'00'                                                    06365
         ORG   ETAB2+(4*(JRRTINVALIDMASKHOST-29000))                    06366
         DC    A(MJRRTINVALIDMASKHOST)                                  06367
         ORG                                                            06368
MJRRTINVALIDMASKHOST DC C'A host route with a non-zero mask was receiv' 06369
         DC    C'ed'                                                    06370
         DC    X'00'                                                    06371
         ORG   ETAB2+(4*(JRRTINVALIDMASKDEFAULT-29000))                 06372
         DC    A(MJRRTINVALIDMASKDEFAULT)                               06373
         ORG                                                            06374
MJRRTINVALIDMASKDEFAULT DC C'A non-default route was received with a d' 06375
         DC    C'estination of 0'                                       06376
         DC    X'00'                                                    06377
         ORG   ETAB2+(4*(JRRTNOBSDROUTINGPARMSSET-29000))               06378
         DC    A(MJRRTNOBSDROUTINGPARMSSET)                             06379
         ORG                                                            06380
MJRRTNOBSDROUTINGPARMSSET DC C'A route was added for a link without BS' 06381
         DC    C'DRoutingParms'                                         06382
         DC    X'00'                                                    06383
         ORG   ETAB2+(4*(JRRTINVALIDMASKCIDR-29000))                    06384
         DC    A(MJRRTINVALIDMASKCIDR)                                  06385
         ORG                                                            06386
MJRRTINVALIDMASKCIDR DC C'The mask does not conform to CIDR requiremen' 06387
         DC    C't'                                                     06388
         DC    X'00'                                                    06389
         ORG   ETAB2+(4*(JRMSGINVALIDFLAG-29000))                       06390
         DC    A(MJRMSGINVALIDFLAG)                                     06391
         ORG                                                            06392
MJRMSGINVALIDFLAG DC C'The socket does not support the function that w' 06393
         DC    C'as specified with the flags parameter.'                06394
         DC    X'00'                                                    06395
         ORG   ETAB2+(4*(JRVARIABLESUBNETTINGNOTALLOWED-29000))         06396
         DC    A(MJRVARIABLESUBNETTINGNOTALLOWED)                       06397
         ORG                                                            06398
MJRVARIABLESUBNETTINGNOTALLOWED DC C'IPCONFIG did not specify RIPV2 or' 06399
         DC    C' length of rtentry is wrong.'                          06400
         DC    X'00'                                                    06401
         ORG   ETAB2+(4*(JRSYSPLEXADDRNOTFOUND-29000))                  06402
         DC    A(MJRSYSPLEXADDRNOTFOUND)                                06403
         ORG                                                            06404
MJRSYSPLEXADDRNOTFOUND DC C'The sysplex loopback address 127.0.0.128 c' 06405
         DC    C'ould not be resolved to the sysplex domain name by  t' 06406
         DC    C'he gethostbyaddr() syscall.'                           06407
         DC    X'00'                                                    06408
         ORG   ETAB2+(4*(JRRESNOTFOUNDINDNS-29000))                     06409
         DC    A(MJRRESNOTFOUNDINDNS)                                   06410
         ORG                                                            06411
MJRRESNOTFOUNDINDNS DC C'The specified group or server+group name coul' 06412
         DC    C'd  not be found within the sysplex domain.'            06413
         DC    X'00'                                                    06414
         ORG   ETAB2+(4*(JRGROUPNAMEREQUIRED-29000))                    06415
         DC    A(MJRGROUPNAMEREQUIRED)                                  06416
         ORG                                                            06417
MJRGROUPNAMEREQUIRED DC C'A server name was specified in the sysplexFq' 06418
         DC    C'DnDatastructure without a group name.'                 06419
         DC    X'00'                                                    06420
         ORG   ETAB2+(4*(JRINVALIDBUFTOKN-29000))                       06421
         DC    A(MJRINVALIDBUFTOKN)                                     06422
         ORG                                                            06423
MJRINVALIDBUFTOKN DC C'An incorrect CSM buffer token was provided.'     06424
         DC    X'00'                                                    06425
         ORG   ETAB2+(4*(JRMCTTLOPT-29000))                             06426
         DC    A(MJRMCTTLOPT)                                           06427
         ORG                                                            06428
MJRMCTTLOPT DC C'The value specified for multicast time to live isnot ' 06429
         DC    C'valid.'                                                06430
         DC    X'00'                                                    06431
         ORG   ETAB2+(4*(JRMCTTLOPTLERR-29000))                         06432
         DC    A(MJRMCTTLOPTLERR)                                       06433
         ORG                                                            06434
MJRMCTTLOPTLERR DC C'The value specified for option length is not vali' 06435
         DC    C'd.'                                                    06436
         DC    X'00'                                                    06437
         ORG   ETAB2+(4*(JRMCLOOPOPT-29000))                            06438
         DC    A(MJRMCLOOPOPT)                                          06439
         ORG                                                            06440
MJRMCLOOPOPT DC C'The value specified for multicast loopback is not va' 06441
         DC    C'lid.'                                                  06442
         DC    X'00'                                                    06443
         ORG   ETAB2+(4*(JRMCLOOPOPTLERR-29000))                        06444
         DC    A(MJRMCLOOPOPTLERR)                                      06445
         ORG                                                            06446
MJRMCLOOPOPTLERR DC C'The value specified for option length is not val' 06447
         DC    C'id.'                                                   06448
         DC    X'00'                                                    06449
         ORG   ETAB2+(4*(JRMCIFOPT-29000))                              06450
         DC    A(MJRMCIFOPT)                                            06451
         ORG                                                            06452
MJRMCIFOPT DC C'The value specified for multicast interface is not val' 06453
         DC    C'id.'                                                   06454
         DC    X'00'                                                    06455
         ORG   ETAB2+(4*(JRMCIFOPTLERR-29000))                          06456
         DC    A(MJRMCIFOPTLERR)                                        06457
         ORG                                                            06458
MJRMCIFOPTLERR DC C'The value specified for option length is not valid' 06459
         DC    C'.'                                                     06460
         DC    X'00'                                                    06461
         ORG   ETAB2+(4*(JRMCADDMEMOPT-29000))                          06462
         DC    A(MJRMCADDMEMOPT)                                        06463
         ORG                                                            06464
MJRMCADDMEMOPT DC C'The value specified for multicast add membership i' 06465
         DC    C's not valid.'                                          06466
         DC    X'00'                                                    06467
         ORG   ETAB2+(4*(JRMCADDMEMOPTLERR-29000))                      06468
         DC    A(MJRMCADDMEMOPTLERR)                                    06469
         ORG                                                            06470
MJRMCADDMEMOPTLERR DC C'The value specified for option length is not v' 06471
         DC    C'alid.'                                                 06472
         DC    X'00'                                                    06473
         ORG   ETAB2+(4*(JRMCDROPMEMOPT-29000))                         06474
         DC    A(MJRMCDROPMEMOPT)                                       06475
         ORG                                                            06476
MJRMCDROPMEMOPT DC C'The value specified for multicast drop membership' 06477
         DC    C' is not valid.'                                        06478
         DC    X'00'                                                    06479
         ORG   ETAB2+(4*(JRMCDROPMEMOPTLERR-29000))                     06480
         DC    A(MJRMCDROPMEMOPTLERR)                                   06481
         ORG                                                            06482
MJRMCDROPMEMOPTLERR DC C'The value specified for option length is not ' 06483
         DC    C'valid.'                                                06484
         DC    X'00'                                                    06485
         ORG   ETAB2+(4*(JRMCMAXMEM-29000))                             06486
         DC    A(MJRMCMAXMEM)                                           06487
         ORG                                                            06488
MJRMCMAXMEM DC C'The maximum number of groups per socket has been exce' 06489
         DC    C'eded.'                                                 06490
         DC    X'00'                                                    06491
         ORG   ETAB2+(4*(JRIESIZEMISMATCHADD-29000))                    06492
         DC    A(MJRIESIZEMISMATCHADD)                                  06493
         ORG                                                            06494
MJRIESIZEMISMATCHADD DC C'Request area was not large enough on add/rem' 06495
         DC    C'ove'                                                   06496
         DC    X'00'                                                    06497
         ORG   ETAB2+(4*(JRIESIZEMISMATCHGET-29000))                    06498
         DC    A(MJRIESIZEMISMATCHGET)                                  06499
         ORG                                                            06500
MJRIESIZEMISMATCHGET DC C'Request area was not large enough on get'     06501
         DC    X'00'                                                    06502
         ORG   ETAB2+(4*(JRIESIZEMISMATCHGETTABLE-29000))               06503
         DC    A(MJRIESIZEMISMATCHGETTABLE)                             06504
         ORG                                                            06505
MJRIESIZEMISMATCHGETTABLE DC C'Request area was not large enough on Ge' 06506
         DC    C't Table'                                               06507
         DC    X'00'                                                    06508
         ORG   ETAB2+(4*(JRIESIZEMISMATCHSETTABLE-29000))               06509
         DC    A(MJRIESIZEMISMATCHSETTABLE)                             06510
         ORG                                                            06511
MJRIESIZEMISMATCHSETTABLE DC C'Request area was not large enough on Se' 06512
         DC    C't Table'                                               06513
         DC    X'00'                                                    06514
         ORG   ETAB2+(4*(JRIEOUTCNTINVALID-29000))                      06515
         DC    A(MJRIEOUTCNTINVALID)                                    06516
         ORG                                                            06517
MJRIEOUTCNTINVALID DC C'cOutCnt is zero or less than the cInCnt'        06518
         DC    X'00'                                                    06519
         ORG   ETAB2+(4*(JRIEINCNTINVALID-29000))                       06520
         DC    A(MJRIEINCNTINVALID)                                     06521
         ORG                                                            06522
MJRIEINCNTINVALID DC C'cInCnt is zero'                                  06523
         DC    X'00'                                                    06524
         ORG   ETAB2+(4*(JRIEGETTABLEFLAGS-29000))                      06525
         DC    A(MJRIEGETTABLEFLAGS)                                    06526
         ORG                                                            06527
MJRIEGETTABLEFLAGS DC C'Flags set on a GetTable'                        06528
         DC    X'00'                                                    06529
         ORG   ETAB2+(4*(JRIEGETFLAGS-29000))                           06530
         DC    A(MJRIEGETFLAGS)                                         06531
         ORG                                                            06532
MJRIEGETFLAGS DC C'Flags set on a Get'                                  06533
         DC    X'00'                                                    06534
         ORG   ETAB2+(4*(JRIESETTABLEFLAGS-29000))                      06535
         DC    A(MJRIESETTABLEFLAGS)                                    06536
         ORG                                                            06537
MJRIESETTABLEFLAGS DC C'Flags set on a SetTable'                        06538
         DC    X'00'                                                    06539
         ORG   ETAB2+(4*(JRIESETFLAGS-29000))                           06540
         DC    A(MJRIESETFLAGS)                                         06541
         ORG                                                            06542
MJRIESETFLAGS DC C'Flags set on a Set'                                  06543
         DC    X'00'                                                    06544
         ORG   ETAB2+(4*(JRIEGETTABLEUNEXPECTED-29000))                 06545
         DC    A(MJRIEGETTABLEUNEXPECTED)                               06546
         ORG                                                            06547
MJRIEGETTABLEUNEXPECTED DC C'Unexpected error on GetTable'              06548
         DC    X'00'                                                    06549
         ORG   ETAB2+(4*(JRIEGETUNEXPECTED-29000))                      06550
         DC    A(MJRIEGETUNEXPECTED)                                    06551
         ORG                                                            06552
MJRIEGETUNEXPECTED DC C'Unexpected error on Get'                        06553
         DC    X'00'                                                    06554
         ORG   ETAB2+(4*(JRIESETTABLEUNEXPECTED-29000))                 06555
         DC    A(MJRIESETTABLEUNEXPECTED)                               06556
         ORG                                                            06557
MJRIESETTABLEUNEXPECTED DC C'Unexpected error on SetTable'              06558
         DC    X'00'                                                    06559
         ORG   ETAB2+(4*(JRIESETUNEXPECTED-29000))                      06560
         DC    A(MJRIESETUNEXPECTED)                                    06561
         ORG                                                            06562
MJRIESETUNEXPECTED DC C'Unexpected error on Set'                        06563
         DC    X'00'                                                    06564
         ORG   ETAB2+(4*(JRIERECOVERYERROR-29000))                      06565
         DC    A(MJRIERECOVERYERROR)                                    06566
         ORG                                                            06567
MJRIERECOVERYERROR DC C'Unexpected error on Recovery'                   06568
         DC    X'00'                                                    06569
         ORG   ETAB2+(4*(JRIEPROFILEERROR-29000))                       06570
         DC    A(MJRIEPROFILEERROR)                                     06571
         ORG                                                            06572
MJRIEPROFILEERROR DC C'Unexpected error during profile processing'      06573
         DC    X'00'                                                    06574
         ORG   ETAB2+(4*(JRIEADDIFCIOCTLTYPE-29000))                    06575
         DC    A(MJRIEADDIFCIOCTLTYPE)                                  06576
         ORG                                                            06577
MJRIEADDIFCIOCTLTYPE DC C'Attempt to add an ifcioctl with ifhtype not ' 06578
         DC    C'iflifc'                                                06579
         DC    X'00'                                                    06580
         ORG   ETAB2+(4*(JRIEUNKNOWNIFCIOCTLTYPE-29000))                06581
         DC    A(MJRIEUNKNOWNIFCIOCTLTYPE)                              06582
         ORG                                                            06583
MJRIEUNKNOWNIFCIOCTLTYPE DC C'Unknown ifcioctl Type attempted'          06584
         DC    X'00'                                                    06585
         ORG   ETAB2+(4*(JRTCPTCPIPERROR-29000))                        06586
         DC    A(MJRTCPTCPIPERROR)                                      06587
         ORG                                                            06588
MJRTCPTCPIPERROR DC C'Refer to TSRB return and reason codes'            06589
         DC    X'00'                                                    06590
         ORG   ETAB2+(4*(JRTCPINVALIDTCPIPNAME-29000))                  06591
         DC    A(MJRTCPINVALIDTCPIPNAME)                                06592
         ORG                                                            06593
MJRTCPINVALIDTCPIPNAME DC C'Invalid Tsrb_Tcpip_Name'                    06594
         DC    X'00'                                                    06595
         ORG   ETAB2+(4*(JRTCPINVALIDREQUESTCODE-29000))                06596
         DC    A(MJRTCPINVALIDREQUESTCODE)                              06597
         ORG                                                            06598
MJRTCPINVALIDREQUESTCODE DC C'Invalid Tsrb_Request_Code'                06599
         DC    X'00'                                                    06600
         ORG   ETAB2+(4*(JRTCPNOTINSTALLEDORUP-29000))                  06601
         DC    A(MJRTCPNOTINSTALLEDORUP)                                06602
         ORG                                                            06603
MJRTCPNOTINSTALLEDORUP DC C'TCPIP not installed or active'              06604
         DC    X'00'                                                    06605
         ORG   ETAB2+(4*(JRTCPINVDELETE-29000))                         06606
         DC    A(MJRTCPINVDELETE)                                       06607
         ORG                                                            06608
MJRTCPINVDELETE DC C'The delete requestor did not create the connectio' 06609
         DC    C'n'                                                     06610
         DC    X'00'                                                    06611
         ORG   ETAB2+(4*(JRTCPINVUSERDATA-29000))                       06612
         DC    A(MJRTCPINVUSERDATA)                                     06613
         ORG                                                            06614
MJRTCPINVUSERDATA DC C'Request contained invalid user data'             06615
         DC    X'00'                                                    06616
         ORG   ETAB2+(4*(JRSKCIBINVALIDMESSAGE-29000))                  06617
         DC    A(MJRSKCIBINVALIDMESSAGE)                                06618
         ORG                                                            06619
MJRSKCIBINVALIDMESSAGE DC C'Invalid IOCTL message type'                 06620
         DC    X'00'                                                    06621
         ORG   ETAB2+(4*(JRSKCIBALREADYSLEEPING1-29000))                06622
         DC    A(MJRSKCIBALREADYSLEEPING1)                              06623
         ORG                                                            06624
MJRSKCIBALREADYSLEEPING1 DC C'Recursive context sleep'                  06625
         DC    X'00'                                                    06626
         ORG   ETAB2+(4*(JRSKDKINOTREADQUEUE-29000))                    06627
         DC    A(MJRSKDKINOTREADQUEUE)                                  06628
         ORG                                                            06629
MJRSKDKINOTREADQUEUE DC C'Invalid queue for find open/close'            06630
         DC    X'00'                                                    06631
         ORG   ETAB2+(4*(JRSKDKINOTWRITEQUEUE-29000))                   06632
         DC    A(MJRSKDKINOTWRITEQUEUE)                                 06633
         ORG                                                            06634
MJRSKDKINOTWRITEQUEUE DC C'Invalid queue for find poll/iocport'         06635
         DC    X'00'                                                    06636
         ORG   ETAB2+(4*(JRSKDKIBADFINDTYPE-29000))                     06637
         DC    A(MJRSKDKIBADFINDTYPE)                                   06638
         ORG                                                            06639
MJRSKDKIBADFINDTYPE DC C'Invalid type for find'                         06640
         DC    X'00'                                                    06641
         ORG   ETAB2+(4*(JRSKDKINOTFOUND-29000))                        06642
         DC    A(MJRSKDKINOTFOUND)                                      06643
         ORG                                                            06644
MJRSKDKINOTFOUND DC C'No such device/module for find'                   06645
         DC    X'00'                                                    06646
         ORG   ETAB2+(4*(JRSKDKIBADQGETTYPE-29000))                     06647
         DC    A(MJRSKDKIBADQGETTYPE)                                   06648
         ORG                                                            06649
MJRSKDKIBADQGETTYPE DC C'Invalid type for queue get info'               06650
         DC    X'00'                                                    06651
         ORG   ETAB2+(4*(JRSKDKIBADQSETTYPE-29000))                     06652
         DC    A(MJRSKDKIBADQSETTYPE)                                   06653
         ORG                                                            06654
MJRSKDKIBADQSETTYPE DC C'Invalid type for queue set info'               06655
         DC    X'00'                                                    06656
         ORG   ETAB2+(4*(JRSKHEDBADOPEN-29000))                         06657
         DC    A(MJRSKHEDBADOPEN)                                       06658
         ORG                                                            06659
MJRSKHEDBADOPEN DC C'Open of stream head driver not allowed'            06660
         DC    X'00'                                                    06661
         ORG   ETAB2+(4*(JRSKMNTBADMESSAGE-29000))                      06662
         DC    A(MJRSKMNTBADMESSAGE)                                    06663
         ORG                                                            06664
MJRSKMNTBADMESSAGE DC C'Invalid message type'                           06665
         DC    X'00'                                                    06666
         ORG   ETAB2+(4*(JRSKMNTSNOOPERALREADYACTIVE-29000))            06667
         DC    A(MJRSKMNTSNOOPERALREADYACTIVE)                          06668
         ORG                                                            06669
MJRSKMNTSNOOPERALREADYACTIVE DC C'Snooper module previously pushed'     06670
         DC    X'00'                                                    06671
         ORG   ETAB2+(4*(JRSKMNTSNOOPERNOTACTIVE-29000))                06672
         DC    A(MJRSKMNTSNOOPERNOTACTIVE)                              06673
         ORG                                                            06674
MJRSKMNTSNOOPERNOTACTIVE DC C'Snooper module not previously pushed'     06675
         DC    X'00'                                                    06676
         ORG   ETAB2+(4*(JRSKSTOBADINDEX-29000))                        06677
         DC    A(MJRSKSTOBADINDEX)                                      06678
         ORG                                                            06679
MJRSKSTOBADINDEX DC C'Invalid starting index for STREAMOP'              06680
         DC    X'00'                                                    06681
         ORG   ETAB2+(4*(JRSKSTOBADSTREAM-29000))                       06682
         DC    A(MJRSKSTOBADSTREAM)                                     06683
         ORG                                                            06684
MJRSKSTOBADSTREAM DC C'Invalid stream address for STREAMOP'             06685
         DC    X'00'                                                    06686
         ORG   ETAB2+(4*(JRSKSTOBADMESSAGETYPE-29000))                  06687
         DC    A(MJRSKSTOBADMESSAGETYPE)                                06688
         ORG                                                            06689
MJRSKSTOBADMESSAGETYPE DC C'Invalid message type for read'              06690
         DC    X'00'                                                    06691
         ORG   ETAB2+(4*(JRSKSTONOEMPTYMESSAGES-29000))                 06692
         DC    A(MJRSKSTONOEMPTYMESSAGES)                               06693
         ORG                                                            06694
MJRSKSTONOEMPTYMESSAGES DC C'Zero message length invalid for write'     06695
         DC    X'00'                                                    06696
         ORG   ETAB2+(4*(JRSKSTOMESSAGETOOSHORT-29000))                 06697
         DC    A(MJRSKSTOMESSAGETOOSHORT)                               06698
         ORG                                                            06699
MJRSKSTOMESSAGETOOSHORT DC C'Message length too short for write'        06700
         DC    X'00'                                                    06701
         ORG   ETAB2+(4*(JRSKSTONOCONTROLPART1-29000))                  06702
         DC    A(MJRSKSTONOCONTROLPART1)                                06703
         ORG                                                            06704
MJRSKSTONOCONTROLPART1 DC C'No control part for putpmsg'                06705
         DC    X'00'                                                    06706
         ORG   ETAB2+(4*(JRSKSTOBADMESSAGELENGTH1-29000))               06707
         DC    A(MJRSKSTOBADMESSAGELENGTH1)                             06708
         ORG                                                            06709
MJRSKSTOBADMESSAGELENGTH1 DC C'Invalid message length for putpmsg'      06710
         DC    X'00'                                                    06711
         ORG   ETAB2+(4*(JRSKSTOBADMESSAGELENGTH2-29000))               06712
         DC    A(MJRSKSTOBADMESSAGELENGTH2)                             06713
         ORG                                                            06714
MJRSKSTOBADMESSAGELENGTH2 DC C'Invalid message length for lputpmsg'     06715
         DC    X'00'                                                    06716
         ORG   ETAB2+(4*(JRSKSTOBADCONTROLINFORMATION-29000))           06717
         DC    A(MJRSKSTOBADCONTROLINFORMATION)                         06718
         ORG                                                            06719
MJRSKSTOBADCONTROLINFORMATION DC C'Invalid control information for fdi' 06720
         DC    C'nsert'                                                 06721
         DC    X'00'                                                    06722
         ORG   ETAB2+(4*(JRSKSTONOMESSAGES-29000))                      06723
         DC    A(MJRSKSTONOMESSAGES)                                    06724
         ORG                                                            06725
MJRSKSTONOMESSAGES DC C'No queued messages for getband'                 06726
         DC    X'00'                                                    06727
         ORG   ETAB2+(4*(JRSKSTORESOURCESHORTAGE2-29000))               06728
         DC    A(MJRSKSTORESOURCESHORTAGE2)                             06729
         ORG                                                            06730
MJRSKSTORESOURCESHORTAGE2 DC C'Unable to get triple for M_READ message' 06731
         DC    X'00'                                                    06732
         ORG   ETAB2+(4*(JRSKSTORESOURCESHORTAGE3-29000))               06733
         DC    A(MJRSKSTORESOURCESHORTAGE3)                             06734
         ORG                                                            06735
MJRSKSTORESOURCESHORTAGE3 DC C'Unable to get triple for M_IOCTL messag' 06736
         DC    C'e'                                                     06737
         DC    X'00'                                                    06738
         ORG   ETAB2+(4*(JRSKVRBBADOPTION1-29000))                      06739
         DC    A(MJRSKVRBBADOPTION1)                                    06740
         ORG                                                            06741
MJRSKVRBBADOPTION1 DC C'Invalid option for open'                        06742
         DC    X'00'                                                    06743
         ORG   ETAB2+(4*(JRSKVRBNOTUP-29000))                           06744
         DC    A(MJRSKVRBNOTUP)                                         06745
         ORG                                                            06746
MJRSKVRBNOTUP DC C'System not initialized'                              06747
         DC    X'00'                                                    06748
         ORG   ETAB2+(4*(JRSKVRBBADNAME-29000))                         06749
         DC    A(MJRSKVRBBADNAME)                                       06750
         ORG                                                            06751
MJRSKVRBBADNAME DC C'Invalid name for push'                             06752
         DC    X'00'                                                    06753
         ORG   ETAB2+(4*(JRSKVRBNORESOURCES1-29000))                    06754
         DC    A(MJRSKVRBNORESOURCES1)                                  06755
         ORG                                                            06756
MJRSKVRBNORESOURCES1 DC C'Unable to allocate queues for push'           06757
         DC    X'00'                                                    06758
         ORG   ETAB2+(4*(JRSKVRBNOTHINGPUSHED1-29000))                  06759
         DC    A(MJRSKVRBNOTHINGPUSHED1)                                06760
         ORG                                                            06761
MJRSKVRBNOTHINGPUSHED1 DC C'No pushed module exists for pop'            06762
         DC    X'00'                                                    06763
         ORG   ETAB2+(4*(JRSKVRBNOTMULTIPLEXED-29000))                  06764
         DC    A(MJRSKVRBNOTMULTIPLEXED)                                06765
         ORG                                                            06766
MJRSKVRBNOTMULTIPLEXED DC C'Driver not multiplexed for link'            06767
         DC    X'00'                                                    06768
         ORG   ETAB2+(4*(JRSKVRBNOTLINKED-29000))                       06769
         DC    A(MJRSKVRBNOTLINKED)                                     06770
         ORG                                                            06771
MJRSKVRBNOTLINKED DC C'No linked driver/module for unlink'              06772
         DC    X'00'                                                    06773
         ORG   ETAB2+(4*(JRSKVRBBADTYPE-29000))                         06774
         DC    A(MJRSKVRBBADTYPE)                                       06775
         ORG                                                            06776
MJRSKVRBBADTYPE DC C'Invalid type for flush'                            06777
         DC    X'00'                                                    06778
         ORG   ETAB2+(4*(JRSKVRBNORESOURCES2-29000))                    06779
         DC    A(MJRSKVRBNORESOURCES2)                                  06780
         ORG                                                            06781
MJRSKVRBNORESOURCES2 DC C'Unable to get triple for M_FLUSH message'     06782
         DC    X'00'                                                    06783
         ORG   ETAB2+(4*(JRSKVRBBADMASK-29000))                         06784
         DC    A(MJRSKVRBBADMASK)                                       06785
         ORG                                                            06786
MJRSKVRBBADMASK DC C'Invalid signal mask for setsig'                    06787
         DC    X'00'                                                    06788
         ORG   ETAB2+(4*(JRSKVRBBADACTION-29000))                       06789
         DC    A(MJRSKVRBBADACTION)                                     06790
         ORG                                                            06791
MJRSKVRBBADACTION DC C'Invalid action for setsig'                       06792
         DC    X'00'                                                    06793
         ORG   ETAB2+(4*(JRSKVRBBADID-29000))                           06794
         DC    A(MJRSKVRBBADID)                                         06795
         ORG                                                            06796
MJRSKVRBBADID DC C'Invalid identifier for spgrp'                        06797
         DC    X'00'                                                    06798
         ORG   ETAB2+(4*(JRSKVRBBADFLAG-29000))                         06799
         DC    A(MJRSKVRBBADFLAG)                                       06800
         ORG                                                            06801
MJRSKVRBBADFLAG DC C'Invalid flag for spgrp'                            06802
         DC    X'00'                                                    06803
         ORG   ETAB2+(4*(JRSKVRBNOERRNO-29000))                         06804
         DC    A(MJRSKVRBNOERRNO)                                       06805
         ORG                                                            06806
MJRSKVRBNOERRNO DC C'No error number for spgrp'                         06807
         DC    X'00'                                                    06808
         ORG   ETAB2+(4*(JRSKVRBBADOPTION2-29000))                      06809
         DC    A(MJRSKVRBBADOPTION2)                                    06810
         ORG                                                            06811
MJRSKVRBBADOPTION2 DC C'Invalid behavior option for srdopt'             06812
         DC    X'00'                                                    06813
         ORG   ETAB2+(4*(JRSKVRBBADOPTION3-29000))                      06814
         DC    A(MJRSKVRBBADOPTION3)                                    06815
         ORG                                                            06816
MJRSKVRBBADOPTION3 DC C'Invalid message option for srdopt'              06817
         DC    X'00'                                                    06818
         ORG   ETAB2+(4*(JRSKVRBBADOPTION4-29000))                      06819
         DC    A(MJRSKVRBBADOPTION4)                                    06820
         ORG                                                            06821
MJRSKVRBBADOPTION4 DC C'Invalid length option for swropt'               06822
         DC    X'00'                                                    06823
         ORG   ETAB2+(4*(JRSKVRBBADCLASS1-29000))                       06824
         DC    A(MJRSKVRBBADCLASS1)                                     06825
         ORG                                                            06826
MJRSKVRBBADCLASS1 DC C'Invalid IOCTL class for str'                     06827
         DC    X'00'                                                    06828
         ORG   ETAB2+(4*(JRSKVRBBADCLASS2-29000))                       06829
         DC    A(MJRSKVRBBADCLASS2)                                     06830
         ORG                                                            06831
MJRSKVRBBADCLASS2 DC C'Invalid IOCTL class for transprnt'               06832
         DC    X'00'                                                    06833
         ORG   ETAB2+(4*(JRSKVRBNORESOURCES3-29000))                    06834
         DC    A(MJRSKVRBNORESOURCES3)                                  06835
         ORG                                                            06836
MJRSKVRBNORESOURCES3 DC C'Unable to get triple for M_IOCTL message'     06837
         DC    X'00'                                                    06838
         ORG   ETAB2+(4*(JRSKVRBNOTHINGPUSHED2-29000))                  06839
         DC    A(MJRSKVRBNOTHINGPUSHED2)                                06840
         ORG                                                            06841
MJRSKVRBNOTHINGPUSHED2 DC C'No module pushed for look'                  06842
         DC    X'00'                                                    06843
         ORG   ETAB2+(4*(JRSKASMBADTYPE-29000))                         06844
         DC    A(MJRSKASMBADTYPE)                                       06845
         ORG                                                            06846
MJRSKASMBADTYPE DC C'Invalid type for ?SKASM(*RANGE)'                   06847
         DC    X'00'                                                    06848
         ORG   ETAB2+(4*(JRSKSACNOSTREAM-29000))                        06849
         DC    A(MJRSKSACNOSTREAM)                                      06850
         ORG                                                            06851
MJRSKSACNOSTREAM DC C'Invalid stream @ for ?SKSAC(*ACCESS)'             06852
         DC    X'00'                                                    06853
         ORG   ETAB2+(4*(JRSKSACLINKEDSTREAM-29000))                    06854
         DC    A(MJRSKSACLINKEDSTREAM)                                  06855
         ORG                                                            06856
MJRSKSACLINKEDSTREAM DC C'Invalid stream for ?SKSAC(*ACCESS)'           06857
         DC    X'00'                                                    06858
         ORG   ETAB2+(4*(JRMULTIPLEREAD-29000))                         06859
         DC    A(MJRMULTIPLEREAD)                                       06860
         ORG                                                            06861
MJRMULTIPLEREAD DC C'A request to receive data is already outstanding.' 06862
         DC    C')'                                                     06863
         DC    X'00'                                                    06864
         ORG   ETAB2+(4*(JRDEVICEMPCHLCSINVALID-29000))                 06865
         DC    A(MJRDEVICEMPCHLCSINVALID)                               06866
         ORG                                                            06867
MJRDEVICEMPCHLCSINVALID DC C'A MPC HPDT/LCS link was defined for an in' 06868
         DC    C'correct device type.'                                  06869
         DC    X'00'                                                    06870
         ORG   ETAB2+(4*(JRCMCONFIGURED-29000))                         06871
         DC    A(MJRCMCONFIGURED)                                       06872
         ORG                                                            06873
MJRCMCONFIGURED DC C'Cache Manager has been configured for this server' 06874
         DC    C' socket.'                                              06875
         DC    X'00'                                                    06876
         ORG   ETAB2+(4*(JRCMNOLOG-29000))                              06877
         DC    A(MJRCMNOLOG)                                            06878
         ORG                                                            06879
MJRCMNOLOG DC C'Cache Manager Configuration parameter does not include' 06880
         DC    C' the size of the log file.'                            06881
         DC    X'00'                                                    06882
         ORG   ETAB2+(4*(JRCMNOCACHE-29000))                            06883
         DC    A(MJRCMNOCACHE)                                          06884
         ORG                                                            06885
MJRCMNOCACHE DC C'Cache Manager Configuration parameter does not inclu' 06886
         DC    C'de the size of the cache file.'                        06887
         DC    X'00'                                                    06888
         ORG   ETAB2+(4*(JRCMSERVERNOTFOUND-29000))                     06889
         DC    A(MJRCMSERVERNOTFOUND)                                   06890
         ORG                                                            06891
MJRCMSERVERNOTFOUND DC C'Cache Manager has not been configured for thi' 06892
         DC    C's server socket.'                                      06893
         DC    X'00'                                                    06894
         ORG   ETAB2+(4*(JRCMCANTLOAD-29000))                           06895
         DC    A(MJRCMCANTLOAD)                                         06896
         ORG                                                            06897
MJRCMCANTLOAD DC C'Invalid Dynamic Exit load module name specified in ' 06898
         DC    C'the Config IOCTL parameters.'                          06899
         DC    X'00'                                                    06900
         ORG   ETAB2+(4*(JRCMNOSTORAGE-29000))                          06901
         DC    A(MJRCMNOSTORAGE)                                        06902
         ORG                                                            06903
MJRCMNOSTORAGE DC C'Cache Manager encountered storage shortage.'        06904
         DC    X'00'                                                    06905
         ORG   ETAB2+(4*(JRCMNOCSM-29000))                              06906
         DC    A(MJRCMNOCSM)                                            06907
         ORG                                                            06908
MJRCMNOCSM DC C'Cache Manager encountered a CSM storage shortage.'      06909
         DC    X'00'                                                    06910
         ORG   ETAB2+(4*(JRCMNOTCONFIGURED-29000))                      06911
         DC    A(MJRCMNOTCONFIGURED)                                    06912
         ORG                                                            06913
MJRCMNOTCONFIGURED DC C'Cache Manager has not been configured for this' 06914
         DC    C' server socket.'                                       06915
         DC    X'00'                                                    06916
         ORG   ETAB2+(4*(JRNOTCMAUTHORIZED-29000))                      06917
         DC    A(MJRNOTCMAUTHORIZED)                                    06918
         ORG                                                            06919
MJRNOTCMAUTHORIZED DC C'User is not allowed to use Cache Manager funct' 06920
         DC    C'ion.'                                                  06921
         DC    X'00'                                                    06922
         ORG   ETAB2+(4*(JRCMPARMNOTVALID-29000))                       06923
         DC    A(MJRCMPARMNOTVALID)                                     06924
         ORG                                                            06925
MJRCMPARMNOTVALID DC C'Invalid parameters used in Cache Manager IOCTL ' 06926
         DC    C'call.'                                                 06927
         DC    X'00'                                                    06928
         ORG   ETAB2+(4*(JRCMLOADMODBAD-29000))                         06929
         DC    A(MJRCMLOADMODBAD)                                       06930
         ORG                                                            06931
MJRCMLOADMODBAD DC C'Invalid Dynamic Exit load module name specified i' 06932
         DC    C'n the Config IOCTL parameters.'                        06933
         DC    X'00'                                                    06934
         ORG   ETAB2+(4*(JRUWCONOTFOUND-29000))                         06935
         DC    A(MJRUWCONOTFOUND)                                       06936
         ORG                                                            06937
MJRUWCONOTFOUND DC C'Cache Manager has not been configured for this se' 06938
         DC    C'rver socket.'                                          06939
         DC    X'00'                                                    06940
         ORG   ETAB2+(4*(JRUWCOSTORAGEFAILED-29000))                    06941
         DC    A(MJRUWCOSTORAGEFAILED)                                  06942
         ORG                                                            06943
MJRUWCOSTORAGEFAILED DC C'Cache Manager encountered storage shortage.'  06944
         DC    X'00'                                                    06945
         ORG   ETAB2+(4*(JRUWCTSTORAGEFAILED-29000))                    06946
         DC    A(MJRUWCTSTORAGEFAILED)                                  06947
         ORG                                                            06948
MJRUWCTSTORAGEFAILED DC C'Cache Manager encountered storage shortage.'  06949
         DC    X'00'                                                    06950
         ORG   ETAB2+(4*(JRUWHTSTORAGEFAILED-29000))                    06951
         DC    A(MJRUWHTSTORAGEFAILED)                                  06952
         ORG                                                            06953
MJRUWHTSTORAGEFAILED DC C'Cache Manager encountered storage shortage.'  06954
         DC    X'00'                                                    06955
         ORG   ETAB2+(4*(JRUWCTFULL-29000))                             06956
         DC    A(MJRUWCTFULL)                                           06957
         ORG                                                            06958
MJRUWCTFULL DC C'Cache Manager table has been filled.'                  06959
         DC    X'00'                                                    06960
         ORG   ETAB2+(4*(JRCMNOOBJECTS-29000))                          06961
         DC    A(MJRCMNOOBJECTS)                                        06962
         ORG                                                            06963
MJRCMNOOBJECTS DC C'Maximum number of objects has been reached.'        06964
         DC    X'00'                                                    06965
         ORG   ETAB2+(4*(JRCMDISABLE-29000))                            06966
         DC    A(MJRCMDISABLE)                                          06967
         ORG                                                            06968
MJRCMDISABLE DC C'Cache Manager is not allowed for this TCP/IP stack'   06969
         DC    X'00'                                                    06970
         ORG   ETAB2+(4*(JRCMLSOCKBADSTATE-29000))                      06971
         DC    A(MJRCMLSOCKBADSTATE)                                    06972
         ORG                                                            06973
MJRCMLSOCKBADSTATE DC C'Cache Manager Server is not in the LISTEN stat' 06974
         DC    C'e'                                                     06975
         DC    X'00'                                                    06976
         ORG   ETAB2+(4*(JRCMDESTROYFAILURE-29000))                     06977
         DC    A(MJRCMDESTROYFAILURE)                                   06978
         ORG                                                            06979
MJRCMDESTROYFAILURE DC C'Cache Manager Storage cannot be removed'       06980
         DC    X'00'                                                    06981
         ORG   ETAB2+(4*(JRCMBADCONFIGDATA-29000))                      06982
         DC    A(MJRCMBADCONFIGDATA)                                    06983
         ORG                                                            06984
MJRCMBADCONFIGDATA DC C'Cache Manager cannot call the DGW exits'        06985
         DC    X'00'                                                    06986
         ORG   ETAB2+(4*(JRCMCACHEOBJLIMIT-29000))                      06987
         DC    A(MJRCMCACHEOBJLIMIT)                                    06988
         ORG                                                            06989
MJRCMCACHEOBJLIMIT DC C'Cache Manager maximum number of objects has be' 06990
         DC    C'en reached.'                                           06991
         DC    X'00'                                                    06992
         ORG   ETAB2+(4*(JRCMCACHESPACELIMIT-29000))                    06993
         DC    A(MJRCMCACHESPACELIMIT)                                  06994
         ORG                                                            06995
MJRCMCACHESPACELIMIT DC C'Cache Manager Buffer is filled.'              06996
         DC    X'00'                                                    06997
         ORG   ETAB2+(4*(JRCMCACHEOBJNOTFOUND-29000))                   06998
         DC    A(MJRCMCACHEOBJNOTFOUND)                                 06999
         ORG                                                            07000
MJRCMCACHEOBJNOTFOUND DC C'Cache Manager Object is not found'           07001
         DC    X'00'                                                    07002
         ORG   ETAB2+(4*(JRDYNADDCXFAILURE-29000))                      07003
         DC    A(MJRDYNADDCXFAILURE)                                    07004
         ORG                                                            07005
MJRDYNADDCXFAILURE DC C'Cannot add new connection to Dynnamic exits'    07006
         DC    X'00'                                                    07007
         ORG   ETAB2+(4*(JRDYNDELCXFAILURE-29000))                      07008
         DC    A(MJRDYNDELCXFAILURE)                                    07009
         ORG                                                            07010
MJRDYNDELCXFAILURE DC C'Cannot delete a connection from Dynnamic exits' 07011
         DC    X'00'                                                    07012
         ORG   ETAB2+(4*(JRDYNTIMERFAILURE-29000))                      07013
         DC    A(MJRDYNTIMERFAILURE)                                    07014
         ORG                                                            07015
MJRDYNTIMERFAILURE DC C'Cannot start the timer from Dynnamic exits'     07016
         DC    X'00'                                                    07017
         ORG   ETAB2+(4*(JRDYNRECOVERYFAILURE-29000))                   07018
         DC    A(MJRDYNRECOVERYFAILURE)                                 07019
         ORG                                                            07020
MJRDYNRECOVERYFAILURE DC C'Cannot start the recovery from Dynnamic exi' 07021
         DC    C'ts'                                                    07022
         DC    X'00'                                                    07023
         ORG   ETAB2+(4*(JRCMIOVPNOTVALID-29000))                       07024
         DC    A(MJRCMIOVPNOTVALID)                                     07025
         ORG                                                            07026
MJRCMIOVPNOTVALID DC C'Invalid IOV buffer passed in the load request'   07027
         DC    X'00'                                                    07028
         ORG   ETAB2+(4*(JRCMLOGFULL-29000))                            07029
         DC    A(MJRCMLOGFULL)                                          07030
         ORG                                                            07031
MJRCMLOGFULL DC C'LogBuffer is Full'                                    07032
         DC    X'00'                                                    07033
         ORG   ETAB2+(4*(JRCMSGDATAINVALID-29000))                      07034
         DC    A(MJRCMSGDATAINVALID)                                    07035
         ORG                                                            07036
MJRCMSGDATAINVALID DC C'cmsghdr data has an incorrect value'            07037
         DC    X'00'                                                    07038
         ORG   ETAB2+(4*(JRDVIPAALREADYACTIVE-29000))                   07039
         DC    A(MJRDVIPAALREADYACTIVE)                                 07040
         ORG                                                            07041
MJRDVIPAALREADYACTIVE DC C'The Dynamic VIPA activated via IOCTL was al' 07042
         DC    C'ready active.'                                         07043
         DC    X'00'                                                    07044
         ORG   ETAB2+(4*(JRDVIPANOTINVIPARANGE-29000))                  07045
         DC    A(MJRDVIPANOTINVIPARANGE)                                07046
         ORG                                                            07047
MJRDVIPANOTINVIPARANGE DC C'The Dynamic VIPA was not in any defined VI' 07048
         DC    C'PARange.'                                              07049
         DC    X'00'                                                    07050
         ORG   ETAB2+(4*(JRDVIPACONFLICTDVIPA-29000))                   07051
         DC    A(MJRDVIPACONFLICTDVIPA)                                 07052
         ORG                                                            07053
MJRDVIPACONFLICTDVIPA DC C'The Dynamic VIPA selected is already define' 07054
         DC    C'd via VIPADEFine or VIPABackup.'                       07055
         DC    X'00'                                                    07056
         ORG   ETAB2+(4*(JRDVIPACONFLICTIPADDR-29000))                  07057
         DC    A(MJRDVIPACONFLICTIPADDR)                                07058
         ORG                                                            07059
MJRDVIPACONFLICTIPADDR DC C'The Dynamic VIPA selected is already activ' 07060
         DC    C'e as a standard IP address.'                           07061
         DC    X'00'                                                    07062
         ORG   ETAB2+(4*(JRTOOMANYDVIPAS-29000))                        07063
         DC    A(MJRTOOMANYDVIPAS)                                      07064
         ORG                                                            07065
MJRTOOMANYDVIPAS DC C'The maximum allowed number of DVIPAs is already ' 07066
         DC    C'defined.'                                              07067
         DC    X'00'                                                    07068
         ORG   ETAB2+(4*(JRDVIPANOTDEFINED-29000))                      07069
         DC    A(MJRDVIPANOTDEFINED)                                    07070
         ORG                                                            07071
MJRDVIPANOTDEFINED DC C'The Dynamic VIPA selected for deletion was not' 07072
         DC    C' defined here.'                                        07073
         DC    X'00'                                                    07074
         ORG   ETAB2+(4*(JRNODUAVAILABLE-29000))                        07075
         DC    A(MJRNODUAVAILABLE)                                      07076
         ORG                                                            07077
MJRNODUAVAILABLE DC C'TCP/IP cannot create a dispatchable unit to proc' 07078
         DC    C'ess the request.  Either TCP/IP is not active or ther' 07079
         DC    C'e is insufficient common storage available.'           07080
         DC    X'00'                                                    07081
         ORG   ETAB2+(4*(JRPORTUNAVAILABLE-29000))                      07082
         DC    A(MJRPORTUNAVAILABLE)                                    07083
         ORG                                                            07084
MJRPORTUNAVAILABLE DC C'The requested port is marked reserved and is n' 07085
         DC    C'ot available to any application.'                      07086
         DC    X'00'                                                    07087
         ORG   ETAB2+(4*(JRAFOPNOTSUPPORTED-29000))                     07088
         DC    A(MJRAFOPNOTSUPPORTED)                                   07089
         ORG                                                            07090
MJRAFOPNOTSUPPORTED DC C'The operation is not supported for a socket i' 07091
         DC    C'n this address family.'                                07092
         DC    X'00'                                                    07093
         ORG   ETAB2+(4*(JRCANNOTMAPSOCKADDR-29000))                    07094
         DC    A(MJRCANNOTMAPSOCKADDR)                                  07095
         ORG                                                            07096
MJRCANNOTMAPSOCKADDR DC C'The socket address provided by the applicati' 07097
         DC    C'on on this call cannot be mapped to an IPv4 socket ad' 07098
         DC    C'dress.'                                                07099
         DC    X'00'                                                    07100
         ORG   ETAB2+(4*(JRNETACCESSDENIED-29000))                      07101
         DC    A(MJRNETACCESSDENIED)                                    07102
         ORG                                                            07103
MJRNETACCESSDENIED DC C'The user is not permitted to communicate with ' 07104
         DC    C'the specified network.'                                07105
         DC    X'00'                                                    07106
         ORG   ETAB2+(4*(JRNOTAUTHSTACK-29000))                         07107
         DC    A(MJRNOTAUTHSTACK)                                       07108
         ORG                                                            07109
MJRNOTAUTHSTACK DC C'Userid is not authorized to access the TCP/IP Sta' 07110
         DC    C'ck'                                                    07111
         DC    X'00'                                                    07112
         ORG   ETAB2+(4*(JRNOTAUTHPORT-29000))                          07113
         DC    A(MJRNOTAUTHPORT)                                        07114
         ORG                                                            07115
MJRNOTAUTHPORT DC C'Userid is not authorized to access the reserved  T' 07116
         DC    C'CP/IP Port'                                            07117
         DC    X'00'                                                    07118
         ORG   ETAB2+(4*(JRFRCARESET-29000))                            07119
         DC    A(MJRFRCARESET)                                          07120
         ORG                                                            07121
MJRFRCARESET DC C'FRCA connection timer expired. Connection is being d' 07122
         DC    C'ropped.'                                               07123
         DC    X'00'                                                    07124
         AIF   ('&SYSTEM_ID'(1,4) NE 'z/OS').NOTZOS4                    07125
         ORG   ETAB2+(4*(JRNOCSASTORAGE-29000))                         07126
         DC    A(MJRNOCSASTORAGE)                                       07127
         ORG                                                            07128
MJRNOCSASTORAGE DC C'TCP/IP cannot process the request because there i' 07129
         DC    C's insufficient common storage available'               07130
         DC    X'00'                                                    07131
         ORG   ETAB2+(4*(JRZEROPORTDVIPA-29000))                        07132
         DC    A(MJRZEROPORTDVIPA)                                      07133
         ORG                                                            07134
MJRZEROPORTDVIPA DC C'No Distributed VIPA/port match was found.'        07135
         DC    X'00'                                                    07136
         ORG   ETAB2+(4*(JRRACFBLANKEXISTS-29000))                      07137
         DC    A(MJRRACFBLANKEXISTS)                                    07138
         ORG                                                            07139
MJRRACFBLANKEXISTS DC C'Blanks exist in the entity buffer passed on a ' 07140
         DC    C'RACROUTE call.'                                        07141
         DC    X'00'                                                    07142
.NOTZOS4 ANOP                                                           07143
         EJECT                                                          07144
WORKAREA DSECT                                                          07145
         DS    26F                                                      07146
WORKLEN  EQU   *-WORKAREA                                               07147
         SPACE                                                          07148
PARMS    DSECT                                                          07149
PERRNO   DS    A        THE ERRNO TO UNRAVEL                            07150
PLEN     DS    A        POINTS TO AN INT TO RECIEVE THE LENGTH          07151
PMSG     DS    A        POINTS TO AN POINTER TO RECIEVE THE MSG ADDR    07152
         SPACE                                                          07153
         SYMBAR MODE=DEC                                                07154
         BPXYERNO                                                       07155
         CONTROL DSECT=NO                                               07156
         END                                                            07157
*          DATA SET FG50129101 AT LEVEL 018 AS OF 10/09/03
STRERR   TITLE 'OMVS_STRERR'                                            00001
         PRINT OFF                                                      00002
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00006
*********************************************************************** 00020
*                                                                     * 00020
* SEGMENT NAME:                                                       * 00020
*                                                                     * 00020
*    STRERR -- OMVS_STRERR                                            * 00020
*                                                                     * 00021
*       THIS MODULE RETURNS THE ERROR MESSSAGE CORRESPONDING TO A     * 00021
*       PASSED ERRNO UNDER OPEN MVS.                                  * 00021
*                                                                     * 00039
* INPUTS (*TO FUNCTIONS):                                             * 00039
*                                                                     * 00024
*    ERRNO -- FULLWORD INT (*1,3)                                     * 00024
*       THIS IS THE ADDRESS OF A FULLWORD CONTAINING  THE ERRNO TO BE * 00025
*       INTERPRETED.                                                  * 00025
*                                                                     * 00038
* FUNCTIONS:                                                          * 00038
*                                                                     * 00038
*    1. LOAD THE PARM LIST INTO REGISTERS                             * 00038
*                                                                     * 00043
*    2. ZERO THE LENGTH IN CASE OF ERROR.                             * 00043
*                                                                     * 00046
*    3. CONVERT THE ERRO TO AN OFFSET IN THE TABLE AND SEE IF IT IS   * 00046
*       IN IN RANGE.                                                  * 00046
*                                                                     * 00051
*    4. LOAD THE ADDRESS OF THE MESSAGE AND SEE IF IT IS ZERO THIS    * 00051
*       MEANS UNKNOWN ERRNO, NO MESSAGE,.                             * 00051
*                                                                     * 00054
*    5. FIND THE END OF THE MESSAGE AND CALCULATE THE LENGTH.         * 00054
*                                                                     * 00056
*    6. PLACE THE LENGTH AND THE MESSAGE ADDRESS IN THE RETURNED      * 00056
*       PARMS.                                                        * 00056
*                                                                     * 00040
* OUTPUTS (*FROM FUNCTIONS):                                          * 00040
*                                                                     * 00028
*    LEN -- PONTER TO FULLWORD INT (*1,2,3,6)                         * 00028
*       THIS IS THE ADDRESS OF A FULLWORD TO CONTAIN THE LENGTH OF    * 00029
*       THE RETURNED MESSAGE.  IF NO MESSAGE IS RETURNED, THE LENGTH  * 00029
*       IS SET TO ZERO.                                               * 00029
*                                                                     * 00033
*    MSG -- POINTER TO FULLWORD ADDR E   THIS IS THE ADDRESS OF A     * 00033
*       FULLWORD TO CONTAIN THE MESSAGE ADDRESS. THE MESSAGE ADDRESS  * 00033
*       IS A STATIC STRING WHICH IS TERMINATED BY A BYTE OF ZEROS.    * 00033
*       (*1,6)                                                        * 00033
*                                                                     * 00061
* NOTES:                                                              * 00061
*                                                                     * 00061
*    1. SAMPLE CALL:                                                  * 00061
*                 CALL  STRERR,(ERRNO,LEN,MSGADDR)                    * 00062
*       ERRNO    DC  F'123'                                           * 00063
*       LEN      DC  F'0'                                             * 00064
*       MSGADDR  DC  A(0)                                             * 00065
*                                                                     * 00066
*********************************************************************** 00066
         EJECT                                                          00067
STRERR   RENTR  BASE=11,PARM=(10,PARMS),WORK=(WORKLEN,WORKAREA),       X00068
               ENV=OS,MAIN=YES                                          00069
STRERR   AMODE 31                                                       00070
STRERR   RMODE ANY                                                      00071
         EJECT                                                          00072
         LM    R4,R6,0(R10)        LOAD PARM LIST INTO REGS             00073
         L     R4,0(R4)            R4 CONTAINS THE ERRNO                00074
*                                  R5 POINTS TO LEN FULLWORD            00075
*                                  R6 POINTS TO MSG ADDR                00076
         XC    0(4,R5),0(R5)       ZERO THE LEN                         00077
         L     R15,=A(PLINULL)                                          00078
         ST    R15,0(,R6)                                               00079
         SPACE                                                          00080
         SLA   R4,2                MULTIPLY ERRNO BY 4                  00081
         LA    R14,ETAB(R4)        POINT TO THE ERROR ADDR              00082
         L     R15,=A(LASTMSG)     POINT TO END OF TABLE                00083
         CR    R14,R15             ARE WE PAST THE TABLE?               00084
         BH    RETURN              YES, NO MESSAGE                      00085
         SPACE                                                          00086
         L     R15,0(R14)          LOAD THE MESSAGE ADDR                00087
         LTR   R15,R15             IS IT ZERO?                          00088
         BZ    RETURN              IF SO, NO MESSAGE                    00089
         SPACE                                                          00090
*        NOTE THAT ALL MESSAGES ARE LESS THAN 255 CHARACTERS            00091
         TRT   0(256,R15),FINDNUL  FIND END OF MESSAGE                  00092
         SR    R1,R15              CALCULATE THE LENGTH                 00093
         ST    R1,0(,R5)           SAVE THE LENGTH                      00094
         ST    R15,0(,R6)          SAVE THE MESSAGE ADDR                00095
         EJECT                                                          00096
RETURN   DS    0H                                                       00097
         REXIT ENV=BOTH                                                 00098
         EJECT                                                          00099
*                    0 1 2 3 4 5 6 7 8 9 A B C D E F                    00100
FINDNUL  DC    XL16'FF000000000000000000000000000000'  00               00101
         DC    XL16'00000000000000000000000000000000'  10               00102
         DC    XL16'00000000000000000000000000000000'  20               00103
         DC    XL16'00000000000000000000000000000000'  30               00104
         DC    XL16'00000000000000000000000000000000'  40               00105
         DC    XL16'00000000000000000000000000000000'  50               00106
         DC    XL16'00000000000000000000000000000000'  60               00107
         DC    XL16'00000000000000000000000000000000'  70               00108
         DC    XL16'00000000000000000000000000000000'  80               00109
         DC    XL16'00000000000000000000000000000000'  90               00110
         DC    XL16'00000000000000000000000000000000'  A0               00111
         DC    XL16'00000000000000000000000000000000'  B0               00112
         DC    XL16'00000000000000000000000000000000'  C0               00113
         DC    XL16'00000000000000000000000000000000'  D0               00114
         DC    XL16'00000000000000000000000000000000'  E0               00115
         DC    XL16'00000000000000000000000000000000'  F0               00116
         EJECT                                                          00117
*****************************************************************       00118
*                                                               *       00119
* ERRNO TABLE                                                   *       00120
*                                                               *       00121
*****************************************************************       00122
         LTORG                                                          00123
PLINULL  EQU   X'FF000000'                                              00124
         SPACE                                                          00125
ETAB     DC    1170A(0)                                                 00126
LASTMSG  EQU   *                                                        00127
*****************************************************************       00128
*                                                               *       00129
* E R R N O   V A L U E S   D E F I N E D   B Y   C / 3 7 0     *       00130
*                                                               *       00131
*****************************************************************       00132
         ORG   ETAB+(4*EDOM)                                            00133
         DC    A(MEDOM)                                                 00134
         ORG                                                            00135
MEDOM                        DC    C'Error in the domain',X'00'         00136
         ORG   ETAB+(4*ERANGE)                                          00137
         DC    A(MERANGE)                                               00138
         ORG                                                            00139
MERANGE                      DC    C'Result is too large',X'00'         00140
*****************************************************************       00141
*                                                               *       00142
* P O S I X   E R R N O   V A L U E S                           *       00143
*                                                               *       00144
*****************************************************************       00145
         ORG   ETAB+(4*EACCES)                                          00146
         DC    A(MEACCES)                                               00147
         ORG                                                            00148
MEACCES                      DC    C'Permission is denied',X'00'        00149
         ORG   ETAB+(4*EAGAIN)                                          00150
         DC    A(MEAGAIN)                                               00151
         ORG                                                            00152
MEAGAIN  DC    C'The resource is temporarily unavailable',X'00'         00153
         ORG   ETAB+(4*EBADF)                                           00154
         DC    A(MEBADF)                                                00155
         ORG                                                            00156
MEBADF   DC    C'The file descriptor is incorrect',X'00'                00157
         ORG   ETAB+(4*EBUSY)                                           00158
         DC    A(MEBUSY)                                                00159
         ORG                                                            00160
MEBUSY   DC    C'The resource is busy',X'00'                            00161
         ORG   ETAB+(4*ECHILD)                                          00162
         DC    A(MECHILD)                                               00163
         ORG                                                            00164
MECHILD  DC    C'No child process exists',X'00'                         00165
         ORG   ETAB+(4*EDEADLK)                                         00166
         DC    A(MEDEADLK)                                              00167
         ORG                                                            00168
MEDEADLK DC    C'A resource deadlock is avoided',X'00'                  00169
         ORG   ETAB+(4*EEXIST)                                          00170
         DC    A(MEEXIST)                                               00171
         ORG                                                            00172
MEEXIST  DC    C'The file exists',X'00'                                 00173
         ORG   ETAB+(4*EFAULT)                                          00174
         DC    A(MEFAULT)                                               00175
         ORG                                                            00176
MEFAULT  DC    C'The address is incorrect',X'00'                        00177
         ORG   ETAB+(4*EFBIG)                                           00178
         DC    A(MEFBIG)                                                00179
         ORG                                                            00180
MEFBIG   DC    C'The file is too large',X'00'                           00181
         ORG   ETAB+(4*EINTR)                                           00182
         DC    A(MEINTR)                                                00183
         ORG                                                            00184
MEINTR   DC    C'A function call is interrupted',X'00'                  00185
         ORG   ETAB+(4*EINVAL)                                          00186
         DC    A(MEINVAL)                                               00187
         ORG                                                            00188
MEINVAL  DC    C'The parameter is incorrect',X'00'                      00189
         ORG   ETAB+(4*EIO)                                             00190
         DC    A(MEIO)                                                  00191
         ORG                                                            00192
MEIO     DC    C'An I/O error occurred',X'00'                           00193
         ORG   ETAB+(4*EISDIR)                                          00194
         DC    A(MEISDIR)                                               00195
         ORG                                                            00196
MEISDIR  DC    C'The file specified is a directory',X'00'               00197
         ORG   ETAB+(4*EMFILE)                                          00198
         DC    A(MEMFILE)                                               00199
         ORG                                                            00200
MEMFILE  DC    C'Too many files are open for this process',X'00'        00201
         ORG   ETAB+(4*EMLINK)                                          00202
         DC    A(MEMLINK)                                               00203
         ORG                                                            00204
MEMLINK  DC    C'Too many links occurred',X'00'                         00205
         ORG   ETAB+(4*ENAMETOOLONG)                                    00206
         DC    A(MENAMETOOLONG)                                         00207
         ORG                                                            00208
MENAMETOOLONG  DC    C'The filename is too long',X'00'                  00209
         ORG   ETAB+(4*ENFILE)                                          00210
         DC    A(MENFILE)                                               00211
         ORG                                                            00212
MENFILE  DC    C'Too many files are open in the system',X'00'           00213
         ORG   ETAB+(4*ENODEV)                                          00214
         DC    A(MENODEV)                                               00215
         ORG                                                            00216
MENODEV  DC    C'No such device exists',X'00'                           00217
         ORG   ETAB+(4*ENOENT)                                          00218
         DC    A(MENOENT)                                               00219
         ORG                                                            00220
MENOENT  DC    C'No such file, directory, or IPC member exists',X'00'   00221
         ORG   ETAB+(4*ENOEXEC)                                         00222
         DC    A(MENOEXEC)                                              00223
         ORG                                                            00224
MENOEXEC DC    C'The exec call contained a format error.The target'     00225
         DC    C' module on an exec call was not a valid  executable'   00226
         DC    C' module.',X'00'                                        00227
         ORG   ETAB+(4*ENOLCK)                                          00228
         DC    A(MENOLCK)                                               00229
         ORG                                                            00230
MENOLCK  DC    C'No locks are available',X'00'                          00231
         ORG   ETAB+(4*ENOMEM)                                          00232
         DC    A(MENOMEM)                                               00233
         ORG                                                            00234
MENOMEM  DC    C'Not enough space is available',X'00'                   00235
         ORG   ETAB+(4*ENOSPC)                                          00236
         DC    A(MENOSPC)                                               00237
         ORG                                                            00238
MENOSPC  DC    C'No space is left on the device, or no space is '       00239
         DC    C'available to create the IPC member ID',X'00'           00240
         ORG   ETAB+(4*ENOSYS)                                          00241
         DC    A(MENOSYS)                                               00242
         ORG                                                            00243
MENOSYS  DC    C'The function is not implemented',X'00'                 00244
         ORG   ETAB+(4*ENOTDIR)                                         00245
         DC    A(MENOTDIR)                                              00246
         ORG                                                            00247
MENOTDIR DC    C'Not a directory',X'00'                                 00248
         ORG   ETAB+(4*ENOTEMPTY)                                       00249
         DC    A(MENOTEMPTY)                                            00250
         ORG                                                            00251
MENOTEMPTY DC    C'The directory is not empty',X'00'                    00252
         ORG   ETAB+(4*ENOTTY)                                          00253
         DC    A(MENOTTY)                                               00254
         ORG                                                            00255
MENOTTY  DC    C'The I/O control operator is inappropriate',X'00'       00256
         ORG   ETAB+(4*ENXIO)                                           00257
         DC    A(MENXIO)                                                00258
         ORG                                                            00259
MENXIO   DC    C'No such device or address exists',X'00'                00260
         ORG   ETAB+(4*EPERM)                                           00261
         DC    A(MEPERM)                                                00262
         ORG                                                            00263
MEPERM   DC    C'The operation is not permitted',X'00'                  00264
         ORG   ETAB+(4*EPIPE)                                           00265
         DC    A(MEPIPE)                                                00266
         ORG                                                            00267
MEPIPE   DC    C'The pipe is broken',X'00'                              00268
         ORG   ETAB+(4*EROFS)                                           00269
         DC    A(MEROFS)                                                00270
         ORG                                                            00271
MEROFS   DC    C'The specified file system is read only',X'00'          00272
         ORG   ETAB+(4*ESPIPE)                                          00273
         DC    A(MESPIPE)                                               00274
         ORG                                                            00275
MESPIPE  DC    C'The seek is incorrect',X'00'                           00276
         ORG   ETAB+(4*ESRCH)                                           00277
         DC    A(MESRCH)                                                00278
         ORG                                                            00279
MESRCH   DC    C'No such process or thread exists',X'00'                00280
         ORG   ETAB+(4*EXDEV)                                           00281
         DC    A(MEXDEV)                                                00282
         ORG                                                            00283
MEXDEV   DC    C'A link to a file on another file system was '          00284
         DC    C'attempted',X'00'                                       00285
         ORG   ETAB+(4*E2BIG)                                           00286
         DC    A(ME2BIG)                                                00287
         ORG                                                            00288
ME2BIG   DC    C'The parameter list is too long, or the message to'     00289
         DC    C' receive was too large for the buffer',X'00'           00290
         ORG   ETAB+(4*ELOOP)                                           00291
         DC    A(MELOOP)                                                00292
         ORG                                                            00293
MELOOP   DC    C'A loop is encountered in symbolic links',X'00'         00294
         ORG   ETAB+(4*EILSEQ)                                          00295
         DC    A(MEILSEQ)                                               00296
         ORG                                                            00297
MEILSEQ  DC    C'The byte sequence is illegal',X'00'                    00298
         ORG   ETAB+(4*EOVERFLOW)                                       00299
         DC    A(MEOVERFLOW)                                            00300
         ORG                                                            00301
MEOVERFLOW DC    C'A value is too large to be stored in the data type'  00302
         DC      X'00'                                                  00303
*****************************************************************       00304
*                                                               *       00305
* M V S   U N I Q U E   E R R N O   V A L U E S                 *       00306
*                                                               *       00307
*****************************************************************       00308
         ORG   ETAB+(4*EMVSNOTUP)                                       00309
         DC    A(MEMVSNOTUP)                                            00310
         ORG                                                            00311
MEMVSNOTUP DC    C'OpenMVS kernel is not active',X'00'                  00312
         ORG   ETAB+(4*EMVSDYNALC)                                      00313
         DC    A(MEMVSDYNALC)                                           00314
         ORG                                                            00315
MEMVSDYNALC DC    C'Dynamic allocation error',X'00'                     00316
         ORG   ETAB+(4*EMVSCVAF)                                        00317
         DC    A(MEMVSCVAF)                                             00318
         ORG                                                            00319
MEMVSCVAF DC    C'Catalog Volume Access Facility error',X'00'           00320
         ORG   ETAB+(4*EMVSCATLG)                                       00321
         DC    A(MEMVSCATLG)                                            00322
         ORG                                                            00323
MEMVSCATLG DC    C'Catalog obtain error',X'00'                          00324
         ORG   ETAB+(4*EMVSINITIAL)                                     00325
         DC    A(MEMVSINITIAL)                                          00326
         ORG                                                            00327
MEMVSINITIAL DC    C'Process Initialization error',X'00'                00328
         ORG   ETAB+(4*EMVSERR)                                         00329
         DC    A(MEMVSERR)                                              00330
         ORG                                                            00331
MEMVSERR DC    C'A MVS environmental or internal error has occurred'    00332
         DC    X'00'                                                    00333
         ORG   ETAB+(4*EMVSPARM)                                        00334
         DC    A(MEMVSPARM)                                             00335
         ORG                                                            00336
MEMVSPARM DC    C'Bad parameters were passed to the service',X'00'      00337
         ORG   ETAB+(4*EMVSPFSFILE)                                     00338
         DC    A(MEMVSPFSFILE)                                          00339
         ORG                                                            00340
MEMVSPFSFILE DC    C'HFS encountered a permanent file error',X'00'      00341
         ORG   ETAB+(4*EMVSPFSPERM)                                     00342
         DC    A(MEMVSPFSPERM)                                          00343
         ORG                                                            00344
MEMVSPFSPERM DC    C'HFS encountered a system error',X'00'              00345
         ORG   ETAB+(4*EMVSSAFEXTRERR)                                  00346
         DC    A(MEMVSSAFEXTRERR)                                       00347
         ORG                                                            00348
MEMVSSAFEXTRERR DC    C'SAF/RACF extract error',X'00'                   00349
         ORG   ETAB+(4*EMVSSAF2ERR)                                     00350
         DC    A(MEMVSSAF2ERR)                                          00351
         ORG                                                            00352
MEMVSSAF2ERR DC    C'SAF/RACF error',X'00'                              00353
         ORG   ETAB+(4*EMVSNORTL)                                       00354
         DC    A(MEMVSNORTL)                                            00355
         ORG                                                            00356
MEMVSNORTL DC    C'Access to the OpenMVS version of the C RTL is'       00357
         DC    C' denied',X'00'                                         00358
         ORG   ETAB+(4*EMVSEXPIRE)                                      00359
         DC    A(MEMVSEXPIRE)                                           00360
         ORG                                                            00361
MEMVSEXPIRE DC    C'The password for the specified resource has '       00362
         DC    C'expired',X'00'                                         00363
         ORG   ETAB+(4*EMVSPASSWORD)                                    00364
         DC    A(MEMVSPASSWORD)                                         00365
         ORG                                                            00366
MEMVSPASSWORD DC    C'The new password specified is not valid',X'00'    00367
         ORG   ETAB+(4*EMVSWLMERROR)                                    00368
         DC    A(MEMVSWLMERROR)                                         00369
         ORG                                                            00370
MEMVSWLMERROR DC    C'A WLM service ended in error',X'00'               00371
         ORG   ETAB+(4*EMVSCPLERROR)                                    00372
         DC    A(MEMVSCPLERROR)                                         00373
         ORG                                                            00374
MEMVSCPLERROR DC    C'A Coupling Facility service ended in error',X'00' 00375
*****************************************************************       00376
*                                                               *       00377
* O P E N   S Y S T E M S   E R R N O   V A L U E S             *       00378
*                                                               *       00379
*****************************************************************       00380
         ORG   ETAB+(4*EIBMSOCKOUTOFRANGE)                              00381
         DC    A(MEIBMSOCKOUTOFRANGE)                                   00382
         ORG                                                            00383
MEIBMSOCKOUTOFRANGE DC    C'Socket number assigned by client interface' 00384
         DC    C' code (for socket() and accept()) is out of range'     00385
         DC    X'00'                                                    00386
         ORG   ETAB+(4*EIBMSOCKINUSE)                                   00387
         DC    A(MEIBMSOCKINUSE)                                        00388
         ORG                                                            00389
MEIBMSOCKINUSE DC    C'Socket number assigned by client interface'      00390
         DC    C' code is already in use',X'00'                         00391
         ORG   ETAB+(4*EOFFLOADBOXERROR)                                00392
         DC    A(MEOFFLOADBOXERROR)                                     00393
         ORG                                                            00394
MEOFFLOADBOXERROR DC    C'Offload box error',X'00'                      00395
         ORG   ETAB+(4*EOFFLOADBOXRESTART)                              00396
         DC    A(MEOFFLOADBOXRESTART)                                   00397
         ORG                                                            00398
MEOFFLOADBOXRESTART DC    C'Offload box restarted',X'00'                00399
         ORG   ETAB+(4*EOFFLOADBOXDOWN)                                 00400
         DC    A(MEOFFLOADBOXDOWN)                                      00401
         ORG                                                            00402
MEOFFLOADBOXDOWN DC    C'Offload box down',X'00'                        00403
         ORG   ETAB+(4*EIBMCONFLICT)                                    00404
         DC    A(MEIBMCONFLICT)                                         00405
         ORG                                                            00406
MEIBMCONFLICT  DC    C'Already a conflicting call outstanding on'       00407
         DC    C' socket',X'00'                                         00408
         ORG   ETAB+(4*EIBMCANCELLED)                                   00409
         DC    A(MEIBMCANCELLED)                                        00410
         ORG                                                            00411
MEIBMCANCELLED DC    C'Request cancelled via SOCKcallCANCEL request'    00412
         DC    X'00'                                                    00413
         ORG   ETAB+(4*EIBMBADTCPNAME)                                  00414
         DC    A(MEIBMBADTCPNAME)                                       00415
         ORG                                                            00416
MEIBMBADTCPNAME DC    C'SetIbmOpt specified a name of a PFS that'       00417
         DC    C' either was not configured or was not a Sockets PFS.'  00418
         DC    X'00'                                                    00419
         ORG   ETAB+(4*ENOTBLK)                                         00420
         DC    A(MENOTBLK)                                              00421
         ORG                                                            00422
MENOTBLK DC    C'Block device required',X'00'                           00423
         ORG   ETAB+(4*ETXTBSY)                                         00424
         DC    A(METXTBSY)                                              00425
         ORG                                                            00426
METXTBSY DC    C'Text file busy',X'00'                                  00427
         ORG   ETAB+(4*EWOULDBLOCK)                                     00428
         DC    A(MEWOULDBLOCK)                                          00429
         ORG                                                            00430
MEWOULDBLOCK DC    C'The descriptor is marked nonblocking, and the'     00431
         DC    C' requested function cannot complete immediately',X'00' 00432
         ORG   ETAB+(4*EINPROGRESS)                                     00433
         DC    A(MEINPROGRESS)                                          00434
         ORG                                                            00435
MEINPROGRESS DC    C'Operation now in progress',X'00'                   00436
         ORG   ETAB+(4*EALREADY)                                        00437
         DC    A(MEALREADY)                                             00438
         ORG                                                            00439
MEALREADY DC    C'Operation already in progress',X'00'                  00440
         ORG   ETAB+(4*ENOTSOCK)                                        00441
         DC    A(MENOTSOCK)                                             00442
         ORG                                                            00443
MENOTSOCK DC    C'Socket operation on a non-socket',X'00'               00444
         ORG   ETAB+(4*EDESTADDRREQ)                                    00445
         DC    A(MEDESTADDRREQ)                                         00446
         ORG                                                            00447
MEDESTADDRREQ DC    C'Destination address required',X'00'               00448
         ORG   ETAB+(4*EMSGSIZE)                                        00449
         DC    A(MEMSGSIZE)                                             00450
         ORG                                                            00451
MEMSGSIZE DC    C'The message is too large to be sent all at once,'     00452
         DC    C' as required',X'00'                                    00453
         ORG   ETAB+(4*EPROTOTYPE)                                      00454
         DC    A(MEPROTOTYPE)                                           00455
         ORG                                                            00456
MEPROTOTYPE DC    C'The socket type is incorrect',X'00'                 00457
         ORG   ETAB+(4*ENOPROTOOPT)                                     00458
         DC    A(MENOPROTOOPT)                                          00459
         ORG                                                            00460
MENOPROTOOPT DC    C'Protocol or socket option not available',X'00'     00461
         ORG   ETAB+(4*EPROTONOSUPPORT)                                 00462
         DC    A(MEPROTONOSUPPORT)                                      00463
         ORG                                                            00464
MEPROTONOSUPPORT DC    C'Protocol not supported',X'00'                  00465
         ORG   ETAB+(4*ESOCKTNOSUPPORT)                                 00466
         DC    A(MESOCKTNOSUPPORT)                                      00467
         ORG                                                            00468
MESOCKTNOSUPPORT DC    C'Socket type not supported',X'00'               00469
         ORG   ETAB+(4*EOPNOTSUPP)                                      00470
         DC    A(MEOPNOTSUPP)                                           00471
         ORG                                                            00472
MEOPNOTSUPP DC    C'The referenced socket is not a type that'           00473
         DC    C' supports the requested function',X'00'                00474
         ORG   ETAB+(4*EPFNOSUPPORT)                                    00475
         DC    A(MEPFNOSUPPORT)                                         00476
         ORG                                                            00477
MEPFNOSUPPORT DC    C'Protocol family not supported',X'00'              00478
         ORG   ETAB+(4*EAFNOSUPPORT)                                    00479
         DC    A(MEAFNOSUPPORT)                                         00480
         ORG                                                            00481
MEAFNOSUPPORT DC    C'The address family is not supported',X'00'        00482
         ORG   ETAB+(4*EADDRINUSE)                                      00483
         DC    A(MEADDRINUSE)                                           00484
         ORG                                                            00485
MEADDRINUSE DC    C'The address is already in use',X'00'                00486
         ORG   ETAB+(4*EADDRNOTAVAIL)                                   00487
         DC    A(MEADDRNOTAVAIL)                                        00488
         ORG                                                            00489
MEADDRNOTAVAIL DC    C'Cannot assign requested address',X'00'           00490
         ORG   ETAB+(4*ENETDOWN)                                        00491
         DC    A(MENETDOWN)                                             00492
         ORG                                                            00493
MENETDOWN DC    C'Network is down',X'00'                                00494
         ORG   ETAB+(4*ENETUNREACH)                                     00495
         DC    A(MENETUNREACH)                                          00496
         ORG                                                            00497
MENETUNREACH DC    C'Network is unreachable',X'00'                      00498
         ORG   ETAB+(4*ENETRESET)                                       00499
         DC    A(MENETRESET)                                            00500
         ORG                                                            00501
MENETRESET DC    C'Network dropped connection on reset',X'00'           00502
         ORG   ETAB+(4*ECONNABORTED)                                    00503
         DC    A(MECONNABORTED)                                         00504
         ORG                                                            00505
MECONNABORTED DC    C'Software caused connection abort',X'00'           00506
         ORG   ETAB+(4*ECONNRESET)                                      00507
         DC    A(MECONNRESET)                                           00508
         ORG                                                            00509
MECONNRESET DC    C'Connection reset by peer',X'00'                     00510
         ORG   ETAB+(4*ENOBUFS)                                         00511
         DC    A(MENOBUFS)                                              00512
         ORG                                                            00513
MENOBUFS DC    C'Insufficient buffer space available',X'00'             00514
         ORG   ETAB+(4*EISCONN)                                         00515
         DC    A(MEISCONN)                                              00516
         ORG                                                            00517
MEISCONN DC    C'The socket is already connected',X'00'                 00518
         ORG   ETAB+(4*ENOTCONN)                                        00519
         DC    A(MENOTCONN)                                             00520
         ORG                                                            00521
MENOTCONN DC    C'The socket is not connected',X'00'                    00522
         ORG   ETAB+(4*ESHUTDOWN)                                       00523
         DC    A(MESHUTDOWN)                                            00524
         ORG                                                            00525
MESHUTDOWN DC    C'Cannot send after socket shutdown',X'00'             00526
         ORG   ETAB+(4*ETOOMANYREFS)                                    00527
         DC    A(METOOMANYREFS)                                         00528
         ORG                                                            00529
METOOMANYREFS DC    C'Too many references: cannot splice',X'00'         00530
         ORG   ETAB+(4*ETIMEDOUT)                                       00531
         DC    A(METIMEDOUT)                                            00532
         ORG                                                            00533
METIMEDOUT DC    C'Connection timed out',X'00'                          00534
         ORG   ETAB+(4*ECONNREFUSED)                                    00535
         DC    A(MECONNREFUSED)                                         00536
         ORG                                                            00537
MECONNREFUSED DC    C'The attempt to connect was rejected',X'00'        00538
         ORG   ETAB+(4*EHOSTDOWN)                                       00539
         DC    A(MEHOSTDOWN)                                            00540
         ORG                                                            00541
MEHOSTDOWN DC    C'Host is down',X'00'                                  00542
         ORG   ETAB+(4*EHOSTUNREACH)                                    00543
         DC    A(MEHOSTUNREACH)                                         00544
         ORG                                                            00545
MEHOSTUNREACH DC    C'No route to host',X'00'                           00546
         ORG   ETAB+(4*EPROCLIM)                                        00547
         DC    A(MEPROCLIM)                                             00548
         ORG                                                            00549
MEPROCLIM DC    C'Too many processes',X'00'                             00550
         ORG   ETAB+(4*EUSERS)                                          00551
         DC    A(MEUSERS)                                               00552
         ORG                                                            00553
MEUSERS  DC    C'Too many users',X'00'                                  00554
         ORG   ETAB+(4*EDQUOT)                                          00555
         DC    A(MEDQUOT)                                               00556
         ORG                                                            00557
MEDQUOT  DC    C'Disc quota exceeded',X'00'                             00558
         ORG   ETAB+(4*ESTALE)                                          00559
         DC    A(MESTALE)                                               00560
         ORG                                                            00561
MESTALE  DC    C'Stale NFS file handle',X'00'                           00562
         ORG   ETAB+(4*EREMOTE)                                         00563
         DC    A(MEREMOTE)                                              00564
         ORG                                                            00565
MEREMOTE DC    C'Too many levels of remote in path',X'00'               00566
         ORG   ETAB+(4*ENOSTR)                                          00567
         DC    A(MENOSTR)                                               00568
         ORG                                                            00569
MENOSTR  DC    C'Device is not a stream',X'00'                          00570
         ORG   ETAB+(4*ETIME)                                           00571
         DC    A(METIME)                                                00572
         ORG                                                            00573
METIME   DC    C'Timer expired',X'00'                                   00574
         ORG   ETAB+(4*ENOSR)                                           00575
         DC    A(MENOSR)                                                00576
         ORG                                                            00577
MENOSR   DC    C'Out of streams resources',X'00'                        00578
         ORG   ETAB+(4*ENOMSG)                                          00579
         DC    A(MENOMSG)                                               00580
         ORG                                                            00581
MENOMSG  DC    C'No message of the desired type',X'00'                  00582
         ORG   ETAB+(4*EBADMSG)                                         00583
         DC    A(MEBADMSG)                                              00584
         ORG                                                            00585
MEBADMSG DC    C'Trying to read unreadable message',X'00'               00586
         ORG   ETAB+(4*EIDRM)                                           00587
         DC    A(MEIDRM)                                                00588
         ORG                                                            00589
MEIDRM   DC    C'Identifier removed',X'00'                              00590
         ORG   ETAB+(4*ENONET)                                          00591
         DC    A(MENONET)                                               00592
         ORG                                                            00593
MENONET  DC    C'Machine is not on the network',X'00'                   00594
         ORG   ETAB+(4*ERREMOTE)                                        00595
         DC    A(MERREMOTE)                                             00596
         ORG                                                            00597
MERREMOTE DC    C'Object is remote',X'00'                               00598
         ORG   ETAB+(4*ENOLINK)                                         00599
         DC    A(MENOLINK)                                              00600
         ORG                                                            00601
MENOLINK DC    C'The link has been severed',X'00'                       00602
         ORG   ETAB+(4*EADV)                                            00603
         DC    A(MEADV)                                                 00604
         ORG                                                            00605
MEADV    DC    C'Advertise error',X'00'                                 00606
         ORG   ETAB+(4*ESRMNT)                                          00607
         DC    A(MESRMNT)                                               00608
         ORG                                                            00609
MESRMNT  DC    C'srmount error',X'00'                                   00610
         ORG   ETAB+(4*ECOMM)                                           00611
         DC    A(MECOMM)                                                00612
         ORG                                                            00613
MECOMM   DC    C'Communication error on send',X'00'                     00614
         ORG   ETAB+(4*EPROTO)                                          00615
         DC    A(MEPROTO)                                               00616
         ORG                                                            00617
MEPROTO  DC    C'Protocol error',X'00'                                  00618
         ORG   ETAB+(4*EMULTIHOP)                                       00619
         DC    A(MEMULTIHOP)                                            00620
         ORG                                                            00621
MEMULTIHOP DC    C'Protocol error',X'00'                                00622
         ORG   ETAB+(4*EDOTDOT)                                         00623
         DC    A(MEDOTDOT)                                              00624
         ORG                                                            00625
MEDOTDOT DC    C'Cross mount point',X'00'                               00626
         ORG   ETAB+(4*EREMCHG)                                         00627
         DC    A(MEREMCHG)                                              00628
         ORG                                                            00629
MEREMCHG DC    C'Remote address change',X'00'                           00630
         ORG   ETAB+(4*ECANCELED)                                       00631
         DC    A(MECANCELED)                                            00632
         ORG                                                            00633
MECANCELED DC    C'The asynchronous I/O request has been canceled'      00634
         DC    X'00'                                                    00635
         ORG   ETAB+(4*ETCPOUTOFSTATE)                                  00636
         DC    A(METCPOUTOFSTATE)                                       00637
         ORG                                                            00638
METCPOUTOFSTATE DC    C'Socket send/receive gotten out of order'        00639
         DC    X'00'                                                    00640
         ORG   ETAB+(4*ETCPUNATTACH)                                    00641
         DC    A(METCPUNATTACH)                                         00642
         ORG                                                            00643
METCPUNATTACH DC    C'Unattached streams error',X'00'                   00644
         ORG   ETAB+(4*ETCPBADOBJ)                                      00645
         DC    A(METCPBADOBJ)                                           00646
         ORG                                                            00647
METCPBADOBJ DC    C'Streams push object error',X'00'                    00648
         ORG   ETAB+(4*ETCPCLOSED)                                      00649
         DC    A(METCPCLOSED)                                           00650
         ORG                                                            00651
METCPCLOSED DC    C'Streams closed error',X'00'                         00652
         ORG   ETAB+(4*ETCPLINKED)                                      00653
         DC    A(METCPLINKED)                                           00654
         ORG                                                            00655
METCPLINKED DC    C'Streams link error',X'00'                           00656
         ORG   ETAB+(4*ETCPERR)                                         00657
         DC    A(METCPERR)                                              00658
         ORG                                                            00659
METCPERR DC    C'Tcp error',X'00'                                       00660
         ORG   ETAB+(4*EINTRNODATA)                                     00661
         DC    A(MEINTRNODATA)                                          00662
         ORG                                                            00663
MEINTRNODATA DC    C'Accept_and_receive is interrupted after the'       00664
         DC    C' connection arrived but before the first data'         00665
         DC    C' arrived.',X'00'                                       00666
         ORG   ETAB+(4*ENOREUSE)                                        00667
         DC    A(MENOREUSE)                                             00668
         ORG                                                            00669
MENOREUSE DC    C'Socket descriptor reuse is not supported.',X'00'      00670
         ORG   ETAB+(4*ENOMOVE)                                         00671
         DC    A(MENOMOVE)                                              00672
         ORG                                                            00673
MENOMOVE DC    C'FileSystem can not be moved.',X'00'                    00674
         EJECT                                                          00675
WORKAREA DSECT                                                          00676
         DS    26F                                                      00677
WORKLEN  EQU   *-WORKAREA                                               00678
         SPACE                                                          00679
PARMS    DSECT                                                          00680
PERRNO   DS    A        THE ERRNO TO UNRAVEL                            00681
PLEN     DS    A        POINTS TO AN INT TO RECIEVE THE LENGTH          00682
PMSG     DS    A        POINTS TO AN POINTER TO RECIEVE THE MSG ADDR    00683
         SPACE                                                          00684
         SYMBAR MODE=DEC                                                00685
         BPXYERNO                                                       00686
         END                                                            00687
*          DATA SET FG50033705 AT LEVEL 016 AS OF 01/14/94
BREAK    TITLE 'FIND FIRST OCCURANCE OF ANY CHAR IN A PLI STRING'       00001
         PRINT OFF                                                      00002
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00006
         EJECT                                                          00007
*********************************************************************** 00012
*                                                                     * 00012
* SEGMENT NAME:                                                       * 00012
*                                                                     * 00012
*    BREAK -- FIND THE FIRST OCCURANCE ANY OF THE CHARACTERS IN THE   * 00012
*       SEARCH STRING IN THE SCANNED STRING                           * 00012
*                                                                     * 00032
* INPUTS (*TO FUNCTIONS):                                             * 00032
*                                                                     * 00014
*    PARM1 -- SCANNED STRING: STRING (*1,3)                           * 00014
*       THIS IS THE FIRST PARAMETER POINTED TO BY THE PARAMETER LIST. * 00015
*       THIS IS THE STRING TO BE SCANNED.                             * 00015
*       VALUES: 2 BYTE HEADER, THE LENGTH OF THE STRING FOLLOWED BY   * 00017
*                     THE TEXT OF THE STRING.                         * 00017
*                                                                     * 00019
*    PARM2 -- SEARCH STRING: STRING (*1,2)                            * 00019
*       THIS IS THE SECOND PARAMETER POINTED TO BY THE PARAMETER      * 00020
*       LIST. THIS IS THE STRING WHICH CONTAINS THE LIST OF           * 00020
*       CHARACTERS WHICH ARE BEING CHECKED FOR IN THE SEARCH STRING.  * 00020
*       VALUES: 2 BYTE HEADER, THE LENGTH OF THE STRING FOLLOWED BY   * 00023
*                     THE TEXT OF THE STRING.                         * 00023
*                                                                     * 00031
* FUNCTIONS:                                                          * 00031
*                                                                     * 00031
*    1. LOAD THE PARAMETER LENGTHS AND ADDRESSES INTO REGISTERS.      * 00031
*                                                                     * 00034
*    2. SET A TRT TABLE TO SCAN FOR ALL THE CHARACTERS IN THE SEARCH  * 00034
*       STRING                                                        * 00034
*                                                                     * 00037
*    3. SCAN THE SCANNED STRING FOR THE FIRST CHARACTER OF IN THE     * 00037
*       SCANNED STRING STRING.                                        * 00037
*                                                                     * 00040
*    4. IF FOUND, RETURN CHARACTER NUMBER IN THE STRING OF THE START  * 00040
*       OF THE STRING.                                                * 00040
*                                                                     * 00044
*    5. IF NOT FOUND, RETURN ZERO.                                    * 00044
*                                                                     * 00042
* OUTPUTS (*FROM FUNCTIONS):                                          * 00042
*                                                                     * 00025
*    POSITION -- POSITION IN THE SCANNED STRING (*4,5)                * 00025
*       THIS INTEGER, RETURNED IN THE RETURN PARM, IS THE POSITION OF * 00026
*       THE FIRST CHARACTER IS THE SCANNED STRING WHICH IS IN THE     * 00026
*       SEARCH STRING OR ZERO IF NO CHARS IN THE SCANNED STRING ARE   * 00026
*       IN THE SEARCH STRING.                                         * 00026
*                                                                     * 00030
*    RC -- RETURN CODE (*4,5)                                         * 00030
*                                                                     * 00047
* NOTES:                                                              * 00047
*                                                                     * 00047
*    1. SAMPLE DECLARE                                                * 00047
*                                                                     * 00048
*       DECLARE  BREAK(VARYING CHAR(*), VARYING CHAR(*))              * 00048
*                       RETURNS(FIXED BINARY(15)) EXTERNAL;           * 00049
*                                                                     * 00051
*    2. ISSUE HISTORY:                                                * 00051
*                                                                     * 00052
*       REASON FOR ISSUE 02:                                          * 00052
*       MAKE ROUTINE REENTRANT                                        * 00053
*                                                                     * 00054
*       REASON FOR ISSUE 03:                                          * 00054
*       ADD ENTRY POINT STRNCAT.                                      * 00055
*                                                                     * 00056
*       REASON FOR ISSUE 04:                                          * 00056
*       ADD PARM OVERFLOW TO STRNCAT.                                 * 00057
*                                                                     * 00058
*       REASON FOR ISSUE 05:                                          * 00058
*       ADD ENTRY POINTS BCMP AND BCOPY                               * 00059
*                                                                     * 00060
*********************************************************************** 00060
         SPACE 2                                                        00065
BREAK1   AMODE ANY                                                      00085
BREAK1   RMODE ANY                                                      00086
BREAK    RENTR BASE=11,WORK=(WORKLEN,WORKAREA),PARM=10,ENV=BOTH         00066
         SPACE 2                                                        00067
*********************************************************************** 00068
*                                                                     * 00068
* LOAD THE PARM LIST INTO REGISTERS R3 AND R4, THUS FREEING R1.       * 00068
*                                                                     * 00069
*      REGISTER USAGE:                                                * 00069
*              R1  -> PARM LIST                                       * 00070
*              R3  -> PARM1                                           * 00071
*              R4  -> PARM2                                           * 00072
*                                                                     * 00073
*********************************************************************** 00073
         SPACE                                                          00074
         LM    R3,R5,0(R10)        LOAD THE PARM LIST                   00075
         L     R3,0(R3)            POINT TO STRING TO BE SCANNED        00076
         L     R4,0(R4)            POINT TO CHARS TO LOOK FOR           00077
         SPACE 2                                                        00078
*********************************************************************** 00079
*                                                                     * 00079
* CLEAR THE 256 BYTE TRT TABLE                                        * 00079
*                                                                     * 00080
*********************************************************************** 00080
         SPACE                                                          00081
         XC    FINDFRST(255),FINDFRST  ZERO THE TRT TABLE               00082
         SPACE 2                                                        00083
*********************************************************************** 00084
*                                                                     * 00084
* LOAD THE PARM LENGTHS AND ADDRESSES INTO REGISTERS R3 THRU R7.      * 00084
* CHECK THE SEARCH STRING LONGER THAN SCANNED STRING (NOT FOUND).     * 00084
*                                                                     * 00088
*      REGISTER USAGE:                                                * 00088
*              R3  -  LENGTH OF SCANNED STRING                        * 00089
*              R4  -> SCANNED STRING                                  * 00090
*              R5  -> RETURNED PARM FIXED BINARY(15), HALFWORD        * 00091
*              R6  -  LENGTH OF SEARCH STRING                         * 00092
*              R7  -> SEARCH STRING                                   * 00093
*              R9  -> START OF THE SCANNED STRING, SAVED TO CALCULATE * 00094
*                     CHAR POS                                        * 00094
*              R11 -  BASE FOR PROGRAM                                * 00095
*              R13 -> DSA AND LOCAL VARIABLES                         * 00095
*                                                                     * 00096
*********************************************************************** 00096
         SPACE                                                          00097
         LA    R7,2(R4)            POINT TO CHARS TO LOOK FOR           00098
         LH    R6,0(R4)            LOAD LENGTH OF CHARS TO LOOK FOR     00099
         SPACE                                                          00100
         LA    R4,2(R3)            LOAD ADDR OF SCANNED STRING          00101
         LR    R9,R4               SAVE AWAY THE POINTER TO THE STRING  00102
         LH    R3,0(R3)            LOAD LENGTH OF SCANNED STRING        00103
         SPACE                                                          00104
         LTR   R3,R3               CHECK ZERO LENGTH SCANNED STRING     00105
         BNP   NOTFOUND            IF NULL, WE CANT FIND ANYTHING IN IT 00106
         SPACE 2                                                        00107
*********************************************************************** 00108
*                                                                     * 00108
* SET THE TRT TABLE TO SEARCH FOR THE FIRST CHARACTER NOT IN THE THE  * 00108
* SEARCH STRING.                                                      * 00108
*                                                                     * 00111
*      REGISTER USAGE:                                                * 00111
*              R3  -  LENGTH OF SCANNED STRING                        * 00112
*              R4  -> SCANNED STRING                                  * 00113
*              R5  -> RETURNED PARM FIXED BINARY(15), HALFWORD        * 00114
*              R6  -  LENGTH OF SEARCH STRING                         * 00115
*              R7  -> SEARCH STRING                                   * 00116
*              R8  -  WORK REGISTER - OFFSET INTO THE TRT TABLE FOR   * 00117
*                     THE SEARCH CHARACTER.                           * 00117
*              R9  -> START OF THE SCANNED STRING, SAVED TO CALCULATE * 00119
*                     CHAR POS                                        * 00119
*              R11 -  BASE FOR PROGRAM                                * 00120
*              R13 -> DSA AND LOCAL VARIABLES                         * 00120
*                                                                     * 00121
*********************************************************************** 00121
         SPACE                                                          00122
         LTR   R6,R6               CHECK THE LENGTH OF THE SEARCH       00123
*                                  STRING                               00124
         BZ    NOTFOUND            IF ZERO, WE WONT FIND ANYTHING       00125
         SPACE                                                          00126
SETTRT   DS    0H                                                       00127
         SLR   R8,R8                                                    00128
         IC    R8,0(R7)            INSERT A CHARACTER FROM THE          00129
*                                  SEARCH STRING                        00130
         SPACE                                                          00131
         LA    R8,FINDFRST(R8)     USE THE CHARACTER'S HEX VALUE AS AN  00132
*                                  OFFSET INTO THE TRT TABLE AND        00133
         MVI   0(R8),X'FF'         MARK THE PROPER PLACE IN THE TRT     00134
*                                  TABLE.                               00135
         LA    R7,1(R7)            GO TO THE NEXT CHARACTER             00136
         BCT   R6,SETTRT                                                00137
         SPACE 2                                                        00138
*********************************************************************** 00139
*                                                                     * 00139
* THE TRT TABLE IS NOW SET UP.  ISSUE THE TRT INSTRUCTION TO SCAN THE * 00139
* SCANNED STRING.                                                     * 00139
*                                                                     * 00142
*      REGISTER USAGE:                                                * 00142
*              R1  -> THE CHARACTER WHICH THE TRT INSTRUCTION FOUND   * 00143
*              R3  -  LENGTH OF SCANNED STRING                        * 00144
*              R4  -> SCANNED STRING                                  * 00145
*              R5  -> RETURNED PARM FIXED BINARY(15), HALFWORD        * 00146
*              R8  -  WORK REGISTER, TEMP STORAGE FOR R1 DURING       * 00147
*                     CALCULATIONS                                    * 00147
*              R9  -> START OF THE SCANNED STRING, SAVED TO CALCULATE * 00148
*                     CHAR POS                                        * 00148
*              R11 -  BASE FOR PROGRAM                                * 00149
*              R13 -> DSA AND LOCAL VARIABLES                         * 00149
*                                                                     * 00150
*********************************************************************** 00150
         SPACE                                                          00151
SCAN     DS    0H                                                       00152
**********************************************************              00153
         SPACE                                                          00154
LOOP     DS    0H                                                       00155
         C     R3,=F'256'       IS THERE MORE THAN 256 CHARACTERS?      00156
         BNH   LAST256          IF NOT, DO IT WITH AN EXECUTE           00157
         SPACE                                                          00158
         TRT   0(256,R4),FINDFRST SCAN 256 BYTES OF STRING              00159
         BNZ   FOUND               GOT IT                               00160
         SPACE                                                          00161
         LA    R4,256(R4)       BUMP STRING POINTER                     00162
         S     R3,=F'256'       SUBTRACT THE LENGTH OF THE STRING       00163
         BZ    NOTFOUND         IF LENGTH IS NOW ZERO, WE ARE DONE      00164
         B     LOOP                                                     00165
         SPACE                                                          00166
LAST256  DS    0H                                                       00167
         BCTR  R3,0             SUB 1 FOR EXECUTE INSTRUCTIONS          00168
         EX    R3,FIND          LOOK FOR CHARS IN SCANNED STRING        00169
         BNZ   FOUND               GOT IT                               00170
         SPACE                                                          00171
         SPACE 2                                                        00172
*********************************************************************** 00173
*                                                                     * 00173
* BRANCH TO, OR FALL INTO THIS CODE WHEN THE SEARCH FAILS.  SET R7 TO * 00173
* ZERO.                                                               * 00173
*                                                                     * 00176
*      REGISTER USAGE:                                                * 00176
*              R7  -  USED TO HOLD THE ZERO VALUE TO BE RETURNED TO   * 00177
*                     THE CALLING PROGRAM.                            * 00177
*                                                                     * 00179
*********************************************************************** 00179
         SPACE                                                          00180
NOTFOUND DS    0H                                                       00181
         SLR   R7,R7               ZERO THE ADDRESS                     00182
         B     RETURN              GO CLOSE UP SHOP                     00183
         SPACE 2                                                        00184
*********************************************************************** 00185
*                                                                     * 00185
* BRANCH TO HERE IF A MATCH IS FOUND.  R1 CONTAINS THE ADDR OF THE    * 00185
* FOUND CHARACTER                                                     * 00185
*                                                                     * 00188
*      REGISTER USAGE:                                                * 00188
*              R1  -> POSITION IN THE SCANNED STRING WHICH WAS FOUND  * 00189
*                     BY THE TRT INSTRUCTION.                         * 00189
*              R7  -  USED TO HOLD CHARACTER POSITION TO BE RETURNED  * 00191
*                     TO THE CALLING PROGRAM.                         * 00191
*              R9  -> START OF THE SCANNED STRING, SAVED TO CALCULATE * 00193
*                     CHAR POS                                        * 00193
*                                                                     * 00194
*********************************************************************** 00194
         SPACE                                                          00195
FOUND    DS    0H                                                       00196
         SR    R1,R9               CALCULATE THE OFFSET INTO THE STRING 00197
         LA    R1,1(R1)            CONVERT TO CHARACTER POSITITION      00198
         LR    R7,R1                                                    00199
         SPACE 2                                                        00200
*********************************************************************** 00201
*                                                                     * 00201
* CLOSE UP SHOP AND RETURN                                            * 00201
*                                                                     * 00203
*      REGISTER USAGE:                                                * 00203
*              R0  -> RETURNED CHARACTER POSITION                     * 00204
*              R11 -  BASE FOR PROGRAM                                * 00205
*              R13 -> DSA AND LOCAL VARIABLES                         * 00205
*                                                                     * 00206
*********************************************************************** 00206
         SPACE                                                          00207
RETURN   DS    0H                                                       00208
         STH   R7,0(R5)            SAVE IN THE RETURNED PARM            00209
         SPACE                                                          00210
         REXIT ENV=BOTH                                                 00211
         SPACE 2                                                        00212
*********************************************************************** 00213
*                                                                     * 00213
* OBJECTS OF EXECUTE INSTRUCTIONS                                     * 00213
*                                                                     * 00214
*********************************************************************** 00214
         SPACE                                                          00215
FIND     TRT   0(*-*,R4),FINDFRST       SCAN FOR FIRST CHARACTER        00216
         DROP  R11,R13                                                  00217
         SPACE                                                          00218
WORKAREA DSECT                                                          00219
         DS    18D                 LOWER SAVE AREA                      00220
FINDFRST DS    XL256                                                    00221
WORKLEN  EQU   *-WORKAREA                                               00222
         SYMBAR MODE=DEC                                                00223
         END                                                            00224
STRNCAT  TITLE 'CONCATINATE ONE STRING ONTO ANOTHER QUICKLY'            00225
         PRINT OFF                                                      00226
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00230
*********************************************************************** 00231
*                                                                     * 00231
* SEGMENT NAME:                                                       * 00231
*                                                                     * 00231
*    STRNCAT -- CONCATINATE ONE STRING ONTO THE BACK OF ANOTHER       * 00231
*       QUICKLY                                                       * 00231
*                                                                     * 00232
*       THIS FUNCTION PERFORMS THE EQUIVALENT OF THE PL/I STATEMENT   * 00232
*       TARGET = TARGET || SOURCE;                                    * 00233
*       FOR LONG STRINGS IT IS MUCH FASTER THAN THE PL/I GENERATED    * 00234
*       CODE.                                                         * 00234
*                                                                     * 00264
* INPUTS (*TO FUNCTIONS):                                             * 00264
*                                                                     * 00236
*    TARGET -- TARGET STRING TO CONCATINATE TO. (*1,2)                * 00236
*       THE FIRST PARM IS THE STRING TO BE ADDED TO.  THIS IS A PL/I  * 00237
*       VARYING CHAR(*) STRING.  THE LOCATOR/DESCRIPTOR IS USED TO    * 00237
*       EXTRACT THE MAXIMUM LENGTH THE STRING MAY CONTAIN.            * 00237
*       VALUES: 2 BYTE HEADER, THE LENGTH OF THE STRING FOLLOWED BY   * 00240
*                     THE TEXT OF THE STRING.                         * 00240
*                                                                     * 00242
*    SOURCE -- STRING TO BE ADDED ONTO THE TARGET (*1,2,3)            * 00242
*       THE SECOND PARAMETER IS THE STRING TO BE ADDED TO THE TARGET. * 00243
*       THIS IS A PL/I VARING CHAR STRING.                            * 00243
*       VALUES: 2 BYTE HEADER, THE LENGTH OF THE STRING FOLLOWED BY   * 00245
*                     THE TEXT OF THE STRING.                         * 00245
*                                                                     * 00247
*    MAXCHARS -- MAXIMUM NUMBER OF CHARS TO TRANSFER (*1,2)           * 00247
*       THE THIRD PARM IS A FIXED BINARY(31) WHICH CONTAINS THE       * 00248
*       MAXIMUM NUMBER OF CHARACTERS TO TRANSFER.  A MIN FUNCTION IS  * 00248
*       CALCULATED USING THIS PARM, THE NUMBER OF CHARS IN THE SOUCE  * 00248
*       STRING AND THE REMAINING SPACE IN THE TARGET STRING.  THE     * 00248
*       MINIMUN OF THESE THREE VALUES IF THE NUMBER OF CHARACTERS     * 00248
*       MOVED.                                                        * 00248
*       VALUES: 0  -  IGNORE THIS PARM                                * 00253
*               >0 -  MAXIMUM NUMBER OF CHARACTERS TO MOVE            * 00254
*                                                                     * 00263
* FUNCTIONS:                                                          * 00263
*                                                                     * 00263
*    1. LOAD THE PARMS INTO MEMORY                                    * 00263
*                                                                     * 00267
*    2. CALCULATE THE NUMBER OF CHARACTERS TO MOVE.  THIS IS THE      * 00267
*       MINIMUM OF THE THIRD PARM, THE LENGTH OF THE SOURCE STRING,   * 00267
*       AND THE SPACE REMAINING IN THE TARGET STRING.                 * 00267
*                                                                     * 00273
*    3. MOVE THE CHARACTERS AND UPDATE THE LENGTH OF THE TARGET       * 00273
*       STRING                                                        * 00273
*                                                                     * 00274
* OUTPUTS (*FROM FUNCTIONS):                                          * 00274
*                                                                     * 00236
*    TARGET -- TARGET STRING TO CONCATINATE TO. (*3)                  * 00236
*       THE FIRST PARM IS THE STRING TO BE ADDED TO.  THIS IS A PL/I  * 00237
*       VARYING CHAR(*) STRING.  THE LOCATOR/DESCRIPTOR IS USED TO    * 00237
*       EXTRACT THE MAXIMUM LENGTH THE STRING MAY CONTAIN.            * 00237
*       VALUES: 2 BYTE HEADER, THE LENGTH OF THE STRING FOLLOWED BY   * 00240
*                     THE TEXT OF THE STRING.                         * 00240
*                                                                     * 00277
* NOTES:                                                              * 00277
*                                                                     * 00277
*    1. SAMPLE DECLARE                                                * 00277
*                                                                     * 00278
*       DECLARE  STRNCAT ENTRY(VARYING CHAR(*),                       * 00278
*                         VARYING CHAR(*),                            * 00279
*                         FIXED BINARY(31),                           * 00280
*                         FIXED BINARY(31)) EXTERNAL;                 * 00281
*                                                                     * 00282
*       CALL STRNCAT(TARGET, SOURCE, MAX_CHARS, OVERFLOW_FLAG);       * 00283
*                                                                     * 00284
*********************************************************************** 00284
         SPACE                                                          00285
STRNCAT1 AMODE ANY                                                      00085
STRNCAT1 RMODE ANY                                                      00086
STRNCAT  RENTR WORK=0,BASE=11,PARM=(R10,PLIPARM)                        00286
         EJECT                                                          00287
*********************************************************************** 00288
*                                                                     * 00288
* LOAD THE PARMS AND DETERMINE HOW MANY CHARACTERS TO MOVE.           * 00288
*                                                                     * 00290
*      REGISTER USAGE:                                                * 00290
*              R2  -> TARGET POSITION TO MOVE THE SOURCE STRING TO    * 00291
*              R3  -  SPACE REMAINING IN THE TARGET STRING            * 00292
*              R4  -> SOURCE STRING                                   * 00293
*              R5  -  MAXCHARS PARM, USED TO CALC THE MIN             * 00294
*              R6  -> START OF TARGET STRING (LENGTH FIELD)           * 00295
*              R7  -> MAXCHARS PARM AND THEN OVERFLOW PARM            * 00296
*                                                                     * 00297
*********************************************************************** 00297
         SPACE                                                          00298
         L     R6,TARGET               POINT TO TARGET L/D              00299
         LH    R3,4(,R6)               LOAD MAX TARGET LENGTH           00300
         L     R6,0(,R6)               POINT TO TARGET STRING           00301
         LA    R2,2(0,R6)              POINT TO TEXT OF STRING          00302
         AH    R2,0(,R6)               POINT TO FREE SPACE IN TARGET    00303
         SH    R3,0(,R6)               GET THE SPACE LEFT IN THE STR    00304
         BNP   OFCHECK                 NO SPACE, CHECK OVERFLOW         00305
         SPACE                                                          00306
         L     R4,SOURCE               POINT TO SOURCE L/D              00307
         L     R4,0(,R4)               POINT TO SOURCE STRING LEN       00308
         L     R7,MAXCHARS             POINT TO MAX CHARS TO TRANSFER   00309
         L     R5,0(,R7)               LOAD  MAX CHARS TO TRANSFER      00310
         L     R7,OVERFLOW             POINT TO OVERFLOW FLAG           00311
         XC    0(4,R7),0(R7)           CLEAR IT INITIALLY               00312
         SPACE                                                          00313
         LTR   R5,R5                   IS THIRD PARM ZERO?              00314
         BNZ   MAX1                                                     00315
         SPACE                                                          00316
         L     R5,=F'32767'            LOAD MAX STRING LEN              00317
         SPACE                                                          00318
MAX1     DS    0H                                                       00319
         LH    R15,0(,R4)              LOAD LEN OF SOURCE STRING        00320
         LA    R4,2(,R4)               POINT TO TEXT OF STRING          00321
         CR    R15,R5                  COMPARE SOURCE LEN TO MAX        00322
         BNL   MAX2                                                     00323
         SPACE                                                          00324
         LR    R5,R15                  NEW MAX VALUE                    00325
         SPACE                                                          00326
MAX2     DS    0H                                                       00327
         CR    R5,R3                   WILL MAX FIT?                    00328
         BNH   MAX3                                                     00329
         SPACE                                                          00330
         LR    R5,R3                   NEW MAX VALUE                    00331
         MVC   0(4,R7),=F'1'           SET OVERFLOW FLAG                00332
         SPACE                                                          00333
MAX3     DS    0H                                                       00334
         LR    R3,R5                   SET 2 VALUES EQUAL               00335
         LH    R14,0(,R6)              LOAD SOURCE STRING LEN           00336
         AR    R14,R5                  ADD NEW LEN                      00337
         STH   R14,0(,R6)              PUT IT BACK                      00338
         SPACE                                                          00339
         MVCL  R2,R4                   DO THE MOVE                      00340
         SPACE                                                          00341
RETURN   DS    0H                                                       00342
         REXIT LSA=NO                                                   00343
         SPACE                                                          00344
OFCHECK  DS    0H                                                       00345
         L     R14,OVERFLOW            POINT TO OVERFLOW FLAG           00346
         MVC   0(4,R14),=F'1'          ASSUME OVERFLOW                  00347
         L     R15,TARGET              POINT TO TARGET L/D              00348
         L     R15,0(,R15)             POINT TO TARGET HEADER           00349
         LH    R15,0(,R15)             GET SOURCE STRING LEN            00350
         LTR   R15,R15                 IS IT ZERO                       00351
         BNZ   RETURN                  IF NOT, FLAG THE OVERFLOW        00352
         SPACE                                                          00353
         XC    0(4,R14),0(R14)         NO OVERFLOW, NULL SOURCE STRING  00354
         B     RETURN                                                   00355
         SPACE                                                          00356
         DROP  R11                                                      00357
PLIPARM  DSECT                                                          00358
TARGET   DS    A                                                        00359
SOURCE   DS    A                                                        00360
MAXCHARS DS    A                                                        00361
OVERFLOW DS    A                                                        00362
         SYMBAR MODE=DEC                                                00363
         END                                                            00364
BCMP     TITLE 'BINARY COMPARE FOR PL/I LIKE FOR C'                     00365
         PRINT OFF                                                      00366
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00370
*********************************************************************** 00371
*                                                                     * 00371
* SEGMENT NAME:                                                       * 00371
*                                                                     * 00371
*    BCMP -- BINARY COMPARE FOR PL/I LIKE FOR C                       * 00371
*                                                                     * 00372
*       THIS FUNCTION DOES A QUICK BINARY COMPARE.                    * 00372
*                                                                     * 00387
* INPUTS (*TO FUNCTIONS):                                             * 00387
*                                                                     * 00374
*    D1 -- DATA AREA 1 - POINTER (*1,2)                               * 00374
*       THE FIRST PARM IS THE FIRST DATA AREA TO LOOK AT .            * 00375
*                                                                     * 00376
*    D2 -- DATA AREA 2 - POINTER (*1,2)                               * 00376
*       THE SECOND PARM IS THE SECOND DATA AREA TO LOOK AT .          * 00377
*                                                                     * 00378
*    LEN -- LENGTH OF THE AREAS - FIXED BINARY(31) (*1,2)             * 00378
*       THE THIRD PARM IS THE LENGTH OF THE AREA TO COMPARE.          * 00379
*                                                                     * 00386
* FUNCTIONS:                                                          * 00386
*                                                                     * 00386
*    1. LOAD THE PARMS INTO MEMORY                                    * 00386
*                                                                     * 00391
*    2. COMPARE THE TWO STRINGS AND RETURN THE RESULT                 * 00391
*                                                                     * 00390
* OUTPUTS (*FROM FUNCTIONS):                                          * 00390
*                                                                     * 00380
*    RC -- THE COMPARE RESULT  - FIXED BINARY(31) (*1,2)              * 00380
*       THE RETURNED VALUE GIVES THE RESULT OF THE COMPARE.           * 00381
*       VALUES: 0  -  AREAS ARE EQUAL                                 * 00382
*               1  -  DATA AREA 1 > DATA AREA 2                       * 00383
*               -1 -  DATA AREA 1 < DATA AREA 2                       * 00384
*                                                                     * 00397
* NOTES:                                                              * 00397
*                                                                     * 00397
*    1. SAMPLE DECLARE                                                * 00397
*                                                                     * 00398
*       DECLARE  BCMP ENTRY(POINTER,                                  * 00398
*                         POINTER,                                    * 00399
*                         FIXED BINARY(31))                           * 00400
*                         RETURNS(FIXED BINARY(31)) EXTERNAL;         * 00401
*                                                                     * 00402
*       IF BCMD(ADDR(V1), ADDR(V2), LEN) ¬= 0                         * 00403
*       THEN                                                          * 00404
*          PUT SKIP LIST('VARS ARE NOT EQUAL');                       * 00405
*                                                                     * 00406
*********************************************************************** 00406
         SPACE                                                          00407
BCMP1    AMODE ANY                                                      00085
BCMP1    RMODE ANY                                                      00086
BCMP     RENTR WORK=0,BASE=11,PARM=(R10,PLIPARMS)                       00408
         EJECT                                                          00409
*********************************************************************** 00410
*                                                                     * 00410
* LOAD THE PARMS                                                      * 00410
*                                                                     * 00412
*      REGISTER USAGE:                                                * 00412
*              R4  -> AREA 1                                          * 00413
*              R5  -  LEN                                             * 00414
*              R6  -> AREA 2                                          * 00415
*              R7  -  LEN                                             * 00416
*              R8  -> RETURNED RESULT                                 * 00417
*                                                                     * 00418
*********************************************************************** 00418
         SPACE                                                          00419
         L     R4,PLID1                                                 00420
         L     R4,0(,R4)               LOAD ADDR DATA AREA 1            00421
         L     R6,PLID2                                                 00422
         L     R6,0(,R6)               LOAD ADDR DATA AREA 2            00423
         L     R5,PLILEN               POINT TO LEN                     00424
         L     R5,0(,R5)               LOAD LEN TO COMPARE              00425
         LR    R7,R5                   TWO COPIES                       00426
         L     R8,PLIRC                POINT TO OUTPUT AREA             00427
         SLR   R9,R9                   CLEAR COMPARE RESULT             00428
         SPACE                                                          00429
         CLCL  R4,R6                                                    00430
         BE    RETURN                  ON EQUAL RETURN 0                00431
         BL    LOW                                                      00432
         SPACE                                                          00433
         LA    R9,1                    ON HIGH RETURN 1                 00434
         B     RETURN                                                   00435
         SPACE                                                          00436
LOW      DS    0H                                                       00437
         L     R9,=F'-1'               ON LOW RETURN -1                 00438
         SPACE                                                          00439
RETURN   DS    0H                                                       00440
         ST    R9,0(,R8)                                                00441
         REXIT LSA=NO                                                   00442
         SPACE                                                          00443
         DROP  R11,R10                                                  00444
PLIPARMS DSECT                                                          00445
PLID1    DS    A                                                        00446
PLID2    DS    A                                                        00447
PLILEN   DS    A                                                        00448
PLIRC    DS    A                                                        00449
         SYMBAR MODE=DEC                                                00450
         END                                                            00451
BCOPY    TITLE 'BINARY COPY FOR PL/I LIKE FOR C'                        00452
         PRINT OFF                                                      00453
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00457
*********************************************************************** 00458
*                                                                     * 00458
* SEGMENT NAME:                                                       * 00458
*                                                                     * 00458
*    BCOPY -- BINARY COPY FOR PL/I LIKE FOR C                         * 00458
*                                                                     * 00459
*       THIS FUNCTION DOES A QUICK BINARY COPY.                       * 00459
*                                                                     * 00469
* INPUTS (*TO FUNCTIONS):                                             * 00469
*                                                                     * 00461
*    SOURCE -- DATA AREA 1 - POINTER (*1,2)                           * 00461
*       THE FIRST PARM IS THE ADDRESS OF THE SOURCE DATA.             * 00462
*                                                                     * 00463
*    TARGET -- DATA AREA 2 - POINTER (*1,2)                           * 00463
*       THE SECOND PARM IS THE ADDRESS OF THE TARGET AREA.            * 00464
*                                                                     * 00465
*    LEN -- LENGTH OF THE AREAS - FIXED BINARY(31) (*1,2)             * 00465
*       THE THIRD PARM IS THE LENGTH OF THE AREA TO COPY.             * 00466
*                                                                     * 00468
* FUNCTIONS:                                                          * 00468
*                                                                     * 00468
*    1. LOAD THE PARMS INTO MEMORY                                    * 00468
*                                                                     * 00472
*    2. COPY THE DATA                                                 * 00472
*                                                                     * 00477
* NOTES:                                                              * 00477
*                                                                     * 00477
*    1. SAMPLE DECLARE                                                * 00477
*                                                                     * 00478
*       DECLARE  BCOPY ENTRY(POINTER,                                 * 00478
*                         POINTER,                                    * 00479
*                         FIXED BINARY(31)) EXTERNAL;                 * 00480
*                                                                     * 00481
*       CALL BCOPY(ADDR(V1), ADDR(V2), LEN);                          * 00482
*                                                                     * 00483
*********************************************************************** 00483
         SPACE                                                          00484
BCOPY1   AMODE ANY                                                      00085
BCOPY1   RMODE ANY                                                      00086
BCOPY    RENTR WORK=0,BASE=11,PARM=(R10,PLIPARMS)                       00485
         EJECT                                                          00486
*********************************************************************** 00487
*                                                                     * 00487
* LOAD THE PARMS                                                      * 00487
*                                                                     * 00489
*      REGISTER USAGE:                                                * 00489
*              R4  -> AREA 1                                          * 00490
*              R5  -  LEN                                             * 00491
*              R6  -> AREA 2                                          * 00492
*              R7  -  LEN                                             * 00493
*                                                                     * 00494
*********************************************************************** 00494
         SPACE                                                          00495
         L     R4,PLID1                                                 00496
         L     R4,0(,R4)               LOAD ADDR DATA AREA 1            00497
         L     R6,PLID2                                                 00498
         L     R6,0(,R6)               LOAD ADDR DATA AREA 2            00499
         L     R5,PLILEN               POINT TO LEN                     00500
         L     R5,0(,R5)               LOAD LEN TO COMPARE              00501
         LR    R7,R5                   TWO COPIES                       00502
         SPACE                                                          00503
         MVCL  R6,R4                                                    00504
         REXIT LSA=NO                                                   00505
         SPACE                                                          00506
         DROP  R11,R10                                                  00507
PLIPARMS DSECT                                                          00508
PLID1    DS    A                                                        00509
PLID2    DS    A                                                        00510
PLILEN   DS    A                                                        00511
         SYMBAR MODE=DEC                                                00512
         END                                                            00513
*          DATA SET FG5002420A AT LEVEL 010 AS OF 02/13/04
         PRINT OFF                                                      00001
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00005
REVERSE  TITLE 'PLI FUNCTION TO REVERSE A CHARACTER STRING'             00006
*********************************************************************** 00012
*                                                                     * 00012
* SEGMENT NAME:                                                       * 00012
*                                                                     * 00012
*    REVERSE -- PLI FUNCTION TO REVERSE A CHARACTER STRING            * 00012
*                                                                     * 00024
* INPUTS (*TO FUNCTIONS):                                             * 00024
*                                                                     * 00013
*    SOURCE -- THE STRING TO BE REVERSED (*1,2,3)                     * 00013
*       THIS IS A PL/I VARYING LENGTH CHARACTER STRING WHOSE          * 00014
*       CHARACTERS ARE TO BE REVERSED.                                * 00014
*                                                                     * 00020
* FUNCTIONS:                                                          * 00020
*                                                                     * 00020
*    1. IF THE SOURCE STRING IS LONGER THAT THE MAXIMUM (DECLARED)    * 00020
*       LENGTH OF THE TARGET STRING, SET UP TO DO THE REVERSE ONLY ON * 00020
*       THE FIRST 'N' CHARACTERS IN THE SOURCE STRING, WHERE 'N' IS   * 00020
*       THE DECLARED LENGTH OF THE TARGET STRING.                     * 00020
*                                                                     * 00025
*    2. IF THE SOURCE STRING IS LONGER THAT 256 CHARACTERS, REVERSE   * 00025
*       THE LAST 256 CHARACTERS OF THE SOURCE INTO THE FIRST 256      * 00025
*       CHARACTERS OF THE TARGET.  REPEAT FOR THE NEXT 256 BYTES      * 00025
*       UNTIL THERE ARE 256 CHARACTER OR LESS TO PROCESS.             * 00025
*                                                                     * 00031
*    3. IF THERE ARE LESS THAT 256 CHARACTERS TO PROCESS, REVERSE THE * 00031
*       SOURCE TRING INTO THE TARGET STRING                           * 00031
*                                                                     * 00030
* OUTPUTS (*FROM FUNCTIONS):                                          * 00030
*                                                                     * 00016
*    TARGET -- THE STRING TO BE RETURNED (*2,3)                       * 00016
*       THIS IS A PL/I VARYING LENGTH CHARACTER STRING INTO WHICH IS  * 00017
*       PUT THE TARGET STRING WITH THE FIRST LETTER LAST AND THE LAST * 00017
*       LETTER FIRST.                                                 * 00017
*                                                                     * 00035
* NOTES:                                                              * 00035
*                                                                     * 00035
*    1. SAMPLE DECLARATION                                            * 00035
*                                                                     * 00036
*       DECLARE REVERSE ENTRY(VARYING CHARACTER(*)) RETURNS(VARYING   * 00036
*       CHARACTER(256)) EXTERNAL;                                     * 00036
*                                                                     * 00038
*       IF CHARACTER STRINGS LONGER THAN 256 NEED TO BE REVERSED,     * 00038
*       THEN THE RETURNS SPECIFICATION MAY BE INCREASED TO WHATEVER   * 00038
*       IS REQUIRED.                                                  * 00038
*                                                                     * 00041
*       SAMPLE CALL:                                                  * 00041
*       STRING_A = REVERSE(STRING_B);                                 * 00042
*                                                                     * 00043
*    2. THE REVERSE IS DONE USING AN ALGORITHM FROM GRIZWOLDS BOOK    * 00043
*       "ALGORITHMS IN SNOBOL 4".  EACH 256 BYTES OR LESS OF THE      * 00043
*       TARGET IS INITIALIZED WITH THE REQUIRED NUMBER OF CHARACTERS  * 00043
*       FROM THE REVERSE EBCIDIC STRING.  THIS NUMBER IS EQUAL TO THE * 00043
*       LENGTH OF THE SOURCE STRING AND IS TAKEN SO AS TO INCLUDE THE * 00043
*       LAST CHARACTER IN THE STRING.  E.I.  IF TEN CHARACTERS ARE    * 00043
*       REQUIRED, THE LAST TEN IN THE REVERSE EBCDIC STRING.  THE     * 00043
*       EBCIDIC STRING IS STRING OF HEX CHARACTERS STARTING WITH      * 00043
*       X'FF' AND GOING DOWN TO X'00'.  THE INITIALIZED TARGET IS     * 00043
*       THEN USED AS THE FIRST OPERAND OF A TRANSLATE INSTRUCTION AND * 00043
*       THE SOURCE STRING IS USED AS THE SECOND OPERAND.              * 00043
*                                                                     * 00054
*    3. ISSUE HISTORY:                                                * 00054
*                                                                     * 00055
         EJECT
*       ISSUE 02:                                                     * 00055
*       CHANGE THE INCLUDES TO INCLUDE PLRENTR AND PLREXIT.  THIS     * 00056
*       ROUTINE IS ONLY CALLED FROM PL/I AND THE NEW FORM OF THESE    * 00056
*       MACROS DOES NOT USE GETMAIN FREEMAIN.  PL/I'S STACK IS USED   * 00056
*       INSTEAD.                                                      * 00056
*                                                                     * 00059
*       REASON FOR ISSUE 02:  02/13/2004                              * 00059
*       ADD AMODE AND RMODE CARDS TO GET RID OF LINKER MESSAGES       * 00060
*                                                                     * 00061
*********************************************************************** 00061
         SPACE                                                          00062
REVERSE1 AMODE ANY                                                      00063
REVERSE1 RMODE ANY                                                      00064
REVERSE  RENTR  BASE=11,PARM=(10,PLIPARMS)                              00065
         EJECT                                                          00066
*********************************************************************** 00076
*                                                                     * 00076
* GET THE CURRENT LENGTH OF THE SOURCE STRING AND THE MAXIMUM LENGTH  * 00076
* OF THE TARGET STRING.  USE THE MINIMUM AS THE LENGTH TO BE          * 00076
* PROCESSED.  IF THE TARGET IS TO SHORT, ONLY THE FIRST CHARACTERS IN * 00076
* THE SOURCE WILL BE USED.                                            * 00076
*                                                                     * 00081
*      REGISTER USAGE:                                                * 00081
*              R7  -> NEXT SOURCE TEXT TO BE PROCESSED                * 00082
*              R8  -> JUST PAST THE NEXT TARGET SOURCE TO BE          * 00082
*                     PROCESSED                                       * 00082
*              R9  -  LENGTH OF THE SOURCE STRING LEFT TO PROCESS     * 00082
*              R10 -> PARM LIST FROM PL/I                             * 00082
*              R11 -  BASE FOR PROGRAM                                * 00082
*              R12 -> PLI TASK COMMUNICATIONS AREA  -  DO NOT MODIFY  * 00082
*              R13 -> DYNAMIC SAVE AREA                               * 00082
*              R15 -  WORK REGISTER                                   * 00083
*                                                                     * 00084
*********************************************************************** 00084
         SPACE                                                          00085
         L     R15,PLIFROM    POINT TO THE SOURCE PARM L/D              00086
         L     R15,0(R15)     POINT TO THE SOURCE STRING                00087
         LH    R9,0(R15)      GET SOURCE STIRNG CURRENT LENGTH          00088
         LA    R7,2(R15)      SAVE THE ADDR OF THE BEGINNING OF THE     00089
*                             SOURCE TEXT                               00090
         SPACE                                                          00091
         L     R15,PLITO      POINT TO THE TARGET PARM L/D              00092
         CH    R9,4(R15)      COMPARE THE SOURCE LENGTH TO THE          00093
*                             DECLARED LENGTH OF THE TARGET.            00094
         BNH   SOURCEOK       IF THE TARGET IS LONG ENOUGH, THE         00095
*                             SOURCE LENGTH IS THE ONE TO USE.          00096
         SPACE                                                          00097
         LH    R9,4(R15)      IF THE TARGET IS TO SHORT, ONLY USE       00098
*                             THE FIRST TARGET_LENGTH CHARACTERS        00099
         SPACE                                                          00100
SOURCEOK DS    0H                                                       00101
         L     R8,0(R15)      POINT TO THE TARGET STRING                00102
         STH   R9,0(R8)       STORE THE LENGTH OF THE TARGET STRING     00103
*                             IN THE STRING'S 2 BYTE HEADER.            00104
         LA    R8,2(R9,R8)    POINT TO JUST PAST THE PORTION OF THE     00105
*                             TARGET STRING TO BE USED.                 00106
         EJECT                                                          00107
*********************************************************************** 00108
*                                                                     * 00108
* CHECK IF THE AMOUNT OF SOURCE STRING LENF TO PROCESS IS LESS THAN   * 00108
* OR EQUAL TO 256 CHARACTERS.  IF SO, GO PROCESS THE REMAINING AMOUNT * 00108
* OF THE STRING.  IF THERE ARE MORE THAN 256 CHARACTERS TO BE         * 00108
* PROCESSED, PROCESS 256 OF THEM AND SEE HOW MUCH IS LEFT.            * 00108
*                                                                     * 00114
*      REGISTER USAGE:                                                * 00114
*              R7  -> NEXT SOURCE TEXT TO BE PROCESSED                * 00115
*              R8  -> JUST PAST THE NEXT TARGET SOURCE TO BE          * 00115
*                     PROCESSED                                       * 00115
*              R9  -  LENGTH OF THE SOURCE STRING LEFT TO PROCESS     * 00115
*              R10 -> PARM LIST FROM PL/I                             * 00115
*              R11 -  BASE FOR PROGRAM                                * 00115
*              R12 -> PLI TASK COMMUNICATIONS AREA  -  DO NOT MODIFY  * 00115
*              R13 -> DYNAMIC SAVE AREA                               * 00115
*                                                                     * 00116
*********************************************************************** 00116
         SPACE                                                          00117
TESTLEN  DS    0H                                                       00118
         CH    R9,=H'256'     IS THE STRING MORE THAN 256 CHARACTERS?   00119
         BNH   LASTREV        IF NOT, GO DO THE WHOLE STRING.           00120
         SPACE 5                                                        00121
PROC256  DS    0H                                                       00122
         SH    R8,=H'256'     MOVE BACK 256 CHARACTERS FROM THE END     00123
*                             OF THE STRING                             00124
         MVC   0(256,R8),REVERSES    MOVE IN THE REVERSING STRING       00125
         TR    0(256,R8),0(R7)       AND REVERSE IN THE FIRST 256       00126
*                                    BYTES OF THE SOURCE INTO THE LAST  00127
*                                    256 BYTES OF THE TARGET.           00128
         SPACE                                                          00129
         LA    R7,256(R7)            MOVE THE SOURCE POINTER            00130
         SH    R9,=H'256'            REDUCE THE LENGTH TO BE PROCESSED  00131
         B     TESTLEN               AND GO BACK FOR MORE               00132
         EJECT                                                          00133
*********************************************************************** 00134
*                                                                     * 00134
* FOR STRINGS LESS THAN 256 CHRACTERS THE LAST 'N' BYTES OF THE       * 00134
* REVERSING STRING ARE MOVED INTO THE TARGET.  'N' IS LENGTH OF THE   * 00134
* SOURCE STRING.  THE TRANSLATE IS THEN EXECUTED FOR THE LENGTH OF    * 00134
* THE SOURCE TO BE PROCESSED.                                         * 00134
*                                                                     * 00139
*      REGISTER USAGE:                                                * 00139
*              R7  -> NEXT SOURCE TEXT TO BE PROCESSED                * 00140
*              R8  -> JUST PAST THE NEXT TARGET SOURCE TO BE          * 00140
*                     PROCESSED                                       * 00140
*              R9  -  LENGTH OF THE SOURCE STRING LEFT TO PROCESS     * 00140
*              R10 -> PARM LIST FROM PL/I                             * 00140
*              R11 -  BASE FOR PROGRAM                                * 00140
*              R12 -> PLI TASK COMMUNICATIONS AREA  -  DO NOT MODIFY  * 00140
*              R13 -> DYNAMIC SAVE AREA                               * 00140
*                                                                     * 00141
*********************************************************************** 00141
         SPACE                                                          00142
LASTREV  DS    0H                                                       00143
         SR    R8,R9          POINT TO FRONT OF TARGET STRING           00144
         LA    R15,REVERSES+256    POINT JUST PAST REVERSES             00145
         SR    R15,R9         BACK UP NEEDED NUMBER OF BYTES            00146
         SPACE                                                          00147
         BCTR  R9,0           SUBTRACT 1 FROM LENGTH FOR EXEC INSTR     00148
         SPACE                                                          00149
         EX    R9,MOVEREV     MOVE IN THE REVERSING STRING              00150
         EX    R9,TRANREV     REVERSE THE STRING                        00151
         SPACE 2                                                        00152
*********************************************************************** 00153
*                                                                     * 00153
* GO BACK TO PL/I                                                     * 00153
*                                                                     * 00155
*********************************************************************** 00155
         SPACE                                                          00156
         REXIT                                                          00157
         EJECT                                                          00158
*********************************************************************** 00159
*                                                                     * 00160
*                            CONSTANT DATA                            * 00160
*                                                                     * 00161
*********************************************************************** 00161
         SPACE                                                          00162
MOVEREV  MVC   0(*-*,R8),0(R15)      MOVE REVERSING STRING              00163
TRANREV  TR    0(*-*,R8),0(R7)       REVERSE STRING                     00164
         SPACE 2                                                        00165
REVERSES DC    XL16'FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0'                   00166
         DC    XL16'EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0'                   00167
         DC    XL16'DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0'                   00168
         DC    XL16'CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0'                   00169
         DC    XL16'BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0'                   00170
         DC    XL16'AFAEADACABAAA9A8A7A6A5A4A3A2A1A0'                   00171
         DC    XL16'9F9E9D9C9B9A99989796959493929190'                   00172
         DC    XL16'8F8E8D8C8B8A89888786858483828180'                   00173
         DC    XL16'7F7E7D7C7B7A79787776757473727170'                   00174
         DC    XL16'6F6E6D6C6B6A69686766656463626160'                   00175
         DC    XL16'5F5E5D5C5B5A59585756555453525150'                   00176
         DC    XL16'4F4E4D4C4B4A49484746454443424140'                   00177
         DC    XL16'3F3E3D3C3B3A39383736353433323130'                   00178
         DC    XL16'2F2E2D2C2B2A29282726252423222120'                   00179
         DC    XL16'1F1E1D1C1B1A19181716151413121110'                   00180
         DC    XL16'0F0E0D0C0B0A09080706050403020100'                   00181
         SPACE 5                                                        00182
*********************************************************************** 00183
*                                                                     * 00183
* PLI DSECT                                                           * 00183
*                                                                     * 00185
*********************************************************************** 00185
PLIPARMS DSECT                                                          00186
PLIFROM  DS    A            POINTS TO SOURCE PARM LOCATOR DESCRIPTOR    00187
PLITO    DS    A            POINTS TO TARGET PARM LOCATOR DESCRIPTOR    00188
         SPACE 3                                                        00189
         SYMBAR MODE=DEC                                                00190
         END                                                            00191
*          DATA SET FG50111102 AT LEVEL 005 AS OF 11/14/03
SWAREQ   TITLE 'SWAREQ_RL_INVOCATION_ROUTINE'                           00001
         PRINT OFF                                                      00002
*          DATA SET PLRENTR    AT LEVEL 000 AS OF 05/18/04
         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*          PASS 0 OR NULL TO OMIT A LOWER SAVE AREA
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*ACSECT  RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART
.*
.* CHANGE 05/18/2004. CHANGE CODE FOR OVERFLOW ROUTINE PER PL/I CODE
.*
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO CEESTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN CEESTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(CEESTART)
         L     15,*-4         LOAD CEESTART ADDR
         LTR   15,15          IS CEESTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         L     14,72(0,13)
         LR    15,0
         STM   14,0,72(1)     STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LA    13,0(1,0)      POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
*          DATA SET PLREXIT    AT LEVEL 000 AS OF 10/09/03
         MACRO ,                                                        00001
&LABL    REXIT &T,&RC=0,&LSA=YES,&RETURN=,&ENV=PLI                      00002
.*                                                                      00003
.*   THIS MACRO IS USED TO EXIT FROM A REENTRANT PROGRAM                00004
.*    ENTERED WITH THE RENTR MACRO                                      00005
.*                                                                      00006
.*   PARMS:                                                             00007
.*   T    - IF SET TO THE VALUE T, BYTE ZERO OF THE HIGHER SAVE AREA    00008
.*          IS SET TO X'FF' TO MARK THE ROUTINE COMPLETE                00009
.*                                                                      00010
.*   RC   - REGISTER OR LITERAL VALUE TO BE PASSES BACK TO THE          00011
.*          CALLING ROUTINE VIA REG 15.  FOR REGISTER SPECIFY THE       00012
.*          REGISTER NUMBER EG. (15).  REGISTERS 2-12 AND 15            00013
.*          MAY BE USED.  FOR LITERAL VALUES CODE RC=XXX WHERE XXX      00014
.*          IS A NUMBER OR ABSOLUTE SYMBOL LESS THAN 4096.              00015
.*                                                                      00016
.*   LSA -  IF SET TO THE VALUE NO, THEN IT ASSUMED THAT THIS           00017
.*          ROUTINE HAS NO LOWER SAVE AREA AND THAT R13 POINTS          00018
.*          TO THE PLACE WE WILL RESTORE OUR REGISTERS FROM             00019
.*                                                                      00020
.*   RETURN - REGISTER VALUE IN THE FORM (R) (WHERE R IS 2-12 OR 0)     00021
.*          THIS VALUE IS RETURNED IN REGISTER 0 TO THE CALLING         00022
.*          ROUTINE.                                                    00023
.*                                                                      00024
.*                                                                      00025
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR                         00026
.*          VALUES:                                                     00027
.*          PLI  - EXPAND THE MACRO FOR PL/I ENVIRONMENT USING THE      00028
.*                 PL/I RUN TIME STACK FOR THE DSA AND WORK AREA        00029
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN   00030
.*                 FOR THE DSA AND WORK AREA.                           00031
.*          BOTH - (THE DEFAULT).  DETERMINE IF THIS IS A PL/I          00032
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.   00033
.*                 IF NOT, USE A GETMAIN                                00034
.*                                                                      00035
.*                                                                      00036
.* SAMPLE:                                                              00037
.*RET     REXIT RC=(15)                                                 00038
.*                                                                      00039
.*                                                                      00040
.* CHANGE 10/9/2003.  FOR ENV=BOTH, USE CEESTART INSTEAD OF PLISTART    00041
.*                                                                      00042
.*                                                                      00043
         GBLC  &@LWRWKL                                                 00044
         GBLA  &@RENTR1                                                 00045
         LCLC  &LCLENV,&IDX                                             00046
.*                                                                      00047
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV         00048
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD           00049
.*                                                                      00050
&IDX     SETC  '&SYSNDX'                                                00051
&LCLENV  SETC  '&ENV'                                                   00052
         AIF   ('&ENV' EQ 'IPCS').ENVOK                                 00053
         AIF   ('&ENV' EQ 'BOTH').ENVOK                                 00054
         AIF   ('&ENV' EQ 'OS').ENVOK                                   00055
         AIF   ('&ENV' EQ 'PLI').ENVOK                                  00056
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'             00057
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'                 00058
&LCLENV  SETC  'BOTH'                                                   00059
.ENVOK   ANOP                                                           00060
.*                                                                      00061
.*       IF THE SYSPARM WAS SET TO BOTH, PLI, OR OS, THEN OVERRIDE      00062
.*       THE ENV PARM TO THIS VALUE.                                    00063
.*                                                                      00064
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X00065
               ('&SYSPARM' NE 'PLI') AND                               X00066
               ('&SYSPARM' NE 'IPCS') AND                              X00067
               ('&SYSPARM' NE 'OS')).LSACHK                             00068
&LCLENV  SETC  '&SYSPARM'                                               00069
.LSACHK  ANOP                                                           00070
.*                                                                      00071
.*       IF LSA=NO WAS SPECIFIED, THEN THERE IS NO LOWER SAVE           00072
.*       AREA OR ANY AUTOMATIC VARIABLES.  DO NOT ATTEMPT TO BACK       00073
.*       UP ONE SAVE AREA.                                              00074
.*                                                                      00075
         AIF   ('&LSA' EQ 'NO').NOLEN                                   00076
.*                                                                      00077
.*       FOR NORMAL SAVE AREA PROCESSING, BACK UP ONE SAVE AREA.        00078
.*       IF THE SAVE AREA WAS GOTTEN WITH A GETMAIN (OS FORMAT),        00079
.*       THEN WE NEED THE LENGTH OF IT.  THIS IS STORED AT OFFSET       00080
.*       12 PAST THE ENTRY POINT BY THE RENTR MACRO.  WE DO NOT         00081
.*       NEED THE SAVE AREA LENGTH FOR PL/I PROCESSING CODE             00082
.*                                                                      00083
         AIF   ('&LABL' EQ '').NOLABL                                   00084
&LABL    DS    0H                                                       00085
.NOLABL  ANOP                                                           00086
         LA    1,0(0,13)           WORK AREA ADDRESS                    00087
         L     13,4(0,13)          OLD SAVE AREA ADDRESS                00088
.*                                                                      00089
.*       IF A REGISTER WAS SPECIFIED FOR THE RETURN VALUE, PUT IT IN    00090
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00091
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00092
.*                                                                      00093
         AIF   ('&RETURN' EQ '').NORET                                  00094
         AIF   ('&RETURN'(1,1) NE '(').NORET                            00095
         ST    &RETURN(1),20(0,13)     SAVE RETURNED PARM               00096
.NORET   ANOP                                                           00097
.*                                                                      00098
.*       IF THIS IS NOT PL/I, GET THE LENGTH OF THE WORK AREA FOR       00099
.*       DOING THE FREEMAIN                                             00100
.*                                                                      00101
         AIF   ('&LCLENV' EQ 'PLI').PLI1                                00102
         L     14,16(0,13)         GET ORIG ENTRY POINT                 00103
         L     0,12(14)            LOAD LENGTH OF WORK AREA (RENTR)     00104
.*                                                                      00105
.*       IF A REGISTER WAS SPECIFIED FOR THE RC VALUE, PUT IT IN        00106
.*       THE APPROPRIATE PLACE IN THE SAVE AREA SO THAT IT              00107
.*       WILL GET RESTORED WHEN THE LOAD MULTIPLE IS DONE.              00108
.*                                                                      00109
.PLI1    ANOP                                                           00110
         AIF   ('&RC' EQ '').RCNREG                                     00111
         AIF   ('&RC'(1,1) NE '(').RCNREG                               00112
         ST    &RC(1),16(0,13)     SAVE RETURN CODE                     00113
.RCNREG  ANOP  ,                                                        00114
.*                                                                      00115
.*       DO FREEMAIN PROCESSING IF WE NEED TO                           00116
.*       FOR FORMAT OS WE ALWAYS DO THE FREEMAIN.  FOR FORMAT BOTH      00117
.*       WE DO THE FREEMAIN IF THE EXTERNAL REFERENCE TO CEESTART IS    00118
.*       UNRESOLVED.  THIS IS NOT A FOOLPROOF WAY OF DETECTING THE      00119
.*       PL/I ENVIRONMENT, BUT AT GTE CSC THIS WORKS BECAUSE BAL        00120
.*       ROUTINES IN A PL/I PROGRAM ARE ALWAYS PL/I CALLED SUBROUTINES. 00121
.*                                                                      00122
         AIF   ('&LCLENV' EQ 'PLI').CKRC                                00123
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH                             00124
         AIF   (&@RENTR1 NE 0).NOWXTRN                                  00125
         WXTRN CEESTART                                                 00126
&@RENTR1 SETA  1                                                        00127
.NOWXTRN ANOP                                                           00128
         CNOP  0,4                                                      00129
         B     *+8            SKIP ADDRESS CONSTANT                     00130
         DC    V(CEESTART)                                              00131
         L     15,*-4         LOAD CEESTART ADDR                        00132
         LTR   15,15          IS CEESTART LINKED IN?                    00133
         BNZ   PL1&IDX                                                  00134
.NOBOTH  ANOP                                                           00135
         FREEMAIN R,LV=(0),A=(1)                                        00136
.CKRC    ANOP                                                           00137
         AIF   ('&LCLENV' NE 'BOTH').NOBOTH1                            00138
PL1&IDX  DS    0H                                                       00139
.NOBOTH1 ANOP                                                           00140
.*                                                                      00141
.*       RELOAD THE REGISTERS AND RETURN.  IF A LITERAL WAS             00142
.*       SPECIFIED FOR THE RETURN CODE, INSERT IT IN R15 AT THIS TIME.  00143
.*                                                                      00144
         LM    14,12,12(13)        RESTORE REGISTERS                    00145
         AIF   ('&RC' EQ '').NORC                                       00146
         AIF   ('&RC'(1,1) EQ '(').NORC                                 00147
         AIF   ('&RC' EQ '0').ZERORC                                    00148
         LA    15,&RC              SET RETURN CODE                      00149
         AGO   .NORC                                                    00150
.ZERORC  SLR   15,15               ZERO RETURN CODE                     00151
.NORC    AIF   ('&T' NE 'T').NOT                                        00152
         MVI   12(13),X'FF'        SET RETURN INDICATION                00153
.NOT     BR    14                  RETURN                               00154
         MEXIT                                                          00155
.*                                                                      00156
.*       THIS BLOCK OF CODE IS GENERATED WHEN THERE IS NO LOWER DSA.    00157
.*                                                                      00158
.NOLEN   AIF   ('&LABL' EQ '').NOLAB                                    00159
&LABL    DS    0H                                                       00160
.NOLAB   ANOP  ,                                                        00161
         AIF   ('&RC'(1,1) NE '(').CKRC                                 00162
         AIF   ('&RC' EQ '(15)').RC15                                   00163
         LR    15,&RC(1)           LOAD RETURN CODE                     00164
.RC15    L     14,12(0,13)         RESTORE R14                          00165
         LM    2,12,28(13)         RESTORE R2-R12                       00166
         AGO   .NORC                                                    00167
         MEND  , REXIT                                   RES 09/86      00168
*          DATA SET SYMBAR     AT LEVEL 000 AS OF 02/13/90
         MACRO                                                          00001
         SYMBAR &MODE=DEC                                               00002
R0       EQU   0  PARAMETER PASSING REG./UTILITY                        00003
R1       EQU   1  PARAMETER PASSING REG./UTILITY                        00004
R2       EQU   2  UTILITY                                               00005
R3       EQU   3  UTILITY                                               00006
R4       EQU   4  UTILITY                                               00007
R5       EQU   5  UTILITY                                               00008
R6       EQU   6  UTILITY                                               00009
R7       EQU   7  UTILITY                                               00010
R8       EQU   8 UTILITY                                                00011
R9       EQU   9  UTILITY                                               00012
         AIF   (K'&MODE NE 3).MHEX                                      00013
         AIF   ('&MODE'(1,3) EQ 'HEX').HEX                              00014
         AIF   ('&MODE'(1,3) EQ 'DEC').DEC                              00015
.MHEX    MNOTE 4,'INVALID KEYWORD OPERAND, ASSUME ''HEX'''              00016
.HEX     ANOP                                                           00017
RA       EQU   10 UTILITY                                               00018
RB       EQU   11 UTILITY                                               00019
RC       EQU   12 UTILITY                                               00020
RD       EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00021
RE       EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00022
RF       EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00023
         AGO   .END                                                     00024
.DEC     ANOP                                                           00025
R10      EQU   10 UTILITY                                               00026
R11      EQU   11 UTILITY                                               00027
R12      EQU   12 UTILITY                                               00028
R13      EQU   13 NORMALLY CONTAINS SAVE AREA ADDRESS                   00029
R14      EQU   14 NORMALLY CONTAINS RETURN ADDRESS                      00030
R15      EQU   15 NORMALLY CONTAINS ENTRY POINT ADDRESS                 00031
.END     MEND                                                           00032
         PRINT ON                                                       00006
*********************************************************************** 00008
*                                                                     * 00008
* SEGMENT NAME:                                                       * 00008
*                                                                     * 00008
*    SWAREQ -- SWAREQ_RL_INVOCATION_ROUTINE                           * 00008
*                                                                     * 00027
* INPUTS (*TO FUNCTIONS):                                             * 00027
*                                                                     * 00009
*    SWATOK -- SWA (SCHEDULER WORK AREA) TOKEN (*1)                   * 00009
*       THE PARM TO THIS ROUTINE IS THE ADDRESS OF THE 3 BYTE TOKEN   * 00010
*       REPRESENTING THE SWA CONTROL BLOCK.  IN PRE-ESA DAYS, THIS    * 00010
*       WAS THE THREE BYTE ADDRESS.  NOW, WITH THE SWA ABOVE THE 16   * 00010
*       MEGABYTE LINE. THIS IS A THREE BYTE TOKEN.  ON ENTRY R1       * 00010
*       POINTS TO THE 3 BYTE TOKEN.                                   * 00010
*                                                                     * 00026
* FUNCTIONS:                                                          * 00026
*                                                                     * 00026
*    1. BUILD THE SWAREQ PARM LIST AND EPA WORK AREA.                 * 00026
*                                                                     * 00028
*    2. CALL SWAREQ TO CONVERT THE TOKEN INTO AN ADDRESS              * 00028
*                                                                     * 00029
* OUTPUTS (*FROM FUNCTIONS):                                          * 00029
*                                                                     * 00016
*    ADDR -- CONTROL BLOCK ADDRESS (*2)                               * 00016
*       THE CONTROL BLOCK ADDRESS IS RETURNED IN REGISTER R0.         * 00017
*                                                                     * 00019
*    RC -- RETURN CODE (*2)                                           * 00019
*       THE RETURN CODE FROM SWAREQ IS RETURNED IN REGISTER R15.      * 00020
*       VALUES: 00  -  CONVERSION WORKED                              * 00021
*               08  -  INVALID SVA IN THE SWA PREFIX                  * 00022
*               24  -  (HEX) ATTEMPT TO READ A BLOCK NOT YET WRITTEN  * 00023
*               28  -  (HEX) INVALID POINTER TO THE EPA               * 00024
*                                                                     * 00032
* NOTES:                                                              * 00032
*                                                                     * 00032
*    1. THIS ROUTINE SUPPORTS BEING CALLED IN A PL/I ENVIRONMENT, BUT * 00032
*       IS DESIGNED TO BE CALLED FROM ASSEMBLER.                      * 00032
*                                                                     * 00035
*    2. ISSUE HISTORY:                                                * 00035
*                                                                     * 00036
*       REASON FOR ISSUE 01:  3/30/92                                 * 00036
*       INITIAL RELEASE                                               * 00037
*                                                                     * 00038
*       REASON FOR ISSUE 02:  11/14/2003                              * 00038
*       ADD AMODE AND RMODE LINES TO GET RID OF LINKER MESSAGES       * 00039
*                                                                     * 00040
*********************************************************************** 00040
         EJECT                                                          00041
SWAREQ1  AMODE 31                                                       00042
SWAREQ1  RMODE ANY                                                      00043
SWAREQ   RENTR  BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA),ENV=BOTH        00044
         MVC   SWALIST(SWALEN),CONSWA   INITIALIZE SWA PARM LIST        00045
         XC    EPAAREA(EPALEN),EPAAREA  ZERO OUT THE EPA                00046
         LA    R3,EPAAREA               POINT TO THE EPA                00047
         ST    R3,EPAPTR                SAVE THE ADDRESS                00048
         USING SWAEPA,R3                ADDRESS THE EPA SYMBOLICLY      00049
         SPACE                                                          00050
         MVC   SWVA(3),0(R10)           COPY THE SWA BLOCK TOKEN        00051
         SPACE                                                          00052
         SWAREQ FCODE=RL,EPA=EPAPTR,UNAUTH=YES,MF=(E,SWALIST)           00053
         SPACE                                                          00054
         L     R0,SWBLKPTR              GET THE 31 BIT ADDR OF THE JFCB 00055
RETURN   DS    0H                                                       00056
         REXIT ENV=BOTH,RETURN=(0),RC=(15)                              00057
         DROP  R3,R11                                                   00058
         SPACE                                                          00059
CONSWA   SWAREQ FCODE=RL,MF=L                                           00060
SWALEN   EQU   *-CONSWA                                                 00061
         LTORG                                                          00062
WORKAREA DSECT                                                          00063
         DS    26F                                                      00064
         DS    0F                                                       00065
EPAPTR   DS    A                                                        00066
SWALIST  DS    XL(SWALEN)                                               00067
EPAAREA  DS    XL(EPALEN)                                               00068
         DS    0D                                                       00069
WORKLEN  EQU   *-WORKAREA                                               00070
EPALEN   EQU   L'SWAEPAX                                                00071
         SPACE 3                                                        00072
         PRINT NOGEN                                                    00073
         CVT   DSECT=YES                                                00074
         SPACE                                                          00075
         IEFZB505 LOCEPAX=YES                                           00076
         SPACE                                                          00077
         IEFJESCT                                                       00078
         SPACE                                                          00079
         SYMBAR MODE=DEC                                                00080
         END                                                            00081
