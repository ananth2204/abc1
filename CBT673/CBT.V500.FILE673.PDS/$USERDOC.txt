IEFBR14/CCFDELET

Do not use IEFBR14 to delete or uncatalog data sets. Use the inhouse
written program CCFDELET. When you have a job step that will allocate a
new data set and you wish to avoid a JCL error caused by an undeleted
old version of it, you can use CCFDELET in a prior step to check for
old versions of the data set and delete them if they exist. Following
are two examples of using the CCFDELET program to delete data sets. The
first example uses sysin control cards and would be placed in the
jobstream being submitted (aka RUNJCL). The second example would be
used when setting up a PROC because it avoids using control cards.

JOBSTREAM Example:

//STEP1 EXEC PGM=CCFDELET
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
CCF.DELETE.DSN1
CCF.DELETE.DSN2
CCF.DELETE.DSN3
/*

PROC Example:

//STEP1 EXEC PGM=CCFDELET,PARM='CCF.DELETE.DSN1'
//STEP2 EXEC PGM=CCFDELET,PARM='CCF.DELETE.DSN2'
//STEP3 EXEC PGM=CCFDELET,PARM='CCF.DELETE.DSN3'

Another nice feature of CCFDELET is that data sets migrated by DFHSM
are not recalled before they are deleted. This is why the program
IEFBR14 should not be used to delete or uncatalog data sets. IEFBR14
would recall a data set that is migrated to tape and then delete the
data set while CCFDELET tells DFHSM to delete the data set without
first recalling it.

Restrictions:

CCFDELET/IDCAMS cannot delete a data set that is not catalogued. It
will assume the data set does not exist and produce a return code of 0.

Condition Codes:
CCFDELET works by invoking the IBM utility IDCAMS to delete datasets.
The messages sent to SYSPRINT and the condition code are produced by
IDCAMS except that a condition code 8 (which indicates that the data
set did not exist) is changed to a condition code of 0. If the return
code from a CCFDELET step is 0, this indicates that the data set has
been deleted or never existed. Any other condition code indicates that
the data set might still exist and should be investigated.
