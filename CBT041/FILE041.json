{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011123000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 823004, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE041.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 823004, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 823004, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE041.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0e\\x10'", "DS1TRBAL": "b'Az'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'P\\xf4\\xfd\\xd0\\x00\\x00\\x00R\\x00\\x00\\x00R\\x00\\x0e\\x00\\x0f'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$ABSTRAC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION\n\n    ABSTRACT:         BENJ. FRANKLIN HAS DEVELOPED EXITS TO MVS/SP JES2\n                      TO PROVIDE TABLE DRIVEN FORMS CONTROL FOR XEROX\n                      8700/9700 LASER PRINTERS.  THE EXITS INSERT XEROX\n                      DJDE COMMANDS BETWEEN REPORTS GOING TO THE\n                      PRINTERS BASED ON THE SYSOUT CLASS AND FORMS ID\n                      SPECIFIED IN STANDARD JCL.\n\n    DATE:             NOVEMBER 17, 1988\n\n    RELEASE:          MVS/SP JES2 1.3.6\n\n    CURRENT AUTHOR:   MIKE SHEEDY, SENIOR SYSTEMS SPECIALIST\n                      BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSN.\n                      P.O. BOX 6400\n                      PORTLAND, OREGON  97228-6400\n\n    PHONE:            503-275-1229\n\n    SHARE INSTALLATION CODE:  BFS\n\n    MAILING ADDRESS:  BENJ. FRANKLIN FINANCIAL CENTER\n                      P.O. BOX 6400\n                      PORTLAND, OREGON  97228-6400\n\n    SHIPPING ADDRESS: BENJ. FRANKLIN FINANCIAL CENTER\n                      501 S.E. HAWTHORNE BLVD.\n                      PORTLAND, OREGON  97214\n\n    ORIGINAL AUTHOR:  NARM TCHUN, LEAD SYSTEMS PROGRAMMER\n                      GATX NETWORK SERVICES, GATX CORPORATION\n                      120 SOUTH RIVERSIDE PLAZA\n                      CHICAGO, ILLINOIS  60606\n\n               NOTE:  NARM TCHUN NO LONGER WORKS THERE.\n\n      DOCUMENTATION:  SYS2.JES2134.EXITSRC($DESC)\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$ASM1": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASASM JOB (D439),\n//             '*JES2 FORMS CONTROL ',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($ASM1)\n//*\n//* THIS JOB ASSEMBLES AND LINKS THE VARIOUS JES2 EXITS WHICH MAKE UP\n//* OUR XEROX 8700/9700 FORMS CONTROL SYSTEM.  MODIFY THE JCL TO MEET\n//* YOUR SHOP'S STANDARDS.\n//*\n//* COMPRESS SYS2.JES2136.EXITLOAD.\n//*\n//COMP     EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//EXITLOAD DD  DSN=SYS2.JES2136.EXITLOAD,          <------ IF YOU USE\n//             DISP=SHR                            <------ OWN LIB\nEXITLOAD COPY OUTDD=EXITLOAD,INDD=EXITLOAD\n//*\n//ASM      EXEC PGM=IEV90,                         <------ ASM H V 2\n//             COND=(0,LT),\n//             REGION=1024K,\n//             PARM='LINECOUNT(75),LIST,OBJECT,NODECK,XREF(SHORT)'\n//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR\n//         DD  DSN=SYS1.SMPSTS,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR           <------ JES2 MACROS\n//         DD  DSN=SYS2.JES2136.EXITSRC,DISP=SHR   <------ EXITS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DSN=SYS2.JES2136.EXITSRC(EXIT1MIT), <------ SOURCE\n//             DISP=SHR\n//SYSLIN   DD  DSN=&&OBJ,\n//             DISP=(,PASS),\n//             UNIT=SYSDA,\n//             SPACE=(CYL,(1,1)),\n//             DCB=(RECFM=FB,BLKSIZE=960,LRECL=80)\n//SYSUT1   DD  UNIT=SYSDA,\n//             SEP=SYSGO,\n//             SPACE=(CYL,(5,5))\n//*\n//LINK     EXEC PGM=HEWL,\n//             COND=(0,LT),\n//             PARM='XREF,LET,REUS,AC=1'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,\n//             SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=SYS2.JES2136.EXITLOAD,         <------ ALLOCATE\n//             DISP=SHR                           <------ YOUR OWN,\n//*YSLMOD  DD  DSN=SYS1.LINKLIB,                  <------ OR USE\n//*            UNIT=3380,                         <------ SYS1.LINKLIB\n//*            VOL=SER=MVSRES,                    <------\n//*            DISP=SHR                           <------\n//SYSLIN   DD  DSN=&&OBJ,\n//             DISP=(OLD,DELETE)\n//         DD  *\n         ORDER EXIT1MIT,EXIT1A,EXIT1B,EXIT5,EXIT15,EXIT250\n         PAGE  EXIT1MIT\n         NAME  EXIT1MIT(R)\n//*\n//* IF NOT BENJ. FRANKLIN, THEN SKIP THE FOLLOWING STEPS.  THEY HAVE\n//* TO DO WITH SPECIALIZED DOS/VSE POWER SUPPORT FOR THE XEROX PRINTER,\n//* AND RETURN CODE CHECKING ON THE ASSEMBLY (NOT SUPPLIED ON TAPE).\n//*\n//TEC021   EXEC TECASM,                           ASSEMBLE TEC021\n//             COND=(0,LT),\n//             MOD=TEC021,\n//             LLIB='SYS2.JES2136.EXITLOAD'\n//ASM.SYSLIB DD DSN=SYS2.TECH.MACLIB,DISP=SHR\n//         DD  DSN=SYS2.TECH.SOURCE,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS2.JES2136.EXITSRC,DISP=SHR  CONTAINS EXIT1TAB\n//\n//* TEST FOR NON-ZERO RETURN CODES.\n//*\n//STEP97   EXEC PGM=IEFBR14,   DON'T RUN IF ANY STEP IS NON-ZERO\n//             COND=(0,LT)\n//*\n//STEP98   EXEC PGM=TEC064,    DON'T RUN IF STEP97 RUNS (IE: RUN IF ANY\n//             COND=(0,EQ,STEP97),  STEP IS NON-ZERO)\n//         PARM='ASSEMBLY FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,    DON'T RUN IF NO STEP ABENDS\n//             COND=ONLY,\n//         PARM='ASSEMBLY FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$ASM4": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASASM JOB (D439),\n//             '*JES2 EXIT4 JCL SCAN',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($ASM4)\n//*\n//* THIS JOB ASSEMBLES AND LINKS JES2 EXIT4MIT WHICH SCANS JOB JCL FOR\n//* //JOBCAT STATEMENTS.\n//* YOUR SHOP PROBABLY WILL NOT BE INTERESTED IN THIS AS IT HAS NOTHING\n//* TO DO WITH XEROX FORMS CONTROL.\n//*\n//* COMPRESS SYS2.JES2136.EXITLOAD.\n//*\n//COMP     EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//EXITLOAD DD  DSN=SYS2.JES2136.EXITLOAD,          <------ IF YOU USE\n//             DISP=SHR                            <------ OWN LIB\nEXITLOAD COPY OUTDD=EXITLOAD,INDD=EXITLOAD\n//*\n//ASM      EXEC PGM=IEV90,                         <------ ASM H V 2\n//             COND=(0,LT),\n//             REGION=1024K,\n//             PARM='LINECOUNT(75),LIST,OBJECT,NODECK,XREF(SHORT)'\n//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR\n//         DD  DSN=SYS1.SMPSTS,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR           <------ JES2 MACROS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DSN=SYS2.JES2136.EXITSRC(EXIT4MIT), <------ SOURCE\n//             DISP=SHR\n//SYSLIN   DD  DSN=&&OBJ,\n//             DISP=(,PASS),\n//             UNIT=SYSDA,\n//             SPACE=(CYL,(1,1)),\n//             DCB=(RECFM=FB,BLKSIZE=960,LRECL=80)\n//SYSUT1   DD  UNIT=SYSDA,\n//             SEP=SYSGO,\n//             SPACE=(CYL,(5,5))\n//*\n//LINK     EXEC PGM=HEWL,\n//             COND=(0,LT),\n//             PARM='XREF,LET,REUS,AC=1'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,\n//             SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=SYS2.JES2136.EXITLOAD,         <------ ALLOCATE\n//             DISP=SHR                           <------ YOUR OWN,\n//*YSLMOD  DD  DSN=SYS1.LINKLIB,                  <------ OR USE\n//*            UNIT=3380,                         <------ SYS1.LINKLIB\n//*            VOL=SER=MVSRES,                    <------\n//*            DISP=SHR                           <------\n//SYSLIN   DD  DSN=&&OBJ,\n//             DISP=(OLD,DELETE)\n//         DD  *\n         ORDER EXIT4MIT,EXIT4\n         PAGE  EXIT4MIT\n         NAME  EXIT4MIT(R)\n//\n//* TEST FOR NON-ZERO RETURN CODES.\n//*\n//STEP97   EXEC PGM=IEFBR14,   DON'T RUN IF ANY STEP IS NON-ZERO\n//             COND=(0,LT)\n//*\n//STEP98   EXEC PGM=TEC064,    DON'T RUN IF STEP97 RUNS (IE: RUN IF ANY\n//             COND=(0,EQ,STEP97),  STEP IS NON-ZERO)\n//         PARM='ASSEMBLY FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,    DON'T RUN IF NO STEP ABENDS\n//             COND=ONLY,\n//         PARM='ASSEMBLY FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$BACK1": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASEBO JOB (D439),\n//             '*FORMS CNTL BACKOUT ',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($BACK1)\n//*\n//* THIS JOB BACKS OUT NEW XEROX FORMS CONTROL JES2 EXIT1MIT.  $TURN1\n//* MUST HAVE BEEN RUN PRIOR TO THIS JOB.  ONLY APPLICABLE TO BENJ.\n//* FRANKLIN.\n//*\n//BACKOUT  EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//MVSPG4   DD  UNIT=3380,VOL=SER=MVSPG4,DISP=OLD\n//SYSIN    DD  *\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT1MIT,NEWNAME=EXIT1MIN\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT1MIB,NEWNAME=EXIT1MIT\n  RENAME   DSNAME=SYS2.TECH.LINKLIB,VOL=3380=MVSPG4,                   X\n               MEMBER=TEC021,NEWNAME=TEC021N\n  RENAME   DSNAME=SYS2.TECH.LINKLIB,VOL=3380=MVSPG4,                   X\n               MEMBER=TEC021B,NEWNAME=TEC021\n//*\n//* TEST FOR NON-ZERO RETURN CODE.\n//*\n//STEP98   EXEC PGM=TEC064,\n//             COND=(0,EQ),\n//         PARM='BACKOUT FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,\n//             COND=ONLY,\n//         PARM='BACKOUT FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$BACK4": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASEBO JOB (D439),\n//             '*JCL SCAN BACKOUT   ',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($BACK4)\n//*\n//* THIS JOB BACKS OUT NEW JCL SCAN JES2 EXIT4MIT.  $TURN4 MUST HAVE\n//* BEEN RUN PRIOR TO THIS JOB.  ONLY APPLICABLE TO BENJ.  FRANKLIN.\n//*\n//BACKOUT  EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//SYSIN    DD  *\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT4MIT,NEWNAME=EXIT4MIN\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT4MIB,NEWNAME=EXIT4MIT\n//*\n//* TEST FOR NON-ZERO RETURN CODE.\n//*\n//STEP98   EXEC PGM=TEC064,\n//             COND=(0,EQ),\n//         PARM='BACKOUT FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,\n//             COND=ONLY,\n//         PARM='BACKOUT FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$COMP": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASCOM JOB D439,SHEEDY,CLASS=A,MSGCLASS=X,NOTIFY=TSMAS\n/*JOBPARM ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($COMP)\n//*\n//* THIS JOB COMPRESSES SYS2.JES2136.EXITSRC.\n//*\n//* BACKUP - CREATE A COPY OF THE GUY WE WANT TO COMPRESS.\n//*\n//BACKUP   EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(10,10))\n//IN1      DD  DISP=SHR,DSN=SYS2.JES2136.EXITSRC    <-------\n//OUT1     DD  DISP=(NEW,CATLG,DELETE),DSN=SYS2.JES2136.TEMPSRC,\n//             UNIT=SYSDA,DCB=(*.IN1),SPACE=(CYL,(5,5,100))\n//SYSIN    DD    *\n   COPY O=OUT1,I=IN1\n/*\n//*\n//* COMPR - COMPRESS THE DATA SET.  BYPASS THIS STEP IF ZERO IS LESS\n//*         THAN RETURN CODE FOR THE BACKUP STEP.\n//*\n//COMPR    EXEC PGM=IEBCOPY,COND=(0,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//IN1      DD  DISP=SHR,DSN=SYS2.JES2136.EXITSRC    <-------\n   COPY OUTDD=IN1,INDD=IN1\n/*\n//*\n//* DELET - DELETE THE BACKUP DATA SET.  BYPASS THIS STEP IF ZERO IS\n//*         LESS THAN RETURN CODE OF ANY PRECEDING STEP.\n//*\n//DLET     EXEC PGM=IEFBR14,COND=(0,LT)\n//OUT3     DD  DISP=(OLD,DELETE),DSN=SYS2.JES2136.TEMPSRC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$COPY": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASCPY JOB D439,SHEEDY,CLASS=Q,MSGCLASS=X,NOTIFY=TSMAS,TYPRUN=HOLD,\n//  USER=TSACE\n/*JOBPARM ROOM=0350,LINECT=0\n//* SEE SYS2.JES2136.EXITSRC($COPY)\n//*\n//* THIS JOB COPIES SYS2.JES2136.EXITSRC ONTO A TAPE FOR SENDING TO\n//* ANOTHER SHOP.  IT ALSO PRINTS A COPY OF THE DOCUMENTATION.\n//*\n//* THIS STEP INITIALIZES THE TAPE VOLUME ID TO 'JES2EX'.\n//* REPLY 'M' WHEN MESSAGE IEC701D DISPLAYS.\n//*\n//TAPEINIT EXEC PGM=IEHINITT\n//SYSPRINT DD  SYSOUT=*\n//LABEL    DD  DSN='OUTSIDE TAPE FOR JES2 EXITS',\n//             DISP=(NEW,KEEP),\n//             UNIT=(TAPE,1,DEFER),\n//             VOL=SER=JES2EX,\n//             LABEL=(1,BLP,EXPDT=98000),\n//             DCB=DEN=4            3 = 1600 BPI, 4 = 6250 BPI\n//SYSIN    DD  *\nLABEL    INITT SER=JES2EX\n//*\n//* THIS STEP COPIES SYS2.JES2136.EXITSRC ONTO THE TAPE.\n//*\n//BACKUP   EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,\n//             SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,\n//             SPACE=(CYL,(1,1))\n//DISK     DD  DSN=SYS2.JES2136.EXITSRC,\n//             DISP=SHR\n//TAPE     DD  DSN=BKUP.SYS2.JES2136.EXITSRC,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=(TAPE,,DEFER),\n//             VOL=SER=JES2EX,\n//             LABEL=(1,SL,EXPDT=98000),\n//             DCB=DEN=4            3 = 1600 BPI, 4 = 6250 BPI\n//SYSIN    DD  *\nEXITFILE COPY  OUTDD=TAPE,INDD=DISK\n//*\n//* THIS STEP PRINTS A COPY OF THE DOCUMENTATION.\n//*\n//SMART    EXEC PGM=TEC250,      BF DOCUMENT FORMATING PROGRAM\n//             PARM=LMI\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//SYSLIB   DD  DSN=SYS2.JES2136.EXITSRC($DESC),\n//             DISP=SHR\n//SYSUT2   DD  SYSOUT=(F,,SPB8),COPIES=2\n//SYSUT3   DD  UNIT=3380,\n//             VOL=SER=MVSLB1,\n//             SPACE=(CYL,(1,1))\n//SYSUDUMP DD  SYSOUT=*\n//WORDS    DD  DSN=BFNT.DOCLIB(WORDS),\n//             DISP=SHR\n//SYSUT1   DD  *\n..COVER\n..COVER\n..TITLE BENJ. FRANKLIN'S XEROX FORMS CONTROL\n..SPELL\nDSN\n..SPELL\n..SPCHK OFF\n..DATE 01/23/89\n..VERSION 3.2\n..SUPER 11/17/88\n..PREP MIKE SHEEDY\n..APPROVED\n..INDEX 10000\n INCLUDE,PARMS,BFGROTAT\n..INDEX\n..INCLUDE SYSLIB($DESC)\n\n\n\n\n END OF DOCUMENT.\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DESC": {"ttr": 533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "..SEC * JES2 EXITS FOR XEROX FORMS CONTROL\n\n\n\n    ABSTRACT:         BENJ. FRANKLIN HAS DEVELOPED EXITS TO MVS/SP JES2\n\n                      TO PROVIDE TABLE DRIVEN FORMS CONTROL FOR XEROX\n\n                      8700/9700 LASER PRINTERS.  THE EXITS INSERT XEROX\n\n                      DJDE COMMANDS BETWEEN REPORTS GOING TO THE\n\n                      PRINTERS BASED ON THE SYSOUT CLASS AND FORMS ID\n\n                      SPECIFIED IN STANDARD JCL.\n\n\n\n\n\n    CURRENT AUTHOR:   MIKE SHEEDY, SENIOR SYSTEMS SPECIALIST\n\n                      BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSN.\n\n                      PORTLAND, OREGON\n\n\n\n    PHONE:            503-275-1229\n\n\n\n    SHARE INSTALLATION CODE:  BFS\n\n\n\n    MAILING ADDRESS:  BENJ. FRANKLIN FINANCIAL CENTER\n\n                      P.O. BOX 6400\n\n                      PORTLAND, OREGON  97228-6400\n\n\n\n    SHIPPING ADDRESS: BENJ. FRANKLIN FINANCIAL CENTER\n\n                      501 S.E. HAWTHORNE BLVD.\n\n                      PORTLAND, OREGON  97214\n\n\n\n    ORIGINAL AUTHOR:  NARM TCHUN, LEAD SYSTEMS PROGRAMMER\n\n                      GATX NETWORK SERVICES, GATX CORPORATION\n\n                      120 SOUTH RIVERSIDE PLAZA\n\n                      CHICAGO, ILLINOIS  60606\n\n               NOTE:  NARM TCHUN NO LONGER WORKS THERE.\n\n\n\n      DOCUMENTATION:  SYS2.JES2136.EXITSRC($DESC)\n..PAGE\n..SEC *.* DISCLAIMER\n\n\n         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION\n\n\n                           DISCLAIMER\n\n\n\n WE INTEND TO MAKE THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED\n\n AVAILABLE TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS, PROBABLY THROUGH\n\n SHARE (EITHER THE JES2 MODS TAPE, OR THE CBT MODS TAPE).  WE MAY ALSO\n\n SUPPLY COPIES OF THE EXITS TO INTERESTED SHOPS DIRECTLY.  WE MAKE NO\n\n WARRANTY OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR\n\n ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES\n\n RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.\n\n\n\n WHILE YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY\n\n YOURSELF, I WILL BE HAPPY TO ANSWER A REASONABLE NUMBER OF QUESTIONS\n\n BY PHONE CONCERNING THEIR INSTALLATION.  I ALSO WELCOME COMMENTS AND\n\n SUGGESTIONS FOR IMPROVEMENTS.\n\n\n..PAGE\n\n\n    JUSTIFICATION:    WE DECIDED TO REPLACE OUR IBM 1403 IMPACT PRINTERS\n\n                      WITH A XEROX 8700 LASER PRINTER.  A REQUIREMENT\n\n                      WAS THAT WE IMPLEMENT THE PRINTING OF DUPLEX ON\n\n                      WHITE 3-HOLE PAPER AS OUR DEFAULT IN AS SHORT A\n\n                      TIME AS POSSIBLE.  THE JES2 USER EXIT APPROACH\n\n                      APPEARED TO BE THE FASTEST SOLUTION.\n\n\n\n    BENEFITS DERIVED FROM USING JES2 USER EXITS:\n\n                      1) REDUCES OPERATOR INTERVENTION FOR FORM SETUPS.\n\n                      2) JES2 SUPPORT FOR DUPLEX PRINTING.\n\n                      3) SIMPLIFIES FORMS SPECIFICATION THRU JCL.\n\n                         IE:  //DDNAME  DD  SYSOUT=(C,,FORM)\n\n                      4) STANDARDIZES AND CENTRALIZES FORMS CONTROL.\n\n                      5) PROVIDES OUTPUT DESTINATION FLEXABILITY.\n\n                      6) RECOVERY FROM PRINT INTERRUPTIONS.\n\n                      7) EASE OF IMPLEMENTATION AND TESTING.\n\n\n\n\n    HISTORY:          A) ORIGINALLY DEVELOPED AT GREAT AMERICAN\n\n                         INSURANCE COMPANY IN CINCINNATI, OHIO AS A SET\n\n                         OF DIRECT USER MODIFICATIONS TO JES2.\n\n\n                      B) LATER REWRITTEN BY NARM TCHUN OF GATX\n\n                         CORPORATION IN CHICAGO, ILLINOIS AS AN MVS/SP\n\n                         JES2 1.3.2 USER EXIT (EXIT 1).  GATX MADE IT\n\n                         PUBLIC DOMAIN BY PLACING IT ON THE SHARE JES2\n\n                         USER MODS TAPE.\n\n\n                      C) FINALLY, ENHANCED BY MIKE SHEEDY OF BENJ.\n\n                         FRANKLIN SAVINGS AND LOAN FOR OPERATION ON\n\n                         MVS/SP JES2 1.3.6 WITH THE ADDITION OF SUPPORT\n\n                         FOR DUPLEX AND SUPPRESSION OF JES2 FORMS SETUP\n\n                         MESSAGES.  THIS FINAL VERSION USES JES2 USER\n\n                         EXITS 1, 5, 15, AND 250 (USER DEFINED).\n..PAGE\n..SEC *.* JES2 USER EXITS AND MODULES\n\n\n\n THE JES2 USER EXITS WHICH MAKE UP OUR XEROX FORMS CONTROL SYSTEM ARE\n\n ASSEMBLED AND LINKED TOGETHER INTO ONE MODULE CALLED EXIT1MIT.  THIS\n\n MODULE IS LOADED BY JES2 WHEN IT COMES UP.  THE FOLLOWING IS A\n\n DESCRIPTION OF THE MODULES WHICH MAKE UP EXIT1MIT:\n\n\n\n\n EXIT1MIT - JES2 MODULE INFORMATION TABLE FOR THE EXITS INVOLVED IN OUR\n\n            XEROX FORMS CONTROL SYSTEM.  MERGES ALL OF THE EXITS INTO\n\n            ONE LOAD MODULE.\n\n\n\n EXIT1REG - REGISTER DEFINITIONS AND OTHER SYMBOLICS USED IN THE EXITS.\n\n\n\n EXIT1A   - JES2 EXIT 1 PRINT SEPARATOR EXIT DEVELOPED TO PROVIDE XEROX\n\n            FORMS CONTROL BY INSERTING DJDE COMMANDS IN FRONT OF THE\n\n            PRINT SEPARATOR PAGES.  USES SYSOUT CLASS AND FORM ID TO\n\n            REFERENCE TABLES CONTAINED IN EXIT1TAB.  SEPDS=Y IDENTIFIES\n\n            A PRINTER AS A XEROX 8700/9700.\n\n\n\n EXIT1TAB - VARIOUS TABLES USED BY THE EXITS, PRINCIPALLY EXIT1A, TO\n\n            DEFINE AND MANAGE XEROX FORMS CONTROL.\n\n\n\n EXIT1B   - ORIGINAL JES2 EXIT 1 BF PRINT SEPARATOR EXIT MODIFIED TO\n\n            PRODUCE SLIGHTLY DIFFERENT SEPARATOR PAGES FOR XEROX\n\n            DESTINED OUTPUT DEPENDING ON ORIENTATION\n\n            (LANDSCAPE/PORTRAIT) AND PAGE SIZE.  JDE AT XEROX EXTRACTS\n\n            DATA FROM GENERATED SEPARATOR PAGES FOR DETERMINING JOB\n\n            BOUNDARIES AND STATUS DISPLAYS.\n..PAGE\n\n\n\n EXIT5    - JES2 EXIT 5 COMMAND PREPROCESSOR EXIT USED TO FORCE FORM\n\n            SETUP MESSAGES ON THE XEROX CONSOLE WHENEVER THE XEROX\n\n            PRINTER IS STOPED OR HALTED AND RESTARTED FROM JES2.\n\n            IMPLEMENTED TO AVOID USING WRONG STOCK OR DUPLEX/SIMPLEX\n\n            ORIENTATION AFTER XEROX MAINTENANCE.\n\n\n\n EXIT15   - JES2 EXIT 15 OUTPUT DATASET/COPY SELECT SEPARATOR EXIT USED\n\n            TO PROVIDE DUPLEX AND MULTIPLE LOGICAL PAGE PER PHYSICAL\n\n            PAGE SUPPORT BY INSERTING A SKIP TO NEW FRONT DJDE COMMAND\n\n            BETWEEN SEPARATE DATASETS AND COPIES OF DATASETS WITHIN THE\n\n            SAME SYSOUT JOB.\n\n\n\n EXIT250  - JES2 USER EXIT USED TO SUPPRESS JES2 FORMS SETUP MESSAGES\n\n            WHENEVER A FORMS CHANGE OCCURS FOR A XEROX PRINTER.  EXIT1A\n\n            CREATES FORMS SETUP MESSAGES THRU DJDE'S WHICH DISPLAY ON\n\n            THE XEROX CONSOLE WHEN THE OUTPUT PRINTS.  EXIT250 REQUIRES\n\n            THAT USERMOD ZZ03821 BE APPLIED TO HASPPRPU IN ORDER TO\n\n            DEFINE ITS CALL.\n..PAGE\n..SEC *.* TABLES IN EXIT1TAB\n\n\n    EXIT1TAB:    XEROX 8700/9700 FORMS CONTROL TABLES\n\n\n    FUNCTIONS:   TO PROVIDE JES2 EXIT1A, EXIT1B, EXIT5, EXIT15 AND\n\n                 EXIT250 WITH THE INTERNAL REFERENCE DATA TO CONTROL\n\n                 ONE OR MORE XEROX 8700/9700 PRINTERS.\n\n\n    DESCRIPTION: THESE TABLES ARE AN ADOPTION OF THE FORMS CROSS\n\n                 REFERENCE TABLES WHICH WERE DESIGNED BY THE GREAT\n\n                 AMERICAN INSURANCE COMPANY, CINCINNATI, OHIO.\n\n                 THE TABLES CONSISTS OF THE FOLLOWING SEVEN ENTRY\n\n                 GROUPS:\n\n\n\n    .  PRNTRTAB  PRINTER TABLE ENTRY            (12 BYTES).\n\n\n                 EACH ENTRY NAMES A JES2 PRINTER AND SPECIFIES ITS\n\n                 TYPE.  FIELDS ARE USED TO CONTAIN DATA NEEDED BY\n\n                 THE JES2 EXITS DURRING THEIR OPERATION.\n\n\n\n    .  SCTE   :  SYSOUT CLASS TABLE ENTRY       (8 BYTES).\n\n\n                 EACH ENTRY NAMES A SYSOUT CLASS, SPECIFIES WHICH\n\n                 JES2 PRINTER IT SHOULD PRINT ON, AND WHICH FORMS\n\n                 CROSS REFERENCE TABLE TO USE.\n\n\n\n    .  FCRTE  :  FORMS CROSS REFERENCE TABLE ENTRY (16 BYTES).\n\n\n                 EACH ENTRY CONTAINS A FORM NAME, THE ADDRESS OF THE\n\n                 DJDE FORMS IMAGE TABLE ENTRY (DFITE), THE ADDRESS OF\n\n                 ITS DJDE VFU IMAGE TABLE ENTRY (DVITE), A MODE BYTE,\n\n                 AND A PAPER STOCK NUMBER.\n\n                      NOTE THAT THERE ARE ACTUALLY TWO TABLES:\n\n                 FFRMTABF IS FOR SYSOUT CLASS 'F' (OPERATOR SETUP).\n\n                 XFRMTABX IS FOR SYSOUT CLASSES OTHER THAN 'F'\n\n                      (NO OPERATOR SETUP - STD 3-HOLE DUPLEX).\n..PAGE\n\n\n\n    .  DFITE  :  DJDE FORMS IMAGE TABLE ENTRY   (80 BYTES).\n\n\n                 EACH ENTRY CONTAINS A FORM(S), FORMAT, DATA\n\n                 LENGTH, OR SHIFT REQUIREMENT.\n\n\n\n    .  DVITE  :  DJDE VFU IMAGE TABLE ENTRY     (80 BYTES).\n\n\n                 EACH ENTRY CONTAINS A VFU IMAGE, PRECEDED BY\n\n                 A HALF WORD WHICH COUNTS THE NUMBER OF LINES\n\n                 IN THE ENTRY.\n\n\n\n    .  PTMTE  :  PAPER TRAY MESSAGE TABLE ENTRY (80 BYTES).\n\n\n                 EACH ENTRY CONTAINS A MESSAGE TEXT TO BE SHOWN\n\n                 ON THE 8700/9700 CONSOLE TELLING THE OPERATOR\n\n                 WHAT PAPER STOCK TO LOAD INTO THE PRINTER.\n\n\n\n    .  PSMTE  :  PAGE SETUP MESSAGE TABLE ENTRY (80 BYTES).\n\n\n                 SOME ENTRIES CONTAIN MESSAGE TEXT TO BE SHOWN\n\n                 ON THE 8700/9700 CONSOLE TELLING THE OPERATOR\n\n                 ABOUT THE JOB THAT IS PROCESSED.  THESE ENTRIES\n\n                 HELP OPERATOR KEEP TRACK OF THE JOBS THAT ARE\n\n                 PURGED OFF JES2, AND ALSO PROCESSED BY THE\n\n                 8700/9700 PRINTER.  OTHER ENTRIES SET THE PRINTER\n\n                 FOR DUPLEX OR SIMPLEX OPERATION, OR PERFORM OTHER\n\n                 PRINTER SETUP FUNCTIONS.\n..PAGE\n\n\n\n    THE FORMS CROSS REFERENCE TABLE (FCRTE) IS FUNDAMENTAL TO THE\n\n    SELECTION OF APPROPRIATE DJDE COMMANDS FOR CONTROL OF THE XEROX\n\n    PRINTER.  FORMS CROSS REFERENCE TABLE ENTRY:\n\n\n\n              FORMS NAME (4 BYTES)\n              |\n              |        COPY COUNT (1 BYTE - NOT CURRENTLY SUPPORTED)\n              |        |\n              |        | ADDRESS(DFITE) (3 BYTES)\n              |        | |\n              |        | |      MODE FLAGS (1 BYTE - SEE BELOW)\n              |        | |      |\n              |        | |      | RESERVED (3 BYTES)\n              |        | |      | |\n              |        | |      | |      STOCK INDEX (1 BYTE)\n              |        | |      | |      |\n              |        | |      | |      | ADDRESS(DVITE) (3 BYTES)\n              |        | |      | |      | |\n              |        | |      | |      | |\n             +|--------|-|------|-|------|-|-----+\n             |FORMNAME|NN......|DD......|II......|\n             +-----------------------------------+\n\n\n\n\n    MODE FLAGS (BIT SETTINGS):\n\n\n MFSUPFCT EQU   B'10000000'  80  SUPPRESS FORMS CONTROL\n\n MFSHORTL EQU   B'01000000'  40  SHORTLINE FORMAT (LIKE 1-UP PORTRAIT)\n\n MFSIXLPI EQU   B'00100000'  20  SIX LINES PER INCH\n\n MFNUFRNT EQU   B'00010000'  10  SUPPLY NUFRONT BETWEEN DATASETS/COPIES\n\n MFDUPLEX EQU   B'00001000'  08  DUPLEX MODE\n\n MFFOURLP EQU   B'00000100'  04  FOUR LOGICAL PAGES PER SIDE\n\n MFTWOLPS EQU   B'00000010'  02  TWO LOGICAL PAGES PER SIDE\n\n FONELPS  EQU   B'00000001'  01  ONE LOGICAL PAGE PER SIDE\n..PAGE\n..SEC *.* SAMPLE EXIT1TAB\n\n\n    WHAT FOLLOWS IS A MODIFIED VERSION OF THE EXIT1TAB WE USE AT\n\n    BENJ. FRANKLIN SAVINGS AND LOAN:\n\n\nEXIT1TAB DS    0D\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |            P R N T R T A B   T A B L E   E N T R Y             | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\nPRNTRTAB DS    0D          PRINTER TABLE (SEE PTBDSECT)\n\n*        +--PRINTER NUMBER (1,2,3,4,5,6,7,8,9,0) (0 MUST BE LAST)\n*        |\n*        |+-PRINTER TYPE (X-XEROX, M-MEMOREX, F-FICHE, P-PUNCH, S-SAR)\n*        ||\n*        ||     LEAVE ALL OTHER FIELDS ALONE\n*        ||\n*        ||                                +--COMMENT\n*        ||                                |\n  DC CL2'1 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'2 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'3 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'4X',XL2'00FF',CL4'????',CL4' N  ' XEROX 8700\n  DC CL2'5F',XL2'00FF',CL4'????',CL4' N  ' DATAGRAPHIX 2275 (FICHE)\n  DC CL2'6M',XL2'00FF',CL4'????',CL4' N  ' MEMOREX 4303\n  DC CL2'7X',XL2'00FF',CL4'????',CL4' N  ' XEROX 9700 (TEMPORARY)\n  DC CL2'8M',XL2'00FF',CL4'????',CL4' N  ' MEMOREX (TEMPORARY)\n  DC CL2'9X',XL2'00FF',CL4'????',CL4' N  ' XEROX 8700 (TEMPORARY)\n  DC CL2'PP',XL2'00FF',CL4'????',CL4' N  ' IBM 2540 CARD PUNCH\n  DC CL2'DD',XL2'00FF',CL4'????',CL4' N  ' DUMMY OUTPUT (BIT BUCKET)\n* THE FOLLOWING ENTRY '0' MUST ALWAYS BE PRESENT AND BE LAST:\n  DC CL2'0S',XL2'00FF',CL4'????',CL4' N  ' SAR (SYSOUT ARCHIVAL & RET.)\n*                                          DUMMY PRINTER TO TERMINATE\n*                                          THE TABLE (DEFAULT FOR > 9)\n\n\n**********************************************************************\n*                                                                    *\n*   PRINTER TABLE DSECT                                              *\n*                                                                    *\n*   THE FIELDS IN THIS DATA AREA ARE MEANT TO BE PASSED BETWEEN      *\n*   EXECUTIONS OF THIS EXIT.  THEY ARE USED TO DETERMINE WHEN        *\n*   THE XEROX DUPLEX/SIMPLEX MODE AND/OR STOCK PAPER NEEDS TO BE     *\n*   CHANGED, AND THE OPERATOR SO NOTIFIED ON THE XEROX CONSOLE.      *\n*                                                                    *\n**********************************************************************\n\nPTBDSECT DSECT\n\nPTBENTRY DS    CL1           * PRINTER NUMBER (0-9)\nPTBTYPE  DS    CL1           * PRINTER TYPE: X - XEROX\nPREVMODE DS    XL1           * MODE OF PREVIOUS JOB\nPREVSTOC DS    XL1           * STOCK PAPER FOR PREVIOUS JOB\nPREVFORM DS    CL4           * FORM ID FOR PREVIOUS JOB\nPREVCLAS DS    CL1           * SYSOUT CLASS OF PREVIOUS JOB\nHOLDSW   DS    CL1           * HOLD MESSAGE SWITCH:  Y - SEND MESSAGE\n         DS    CL2           * DUMMY\n..PAGE\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |        S Y S O U T   C L A S S   T A B L E   E N T R Y         | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\n\nSCTE  DS 0D                  SYSOUT CLASS TABLE\n\n\n*        +--SYSOUT CLASS (A-Z,0-9)\n*        |\n*        |+-PRINTER NUMBER (0-9,P=PUNCH)\n*        ||\n*        ||      +-ADDRESS OF APPROPRIATE FORMS CROSS REF TABLE\n*        ||      |\n*        ||      |\n  DC CL4'A4  ',A(XFRMTABX)   CLASS A ---> XEROX PRINTER\n  DC CL4'BP  ',A(0)          CLASS B ---> IBM 2540 CARD PUNCH\n  DC CL4'C4  ',A(XFRMTABX)   CLASS C ---> XEROX PRINTER\n  DC CL4'D4  ',A(XFRMTABX)   CLASS D ---> XEROX PRINTER\n  DC CL4'E4  ',A(XFRMTABX)   CLASS E ---> XEROX PRINTER\n  DC CL4'F4  ',A(FFRMTABF)   CLASS F ---> XEROX PRINTER - SETUP FORMS\n  DC CL4'G4  ',A(XFRMTABX)   CLASS G ---> XEROX PRINTER\n  DC CL4'H4  ',A(XFRMTABX)   CLASS H ---> XEROX PRINTER\n  DC CL4'I4  ',A(XFRMTABX)   CLASS I ---> XEROX PRINTER\n  DC CL4'J4  ',A(XFRMTABX)   CLASS J ---> XEROX PRINTER\n  DC CL4'K4  ',A(XFRMTABX)   CLASS K ---> XEROX PRINTER\n  DC CL4'L4  ',A(XFRMTABX)   CLASS L ---> XEROX PRINTER\n  DC CL4'M6  ',A(0)          CLASS M ---> MEMOREX PRINTER\n  DC CL4'N4  ',A(XFRMTABX)   CLASS N ---> XEROX PRINTER\n  DC CL4'O4  ',A(XFRMTABX)   CLASS O ---> XEROX PRINTER\n  DC CL4'P4  ',A(XFRMTABX)   CLASS P ---> XEROX PRINTER\n  DC CL4'Q4  ',A(XFRMTABX)   CLASS Q ---> XEROX PRINTER\n  DC CL4'R4  ',A(XFRMTABX)   CLASS R ---> XEROX PRINTER\n  DC CL4'S4  ',A(XFRMTABX)   CLASS S ---> XEROX PRINTER\n  DC CL4'T5  ',A(0)          CLASS T ---> DATAGRAPHIX FICHE FILMER\n  DC CL4'U4  ',A(XFRMTABX)   CLASS U ---> XEROX PRINTER\n  DC CL4'V4  ',A(XFRMTABX)   CLASS V ---> XEROX PRINTER\n  DC CL4'W4  ',A(XFRMTABX)   CLASS W ---> XEROX PRINTER\n  DC CL4'X4  ',A(XFRMTABX)   CLASS X ---> XEROX PRINTER\n  DC CL4'Y4  ',A(XFRMTABX)   CLASS Y ---> XEROX PRINTER\n  DC CL4'ZD  ',A(0)          CLASS Z ---> DUMMY OUTPUT\n  DC CL4'00  ',A(0)          CLASS 0 ---> SAR\n  DC CL4'10  ',A(0)          CLASS 1 ---> SAR\n  DC CL4'20  ',A(0)          CLASS 2 ---> SAR\n  DC CL4'30  ',A(0)          CLASS 3 ---> SAR\n  DC CL4'45  ',A(0)          CLASS 4 ---> DATAGRAPHIX FICHE FILMER\n  DC CL4'50  ',A(0)          CLASS 5 ---> SAR\n  DC CL4'64  ',A(XFRMTABX)   CLASS 6 ---> XEROX PRINTER\n  DC CL4'70  ',A(0)          CLASS 7 ---> SAR\n  DC CL4'84  ',A(XFRMTABX)   CLASS 8 ---> XEROX PRINTER\n  DC CL4'95  ',A(0)          CLASS 9 ---> DATAGRAPHIX FICHE FILMER\n\n* THE FOLLOWING ENTRY 'FF' MUST ALWAYS BE PRESENT AND BE LAST:\n\nDEFTCLAS DC XL1'FF',CL3'4  ',A(XFRMTABX)  END OF TABLE (AND DEFAULT).\n..PAGE\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* | F O R M S  C R O S S  R E F E R E N C E  T A B L E  E N T R Y  | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n*                                                                    *\n*             FORMS NAME (4 BYTES)                                   *\n*             |        COPY COUNT (1 BYTE - NOT CURRENTLY SUPPORTED) *\n*             |        | ADDRESS(DFITE) (3 BYTES)                    *\n*             |        | |      MODE FLAGS (1 BYTE - SEE BELOW)      *\n*             |        | |      | RESERVED (3 BYTES)                 *\n*             |        | |      | |      STOCK INDEX (1 BYTE)        *\n*             |        | |      | |      | ADDRESS(DVITE) (3 BYTES)  *\n*             |        | |      | |      | |                         *\n*            +|--------|-|------|-|------|-|-----+                   *\n*            |FORMNAME|NN......|DD......|II......|                   *\n*            +-----------------------------------+                   *\n**********************************************************************\n\n\n*        MODE FLAGS (BIT SETTINGS)\n\nMFSUPFCT EQU   B'10000000'  80  SUPPRESS FORMS CONTROL\nMFSHORTL EQU   B'01000000'  40  SHORTLINE FORMAT (LIKE 1-UP PORTRAIT)\nMFSIXLPI EQU   B'00100000'  20  SIX LINES PER INCH\nMFNUFRNT EQU   B'00010000'  10  SUPPLY NUFRONT BETWEEN DATASETS/COPIES\nMFDUPLEX EQU   B'00001000'  08  DUPLEX MODE\nMFFOURLP EQU   B'00000100'  04  FOUR LOGICAL PAGES PER SIDE\nMFTWOLPS EQU   B'00000010'  02  TWO LOGICAL PAGES PER SIDE\nMFONELPS EQU   B'00000001'  01  ONE LOGICAL PAGE PER SIDE\n\n\n\nFCRTE    DS    0D\n\n\nXFRMTABX DS    0D ** BEGINNING OF SYSOUT=(X,,FORM) FORMS TABLE **\n\n\n*                 SYSOUT=(X,,FORM) IS USED FOR NO OPERATOR SETUP FORMS.\n*                 WHERE X IS ANY OUTPUT CLASS EXCEPT 'F'.\n*                 MODE AND STOCK SHOULD INDICATE STD 3-HOLE DUPLEX.\n\n\n* NOTE:  FIRST ENTRY IS DEFAULT IF NO FORM ID SUPPLIED:\n\n\nXSTDP  DC  C'STD.',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLL8  DC  C'DLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLB8  DC  C'DLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLS8  DC  C'DLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nXDEB8  DC  C'DEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nXDPB8  DC  C'DPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nXDPW8  DC  C'DPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nXD2B8  DC  C'D2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nXQDEF  DC  C'QDEF',X'01',AL3(DXQDEF),X'59',AL3(0),X'01',AL3(VFU4)\nXDEFC  DC  C'DEFC',X'01',AL3(DXDEFC),X'19',AL3(0),X'01',AL3(VFU1)\nXCPI   DC  C'CPI ',X'01',AL3(DXCPI),X'19',AL3(0),X'01',AL3(VFU1)\nXICL   DC  C'ICL ',X'01',AL3(DXICL),X'19',AL3(0),X'01',AL3(VFU1)\nXAP    DC  C'AP  ',X'01',AL3(DXAP),X'19',AL3(0),X'01',AL3(VFU1)\nXFA    DC  C'FA  ',X'01',AL3(DXFA),X'19',AL3(0),X'01',AL3(VFU1)\nXHEAD  DC  C'HEAD',X'01',AL3(DXHEAD),X'19',AL3(0),X'01',AL3(VFU1)\nXUSR1  DC  C'USR1',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nXUSR2  DC  C'USR2',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nXUSR3  DC  C'USR3',X'01',AL3(DXXLL8),X'80',AL3(0),X'00',AL3(VFU1)\n\nXFFFF  DC  16X'FF'    ** END OF SYSOUT=X FORMS TABLE **\n..PAGE\n\n\nFFRMTABF DS    0D ** BEGINNING OF SYSOUT=(F,,FORM) FORMS TABLE **\n\n*                 SYSOUT=(F,,FORM) IS USED FOR OPERATOR SETUP FORMS.\n\n\n* NOTE:  FIRST ENTRY IS DEFAULT IF NO FORM ID SUPPLIED:\n\n\nFSTDP  DC  C'STD.',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nFSLL8  DC  C'SLL8',X'01',AL3(DXXLL8),X'01',AL3(0),X'01',AL3(VFU1)\nFSLB8  DC  C'SLB8',X'01',AL3(DXXLB8),X'01',AL3(0),X'01',AL3(VFU1)\nFSLS8  DC  C'SLS8',X'01',AL3(DXXLS8),X'01',AL3(0),X'01',AL3(VFU1)\nFSEB8  DC  C'SEB8',X'01',AL3(DXXEB8),X'01',AL3(0),X'01',AL3(VFU1)\nFBLL8  DC  C'BLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'02',AL3(VFU1)\nFBLB8  DC  C'BLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'02',AL3(VFU1)\nFBLS8  DC  C'BLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'02',AL3(VFU1)\nFBEB8  DC  C'BEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'02',AL3(VFU1)\nFNLL8  DC  C'NLL8',X'01',AL3(DXXLL8),X'01',AL3(0),X'02',AL3(VFU1)\nFNLB8  DC  C'NLB8',X'01',AL3(DXXLB8),X'01',AL3(0),X'02',AL3(VFU1)\nFNLS8  DC  C'NLS8',X'01',AL3(DXXLS8),X'01',AL3(0),X'02',AL3(VFU1)\nFNEB8  DC  C'NEB8',X'01',AL3(DXXEB8),X'01',AL3(0),X'02',AL3(VFU1)\nFSPB8  DC  C'SPB8',X'01',AL3(DXXPB8),X'41',AL3(0),X'01',AL3(VFU2)\nFSPW8  DC  C'SPW8',X'01',AL3(DXXPW8),X'41',AL3(0),X'01',AL3(VFU2)\nFS2B8  DC  C'S2B8',X'01',AL3(DXX2B8),X'12',AL3(0),X'01',AL3(VFU1)\nFBPB8  DC  C'BPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'02',AL3(VFU2)\nFBPW8  DC  C'BPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'02',AL3(VFU2)\nFB2B8  DC  C'B2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'02',AL3(VFU1)\nFNPB8  DC  C'NPB8',X'01',AL3(DXXPB8),X'41',AL3(0),X'02',AL3(VFU2)\nFNPW8  DC  C'NPW8',X'01',AL3(DXXPW8),X'41',AL3(0),X'02',AL3(VFU2)\nFN2B8  DC  C'N2B8',X'01',AL3(DXX2B8),X'12',AL3(0),X'02',AL3(VFU1)\nFNOW   DC  C'NOW ',X'01',AL3(DXNOW),X'41',AL3(0),X'03',AL3(VFU3)\nFREG   DC  C'REG ',X'01',AL3(DXREG),X'41',AL3(0),X'03',AL3(VFU3)\nFQDEF  DC  C'QDEF',X'01',AL3(DXQDEF),X'41',AL3(0),X'03',AL3(VFU4)\nFCPIS  DC  C'CPIS',X'01',AL3(DXCPIS),X'01',AL3(0),X'01',AL3(VFU1)\nFEAA1  DC  C'EAA1',X'01',AL3(DXEAA1),X'19',AL3(0),X'02',AL3(VFU5)\nFBFLH  DC  C'BFLH',X'01',AL3(DXBFLH),X'41',AL3(0),X'04',AL3(VFU2)\nFUSR1  DC  C'USR1',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nFUSR2  DC  C'USR2',X'01',AL3(DXXLL8),X'01',AL3(0),X'01',AL3(VFU1)\nFUSR3  DC  C'USR3',X'01',AL3(DXXLL8),X'80',AL3(0),X'00',AL3(VFU1)\n\nFFFFF  DC  16X'FF'    ** END OF SYSOUT=F FORMS TABLE **\n..PAGE\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |   D J D E    F O R M S    I M A G E    T A B L E    E N T R Y  | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\nDFITE  DS 0D\n\nDXXLL8 DC CL80'  DJDE FORMS=STD,FORMAT=PDE2,DATA=(0,132),;'  DEFAULT\nDXXLB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE2,;'    1UP,LAND,BLANK,8LP\nDXXLS8 DC CL80'  DJDE FORMS=88SH,FORMAT=PDE2,;'    1UP,LAND,SHADED,8LPI\n\nDXXEB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PD9,DATA=(0,200),;'   EXTENDED\n\nDXX2B8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'    2UP,PORT,BLANK,8LPI\n\nDXXPB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;'   PORT\n\nDXXPW8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORT1,DATA=(0,100),;'   WIDE\n\nDXNOW  DC CL80'  DJDE FORMS=NONE,FORMAT=PDE9,DATA=(1,95),MODIFY=FNT1,;'\nDXREG  DC CL80'  DJDE FORMS=NONE,FORMAT=PDE9,DATA=(1,95),MODIFY=FNT1,;'\nDXQDEF DC CL80'  DJDE FORMS=NONE,FORMAT=PDE10,DATA=(1,95),MODIFY=FNT3,;X\n               '\nDXDEFC DC CL80'  DJDE JDE=SVM337,;'   DEFERRED COMP DUPLEX REPORTS\nDXCPI  DC CL80'  DJDE JDE=CPIJDE,;'   CPI DUPLEX\nDXCPIS DC CL80'  DJDE JDE=CPISDE,;'   CPI SIMPLEX\nDXICL  DC CL80'  DJDE JDE=ICLJDE,;'   ICL\nDXAP   DC CL80'  DJDE JDE=APJDE,;'    AP\nDXFA   DC CL80'  DJDE JDE=FAJDE,;'    FA\nDXHEAD DC CL80'  DJDE JDE=HEDJDE,;'   HEADLINE (DEPOSIT SYSTEM)\nDXEAA1 DC CL80'  DJDE FORMS=EAA1,BFORM=EAA2,FORMAT=PDE5,SHIFT=NO,;'\nDXBFLH DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;' X LETTER\n\n\n\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |    D J D E    V F U    I M A G E    T A B L E    E N T R Y     | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\nDVITE DS 0D\n\nVFU1 DC H'2'                     * ALL LANDSCAPE / PORTRAIT - 2 UP\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,88),;'\n      DC CL80'  DJDE TOF=1,BOF=88,COPIES=1,END;'\n\nVFU2 DC H'2'                     * PORTRAIT - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,84),;'\n      DC CL80'  DJDE TOF=1,BOF=84,COPIES=1,END;'\n\nVFU3 DC H'2'                     * STATEMENTS - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,15),ASSIGN=(10,82),;'\n      DC CL80'  DJDE TOF=15,BOF=88,COPIES=1,END;'\n\nVFU4 DC H'2'                     * STATEMENTS - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,19),ASSIGN=(10,80),;'\n      DC CL80'  DJDE TOF=19,BOF=88,COPIES=1,END;'\n\nVFU5 DC H'2'                     * ESCROW ACCOUNT ANALYSIS 1\n      DC CL80'  DJDE ASSIGN=(1,6),ASSIGN=(12,60),;'\n      DC CL80'  DJDE TOF=6,BOF=60,COPIES=1,END;'\n..PAGE\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |   P A P E R   T R A Y   M E S S A G E   T A B L E   E N T R Y  | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\n\nPTMTE    DS    0D\n\nSTKINDX  DS    0H\n\nPSTOCK00 DC    CL80'  DJDE OTEXT=(''-*-LOAD UNKN STOCK PAPER-- CCPLEX MX\n               ODE''),;'   NOTE: 00 MUST ALWAYS REMAIN UNKNOWN\n\nPSTOCK01 DC    CL80'  DJDE OTEXT=(''-*-LOAD STD 3-HOLE PAPER-- CCPLEX MX\n               ODE''),;'\n\nPSTOCK02 DC    CL80'  DJDE OTEXT=(''-*-LOAD WHT NOHOLE PAPER-- CCPLEX MX\n               ODE''),;'   !!! SEE NOTE BELOW !!!\n\n* NOTE: 02 MUST ALWAYS REMAIN WHITE NOHOLE BECAUSE OF SPECIAL LOGIC IN\n*       EXIT1A WHICH RECOGNIZES NO NEED TO SWITCH ORIENTATION BETWEEN\n*       DUPLEX AND SIMPLEX FOR WHITE NOHOLE PAPER.\n\nPSTOCK03 DC    CL80'  DJDE OTEXT=(''-*-LOAD STATEMENT FORMS--- CCPLEX MX\n               ODE''),;'\n\nPSTOCK04 DC    CL80'  DJDE OTEXT=(''-*-LOAD B.F. LETTERHEAD--- CCPLEX MX\n               ODE''),;'\n\n\n\n\n**********************************************************************\n* +----------------------------------------------------------------+ *\n* |  P A G E    S E T U P   M E S S A G E   T A B L E   E N T R Y  | *\n* +----------------------------------------------------------------+ *\n**********************************************************************\n\n\nPSMTE    DS    0D                *\n\n\nHOLDMSG  DC    CL80'  DJDE OTEXT=(''-*-*-CHANGE PAPER NOW-*-*-'',WAIT),X\n               ;'\n\n\nDPLXDJDE DC    CL80'  DJDE DUPLEX=YES,;'\n\n\nSPLXDJDE DC    CL80'  DJDE DUPLEX=NO,;'\n\n\nNUFRDJDE DC    CL80'  DJDE SIDE=(NUFRONT),;'\n\n\nJOBMSG   DC    CL80'  DJDE OTEXT=(''-0- JNNNN XXXXXXXX C-FFFF  CCPLEX''X\n               ),;'\n\n\nMODECHG  DC    CL80'  DJDE OTEXT=(''-*- PRINT SWITCHING TO  CCPLEX MODEX\n               ''),;'\n..PAGE\n..SEC *.* SAMPLE EXIT1A OPERATION\n\n\n HOW EXIT1A USES TABLES IN EXIT1TAB TO SELECT DJDES TO SEND:\n\n\n\n JCL USED TO INDICATE DESIRED XEROX FORMS CONTROL:\n\n\n     //DDNAME   DD  SYSOUT=(Y,,DPB8)      EACH DD STATEMENT DEFINES A\n                            |    |        REPORT.  JES2 GROUPS REPORTS\n                            |    |        FROM THE SAME JOB TOGETHER\n  EXIT1A FINDS ENTRY FOR <--+    |        AS LONG AS SYSOUT CLASS AND\n  CLASS Y IN SYSOUT CLASS        |        FORM ID ARE THE SAME.\n  TABLE (SCTE) WHICH             |\n  INDICATES TO USE FORMS         |\n  CONTROL TABLE (FCRTE)          |\n  XFRMTABX.                      |\n                                 |\n                                 V\n                      TELLS EXIT1A TO USE ENTRY\n               +----- XDPB8 IN XFRMTABX FORMS\n               |      CONTROL TABLE.\n               |\n               |\n               |  FORMS CONTROL TABLE (FCRTE) XFRMTABX ENTRY XDPB8:\n               V\nXDPB8  DC  C'DPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\n                      |        |        |      |    |          |\n                      |        |        |      |    |          |\n                      V        |        |      V    |          V\n                  IGNORED      |        |  IGNORED  |  TELLS EXIT1A TO\n                               |        |           |  USE ENTRY VFU2 IN\n                               |        |           |  DJDE VFU IMAGE\n  TELLS EXIT1A TO USE ENTRY <--+        |           |  TABLE (DVITE).\n  DXXPB8 IN DJDE FORMS IMAGE            |           |          |\n  TABLE (DFITE).                        |           |          |\n   |                                    |           |          |\n   |                                    |           |          |\n   |                                    |           |          |\n   |   TELLS EXIT1A WE'LL BE PRINTING <-+           |          |\n   |   THIS REPORT IN DUPLEX MODE                   |          |\n   |   (MODE FLAG BIT SETTINGS).                    |          |\n   |                                                |          |\n   |                                                |          |\n   |       TELLS EXIT1A WE'LL BE PRINTING THIS <----+          |\n   |       REPORT ON STANDARD 3-HOLE PAPER                     |\n   |       (PAPER TRAY MESSAGE TABLE PTMTE                     |\n   |       ENTRY PSTOCK01).                                    |\n   |                                                           |\n   |                                                           |\n   |   DJDE FORMS IMAGE TABLE (DFITE) ENTRY DXXPB8:            |\n   V                                                           |\nDXXPB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;'  |\n                                                               |\n                                                               |\n   +-----------------------------------------------------------+\n   |\n   |   DJDE VFU IMAGE TABLE (DVITE) ENTRY VFU2:\n   V\nVFU2 DC H'2'                     * PORTRAIT - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,84),;'\n      DC CL80'  DJDE TOF=1,BOF=84,COPIES=1,END;'\n..PAGE\n\n\n\n HOW EXIT1A USES THE PRINTER TABLE (PRNTRTAB) IN EXIT1TAB TO PASS\n INFORMATION ABOUT THE REPORT BEING PRINTED TO THE OTHER JES2 EXITS\n AND TO ITSELF (FOR NEXT REPORT):\n\n\n ASSUME OUTPUT IS DIRECTED TO JES2 PRINTER 4 (A XEROX 8700 PRINTER).\n\n\n JCL USED TO INDICATE DESIRED XEROX FORMS CONTROL:\n\n\n     //DDNAME   DD  SYSOUT=(Y,,DPB8)      JES2 WILL PRINT ALL OUTPUT\n                            |    |        OF A SELECTED FORM ID BEFORE\n                            |    |        GOING ON TO PRINT OUTPUT OF\n  EXIT1A FINDS ENTRY FOR <--+    |        A DIFFERENT FORM ID.  THIS\n  CLASS Y IN SYSOUT CLASS   |    |        MINIMIZES OPERATOR SETUPS.\n  TABLE (SCTE) WHICH        |    |\n  INDICATES TO USE FORMS    |    |\n  CONTROL TABLE (FCRTE)     +----|-----------------------------------+\n  XFRMTABX.                      |                                   |\n                                 |                                   |\n                                 V                                   |\n                      TELLS EXIT1A TO USE ENTRY                      |\n               +----- XDPB8 IN XFRMTABX FORMS                        |\n               |      CONTROL TABLE.                                 |\n               |                                                     |\n               |                                                     |\n               |  FORMS CONTROL TABLE (FCRTE) XFRMTABX ENTRY XDPB8:  |\n               V                                                     |\nXDPB8  DC  C'DPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)    |\n               |                        |           |                |\n               |                        |           |                |\n               +-------------+          |           |                |\n                             |          |           |                |\n                  +----------|----------+           |                |\n                  |          |                      |                |\n                  | +--------|----------------------+                |\n  PRINTER TABLE   | |        |                                       |\n  (PRNTRTAB)      | |        |       +-------------------------------+\n  ENTRY FOR       | |        |       |\n  PRINTER 4:      | |        |       |\n                  V V        V       V\n  DC CL2'4X',XL2'5901',CL4'DPB8',CL4'YN  ' XEROX 8700\n         ||       | |        |       |\n         ||       | |        |       |\nPRINTER<-+|       | |        |       +---> SYSOUT CLASS OF REPORT\nNUMBER 4. |       | |        |             BEING PRINTED.\n          |       | |        |\n          |       | |        |\n          V       | |        +------> FORM ID OF REPORT BEING PRINTED.\n     THIS IS      | |\n     A XEROX      | |\n     PRINTER.     | +-------> PAPER STOCK OF REPORT BEING PRINTED.\n                  |\n                  |\n                  +-----> MODE BIT SETTINGS OF REPORT BEING PRINTED.\n                          USED BY EXIT15 TO DETERMINE IF DJDE FOR\n                          A SKIP TO NEW FRONT OF CUT SHEET SHOULD BE\n                          GENERATED BETWEEN DATASETS (FOR DUPLEX).\n..PAGE\n..SEC *.* SAMPLE EXIT OUTPUT\n\n\n\n RESULTING DJDE COMMANDS GENERATED BY EXIT1A IN FRONT OF BEGINNING\n\n BANNER PAGES FOR REPORT IF A PAPER STOCK SWITCH IS NECESSARY:\n\n\n\n      DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;                 DFITE\n\n      DJDE OTEXT=('-0- JNUM  JOBNAME  Y-DPB8  DUPLEX'),;          PSMTE\n\n      DJDE DUPLEX=YES,;                                           PSMTE\n\n      DJDE SIDE=(NUFRONT),;                                       PSMTE\n\n      DJDE OTEXT=('-*-LOAD STD 3-HOLE PAPER-- DUPLEX MODE'),;     PTMTE\n\n      DJDE OTEXT=('-*-*-CHANGE PAPER NOW-*-*-',WAIT),;            PSMTE\n\n      DJDE ASSIGN=(1,1),ASSIGN=(12,84),;                          DVITE\n\n      DJDE TOF=1,BOF=84,COPIES=1,END;                             DVITE\n\n\n\n\n\n RESULTING DJDE COMMANDS GENERATED BY EXIT1A IN FRONT OF BEGINNING\n\n BANNER PAGES FOR REPORT IF A PAPER ORIENTATION SWITCH IS NECESSARY:\n\n\n\n      DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;                 DFITE\n\n      DJDE OTEXT=('-0- JNUM  JOBNAME  Y-DPB8  DUPLEX'),;          PSMTE\n\n      DJDE DUPLEX=YES,;                                           PSMTE\n\n      DJDE SIDE=(NUFRONT),;                                       PSMTE\n\n      DJDE OTEXT=('-*- PRINT SWITCHING TO  DUPLEX MODE'),;        PSMTE\n\n      DJDE OTEXT=('-*-*-CHANGE PAPER NOW-*-*-',WAIT),;            PSMTE\n\n      DJDE ASSIGN=(1,1),ASSIGN=(12,84),;                          DVITE\n\n      DJDE TOF=1,BOF=84,COPIES=1,END;                             DVITE\n..PAGE\n\n\n\n RESULTING DJDE COMMANDS GENERATED BY EXIT1A IN FRONT OF BEGINNING\n\n BANNER PAGES FOR REPORT IF NO PAPER SWITCH IS NECESSARY:\n\n\n\n      DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;                 DFITE\n\n      DJDE OTEXT=('-0- JNUM  JOBNAME  Y-DPB8  DUPLEX'),;          PSMTE\n\n      DJDE DUPLEX=YES,;                                           PSMTE\n\n      DJDE SIDE=(NUFRONT),;                                       PSMTE\n\n      DJDE ASSIGN=(1,1),ASSIGN=(12,84),;                          DVITE\n\n      DJDE TOF=1,BOF=84,COPIES=1,END;                             DVITE\n\n\n\n\n\n RESULTING DJDE COMMAND GENERATED BY EXIT15 IN FRONT OF EACH DATASET\n\n AND/OR DATASET COPY WITHIN A REPORT:\n\n\n\n      DJDE SIDE=(NUFRONT),END;                                   EXIT15\n\n\n\n\n\n RESULTING DJDE COMMANDS GENERATED BY EXIT1A IN FRONT OF ENDING\n\n BANNER PAGES FOR REPORT:\n\n\n\n      DJDE FORMS=STD,FORMAT=PDE2,DATA=(0,132),;                   DFITE\n\n      DJDE DUPLEX=YES,;                                           PSMTE\n\n      DJDE SIDE=(NUFRONT),;                                       PSMTE\n\n      DJDE ASSIGN=(1,1),ASSIGN=(12,88),;                          DVITE\n\n      DJDE TOF=1,BOF=88,COPIES=1,END;                             DVITE\n\n    <PAGE EJECT>\n..PAGE\n..SEC *.* EXIT INSTALLATION GUIDELINES\n\n THE FOLLOWING GUIDELINES WILL BE USEFUL TO THOSE INTERESTED IN\n INSTALLING OUR JES2 EXITS FOR XEROX FORMS CONTROL.\n\n\n 1) READ THIS DOCUMENT IN ITS ENTIRETY BEFORE ATTEMPTING THE\n    INSTALLATION.  NOTE OUR DISCLAMER REGARDING THE CONDITIONS\n    UNDERWHICH WE MAKE THESE EXITS AVAILABLE.\n\n\n 2) LOAD THE MODULES, JCL, AND DOCUMENTATION WHICH MAKE UP THE EXIT\n    INSTALLATION INTO A PDS.  IF THE EXITS ARE COMING FROM A SHARE MODS\n    TAPE, FOLLOW THE MODS TAPE INSTRUCTIONS FOR LOADING THE EXIT FILE\n    TO DISK (YOU'VE PROBABLY ALREADY DONE THIS SO YOU COULD READ THIS\n    DOCUMENT).\n\n    IF YOU HAVE RECEIVED THE EXITS ON TAPE DIRECTLY FROM US, USE THE\n    FOLLOWING SAMPLE JCL TO LOAD THE EXIT FILE TO DISK.  THERE WILL BE\n    ONLY ONE FILE ON THE LABELLED TAPE WE SUPPLY, A PDS IN MVS IEBCOPY\n    UNLOADED FORMAT.  CHANGE THE JCL TO SUIT YOUR SHOP'S REQUIREMENTS:\n\n    //JOBNAME  JOB (ACCOUNT),'NAME',CLASS=A,MSGCLASS=A  <------\n    //IEBCOPY  EXEC PGM=IEBCOPY\n    //SYSPRINT DD  SYSOUT=*\n    //SYSUDUMP DD  SYSOUT=*\n    //SYSUT3   DD  UNIT=WORK,SPACE=(CYL,(1,1))       <------\n    //SYSUT4   DD  UNIT=WORK,SPACE=(CYL,(1,1))       <------\n    //TAPE     DD  DSN=BKUP.SYS2.JES2136.EXITSRC,\n    //             DISP=OLD,\n    //             UNIT=TAPE,                        <------\n    //             VOL=SER=JES2EX,\n    //             LABEL=(1,SL,EXPDT=98000)\n    //DISK     DD  DSN=SYS2.JES2136.EXITSRC,         <------\n    //             DISP=(NEW,CATLG,DELETE),\n    //             UNIT=SYSALLDA,                    <------\n    //             VOL=SER=??????,                   <------\n    //             SPACE=(3120,(390,,10),,,ROUND),\n    //             DCB=(DSORG=PO,RECFM=FB,BLKSIZE=3120,LRECL=80)\n    //SYSIN    DD  *\n    EXITFILE COPY  OUTDD=DISK,INDD=TAPE\n    /*\n\n\n 3) REVIEW THE MEMBERS OF SYS2.JES2136.EXITSRC THOROUGHLY.  GAIN AN\n    UNDERSTANDING OF HOW THE EXITS WORK.  IT WILL BE UP TO YOU TO\n    SUPPORT THEM.\n\n\n 4) DETERMINE THE IMPACT OF IMPLEMENTING THE JES2 EXITS:\n\n    A) DO YOU USE ANY OF THE FOLLOWING JES2 EXITS CURRENTLY:\n       1, 5, 15, OR 250?  IF SO, YOU MAY NEED TO REWORK OR COMBINE\n       YOUR EXITS WITH THE NEW ONES.  ON THE OTHERHAND, YOUR EXITS\n       MAY COEXIST JUST FINE WITH THE NEW ONES.  SOME SPECIFIC POINTS:\n\n       EXIT1A WAS CONSTRUCTED IN SUCH A WAY THAT EXISTING EXIT1'S CAN\n       BE CONCATENATED BEHIND IT (AS EXIT1B IS).\n\n       EXIT1B MIGHT BE REPLACED WITH YOUR EXISTING EXIT1 WITH\n       MODIFICATIONS TO ALLOW THE XEROX PRINTER TO RECOGNIZE JOB\n       BOUNDARIES.\n\n       EXIT5 CAN BE SKIPPED IF NECESSARY, ALTHOUGH IT PROVIDES VALUABLE\n       PROTECTION TO INSURE OUTPUT GETS PRINTED ON THE CORRECT PAPER\n       STOCK AFTER PRINTER MAINTENANCE.\n\n\n       EXIT15 CAN BE SKIPPED IF YOU DO LITTLE OR NO DUPLEX OR MULTIPLE\n       LOGICAL PAGES PER PHYSICAL PAGE PRINTING.  IF YOU HAVE YOUR OWN\n       EXIT15, THEN YOU USE SEPDS TO GET TO IT.  YOU'LL HAVE TO REWORK\n       THE NEW EXITS TO NOT USE SEPDS AS THE MEANS FOR DETERMINING\n       WHICH ARE THE XEROX PRINTERS (YOU COULD DEPEND SOLELY ON THE\n       PRINTER TABLE IN EXIT1TAB).\n\n       EXIT250 CAN BE SKIPPED IF YOU HAVE VERY FEW FORMS DEFINED, DON'T\n       CARE IF THE OPERATORS HAVE TO RESPOND TO THE JES2 FORMS SETUP\n       MESSAGES, SET YOUR PRINTER WORK SELECTION CRITERIA SO THAT THE\n       OPERATORS CONTROL WHICH FORMS PRINT WHEN, OR HAVE SOME OTHER\n       MEANS OF SUPPRESSING THE JES2 FORMS SETUP MESSAGES (SUCH AS TSSO\n       OR SOME OTHER AUTOMATIC MVS CONSOLE MESSAGE TRAPPER/RESPONDER).\n       THE USERMOD ZZ03821 WILL PROBABLY HAVE TO BE REWORKED DEPENDING\n       ON YOUR MAINTENANCE LEVEL OF JES2.  MAKE SURE IT GETS INSERTED\n       INTO HASPPRPU AT THE RIGHT PLACE.\n\n    B) THE EXITS ASSUME THAT ONLY ONE JDE WILL EVER BE STARTED ON THE\n       XEROX PRINTER (THE DEFAULT).  DJDE'S GENERATED BY THE EXITS\n       HANDLE ALL FORMS CONTROL.  IF YOUR PRESENT SYSTEM IS TO HAVE\n       THE OPERATORS START AND END JDE'S FOR INDIVIDUAL JOBS OR FORMS\n       (PERHAPS VIA JES2 SYSOUT CLASSES, FORMS, SETUP MESSAGES) THEN\n       IMPLEMENTING THIS NEW SYSTEM WILL BE QUITE A CHANGE (FOR THE\n       BETTER, HOPEFULLY).  A WAY TO MIGRATE INTO IT WOULD BE TO USE\n       SEPATATE SYSOUT CLASSES FOR JCL CONVERTED TO THE NEW SYSTEM\n       AND CONTROL WHETHER THE PRINTER USES THE EXITS VIA THE SEPDS\n       OPERAND.  SWITCH BACK AND FORTH ON A SET SCHEDULE.\n\n    C) YOU MUST BUILD YOUR NEW FORMS TABLES IN EXIT1TAB TO REFLECT YOUR\n       SHOP'S PRINT NEEDS.  YOU MUST BUILD DEFAULT AND GLOBAL JSE'S TO\n       CORRESPOND TO THE DJDE'S DEFINED IN YOUR UPDATED EXIT1TAB.  I\n       RECOMMEND USING AN ALTERNATE JES2 FOR TESTING YOUR CHANGES (SEE\n       DOCUMENT).\n\n    D) NOTE THAT OUR DJDE'S ARE RECOGNIZED BY THE JDE AS HAVING THE\n       FORMAT \"  DJDE ...;\".  THERE ARE TWO SPACES IN FRONT OF THE\n       CONSTANT \"DJDE\".  YOU MAY HAVE TO MODIFY THE DJDE DEFINITIONS\n       IN THE TABLES, AND LOGIC IN EXIT1A WHICH MODIFIES THEM, TO\n       CONFORM WITH THE DJDE'S YOUR PROGRAMS GENERATE.  ALSO EXIT15.\n\n    E) NOTE THAT EXIT15 CANNOT INSURE THAT REPORTS PRINTING DUPLEX THAT\n       ORIGINATE FROM THE SAME DD STATEMENT WILL ALWAYS HAVE THEIR\n       FIRST PAGE PRINT ON THE FRONT SIDE OF A CUT SHEET.  SWITCHING\n       FROM A SIMPLEX TO A DUPLEX ENVIRONMENT, YOU MAY HAVE TO DO AS WE\n       DID AND DEFINE SPECIAL FORMS FOR WHICH THE JDE DETERMINES THE\n       REPORT BREAKS.\n\n    F) JES2 INITIALIZATION OUTDEF OPERANDS DMNDSET AND USERSET MUST BE\n       SET EQUAL TO 'NO'.  IF YOU HAVE THEM SET TO 'YES' THEN SWITCHING\n       THEM TO 'NO' WILL CAUSE YOUR PRINTOUT TO BE PRINTED BY FORM ID\n       INSTEAD OF BY JOB.  THIS WILL MEAN LESS WORK FOR THE OPERATORS\n       (FEWER FORMS CHANGES) AND POSSIBLY MORE WORK FOR DATA CONTROL\n       (FINDING ALL OF THE DIFFERENT SYSOUTS OF A JOB).  MAKING THIS\n       SWITCH DID NOT CAUSE OUR SHOP MUCH OF AN IMPACT.\n\n    G) THE OPERATORS MUST RESPOND TO PAPER STOCK MESSAGES DISPLAYED ON\n       THE XEROX CONSOLE.  ON THE OTHER HAND, THEY'LL NO LONGER HAVE TO\n       RESOND TO JES2 FORMS SETUP MESSAGES FOR THE XEROX PRINTERS ON\n       THE MVS CONSOLE (WITH EXIT250 IN PLACE).  THE NON-XEROX PRINTERS\n       WILL CONTINUE TO PRESENT JES2 FORMS SETUP MESSAGES.\n\n    H) THE JES2 EXITS WERE DEVELOPED AND IMPLEMENTED UNDER MVS/SP JES2\n       RELEASE 1.3.4.  LATER THEY WERE MODIFIED TO RUN UNDER MVS/SP\n       JES2 RELEASE 1.3.6.  THEY WILL PROBABLY NEED TO BE REWORKED IF\n       YOU ARE ON A DIFFERENT RELEASE OR LEVEL OF JES2.  ANY JES2 OLDER\n       OR NEWER THAN RELEASE 1.3.6 IS BOUND TO HAVE CHANGES TO THE JES2\n       $ MACROS AND INITIALIZATION PARAMETERS.  EXIT1MIT CAN BE\n       ESPECIALLY AFFECTED BY THIS.\n\n    I) IF YOUR APPLICATION PROGRAMS GENERATE THEIR OWN DJDE'S, IT MAY\n       BE NECESSARY TO SUPPRESS THE SKIP TO NEW FRONT DJDE GENERATED\n       IN JES2 EXIT15 FOR DUPLEX.  OTHERWISE, THE APPLICATION GENETATED\n       DJDE'S AT THE FRONT OF THE PRINTOUT MAY GET SKIPPED.  DO SO VIA\n       THE MODE BIT ENTRIES IN THE FORMS TABLES.\n\n    J) IF YOU USE A SPOOL ARCHIVER AND/OR REPORT DISTRIBUTION SYSTEM,\n       SPECIAL PROVISIONS MAY BE NECESSARY TO PROVIDE XEROX FORMS\n       CONTROL THRU THEM, ESPECIALLY THE DATASET SEPARATION FUNCTION\n       PERFORMED BY JES2 EXIT15.  YOU MAY HAVE TO COPY LOGIC FROM\n       EXIT1A AND/OR EXIT15 INTO YOUR SPECIAL SYSTEM.  BEWARE OF\n       SOLUTIONS WHICH CAUSE EXCESSIVE OPERATOR INTERVENTION FOR FORMS\n       SETUPS.\n\n\n 5) INSTALL THE EXIT MODULES, USERMOD, AND JDE'S UNCHANGED INTO AN\n    ALTERNATE JES2.  $ASM1 CONTAINS JCL TO ASSEMBLE THE EXITS, BUT IT\n    MUST BE MODIFIED TO REMOVE SOME BENJ. FRANKLIN ONLY STEPS AT THE\n    END.  ALSO SEE SECTION ON JES2 INITIALIZATION PARAMETER\n    REQUIREMENTS.\n\n\n 6) TEST THE EXITS TO VERIFY CORRECT INSTALLATION AND GAIN FAMILIARITY.\n    A NON-XEROX PRINTER CAN BE USED TO DISPLAY THE DJDE'S GENERATED, OR\n    USE A GTF CCW TRACE.\n\n\n 7) MODIFY THE EXIT MODULES, USERMOD, AND JDE'S AS NEEDED TO SUPPORT\n    YOUR REQUIREMENTS AND TEST VIA THE ALTERNATE JES2.\n\n\n 8) PROVIDE OPERATOR AND USER DOCUMENTATION AND TRAINING.  SEE EXAMPLES\n    IN THIS DOCUMENT.\n\n\n\n FOR THOSE LOOKING FOR WAYS TO IMPROVE THE XEROX FORMS CONTROL SYSTEM,\n THE BIGGEST IMPROVEMENT I CAN THINK OF WOULD BE TO MAKE THE FORMS\n CONTROL DEFINITIONS DYNAMIC, THUS AVOIDING THE NEED TO REASSEMBLE THE\n EXITS AND DO THE JES2 HOT START.\n\n ANOTHER IMPROVEMENT WOULD BE TO SPECIFY THE FORM DIMENSIONS IN THE\n FORMS CROSS REFERENCE TABLE (FCRTE) SO THAT THE BEGINNING BANNER PAGES\n CAN BE FORMATTED TO FIT THE FORM.  THIS CAN SOLVE PAGE OVERFLOW\n PROBLEMS WHICH MAY CAUSE THE JDE TO LOOSE TRACK OF THE BANNER PAGES.\n\n..PAGE\n..SEC *.* INDEX OF INSTALLATION MEMBERS\n\n THE FOLLOWING IS AN INDEX OF THE MEMBERS OF SYS2.JES2136.EXITSRC:\n\n\n MEMBER     -------------------- DESCRIPTION --------------------------\n\n $ASM1    - JCL TO ASSEMBLE AND LINK ALL OF THE JES2 EXITS INVOLVED IN\n            XEROX FORMS CONTROL INTO ONE LOAD MODULE NAMED EXIT1MIT\n            RESIDING IN SYS2.JES2136.EXITLOAD.  NOTE STEPS AT END WHICH\n            SHOULD BE REMOVED IF NOT BENJ. FRANKLIN.\n\n $ASM4    - JCL TO ASSEMBLE AND LINK JES2 EXIT4MIT INTO\n            SYS2.JES2136.EXITLOAD.  THIS IS A JCL SCAN EXIT WHICH HAS\n            NOTHING TO DO WITH XEROX FORMS CONTROL.  IT CAN BE IGNORED\n            BY MOST SHOPS.\n\n $BACK1   - JCL TO BACKOUT NEW JES2 EXIT1MIT FROM PRODUCTION.  IT\n            RENAMES SYS1.PLINKLIB(EXIT1MIT) TO EXIT1MIN,\n            RENAMES SYS1.PLINKLIB(EXIT1MIB) TO EXIT1MIT,\n            RENAMES SYS2.TECH.LINKLIB(TEC021) TO TEC021N, AND\n            RENAMES SYS2.TECH.LINKLIB(TEC021B) TO TEC021.\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n\n $BACK4   - JCL TO BACKOUT NEW JES2 EXIT4MIT FROM PRODUCTION.  IT\n            RENAMES SYS1.PLINKLIB(EXIT4MIT) TO EXIT4MIN, AND\n            RENAMES SYS1.PLINKLIB(EXIT4MIB) TO EXIT4MIT.\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n\n $COMP    - JCL TO COMPRESS SYS2.JES2136.EXITSRC.\n\n $COPY    - JCL TO COPY SYS2.JES2136.EXITSRC TO TAPE FOR SENDING TO\n            ANOTHER SHOP.\n\n $DESC    - DESCRIPTION OF THE XEROX 8700/9700 FORMS CONTROL SYSTEM,\n            JES2 USER EXITS, AND TABLES.  SOME IS IN LOWER-CASE.\n\n $DISCLMR - BENJ. FRANKLIN SAVINGS AND LOAN DISCLAIMERS.\n\n $PRINT   - JCL TO PRINT THE DOCUMENTATION IN $DESC.  THIS USES A BF\n            PROGRAM TO FORMAT THE DOCUMENTATION.  YOU WILL HAVE TO\n            SUPPLY YOUR OWN MEANS OF DOING THIS.\n\n $PREP1   - JCL TO PREPARE TO TURNOVER NEW JES2 EXIT1MIT.\n            FIRST IT COMPRESSES SYS1.PLINKLIB AND SYS2.TECH.LINKLIB.\n            THEN IT COPIES SYS2.JES2136.EXITLOAD(EXIT1MIT) TO\n            SYS1.PLINKLIB(EXIT1MIN), AND COPIES\n            SYS2.JES2136.EXITLOAD(TEC021) TO SYS2.TECH.LINKLIB(TEC021N).\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n\n $PREP4   - JCL TO PREPARE TO TURNOVER NEW JES2 EXIT4MIT.\n            FIRST IT COMPRESSES SYS1.PLINKLIB.  THEN IT COPIES\n            SYS2.JES2136.EXITLOAD(EXIT4MIT) TO SYS1.PLINKLIB(EXIT4MIN).\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n\n $TEST1   - JCL TO TEST JES2 EXIT1TAB AND EXIT1MIT CHANGES.\n\n $TEST4   - JCL TO TEST JES2 EXIT4MIT CHANGES.\n\n $TURN1   - JCL TO TURNOVER NEW JES2 EXIT1MIT TO PRODUCTION.  IT\n            RENAMES SYS1.PLINKLIB(EXIT1MIT) TO EXIT1MIB,\n            RENAMES SYS1.PLINKLIB(EXIT1MIN) TO EXIT1MIT,\n            RENAMES SYS2.TECH.LINKLIB(TEC021) TO TEC021B, AND\n            RENAMES SYS2.TECH.LINKLIB(TEC021N) TO TEC021.\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n..PAGE\n\n $TURN4   - JCL TO TURNOVER NEW JES2 EXIT4MIT TO PRODUCTION.  IT\n            RENAMES SYS1.PLINKLIB(EXIT4MIT) TO EXIT4MIB, AND\n            RENAMES SYS1.PLINKLIB(EXIT4MIN) TO EXIT4MIT.\n            THIS JOB IS ONLY APPLICABLE TO BENJ. FRANKLIN.\n\n $XFER    - JCL TO TRANSFER FORM DESIGN SOURCE MEMBERS (JSL'S) OVER\n            TO THE XEROX 8700/9700 PRINTER FOR COMPILATION.\n\n DFAULT   - SAMPLE DEFAULT JSL USED AT BENJ. FRANKLIN.\n\n END      - $$$END STATEMENT USED BY SYS2.JES2136.EXITSRC($XFER).\n\n EXIT1A   - JES2 EXIT 1 PRINT SEPARATOR EXIT DEVELOPED TO PROVIDE XEROX\n            FORMS CONTROL BY INSERTING DJDE COMMANDS IN FRONT OF THE\n            PRINT SEPARATOR PAGES.  USES SYSOUT CLASS AND FORM ID TO\n            REFERENCE TABLES CONTAINED IN EXIT1TAB.  SEPDS=Y IDENTIFIES\n            A PRINTER AS A XEROX 8700/9700.\n\n EXIT1B   - ORIGINAL JES2 EXIT 1 BF PRINT SEPARATOR EXIT MODIFIED TO\n            PRODUCE SLIGHTLY DIFFERENT SEPARATOR PAGES FOR XEROX\n            DESTINED OUTPUT DEPENDING ON ORIENTATION\n            (LANDSCAPE/PORTRAIT) AND PAGE SIZE.  JDE AT XEROX EXTRACTS\n            DATA FROM GENERATED SEPARATOR PAGES FOR DETERMINING JOB\n            BOUNDARIES AND STATUS DISPLAYS.\n\n EXIT1MIT - JES2 MODULE INFORMATION TABLE FOR THE EXITS INVOLVED IN OUR\n            XEROX FORMS CONTROL SYSTEM.  MERGES EXITS 1 (A AND B), 5,\n            15, AND 250 INTO ONE LOAD MODULE.\n\n EXIT1REG - REGISTER DEFINITIONS AND OTHER SYMBOLICS USED IN THE EXITS.\n\n EXIT1TAB - VARIOUS TABLES USED BY THE EXITS, PRINCIPALLY EXIT1A, TO\n            DEFINE AND MANAGE XEROX FORMS CONTROL.\n\n EXIT15   - JES2 EXIT 15 OUTPUT DATASET/COPY SELECT SEPARATOR EXIT USED\n            TO PROVIDE DUPLEX AND MULTIPLE LOGICAL PAGE PER PHYSICAL\n            PAGE SUPPORT BY INSERTING A SKIP TO NEW FRONT DJDE COMMAND\n            BETWEEN SEPARATE DATASETS AND COPIES OF DATASETS WITHIN THE\n            SAME SYSOUT JOB.\n\n EXIT250  - JES2 USER EXIT USED TO SUPPRESS JES2 FORMS SETUP MESSAGES\n            WHENEVER A FORMS CHANGE OCCURS FOR A XEROX PRINTER.  EXIT1A\n            CREATES FORMS SETUP MESSAGES THRU DJDE'S WHICH DISPLAY ON\n            THE XEROX CONSOLE WHEN THE OUTPUT PRINTS.  EXIT250 REQUIRES\n            THAT USERMOD ZZ03821 BE APPLIED TO HASPPRPU IN ORDER TO\n            DEFINE ITS CALL.\n\n EXIT4MIT - JES2 EXIT 4 JCL SCAN USED BY BENJ. FRANKLIN TO COMMENT OUT\n            //JOBCAT STATEMENTS.  THIS EXIT HAS NOTHING TO DO WITH\n            XEROX FORMS CONTROL AND CAN BE IGNORED BY MOST SHOPS.\n\n EXIT5    - JES2 EXIT 5 COMMAND PREPROCESSOR EXIT USED TO FORCE FORM\n            SETUP MESSAGES ON THE XEROX CONSOLE WHENEVER THE XEROX\n            PRINTER IS STOPED OR HALTED AND RESTARTED FROM JES2.\n            IMPLEMENTED TO AVOID USING WRONG STOCK OR DUPLEX/SIMPLEX\n            ORIENTATION AFTER XEROX MAINTENANCE.\n\n GLOBAL   - SAMPLE GLOBAL JSL USED AT BENJ. FRANKLIN.\n\n SH88     - SAMPLE FSL USED AT BENJ. FRANKLIN.\n\n STD      - SAMPLE FSL USED AT BENJ. FRANKLIN.\n\n ZZ03821  - SMP USERMOD AGAINST JES2 MODULE SYS1.HASPSRC(HASPPRPU)\n            WHICH DEFINES THE CALL TO EXIT250.  THIS USERMOD MUST BE\n            APPLIED BEFORE EXIT250 WILL FUNCTION.\n\n..PAGE\n..SEC *.* JES2 INITIALIZATION PARAMETERS\n\n\n  THE FOLLOWING JES2 INITIALIZATION PARAMETERS ARE REQUIRED FOR THE\n  EXITS TO FUNCTION CORRECTLY (MVS/SP JES2 1.3.6):\n\n\n    LOAD     =EXIT1MIT   /* EXIT1A, EXIT1B, EXIT5, EXIT15, EXIT250 */\n\n    EXIT001  ROUTINE=(EXIT1A,EXIT1B),ENABLE  /* OUTPUT SEPERATORS  */\n    EXIT005  ROUTINE=EXIT5,ENABLE    /* JES2 COMMAND PREPROCESSOR  */\n    EXIT015  ROUTINE=EXIT15,ENABLE   /* OUTPUT DATASET/COPY SELECT */\n    EXIT250  ROUTINE=EXIT250,ENABLE  /* FORMS SETUP SUPPRESSION    */\n\n    OUTDEF   DMNDSET=NO,             /* NO DEMAND SETUP            */\n             USERSET=NO              /* NO USER DEMAND-SETUP       */\n\n    SPECIFY SEP AND SEPDS ON XEROX 8700/9700 PRINTER DEFINITIONS\n    SPECIFY NOSEPDS ON NON-XEROX PRINTER DEFINITIONS\n\n\n  THE EXITS MUST BE INITIALLY IMPLEMENTED VIA A JES2 WARM-START.\n  CHANGES TO CODE IN THE EXITS (SUCH AS FORMS TABLE CHANGES) CAN BE\n  IMPLEMENTED VIA JES2 HOT-STARTS.  I RECOMMEND USING AN ALTERNATE\n  (SECONDARY) JES2 FOR TESTING CHANGES.\n\n\n  NOTE: TO VERIFY THAT PROPER DJDE'S ARE BEING GENERATED, HAVE THE\n        OPERATOR ISSUE $TPRTN,SEPDS=Y TO A NON-XEROX PRINTER AND SEND\n        SOME TEST OUTPUT TO IT.  WHEN DONE, ISSUE $TPRTN,SEPDS=N\n\n..PAGE\n..SEC *.* OPERATIONAL DOCUMENTATION\n\n THIS SECTION CONTAINS DOCUMENTATION FOR EXPLAINING THE NEW XEROX FORMS\n CONTROL SYSTEM TO YOUR OPERATIONS STAFF.  MODIFY TO SUIT YOUR\n REQUIREMENTS.\n\n..SEC *.*.* XEROX FORMS CONTROL PHILOSOPHY\n..SPACE\n We will use JES2 exits to manage the forms used by the XEROX laser\n printer.  JES2 exit 1 (Print/Punch Separator) gets control at the\n beginning of each sysout group (job) and will examine sysout class and\n form name specified in the SYSOUT operand.  It will use the sysout\n class and form name to select XEROX DJDE commands from a set of tables\n for insertion into the print stream going to the printer.  These DJDE\n commands will setup the printer for the type of form required.\n General and special forms will be included in the tables.  New forms\n types can be tested outside of this process and placed in the tables\n during periodic maintenance.  One time form needs and special printer\n control is not precluded by this technique.  An additional advantage\n is that forms control is maintained through print interruptions (such\n as $IPRTn, printer failures, and system crashes).\n\n Specifying forms for the XEROX printer is similar to other printers:\n\n Code JCL as follows:  //ddname   DD  SYSOUT=(x,,abcd)\n\n Where 'x' is the sysout class and 'abcd' represents XEROX forms\n control.\n\n General form types have been defined for which each character of the\n form name (abcd) has a meaning:\n\n\n\n   For 'a':\n                        Blank white stock paper\n       Print mode         3 Hole      No hole\n..NOSPACE\n       __________      _________________________\n                       |           |           |\n         Duplex        |     D     |     B     |\n         Simplex       |     S     |     N     |\n..NOSPACE              _________________________\n\n\n\n   For 'b':\n                             Orientation\n       Page frames       Landscape    Portrait\n..NOSPACE\n       ___________     _________________________\n                       |           |           |\n         One up        |     L     |     P     |\n         Two up        |           |     2     |\n         Four up       |     4     |           |\n         Extended type |     E     |           |\n..NOSPACE              _________________________\n\n\n\n   For 'c':\n\n       Form flash\n..NOSPACE\n       __________         _____________\n                          |           |\n         Narrow lines     |     L     |\n         Blank (no flash) |     B     |\n         Shaded bars      |     S     |\n         Wide lines       |     W     |\n..NOSPACE                 _____________\n\n\n\n\n   For 'd':\n\n       Carrage control\n..NOSPACE\n       _______________    _____________\n                          |           |\n         6 lines per inch |     6     |\n         8 lines per inch |     8     |\n..NOSPACE                 _____________\n\n Special forms are assigned unique names for which the name as a whole\n has a meaning:\n\n     Form name          Special form\n..NOSPACE\n     _________          ____________\n\n        NOW           Now account forms\n        REG           Regular account forms\n        QDEF          Quarter-end deferred comp account forms\n        AP            AP report separation\n        CPI           CPI report separation - duplex\n        CPIS          CPI report separation - simplex\n        DEFC          Deferred Compensation - duplex\n        EAA1          Escrow Account Analysis\n        FA            FA report separation\n        HEAD          HEADLINE report separation\n        ICL           ICL report separation\n        USR1          User forms control 1\n        USR2          User forms control 2\n        USR3          User forms control 3\n        etc.\n\n\n If forms are not specified they default to our standard (STD.), which\n is equal to DLL8 (duplex, 3-hole paper, landscape, 1-up, narrow lines,\n 8 lines per inch).  This should be the most commonly used form.\n\n\n With the insertion of a special user defined exit into JES2 (which\n we'll name exit 250) we eliminate JES2 form setup messages on the\n operator's MVS console.  Instead, forms setup messages will appear on\n the operator's XEROX console when actual changes must be made at the\n XEROX printer, such as for print mode (duplex or simplex) or paper\n stock (3 hole, no hole, or special form).  The operator makes the\n indicated forms change and responds to the message to continue.  We\n will make white 3-hole paper printing duplex be our standard for all\n sysout classes except 'F', and use sysout class 'F' for all operator\n setup forms.\n\n\n We will use JES2 exit 15 (Output data set / Copy select) to insert a\n XEROX DJDE command in front of each sysout dataset and copy to cause\n the XEROX printer to skip to the front of a new cut sheet when in\n duplex mode and/or printing multiple logical pages per physical page.\n This will help keep reports from beginning on the back or same side of\n the last page of the previous report.  For this to work, each report\n must be output on its own unique DD statement and multiple copies must\n be designated through JCL (such as COPIES=n on the DD statement).\n Those reports which follow one another on the same DD statement will\n require special attention to keep separate.  Some solutions are:\n\n    1)  Print 1-up in simplex mode (example:  SYSOUT=(F,,SLL8) )\n\n    2)  Use a special form which instructs the XEROX printer to scan\n        the print stream for report breaks (example:  SYSOUT=(P,,ICL) ).\n        This will be implemented in special forms AP, CPI, DEP, FA, and\n        ICL.\n\n    3)  Modify the application to separate the reports to separate DD\n        statements (and use the COPIES operand on the DD statements).\n..PAGE\n\n    4)  Modify the application to insert DJDE commands between reports\n        (and copies) to instruct the XEROX printer to skip to a new\n        cut sheet.\n\n\n We will use JES2 exit 5 (JES2 command preprocessor) to reset the forms\n control in exit 1 to force a setup message on the next print output\n anytime the XEROX printer is stopped or halted from JES2.  This is to\n insure that the operator checks the paper setup after service is\n performed on the XEROX printer.\n\n\n Modifications will be made to the MVS POWER proc and program TEC021 to\n support printing reports transferred from the DOS system to MVS JES2\n printed on the XEROX 8700 in duplex mode and/or multiple logical pages\n per physical page.  A XEROX DJDE command will be inserted in front of\n each DOS report as needed to cause the XEROX printer to skip to the\n front of a new cut sheet.\n\n\n With modifications to SAR (Sysout Archival and Retrieval) user exit\n SARPRTUX, SAR will support the JES2 exit 1 and the user inserted exit\n descibed above, but not the JES2 exit 15.  We have been in contact\n with Essential Software discussing ways SAR could be modified to\n support the JES2 exit 15.  They have been receptive to doing this in a\n future release of SAR.  As we currently process very few, if any, user\n reports through SAR we can probably go on with our implementation\n plans and figure that the SAR support will not be required until\n later.\n..PAGE\n..SEC *.*.* XEROX FORMS DEFINED\n..SPACE\n The following forms have been defined for the XEROX printer.  Sysout\n class 'F' is reserved for forms requiring operator setup.  All\n non-class 'F' sysout should print on 3-hole stock in duplex mode and\n not require operator setup.  All undefined forms default to the\n standard, which is DLL8.  If a form which should be specified with\n sysout class 'F' is specified with a class other than class 'F', it\n will be printed on 3-hole stock in duplex mode.  If no form is\n specified, DLL8 is assumed.\n\n\n..ULIN\n CLASS  FORM  STOCK      MODE    UP   ORIENT  LINES  CHARS  LC   FLASH\n\n non-F        3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  DLL8  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  DLB8  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   BLANK\n non-F  DLS8  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   SHADED\n non-F  DEB8  3-HOLE     DUPLEX   1  LANDSCAPE  88    200   NO   BLANK\n non-F  DPB8  3-HOLE     DUPLEX   1  PORTRAIT   84     77   YES  BLANK\n non-F  DPW8  3-HOLE     DUPLEX   1  PORTRAIT   84    100   YES  BLANK\n non-F  D2B8  3-HOLE     DUPLEX   2  PORTRAIT   88    132   NO   BLANK\n   F    SLL8  3-HOLE     SIMPLEX  1  LANDSCAPE  88    132   NO   LINES\n   F    SLB8  3-HOLE     SIMPLEX  1  LANDSCAPE  88    132   NO   BLANK\n   F    SLS8  3-HOLE     SIMPLEX  1  LANDSCAPE  88    132   NO   SHADED\n   F    SEB8  3-HOLE     SIMPLEX  1  LANDSCAPE  88    200   NO   BLANK\n   F    SPB8  3-HOLE     SIMPLEX  1  PORTRAIT   84     77   YES  BLANK\n   F    SPW8  3-HOLE     SIMPLEX  1  PORTRAIT   84    100   YES  BLANK\n   F    S2B8  3-HOLE     SIMPLEX  2  PORTRAIT   88    132   NO   BLANK\n   F    BLL8  NO-HOLE    DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n   F    BLB8  NO-HOLE    DUPLEX   1  LANDSCAPE  88    132   NO   BLANK\n   F    BLS8  NO-HOLE    DUPLEX   1  LANDSCAPE  88    132   NO   SHADED\n   F    BEB8  NO-HOLE    DUPLEX   1  LANDSCAPE  88    200   NO   BLANK\n   F    BPB8  NO-HOLE    DUPLEX   1  PORTRAIT   84     77   YES  BLANK\n   F    BPW8  NO-HOLE    DUPLEX   1  PORTRAIT   84    100   YES  BLANK\n   F    B2B8  NO-HOLE    DUPLEX   2  PORTRAIT   88    132   NO   BLANK\n   F    NLL8  NO-HOLE    SIMPLEX  1  LANDSCAPE  88    132   NO   LINES\n   F    NLB8  NO-HOLE    SIMPLEX  1  LANDSCAPE  88    132   NO   BLANK\n   F    NLS8  NO-HOLE    SIMPLEX  1  LANDSCAPE  88    132   NO   SHADED\n   F    NEB8  NO-HOLE    SIMPLEX  1  LANDSCAPE  88    200   NO   BLANK\n   F    NPB8  NO-HOLE    SIMPLEX  1  PORTRAIT   84     77   YES  BLANK\n   F    NPW8  NO-HOLE    SIMPLEX  1  PORTRAIT   84    100   YES  BLANK\n   F    N2B8  NO-HOLE    SIMPLEX  2  PORTRAIT   88    132   NO   BLANK\n   F    BFLH  BF LETTER  SIMPLEX  1  PORTRAIT   66     80   NO   BLANK\n   F    NOW   STATEMENT  SIMPLEX  1  PORTRAIT   73     95   NO   BLANK\n   F    REG   STATEMENT  SIMPLEX  1  PORTRAIT   73     95   NO   BLANK\n   F    QDEF  STATEMENT  SIMPLEX  1  PORTRAIT   73     95   NO   BLANK\n non-F  AP    3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  CPI   3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n   F    CPIS  3-HOLE     SIMPLEX  1  LANDSCAPE  88    132   NO   LINES\n non-F  DEFC  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  FA    3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  HEAD  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n non-F  ICL   3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n   F    EAA1  NO-HOLE    DUPLEX   1  PORTRAIT   88     80   NO   EAA1/2\n non-F  USR1  3-HOLE     DUPLEX   1  LANDSCAPE  88    132   NO   LINES\n   F    USR2  3-HOLE     SIMPLEX  1  LANDSCAPE  88    132   NO   LINES\n   F    USR3  unkwown    unknown  1  LANDSCAPE  88    132   NO   LINES\n\n..ULIN\n Definitions:\n\n   CLASS  - Sysout print class:  'non-F' is any class other than 'F'.\n   FORM   - Sysout form id, as in SYSOUT=(x,,form).\n   STOCK  - Paper stock (3-hole, no-hole, statements, etc.)\n   MODE   - SIMPLEX prints on one side, DUPLEX prints on both sides.\n   UP     - Logical pages per side (each skip to channel 1 is a logical\n            page).\n   ORIENT - Orientation:  LANDSCAPE runs across, PORTRAIT runs down.\n   LINES  - Maximum lines per logical page.\n   CHARS  - Maximum characters per line.\n   LC     - Font capable of printing lower case characters (YES or NO).\n   FLASH  - Forms flash:  LINES are narrow lines, BLANK is no flash,\n            SHADED are shaded bars.\n\n\n Special forms NOW, REG, and QDEF are used to print deposit system\n account statements.  NOW is for NOW accounts, REG is for regular\n accounts, and QDEF is for quarter-end deferred comp accounts.  NOW and\n REG support AIMS machine bar codes in the upper right-hand corner,\n while QDEF does not.  Specify sysout class 'F' when using forms NOW,\n REG, and QDEF.\n\n\n Special forms AP, CPI, DEFC, FA, HEAD, and ICL invoke special\n processing in the XEROX printer to cause skips to new cut sheets at\n report breaks.  They are used on certain DD statements in their\n respective applications where multiple reports come out on the same DD\n statement.  Other than that they are similar to DLL8 (3-hole stock,\n duplex) and should not be specified on sysout class 'F'.  The\n applications are:\n\n   AP     - Accounts Payable.\n   CPI    - New loan system.\n   DEFC   - Deferred Compensation.\n   FA     - Fixed Assets.\n   HEAD   - Applications using HEADLINE (such as the Deposit system).\n   ICL    - Installment Credit Loans.\n\n In addition to the above, special form CPI causes each report group\n separator page to be printed on a colored sheet.\n\n Special form CPIS is similar to form CPI in that each report group\n separator page is printed on a colored sheet, but it prints in simplex\n mode.  Specify sysout class 'F' when using form CPIS.\n\n\n Special forms USR1, USR2, and USR3 are used when the user wants more\n control over the printer than the other form types provide.  Use them\n as follows:\n\n   USR1   - Same as standard DLL8 except no skip to new cut sheet DJDE\n            commands are inserted between datasets.  User can send own\n            DJDE commands except change paper stock or mode, which must\n            remain 3-hole duplex.  User must control skipping to new\n            cut sheets as needed.  Specify with any sysout class except\n            class 'F'.\n\n   USR2   - Same as SLL8.  No skip to new cut sheet DJDE commands are\n            inserted between datasets.  User can send own DJDE commands\n            except change paper stock or mode, which must remain 3-hole\n            simplex.  Specify only with sysout class 'F'.\n\n   USR3   - User must control all aspects of XEROX printer forms\n            control thru DJDE commands.  User must supply DJDE commands\n            to specify paper stock, mode (SIMPLEX or DUPLEX), format\n            (PDE), flash (FORM), carrage control (VFU), etc.  If no\n            control is specified, print defaults to USR2 with whatever\n            stock and mode was last printed on the printer.  Specify\n            only with sysout class 'F'.\n\n\n Special form EAA1 is used to print the Escrow Account Analysis.  It\n invokes a special flash for each side of the paper (white no-hole).\n Specify sysout class 'F' when using form EAA1.\n..PAGE\n..SEC *.*.* XEROX FORMS OPERATOR INSTRUCTIONS\n..SPACE\n The implementation of our XEROX forms control system modifies how the\n operator manages print going to the XEROX printer.  With the exception\n of the initial setup message after the XEROX printer is started from\n JES2, setup messages for paper stock changes will appear on the XEROX\n operator console instead of the MVS operator console.  Our standard\n print will be on white 3-hole paper in duplex mode, which is forced\n for all sysout classes except class 'F'.  Print output requiring\n stock other than white 3-hole, and/or requiring simplex mode will be\n limited to sysout class 'F', thus letting the operator control when\n print setups will occur.  Stopping, draining, or halting the XEROX\n printer from JES2 will cause a setup message on the XEROX console for\n the next print output sent to it, thus insuring that the operator\n check the stock and mode after service is performed on the printer.\n\n JES2 determines that a printer is a XEROX laser printer (and requires\n special forms control) by checking the state of SEPDS (as displayed by\n a $DU,PRTn command).  SEPDS=Y indicates this is a XEROX printer, while\n SEPDS=N indicates this is not a XEROX printer.  The state of SEPDS is\n set when JES2 comes up, but can be changed by the operator if\n necessary (such as testing XEROX forms control with the MEMOREX\n printer, when a printer is moved, or when a problem is encountered\n with the JES2 exits performing the forms control function).  Contact\n Technical Support when permanent changes should be made to the SEPDS\n state of any particular printer.\n\n Note:  Always have S=Y and SEPDS=Y set for the XEROX printer.  All\n other printers should have SEPDS=N set.\n\n..SEC *.*.*.* CONTROLLING XEROX OUTPUT PRIORITY\n\n JES2 will print all of the output for a given forms id in one class\n before going on to print sysout with a different forms id.  Because\n sysout class F is the only class which allows operator setup form ids,\n it is important to not change a report's sysout class from or to class\n F.  If you wish to cause a report to print ahead of another report,\n use the following procedure:\n\n     1) Increase the report's print priority:  $TOJnnnn,ALL,P=255\n\n     2) If the report's sysout class is different from the one\n        currently being printed, then change the printer to print the\n        desired sysout class next:  $TPRTn,Q=c...\n\n     3) If the report's form id is different from the one currently\n        being printed, then change the printer to print the desired\n        form id next:  $TPRTn,F=form\n\n..SEC *.*.*.* XEROX FORMS EXCEPTIONS\n\n If the operator encounters print setups for standard white 3-hole\n paper, duplex mode, while printing sysout class 'F' only, he or she\n should direct an incident report to the person submitting the job\n creating the output instructing them to use a different sysout class\n or form (refer them to the standards).\n\n If the operator encounters print setups for other than standard white\n 3-hole paper, duplex mode, while printing sysout classes other than\n 'F', he or she should direct an incident report to Mike Sheedy to\n correct the situation.\n..PAGE\n..SEC *.*.*.* XEROX FORMS OPERATOR MESSAGES\n\n The following messages will display on the XEROX operator console to\n inform the operator of what is printing and what setup is required:\n\n -0- j nnn jobname  c-form xxxPLEX\n\n     Message occurs at the time output is to actually start to print\n     on the printer.  'j nnn' is the JES2 job number, 'jobname ' is\n     the name of the job creating the output,  'c' is the sysout class,\n     'form' is the specified form id, and 'xxxPLEX' is the print mode\n     (SIMPLEX, DUPLEX, or ??-PLEX).  This message is informative only.\n     No operator action is required.\n\n -*- PRINT SWITCHING TO SIMPLEX MODE\n\n     The printer is switching to SIMPLEX mode.  The operator must\n     change the paper around for SIMPLEX operation (front facing down,\n     top on your left).  In the case of standard white 3-hole paper,\n     the holes point into the printer.\n\n -*- PRINT SWITCHING TO  DUPLEX MODE\n\n     The printer is switching to DUPLEX mode.  The operator must change\n     the paper around for DUPLEX operation (front facing up, top on\n     your left).  In the case of standard white 3-hole paper, the holes\n     point out of the printer.\n\n -*-LOAD STD 3-HOLE PAPER--xxxPLEX MODE\n\n     The printer is preparing to print on standard white 3-hole paper\n     in the indicated mode (DUPLEX or SIMPLEX).  The operator must\n     load the printer with standard white 3-hole paper stock in the\n     indicated mode.\n\n -*-LOAD WHT NOHOLE PAPER--xxxPLEX MODE\n\n     The printer is preparing to print on standard white nohole paper\n     in the indicated mode (DUPLEX or SIMPLEX).  The operator must\n     load the printer with standard white nohole paper stock.  The\n     mode doesn't matter with standard white nohole paper.\n\n -*-LOAD STATEMENT FORMS---xxxPLEX MODE\n\n     The printer is preparing to print on statement paper stock in the\n     indicated mode (DUPLEX or SIMPLEX).  The operator must load the\n     printer with statement paper stock in the indicated mode.\n\n -*-LOAD B.F. LETTERHEAD---xxxPLEX MODE\n\n     The printer is preparing to print on Benj. Franklin letterhead\n     stock in the indicated mode (DUPLEX or SIMPLEX).  The operator\n     must load the printer with Benj. Franklin letterhead stock in the\n     indicated mode.\n\n -*-*-CHANGE PAPER NOW-*-*-\n\n     The printer is waiting for the operator to perform the setup\n     specified in the previous message.  Perform the indicated setup\n     and hit the 'CONTINUE' key ('CONTINUE 0').\n\n\n If the XEROX printer is waiting for the operator to perform a setup\n operation and JES2 has output it wants to send to the printer, an\n intervention required message will be displayed on the MVS console.\n This message will go away after the operator performs the necessary\n setup on the XEROX printer and printing resumes.\n..PAGE\n..SEC *.*.*.* XEROX PRINTER SERVICING\n\n If service needs to be performed on the XEROX printer the operator\n should follow this procedure:\n\n   1) Stop the XEROX printer from JES2:\n\n          Enter on MVS console:  V 60A,OFFLINE\n                                 $P PRT4\n          Wait for printer status to be 'DRAINED'\n             (can check status by enterring:  $DU,PRT4 )\n\n   2) Print all output remaining in the XEROX printer (if possible):\n\n          Enter on the XEROX console:  END\n          Perform print setups as needed.\n          Empty the output hoppers:  @U\n\n   3) Take the XEROX printer offline (if possible):\n\n          Enter on the XEROX console:  OFF\n          Receive:  OS2570 VARY SYSTEM OFFLINE AT THE HOST AND\n                    ENTER \"CONTINUE I\"\n          Enter on the MVS console:    V 60A,OFFLINE\n                                       S S\n          Receive either:  IEF281I 60A NOW OFFLINE\n                      or:  IEE303I 60A      OFFLINE\n          Hit the 'CONTINUE' key on the XEROX console.\n\n   4) Perform the required XEROX servicing.\n\n When the servicing is done and the printer is ready to resume printing\n JES2 output do the following:\n\n   1) If you were not able to print all of the output remaining in the\n      printer prior to servicing it, make sure that the paper stock in\n      use prior to servicing is put back in the printer in the same\n      mode (DUPLEX or SIMPLEX) as before.\n\n   2) Place the printer online:\n\n          Enter on the XEROX console:  ONL\n\n   3) Start the default program:\n\n          Enter on the XEROX console:  STA\n\n   4) Select the JES2 sysout classes to be printed (if a change is\n      desired):\n\n          Enter on MVS console:  $T PRT4,Q=ccc...\n\n   5) Start the XEROX printer to JES2:\n\n          Enter on MVS console:  V 60A,ONLINE\n                                 $S PRT4\n          You will receive a forms setup message from JES2.\n          Enter on MVS console:  $S PRT4\n\n   6) When the first new output sent to the XEROX printer is ready to\n      print you will recieve a print setup message on the XEROX\n      console:\n\n          Perform the indicated print setup (if needed) and hit the\n          'CONTINUE' key on the XEROX console.\n..PAGE\n..SEC *.*.*.* XEROX TESTING WITH ALTERNATE JESA\n\n An alternate version of JES2 (named JESA) can be used to test\n modifications the JES2 exits and tables used in XEROX printer forms\n control.  Other than requiring that JES2 be up and running, JESA runs\n independent of JES2, and has its own spool, initiators, readers, and\n unit record devices.  JESA can abend without affecting operation\n outside of its control (although it can cause a system dump which may\n tie up operations for up to 30 seconds).\n\n The alternate version of JES2 cannot interface with TSO, SDSF, or the\n MVS SYSLOG.  Jobs to be run under JESA must be submitted either by a\n started task running under the control of JESA (see AUTA below), or\n via cards entered thru a card reader allocated to JESA (alternate JESA\n card readers must be re-started for each job read).  Note that all\n JESA operator messages and commands are prefixed with a slash (/)\n instead of a dollar sign ($).  The following instructions describe how\n to bring up, use, and take down JESA:\n\n Bring JESA up:\n\n    Confirm with Technical Support that JESA is available for testing.\n    Enter on MVS console:  S JESA\n    Receive:  *nn $HASP426 SPECIFY OPTIONS - JES2 SP v.r.m\n    Enter on MVS console:  nn,U\n    Receive:  /HASP400 ENTER REQUESTS\n    Enter on MVS console:  /S\n\n Bring JESA job submitter up:\n\n    Enter on MVS console:  S AUTA,SUB=JESA\n\n Submit jobs to run under JESA control (note JESA spool is small):\n\n    Enter on MVS console:  F AUTA,jobname,D=07  for jobs out of\n                                                SYS2.JES2136.EXITSRC\n\n Controlling JESA:\n\n    All JESA operator messages start with a slash (/) instead of a\n    dollar sign ($).\n    All JESA operator commands start with a slash (/) instead of a\n    dollar sign ($).\n\n Transfer printer n from JES2 to JESA:\n\n    Stop printer n from JES2:  $P PRTn\n    Wait for printer status to be 'DRAINED'\n       (can check status by enterring:  $DU,PRTn )\n    Print all output remaining in the XEROX printer:\n       Enter on the XEROX console:  END\n       Perform print setups as needed.\n       Empty the output hoppers:  @U\n       Enter on the XEROX console:  STA\n    Modify JESA printer options as needed:  /T PRTn,Q=ccc... etc.\n    Start printer n to JESA:   /S PRTn\n\n Return printer n from JESA back to JES2:\n\n    Stop printer n from JESA:  /P PRTn\n    Wait for printer status to be 'DRAINED'\n       (can check status by enterring:  /DU,PRTn )\n    Print all output remaining in the XEROX printer:\n       Enter on the XEROX console:  END\n       Perform print setups as needed.\n       Empty the output hoppers:  @U\n       Enter on the XEROX console:  STA\n    Modify JES2 printer options as needed:  $T PRTn,Q=ccc... etc.\n    Start printer n to JES2:   $S PRTn\n\n Take JESA down normally:\n\n    Take JESA job submitter down (if up):  P AUTA\n    Stop any printers JESA has started:    /P PRTn\n    Stop any initiators JESA has started:  /PI\n    Wait for all active JESA jobs and output to complete.\n    Receive:  /HASP099 ALL AVAILABLE FUNCTIONS COMPLETE\n    Drain JESA:  /P\n    Receive:  /HASP623 SYSTEM DRAINING\n    Stop JESA:   /P JES2\n    Receive:  /HASP085 JES2 TERMINATION COMPLETE\n\n Take JESA down abnormally:\n\n    Attempt normal JESA take down if possible.\n    Force JESA down with JES command if possible:  /P JES2,ABEND\n      (Note: If JESA won't come down with /P JES2,ABEND command then it\n       may be necessary to force it down with OMEGAMON or LOOK.)\n    Receive:  */HASP095 JES2 CATASTROPHIC ERROR.  CODE = $PJ2  ...\n               /HASP088 ...\n               /HASP088 ...\n              *nn /HASP098 ENTER TERMINATION OPTION\n    If a system dump is desired enter:   nn,DUMP    (takes 30 seconds)\n    Purge JESA from system if possible:  nn,PURGE\n    Receive:  */HASP086 WARNING - JES2 CHECKPOINT LOCK NOT RELEASED\n               /HASP085 JES2 TERMINATION COMPLETE\n               IEF450I JESA JESA - ABEND S02D U0000 - TIME=hh.mm.ss\n\n    After JESA comes down abnormally, it may be desirable to bring it\n    up again ('hot start') and take it down normally to clear out any\n    JESA initiators or the JESA job submitter.\n\n JESA hot start:\n\n    Same as bringing JESA up normally (but done after a JESA abend and\n    prior to an MVS IPL).\n\n..PAGE\n..SEC *.*.* JES2 EXIT1TAB FORMS TABLES CHANGES\n\n This section outlines the procedures used to create, modify, test, and\n turnover changes to the JES2 XEROX Forms Control Tables.  Use the\n following checklist to assist you in making XEROX forms changes:\n\n    1) Set a tentative implementation date for your changes.  If it\n       will be within the next week or so, you may want to schedule the\n       change with the Change Board prior to developement to make their\n       tuesday change submission deadline.  JES2 exit changes are\n       always Severity Code 1 changes.\n\n    2) Design your new form or plan your modifications/corrections.\n       Determine the changes to be made to the default and global JSLs\n       in SMNP.ZM041.XEROXLIB.  Determine the changes to be made to the\n       JES2 XEROX Froms Control Tables in\n       SYS2.JES2136.EXITSRC(EXIT1TAB).\n\n    3) Run the changes passed Mike Sheedy in Technical Support and\n       Linda Clifton in Operations Scheduling for system impact\n       verification.\n\n    4) Make the necessary changes to the default and global JSLs in\n       SMNP.ZM041.XEROXLIB to support your new form.\n\n    5) Make the necessary changes to SYS2.JES2136.EXITSRC(EXIT1TAB) to\n       support your new form.  If it is necessary to compress\n       SYS2.JES2136.EXITSRC use job SYS2.JES2136.EXITSRC($COMP).\n\n    6) Run SYS2.JES2136.EXITSRC($ASM1) to assemble JES2 EXIT1MIT with\n       your changes in SYS2.JES2136.EXITSRC(EXIT1TAB).  Verify that the\n       assembly completes without errors (if errors, return to step 2).\n\n    7) Bring up the secondary JESA and test your forms changes through\n       it.  Run and print SYS2.JES2136.EXITSRC($TEST1) under JESA and\n       verify that standard forms print ok (if errors, return to step\n       2).\n\n    8) Run SYS2.JES2136.EXITSRC($PREP1) to prepare the production\n       libraries for turnover of the modified JES2 exits.  Verify that\n       the preparation job completes without errors (if errors, contact\n       Mike Sheedy).  Note: It is ok for the first step to not be able\n       to scratch EXIT1MIB and/or TEC021B if they don't already exits.\n\n    9) Schedule the implementation date for the JES2 exit changes with\n       the Change Board.  The JES2 exit changes are Severity Code 1\n       changes.  Note that the Change Board meets on Tuesdays.\n\n   10) Inform Operations if new paper stock is involved.\n\n   11) Submit a Documentation Update Request (IS-1259) to the ISD\n       Administration Department to update section 6.9.1 XEROX LASER\n       PRINTER FORM IDs within the JCL STANDARDS online manual, chapter\n       6, with the changes you are making to the XEROX forms.\n\n   12) Schedule the JES2 EXIT1MIT turnover with Operations.  See the\n       next two sections for sample turnover and backout procedures for\n       the operator to follow.  Basically, you run\n       SYS2.JES2136.EXITSRC($TURN1) to turnover EXIT1MIT and perform a\n       JES2 hot-start (do at night with IMS down).  To backout EXIT1MIT\n       after it has been turned over you run\n       SYS2.JES2136.EXITSRC($BACK1) and perform another JES2 hot-start.\n\n   12) Inform requestor and update the Change Calendar when the\n       turnover completes and the new forms are in production.\n\n..PAGE\n..SEC *.*.* JES2 EXIT1MIT CHANGE TURNOVER PROCEDURE\n\n Operator Procedure to Turnover New JES2 EXIT1MIT:\n\n This procedure is performed from MVS.\n\n Perform this procedure early into Graveyard (say 1:00 am) to allow\n plenty of time for possible backout.  IMS should be down.\n\n\n 1) Queue and run job SYS2.JES2136.EXITSRC($TURN1):\n\n      A) Enter on MVS console:      F AUTO,$TURN1,D=07\n\n      B) Wait for TSMASETO to successfully complete.\n\n\n 2) Stop all printing and job submission.  Jobs currently executing may\n    continue to run, but the printers must be drained.\n\n\n 3) Force JES2 down with an abend:\n\n      A) Enter:    $P JES2,ABEND\n\n         Receive: *$HASP095 JES2 CATASTROPHIC ERROR.  CODE = $PJ2 ...\n                   $HASP088 ...\n                   $HASP088 ...\n                  *nn $HASP098 ENTER TERMINATION OPTION\n\n      B) Enter:    R nn,PURGE\n\n         Receive: *$HASP086 WARNING - JES2 CHECKPOINT LOCK NOT RELEASED\n                   $HASP085 JES2 TERMINATION COMPLETE\n                   IEF450I JES2 JES2 - ABEND S02D U0000 - TIME=hh.mm.ss\n\n\n 4) Hot Start JES2:\n\n      A) Enter:    S JES2\n\n         Receive: *nn $HASP426 SPECIFY OPTIONS - JES2 SP v.r.m\n\n\n      B) Enter:    R nn,U\n\n         Receive:  $HASP400 ENTER REQUESTS\n\n      C) Enter:    $S\n\n\n 5) Resume normal operations, but be alert for problems with JES2\n    spooling and printing, particularly in the XEROX 8700.\n\n\n\n If you have any problems with this procedure notify the submitter of\n this schedule request or the Technical Support person on call.\n\n\n This document is stored in SYS2.JES2136.EXITSRC($DESC).\n\n..PAGE\n..SEC *.*.* JES2 EXIT1MIT CHANGE BACKOUT PROCEDURE\n\n Operator Procedure to Backout the New JES2 EXIT1MIT:\n\n Notify the submitter of this schedule request that there is a need to\n back out the JES2 EXIT1MIT change.  If the submitter is not available\n notify the Technical Support person on call.\n\n This procedure is performed from MVS.\n\n Perform this procedure as soon as necessary to allow plenty of time\n for possible problems.  Note that MVS may need to be IPL'ed if this\n procedure fails (but only IPL under the direction of Tech. Support).\n\n If the following steps fail, or cannot be performed, call the\n submitter of this schedule request or the Technical Support person on\n call immediately.  Someone will probably have to come in and review\n the alternate backout procedures documented in SYS2.TECH.CHG1987.\n\n\n 1) Queue and run job SYS2.JES2136.EXITSRC($BACK1):\n\n      A) Enter on MVS console:      F AUTO,$BACK1,D=07\n\n      B) Wait for TSMASEBO to successfully complete.\n\n\n 2) Stop all printing and job submission.  Jobs currently executing may\n    continue to run, but the printers must be drained.\n\n\n 3) Force JES2 down with an abend:\n\n      A) Enter:    $P JES2,ABEND\n\n         Receive: *$HASP095 JES2 CATASTROPHIC ERROR.  CODE = $PJ2 ...\n                   $HASP088 ...\n                   $HASP088 ...\n                  *nn $HASP098 ENTER TERMINATION OPTION\n\n      B) Enter:    R nn,PURGE\n\n         Receive: *$HASP086 WARNING - JES2 CHECKPOINT LOCK NOT RELEASED\n                   $HASP085 JES2 TERMINATION COMPLETE\n                   IEF450I JES2 JES2 - ABEND S02D U0000 - TIME=hh.mm.ss\n\n 4) Hot Start JES2:\n\n      A) Enter:    S JES2\n\n         Receive: *nn $HASP426 SPECIFY OPTIONS - JES2 SP v.r.m\n\n      B) Enter:    R nn,U\n\n         Receive:  $HASP400 ENTER REQUESTS\n\n      C) Enter:    $S\n\n\n 5) Resume normal operations, but be alert for problems with JES2\n    spooling and printing, particularly in the XEROX 8700.\n\n\n 6) Fill out an IR on the reason for performing this backout.\n\n\n If you have any problems with this procedure notify Technical Support.\n..PAGE\n..SEC *.* SAMPLE TSO NOTICE\n\n THIS SECTION CONTAINS SAMPLE NOTICES FOR EXPLAINING THE NEW XEROX\n FORMS CONTROL SYSTEM TO YOUR PROGRAMMING STAFF.  MODIFY TO SUIT YOUR\n REQUIREMENTS.\n\n||||||  30 12MAR86 10:58 25MAR86   Preparation for Switching to DUPLEX\n\n    Date: March 12, 1986\n    To:   Informations Systems Staff and EDP Auditing\n    From: Mike Sheedy, ext 229\n    Re:   Preparation for Switching to Duplex Print\n\n    When printing output via the XEROX 8700 Laser Printer, we currently\n    default to 'simplex' mode, which is to print on only the front side\n    of each cut sheet of paper.  In a few weeks we will be changing our\n    default to 'duplex' mode, which is to print on both front and back\n    of each cut sheet of paper.  We are making modifications to MVS\n    JES2 to insure that each sysout file created on a separate DD\n    statement will have its first page begin on the front side of a new\n    cut sheet.  The same goes for multiple copies of sysout files\n    specified via the COPIES operand in MVS JCL.  Unfortunately, we\n    cannot insure that multiple reports within a single sysout file\n    (ie: on a single DD statement) will have their first pages begin on\n    the front sides of new cut sheets unless special provisions are\n    made for each occurance.\n\n    Besides the problem of multiple reports printing through a single\n    DD statement, there may be reports which should continue to print\n    simplex after we change the default to duplex (such as pages filed\n    by customer or branch, or sent to customers).  In order to minimize\n    disruptions to our report users, we are asking that you review the\n    applications you support and note which jobs and sysout files will\n    need special consideration, either because multiple reports are\n    being produced on a single DD statement, or the sysout needs to\n    continue to print in simplex mode.  I have been in contact with\n    programmers supporting the following applications in performing\n    this task: AP, CPI, FA, GMT, and ICL.  Please contact me or send me\n    a note if we have missed you, or you know of production jobs\n    needing the special sysout considerations described above.  We will\n    work out the changes needed with Scheduling and Operations.\n\n    Also, watch for a NEWS update which will give instructions you can\n    use to make necessary test output print in simplex mode after we\n    switch the default to duplex mode.  While duplex will be preferred\n    and have higher priority, we recognize that there will be special\n    instances where simplex may be required in test.\n\n    Do not hesitate to contact me if you have any questions or concerns\n    regarding printing on the XEROX Laser Printer and/or duplex mode.\n    Thank you.\n\n||||||  50 15APR86 10:30 05MAY86   Switch to DUPLEX PRINT on XEROX 8700\n\n    Effective April 22, 1986, the default print mode for the XEROX\n    8700 Laser Printer will be changed to 'duplex' mode.  This will\n    cause standard output to print on both front and back of each cut\n    sheet of paper.\n\n    Modifications have been made to MVS/JES2 to insure each sysout file\n    created with a separate DD statement will have its first page begin\n    on the front side of a new cut sheet.  The same goes for multiple\n    copies of sysout files specified via the COPIES operand in MVS JCL.\n    Special JCL provisions have been made for those production applica-\n    tions which have multiple reports being produced with a single DD\n    statement, or whose sysout needs to continue to print in 'simplex'\n    mode, as identified to us by Systems and Programming (see past\n    NEWS bulletin #30).\n\n    ISD users may have questions or problems regarding their reports\n    printing duplex.  If a duplex-printed production report is not\n    being properly separated from the previous report, or a report is\n    not being printed in simplex mode when it should be, ISD Scheduling\n    will need to be informed to correct the production JCL.\n\n    New documentation regarding Sysout classes and forms IDs for use\n    with the XEROX printer will soon be added to the Standards and Pro-\n    cedures Manual, sections 6.9 and 6.9.1 (available online via\n    =U.D.1;6).  Please review this documentation.  Some use recommend-\n    ations follow below:\n\n    WHAT THE PAPER HARDCOPY PRINT CLASSES ARE FOR:\n\n    Sysout classes A, O, P, and Y route output to the XEROX 8700 laser\n    printer, which prints 8-1/2 x 11 cut, 3-hole, white sheet paper\n    in duplex mode.  Classes A, O, and P are reserved for production\n    reports; Sysout class Y should be used for tests, compiles, and\n    documentation.\n\n    Sysout class F also routes output to the XEROX 8700 and is used for\n    any test or production output requiring operator setup. This can be\n    output which needs to print in simplex mode, or must print on cut\n    sheet paper other than 3-hole white, such as statement forms. When\n    choosing form IDs for your output, use the Sysout class and form ID\n    combinations soon to be documented in the JCL chapter of the\n    Standards manual, section 6.9.1.\n\n    Sysout class M routes output to the MEMOREX 4303 impact printer,\n    which prints continuous fan-fold paper (11x14) and labels.\n\n    NOTE:  Do not use form IDs with XEROX printer Sysout classes\n           not defined to the XEROX printer, such as 11NH, 11AA, etc.\n           These will be ignored, and your output will print as if no\n           form id had been specified.  Use FCBs on output directed\n           to the MEMOREX printer only. The XEROX printer ignores all\n           specified FCBs.\n\n\n    HOW TO PRINT PORTRAIT ORIENTATION:\n\n    To print documentation generated by program TEC250 in portrait\n    orientation (ie: narrow side of paper at top), use Sysout class Y\n    and form ID DPB8.  By using this form ID, it is no longer necessary\n    to send your own DJDE command to the XEROX printer.  DPB8 prints\n    in duplex mode on 3-hole white cut sheet paper.  Lower-case charac-\n    ters print as lower-case characters. Below is a JCL example to use:\n\n          //SYSUT2   DD  SYSOUT=(Y,,DPB8)\n\n\n    HOW TO PRINT 2-UP:\n\n    To print output 2-up (ie: two logical pages on each side of a\n    physical cut sheet), use Sysout class Y and form ID D2B8. This will\n    print duplex mode on 3-hole white cut sheet paper, portrait orient-\n    ation.  Much paper can be saved printing ABEND dumps 2-up. The\n    following is an example of the JCL to use:\n\n          //SYSUDUMP DD  SYSOUT=(Y,,D2B8)\n\n\n    HOW TO PRINT MULTIPLE REPORTS DUPLEX MODE ON A SINGLE DD STATEMENT:\n\n    Uses the COPIES=n operand on the DD statement if you are printing\n    multiple copies of the same report with one DD statement. If working\n    with an application which prints more than one different report with\n    the same DD statement, special duplex form IDs have been set up.\n    Refer to the special form IDs AP, CPI, DEFC, FA, HEAD, and ICL soon\n    to be documented in the JCL chapter of the Standards Manual, section\n    6.9.1.  The following is an example of the JCL to use to print two\n    reports created by the HEADLINE subroutine printing on the same DD\n    statement:\n\n          //ddname   DD  SYSOUT=(Y,,HEAD)\n\n\n    HOW TO PRINT SIMPLEX MODE:\n\n    Duplex printing is preferred and has higher priority, but there\n    will be special instances where simplex mode is required in testing.\n    Use Sysout class F and form ID SLL8 to print standard output in\n    simplex mode (the default prior to April 22, 1986).  The following\n    is an example of the JCL to use:\n\n          //ddname   DD  SYSOUT=(F,,SLL8)\n\n    To print documentation generated by program TEC250 in simplex mode,\n    use sysout class F and form id SPB8.  Sample JCL would be:\n\n          //SYSUT2   DD  SYSOUT=(F,,SPB8)\n\n    To have your JCL listings also print simplex, specify MSGCLASS=F\n    on your JOB statement and add the following JCL statement after\n    your JOB statement:\n\n          //OUTJCL   OUTPUT JESDS=ALL,CLASS=F,FORMS=SLL8\n\n    To get an entire job to print simplex, including JCL listings,\n    specify MSGCLASS=F on your JOB statement, Sysout class=F without\n    any form IDs on all of your Sysout DD statements, and add the\n    following two JCL statements after your JOB statement:\n\n          //OUTJCL   OUTPUT JESDS=ALL,CLASS=F,FORMS=SLL8\n          //OUTDEF   OUTPUT DEFAULT=YES,CLASS=F,FORMS=SLL8\n\n\n    Contact Mike Sheedy in Technical Support if you have any questions\n    or concerns regarding printing on the XEROX Laser Printer and/or\n    duplex mode.  To get a hardcopy printout of this (or any) NEWS\n    item, hit PF Key 4 or 16.  Thank you.\n\n..PAGE\n..SEC *.* SAMPLE DEFAULT JSL\n\n\n   THE FOLLOWING IS A SAMPLE OF THE DEFAULT JSL WE USE WITH OUR\n   XEROX FORMS CONTROL THRU JES2 EXITS SYSTEM:\n\n\n\n$$$START DFAULT.JSL\nDFAULT:  JDL;\n\n/*               FIRST JSL FOR BEN FRANKLIN             */\n/*               01/15/86    DAVID C. LEETCH            */\n\nVFU1:    VFU      ASSIGN=(1,1),ASSIGN=(12,88)\n                  TOF=1,BOF=88;\nVFUPOR:  VFU      ASSIGN=(1,1),ASSIGN=(12,84)\n                  TOF=1,BOF=84;\nVFU2:    VFU      ASSIGN=(1,15),ASSIGN=(10,82)\n                  TOF=15,BOF=88;\nVFU3:    VFU      ASSIGN=(1,19),ASSIGN=(10,80)\n                  TOF=19,BOF=88;\nVFU4:    VFU      ASSIGN=(1,6),ASSIGN=(12,60)\n                  TOF=6,BOF=60;\n\nT1:      TABLE    MASK=('&','#','@'),\n                  CONSTANT=('*& START @@@','*& END   @@@',\n                  '*& CONT  @@@');\nT2:      TABLE    CONSTANT=('O3151-RDR');\nT3:      TABLE    CONSTANT=('PAGE     1');\nT4:      TABLE    CONSTANT=('PAGE    1');\nC1:      CRITERIA CONSTANT=(0,12,EQ,T1),LINENUM=(60,20); /* BANNER */\nC2:      CRITERIA CHANGE=(90,12,NE,LAST),LINENUM=(1,1);   /* ICL */\nC3:      CRITERIA CHANGE=(0,7,NE,LAST),LINENUM=(2,1);    /* FA */\nC4:      CRITERIA CHANGE=(0,9,NE,LAST),LINENUM=(1,1);    /* CPI */\nC5:      CRITERIA CONSTANT=(0,9,EQ,T2),LINENUM=(1,1);    /* CPI */\nC6:      CRITERIA CHANGE=(0,8,NE,LAST),LINENUM=(2,1);    /* AP */\nC7:      CRITERIA CHANGE=(123,10,NE,LAST),LINENUM=(3,1);    /* HEAD */\nC8:      CRITERIA CONSTANT=(122,10,EQ,T3),LINENUM=(1,1);    /* CPI */\nC9:      CRITERIA CHANGE=(71,28,NE,LAST),LINENUM=(5,1);  /*DEF COMP */\nC10:     CRITERIA CONSTANT=(123,9,EQ,T4),LINENUM=(1,1);    /* HEAD */\n\nFNT1:    CME      LINE=(15,4),POS=1,FONT=1,POS=74,FONT=2,\n                  LINE=(19,4),POS=1,FONT=1,POS=74,FONT=4,\n                  LINE=(23,1),POS=1,FONT=1,POS=74,FONT=3,\n                  LINE=(24,-),FONT=1;\nFNT2:    CME      LINE=(1,2),FONT=3,LINE=(3,2),FONT=1,LINE=(5,2),FONT=3,\n                  LINE=(7,25),FONT=2,LINE=(33,1),FONT=3;\nFNT3:    CME      LINE=(19,3),POS=1,FONT=1,\n                  LINE=(22,1),POS=1,FONT=2,\n                  LINE=(23,-),FONT=1;\n\nPDE1:    PDE      PMODE=LAN,FONTS=L0312A,BEGIN=(.35,.66);\nPDE2:    PDE      PMODE=LAN,FONTS=((L0312A,11.26)),\n                  BEGIN=(.51 IN,.66 IN);\nPDE3:    PDE      PMODE=POR,FONT=((P1012B,16)),BEGIN=(.05,.26),\n                  BEGIN=(5.4,.26);\nPDE4:    PDE      PMODE=POR,FONTS=(PR214B,PR111E,P0812C),\n                  BEGIN=(3.5,.66);\nPDE5:    PDE      PMODE=POR,FONTS=P07TYA,BEGIN=(.5,.5);\nPDE9:    PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P08TBA,10.07),\n                  (P08TBA,7.885),(P08TBA,10)),BEGIN=(0,.8);\nPDE10:   PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P06BOA,2)),\n                  BEGIN=(0,.8);\nPORPDE:  PDE      PMODE=PORTRAIT,FONT=((P08TAC,7.6)),BEGIN=(0.00,.58);\nPORT1 :  PDE      PMODE=PORTRAIT,FONT=(P0612C,7.9);\n\n\n/*       CODE     DEFAULT=EBCDIC, */\n/*                ASSIGN=('#A',('A','B','C','D','E','F','G','H','I')) */\n/*                ASSIGN=('#J',('J','K','L','M','N','O','P','Q','R')) */\n/*                ASSIGN=('#S',('S','T','U','V','W','X','Y','Z')); */\n\n         VOLUME   HOST=IBMONL,\n                  OPTIMIZE=(NCC,NDC,NPR);\n\n         RECORD   LENGTH=201;\n\n         LINE     PCCTYPE=IBM3211,VFU=VFU1,DATA=(0,200),\n                  UCSB=IGNORE,FCB=IGNORE;\n\n         OUTPUT   FORMAT=PDE2,DUPLEX=YES,SHIFT=YES,COVER=FRONT\n                  FORM=STD;\n\n         ACCT     USER=NONE;\n\n         BANNER   TEST=C1,HCOUNT=2,TCOUNT=1,HJOBNO=(13,4),\n                  HRPTNA=(18,16);\n\n         IDEN     PREFIX='DJDE',OFFSET=2,SKIP=7;\n\nCAT1:    CAT;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE9;\n                  LINE VFU=VFU2,DATA=(1,95),FCB=IGNORE;\nDFLT:    JDE;\n               /* VOLUME CODE=USER; */\n\nSIM:     JDE;     OUTPUT DUPLEX=NO;\nSTMT:    JDE      INCLUDE=CAT1; OUTPUT MODIFY=FNT1;\nSTM445:  JDE;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE10,MODIFY=FNT3;\n                  LINE VFU=VFU3,DATA=(1,95),FCB=IGNORE;\nS272:    JDE;     OUTPUT SHIFT=NO,FORM=EAA1,FORMAT=PDE5,BFORM=EAA2;\n                  LINE VFU=VFU4;\nPOR:     JDE;     OUTPUT FORMAT=PORPDE,FORM=NONE;\n                  LINE VFU=VFUPOR;\nPORT:    JDE;     OUTPUT FORMAT=PORT1,FORM=NONE;\n2UP:     JDE;     OUTPUT FORMAT=PDE3,FORM=NONE;\nNOF:     JDE;     OUTPUT FORMAT=PDE2,FORM=NONE;\nSH88:    JDE;     OUTPUT FORMAT=PDE2,FORM=88SH;\nDOC:     JDE;     OUTPUT FORMAT=PDE4,FORM=NONE,MODIFY=FNT2,\n                  COVER=NONE,DUPLEX=NO;\nICLJDE:  JDE;     RPAGE TEST=C2;\nFAJDE:   JDE;     RPAGE TEST=C3;\nCPIJDE:  JDE;     RPAGE TEST=C4;RAUX TEST=(C5 AND C8);\nCPISDE:  JDE;     RAUX TEST=(C5 AND C8);\nAPJDE:   JDE;     RPAGE TEST=C6;\nHEDJDE:  JDE;     RPAGE TEST=(C7 OR C10);\nSVM337:  JDE;     RPAGE TEST=C9;\nEND;END;\n..PAGE\n..SEC *.* SAMPLE GLOBAL JSL\n\n\n   THE FOLLOWING IS A SAMPLE OF THE GLOBAL JSL WE USE WITH OUR\n   XEROX FORMS CONTROL THRU JES2 EXITS SYSTEM:\n\n\n$$$START GLOBAL.JSL\nPD1 :    PDE      PMODE=LAN,FONTS=(L0112C,L01BOB,L01ITA),\n                  BEGIN=(.18,.66);\n         END;\nPD2 :    PDE      PMODE=LAN,FONTS=(L0212A,L02BOA,L02ITA),\n                  BEGIN=(.18,.50);\n         END;\nPD3 :    PDE      PMODE=LAN,FONTS=(L0312A,L03BOA,L03ITA),\n                  BEGIN=(.14,.66);\n         END;\nPD4 :    PDE      PMODE=LAN,FONTS=(L0412A,L04BOA,L04ITA),\n                  BEGIN=(.14,.50);\n         END;\nPD5 :    PDE      PMODE=LAN,\n                  FONTS=(L05ITA,L05TYA,L05SCA,L05TAC,L05TBC,L0512C),\n                  BEGIN=(.17,.50);\n         END;\nPD6 :    PDE      PMODE=POR,\n                  FONTS=(P0612C,P06BOB,P06ITB),\n                  BEGIN=(.57,.58);\n         END;\nPD7 :    PDE      PMODE=POR,\n                  FONTS=(P07ITA,P07TYA,P07SCA,P07TCC,P07TDC),\n                  BEGIN=(1.4,1.5);\n         END;\nPD8 :    PDE      PMODE=POR,\n                  FONTS=(P08ITA,P08TYA,P08SCA,P08TAC,P08TBC,P0812C),\n                  BEGIN=(.50,.50);\n         END;\nPD9 :    PDE      PMODE=LAN,\n                  FONTS=((L0912A,12),(L09BOA,10),(L09ITA,10)),\n                  BEGIN=(.5,.6);\n         END;\nPD10:    PDE      PMODE=LAN,\n                  FONTS=L1012B,\n                  BEGIN=(.22,.51);\n         END;\nPD11:    PDE      PMODE=LAN,\n                  FONTS=L1112A,\n                  BEGIN=(.22,.50);\n         END;\nPDE1:    PDE      PMODE=LAN,FONTS=L0312A,BEGIN=(.35,.66);\n         END;\nPDE2:    PDE      PMODE=LAN,FONTS=((L0312A,11.26)),\n                  BEGIN=(.51 IN,.66 IN);\n         END;\nPDE3:    PDE      PMODE=POR,FONT=((P1012B,16)),BEGIN=(.15,.46),\n                  BEGIN=(5.50,.46);\n         END;\nPDE4:    PDE      PMODE=POR,FONTS=(PR214B,PR111E,P0812C),\n                  BEGIN=(3.5,.66);\n         END;\nPDE5:    PDE      PMODE=POR,FONTS=P07TYA,BEGIN=(.5,.5);\n         END;\nPDE9:    PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P08TBA,10.07),\n                  (P08TBA,7.885),(P08TBA,10)),BEGIN=(0,.8);\n         END;\nPDE10:   PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P06BOA,2)),\n                  BEGIN=(0,.8);\n         END;\n\nPORPDE:  PDE      PMODE=PORTRAIT,FONT=((P08TAC,7.6)),BEGIN=(0.00,.58);\n        END;\nPORT1 :  PDE      PMODE=PORTRAIT,FONT=((P0612C,7.9));\n        END;\nFNT1:    CME      LINE=(15,4),POS=1,FONT=1,POS=74,FONT=2,\n                  LINE=(19,4),POS=1,FONT=1,POS=74,FONT=4,\n                  LINE=(23,1),POS=1,FONT=1,POS=74,FONT=3,\n                  LINE=(24,-),FONT=1;\n        END;\nFNT2:    CME      LINE=(1,2),FONT=3,LINE=(3,2),FONT=1,LINE=(5,2),FONT=3,\n                   LINE=(7,25),FONT=2,LINE=(33,1),FONT=3;\n        END;\nFNT3:    CME      LINE=(19,3),POS=1,FONT=1,\n                  LINE=(22,1),POS=1,FONT=2,\n                  LINE=(23,-),FONT=1;\n        END;\nFT1:     CME      LINE=(1,-),POS=1,FONT=1;\n        END;\nFT2:     CME      LINE=(1,-),POS=1,FONT=2;\n        END;\nFT3:     CME      LINE=(1,-),POS=1,FONT=3;\n        END;\nFT4:     CME      LINE=(1,-),POS=1,FONT=4;\n        END;\nFT5:     CME      LINE=(1,-),POS=1,FONT=5;\n        END;\nFT6:     CME      LINE=(1,-),POS=1,FONT=6;\n        END;\n..PAGE\n..SEC *.* EXIT1A LOGIC\n..SEC *.*.* EXIT1A DESCRIPTION\n\n    EXIT1A FUNCTIONS:\n\n        .  TELLS XEROX PRINTER AS REGARDS WHAT FORM AND WHAT\n           PDE'S ARE REQUIRED FOR THIS OUTPUT VIA DJDE FORMS\n           IMAGE TABLE ENTRY (DFITE).\n\n        .  SETS THE MODE OF PRINTER OPERATION (DUPLEX OR SIMPLEX)\n           AND TELLS OPERATOR WHEN TO SWITCH PAPER AROUND (PSMTE).\n\n        .  PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) USED TO TELL\n           OPERATOR WHAT TYPE OF STOCK PAPER TO LOAD INTO XEROX\n           PRINTER.\n\n        .  DISPLAYS JOBNAME ASSOCIATED WITH THIS OUTPUT AT THE\n           XEROX PRINTER CONTROL CONSOLE VIA PAGE SETUP MESSAGE\n           TABLE ENTRY (PSMTE).\n\n        .  SPECIFIES ADDITIONAL CONTROL VIA DJDE VFU IMAGE\n           TABLE ENTRY (DVITE).\n\n        .  PASSES PRINTER AND FORMS SETUP INFORMATION ON TO OTHER\n           JES2 USER EXITS, AND TO ITSELF FOR ITS NEXT INVOCATION\n           (PRNTRTAB).\n\n    ENVIRONMENT:\n\n        EXTENSION OF JES2 MAIN TASK SERVING HASPPRPU.\n\n    DEPENDENCIES:\n\n           THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.\n\n           REQUIRES EXIT1MIT, EXIT1REG, EXIT1A, AND EXIT1TAB BE\n           ASSEMBLED TOGETHER.  EXIT1B, EXIT5, EXIT15, AND\n           EXIT250 ARE RECOMMENDED BE ASSEMBLED WITH IT ALSO.\n\n           IF THIS EXIT IS DISABLED, JES2 CONTINUES WITH THE\n           STANDARD HASPPRPU.\n\n\n    RESTRICTIONS:\n\n           -  THIS EXIT SHOULD CONFORM TO JES2 RE-ENTRANCY\n              REQUIREMENTS (I.E., NOT THE OS/VS RE-ENTRANCY\n              REQUIREMENTS).\n\n           -  NO OS/VS IO/EXCP ALLOWED IN THIS EXIT.  THE I/O\n              ACTIVITIES SHOULD BE LIMITED ONLY TO HAM/RTAM, AND\n              NO OTHER ACCESS METHOD.\n\n           -  NO OS/VS MACRO ALLOWED IN THIS EXIT. THE MACROS\n              SHOULD BE LIMITED ONLY TO THOSE STARTING WITH $\n              SIGN, E.G., STANDARD JES2 MACROS.\n\n\n    CONSTRAINTS:\n\n        .  SEPARATOR TRUNCATION:  THE SEPARATOR (BANNER PAGE)\n                  GETS TRUNCATED ON PORTRAIT FORM. TO AVOID\n                  THIS PROBLEM, THE USERS SHOULD PROVIDE THEIR\n                  OWN LOGIC (ANOTHER 500 - 600 LINES OF CODE).\n                  OUR SOLUTION TO THIS IS IN BF EXIT1B.\n\n\n        .  MULTIPLE COPY SEPARATOR:  THIS MODULE DOES NOT\n                  PROVIDE SEPARATOR FOR MULTIPLE COPY SYSOUT.\n                  OUR SOLUTION IS IN BF EXIT15.\n\n        .  DUPLEXING:  THIS MODULE SUPPORTS DUPLEXING WHEN USED\n                  WITH BF EXIT15.\n\n        .  MODULE SIZE:  THIS MODULE USES ONLY ONE REGISTER\n                  TO BASE ADDRESS THE PROGRAM. THOSE WHO USE\n                  A LARGE NUMBER OF FORMS MAY HAVE TO HAVE\n                  ANOTHER REGISTER FOR BASE ADDRESSING.\n\n        .  RECOVERY TERMINATION:  THIS MODULE DOES NOT HAVE\n                  ESTAE LOGIC, BUT RUNS ERROR FREE. NEVERTHELESS\n                  THE RECOVERY/TERMINATION LOGIC SHOULD BE\n                  PROVIDED (USE $ESTAE).\n..PAGE\n..SEC *.*.* EXIT1ADR ALGORITHM\n\n    EXIT1ADR (DRIVER) ALGORITHM:\n\n    <1>.  IF A PUNCH DEVICE ?\n            TELL JES2 TO FOLLOW STANDARD PROCEDURE,\n\n    <2>.    IF NOT A PRINTER ?\n              TELL JES2 TO FOLLOW STANDARD PROCEDURE,\n\n    <3>.      IF PRINTER TABLE NOT ADDRESSABLE ?\n                TELL JES2 TO FOLLOW STANDARD PROCEDURE,\n\n    <4>.        FIND PRINTER TABLE ENTRY.\n\n    <5>.        IF NOT A XEROX PRINTER (SEPDS=N) ?\n                  CORRECT THE PRINTER TABLE ENRTY AND\n                  TELL JES2 TO FOLLOW STANDARD PROCEDURE.\n\n    <6>.          IS A XEROX PRINTER (SEPDS=Y), SO\n                  CORRECT THE PRINTER TABLE ENTRY,\n                  SAVE SEPARATOR CONTROL INFORMATION,\n                  OBTAIN WORKING STORAGE FOR DATA BUFFERRING,\n                  AND RELOCATE THE BUFFER ADDRESS TO IT.\n\n    <7>.          INSURE A PERIPHERAL DATA INFORMATION RECORD\n                  FOR SNA.  OBTAIN THE WORK-JOE ADDRESS.\n\n    <8>.          IF END-OF-JOB PRINT SEPARATOR ?\n                    SETUP TO USE DEFAULT FORMS CROSS REFERENCE\n                    TABLE AND BRANCH TO <10> FOR TRAILER PROCESSING.\n\n                  ENDIF\n                ENDIF\n              ENDIF\n            ENDIF\n          ENDIF.\n\n    <9>.  LOCATE FORMS CROSS REFERENCE TABLE BASED ON SYSOUT CLASS,\n            USE DEFAULT IF NONE FOUND.\n          PERFORM 'SENDDJDE', AND FREE THE BUFFER OBTAINED EARLIER.\n\n   <10>.  USE DEFAULT FORMS CROSS REFERENCE TABLE.\n          PERFORM 'SENDTRLR', AND FREE THE BUFFER OBTAINED EARLIER.\n\n   <11>.  FREE THE BUFFER ACQUIRED IN STEP <6>. (NOTE: THIS SECTION\n          IS PERFORMED BY STEP <9> AND STEP <10>.)\n\n   <12>.  TELL JES2 TO PRODUCE STANDARD SEPARATOR.\n..PAGE\n..SEC *.*.* SENDDJDE ALGORITHM\n   SENDDJDE (START/CONTINUE BANNER) ALGORITHM:\n\n    <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.\n          RESET STOCK AND MODE SWITCHES IF THE PREVIOUS FORM USED ON\n          THIS PRINTER IS UNKNOWN (FORCES OPERATOR SETUP).\n\n    <2>.  RETRIEVE THE ADDRESS OF THE 'CJOE'.\n\n    <3>.  DOWHILE FORMS CROSS REFERENCE TABLE ENTRY(FCRTE) NOT END ?\n            IF NO MORE 'FCRTE' ?\n              RETRIEVE 'FCRT' ADDRESS, PASS THE DEFAULT 'STD.'\n            ELSE\n\n    <4>.      IF CURRENT 'FCRTE' NOT MATCH WITH SYSTEM DATASET FORM?\n                GET NEXT 'FCRTE'\n              ENDIF\n            ENDIF\n          ENDDO.\n\n    <5>.  MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER.\n          SEND THAT 'DFITE' TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.\n\n    <6>.  BUILD JOBMSG WITH JOBNAME AND ITS SYSOUT FORM TO BUFFER.\n          SEND THAT MESSAGE TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.\n\n    <7>.  INITIALIZE HOLD SWITCH.\n          IF FORM IS DUPLEX,\n            PERFORM <8> SENDDPLX,\n          ELSE\n            PERFORM <9> SENDSPLX.\n\n    <8>.  SENDDPLX: SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT'\n          SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.\n          IF PREVIOUS OUTPUT TO THIS PRINTER WAS DUPLEX, GO TO <10>.\n          IF SUPPRESSING FORMS CONTROL, GO TO <12>.\n          IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T\n            MATTER, SO GO TO <10>.\n          INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.\n          IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10>\n            AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.\n          SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR DUPLEX.\n          GO TO <10>.\n\n    <9>.  SENDSPLX: SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT\n          SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.\n          IF PREVIOUS OUTPUT TO THIS PRINTER WAS SIMPLEX, GO TO <10>.\n          IF SUPPRESSING FORMS CONTROL, GO TO <12>.\n          IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T\n            MATTER, SO GO TO <10>.\n          INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.\n          IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10>\n            AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.\n          SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR SIMPLEX.\n          GO TO <10>.\n\n   <10>.  IF THE NEW STOCK IS SAME AS THE OLD STOCK, GO TO <11>.\n          IF SUPPRESSING FORMS CONTROL, GO TO <12>.\n          INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.\n          MOVE DJDE PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) TO JES2\n            BUFFER.  MODIFY WITH MODE (DUPLEX OR SIMPLEX).\n          SEND THAT 'PTMTE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.\n          GO TO <11>.\n\n   <11>.  IF OPERATOR SETUP MESSAGES HAVE BEEN SENT, SEND DJDE TO\n            HOLD THE PRINTER UNTIL OPERATOR PERFORMS ACTION AND\n            RESPONDS 'CONTINUE 0'.\n          RESET PREVIOUS STOCK, MODE, SYSOUT CLASS, AND FORM ID FIELD\n            FOR THIS PRINTER WITH CURRENT VALUES (FOR NEXT REPORT).\n          GO TO <13>.\n\n   <12>.  RESET PREVIOUS STOCK, MODE, AND SYSOUT CLASS ID FIELDS FOR\n            THIS PRINTER WITH CURRENT VALUES.  RESET PREVIOUS FORM ID\n            FOR THIS PRINTER TO UNKNOWN TO FORCE OPERATOR SETUP ON\n            NEXT REPORT.\n          GO TO <13>.\n\n   <13>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT).\n          LOAD  R5 WITH ITS ENTRY COUNT.\n\n   <14>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?\n            SEND NEXT 'DVITE' TO XEROX PRINTER\n          ENDDO.\n          GO TO <15>.\n\n   <15>.  RETURN TO THE CALLER\n..PAGE\n..SEC *.*.* SENDTRLR ALGORITHM\n\n   SENDTRLR (END BANNER) ALGORITHM:\n\n    <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.\n          MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER\n            (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).\n          SEND THAT 'DFITE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.\n\n    <2>.  IF FORM IS DUPLEX,\n            SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT',\n          ELSE\n            SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT'.\n          SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.\n\n    <3>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT)\n            (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).\n          LOAD  R5 WITH ITS ENTRY COUNT.\n\n    <4>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?\n            SEND NEXT 'DVITE' TO XEROX PRINTER\n          ENDDO.\n\n    <5>.  MOVE PAGE EJECT COMMAND TO JES2 BUFFER.\n          SEND PAGE EJECT TO XEROX PRINTER.\n          GO TO <6>.\n\n    <6>.  RETURN TO THE CALLER\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DISCLMR": {"ttr": 1798, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PREP1": {"ttr": 1800, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASPRE JOB (D439),\n//             '*FORMS CONTROL PREP ',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($PREP1)\n//*\n//* THIS JOB PREPARES LIBRARIES FOR TURNING OVER THE XEROX FORMS\n//* CONTROL JES2 EXIT1MIT AND TEC021 INTO PRODUCTION.  ONLY APPLICABLE\n//* TO BENJ.  FRANKLIN.\n//*\n//* THIS STEP SCRATCHES THE PREVIOUS BACKUP MEMBERS FROM PRODUCTION.\n//*\n//SCRATCH  EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//MVSPG4   DD  UNIT=3380,VOL=SER=MVSPG4,DISP=OLD\n//SYSIN    DD  *\n  SCRATCH  DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,MEMBER=EXIT1MIB\n  SCRATCH  DSNAME=SYS2.TECH.LINKLIB,VOL=3380=MVSPG4,MEMBER=TEC021B\n//*\n//* THIS STEP COMPRESSES THE PRODUCTION LIBRARIES AND COPIES OVER THE\n//* NEW MEMBERS RENAMED TO TEMPORARY NEW NAMES PRIOR TO TURNOVER.\n//*\n//COPY     EXEC PGM=IEBCOPY,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//EXITLOAD DD  DSN=SYS2.JES2136.EXITLOAD,DISP=SHR  NEW EXITS\n//PLINKLIB DD  DSN=SYS1.PLINKLIB,DISP=SHR          PRODUCTION EXITS\n//TECHLINK DD  DSN=SYS2.TECH.LINKLIB,DISP=SHR      PRODUCTION TEC021\nCOMP1    COPY OUTDD=PLINKLIB,INDD=PLINKLIB   COMPRESS SYS1.PLINKLIB\nCOPY1    COPY OUTDD=PLINKLIB,INDD=EXITLOAD   COPY AND RENAME EXIT1MIT\nEXIT1MIT SELECT MEMBER=((EXIT1MIT,EXIT1MIN,R))\nCOMP2    COPY OUTDD=TECHLINK,INDD=TECHLINK   COMPRESS SYS2.TECH.LINKLIB\nCOPY2    COPY OUTDD=TECHLINK,INDD=EXITLOAD   COPY AND RENAME TEC021\nTEC021   SELECT MEMBER=((TEC021,TEC021N,R))\n//*\n//* TEST FOR BAD RETURN CODES.\n//*\n//STEP97   EXEC PGM=IEFBR14,   DON'T RUN IF BAD RETURN CODES\n//             COND=((8,LT,SCRATCH),(0,LT,COPY))\n//*\n//STEP98   EXEC PGM=TEC064,    DON'T RUN IF STEP97 RUNS (IE: RUN IF ANY\n//             COND=(0,EQ,STEP97),  STEP IS NON-ZERO)\n//         PARM='PREPARATION FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,    DON'T RUN IF NO STEP ABENDS\n//             COND=ONLY,\n//         PARM='PREPARATION FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PREP4": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASPRE JOB (D439),\n//             '*JCL SCAN EXIT4 PREP',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($PREP4)\n//*\n//* THIS JOB PREPARES LIBRARIES FOR TURNING OVER THE JCL SCAN JES2\n//* EXIT4MIT INTO PRODUCTION.  ONLY APPLICABLE TO BENJ. FRANKLIN.\n//*\n//* THIS STEP SCRATCHES THE PREVIOUS BACKUP MEMBER FROM PRODUCTION.\n//*\n//SCRATCH  EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//SYSIN    DD  *\n  SCRATCH  DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,MEMBER=EXIT4MIB\n//*\n//* THIS STEP COMPRESSES THE PRODUCTION LIBRARY AND COPIES OVER THE\n//* NEW MEMBER RENAMED TO A TEMPORARY NEW NAME PRIOR TO TURNOVER.\n//*\n//COPY     EXEC PGM=IEBCOPY,COND=(8,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//EXITLOAD DD  DSN=SYS2.JES2136.EXITLOAD,DISP=SHR  NEW EXITS\n//PLINKLIB DD  DSN=SYS1.PLINKLIB,DISP=SHR          PRODUCTION EXITS\nCOMP4    COPY OUTDD=PLINKLIB,INDD=PLINKLIB   COMPRESS SYS1.PLINKLIB\nCOPY4    COPY OUTDD=PLINKLIB,INDD=EXITLOAD   COPY AND RENAME EXIT4MIT\nEXIT4MIT SELECT MEMBER=((EXIT4MIT,EXIT4MIN,R))\n//*\n//* TEST FOR BAD RETURN CODES.\n//*\n//STEP97   EXEC PGM=IEFBR14,   DON'T RUN IF BAD RETURN CODES\n//             COND=((8,LT,SCRATCH),(0,LT,COPY))\n//*\n//STEP98   EXEC PGM=TEC064,    DON'T RUN IF STEP97 RUNS (IE: RUN IF ANY\n//             COND=(0,EQ,STEP97),  STEP IS NON-ZERO)\n//         PARM='PREPARATION FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,    DON'T RUN IF NO STEP ABENDS\n//             COND=ONLY,\n//         PARM='PREPARATION FAILED - NOTIFY SUBMITTER OR MIKE SHEEDY'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PRINT": {"ttr": 1804, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASDOC JOB BF,\n//             SHEEDY,\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350,LINECT=0\n//* SEE SYS2.JES2136.EXITSRC($PRINT)\n//*\n//* THIS JOB PRINTS THE DOCUMENTATION IN $DESC.  IT USES A BF PROGRAM\n//* TO FORMAT THE DOCUMENTATION.  YOU WILL HAVE TO SUPPLY YOUR OWN\n//* MEANS OF DOING THIS.\n//*\n//SMART    EXEC PGM=TEC250,      BF DOCUMENT FORMATING PROGRAM\n//             PARM=LMI\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//SYSLIB   DD  DSN=SYS2.JES2136.EXITSRC($DESC),\n//             DISP=SHR\n//SYSUT2   DD  SYSOUT=(F,,SPB8),COPIES=2\n//SYSUT3   DD  UNIT=3380,\n//             VOL=SER=MVSLB1,\n//             SPACE=(CYL,(1,1))\n//SYSUDUMP DD  SYSOUT=*\n//WORDS    DD  DSN=BFNT.DOCLIB(WORDS),\n//             DISP=SHR\n//SYSUT1   DD  *\n..COVER\n..COVER\n..TITLE BENJ. FRANKLIN'S XEROX FORMS CONTROL\n..SPELL\nDSN\n..SPELL\n..SPCHK OFF\n..DATE 01/23/89\n..VERSION 3.2\n..SUPER 11/17/88\n..PREP MIKE SHEEDY\n..APPROVED\n..INDEX 10000\n INCLUDE,PARMS,BFGROTAT\n..INDEX\n..INCLUDE SYSLIB($DESC)\n\n\n\n\n END OF DOCUMENT.\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$TEST1": {"ttr": 1806, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "$TEST4": {"ttr": 2049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMAST41 JOB (D439),\n//             '*JES2 EXIT4 TEST1   ',\n//             CLASS=A,\n//             MSGCLASS=Y,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($TEST4)\n//*\n//* THIS JOB TESTS THAT JES2 USER EXIT 4 (EXIT4MIT) IS FUNCTIONING\n//* CORRECTLY.  IT WOULD NORMALLY BE RUN UNDER THE ALTERNATE JESA.\n//* THE //JOBCAT CARD SHOULD BE COMMENTED OUT IN THIS JOB.\n//*\n//JOBCAT   DD  DSN=CATALOG.VVSAM01,DISP=SHR  SHOULD MAKE COMMENT\n//STEP01   EXEC  PGM=IEFBR14\n//\n//TSMAST42 JOB (D439),\n//             '*JES2 EXIT4 TEST2   ',\n//             CLASS=A,\n//             MSGCLASS=Y,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($TEST4)\n//*\n//* THIS JOB TESTS THAT JES2 USER EXIT 4 (EXIT4MIT) IS FUNCTIONING\n//* CORRECTLY.  IT WOULD NORMALLY BE RUN UNDER THE ALTERNATE JESA.\n//* THE //JOBCAT CARD SHOULD BE FUNCTIONAL IN THIS JOB.\n//*\n//JOBCAT   DD  DSN=CATALOG.VVSAM01,DISP=SHR  SHOULD BE ACTIVE      BENJ\n//STEP01   EXEC  PGM=IEFBR14\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$TURN1": {"ttr": 2051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASETO JOB (D439),\n//             '*FORMS CNTL TURNOVER',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($TURN1)\n//*\n//* THIS JOB TURNS OVER NEW XEROX FORMS CONTROL JES2 EXIT1MIT.  $ASM1\n//* AND $PREP1 MUST HAVE BEEN RUN PRIOR TO THIS JOB.  BACKOUT WITH\n//* $BACK1.  ONLY APPLICABLE TO BENJ. FRANKLIN.\n//*\n//TURNOVER EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//MVSPG4   DD  UNIT=3380,VOL=SER=MVSPG4,DISP=OLD\n//SYSIN    DD  *\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT1MIT,NEWNAME=EXIT1MIB\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT1MIN,NEWNAME=EXIT1MIT\n  RENAME   DSNAME=SYS2.TECH.LINKLIB,VOL=3380=MVSPG4,                   X\n               MEMBER=TEC021,NEWNAME=TEC021B\n  RENAME   DSNAME=SYS2.TECH.LINKLIB,VOL=3380=MVSPG4,                   X\n               MEMBER=TEC021N,NEWNAME=TEC021\n//*\n//* TEST FOR NON-ZERO RETURN CODE.\n//*\n//STEP98   EXEC PGM=TEC064,\n//             COND=(0,EQ),\n//         PARM='TURNOVER FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,\n//             COND=ONLY,\n//         PARM='TURNOVER FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$TURN4": {"ttr": 2053, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASETO JOB (D439),\n//             '*JCL SCAN TURNOVER  ',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             NOTIFY=TSMAS\n/*JOBPARM  ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($TURN4)\n//*\n//* THIS JOB TURNS OVER JCL SCAN JES2 EXIT4MIT.  $ASM4 AND $PREP4 MUST\n//* HAVE BEEN RUN PRIOR TO THIS JOB.  BACKOUT WITH $BACK4.  ONLY\n//* APPLICABLE TO BENJ. FRANKLIN.\n//*\n//TURNOVER EXEC PGM=IEHPROGM,PARM='LINECNT=76'\n//SYSPRINT DD  SYSOUT=*\n//MVSPG2   DD  UNIT=3380,VOL=SER=MVSPG2,DISP=OLD\n//SYSIN    DD  *\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT4MIT,NEWNAME=EXIT4MIB\n  RENAME   DSNAME=SYS1.PLINKLIB,VOL=3380=MVSPG2,                       X\n               MEMBER=EXIT4MIN,NEWNAME=EXIT4MIT\n//*\n//* TEST FOR NON-ZERO RETURN CODE.\n//*\n//STEP98   EXEC PGM=TEC064,\n//             COND=(0,EQ),\n//         PARM='TURNOVER FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n//*\n//* TEST FOR ABEND.\n//*\n//STEP99   EXEC PGM=TEC064,\n//             COND=ONLY,\n//         PARM='TURNOVER FAILED - NOTIFY MIKE SHEEDY OR ONCALL PERSON'\n//STEPLIB  DD  DSN=SYS2.TECH.LINKLIB,\n//             DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$XFER": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASXFR JOB BF,'*XFER FORM TO XEROX ',\n//             CLASS=A,MSGCLASS=X,NOTIFY=OPDCL\n/*JOBPARM ROOM=0350\n//* SEE SYS2.JES2136.EXITSRC($XFER)\n//*\n//* USE THIS JOB TO TRANSFER FORMS DESIGNS TO THE XEROX LASER PRINTER.\n//*\n//TRANSFER EXEC  PGM=IEBGENER\n//SYSPRINT DD    SYSOUT=*\n//SYSIN    DD    DUMMY\n//SYSUT1   DD    DISP=SHR,DSN=SYS2.JES2136.EXITSRC(DFAULT)  <----\n//         DD    DISP=SHR,DSN=SYS2.JES2136.EXITSRC(GLOBAL)  <----\n//         DD    DISP=SHR,DSN=SYS2.JES2136.EXITSRC(STD)     <----\n//         DD    DISP=SHR,DSN=SYS2.JES2136.EXITSRC(SH88)    <----\n//         DD    DISP=SHR,DSN=SYS2.JES2136.EXITSRC(END)     <----\n//SYSUT2   DD    SYSOUT=(9,,XFER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFAULT": {"ttr": 2057, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$$$START DFAULT.JSL\nDFAULT:  JDL;\n\n/*               FIRST JSL FOR BEN FRANKLIN             */\n/*               01/15/86    DAVID C. LEETCH            */\n\nVFU1:    VFU      ASSIGN=(1,1),ASSIGN=(12,88)\n                  TOF=1,BOF=88;\nVFUPOR:  VFU      ASSIGN=(1,1),ASSIGN=(12,84)\n                  TOF=1,BOF=84;\nVFU2:    VFU      ASSIGN=(1,15),ASSIGN=(10,82)\n                  TOF=15,BOF=88;\nVFU3:    VFU      ASSIGN=(1,19),ASSIGN=(10,80)\n                  TOF=19,BOF=88;\nVFU4:    VFU      ASSIGN=(1,6),ASSIGN=(12,60)\n                  TOF=6,BOF=60;\nVFU5:    VFU      ASSIGN=(1,15),ASSIGN=(10,82)\n                  TOF=1,BOF=88;\nVFU6:    VFU      ASSIGN=(1,1),ASSIGN=(12,67)\n                  TOF=1,BOF=67;\n\nT1:      TABLE    MASK=('&','#','@'),\n                  CONSTANT=('*& START @@@','*& END   @@@',\n                  '*& CONT  @@@');\nT2:      TABLE    CONSTANT=('O3151-RDR');\nT3:      TABLE    CONSTANT=('PAGE     1');\nT4:      TABLE    CONSTANT=('PAGE    1');\nT5:      TABLE    CONSTANT=('ZIP END');\nT6:      TABLE    MASK=('?','?','?'),CONSTANT=('?');\nC1:      CRITERIA CONSTANT=(0,12,EQ,T1),LINENUM=(60,20); /* BANNER */\nC2:      CRITERIA CHANGE=(90,12,NE,LAST),LINENUM=(1,1);   /* ICL */\nC3:      CRITERIA CHANGE=(0,7,NE,LAST),LINENUM=(2,1);    /* FA */\nC4:      CRITERIA CHANGE=(0,9,NE,LAST),LINENUM=(1,1);    /* CPI */\nC5:      CRITERIA CONSTANT=(0,9,EQ,T2),LINENUM=(1,1);    /* CPI */\nC6:      CRITERIA CHANGE=(0,8,NE,LAST),LINENUM=(2,1);    /* AP */\nC7:      CRITERIA CHANGE=(123,10,NE,LAST),LINENUM=(3,1);    /* HEAD */\nC8:      CRITERIA CONSTANT=(122,10,EQ,T3),LINENUM=(1,1);    /* CPI */\nC9:      CRITERIA CHANGE=(71,28,NE,LAST),LINENUM=(5,1);  /*DEF COMP */\nC10:     CRITERIA CONSTANT=(123,9,EQ,T4),LINENUM=(1,1);    /* HEAD */\nC11:     CRITERIA CONSTANT=(5,7,EQ,T5),LINENUM=(1,1);    /* 1099 */\nC12:     CRITERIA CONSTANT=(1,1,EQ,T6),LINENUM=(57,1);    /* MEMO 6LPI*/\nC13:     CRITERIA CONSTANT=(1,1,EQ,T6),LINENUM=(73,1);    /* MEMO 8LPI*/\n\nFNT4:    CME      LINE=(15,4),POS=1,FONT=1,POS=74,FONT=2,\n                  LINE=(19,4),POS=1,FONT=1,POS=74,FONT=4,\n                  LINE=(23,1),POS=1,FONT=1,POS=74,FONT=3,\n                  LINE=(24,-),FONT=1;\nFNT2:    CME      LINE=(1,2),FONT=3,LINE=(3,2),FONT=1,LINE=(5,2),FONT=3,\n                   LINE=(7,25),FONT=2,LINE=(33,1),FONT=3;\nFNT3:    CME      LINE=(19,3),POS=1,FONT=1,\n                  LINE=(22,1),POS=1,FONT=2,\n                  LINE=(23,-),FONT=1;\nFNT1:    CME      LINE=(15,8),POS=1,FONT=1,POS=76,FONT=2,\n                  LINE=(23,1),POS=1,FONT=3,POS=76,FONT=2,\n                  LINE=(24,-),FONT=3;\n\nPDE1:    PDE      PMODE=LAN,FONTS=L0312A,BEGIN=(.35,.66);\nPDE2:    PDE      PMODE=LAN,FONTS=((L0312A,11.26)),\n                  BEGIN=(.51 IN,.66 IN);\nPDE3:    PDE      PMODE=POR,FONT=((P1012B,16)),BEGIN=(.15,.46),\n                  BEGIN=(5.50,.46);\nPDE4:    PDE      PMODE=POR,FONTS=(PR214B,PR111E,P0812C),\n                  BEGIN=(3.5,.66);\nPDE5:    PDE      PMODE=POR,FONTS=P07TYA,BEGIN=(.5,.5);\nPDE6:    PDE      PMODE=POR,FONTS=P0812A,BEGIN=(.32,.05);\nPDE7:    PDE      PMODE=LAN,FONTS=(L0112A,8.8),BEGIN=(.41,.66);\nPDE8:    PDE      PMODE=POR,FONTS=(P08TAC,6),BEGIN=(.8,.5);\nPDE9:    PDE      PMODE=POR,FONTS=((P0612A,37 DOTS),(BENFNT,37 DOTS),\n                  (P0612A,36 DOTS)),\n                  BEGIN=(0,.8);\nPDE10:   PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P06BOA,2)),\n                  BEGIN=(0,.8);\nPDE11:   PDE      PMODE=POR,FONTS=(P08TAC,7.6),BEGIN=(.8,.5);\nPDE12:   PDE      PMODE=POR,FONTS=((P06BOB,7.9),(BENFNT,37 DOTS),\n                  (P06BOB,7.9)),\n                  BEGIN=(0,.8);\nPDE13:   PDE      PMODE=PORTRAIT,FONT=((P08TAC,6)),BEGIN=(.5,.5);\nPORPDE:  PDE      PMODE=PORTRAIT,FONT=((P08TAC,7.6)),BEGIN=(0.10,.58);\nPORT1 :  PDE      PMODE=PORTRAIT,FONT=(P0612C,7.9);\n\n/*       CODE     DEFAULT=EBCDIC, */\n/*                ASSIGN=('#A',('A','B','C','D','E','F','G','H','I')) */\n/*                ASSIGN=('#J',('J','K','L','M','N','O','P','Q','R')) */\n/*                ASSIGN=('#S',('S','T','U','V','W','X','Y','Z')); */\n\n         VOLUME   HOST=IBMONL,\n                  OPTIMIZE=(NCC,NDC,NPR);\n\n         RECORD   LENGTH=201;\n\n         LINE     PCCTYPE=IBM3211,VFU=VFU1,DATA=(0,200),\n                  UCSB=IGNORE,FCB=IGNORE;\n\n         OUTPUT   FORMAT=PDE2,DUPLEX=YES,SHIFT=(75,-50),COVER=FRONT\n                  FORM=STD;\n\n         ACCT     USER=NONE;\n\n         BANNER   TEST=C1,HCOUNT=2,TCOUNT=1,HJOBNO=(13,4),\n                  HRPTNA=(18,16);\n\n         IDEN     PREFIX='DJDE',OFFSET=2,SKIP=7;\n\nCAT1:    CAT;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE9;\n                  LINE VFU=VFU2,DATA=(1,95),FCB=IGNORE;\nDFLT:    JDE;\n               /* VOLUME CODE=USER; */\n\nSIM:     JDE;     OUTPUT DUPLEX=NO;\nSTMT:    JDE      INCLUDE=CAT1; OUTPUT MODIFY=FNT1;\nSTM445:  JDE;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE10,MODIFY=FNT3;\n                  LINE VFU=VFU3,DATA=(1,95),FCB=IGNORE;\nS272:    JDE;     OUTPUT SHIFT=NO,FORM=EAA1,FORMAT=PDE5,BFORM=EAA2;\n                  LINE VFU=VFU4;\nPOR:     JDE;     OUTPUT FORMAT=PORPDE,FORM=NONE;\n                  LINE VFU=VFUPOR;\nPORT:    JDE;     OUTPUT FORMAT=PORT1,FORM=NONE;\n2UP:     JDE;     OUTPUT FORMAT=PDE3,FORM=NONE;\nNOF:     JDE;     OUTPUT FORMAT=PDE2,FORM=NONE;\nSH88:    JDE;     OUTPUT FORMAT=PDE2,FORM=88SH;\nDOC:     JDE;     OUTPUT FORMAT=PDE4,FORM=NONE,MODIFY=FNT2,\n                  COVER=NONE,DUPLEX=NO;\nICLJDE:  JDE;     RPAGE TEST=C2;\nFAJDE:   JDE;     RPAGE TEST=C3;\nCPIJDE:  JDE;     RPAGE TEST=C4;RAUX TEST=(C5 AND C8);\n                  OUTPUT FORMAT=PDE7,FORM=STD66;\nCPISDE:  JDE;     RAUX TEST=(C5 AND C8);\n                  OUTPUT FORMAT=PDE7,FORM=STD66;\nAPJDE:   JDE;     RPAGE TEST=C6;\nHEDJDE:  JDE;     RPAGE TEST=(C7 OR C10);\nSVM337:  JDE;     RPAGE TEST=C9;\nSV1099:  JDE;     RAUX TEST=C11;\n                  OUTPUT FORMAT=PDE6,FORM=S1099,DUPLEX=NO,SHIFT=NO;\nSV1098:  JDE;     RAUX TEST=C11;\n                  OUTPUT FORMAT=PDE6,FORM=S1098,BFORM=S1098B,SHIFT=NO;\nSV5498:  JDE;     RAUX TEST=C11;\n                  OUTPUT FORMAT=PDE6,FORM=S5498,BFORM=S5498B,SHIFT=NO;\nSVRETI:  JDE;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE9,MODIFY=FNT1;\n                  LINE VFU=VFU2,DATA=(1,95),FCB=IGNORE;\nSVIRA:   JDE;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PDE12,MODIFY=FNT1;\n                  LINE VFU=VFU5,DATA=(1,95),FCB=IGNORE;\nBFL1:    JDE;     OUTPUT DUPLEX=NO,FORM=NONE,FORMAT=PORPDE;\n                  LINE VFU=VFUPOR,DATA=(0,77),FCB=IGNORE;\nXPB6:    JDE;     OUTPUT FORM=NONE,FORMAT=PDE13;\n                  LINE VFU=VFU6,DATA=(0,77),FCB=IGNORE;\nEND;END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "END": {"ttr": 2061, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$$$END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXIT1A": {"ttr": 2063, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT1A: JES2 USER EXIT1 FOR XEROX FORMS CONTROL'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                         E X I T 1 A                             | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n***********************************************************************\n         SPACE\nEXIT1A   $ENTRY  CSECT=YES   * CREATE ALSO 'USING EXIT1A,R8'\n         SPACE\n         USING DCT,R1        * MAKE DCT ADDRESSABLE VIA R1\n         USING JCT,R10       * MAKE JCT ADDRESSABLE VIA R10\n         USING BFPDSECT,PBUF * MAKE BUFFER FORMAT ADDRESSABLE VIA R3\n         USING JOE,PL        * MAKE JOE FORMAT ADDRESSABLE VIA R7\n         SPACE 3\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                 M O D U L E   S Y N O P S I S                   | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   NAME:             EXIT1A                                          *\n*                                                                     *\n*   CURRENT AUTHOR:   MIKE SHEEDY, SENIOR SYSTEMS SPECIALIST          *\n*                     BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSN.   *\n*                     PORTLAND, OREGON                                *\n*                                                                     *\n*   PHONE:            503-275-1229                                    *\n*                                                                     *\n*   SHARE INSTALLATION CODE:  BFS                                     *\n*                                                                     *\n*   MAILING ADDRESS:  BENJ. FRANKLIN FINANCIAL CENTER                 *\n*                     P.O. BOX 6400                                   *\n*                     PORTLAND, OREGON  97228-6400                    *\n*                                                                     *\n*   SHIPPING ADDRESS: BENJ. FRANKLIN FINANCIAL CENTER                 *\n*                     501 S.E. HAWTHORNE BLVD.                        *\n*                     PORTLAND, OREGON  97214                         *\n*                                                                     *\n*   ORIGINAL AUTHOR:  NARM TCHUN, LEAD SYSTEMS PROGRAMMER             *\n*                     GATX NETWORK SERVICES, GATX CORPORATION         *\n*                     120 SOUTH RIVERSIDE PLAZA                       *\n*                     CHICAGO, ILLINOIS  60606                        *\n*              NOTE:  NARM TCHUN NO LONGER WORKS THERE.               *\n*                                                                     *\n*   NOTE BF DISCLAIMERS AT END OF THESE COMMENTS.                     *\n*                                                                     *\n*   DATE:             NOVEMBER 9, 1988                                *\n*                                                                     *\n*   SOURCE:           TSMAS.JES2.EXITSRC(EXIT1A)                      *\n*                                                                     *\n*   DESTINATION:      ASSEMBLY WITH TSMAS.JES2.EXITSRC(EXIT1MIT)      *\n*                                                                     *\n*   DESCRIPTIVE NAME: XEROX 8700/9700 SUPPORT JES2 USER EXIT          *\n*                                                                     *\n*   RELATIONAL NAME:  USER EXIT1 UNDER MVS/SP JES2 1.3.6              *\n*                                                                     *\n*   FUNCTION:         THIS EXIT PERFORMS THE FOLLOWING FUNCTIONS:     *\n*                                                                     *\n*       .  TELLS XEROX PRINTER AS REGARDS WHAT FORM AND WHAT          *\n*          PDE'S ARE REQUIRED FOR THIS OUTPUT VIA DJDE FORMS          *\n*          IMAGE TABLE ENTRY (DFITE).                                 *\n*                                                                     *\n*       .  SETS THE MODE OF PRINTER OPERATION (DUPLEX OR SIMPLEX)     *\n*          AND TELLS OPERATOR WHEN TO SWITCH PAPER AROUND (PSMTE).    *\n*                                                                     *\n*       .  PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) USED TO TELL        *\n*          OPERATOR WHAT TYPE OF STOCK PAPER TO LOAD INTO XEROX       *\n*          PRINTER.                                                   *\n*                                                                     *\n*       .  DISPLAYS JOBNAME ASSOCIATED WITH THIS OUTPUT AT THE        *\n*          XEROX PRINTER CONTROL CONSOLE VIA PAGE SETUP MESSAGE       *\n*          TABLE ENTRY (PSMTE).                                       *\n*                                                                     *\n*       .  SPECIFIES ADDITIONAL CONTROL VIA DJDE VFU IMAGE            *\n*          TABLE ENTRY (DVITE).                                       *\n*                                                                     *\n*       .  PASSES PRINTER AND FORMS SETUP INFORMATION ON TO OTHER     *\n*          JES2 USER EXITS, AND TO ITSELF FOR ITS NEXT INVOCATION     *\n*          (PRNTRTAB).                                                *\n*                                                                     *\n*   ENVIRONMENTS:                                                     *\n*                                                                     *\n*       EXTENSION OF JES2 MAIN TASK SERVING HASPPRPU.                 *\n*                                                                     *\n*                                                                     *\n*   NOTES:                                                            *\n*                                                                     *\n*       .  DEPENDENCIES:                                              *\n*                                                                     *\n*          THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.        *\n*                                                                     *\n*          REQUIRES EXIT1MIT, EXIT1REG, EXIT1A, AND EXIT1TAB BE       *\n*          ASSEMBLED TOGETHER.  EXIT1B, EXIT5, EXIT15, AND            *\n*          EXIT250 ARE RECOMMENDED BE ASSEMBLED WITH IT ALSO.         *\n*                                                                     *\n*          IF THIS EXIT IS DISABLED, JES2 CONTINUES WITH THE          *\n*          STANDARD HASPPRPU.                                         *\n*                                                                     *\n*       .  RESTRICTIONS:                                              *\n*                                                                     *\n*          -  THIS EXIT SHOULD CONFORM TO JES2 RE-ENTRANCY            *\n*             REQUIREMENTS (I.E., NOT THE OS/VS RE-ENTRANCY           *\n*             REQUIREMENTS).                                          *\n*                                                                     *\n*          -  NO OS/VS IO/EXCP ALLOWED IN THIS EXIT.  THE I/O         *\n*             ACTIVITIES SHOULD BE LIMITED ONLY TO HAM/RTAM, AND      *\n*             NO OTHER ACCESS METHOD.                                 *\n*                                                                     *\n*          -  NO OS/VS MACRO ALLOWED IN THIS EXIT. THE MACROS         *\n*             SHOULD BE LIMITTED ONLY TO THOSE STARTING WITH $        *\n*             SIGN, E.G., STANDARD JES2 MACROS.                       *\n*                                                                     *\n*                                                                     *\n*   LATENT USING STATEMENTS:                                          *\n*                                                                     *\n*       USING EXIT1A,R8      * EXIT BASE REGISTER                     *\n*       USING HCT,BASE1      * BASE1 EQU R11                          *\n*       USING PCE,SAVE       * SAVE  EQU R13                          *\n*                                                                     *\n*   AT ENTRY, THE CONTENTS OF VARIOUS REGISTERS ARE AS FOLLOWS:       *\n*                                                                     *\n*       R15,  ENTRY ADDRESS  (EPLOC(EXIT1A))                          *\n*       R14,  RETURN ADDRESS (EXIT EFFECTOR)                          *\n*       R13,  ADDRESS        ( PRINTER-PCE )                          *\n*       R12,  NOT APPLICABLE                                          *\n*       R11,  ADDRESS (HCT), SYMBOLIC REGISTER 'BASE1'                *\n*       R10,  ADDRESS (JCT), SYMBOLIC REGISTER 'JCT'                  *\n*     (R2-R9),NOT APPLICABLE                                          *\n*       R1,   ADDRESS (DCT), FOR PRINTER OR PUNCH                     *\n*       R0,   CONTAINS ONE OF THE FOLLOWING VALUES:                   *\n*                                                                     *\n*             = 00,  FOR START-OF-JOB        SEPARATOR                *\n*             = 04,  FOR CONTINUATION-OF-JOB SEPARATOR                *\n*             = 08,  FOR END-OF-JOB          SEPARATOR                *\n*                                                                     *\n*   AT EXIT, ALL REGISTERS EXCEPT FOR R15 SHOULD BE RESTORED.         *\n*             R15 SHOULD CONTAIN ONE OF THE FOLLOWING VALUES:         *\n*                                                                     *\n*       = 00, TELL JES2 TO PRODUCE THE STANDARD SEPARATOR ONLY        *\n*       = 04, TELL JES2 TO SUPPRESS OTHER EXITS FOR THIS JOB          *\n*       = 08, TELL JES2 TO PRODUCE THE USER SEPARATOR ONLY            *\n*       = 12, TELL JES2 TO PRODUCE THE USER SEPARATOR FOLLOWED BY     *\n*             THE STANDARD SEPARATOR                                  *\n*                                                                     *\n*   MODULE INFORMATION:                                               *\n*                                                                     *\n*       .  CALLED BY:   JES2 MAIN TASK EXIT EFFECTOR                  *\n*       .  CALLS;       SENDDJDE ROUTINE                              *\n*       .  ATTRIBUTES:  JES2 RE-ENTRANT                               *\n*                                                                     *\n*                                                                     *\n*   ENTRY POINTS:                                                     *\n*                                                                     *\n*                                                                     *\n*       .  EXIT1MIT:                                                  *\n*                                                                     *\n*          -  PURPOSE:  EXIT1 MODULE INFORMATION TABLE                *\n*          -  LINKAGE:  HASPINIT AT JES2 START TIME                   *\n*                                                                     *\n*                                                                     *\n*       .  EXIT1A: (INCLUDES EXIT1ADR ROUTINE)                        *\n*                                                                     *\n*          -  PURPOSE:  MAIN ENTRY                                    *\n*          -  CALLED BY:HASPPRPU VIA JES2 MAIN TASK EXIT EFFECTOR     *\n*          -  CALLS:    SENDDJDE ROUTINE VIA BRANCH AND LINK R6       *\n*          -  INPUT:    ADDRESS(XFRMTABX/FFRMTABF) DEP'G ON JOECURCL  *\n*          -  OUTPUT:   RETURN CODE VIA R15 (NORMAL EXIT)             *\n*          -  REGISTERS SAVED: ALL                                    *\n*          -  REGISTER USAGE:                                         *\n*             .  R3,    BUFFER BASE REGISTER                          *\n*             .  R5,    PRINTER TABLE BASE REGISTER (PC2=WD=R5)       *\n*             .  R6,    LINKS BETWEEN EXIT1A <---> SENDDJDE ROUTINE   *\n*             .         LINKS BETWEEN EXIT1A <---> SENDTRLR ROUTINE   *\n*             .  R7,    WORK JOE BASE REGISTER                        *\n*             .  R8,    BASE REGISTER                                 *\n*             .  R9,    CLASS TABLE ENTRY REGISTER                    *\n*                       PRINTER TABLE ENTRY REGISTER                  *\n*             .  (R14,R15), ALTERRED BY FOLLOWING MACROS:  $SAVE,     *\n*                       $RETURN, $GETBUF, $FREEBUF, AND $SEPPDIR      *\n*          -  REGISTERS RESTORED: ALL EXCEPT FOR R15 WHICH CONTAINS   *\n*             .  0000,  JES2 WILL PRODUCE THE STANDARD SEPARATOR      *\n*                       (UNDER NORMAL EXIT)                           *\n*          -  ABNORMAL EXIT:  ESTAE (TO BE ADDED)                     *\n*                                                                     *\n*                                                                     *\n*       .  SENDDJDE:                                                  *\n*                                                                     *\n*          -  PURPOSE:  SEND DJDE'S TO XEROX 8700/9700 IN FRONT OF    *\n*                       STARTING OR CONTINUING SEPARATOR PAGE.        *\n*          -  CALLED BY:EXIT1ADR VIA BRANCH AND LINK R6               *\n*          -  CALLS:    E1$PRPUT ROUTINE VIA BRANCH AND LINK R12      *\n*          -  INPUT:    ADDRESS(FCRTE) VIA R9                         *\n*          -  OUTPUT:   80 BYTE CARD IMAGE DJDE'S TO XEROX 8700/9700  *\n*                       FROM DFITE, PSMTE, PTMTE, AND DVITE TABLES.   *\n*          -  REGISTERS SAVED: R9 ---> PCEUSER1                       *\n*          -  REGISTER USAGE:                                         *\n*             .  R1,    ADDRESS(PCHJOE)                               *\n*             .  R3,    BUFFER BASE REGISTER                          *\n*             .  R4,    ADDRESS(DFITE/PTMTE/DVITE) DEPENDING ON DJDE  *\n*                       TYPE (R4=PC1).                                *\n*             .  R5,    ADDRESS(PRNTRTAB), DVITE COUNTER (R5=PC2)     *\n*             .  R6,    LINKS BETWEEN EXIT1ADR <---> SENDDJDE RTN     *\n*             .  R9,    ADDRESS(FCRTE)                                *\n*             .  R12,   LINKS BETWEEN SENDDJDE <---> E1$PRPUT RTN     *\n*             .  (R14,R15), ALTERRED BY E1$PRPUT ROUTINE              *\n*          -  REGISTERS RESTORED: NONE                                *\n*                                                                     *\n*                                                                     *\n*       .  SENDTRLR:                                                  *\n*                                                                     *\n*          -  PURPOSE:  SEND DJDE'S TO XEROX 8700/9700 IN FRONT OF    *\n*                       ENDING SEPARATOR PAGE (FORMS RESET FUNCTION). *\n*          -  CALLED BY:EXIT1ADR VIA BRANCH AND LINK R6               *\n*          -  CALLS:    E1$PRPUT ROUTINE VIA BRANCH AND LINK R12      *\n*          -  INPUT:    ADDRESS(FCRTE) VIA R9 (WILL BE DEFAULT)       *\n*          -  OUTPUT:   80 BYTE CARD IMAGE DJDE'S TO XEROX 8700/9700  *\n*                       FROM DFITE, PSMTE, AND DVITE TABLES.          *\n*          -  REGISTERS SAVED: R9 ---> PCEUSER1                       *\n*          -  REGISTER USAGE:                                         *\n*             .  R3,    BUFFER BASE REGISTER                          *\n*             .  R4,    ADDRESS(DFITE/DVITE) DEPENDING ON DJDE TYPE   *\n*                       (R4=PC1) (DEFAULTS).                          *\n*             .  R5,    ADDRESS(PRNTRTAB), DVITE COUNTER (R5=PC2)     *\n*             .  R6,    LINKS BETWEEN EXIT1ADR <---> SENDTRLR RTN     *\n*             .  R9,    ADDRESS(FCRTE) (DEFAULT ENTRY)                *\n*             .  R12,   LINKS BETWEEN SENDTRLR <---> E1$PRPUT RTN     *\n*             .  (R14,R15), ALTERRED BY E1$PRPUT ROUTINE              *\n*          -  REGISTERS RESTORED: NONE                                *\n*                                                                     *\n*                                                                     *\n*       .  E1$PRPUT:                                                  *\n*                                                                     *\n*          -  PURPOSE:  SEND AN 80 BYTE DJDE CARD IMAGE TO XEROX      *\n*          -  CALLED BY:SENDDJDE/SENDTRLR VIA BRANCH AND LINK R12     *\n*          -  CALLS:    PRPUT ROUTINE(IN HASPPPI1) VIA $PRPUT MACRO   *\n*          -  INPUT:    ADDRESS(BUFFER) FILLED WITH DFITE/DVITE       *\n*          -  OUTPUT:   80 BYTE CARD IMAGE DFITE/DVITE TO 8700/9700   *\n*          -  REGISTERS SAVED: NONE                                   *\n*          -  REGISTER USAGE:                                         *\n*             .  R0,    LENGTH OF DJDE CARD IMAGE TO BE SENT          *\n*             .  R1,    ADDRESS(BUFFER) PASSED TO PRPUT ROUTINE       *\n*             .  R3,    BUFFER BASE REGISTER                          *\n*             .  R12,   LINKS BETWEEN SENDDJDE <---> E1$PRPUT RTN     *\n*                       LINKS BETWEEN SENDTRLR <---> E1$PRPUT RTN     *\n*             .  (R14,R15), ALTERRED BY $PRPUT MACRO                  *\n*          -  REGISTERS RESTORED: NONE                                *\n*                                                                     *\n*                                                                     *\n*   EXTERNAL REFERENCES:                                              *\n*                                                                     *\n*       .  ROUTINES:  VARIOUS JES2 MAIN TASK SECTIONS USING THE       *\n*                     ADDRESSES RETRIEVED FROM THE FOLLOWING FIELDS:  *\n*                     $GETSAVA, $RETURNB, $GETBUF, $FREEBUF,          *\n*                     $PRPUSRV                                        *\n*       .  DATA AREAS:  PCE, BUFFER, JCT, CAT, JQE, JOE, HCT,         *\n*                       PDDB, KIT, TAB, IOT, XIT, XRT, MIT,           *\n*                       SVT, QSE, PPPWORK, LRC, DCT                   *\n*                                                                     *\n*                                                                     *\n*   TABLES:  EXIT1TAB, A SET OF XEROX FORMS TABLES WHICH HAVE         *\n*            BEEN ADOPTED FROM THE GREAT AMERICAN INSURANCE           *\n*            MODIFICATION.                                            *\n*                                                                     *\n*   JES2 MACROS USED:                                                 *\n*            $PCE, $BUFFER, $JCT, $CAT, $JQE, $JOE, $HCT, $PDDB,      *\n*            $KIT, $TAB, $IOT, $XIT, $XRT, $MIT, $SVT, $QSE,          *\n*            $PPPWORK, $LRC, $DCT, $MODULE, $ENTRY, $SAVE, $GETBUF,   *\n*            $SEPPDIR, $FREEBUF,$RETURN, $PRPUT, $DLENGTH, $MODEND    *\n*                                                                     *\n*                                                                     *\n*   SERIALIZATION  -    ONLY WITHIN JES2 SENSE                        *\n*                                                                     *\n*                                                                     *\n*   CONSTRAINTS    -    FOLLOWING POINTS SHOULD BE CONSIDERED:        *\n*                                                                     *\n*       .  SEPARATOR TRUNCATION:  THE SEPARATOR (BANNER PAGE)         *\n*                 GETS TRUNCATED ON PORTRAIT FORM. TO AVOID           *\n*                 THIS PROBLEM, THE USERS SHOULD PROVIDE THEIR        *\n*                 OWN LOGIC (ANOTHER 500 - 600 LINES OF CODE).        *\n*                 OUR SOLUTION TO THIS IS IN BF EXIT1B.               *\n*                                                                     *\n*       .  MULTIPLE COPY SEPARATOR:  THIS MODULE DOES NOT             *\n*                 PROVIDE SEPARATOR FOR MULTIPLE COPY SYSOUT.         *\n*                 OUR SOLUTION IS IN BF EXIT15.                       *\n*                                                                     *\n*       .  DUPLEXING:  THIS MODULE SUPPORTS DUPLEXING WHEN USED       *\n*                 WITH BF EXIT15.                                     *\n*                                                                     *\n*       .  MODULE SIZE:  THIS MODULE USES ONLY ONE REGISTER           *\n*                 TO BASE ADDRESS THE PROGRAM.  THOSE WHO USE         *\n*                 A LARGE NUMBER OF FORMS MAY HAVE TO HAVE            *\n*                 ANOTHER REGISTER FOR BASE ADDRESSING.               *\n*                                                                     *\n*       .  RECOVERY TERMINATION:  THIS MODULE DOES NOT HAVE           *\n*                 ESTAE LOGIC, BUT RUNS ERROR FREE.  NEVERTHELESS     *\n*                 THE RECOVERY/TERMINATION LOGIC SHOULD BE            *\n*                 PROVIDED (USE $ESTAE).                              *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n         TITLE 'EXIT1ADR: JES2 EXIT1A DRIVER ROUTINE'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |             E X I T 1 A D R   A L G O R I T H M                 | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   EXIT1ADR (DRIVER) ALGORITHM:                                      *\n*                                                                     *\n*   <1>.  IF A PUNCH DEVICE ?                                         *\n*           TELL JES2 TO FOLLOW STANDARD PROCEDURE,                   *\n*                                                                     *\n*   <2>.    IF NOT A PRINTER ?                                        *\n*             TELL JES2 TO FOLLOW STANDARD PROCEDURE,                 *\n*                                                                     *\n*   <3>.      IF PRINTER TABLE NOT ADDRESSABLE ?                      *\n*               TELL JES2 TO FOLLOW STANDARD PROCEDURE,               *\n*                                                                     *\n*   <4>.        FIND PRINTER TABLE ENTRY.                             *\n*                                                                     *\n*   <5>.        IF NOT A XEROX PRINTER (SEPDS=N) ?                    *\n*                 CORRECT THE PRINTER TABLE ENRTY AND                 *\n*                 TELL JES2 TO FOLLOW STANDARD PROCEDURE.             *\n*                                                                     *\n*   <6>.          IS A XEROX PRINTER (SEPDS=Y), SO                    *\n*                 CORRECT THE PRINTER TABLE ENTRY,                    *\n*                 SAVE SEPARATOR CONTROL INFORMATION,                 *\n*                 OBTAIN WORKING STORAGE FOR DATA BUFFERRING,         *\n*                 AND RELOCATE THE BUFFER ADDRESS TO IT.              *\n*                                                                     *\n*   <7>.          INSURE A PERIPHERAL DATA INFORMATION RECORD         *\n*                 FOR SNA.  OBTAIN THE WORK-JOE ADDRESS.              *\n*                                                                     *\n*   <8>.          IF END-OF-JOB PRINT SEPARATOR ?                     *\n*                   SETUP TO USE DEFAULT FORMS CROSS REFERENCE        *\n*                   TABLE AND BRANCH TO <10> FOR TRAILER PROCESSING.  *\n*                                                                     *\n*                 ENDIF                                               *\n*               ENDIF                                                 *\n*             ENDIF                                                   *\n*           ENDIF                                                     *\n*         ENDIF.                                                      *\n*                                                                     *\n*   <9>.  LOCATE FORMS CROSS REFERENCE TABLE BASED ON SYSOUT CLASS,   *\n*           USE DEFAULT IF NONE FOUND.                                *\n*         PERFORM 'SENDDJDE', AND FREE THE BUFFER OBTAINED EARLIER.   *\n*                                                                     *\n*  <10>.  USE DEFAULT FORMS CROSS REFERENCE TABLE.                    *\n*         PERFORM 'SENDTRLR', AND FREE THE BUFFER OBTAINED EARLIER.   *\n*                                                                     *\n*  <11>.  FREE THE BUFFER ACQUIRED IN STEP <6>. (NOTE: THIS SECTION   *\n*         IS PERFORMED BY STEP <9> AND STEP <10>.)                    *\n*                                                                     *\n*  <12>.  TELL JES2 TO PRODUCE STANDARD SEPARATOR.                    *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |          E X I T 1 A D R   D R I V E R   R O U T I N E          | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\nEXIT1ADR DS    0H            *\n         SPACE\n         $SAVE               * SAVE CALLER'S REGISTERS\n         SPACE\n         LR    R8,R15        * MAKE R8 AS THE BASE\n* <1>\n         TM   PCEID,PCEPUSID * IF A PUNCH DEVICE ?\n         BO    EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR\n* <2>\n         CLC   DCTDEVN(3),=CL3'PRT'      ARE WE GOING TO A PRINTER ?\n         BE    CHK1PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         CLC   DCTDEVN(7),=CL7'PRINTER'  ARE WE GOING TO A PRINTER ?\n         BE    CHK1PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         B     EXIT1A00      * NO  - TELL JES2 TO PRODUCE STANDARD SEP\n* <3>\n         USING PTBDSECT,PC2  * MAKE PRINTER TABLE ENTRY ADDRESSABLE\nCHK1PRTE L     PC2,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE\n         C     PC2,=F'0'     * PRINTER TABLE ADDRESSABLE?\n         BE    EXIT1A00      * NO - MIGHT AS WELL RETURN TO JES2\n* <4>\nCHKPNEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST\n         BE    CHKPTYPE      *   PRINTER TABLE ENTRY\n         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY\n         BE    CHKPTYPE      *   THEN GO CHECK PRINTER TYPE\n         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY\n         BE    CHKPTYPE      *   THEN GO CHECK PRINTER TYPE\n         LA    PC2,12(0,PC2) * ELSE GET SET TO CHECK NEXT ENTRY\n         B     CHKPNEXT      *\n* <5>\nCHKPTYPE TM    DCTPPSW2,DCTSDSSW IF SEPDS=Y (I.E.: TAKE EXIT 15)\n         BO    MAKEXERO      * THEN THIS SHOULD BE A XEROX PRINTER\n         MVC   PREVFORM,=CL4'????' RESET FORMS SETUP - JUST TO BE SURE\n         CLI   PTBTYPE,C'X'  * IF TABLE INDICATES NOT A XEROX TABLE\n         BNE   EXIT1A00      * THEN TELL JES2 TO PRODUCE STANDARD SEP\n         MVI   PTBTYPE,C' '  * MAKE THIS NOT BE A XEROX PRINTER\n         B     EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR\n* <6>\nMAKEXERO MVI   PTBTYPE,C'X'  * MAKE THIS A XEROX PRINTER\n         ST    R0,PCEUSER0   * SAVE SEP CNTRL INFORMATION (S/C/E)\n         SPACE\n         $GETBUF TYPE=HASP,  * LOCAL BUFF INTO WHICH AN IOB IS BUILT   X\n               FIX=YES,      * THE BUFFER IS TO BE PAGE-FIXED          X\n               WAIT=YES      * THE REQUESTOR WILL WAIT UNTIL HONORRED .\n         SPACE\n         LR    PBUF,R1       * MAKE R3 AS THE BUFFER BASE REGISTER\n* <7>\n         $SEPPDIR (R3)       * SEND A PDIR IF AN SNA\n         SPACE\n         L     R7,PPPWKJOE   *  R7 <--- ADDRESS (WJOE)\n* <8>\n         C     R0,=F'8'      * IF END-OF-JOB PRINT SEPARATOR ?\n         BE    EXIT1TLR      * THEN SEND TRAILER DJDE'S\n* <9>\n         L     R9,=A(SCTE)   * R9 <--- ADDR (SCTE)\nCLASTEST EQU                 *\n         CLI   0(R9),X'FF'   * IF CLASS TABLE NOT OUT?\n         BNE   CLASCHCK      * GET NEXT 'FCRTE' FROM THE TABLE\nCLASFOND L     R9,4(,R9)     * ELSE PASS THE DEFAULT FORM TABLE\n         BAL   R6,SENDDJDE   * SEND DJDE'S TO XEROX PRINTER\n         B     EXIT1FRE      * FREE THE BUFFER AND EXIT\n         SPACE\n*\nCLASCHCK EQU                 *\n         CLC   0(1,R9),JOECURCL MATCHING 'SCTE' (CLASS) FOUND?\n         BNE   CLASNEXT      * NO - GET NEXT 'SCTE'\n         CLC   4(4,R9),=F'0' * FORM TABLE PRESENT?\n         BNE   CLASFOND      * YES - GO LOAD ITS ADDRESS\nCLASNEXT LA    R9,8(,R9)     * GET NEXT 'SCTE' AND\n         B     CLASTEST      * SEE IF THE CLASS MATCHES\n* <10>\nEXIT1TLR EQU   *\n         L     R9,=A(DEFTCLAS) R9 <--- ADDR OF DEFAULT CLASS 'SCTE'\n         L     R9,4(,R9)     * R9 <--- DEFAULT FCRTE FORM TABLE\n         BAL   R6,SENDTRLR   * SEND DJDE'S TO XEROX PRINTER\n* <11>\nEXIT1FRE EQU                 *\n         $FREEBUF (R3)       * RELINQUISH THE WORKING STORAGE\n* <12>\n         B     EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |      E X I T 1 A 0 0   C O M P L E T I O N   S E C T I O N      | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE\nEXIT1A00 EQU                 *\n         SR    R15,R15       * TELL JES2 TO PRODUCE STANDARD SEPARATOR\n         B     EXIT1ARE      *\nEXIT1A04 EQU                 *\n         LA    R15,4         * TELL JES2 THAT NO OTHER EXITS TO GO\n         B     EXIT1ARE      *\nEXIT1A08 EQU                 *\n         LA    R15,8         * TELL JES2 TO SUPPRESS THE SEPARATOR\n         B     EXIT1ARE      *\nEXIT1A12 EQU                 *\n         LA    R15,12        * TELL JES2 TO UNCONDITIONALLY PRT SEP\nEXIT1ARE DS    0H            *\n         SPACE\n         $RETURN RC=(R15)    * GET ADDR (RETURN POINT) AND EXIT\n         EJECT\n         TITLE 'SENDDJDE: DJDE TRANSMISSION ROUTINE'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |               S E N D D J D E    R O U T I N E                  | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*  UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:         *\n*                                                                     *\n*    REG          ENTRY-VALUE       EXIT-VALUE                        *\n*    ---        ----------------    ----------                        *\n*                                                                     *\n*    R9         NFRMTABN ADDRESS    UNPREDICTABLE                     *\n*    R6         RETURN   ADDRESS    UNCHANGED                         *\n*    R13        PCE      ADDRESS    UNCHANGED                         *\n*                                                                     *\n*                                                                     *\n*  AT EXIT, R12 MAY BE CHANGED SINCE IT IS USED AS A LINK REGISTER    *\n*  BETWEEN THE 'SENDDJDE' AND 'E1$PRPUT' ROUTINES.                    *\n*                                                                     *\n*                                                                     *\n*  SENDDJDE (START/CONTINUE BANNER) ALGORITHM:                        *\n*                                                                     *\n*   <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.        *\n*         RESET STOCK AND MODE SWITCHES IF THE PREVIOUS FORM USED ON  *\n*         THIS PRINTER IS UNKNOWN (FORCES OPERATOR SETUP).            *\n*                                                                     *\n*   <2>.  RETRIEVE THE ADDRESS OF THE 'CJOE'.                         *\n*                                                                     *\n*   <3>.  DOWHILE FORMS CROSS REFERENCE TABLE ENTRY(FCRTE) NOT END ?  *\n*           IF NO MORE 'FCRTE' ?                                      *\n*             RETRIEVE 'FCRT' ADDRESS, PASS THE DEFAULT 'STD.'        *\n*           ELSE                                                      *\n*                                                                     *\n*   <4>.      IF CURRENT 'FCRTE' NOT MATCH WITH SYSTEM DATASET FORM?  *\n*               GET NEXT 'FCRTE'                                      *\n*             ENDIF                                                   *\n*           ENDIF                                                     *\n*         ENDDO.                                                      *\n*                                                                     *\n*   <5>.  MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER.   *\n*         SEND THAT 'DFITE' TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.  *\n*                                                                     *\n*   <6>.  BUILD JOBMSG WITH JOBNAME AND ITS SYSOUT FORM TO BUFFER.    *\n*         SEND THAT MESSAGE TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.  *\n*                                                                     *\n*   <7>.  INITIALIZE HOLD SWITCH.                                     *\n*         IF FORM IS DUPLEX,                                          *\n*           PERFORM <8> SENDDPLX,                                     *\n*         ELSE                                                        *\n*           PERFORM <9> SENDSPLX.                                     *\n*                                                                     *\n*   <8>.  SENDDPLX: SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT' *\n*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *\n*         IF PREVIOUS OUTPUT TO THIS PRINTER WAS DUPLEX, GO TO <10>.  *\n*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *\n*         IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T       *\n*           MATTER, SO GO TO <10>.                                    *\n*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *\n*         IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10> *\n*           AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.          *\n*         SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR DUPLEX.   *\n*         GO TO <10>.                                                 *\n*                                                                     *\n*   <9>.  SENDSPLX: SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT *\n*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *\n*         IF PREVIOUS OUTPUT TO THIS PRINTER WAS SIMPLEX, GO TO <10>. *\n*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *\n*         IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T       *\n*           MATTER, SO GO TO <10>.                                    *\n*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *\n*         IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10> *\n*           AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.          *\n*         SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR SIMPLEX.  *\n*         GO TO <10>.                                                 *\n*                                                                     *\n*  <10>.  IF THE NEW STOCK IS SAME AS THE OLD STOCK, GO TO <11>.      *\n*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *\n*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *\n*         MOVE DJDE PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) TO JES2    *\n*           BUFFER.  MODIFY WITH MODE (DUPLEX OR SIMPLEX).            *\n*         SEND THAT 'PTMTE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.  *\n*         GO TO <11>.                                                 *\n*                                                                     *\n*  <11>.  IF OPERATOR SETUP MESSAGES HAVE BEEN SENT, SEND DJDE TO     *\n*           HOLD THE PRINTER UNTIL OPERATOR PERFORMS ACTION AND       *\n*           RESPONDS 'CONTINUE 0'.                                    *\n*         RESET PREVIOUS STOCK, MODE, SYSOUT CLASS, AND FORM ID FIELD *\n*           FOR THIS PRINTER WITH CURRENT VALUES (FOR NEXT REPORT).   *\n*         GO TO <13>.                                                 *\n*                                                                     *\n*  <12>.  RESET PREVIOUS STOCK, MODE, AND SYSOUT CLASS ID FIELDS FOR  *\n*           THIS PRINTER WITH CURRENT VALUES.  RESET PREVIOUS FORM ID *\n*           FOR THIS PRINTER TO UNKNOWN TO FORCE OPERATOR SETUP ON    *\n*           NEXT REPORT.                                              *\n*         GO TO <13>.                                                 *\n*                                                                     *\n*  <13>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT).            *\n*         LOAD  R5 WITH ITS ENTRY COUNT.                              *\n*                                                                     *\n*  <14>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?        *\n*           SEND NEXT 'DVITE' TO XEROX PRINTER                        *\n*         ENDDO.                                                      *\n*         GO TO <15>.                                                 *\n*                                                                     *\n*  <15>.  RETURN TO THE CALLER                                        *\n*                                                                     *\n***********************************************************************\n         SPACE\n* <1>\nSENDDJDE DS    0D            *\n         ST    R9,PCEUSER1   * SAVE THE 'FCRT' TEMPORARILY\n         SPACE\nPREVTEST EQU                 *\n         CLC   PREVFORM,=CL4'????' IF PREVIOUS FORM IS KNOWN\n         BNE   SENDDJD2      * THEN GO ANALYZE NEW FORM\n         MVI   PREVSTOC,X'FF'  RESET PREVSTOC TO FORCE STOCK MESSAGE\n         MVI   PREVMODE,X'00'  RESET PREVMODE TO UNKNOWN\n         SPACE\n* <2>\nSENDDJD2 EQU                 *\n         MVC   PREVFORM,=CL4'????' SET PREVFORM TO UNKNOWN TEMPORARILY\n         L     R9,PCEUSER1   * RESTORE THE 'FCRT'\n         L     R1,PPPCHJOE   * GET THE ADDRESS OF CJOE\n         SPACE\n* <3>\nSENDTEST EQU                 *\n         CLC   =4X'FF',0(R9) * IF FORMS CROSS REFERENCE TABLE NOT OUT?\n         BNE   SENDCHCK      * GET NEXT 'FCRTE' FROM THE TABLE\n         L     R9,PCEUSER1   * ELSE PASS THE FORM 'STD.' BY DEFAULT\n         B     SENDDFIT      * VERIFY THE BACKSIDE\n         SPACE\n* <4>\nSENDCHCK EQU                 *\n         CLC   0(4,R9),JOEFORM-JOE(R1) IF MATCHING 'FCRTE' FOUND?\n         BE    SENDDFIT      * SEND 'DJDE' TO XEROX PRINTER\n         LA    R9,16(,R9)    * ELSE, GET NEXT 'FCRTE'\n         B     SENDTEST      * SEE IF THE FORM MATCH\n         SPACE 2\n* <5>\nSENDDFIT EQU                 *\n         L     PC1,4(,R9)    * R4 <--- A(DFITE)\n         LA    PC1,0(,PC1)   * ERASE THE CONTROL BYTE\n         MVC   BUFSTART(80),0(PC1) MOVE THE 'DFITE' TO THE BUFFER\n         BAL   R12,E1$PRPUT  * SEND DJDE FORMS IMAGE TABLE ENTRY(DFITE)\n         SPACE\n* <6>\n         MVC   BUFSTART(80),JOBMSG MOVE MASTER JOBMSG TEXT TO JES2 BUFF\n         MVC   BUFSTART+19(1),JCTJOBID   MOVE IN JOB TYPE\n         MVC   BUFSTART+20(4),JCTJOBID+4 MOVE IN JOB NUMBER\n         MVC   BUFSTART+25(8),JCTJNAME   MOVE IN JOB NAME\n         MVC   BUFSTART+34(1),JOECURCL   MOVE IN OUTPUT CLASS\n         MVC   BUFSTART+36(4),0(R9)      MOVE IN FORM ID\n         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?\n         BZ    DUPSIMTS      * NO - DETERMINE DUPLEX/SIMPLEX\n         MVC   BUFSTART+42(2),=CL2'?-' YES - DON'T KNOW TYPE\nDUPSIMTS MVC   BUFSTART+42(2),=CL2'DU' ASSUME DUPLEX\n         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?\n         BO    ISJOBLOG      * YES - GO ISSUE JOBLOG MESSAGE\n         MVC   BUFSTART+41(3),=CL3'SIM' MOVE IN SIMPLEX\nISJOBLOG BAL   R12,E1$PRPUT  * ISSUE JOBLOG MESSAGE TO XEROX CONSOLE\n         SPACE\n* <7>\n         MVI   HOLDSW,C'N'   * INITIALIZE HOLD MESSAGE SWITCH TO NO\n         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?\n         BZ    SENDSPLX      * NO - SETUP FOR SIMPLEX\n         SPACE\n* <8>\nSENDDPLX MVC   BUFSTART(80),DPLXDJDE MOVE DUPLEX DJDE TO JES2 BUFF\n         BAL   R12,E1$PRPUT  * SEND DJDE TO SWITCH TO DUPLEX MODE\n         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF\n         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET\n         SPACE\n         TM    PREVMODE,MFDUPLEX WAS THE PREVIOUS OUTPUT IN DUPLEX?\n         BO    STOCKCHK      * YES - GO CHECK FOR STOCK CHANGE\n         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?\n         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB\n         SPACE\n         CLI   12(R9),X'02'  * IS THE NEW STOCK BLANK NO-HOLE?\n         BE    STOCKCHK      * YES - MODE CHANGE DOESN'T MATTER\n         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED\n         CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?\n         BNE   STOCKCHK      * NO - MODE WILL BE INDICATED ON LOAD MSG\n         SPACE\n         MVC   BUFSTART(80),MODECHG MOVE MODECHG TEXT TO JES2 BUFF\n         MVC   BUFSTART+38(3),=CL3' DU' INDICATE DUPLEX MODE\n         BAL   R12,E1$PRPUT  * ISSUE MODECHG MESSAGE TO XEROX CONSOLE\n         B     STOCKCHK      * GO CHECK FOR STOCK CHANGE\n         SPACE\n* <9>\nSENDSPLX MVC   BUFSTART(80),SPLXDJDE MOVE SIMPLEX SWITCH DJDE TO BUFF\n         BAL   R12,E1$PRPUT  * SEND DJDE TO SWITCH TO SIMPLEX MODE\n         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF\n         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET\n         SPACE\n         TM    PREVMODE,MFDUPLEX WAS THE PREVIOUS OUTPUT IN SIMPLEX?\n         BZ    STOCKCHK      * YES - GO CHECK FOR STOCK CHANGE\n         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?\n         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB\n         SPACE\n         CLI   12(R9),X'02'  * IS THE NEW STOCK BLANK NO-HOLE?\n         BE    STOCKCHK      * YES - MODE CHANGE DOESN'T MATTER\n         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED\n         CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?\n         BNE   STOCKCHK      * NO - MODE WILL BE INDICATED ON LOAD MSG\n         SPACE\n         MVC   BUFSTART(80),MODECHG MOVE MODECHG TEXT TO JES2 BUFF\n         MVC   BUFSTART+38(3),=CL3'SIM' INDICATE SIMPLEX MODE\n         BAL   R12,E1$PRPUT  * ISSUE MODECHG MESSAGE TO XEROX CONSOLE\n         B     STOCKCHK      * GO CHECK FOR STOCK CHANGE\n         SPACE\n* <10>\nSTOCKCHK CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?\n         BE    HOLDCHK       * YES - GO CHECK FOR HOLDS\n         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?\n         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB\n         SPACE\n         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED\n         SPACE\n         SLR   PC1,PC1       * ZERO R4\n         IC    PC1,12(,R9)   * R4 <--- STOCK INDEX\n         MH    PC1,=H'80'    * R4 <--- R4 * 80\n         LA    PC1,STKINDX(PC1) R4 <-- ADDRESS OF STOCK MESSAGE\n         MVC   BUFSTART(80),0(PC1) MOVE THE STOCK MESSAGE TO THE BUFFER\n         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?\n         BZ    SPLSTOCK      * NO - STOCK WILL BE SIMPLEX\n         MVC   BUFSTART+41(3),=CL3' DU' INDICATE DUPLEX MODE\n         B     CHKUNKNW      * YES - GO CHECK IF STOCK IS KNOWN\nSPLSTOCK MVC   BUFSTART+41(3),=CL3'SIM' INDICATE SIMPLEX MODE\nCHKUNKNW CLI   12(R9),X'00'  * IS THE STOCK TYPE KNOWN?\n         BNE   SENDSTOC      * YES - GO SEND THE STOCK MESSAGE\n         MVC   BUFSTART+23(4),0(R9) NO - USE THE FORMS ID\nSENDSTOC BAL   R12,E1$PRPUT  * ISSUE STOCK MESSAGE TO XEROX CONSOLE\n         SPACE\n* <11>\nHOLDCHK  CLI   HOLDSW,C'N'   * IS A HOLD MESSAGE REQUIRED?\n         BE    RESETPRV      * NO - GO RESET THE PREVFORM FIELDS\n         SPACE\nSENDHOLD MVC   BUFSTART(80),HOLDMSG MOVE HOLDMSG TEXT TO JES2 BUFF\n         BAL   R12,E1$PRPUT  * ISSUE CHANGE MESSAGE TO XEROX CONSOLE\n         SPACE\nRESETPRV MVC   PREVSTOC,12(R9) RESET PREVSTOC TO CURRENT STOCK\n         MVC   PREVMODE,8(R9)  RESET PREVMODE TO CURRENT MODE\n         MVC   PREVCLAS,JOECURCL RESET PREVCLAS TO CURRENT SYSOUT CLASS\n         MVC   PREVFORM,0(R9)  RESET PREVFORM TO CURRENT FORM\n         B     SENDDVIT      *  GO SEND THE DVITE\n         SPACE\n* <12>\nRESETSUP MVC   PREVFORM,=CL4'????' RESET PREVFORM TO FORCE FORMS MSG\n         MVC   PREVCLAS,JOECURCL RESET PREVCLAS TO CURRENT SYSOUT CLASS\n         MVC   PREVMODE,8(R9)  RESET PREVMODE TO CURRENT MODE\n         MVC   PREVSTOC,12(R9) RESET PREVSTOC TO CURRENT STOCK\n         B     SENDDVIT      *  GO SEND THE DVITE\n         SPACE\n* <13>\nSENDDVIT EQU                 *\n         L     PC1,12(,R9)   *  R4 <--- ADDRESS (DVITE  )\n         LA    PC1,0(,PC1)   *  ERASE THE CONTROL BYTE\n         LH    PC2,0(,PC1)   *  R5 <--- COUNT   (DVITE'S)\n         LA    PC1,2(,PC1)   * POSITION R4 TO HEAD OF 'DVITE' GROUP\n         SPACE\n* <14>\nSENDFINI EQU                 *\n         MVC   BUFSTART(80),0(PC1) MOVE THE 'DVITE' TO THE BUFFER\n         BAL   R12,E1$PRPUT  * SEND DJDE VFU IMAGE TABLE ENTRY(DVITE)\n         LA    PC1,80(,PC1)  * GET NEXT      'DVITE'\n         BCT   PC2,SENDFINI  * CHAIN IN  NEXT 'DVITE'\n         SPACE\n* <15>\nSENDDJDX EQU                 * SENDDJDE EXIT\n         DROP  PC2           *\n         BR    R6            * RETURN TO THE CALLER\n         EJECT\n         TITLE 'SENDTRLR: DJDE TRANSMISSION ROUTINE'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |               S E N D T R L R    R O U T I N E                  | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*  UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:         *\n*                                                                     *\n*    REG          ENTRY-VALUE       EXIT-VALUE                        *\n*    ---        ----------------    ----------                        *\n*                                                                     *\n*    R9         XFRMTABX ADDRESS    DEFAULT FCRTE                     *\n*    R6         RETURN   ADDRESS    UNCHANGED                         *\n*    R13        PCE      ADDRESS    UNCHANGED                         *\n*                                                                     *\n*                                                                     *\n*  AT EXIT, R12 MAY BE CHANGED SINCE IT IS USED AS A LINK REGISTER    *\n*  BETWEEN THE 'SENDTRLR' AND 'E1$PRPUT' ROUTINES.                    *\n*                                                                     *\n*                                                                     *\n*  SENDTRLR (END BANNER) ALGORITHM:                                   *\n*                                                                     *\n*   <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.        *\n*         MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER    *\n*           (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).               *\n*         SEND THAT 'DFITE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.  *\n*                                                                     *\n*   <2>.  IF FORM IS DUPLEX,                                          *\n*           SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT',        *\n*         ELSE                                                        *\n*           SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT'.       *\n*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *\n*                                                                     *\n*   <3>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT)             *\n*           (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).               *\n*         LOAD  R5 WITH ITS ENTRY COUNT.                              *\n*                                                                     *\n*   <4>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?        *\n*           SEND NEXT 'DVITE' TO XEROX PRINTER                        *\n*         ENDDO.                                                      *\n*                                                                     *\n*   <5>.  MOVE PAGE EJECT COMMAND TO JES2 BUFFER.                     *\n*         SEND PAGE EJECT TO XEROX PRINTER.                           *\n*         GO TO <6>.                                                  *\n*                                                                     *\n*   <6>.  RETURN TO THE CALLER                                        *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         SPACE\n*  <1>\nSENDTRLR EQU                 *\n         USING PTBDSECT,PC2  * MAKE PRINTER TABLE ENTRY ADDRESSABLE\n         ST    R9,PCEUSER1   * SAVE THE 'FCRT'\n         SPACE\n         L     PC1,4(,R9)    * R4 <--- A(DFITE)\n         LA    PC1,0(,PC1)   * ERASE THE CONTROL BYTE\n         MVC   BUFSTART(80),0(PC1) MOVE THE 'DFITE' TO THE BUFFER\n         BAL   R12,E1$PRPUT  * SEND DJDE FORMS IMAGE TABLE ENTRY(DFITE)\n         SPACE\n*  <2>\n         TM    PREVMODE,MFDUPLEX WAS THIS A DUPLEX FORM?\n         BZ    SPLXTRLR      * NO - SETUP FOR SIMPLEX\n         MVC   BUFSTART(80),DPLXDJDE YES- MOVE DUPLEX DJDE TO JES2 BUFF\n         B     DPLXTRLR      * GO SEND DJDE\nSPLXTRLR MVC   BUFSTART(80),SPLXDJDE MOVE SIMPLEX SWITCH DJDE TO BUFF\nDPLXTRLR BAL   R12,E1$PRPUT  * SEND DJDE\n         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF\n         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET\n         SPACE\n*  <3>\n         L     PC1,12(,R9)   *  R4 <--- ADDRESS (DVITE  )\n         LA    PC1,0(,PC1)   *  ERASE THE CONTROL BYTE\n         LH    PC2,0(,PC1)   *  R5 <--- COUNT   (DVITE'S)\n         LA    PC1,2(,PC1)   * POSITION R4 TO HEAD OF 'DVITE' GROUP\n         SPACE\n*  <4>\nSENDFINT EQU                 *\n         DROP  PC2           *\n         MVC   BUFSTART(80),0(PC1) MOVE THE 'DVITE' TO THE BUFFER\n         BAL   R12,E1$PRPUT  * SEND DJDE VFU IMAGE TABLE ENTRY(DVITE)\n         LA    PC1,80(,PC1)  * GET NEXT      'DVITE'\n         BCT   PC2,SENDFINT  * CHAIN IN  NEXT 'DVITE'\n*  <5>\n         MVC   BUFSTART(2),PAGEEJCT MOVE EJECT COMMAND TO BUFFER\n         LA    R0,2                LOAD LINE LENGTH\n         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M\n         SPACE\n*  <6>\nSENDTRLX EQU                 * SENDTRLR EXIT\n         BR    R6            * RETURN TO THE CALLER\n         EJECT\n         TITLE 'E1$PRPUT: SENDDJDE/SENDTRLR SUPPORT SUBROUTINE'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |      S I N G L E    L I N E    I N S E R T    R O U T I N E     | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:        *\n*                                                                     *\n*     REG          ENTRY-VALUE       EXIT-VALUE                       *\n*     ---        ----------------    ----------                       *\n*                                                                     *\n*     R0         DATA     LENGTH     UNCHANGED                        *\n*     R1         DATA     ADDRESS    UNCHANGED                        *\n*     R3         BUFFER   ADDRESS    UNCHANGED                        *\n*     R11        HCT      ADDRESS    UNCHANGED                        *\n*     R12        RETURN   ADDRESS    UNCHANGED                        *\n*                                                                     *\n***********************************************************************\n         SPACE\nE1$PRPUT DS    0D            *\n         LA    R1,BUFSTART   *  R1 <--- ADDRESS (PRINTLINE)\n         LA    R0,80         *  R0 <--- LENGTH  (PRINTLINE)\n         SPACE\n         $PRPUT DATA=(R1),   * POINT R1 TO THE DATA TO BE PRINTED      X\n               LEN=(R0),     * R0 CONTAINS THE LENGTH OF DATA TO PRINT X\n               COUNT=01,     * THE DATA MAY BE PRODUCED ONLY ONCE      X\n               WAIT=YES      * WAIT FOR I/O COMPLETION                .\n         SPACE 1\n         BR    R12           * RETURN TO THE CALLER\n         SPACE 1             *                                        .\nPAGEEJCT DC    X'8B40'       * PRINTER SKIP TO CHANNEL 1 COMMAND\n         EJECT\n         TITLE 'EXIT1A: LITERAL POOL'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |             E X I T 1 A   L I T E R A L   P O O L               | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 1\nLTORG    DS    0D            * >>>> LITERAL POOL BEGINS FROM HERE <<<<<\n         LTORG\n         SPACE 1\n         DROP  R1,R10,PBUF,PL\n         SPACE 1\n************************ END OF MODULE EXIT1A *************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT1B": {"ttr": 2562, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT1B: JES2 EXIT 1 PRINT/PUNCH SEPARATOR EXIT'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                         E X I T 1 B                             | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*        THIS WAS BENJ. FRANKLIN'S ORIGINAL JES2 EXIT 1 REPORT        *\n*        SEPARATOR BANNER PAGE GENERATOR ROUTINE.  IT HAS BEEN        *\n*        MODIFIED TO INTEGRATE WITH THE NEW EXITS FOR XEROX FORMS     *\n*        CONTROL.  IT GETS CONTROL AFTER EXIT1A, AND PROVIDES         *\n*        MODIFIED SEPARATOR PAGES FOR SHORTLINE FORMATTED FORMS       *\n*        (LIKE 1-UP PORTRAIT).                                        *\n*                                                                     *\n*        THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.          *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED TO REPLACE THE IBM        *\n*        STANDARD PRINT AND PUNCH SEPARATOR ROUTINES.  THE PUNCH      *\n*        SEPARATOR LACE CARD AND BLANK CARD IS PRODUCED EXACTLY       *\n*        AS IBM PRODUCED THEM.  THE PRINT SEPARATOR PAGE IS THE       *\n*        SAME AS THAT PRODUCED BY IBM EXCEPT THAT INSTEAD OF TWO      *\n*        LINES OF BLOCK LETTERS, THREE ARE PRODUCED.  THE SECOND      *\n*        LINE OF THE BLOCK LETTERS IS THE FIRST EIGHT (8) BYTES       *\n*        OF THE PROGRAMMER NAME FIELD.  NOTE THAT ONLY AS MANY        *\n*        LINES OF BLOCK LETTERS ARE PRODUCED AS THERE IS ROOM         *\n*        FOR AS DEFINED BY THE NUMBER OF LINES ON THE LOCAL OR        *\n*        REMOTE SPECIFICATIONS FOR &PRIDCT OR &TPIDCT.                *\n*                                                                     *\n*        STARTED TASKS DO NOT PROVIDE A PROGRAMMER NAME FIELD TO      *\n*        BE USED BY THE SEPARATOR ROUTINE.  TSO LOGONS ALSO DO        *\n*        NOT NORMALLY PROVIDE THIS INFORMATION, HOWEVER ACF2          *\n*        BUILDS A NORMAL JOB CARD WITH A PROGRAMMER NAME.  THE        *\n*        CONSTANT 'TECH SUP' IS USED FOR ALL STARTED TASKS.           *\n*                                                                     *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*               A S S E M B L Y     O P T I O N S                     *\n*                                                                     *\n*        SEVERAL ASSEMBLY OPTIONS ARE PROVIDED FOR EASE IN            *\n*        PROVIDING THE DESIRED NUMBER OF SEPARATORS ON THE            *\n*        START/CONT OR END SEPARATOR FOR BOTH LOCAL AND REMOTE        *\n*        DEVICES.                                                     *\n*                                                                     *\n*        THE DEFAULTS SET ARE AS FOLLOWS:                             *\n*                                                                     *\n*        NPRSEPSL (2) - NUMBER OF START/CONT PAGES FOR LOCAL PRTRS    *\n*        NPRSEPEL (1) - NUMBER OF END        PAGES FOR LOCAL PRTRS    *\n*        NPRSEPSR (2) - NUMBER OF START/CONT PAGES FOR REMOTE PRTRS   *\n*        NPRSEPER (1) - NUMBER OF END        PAGES FOR REMOTE PRTRS   *\n*        IPLINES  (4) - VALUE TO ADD TO $PRIDCT FOR IMPACT PRINTERS   *\n*                       TO ALLOW PRINTING ON THE PERFORATION.         *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        ASSEMBLY VARIABLES                                           *\n*                                                                     *\n***********************************************************************\nNPRSEPSL EQU 2                     NBR OF LOCAL PRTR START SEPARATORS\nNPRSEPEL EQU 1                     NBR OF LOCAL PRTR END   SEPARATORS\nNPRSEPSR EQU 2                     NBR OF RMT   PRTR START SEPARATORS\nNPRSEPER EQU 1                     NBR OF RMT   PRTR END   SEPARATORS\nIPLINES  EQU 1                     EXTRA SEP LINES ON LOCAL IMPACT PTR\n         EJECT\n*\n*                             SYMBOLIC REGISTER DEFINITIONS\n*\n         SPACE 3\n*WA       EQU   R2                  WORK REGISTER A\n*WB       EQU   R3                  WORK REGISTER B\n*WC       EQU   R4                  WORK REGISTER C\n*WD       EQU   R5                  WORK REGISTER D\n*WE       EQU   R6                  WORK REGISTER E\n*WF       EQU   R7                  WORK REGISTER F\nWG       EQU   R8                  WORK REGISTER G\nBASE3    EQU   R8                  SEGMENT BASE REGISTER\n*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER\nBASE1    EQU   R11                 HCT ADDRESSABILITY REGISTER\nBASE2    EQU   R12                 PROCESSOR ADDRESSABILITY REGISTER\nSAVE     EQU   R13                 PCE ADDRESSABILITY REGISTER\nLINK     EQU   R14                 LINK REGISTER\n         EJECT\n***********************************************************************\n*                                                                     *\n*        EXIT MAIN ENTRY POINT                                        *\n*                                                                     *\n***********************************************************************\nEXIT1B   $ENTRY BASE=R12,CSECT=YES\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         LR    WA,R0               SAVE INPUT PARAMETER\n         LR    WB,R1               SAVE INPUT DCT ADDRESS\n         USING DCT,WB              SET ADDRESSABILITY TO DCT\n         USING JCT,R10             SET ADDRESSABILITY TO JCT\n         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER\n         LR    WC,R1               SAVE ADDRESS OF BUFFER\n         USING BFPDSECT,WC         SET ADDRESSABILITY TO BUFFER\n         TM    DCTPPSW,DCTPPSWS    SEE IF SEPARATORS REQUESTED\n         BO    EXIT                NO, GET OUT\n         CLC   JCTJNAME(6),=CL6'SARSTC'   SEE IF SAR STARTED TASK\n         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)\n         CLC   JCTJNAME(6),=CL6'SMR999'   SEE IF SAR REPRINT JOB\n         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)\n         CLC   JCTJNAME(6),=CL6'SMR998'   SEE IF SAR REPRINT JOB\n         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)\n         TM    PCEID,PCEPUSID      IS THIS A PUNCH\n         BO    PUNCH               YES, BRANCH\n         EJECT\n***********************************************************************\n*                                                                     *\n*                      P R I N T E R                                  *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *\n*                                                                     *\n***********************************************************************\nPRINTER  EQU   *\n         TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED\n         BNO   SETSEPCT            NO, BYPASS $SEPPDIR ROUTINE\n         $SEPPDIR (WC)             SEND PDIR TO SNA RMT\n***********************************************************************\n*                                                                     *\n*        DETERMINE THE NUMBER OF LINES TO BE PRODUCTED ON THE         *\n*        SEPARATOR PAGE.  THIS MAY VARY DEPENDING ON WHETER OR        *\n*        NOT THE DEVICE IS A LOCAL PRINTER OR A REMOTE PRINTER.       *\n*                                                                     *\n***********************************************************************\nSETSEPCT TM    DCTDEVID,DCTRMTID   IS THIS A REMOTE DEVICE?\n         BZ    SETLOCAL            NO, BRANCH\nSETRMT   LA    R1,NPRSEPSR         LOAD NBR OF START SEP PGS FOR REMOTE\n         CH    WA,H#8              TEST ENTRY REASON CODE\n         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH\n         LA    R1,NPRSEPER         LOAD NBR OF END SEP PGS FOR REMOTE\n         B     SETCOUNT            GO SET SEPARATOR PAGE COUNT\nSETLOCAL LA    R1,NPRSEPSL         LOAD NBR OF START SEP PGS FOR LOCAL\n         CH    WA,H#8              TEST ENTRY REASON CODE\n         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH\n         LA    R1,NPRSEPEL         LOAD NBR OF END SEP PGS FOR LOCAL\nSETCOUNT BCTR  R1,0                REDUCE COUNT BY 1\n         ST    R1,PCEUSER0         AND SAVE COUNT\n         B     PRINTRTN            GO PRINT FIRST SEPARATOR\nCALLPRNT ICM   R1,15,PCEUSER0      LOAD NUMBER OF SEP PAGES LEFT TO DO\n         BZ    ENDPRNT             ZERO, DONE, EXIT\n         BM    ENDPRNT             NEGATIVE, ERROR, BUT EXIT ANYWAY\n         BCTR  R1,0                REDUCE COUNT BY 1\n         ST    R1,PCEUSER0         AND SAVE NEW COUNT\n         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER\n         LA    R0,2                LOAD LINE LENGTH\n         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M\n         B     PRINTRTN            GO PRINT A SEPARATOR\n***********************************************************************\n*                                                                     *\n*        IF WE HAVE JUST FINISHED PROCESSING END SEPARATOR            *\n*        PAGE(S), AN EJECT COMMAND MUST BE ISSUED TO PROPERLY         *\n*        POSITION FOR EDGE MARKING.                                   *\n*                                                                     *\n***********************************************************************\nENDPRNT  CH    WA,H#8              TEST ENTRY REASON CODE\n         BNE   EXIT                NOT EIGHT, NOT END, BRANCH\n         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER\n         LA    R0,2                LOAD LINE LENGTH\n         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M\n         B     EXIT                GET OUT\n         EJECT\n***********************************************************************\n*                                                                     *\n*        PRINT SEPARATOR ROUTINE - MAY BE CALLED MULTIPLE TIMES       *\n*                                                                     *\n***********************************************************************\nPRINTRTN SLR   WD,WD               CLEAR REG FOR IC\n         IC    WD,$TPIDCT          LOAD REMOTE SEPARATOR LINE COUNT\n         TM    DCTDEVID,DCTRMTID   SEE IF THIS IS A REMOTE DEVICE\n         BO    STARTPRT            YES, BRANCH\n         IC    WD,$PRIDCT          LOAD LOCAL SEPARATOR LINE COUNT\n         TM    DCTPPSW2,DCTNIPRT   SEE IF THIS IS A NON-IMPACT PRINTER\n         BO    STARTPRT            YES, BRANCH\n         LA    WD,IPLINES(WD)      ADD EXTRA LINES FOR INPACT PRINTER\n***********************************************************************\n*                                                                     *\n*        PRODUCE FROM 1 TO THREE BLOCK LETTER LINES.  IF ONLY         *\n*        ENOUGH ROOM FOR 1 BLOCK LETTER LINE, THE JOBNAME LINE        *\n*        WILL BE GENERATED.  IF THERE IS ROOM FOR ALL THREE LINES,    *\n*        THE SECOND BLOCK LETTER LINE WILL BE THE FIRST EIGHT         *\n*        CHARACTERS OF THE PROGRAMMER NAME.  IF THERE IS ONLY ROOM    *\n*        FOR TWO LINES, THE PROGRAMMER NAME LINE WILL NOT BE          *\n*        GENERATED, BUT RATHER THE LAST BLOCK LETTER LINE OF THE      *\n*        JOB NUMBER AND SYSOUT CLASS WILL BE PRODUCED.                *\n*                                                                     *\n***********************************************************************\nSTARTPRT EQU   *\n*\n         USING PTBDSECT,WG   * MAKE PRINTER TABLE ENTRY ADDRESSABLE\n         L     WG,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    STARTPR2      * NO - MAKE DUE WITHOUT IT\n         CH    WA,H#8        * END SEPARATOR?\n         BNE   EXT1NEXT      * NO - GO EXAMINE PRINTER ENTRIES\n         SLR   WG,WG         * YES - ZERO OUT PRINTER TABLE ADDRESS\n         B     STARTPR2      *   SINCE WE WANT TO BYPASS XEROX LOGIC\nEXT1NEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST\n         BE    STARTPR2      *   PRINTER TABLE ENTRY\n         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY\n         BE    STARTPR2      *   THEN CONTINUE WITH BLOCK LETTERS\n         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY\n         BE    STARTPR2      *   THEN CONTINUE WITH BLOCK LETTERS\n         LA    WG,12(0,WG)   * ELSE GET SET TO CHECK NEXT ENTRY\n         B     EXT1NEXT      *\n*\nSTARTPR2 CH    WD,H#15             SEE IF ROOM FOR 1 LINE OF HEADING\n         BL    SEPLINE             NO, JUST GO PRINT SINGLE LINES\n         MVC   PPPCCWRK,=CL8' '    CLEAR WORK AREA\n         CLC   JCTJNAME(2),=CL2'SP' IS THIS A PGMR ID?\n         BE    SEPPGMR             Y. PROCESS\n         CLC   JCTJNAME(2),=CL2'OP' IS THIS A PGMR ID?\n         BE    SEPPGMR             Y. PROCESS\n         CLC   JCTJNAME(2),=CL2'TS' IS THIS A PGMR ID?\n         BE    SEPPGMR             Y. PROCESS\n         CLC   JCTJNAME(2),=CL2'AD' IS THIS A PGMR ID?\n         BE    SEPPGMR             Y. PROCESS\n         CLC   JCTJNAME(2),=CL2'IC' IS THIS A PGMR ID?\n         BE    SEPPGMR             Y. PROCESS\n         CLI   JCTROOMN,X'00'      DID PROGRAMMER SPECIFY ROOM?\n         BE    NORMP               Y. MOVE IT INTO HDR\n         CLC   JCTROOMN,=CL4' '    DID PROGRAMMER SPECIFY ROOM?\n         BNE   MVROOM              Y. MOVE IT INTO HDR\nNORMP    MVC   PPPCCWRK,=CL8'PROD  ' N. MOVE CONSTANT\n         B     BLOCK0              AND BRANCH AROUND\nSEPPGMR  EQU   *\n         CLI   JCTROOMN,X'00'      DID PROGRAMMER SPECIFY ROOM?\n         BE    NOROOM              Y. MOVE IT INTO HDR\n         CLC   JCTROOMN,=CL4' '    DID PROGRAMMER SPECIFY ROOM?\n         BNE   MVROOM              Y. MOVE IT INTO HDR\nNOROOM   MVC   PPPCCWRK,=CL7'NO ROOM' N. MOVE CONSTANT\n         B     BLOCK0              AND BRANCH AROUND\nMVROOM   MVC   PPPCCWRK(4),JCTROOMN GET ROOM NUMBER\nBLOCK0   LA    R0,PPPCCWRK        LOAD ROOM NUMBER\n*\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    BLOCK0A       * NO - SKIP XEROX CHECK\n         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   BLOCK0A       *   THEN DO STANDARD CENTERING\n         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)\n         BZ    BLOCK0A       *   THEN DO STANDARD CENTERING\n*\n         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO\n         B     BLOCK0B       *\n*\nBLOCK0A  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO\n*\nBLOCK0B  MVI   BUFSTART,C' '       CLEAR ENTIRE\n         MVC   BUFSTART+1(132),BUFSTART  BUFFER\n         LA    R1,1                SET LENGTH TO 1\n         STC   R1,BUFSTART         AND SAVE IT IN BUFFER\n         LA    R1,2                SET REPEAT COUNT\n         BAL   WF,PRINT            GO WRITE BLANK LINES\n         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS\nBLOCK1   LA    R0,JCTJNAME         LOAD JOB NAME ADDRESS\n*\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    BLOCK1A       * NO - SKIP XEROX CHECK\n         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   BLOCK1A       *   THEN DO STANDARD CENTERING\n         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)\n         BZ    BLOCK1A       *   THEN DO STANDARD CENTERING\n*\n         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO\n         B     BLOCK1B       *\n*\nBLOCK1A  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO\n*\nBLOCK1B  MVI   BUFSTART,C' '       CLEAR ENTIRE\n         MVC   BUFSTART+1(132),BUFSTART  BUFFER\n         LA    R1,1                SET LENGTH TO 1\n         STC   R1,BUFSTART         AND SAVE IT IN BUFFER\n         LA    R1,2                SET REPEAT COUNT\n         BAL   WF,PRINT            GO WRITE BLANK LINES\n         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS\nBLOCK2   CH    WD,H#31             SEE IF ROOM FOR TWO BLOCK LETTERS\n         BL    BLOCK3              NO, GO SEE IF ROOM FOR LAST BLOCK\n         LA    R1,1                SET REPEAT COUNT\n         BAL   WF,PRINT            GO PRINT ONE MORE BLANK LINE\n         SH    WD,H#1              SUBTRACT ONE LINE FOR BLANK LINE\n         CLI   JCTJOBID,C'J'       IS THIS A BATCH JOB?\n         BE    BLOCK2A             YES, BRANCH\n         CLI   JCTJOBID,C'T'       IS THIS A TSO USER?\n         BE    BLOCK2A             YES, BRANCH\n         MVC   JCTPNAME,C#STC      SET PROGRAMMER NAME TO 'TECH SUP'\nBLOCK2A  LA    R0,JCTPNAME         LOAD ADDRESS OF PROGRAMMER NAME\n*\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    BLOCK2B       * NO - SKIP XEROX CHECK\n         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   BLOCK2B       *   THEN DO STANDARD CENTERING\n         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)\n         BZ    BLOCK2B       *   THEN DO STANDARD CENTERING\n*\n         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO\n         B     BLOCK2C       *\n*\nBLOCK2B  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO\n*\nBLOCK2C  MVI   BUFSTART,C' '       CLEAR ENTIRE\n         MVC   BUFSTART+1(132),BUFSTART  BUFFER\n         LA    R1,1                SET LENGTH TO 1\n         STC   R1,BUFSTART         AND SAVE IT IN BUFFER\n         LA    R1,2                SET REPEAT COUNT\n         BAL   WF,PRINT            GO WRITE BLANK LINES\n         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS\nBLOCK3   CH    WD,H#16             SEE IF ROOM FOR MORE BLOCK LETTERS\n         BL    SEPLINE             NO, JUST GO PRINT SINGLE LINES\n         LA    R1,1                SET REPEAT COUNT\n         BAL   WF,PRINT            GO PRINT ONE MORE BLANK LINE\n         SH    WD,H#1              SUBTRACT ONE LINE FOR BLANK LINE\n         XC    PPPCCWRK,PPPCCWRK   CLEAR WORK AREA\n         MVC   PPPCCWRK(1),JCTJOBID GET JOB TYPE\n         MVC   PPPCCWRK+1(4),JCTJOBID+4 AND JOB NUMBER\nBLOCK3A  CLI   PPPCCWRK+1,C' '      LEFT\n         BNE   BLOCK3B               JUSTIFY\n         MVC   PPPCCWRK+1(4),PPPCCWRK+2  JOB\n         B     BLOCK3A                   NUMBER\nBLOCK3B  L     WE,PPPWKJOE         LOAD ADDRESS WORK-JOE\n         USING JOE,WE              SET ADDRESSABILITY TO JOE\n         MVC   PPPCCWRK+6(1),JOECURCL  GET SYSOUT CLASS\n         DROP  WE                  DROP ADDRESSABILITY TO JOE\n         MVI   PPPCCWRK+7,C' '     SET TRAILING BLANK\n         LA    R0,PPPCCWRK         LOAD ADDRESS OF JOB NUMBER AND CLASS\n*\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    BLOCK3C       * NO - SKIP XEROX CHECK\n         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   BLOCK3C       *   THEN DO STANDARD CENTERING\n         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)\n         BZ    BLOCK3C       *   THEN DO STANDARD CENTERING\n*\n         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO\n         B     BLOCK3D       *\n*\nBLOCK3C  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO\n*\nBLOCK3D  MVI   BUFSTART,C' '       CLEAR ENTIRE\n         MVC   BUFSTART+1(132),BUFSTART  BUFFER\n         LA    R1,1                SET LENGTH TO 1\n         STC   R1,BUFSTART         AND SAVE IT IN BUFFER\n         LA    R1,2                SET REPEAT COUNT\n         BAL   WF,PRINT            GO WRITE BLANK LINES\n         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONVERT JOEROUT TO EBCIDIC FOR PRINT SEPERATOR PAGES         *\n*        THE ROUTE IS FIRST CHECKED TO SEE IF THERE IS A              *\n*        DESTID THAT MATCHES THE ROUTE.  IF A DESTID IS FOUND THEN    *\n*        THAT NAME IS MOVED TO THE HEADER LINE. IF MORE THAN ONE      *\n*        DESTID IS FOUND FOR A ROUTE THEN THE ROUTE IS CONVERTED      *\n*        ACCORDING TO THE FOLLOWING FORMAT                            *\n*                                                                     *\n*             RNNNN  (REMOTE)                                         *\n*             UNNNN  (SPECIAL LOCAL)                                  *\n*             'LOCAL' (LOCAL DEVICE)                                  *\n*             CCCCCCCC (DESTID)                                       *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nSEPLINE  L     WE,PPPWKJOE         LOAD ADDRESS OF WORK JOE\n         USING JOE,WE              SET ADDRESSABILITY TO JOE\n         L     WF,$SVT             GET ADDRESS OF SVT\n         LM    R14,R15,SVTRDT-SVT(WF)  LOAD ADDRESS OF FIRST RDT\n         USING RDT,R14             SET ADDRESSABILITY TO RDT\n         NI    PRDWORK1,X'00'      TURN OFF DESTID FOUND\nSEPLINE1 CR    R14,R15             END OF TABLE?\n         BH    SEPLINE4            YES, GET OUT\n         ICM   WF,15,RDTROUTE      LOAD ROUTE CODE FROM RDT\n         TM    RDTFLAG,RDTFLAGR    IS THIS A REMOTE DESTINATION ENTRY\n         BZ    SEPLINE2            NO, BRANCH\n         TM    RDTFLAG,RDTFLAGN    IS NODE SPECIFIED IN THE ENTRY\n         BO    SEPLINE2            YES, BRANCH\n         ICM   WF,B'1100',$OWNNODE MOVE DEFAULT NODE TO ROUTE CODE\nSEPLINE2 CL    WF,JOEROUT          SEE IF DESTIT MATCHES THIS JOE\n         BNE   SEPLINE3            NO, GO CHECK NEXT RDT ENTRY\n         TM    PRDWORK1,X'FF'      HAS A DESTID ALREADY BEEN FOUND?\n         BO    SEPLINE5            YES, BRANCH\n         OI    PRDWORK1,X'FF'      SET FIRST DESTID FOUND FLAG\n         MVC   PROUTWRK,RDTNAME    SAVE DESTID\nSEPLINE3 LA    R14,RDTSIZ(R14)     INCREMENT TO NEXT RDT\n         B     SEPLINE1            GO CHECK NEXT RDT ENTRY\nSEPLINE4 TM    PRDWORK1,X'FF'      IS THERE A DESTID FOR THIS JOE..\n         BO    SEPLINE8            YES, GO BUILD SEPARATOR LINE\nSEPLINE5 CLC   JOEREMOT,$ZEROS     IS THIS A LOCAL DESTID\n         BE    SEPLINE7            YES, GO SET TO LOCAL\n         SLR   R15,R15             CLEAR REG FOR ICM\n         ICM   R15,3,JOEREMOT      MOVE REMOTE NUMBER TO A REG\n         CVD   R15,PROUTWRK        CONVERT REMOTE NUMBER TO PACKED\n         MVC   PROUTWRK-1(6),MASK1 SET EDIT PATTERN\n         ED    PROUTWRK-1(6),PROUTWRK+5  MAKE REMOTE NUMBER PRINTABLE\n         CLC   JOERNODE,$ZEROS     SEE IF UNIT SPECIFICATION\n         BE    SEPLINE6            YES, GO SET  'U' LABEL\n         MVI   PROUTWRK,C'R'       NO,  REMOTE, 'R' LABEL\n         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD\n         B     SEPLINE8            GO BUILD SEPARATOR LINE\n         SPACE 1\nSEPLINE6 MVI   PROUTWRK,C'U'       SET 'U' LABEL\n         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD\n         B     SEPLINE8            GO BUILD SEPARATOR LINE\n         SPACE 1\nSEPLINE7 MVC   PROUTWRK,C#LOCAL    SET 'LOCAL' LABEL\n         DROP  R14                 DROP ADDRESSABILITY TO RDT\n         EJECT\n***********************************************************************\n*                                                                     *\n*        BUILD THE OUTPUT SINGLE LINE WHICH WILL BE REPEATED ENOUGH   *\n*        TIMES TO FILL THE REST OF THE PAGE AS DEFINED BY THE JES2    *\n*        INITIALIZATION PARAMTERS FOR &PRIDCT FOR LOCAL PRINTERS OR   *\n*        &TPIDCT FOR REMOTE PRINTERS.                                 *\n*                                                                     *\n***********************************************************************\nSEPLINE8 LA    WF,BUFSTART+1       LOAD ADDRESS OF HEADER LINE\n         USING HDRDSECT,WF         SET ADDRESSABILITY TO HEADER LINE\n         MVI   BUFSTART,C' '       CLEAR ENTIRE\n         MVC   BUFSTART+1(132),BUFSTART  BUFFER\n         LA    WE,132              LOAD LENGTH OF PRINT LINE\n         STC   WE,BUFSTART         AND SAVE IT\n***********************************************************************\n*        FRAME CHARACTERS                                             *\n***********************************************************************\n         MVC   HDRFRAME(2),C#ASTER  SET FRAME CHARACTER\n         MVC   HDRFRAMX(1),HDRFRAME SET END FRAME CHARACTER\n***********************************************************************\n*        SYSOUT CLASS                                                 *\n***********************************************************************\n         L     WE,PPPWKJOE         LOAD ADDRESS OF WORK JOE\n         USING JOE,WE              SET ADDRESSABILITY TO JOE\n         MVC   HDRCLASS,JOECURCL   SET SYSOUT CLASS\n         MVC   HDRCLASX,JOECURCL       TWICE\n***********************************************************************\n*        SYSOUT CLASS AGAIN                                           *\n***********************************************************************\n         MVC   HDRJNAME(1),JOECURCL SET SYSOUT CLASS AGAIN\n         MVI   HDRJNAME+1,C'-'     INSERT A DASH\n***********************************************************************\n*        SYSOUT FORM ID                                               *\n***********************************************************************\n         L     R1,PPPCHJOE         GET THE ADDRESS OF CJOE\n         MVC   HDRJNAME+2(4),JOEFORM-JOE(R1) SET OUTPUT FORM ID\n***********************************************************************\n*        SYSOUT JOE NAME                                              *\n***********************************************************************\n*        MVC   HDRJNAME,JOENAME    SET JOE OUTPUT NAME\n***********************************************************************\n*        SYSOUT JOE ID                                                *\n***********************************************************************\n*        MVC   HDRJID(2),JOEID1    SET JOE OUTPUT ID\n***********************************************************************\n*        SYSOUT JOE ROUTE AS DETERMINED BY PREVIOUS ROUTINE           *\n***********************************************************************\n         MVC   HDRJROUT,PROUTWRK   SET JOE ROUTE OR DESTID\n         DROP  WE                  DROP ADDRESSABILITY TO JOE\n***********************************************************************\n*        SEPARATOR FORM TYPE (START/CONT/END)                         *\n***********************************************************************\n         MVC   HDRFORM,C#START     ASSUME \"START\" ENTRY\n         LTR   WA,WA               TEST ENTRY REASON CODE\n         BZ    FORMSET             ZERO, START, BRANCH\n         MVC   HDRFORM,C#CONT      ASSUME \"CONT \" ENTRY\n         CH    WA,H#4              TEST ENTRY REASON CODE\n         BE    FORMSET             FOUR, CONT, BRANCH\n         MVC   HDRFORM,C#END       MUST BE \"END  \" ENTRY\nFORMSET  MVC   HDRFORMX,HDRFORM    SET FORM TYPE TWICE\n***********************************************************************\n*        SYSOUT JOB NUMBER                                            *\n***********************************************************************\n         MVC   HDRNUM,JCTJOBID     SET JOB NUMBER\n***********************************************************************\n*        SYSOUT JOB NAME                                              *\n***********************************************************************\n         MVC   HDRNAME,JCTJNAME    SET JOB NAME\n***********************************************************************\n*        SYSOUT SYSTEM ID                                             *\n***********************************************************************\n         MVC   HDRSKEY,C#SYS       SET THE SYS LABEL\n         MVC   HDRSYS,$SID         SET SYSTEM ID\n***********************************************************************\n*        SYSOUT PROGRAMMER NAME                                       *\n***********************************************************************\n         MVC   HDRPNAME,JCTPNAME   SET PROGRAMMER NAME\n***********************************************************************\n*        SYSOUT ROOM NUMBER                                           *\n***********************************************************************\n         MVC   HDRRKEY,C#ROOM      SET THE ROOM LABEL\n         MVC   HDRROOM,JCTROOMN    SET ROOM NUMBER\n***********************************************************************\n*        SYSOUT TIME (HH.MM.SS XM)                                    *\n***********************************************************************\n         TIME  DEC                 GET TIME AND DATE\n         ST    R0,PROUTWRK         SAVE TIME (HHMMSSTT)\n         MVO   PRDWORK1(5),PROUTWRK(4) SHIFT TO ADD SIGN\n         OI    PRDWORK1+4,X'0F'    SET SIGN\n         MVC   HDRAM,C#AM          SET TO 'AM'\n         CP    PRDWORK1(5),P#12MIL TEST TIME\n         BL    SEPLINE9            BRANCH IF AM\n         MVI   HDRAM,C'P'          CHANGE FROM AM TO PM\n         CP    PRDWORK1(5),P#13MIL SEE IF AFTER 1 PM\n         BL    SEPLINE9            YES, DO NOT ADJUST FOR PM\n         SP    PRDWORK1(5),P#12MIL SUBTRACT 12 HOURS\nSEPLINE9 MVC   HDRPTTN,MASK2       SET EDIT MASK\n         ED    HDRPTTN,PRDWORK1    EDIT TIME INTO HEADER LINE\n***********************************************************************\n*        SYSOUT DATE (DD MMM YY)                                      *\n***********************************************************************\n         ST    R1,PROUTWRK+4       SAVE DATE\n         MVC   SAVETBL,YEARTBL     SAVE A COPY OF DAE TABLE FOR UPDATE\n         TM    PROUTWRK+5,X'01'    IT THIS AN ODD YEAR\n         BO    SEPLINEA            YES, CANNOT BE LEAP YEAR\n         TM    PROUTWRK+5,X'12'    MAGIC LEAP YEAR MASK\n         BM    SEPLINEA            MIXED, CANNOT BE LEAP YEAR\n         MVI   FEB,29              CHANGE FEB TO 29 DAYS\nSEPLINEA MVC   HDRDATE+6(3),MASK3  MOVE EDIT PATTERN\n         ED    HDRDATE+7(3),PROUTWRK+5    EDIT THE YEAR (YY) TO HDR\n         MVC   PROUTWRK(6),$ZEROS  CLEAR ALL DATE EXCEPT JULIAN DAY\n         CVB   R1,PROUTWRK         CONVERT TO BINARY DAY\n         LA    WE,SAVETBL-4        LOAD ADDRESS OF DATEION TABLE\n         SLR   R0,R0               CLEAR FOR IC\nSEPLINEB SLR   R1,R0               SUBTRACT DAY/MONTH FROM TOTAL\n         LA    WE,4(,WE)           INCREMENT TO NEXT DATE ENTRY\n         IC    R0,0(,WE)           LOAD NUMBER OF DAYS IN THAT MONTH\n         CLR   R0,R1               SEE IF ONLY PARTIAL MONTH REMAINDING\n         BL    SEPLINEB            NO, LOOP\n         CVD   R1,PROUTWRK         CONVERT TO DECIMAL DAY\n         MVI   HDRDATE-1,C' '      CLEAR 1ST BYTE OF AREA\n         UNPK  HDRDATE(2),PROUTWRK+6(2) PLACE DAY (DD)\n         OI    HDRDATE+1,X'F0'             INTO PMESSAGE\n         MVI   HDRDATE+2,C' '      INSERT DELIMITER\n         MVC   HDRDATE+3(3),1(WE)  MOVE EBCDIC MONTH (MMM)\n***********************************************************************\n*        SYSOUT DEVICE NAME                                           *\n***********************************************************************\n         MVC   HDRDNAME,DCTDEVN    DEVICE NAME\n         DROP  WF                  DROP ADDRESSABILITY TO HEADER LINE\n         EJECT\n***********************************************************************\n*                                                                     *\n*        PRODUCE THE SINGLE LINE WHICH WAS JUST CREATED AS MANY       *\n*        TIMES AS REQUIRED TO FILL THE REST OF THE PAGE AS DEFINED    *\n*        BY JES2 INITIALIZATION PARAMETERS.  THE NUMBER OF LINES      *\n*        LEFT TO PRINT IS IN REGISTER WD.                             *\n*                                                                     *\n***********************************************************************\n*\n         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    SEPLINEC      * NO - SKIP XEROX CHECK\n         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   SEPLINEC      *   THEN PRINT ALL LONG SEPARATOR LINES\n         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)\n         BZ    SEPLINEC      *   THEN PRINT ALL LONG SEPARATOR LINES\n*\n         C     WD,=F'13'         GOT MORE THAN 13 LINES LEFT TO PRINT?\n         BNH   SEPLINEC          NO - PRINT ALL LONG SEPARATOR LINES\n         L     R1,=F'13'         YES - PRINT 13 LONG SEPARATOR LINES\n         BAL   WF,PRINT\n         S     WD,=F'13'\n         SLR   WF,WF               CLEAR REG 0 FOR IC\n         IC    WF,BUFSTART         LOAD LINE LENGTH\n         C     WF,=F'68' LINE GREATER THAN 68 CHARACTERS?\n         BNH   SEPLINEC            NO - PRINT REST OF LONG SEPARATOR\n         S     WF,=F'69'           SETUP FOR SHORT SEPARATOR:\n         EX    WF,SEPMOVE1            MOVE SECOND HALF OVER FIRST\n         LA    R1,BUFSTART+1(WF)\n         MVI   0(R1),C' '             BLANK OUT SECOND HALF\n         C     WF,=F'0'\n         BE    SEPLINEC\n         S     WF,=F'1'\n         EX    WF,SEPMOVE2\n         C     WD,=F'3'          GOT MORE THAN 3 LINES LEFT TO PRINT?\n         BNH   SEPLINEC          NO - GO PRINT SHORT SEPARATOR LINES\n         CLC   PCEUSER0(4),=F'0' SECOND SEPARATOR PAGE?\n         BNE   SEPLINEC          NO - GO PRINT SHORT SEPARATOR LINES\n         L     WD,=F'3'          YES - REDUCE DOWN TO 3 AND\n         B     SEPLINEC            GO PRINT SHORT SEPARATOR LINES\n*\nSEPMOVE1 MVC   BUFSTART+1(0),BUFSTART+69  MOVE SECOND HALF OVER FIRST\nSEPMOVE2 MVC   1(0,R1),0(R1)              BLANK OUT SECOND HALF\n*\nSEPLINEC LR    R1,WD               SET REMAIN LINE COUNT IN REG 1\n         BAL   WF,PRINT            GO WRITE HEADER LINES\n         B     CALLPRNT            DONE WITH PAGE, RETURN TO CALLER\n         EJECT\n***********************************************************************\n*                                                                     *\n*                        P U N C H                                    *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *\n*                                                                     *\n***********************************************************************\nPUNCH    TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED\n         BNO   PUNCH1              NO, BYPASS $SEPPDIR ROUTINE\n         $SEPPDIR (WC)             SEND PDIR TO SNA RMT\nPUNCH1   MVC   PROUTWRK(4),JCTROOMN SET ROOM NUMBER\n         MVC   PROUTWRK+4(4),JCTJOBID+4 AND JOB NUMBER\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONVERT EACH OF THE EIGHT CHARACTERS IN PPROUTWRK TO         *\n*        A STRING OF 8 CHARACTERS WHICH WILL PRINT AS A 12-11-X       *\n*        PUNCH.  EACH CHARACTER WILL BE PRECEDED BY A NULL            *\n*        12-11 PUNCH TO DIVIDE THE CHARACTERS.                        *\n*                                                                     *\n*        NOTE THAT THAT THE ZONE PORTION OF ALPHA CHARACTERS WILL     *\n*        BE LOST LEAVING ONLY THE NUMERIC PORTION ALONG WITH THE      *\n*        12-11 ZONE PUNCH.  ALSO NOTE THAT ALL CHARACTERS LESS        *\n*        AN \"A\" WILL PRINT AS A NULL 12-11 PUNCH.                     *\n*                                                                     *\n***********************************************************************\n         LA    WE,80               SET LENGTH TO 80\n         STC   WE,BUFSTART         AND SAVE IT IN THE BUFFER\n         LA    WE,BUFSTART+1       LOAD START OF PUNCH LINE IN BUFFER\n         SLR   WD,WD               ZERO INDEX POINTER\nPUNCH2   MVI   0(WE),X'6A'         START THE FIELD WITH 12-11 PNCH\n         IC    R0,PROUTWRK(WD)     LOAD NEXT CHARACTER\n         STC   R0,1(,WE)           MOVE CHARACTER TO BUFFER\n         OI    1(WE),X'30'         MASK LETTERS TO NUMERIC\n         CLI   1(WE),X'F0'         SEE IF NOW ZERO\n         BE    PUNCH3              YES, GO SET TO X'E0'\n         BH    PUNCH4              GT ZERO, GO MASK TO 12-11-X\n         MVI   1(WE),X'EA'         LT, SET TO X'EA'\nPUNCH3   XI    1(WE),X'E0'         MASK OFF X'E0'\nPUNCH4   XI    1(WE),X'60'         MASK RESULTING CHARACTER TO 12-11-X\n         MVC   2(7,WE),1(WE)       PROPAGATE CHARACTER 7 MORE TIMES\n         MVI   9(WE),X'6A'         END FIELD WITH 12-11 PUNCH\n         LA    WE,10(,WE)          INCREMENT TO NEXT OUTPUT AREA\n         LA    WD,1(,WD)           INCREMENT TO NEXT INPUT CHARACTER\n         CH    WD,H#8              SEE IF END OF INPUT\n         BL    PUNCH2              NO, LOOP\n***********************************************************************\n*                                                                     *\n*        PRODUCE PUNCH LACE CARD                                      *\n*                                                                     *\n***********************************************************************\n         LA    R1,1                SET REPEAT COUNT\n         BAL   WF,PRINT            GO WRITE PUNCH CARD\n***********************************************************************\n*                                                                     *\n*        PRODUCE BLANK SEPARATOR CARD IF NOT A 3525                   *\n*                                                                     *\n***********************************************************************\n         CLI   PPPDEVTP+3,X'0C'    IS THIS A 3525\n         BE    PUNCH6              YES, DO NOT PUNCH A BLANK CARD\n         MVC   BUFSTART(2),PUNBLANK MOVE BLANK CARD INTO BUFFER\n         LA    R0,2                LOAD LINE LENGTH\n         LA    R1,BUFSTART         LOAD ADDRESS OF BLANK CARD\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M\nPUNCH6   B     EXIT                DONE, GET OUT\n         EJECT\n***********************************************************************\n*                                                                     *\n*                           E X I T                                   *\n*                                                                     *\n*             RETURN CODE OF 8 TELLS JES2 TO PRODUCE ANY USER         *\n*             SEPARATOR THAT HAS BEEN CREATED AND TO SUPPRESS         *\n*             THE STANDARD SEPARATOR.                                 *\n*                                                                     *\n***********************************************************************\nEXIT     $FREEBUF (WC)             FREE THE WORK BUFFER\n         LA    R15,8               SET RETURN CODE TO 8\n         $RETURN RC=(R15)          RETURN TO JES2\n         EJECT\n***********************************************************************\n*                                                                     *\n*                           P R I N T                                 *\n*                                                                     *\n*        WRITE THE OUTPUT LINE DEFINED AT BUFSTART.  REPEAT THE       *\n*        LINE BY THE NUMBER OF TIMES INDICATED BY THE VALUE IN        *\n*        REGISTER 1 ON ENTRY.  THE LENGTH OF THE PRINT LINE IS        *\n*        INDICATED BY THE FIRST BYTE OF BUFSTART.  THE ACTUAL         *\n*        DATA STARTS AT BUFSTART+1.                                   *\n*                                                                     *\n***********************************************************************\nPRINT    LTR   WE,R1               SAVE LINE COUNT\n         BNPR  WF                  ZERO OR NEGATIVE, GET OUT\nPRINTLP  SLR   R0,R0               CLEAR REG 0 FOR IC\n         IC    R0,BUFSTART         LOAD LINE LENGTH\n         LA    R1,BUFSTART+1       LOAD ADDRESS OF TRUE LINE\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES\n         BCT   WE,PRINTLP          LOOP UNTIL DONE\n         BR    WF                  RETURN TO CALLER\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONSTANTS USED BY THIS JES2 EXIT                             *\n*                                                                     *\n***********************************************************************\nYEARTBL  DC    AL1(31),C'JAN',AL1(28),C'FEB'   JULIAN DATE\n         DC    AL1(31),C'MAR',AL1(30),C'APR'       TO\n         DC    AL1(31),C'MAY',AL1(30),C'JUN'  DAY AND MONTH\n         DC    AL1(31),C'JUL',AL1(31),C'AUG'    CONVERSION\n         DC    AL1(30),C'SEP',AL1(31),C'OCT'      TABLE\n         DC    AL1(30),C'NOV',AL1(99),C'DEC'\nSAVETBL  EQU   $REGSAVE,12*4       AREA FOR COPY OF ABOVE TABLE\nFEB      EQU   SAVETBL+4           ENTRY FOR FEBRUARY\n         SPACE 3\nH#1      DC    H'1'                HALFWORD CONSTANT '1'\nH#4      DC    H'4'                HALFWORD CONSTANT '4'\nH#8      DC    H'8'                HALFWORD CONSTANT '8'\nH#14     DC    H'14'               HALFWORD CONSTANT '14\nH#15     DC    H'15'               HALFWORD CONSTANT '15\nH#16     DC    H'16'               HALFWORD CONSTANT '16\nH#31     DC    H'31'               HALFWORD CONSTANT '31'\nC#LOCAL  DC    CL8'LOCAL'          CHARACTER CONSTANT 'LOCAL   '\nC#ASTER  DC    CL2'* '             CHARACTER CONSTANT '* '\nC#SYS    DC    CL3'SYS'            CHARACTER CONSTANT 'SYS'\nC#ROOM   DC    CL4'ROOM'           CHARACTER CONSTANT 'ROOM'\nC#AM     DC    CL2'AM'             CHARACTER CONSTANT 'AM'\nC#START  DC    CL5'START'          CHARACTER CONSTANT 'START'\nC#CONT   DC    CL5'CONT '          CHARACTER CONSTANT 'CONT '\nC#END    DC    CL5'END  '          CHARACTER CONSTANT 'END  '\nC#STC    DC    CL20'TECH SUP'      CHARACTER CONSTANT 'TECH SUP'\nP#12MIL  DC    PL5'12000000'       PACKED CONSTANT FOR TIME 12.00.00.00\nP#13MIL  DC    PL5'13000000'       PACKED CONSTANT FOR TIME 13.00.00.00\nPRINTER6 DC    CL8'PRINTER6'       CHARACTER CONSTANT 'PRINTER6'\nPRINTER7 DC    CL8'PRINTER7'       CHARACTER CONSTANT 'PRINTER7'\nRMT1PR1  DC    CL8'R1.PR1  '       CHARACTER CONSTANT 'R1.PR1  '\nBLANKS   DC    CL20' '             STRING OF 20 BLANKS\nPAGEJECT DC    X'8B40'             PRINTER SKIP TO CHANNEL 1 COMMAND\nPUNBLANK DC    X'0140'             PUNCH BLANK CARD INTO POCKET 1\nMASK1    DC    X'202120202020'     EDIT MASK\nMASK2    DC    X'402021204B20204B2020' EDIT MASK\nMASK3    DC    X'402120'           EDIT MASK\nMASK4    DC    X'21204B20204B2020' EDIT MASK\nJNAME    EQU   BUFSTART+14,8\nPNAME1   EQU   BUFSTART+34,10\nPNAME2   EQU   BUFSTART+54,10\nJOBID    EQU   BUFSTART+74,8\nROOMNBR  EQU   BUFSTART+94,4\nDATE     EQU   BUFSTART+114,9\nTIME     EQU   BUFSTART+14,8\nPRDWORK1 DS    D\nPROUTWRK DS    D\n         EJECT\n         LTORG\n         DROP  WB,WC,WG,R10\n         EJECT\nHDRDSECT DSECT                     HASP HEADER DSECT\nHDR      DS    0CL132\nHDRFRAME DS    XL1                 PP1 FRAME CHARACTERS\nHDRCLASS DS    XL1                 PP2 SYSOUT CLASS\n         DS    X                   PP3 BLANK\nHDRFORM  DS    XL5                 PP4-8  FORM TYPE START/CONT/END\n         DS    X                   PP9  BLANK\nHDRNUM   DS    XL8                 PP10-17 JOB NUMBER\n         DS    X                   PP18 BLANK\nHDRNAME  DS    XL8                 PP19-26 JOB NAME\n         DS    X                   PP27 BLANK\nHDRJNAME DS    XL4,X               PP28-31 JOE NAME\n         DS    X                   PP32 BLANK\nHDRJID   DS    XL4                 PP33-36 JOE ID\n         DS    X                   PP37 BLANK\nHDRJROUT DS    XL8                 PP38-45 JOE ROUTE\n         DS    X                   PP46 BLANK\nHDRPNAME DS    XL20                PP47-66 PROGRAMMER NAME\n         DS    X                   PP67 BLANK\nHDRRKEY  DS    XL4                 PP68-71 'ROOM'\n         DS    X                   PP72 BLANK\nHDRROOM  DS    XL4                 PP73-76 ROOM NUMBER\nHDRPTTN  DS    0XL10\n         DS    X                   PP77 BLANK USED AS FILL CHARACTER\n         DS    X                   PP78 BLANKED BY TIME EDIT PROCESS\n         DS    XL8                 PP79-86 HH.MM.SS\n         DS    X                   PP87 BLANK\nHDRAM    DS    XL2                 PP88-89 AM/PM\n         DS    X                   PP90 BLANK\nHDRDATE  DS    XL9                 PP91-99 DD MMM YY\n         DS    2X                  PP100-101 BLANK\nHDRDNAME DS    XL8                 PP102-109 DEVICE NAME\n         DS    2X                  PP110-111 BLANK\nHDRSKEY  DS    XL3                 PP112-114 'SYS'\n         DS    X                   PP115 BLANK\nHDRSYS   DS    XL4                 PP116-119 SYSTEM NAME\n         DS    X                   PP120 BLANK\nHDRFORMX DS    XL5                 PP121-125 FORM\n         DS    2X                  PP126-127 BLANK\nHDRCLASX DS    X                   PP128  JOE CLASS\nHDRFRAMX DS    XL4                 PP129-132 FRAME CHARACTERS\nHDRLEN   EQU   *-HDR               LEN FOR CLEARING HEADER\n         ORG   HDR\nR6670HDR DS    0H                  DETAIL HEADER LINE FOR 6670\n         DS    CL4\nH66JOBNM DS    CL8                 JOBNAME\n         DS    CL2\nH66JOBID DS    CL8                 JOBID\n         DS    CL2\nH66ROOM  DS    CL4                 ROOM NUMBER\n         DS    CL1\nH66PGMR  DS    CL20                PROGRAMMER NAME\n         SPACE\nEXIT1B   CSECT\n*\n********************** END OF MODULE EXIT1B ***************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT1MIT": {"ttr": 2822, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT1MIT: HASP GLOBAL PARAMETERS'                       JGA01610\n*********************************************************************** JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n* |                       E X I T 1 M I T                           | * JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*********************************************************************** JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n* |           H A S P   G L O B A L   P A R A M E T E R S           | * JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n*********************************************************************** JGA00080\n         PUSH  PRINT                                                    JGA01620\n         COPY  $HASPGBL      * GENERATE HASP GLOBAL PARAMETERS          JGA01620\n         EJECT\n         TITLE 'EXIT1MIT: JES2 EXIT1 MODULE INFORMATION TABLE'          JGA01820\n*********************************************************************** JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n* |       M O D U L E    I N F O R M A T I O N    T A B L E         | * JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n*********************************************************************** JGA00080\n*                                                                     *\n*                           EXIT1MIT                                  *\n*                                                                     *\n* THIS MODULE SETS UP THE JES2 ENVIRONMENT FOR THE VARIOUS EXITS      *\n* WHICH MAKE UP OUR XEROX 8700/9700 FORMS CONTROL.  ALL OF THE EXITS  *\n* ARE MERGED TOGETHER IN THIS ONE MODULE.                             *\n*                                                                     *\n* LEVEL OF JES2 SUPPORTED: MVS/SP JES2 1.3.6                          *\n*                                                                     *\n* THE FOLLOWING MODULES ARE COPIED IN AT ASSEMBLY TIME:               *\n*                                                                     *\n*   EXIT1REG - REGISTER DEFINITIONS AND OTHER SYMBOLICS USED IN THE   *\n*              EXITS.                                                 *\n*                                                                     *\n*   EXIT1A   - JES2 EXIT 1 PRINT SEPARATOR EXIT DEVELOPED TO PROVIDE  *\n*              XEROX FORMS CONTROL BY INSERTING DJDE COMMANDS IN FRONT*\n*              OF THE PRINT SEPARATOR PAGES.  USES SYSOUT CLASS AND   *\n*              FORM ID TO REFERENCE TABLES CONTAINED IN EXIT1TAB.     *\n*              SEPDS=Y IDENTIFIES A PRINTER AS A XEROX 8700/9700.     *\n*                                                                     *\n*   EXIT1TAB - VARIOUS TABLES USED BY THE EXITS, PRINCIPALLY EXIT1A,  *\n*              TO DEFINE AND MANAGE XEROX FORMS CONTROL.              *\n*                                                                     *\n*   EXIT1B   - ORIGINAL JES2 EXIT 1 BF PRINT SEPARATOR MODIFIED TO    *\n*              PRODUCE SLIGHTLY DIFFERENT SEPARATOR PAGES FOR XEROX   *\n*              DESTINED OUTPUT DEPENDING ON ORIENTATION               *\n*              (LANDSCAPE/PORTRAIT) AND PAGE SIZE.  JDE AT XEROX      *\n*              EXTRACTS DATA FROM GENERATED SEPARATOR PAGES FOR       *\n*              DETERMINING JOB BOUNDARIES AND STATUS DISPLAYS.        *\n*                                                                     *\n*   EXIT5    - JES2 EXIT 5 COMMAND PREPROCESSOR EXIT USED TO FORCE    *\n*              FORM SETUP MESSAGES ON THE XEROX CONSOLE WHENEVER THE  *\n*              XEROX PRINTER IS STOPED OR HALTED AND RESTARTED FROM   *\n*              JES2.  IMPLEMENTED TO AVOID USING WRONG STOCK OR       *\n*              DUPLEX/SIMPLEX ORIENTATION AFTER XEROX MAINTENANCE.    *\n*                                                                     *\n*   EXIT15   - JES2 EXIT 15 OUTPUT DATASET/COPY SELECT SEPARATOR EXIT *\n*              USED TO PROVIDE DUPLEX AND MULTIPLE LOGICAL PAGE PER   *\n*              PHYSICAL PAGE SUPPORT BY INSERTING A SKIP TO NEW FRONT *\n*              DJDE COMMAND BETWEEN SEPARATE DATASETS AND COPIES OF   *\n*              DATASETS WITHIN THE SAME SYSOUT JOB.                   *\n*                                                                     *\n*   EXIT250  - JES2 USER EXIT USED TO SUPPRESS JES2 FORMS SETUP       *\n*              MESSAGES WHENEVER A FORMS CHANGE OCCURS FOR A XEROX    *\n*              PRINTER.  EXIT1A CREATES FORMS SETUP MESSAGES THRU     *\n*              DJDE'S WHICH DISPLAY ON THE XEROX CONSOLE WHEN THE     *\n*              OUTPUT PRINTS.  EXIT250 REQUIRES THAT USERMOD ZZ03821  *\n*              BE APPLIED TO HASPPRPU IN ORDER TO DEFINE ITS CALL.    *\n*                                                                     *\n* THE FOLLOWING JES2 INITIALIZATION PARAMETERS ARE REQUIRED FOR THE   *\n* EXITS TO FUNCTION CORRECTLY (MVS/SP JES2 1.3.6):                    *\n*                                                                     *\n*   LOAD     =EXIT1MIT   /* EXIT1A, EXIT1B, EXIT5, EXIT15, EXIT250 */ *\n*                                                                     *\n*   EXIT001  ROUTINE=(EXIT1A,EXIT1B),ENABLE  /* OUTPUT SEPERATORS  */ *\n*   EXIT005  ROUTINE=EXIT5,ENABLE    /* JES2 COMMAND PREPROCESSOR  */ *\n*   EXIT015  ROUTINE=EXIT15,ENABLE   /* OUTPUT DATASET/COPY SELECT */ *\n*   EXIT250  ROUTINE=EXIT250,ENABLE  /* FORMS SETUP SUPPRESSION    */ *\n*                                                                     *\n*   OUTDEF   DMNDSET=NO,             /* NO DEMAND SETUP            */ *\n*            USERSET=NO              /* NO USER DEMAND-SETUP       */ *\n*                                                                     *\n*   SPECIFY SEPDS ON XEROX 8700/9700 PRINTER DEFINITIONS              *\n*   SPECIFY NOSEPDS ON NON-XEROX PRINTER DEFINITIONS                  *\n*                                                                     *\n* NOTE: TO VERIFY THAT PROPER DJDE'S ARE BEING GENERATED, HAVE THE    *\n*       OPERATOR ISSUE $TPRTN,SEPDS=Y TO A NON-XEROX PRINTER AND SEND *\n*       SOME TEST OUTPUT TO IT.  WHEN DONE, ISSUE $TPRTN,SEPDS=N      *\n*                                                                     *\n*********************************************************************** JGA00080\n         EJECT                                                          JGA01570\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT                                                          JGA01570\n*********************************************************************** JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n* |                       E X I T 1 M I T                           | * JGA01570\n* +-----------------------------------------------------------------+ * JGA01570\n*********************************************************************** JGA00080\n         SPACE\nEXIT1MIT $MODULE NOTICE=NONE,                                         .XJGA01830\n               SYSP=(ON,GEN,NODATA,NOGEN,NOGEN),                      .XJGA01830\n               RESPA,     A  * MVS  FSI ORDER RESPONSE AREA DSECT     .XJGA01830\n               RPL,       A  * MVS  ACB REQUEST PARAMETER AREA DSECT  .XJGA01830\n               $BFW,      A  * HASP 3800 BUFFER WORK AREA DSECT       .XJGA01830\n               $BUFFER,   X  * HASP BUFFER (IOB) FORMAT               .XJGA01830\n               $DCT,      X  * HASP DEVICE CONTROL TABLE              .XJGA01830\n               $CAT,      X  * HASP CLASS ATTRIBUTE TABLE             .XJGA01690\n               $CMB,      A  * HASP CONSOLE MESSAGE BUFFER            .XJGA01690\n               $COMWORK,  A  * HASP COMMAND PCE WORK AREA DSECT       .XJGA01800\n               $ERA,      A  * HASP ERROR RECOVERY AREA DSECT         .XJGA01690\n               $EXITPL,   A  * HASP $EXIT PARAMETER LIST DSECT        .XJGA01690\n               $FMH,      A  * HASP SNA FUNCTION MANAGEMENT HEADER    .XJGA01690\n               $HASPEQU,  A  * HASP GENERAL REGISTER AND BIT EQUATES  .XJGA01730\n               $HCT,      X  * HASP COMMUNICATION TABLE               .XJGA01730\n               $IOT,      X  * HASP INPUT OUTPUT TABLE                .XJGA01700\n               $JCT,      X  * HASP JOB CONTROLL TABLE                .XJGA01680\n               $JOE,      X  * HASP JOB OUTPUT ELEMENT                .XJGA01720\n               $JOT,      A  * HASP JOB OUTOUT TABLE DSECT            .XJGA01710\n               $JQE,      X  * HASP JOB QUEUE ELEMENT                 .XJGA01710\n               $KIT,      X  * HASP CHECKPOINT INFORMATION TABLE      .XJGA01700\n               $LRC,      X  * HASP LOGICAL RECORD CHARACTERISTICS    .XJGA01790\n               $MIT,      X  * HASP MODULE INFORMATION TABLE          .XJGA01770\n               $MITETBL,  A  * HASP MIT ENTRY TABLE DSECT             .XJGA01730\n               $MODMAP,   A  * HASP MODULE MAP DSECT                  .XJGA01730\n               $NHD,      A  * HASP NETWORK HEADER/TRAILER DSECT      .XJGA01730\n               $NIT,      A  * HASP NODE INFORMATION TABLE            .XJGA01730\n               $NJTWORK,     * HASP JOB TRANSMITTER PCE WORK AREA     .X\n               $OCR,      A  * HASP OUTPUT CONTROL RECORD DSECT       .XJGA01730\n               $OCT,      A  * HASP OUTPUT CONTROL TABLE DESCT        .XJGA01730\n               $PCE,      X  * HASP PROCESSOR CONTROL ELEMENT         .XJGA01740\n               $PCIE,     A  * HASP PGM CONTROLLED INTERRUPT ELMNT    .XJGA01730\n               $PDDB,     X  * HASP PERIPHERAL DATA DEFINITION TABLE  .XJGA01740\n               $PPPWORK,  X  * HASP PRINT/PUNCH PCE WORK AREA DESCT   .XJGA01800\n               $PQE,      A  * HASP 3800 PAGE QUEUE ENTRY             .XJGA01730\n               $PQH,      A  * HASP 3800 PENDING PAGE QUEUE HEADER    .XJGA01730\n               $QSE,      X  * HASP SHARED QUEUE ELEMENT              .XJGA01790\n               $RAT,      A  * HASP REMOTE ATTRIBUTE TABLE DSECT      .XJGA01730\n               $RDRWORK,  X  * HASP INPUT SERVICE PCE WORK AREA DESCT .XJGA01800\n               $RDT,      A  * HASP REMOTE DESTINATION TABLE          .XJGA01800\n               $SCAT,     X  * HASP SYSOUT CLASS ATTRIBUTE TABLE      .XJGA01700\n               $SVT,      X  * HASP SUBSYSTEM VECTOR TABLE            .XJGA01780\n               $TAB,      X  * HASP TRACK ALLOCATION BLOCK            .XJGA01700\n               $XECB,     X  * HASP EXTENDED ECB TABLE                .XJGA01760\n               $XIT,         * HASP EXIT INFORMATION TABLE            .XJGA01750\n               $XRT          * HASP EXIT ROUTINE TABLE                . JGA01760\n         SPACE                                                          ACC00050\n         TITLE 'EXIT1MIT: HASP CONTROL BLOCKS'                          JGA01610\n         POP   PRINT                                                    JGA01640\n         PRINT NOGEN,NODATA                                             JGA01650\n         PRINT GEN,NODATA                                               JGA01650\n         SPACE 3                                                        JGA01820\n*                            * THE ORDER OF THE COPY STATEMENTS WHICH\n*                            * FOLLOW MUST BE MAINTAINED:\n         EJECT                                                          JGA01820\n         COPY  EXIT1REG      * GENERATE PRINT/PUNCH REGISTER SYMBOLS    ACC00060\n         EJECT                                                          ACC00050\n         COPY  EXIT1A        * GENERATE XEROX CONTROL PRINT SEP EXIT    ACC00060\n         EJECT                                                          ACC00050\n         COPY  EXIT1TAB      * GENERATE FORMS CROSS REFERENCE TABLES    ACC00060\n         SPACE                                                          ACC00050\nEXIT1A   CSECT               * RESET CONTROL SECTION TO PREVENT ASMERR  JGA01840\n         EJECT\n         COPY  EXIT1B        * GENERATE OLD BF PRINT SEPARATOR EXIT     ACC00060\n         EJECT\n         COPY  EXIT5         * GENERATE JES2 COMMAND PREPROCESSOR EXIT  ACC00060\n         EJECT\n         COPY  EXIT15        * GENERATE OUTPUT DS / COPY SELECT EXIT    ACC00060\n         EJECT\n         COPY  EXIT250       * GENERATE FORMS SETUP SUPPRESSION EXIT    ACC00060\n         EJECT                                                          ACC00050\n         TITLE 'EXIT1MIT: $MODEND - END OF MODULE'                      JGA01610\n         $MODEND             * MARK THE END OF THE MODULE\n         SPACE\n         END\n         SPACE\n********************** END OF MODULE EXIT1MIT *************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT1REG": {"ttr": 2826, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT1REG: REGISTER DEFINITIONS FOR JES2 EXITS'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                      E X I T 1 R E G                            | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*********************************************************************** JGA01570\n*                                                                     *\n* THIS MODULE CONTAINS REGISTER DEFINITIONS AND OTHER SYMBOLICS USED  *\n* BY THE JES2 EXITS WHICH MAKE UP BF'S XEROX FORMS CONTROL SYSTEM.    *\n* THE EXITS ARE EXIT1A, EXIT1B, EXIT5, EXIT15, AND EXIT250.  OTHER    *\n* ASSOCIATED MODULES ARE EXIT1MIT AND EXIT1TAB.                       *\n*                                                                     *\n* THIS MODULE IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.               *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |            R E G I S T E R   D E F I N I T I O N S              | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 3\nWA       EQU   R2                  WORK REGISTER A\nWB       EQU   R3                  WORK REGISTER B\nWC       EQU   R4                  WORK REGISTER C\nWD       EQU   R5                  WORK REGISTER D\nWE       EQU   R6                  WORK REGISTER E\nWF       EQU   R7                  WORK REGISTER F\n*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER\nPW       EQU   WA                  WORK REGISTER\nPBUF     EQU   WB                  BUFFER POINTER\nPC1      EQU   WC                  CCW REGISTER 1\nPC2      EQU   WD                  CCW REGISTER 2\nBASE4    EQU   WE                  PRPU THIRD LOCAL BASE REGISTER\nPL       EQU   WF                  INTERNAL LINKAGE REGISTER\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*              PPFLAG SWITCH DEFINITIONS                              *\n*                                                                     *\n***********************************************************************\n         SPACE 3\nPPWSW    EQU   X'80'               PRINT/PUNCH WRITE SWITCH\nPPDELSW  EQU   X'40'               PRINT/PUNCH SUSPEND SWITCH\nPPDALOC  EQU   X'20'               PRINT/PUNCH ALLOCATION IOT\nPRDELSW  EQU   X'10'               PRINT/PUNCH TERMINATION SWITCH\nPPFUNCI  EQU   X'08'               PUNCH INTERPRET REQUESTED\nPPRDERR  EQU   X'04'               PRINT/PUNCH DATA READ ERROR\nPPJCTIOT EQU   X'02'               PRINT/PUNCH JCT/IOT READ ERROR\nPPNEWS   EQU   X'01'               PRINT JES2-NEWS PROCESS SWITCH\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*              PPFLAG2 SWITCH DEFINITIONS                             *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPPTCEL   EQU   X'80'               TRACK-CELL DE-SPOOLING SWITCH\nPPRSW    EQU   X'40'               PRINT/PUNCH READ SWITCH\nPPCKPT   EQU   X'20'               PRINT/PUNCH CKPT-NEEDED SWITCH\nPPCKPTA  EQU   X'10'               PRINT/PUNCH CKPT-ALLOWED SWITCH\nPPCIWAIT EQU   X'08'               PRINT/PUNCH PCI WAIT SWITCH\nPPOPTJ   EQU   X'04'               PRINTER OPTCD=J SWITCH\nPPFDS    EQU   X'02'               FIRST SYSOUT DATA SET SWITCH\nPSMFDSER EQU   X'01'               DATA BUFFER ERROR FLAG FOR SMF\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*              PPFLAG3 SWITCH DEFINITIONS                             *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPPTRUNC  EQU   X'80'               TRUNCATE OUTPUT\nPPRECV0  EQU   X'40'               RECOVERY IN PROCESS\nPPDVNAVL EQU   X'20'               DEVICE NO LONGER AVAILABLE\nPP38CKPT EQU   X'10'               3800 CHECKPOINT FLAG\nPP3800S  EQU   X'08'               3800 REPOSITION BIT\nPPQSPND  EQU   X'04'               3800 PPQ SUSPEND BIT\nPP3800R  EQU   X'02'               3800 RESTART BIT\nPPINIT   EQU   X'01'               FIRST USE BIT\n********************* END OF MODULE EXIT1REG **************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT1TAB": {"ttr": 3073, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT1TAB: XEROX FORMS CROSS REFERENCE TABLES'\nEXIT1TAB DS    0D\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                      E X I T 1 T A B                            | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*********************************************************************** JGA01570\n* +-----------------------------------------------------------------+ *\n* |      X E R O X   F O R M S   C O N T R O L   T A B L E S        | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   NAME:        EXIT1TAB                                             *\n*                                                                     *\n*   DESCRIPTIVE NAME:  XEROX 8700/9700 FORMS CONTROL TABLES           *\n*                                                                     *\n*   FUNCTIONS:   TO PROVIDE JES2 EXIT1A, EXIT1B, EXIT5, EXIT15 AND    *\n*                EXIT250 WITH THE INTERNAL REFERENCE DATA TO CONTROL  *\n*                ONE OR MORE XEROX 8700/9700 PRINTERS.                *\n*                                                                     *\n*   DATE:        NOVEMBER 9, 1988                                     *\n*                                                                     *\n*   SOURCE:      SYS2.JES2136.EXITSRC(EXIT1TAB)                       *\n*                                                                     *\n*   DESTINATION: ASSEMBLY WITH SYS2.JES2136.EXITSRC(EXIT1MIT)         *\n*                                                                     *\n*   THIS MODULE IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.             *\n*                                                                     *\n*                                                                     *\n*   DESCRIPTION: THESE TABLES ARE AN ADOPTION OF THE FORMS CROSS      *\n*                REFERENCE TABLES WHICH WERE DESIGNED BY THE GREAT    *\n*                AMERICAN INSURANCE COMPANY, CINCINNATI, OHIO.        *\n*                THE TABLES CONSISTS OF THE FOLLOWING SEVEN ENTRY     *\n*                GROUPS WHICH SHOULD REMAIN IN THIS ORDER (TO         *\n*                MINIMIZE BASE REGISTER REQUIREMENTS FOR EXIT1A):     *\n*                                                                     *\n*                                                                     *\n*   .  PTMTE  :  PAPER TRAY MESSAGE TABLE ENTRY (80 BYTES).           *\n*                                                                     *\n*                EACH ENTRY CONTAINS A MESSAGE TEXT TO BE SHOWN       *\n*                ON THE 8700/9700 CONSOLE TELLING THE OPERATOR        *\n*                WHAT PAPER STOCK TO LOAD INTO THE PRINTER.           *\n*                                                                     *\n*                                                                     *\n*   .  PSMTE  :  PAGE SETUP MESSAGE TABLE ENTRY (80 BYTES).           *\n*                                                                     *\n*                SOME ENTRIES CONTAIN MESSAGE TEXT TO BE SHOWN        *\n*                ON THE 8700/9700 CONSOLE TELLING THE OPERATOR        *\n*                ABOUT THE JOB THAT IS PROCESSED.  THESE ENTRIES      *\n*                HELP OPERATOR KEEP TRACK OF THE JOBS THAT ARE        *\n*                PURGED OFF JES2, AND ALSO PROCESSED BY THE           *\n*                8700/9700 PRINTER.  OTHER ENTRIES SET THE PRINTER    *\n*                FOR DUPLEX OR SIMPLEX OPERATION, OR PERFORM OTHER    *\n*                PRINTER SETUP FUNCTIONS.                             *\n*                                                                     *\n*                                                                     *\n*   .  FCRTE  :  FORMS CROSS REFERENCE TABLE ENTRY (16 BYTES).        *\n*                                                                     *\n*                EACH ENTRY CONTAINS A FORM NAME, THE ADDRESS OF THE  *\n*                DJDE FORMS IMAGE TABLE ENTRY (DFITE), THE ADDRESS    *\n*                OF ITS DJDE VFU IMAGE TABLE ENTRY (DVITE), A MODE    *\n*                BYTE, AND A PAPER STOCK NUMBER.                      *\n*                     NOTE THAT THERE ARE ACTUALLY TWO TABLES:        *\n*                FFRMTABF IS FOR SYSOUT CLASS 'F' (OPERATOR SETUP).   *\n*                XFRMTABX IS FOR SYSOUT CLASSES OTHER THAN 'F'        *\n*                     (NO OPERATOR SETUP - STD 3-HOLE DUPLEX).        *\n*                                                                     *\n*                                                                     *\n*   .  DFITE  :  DJDE FORMS IMAGE TABLE ENTRY   (80 BYTES).           *\n*                                                                     *\n*                EACH ENTRY CONTAINS A FORM(S), FORMAT, DATA          *\n*                LENGTH, OR SHIFT REQUIREMENT.                        *\n*                                                                     *\n*                                                                     *\n*   .  DVITE  :  DJDE VFU IMAGE TABLE ENTRY     (80 BYTES).           *\n*                                                                     *\n*                EACH ENTRY CONTAINS A VFU IMAGE, PRECEDED BY         *\n*                A HALF WORD WHICH COUNTS THE NUMBER OF LINES         *\n*                IN THE ENTRY.                                        *\n*                                                                     *\n*                                                                     *\n*   .  SCTE   :  SYSOUT CLASS TABLE ENTRY       (8 BYTES).            *\n*                                                                     *\n*                EACH ENTRY NAMES A SYSOUT CLASS, SPECIFIES WHICH     *\n*                JES2 PRINTER IT SHOULD PRINT ON, AND WHICH FORMS     *\n*                CROSS REFERENCE TABLE TO USE.                        *\n*                                                                     *\n*                                                                     *\n*   .  PRNTRTAB  PRINTER TABLE ENTRY            (12 BYTES).           *\n*                                                                     *\n*                EACH ENTRY NAMES A JES2 PRINTER AND SPECIFIES ITS    *\n*                TYPE.  FIELDS ARE USED TO CONTAIN DATA NEEDED BY     *\n*                THE JES2 EXITS DURRING THEIR OPERATION.              *\n*                                                                     *\n*   A DSECT FOR PRNTRTAB OCCURS AT THE END.                           *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |   P A P E R   T R A Y   M E S S A G E   T A B L E   E N T R Y   | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nPTMTE    DS    0D\n         SPACE\nSTKINDX  DS    0H\n         SPACE\nPSTOCK00 DC    CL80'  DJDE OTEXT=(''-*-LOAD UNKN STOCK PAPER-- CCPLEX MX\n               ODE''),;'   NOTE: 00 MUST ALWAYS REMAIN UNKNOWN\n         SPACE\n* NOTE: EXIT1A WILL FILL IN \"UNKN\" WITH FORM ID FOR UNFOUND PTMTE'S.\n         SPACE\nPSTOCK01 DC    CL80'  DJDE OTEXT=(''-*-LOAD STD 3-HOLE PAPER-- CCPLEX MX\n               ODE''),;'\n         SPACE\nPSTOCK02 DC    CL80'  DJDE OTEXT=(''-*-LOAD WHT NOHOLE PAPER-- CCPLEX MX\n               ODE''),;'   !!! SEE NOTE BELOW !!!\n         SPACE\n* NOTE: 02 MUST ALWAYS REMAIN WHITE NOHOLE BECAUSE OF SPECIAL LOGIC IN\n*       EXIT1A WHICH RECOGNIZES NO NEED TO SWITCH ORIENTATION BETWEEN\n*       DUPLEX AND SIMPLEX FOR WHITE NOHOLE PAPER.\n         SPACE\nPSTOCK03 DC    CL80'  DJDE OTEXT=(''-*-LOAD STATEMENT FORMS--- CCPLEX MX\n               ODE''),;'\n         SPACE\nPSTOCK04 DC    CL80'  DJDE OTEXT=(''-*-LOAD B.F. LETTERHEAD--- CCPLEX MX\n               ODE''),;'\n         SPACE\nPSTOCK05 DC    CL80'  DJDE OTEXT=(''-*-LOAD BFL1 FORM XLH2HO-- CCPLEX MX\n               ODE''),;'\n         SPACE\nPSTOCK06 DC    CL80'  DJDE OTEXT=(''-*-LOAD BUFF W/PERF LEFT-- CCPLEX MX\n               ODE''),;'\n         SPACE\nPSTOCK07 DC    CL80'  DJDE OTEXT=(''-*-LOAD WHT 110 LB PAPER-- CCPLEX MX\n               ODE''),;'\n         SPACE 3\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |  P A G E    S E T U P   M E S S A G E   T A B L E   E N T R Y   | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nPSMTE    DS    0D                *\nHOLDMSG  DC    CL80'  DJDE OTEXT=(''-*-*-CHANGE PAPER NOW-*-*-'',WAIT),X\n               ;'\n         SPACE 2\nDPLXDJDE DC    CL80'  DJDE DUPLEX=YES,;'\n         SPACE 2\nSPLXDJDE DC    CL80'  DJDE DUPLEX=NO,;'\n         SPACE 2\nNUFRDJDE DC    CL80'  DJDE SIDE=(NUFRONT),;'\n         SPACE 2\nJOBMSG   DC    CL80'  DJDE OTEXT=(''-0- JNNNN XXXXXXXX C-FFFF  CCPLEX''X\n               ),;'\n         SPACE 2\nMODECHG  DC    CL80'  DJDE OTEXT=(''-*- PRINT SWITCHING TO  CCPLEX MODEX\n               ''),;'\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* | F O R M S  C R O S S  R E F E R E N C E  T A B L E  E N T R Y   | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*             FORMS NAME (4 BYTES)                                    *\n*             |        COPY COUNT (1 BYTE - NOT CURRENTLY SUPPORTED)  *\n*             |        | ADDRESS(DFITE) (3 BYTES)                     *\n*             |        | |      MODE FLAGS (1 BYTE - SEE BELOW)       *\n*             |        | |      | RESERVED (3 BYTES)                  *\n*             |        | |      | |      STOCK INDEX (1 BYTE)         *\n*             |        | |      | |      | ADDRESS(DVITE) (3 BYTES)   *\n*             |        | |      | |      | |                          *\n*            +|--------|-|------|-|------|-|-----+                    *\n*            |FORMNAME|NN......|DD......|II......|                    *\n*            +-----------------------------------+                    *\n***********************************************************************\n         SPACE 2\n*        MODE FLAGS (BIT SETTINGS)\n         SPACE\nMFSUPFCT EQU   B'10000000'  80  SUPPRESS FORMS CONTROL\nMFSHORTL EQU   B'01000000'  40  SHORTLINE FORMAT (LIKE 1-UP PORTRAIT)\nMFSIXLPI EQU   B'00100000'  20  SIX LINES PER INCH\nMFNUFRNT EQU   B'00010000'  10  SUPPLY NUFRONT BETWEEN DATASETS/COPIES\nMFDUPLEX EQU   B'00001000'  08  DUPLEX MODE\nMFFOURLP EQU   B'00000100'  04  FOUR LOGICAL PAGES PER SIDE\nMFTWOLPS EQU   B'00000010'  02  TWO LOGICAL PAGES PER SIDE\nMFONELPS EQU   B'00000001'  01  ONE LOGICAL PAGE PER SIDE\n         SPACE 2\nFCRTE    DS    0D\n         SPACE\nXFRMTABX DS    0D ** BEGINNING OF SYSOUT=(X,,FORM) FORMS TABLE **\n         SPACE\n*                 SYSOUT=(X,,FORM) IS USED FOR NO OPERATOR SETUP FORMS.\n*                 WHERE X IS ANY OUTPUT CLASS EXCEPT 'F'.\n*                 MODE AND STOCK SHOULD INDICATE STD 3-HOLE DUPLEX.\n         SPACE\n* NOTE:  FIRST ENTRY IS DEFAULT IF NO FORM ID SUPPLIED:\n         SPACE\nXSTDP  DC  C'STD.',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLL8  DC  C'DLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLB8  DC  C'DLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nXDLS8  DC  C'DLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nXD4L8  DC  C'D4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'01',AL3(VFU1)\nXD4B8  DC  C'D4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'01',AL3(VFU1)\nXD4S8  DC  C'D4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'01',AL3(VFU1)\nXDEL8  DC  C'DEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDEB8  DC  C'DEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nXDES8  DC  C'DES8',X'01',AL3(DXXES8),X'19',AL3(0),X'01',AL3(VFU1)\nXDFL8  DC  C'DFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'01',AL3(VFU1)\nXDFB8  DC  C'DFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'01',AL3(VFU1)\nXDFS8  DC  C'DFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'01',AL3(VFU1)\nXSLL8  DC  C'SLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXSLB8  DC  C'SLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nXSLS8  DC  C'SLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nXS4L8  DC  C'S4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'01',AL3(VFU1)\nXS4B8  DC  C'S4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'01',AL3(VFU1)\nXS4S8  DC  C'S4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'01',AL3(VFU1)\nXSEL8  DC  C'SEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'01',AL3(VFU1)\nXSEB8  DC  C'SEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nXSES8  DC  C'SES8',X'01',AL3(DXXES8),X'19',AL3(0),X'01',AL3(VFU1)\nXSFL8  DC  C'SFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'01',AL3(VFU1)\nXSFB8  DC  C'SFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'01',AL3(VFU1)\nXSFS8  DC  C'SFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'01',AL3(VFU1)\nXBLL8  DC  C'BLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXBLB8  DC  C'BLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nXBLS8  DC  C'BLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nXB4L8  DC  C'B4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'01',AL3(VFU1)\nXB4B8  DC  C'B4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'01',AL3(VFU1)\nXB4S8  DC  C'B4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'01',AL3(VFU1)\nXBEL8  DC  C'BEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'01',AL3(VFU1)\nXBEB8  DC  C'BEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nXBES8  DC  C'BES8',X'01',AL3(DXXES8),X'19',AL3(0),X'01',AL3(VFU1)\nXBFL8  DC  C'BFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'01',AL3(VFU1)\nXBFB8  DC  C'BFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'01',AL3(VFU1)\nXBFS8  DC  C'BFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'01',AL3(VFU1)\nXNLL8  DC  C'NLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nXNLB8  DC  C'NLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nXNLS8  DC  C'NLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nXN4L8  DC  C'N4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'01',AL3(VFU1)\nXN4B8  DC  C'N4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'01',AL3(VFU1)\nXN4S8  DC  C'N4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'01',AL3(VFU1)\nXNEL8  DC  C'NEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'01',AL3(VFU1)\nXNEB8  DC  C'NEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nXNES8  DC  C'NES8',X'01',AL3(DXXES8),X'19',AL3(0),X'01',AL3(VFU1)\nXNFL8  DC  C'NFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'01',AL3(VFU1)\nXNFB8  DC  C'NFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'01',AL3(VFU1)\nXNFS8  DC  C'NFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'01',AL3(VFU1)\nXDPL8  DC  C'DPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'01',AL3(VFU2)\nXDPB8  DC  C'DPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nXDPS8  DC  C'DPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'01',AL3(VFU2)\nXDPW8  DC  C'DPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nXD2L8  DC  C'D2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'01',AL3(VFU1)\nXD2B8  DC  C'D2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nXD2S8  DC  C'D2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'01',AL3(VFU1)\nXSPL8  DC  C'SPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'01',AL3(VFU2)\nXSPB8  DC  C'SPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nXSPS8  DC  C'SPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'01',AL3(VFU2)\nXSPW8  DC  C'SPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nXS2L8  DC  C'S2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'01',AL3(VFU1)\nXS2B8  DC  C'S2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nXS2S8  DC  C'S2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'01',AL3(VFU1)\nXBPL8  DC  C'BPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'01',AL3(VFU2)\nXBPB8  DC  C'BPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nXBPS8  DC  C'BPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'01',AL3(VFU2)\nXBPW8  DC  C'BPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nXB2L8  DC  C'B2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'01',AL3(VFU1)\nXB2B8  DC  C'B2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nXB2S8  DC  C'B2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'01',AL3(VFU1)\nXNPL8  DC  C'NPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'01',AL3(VFU2)\nXNPB8  DC  C'NPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nXNPS8  DC  C'NPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'01',AL3(VFU2)\nXNPW8  DC  C'NPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nXN2L8  DC  C'N2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'01',AL3(VFU1)\nXN2B8  DC  C'N2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nXN2S8  DC  C'N2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'01',AL3(VFU1)\nXDPB6  DC  C'DPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'01',AL3(VFU6)\nXSPB6  DC  C'SPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'01',AL3(VFU6)\nXBPB6  DC  C'BPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'01',AL3(VFU6)\nXNPB6  DC  C'NPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'01',AL3(VFU6)\nXNOW   DC  C'NOW ',X'01',AL3(DXNOW),X'59',AL3(0),X'01',AL3(VFU3)\nXREG   DC  C'REG ',X'01',AL3(DXREG),X'59',AL3(0),X'01',AL3(VFU3)\nXQDEF  DC  C'QDEF',X'01',AL3(DXQDEF),X'59',AL3(0),X'01',AL3(VFU4)\nXDEFC  DC  C'DEFC',X'01',AL3(DXDEFC),X'19',AL3(0),X'01',AL3(VFU1)\nXCPI   DC  C'CPI ',X'01',AL3(DXCPI),X'19',AL3(0),X'01',AL3(VFU1)\nXCPIS  DC  C'CPIS',X'01',AL3(DXCPI),X'19',AL3(0),X'01',AL3(VFU1)\nXICL   DC  C'ICL ',X'01',AL3(DXICL),X'19',AL3(0),X'01',AL3(VFU1)\nXAP    DC  C'AP  ',X'01',AL3(DXAP),X'19',AL3(0),X'01',AL3(VFU1)\nXFA    DC  C'FA  ',X'01',AL3(DXFA),X'19',AL3(0),X'01',AL3(VFU1)\nXHEAD  DC  C'HEAD',X'01',AL3(DXHEAD),X'19',AL3(0),X'01',AL3(VFU1)\nXEAA1  DC  C'EAA1',X'01',AL3(DXEAA1),X'19',AL3(0),X'01',AL3(VFU5)\nXBFLH  DC  C'BFLH',X'01',AL3(DXBFLH),X'59',AL3(0),X'01',AL3(VFU2)\nXUSR1  DC  C'USR1',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nXUSR2  DC  C'USR2',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nXUSR3  DC  C'USR3',X'01',AL3(DXXLL8),X'80',AL3(0),X'00',AL3(VFU1)\nX1098  DC  C'1098',X'01',AL3(DX1098),X'79',AL3(0),X'01',AL3(VFU1)\nX1099  DC  C'1099',X'01',AL3(DX1099),X'79',AL3(0),X'01',AL3(VFU1)\nXSD99  DC  C'SD99',X'01',AL3(DXSD99),X'79',AL3(0),X'01',AL3(VFU1)\nXBFL1  DC  C'BFL1',X'01',AL3(DXBFL1),X'59',AL3(0),X'01',AL3(VFU2)\nXILXS  DC  C'ILXS',X'01',AL3(DXILEX),X'19',AL3(0),X'01',AL3(VFU1)\nXILXD  DC  C'ILXD',X'01',AL3(DXILEX),X'19',AL3(0),X'01',AL3(VFU1)\nXILTB  DC  C'ILTB',X'01',AL3(DXILTB),X'19',AL3(0),X'01',AL3(VFU1)\nXILIN  DC  C'ILIN',X'01',AL3(DXILIN),X'69',AL3(0),X'01',AL3(VFU2)\nXILST  DC  C'ILST',X'01',AL3(DXILST),X'69',AL3(0),X'01',AL3(VFU2)\nXILS1  DC  C'ILS1',X'01',AL3(DXILS1),X'69',AL3(0),X'01',AL3(VFU2)\nXILCR  DC  C'ILCR',X'01',AL3(DXILCR),X'79',AL3(0),X'01',AL3(VFU2)\nXILU1  DC  C'ILU1',X'01',AL3(DXILU1),X'79',AL3(0),X'01',AL3(VFU2)\nXILU2  DC  C'ILU2',X'01',AL3(DXILU2),X'7B',AL3(0),X'01',AL3(VFU2)\nXILU3  DC  C'ILU3',X'01',AL3(DXILU3),X'7B',AL3(0),X'01',AL3(VFU2)\nXILU4  DC  C'ILU4',X'01',AL3(DXILU4),X'7B',AL3(0),X'01',AL3(VFU2)\nXSVHR  DC  C'SVHR',X'01',AL3(DXSVHR),X'19',AL3(0),X'01',AL3(VFU1)\nX5498  DC  C'5498',X'01',AL3(DX5498),X'69',AL3(0),X'01',AL3(VFU2)\n         SPACE\nXFFFF  DC  16X'FF'    ** END OF SYSOUT=X FORMS TABLE **\n         EJECT\nFFRMTABF DS    0D ** BEGINNING OF SYSOUT=(F,,FORM) FORMS TABLE **\n         SPACE\n*                 SYSOUT=(F,,FORM) IS USED FOR OPERATOR SETUP FORMS.\n         SPACE\n* NOTE:  FIRST ENTRY IS DEFAULT IF NO FORM ID SUPPLIED:\n         SPACE\nFSTDP  DC  C'STD.',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nFDLL8  DC  C'DLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'01',AL3(VFU1)\nFDLB8  DC  C'DLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'01',AL3(VFU1)\nFDLS8  DC  C'DLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'01',AL3(VFU1)\nFD4L8  DC  C'D4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'01',AL3(VFU1)\nFD4B8  DC  C'D4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'01',AL3(VFU1)\nFD4S8  DC  C'D4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'01',AL3(VFU1)\nFDEL8  DC  C'DEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'01',AL3(VFU1)\nFDEB8  DC  C'DEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'01',AL3(VFU1)\nFDES8  DC  C'DES8',X'01',AL3(DXXES8),X'19',AL3(0),X'01',AL3(VFU1)\nFDFL8  DC  C'DFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'01',AL3(VFU1)\nFDFB8  DC  C'DFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'01',AL3(VFU1)\nFDFS8  DC  C'DFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'01',AL3(VFU1)\nFSLL8  DC  C'SLL8',X'01',AL3(DXXLL8),X'01',AL3(0),X'01',AL3(VFU1)\nFSLB8  DC  C'SLB8',X'01',AL3(DXXLB8),X'01',AL3(0),X'01',AL3(VFU1)\nFSLS8  DC  C'SLS8',X'01',AL3(DXXLS8),X'01',AL3(0),X'01',AL3(VFU1)\nFS4L8  DC  C'S4L8',X'01',AL3(DXX4L8),X'14',AL3(0),X'01',AL3(VFU1)\nFS4B8  DC  C'S4B8',X'01',AL3(DXX4B8),X'14',AL3(0),X'01',AL3(VFU1)\nFS4S8  DC  C'S4S8',X'01',AL3(DXX4S8),X'14',AL3(0),X'01',AL3(VFU1)\nFSEL8  DC  C'SEL8',X'01',AL3(DXXEL8),X'01',AL3(0),X'01',AL3(VFU1)\nFSEB8  DC  C'SEB8',X'01',AL3(DXXEB8),X'01',AL3(0),X'01',AL3(VFU1)\nFSES8  DC  C'SES8',X'01',AL3(DXXES8),X'01',AL3(0),X'01',AL3(VFU1)\nFSFL8  DC  C'SFL8',X'01',AL3(DXXFL8),X'01',AL3(0),X'01',AL3(VFU1)\nFSFB8  DC  C'SFB8',X'01',AL3(DXXFB8),X'01',AL3(0),X'01',AL3(VFU1)\nFSFS8  DC  C'SFS8',X'01',AL3(DXXFS8),X'01',AL3(0),X'01',AL3(VFU1)\nFBLL8  DC  C'BLL8',X'01',AL3(DXXLL8),X'19',AL3(0),X'02',AL3(VFU1)\nFBLB8  DC  C'BLB8',X'01',AL3(DXXLB8),X'19',AL3(0),X'02',AL3(VFU1)\nFBLS8  DC  C'BLS8',X'01',AL3(DXXLS8),X'19',AL3(0),X'02',AL3(VFU1)\nFB4L8  DC  C'B4L8',X'01',AL3(DXX4L8),X'1C',AL3(0),X'02',AL3(VFU1)\nFB4B8  DC  C'B4B8',X'01',AL3(DXX4B8),X'1C',AL3(0),X'02',AL3(VFU1)\nFB4S8  DC  C'B4S8',X'01',AL3(DXX4S8),X'1C',AL3(0),X'02',AL3(VFU1)\nFBEL8  DC  C'BEL8',X'01',AL3(DXXEL8),X'19',AL3(0),X'02',AL3(VFU1)\nFBEB8  DC  C'BEB8',X'01',AL3(DXXEB8),X'19',AL3(0),X'02',AL3(VFU1)\nFBES8  DC  C'BES8',X'01',AL3(DXXES8),X'19',AL3(0),X'02',AL3(VFU1)\nFBFL8  DC  C'BFL8',X'01',AL3(DXXFL8),X'19',AL3(0),X'02',AL3(VFU1)\nFBFB8  DC  C'BFB8',X'01',AL3(DXXFB8),X'19',AL3(0),X'02',AL3(VFU1)\nFBFS8  DC  C'BFS8',X'01',AL3(DXXFS8),X'19',AL3(0),X'02',AL3(VFU1)\nFNLL8  DC  C'NLL8',X'01',AL3(DXXLL8),X'01',AL3(0),X'02',AL3(VFU1)\nFNLB8  DC  C'NLB8',X'01',AL3(DXXLB8),X'01',AL3(0),X'02',AL3(VFU1)\nFNLS8  DC  C'NLS8',X'01',AL3(DXXLS8),X'01',AL3(0),X'02',AL3(VFU1)\nFN4L8  DC  C'N4L8',X'01',AL3(DXX4L8),X'14',AL3(0),X'02',AL3(VFU1)\nFN4B8  DC  C'N4B8',X'01',AL3(DXX4B8),X'14',AL3(0),X'02',AL3(VFU1)\nFN4S8  DC  C'N4S8',X'01',AL3(DXX4S8),X'14',AL3(0),X'02',AL3(VFU1)\nFNEL8  DC  C'NEL8',X'01',AL3(DXXEL8),X'01',AL3(0),X'02',AL3(VFU1)\nFNEB8  DC  C'NEB8',X'01',AL3(DXXEB8),X'01',AL3(0),X'02',AL3(VFU1)\nFNES8  DC  C'NES8',X'01',AL3(DXXES8),X'01',AL3(0),X'02',AL3(VFU1)\nFNFL8  DC  C'NFL8',X'01',AL3(DXXFL8),X'01',AL3(0),X'02',AL3(VFU1)\nFNFB8  DC  C'NFB8',X'01',AL3(DXXFB8),X'01',AL3(0),X'02',AL3(VFU1)\nFNFS8  DC  C'NFS8',X'01',AL3(DXXFS8),X'01',AL3(0),X'02',AL3(VFU1)\nFDPL8  DC  C'DPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'01',AL3(VFU2)\nFDPB8  DC  C'DPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'01',AL3(VFU2)\nFDPS8  DC  C'DPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'01',AL3(VFU2)\nFDPW8  DC  C'DPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'01',AL3(VFU2)\nFD2L8  DC  C'D2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'01',AL3(VFU1)\nFD2B8  DC  C'D2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'01',AL3(VFU1)\nFD2S8  DC  C'D2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'01',AL3(VFU1)\nFSPL8  DC  C'SPL8',X'01',AL3(DXXPL8),X'41',AL3(0),X'01',AL3(VFU2)\nFSPB8  DC  C'SPB8',X'01',AL3(DXXPB8),X'41',AL3(0),X'01',AL3(VFU2)\nFSPS8  DC  C'SPS8',X'01',AL3(DXXPS8),X'41',AL3(0),X'01',AL3(VFU2)\nFSPW8  DC  C'SPW8',X'01',AL3(DXXPW8),X'41',AL3(0),X'01',AL3(VFU2)\nFS2L8  DC  C'S2L8',X'01',AL3(DXX2L8),X'12',AL3(0),X'01',AL3(VFU1)\nFS2B8  DC  C'S2B8',X'01',AL3(DXX2B8),X'12',AL3(0),X'01',AL3(VFU1)\nFS2S8  DC  C'S2S8',X'01',AL3(DXX2S8),X'12',AL3(0),X'01',AL3(VFU1)\nFBPL8  DC  C'BPL8',X'01',AL3(DXXPL8),X'59',AL3(0),X'02',AL3(VFU2)\nFBPB8  DC  C'BPB8',X'01',AL3(DXXPB8),X'59',AL3(0),X'02',AL3(VFU2)\nFBPS8  DC  C'BPS8',X'01',AL3(DXXPS8),X'59',AL3(0),X'02',AL3(VFU2)\nFBPW8  DC  C'BPW8',X'01',AL3(DXXPW8),X'59',AL3(0),X'02',AL3(VFU2)\nFB2L8  DC  C'B2L8',X'01',AL3(DXX2L8),X'1A',AL3(0),X'02',AL3(VFU1)\nFB2B8  DC  C'B2B8',X'01',AL3(DXX2B8),X'1A',AL3(0),X'02',AL3(VFU1)\nFB2S8  DC  C'B2S8',X'01',AL3(DXX2S8),X'1A',AL3(0),X'02',AL3(VFU1)\nFNPL8  DC  C'NPL8',X'01',AL3(DXXPL8),X'41',AL3(0),X'02',AL3(VFU2)\nFNPB8  DC  C'NPB8',X'01',AL3(DXXPB8),X'41',AL3(0),X'02',AL3(VFU2)\nFNPS8  DC  C'NPS8',X'01',AL3(DXXPS8),X'41',AL3(0),X'02',AL3(VFU2)\nFNPW8  DC  C'NPW8',X'01',AL3(DXXPW8),X'41',AL3(0),X'02',AL3(VFU2)\nFN2L8  DC  C'N2L8',X'01',AL3(DXX2L8),X'12',AL3(0),X'02',AL3(VFU1)\nFN2B8  DC  C'N2B8',X'01',AL3(DXX2B8),X'12',AL3(0),X'02',AL3(VFU1)\nFN2S8  DC  C'N2S8',X'01',AL3(DXX2S8),X'12',AL3(0),X'02',AL3(VFU1)\nFDPB6  DC  C'DPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'01',AL3(VFU6)\nFSPB6  DC  C'SPB6',X'01',AL3(DXXPB6),X'61',AL3(0),X'01',AL3(VFU6)\nFBPB6  DC  C'BPB6',X'01',AL3(DXXPB6),X'79',AL3(0),X'02',AL3(VFU6)\nFNPB6  DC  C'NPB6',X'01',AL3(DXXPB6),X'61',AL3(0),X'02',AL3(VFU6)\nFNOW   DC  C'NOW ',X'01',AL3(DXNOW),X'41',AL3(0),X'03',AL3(VFU3)\nFREG   DC  C'REG ',X'01',AL3(DXREG),X'41',AL3(0),X'03',AL3(VFU3)\nFQDEF  DC  C'QDEF',X'01',AL3(DXQDEF),X'41',AL3(0),X'03',AL3(VFU4)\nFDEFC  DC  C'DEFC',X'01',AL3(DXDEFC),X'19',AL3(0),X'01',AL3(VFU1)\nFCPI   DC  C'CPI ',X'01',AL3(DXCPI),X'19',AL3(0),X'01',AL3(VFU1)\nFCPIS  DC  C'CPIS',X'01',AL3(DXCPIS),X'01',AL3(0),X'01',AL3(VFU1)\nFICL   DC  C'ICL ',X'01',AL3(DXICL),X'19',AL3(0),X'01',AL3(VFU1)\nFAP    DC  C'AP  ',X'01',AL3(DXAP),X'19',AL3(0),X'01',AL3(VFU1)\nFFA    DC  C'FA  ',X'01',AL3(DXFA),X'19',AL3(0),X'01',AL3(VFU1)\nFHEAD  DC  C'HEAD',X'01',AL3(DXHEAD),X'19',AL3(0),X'01',AL3(VFU1)\nFEAA1  DC  C'EAA1',X'01',AL3(DXEAA1),X'19',AL3(0),X'02',AL3(VFU5)\nFBFLH  DC  C'BFLH',X'01',AL3(DXBFLH),X'41',AL3(0),X'04',AL3(VFU2)\nFUSR1  DC  C'USR1',X'01',AL3(DXXLL8),X'09',AL3(0),X'01',AL3(VFU1)\nFUSR2  DC  C'USR2',X'01',AL3(DXXLL8),X'01',AL3(0),X'01',AL3(VFU1)\nFUSR3  DC  C'USR3',X'01',AL3(DXXLL8),X'80',AL3(0),X'00',AL3(VFU1)\nF1098  DC  C'1098',X'01',AL3(DX1098),X'79',AL3(0),X'02',AL3(VFU1)\nF1099  DC  C'1099',X'01',AL3(DX1099),X'61',AL3(0),X'02',AL3(VFU1)\nFSD99  DC  C'SD99',X'01',AL3(DXSD99),X'79',AL3(0),X'02',AL3(VFU1)\nFBFL1  DC  C'BFL1',X'01',AL3(DXBFL1),X'41',AL3(0),X'05',AL3(VFU2)\nFILXS  DC  C'ILXS',X'01',AL3(DXILEX),X'01',AL3(0),X'01',AL3(VFU1)\nFILXD  DC  C'ILXD',X'01',AL3(DXILEX),X'19',AL3(0),X'01',AL3(VFU1)\nFILTB  DC  C'ILTB',X'01',AL3(DXILTB),X'19',AL3(0),X'01',AL3(VFU1)\nFILIN  DC  C'ILIN',X'01',AL3(DXILIN),X'69',AL3(0),X'06',AL3(VFU2)\nFILST  DC  C'ILST',X'01',AL3(DXILST),X'69',AL3(0),X'06',AL3(VFU2)\nFILS1  DC  C'ILS1',X'01',AL3(DXILS1),X'69',AL3(0),X'06',AL3(VFU2)\nFILCR  DC  C'ILCR',X'01',AL3(DXILCR),X'61',AL3(0),X'07',AL3(VFU2)\nFILU1  DC  C'ILU1',X'01',AL3(DXILU1),X'61',AL3(0),X'07',AL3(VFU2)\nFILU2  DC  C'ILU2',X'01',AL3(DXILU2),X'63',AL3(0),X'02',AL3(VFU2)\nFILU3  DC  C'ILU3',X'01',AL3(DXILU3),X'63',AL3(0),X'02',AL3(VFU2)\nFILU4  DC  C'ILU4',X'01',AL3(DXILU4),X'63',AL3(0),X'02',AL3(VFU2)\nFSVHR  DC  C'SVHR',X'01',AL3(DXSVHR),X'01',AL3(0),X'02',AL3(VFU1)\nF5498  DC  C'5498',X'01',AL3(DX5498),X'69',AL3(0),X'02',AL3(VFU2)\n         SPACE\nFFFFF  DC  16X'FF'    ** END OF SYSOUT=F FORMS TABLE **\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |   D J D E    F O R M S    I M A G E    T A B L E    E N T R Y   | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nDFITE  DS 0D\n         SPACE\nDXXLL8 DC CL80'  DJDE FORMS=STD,FORMAT=PDE2,DATA=(0,132),;'  DEFAULT\nDXXLB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE2,;'    1UP,LAND,BLANK,8LP\nDXXLS8 DC CL80'  DJDE FORMS=88SH,FORMAT=PDE2,;'    1UP,LAND,SHADED,8LPI\n*\nDXX4L8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'  X 4UP,LAND,LINES,8LPI\nDXX4B8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'  X 4UP,LAND,BLANK,8LP\nDXX4S8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'  X 4UP,LAND,SHADED,8LPI\n*\nDXXEL8 DC CL80'  DJDE FORMS=NONE,FORMAT=PD9,DATA=(0,200),;' X EXTENDED\nDXXEB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PD9,DATA=(0,200),;'   EXTENDED\nDXXES8 DC CL80'  DJDE FORMS=NONE,FORMAT=PD9,DATA=(0,200),;' X EXTENDED\n*\nDXXFL8 DC CL80'  DJDE FORMS=STD,FORMAT=PDE17,;'  LC1UP,LAND,LINES,8LPI\nDXXFB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE17,;' LC1UP,LAND,BLANK,8LP\nDXXFS8 DC CL80'  DJDE FORMS=88SH,FORMAT=PDE17,;' LC1UP,LAND,SHADED,8LPI\n*\nDXX2L8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'  X 2UP,PORT,LINES,8LPI\nDXX2B8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'    2UP,PORT,BLANK,8LPI\nDXX2S8 DC CL80'  DJDE FORMS=NONE,FORMAT=PDE3,;'  X 2UP,PORT,SHADED,8LPI\n*\nDXXPL8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;' X PORT\nDXXPB8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;'   PORT\nDXXPS8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;' X PORT\n*\nDXXPW8 DC CL80'  DJDE FORMS=NONE,FORMAT=PORT1,DATA=(0,100),;'   WIDE\n*\nDXXPB6 DC CL80'  DJDE JDE=XPB6,;'                            PORT 6 LPI\n*\nDXNOW  DC CL80'  DJDE FORMS=NONE,FORMAT=PDE9,DATA=(1,95),MODIFY=FNT1,;'\nDXREG  DC CL80'  DJDE FORMS=NONE,FORMAT=PDE9,DATA=(1,95),MODIFY=FNT1,;'\nDXQDEF DC CL80'  DJDE FORMS=NONE,FORMAT=PDE10,DATA=(1,95),MODIFY=FNT3,;X\n               '\nDXDEFC DC CL80'  DJDE JDE=SVM337,;'   DEFERRED COMP DUPLEX REPORTS\nDXCPI  DC CL80'  DJDE JDE=CPIJDE,;'   CPI DUPLEX\nDXCPIS DC CL80'  DJDE JDE=CPISDE,;'   CPI SIMPLEX\nDXICL  DC CL80'  DJDE JDE=ICLJDE,;'   ICL\nDXAP   DC CL80'  DJDE JDE=APJDE,;'    AP\nDXFA   DC CL80'  DJDE JDE=FAJDE,;'    FA\nDXHEAD DC CL80'  DJDE JDE=HEDJDE,;'   HEADLINE (DEPOSIT SYSTEM)\nDXEAA1 DC CL80'  DJDE FORMS=EAA1,BFORM=EAA2,FORMAT=PDE5,SHIFT=NO,;'\nDXBFLH DC CL80'  DJDE FORMS=NONE,FORMAT=PORPDE,DATA=(0,77),;' X LETTER\nDX1098 DC CL80'  DJDE JDE=SV1098,;'   1098'S\nDX1099 DC CL80'  DJDE JDE=SV1099,;'   1099'S\nDXSD99 DC CL80'  DJDE JDE=S1099D,;'   1099-OID'S\nDXBFL1 DC CL80'  DJDE JDE=BFL1,;'     AML LETTERS OF INTENT\nDXILEX DC CL80'  DJDE JDE=ILEX,;'     SHAW EXCEPTION REPORT\nDXILTB DC CL80'  DJDE JDE=ILTB,;'     SHAW TRIAL BALANCE\nDXILIN DC CL80'  DJDE JDE=ILIN,;'     SHAW SIMPLE INTEREST\nDXILST DC CL80'  DJDE JDE=ILST,;'     SHAW CREDIT LINE STATEMENT - M/R\nDXILS1 DC CL80'  DJDE JDE=ILS1,;'     SHAW CREDIT LINE STATEMENT - C/L\nDXILU1 DC CL80'  DJDE JDE=ILU1,;'     SHAW NEW LOAN INDEX CARDS\nDXILU2 DC CL80'  DJDE JDE=ILU2,;'     SHAW INTEREST PAID STATEMENT\nDXILU3 DC CL80'  DJDE JDE=ILU3,;'     SHAW LATE CHARGES\nDXILU4 DC CL80'  DJDE JDE=ILU4,;'     SHAW COMING DUE NOTICES\nDXILCR DC CL80'  DJDE JDE=ILCR,;'     SHAW COLLECTION CARDS\nDXSVHR DC CL80'  DJDE JDE=SVHR,;'     HIGH RISE CERTIFICATE RATES\nDX5498 DC CL80'  DJDE JDE=5498,;'     SAVINGS IRA CONTRIBUTIONS\n         SPACE 3\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |    D J D E    V F U    I M A G E    T A B L E    E N T R Y      | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nDVITE DS 0D\n         SPACE\nVFU1 DC H'2'                     * ALL LANDSCAPE / PORTRAIT - 2 UP\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,88),;'\n      DC CL80'  DJDE TOF=1,BOF=88,COPIES=1,END;'\n         SPACE\nVFU2 DC H'2'                     * PORTRAIT - 1 UP 8 LPI\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,84),;'\n      DC CL80'  DJDE TOF=1,BOF=84,COPIES=1,END;'\n         SPACE\nVFU3 DC H'2'                     * STATEMENTS - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,15),ASSIGN=(10,83),;'\n      DC CL80'  DJDE TOF=15,BOF=88,COPIES=1,END;'\n         SPACE\nVFU4 DC H'2'                     * STATEMENTS - 1 UP\n      DC CL80'  DJDE ASSIGN=(1,19),ASSIGN=(10,80),;'\n      DC CL80'  DJDE TOF=19,BOF=88,COPIES=1,END;'\n         SPACE\nVFU5 DC H'2'                     * ESCROW ACCOUNT ANALYSIS 1\n      DC CL80'  DJDE ASSIGN=(1,6),ASSIGN=(12,60),;'\n      DC CL80'  DJDE TOF=6,BOF=60,COPIES=1,END;'\n         SPACE\nVFU6 DC H'2'                     * PORTRAIT - 1 UP 6 LPI\n      DC CL80'  DJDE ASSIGN=(1,1),ASSIGN=(12,67),;'\n      DC CL80'  DJDE TOF=1,BOF=67,COPIES=1,END;'\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |        S Y S O U T   C L A S S   T A B L E   E N T R Y          | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nSCTE  DS 0D                  SYSOUT CLASS TABLE\n*\n*        +--SYSOUT CLASS (A-Z,0-9)\n*        |\n*        |+-PRINTER NUMBER (0-9,P=PUNCH)\n*        ||\n*        ||      +-ADDRESS OF APPROPRIATE FORMS CROSS REF TABLE\n*        ||      |\n  DC CL4'A4  ',A(XFRMTABX)   CLASS A ---> XEROX PRINTER\n  DC CL4'BP  ',A(0)          CLASS B ---> IBM 2540 CARD PUNCH\n  DC CL4'C4  ',A(XFRMTABX)   CLASS C ---> XEROX PRINTER\n  DC CL4'D4  ',A(XFRMTABX)   CLASS D ---> XEROX PRINTER\n  DC CL4'E4  ',A(XFRMTABX)   CLASS E ---> XEROX PRINTER\n  DC CL4'F4  ',A(FFRMTABF)   CLASS F ---> XEROX PRINTER - SETUP FORMS\n  DC CL4'G4  ',A(XFRMTABX)   CLASS G ---> XEROX PRINTER\n  DC CL4'H4  ',A(XFRMTABX)   CLASS H ---> XEROX PRINTER\n  DC CL4'I4  ',A(XFRMTABX)   CLASS I ---> XEROX PRINTER\n  DC CL4'J4  ',A(XFRMTABX)   CLASS J ---> XEROX PRINTER\n  DC CL4'K4  ',A(XFRMTABX)   CLASS K ---> XEROX PRINTER\n  DC CL4'L4  ',A(XFRMTABX)   CLASS L ---> XEROX PRINTER\n  DC CL4'M6  ',A(0)          CLASS M ---> MEMOREX PRINTER\n  DC CL4'N4  ',A(XFRMTABX)   CLASS N ---> XEROX PRINTER\n  DC CL4'O4  ',A(XFRMTABX)   CLASS O ---> XEROX PRINTER\n  DC CL4'P4  ',A(XFRMTABX)   CLASS P ---> XEROX PRINTER\n  DC CL4'Q4  ',A(XFRMTABX)   CLASS Q ---> XEROX PRINTER\n  DC CL4'R4  ',A(XFRMTABX)   CLASS R ---> XEROX PRINTER\n  DC CL4'S4  ',A(XFRMTABX)   CLASS S ---> XEROX PRINTER\n  DC CL4'T5  ',A(0)          CLASS T ---> DATAGRAPHIX FICHE FILMER\n  DC CL4'U4  ',A(XFRMTABX)   CLASS U ---> XEROX PRINTER\n  DC CL4'V4  ',A(XFRMTABX)   CLASS V ---> XEROX PRINTER\n  DC CL4'W4  ',A(XFRMTABX)   CLASS W ---> XEROX PRINTER\n  DC CL4'X4  ',A(XFRMTABX)   CLASS X ---> XEROX PRINTER\n  DC CL4'Y4  ',A(XFRMTABX)   CLASS Y ---> XEROX PRINTER\n  DC CL4'ZD  ',A(0)          CLASS Z ---> DUMMY OUTPUT\n  DC CL4'00  ',A(0)          CLASS 0 ---> SAR\n  DC CL4'10  ',A(0)          CLASS 1 ---> SAR\n  DC CL4'20  ',A(0)          CLASS 2 ---> SAR\n  DC CL4'30  ',A(0)          CLASS 3 ---> SAR\n  DC CL4'45  ',A(0)          CLASS 4 ---> DATAGRAPHIX FICHE FILMER\n  DC CL4'50  ',A(0)          CLASS 5 ---> SAR\n  DC CL4'64  ',A(XFRMTABX)   CLASS 6 ---> XEROX PRINTER\n  DC CL4'70  ',A(0)          CLASS 7 ---> SAR\n  DC CL4'84  ',A(XFRMTABX)   CLASS 8 ---> XEROX PRINTER\n  DC CL4'95  ',A(0)          CLASS 9 ---> DATAGRAPHIX FICHE FILMER\n*\n* THE FOLLOWING ENTRY 'FF' MUST ALWAYS BE PRESENT AND BE LAST:\n*\nDEFTCLAS DC XL1'FF',CL3'4  ',A(XFRMTABX)  END OF TABLE (AND DEFAULT).\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |          N O N R E E N T R A N T   D A T A   A R E A            | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   THE FIELDS IN THIS DATA AREA ARE MEANT TO BE PASSED BETWEEN       *\n*   EXECUTIONS OF THE EXITS.  THEY ARE USED TO DETERMINE WHICH        *\n*   PRINTERS ARE XEROX PRINTERS, AND HOLD INFORMATION REGARDING       *\n*   WHAT TYPE OF FORMS ARE CURRENTLY BEING PRINTED.                   *\n*                                                                     *\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |            P R N T R T A B   T A B L E   E N T R Y              | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE 2\nPRNTRTAB DS    0D          PRINTER TABLE (SEE PTBDSECT)\n*\n*        +--PRINTER NUMBER (1,2,3,4,5,6,7,8,9,0) (0 MUST BE LAST)\n*        |\n*        |+-PRINTER TYPE (X-XEROX, M-MEMOREX, F-FICHE, P-PUNCH, S-SAR)\n*        ||\n*        ||     LEAVE ALL OTHER FIELDS ALONE\n*        ||\n*        ||                                +--COMMENT\n*        ||                                |\n  DC CL2'1 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'2 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'3 ',XL2'00FF',CL4'????',CL4' N  ' IBM 1403 (NONEXISTANT)\n  DC CL2'4X',XL2'00FF',CL4'????',CL4' N  ' XEROX 8700\n  DC CL2'5F',XL2'00FF',CL4'????',CL4' N  ' DATAGRAPHIX 2275 (FICHE)\n  DC CL2'6M',XL2'00FF',CL4'????',CL4' N  ' MEMOREX 4303\n  DC CL2'7X',XL2'00FF',CL4'????',CL4' N  ' XEROX 9700 (TEMPORARY)\n  DC CL2'8M',XL2'00FF',CL4'????',CL4' N  ' MEMOREX (TEMPORARY)\n  DC CL2'9X',XL2'00FF',CL4'????',CL4' N  ' XEROX 8700 (TEMPORARY)\n  DC CL2'PP',XL2'00FF',CL4'????',CL4' N  ' IBM 2540 CARD PUNCH\n  DC CL2'DD',XL2'00FF',CL4'????',CL4' N  ' DUMMY OUTPUT (BIT BUCKET)\n* THE FOLLOWING ENTRY '0' MUST ALWAYS BE PRESENT AND BE LAST:\n  DC CL2'0S',XL2'00FF',CL4'????',CL4' N  ' SAR (SYSOUT ARCHIVAL & RET.)\n*                                          DUMMY PRINTER TO TERMINATE\n*                                          THE TABLE (DEFAULT FOR > 9)\n         SPACE 2\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |             P R I N T E R   T A B L E   D S E C T               | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*   THE FIELDS IN THIS DATA AREA ARE MEANT TO BE PASSED BETWEEN       *\n*   EXECUTIONS OF THIS EXIT.  THEY ARE USED TO DETERMINE WHEN         *\n*   THE XEROX DUPLEX/SIMPLEX MODE AND/OR STOCK PAPER NEEDS TO BE      *\n*   CHANGED, AND THE OPERATOR SO NOTIFIED ON THE XEROX CONSOLE.       *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPTBDSECT DSECT\n         SPACE 2\nPTBENTRY DS    CL1           * PRINTER NUMBER (0-9)\n         SPACE\nPTBTYPE  DS    CL1           * PRINTER TYPE: X - XEROX\n         SPACE\nPREVMODE DS    XL1           * MODE OF PREVIOUS JOB\n         SPACE\nPREVSTOC DS    XL1           * STOCK PAPER FOR PREVIOUS JOB\n         SPACE\nPREVFORM DS    CL4           * FORM ID FOR PREVIOUS JOB\n         SPACE\nPREVCLAS DS    CL1           * SYSOUT CLASS OF PREVIOUS JOB\n         SPACE\nHOLDSW   DS    CL1           * HOLD MESSAGE SWITCH:  Y - SEND MESSAGE\n*                                                    N - NO MESSAGE\n         DS    CL2           * DUMMY\n*********************** END OF MODULE EXIT1TAB ************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT15": {"ttr": 3332, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT15: JES2 EXIT 15 OUTPUT DATA SET / COPY SELECT'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                         E X I T 1 5                             | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        JES2 EXIT 15 OUTPUT DATA SET / COPY SELECT                   *\n*                                                                     *\n*        ENVIRONMENT:  JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED TO INSERT A DJDE COMMAND  *\n*        IN FRONT OF EACH REPORT OR COPY GOING TO THE XEROX PRINTER   *\n*        TO CAUSE THE PRINTER TO SKIP TO THE FRONT OF THE NEXT CUT    *\n*        SHEET WHEN THE XEROX PRINTER IS PRINTING IN DUPLEX MODE      *\n*        AND/OR MULTIPLE LOGICAL PAGES PER PHYSICAL PAGE/SIDE.  THIS  *\n*        IS TO INSURE THAT THE FIRST LOGICAL PAGE OF A REPORT DOES    *\n*        NOT OCCUR ON THE SAME PHYSICAL SHEET AS THE LAST LOGICAL     *\n*        PAGE OF THE PREVIOUS REPORT.                                 *\n*                                                                     *\n*        THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        SYMBOLIC REGISTER DEFINITIONS                                *\n*                                                                     *\n***********************************************************************\n*\nIC       EQU   R2                  INPUT CODE (FROM R0)\nIP       EQU   R3                  INPUT PARAMETERS LIST ADDRESS\n*JOE      EQU   R4                  JOE ADDRESSABILITY REGISTER\nPDDB     EQU   R5                  PDDB ADDRESSABILITY REGISTER\nDCTREG   EQU   R6                  DCT ADDRESSABILITY REGISTER\nBUFREG   EQU   R7                  BUFFER ADDRESSABILITY REGISTER\n*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER\n*BASE1    EQU   R11                 HCT ADDRESSABILITY REGISTER\n*BASE2    EQU   R12                 PROCESSOR ADDRESSABILITY REGISTER\n*SAVE     EQU   R13                 PCE ADDRESSABILITY REGISTER\n*LINK     EQU   R14                 LINK REGISTER\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        EXIT 15 ENTRY POINT                                          *\n*                                                                     *\n***********************************************************************\n*\nEXIT15   $ENTRY BASE=R12,CSECT=YES\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         LR    IC,R0               SAVE INPUT CODE\n         LR    IP,R1               SAVE INPUT PARAMETER LIST ADDRESS\n         L     DCTREG,16(0,IP)     LOAD DCT ADDRESSABILITY REGISTER\n         USING DCT,DCTREG          SET ADDRESSABILITY TO DCT\n         USING JCT,R10             SET ADDRESSABILITY TO JCT\n*\n***********************************************************************\n*                                                                     *\n*        TEST TO SEE IF EXIT 15 SHOULD HAVE BEEN TAKEN                *\n*                                                                     *\n***********************************************************************\n*\n         TM    DCTPPSW2,DCTSDSSW   SEPDS SPECIFIED ?\n         BZ    EX15RET0            NO - LEAVE EXIT.  DOESN'T WANT SEP.\n*\n***********************************************************************\n*                                                                     *\n*        TEST TO SEE IF OUTPUT IS GOING TO THE XEROX PRINTER          *\n*                                                                     *\n***********************************************************************\n*\n         C     IC,=F'0'            DATA SET SELECT ?\n         BE    EX15RET0            YES - LEAVE EXIT.  CANNOT SEP HERE.\n*\n         TM   PCEID,PCEPUSID       IF A PUNCH DEVICE ?\n         BO    EX15RET0            YES - LEAVE EXIT.  NO SEP NECESSARY.\n*\n         CLC   DCTDEVN(3),=CL3'PRT'     ARE WE GOING TO A PRINTER ?\n         BE    CH15PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         CLC   DCTDEVN(7),=CL7'PRINTER' ARE WE GOING TO A PRINTER ?\n         BE    CH15PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         BNE   EX15RET0      * NO -  NO SKIP NECESSARY.\n*\n         USING PTBDSECT,PC2  * MAKE PRINTER TABLE ENTRY ADDRESSABLE\nCH15PRTE L     PC2,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE\n         C     PC2,=F'0'     * PRINTER TABLE ADDRESSABLE?\n         BE    EX15RET0      * NO - MIGHT AS WELL RETURN TO JES2\nCH15NEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST\n         BE    CH15TYPE      *   PRINTER TABLE ENTRY\n         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY\n         BE    CH15TYPE      *   THEN GO CHECK PRINTER TYPE\n         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY\n         BE    CH15TYPE      *   THEN GO CHECK PRINTER TYPE\n         LA    PC2,12(0,PC2) * ELSE GET SET TO CHECK NEXT ENTRY\n         B     CH15NEXT      *\nCH15TYPE CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   EX15RET0      *   THEN LEAVE EXIT.                        ACC0577\n*\n         TM    PREVMODE,MFNUFRNT IF NO SKIP TO NEXT CUT SHEET IS NEEDED\n         BZ    EX15RET0      *   THEN LEAVE EXIT.\n*\n***********************************************************************\n*                                                                     *\n*        SEND THE COMMAND TO CAUSE THE SKIP TO NEW FRONT OF SHEET     *\n*                                                                     *\n***********************************************************************\n*\nSENDX15D $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER\n         LR    BUFREG,R1           SAVE ADDRESS OF BUFFER\n         USING BFPDSECT,BUFREG     SET ADDRESSABILITY TO BUFFER\n*\n         MVC   BUFSTART(28),DJDEEX15 MOVE DJDE COMMAND TO BUFFER\n         LA    R0,28               LOAD LINE LENGTH\n         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M\n*\n         $FREEBUF (BUFREG)         FREE THE WORK BUFFER\n*\n***********************************************************************\n*                                                                     *\n*        RETURN TO JES2                                               *\n*                                                                     *\n***********************************************************************\n*\nEX15RET0 LA    R15,0               SET RETURN CODE TO 0\n         $RETURN RC=(R15)          RETURN TO JES2\n*\n         DROP  DCTREG,PC2,BUFREG,R10\n         EJECT\n***********************************************************************\n*                                                                     *\n*        EXIT 15 DATA AREAS                                           *\n*                                                                     *\n***********************************************************************\n*\nDJDEEX15 DS    0CL28               XEROX DJDE COMMAND\n         DC    XL1'89'               SKIP TO CHANNEL 1 AFTER WRITE\n         DC    CL27'  DJDE SIDE=(NUFRONT),END; '\n         EJECT\n         LTORG\n*\n*********************** END OF MODULE EXIT15 **************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT250": {"ttr": 3336, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT250: JES2 EXIT 250 FORMS SETUP SUPPRESSION'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                        E X I T 2 5 0                            | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        JES2 EXIT 250 FORMS SETUP SUPPRESSION                        *\n*                                                                     *\n*        ENVIRONMENT:  JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED TO EITHER ALLOW OR        *\n*        SUPPRESS THE OPERATOR SETUP MESSAGE (HASP190) ON A FORMS     *\n*        CHANGE TO A NON-3800 PRINTER.  IT WAS SPECIFICALLY DEVELOPED *\n*        TO SUPPORT THE XEROX 8700/9700 PRINTER AND IS USED IN        *\n*        CONJUNCTION WITH OUR SPECIAL JES2 EXITS 1 AND 15 FOR XEROX   *\n*        FORMS CONTROL.  JES2 EXIT 250 IS NOT A STANDARD JES2 EXIT.   *\n*        IT IS A USER DEVELOPED MODIFICATION TO JES2.  THE EXIT 250   *\n*        CALL IS DONE IN SYS1.HASPSRC(HASPPRPU).  SEE OUR JES2 SMP/E  *\n*        USERMOD SYS2.TECH.USERPTF(ZZ03821) FOR THE DETAILS OF        *\n*        INSERTING EXIT 250 INTO JES2 MODULE SYS1.HASPSRC(HASPPRPU).  *\n*                                                                     *\n*        THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.          *\n*                                                                     *\n* REGISTERS AT ENTRY TO EXIT 250:                                     *\n*                                                                     *\n* R0 - ?                             R8  - ?                          *\n* R1 - ADRS OF 'SETUP' PARM LIST     R9  - ?                          *\n* R2 - ?                             R10 - JCT 'JCTDSECT'             *\n* R3 - BUFFER ADRS 'BUFDSECT'        R11 - HCT 'HCTDSECT'             *\n* R4 - DCT 'DCTDSECT'                R12 - 'PRPUDSV'                  *\n* R5 - ?                             R13 - PCE/PPPWORK                *\n* R6 - ?                             R14 - LINK REGISTER              *\n* R7 - ADRS OF 'SETUP' PARM LIST     R15 - RETURN REGISTER            *\n*                                                                     *\n* ON RETURN EXIT 250 SHOULD RESTORE ALL REGISTERS EXCEPT R15.         *\n* REGISTER 15 IS USED TO INDICATE WHETHER TO SUPPRESS OR ALLOW AN     *\n* OPERATOR SETUP MESSAGE (HASP190) TO BE ISSUED FOR A FORMS CHANGE AS *\n* FOLLOWS:                                                            *\n*                                                                     *\n*    R15 = 0  INDICATES ALLOW SETUP MESSAGE                           *\n*    R15 = 4  INDICATES SUPPRESS SETUP MESSAGE                        *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        SYMBOLIC REGISTER DEFINITIONS                                *\n*                                                                     *\n***********************************************************************\n*\n**IC       EQU   R2                  INPUT CODE (FROM R0)\n**IP       EQU   R3                  INPUT PARAMETERS LIST ADDRESS\n**JOE      EQU   R4                  JOE ADDRESSABILITY REGISTER\n**PDDB     EQU   R5                  PDDB ADDRESSABILITY REGISTER\n**DCTREG   EQU   R6                  DCT ADDRESSABILITY REGISTER\n**BUFREG   EQU   R7                  BUFFER ADDRESSABILITY REGISTER\n*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER\n*BASE1    EQU   R11                 HCT ADDRESSABILITY REGISTER\n*BASE2    EQU   R12                 PROCESSOR ADDRESSABILITY REGISTER\n*SAVE     EQU   R13                 PCE ADDRESSABILITY REGISTER\n*LINK     EQU   R14                 LINK REGISTER\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        EXIT 250 ENTRY POINT                                         *\n*                                                                     *\n***********************************************************************\n*\nEXIT250  $ENTRY BASE=R12,CSECT=YES\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         USING DCT,R4              SET ADDRESSABILITY TO DCT\n         USING JCT,R10             SET ADDRESSABILITY TO JCT\n*\n***********************************************************************\n*                                                                     *\n*        TEST TO SEE IF OUTPUT IS GOING TO THE XEROX PRINTER          *\n*                                                                     *\n***********************************************************************\n*\n         TM    PCEID,PCEPUSID      IF A PUNCH DEVICE ?\n         BO    E250RET0            LEAVE EXIT (ALLOW SETUP)\n*\n         CLC   DCTDEVN(3),=CL3'PRT'     ARE WE GOING TO A PRINTER ?\n         BE    C250PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         CLC   DCTDEVN(7),=CL7'PRINTER' ARE WE GOING TO A PRINTER ?\n         BE    C250PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY\n         BNE   E250RET0      * NO -  LEAVE EXIT (ALLOW SETUP)\n*\n         USING PTBDSECT,R2   * MAKE PRINTER TABLE ENTRY ADDRESSABLE\nC250PRTE L     R2,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE\n         C     R2,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    E250RET0      * NO - MIGHT AS WELL RETURN TO JES2\nC250NEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST\n         BE    C250TYPE      *   PRINTER TABLE ENTRY\n         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY\n         BE    C250TYPE      *   THEN GO CHECK PRINTER TYPE\n         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY\n         BE    C250TYPE      *   THEN GO CHECK PRINTER TYPE\n         LA    R2,12(0,R2)   * ELSE GET SET TO CHECK NEXT ENTRY\n         B     C250NEXT      *\nC250TYPE TM    DCTPPSW2,DCTSDSSW IF SEPDS=Y (I.E.: TAKE EXIT 15)\n         BO    C250XERO      *   THEN THIS SHOULD BE A XEROX PRINTER\n         MVC   PREVFORM,=CL4'????' RESET FORMS SETUP - JUST TO BE SURE\n         CLI   PTBTYPE,C'X'  * IF TABLE INDICATES NOT A XEROX TABLE\n         BNE   E250RET0      *   THEN LEAVE EXIT (ALLOW SETUP)\n         MVI   PTBTYPE,C' '  * ELSE MAKE THIS NOT BE A XEROX PRINTER\n         B     E250RET0      *   AND LEAVE EXIT (ALLOW SETUP)\nC250XERO MVI   PTBTYPE,C'X'  * MAKE THIS A XEROX PRINTER\n         B     E250RET4      *   AND SUPPRESS SETUP\n***********************************************************************\n*                                                                     *\n*        RETURN TO JES2                                               *\n*                                                                     *\n***********************************************************************\n*\nE250RET0 LA    R15,0              SET RETURN CODE TO 0 - ALLOW SETUP\n         $RETURN RC=(R15)         RETURN TO JES2\n*\nE250RET4 LA    R15,4              SET RETURN CODE TO 4 - SUPPRESS SETUP\n         $RETURN RC=(R15)         RETURN TO JES2\n*\n         DROP  R2,R4,R10\n         EJECT\n***********************************************************************\n*                                                                     *\n*        EXIT 250 DATA AREAS                                          *\n*                                                                     *\n***********************************************************************\n*\n         LTORG\n*\n********************** END OF MODULE EXIT250 **************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT4MIT": {"ttr": 3340, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT4MIT: HASP GLOBAL PARAMETERS'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                       E X I T 4 M I T                           | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |           H A S P   G L O B A L   P A R A M E T E R S           | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE\n         COPY  $HASPGBL      * GENERATE HASP GLOBAL PARAMETERS\n         EJECT\n         TITLE 'EXIT4MIT: JES2 EXIT4 MODULE INFORMATION TABLE'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |       M O D U L E    I N F O R M A T I O N    T A B L E         | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*                           EXIT4MIT                                  *\n*                                                                     *\n* THIS JES2 EXIT PROGRAM IS DESIGNED TO SCAN ALL JOB JCL AND:         *\n*                                                                     *\n*   1) COMMENT OUT ALL OCCURENCES OF 'JOBCAT' STATEMENTS.             *\n*      IF 'BENJ' IS CODED IN COLUMNS 68-71, THE STATEMENT             *\n*      IS NOT COMMENTED OUT.                                          *\n*                                                                     *\n* PRIOR TO 11/08/88 IT ALSO DID THE FOLLOWING (BUT NO MORE):          *\n*                                                                     *\n*   2) MADE '/*ROUTE' STATEMENTS CAUSE JCL ERRORS.                    *\n*                                                                     *\n* IT WILL NOT COMMENT OUT STATEMENTS WITHIN PROCS.                    *\n*                                                                     *\n* NOTE: THIS EXIT HAS NOTHING TO DO WITH XEROX FORMS CONTROL AND CAN  *\n*       BE IGNORED BY MOST SHOPS.                                     *\n*                                                                     *\n* LEVEL OF JES2 SUPPORTED: MVS/SP JES2 1.3.6                          *\n*                                                                     *\n* THE FOLLOWING JES2 INITIALIZATION PARAMETERS ARE REQUIRED FOR THIS  *\n* EXIT TO FUNCTION CORRECTLY (MVS/SP JES2 1.3.6):                     *\n*                                                                     *\n*   LOAD     =EXIT4MIT                        /* CONTAINS EXIT4 */    *\n*                                                                     *\n*   EXIT004  ROUTINE=EXIT4,ENABLE,TRACE=NO    /* JCL SCAN EXIT  */    *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                       E X I T 4 M I T                           | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n         SPACE\nEXIT4MIT $MODULE NOTICE=NONE,                                         .X\n               SYSP=(ON,GEN,NODATA,NOGEN,NOGEN),                      .X\n               RPL,          * MVS  ACB REQUEST PARAMETER AREA DSECT  .X\n               $BFW,         * HASP 3800 BUFFER WORK AREA DSECT       .X\n               $BUFFER,      * HASP BUFFER (IOB) FORMAT               .X\n               $CAT,         * HASP CLASS ATTRIBUTE TABLE             .X\n               $CMB,         * HASP CONSOLE MESSAGE BUFFER            .X\n               $DCT,         * HASP DEVICE CONTROL TABLE              .X\n               $ERA,         * HASP ERROR RECOVERY AREA DSECT         .X\n               $EXITPL,      * HASP $EXIT PARAMETER LIST DSECT        .X\n               $FMH,         * HASP SNA FUNCTION MANAGEMENT HEADER    .X\n               $HASPEQU,     * HASP GENERAL REGISTER AND BIT EQUATES  .X\n               $HCT,         * HASP COMMUNICATION TABLE               .X\n               $IOT,         * HASP INPUT OUTPUT TABLE                .X\n               $JCT,         * HASP JOB CONTROLL TABLE                .X\n               $JOT,         * HASP JOB OUTOUT TABLE DSECT            .X\n               $JOE,         * HASP JOB OUTPUT ELEMENT                .X\n               $JQE,         * HASP JOB QUEUE ELEMENT                 .X\n               $KIT,         * HASP CHECKPOINT INFORMATION TABLE      .X\n               $LRC,         * HASP LOGICAL RECORD CHARACTERISTICS    .X\n               $MIT,         * HASP MODULE INFORMATION TABLE          .X\n               $MITETBL,     * HASP MIT ENTRY TABLE DSECT             .X\n               $MODMAP,      * HASP MODULE MAP DSECT                  .X\n               $NHD,         * HASP NETWORK HEADER/TRAILER DSECT      .X\n               $NIT,         * HASP NODE INFORMATION TABLE            .X\n               $OCR,         * HASP OUTPUT CONTROL RECORD DSECT       .X\n               $OCT,         * HASP OUTPUT CONTROL TABLE DESCT        .X\n               $PCE,         * HASP PROCESSOR CONTROL ELEMENT         .X\n               $PCIE,        * HASP PGM CONTROLLED INTERRUPT ELMNT    .X\n               $PDDB,        * HASP PERIPHERAL DATA DEFINITION TABLE  .X\n               $PQE,         * HASP 3800 PAGE QUEUE ENTRY             .X\n               $PQH,         * HASP 3800 PENDING PAGE QUEUE HEADER    .X\n               $QSE,         * HASP SHARED QUEUE ELEMENT              .X\n               $RAT,         * HASP REMOTE ATTRIBUTE TABLE DSECT      .X\n               $RDRWORK,     * HASP INPUT SERVICE PCE WORK AREA DSECT .X\n               $TAB          * HASP TRACK ALLOCATION BLOCK            .\n         EJECT\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                         E X I T 4                               | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        JES2 EXIT 4 JCL SCAN                                         *\n*                                                                     *\n*        ENVIRONMENT:  JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5 (NON-XA)                          *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED TO SCAN ALL JOB JCL AND:  *\n*                                                                     *\n*          1) COMMENT OUT ALL OCCURENCES OF 'JOBCAT' STATEMENTS.      *\n*             IF 'BENJ' IS CODED IN COLUMNS 68-71, THE STATEMENT      *\n*             IS NOT COMMENTED OUT.                                   *\n*                                                                     *\n*        PRIOR TO 11/08/88 IT ALSO DID THE FOLLOWING (BUT NO MORE):   *\n*                                                                     *\n*          2) MADE '/*ROUTE' STATEMENTS CAUSE JCL ERRORS.             *\n*                                                                     *\n*        IT WILL NOT COMMENT OUT STATEMENTS WITHIN PROCS.             *\n*                                                                     *\n*        NOTE: THIS EXIT HAS NOTHING TO DO WITH XEROX FORMS CONTROL   *\n*              AND CAN BE IGNORED BY MOST SHOPS.                      *\n*                                                                     *\n***********************************************************************\n         TITLE 'EXIT4: JES2 EXIT 4 JCL SCAN'\n         SPACE\n***********************************************************************\n*                                                                     *\n*        EXIT 4 ENTRY POINT                                           *\n*                                                                     *\n***********************************************************************\n*\nEXIT4    $ENTRY BASE=R12,CSECT=YES\n         $SAVE TRACE=NO,NAME=EXIT4\n         LR    R12,R15                 SET LOCAL BASE REGISTER\n         LM    R3,R5,0(R1)             SAVE POINTERS\n         CLC   0(7,R3),=CL7'/*ROUTE'\n         B     CK01                    BYPASS /*ROUTE CHECK    11/08/88\n*        BNE   CK01                    CAUSE  /*ROUTE CAUSE JCL  ERROR\n         MVC   0(7,R3),=CL7'//*ROUT'\n         B     EXIT\nCK01     EQU   *\n         LTR   R6,R0                   TEST FOR JES2 OR JCL STATEMENT\n         BZ    EXIT                    DONT'T PROCESS JES2 STATEMENTS\n         CLC   =C'JOBCAT',2(R3)        IS THIS A BIG CAT?\n         BNE   EXIT                    NOPE...\n         CLC   =C'BENJ',67(R3)         IS JOBCAT VALID DD STATEMENT?\n         BE    EXIT                    YUP...\nFIXCAT   DS    0H\n         MVI   2(R3),C'*'              COMMENT THIS CAT STATEMENT\n*\n***********************************************************************\n*                                                                     *\n*        RETURN TO JES2                                               *\n*                                                                     *\n***********************************************************************\n*\nEXIT     DS    0H\n         $RETURN\n         DROP  R12\n*\n***********************************************************************\n*                                                                     *\n*        EXIT 4 DATA AREAS                                            *\n*                                                                     *\n***********************************************************************\n*\n         LTORG\n         EJECT\n         TITLE 'EXIT4MIT: $MODEND - END OF MODULE'\n         $MODEND             * MARK THE END OF THE MODULE\n         SPACE\n         END\n         SPACE\n********************** END OF MODULE EXIT4MIT *************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT5": {"ttr": 3587, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'EXIT5: JES2 EXIT 5 JES2 COMMAND PREPROCESSOR'\n***********************************************************************\n* +-----------------------------------------------------------------+ *\n* |                          E X I T 5                              | *\n* +-----------------------------------------------------------------+ *\n***********************************************************************\n*                                                                     *\n*        JES2 EXIT 5 JES2 COMMAND PREPROCESSOR                        *\n*                                                                     *\n*        ENVIRONMENT:  JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *\n*                      MVS/SP 1.3.5                                   *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED WORK IN CONJUCTION WITH   *\n*        OUR SPECIAL JES2 EXITS 1, 15, AND 250 FOR XEROX FORMS        *\n*        CONTROL.  IT WHENEVER THE OPERATOR ISSUES A STOP OR HALT     *\n*        COMMAND TO A XEROX 8700/9700 PRINTER THIS EXIT FLAGS THE     *\n*        FORMS ID IN THE EXIT DEFINED PRINTER TABLE AS UNKNOWN (????) *\n*        SO THAT THE NEXT JOB PRINTED CAUSES AN OPERATOR SETUP        *\n*        MESSAGE TO APPEAR ON THE XEROX PRINTER CONSOLE (THUS FORCING *\n*        THE OPERATOR TO VERIFY THE FORMS SETUP.                      *\n*                                                                     *\n*        THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *\n*  TO THE PUBLIC DOMAIN ON AN \"AS IS\" BASIS.  WE MAKE NO WARRANTY     *\n*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *\n*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *\n*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *\n*                                                                     *\n*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *\n*                                                                     *\n*                           DISCLAIMER                                *\n*                                                                     *\n*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN \"AS IS\"        *\n*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *\n*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *\n*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *\n*                                                                     *\n*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *\n*  YOURSELF.                                                          *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        SYMBOLIC REGISTER DEFINITIONS                                *\n*                                                                     *\n***********************************************************************\n*\n**IC       EQU   R2                  INPUT CODE (FROM R0)\n**IP       EQU   R3                  INPUT PARAMETERS LIST ADDRESS\n**JOE      EQU   R4                  JOE ADDRESSABILITY REGISTER\n**PDDB     EQU   R5                  PDDB ADDRESSABILITY REGISTER\n**DCTREG   EQU   R6                  DCT ADDRESSABILITY REGISTER\n**BUFREG   EQU   R7                  BUFFER ADDRESSABILITY REGISTER\n*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER\n*BASE1    EQU   R11                 HCT ADDRESSABILITY REGISTER\n*BASE2    EQU   R12                 PROCESSOR ADDRESSABILITY REGISTER\n*SAVE     EQU   R13                 PCE ADDRESSABILITY REGISTER\n*LINK     EQU   R14                 LINK REGISTER\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        EXIT 5 ENTRY POINT                                           *\n*                                                                     *\n***********************************************************************\n*\nEXIT5    $ENTRY BASE=R12,CSECT=YES\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         USING JCT,R10             SET ADDRESSABILITY TO JCT\n*\n***********************************************************************\n*                                                                     *\n*        TEST TO SEE IF OPERATOR ISSUED STOP OR HALT COMMAND          *\n*                                                                     *\n***********************************************************************\n*\n         CLI   COMVERB,C'P'        STOP COMMAND?\n         BE    EXT5OPRN            YES - GO CHECK OPERANDS\n         CLI   COMVERB,C'Z'        HALT COMMAND?\n         BE    EXT5OPRN            YES - GO CHECK OPERANDS\n         B     EXT5RET0            ELSE RETURN TO JES2\n*\n***********************************************************************\n*                                                                     *\n*        TEST OPERANDS TO SEE ANY APPLY TO A XEROX PRINTER            *\n*                                                                     *\n***********************************************************************\n*\nEXT5OPRN C     R5,=F'0'            VERIFY THERE IS AN OPERAND POINTER\n         BE    EXT5RET0            NO OPERAND POINTER - RETURN TO JES2\n         L     R8,0(R5)            LOAD OPERAND POINTER\n         C     R8,=F'0'            VERIFY THERE IS AN OPERAND\n         BE    EXT5RET0            NO OPERAND - RETURN TO JES2\n         CLC   0(3,R8),=CL3'PRT'   IF NOT PRT (SHORT FORM)\n         BNE   EXT5LONG            THEN TRY LONG FORM OF NAME\n         LA    R8,3(,R8)           ELSE MOVE R8 TO PRINTER NUMBER\n         B     EXT5CHKN              AND GO CHECK PRINTER NUMBER\nEXT5LONG CLC   0(7,R8),=CL7'PRINTER' IF NOT PRINTER (LONG FORM)\n         BNE   EXT5OPRC            THEN TRY NEXT OPERAND\n         LA    R8,7(,R8)           ELSE MOVE R8 TO PRINTER NUMBER\n*\n         USING PTBDSECT,R2   * MAKE PRINTER TABLE ENTRY ADDRESSABLE\nEXT5CHKN L     R2,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE\n         C     R2,=F'0'      * PRINTER TABLE ADDRESSABLE?\n         BE    EXT5RET0      * NO - MIGHT AS WELL RETURN TO JES2\nEXT5NEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST\n         BE    EXT5TYPE      *   PRINTER TABLE ENTRY\n         CLC   PTBENTRY,0(R8)  IF CORRECT PRINTER ENTRY\n         BE    EXT5TYPE      *   THEN GO CHECK PRINTER TYPE\n         LA    R2,12(0,R2)   * ELSE GET SET TO CHECK NEXT ENTRY\n         B     EXT5NEXT      *\nEXT5TYPE CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER\n         BNE   EXT5OPRC      *   THEN TRY NEXT OPERAND                   ACC0577\n*\n         MVC   PREVFORM,=CL4'????' XEROX PRINTER - FORCE FORMS SETUP\n*\nEXT5OPRC CR    R5,R7               WAS THAT THE LAST OPERAND?\n         BE    EXT5RET0            YES - RETURN TO JES2\n         AR    R5,R6               INCREMENT R5 BY R6 (VALUE OF 4)\n         B     EXT5OPRN               AND GO CHECK NEXT OPERAND\n*\n***********************************************************************\n*                                                                     *\n*        RETURN TO JES2                                               *\n*                                                                     *\n***********************************************************************\n*\nEXT5RET0 LA    R15,0              SET RETURN CODE TO 0 - NEXT EXIT 5\n         $RETURN RC=(R15)         RETURN TO JES2\n*\n         DROP  R2,R10\n         EJECT\n***********************************************************************\n*                                                                     *\n*        EXIT 5 DATA AREAS                                            *\n*                                                                     *\n***********************************************************************\n*\n         LTORG\n*\n************************ END OF MODULE EXIT5 **************************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GLOBAL": {"ttr": 3591, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$$$START GLOBAL.JSL\nPD1 :    PDE      PMODE=LAN,FONTS=(L0112C,L01BOB,L01ITA),\n                  BEGIN=(.18,.66);\nPD2 :    PDE      PMODE=LAN,FONTS=(L0212A,L02BOA,L02ITA),\n                  BEGIN=(.18,.50);\nPD3 :    PDE      PMODE=LAN,FONTS=(L0312A,L03BOA,L03ITA),\n                  BEGIN=(.14,.66);\nPD4 :    PDE      PMODE=LAN,FONTS=(L0412A,L04BOA,L04ITA),\n                  BEGIN=(.14,.50);\nPD5 :    PDE      PMODE=LAN,\n                  FONTS=(L05ITA,L05TYA,L05SCA,L05TAC,L05TBC,L0512C),\n                  BEGIN=(.17,.50);\nPD6 :    PDE      PMODE=POR,\n                  FONTS=(P0612C,P06BOB,P06ITB),\n                  BEGIN=(.57,.58);\nPD7 :    PDE      PMODE=POR,\n                  FONTS=(P07ITA,P07TYA,P07SCA,P07TCC,P07TDC),\n                  BEGIN=(.5,.5);\nPD8 :    PDE      PMODE=POR,\n                  FONTS=(P08ITA,P08TYA,P08SCA,P08TAC,P08TBC,P0812C),\n                  BEGIN=(.50,.50);\nPD9 :    PDE      PMODE=LAN,\n                  FONTS=((L0912A,12),(L09BOA,10),(L09ITA,10)),\n                  BEGIN=(.5,.6);\nPD10:    PDE      PMODE=POR,\n                  FONTS=P1012B,\n                  BEGIN=(.22,.51);\nPD11:    PDE      PMODE=POR,\n                  FONTS=P1112A,\n                  BEGIN=(.22,.50);\nPDE1:    PDE      PMODE=LAN,FONTS=L0312A,BEGIN=(.35,.66);\nPDE2:    PDE      PMODE=LAN,FONTS=((L0312A,11.26)),\n                  BEGIN=(.51 IN,.66 IN);\nPDE3:    PDE      PMODE=POR,FONT=((P1012B,16)),BEGIN=(.15,.46),\n                  BEGIN=(5.50,.46);\nPDE4:    PDE      PMODE=POR,FONTS=(PR214B,PR111E,P0812C),\n                  BEGIN=(3.5,.66);\nPDE5:    PDE      PMODE=POR,FONTS=P07TYA,BEGIN=(.5,.5);\nPDE8:    PDE      PMODE=POR,FONTS=(P08TAC,6),BEGIN=(.8,.5);\nPDE9:    PDE      PMODE=POR,FONTS=((P0612A,37 DOTS),(BENFNT,37 DOTS),\n                  (P0612A,36 DOTS)),\n                  BEGIN=(0,.8);\nPDE10:   PDE      PMODE=POR,FONTS=((P06BOA,7.9),(P06BOA,2)),\n                  BEGIN=(0,.8);\nPDE11:   PDE      PMODE=POR,FONTS=(P08TAC,7.6),BEGIN=(.8,.5);\nPORPDE:  PDE      PMODE=PORTRAIT,FONT=((P08TAC,7.6)),BEGIN=(0.10,.58);\nPORT1 :  PDE      PMODE=PORTRAIT,FONT=((P0612C,7.9));\nFNT4:    CME      LINE=(15,4),POS=1,FONT=1,POS=74,FONT=2,\n                  LINE=(19,4),POS=1,FONT=1,POS=74,FONT=4,\n                  LINE=(23,1),POS=1,FONT=1,POS=74,FONT=3,\n                  LINE=(24,-),FONT=1;\nFNT2:    CME      LINE=(1,2),FONT=3,LINE=(3,2),FONT=1,LINE=(5,2),FONT=3,\n                   LINE=(7,25),FONT=2,LINE=(33,1),FONT=3;\nFNT3:    CME      LINE=(19,3),POS=1,FONT=1,\n                  LINE=(22,1),POS=1,FONT=2,\n                  LINE=(23,-),FONT=1;\nFNT1:    CME      LINE=(15,8),POS=1,FONT=1,POS=76,FONT=2,\n                  LINE=(23,1),POS=1,FONT=3,POS=76,FONT=2,\n                  LINE=(24,-),FONT=3;\nFT1:     CME      LINE=(1,-),POS=1,FONT=1;\nFT2:     CME      LINE=(1,-),POS=1,FONT=2;\nFT3:     CME      LINE=(1,-),POS=1,FONT=3;\nFT4:     CME      LINE=(1,-),POS=1,FONT=4;\nFT5:     CME      LINE=(1,-),POS=1,FONT=5;\nFT6:     CME      LINE=(1,-),POS=1,FONT=6;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SH88": {"ttr": 3593, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$$$START 88SH.FSL\nFORM 88SH;\nCOMMENT         SPACING CHANGED TO HANDLE 88 LINES\n                PER PAGE WITH 3 HOLES.   1-22-86 LEE   ;\nLANDSCAPE;\n\nGRID IS 13.6 CPI 11.26 LPI ORIGIN .39 IN, .66 IN;\n\nFONT 10006L;\n\nCOMMENT AT 4 21 LINES FROM -1 TO 132 USING HAIRLINE REP VER EVERY 104\n                DOTS;\n\n AT 4 -1 DRAW 10 BOXES 134 WIDE BY 104 DOTS HIGH USING SHADING\n       REPEAT VERTICALLY EVERY 208 DOTS;\n\nEND;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STD": {"ttr": 3595, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$$$START STD.FSL\nFORM STD;\nCOMMENT         SPACING CHANGED TO HANDLE 88 LINES\n                PER PAGE WITH 3 HOLES.   1-22-86 LEE   ;\nLANDSCAPE;\n\nGRID IS 13.6 CPI 11.26 LPI ORIGIN .50 IN, .66 IN;\n\nFONT 10006L;\n\nAT 4 21 LINES FROM -1 TO 132 USING HAIRLINE REP VER EVERY 104 DOTS;\n\nCOMMENT AT 8 -1 DRAW 10 BOXES 134 WIDE BY 4 HIGH USING SHADING MEDIUM\n       REPEAT VERTICALLY EVERY 8;\n\nEND;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTQ": {"ttr": 3597, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//TSMASTST JOB BF,SHEEDY,CLASS=A,MSGCLASS=X,NOTIFY=TSMAS\n/*JOBPARM ROOM=0350\n//* SEE SYS2.JES2136.INSTLIB(TESTQ)\n//*\n//* ENTER:  F AUTO,TESTQ,D=07\n//*\n//* THIS JOB SHOULD EXECUTE OK.\n//*\n//IEFBR14  EXEC PGM=IEFBR14\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZZ03821": {"ttr": 3599, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "++USERMOD(ZZ03821)\n /*\n /********************************************************************\n /*                                                                  *\n /*    ZZ03821 - INSERT CALL TO NEW JES2 USER EXIT 250 IN HASPPRPU   *\n /*                                                                  *\n /* USE THE FOLLOWING SMPCNTL TO APPLY THIS USERMOD:                 *\n /*                                                                  *\n /*   SET     BDY(GLOBAL)        .                                   *\n /*   RECEIVE SYSMODS S(ZZ03821) .                                   *\n /*   SET     BDY(MVSALTA)       . /* <= INSURE CORRECT TARGET ZONE */.\n /*   APPLY   S(ZZ03821) ASSEM   .                                   *\n /*                                                                  *\n /********************************************************************\n */.\n++VER(Z038) FMID(HJE1367)\n  PRE (UZ44836,UZ49899,UZ82297,UY01247,UY03904,UY09981,UY13685,\n       UY15221,UY19639,UY26130,UY27451).\n++SRCUPD(HASPPRPU) DISTLIB(HASPSRC).\n./ CHANGE NAME=HASPPRPU\n* * * * * * * * * * * * * * EXIT 250  * * * * * * * * * * * * * * * * *\n*\n* BEGINNING OF USER INSERTED JES2 EXIT 250 - USERMOD ZZ03821\n*\n* JES2 USER EXIT 250 INSERTED TO SUPPORT SUPPRESSION OF HASP190 SETUP\n* MESSAGE ON FORMS CHANGE (NON-3800).\n*\n* EXIT DEVELOPER:  MIKE SHEEDY - TSMAS - AT BENJ. FRANKLIN S & L\n*\n* LEVEL OF JES2 USERMOD SUPPORTS:  MVS/SP JES2 1.3.6 PUT 8806 PDO8840.\n* REWORK THIS USERMOD TO SUPPORT NEW JES2 LEVELS AS NEEDED.\n*\n* INSERT THIS EXIT INTO SYS1.HASPSRC(HASPPRPU) BETWEEN THE FOLLOWING\n* INSTRUCTIONS:\n*\n*     DSVFORM  CLC   DCTFORMS,SETUPFMS  FORMS CHANGE...\n*              BE    DSVFCB             BRANCH IF NO\n*     ---INSERT THIS EXIT 250 HERE---\n*              OI    DCTPPSW,DCTPPSWO   SET OPERATOR $T ALLOWED\n*\n* REGISTERS AT ENTRY TO EXIT 250:\n*\n* R0 - ?                             R8  - ?\n* R1 - ADRS OF 'SETUP' PARM LIST     R9  - ?\n* R2 - ?                             R10 - JCT 'JCTDSECT'\n* R3 - BUFFER ADRS 'BUFDSECT'        R11 - HCT 'HCTDSECT'\n* R4 - DCT 'DCTDSECT'                R12 - 'PRPUDSV'\n* R5 - ?                             R13 - PCE/PPPWORK\n* R6 - ?                             R14 - LINK REGISTER\n* R7 - ADRS OF 'SETUP' PARM LIST     R15 - RETURN REGISTER\n*\n* ON RETURN EXIT 250 SHOULD RESTORE ALL REGISTERS EXCEPT R15.\n* REGISTER 15 IS USED TO INDICATE WHETHER TO SUPPRESS OR ALLOW AN\n* OPERATOR SETUP MESSAGE (HASP190) TO BE ISSUED FOR A FORMS CHANGE AS\n* FOLLOWS:\n*\n*    R15 = 0  INDICATES ALLOW SETUP MESSAGE\n*    R15 = 4  INDICATES SUPPRESS SETUP MESSAGE\n*\n* EXIT 250 INVOCATION FOLLOWS:\n*\nEXIT250  SLR   R15,R15        CLEAR REGISTER 15\n         $EXIT 250,MAXRC=4,JOBMASK=JCTXMASK  CALL USER EXIT 250\n         B     EXIT250B(R15)  TEST RETURN CODE\nEXIT250B B     EXIT250C         BRANCH TO ALLOW SETUP MESSAGE\n         SLR   R15,R15          CLEAR REGISTER 15 AND\n         B     EXIT250C+4         BRANCH TO SUPPRESS SETUP MESSAGE\nEXIT250C EQU   *              ALLOW SETUP MESSAGE\n*\n* * * END OF USER INSERTED EXIT 250 * * * * * * * * * * * * * * * * * *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT041/FILE041.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT041", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}