{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012616000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 940576, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE692.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE692.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x10\\x03'", "DS1TRBAL": "b'\\xb2\\xc4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xd3\\x00\\x06\\x04\\xd4\\x00\\x07\\x00\\x11'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04F\\x00\\x00\\x01\\x055\\x0f\\x01\\x055\\x0f\\x10\\x16\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf0@@@'", "ispf": {"version": "04.70", "flags": 0, "createdate": "2005-12-16T00:00:00", "modifydate": "2005-12-16T10:16:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-470"}, "text": "REGULAR CBT TAPE - VERSION 470    FILE:  692\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT470.FILE692\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 14 MEMBERS COUNTED; CUMULATIVE SIZE IS 8,656 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/16/05    10:16:37    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x055\\x0f\\x01\\x055\\x0f\\x10\\x13\\x00\\x16\\x00\\x16\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-12-16T00:00:00", "modifydate": "2005-12-16T10:13:18", "lines": 22, "newlines": 22, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:      UATAPE with 3490 and 3590 device support\nFrom:         Johan.DerrHaverlach@combined.com\nDate:         Wed, 7 Dec 2005 11:11:47 -0600\nTo:           sbgolob@cbttape.org\n\nSam,\n\nAttached is the CBT FILE692 dataset, a zip of the xmit, with a\nsimple addition to UATAPE so it knows about 3490 and 3590 devices\n(This way the density is correct and it won't say that the \"write\nring is in\" :-).  No other changes.\n\nRegards:        Johan Derr-Haverlach\n                Senior System Programmer\n                Combined Insurance Company of America (CICA)\n                4850 Street Road\n                Buck County Technology Park, Suite 100\n                Trevose, PA 19053\n\n                Phone: 215-942-5233\n\nUATAPE.FILE692.zip\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$ASM": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x10\\x17\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T10:17:04", "lines": 30, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,ESD,RLD,BATCH)\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R14.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R14.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.MERRIFLD.FILE692(UATAPE)\n//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,6))\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSALLDA,SPACE=(CYL,(4,6)),\n//            DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,90))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   UATAPE\n SETSSI  CB467692\n SETCODE AC(1)\n NAME    UATAPE(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$ASMLK": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x10\\x10\\x00\\x16\\x00\\x16\\x00\\x00\\xd4\\xc5\\xd9\\xd9\\xc6\\xd3\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T10:10:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "MERRFLD"}, "text": "@@INCLUDE MVS JOBCARD *\n// CLASS=A,TIME=(,59),MSGLEVEL=(1,1)\n/*ROUTE PRINT UAFSYSA.DM06900\n//*********************************************************************\n//*\n//* JOB FOR ASSEMBLING AND LINKING UATAPE PROGRAM\n//*\n//*********************************************************************\n//STEP1 EXEC ASMHCL,PARM.C='OBJECT,NODECK',COND.L=(4,LT)\n//C.SYSLIB DD\n//         DD DSN=SYS1.AMODGEN,DISP=SHR     /* RESIDES ON DLIB */\n//C.SYSPRINT DD SYSOUT=A\n//C.SYSIN DD *\n@@INCLUDE UATAPE ASSEMBLE *\n/*\n//L.SYSLMOD DD UNIT=SYSDA,DSN=SYS1.LOADLIB,DISP=(SHR,KEEP),\n//    VOL=SER=MVSALT\n//L.SYSIN DD *\n  SETCODE AC(1)\n  NAME UATAPE(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$JCL": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x10\\x10\\x00\\t\\x00\\t\\x00\\x00\\xd4\\xc5\\xd9\\xd9\\xc6\\xd3\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T10:10:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "MERRFLD"}, "text": "@@INCLUDE UAFMVS1 JOBCARD *\n// CLASS=A,TIME=1,MSGLEVEL=(1,1)\n//*STEP1   EXEC  PGM=UATAPE,PARM='PRINT,PRINTMAX=1000,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='DUMP,DUMPMAX=5,CRT'\n//STEP1   EXEC  PGM=UATAPE,PARM='CRT,BLOCKS'\n//SYSPRINT DD   SYSOUT=A\n//SYSUDUMP DD SYSOUT=A\n//SYSUT1   DD   UNIT=CART,DISP=OLD,VOL=SER=RSA013,LABEL=EXPDT=98000\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$JCLSG": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x10F\\x00\\x0b\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T10:46:16", "lines": 11, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBK JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*STEP1   EXEC  PGM=UATAPE,PARM='PRINT,PRINTMAX=1000,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='DUMP,DUMPMAX=5,CRT'\n//STEP1    EXEC  PGM=UATAPE,PARM='CRT,BLOCKS'\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=562,DISP=OLD,VOL=SER=CBT466,LABEL=EXPDT=98000\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$JCLSG1": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00G\\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x11\\x13\\x00\\x0b\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T11:13:47", "lines": 11, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBK JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//STEP1   EXEC  PGM=UATAPE,PARM='PRINT,PRINTMAX=1000,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='DUMP,DUMPMAX=5,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='CRT,BLOCKS'\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=562,DISP=OLD,VOL=SER=V466MT,LABEL=EXPDT=98000\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE692": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04F\\x00\\x00\\x01\\x055\\x0f\\x01\\x055\\x0f\\x10\\x16\\x00F\\x00F\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf0@@@'", "ispf": {"version": "04.70", "flags": 0, "createdate": "2005-12-16T00:00:00", "modifydate": "2005-12-16T10:16:00", "lines": 70, "newlines": 70, "modlines": 0, "user": "CBT-470"}, "text": "//***FILE 692 is from David Merrifield and contains his UATAPE      *   FILE 692\n//*           tape mapping, printing, and dumping utility.  This    *   FILE 692\n//*           is an extremely useful tool for finding out what is   *   FILE 692\n//*           on a tape, and it also copies tapes.                  *   FILE 692\n//*                                                                 *   FILE 692\n//*              DAVID L. MERRIFIELD                                *   FILE 692\n//*              UNIVERSITY OF ARKANSAS                             *   FILE 692\n//*              COMPUTING SERVICES                                 *   FILE 692\n//*              155 RAZORBACK ROAD                                 *   FILE 692\n//*              FAYETTEVILLE, AR 72701                             *   FILE 692\n//*              PHONE:  479-575-5829                               *   FILE 692\n//*              FAX  :  479-575-4753                               *   FILE 692\n//*              email:  dlm@uark.edu                               *   FILE 692\n//*                                                                 *   FILE 692\n//*       Fixed to handle 64K blocks on a tape.  Old version        *   FILE 692\n//*       has also been included as a fallback.  Load library       *   FILE 692\n//*       has been included in XMIT format, for convenience. (SBG)  *   FILE 692\n//*                                                                 *   FILE 692\n//*       Updated by Johan Derr-Haverlach to allow UATAPE to        *   FILE 692\n//*       recognize 3490's and 3590's.  Please see member $$NOTE1.  *   FILE 692\n//*                                                                 *   FILE 692\n//*       email:  Johan.DerrHaverlach@combined.com                  *   FILE 692\n//*                                                                 *   FILE 692\n//*   PARM FIELD OPTIONS:                                           *   FILE 692\n//*                                                                 *   FILE 692\n//*       OPTIONS ARE SPECIFIED IN THE PARM= PARAMETER ON THE       *   FILE 692\n//*       EXEC STATEMENT.  EACH OPTION SHOULD BE SEPARATED BY A     *   FILE 692\n//*       SINGLE COMMA, WITH NO SPACES ALLOWED.  THE LIST OF        *   FILE 692\n//*       VALID OPTIONS FOLLOWS:                                    *   FILE 692\n//*                                                                 *   FILE 692\n//*       LIST     - PRINT LABEL RECORD INFORMATION (DEFAULT)       *   FILE 692\n//*       COPY     - COPY SYSUT1 TAPE TO SYSUT2 TAPE                *   FILE 692\n//*       DUMP     - PRINT ALL DATA RECORDS IN HEX FORMAT           *   FILE 692\n//*       DUMPLAB  - PRINT ALL LABEL RECORDS IN HEX FORMAT          *   FILE 692\n//*       DUMPALL  - PRINT ALL LABEL RECORDS AND DATA RECORDS       *   FILE 692\n//*                  IN HEXADECIMAL FORMAT                          *   FILE 692\n//*       BLOCKS   - PRINT SIZE OF DATA RECORDS                     *   FILE 692\n//*       PRINT    - PRINT ALL DATA RECORDS (EBCDIC FORMAT)         *   FILE 692\n//*       CRT      - OUTPUT IS FORMATTED FOR 80-COLUMN CRT          *   FILE 692\n//*                  SCREEN                                         *   FILE 692\n//*       ATOE     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED       *   FILE 692\n//*                  FROM ASCII TO EBCDIC                           *   FILE 692\n//*       ETOA     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED       *   FILE 692\n//*                  FROM EBCDIC TO ASCII                           *   FILE 692\n//*       BYPASS   - BYPASSES LABEL CHECKING FOR SYSUT2 TAPE IF     *   FILE 692\n//*                  COPY ALSO SPECIFIED                            *   FILE 692\n//*       VERBATIM - DOES NOT CHANGE CONTENT OF DATA RECORDS        *   FILE 692\n//*                  (E.G., WON'T CHANGE LABEL INFORMATION LIKE     *   FILE 692\n//*                  VOLUME SERIAL, DENSITY FIELD, ETC.)            *   FILE 692\n//*       DUMPMAX=NNN  - SPECIFY MAXIMUM NUMBER OF BLOCKS TO        *   FILE 692\n//*                      DUMP IF DUMP, DUMPLAB, OR DUMPALL IS       *   FILE 692\n//*                      ALSO SPECIFIED                             *   FILE 692\n//*       PRINTMAX=NNN - SPECIFY MAXIMUM NUMBER OF RECORDS TO       *   FILE 692\n//*                      PRINT IF PRINT SPECIFIED                   *   FILE 692\n//*       MAXFILES=NNN - SPECIFY MAXIMUM NUMBER OF FILES ON         *   FILE 692\n//*                      TAPE TO TO PROCESS                         *   FILE 692\n//*       LTM      - IGNORE ANY LEADING TAPE MARKS ON THE           *   FILE 692\n//*                  SYSUT1 TAPE                                    *   FILE 692\n//*       SKIPLAB  - SKIP WRITING ANY LABELS ON THE SYSUT2 TAPE     *   FILE 692\n//*                  WHILE COPYING IF COPY IS ALSO SPECIFIED.       *   FILE 692\n//*                  IN EFFECT, SYSUT2 TAPE WILL BE A               *   FILE 692\n//*                  NON-LABELED TAPE AFTERWARDS                    *   FILE 692\n//*       SKIPBAD  - SKIP OVER ANY BLOCKS OF DATA ON INPUT TAPE     *   FILE 692\n//*                  THAT CAUSE PERMANENT I/O ERRORS IN AN          *   FILE 692\n//*                  EFFORT TO RECOVER ANY DATA THAT FOLLOWS THE    *   FILE 692\n//*                  BAD BLOCK(S).  (RECOMMEND USE WITH SKIPLAB     *   FILE 692\n//*                  AND COPY OPTIONS TO BUILD A NON-LABELED        *   FILE 692\n//*                  TAPE CONTAINING ONLY THE READABLE BLOCKS OF    *   FILE 692\n//*                  THE BAD TAPE.)                                 *   FILE 692\n//*                                                                 *   FILE 692\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOADLIB": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x055\\x0f\\x01\\x055\\x0f\\x10\\t\\x00\\xf4\\x00\\xf4\\x00\\x00\\xe2\\xe2\\xf0\\xf2@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-12-16T00:00:00", "modifydate": "2005-12-16T10:09:00", "lines": 244, "newlines": 244, "modlines": 0, "user": "SS02"}, "mimetype": "audio/x-mp4a-latm", "datatype": "binary", "extension": ".x-mp4a-latm"}, "OBJECT": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x054\\x1f\\x01\\x054\\x1f\\x11E\\x01`\\x01`\\x00\\x00\\xe2\\xe2\\xf0\\xf2@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-12-07T00:00:00", "modifydate": "2005-12-07T11:45:21", "lines": 352, "newlines": 352, "modlines": 0, "user": "SS02"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "UATAPE": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00T\\x01\\x04$\\x9f\\x01\\x054\\x1f\\x11$\\x0f_\\x0fF\\x00\\x00\\xe2\\xe2\\xf0\\xf2@@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2005-12-07T11:24:54", "lines": 3935, "newlines": 3910, "modlines": 0, "user": "SS02"}, "text": "UATAPE   TITLE 'UATAPE -- TAPE LABEL UTILITY PROGRAM'                   UAT00010\n*********************************************************************** UAT00020\n*                                                                     * UAT00030\n*                                                                     * UAT00040\n*                             U A T A P E                             * UAT00050\n*                                                                     * UAT00060\n*                                                                     * UAT00070\n*     PROGRAM NAME:  UATAPE                                           * UAT00080\n*                                                                     * UAT00090\n*     AUTHOR:        DAVID L. MERRIFIELD                              * UAT00100\n*                    UNIVERSITY OF ARKANSAS                           * UAT00110\n*                    COMPUTING SERVICES                               * UAT00120\n*                    155 RAZORBACK ROAD                               * UAT00130\n*                    FAYETTEVILLE, AR 72701                           * UAT00140\n*                    PHONE:  479-575-5829                             * UAT00150\n*                    FAX  :  479-575-4753                             * UAT00150\n*                    email:  dlm@uark.edu                             * UAT00150\n*                                                                     * UAT00160\n*     VERSION:       1.0       SEPTEMBER 15, 1981                     * UAT00170\n*                    1.1       OCTOBER   24, 1981                     * UAT00180\n*                    1.2       MAY       10, 1982                     * UAT00190\n*                    1.3       OCTOBER   27, 1982                     * UAT00200\n*                    1.4       APRIL     05, 1983                     * UAT00210\n*                    1.5       DECEMBER  29, 1985                     * UAT00220\n*                    1.6       MARCH     28, 1987                     * UAT00230\n*                    1.61      OCTOBER    1, 1990                     * UAT00240\n*                    1.7       JULY      16, 1992 (3480 SUPPORT ADDED)* UAT00250\n*                    1.71      JUNE       6, 1994 (FIX LTM PROBLEM)   * UAT00260\n*                    1.72      AUGUST    23, 1996 (FIX LTM/NL PROBLEM)* UAT00270\n*                    1.8       OCTOBER    3, 2004 (64K Blocks)     SBG* UAT00270\n*                    1.81      DECEMBER   7, 2005 3490 AND 3590 ADDED * UAT00270\n*                                                                     * UAT00280\n*                                                                     * UAT00290\n*     DESCRIPTION:                                                    * UAT00300\n*         UATAPE IS A UTILITY PROGRAM THAT WILL READ AN ENTIRE        * UAT00310\n*         MAGNETIC TAPE VOLUME AND PRINT THE CONTENTS OF THE          * UAT00320\n*         VARIOUS FIELDS PRESENT IN THE LABEL RECORDS FOUND ON        * UAT00330\n*         IBM STANDARD-LABELED TAPES.  THE LABELS AND/OR THE          * UAT00340\n*         DATA FILES ON THE TAPE CAN BE PRINTED IN HEXADECIMAL        * UAT00350\n*         FORMAT IF DESIRED.  ALSO, UATAPE WILL COPY THE ENTIRE       * UAT00360\n*         TAPE VOLUME TO ANOTHER VOLUME.  NON-STANDARD OR NON-        * UAT00370\n*         LABELED TAPES ARE ALSO SUPPORTED, BUT ONLY MINIMAL          * UAT00380\n*         AMOUNTS OF INFORMATION CAN BE GLEANED FROM THESE TAPES.     * UAT00390\n*                                                                     * UAT00400\n*     PROGRAM REQUIREMENTS:                                           * UAT00410\n*         THIS VERSION OF UATAPE HAS BEEN TAILORED FOR USE UNDER      * UAT00420\n*         THE MVS/SP V1.3.5 OPERATING SYSTEM.  NO PROVISION HAS       * UAT00430\n*         BEEN MADE FOR ANY OTHER OPERATING SYSTEM.  UATAPE USES      * UAT00440\n*         ITS OWN INTERNAL CHANNEL PROGRAMS, WHICH IT EXECUTES        * UAT00450\n*         USING THE EXCP ACCESS METHOD.  ALSO, UATAPE INTERNALLY      * UAT00460\n*         FORCES THE TAPES THAT IT PROCESSES TO \"BYPASS LABEL         * UAT00470\n*         PROCESSING\" SO THAT IT CAN READ THE VOLUME AND DATA         * UAT00480\n*         SET LABELS WITHOUT INTERFERENCE FROM THE OPERATING          * UAT00490\n*         SYSTEM.  IF THE HOST OPERATING SYSTEM HAS A TAPE            * UAT00500\n*         MANAGEMENT SYSTEM INSTALLED (SUCH AS CA-1), IT WILL         * UAT00510\n*         PROBABLY BE NECESSARY TO INDICATE IN THE JCL THAT THE       * UAT00520\n*         TAPE BEING PROCESSED IS AN OUTSIDE, NON-TMS TAPE (SEE       * UAT00530\n*         JCL COMMENTS BELOW).                                        * UAT00540\n*                                                                     * UAT00550\n*         Tested on z/OS 1.4.  Works fine.                            * UAT00550\n*                                                                     * UAT00550\n*********************************************************************** UAT00560\n         EJECT                                                          UAT00570\n*********************************************************************** UAT00580\n*                                                                     * UAT00590\n*     DD-STATEMENT REQUIREMENTS:                                      * UAT00600\n*         DDNAME=STEPLIB  -- DEFINES THE LIBRARY IN WHICH UATAPE      * UAT00610\n*                            RESIDES IF NOT IN SYS1.LINKLIB           * UAT00620\n*         DDNAME=SYSPRINT -- DEFINES A SYSOUT=A PRINTED OUTPUT        * UAT00630\n*                            DATA SET                                 * UAT00640\n*         DDNAME=SYSUT1   -- DEFINES THE INPUT TAPE VOLUME            * UAT00650\n*         DDNAME=SYSUT2   -- DEFINES THE OUTPUT TAPE VOLUME IF        * UAT00660\n*                            COPYING TO BE DONE (OMITTED OTHERWISE)   * UAT00670\n*                                                                     * UAT00680\n*     SAMPLE JCL SETUP:                                               * UAT00690\n*                                                                     * UAT00700\n*         //AB123456 JOB (ACCOUNTING INFORMATION),'NAME',             * UAT00710\n*         //    CLASS=A,TIME=(,59),MSGLEVEL=(1,1)                     * UAT00720\n*         //   EXEC   PGM=UATAPE,PARM='...OPTIONS...'                 * UAT00730\n*         //STEPLIB  DD UNIT=SYSDA,DISP=SHR,DSN=UATAPE.LIBRARY        * UAT00740\n*         //SYSPRINT DD SYSOUT=A                                      * UAT00750\n*         //SYSUT1   DD UNIT=TAPE,DISP=OLD,VOL=SER=INTAPE             * UAT00760\n*         //SYSUT2   DD UNIT=TAPE,DISP=OLD,VOL=SER=OUTAPE,DCB=DEN=4   * UAT00770\n*         //                                                          * UAT00780\n*                                                                     * UAT00790\n*     CA-1 TAPE MANAGEMENT SYSTEM REQUIREMENTS:                       * UAT00800\n*                                                                     * UAT00810\n*         MOST TAPE MANAGEMENT SYSTEMS WILL NOT PERMIT UATAPE TO      * UAT00820\n*         RUN BECAUSE OF ITS POTENTIAL TO MOUNT, READ, AND WRITE      * UAT00830\n*         TAPES THAT HAVE NOT BEEN PROPERLY LOGGED INTO THEIR         * UAT00840\n*         TAPE CATALOGS.  CA-1 IS NO EXCEPTION.  IN ORDER FOR         * UAT00850\n*         UATAPE TO RUN UNDER CA-1, YOU MUST SPECIFY TO THE TMS       * UAT00860\n*         THAT THE TAPE BEING PROCESSED IS A NON-LIBRARIED TAPE.      * UAT00870\n*         THIS IS DONE BY SPECIFYING LABEL=EXPDT=98000 ON EACH        * UAT00880\n*         TAPE DD-STATEMENT:                                          * UAT00890\n*                                                                     * UAT00900\n*         //SYSUT1   DD UNIT=TAPE,DISP=OLD,VOL=SER=INTAPE,            * UAT00910\n*         //            LABEL=EXPDT=98000                             * UAT00920\n*         //SYSUT2   DD UNIT=TAPE,DISP=OLD,VOL=SER=OUTAPE,DCB=DEN=4,  * UAT00930\n*         //            LABEL=EXPDT=98000                             * UAT00940\n*                                                                     * UAT00950\n*         OTHER TAPE MANAGEMENT SYSTEMS MAY REQUIRE A SIMILAR         * UAT00960\n*         PROCEDURE, BUT THEY ARE NOT DISCUSSED HERE.                 * UAT00970\n*                                                                     * UAT00980\n*********************************************************************** UAT00990\n         EJECT                                                          UAT01000\n*********************************************************************** UAT01010\n*                                                                     * UAT01020\n*     PARM FIELD OPTIONS:                                             * UAT01030\n*                                                                     * UAT01040\n*         OPTIONS ARE SPECIFIED IN THE PARM= PARAMETER ON THE EXEC    * UAT01050\n*         STATEMENT.  EACH OPTION SHOULD BE SEPARATED BY A SINGLE     * UAT01060\n*         COMMA, WITH NO SPACES ALLOWED.  THE LIST OF VALID OPTIONS   * UAT01070\n*         FOLLOWS:                                                    * UAT01080\n*                                                                     * UAT01090\n*         LIST     - PRINT LABEL RECORD INFORMATION (DEFAULT)         * UAT01100\n*         COPY     - COPY SYSUT1 TAPE TO SYSUT2 TAPE                  * UAT01110\n*         DUMP     - PRINT ALL DATA RECORDS IN HEX FORMAT             * UAT01120\n*         DUMPLAB  - PRINT ALL LABEL RECORDS IN HEX FORMAT            * UAT01130\n*         DUMPALL  - PRINT ALL LABEL RECORDS AND DATA RECORDS IN      * UAT01140\n*                    HEXADECIMAL FORMAT                               * UAT01150\n*         BLOCKS   - PRINT SIZE OF DATA RECORDS                       * UAT01160\n*         PRINT    - PRINT ALL DATA RECORDS (EBCDIC FORMAT)           * UAT01170\n*         CRT      - OUTPUT IS FORMATTED FOR 80-COLUMN CRT SCREEN     * UAT01180\n*         ATOE     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED FROM    * UAT01190\n*                    ASCII TO EBCDIC                                  * UAT01200\n*         ETOA     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED FROM    * UAT01210\n*                    EBCDIC TO ASCII                                  * UAT01220\n*         BYPASS   - BYPASSES LABEL CHECKING FOR SYSUT2 TAPE IF       * UAT01230\n*                    COPY ALSO SPECIFIED                              * UAT01240\n*         VERBATIM - DOES NOT CHANGE CONTENT OF DATA RECORDS (E.G.,   * UAT01250\n*                    WON'T CHANGE LABEL INFORMATION LIKE VOLUME       * UAT01260\n*                    SERIAL, DENSITY FIELD, ETC.)                     * UAT01270\n*         DUMPMAX=NNN  - SPECIFY MAXIMUM NUMBER OF BLOCKS TO DUMP IF  * UAT01280\n*                        DUMP, DUMPLAB, OR DUMPALL IS ALSO SPECIFIED  * UAT01290\n*         PRINTMAX=NNN - SPECIFY MAXIMUM NUMBER OF RECORDS TO PRINT   * UAT01300\n*                        IF PRINT SPECIFIED                           * UAT01310\n*         MAXFILES=NNN - SPECIFY MAXIMUM NUMBER OF FILES ON TAPE TO   * UAT01320\n*                        TO PROCESS                                   * UAT01330\n*         LTM      - IGNORE ANY LEADING TAPE MARKS ON THE SYSUT1 TAPE * UAT01340\n*         SKIPLAB  - SKIP WRITING ANY LABELS ON THE SYSUT2 TAPE       * UAT01350\n*                    WHILE COPYING IF COPY IS ALSO SPECIFIED.  IN     * UAT01360\n*                    EFFECT, SYSUT2 TAPE WILL BE A NON-LABELED TAPE   * UAT01370\n*                    AFTERWARDS                                       * UAT01380\n*         SKIPBAD  - SKIP OVER ANY BLOCKS OF DATA ON INPUT TAPE THAT  * UAT01390\n*                    CAUSE PERMANENT I/O ERRORS IN AN EFFORT TO       * UAT01400\n*                    RECOVER ANY DATA THAT FOLLOWS THE BAD BLOCK(S).  * UAT01410\n*                    (RECOMMEND USE WITH SKIPLAB AND COPY OPTIONS TO  * UAT01420\n*                    BUILD A NON-LABELED TAPE CONTAINING ONLY THE     * UAT01430\n*                    READABLE BLOCKS OF THE BAD TAPE.)                * UAT01440\n*                                                                     * UAT01450\n*********************************************************************** UAT01460\n         EJECT                                                          UAT01470\n*********************************************************************** UAT01480\n*                                                                     * UAT01490\n*     COPYING A TAPE:                                                 * UAT01500\n*         UATAPE CAN BE USED TO COPY ONE TAPE VOLUME TO ANOTHER.      * UAT01510\n*         TO DO SO, YOU WOULD HAVE TO SPECIFY THE \"COPY\" OPTION       * UAT01520\n*         AND SUPPLY A SYSUT1 DDCARD FOR THE INPUT TAPE AND A         * UAT01530\n*         SYSUT2 DDCARD FOR THE OUTPUT TAPE.  UATAPE REQUIRES         * UAT01540\n*         THAT THE SYSUT2 TAPE BE A STANDARD-LABELED TAPE, AND        * UAT01550\n*         WILL CHECK THE VOLUME SERIAL IN ITS LABEL WITH THE          * UAT01560\n*         VOLUME SERIAL IN THE SYSUT2 DDCARD.  AN ERROR WILL BE       * UAT01570\n*         PRINTED AND UATAPE WILL TERMINATE IF THE TWO DO NOT         * UAT01580\n*         MATCH.  USE BYPASS OPTION TO SKIP THE SYSTEM VOLUME         * UAT01590\n*         LABEL PROCESSING.  USE SKIPLAB TO CREATE A NON-LABELED      * UAT01600\n*         TAPE FROM A STANDARD LABELED TAPE.                          * UAT01610\n*                                                                     * UAT01620\n*     OUTPUT TAPE VOLUME SERIAL:                                      * UAT01630\n*         UATAPE WILL COPY ALL LABEL AND DATA RECORDS FROM THE        * UAT01640\n*         SYSUT1 TAPE TO THE SYSUT2 TAPE INTACT, WITH THE ONE         * UAT01650\n*         EXCEPTION THAT ALL REFERENCES TO THE SYSUT1 TAPE'S          * UAT01660\n*         VOLUME SERIAL ARE CHANGED TO THE SYSUT2 TAPE'S VOLUME       * UAT01670\n*         SERIAL.  IN EFFECT, THE OUTPUT TAPE'S VOLUME SERIAL         * UAT01680\n*         IS NOT CHANGED BY THE COPY OPERATION.  TAPES WITHOUT        * UAT01690\n*         LABELS, OR TAPES HAVING NON-STANDARD LABELS, ARE            * UAT01700\n*         COPIED VERBATIM.  NO DATA OR INFORMATION IS CHANGED         * UAT01710\n*         FOR SUCH TAPES DURING THE COPY OPERATION.  USE THE          * UAT01720\n*         VERBATIM OPTION TO PREVENT CHANGING THE VOLUME SERIAL       * UAT01730\n*         IN THE LABELS, THUS CREATING AN EXACT DUPLICATE OF THE      * UAT01740\n*         INPUT TAPE.                                                 * UAT01750\n*                                                                     * UAT01760\n*     OUTPUT TAPE DENSITY:                                            * UAT01770\n*         UATAPE WILL ALSO SET THE PROPER DENSITY FOR THE OUTPUT      * UAT01780\n*         TAPE VOLUME.  IT USES THE DENSITY PRESENT IN THE SYSUT2     * UAT01790\n*         DDCARD'S DCB DENSITY PARAMETER.  ALL REFERENCES TO THE      * UAT01800\n*         DENSITY IN THE TAPE LABELS ARE MODIFIED TO REFLECT THE      * UAT01810\n*         CORRECT VALUE, IF REQUIRED.  CURRENTLY, MODESET COMMANDS    * UAT01820\n*         ARE PRESENT IN UATAPE FOR DENSITIES OF 800, 1600, AND       * UAT01830\n*         6250 BPI ONLY.                                              * UAT01840\n*                                                                     * UAT01850\n*     TAPE DRIVE AND TAPE CONTROLLER:                                 * UAT01860\n*         ALTHOUGH SEVERAL AREAS WITHIN UATAPE SUPPORT THE VARIOUS    * UAT01870\n*         DENSITIES AND NUMBER OF TRACKS FOR ITEMS WITHIN A TAPE'S    * UAT01880\n*         DATA SET LABELS, THE ACTUAL EXCP COMMAND STRUCTURE IS       * UAT01890\n*         LIMITED TO IBM 3420 TAPE DRIVES WITH AN IBM 3803 TAPE       * UAT01900\n*         CONTROLLER.  POSITION OF SENSE INFORMATION, AND THE         * UAT01910\n*         ACTUAL CHANNEL COMMANDS MAY DIFFER FOR ANY OTHER TYPE       * UAT01920\n*         OF CONTROLLER OR TAPE DRIVE.                                * UAT01930\n*                                                                     * UAT01940\n*********************************************************************** UAT01950\n         EJECT                                                          UAT01960\n*********************************************************************** UAT01970\n*                                                                     * UAT01980\n*     TAPE MARKS:                                                     * UAT01990\n*         UATAPE ASSUMES THAT ALL TAPES HAVE TWO CONTIGUOUS           * UAT02000\n*         TAPE MARKS RECORDED AT THE END OF ALL DATA AND              * UAT02010\n*         LABEL INFORMATION.  ** WARNING ** IF YOU ATTEMPT            * UAT02020\n*         TO PROCESS A TAPE HAVING ONLY ONE TAPE MARK AT              * UAT02030\n*         THE END, UATAPE WILL PRODUCE UNPREDICTABLE RESULTS,         * UAT02040\n*         IN PARTICULAR, THE TAPE VOLUME MAY RUN OFF THE END          * UAT02050\n*         OF THE REEL.  IF YOU KNOW THAT A TAPE HAS ONLY A SINGLE     * UAT02060\n*         TAPE MARK AT THE END OF ITS DATA, AND YOU ALSO KNOW THE     * UAT02070\n*         NUMBER OF FILES ON THE TAPE, YOU CAN USE THE MAXFILES=      * UAT02080\n*         OPTION TO PREVENT UATAPE FROM PROCESSING DATA BEYOND        * UAT02090\n*         THE END OF THE LAST FILE.                                   * UAT02100\n*                                                                     * UAT02110\n*********************************************************************** UAT02120\n         SPACE 4                                                        UAT02130\n*********************************************************************** UAT02140\n*                                                                     * UAT02150\n*     DISCLAIMER:                                                     * UAT02160\n*                                                                     * UAT02170\n*         NEITHER THE AUTHOR, NOR THE UNIVERSITY OF ARKANSAS, CAN     * UAT02180\n*         OR WILL ASSUME ANY RESPONSIBILITY FROM OR LIABILITY FOR     * UAT02190\n*         THE USE AND OPERATION OF THIS PROGRAM, NOR ARE ANY          * UAT02200\n*         WARRANTIES OR GUARANTEES, EITHER EXPRESSED OR IMPLIED,      * UAT02210\n*         OFFERED FOR ITS USE OR RESULTS.  IT HAS BEEN TESTED AND     * UAT02220\n*         IS IN PRODUCTION USE AT THE UNIVERSITY OF ARKANSAS, SO      * UAT02230\n*         IT SHOULD BE REASONABLY FREE OF ERROR.  USE AT YOUR OWN     * UAT02240\n*         RISK.                                                       * UAT02250\n*                                                                     * UAT02260\n*********************************************************************** UAT02270\n         EJECT                                                          UAT02280\n*  MACROS                                                               UAT02290\n         MACRO                                                          UAT02300\n&LABEL   MOVEMSG &NAME                                                  UAT02310\n.* THIS MACRO MOVES A MESSAGE TO THE PRINT LINE                         UAT02320\n&LABEL   L     R15,=A(&NAME)                                            UAT02330\n         MVC   LINE(L'&NAME),0(R15)                                     UAT02340\n         MEND                                                           UAT02350\n         SPACE 2                                                        UAT02360\n         MACRO                                                          UAT02370\n&LABEL   STACK &REG                                                     UAT02380\n.* THIS MACRO PLACES THE CONTENTS OF A REGISTER ON THE PROGRAM STACK    UAT02390\n&LABEL   L     R15,STACKPTR                                             UAT02400\n         ST    &REG,0(,R15)                                             UAT02410\n         LA    R15,4(,R15)                                              UAT02420\n         ST    R15,STACKPTR                                             UAT02430\n         MEND                                                           UAT02440\n         SPACE 2                                                        UAT02450\n         MACRO                                                          UAT02460\n&LABEL   UNSTACK &REG                                                   UAT02470\n.* THIS MACRO RETRIEVES CONTENTS OF LAST STACK ENTRY TO A REGISTER      UAT02480\n&LABEL   L     R15,STACKPTR                                             UAT02490\n         S     R15,=F'4'                                                UAT02500\n         L     &REG,0(,R15)                                             UAT02510\n         ST    R15,STACKPTR                                             UAT02520\n         MEND                                                           UAT02530\n         SPACE 2                                                        UAT02540\n         MACRO                                                          UAT02550\n&LABEL   DISCARD                                                        UAT02560\n.* THIS MACRO DISCARDS CONTENTS OF LAST STACK ENTRY                     UAT02570\n&LABEL   L     R15,STACKPTR                                             UAT02580\n         S     R15,=F'4'                                                UAT02590\n         ST    R15,STACKPTR                                             UAT02600\n         MEND                                                           UAT02610\n         EJECT                                                          UAT02620\n*********************************************************************** UAT02630\n*                                                                     * UAT02640\n*    PROGRAM INITIALIZATION SECTION:                                  * UAT02650\n*                                                                     * UAT02660\n*      (1) SETUP BASE REGISTERS AND SAVE AREA POINTERS                * UAT02670\n*      (2) GET THE TIME OF DAY                                        * UAT02680\n*      (3) OPEN SYSPRINT AND SYSUT1 DATA CONTROL BLOCKS               * UAT02690\n*      (4) GET A 32K I/O BUFFER                                       * UAT02700\n*      (5) PROCESS PROGRAM OPTIONS                                    * UAT02710\n*      (6) OPEN SYSUT2 DATA CONTROL BLOCK (IF COPY OPTION)            * UAT02720\n*      (7) PROCESS SYSUT1 AND SYSUT2 VOLUME LABELS (IF ANY)           * UAT02730\n*                                                                     * UAT02740\n*********************************************************************** UAT02750\n         SPACE                                                          UAT02760\nUATAPE   START 0                                                        UAT02770\n         USING *,R15               SET UP TEMPORARY BASE                UAT02780\n         B     GO                  SKIP AROUND IDENTIFIER               UAT02790\n         DC    AL1(7),CL7'UATAPE'  DUMP IDENTIFIER                      UAT02800\nBASES    DC    A(UATAPE,UATAPE+4096,UATAPE+8192)   BASE ADDRESSES       UAT02810\nGO       DS    0H                  ALIGN TO HALFWORD                    UAT02820\n         STM   R14,R12,12(R13)     SAVE REGISTERS                       UAT02830\n         LM    R10,R12,BASES       LOAD 3 BASE REGISTERS                UAT02840\n         DROP  R15                 DROP TEMPORARY BASE REGISTER         UAT02850\n         USING UATAPE,R10,R11,R12  DECLARE PERMANENT BASES              UAT02860\n         ST    R13,SAVE+4          PERFORM                              UAT02870\n         LR    R15,R13               SAVE                               UAT02880\n         LA    R13,SAVE                AREA                             UAT02890\n         ST    R13,8(,R15)               CHAINING                       UAT02900\n         ST    R1,PARMADDR         SAVE PARM FIELD ADDR                 UAT02910\n         TIME  DEC                 GET THE TIME AND DATE                UAT02920\n         ST    R0,DOUBLE           SAVE THE TIME                        UAT02930\n         ED    TIME(9),DOUBLE      PLACE EDITED TIME IN LINE            UAT02940\n         BAL   R9,DATECONV         CONVERT DATE                         UAT02950\n         BAL   R9,OPEN1            GO OPEN SYSPRINT AND SYSUT1          UAT02960\n         BAL   R9,GETPARMS         GO INTERPRET PARM FIELD              UAT02970\n         BAL   R9,OPEN2            GO OPEN SYSUT2                       UAT02980\n         BAL   R9,LABELS           GO PROCESS SYSUT1/SYSUT2 LABELS      UAT02990\n         TM    FLAG,#SL            ARE THERE LABELS?                    UAT03000\n         BNO   NEWFILE             NO - SKIP                            UAT03010\n         TM    OPTIONS1,#SKIPLAB+#COPY                                  UAT03020\n         BNO   NEWFILE             NO - SKIP                            UAT03030\n         MOVEMSG MSG54             SKIPPING ALL LABELS ON OUTPUT        UAT03040\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT MSG OVER                 UAT03050\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03060\n         EJECT                                                          UAT03070\n*********************************************************************** UAT03080\n*                                                                     * UAT03090\n*   IF THE SYSUT1 TAPE CONTAINS STANDARD LABELS, THIS SECTION OF      * UAT03100\n*   CODE PROCESSES THE HDR1 AND HDR2 LABELS AT THE BEGINNING OF       * UAT03110\n*   EACH DATA SET ON THE TAPE.  IF THE COPY OPTION IS IN EFFECT,      * UAT03120\n*   THE LABEL INFORMATION IS MODIFIED TO MATCH THE SYSUT2 TAPE'S      * UAT03130\n*   CHARACTERISTICS (E.G., DENSITY, VOLUME SERIAL), AND THE LABEL     * UAT03140\n*   RECORDS ARE WRITTEN TO THAT TAPE.  IF THE DUMPLAB OR DUMPALL      * UAT03150\n*   OPTIONS ARE IN EFFECT, THE LABEL RECORDS ARE DUMPED.              * UAT03160\n*                                                                     * UAT03170\n*********************************************************************** UAT03180\n         SPACE                                                          UAT03190\nNEWFILE  EQU   *                                                        UAT03200\n         SR    R15,R15             MAKE SOMETHING ZERO                  UAT03210\n         ST    R15,MXLABERR        SET LABEL ERROR COUNT TO ZERO        UAT03220\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT03230\n         LA    R15,1(,R15)         INCREMENT BY ONE                     UAT03240\n         ST    R15,FILECNT         SAVE THE FILE COUNTER                UAT03250\n         CVD   R15,DOUBLE          CONVERT FILE COUNTER TO DECIMAL      UAT03260\n         UNPK  FILENO(4),DOUBLE(8) ALSO TO CHARACTER                    UAT03270\n         OI    FILENO+3,X'F0'      INSUIRE SIGN NIBBLE                  UAT03280\n         OI    FLAG2,#PRTFLAG      SET FLAG TO PRINT MSG41              UAT03290\n         TM    OPTIONS3,#MXFILES   WAS MAX FILES FLAG SET?              UAT03300\n         BNO   NOMAX               NO - SKIP CHECK                      UAT03310\n         C     R15,MAXFILES        ARE WE PAST MAXIMUM                  UAT03320\n         BNH   NOMAX               NO - CONTINUE                        UAT03330\n         CVD   R15,DOUBLE          CONVERT FILE COUNT                   UAT03340\n         MOVEMSG MSG55             TERMINATING THIS TAPE: XXX FILES     UAT03350\n         UNPK  LINE+MSG55C(5),DOUBLE(8)   TO CHARACTER                  UAT03360\n         OI    LINE+MSG55C+4,X'F0' INSURE SIGN                          UAT03370\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03380\n         OI    FLAG,#TAPEMRK       LET'S WRITE A TAPE MARK              UAT03390\n         BAL   R9,WRITE2           WRITE A LAST TAPE MARK               UAT03400\n         B     EPISTAT             AND TERMINATE                        UAT03410\n         SPACE                                                          UAT03420\nNOMAX    EQU   *                                                        UAT03430\n         TM    FLAG,#SL            IS THIS A STANDARD LABEL TAPE?       UAT03440\n         BNO   DSSTART             NO - SKIP TO PROCESS THE DATA        UAT03450\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT03460\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT03470\n         SPACE                                                          UAT03480\nLABLOOP1 EQU   *                                                        UAT03490\n         OI    FLAG2,#LABREC       INDICATE PROCESSING LABEL RECORD     UAT03500\n         BAL   R9,READ1            GO READ A BLOCK FROM SYSUT1          UAT03510\n         BAL   R9,TRANSLAB         GO TRANSLATE ASCII/EBCDIC            UAT03520\n         BAL   R9,FIXLAB           GO CHANGE VOLSER TO SYSUT2 VOLSER    UAT03530\n         BAL   R9,PRTLABEL         GO PRINT LABEL INFORMATION           UAT03540\n         BAL   R9,TRANSBCK         GO TRANSLATE EBCDIC/ASCII            UAT03550\n         BAL   R9,DUMPLAB          GO PRINT DUMP OF BLOCK               UAT03560\n         TM    OPTIONS1,#SKIPLAB   DO WE SKIP WRITING THE LABEL?        UAT03570\n         BO    LABSKIP1            YES                                  UAT03580\n         BAL   R9,WRITE2           GO WRITE TO SYSUT2                   UAT03590\nLABSKIP1 EQU   *                                                        UAT03600\n         TM    FLAG,#TAPEMRK       WAS THIS A TAPE MARK?                UAT03610\n         BNO   LABLOOP1            NO - CONTINUE LABEL LOOKING          UAT03620\n         MOVEMSG MSG8              --- TAPE MARK --- TAPE MARK ---      UAT03630\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03640\n         TM    FLAG,#ENDTAPE       ARE WE AT THE END OF THE TAPE?       UAT03650\n         BO    EOT                 YES - GO TERMINATE                   UAT03660\n         TM    FLAG2,#INITHDR      DID WE FIND AN IEHINITT HDR1?        UAT03670\n         BO    EPILOG              YES - GOTTA QUIT NOW                 UAT03680\n         EJECT                                                          UAT03690\n*********************************************************************** UAT03700\n*                                                                     * UAT03710\n*    THE FOLLOWING SECTION READS THE DATA PORTION OF EACH DATA SET    * UAT03720\n*    ON THE SYSUT1 TAPE.  IF THE COPY OPTION IS IN EFFECT, THE DATA   * UAT03730\n*    IS WRITTEN TO THE SYSUT2 TAPE. IF THE DUMP OR DUMPALL OPTIONS    * UAT03740\n*    ARE IN EFFECT, EACH DATA BLOCK IS DUMPED.                        * UAT03750\n*    IF THE PRINT OPTION IS IN EFFECT, THE DATA IS PRINTED.  ALSO,    * UAT03760\n*    STATISTICS SUCH AS NUMBER OF BLOCKS, MAXIMUM AND MINIMUM SIZE    * UAT03770\n*    OF EACH BLOCK, NUMBER OF BYTES IN THE DATA SET, AND THE ACTUAL   * UAT03780\n*    DENSITY OF THE DATA ARE MAINTAINED FOR LATER USE.                * UAT03790\n*                                                                     * UAT03800\n*********************************************************************** UAT03810\n         SPACE                                                          UAT03820\nDSSTART  EQU   *                                                        UAT03830\n         NI    FLAG2,255-#LABREC   CLEAR LABEL PROCESSING FLAG          UAT03840\n         SR    R15,15              CLEAR BLOCK COUNTER                  UAT03850\n         ST    R15,BLOCKCNT        RESET BLOCK COUNTER                  UAT03860\n         ST    R15,BYTECNT         RESET BYTE COUNTER                   UAT03870\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT03880\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT03890\n         SPACE                                                          UAT03900\n*   LOOP OVER ALL RECORDS IN THE DATA FILE                              UAT03910\nDSLOOP   EQU   *                                                        UAT03920\n         BAL   R9,READ1            GO READ DATA SET BLOCK               UAT03930\n         BAL   R9,TRANSLTE         GO PERFORM ANY TRANSLATIONS          UAT03940\n         BAL   R9,WRITE2           GO WRITE IT TO SYSUT2                UAT03950\n         TM    FLAG,#TAPEMRK       DID WE HIT TAPE MARK?                UAT03960\n         BO    ENDDATA             YES - END OF DATA AREA               UAT03970\n         NI    FLAG,255-#LTMPRES   NO  - SHOW THAT WE HAVE DATA         UAT03980\n         TM    FLAG2,#PRTFLAG      ARE WE TO PRINT MSG41?               UAT03990\n         BNO   NOMSG41B            NO - SKIP PRINTING IT                UAT04000\n         NI    FLAG2,255-#PRTFLAG  RESET THE FLAG                       UAT04010\n         MOVEMSG MSG41             MOVE MESSAGE TO PRINT LINE           UAT04020\n         MVC   LINE+MSG41F(4),FILENO   MOVE IN FILE NUMBER              UAT04030\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT04040\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT04050\nNOMSG41B EQU   *                                                        UAT04060\n         L     R15,BYTECNT         LOAD BYTE COUNTER                    UAT04070\n         A     R15,RECLENF         ADD THIS BLOCK'S LENGTH              UAT04080\n         ST    R15,BYTECNT         SAVE NEW BYTE COUNTER                UAT04090\n         L     R15,TBYTECNT        LOAD BYTE COUNTER                    UAT04100\n         A     R15,RECLENF         ADD THIS BLOCK'S LENGTH              UAT04110\n         ST    R15,TBYTECNT        SAVE NEW BYTE COUNTER                UAT04120\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT04130\n         LTR   R15,R15             IS BLOCK COUNT ZERO?                 UAT04140\n         BNZ   NOTFIRST            NO - NOT FIRST BLOCK                 UAT04150\n         MVC   MAXBLK(4),RECLENF   SAVE NEW MAXIMUM BLOCK SIZE          UAT04160\n         MVC   MINBLK(4),RECLENF   SAVE NEW MINIMUM BLOCK SIZE          UAT04170\n         SPACE                                                          UAT04180\n*   MAINTAIN BLOCK COUNTER AND MIN/MAX BLOCK SIZES                      UAT04190\nNOTFIRST EQU   *                                                        UAT04200\n         LA    R15,1(,R15)         INCREMENT THE COUNTER BY 1           UAT04210\n         ST    R15,BLOCKCNT        SAVE NEW COUNT                       UAT04220\n*        LH    R15,RECLEN          LOAD BLOCK'S LENGTH                  UAT04230\n         L     R15,RECLENF         Load fullword value of halfword\n         C     R15,MAXBLK          IS IT LARGER THAN BEFORE?            UAT04240\n         BNH   CHKMIN              NO - BRANCH                          UAT04250\n         ST    R15,MAXBLK          SAVE NEW MAXIMUM                     UAT04260\nCHKMIN   EQU   *                                                        UAT04270\n         C     R15,MINBLK          IS IT SMALLER THAN BEFORE?           UAT04280\n         BNL   DOBLOCKS            NO - BRANCH                          UAT04290\n         ST    R15,MINBLK          SAVE NEW MINIMUM                     UAT04300\nDOBLOCKS EQU   *                                                        UAT04310\n         BAL   R9,BLOCKS           GO TO BLOCKS SUBROUTINE              UAT04320\n         BAL   R9,DUMPBLK          GO DUMP THE BLOCK                    UAT04330\n         BAL   R9,PRINTBLK         GO PRINT THE BLOCK                   UAT04340\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT04350\n         BCT   R15,DSLOOP          IF NOT 1ST BLOCK, LOOP BACK          UAT04360\n         SPACE                                                          UAT04370\n         BAL   R9,SENSE1           GO GET SENSE INFORMATION FOR SYSUT1  UAT04380\n*   IF CARTRIDGE, INDICATE WHETHER IN IDRC FORMAT                       UAT04390\n         TM    FLAG2,#CART1        IS THIS A 3480 CART?                 UAT04400\n         BNO   NOTCART1            NO - SKIP                            UAT04410\n         MOVEMSG MSG60             IDRC DATA COMPRESSION IS OFF         UAT04420\n         NI    FLAG3,255-#IDRC1    RESET IDRC FLAG                      UAT04430\n         NI    #SENSE4,X'C0'       CLEAR BITS WE DON'T WANT             UAT04440\n         CLI   #SENSE4,X'80'       IS IDRC ON?                          UAT04450\n         BNE   NOIDRC1             NO - SKIP                            UAT04460\n         OI    FLAG3,#IDRC1        SET IDRC FLAG                        UAT04470\n         MVC   LINE+MSG60A(4),=C'ON. ' SWITCH MSG TO ON                 UAT04480\nNOIDRC1  EQU   *                                                        UAT04490\n         BAL   R9,PRINTIT          PRINT MSG                            UAT04500\n         ICM   R15,15,DEN38K+DENTABB         38K BPI                    UAT04510\n         MVC   DENSITY1(4),DEN38K+DENTABC    38K BPI                    UAT04520\n         MVC   INIRG(6),DEN38K+DENTABN       IRG SIZE                   UAT04530\n         B     PRINT27             AND LOOP OUT                         UAT04540\nNOTCART1 EQU   *                                                        UAT04550\n         ICM   R15,15,DEN1600+DENTABB        1600 BPI                   UAT04560\n         MVC   DENSITY1(4),DEN1600+DENTABC   1600 BPI                   UAT04570\n         MVC   INIRG(6),DEN1600+DENTABN      IRG SIZE                   UAT04580\n         TM    #SENSE6,#BIT3       #BIT3=0 FOR 1600 BPI                 UAT04590\n         BZ    PRINT27             SKIP TO PRINT THE MSG                UAT04600\n         ICM   R15,15,DEN6250+DENTABB        6250 BPI                   UAT04610\n         MVC   DENSITY1(4),DEN6250+DENTABC   6250 BPI                   UAT04620\n         MVC   INIRG(6),DEN6250+DENTABN      IRG SIZE                   UAT04630\n         TM    #SENSE6,#BIT4       #BIT4=1 FOR 6250, #BIT4=0 FOR 800    UAT04640\n         BO    PRINT27             SKIP TO PRINT THE MSG                UAT04650\n         ICM   R15,15,DEN800+DENTABB         800 BPI                    UAT04660\n         MVC   DENSITY1(4),DEN800+DENTABC    800 BPI                    UAT04670\n         MVC   INIRG(6),DEN800+DENTABN       IRG SIZE                   UAT04680\nPRINT27  EQU   *                                                        UAT04690\n         ST    R15,DENSYS1         SAVE BYTES PER FOOT                  UAT04700\n         B     DSLOOP              LOOP BACK FOR NEXT BLOCK             UAT04710\n         EJECT                                                          UAT04720\n*********************************************************************** UAT04730\n*                                                                     * UAT04740\n*    WHEN A TAPE MARK HAS BEEN DETECTED SIGNALING END-OF-FILE ON      * UAT04750\n*    THE DATA PORTION OF THE DATA SET ON SYSUT1, THE BLOCKS OPTION    * UAT04760\n*    IS WRAPPED UP FOR THIS FILE, THE FILE LENGTH IS PRINTED FOR      * UAT04770\n*    SYSUT1 (AND SYSUT2 IF THE COPY OPTION IS IN EFFECT), AND THE     * UAT04780\n*    ACTUAL BLOCK COUNT FOR THE FILE IS PRINTED.                      * UAT04790\n*                                                                     * UAT04800\n*********************************************************************** UAT04810\n         SPACE                                                          UAT04820\nENDDATA  EQU   *                                                        UAT04830\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT04840\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT04850\n         TM    FLAG,#SL+#ENDTAPE   STD LABEL AND TWO TAPE MARKS?        UAT04860\n         BO    NULLFILE            YES - NULL DATA FILE                 UAT04870\n         TM    FLAG,#SL            IS THIS A STD LABEL TAPE?            UAT04880\n         BO    DATASTAT            YES - SKIP NL CHECK                  UAT04890\n         TM    FLAG,#ENDTAPE       ARE WE AT THE END OF NL TAPE?        UAT04900\n         BNO   DATASTAT            NO  - GO PRINT FILE STATS            UAT04910\n         MOVEMSG MSG8              --- TAPE MARK ---                    UAT04920\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT04930\n         B     EOT                 NOW TERMINATE PROGRAM                UAT04940\n         SPACE                                                          UAT04950\nNULLFILE EQU   *                                                        UAT04960\n         NI    FLAG,255-#ENDTAPE   RESET 2-TAPE-MARK FLAG               UAT04970\n         L     R15,BSTATBUF        LOAD CURRENT STAT ENTRY ADDR         UAT04980\n         MVC   STATLEN(4,R15),=C'....' SHOW NULL FILE LENGTH            UAT04990\n         MOVEMSG MSG43             NULL DATA FILE                       UAT05000\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05010\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05020\n         UNPK  LINE+MSG43F(4),DOUBLE(8)    CONVERT TO CHARACTER         UAT05030\n         OI    LINE+MSG43F+3,X'F0' INSURE SIGN NIBBLE                   UAT05040\n         BAL   R9,PRINTIT          GO PRINT MSG                         UAT05050\n         MOVEMSG MSG8              --- TAPE MARK ---                    UAT05060\n         BAL   R9,PRINTIT          GO PRINT MSG                         UAT05070\n         B     LABLOOP2            GO BEGIN PROCESSING EOF LABELS       UAT05080\n         SPACE                                                          UAT05090\nDATASTAT EQU   *                                                        UAT05100\n         TM    FLAG,#LTMPRES       LEADING TAPE MARK?                   UAT05110\n         BO    NOSTATS             YES - DON'T DO STATS                 UAT05120\n         BAL   R9,BLOCKS           PRINT BLOCKS ACCUMULATION            UAT05130\n         MOVEMSG MSG27             SYSUT1 DENSITY AND FILE LENGTH       UAT05140\n         MVC   LINE+MSG27D(4),DENSITY1  MOVE IN SYSUT1 DENSITY          UAT05150\n         L     R0,BYTECNT          NUMBER OF BYTES IN DATA SET          UAT05160\n         SRDA  R0,32               PREPARE FOR DIVIDE                   UAT05170\n         D     R0,DENSYS1          CALCULATE NO. OF INCHES              UAT05180\n         L     R14,BLOCKCNT        NUMBER OF BLOCKS IN DATA SET         UAT05190\n         MH    R14,INIRG           SIMULATE MULTIPLYING                 UAT05200\n         SRDA  R14,32                  BY A                             UAT05210\n         D     R14,INIRG+2                FRACTION                      UAT05220\n         AR    R1,R15              ADD GAP LENGTH TO DATA LENGTH        UAT05230\n         SR    R0,R0               PREPARE FOR DIVIDE                   UAT05240\n         D     R0,=F'12'           CONVERT INCHES TO FEET               UAT05250\n         LTR   R1,R1               ZERO FEET?                           UAT05260\n         BNZ   NOTLT1              NO - SKIP                            UAT05270\n         LA    R1,1                SHOW AT LEAST 1 FOOT                 UAT05280\n         MVI   LINE+MSG27B-2,C'<'  SHOW LESS THAN                       UAT05290\nNOTLT1   EQU   *                                                        UAT05300\n         C     R1,=F'2'            LESS THAN TWO FEET?                  UAT05310\n         BNL   NOTLT2              NO - SKIP                            UAT05320\n         MVC   LINE+MSG27B+6(2),=C'OO'   MAKE FEET INTO FOOT            UAT05330\nNOTLT2   EQU   *                                                        UAT05340\n         CVD   R1,DOUBLE           MAKE IT DECIMAL                      UAT05350\n         A     R1,TOTFEET          ADD TO CURRENT LENGTH CNTR           UAT05360\n         ST    R1,TOTFEET          SAVE NEW VALUE                       UAT05370\n         UNPK  LINE+MSG27B(4),DOUBLE(8)  MAKE IT CHARACTER              UAT05380\n         OI    LINE+MSG27B+3,X'F0' INSURE SIGN NIBBLE                   UAT05390\n         L     R15,BSTATBUF        LOAD CURRENT STAT BUF ADDR           UAT05400\n         MVC   STATLEN(4,R15),LINE+MSG27B   SAVE LENGTH FOR STATS       UAT05410\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT05420\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT05430\n         BNO   NO2LEN              NO - SKIP                            UAT05440\n         MOVEMSG MSG40             SYSUT2 LENGTH                        UAT05450\n         L     R0,BYTECNT          NUMBER OF BYTES IN DATA SET          UAT05460\n         SRDA  R0,32               PREPARE FOR DIVIDE                   UAT05470\n         D     R0,DENSYS2          CALCULATE LENGTH IN INCHES           UAT05480\n         L     R14,BLOCKCNT        NUMBER OF BLOCKS IN DATA SET         UAT05490\n         MH    R14,OUTIRG          SIMULATE MULTIPLYING                 UAT05500\n         SRDA  R14,32                  BY A                             UAT05510\n         D     R14,OUTIRG+2               FRACTION                      UAT05520\n         AR    R1,R15              ADD GAP LENGTH TO DATA LENGTH        UAT05530\n         SR    R0,R0               PREPARE FOR DIVIDE                   UAT05540\n         D     R0,=F'12'           CONVERT LENGTH TO FEET               UAT05550\n         LTR   R1,R1               ZERO FEET?                           UAT05560\n         BNZ   NOTLT1B             NO - SKIP                            UAT05570\n         LA    R1,1                SHOW AT LEAST 1 FOOT                 UAT05580\n         MVI   LINE+MSG40B-2,C'<'  SHOW LESS THAN                       UAT05590\nNOTLT1B  EQU   *                                                        UAT05600\n         C     R1,=F'2'            LESS THAN TWO FEET?                  UAT05610\n         BNL   NOTLT2B             NO - SKIP                            UAT05620\n         MVC   LINE+MSG40B+6(2),=C'OO'   MAKE FEET INTO FOOT            UAT05630\nNOTLT2B  EQU   *                                                        UAT05640\n         CVD   R1,DOUBLE           MAKE IT DECIMAL                      UAT05650\n         A     R1,TOTFEET2         ADD TO TOTAL SYSUT2 LENGTH           UAT05660\n         ST    R1,TOTFEET2         SAVE NEW LENGTH                      UAT05670\n         UNPK  LINE+MSG40B(4),DOUBLE(8)  MAKE IT CHARACTER              UAT05680\n         OI    LINE+MSG40B+3,X'F0' INSURE SIGN NIBBLE                   UAT05690\n         MVC   LINE+MSG40D(4),DENSITY2  MOVE IN SYSUT2 DENSITY          UAT05700\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT05710\nNO2LEN   EQU   *                                                        UAT05720\n         MOVEMSG MSG18             FILE XXXX CONTAINS YYYYY BLOCKS      UAT05730\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05740\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05750\n         UNPK  LINE+MSG18F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05760\n         OI    LINE+MSG18F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05770\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05780\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05790\n         UNPK  LINE+MSG18F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05800\n         OI    LINE+MSG18F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05810\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT05820\n         CVD   R15,DOUBLE          CONVERT IT TO DECIMAL                UAT05830\n         UNPK  LINE+MSG18D(6),DOUBLE(8)   CONVERT TO PRINTABLE          UAT05840\n         OI    LINE+MSG18D+5,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05850\n         BCT   R15,NOTEQ1          BRANCH IF MORE THAN ONE BLOCK        UAT05860\n         MVC   LINE+MSG18D+12(2),=C'. '   MAKE \"BLOCKS\" INTO \"BLOCK\"    UAT05870\nNOTEQ1   EQU   *                                                        UAT05880\n         L     R15,MAXBLK          LOAD MAXIMUM BLKSIZE                 UAT05890\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05900\n         UNPK  LINE+MSG18X(5),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05910\n         OI    LINE+MSG18X+4,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05920\n         L     R15,MINBLK          LOAD MINIMUM BLKSIZE                 UAT05930\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05940\n         UNPK  LINE+MSG18N(5),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05950\n         OI    LINE+MSG18N+4,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05960\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT05970\n         MOVEMSG MSG62             FILE XXXX CONTAINS XXXX BYTES        UAT05980\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05990\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT06000\n         UNPK  LINE+MSG62F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT06010\n         OI    LINE+MSG62F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT06020\n         L     R15,BYTECNT         GET TOTAL NUMBER OF BYTES            UAT06030\n         CVD   R15,DOUBLE          CONVERT TO                           UAT06040\n         MVC   LINE+MSG62D(15),=X'4020206B2020206B2020206B202120'       UAT06050\n         EDMK  LINE+MSG62D(15),DOUBLE+2    PRINTABLE DECIMAL            UAT06060\n         MVC   LINE+MSG62D(40),0(R1)    SHIFT OVER FOR APPEARANCE       UAT06070\n*        UNPK  LINE+MSG62D(10),DOUBLE(8)   PRINTABLE DECIMAL            UAT06080\n*        OI    LINE+MSG62D+9,X'F0'  MAKE LAST DIGIT PRINTABLE           UAT06090\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06100\n         MOVEMSG MSG8              --- TAPE MARK --- TAPE MARK ---      UAT06110\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06120\nNOSTATS  EQU   *                                                        UAT06130\n         TM    FLAG,#SL            IS THIS STANDARD LABEL TAPE?         UAT06140\n         BNO   NEWFILE             NO - DO NOT PROCESS LABELS           UAT06150\n         EJECT                                                          UAT06160\n*********************************************************************** UAT06170\n*                                                                     * UAT06180\n*    THIS SECTION OF CODE PROCESSES ANY END-OF-FILE LABELS ON THE     * UAT06190\n*    SYSUT1 TAPE (IF IT CONTAINS STANDARD LABELS).  THE INFORMATION   * UAT06200\n*    IN EACH EOF1 AND EOF2 (AND POSSIBLY EOV1 AND EOV2) LABEL IS      * UAT06210\n*    PRINTED (SOME INFORMATION IS OMITTED SINCE IT DUPLICATES THAT    * UAT06220\n*    FOUND IN THE HDR1 AND HDR2 LABEL RECORDS).  IF THE COPY OPTION   * UAT06230\n*    IS IN EFFECT, THE LABEL RECORDS ARE WRITTEN TO THE SYSUT2        * UAT06240\n*    TAPE.  IF THE DUMPLAB OR DUMPALL OPTIONS ARE IN EFFECT, THE      * UAT06250\n*    LABEL RECORDS ARE DUMPED.                                        * UAT06260\n*                                                                     * UAT06270\n*********************************************************************** UAT06280\n         SPACE                                                          UAT06290\nLABLOOP2 EQU   *                                                        UAT06300\n         OI    FLAG2,#LABREC       INDICATE PROCESSING LABEL RECORD     UAT06310\n         BAL   R9,READ1            GO READ LABEL BLOCK                  UAT06320\n         BAL   R9,TRANSLAB         GO PERFORM ANY TRANSLATIONS          UAT06330\n         BAL   R9,FIXLAB           GO CHANGE VOLSER TO SYSUT2 VOLSER    UAT06340\n         BAL   R9,PRTLABEL         GO PRINT LABEL INFORMATION           UAT06350\n         BAL   R9,TRANSBCK         GO TRANSLATE ASCII LABEL BACK        UAT06360\n         BAL   R9,DUMPLAB          GO DUMP LABEL INFORMATION            UAT06370\n         TM    OPTIONS1,#SKIPLAB   DO WE SKIP WRITING LABEL?            UAT06380\n         BO    LABSKIP2            YES                                  UAT06390\n         BAL   R9,WRITE2           GO WRITE IT TO SYSUT2                UAT06400\nLABSKIP2 EQU   *                                                        UAT06410\n         TM    FLAG,#TAPEMRK       DID WE HIT TAPE MARK?                UAT06420\n         BNO   LABLOOP2            NO - CONTINUE WITH NEXT BLOCK        UAT06430\n         MOVEMSG MSG8              --- TAPE MARK -----------------      UAT06440\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT06450\n         L     R15,BSTATBUF        LOAD STAT BUF ENTRY ADDR             UAT06460\n         LA    R15,WSTATBUF(,R15)  POINT TO NEXT ENTRY                  UAT06470\n         ST    R15,BSTATBUF        SAVE NEW ENTRY ADDR                  UAT06480\n         TM    FLAG2,#EOV          WAS END-OF-VOLUME LABEL FOUND?       UAT06490\n         BNO   NEWFILE             NO - CONTINUE TO NEXT FILE           UAT06500\nEOT      EQU   *                                                        UAT06510\n         MOVEMSG MSG1              END OF TAPE MESSAGE                  UAT06520\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06530\n         OI    FLAG,#TAPEMRK       GO WRITE A TAPE MARK                 UAT06540\n         BAL   R9,WRITE2             FOR INSURANCE SAKE                 UAT06550\n         SPACE                                                          UAT06560\nEPISTAT  EQU   *                                                        UAT06570\n         BAL   R9,EOTSTATS         GO PRINT END OF TAPE STATS           UAT06580\n         MOVEMSG MSG68             UATAPE - NORMAL END OF EXECUTION'    UAT06590\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT06600\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT06610\n         EJECT                                                          UAT06620\n*********************************************************************** UAT06630\n*                                                                     * UAT06640\n*   EPILOG --- PROGRAM TERMINATION SECTION                              UAT06650\n*                                                                     * UAT06660\n*********************************************************************** UAT06670\n         SPACE                                                          UAT06680\nEPILOG   EQU   *                                                        UAT06690\n         CLOSE (SYSPRINT,,SYSUT1,REWIND,SYSUT2,REWIND)                  UAT06700\n         L     R1,BUFADDR          LOAD BUFFER POINTER                  UAT06710\n         LTR   R1,R1               DID WE EVER GET ONE?                 UAT06720\n         BZ    NOFREE1             NO - SKIP FREEMAIN                   UAT06730\n         FREEMAIN R,LV=66000,A=(1) FREE UP THE BUFFER                   UAT06740\nNOFREE1  EQU   *                                                        UAT06750\n         L     R1,ASTATBUF         LOAD BUFFER POINTER                  UAT06760\n         LTR   R1,R1               DID WE EVER GET ONE?                 UAT06770\n         BZ    NOFREE2             NO - SKIP FREEMAIN                   UAT06780\n         FREEMAIN R,LV=LSTATBUF,A=(1) FREE UP THE BUFFER                UAT06790\nNOFREE2  EQU   *                                                        UAT06800\n         L     13,4(,13)           RESTORE SAVE REGISTER                UAT06810\n         L     R14,12(,R13)        RESTORE RETURN ADDR                  UAT06820\n         SR    R15,R15             CLEAR REGISTER 15                    UAT06830\n         IC    R15,RETCODE         LOAD RETURN CODE                     UAT06840\n         LM    R0,R12,20(R13)      RESTORE REMAINING REGS               UAT06850\n         BR    R14                 RETURN TO SYSTEM                     UAT06860\n         EJECT                                                          UAT06870\n*********************************************************************** UAT06880\n*                                                                     * UAT06890\n*     DATECONV                                                        * UAT06900\n*                                                                     * UAT06910\n*           THIS ROUTINE CONVERTS THE PACKED 00YYDDDC JULIAN          * UAT06920\n*           DATE FROM THE TIME MACRO TO CHARACTER YY/MM/DD.           * UAT06930\n*                                                                     * UAT06940\n*********************************************************************** UAT06950\n         SPACE                                                          UAT06960\nDATECONV EQU   *                                                        UAT06970\n         STACK R9                  SAVE RETURN ADDRESS ON STACK         UAT06980\n         ST    R1,DOUBLE+4         STICK PACKED DATE INTO WORK AREA     UAT06990\n         XC    DOUBLE(6),DOUBLE    ZERO OUT YEAR TO LEAVE PACKED DAYS   UAT07000\n         CVB   R0,DOUBLE           CONVERT DAY COUNT TO BINARY          UAT07010\n         SRL   R1,12               LET'S GET THE DATE NOW               UAT07020\n         ST    R1,DOUBLE+4         STICK PACKED YEAR INTO WORK AREA     UAT07030\n         OI    DOUBLE+7,X'0F'      MAKE SURE SIGN IS OK                 UAT07040\n         UNPK  @YEAR(2),DOUBLE(8)  CONVERT YEAR TO CHARACTER            UAT07050\n         OI    @YEAR+1,X'F0'       INSURE SIGN                          UAT07060\n         CVB   R1,DOUBLE           CONVERT YEAR TO BINARY               UAT07070\n         ST    R1,DOUBLE           STORE YEAR FOR LEAP TEST             UAT07080\n         LA    R15,28              28 DAYS IN FEB NON-LEAP              UAT07090\n         TM    DOUBLE+3,X'03'      IS THIS A LEAP YEAR?                 UAT07100\n         BNZ   NOTLEAP             NO - SKIP CORRECTING CODE            UAT07110\n         LA    R15,29              29 DAYS IN FEB LEAP                  UAT07120\nNOTLEAP  EQU   *                                                        UAT07130\n         STH   R15,@FEB            SAVE NO. DAYS IN FEB                 UAT07140\n         LA    R14,@JAN            POINT TO DAY COUNT LIST              UAT07150\nDAYLOOP  EQU   *                                                        UAT07160\n         SH    R0,0(,R14)          SUBTRACT DAY COUNT FOR MONTH         UAT07170\n         BNP   DAYEND              IF <1 THEN WE FOUND MONTH            UAT07180\n         LA    R14,2(,R14)         POINT TO NEXT DAY COUNT              UAT07190\n         B     DAYLOOP             AND LOOP BACK                        UAT07200\nDAYEND   EQU   *                                                        UAT07210\n         AH    R0,0(,R14)          ADD DAY COUNT BACK                   UAT07220\n         CVD   R0,DOUBLE           CONVERT DAY TO DECIMAL               UAT07230\n         UNPK  @DAY(2),DOUBLE(8)   CONVERT DAY TO CHARACTER             UAT07240\n         OI    @DAY+1,X'F0'        INSURE SIGN                          UAT07250\n         LA    R15,@JAN-2          CALCULATE MONTH                      UAT07260\n         SR    R14,R15               ...                                UAT07270\n         SRL   R14,1                 ...                                UAT07280\n         CVD   R14,DOUBLE          CONVERT MONTH TO DECIMAL             UAT07290\n         UNPK  @MONTH(2),DOUBLE(8) CONVERT MONTH TO CHARACTER           UAT07300\n         OI    @MONTH+1,X'F0'      INSURE SIGN                          UAT07310\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT07320\n         BR    R9                  RETURN TO CALLER                     UAT07330\n         EJECT                                                          UAT07340\n*********************************************************************** UAT07350\n*                                                                     * UAT07360\n*     GETPARMS                                                        * UAT07370\n*                                                                     * UAT07380\n*           THIS ROUTINE PROCESSES THE PARM FIELD FOR ANY             * UAT07390\n*           OPTIONS THAT THE USER MAY HAVE SPECIFIED.                 * UAT07400\n*                                                                     * UAT07410\n*********************************************************************** UAT07420\n         SPACE                                                          UAT07430\nGETPARMS EQU   *                                                        UAT07440\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT07450\n         L     R3,PARMADDR         LOAD ORIGINAL PARM ADDRESS           UAT07460\n         L     R3,0(,R3)           POINT TO PARM FIELD                  UAT07470\n         LH    R6,0(,R3)           LOAD PARM FIELD LENGTH               UAT07480\n         LTR   R6,R6               IS THE LENGTH ZERO?                  UAT07490\n         BZ    PRTPARMS            YES - NO PARM FIELD                  UAT07500\n         LA    R3,2(,R3)           POINT TO PARM FIELD TEXT             UAT07510\nFINDCOMA EQU   *                                                        UAT07520\n         LR    R15,R3              SAVE POINTER                         UAT07530\nLOOPCOMA EQU   *                                                        UAT07540\n         CLI   0(R15),C','         IS THIS CHARACTER A COMMA?           UAT07550\n         BE    ENDCOMMA            YES - OUT OF LOOP                    UAT07560\n         CLI   0(R15),C'='         IS THIS CHARACTER AN EQUALS?         UAT07570\n         BE    ENDEQUAL            YES - OUT OF LOOP                    UAT07580\n         LA    R15,1(,R15)         POINT TO NEXT CHARACTER              UAT07590\n         BCT   R6,LOOPCOMA         LOOP BACK                            UAT07600\n         LA    R6,1                MAKE LENGTH 1 FOR NEXT BCT           UAT07610\nENDCOMMA EQU   *                                                        UAT07620\n         LR    R14,R15             COPY ADDR OF COMMA                   UAT07630\n         SR    R14,R3              CALCULATE LENGTH OF PARAMETER        UAT07640\n         BZ    PARMINV             IF ZERO, IT'S INVALID                UAT07650\n         C     R14,=F'8'           IS LENGTH GREATER THAN 8?            UAT07660\n         BH    PARMINV             YES - SHOW IT'S INVALID              UAT07670\n         BCTR  R14,0               GET EXECUTABLE LENGTH                UAT07680\n         MVC   PARM(8),=8C' '      FILL WORK AREA W/BLANKS              UAT07690\n         EX    R14,MOVEIT          MOVE PARAMETER TO WORK AREA          UAT07700\n         LA    R4,OPTLIST          POINT TO OPTION LIST                 UAT07710\n         LA    R5,NUMOPTS          NUMBER OF VALID OPTIONS              UAT07720\nOPTLOOP1 EQU   *                                                        UAT07730\n         CLC   OPTNAME(8,R4),PARM  IS THIS THE SOUGHT FOR PARM?         UAT07740\n         BE    HAVEOPT             YES - GO PROCESS IT                  UAT07750\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT07760\n         BCT   R5,OPTLOOP1         LOOP BACK FOR THIS ONE               UAT07770\n         B     PARMINV             PARAMETER IS INVALID                 UAT07780\nHAVEOPT  EQU   *                                                        UAT07790\n         CLI   OPTTYPE(R4),OPTKEYWD   IS THIS A KEYWORD OPTION?         UAT07800\n         BNE   PARMINV             NO - PARAMETER IS INVALID            UAT07810\n         B     THISOPT             YES- GO PROCESS IT                   UAT07820\n         SPACE                                                          UAT07830\nENDEQUAL EQU   *                                                        UAT07840\n         LR    R14,R15             COPY ADDR OF COMMA                   UAT07850\n         SR    R14,R3              CALCULATE LENGTH OF PARAMETER        UAT07860\n         BZ    PARMINV             IF ZERO, IT'S INVALID                UAT07870\n         C     R14,=F'8'           IS LENGTH GREATER THAN 8?            UAT07880\n         BH    PARMINV             YES - SHOW IT'S INVALID              UAT07890\n         BCTR  R14,0               GET EXECUTABLE LENGTH                UAT07900\n         MVC   PARM(8),=8C' '      FILL WORK AREA W/BLANKS              UAT07910\n         EX    R14,MOVEIT          MOVE PARAMETER TO WORK AREA          UAT07920\n         LA    R4,OPTLIST          POINT TO OPTION LIST                 UAT07930\n         LA    R5,NUMOPTS          NUMBER OF VALID OPTIONS              UAT07940\nOPTLOOP3 EQU   *                                                        UAT07950\n         CLC   OPTNAME(8,R4),PARM  IS THIS THE SOUGHT FOR PARM?         UAT07960\n         BE    THISOPTE            YES - GO PROCESS IT                  UAT07970\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT07980\n         BCT   R5,OPTLOOP3         LOOP BACK FOR THIS ONE               UAT07990\n         B     PARMINV             PARAMETER IS INVALID                 UAT08000\n         SPACE                                                          UAT08010\nTHISOPTE EQU   *                                                        UAT08020\n         SR    R14,R14             ZERO OUT ACCUMULATOR                 UAT08030\n         B     NXTOPTE             GET INTO THE LOOP                    UAT08040\nOPTLOOP4 EQU   *                                                        UAT08050\n         CLI   0(R15),C','         A COMMA?                             UAT08060\n         BE    STOREIT             YES - END OF FIELD                   UAT08070\n         CLI   0(R15),C'0'         NUMERIC VALUE?                       UAT08080\n         BL    PARMINV             NO - WE HAVE ERROR                   UAT08090\n         CLI   0(R15),C'9'         NUMERIC VALUE?                       UAT08100\n         BH    PARMINV             NO - WE HAVE ERROR                   UAT08110\n         IC    R0,0(,R15)          GET THE CHARACTER                    UAT08120\n         N     R0,=F'15'           ZAP OUT BAD BITS                     UAT08130\n         MH    R14,=H'10'          SHIFT ACCUMULATOR                    UAT08140\n         AR    R14,R0              ADD NEW DIGIT TO ACCUMULATOR         UAT08150\nNXTOPTE  EQU   *                                                        UAT08160\n         LA    R15,1(,R15)         POINT TO NUMERIC VALUE               UAT08170\n         BCT   R6,OPTLOOP4         BRANCH IF NOT LAST PARM VALUE        UAT08180\n         LA    R6,1                RESTORE COUNT BACK TO 1              UAT08190\nSTOREIT  EQU   *                                                        UAT08200\n         ST    R14,OPTVALUE(,R4)   SAVE ACCUMULATOR VALUE               UAT08210\n         CLI   OPTTYPE(R4),OPTVAR  IS THIS A VARIABLE-TYPE OPTION?      UAT08220\n         BNE   PARMINV             NO - BRANCH TO ERROR ROUTINE         UAT08230\n         SPACE                                                          UAT08240\nTHISOPT  EQU   *                                                        UAT08250\n         L     R14,OPTADDR(,R4)    OPTION FLAG BYTE ADDRESS             UAT08260\n         OC    0(1,R14),OPTON(R4)  SET FLAG                             UAT08270\n         NC    0(1,R14),OPTOFF(R4) RESET FLAG                           UAT08280\nNEXTOPT  EQU   *                                                        UAT08290\n         LA    R3,1(,R15)          POINT TO NEXT PARAMETER              UAT08300\n         BCT   R6,FINDCOMA         LOOP BACK AND DO IT                  UAT08310\nPRTPARMS EQU   *                                                        UAT08320\n         MOVEMSG MSG9              OPTIONS IN EFFECT:                   UAT08330\n         LA    R3,LINE+MSG9O       POINT TO NEXT PLACE IN LINE          UAT08340\n         LA    R4,OPTLIST          POINT TO OPTIONS LIST                UAT08350\n         LA    R5,NUMOPTS          NUMBER OF POSSIBLE OPTIONS           UAT08360\nOPTLOOP2 EQU   *                                                        UAT08370\n         L     R15,OPTADDR(,R4)          LOAD OPTION BYTE ADDRESS       UAT08380\n         MVC   TEMPFLAG(1),0(R15)  MOVE OPTIONS BYTE TO WORK AREA       UAT08390\n         NC    TEMPFLAG(1),OPTON(R4)  AND OUT ALL BUT FLAG BIT          UAT08400\n         BZ    NEXTOPT2            IF RESULT IS ZERO, NO OPTION         UAT08410\n         MVC   0(8,R3),OPTNAME(R4) MOVE IN OPTION                       UAT08420\nCOMLOOPB EQU   *                                                        UAT08430\n         CLI   0(R3),C' '          BLANK HERE?                          UAT08440\n         BE    COMLOOPE            YES - GET OUT OF HERE                UAT08450\n         LA    R3,1(,R3)           POINT TO NEXT CHARACTER              UAT08460\n         B     COMLOOPB            LOOP BACK CHECK IT TOO               UAT08470\nCOMLOOPE EQU   *                                                        UAT08480\n         CLI   OPTTYPE(R4),OPTKEYWD   IS THIS A KEYWORD OPTION?         UAT08490\n         BNE   COMLOOPF            NO - MUST BE A VARIABLE OPTION       UAT08500\n         MVI   0(R3),C','          PUT A COMMA THERE                    UAT08510\n         LA    R3,1(,R3)           POINT TO NEXT CHARACTER              UAT08520\nNEXTOPT2 EQU   *                                                        UAT08530\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT08540\n         BCT   R5,OPTLOOP2         LOOP BACK FOR IT                     UAT08550\n         BCTR  R3,0                BACK UP TO LAST COMMA                UAT08560\n         MVI   0(R3),C' '          BLANK OUT LAST COMMA                 UAT08570\n         OI    FLAG2,#NOSHIFT      DO NO SHIFT THIS OVER                UAT08580\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT08590\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT08600\n         BR    R9                  RETURN TO CALLER                     UAT08610\nCOMLOOPF EQU   *                                                        UAT08620\n         MVI   0(R3),C'='          PUT EQUALS SIGN THERE                UAT08630\n         L     R0,OPTVALUE(,R4)    LOAD VALUE OF OPTION                 UAT08640\n         CVD   R0,DOUBLE           CONVERT TO PACKED DECIMAL            UAT08650\n         MVC   1(9,R3),=X'40202020202021206B'  EDIT MASK, PLUS A COMMA  UAT08660\n         LA    R1,8(,R3)           POINT TO LAST POSSIBLE DIGIT         UAT08670\n         EDMK  1(8,R3),DOUBLE+4    CONVERT TO CHARACTER                 UAT08680\n         MVC   1(10,R3),0(R1)      SHIFT OUT LEADING BLANKS             UAT08690\n         LA    R0,11(,R3)          POINT PAST COMMA                     UAT08700\n         SR    R0,R1               LENGTH OF NUMERIC VALUE              UAT08710\n         AR    R3,R0               MOVE POINTER PAST COMMA              UAT08720\n         B     NEXTOPT2            CONTINUE WITH NEXT OPTION            UAT08730\n         SPACE                                                          UAT08740\nMOVEIT   MVC   PARM(*-*),0(R3)     ***** EXECUTED INSTRUCTION *****     UAT08750\n         EJECT                                                          UAT08760\n*********************************************************************** UAT08770\n*                                                                     * UAT08780\n*    PRTLABEL                                                         * UAT08790\n*                                                                     * UAT08800\n*         THIS ROUTINE PRINTS A FORMATTED VERSION OF EACH             * UAT08810\n*         TYPE OF VOLUME AND DATA SET LABEL (VOL1, HDR1,              * UAT08820\n*         HDR2, EOF1, EOF2, EOV1, EOV2).  USER LABELS ARE             * UAT08830\n*         IGNORED HERE.                                               * UAT08840\n*                                                                     * UAT08850\n*********************************************************************** UAT08860\n         SPACE                                                          UAT08870\nPRTLABEL EQU   *                                                        UAT08880\n         TM    FLAG,#TAPEMRK       WAS THIS BLOCK A TAPE MARK?          UAT08890\n         BOR   R9                  YES - RETURN TO CALLER               UAT08900\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT08910\n         TM    FLAG2,#PRTFLAG      ARE WE TO PRINT MSG41?               UAT08920\n         BNO   NOMSG41A            NO - SKIP PRINTING IT                UAT08930\n         NI    FLAG2,255-#PRTFLAG  RESET THE FLAG                       UAT08940\n         MOVEMSG MSG41             === FILE: XXXX ===================== UAT08950\n         MVC   LINE+MSG41F(4),FILENO   MOVE IN FILE NUMBER              UAT08960\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT08970\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT08980\nNOMSG41A EQU   *                                                        UAT08990\n         MVI   LINE,C'0'           DOUBLE SPACE                         UAT09000\n         CLC   0(3,R7),=C'VOL'     IS THIS A VOLUME LABEL?              UAT09010\n         BE    VOL                 YES - BRANCH                         UAT09020\n         CLC   0(3,R7),=C'HDR'     IS THIS A DATA-SET LABEL?            UAT09030\n         BE    HDR                 YES - BRANCH                         UAT09040\n         CLC   0(3,R7),=C'EOF'     IS THIS END-OF-FILE LABEL?           UAT09050\n         BE    EOF                 YES - BRANCH                         UAT09060\n         CLC   0(3,R7),=C'EOV'     IS THIS END-OF-VOLUME LABEL?         UAT09070\n         BE    EOV                 YES - BRANCH                         UAT09080\n         CLC   0(3,R7),=C'UHL'     IS THIS USER-HEADER LABEL?           UAT09090\n         BE    UHL                 YES - BRANCH                         UAT09100\n         CLC   0(3,R7),=C'UTL'     IS THIS USER-TRAILER LABEL?          UAT09110\n         BE    UTL                 YES - BRANCH                         UAT09120\n         SPACE                                                          UAT09130\nLABUNKN  EQU   *                                                        UAT09140\n         L     R15,MXLABERR        LOAD MAXIMUM LABEL ERROR COUNT       UAT09150\n         LA    R15,1(,R15)         INCREMENT COUNTER                    UAT09160\n         ST    R15,MXLABERR        SAVE NEW ERROR COUNT                 UAT09170\n         C     R15,MXLABCNT        COMPARE AGAINST MAXIMUM              UAT09180\n         BE    MXEXCEED            BRANCH IF EQUAL TO MAXIMUM           UAT09190\n         BH    PRTLABXT            RETURN TO CALLER IF EXCEEDED         UAT09200\n         MOVEMSG MSG44             UNKNOWN LABEL RECORD                 UAT09210\n         BAL   R9,PRINTIT          GO PRINT UNKNOWN LABEL MSG           UAT09220\n         MVC   LINE+1(7),=C'----->|'  LEFT FRAMER                       UAT09230\n         MVC   LINE+8(80),0(R7)    LABEL DATA                           UAT09240\n         MVC   LINE+88(7),=C'|<-----' RIGHT FRAMER                      UAT09250\n         BAL   R9,PRINTIT          GO PRINT UNKNOWN LABEL DATA          UAT09260\n         B     PRTLABXT            RETURN TO CALLER                     UAT09270\n         SPACE                                                          UAT09280\nMXEXCEED EQU   *                                                        UAT09290\n         MOVEMSG MSG48             MAXIMUM COUNT EXCEEDED               UAT09300\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09310\n         B     PRTLABXT            RETURN TO CALLER                     UAT09320\n         SPACE 2                                                        UAT09330\n*   VOL            VOLUME LABEL                                         UAT09340\nVOL      EQU   *                                                        UAT09350\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT09360\n         MOVEMSG MSG4              INPUT VOLUME SERIAL =                UAT09370\n         MVC   LINE+MSG4V(6),VOLSER1    MOVE IN INPUT VOLSER            UAT09380\n         MVC   LINE+MSG4O(10),VOL1OWNR  MOVE IN VOLUME'S OWNER          UAT09390\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09400\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT09410\n         BNO   PRTLABXT            NO - RETURN TO CALLER                UAT09420\n         MOVEMSG MSG5              OUTPUT VOLUME SERIAL =               UAT09430\n         MVC   LINE+MSG5V(6),VOLSER2    MOVE IN OUTPUT VOLSER           UAT09440\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09450\n         B     PRTLABXT            RETURN TO CALLER                     UAT09460\n         DROP  R7                  DON'T NEED THIS NOW                  UAT09470\n         SPACE 2                                                        UAT09480\nHDR      EQU   *                                                        UAT09490\n         CLI   3(R7),C'1'          DATA SET LABEL 1?                    UAT09500\n         BE    HDR1                YES - BRANCH                         UAT09510\n         CLI   3(R7),C'2'          DATA SET LABEL 2?                    UAT09520\n         BE    HDR2                YES - BRANCH                         UAT09530\n         B     LABUNKN             UNKNOWN LABEL                        UAT09540\n         SPACE                                                          UAT09550\n*   HDR1          DATA SET HEADER LABEL 1                               UAT09560\n         SPACE                                                          UAT09570\nHDR1     EQU   *                                                        UAT09580\n         USING HDR1D,R7            DECLARE HDR1 ADDRESSABILITY          UAT09590\n         LA    R0,HDR1DSN          CHECK FOR FRESHLY                    UAT09600\n         LA    R1,76                 IEHINITT'ED TAPE                   UAT09610\n         SR    R15,R15                 WHICH LOOKS LIKE:                UAT09620\n         ICM   R15,8,=C'0'               HDR100000 ... 000              UAT09630\n         CLCL  R0,R14                      ('HDR1' PLUS 76 ZEROES)      UAT09640\n         BE    HDR1I               BRANCH IF WE FOUND IEHINITT HDR1     UAT09650\n*                                                                       UAT09660\n         MOVEMSG MSG11             DATA SET NAME = ....                 UAT09670\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT09680\n         MVC   LINE+MSG11D(17),HDR1DSN    MOVE IN DATA SET NAME         UAT09690\n         MVC   STATDSN(17,R6),HDR1DSN     DSN TO STAT BUF               UAT09700\n         MVC   LINE+MSG11V(6),HDR1SER     MOVE IN VOLUME SERIAL NUMBER  UAT09710\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09720\n         MOVEMSG MSG12                    FILE = XX VOLUME SEQ = YY     UAT09730\n         MVC   LINE+MSG12F(4),HDR1DSEQ    FILE SEQUENCE NUMBER          UAT09740\n         MVC   STATFILE(4,R6),HDR1DSEQ    FILE SEQ NO TO STAT BUF       UAT09750\n         MVC   LINE+MSG12S(4),HDR1VSEQ    VOLUME SEQUENCE NUMBER        UAT09760\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09770\n         MOVEMSG MSG12#                   GENERATION=XXXX  VERSION=YY   UAT09780\n         MVC   LINE+MSG12G(4),HDR1GEN     GENERATION NUMBER             UAT09790\n         MVC   LINE+MSG12V(2),HDR1VER     VERSION NUMBER                UAT09800\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09810\n         MOVEMSG MSG13                    CREATION DATE, EXPIRATION     UAT09820\n         MVC   LINE+MSG13C(2),HDR1CRDT+1       YEAR                     UAT09830\n         MVC   LINE+MSG13C+3(3),HDR1CRDT+3     DAY                      UAT09840\n         MVC   LINE+MSG13E(2),HDR1EXDT+1       YEAR                     UAT09850\n         MVC   LINE+MSG13E+3(3),HDR1EXDT+3     DAY                      UAT09860\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09870\n         MOVEMSG MSG13#                   SYSTEM CODE=SSSS              UAT09880\n         MVC   LINE+MSG13S(13),HDR1SYS    SYSTEM CODE                   UAT09890\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09900\n         B     PRTLABXT                   RETURN TO CALLER              UAT09910\n         DROP R7                                                        UAT09920\n         SPACE                                                          UAT09930\n*   PROCESS FRESHLY IEHINITT'ED TAPE                                    UAT09940\nHDR1I    EQU   *                                                        UAT09950\n         OI    FLAG2,#INITHDR      SET FLAG SHOWING IEHINITT HDR1       UAT09960\n         MOVEMSG MSG56             THIS IS IEHINITT'D TAPE              UAT09970\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT09980\n         B     PRTLABXT            RETURN TO CALLER                     UAT09990\n         SPACE 2                                                        UAT10000\n*   HDR2          DATA SET HEADER LABEL 2                               UAT10010\n         SPACE                                                          UAT10020\nHDR2     EQU   *                                                        UAT10030\n         USING HDR2D,R7                   HDR2 RECORD ADDRESSABILITY    UAT10040\n         L     R6,BSTATBUF                LOAD CURRENT STAT ENTRY ADDR  UAT10050\n         MOVEMSG MSG15                    LRECL=XXXX BLKSIZE=YYY        UAT10060\n         MVC   LINE+MSG15L(5),HDR2LREC    LRECL                         UAT10070\n         MVC   STATLREC(5,R6),HDR2LREC    LRECL                         UAT10080\n         PACK  DOUBLE(8),HDR2LREC         PACK LRECL                    UAT10090\n         CVB   0,DOUBLE                   CONVERT TO BINARY             UAT10100\n         ST    0,CURLRECL                 SAVE CURRENT LRECL            UAT10110\n         MVC   LINE+MSG15B(5),HDR2BLKL    BLKSIZE                       UAT10120\n         MVC   STATBLKS(5,R6),HDR2BLKL    BLKSIZE                       UAT10130\n         PACK  DOUBLE(8),HDR2BLKL         PACK BLKSIZE                  UAT10140\n         CVB   0,DOUBLE                   CONVERT TO BINARY             UAT10150\n         ST    0,CURBLKSI                 SAVE CURRENT BLKSIZE          UAT10160\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10170\n         MOVEMSG MSG15#                   RECFM=XX  DENSITY=U           UAT10180\n         MVC   LINE+MSG15R(1),HDR2RECF    RECFM                         UAT10190\n         MVC   CURRECFM(1),HDR2RECF       SAVE CURRENT RECORD FORMAT    UAT10200\n         LA    R15,LINE+MSG15R+1          POINT TO FOLLOWING SPACE      UAT10210\n         CLI   HDR2BLKF,C' '              IS BLOCKING ATTRIBUTE SET?    UAT10220\n         BE    HDR2BB                     NO - SKIP                     UAT10230\n         CLI   HDR2BLKF,C'R'              IS THE BLK ATTRIBUTE 'R'      UAT10240\n         BE    HDR2AA                     YES - SPANNED AND BLOCKED     UAT10250\n         MVC   0(1,R15),HDR2BLKF          BLOCKING ATTRIBUTE (B OR S)   UAT10260\n         LA    R15,1(,R15)                INCREMENT POINTER 1 PLACE     UAT10270\n         B     HDR2BB                     SKIP A FEW                    UAT10280\nHDR2AA   EQU   *                                                        UAT10290\n         MVC   0(2,R15),=C'BS'            BLOCKING ATTRIBUTE B AND S    UAT10300\n         LA    R15,2(,R15)                INCREMENT POINTER 2 PLACES    UAT10310\nHDR2BB   EQU   *                                                        UAT10320\n         MVC   0(1,R15),HDR2CONC   CONTROL CHARACTER (' ' OR M OR A)    UAT10330\n         MVC   STATRECF(4,R6),LINE+MSG15R RECORD FORMAT                 UAT10340\n         SPACE                                                          UAT10350\n         MVC   LINE+MSG15D1(1),HDR2DEN    TAPE DENSITY                  UAT10360\n         TM    FLAG2,#CART1               IS THIS 3480?                 UAT10370\n         BO    HDR2CART                   YES - DO IT DIFFERENTLY       UAT10380\n         CLI   HDR2DEN,C'0'               DEN=0?                        UAT10390\n         BNE   HDR2CC                     NO - CHECK NEXT               UAT10400\n         MVC   LINE+MSG15D2(4),DEN200+DENTABC   200 BPI                 UAT10410\n         B     HDR2HH                     SKIP                          UAT10420\nHDR2CC   EQU   *                                                        UAT10430\n         CLI   HDR2DEN,C'1'               DEN=1?                        UAT10440\n         BNE   HDR2DD                     NO - CHECK NEXT               UAT10450\n         MVC   LINE+MSG15D2(4),DEN556+DENTABC   556 BPI                 UAT10460\n         B     HDR2HH                     SKIP                          UAT10470\nHDR2DD   EQU   *                                                        UAT10480\n         CLI   HDR2DEN,C'2'               DEN=2?                        UAT10490\n         BNE   HDR2EE                     NO - CHECK NEXT               UAT10500\n         MVC   LINE+MSG15D2(4),DEN800+DENTABC   800 BPI                 UAT10510\n         B     HDR2HH                     SKIP                          UAT10520\nHDR2EE   EQU   *                                                        UAT10530\n         CLI   HDR2DEN,C'3'               DEN=3?                        UAT10540\n         BNE   HDR2FF                     NO - CHECK NEXT               UAT10550\n         MVC   LINE+MSG15D2(4),DEN1600+DENTABC  1600 BPI                UAT10560\n         B     HDR2HH                     SKIP                          UAT10570\nHDR2FF   EQU   *                                                        UAT10580\n         CLI   HDR2DEN,C'4'               DEN=4?                        UAT10590\n         BNE   HDR2GG                     NO - WHO KNOWS WHAT IT IS     UAT10600\n         MVC   LINE+MSG15D2(4),DEN6250+DENTABC  6250 BPI                UAT10610\n         B     HDR2HH                     SKIP                          UAT10620\nHDR2GG   EQU   *                                                        UAT10630\n         MVC   LINE+MSG15D2(9),=C'UNKNOWN) '  SHOW IT'S UNKNOWN         UAT10640\n         B     HDR2HH                     SKIP                          UAT10650\nHDR2CART EQU   *                          3480 CARTRIDGES ONLY HERE     UAT10660\n         MVC   LINE+MSG15D2(4),DEN38K+DENTABC  38000 BPI                UAT10670\nHDR2HH   EQU   *                                                        UAT10680\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10690\n         MOVEMSG MSG16                    CREATING JOB/JOBSTEP          UAT10700\n         MVC   LINE+MSG16J(17),HDR2JOBI   JOBNAME/JOBSTEP               UAT10710\n         MVC   LINE+MSG16R(2),HDR2TTRC    RECORDING TECHNIQUE (TTRCH    UAT10720\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10730\n*  PRINT WARNING ABOUT UNRELIABLE LENGTH VALUE IF IDRC IS ENABLED       UAT10740\n         TM    FLAG2,#CART1        ARE WE READING A CART?               UAT10750\n         BNO   HDR2II              NO - SKIP                            UAT10760\n         TM    FLAG3,#IDRC1        IS IDRC ENABLED?                     UAT10770\n         BNO   HDR2II              NO - SKIP                            UAT10780\n         MOVEMSG MSG59             WARNING ABOUT IDRC AND LENGTH        UAT10790\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT10800\nHDR2II   EQU   *                                                        UAT10810\n         PACK  DOUBLE(8),HDR2LREC(5)      PACK THE LRECL                UAT10820\n         CVB   R15,DOUBLE                 MAKE IT BINARY NOW            UAT10830\n         ST    R15,BLRECL                 SAVE LRECL FOR PRINT OPTION   UAT10840\n         B     PRTLABXT                   RETURN TO CALLER              UAT10850\n         DROP  R7                         DON'T NEED THIS NOW           UAT10860\n         SPACE 2                                                        UAT10870\nEOF      EQU   *                                                        UAT10880\n         CLI   3(R7),C'1'          END OF FILE LABEL 1?                 UAT10890\n         BE    EOF1                YES - BRANCH                         UAT10900\n         CLI   3(R7),C'2'          END OF FILE LABEL 2?                 UAT10910\n         BE    EOF2                YES - BRANCH                         UAT10920\n         B     LABUNKN             UNKNOWN LABEL                        UAT10930\n         SPACE                                                          UAT10940\n*   EOF1           END OF FILE (TRAILER) LABEL 1                        UAT10950\n         SPACE                                                          UAT10960\nEOF1     EQU   *                                                        UAT10970\n         USING EOF1D,R7            EOF1 ADDRESSABILITY                  UAT10980\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT10990\n         MOVEMSG MSG19                  NUMBER OF BLOCKS =              UAT11000\n         MVC   LINE+MSG19N(6),EOF1BLKC  DATA SET BLOCK COUNT            UAT11010\n         MVC   STATNBLK(6,R6),EOF1BLKC  DATA SET BLOCK COUNT            UAT11020\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT11030\n         PACK  DOUBLE(8),EOF1BLKC(6)    CONVERT COUNT TO PACKED         UAT11040\n         CVB   R0,DOUBLE                AND THEN TO BINARY              UAT11050\n         C     R0,BLOCKCNT         DOES IT MATCH ACTUAL?                UAT11060\n         BE    EOF1RET             YES - SKIP MESSAGE                   UAT11070\n         MOVEMSG MSG57             WARNING: BLOCK COUNT DOES NOT MATCH  UAT11080\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT11090\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT11100\nEOF1RET  EQU   *                                                        UAT11110\n         B     PRTLABXT            RETURN TO CALLER                     UAT11120\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11130\n         SPACE 2                                                        UAT11140\n*   EOF2          END OF FILE TRAILER LABEL 2                           UAT11150\n         SPACE                                                          UAT11160\nEOF2     EQU   *                                                        UAT11170\n         USING EOF2D,R7            MAKE EOF2 LABEL ADDRESSABLE          UAT11180\n         MVC   LINE+1(4),EOF2EOF2  MOVE \"EOF2\" TO PRINT LINE            UAT11190\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11200\n         BAL   R9,PRINTIT          GO PRINT EOF2                        UAT11210\n         B     PRTLABXT            RETURN TO CALLER                     UAT11220\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11230\n         SPACE 2                                                        UAT11240\nEOV      EQU   *                                                        UAT11250\n         CLI   3(R7),C'1'          END OF VOLUME LABEL 1?               UAT11260\n         BE    EOV1                YES - BRANCH                         UAT11270\n         CLI   3(R7),C'2'          END OF VOLUME LABEL 2?               UAT11280\n         BE    EOV2                YES - BRANCH                         UAT11290\n         B     LABUNKN             UNKNOWN LABEL                        UAT11300\n         SPACE                                                          UAT11310\n*   EOV1               END OF VOLUME LABEL 1                            UAT11320\n         SPACE                                                          UAT11330\nEOV1     EQU   *                                                        UAT11340\n         USING EOV1D,R7            MAKE EOV1 RECORD ADDRESSABLE         UAT11350\n         OI    FLAG2,#EOV          SHOW EOV LABEL FOUND                 UAT11360\n         MOVEMSG MSG19                  NUMBER OF BLOCKS =              UAT11370\n         MVC   LINE+1(4),EOV1EOV1  MOVE \"EOV1\" TO PRINT LINE            UAT11380\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT11390\n         MVC   LINE+MSG19N(6),EOV1BLKC  DATA SET BLOCK COUNT            UAT11400\n         MVC   STATNBLK(6,R6),EOV1BLKC   DATA SET BLOCK COUNT           UAT11410\n         BAL   R9,PRINTIT          GO PRINT EOV1                        UAT11420\n         B     PRTLABXT            RETURN TO CALLER                     UAT11430\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11440\n         SPACE 2                                                        UAT11450\n*   EOV2                END OF VOLUME LABEL 2                           UAT11460\n         SPACE                                                          UAT11470\nEOV2     EQU   *                                                        UAT11480\n         USING EOV2D,R7            MAKE EOV2 RECORD ADDRESSABLE         UAT11490\n         OI    FLAG2,#EOV          SHOW EOV LABEL FOUND                 UAT11500\n         MVC   LINE+1(4),EOV2EOV2  MOVE \"EOV2\" TO PRINT LINE            UAT11510\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11520\n         BAL   R9,PRINTIT          GO PRINT EOV2                        UAT11530\n         B     PRTLABXT            RETURN TO CALLER                     UAT11540\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11550\n         SPACE 2                                                        UAT11560\n*   UHL/UTL             USER HEADER/TRAILER LABELS                      UAT11570\n         SPACE                                                          UAT11580\nUHL      EQU   *                                                        UAT11590\nUTL      EQU   *                                                        UAT11600\n         MVC   LINE+1(4),0(R7)     MOVE \"UHLN\"/\"UTLN\" TO PRINT LINE     UAT11610\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11620\n         MVC   LINE+8(80),0(R7)    MOVE CONTENTS OF LABEL               UAT11630\n         BAL   R9,PRINTIT          AND PRINT IT                         UAT11640\n         SPACE 2                                                        UAT11650\nPRTLABXT EQU   *                                                        UAT11660\n         UNSTACK R9                RETRIEVE THE RETURN ADDRESS          UAT11670\n         BR    R9                  RETURN TO CALLER                     UAT11680\n         EJECT                                                          UAT11690\n*********************************************************************** UAT11700\n*                                                                     * UAT11710\n*    FIXLAB                                                           * UAT11720\n*                                                                     * UAT11730\n*           THIS ROUTINE CHANGES THE VOLUME SERIAL IN VARIOUS         * UAT11740\n*           TAPE LABELS TO MATCH THE SYSUT2 TAPE'S VOLSER.            * UAT11750\n*                                                                     * UAT11760\n*********************************************************************** UAT11770\n         SPACE                                                          UAT11780\nFIXLAB   EQU   *                                                        UAT11790\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT11800\n         BNOR  R9                  NO - RETURN TO CALLER                UAT11810\n         TM    OPTIONS2,#NOFIX     WAS NOFIX OPTION SPECIFIED?          UAT11820\n         BOR   R9                  YES - RETURN TO CALLER               UAT11830\n         TM    FLAG,#TAPEMRK       WAS THIS BLOCK A TAPE MARK?          UAT11840\n         BOR   R9                  YES - RETURN TO CALLER               UAT11850\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT11860\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT11870\n         CLC   VOL1VOL1(4),=C'VOL1'    IS THIS A VOLUME LABEL?          UAT11880\n         BE    FIXVOL1             YES - BRANCH                         UAT11890\n         DROP  R7                                                       UAT11900\n         USING HDR1D,R7            DATA SET LABEL ADDRESSING            UAT11910\n         CLC   HDR1HDR1(4),=C'HDR1'    IS THIS DATA SET LABEL?          UAT11920\n         BE    FIXHDR1             YES - BRANCH                         UAT11930\n         DROP  R7                                                       UAT11940\n         USING EOF1D,R7            END OF FILE LABEL ADDRESSING         UAT11950\n         CLC   EOF1EOF1(4),=C'EOF1'    IS THIS EOF LABEL?               UAT11960\n         BE    FIXEOF1             YES - BRANCH                         UAT11970\n         DROP  R7                                                       UAT11980\n         USING EOV1D,R7            END OF VOLUME LABEL ADDRESSING       UAT11990\n         CLC   EOV1EOV1(4),=C'EOV1'    IS THIS EOV LABEL?               UAT12000\n         BE    FIXEOV1             YES - BRANCH                         UAT12010\n         DROP  R7                                                       UAT12020\n         USING EOV2D,R7            END OF VOLUME LABEL ADDRESSING       UAT12030\n         CLC   EOV2EOV2(4),=C'EOV2'    IS THIS EOV LABEL?               UAT12040\n         BE    FIXEOV2             YES - BRANCH                         UAT12050\n         DROP  R7                                                       UAT12060\n         USING EOF2D,R7            END OF FILE LABEL ADDRESSING         UAT12070\n         CLC   EOF2EOF2(4),=C'EOF2'    IS THIS EOF LABEL?               UAT12080\n         BE    FIXEOF2             YES - BRANCH                         UAT12090\n         DROP  R7                                                       UAT12100\n         USING HDR2D,R7            DATA SET LABEL ADDRESSING            UAT12110\n         CLC   HDR2HDR2(4),=C'HDR2'    IS THIS DATA SET LABEL?          UAT12120\n         BE    FIXHDR2             YES - BRANCH                         UAT12130\n         DROP  R7                                                       UAT12140\n         B     FIXLABXT            NONE OF THESE - RETURN TO CALLER     UAT12150\n         SPACE 2                                                        UAT12160\n*   FIX VOLUME LABEL                                                    UAT12170\n         SPACE                                                          UAT12180\nFIXVOL1  EQU   *                                                        UAT12190\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT12200\n         MVC   VOL1SER(6),VOLSER2  RENAME                               UAT12210\n         B     FIXLABXT            RETURN TO CALLER                     UAT12220\n         DROP  R7                                                       UAT12230\n         SPACE 2                                                        UAT12240\n*   FIX DATA SET LABEL 1                                                UAT12250\n         SPACE                                                          UAT12260\nFIXHDR1  EQU   *                                                        UAT12270\n         TM    FLAG2,#INITHDR      IS THIS AN IEHINITT HDR1?            UAT12280\n         BO    FIXLABXT            YES - DON'T DO FIXUP                 UAT12290\n         USING HDR1D,R7            DATA SET LABEL ADDRESSING            UAT12300\n         MVC   HDR1SER(6),VOLSER2  RENAME                               UAT12310\n         B     FIXLABXT            RETURN TO CALLER                     UAT12320\n         DROP  R7                                                       UAT12330\n         SPACE 2                                                        UAT12340\n*   FIX END OF FILE LABEL 1                                             UAT12350\n         SPACE                                                          UAT12360\nFIXEOF1  EQU   *                                                        UAT12370\n         USING EOF1D,R7            END OF FILE LABEL ADDRESSING         UAT12380\n         MVC   EOF1SER(6),VOLSER2  RENAME                               UAT12390\n         B     FIXLABXT            RETURN TO CALLER                     UAT12400\n         DROP  R7                                                       UAT12410\n         SPACE 2                                                        UAT12420\n*   FIX END OF VOLUME LABEL 1                                           UAT12430\n         SPACE                                                          UAT12440\nFIXEOV1  EQU   *                                                        UAT12450\n         USING EOV1D,R7            END OF VOLUME LAB ADDRESSING         UAT12460\n         MVC   EOV1SER(6),VOLSER2  RENAME                               UAT12470\n         B     FIXLABXT            RETURN TO CALLER                     UAT12480\n         DROP  R7                                                       UAT12490\n         SPACE 2                                                        UAT12500\n*  FIX DATA SET LABEL 2                                                 UAT12510\n         SPACE                                                          UAT12520\nFIXHDR2  EQU   *                                                        UAT12530\n         USING HDR2D,R7            DATA SET LABEL ADDRESSING            UAT12540\n         MVC   HDR2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12550\n         B     FIXLABXT            RETURN TO CALLER                     UAT12560\n         DROP  R7                                                       UAT12570\n         SPACE 2                                                        UAT12580\n*   FIX END OF FILE LABEL 2                                             UAT12590\n         SPACE                                                          UAT12600\nFIXEOF2  EQU   *                                                        UAT12610\n         USING EOF2D,R7            DATA SET LABEL ADDRESSING            UAT12620\n         MVC   EOF2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12630\n         B     FIXLABXT            RETURN TO CALLER                     UAT12640\n         DROP  R7                                                       UAT12650\n         SPACE 2                                                        UAT12660\n*   FIX END OF VOLUME LABEL 2                                           UAT12670\n         SPACE                                                          UAT12680\nFIXEOV2  EQU   *                                                        UAT12690\n         USING EOV2D,R7            DATA SET LABEL ADDRESSING            UAT12700\n         MVC   EOV2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12710\n         SPACE 2                                                        UAT12720\nFIXLABXT EQU   *                                                        UAT12730\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT12740\n         BR    R9                  RETURN TO CALLER                     UAT12750\n         DROP  R7                                                       UAT12760\n         EJECT                                                          UAT12770\n*********************************************************************** UAT12780\n*                                                                     * UAT12790\n*    DUMPBLK                                                          * UAT12800\n*                                                                     * UAT12810\n*          THIS ROUTINE PRINTS A DATA BLOCK IN HEXADECIMAL FORMAT     * UAT12820\n*                                                                     * UAT12830\n*********************************************************************** UAT12840\n         SPACE                                                          UAT12850\nDUMPBLK  EQU   *                                                        UAT12860\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT12870\n         BOR   R9                  YES - RETURN TO CALLER               UAT12880\n         TM    OPTIONS1,#DUMP+#DUMPALL  DUMP OPTIONS SET?               UAT12890\n         BZR   R9                  BRANCH IF NO DUMP OPTIONS            UAT12900\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT12910\n         TM    OPTIONS2,#DMAX      WAS DUMPMAX OPTION SPECIFIED?        UAT12920\n         BNO   NODMAX1             NO - SKIP CHECK                      UAT12930\n         L     R15,DBLKCT          LOAD BLOCK COUNTER                   UAT12940\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT12950\n         ST    R15,DBLKCT          SAVE NEW COUNTER VALUE               UAT12960\n         BNM   NODMAX1             CONTINUE WITH DUMP IF NOT NEGATIVE   UAT12970\n         AH    R15,=H'1'           IS IT -1?                            UAT12980\n         BNZ   DUMPITXT            NO - RETURN TO CALLER                UAT12990\n         MOVEMSG MSG50             DUMP SUSPENDED MSG                   UAT13000\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFT                    UAT13010\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT13020\n         B     DUMPITXT            RETURN TO CALLER                     UAT13030\nNODMAX1  EQU   *                                                        UAT13040\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT13050\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13060\n         MOVEMSG MSG24             FILE XX BLOCK YY LENGTH ZZ           UAT13070\n         UNPK  LINE+MSG24F(4),DOUBLE(8)   FILE COUNTER                  UAT13080\n         OI    LINE+MSG24F+3,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13090\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT13100\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13110\n         UNPK  LINE+MSG24B(6),DOUBLE(8)   BLOCK COUNTER                 UAT13120\n         OI    LINE+MSG24B+5,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13130\n         L     R15,RECLENF         LOAD RECORD LENGTH                   UAT13140\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13150\n         UNPK  LINE+MSG24L(5),DOUBLE(8)   BLOCK LENGTH                  UAT13160\n         OI    LINE+MSG24L+4,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13170\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT13180\n         B     DUMPIT              GO DUMP THE BLOCK                    UAT13190\n         EJECT                                                          UAT13200\n*********************************************************************** UAT13210\n*                                                                     * UAT13220\n*    DUMPLAB                                                          * UAT13230\n*                                                                     * UAT13240\n*          THIS ROUTINE PRINTS A TAPE LABEL IN HEXADECIMAL FORMAT     * UAT13250\n*                                                                     * UAT13260\n*********************************************************************** UAT13270\n         SPACE                                                          UAT13280\nDUMPLAB  EQU   *                                                        UAT13290\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT13300\n         BOR   R9                  YES - RETURN TO CALLER               UAT13310\n         TM    OPTIONS1,#DUMPLAB+#DUMPALL EITHER DUMPLAB OR DUMPALL OPT UAT13320\n         BZR   R9                  NO - RETURN TO CALLER                UAT13330\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT13340\n         TM    OPTIONS2,#DMAX      WAS DUMPMAX OPTION SPECIFIED?        UAT13350\n         BNO   DUMPIT              NO - SKIP CHECK                      UAT13360\n         L     R15,DBLKCT          LOAD BLOCK COUNTER                   UAT13370\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT13380\n         ST    R15,DBLKCT          SAVE NEW COUNTER VALUE               UAT13390\n         BM    DUMPITXT            IT'S NOT POSITIVE, RETURN            UAT13400\n         EJECT                                                          UAT13410\n*     GENERALIZED DUMP ROUTINE                                          UAT13420\n*     (NOTE:  RETURN ADDRESS MUST BE ON STACK UPON ENTRY TO DUMPIT)     UAT13430\n         SPACE                                                          UAT13440\nDUMPIT   EQU   *                                                        UAT13450\n         L     R2,RECLENF          LOAD BLOCK'S LENGTH                  UAT13460\n         SR    R3,R3               THIS IS BLOCK OFFSET                 UAT13470\n         LA    R4,9                BXLE INCREMENT                       UAT13480\n         LA    R5,LINE+79          END OF BXLE RUN                      UAT13490\n         LR    R6,R7               COPY DATA ADDRESS                    UAT13500\n         MVI   LINE,C'0'           MAKE NEXT LINE DOUBLE SPACE          UAT13510\n         SPACE                                                          UAT13520\nNEWLINE  EQU   *                                                        UAT13530\n         L     R8,VTABLES          GET TRANSLATE TABLES CSECT ADDR      UAT13540\n         USING TABLES,R8           MAKE THEM ADDRESSABLE                UAT13550\n         STH   R3,DOUBLE           STORE OFFSET IN WORKAREA             UAT13560\n         UNPK  WORKAREA(5),DOUBLE(3)   CONVERT LENGTH TO                UAT13570\n         TR    WORKAREA(4),HEXTABLE       PRINTABLE HEX FORMAT          UAT13580\n         MVC   LINE+1(4),WORKAREA  MOVE TO PRINT LINE                   UAT13590\n         MVI   LINE+5,C'('         STARTING PARENS                      UAT13600\n         MVI   LINE+11,C')'        ENDING PARENS                        UAT13610\n         CVD   R3,DOUBLE           CONVERT OFFSET TO DECIMAL            UAT13620\n         UNPK  LINE+6(5),DOUBLE(8)     CONVERT LENGTH TO                UAT13630\n         OI    LINE+10,X'F0'              PRINTABLE DECIMAL             UAT13640\n         LA    R15,32              MAX NO. BYTES PER LINE               UAT13650\n         CR    R15,R2              ARE THERE MORE THAN 32 LEFT?         UAT13660\n         BNH   FULL1               NO - SKIP                            UAT13670\n         LR    R15,R2              YES- USE ONLY 32                     UAT13680\nFULL1    EQU   *                                                        UAT13690\n         BCTR  R15,0               GET EXECUTABLE LENGTH                UAT13700\n         MVC   LINE+89(34),=34C'*' ASTERISKS AT END                     UAT13710\n         EX    R15,MOVEIT3         MOVE STRING TO LINE                  UAT13720\n         TR    LINE+90(32),PRTTABLE  MAKE UNPRINTABLES PRINTABLE        UAT13730\n         LA    R14,LINE+14         POINT TO START OF THE LINE           UAT13740\n         LA    R15,4               NO. OF 4-BYTE SECTIONS 'TILL BREAK   UAT13750\nLINE1    EQU   *                                                        UAT13760\n         UNPK  WORKAREA(9),0(5,R6) DO NEXT FOUR BYTES                   UAT13770\n         TR    WORKAREA(9),HEXTABLE  MAKE IT PRINTABLE                  UAT13780\n         LA    R1,4                FOUR BYTES PER SECTION               UAT13790\n         CR    R1,R2               IS THERE FOUR BYTES LEFT?            UAT13800\n         BNH   FULL2               YES - SKIP                           UAT13810\n         LR    R1,R2               NO  - USE WHAT'S LEFT                UAT13820\nFULL2    EQU   *                                                        UAT13830\n         SLL   R1,1                MULTIPLY BY TWO                      UAT13840\n         BCTR  R1,0                GET EXECUTABLE LENGTH                UAT13850\n         EX    R1,MOVEIT4          MOVE SECTION TO PRINT LINE           UAT13860\n         BCT   R15,LINE2           DECREMENT SECTION COUNTER            UAT13870\n         LA    R14,2(,R14)         BUMP LINE POINTER                    UAT13880\nLINE2    EQU   *                                                        UAT13890\n         S     R2,=F'4'            DECREMENT LENGTH BY FOUR             UAT13900\n         BNP   OUT                 IF THAT'S ALL, QUIT                  UAT13910\n         LA    R3,4(,R3)           INCREMENT OFFSET COUNT               UAT13920\n         LA    R6,4(,R6)           NEXT WORD                            UAT13930\n         BXLE  R14,R4,LINE1        LOOP BACK                            UAT13940\n         OI    FLAG2,#NOSHIFT      SET NO SHIFT OPTION                  UAT13950\n         BAL   R9,PRINTIT          GO PRINT THIS LINE                   UAT13960\n         B     NEWLINE             BEGIN WITH NEW LINE                  UAT13970\nOUT      EQU   *                                                        UAT13980\n         OI    FLAG2,#NOSHIFT      SET NO SHIFT OPTION                  UAT13990\n         BAL   R9,PRINTIT          GO PRINT REMAINING LINE              UAT14000\n         SPACE                                                          UAT14010\nDUMPITXT EQU   *                                                        UAT14020\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT14030\n         BR    R9                  RETURN TO CALLER                     UAT14040\n         DROP  R8                  DON'T NEED THIS ANY MORE             UAT14050\n         SPACE 2                                                        UAT14060\nMOVEIT3  MVC   LINE+90(*-*),0(R6)    *** EXECUTED INSTRUCTION ***       UAT14070\nMOVEIT4  MVC   0(*-*,R14),WORKAREA   *** EXECUTED INSTRUCTION ***       UAT14080\n         EJECT                                                          UAT14090\n*********************************************************************** UAT14100\n*                                                                     * UAT14110\n*      PRINTBLK                                                       * UAT14120\n*                                                                     * UAT14130\n*           THIS ROUTINE PRINTS A DATA BLOCK FROM THE TAPE.  AN       * UAT14140\n*           ATTEMPT IS MADE TO PRINT LOGICAL RECORDS FOUND IN THE     * UAT14150\n*           DATA BLOCK.  IF THE TAPE HAS STANDARD LABELS, THEN THE    * UAT14160\n*           LRECL FIELD OF THE HDR2 LABEL IS USED TO DETERMINE THE    * UAT14170\n*           RECORD LENGTH.  IF THE LRECL IS LESS THAN 133, THEN       * UAT14180\n*           EACH RECORD IS PRINTED ON A SEPARATE LINE.  IF THE        * UAT14190\n*           LRECL IS 133 OR GREATER, THEN A DEFAULT OF 80 IS USED.    * UAT14200\n*                                                                     * UAT14210\n*           NOTE:  CURRENTLY, HDR2 LABEL LRECLS ARE USED FOR          * UAT14220\n*                  RECFM=F FILES ONLY.  FOR RECFM=V OR U FILES,       * UAT14230\n*                  LRECL=80 IS USED.                                  * UAT14240\n*                                                                     * UAT14250\n*********************************************************************** UAT14260\n         SPACE                                                          UAT14270\nPRINTBLK EQU   *                                                        UAT14280\n         TM    OPTIONS2,#PRINT     WAS PRINT OPTION SPECIFIED?          UAT14290\n         BZR   R9                  NO - RETURN TO CALLER                UAT14300\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT14310\n         BOR   R9                  YES - RETURN TO CALLER               UAT14320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT14330\n         TM    OPTIONS2,#PMAX      WAS PRINTMAX OPTION SPECIFIED?       UAT14340\n         BNO   NOPMAX1             NO - SKIP CHECK                      UAT14350\n         L     R15,PBLKCT          LOAD BLOCK COUNTER                   UAT14360\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT14370\n         ST    R15,PBLKCT          SAVE NEW COUNTER VALUE               UAT14380\n         BNM   NOPMAX1             CONTINUE WITH PRINT IF NOT NEGATIVE  UAT14390\n         AH    R15,=H'1'           IS COUNT -1?                         UAT14400\n         BNZ   PRINTBXT            NO - RETURN TO CALLER                UAT14410\n         MOVEMSG MSG53             PRINT SUSPENDED MSG                  UAT14420\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFT                    UAT14430\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT14440\n         B     PRINTBXT            RETURN TO CALLER                     UAT14450\nNOPMAX1  EQU   *                                                        UAT14460\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT14470\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14480\n         MOVEMSG MSG24             FILE XX BLOCK YY LENGTH ZZ           UAT14490\n         UNPK  LINE+MSG24F(4),DOUBLE(8)   FILE NUMBER TO CHARACTER      UAT14500\n         OI    LINE+MSG24F+3,X'F0' INSURE SIGN NIBBLE                   UAT14510\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT14520\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14530\n         UNPK  LINE+MSG24B(6),DOUBLE(8)   BLOCK NUMBER TO CHARACTER     UAT14540\n         OI    LINE+MSG24B+5,X'F0' INSURE SIGN NIBBLE                   UAT14550\n         L     R15,RECLENF         LOAD BLOCK LENGTH                    UAT14560\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14570\n         UNPK  LINE+MSG24L(5),DOUBLE(8)   BLOCK LENGTH TO CHARACTER     UAT14580\n         OI    LINE+MSG24L+4,X'F0' INSURE SIGN NIBBLE                   UAT14590\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14600\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT14610\n         L     R2,RECLENF          LOAD THIS BLOCK'S LENGTH             UAT14620\n         SRDA  R2,32               PREPARE FOR DIVIDE                   UAT14630\n         LA    R5,80               DEFAULT LINE LENGTH OF 80            UAT14640\n         TM    FLAG,#SL            STD LABEL TAPE?                      UAT14650\n         BNO   PRTDFLT             NO - USE DEFAULT                     UAT14660\n         CLI   CURRECFM,C'F'       FIXED-LENGTH FILE?                   UAT14670\n         BNE   PRTDFLT             NO - DON'T SUPPORT OTHERS YET        UAT14680\n         L     R5,CURLRECL         GET CURRENT FILE'S LRECL             UAT14690\n         CH    R5,SYSPRINT+(DCBLRECL-IHADCB)  LESS THAN SYSPRINT LRECL? UAT14700\n         BL    PRTDFLT             YES - USE FILE'S LRECL               UAT14710\n         LA    R5,80               NO - MUST USE DEFAULT OF 80          UAT14720\n         SPACE                                                          UAT14730\nPRTDFLT  EQU   *                                                        UAT14740\n         DR    R2,R5               DIVIDE BY LINE LENGTH                UAT14750\n         LR    R4,R7               DATA BLOCK ADDRESS IN R4             UAT14760\n         LTR   R3,R3               DO WE HAVE A FULL LINE?              UAT14770\n         BZ    LASTLINE            NO - SKIP TO DO LAST LINE            UAT14780\n         SPACE                                                          UAT14790\nFULLLINE EQU   *                                                        UAT14800\n         LR    R15,R5              GET LINE LENGTH                      UAT14810\n         BCTR  R15,0               CALC EXECUTE LENGTH                  UAT14820\n         EX    R15,MOVEIT5         MOVE IN DATA                         UAT14830\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14840\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT14850\n         AR    R4,R5               POINT TO NEXT LINE OF DATA           UAT14860\n         BCT   R3,FULLLINE         GO BACK TO DO NEXT LINE              UAT14870\n         LTR   R2,R2               IS THERE ANY DATA LEFT               UAT14880\n         BNP   PRINTBXT            NO - RETURN TO CALLER                UAT14890\n         SPACE                                                          UAT14900\nLASTLINE EQU   *                                                        UAT14910\n         BCTR  R2,0                GET EXECUTABLE LENGTH                UAT14920\n         EX    R2,MOVEIT5          MOVE REMAINING DATA TO LINE          UAT14930\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14940\n         BAL   R9,PRINTIT                                               UAT14950\n         SPACE                                                          UAT14960\nPRINTBXT EQU   *                                                        UAT14970\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT14980\n         BR    R9                  RETURN TO CALLER                     UAT14990\n         SPACE                                                          UAT15000\nMOVEIT5  MVC   LINE+1(*-*),0(R4)   *** EXECUTED INSTRUCTION ***         UAT15010\n         EJECT                                                          UAT15020\n*********************************************************************** UAT15030\n*                                                                     * UAT15040\n*    TRANSLTE  AND  TRANSBCK                                          * UAT15050\n*                                                                     * UAT15060\n*       THESE ROUTINES PERFORM THE \"EBCDIC TO ASCII\" OR \"ASCII TO     * UAT15070\n*       EBCDIC\" TRANSLATION REQUESTED BY THE USER.                    * UAT15080\n*                                                                     * UAT15090\n*********************************************************************** UAT15100\nTRANSLTE EQU   *                                                        UAT15110\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15120\n         BOR   R9                  YES - RETURN TO CALLER               UAT15130\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15140\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15150\n         USING TABLES,R15          MAKE THEM ADDRESSABLE                UAT15160\n         TM    OPTIONS2,#ETOA      WAS \"ETOA\" OPTION SPECIFIED?         UAT15170\n         BNO   NOETOA              NO EBCDIC TO ASCII TRANSLATE         UAT15180\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15190\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15200\nNOETOA   EQU   *                                                        UAT15210\n         TM    OPTIONS2,#ATOE      WAS \"ATOE\" OPTION SPECIFIED?         UAT15220\n         BNO   TRANSXT             NO ASCII TO EBCDIC TRANSLATE         UAT15230\n         LA    R2,IECTRASA         POINT TO ASCII->EBCDIC TABLE         UAT15240\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15250\n         SPACE 2                                                        UAT15260\nTRANSLAB EQU   *                                                        UAT15270\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15280\n         BOR   R9                  YES - RETURN TO CALLER               UAT15290\n         TM    FLAG2,#AL+#LABREC   ARE WE PROCESSING ASCII LABEL?       UAT15300\n         BNOR  R9                  NO ASCII TO EBCDIC TRANSLATE         UAT15310\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15320\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15330\n         LA    R2,IECTRASA         POINT TO ASCII->EBCDIC TABLE         UAT15340\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15350\n         SPACE 2                                                        UAT15360\n*   THIS ROUTINE TRANSLATES A PREVIOUSLY TRANSLATED ASCII LABEL         UAT15370\n*   FROM EBCDIC BACK INTO ASCII                                         UAT15380\nTRANSBCK EQU   *                                                        UAT15390\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15400\n         BOR   R9                  YES - RETURN TO CALLER               UAT15410\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15420\n         TM    FLAG2,#AL+#LABREC   ARE WE PROCESSING ASCII LABEL?       UAT15430\n         BNO   TRANSQ1             NO EBCDIC TO ASCII TRANSLATE         UAT15440\n         TM    OPTIONS2,#ATOE      WAS \"ATOE\" OPTION SPECIFIED?         UAT15450\n         BO    TRANSXT             YES - DON'T TRANSLATE                UAT15460\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15470\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15480\n         B     TRANS               GO TRANSLATE THE BLOCK               UAT15490\nTRANSQ1  EQU   *                                                        UAT15500\n         TM    OPTIONS2,#ETOA      WAS \"ETOA\" OPTION SPECIFIED?         UAT15510\n         BNO   TRANSXT             NO - RETURN                          UAT15520\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15530\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15540\nTRANS    EQU   *                                                        UAT15550\n         L     R3,RECLENF          LOAD RECORD LENGTH                   UAT15560\n         LA    R4,256              MAXIMUM LENGTH PER TR INSTRUCION     UAT15570\n         LR    R5,R7               DATA ADDRESS                         UAT15580\nTRLOOPB  EQU   *                                                        UAT15590\n         CR    R3,R4               MORE THAN 256 BYTES LEFT?            UAT15600\n         BL    TRLOOPE             NO - BRANCH                          UAT15610\n         TR    0(256,R5),0(R2)     TRANSLATE 256 BYTES OF BUFFER        UAT15620\n         AR    R5,R4               NEXT 256 BYTES                       UAT15630\n         SR    R3,R4               LESS 256 BYTES                       UAT15640\n         BP    TRLOOPB             GO DO IT (IF ANY LEFT)               UAT15650\nTRLOOPE  EQU   *                                                        UAT15660\n         BZ    TRANSXT             RETURN IF NO DATA LEFT               UAT15670\n         BCTR  R3,0                GET EXECUTABLE LENGTH                UAT15680\n         EX    R3,EXTRANS          TRANSLATE REMAINING BUFFER           UAT15690\n         SPACE                                                          UAT15700\nTRANSXT  EQU   *                                                        UAT15710\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT15720\n         BR    R9                  RETURN TO CALLER                     UAT15730\n         DROP  R15                 WE DON'T NEED THIS ANYMORE           UAT15740\n         SPACE                                                          UAT15750\nEXTRANS  TR    0(*-*,R5),0(R2)     ***** EXECUTED INSTRUCTION *****     UAT15760\n         EJECT                                                          UAT15770\n*********************************************************************** UAT15780\n*                                                                     * UAT15790\n*     BLOCKS                                                          * UAT15800\n*                                                                     * UAT15810\n*            THE BLOCKS ROUTINE PRINTS THE SIZE OF THE DATA BLOCK     * UAT15820\n*            IF THE BLOCKS OPTION IS IN EFFECT AND THE DUMP OPTION    * UAT15830\n*            IS NOT IN EFFECT.  PRINTOUT IS CONDENSED WHERE           * UAT15840\n*            POSSIBLE.  IF INDICATED BY THE #TAPEMRK FLAG, THIS       * UAT15850\n*            ROUTINE SHUTS DOWN THE BLOCKS OPTION FOR THE FILE        * UAT15860\n*            AND PRINTS THE SIZE OF THE LAST BLOCK.                   * UAT15870\n*                                                                     * UAT15880\n*********************************************************************** UAT15890\n         SPACE                                                          UAT15900\nBLOCKS   EQU   *                                                        UAT15910\n         TM    OPTIONS1,#BLOCKS    WAS BLOCKS OPTION SELECTED?          UAT15920\n         BNOR  R9                  NO - RETURN TO CALLER                UAT15930\n         TM    OPTIONS1,#DUMP+#DUMPALL   WAS EITHER DUMP OR DUMPALL?    UAT15940\n         BNZR  R9                  YES - RETURN TO CALLER               UAT15950\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15960\n         TM    FLAG,#TAPEMRK       IS THIS A TAPE MARK?                 UAT15970\n         BNO   CHKBLOCK            NO - NOT END OF FILE                 UAT15980\n         L     R14,BLOCKCNT        GET BLOCK COUNT                      UAT15990\n         LTR   R14,R14             WERE THERE ANY PREV BLOCKS?          UAT16000\n         BZ    BLOCKSXT            NO - JUST EXIT                       UAT16010\n         B     LSTBLOCK            YES - DUMP LAST ACCUMULATION         UAT16020\nCHKBLOCK EQU   *                                                        UAT16030\n         CLC   BLOCKCNT(4),=F'1'   IS THIS 1ST BLOCK?                   UAT16040\n         BE    NEWBLOCK            YES - BRANCH                         UAT16050\n         CLC   RECLENF(4),LASTLEN  BLOCK LENGTH SAME AS LAST TIME?      UAT16060\n         BE    BLOCKSXT            YES - RETURN TO CALLER               UAT16070\n         L     R14,BLOCKCNT        LOAD CURRENT BLOCK COUNTER           UAT16080\n         BCTR  R14,0               DECREMENT BLOCK NUMBER               UAT16090\nLSTBLOCK EQU   *                                                        UAT16100\n         ST    R14,LASTBLK         SAVE THIS                            UAT16110\n         SPACE                                                          UAT16120\n         LA    R14,BLOCKSP1        ADDRESS OF PRINT RTN FOR ONE BLOCK   UAT16130\n         CLC   STARTBLK,LASTBLK    START AND END THE SAME?              UAT16140\n         BE    ONEBLOCK            IF EQUAL, ONLY ONE BLOCK             UAT16150\n         LA    R14,BLOCKSP2        ADDRESS OF PRINT RTN FOR MULT BLOCKS UAT16160\nONEBLOCK EQU   *                                                        UAT16170\n         BALR  R9,R14              GO PRINT MESSAGE                     UAT16180\nNEWBLOCK EQU   *                                                        UAT16190\n         MVC   STARTBLK(4),BLOCKCNT   RESET START BLOCK                 UAT16200\n         MVC   LASTLEN(4),RECLENF  RESET LAST LENGTH                    UAT16210\nBLOCKSXT EQU   *                                                        UAT16220\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16230\n         BR    R9                  RETURN TO CALLER                     UAT16240\n         SPACE                                                          UAT16250\n*  PRINT \"BLOCKS XXXX TO YYYY LENGTH ZZZZ\" MESSAGE                      UAT16260\nBLOCKSP2 EQU   *                                                        UAT16270\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16280\n         MOVEMSG MSG25             BLOCKS XXXX TO YYYY LENGTH ZZZZ      UAT16290\n         L     R14,LASTBLK         GET LAST BLOCK                       UAT16300\n         CVD   R14,DOUBLE          CONVERT LAST BLOCK TO DECIMAL        UAT16310\n         UNPK  LINE+MSG25T(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16320\n         OI    LINE+MSG25T+5,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16330\n         L     R14,STARTBLK        LOAD STARTING BLOCK                  UAT16340\n         CVD   R14,DOUBLE          CONVERT TO DECIMAL                   UAT16350\n         UNPK  LINE+MSG25B(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16360\n         OI    LINE+MSG25B+5,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16370\n         BCT   R14,SGLSKIP1        IF NOT FIRST BLOCK, DO SINGLE SKIP   UAT16380\n         MVI   LINE,C'0'           IF FIRST BLOCK, DO DOUBLE SKIP       UAT16390\nSGLSKIP1 EQU   *                                                        UAT16400\n         L     R15,LASTLEN         LOAD BLOCK LENGTH                    UAT16410\n         CVD   R15,DOUBLE          CONVERT BLK LENGTH TO DECIMAL        UAT16420\n         UNPK  LINE+MSG25L(5),DOUBLE(8)   TO PRINTABLE FORM             UAT16430\n         OI    LINE+MSG25L+4,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16440\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT16450\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16460\n         BR    R9                  RETURN TO CALLER                     UAT16470\n         SPACE                                                          UAT16480\n*  PRINT \"BLOCK  XXXX         LENGTH ZZZZ\" MESSAGE                      UAT16490\nBLOCKSP1 EQU   *                                                        UAT16500\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16510\n         MOVEMSG MSG26             BLOCK XXXX LENGTH YYYY               UAT16520\n         L     R14,STARTBLK        LOAD STARTING BLOCK                  UAT16530\n         CVD   R14,DOUBLE          CONVERT TO DECIMAL                   UAT16540\n         UNPK  LINE+MSG26B(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16550\n         OI    LINE+MSG26B+5,X'F0' INSURE LAST DIGIT PRINTABLE          UAT16560\n         BCT   R14,SGLSKIP2        IF NOT FIRST BLOCK, DO SINGLE SKIP   UAT16570\n         MVI   LINE,C'0'           IF FIRST BLOCK, DO DOUBLE SKIP       UAT16580\nSGLSKIP2 EQU   *                                                        UAT16590\n         L     R15,LASTLEN         LOAD LAST LENGTH                     UAT16600\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT16610\n         UNPK  LINE+MSG26L(5),DOUBLE(8)   TO PRINTABLE FORM             UAT16620\n         OI    LINE+MSG26L+4,X'F0' INSURE LAST DIGIT PRINTABLE          UAT16630\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT16640\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16650\n         BR    R9                  RETURN TO CALLER                     UAT16660\n         EJECT                                                          UAT16670\n*********************************************************************** UAT16680\n*                                                                     * UAT16690\n*     OPEN1                                                           * UAT16700\n*                                                                     * UAT16710\n*          THIS ROUTINE OPENS THE SYSPRINT AND SYSUT1 DCB'S           * UAT16720\n*          AND ALLOCATES A BUFFER FOR SYSUT1.                         * UAT16730\n*                                                                     * UAT16740\n*********************************************************************** UAT16750\n         SPACE                                                          UAT16760\nOPEN1    EQU   *                                                        UAT16770\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16780\n         SPACE 2                                                        UAT16790\n*    VERIFY PRESENCE OF SYSPRINT, SYSUT1, AND SYSUT2 DD-STATEMENTS      UAT16800\n         SPACE 1                                                        UAT16810\n         EXTRACT TIOTADDR,'S',FIELDS=TIOT   GO GET TIOT ADDRESS         UAT16820\n         L     R2,TIOTADDR         LOAD TIOT POINTER                    UAT16830\n         LA    R2,TIOTDDEN(,R2)    POINT TO FIRST DD ENTRY              UAT16840\n         SR    R15,R15             ZERO OUT WORK REGISTER               UAT16850\nTIOTLOOP EQU   *                                                        UAT16860\n         CLI   TIOTLEN(R2),0       ARE WE AT END OF TIOT?               UAT16870\n         BE    TIOTEND             YES - GET OUT OF LOOP                UAT16880\n         CLC   TIOTDDNM(8,R2),SYSPRINT+DDNAME    IS THIS SYSPRINT?      UAT16890\n         BE    FOUNDP              YES - GO SET FLAG                    UAT16900\n         CLC   TIOTDDNM(8,R2),SYSUT1+DDNAME      IS THIS SYSUT1?        UAT16910\n         BE    FOUND1              YES - GO SET FLAG                    UAT16920\n         CLC   TIOTDDNM(8,R2),SYSUT2+DDNAME      IS THIS SYSUT2?        UAT16930\n         BE    FOUND2              YES - GO SET FLAG                    UAT16940\nTIOTNEXT EQU   *                                                        UAT16950\n         IC    R15,TIOTLEN(,R2)    LOAD DD ENTRY LENGTH                 UAT16960\n         AR    R2,R15              POINT TO NEXT DD ENTRY               UAT16970\n         B     TIOTLOOP            LOOP BACK FOR IT                     UAT16980\n         SPACE                                                          UAT16990\nFOUNDP   EQU   *                                                        UAT17000\n         OI    FLAG,#SYSPRNT       SET FLAG FOR SYSPRINT                UAT17010\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17020\n         SPACE                                                          UAT17030\nFOUND1   EQU   *                                                        UAT17040\n         OI    FLAG,#SYSUT1        SET FLAG FOR SYSUT1                  UAT17050\n         MVC   UCB1(4),TIOTFSRT-1(R2)  SAVE SYSUT1 UCB ADDRESS          UAT17060\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17070\n         SPACE                                                          UAT17080\nFOUND2   EQU   *                                                        UAT17090\n         OI    FLAG,#SYSUT2        SET FLAG FOR SYSUT2                  UAT17100\n         MVC   UCB2(4),TIOTFSRT-1(R2)  SAVE SYSUT2 UCB ADDRESS          UAT17110\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17120\n         SPACE                                                          UAT17130\nTIOTEND  EQU   *                                                        UAT17140\n         TM    FLAG,#SYSPRNT       WAS SYSPRINT FOUND?                  UAT17150\n         BNO   NOPRINT1            NO - GO TERMINATE PROGRAM            UAT17160\n         SPACE 2                                                        UAT17170\n*    OPEN THE SYSPRINT DATA SET                                         UAT17180\n         SPACE                                                          UAT17190\n         OPEN  (SYSPRINT,OUTPUT)   OPEN SYSPRINT                        UAT17200\n         TM    SYSPRINT+OFLGS,#BIT3   DID SYSPRINT OPEN OK?             UAT17210\n         BNO   NOPRINT2            NO - HAVE TO TERMINATE PROGRAM       UAT17220\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT17230\n         SPACE 2                                                        UAT17240\n*    OPEN THE SYSUT1 TAPE DATA SET                                      UAT17250\n         SPACE                                                          UAT17260\n         TM    FLAG,#SYSUT1        WAS SYSUT1 FOUND?                    UAT17270\n         BNO   NOSYS1A             NO - GO TERMINATE PROGRAM            UAT17280\n         L     R15,UCB1            LOAD SYSUT1 UCB ADDRESS              UAT17290\n         CLI   #UCBTYP+2(R15),X'80' IS THIS DEVICE MAGNETIC TAPE?       UAT17300\n         BNE   NOTTAPE1            NO - ISSUE ERROR                     UAT17310\n         CLI   #UCBTYP+3(R15),X'80' IS THIS A 3480?                     UAT17320\n         BE    ACART               YES - SET FLAG!                      UAT17330\n         CLI   #UCBTYP+3(R15),X'81' IS THIS A 3490?                     UAT17320\n         BE    ACART               YES - SET FLAG!                      UAT17330\n         CLI   #UCBTYP+3(R15),X'83' IS THIS A 3590?                     UAT17320\n         BNE   NOT3480A            NO - SKIP                            UAT17330\nACART    EQU   *                                                        UAT17350\n         OI    FLAG2,#CART1        SET CART FLAG                        UAT17340\nNOT3480A EQU   *                                                        UAT17350\n         RDJFCB SYSUT1             READ JOB FILE CONTROL BLOCK          UAT17360\n         LA    R2,JFCB             LOAD JFCB BASE REGISTER              UAT17370\n         USING JFCBD,R2            DECLARE BASE ADDRESSING              UAT17380\n         MVI   JFCBNVOL,1          FORCE NUMBER OF VOLUMES TO 1         UAT17390\n         MVI   JFCBLTYP,#BIT3      FORCE LABEL TYPE BLP                 UAT17400\n         NI    JFCBTSDM,X'10'      REMOVE JOB MANAGEMENT FLAGS          UAT17410\n         OI    JFCBTSDM,#BIT1      SHOW VOL SER LIST WAS CHANGED        UAT17420\n         OI    JFCBIND2,#BIT7      FORCE THIS TO BE TEMPORARY DATA SET  UAT17430\n         MVC   VOLSER1(6),JFCBVOLS SAVE JCL'S VOLUME SERIAL             UAT17440\n         DROP  R2                  DON'T NEED THIS NOW                  UAT17450\n         OPEN  (SYSUT1,INPUT),TYPE=J  OPEN SYSUT1 WITH MODIFIED JFCB    UAT17460\n         TM    SYSUT1+OFLGS,#BIT3  DID SYSUT1 OPEN OK?                  UAT17470\n         BNO   NOSYS1B             NO - TERMINATE PROGRAM               UAT17480\n         SPACE 2                                                        UAT17490\n*    GET A 32K I/O BUFFER                                               UAT17500\n         SPACE                                                          UAT17510\n         GETMAIN EC,LV=66000,A=BUFADDR,SP=0   GO GET I/O BUFFER SPACE   UAT17520\n         LTR   R15,R15             DID WE GET THE CORE?                 UAT17530\n         BNZ   NOCORE              NOPE - HAVE TO QUIT                  UAT17540\n         GETMAIN EC,LV=LSTATBUF,A=ASTATBUF,SP=0   GO GET FILE STAT BUF  UAT17550\n         LTR   R15,R15             DID WE GET THE CORE?                 UAT17560\n         BNZ   NOCORE              NOPE - HAVE TO QUIT                  UAT17570\n         MVC   BSTATBUF(4),ASTATBUF   SAVE CURRENT STAT BUF ADDR        UAT17580\n         L     R7,BUFADDR          LOAD I/O BUFFER ADDRESS              UAT17590\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT17600\n         BR    R9                  RETURN TO CALLER                     UAT17610\n         EJECT                                                          UAT17620\n*********************************************************************** UAT17630\n*                                                                     * UAT17640\n*     OPEN2                                                           * UAT17650\n*                                                                     * UAT17660\n*          THIS ROUTINE OPENS THE SYSUT2 DCB.                         * UAT17670\n*                                                                     * UAT17680\n*********************************************************************** UAT17690\n         SPACE                                                          UAT17700\nOPEN2    EQU   *                                                        UAT17710\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT17720\n         BNOR  R9                  NO - RETURN TO CALLER                UAT17730\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT17740\n         SPACE 2                                                        UAT17750\n*    OPEN THE SYSUT2 TAPE DATA SET                                      UAT17760\n         SPACE                                                          UAT17770\n         TM    FLAG,#SYSUT2        WAS SYSUT2 FOUND?                    UAT17780\n         BNO   NOSYS2A             NO - GO TERMINATE PROGRAM            UAT17790\n         L     R15,UCB2            LOAD SYSUT2 UCB ADDRESS              UAT17800\n         CLI   #UCBTYP+2(R15),X'80' IS THIS DEVICE MAGNETIC TAPE?       UAT17810\n         BNE   NOTTAPE2            NO - ISSUE ERROR                     UAT17820\n         CLI   #UCBTYP+3(R15),X'80' IS THIS A 3480?                     UAT17830\n         BNE   NOT3480B            NO - SKIP                            UAT17840\n         OI    FLAG2,#CART2        SET 3480 FLAG                        UAT17850\n         LA    R14,DEN38K          DEFAULT DENSITY                      UAT17860\n         B     DEFDEN2             PROCEED WITH OPEN                    UAT17870\nNOT3480B EQU   *                                                        UAT17880\n         LA    R14,DEN6250         DEFAULT 6250 BPI                     UAT17890\n         TM    #UCBTYP+0(R15),X'02' THIS DEVICE SUPPORT 6250?           UAT17900\n         BO    DEFDEN2             YES - LET 6250 BE DEFAULT            UAT17910\n         LA    R14,DEN1600         DEFAULT 1600 BPI                     UAT17920\n         TM    #UCBTYP+0(R15),X'04' THIS DEVICE SUPPORT 1600?           UAT17930\n         BO    DEFDEN2             YES - LET 1600 BE DEFAULT            UAT17940\n         LA    R14,DEN800          DEFAULT 800 BPI                      UAT17950\nDEFDEN2  EQU   *                                                        UAT17960\n         MVC   DEFDEN(L'DENTAB),0(R14)   SAVE DEFAULT DENSITY INFO      UAT17970\n         SPACE                                                          UAT17980\n         RDJFCB SYSUT2             READ JOB FILE CONTROL BLOCK          UAT17990\n         LA    R2,JFCB             LOAD JFCB BASE REGISTER              UAT18000\n         USING JFCBD,R2            DECLARE BASE ADDRESSING              UAT18010\n         MVI   JFCBNVOL,1          FORCE NUMBER OF VOLUMES TO 1         UAT18020\n         MVI   JFCBLTYP,#BIT3      FORCE LABEL TYPE BLP                 UAT18030\n         NI    JFCBTSDM,X'10'      REMOVE JOB MANAGEMENT FLAGS          UAT18040\n         OI    JFCBTSDM,#BIT1      SHOW VOL SER LIST WAS CHANGED        UAT18050\n         OI    JFCBIND2,#BIT7      FORCE THIS TO BE TEMPORARY DATA SET  UAT18060\n         MVC   VOLSER2(6),JFCBVOLS SAVE JCL'S VOLUME SERIAL             UAT18070\n         OPEN  (SYSUT2,INPUT),TYPE=J    OPEN THE OUTPUT TAPE DCB        UAT18080\n         TM    SYSUT2+OFLGS,#BIT3  DID SYSUT2 OPEN OK?                  UAT18090\n         BNO   NOSYS2B             NO - LET'S TERMINATE THE PROGRAM     UAT18100\n         SPACE 2                                                        UAT18110\n*   PREPARE MODESET ON SYSUT2 TAPE TO SET PROPER TAPE DENSITY           UAT18120\n         SPACE                                                          UAT18130\n         TM    FLAG2,#CART2        WRITING TO 3480 CARTRIDGE?           UAT18140\n         BNO   CHKREEL2            NO - SKIP 3480 STUFF                 UAT18150\n         MVC   MODECCW(1),DEN38K+DENTABM   MAKE CCW MODESET DUMMY       UAT18160\n         MVC   TAPEDEN(1),DEN38K+DENTABJ   SAVE DENSITY CHARACTER       UAT18170\n         MVC   DENSITY2(4),DEN38K+DENTABC  FOR OUR MESSAGE              UAT18180\n         MVC   OUTIRG(6),DEN38K+DENTABN    IRG SIZE INFO                UAT18190\n         ICM   R15,15,DEN38K+DENTABB  800 BYTES PER INCH                UAT18200\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18210\nCHKREEL2 EQU   *                                                        UAT18220\n         CLI   JFCDEN,JFCDOMIT     WAS DENSITY OMITTED ON DDCARD?       UAT18230\n         BNE   CHK800              NO - BRANCH                          UAT18240\n         MOVEMSG MSG42             DEFAULT DENSITY ON SYSUT2            UAT18250\n         MVC   LINE+MSG42D(4),DEFDEN+2  PUT DENSITY INTO MSG            UAT18260\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18270\n         BAL   R9,PRINTIT          GO PRINT THIS MESSAGE                UAT18280\n         B     SETDEFD             GO SET THE DEFAULT DENSITY           UAT18290\nCHK800   EQU   *                                                        UAT18300\n         CLI   JFCDEN,JFCD800      800 BPI?                             UAT18310\n         BNE   CHK1600             NO - BRANCH                          UAT18320\n         MVC   MODECCW(1),DEN800+DENTABM   MAKE CCW MODESET 800         UAT18330\n         MVC   TAPEDEN(1),DEN800+DENTABJ   SAVE DENSITY CHARACTER       UAT18340\n         MVC   DENSITY2(4),DEN800+DENTABC  FOR OUR MESSAGE              UAT18350\n         MVC   OUTIRG(6),DEN800+DENTABN    IRG SIZE INFO                UAT18360\n         ICM   R15,15,DEN800+DENTABB  800 BYTES PER INCH                UAT18370\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18380\nCHK1600  EQU   *                                                        UAT18390\n         CLI   JFCDEN,JFCD1600     1600 BPI?                            UAT18400\n         BNE   CHK6250             NO - BRANCH                          UAT18410\n         MVC   MODECCW(1),DEN1600+DENTABM   MAKE CCW MODESET 1600       UAT18420\n         MVC   TAPEDEN(1),DEN1600+DENTABJ   SAVE DENSITY CHARACTER      UAT18430\n         MVC   DENSITY2(4),DEN1600+DENTABC  FOR OUR MESSAGE             UAT18440\n         MVC   OUTIRG(6),DEN1600+DENTABN    IRG SIZE INFO               UAT18450\n         ICM   R15,15,DEN1600+DENTABB 1600 BYTES PER INCH               UAT18460\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18470\nCHK6250  EQU   *                                                        UAT18480\n         CLI   JFCDEN,JFCD6250     6250 BPI?                            UAT18490\n         BNE   INVDEN              NO - UATAPE DOES NOT SUPPORT OTHERS  UAT18500\n         MVC   MODECCW(1),DEN6250+DENTABM   MAKE CCW MODESET 6250       UAT18510\n         MVC   TAPEDEN(1),DEN6250+DENTABJ   SAVE DENSITY CHARACTER      UAT18520\n         MVC   DENSITY2(4),DEN6250+DENTABC  FOR OUR MESSAGE             UAT18530\n         MVC   OUTIRG(6),DEN6250+DENTABN    IRG SIZE INFO               UAT18540\n         ICM   R15,15,DEN6250+DENTABB 6250 BYTES PER INCH               UAT18550\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18560\nSETDEFD  EQU   *                                                        UAT18570\n         MVC   TAPEDEN(1),DEFDEN   DENSITY CHARACTER CODE               UAT18580\n         MVC   MODECCW(1),DEFDEN+1 SET MODESET CCW                      UAT18590\n         MVC   DENSITY2(4),DEFDEN+2  DENSITY IN ENGLISH                 UAT18600\n         ICM   R15,15,DEFDEN+6     BINARY BPI                           UAT18610\nDENCOMMN EQU   *                                                        UAT18620\n         ST    R15,DENSYS2         SAVE TAPE DENSITY                    UAT18630\n         MOVEMSG MSG10                    OUTPUT TAPE DENSITY =         UAT18640\n         MVC   LINE+MSG10D(4),DENSITY2    MOVE IN DENSITY               UAT18650\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18660\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT18670\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT18680\n         BR    R9                  RETURN TO CALLER                     UAT18690\n         EJECT                                                          UAT18700\n*********************************************************************** UAT18710\n*                                                                     * UAT18720\n*     LABELS                                                          * UAT18730\n*                                                                     * UAT18740\n*        PERFORM SYSUT1 AND SYSUT2 TAPE VOLUME LABEL PROCESSING       * UAT18750\n*                                                                     * UAT18760\n*********************************************************************** UAT18770\n         SPACE                                                          UAT18780\n*      PERFORM SYSUT1 VOLUME LABEL PROCESSING                           UAT18790\n         SPACE                                                          UAT18800\nLABELS   EQU   *                                                        UAT18810\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT18820\nGETVOLLB EQU   *                                                        UAT18830\n         BAL   R9,READ1            GO READ 1ST RECORD ON TAPE           UAT18840\n         TM    FLAG,#TAPEMRK       DID WE FIND LEADING TAPE MARK?       UAT18850\n         BO    CHECKLTM            YES - CHECK 'LTM' OPTION             UAT18860\n         LA    R15,75              MINIMUM ACCEPTABLE RECORD LENGTH     UAT18870\n         C     R15,RECLENF         IS LABEL RECORD SHORTER THAN 75?     UAT18880\n         BNL   NOTSL               YES- DO NOT CONSIDER STANDARD LABEL  UAT18890\n         LA    R15,85              MAXIMUM ACCEPTABLE RECORD LENGTH     UAT18900\n         C     R15,RECLENF         IS LABEL RECORD LONGER THAN 85?      UAT18910\n         BNH   NOTSL               YES- DO NOT CONSIDER STANDARD LABEL  UAT18920\n         USING VOL1D,R7            GET VOLUME LABEL ADDRESSING          UAT18930\n         CLC   VOL1VOL1(4),=C'VOL1'   IS THIS A VOLUME LABEL?           UAT18940\n         BNE   CHKASCII            NO - CHECK FOR ASCII LABELS          UAT18950\n         OI    FLAG,#SL            SET FLAG TO SHOW STD. LABEL          UAT18960\n         MOVEMSG MSG2              TAPE CONTAINS STANDARD LABELS        UAT18970\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18980\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT18990\n         MVC   VOLSER1(6),VOL1SER  SAVE THE VOLUME SERIAL               UAT19000\n         B     OPEN1A              SKIP SOME STUFF                      UAT19010\n         SPACE                                                          UAT19020\nCHECKLTM EQU   *                                                        UAT19030\n         OI    FLAG,#LTMPRES       SAY THAT LTM FOUND                   UAT19040\n         TM    OPTIONS2,#LTM       WAS 'LTM' OPTION SPECIFIED?          UAT19050\n         BNO   LTMNOTOK            NO - LEADING TAPE MARK IS NOT OK     UAT19060\n         MOVEMSG MSG51             LEADING TAPE MARK SKIPPED            UAT19070\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19080\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19090\n         B     GETVOLLB            GO CHECK FOR A VOLUME LABEL          UAT19100\nLTMNOTOK EQU   *                                                        UAT19110\n         MOVEMSG MSG52             LEADING TAPE MARK FOUND - NOT SL     UAT19120\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19130\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19140\n         B     OPEN1A              CONTINUE AS NON STD LABELS           UAT19150\n         SPACE                                                          UAT19160\nCHKASCII EQU *               'V O L 1'   (IN ASCII)                     UAT19170\n         CLC   VOL1VOL1(4),=X'564F4C31'  IS THIS ASCII \"VOL1\"?          UAT19180\n         BNE   NOTSL               NO - CONSIDER IT NONSTANDARD         UAT19190\n         MOVEMSG MSG49             TAPE CONTAINS ASCII LABELS           UAT19200\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19210\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT19220\n         OI    FLAG,#SL            SHOWS THAT WE HAVE STD. LABELS       UAT19230\n         OI    FLAG2,#AL           SHOW THAT WE HAVE ASCII LABELS       UAT19240\n         MVC   VOLSER1(6),VOL1SER  SAVE THE VOLUME SERIAL               UAT19250\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT19260\n         USING TABLES,R15          MAKE THEM ADDRESSABLE                UAT19270\n         TR    VOLSER1(6),IECTRASA TRANSLATE IT TO EBCDIC               UAT19280\n         DROP  R15                 WE DON'T NEED THIS ANYMORE           UAT19290\n         B     OPEN1A              SKIP SOME STUFF                      UAT19300\n         DROP  R7                  DON'T NEED THIS NOW                  UAT19310\nNOTSL    EQU   *                                                        UAT19320\n         MOVEMSG MSG3              TAPE DOES NOT CONTAIN STANDARD LABEL UAT19330\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19340\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19350\n         SPACE                                                          UAT19360\nOPEN1A   EQU   *                                                        UAT19370\n         TM    FLAG2,#CART1        IS THIS A 3480 CARTRIDGE?            UAT19380\n         BO    OPEN1B              YES - PROCESS DIFFERENTLY            UAT19390\n         MOVEMSG MSG6              WRITE RING IS IN                     UAT19400\n         BAL   R9,SENSE1           GO GET SYSUT1 SENSE INFO             UAT19410\n         TM    #SENSE1,#BIT6       CHECK WRITE RING BIT                 UAT19420\n         BNO   RINGIN              BRANCH IF IT'S IN                    UAT19430\n         MVC   LINE+MSG6W(4),=C'OUT.'  SAY WRITE RING IS OUT.           UAT19440\nRINGIN   EQU   *                                                        UAT19450\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19460\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19470\n         BAL   R9,REWIND1          REWIND THE SYSUT1 TAPE               UAT19480\n         B     LABELS2             NOW GO PROCESS SYSUT2                UAT19490\n         SPACE                                                          UAT19500\nOPEN1B   EQU   *                                                        UAT19510\n         BAL   R9,SENSE1           GO GET SYSUT1 SENSE INFO             UAT19520\n         MOVEMSG MSG61             WRITE PROTECT ENABLED                UAT19530\n         TM    #SENSE1,#BIT6       IS IT WRITE PROTECTED?               UAT19540\n         BO    WRITEPON            YES - BRANCH                         UAT19550\n         MVC   LINE+MSG61A(9),=C'DISABLED.'  SAY WRITE PROTECT OFF      UAT19560\nWRITEPON EQU   *                                                        UAT19570\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19580\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19590\n         BAL   R9,REWIND1          REWIND SYSUT1 TAPE                   UAT19600\n         SPACE 2                                                        UAT19610\n*  PERFORM LABCHECK OPTION CHECK (DISPLAY VOLSER AND QUIT)              UAT19620\n         TM    OPTIONS3,#LABCHK    LABCHECK OPTION IN EFFECT?           UAT19630\n         BNO   LABELS2             NO - SKIP                            UAT19640\n         ICM   R15,B'0011',=C'NL'  NONSTANDARD LABEL                    UAT19650\n         TM    FLAG,#SL            STANDARD LABEL?                      UAT19660\n         BNO   LABCHK1             NO - BRANCH                          UAT19670\n         ICM   R15,B'0011',=C'AL'  ASCII LABEL?                         UAT19680\n         TM    FLAG2,#AL           ASCII LABEL                          UAT19690\n         BO    LABCHK1             YES - BRANCH                         UAT19700\n         ICM   R15,B'0011',=C'SL'  STANDARD LABEL                       UAT19710\nLABCHK1  EQU   *                                                        UAT19720\n         STCM  R15,B'0011',WTO1LAB  STORE NL/AL/SL INTO WTO MSG         UAT19730\n         MVC   WTO1VOL(6),VOLSER1   STORE VOLSER INTO WTO MSG           UAT19740\n         L     R15,UCB1            GET SYSUT1 UCB ADDRESS               UAT19750\n         MVC   WTO1UNIT(3),#UCBNAME(R15)  STORE UCB NAME INTO WTO MSG   UAT19760\n         MVC   WTO1TYPE(4),=C'CART'                                     UAT19770\n         TM    FLAG2,#CART1        IS THIS A CARTRIDGE?                 UAT19780\n         BO    LABCHK2             NO - SKIP                            UAT19790\n         MVC   WTO1TYPE(4),=C'TAPE'                                     UAT19800\nLABCHK2  EQU   *                                                        UAT19810\n         WTO   MF=(E,WTO1)         TAPE ON XXX IS SL VOLSER             UAT19820\n         B     EPILOG              JUST QUIT                            UAT19830\n         SPACE 2                                                        UAT19840\n*     PERFORM SYSUT2 VOLUME LABEL PROCESSING                            UAT19850\n         SPACE                                                          UAT19860\nLABELS2  EQU   *                                                        UAT19870\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT19880\n         BNO   LABELS1             NO - DO NOT CHECK SYSUT2             UAT19890\n         TM    OPTIONS2,#BYPASS    WAS BYPASS OPTION SPECIFIED?         UAT19900\n         BO    BYPASS2             YES - DO NOT CHECK SYSUT2            UAT19910\n         BAL   R9,READ2            GO READ 1ST RECORD ON TAPE           UAT19920\n         TM    FLAG,#TAPEMRK       DID WE FIND TAPE MARK?               UAT19930\n         BO    INVALID1            YES - CANNOT USE THIS TAPE           UAT19940\n         LA    R15,80              LOAD SUPPOSED LABEL RECORD LENGTH    UAT19950\n         C     R15,RECLENF         IS THE RECORD REALLY 80?             UAT19960\n         BNE   INVALID1            NO - CANNOT USE THIS TAPE            UAT19970\n         USING VOL1D,R7            DECLARE VOLUME LABEL ADDRESSABILITY  UAT19980\n         CLC   VOL1VOL1(4),=C'VOL1'   IS THIS REALLY VOLUME LABEL?      UAT19990\n         BNE   INVALID1            NO - CANNOT USE THIS TAPE            UAT20000\n         MVC   VOLSER2X(6),VOL1SER SAVE TAPE'S VOLUME SERIAL            UAT20010\n         CLC   VOL1SER(6),VOLSER2  DO VOLUME SERIAL MATCH?              UAT20020\n         BNE   INVALID2            NO - CANNOT USE THIS TAPE            UAT20030\n         DROP  R7                  DON'T NEED THIS ANY MORE             UAT20040\n         MOVEMSG MSG7              ORIGINAL SYSUT2 VOLUME SERIAL        UAT20050\n         MVC   LINE+MSG7S(6),VOLSER2X    PUT VOL SER IN MSG             UAT20060\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT20070\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT20080\nBYPASS2  EQU   *                                                        UAT20090\n         BAL   R9,REWIND2          REWIND THE OUTPUT TAPE               UAT20100\n         BAL   R9,MODESET2         GO SET DRIVE DENSITY                 UAT20110\n         BAL   R9,SENSE2           GO GET SYSUT2 SENSE INFO.            UAT20120\n*** NOTE:  SENSE BYTE 1 BIT 6 IS SET FOR WRITE PROTECT ENABLED ON       UAT20130\n***        BOTH 3420 AND 3480 TAPE DRIVES.                              UAT20140\n         TM    #SENSE1,#BIT6       CHECK WRITE PROTECT BIT              UAT20150\n         BO    FILEPROT            CAN'T USE THIS TAPE                  UAT20160\nLABELS1  EQU   *                                                        UAT20170\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT20180\n         BR    R9                  RETURN TO CALLER                     UAT20190\n         EJECT                                                          UAT20200\n*********************************************************************** UAT20210\n*                                                                     * UAT20220\n*     EOTSTATS                                                        * UAT20230\n*                                                                     * UAT20240\n*         THIS ROUTINE PRINTS THE VARIOUS STATISTIC FIELDS            * UAT20250\n*         FOUND IN THE UCB'S FOR BOTH SYSUT1 AND SYSUT2               * UAT20260\n*         TAPES.                                                      * UAT20270\n*                                                                     * UAT20280\n*********************************************************************** UAT20290\n         SPACE                                                          UAT20300\nEOTSTATS EQU   *                                                        UAT20310\n         STACK R9                       PLACE RETURN ADDRESS ON STACK   UAT20320\n         L     R4,UCB1                  LOAD SYSUT1 UCB ADDRESS         UAT20330\n         L     R2,#UCBXTN-1(R4)         LOAD SYSUT1 UCB EXTENSION ADDR  UAT20340\n         MOVEMSG MSG28                  STATISTICS                      UAT20350\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20360\n         BNO   NC0                      NO - SKIP A FEW                 UAT20370\n         MVC   LINE+MSGS2-6(6),=C'SYSUT2'    SAY SYSUT2 TOO             UAT20380\n         L     R5,UCB2                  LOAD SYSUT2 UCB ADDRESS         UAT20390\n         L     R3,#UCBXTN-1(R5)         LOAD SYSUT2 UCB EXTENSION ADDR  UAT20400\nNC0      EQU   *                                                        UAT20410\n         BAL   R9,PRINTIT               GO PRINT THE LINE               UAT20420\n         SPACE                                                          UAT20430\n*   VOLUME SERIAL NUMBER                                                UAT20440\n         MOVEMSG MSG29                  VOLUME SERIAL                   UAT20450\n         MVC   LINE+MSGS1-6(6),VOLSER1  SYSUT1 VOLUME SERIAL            UAT20460\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20470\n         BNO   NC1                      NO - SKIP A FEW                 UAT20480\n         MVC   LINE+MSGS2-6(6),VOLSER2  SYSUT2 VOLUME SERIAL            UAT20490\nNC1      EQU   *                                                        UAT20500\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20510\n         SPACE                                                          UAT20520\n*   TAPE DRIVE UNIT ADDRESS                                             UAT20530\n         MOVEMSG MSG37                  TAPE DRIVE                      UAT20540\n         MVC   LINE+MSGS1-3(3),#UCBNAME(R4)  MOVE IN SYSUT1 DEVICE ADDR UAT20550\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20560\n         BNO   NC2                      NO - SKIP A FEW                 UAT20570\n         MVC   LINE+MSGS2-3(3),#UCBNAME(R5)  MOVE IN SYSUT2 DEVICE ADDR UAT20580\nNC2      EQU   *                                                        UAT20590\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20600\n         SPACE                                                          UAT20610\n*   TEMPORARY READ ERRORS                                               UAT20620\n         MOVEMSG MSG30                  TEMPORARY READS                 UAT20630\n         SR    R4,R4                    CLEAR WORK REGISTER             UAT20640\n         IC    R4,#UCBTR(R2)            SYSUT1 TEMP READS               UAT20650\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20660\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20670\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20680\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20690\n         BNO   NC3                      NO - SKIP A FEW                 UAT20700\n         IC    R4,#UCBTR(R3)            SYSUT2 TEMP READS               UAT20710\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20720\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)    PRINTABLE                   UAT20730\n         OI    LINE+MSGS2-1,X'F0'              DECIMAL                  UAT20740\nNC3      EQU   *                                                        UAT20750\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20760\n         SPACE                                                          UAT20770\n*   TEMPORARY WRITE ERRORS                                              UAT20780\n         MOVEMSG MSG31                  TEMPORARY WRITES                UAT20790\n         IC    R4,#UCBTW(R2)            SYSUT1 TEMP WRITES              UAT20800\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20810\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20820\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20830\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20840\n         BNO   NC4                      NO - SKIP A FEW                 UAT20850\n         IC    R4,#UCBTW(R3)            SYSUT2 TEMP WRITES              UAT20860\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20870\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT20880\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT20890\nNC4      EQU   *                                                        UAT20900\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20910\n         SPACE                                                          UAT20920\n*   PERMANENT READ ERRORS                                               UAT20930\n         MOVEMSG MSG32                  PERMANENT READS                 UAT20940\n         IC    R4,#UCBPR(R2)            SYSUT1 PERM READS               UAT20950\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20960\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20970\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20980\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20990\n         BNO   NC5                      NO - SKIP A FEW                 UAT21000\n         IC    R4,#UCBPR(R3)            SYSUT2 PERM READS               UAT21010\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21020\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21030\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21040\nNC5      EQU   *                                                        UAT21050\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21060\n         SPACE                                                          UAT21070\n*   PERMANENT WRITE ERRORS                                              UAT21080\n         MOVEMSG MSG33                  PERMANENT WRITES                UAT21090\n         IC    R4,#UCBPW(R2)            SYSUT1 PERM WRITES              UAT21100\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21110\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21120\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21130\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21140\n         BNO   NC6                      NO - SKIP A FEW                 UAT21150\n         IC    R4,#UCBPW(R3)            SYSUT2 PERM WRITES              UAT21160\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21170\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21180\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21190\nNC6      EQU   *                                                        UAT21200\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21210\n         SPACE                                                          UAT21220\n*   NOISE BLOCKS                                                        UAT21230\n         MOVEMSG MSG38                  NOISE BLOCKS                    UAT21240\n         IC    R4,#UCBNB(R2)            SYSUT1 NOISE BLOCKS             UAT21250\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21260\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21270\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21280\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21290\n         BNO   NC7                      NO - SKIP A FEW                 UAT21300\n         IC    R4,#UCBNB(R3)            SYSUT2 NOISE BLOCKS             UAT21310\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21320\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21330\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21340\nNC7      EQU   *                                                        UAT21350\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21360\n         SPACE                                                          UAT21370\n*   NUMBER OF ERASE GAPS                                                UAT21380\n         MOVEMSG MSG34                  ERASE GAPS                      UAT21390\n         LH    R4,#UCBERG(R2)           SYSUT1 ERASE GAPS               UAT21400\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21410\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21420\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21430\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21440\n         BNO   NC8                      NO - SKIP A FEW                 UAT21450\n         LH    R4,#UCBERG(R3)           SYSUT2 ERASE GAPS               UAT21460\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21470\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21480\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21490\nNC8      EQU   *                                                        UAT21500\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21510\n         SPACE                                                          UAT21520\n*   CLEANER ACTIONS                                                     UAT21530\n         MOVEMSG MSG35                  CLEANER ACTIONS                 UAT21540\n         LH    R4,#UCBCLN(R2)           SYSUT1 CLEANER ACTIONS          UAT21550\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21560\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21570\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21580\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21590\n         BNO   NC9                      NO - SKIP A FEW                 UAT21600\n         LH    R4,#UCBCLN(R3)           SYSUT2 CLEANER ACTIONS          UAT21610\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21620\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21630\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21640\nNC9      EQU   *                                                        UAT21650\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21660\n         SPACE                                                          UAT21670\n*   START I/O COUNT                                                     UAT21680\n         MOVEMSG MSG36                  START I/O                       UAT21690\n         LH    R4,#UCBSIO(R2)           SYSUT1 SIO'S                    UAT21700\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21710\n         UNPK  LINE+MSGS1-6(6),DOUBLE(8)   PRINTABLE                    UAT21720\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21730\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21740\n         BNO   NC10                     NO - SKIP A FEW                 UAT21750\n         LH    R4,#UCBSIO(R3)           SYSUT2 SIO'S                    UAT21760\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21770\n         UNPK  LINE+MSGS2-6(6),DOUBLE(8)   PRINTABLE                    UAT21780\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21790\nNC10     EQU   *                                                        UAT21800\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21810\n         SPACE                                                          UAT21820\n*    TOTAL DATA BYTES ON TAPE                                           UAT21830\n         MOVEMSG MSG391                 DATA LENGTH (FEET)              UAT21840\n         L     R4,TBYTECNT              TOTAL BYTES ON TAPE             UAT21850\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21860\n         MVC   LINE+MSGS1-15(15),=X'4020206B2020206B2020206B202120'     UAT21870\n         ED    LINE+MSGS1-15(15),DOUBLE+2  PRINTABLE DECIMAL            UAT21880\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21890\n         BNO   NC11                     NO - SKIP A FEW                 UAT21900\n         L     R4,TBYTECNT              TOTAL BYTES ON TAPE             UAT21910\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21920\n         MVC   LINE+MSGS2-15(15),=X'4020206B2020206B2020206B202120'     UAT21930\n         ED    LINE+MSGS2-15(15),DOUBLE+2  PRINTABLE DECIMAL            UAT21940\nNC11     EQU   *                                                        UAT21950\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21960\n         SPACE                                                          UAT21970\n*    TOTAL DATA LENGTH ON TAPE                                          UAT21980\n         MOVEMSG MSG39                  DATA LENGTH (FEET)              UAT21990\n         L     R4,TOTFEET               TOTAL NUMBER OF FEET ON TAPE    UAT22000\n         CVD   R4,DOUBLE                CONVERT TO                      UAT22010\n         UNPK  LINE+MSGS1-5(5),DOUBLE(8)   PRINTABLE                    UAT22020\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT22030\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT22040\n         BNO   NC12                     NO - SKIP A FEW                 UAT22050\n         L     R4,TOTFEET2              TOTAL NUMBER OF FEET ON TAPE    UAT22060\n         CVD   R4,DOUBLE                CONVERT TO                      UAT22070\n         UNPK  LINE+MSGS2-5(5),DOUBLE(8)   PRINTABLE                    UAT22080\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT22090\nNC12     EQU   *                                                        UAT22100\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT22110\n         SPACE                                                          UAT22120\n         TM    FLAG,#SL            STANDARD LABELS?                     UAT22130\n         BNO   NC13                NO - SKIP                            UAT22140\n         MOVEMSG MSG67             (TOTAL BYTES DOES NOT INCLUDE LABEL) UAT22150\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT22160\nNC13     EQU   *                                                        UAT22170\n         SPACE                                                          UAT22180\n*    PRINT TAPE FILES SUMMARY                                           UAT22190\n         TM    FLAG,#SL            STANDARD LABEL TAPE?                 UAT22200\n         BNO   NOSUMM              NO - NO SUMMARY                      UAT22210\n         L     R6,ASTATBUF         LOAD BEGINNING STAT BUF PTR          UAT22220\n         LA    R4,WSTATBUF         LOAD LENGTH OF EACH ENTRY            UAT22230\n         L     R5,BSTATBUF         LOAD CURRENT POINTER                 UAT22240\n         SR    R5,R4               BACK UP TO LAST ENTRY                UAT22250\n         CR    R5,R6               ARE THERE ANY ENTRIES?               UAT22260\n         BL    NOSUMM              NO - EXIT                            UAT22270\n         LA    R3,1                LAST LINE COUNTER                    UAT22280\nSUMMHDR  EQU   *                                                        UAT22290\n         MOVEMSG MSG47                  SUMMARY HEADING                 UAT22300\n         MVC   LINE+MSG471(6),VOLSER1   INPUT VOLUME SERIAL             UAT22310\n         TM    OPTIONS1,#COPY           COPY OPTION IN EFFECT?          UAT22320\n         BNO   SUMMNCPY                 NO - SKIP VOLSER2               UAT22330\n         MVC   LINE+MSG47M(3),=C'AND'   ADD AN \"AND\"                    UAT22340\n         MVC   LINE+MSG472(6),VOLSER2   OUTPUT VOLUME SERIAL            UAT22350\nSUMMNCPY EQU   *                                                        UAT22360\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22370\n         MOVEMSG MSG45             SUMMARY HEADING                      UAT22380\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22390\n         MOVEMSG MSG46             SUMMARY HEADING UNDERSCORE           UAT22400\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22410\nSUMMLOOP EQU   *                                                        UAT22420\n         TM    OPTIONS2,#CRT       CRT OPTION IN EFFECT?                UAT22430\n         BO    SUMMSKIP            YES - SKIP CHECK FOR HEADER          UAT22440\n         C     R3,LLINES           LINE COUNTER LOW ENOUGH?             UAT22450\n         BNL   SUMMHDR             YES - PRINT HEADER                   UAT22460\nSUMMSKIP EQU   *                                                        UAT22470\n         MVC   LINE+8(4),STATFILE(R6)    FILE NUMBER                    UAT22480\n         MVC   LINE+16(17),STATDSN(R6)   DATA SET NAME                  UAT22490\n         MVC   LINE+37(4),STATRECF(R6)   RECORD FORMAT                  UAT22500\n         MVC   LINE+45(5),STATLREC(R6)   LOGICAL RECORD LENGTH          UAT22510\n         MVC   LINE+54(5),STATBLKS(R6)   BLOCK SIZE                     UAT22520\n         MVC   LINE+63(6),STATNBLK(R6)   NUMBER OF BLOCKS               UAT22530\n         MVC   LINE+73(4),STATLEN(R6)    LENGTH (FEET)                  UAT22540\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT22550\n         BXLE  R6,R4,SUMMLOOP      LOOP BACK FOR NEXT ENTRY             UAT22560\nNOSUMM   EQU   *                                                        UAT22570\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT22580\n         BR    R9                       RETURN TO CALLER                UAT22590\n         EJECT                                                          UAT22600\n*********************************************************************** UAT22610\n*                                                                     * UAT22620\n*     PRINTIT                                                         * UAT22630\n*                                                                     * UAT22640\n*          THIS ROUTINE IS A GENERAL PURPOSE PRINT ROUTINE.  IT       * UAT22650\n*          ACCEPTS A SINGLE PRINT LINE AT \"LINE\" THAT CONTAINS        * UAT22660\n*          CARRIAGE CONTROL, AND MAINTAINS A COUNTER SUCH THAT        * UAT22670\n*          A MAXIMUM OF 60 LINES APPEAR ON EACH PRINTED PAGE.         * UAT22680\n*          SUPPORTED CARRIAGE CONTROL CHARACTERS INCLUDE THE '0'      * UAT22690\n*          FOR DOUBLE SPACING AND THE '-' FOR TRIPLE SPACING, AS      * UAT22700\n*          WELL AS THE BLANK FOR SINGLE SPACING.                      * UAT22710\n*                                                                     * UAT22720\n*********************************************************************** UAT22730\n         SPACE                                                          UAT22740\nPRINTIT  EQU   *                                                        UAT22750\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT22760\n         TM    OPTIONS2,#CRT       IS CRT OPTION IN EFFECT?             UAT22770\n         BO    NOSHIFT             YES - SKIP HEADING STUFF             UAT22780\n         LA    R15,1               ONE LINE SKIPPED                     UAT22790\n         CLI   LINE,C'0'           DOUBLE SPACING?                      UAT22800\n         BE    PUTLINES            YES - BRANCH                         UAT22810\n         LA    R15,2               TWO LINES SKIPPED                    UAT22820\n         CLI   LINE,C'-'           TRIPLE SPACING?                      UAT22830\n         BE    PUTLINES            YES - BRANCH                         UAT22840\n         CLI   LINE,C'1'           PAGE EJECT?                          UAT22850\n         BE    PUTEJECT            YES - BRANCH                         UAT22860\n         SR    R15,R15             WHATEVER, WE WON'T COUNT IT          UAT22870\n         SPACE                                                          UAT22880\nPUTLINES EQU   *                                                        UAT22890\n         L     R14,LLINES          NO. OF LINES LEFT ON PAGE            UAT22900\n         SR    R14,R15             SUBTRACT OFF BLANK LINES             UAT22910\n         BP    SKIPTOF             IF SOME STILL LEFT, BRANCH           UAT22920\nPUTEJECT EQU   *                                                        UAT22930\n         L     R14,PAGENUM         WHAT PAGE IS THIS COMING UP?         UAT22940\n         LA    R14,1(,R14)         INCREMENT PAGE NUMBER BY 1           UAT22950\n         ST    R14,PAGENUM         SAVE NEW PAGE NUMBER                 UAT22960\n         CVD   R14,DOUBLE          CONVERT PAGE NUMBER                  UAT22970\n         UNPK  PAGE(4),DOUBLE(8)      TO CHARACTER FORM                 UAT22980\n         OI    PAGE+3,X'F0'        INSURE SIGN NIBBLE                   UAT22990\n         PUT   SYSPRINT,HEADING1   PRINT ADVERTISEMENT                  UAT23000\n         LA    R14,57              57 LINES LEFT ON PAGE                UAT23010\n         MVI   LINE,C'-'           NEXT LINE IS TRIPLE SPACED           UAT23020\n         SPACE                                                          UAT23030\nSKIPTOF  EQU   *                                                        UAT23040\n         BCTR  R14,0               DECREMENT LINE COUNTER               UAT23050\n         ST    R14,LLINES          SAVE THIS NEW VALUE                  UAT23060\n         TM    OPTIONS2,#CRT       CRT OPTION IN EFFECT?                UAT23070\n         BO    NOSHIFT             YES - DO NOT SHIFT                   UAT23080\n         TM    FLAG2,#NOSHIFT      SHIFT THE LINE OVER?                 UAT23090\n         BO    NOSHIFT             NO - DO NOT SHIFT                    UAT23100\n         MVC   TEMPLINE(1),LINE    MOVE CARRIAGE CONTROL CHAR           UAT23110\n         MVC   TEMPLINE+21(110),LINE+1  SHIFT LINE OVER                 UAT23120\n         MVC   LINE(L'LINE),TEMPLINE   REPLACE ORIGINAL LINE            UAT23130\nNOSHIFT  EQU   *                                                        UAT23140\n         PUT   SYSPRINT,LINE       PRINT THE LINE                       UAT23150\n         NI    FLAG2,255-#NOSHIFT  RESET NOSHIFT FLAG                   UAT23160\n         MVI   LINE,C' '           BLANK OUT THE                        UAT23170\n         MVC   LINE+1(L'LINE-1),LINE     PRINT LINE                     UAT23180\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23190\n         BR    R9                  RETURN TO CALLER                     UAT23200\n         EJECT                                                          UAT23210\n*********************************************************************** UAT23220\n*                                                                     * UAT23230\n*     READ1                                                           * UAT23240\n*                                                                     * UAT23250\n*            THIS ROUTINE READS A SINGLE BLOCK FROM THE SYSUT1        * UAT23260\n*            TAPE.  THE LENGTH OF THE BLOCK IS CALCULATED AND         * UAT23270\n*            PLACED AT \"RECLEN\".                                      * UAT23280\n*                                                                     * UAT23290\n*********************************************************************** UAT23300\n         SPACE                                                          UAT23310\nREAD1    EQU   *                                                        UAT23320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23330\n         STCM  R7,7,READADDR       SAVE BUFFER ADDR IN CCW              UAT23340\n         LA    R2,READCCW          POINT TO THE CHANNEL PROGRAM         UAT23350\n         BAL   R9,EXCP1            GO READ THE NEXT BLOCK               UAT23360\n*        LH    R15,READLEN         LOAD LENGTH OF ATTEMPTED READ        UAT23370\n         MVC   HALFWORK(2),READLEN     MOVE ENTIRE 64K HALFWORD         UAT23370\n         L     R15,FULLWORK            LOAD FULLWORD                    UAT23370\n*        SH    R15,IOB1RES         SUBTRACT OFF THE RESIDUAL LENGTH     UAT23380\n         MVC   HALFWORK(2),IOB1RES     MOVE 64K RESIDUAL LENGTH         UAT23380\n         S     R15,FULLWORK            SUBTRACT IN FULLWORD ARITHMETIC  UAT23380\n         STH   R15,RECLEN          SAVE RECORD LENGTH                   UAT23390\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23400\n         BR    R9                  RETURN TO CALLER                     UAT23410\n         SPACE 3                                                        UAT23420\n*********************************************************************** UAT23430\n*                                                                     * UAT23440\n*     READ2                                                           * UAT23450\n*                                                                     * UAT23460\n*            THIS ROUTINE READS A SINGLE BLOCK FROM THE SYSUT2        * UAT23470\n*            TAPE.  THE LENGTH OF THE BLOCK IS CALCULATED AND         * UAT23480\n*            PLACED AT \"RECLEN\".                                      * UAT23490\n*                                                                     * UAT23500\n*********************************************************************** UAT23510\n         SPACE                                                          UAT23520\nREAD2    EQU   *                                                        UAT23530\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23540\n         STCM  R7,7,READADDR       SAVE BUFFER ADDR IN CCW              UAT23550\n         LA    R2,READCCW          POINT TO THE CHANNEL PROGRAM         UAT23560\n         BAL   R9,EXCP2            GO READ THE NEXT BLOCK               UAT23570\n*        LH    R15,READLEN         LOAD LENGTH OF ATTEMPTED READ        UAT23580\n         MVC   HALFWORK(2),READLEN     MOVE ENTIRE 64K HALFWORD         UAT23580\n         L     R15,FULLWORK            LOAD FULLWORD                    UAT23580\n*        SH    R15,IOB2RES         SUBTRACT OFF THE RESIDUAL LENGTH     UAT23590\n         MVC   HALFWORK(2),IOB2RES     MOVE 64K RESIDUAL LENGTH         UAT23590\n         S     R15,FULLWORK            SUBTRACT IN FULLWORD ARITHMETIC  UAT23590\n         STH   R15,RECLEN          SAVE RECORD LENGTH                   UAT23600\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23610\n         BR    R9                  RETURN TO CALLER                     UAT23620\n         EJECT                                                          UAT23630\n*********************************************************************** UAT23640\n*                                                                     * UAT23650\n*     WRITE2                                                          * UAT23660\n*                                                                     * UAT23670\n*            THIS ROUTINE WRITES A SINGLE BLOCK OR TAPE MARK ON       * UAT23680\n*            THE SYSUT2 TAPE.  THE TAPE INDICATE CONDITION IS         * UAT23690\n*            CHECKED BEFORE WRITING TO DETERMINE IF THERE IS STILL    * UAT23700\n*            ROOM LEFT ON THE TAPE.                                   * UAT23710\n*                                                                     * UAT23720\n*********************************************************************** UAT23730\n         SPACE                                                          UAT23740\nWRITE2   EQU   *                                                        UAT23750\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT23760\n         BNOR  R9                  RETURN TO CALLER                     UAT23770\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23780\n         TM    FLAG,#TAPEIND       WAS TAPE INDICATE PREVIOUSLY RAISED? UAT23790\n         BO    NOROOM              YES - WE ARE OUT OF TAPE             UAT23800\n         LA    R2,WTMCCW           POINT TO WRITE TAPE MARK CCW         UAT23810\n         TM    FLAG,#TAPEMRK       ARE WE TO WRITE TAPE MARK?           UAT23820\n         BO    WRITETM             YES - LET'S WRITE IT INSTEAD         UAT23830\n         STCM  R7,7,WRITEADR       SAVE BUFFER ADDR IN CCW              UAT23840\n         MVC   WRITELEN(2),RECLEN  PLACE RECORD LENGTH IN CCW           UAT23850\n         LA    R2,WRITECCW         POINT TO THE WRITE CHANNEL PGM       UAT23860\nWRITETM  EQU   *                                                        UAT23870\n         BAL   R9,EXCP2            GO EXECUTE THE CHANNEL PROGRAM       UAT23880\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23890\n         BR    R9                  RETURN TO CALLER                     UAT23900\n         EJECT                                                          UAT23910\n*********************************************************************** UAT23920\n*                                                                     * UAT23930\n*     SENSE1                                                          * UAT23940\n*                                                                     * UAT23950\n*            THIS ROUTINE READS THE SENSE INFORMATION FOR THE         * UAT23960\n*            SYSUT1 TAPE.                                             * UAT23970\n*                                                                     * UAT23980\n*********************************************************************** UAT23990\n         SPACE                                                          UAT24000\nSENSE1   EQU   *                                                        UAT24010\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24020\n         LA    R2,SENSECCW         POINT TO SENSE CHANNEL PGM           UAT24030\n         BAL   R9,EXCP1            GO GET SENSE INFORMATION             UAT24040\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24050\n         BR    R9                  RETURN TO CALLER                     UAT24060\n         SPACE 3                                                        UAT24070\n*********************************************************************** UAT24080\n*                                                                     * UAT24090\n*     SENSE2                                                          * UAT24100\n*                                                                     * UAT24110\n*            THIS ROUTINE READS THE SENSE INFORMATION FOR THE         * UAT24120\n*            SYSUT2 TAPE.                                             * UAT24130\n*                                                                     * UAT24140\n*********************************************************************** UAT24150\n         SPACE                                                          UAT24160\nSENSE2   EQU   *                                                        UAT24170\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24180\n         LA    R2,SENSECCW         POINT TO SENSE CHANNEL PROGRAM       UAT24190\n         BAL   R9,EXCP2            GO GET SENSE INFORMATION             UAT24200\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24210\n         BR    R9                  RETURN TO CALLER                     UAT24220\n         EJECT                                                          UAT24230\n*********************************************************************** UAT24240\n*                                                                     * UAT24250\n*     REWIND1                                                         * UAT24260\n*                                                                     * UAT24270\n*          THIS ROUTINE REWINDS THE SYSUT1 TAPE TO ITS LOAD POINT.    * UAT24280\n*                                                                     * UAT24290\n*********************************************************************** UAT24300\n         SPACE                                                          UAT24310\nREWIND1  EQU   *                                                        UAT24320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24330\n         LA    R2,REWINDCC         POINT TO REWIND CCW                  UAT24340\n         BAL   R9,EXCP1            GO REWIND THE TAPE                   UAT24350\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24360\n         BR    R9                  RETURN TO CALLER                     UAT24370\n         SPACE 3                                                        UAT24380\n*********************************************************************** UAT24390\n*                                                                     * UAT24400\n*     REWIND2                                                         * UAT24410\n*                                                                     * UAT24420\n*          THIS ROUTINE REWINDS THE SYSUT2 TAPE TO ITS LOAD POINT.    * UAT24430\n*                                                                     * UAT24440\n*********************************************************************** UAT24450\n         SPACE                                                          UAT24460\nREWIND2  EQU   *                                                        UAT24470\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24480\n         LA    R2,REWINDCC         POINT TO REWIND CCW                  UAT24490\n         BAL   R9,EXCP2            GO REWIND THE TAPE                   UAT24500\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24510\n         BR    R9                  RETURN TO CALLER                     UAT24520\n         SPACE 3                                                        UAT24530\n*********************************************************************** UAT24540\n*                                                                     * UAT24550\n*     MODESET2                                                        * UAT24560\n*                                                                     * UAT24570\n*          THIS ROUTINE SETS THE PROPER SYSUT2 TAPE DENSITY           * UAT24580\n*                                                                     * UAT24590\n*********************************************************************** UAT24600\n         SPACE                                                          UAT24610\nMODESET2 EQU   *                                                        UAT24620\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24630\n         LA    R2,MODECCW          POINT TO MODESET CCW                 UAT24640\n         BAL   R9,EXCP2            GO SET DRIVE DENSITY                 UAT24650\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24660\n         BR    R9                  RETURN TO CALLER                     UAT24670\n         SPACE 3                                                        UAT24680\n*********************************************************************** UAT24690\n*                                                                     * UAT24700\n*     DISPLAY1                                                        * UAT24710\n*                                                                     * UAT24720\n*          THIS ROUTINE WRITES TO THE DISPLAY ON 3480 DRIVE           * UAT24730\n*                                                                     * UAT24740\n*********************************************************************** UAT24750\n         SPACE                                                          UAT24760\nDISPLAY1 EQU   *                                                        UAT24770\n         TM    FLAG2,#CART1        ARE WE ON 3480?                      UAT24780\n         BNOR  R9                  NO - JUST RETURN                     UAT24790\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24800\n         LA    R2,DISPCCW          POINT TO LOAD DISPLAY CCW            UAT24810\n         BAL   R9,EXCP1            GO SET DRIVE DENSITY                 UAT24820\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24830\n         BR    R9                  RETURN TO CALLER                     UAT24840\n         EJECT                                                          UAT24850\n*********************************************************************** UAT24860\n*                                                                     * UAT24870\n*     EXCP1                                                           * UAT24880\n*                                                                     * UAT24890\n*            THIS ROUTINE EXECUTES CHANNEL PROGRAMS FOR               * UAT24900\n*            THE SYSUT1 DATA SET.  VARIOUS ERROR CHECKING             * UAT24910\n*            IS DONE, AND FLAG SETTING IS PERFORMED (SUCH             * UAT24920\n*            AS FLAGGING TAPE MARKS, ETC.).  AT ENTRY TO              * UAT24930\n*            THIS ROUTINE, REGISTER 2 MUST POINT TO THE               * UAT24940\n*            START OF THE CHANNEL PROGRAM TO BE EXECUTED.             * UAT24950\n*                                                                     * UAT24960\n*********************************************************************** UAT24970\n         SPACE                                                          UAT24980\n*   ISSUE THE I/O OPERATION FOR SYSUT1 TAPE                             UAT24990\n         SPACE                                                          UAT25000\nEXCP1    EQU   *                                                        UAT25010\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT25020\n         NI    FLAG3,255-#SEN3480  RESET SENSE-TYPE FLAG                UAT25030\n         TM    FLAG2,#CART1        ARE WE WRITING TO 3480?              UAT25040\n         BNO   EXCP1R              NO - SKIP                            UAT25050\n         OI    FLAG3,#SEN3480      YES- SET 3480 SENSE FLAG             UAT25060\nEXCP1R   EQU   *                   ENTRY FOR REDRIVING THE I/O          UAT25070\n         TM    OPTIONS3,#DEBUG1    DEBUG OUTPUT?                        UAT25080\n         BNO   EXCP1S1             NO - SKIP                            UAT25090\n         MOVEMSG MSG63             DEBUG SYSUT1 BEFORE                  UAT25100\n         UNPK  LINE+MSG63A(9),0(5,R2)                                   UAT25110\n         UNPK  LINE+MSG63A+8(9),4(5,R2)                                 UAT25120\n         MVI   LINE+MSG63A+16,C' '                                      UAT25130\n         TR    LINE+MSG63A(16),HEXTABLE                                 UAT25140\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT25150\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT25160\nEXCP1S1  EQU   *                                                        UAT25170\n         STCM  R2,7,IOB1CCW        SAVE CHANNEL PGM ADDR IN IOB         UAT25180\n         EXCP  IOB1                EXECUTE THE CHANNEL PROGRAM          UAT25190\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25200\n         TM    OPTIONS3,#DEBUG1    DEBUG OUTPUT?                        UAT25210\n         BNO   EXCP1S2             NO - SKIP                            UAT25220\n         MOVEMSG MSG64             DEBUG SYSUT1 BEFORE                  UAT25230\n         UNPK  LINE+MSG64A(5),IOB1CSW+3(3)                              UAT25240\n         MVI   LINE+MSG64A+4,C' '                                       UAT25250\n         TR    LINE+MSG64A(4),HEXTABLE                                  UAT25260\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT25270\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT25280\nEXCP1S2  EQU   *                                                        UAT25290\n         MVC   TEMPFLAG(1),FLAG    SAVE FLAG BYTE TEMPORARILY           UAT25300\n         NI    FLAG,255-#TAPEMRK   CLEAR FLAG                           UAT25310\n*   UNIT EXCEPTION INDICATES TAPE MARK SENSED ON 3420 AND 3480          UAT25320\n         TM    IOB1CSW+3,#BIT7     DID WE FIND TAPE MARK?               UAT25330\n         BNO   EXCP1A              NO - SKIP SETTING FLAG BIT           UAT25340\n         OI    FLAG,#TAPEMRK       INDICATE WHAT WE FOUND               UAT25350\n         TM    TEMPFLAG,#TAPEMRK   WAS LAST THING ALSO A TAPE MARK?     UAT25360\n         BNO   EXCP1A              NO - SKIP SETTING NEW FLAG           UAT25370\n         OI    FLAG,#ENDTAPE       ALSO SET END-OF-TAPE FLAG            UAT25380\n         SPACE 2                                                        UAT25390\n*   CHECK FOR EXCEPTIONAL CONDITION.  IF SO, ISSUE SENSE AND QUIT       UAT25400\n         SPACE                                                          UAT25410\nEXCP1A   EQU   *                                                        UAT25420\n         TM    IOB1CSW+3,#BIT6     WAS THERE A UNIT CHECK?              UAT25430\n         BNO   EXCP1XT             NO - RETURN TO CALLER                UAT25440\n         TM    IOB1SNS,#BIT1       CHECK FOR INTERVENTION REQ'D         UAT25450\n         BO    EXCP1R              RESTART OPERATION IF SO              UAT25460\n         MVC   CSW(7),IOB1CSW      SAVE BAD CSW                         UAT25470\n         ICM   R15,7,IOB1CCW       LOAD CCW ADDRESS                     UAT25480\n         MVC   CCW(8),0(R15)       SAVE BAD CCW                         UAT25490\n         MVC   SENSE(1),IOB1SNS    SAVE 1ST SENSE BYTE                  UAT25500\n         LA    R15,SENSECCW        POINT TO SENSE CCW                   UAT25510\n         STCM  R15,7,IOB1CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT25520\n         EXCP  IOB1                EXECUTE THE SENSE CHANNEL PGM        UAT25530\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25540\n         MOVEMSG ERROR9            PERMANENT I/O ERROR ON SYSUT1        UAT25550\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT25560\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT25570\n         BAL   R9,PRTSENSE         GO PRINT SENSE INFORMATION           UAT25580\n         TM    OPTIONS3,#SKIPBAD   ARE WE TO SKIP THIS BLOCK?           UAT25590\n         BO    SKIPBAD             YES - SKIP IT                        UAT25600\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT25610\n         DISCARD                   DISCARD RETURN ADDRESS FROM STACK    UAT25620\n         B     EPISTAT             TERMINATE/LET SYSTEM CLEAN UP        UAT25630\n         SPACE                                                          UAT25640\n*   ROUTINE TO SKIP BAD INPUT BLOCK (WARN USER FIRST)                   UAT25650\n         SPACE                                                          UAT25660\nSKIPBAD  EQU   *                                                        UAT25670\n         LA    R15,FSBCCW          POINT TO FWD-SPACE BLOCK CCW         UAT25680\n         STCM  R15,7,IOB1CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT25690\n         EXCP  IOB1                EXECUTE THE CHANNEL PGM              UAT25700\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25710\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT25720\n         MOVEMSG ERROR20           FORWARD SPACING OVER BLOCK           UAT25730\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT25740\n         B     EXCP1R              GO TRY NEXT BLOCK                    UAT25750\n         SPACE                                                          UAT25760\nEXCP1XT  EQU   *                                                        UAT25770\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT25780\n         BR    R9                  RETURN TO CALLER                     UAT25790\n         EJECT                                                          UAT25800\n*********************************************************************** UAT25810\n*                                                                     * UAT25820\n*     EXCP2                                                           * UAT25830\n*                                                                     * UAT25840\n*            THIS ROUTINE EXECUTES CHANNEL PROGRAMS FOR               * UAT25850\n*            THE SYSUT2 DATA SET.  VARIOUS ERROR CHECKING             * UAT25860\n*            IS DONE, AND FLAG SETTING IS PERFORMED (SUCH             * UAT25870\n*            AS FLAGGING TAPE INDICATE).  AT ENTRY TO                 * UAT25880\n*            THIS ROUTINE, REGISTER 2 MUST POINT TO THE               * UAT25890\n*            START OF THE CHANNEL PROGRAM TO BE EXECUTED.             * UAT25900\n*                                                                     * UAT25910\n*********************************************************************** UAT25920\n         SPACE                                                          UAT25930\n*   ISSUE THE I/O OPERATION FOR SYSUT2 TAPE                             UAT25940\n         SPACE                                                          UAT25950\nEXCP2    EQU   *                                                        UAT25960\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT25970\n         NI    FLAG3,255-#SEN3480  RESET SENSE-TYPE FLAG                UAT25980\n         TM    FLAG2,#CART2        ARE WE WRITING TO 3480?              UAT25990\n         BNO   EXCP2R              NO - SKIP                            UAT26000\n         OI    FLAG3,#SEN3480      YES- SET 3480 SENSE FLAG             UAT26010\nEXCP2R   EQU   *                   ENTRY FOR REDRIVING THE I/O          UAT26020\n         TM    OPTIONS3,#DEBUG2    DEBUG OUTPUT?                        UAT26030\n         BNO   EXCP2S1             NO - SKIP                            UAT26040\n         MOVEMSG MSG65             DEBUG SYSUT2 BEFORE                  UAT26050\n         UNPK  LINE+MSG65A(9),0(5,R2)                                   UAT26060\n         UNPK  LINE+MSG65A+8(9),4(5,R2)                                 UAT26070\n         MVI   LINE+MSG65A+16,C' '                                      UAT26080\n         TR    LINE+MSG65A(16),HEXTABLE                                 UAT26090\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT26100\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT26110\nEXCP2S1  EQU   *                                                        UAT26120\n         STCM  R2,7,IOB2CCW        SAVE CHANNEL PGM ADDR IN IOB         UAT26130\n         EXCP  IOB2                EXECUTE THE CHANNEL PROGRAM          UAT26140\n         WAIT  1,ECB=ECB2          WAIT FOR IT TO COMPLETE              UAT26150\n         TM    OPTIONS3,#DEBUG2    DEBUG OUTPUT?                        UAT26160\n         BNO   EXCP2S2             NO - SKIP                            UAT26170\n         MOVEMSG MSG66             DEBUG SYSUT2 BEFORE                  UAT26180\n         UNPK  LINE+MSG66A(5),IOB2CSW+3(3)                              UAT26190\n         MVI   LINE+MSG66A+4,C' '                                       UAT26200\n         TR    LINE+MSG66A(4),HEXTABLE                                  UAT26210\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT26220\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT26230\nEXCP2S2  EQU   *                                                        UAT26240\n*   UNIT EXCEPTION INDICATES LOGICAL END OF TAPE FOR 3420 AND 3480      UAT26250\n         TM    IOB2CSW+3,#BIT7     DID WE FIND END-OF-TAPE FOIL?        UAT26260\n         BNO   EXCP2A              NO - SKIP SETTING FLAG BIT           UAT26270\n         OI    FLAG,#TAPEIND       SHOW THAT WE FOUND TAPE INDICATE     UAT26280\n         SPACE 2                                                        UAT26290\n*   CHECK FOR EXCEPTIONAL CONDITION.  IF SO, ISSUE SENSE AND QUIT       UAT26300\n         SPACE                                                          UAT26310\nEXCP2A   EQU   *                                                        UAT26320\n         TM    IOB2CSW+3,#BIT6     WAS THERE A UNIT CHECK?              UAT26330\n         BNO   EXCP2XT             NO - RETURN TO CALLER                UAT26340\n         TM    IOB2SNS,#BIT1       CHECK FOR INTERVENTION REQ'D         UAT26350\n         BO    EXCP2R              RESTART OPERATION IF SO              UAT26360\n         MVC   CSW(7),IOB2CSW      SAVE BAD CSW                         UAT26370\n         ICM   R15,7,IOB2CCW       LOAD BAD CCW ADDRESS                 UAT26380\n         MVC   CCW(8),0(R15)       SAVE BAD CCW                         UAT26390\n         MVC   SENSE(1),IOB2SNS    SAVE 1ST SENSE BYTE                  UAT26400\n         LA    R15,SENSECCW        POINT TO SENSE CCW                   UAT26410\n         STCM  R15,7,IOB2CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT26420\n         EXCP  IOB2                EXECUTE THE SENSE CHANNEL PGM        UAT26430\n         WAIT  1,ECB=ECB2          WAIT FOR IT TO COMPLETE              UAT26440\n         MOVEMSG ERROR11           PERMANENT I/O ERROR ON SYSUT2        UAT26450\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT26460\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT26470\n         BAL   R9,PRTSENSE         GO PRINT SENSE INFORMATION           UAT26480\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT26490\n         DISCARD                                                        UAT26500\n         B     EPISTAT             TERMINATE/LET SYSTEM CLEAN UP        UAT26510\n         SPACE                                                          UAT26520\nEXCP2XT  EQU   *                                                        UAT26530\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT26540\n         BR    R9                  RETURN TO CALLER                     UAT26550\n         EJECT                                                          UAT26560\n*********************************************************************** UAT26570\n*                                                                       UAT26580\n*   PRINT THE SENSE INFORMATION RESULTING FROM BAD I/O OPERATION        UAT26590\n*                                                                       UAT26600\n*********************************************************************** UAT26610\n         SPACE                                                          UAT26620\nPRTSENSE EQU   *                                                        UAT26630\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT26640\n         LA    R2,SENSETB2         POINT TO 3420 SENSE INFO TABLE       UAT26650\n         SR    R3,R3               CLEAR A WORK REGISTER                UAT26660\n         LA    R4,SENSENTM         NUMBER OF TIMES THROUGH LOOP         UAT26670\n         TM    FLAG3,#SEN3480      IS THIS 3480 SENSE?                  UAT26680\n         BNO   PRTSLOOP            NO - SKIP                            UAT26690\n         LA    R2,SENSETB8         POINT TO 3480 SENSE INFO TABLE       UAT26700\nPRTSLOOP EQU   *                                                        UAT26710\n         IC    R3,0(R2)            LOAD THE SENSE INFO BYTE             UAT26720\n         EX    R3,SENSECHK         CHECK SENSE BYTE AGAINST TABLE       UAT26730\n         BNO   PRTSLOUT            BRANCH IF BIT NOT ON                 UAT26740\n         MVC   LINE(23),=C'0****** SENSE INDICATES'                     UAT26750\n         MVC   LINE+24(SENSEMLN),1(R2)   MOVE IN MESSAGE                UAT26760\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT26770\n         BAL   R9,PRINTIT          GO PRINT SENSE MESSAGE               UAT26780\nPRTSLOUT EQU   *                                                        UAT26790\n         LA    R2,SENSELEN(R2)     NEXT SENSE TABLE FIELD               UAT26800\n         BCT   R4,PRTSLOOP         LOOP BACK                            UAT26810\n         SPACE                                                          UAT26820\n         MOVEMSG ERROR10                 CSW=XXXX CCW=XXXX              UAT26830\n         UNPK  LINE+ERR10C(15),CSW(8)    CONVERT THE CSW TO             UAT26840\n         TR    LINE+ERR10C(14),HEXTABLE  ...PRINTABLE HEX               UAT26850\n         MVI   LINE+ERR10C+14,C' '       BLANK OUT LAST JUNK BYTE       UAT26860\n         UNPK  LINE+ERR10W(9),CCW(5)     CONVERT CCW TO                 UAT26870\n         UNPK  LINE+ERR10W+8(9),CCW+4(5) ...PRINTABLE HEX               UAT26880\n         TR    LINE+ERR10W(16),HEXTABLE  JUNK TO HEX                    UAT26890\n         MVI   LINE+ERR10W+16,C' '       BLANK OUT LAST JUNK BYTE       UAT26900\n         OI    FLAG2,#NOSHIFT            SET THE NOSHIFT FLAG           UAT26910\n         BAL   R9,PRINTIT                GO PRINT THE LINE              UAT26920\n         SPACE                                                          UAT26930\n         MOVEMSG ERROR17                 SENSE=XXXX                     UAT26940\n         MVC   #SENSE(1),SENSE           RESTORE 1ST SENSE BYTE         UAT26950\n         LA    R14,6               SIX WORDS OF SENSE INFORMATION       UAT26960\n         TM    FLAG3,#SEN3480      IS SENSE FROM A 3480?                UAT26970\n         BNO   NOTCART2            NO - SKIP                            UAT26980\n         LA    R14,8               EIGHT WORDS FOR 3480                 UAT26990\nNOTCART2 EQU   *                                                        UAT27000\n         LA    R15,LINE+ERR17B                                          UAT27010\n         LA    R1,#SENSE                                                UAT27020\nPRTRLOOP EQU   *                                                        UAT27030\n         UNPK  0(9,R15),0(5,R1)   CONVERT TO HEX                        UAT27040\n         TR    0(8,R15),HEXTABLE   TRANSLATE TO PRINTABLE FORM          UAT27050\n         MVI   8(R15),C' '         BLANK OUT EXTRANEOUS BYTE            UAT27060\n         LA    R15,9(,R15)         NEXT PRINT POSITION                  UAT27070\n         LA    R1,4(,R1)           NEXT SENSE FULLWORD                  UAT27080\n         BCT   R14,PRTRLOOP        LOOP BACK                            UAT27090\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT27100\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT27110\n         OC    FILECNT,FILECNT     IS FILE COUNTER ZERO?                UAT27120\n         BZ    VOLERR              YES - WE WERE DOING VOLUME LABEL     UAT27130\n         TM    FLAG2,#LABREC       PROCESSING LABEL RECORD?             UAT27140\n         BNO   NOTLABR             NO - SKIP                            UAT27150\n         MOVEMSG ERR18              \"ERROR OCCURRED DURING LABEL\"       UAT27160\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT27170\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27180\n         UNPK  LINE+ERR18F(4),DOUBLE(8)   PRINTABLE DECIMAL             UAT27190\n         OI    LINE+ERR18F+3,X'F0' INSURE SIGN NIBBLE                   UAT27200\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27210\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT27220\n         B     SETERR16            BRANCH                               UAT27230\nNOTLABR  EQU   *                                                        UAT27240\n         MOVEMSG ERR19             PROCESSING BLOCK ### OF FILE ###     UAT27250\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT27260\n         LA    R15,1(,R15)         BUMP UP ONE                          UAT27270\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27280\n         UNPK  LINE+ERR19B(6),DOUBLE(8)   PRINTABLE DECIMAL             UAT27290\n         OI    LINE+ERR19B+5,X'F0' INSURE SIGN NIBBLE                   UAT27300\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT27310\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27320\n         UNPK  LINE+ERR19F(4),DOUBLE(8)   PRINTABLE DECIMAL             UAT27330\n         OI    LINE+ERR19F+3,X'F0' INSURE SIGN NIBBLE                   UAT27340\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27350\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MESSAGE           UAT27360\nSETERR16 EQU   *                                                        UAT27370\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT27380\n         BR    R9                  RETURN TO CALLER                     UAT27390\n         SPACE 2                                                        UAT27400\nVOLERR   EQU   *                                                        UAT27410\n         MOVEMSG ERROR21           ERROR PROCESSING VOLUME LABEL        UAT27420\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27430\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MESSAGE           UAT27440\n         B     SETERR16            RETURN TO CALLER                     UAT27450\n         SPACE 2                                                        UAT27460\nSENSECHK TM    SENSE,X'00'         **** EXECUTED INSTRUCTION ****       UAT27470\n         EJECT                                                          UAT27480\n*********************************************************************** UAT27490\n*                                                                     * UAT27500\n*      ERRORS                                                         * UAT27510\n*                                                                     * UAT27520\n*             THIS SECTION OF CODE HANDLES ALL PROGRAM ERRORS         * UAT27530\n*                                                                     * UAT27540\n*********************************************************************** UAT27550\n         SPACE                                                          UAT27560\nNOPRINT1 EQU   *                                                        UAT27570\n         WTO   'UATAPE -- ERROR:  NO SYSPRINT DD STATEMENT',ROUTCDE=11  UAT27580\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27590\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT27600\n         SPACE 2                                                        UAT27610\nNOPRINT2 EQU   *                                                        UAT27620\n         WTO   'UATAPE -- ERROR:  SYSPRINT WOULD NOT OPEN',ROUTCDE=11   UAT27630\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27640\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT27650\n         SPACE 2                                                        UAT27660\nNOSYS1A  EQU   *                                                        UAT27670\n         MOVEMSG ERROR1                    NO SYSUT1 FOUND              UAT27680\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27690\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27700\n         SPACE 2                                                        UAT27710\nNOSYS1B  EQU   *                                                        UAT27720\n         MOVEMSG ERROR2                  SYSUT1 WOULD NOT OPEN          UAT27730\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27740\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27750\n         SPACE 2                                                        UAT27760\nNOCORE   EQU   *                                                        UAT27770\n         MOVEMSG ERROR3                  NOT ENOUGH MEMORY              UAT27780\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27790\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27800\n         SPACE 2                                                        UAT27810\nNOSYS2A  EQU   *                                                        UAT27820\n         MOVEMSG ERROR4                SYSUT2 DD NOT FOUND              UAT27830\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27840\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27850\n         SPACE 2                                                        UAT27860\nNOSYS2B  EQU   *                                                        UAT27870\n         MOVEMSG ERROR5                SYSUT2 WOULD NOT OPEN            UAT27880\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27890\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27900\nINVALID1 EQU   *                                                        UAT27910\n         MOVEMSG ERROR8                 OUTPUT TAPE DOES NOT HAVE LABEL UAT27920\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27930\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27940\n         SPACE 2                                                        UAT27950\nINVALID2 EQU   *                                                        UAT27960\n         MOVEMSG ERROR6                 JCL VOLSER DOES NOT MATCH TAPE  UAT27970\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT27980\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT27990\n         MOVEMSG ERROR7                 JCL VOLSER=    TAPE=            UAT28000\n         MVC   LINE+ERR7J(6),VOLSER2    MOVE IN JCL VOLUME SERIAL       UAT28010\n         MVC   LINE+ERR7T(6),VOLSER2X   MOVE IN TAPE'S VOLUME SERIAL    UAT28020\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT28030\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28040\n         SPACE 2                                                        UAT28050\nNOROOM   EQU   *                                                        UAT28060\n         MOVEMSG ERROR12                   RAN OUT OF TAPE ON SYSUT2    UAT28070\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28080\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT28090\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 12           UAT28100\n         B     EPISTAT             GO TERMINATE PROGRAM                 UAT28110\n         SPACE 2                                                        UAT28120\nPARMINV  EQU   *                                                        UAT28130\n         L     R2,PARMADDR         LOAD PARM ADDRESS                    UAT28140\n         L     R2,0(,R2)           LOAD PARM FIELD ADDRESS              UAT28150\n         LH    R15,0(,R2)          LOAD PARM FIELD LENGTH               UAT28160\n         LA    R2,2(,R2)           POINT TO PARM FIELD TEXT             UAT28170\n         BCTR  R15,0               GET EXECUTABLE LENGTH                UAT28180\n         EX    R15,MOVEIT2         MOVE TO PRINT LINE                   UAT28190\n         MVI   LINE,C'-'           MAKE TRIPLE SPACE                    UAT28200\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28210\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT28220\n         SR    R3,R2               GET OFFSET WHERE ERROR IS            UAT28230\n         LA    R15,LINE+1(R3)      POINT TO CORRESPONDING PLACE         UAT28240\n         MVI   0(R15),C'?'         PUT QM THERE                         UAT28250\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28260\n         BAL   R9,PRINTIT          GO PRINT THE QM                      UAT28270\n         MOVEMSG ERROR13                  INVALID PARM FIELD            UAT28280\n         MVI   RETCODE,8           SET PROGRAM RETURN CODE 8            UAT28290\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28300\n         SPACE                                                          UAT28310\nMOVEIT2  MVC   LINE+1(*-*),0(R2)   ***** EXECUTED INSTRUCTION *****     UAT28320\n         SPACE 2                                                        UAT28330\nINVDEN   EQU   *                                                        UAT28340\n         MOVEMSG ERROR14                 DOES NOT SUPPORT SPEC DENSITY  UAT28350\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28360\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28370\n         SPACE 2                                                        UAT28380\nFILEPROT EQU   *                                                        UAT28390\n         MOVEMSG ERROR15                 SYSUT2 IS FILE PROTECTED       UAT28400\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28410\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28420\n         SPACE 2                                                        UAT28430\nNOTTAPE1 EQU   *                                                        UAT28440\n         MOVEMSG ERROR16                 DEVICE NOT TAPE UNIT           UAT28450\n         MVC   LINE+ERR16D(6),=C'SYSUT1'   SAY IT'S SYSUT1              UAT28460\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28470\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28480\n         SPACE 2                                                        UAT28490\nNOTTAPE2 EQU   *                                                        UAT28500\n         MOVEMSG ERROR16                 DEVICE NOT TAPE UNIT           UAT28510\n         MVC   LINE+ERR16D(6),=C'SYSUT2'   SAY IT'S SYSUT2              UAT28520\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28530\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28540\n         SPACE 2                                                        UAT28550\nPRINTERR EQU   *                                                        UAT28560\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28570\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MSG               UAT28580\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT28590\n         EJECT                                                          UAT28600\n*********************************************************************** UAT28610\n*                                                                     * UAT28620\n*        PROGRAM DATA CONSTANTS AND WORK AREAS                        * UAT28630\n*                                                                     * UAT28640\n*********************************************************************** UAT28650\n         SPACE                                                          UAT28660\nDOUBLE   DS    D                   DOUBLE WORD WORK AREA                UAT28670\nSAVE     DC    18A(0)              PROGRAM SAVE AREA                    UAT28680\nVTABLES  DC    V(TABLES)           VCON FOR TABLES CSECT                UAT28690\nLLINES   DC    F'0'                NUMBER OF LINES LEFT ON PAGE         UAT28700\nBLOCKCNT DC    F'0'                NUMBER OF BLOCKS IN DATA SET         UAT28710\nBLOCKTOT DC    F'0'                NUMBER OF BLOCKS ON TAPE             UAT28720\nBYTECNT  DC    F'0'                NUMBER OF BYTES IN DATA SET          UAT28730\nTBYTECNT DC    F'0'                NUMBER OF BYTES ON TAPE              UAT28740\nTOTFEET  DC    F'0'                LENGTH OF DATA AREA ON SYSUT1 TAPE   UAT28750\nTOTFEET2 DC    F'0'                LENGTH OF DATA AREA ON SYSUT2 TAPE   UAT28760\nDENSYS1  DC    F'1'                DENSITY (BPI) FOR SYSUT1 TAPE        UAT28770\nDENSYS2  DC    F'1'                DENSITY (BPI) FOR SYSUT2 TAPE        UAT28780\nFILECNT  DC    F'0'                FILE COUNTER                         UAT28790\nPAGENUM  DC    F'0'                CURRENT PAGE NUMBER                  UAT28800\nSTARTBLK DC    F'0'                STARTING BLOCK NUMBER                UAT28810\nLASTBLK  DC    F'0'                ENDING BLOCK NUMBER                  UAT28820\nBLRECL   DC    F'0'                PRINT OPTION LRECL                   UAT28830\nMXLABERR DC    F'0'                MAXIMUM ERROR LABEL COUNT            UAT28840\nMXLABCNT DC    F'11'               MAXIMUM ERROR MESSAGE COUNT PLUS 1   UAT28850\nPARMADDR DS    F                   PARM FIELD ADDRESS SAVE AREA         UAT28860\nSTACKPTR DC    A(STACK)            ADDRESS OF THE PROGRAM STACK         UAT28870\nSTACK    DS    20F                 PROGRAM STACK (80 BYTES)             UAT28880\nCURLRECL DS    F                   CURRENT FILE'S LRECL                 UAT28890\nCURBLKSI DS    F                   CURRENT FILE'S BLKSIZE               UAT28900\nTIOTADDR DS    A                   TIOT ADDR AS RETURNED FROM EXTRACT   UAT28910\nUCB1     DS    A                   UCB ADDR FOR SYSUT1 TAPE             UAT28920\nUCB2     DS    A                   UCB ADDR FOR SYSUT2 TAPE             UAT28930\nBUFADDR  DC    A(0)                I/O BUFFER ADDRESS                   UAT28940\nASTATBUF DC    A(0)                FILE STAT BUFFER ADDRESS             UAT28950\nBSTATBUF DC    A(0)                CURRENT FILE STAT ENTRY ADDR         UAT28960\nNSTATBUF EQU   3000                NUMBER OF STAT BUFFER ENTRIES        UAT28970\nSTATFILE EQU   0                   OFFSET TO FILE NUMBER                UAT28980\nSTATDSN  EQU   STATFILE+4          OFFSET TO DATA SET NAME              UAT28990\nSTATRECF EQU   STATDSN+17          OFFSET TO RECORD FORMAT              UAT29000\nSTATLREC EQU   STATRECF+4          OFFSET TO LRECL                      UAT29010\nSTATBLKS EQU   STATLREC+5          OFFSET TO BLKSIZE                    UAT29020\nSTATNBLK EQU   STATBLKS+5          OFFSET TO NUMBER OF BLOCKS           UAT29030\nSTATLEN  EQU   STATNBLK+6          OFFSET TO DATA LENGTH                UAT29040\nWSTATBUF EQU   STATLEN+4           LENGTH OF EACH ENTRY                 UAT29050\nLSTATBUF EQU   NSTATBUF*WSTATBUF   LENGTH OF STAT BUFFER                UAT29060\nRECLENF  DS    0F                  INPUT BLOCK LENGTH - FULLWORD        UAT29070\nRECLENH  DC    H'0'                INPUT BLOCK LENGTH - HI ORDER        UAT29070\nRECLEN   DS    H                   INPUT BLOCK LENGTH                   UAT29070\nFULLWORK DS    0F                                                     *  05265\n         DC    H'0'                                                   *  05266\nHALFWORK DC    H'0'                HALFWORD WORK AREA                 *  05267\nMAXBLK   DC    F'0'                MAXIMUM BLOCK LENGTH                 UAT29080\nMINBLK   DC    F'1200000'          MINIMUM BLOCK LENGTH                 UAT29090\nLASTLEN  DC    F'-1'               LAST BLOCK LENGTH                    UAT29100\nDBLKCT   DC    F'5'                #DUMPMAX OPTION BLOCK COUNTER        UAT29110\nPBLKCT   DC    F'5'                #PRINTMAX OPTION BLOCK COUNTER       UAT29120\nFILENO   DC    CL4' '              CURRENT FILE NUMBER                  UAT29130\nCURRECFM DS    CL1                 CURRENT FILE'S RECORD FORMAT         UAT29140\nPARM     DS    CL8                 PARM FIELD PROCESSOR WORK AREA       UAT29150\nVOLSER1  DS    CL6                 INPUT JCL VOLUME SERIAL              UAT29160\nVOLSER2  DS    CL6                 OUTPUT JCL VOLUME SERIAL             UAT29170\nVOLSER2X DS    CL6                 OUTPUT TAPE VOLUME SERIAL            UAT29180\nWORKAREA DS    CL9                 DUMP ROUTINE WORK AREA               UAT29190\nCCW      DS    XL8                 SAVE AREA FOR BAD CCW                UAT29200\nCSW      DS    XL7                 SAVE AREA FOR BAD CSW                UAT29210\nSENSE    DS    XL1                 SAVE AREA FOR BAD IOB SENSE INFO     UAT29220\n         SPACE 2                                                        UAT29230\nOPTIONS  DS    0X                  OPTION FLAGS                         UAT29240\nOPTIONS1 DC    AL1(#LIST)          OPTION FLAG BYTE 1                   UAT29250\n#LIST    EQU   B'10000000'         LIST OPTION FLAG                     UAT29260\n#COPY    EQU   B'01000000'         COPY OPTION FLAG                     UAT29270\n#DUMP    EQU   B'00100000'         DUMP OPTION FLAG                     UAT29280\n#DUMPLAB EQU   B'00010000'         DUMPLAB OPTION FLAG                  UAT29290\n#DUMPALL EQU   B'00001000'         DUMPALL OPTION FLAG                  UAT29300\n#BLOCKS  EQU   B'00000100'         BLOCKS OPTION FLAG                   UAT29310\n#PRINT   EQU   B'00000010'         PRINT OPTION FLAG                    UAT29320\n#SKIPLAB EQU   B'00000001'         SKIP COPYING LABELS, IF ANY          UAT29330\n         SPACE                                                          UAT29340\nOPTIONS2 DC    AL1(0)              OPTIONS FLAG BYTE 2                  UAT29350\n#CRT     EQU   B'10000000'         CRT OUTPUT OPTION FLAG               UAT29360\n#ATOE    EQU   B'01000000'         ASCII TO EBCDIC TRANSLATION          UAT29370\n#ETOA    EQU   B'00100000'         EBCDIC TO ASCII TRANSLATION          UAT29380\n#BYPASS  EQU   B'00010000'         BYPASS SYSUT2 LABEL PROCESSING       UAT29390\n#NOFIX   EQU   B'00001000'         DO NOT CHANGE SYSUT1 LABEL INFO      UAT29400\n#DMAX    EQU   B'00000100'         MAX BLOCKS TO DUMP SPECIFIED         UAT29410\n#PMAX    EQU   B'00000010'         MAX RECORDS TO PRINT SPECIFIED       UAT29420\n#LTM     EQU   B'00000001'         SKIP LEADING TAPE MARK               UAT29430\n         SPACE                                                          UAT29440\nOPTIONS3 DC    AL1(0)              OPTIONS FLAG BYTE 3                  UAT29450\n#SKIPBAD EQU   B'10000000'         SKIP BAD BLOCKS ON INPUT VOLUME      UAT29460\n#MXFILES EQU   B'01000000'         (MAXIMUM) NO. OF FILES TO PROCESS    UAT29470\n#DEBUG1  EQU   B'00100000'         DEBUG OUTPUT FOR SYSUT1 I/O          UAT29480\n#DEBUG2  EQU   B'00010000'         DEBUG OUTPUT FOR SYSUT2 I/O          UAT29490\n#LABCHK  EQU   B'00001000'         READ VOLSER AND WTO DISPLAY ONLY     UAT29500\n#35      EQU   B'00000100'         RESERVED                             UAT29510\n#36      EQU   B'00000010'         RESERVED                             UAT29520\n#37      EQU   B'00000001'         RESERVED                             UAT29530\n         SPACE 2                                                        UAT29540\nFLAG     DC    X'00'               PROGRAM FLAGS                        UAT29550\n#SYSPRNT EQU   B'10000000'         SYSPRINT DD-STATEMENT PRESENT        UAT29560\n#SYSUT1  EQU   B'01000000'         SYSUT1 DD-STATEMENT PRESENT          UAT29570\n#SYSUT2  EQU   B'00100000'         SYSUT2 DD-STATEMENT PRESENT          UAT29580\n#SL      EQU   B'00010000'         INPUT TAPE IS STD. LABEL             UAT29590\n#TAPEMRK EQU   B'00001000'         LAST SYSUT1 I/O FOUND TAPEMARK       UAT29600\n#ENDTAPE EQU   B'00000100'         END OF TAPE (2 TM'S OR EOV1)         UAT29610\n#TAPEIND EQU   B'00000010'         TAPE INDICATE (END OF SYSUT2 TAPE)   UAT29620\n#LTMPRES EQU   B'00000001'         LEADING TAPE MARK MAY BE PRESENT     UAT29630\n         SPACE                                                          UAT29640\nFLAG2    DC    X'00'               PROGRAM FLAGS                        UAT29650\n#NOSHIFT EQU   B'10000000'         DO NOT SHIFT PRINT LINE              UAT29660\n#LABREC  EQU   B'01000000'         PROCESSING LABEL RECORD              UAT29670\n#PRTFLAG EQU   B'00100000'         PRINT \"FILE: XXXX\" FLAG              UAT29680\n#EOV     EQU   B'00010000'         EOV LABEL RECORD FOUND               UAT29690\n#AL      EQU   B'00001000'         INPUT TAPE HAS ASCII LABELS          UAT29700\n#INITHDR EQU   B'00000100'         IEHINITT HDR1 LABEL FOUND            UAT29710\n#CART1   EQU   B'00000010'         SYSUT1 IS CARTRIDGE TAPE             UAT29720\n#CART2   EQU   B'00000001'         SYSUT2 IS CARTRIDGE TAPE             UAT29730\n         SPACE                                                          UAT29740\nFLAG3    DC    X'00'               PROGRAM FLAGS                        UAT29750\n#IDRC1   EQU   B'10000000'         SYSUT1 FILE WRITTEN WITH IDRC ON     UAT29760\n#SEN3480 EQU   B'01000000'         SENSE INFO IS IN 3480 FORMAT         UAT29770\n         SPACE                                                          UAT29780\nDEBUG    DC    CL8' '              DEBUG WORK AREA                      UAT29790\nTEMPFLAG DC    X'00'               WORK BYTE                            UAT29800\nRETCODE  DC    X'00'               PROGRAM RETURN CODE                  UAT29810\nTAPEDEN  DC    X'00'               OUTPUT TAPE DENSITY FROM JFCB        UAT29820\nDENSITY1 DS    CL4                 DENSITY MESSAGE                      UAT29830\nDENSITY2 DS    CL4                 DENSITY MESSAGE                      UAT29840\nLINE     DC    CL133' '            PRINT LINE                           UAT29850\nTEMPLINE DC    CL133' '            PRINT LINE                           UAT29860\n         SPACE 2                                                        UAT29870\n         DS    0F,H'0'             WASTE A HALFWORD FOR ALIGNMENT       UAT29880\nINIRG    DC    H'0',AL4(1)         INPUT TAPE IRG VALUES                UAT29890\n         DS    0F,H'0'             WASTE A HALFWORD FOR ALIGNMENT       UAT29900\nOUTIRG   DC    H'0',AL4(1)         OUTPUT TAPE IRG VALUES               UAT29910\n*                |      |___DENOMINATOR   (SEE NOTE AFTER               UAT29920\n*                |__________NUMERATOR      \"DENTAB\" TABLE)              UAT29930\n         SPACE                                                          UAT29940\nDEFDEN   DS    XL16                DEFAULT DENSITY INFORMATION          UAT29950\nDENTAB   DS    0XL16               DEFAULT DENSITY INFO TABLE           UAT29960\n*                 ___________________________JCL DCB=DEN=? CODE         UAT29970\n*                |     ______________________MODESET CCW                UAT29980\n*                |    |        ______________CHARACTER DENSITY          UAT29990\n*                |    |       |          ____BINARY DENSITY             UAT30000\n*                |    |       |         |          ___________SEE       UAT30010\n*                |    |       |         |         |       ____NOTE      UAT30020\n*                |    |       |         |         |      |    BELOW     UAT30030\nDEN6250  DC    C'4',X'D3',CL4'6250',AL4(6250),AL2(3),AL4(10)            UAT30040\nDEN1600  DC    C'3',X'C3',CL4'1600',AL4(1600),AL2(6),AL4(10)            UAT30050\nDEN800   DC    C'2',X'CB',CL4' 800',AL4(0800),AL2(6),AL4(10)            UAT30060\nDEN556   DC    C'1',X'73',CL4' 556',AL4(0556),AL2(6),AL4(10) ???        UAT30070\nDEN200   DC    C'0',X'33',CL4' 200',AL4(0200),AL2(6),AL4(10) ???        UAT30080\nDEN38K   DC    C'0',X'03',CL4' 38K',AL4(38000),AL2(3),AL4(100)          UAT30090\n*                                                                       UAT30100\nDENTABJ  EQU   0                   JCL DCB=DEN=? CODE                   UAT30110\nDENTABM  EQU   1                   MODESET CCW CODE                     UAT30120\nDENTABC  EQU   2                   DENSITY (CHARACTER)                  UAT30130\nDENTABB  EQU   6                   DENSITY (BINARY)                     UAT30140\nDENTABN  EQU   10                  IRG NUMERATOR                        UAT30150\nDENTABD  EQU   12                  IRG DENOMINATOR                      UAT30160\n*                                                                       UAT30170\n*  NOTE:  DENTABB AND DENTABN IN THE TABLE ABOVE CONTAIN THE            UAT30180\n*         NUMERATOR AND DENOMINATOR OF A FRACTION REPRESENTING          UAT30190\n*         THE SIZE OF THE INNER RECORD GAP AT EACH DENSITY.  FOR        UAT30200\n*         EXAMPLE, \"AL2(3),AL4(10)\" MEANS THAT THE IRG IS 3/10          UAT30210\n*         (OR 0.3) INCHES LONG.                                         UAT30220\n*                                                                       UAT30230\n*  NOTE:  SINCE 3480 DOES NOT SUPPORT MULTIPLE DENSITIES, THE           UAT30240\n*         MODESET CCW FOR DEN38K ABOVE IS SET TO NO-OP.                 UAT30250\n*                                                                       UAT30260\n         SPACE                                                          UAT30270\nHEXTABLE EQU   *-C'0'              BACK UP SOME TO SAVE SPACE           UAT30280\n         DC    C'0123456789ABCDEF' PRINT HEX TRANSLATE TABLE            UAT30290\n         SPACE                                                          UAT30300\n* 3420 SENSE BYTE 0 DESCRIPTIVE INFORMATION                             UAT30310\nSENSETB2 DC    X'80',CL21'COMMAND REJECT'                               UAT30320\n         DC    X'40',CL21'INTERVENTION REQUIRED'                        UAT30330\n         DC    X'20',CL21'BUS OUT CHECK'                                UAT30340\n         DC    X'10',CL21'EQUIPMENT CHECK'                              UAT30350\n         DC    X'08',CL21'DATA CHECK'                                   UAT30360\n         DC    X'04',CL21'OVERRUN'                                      UAT30370\n         DC    X'02',CL21'WORD COUNT ZERO'                              UAT30380\n         DC    X'01',CL21'DATA CONVERT CHECK'                           UAT30390\n* 3428 SENSE BYTE 0 DESCRIPTIVE INFORMATION                             UAT30400\nSENSETB8 DC    X'80',CL21'COMMAND REJECT'                               UAT30410\n         DC    X'40',CL21'INTERVENTION REQUIRED'                        UAT30420\n         DC    X'20',CL21'BUS OUT CHECK'                                UAT30430\n         DC    X'10',CL21'EQUIPMENT CHECK'                              UAT30440\n         DC    X'08',CL21'DATA CHECK'                                   UAT30450\n         DC    X'04',CL21'OVERRUN'                                      UAT30460\n         DC    X'02',CL21'DEFERRED UNIT CHECK'                          UAT30470\n         DC    X'01',CL21'ASSIGNED ELSEWHERE'                           UAT30480\nSENSEMLN EQU   21                  LENGTH OF MSGS IN ABOVE TABLE        UAT30490\nSENSELEN EQU   22                  LENGTH OF EACH ENTRY ABOVE           UAT30500\nSENSENTM EQU   8                   NUMBER OF ENTRIES IN ABOVE TABLE     UAT30510\n         SPACE 2                                                        UAT30520\n#SENSE   DS    0XL32               SENSE INFORMATION FIELD              UAT30530\n#SENSE0  DC    X'00'                 SENSE BYTE 0                       UAT30540\n#SENSE1  DC    X'00'                 SENSE BYTE 1                       UAT30550\n#SENSE2  DC    X'00'                 SENSE BYTE 2                       UAT30560\n#SENSE3  DC    X'00'                 SENSE BYTE 3                       UAT30570\n#SENSE4  DC    X'00'                 SENSE BYTE 4                       UAT30580\n#SENSE5  DC    X'00'                 SENSE BYTE 5                       UAT30590\n#SENSE6  DC    X'00'                 SENSE BYTE 6                       UAT30600\n#SENSE7  DC    X'00'                 SENSE BYTE 7                       UAT30610\n#SENSE8  DC    X'00'                 SENSE BYTE 8                       UAT30620\n#SENSE9  DC    X'00'                 SENSE BYTE 9                       UAT30630\n#SENSE10 DC    X'00'                 SENSE BYTE 10                      UAT30640\n         DC    XL21'00'            REMAINING 21 SENSE BYTES             UAT30650\n         SPACE                                                          UAT30660\nOPTLIST  DS    0F                  UATAPE PROGRAM OPTION LIST           UAT30670\n@A  DC  CL8'LIST    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(0,255)            UAT30680\n@B  DC  CL8'DUMP    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMP,255)        UAT30690\n@C  DC  CL8'DUMPMAX ',AL1(1),AL3(OPTIONS2),AL4(0),AL1(#DMAX,255)        UAT30700\n@D  DC  CL8'DUMPLAB ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMPLAB,255)     UAT30710\n@E  DC  CL8'DUMPALL ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMPALL,255)     UAT30720\n@F  DC  CL8'COPY    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#COPY,255)        UAT30730\n@G  DC  CL8'BLOCKS  ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#BLOCKS,255)      UAT30740\n@H  DC  CL8'PRINT   ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#PRINT,255)       UAT30750\n@I  DC  CL8'SKIPLAB ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#SKIPLAB,255)     UAT30760\n@J  DC  CL8'PRINTMAX',AL1(1),AL3(OPTIONS2),AL4(0),AL1(#PMAX,255)        UAT30770\n@K  DC  CL8'CRT     ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#CRT,255)         UAT30780\n@L  DC  CL8'ATOE    ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#ATOE,255-#ETOA)  UAT30790\n@M  DC  CL8'ETOA    ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#ETOA,255-#ATOE)  UAT30800\n@N  DC  CL8'BYPASS  ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#BYPASS,255)      UAT30810\n@O  DC  CL8'VERBATIM',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#NOFIX,255)       UAT30820\n@P  DC  CL8'LTM     ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#LTM,255)         UAT30830\n@Q  DC  CL8'MAXFILES',AL1(1),AL3(OPTIONS3),AL4(0),AL1(#MXFILES,255)     UAT30840\n@R  DC  CL8'SKIPBAD ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#SKIPBAD,255)     UAT30850\n@S  DC  CL8'DEBUG1  ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#DEBUG1,255)      UAT30860\n@T  DC  CL8'DEBUG2  ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#DEBUG2,255)      UAT30870\n@U  DC  CL8'LABCHECK',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#LABCHK,255)      UAT30880\n         SPACE                                                          UAT30890\nDUMPMAX  EQU   @C                                                       UAT30900\nPRINTMAX EQU   @J                                                       UAT30910\nLENOPT   EQU   @B-@A               LIST ENTRY LENGTH                    UAT30920\nNUMOPTS  EQU   (*-OPTLIST)/LENOPT                                       UAT30930\n         SPACE                                                          UAT30940\n*  THE FOLLOWING ARE EQUATES FOR OFFSETS INTO 'OPTLIST' ABOVE:          UAT30950\nOPTNAME  EQU   0                   OPTION NAME OFFSET                   UAT30960\nOPTTYPE  EQU   8                   OPTION TYPE (0=KEYWORD,1=VARIABLE)   UAT30970\nOPTKEYWD EQU     0                 --KEYWORD TYPE OPTION                UAT30980\nOPTVAR   EQU     1                 --VARIABLE TYPE OPTION               UAT30990\nOPTADDR  EQU   8                   OPTION BYTE ADDRESS                  UAT31000\nOPTVALUE EQU   12                  OPTION VALUE                         UAT31010\nOPTON    EQU   16                  OPTION BYTE OR-FLAG                  UAT31020\nOPTOFF   EQU   17                  OPTION BYTE AND-FLAG                 UAT31030\n         SPACE 3                                                        UAT31040\nMAXFILES EQU   @Q+OPTVALUE         MAX NUMBER OF FILES                  UAT31050\n         SPACE                                                          UAT31060\nHEADING1 DC    CL133'1U A T A P E   U T I L I T Y   P R O G R A M      XUAT31070\n                   VERSION 1.81'                                        UAT31080\n         ORG   HEADING1+72                                              UAT31090\n@MONTH   DC    C'XX/'                                                   UAT31100\n@DAY     DC    C'XX/'                                                   UAT31110\n@YEAR    DC    C'XX'                                                    UAT31120\n         ORG   HEADING1+84                                              UAT31130\nTIME     DC    X'4021207A20207A2020'  TIME - HH:MM:SS                   UAT31140\n         ORG   HEADING1+110                                             UAT31150\n         DC    C'PAGE '                                                 UAT31160\nPAGE     DC    CL4'0001'           PRINTED PAGE NUMBER                  UAT31170\n         ORG                                                            UAT31180\n         SPACE                                                          UAT31190\n*  DAYS IN MONTH COUNT LIST                                             UAT31200\n@JAN     DC    H'31'                                                    UAT31210\n@FEB     DC    H'28'                                                    UAT31220\n@MAR     DC    H'31'                                                    UAT31230\n@APR     DC    H'30'                                                    UAT31240\n@MAY     DC    H'31'                                                    UAT31250\n@JUN     DC    H'30'                                                    UAT31260\n@JUL     DC    H'31'                                                    UAT31270\n@AUG     DC    H'31'                                                    UAT31280\n@SEP     DC    H'30'                                                    UAT31290\n@OCT     DC    H'31'                                                    UAT31300\n@NOV     DC    H'30'                                                    UAT31310\n@DEC     DC    H'31'                                                    UAT31320\n         LTORG ,                                                        UAT31330\n         EJECT                                                          UAT31340\n*********************************************************************** UAT31350\n*                                                                     * UAT31360\n*      DATA CONTROL BLOCKS                                            * UAT31370\n*                                                                     * UAT31380\n*********************************************************************** UAT31390\n         SPACE                                                          UAT31400\n         PRINT NOGEN                                                    UAT31410\nSYSPRINT DCB   LRECL=133,RECFM=FA,BLKSIZE=133,DDNAME=SYSPRINT,         XUAT31420\n               MACRF=PM,DSORG=PS                                        UAT31430\n         SPACE 2                                                        UAT31440\nSYSUT1   DCB   DSORG=PS,DEVD=TA,DDNAME=SYSUT1,MACRF=EXCP,EXLST=EXLST    UAT31450\n         SPACE 2                                                        UAT31460\nSYSUT2   DCB   DSORG=PS,DEVD=TA,DDNAME=SYSUT2,MACRF=EXCP,EXLST=EXLST    UAT31470\n         SPACE 3                                                        UAT31480\n*        REGEQU                    REGISTER EQUATES                     UAT31490\nR0       EQU   0                                                        UAT31500\nR1       EQU   1                                                        UAT31510\nR2       EQU   2                                                        UAT31520\nR3       EQU   3                                                        UAT31530\nR4       EQU   4                                                        UAT31540\nR5       EQU   5                                                        UAT31550\nR6       EQU   6                                                        UAT31560\nR7       EQU   7                                                        UAT31570\nR8       EQU   8                                                        UAT31580\nR9       EQU   9                                                        UAT31590\nR10      EQU   10                                                       UAT31600\nR11      EQU   11                                                       UAT31610\nR12      EQU   12                                                       UAT31620\nR13      EQU   13                                                       UAT31630\nR14      EQU   14                                                       UAT31640\nR15      EQU   15                                                       UAT31650\n         SPACE 3                                                        UAT31660\n*  WRITE TO OPERATOR CONTROL PARAMETER LIST                             UAT31670\nWTO1     WTO   'TTTT ON UUU IS LL VVVVVV',ROUTCDE=(3,5),MF=L            UAT31680\nWTO1TYPE EQU   WTO1+4              TAPE OR CART                         UAT31690\nWTO1UNIT EQU   WTO1+4+8            UNIT NAME/ADDRESS                    UAT31700\nWTO1LAB  EQU   WTO1+4+15           NL OR SL OR AL                       UAT31710\nWTO1VOL  EQU   WTO1+4+18           VOLUME SERIAL                        UAT31720\n         TITLE 'INPUT/OUTPUT BLOCKS'                                    UAT31730\n*********************************************************************** UAT31740\n*                                                                     * UAT31750\n*     IOB1                INPUT/OUTPUT BLOCK FOR SYSUT1               * UAT31760\n*                                                                     * UAT31770\n*********************************************************************** UAT31780\n         SPACE                                                          UAT31790\nIOB1     DS    0F                                                       UAT31800\n         DC    X'0200'             IOBFLAG1 AND IOBFLAG2                UAT31810\nIOB1SNS  DC    X'0000'             IOBSENS1 AND IOBSENS2                UAT31820\n         DC    A(ECB1)             IOBECBCC AND IOBECBPT (ECB STUFF)    UAT31830\n         DC    X'00'               IOBFLAG3                             UAT31840\n         DC    0XL7'00'            IOBCSW                               UAT31850\nIOB1CSW  DC    XL5'00'             FIRST PART OF CSW                    UAT31860\nIOB1RES  DC    X'0000'             RESIDUAL IN CSW                      UAT31870\n         DC    X'00'               IOBSIOCC                             UAT31880\nIOB1CCW  DS    XL3                 IOBSTART (CHANNEL PGM ADDR)          UAT31890\n         DC    X'00'               RESERVED                             UAT31900\n         DC    AL3(SYSUT1)         IOBDCBPT                             UAT31910\n         DC    XL4'00'             IOBRESTR                             UAT31920\n         DC    X'0000'             IOBINCAM                             UAT31930\n         DC    X'0000'             IOBERRCT                             UAT31940\n         DC    2F'0'               ??????????                           UAT31950\n         SPACE 2                                                        UAT31960\nECB1     DC    F'0'                SYSUT1 EVENT CONTROL BLOCK           UAT31970\n         SPACE 2                                                        UAT31980\n*********************************************************************** UAT31990\n*                                                                     * UAT32000\n*      IOB2                  INPUT/OUTPUT BLOCK FOR SYSUT2            * UAT32010\n*                                                                     * UAT32020\n*********************************************************************** UAT32030\n         SPACE                                                          UAT32040\nIOB2     DS    0F                                                       UAT32050\n         DC    X'0200'             IOBFLAG1 AND IOBFLAG2                UAT32060\nIOB2SNS  DC    X'0000'             IOBSENS1 AND IOBSENS2                UAT32070\n         DC    A(ECB2)             IOBECBCC AND IOBECBPT (ECB STUFF)    UAT32080\n         DC    X'00'               IOBFLAG3                             UAT32090\n         DC    0XL7'00'            IOBCSW                               UAT32100\nIOB2CSW  DC    XL5'00'             FIRST PART OF CSW                    UAT32110\nIOB2RES  DC    X'0000'             RESIDUAL IN CSW                      UAT32120\n         DC    X'00'               IOBSIOCC                             UAT32130\nIOB2CCW  DS    XL3                 IOBSTART (CHANNEL PGM ADDR)          UAT32140\n         DC    X'00'               RESERVED                             UAT32150\n         DC    AL3(SYSUT2)         IOBDCBPT                             UAT32160\n         DC    XL4'00'             IOBRESTR                             UAT32170\n         DC    X'0000'             IOBINCAM                             UAT32180\n         DC    X'0000'             IOBERRCT                             UAT32190\n         DC    2F'0'               ??????????                           UAT32200\n         SPACE 2                                                        UAT32210\nECB2     DC    F'0'                SYSUT2 EVENT CONTROL BLOCK           UAT32220\n         TITLE 'UATAPE CHANNEL PROGRAMS'                                UAT32230\n*********************************************************************** UAT32240\n*                                                                     * UAT32250\n*     CHANNEL PROGRAM AREA                                            * UAT32260\n*                                                                     * UAT32270\n*********************************************************************** UAT32280\n         SPACE                                                          UAT32290\n*  SENSE CCW -- UP TO 32 BYTES OF DATA RETURNED IN \"#SENSE\"             UAT32300\n         SPACE                                                          UAT32310\nSENSECCW CCW   4,#SENSE,#SILI,32        READ BASIC SENSE                UAT32320\n         SPACE 2                                                        UAT32330\n*  READ CCW -- UP TO 65536 BYTES OF DATA RETURNED                       UAT32340\n         SPACE                                                          UAT32350\nREADCCW  CCW   2,0,#SILI,X'FFFF'        READ DATA BLOCK                 UAT32360\nREADADDR EQU   READCCW+1                  INPUT BUFFER ADDRESS          UAT32370\nREADLEN  EQU   READCCW+6                  LENGTH OF READ OPERATION      UAT32380\n         SPACE 2                                                        UAT32390\n*  WRITE CCW -- SINGLE DATA BLOCK WRITTEN                               UAT32400\n         SPACE                                                          UAT32410\nWRITECCW CCW   1,0,#CC+#SILI,0          WRITE DATA BLOCK                UAT32420\n         CCW   3,0,#SILI,1              NO OPERATION (NO-OP)            UAT32430\nWRITEADR EQU   WRITECCW+1                 OUTPUT BUFFER ADDRESS         UAT32440\nWRITELEN EQU   WRITECCW+6                 OUTPUT BLOCK LENGTH           UAT32450\n         SPACE 2                                                        UAT32460\n*  REWIND CCW -- REWINDS TAPE TO LOAD POINT                             UAT32470\n         SPACE                                                          UAT32480\nREWINDCC CCW   7,0,#SILI,1              REWIND                          UAT32490\n         SPACE 2                                                        UAT32500\n*  WRITE TAPE MARK CCW -- WRITES SINGLE TAPE MARK                       UAT32510\n         SPACE                                                          UAT32520\nWTMCCW   CCW   31,0,#SILI,1             WRITE TAPE MARK                 UAT32530\n         SPACE 2                                                        UAT32540\n*  MODE SET CCW -- SETS TAPE DRIVE DENSITY                              UAT32550\n         SPACE                                                          UAT32560\nMODECCW  CCW   0,0,#SILI,1              MODESET                         UAT32570\n         SPACE 2                                                        UAT32580\n*  FORWARD-SPACE-BLOCK CCW -- SKIPS OVER BAD BLOCKS                     UAT32590\n         SPACE                                                          UAT32600\nFSBCCW   CCW   X'37',0,#CC+#SILI,1      FOWARD SPACE BLOCK              UAT32610\n         SPACE                                                          UAT32620\n*  LOAD DISPLAY CCW'S FOR 3480 TAPE DRIVES                              UAT32630\nDISPCCW  CCW   X'9F',MSG58,#SILI,17                                     UAT32640\n         SPACE 2                                                        UAT32650\n*  JOBFILE CONTROL BLOCK                                                UAT32660\n         SPACE                                                          UAT32670\nEXLST    DC    X'87',AL3(JFCB)     EXIT LIST FOR SYSUT1 AND SYSUT2      UAT32680\n         SPACE                                                          UAT32690\nJFCB     DS    CL176               JOB FILE CONTROL BLOCK               UAT32700\n         TITLE 'PROGRAM MESSAGES'                                       UAT32710\n*********************************************************************** UAT32720\n*                                                                     * UAT32730\n*     PROGRAM MESSAGES                                                * UAT32740\n*                                                                     * UAT32750\n*********************************************************************** UAT32760\n         SPACE                                                          UAT32770\nMSG1     DC    C'-       NORMAL END-OF-TAPE FOUND -- UATAPE TERMINATED XUAT32780\n               NORMALLY.'                                               UAT32790\nMSG2     DC    C'-       SYSUT1 TAPE CONTAINS STANDARD LABELS.'         UAT32800\nMSG3     DC    C'-       SYSUT1 TAPE DOES NOT CONTAIN STANDARD LABELS.' UAT32810\nMSG4     DC    C'-VOL1:  INPUT VOLUME SERIAL:   XXXXXX       OWNER:'    UAT32820\nMSG4V    EQU   31                  OFFSET TO \"XXXXXX\" IN MSG4           UAT32830\nMSG4O    EQU   62                  OFFSET TO OWNR IN MSG4               UAT32840\nMSG5     DC    C'        OUTPUT VOLUME SERIAL:  XXXXXX'                 UAT32850\nMSG5V    EQU   31                  OFFSET TO \"XXXXXX\" IN MSG5           UAT32860\nMSG6     DC    C'        SYSUT1 WRITE RING IS IN.'                      UAT32870\nMSG6W    EQU   29                  OFFSET TO \"IN\" IN MSG6               UAT32880\nMSG7     DC    C'        ORIGINAL SYSUT2 VOLUME SERIAL:  XXXXXX'        UAT32890\nMSG7S    EQU   40                  OFFSET TO \"XXXXXX\" IN MSG7           UAT32900\nMSG8     DC    C'0------ TAPE MARK ------------------------------------XUAT32910\n               --------------------------'                              UAT32920\nMSG9     DC    C'0       UATAPE OPTIONS IN EFFECT:'                     UAT32930\nMSG9O    EQU   *-MSG9+2            OFFSET TO MSG LIST                   UAT32940\nMSG10    DC    C'        OUTPUT TAPE DENSITY:   XXXX BPI'               UAT32950\nMSG10D   EQU   31                  OFFSET TO \"XXXX\" IN MSG10            UAT32960\nMSG11    DC    C'0HDR1:  DATA SET NAME:  12345678901234567   VOLUME SERXUAT32970\n               IAL:'                                                    UAT32980\nMSG11D   EQU   24                  OFFSET TO DSN IN MSG11               UAT32990\nMSG11V   EQU   62                  OFFSET TO VOLSER IN MSG11            UAT33000\nMSG12    DC    C'        FILE NUMBER:    XXXX                VOLUME SEQXUAT33010\n               UENCE:'                                                  UAT33020\nMSG12F   EQU   24                  OFFSET TO FILSEQ IN MSG12            UAT33030\nMSG12S   EQU   62                  OFFSET TO VOLSEQ IN MSG12            UAT33040\nMSG12#   DC    C'        GENERATION:     XXXX                VERSION:'  UAT33050\nMSG12G   EQU   24                  OFFSET TO GENERA IN MSG12#           UAT33060\nMSG12V   EQU   62                  OFFSET TO VERS IN MSG12#             UAT33070\nMSG13    DC    C'        CREATION DATE:  YY.DDD              EXPIRATIONXUAT33080\n                DATE:  YY.DDD'                                          UAT33090\nMSG13C   EQU   24                  OFFSET TO CRDT IN MSG13              UAT33100\nMSG13E   EQU   62                  OFFSET TO EXDT IN MSG13              UAT33110\nMSG13#   DC    C'        SYSTEM CODE:'                                  UAT33120\nMSG13S   EQU   24                  OFFSET TO SYSTEM CODE IN MSG13#      UAT33130\nMSG15    DC    C'0HDR2:  LRECL:          XXXXX               BLKSIZE:'  UAT33140\nMSG15L   EQU   24                  OFFSET TO LRECL IN MSG15             UAT33150\nMSG15B   EQU   62                  OFFSET TO BLKSIZE IN MSG15           UAT33160\nMSG15#   DC    C'        RECFM:          X                   DENSITY:  XUAT33170\n                       X (XXXX BPI)'                                    UAT33180\nMSG15R   EQU   24                  OFFSET TO \"X\" IN MSG15#              UAT33190\nMSG15D1  EQU   62                  OFFSET TO \"U\" IN MSG15#              UAT33200\nMSG15D2  EQU   65                  OFFSET TO \"NNNN\" IN MSG15#           UAT33210\nMSG16    DC    C'        CREATING JOB:   XXXXXXXX/XXXXXXXX   RECORDING XUAT33220\n               TECH:'                                                   UAT33230\nMSG16J   EQU   24                  OFFSET TO JB/SP IN MSG16             UAT33240\nMSG16R   EQU   62                  OFFSET TO TECH IN MSG16              UAT33250\nMSG18    DC    C'        FILE XXXX CONTAINS YYYYYY BLOCKS.   MAXIMUM=ZZXUAT33260\n               ZZZ.  MINIMUM=UUUUU.'                                    UAT33270\nMSG18F   EQU   13                  OFFSET TO \"XXXX\" IN MSG18            UAT33280\nMSG18D   EQU   27                  OFFSET TO \"YYYYY\" IN MSG18           UAT33290\nMSG18X   EQU   52                  OFFSET TO \"ZZZZZ\" IN MSG18           UAT33300\nMSG18N   EQU   68                  OFFSET TO \"UUUUU\" IN MSG18           UAT33310\nMSG19    DC    C'0EOF1:  NUMBER OF BLOCKS:'                             UAT33320\nMSG19N   EQU   26                  OFFSET TO BLKCT IN MSG19             UAT33330\nMSG24    DC    C'-FILE XXXX   BLOCK YYYYY   LENGTH ZZZZZ'               UAT33340\nMSG24F   EQU   6                   OFFSET TO \"XXXX\" IN MSG24            UAT33350\nMSG24B   EQU   19                  OFFSET TO \"YYYYY\" IN MSG24           UAT33360\nMSG24L   EQU   34                  OFFSET TO \"ZZZZZ\" IN MSG24           UAT33370\nMSG25    DC    C'        BLOCKS XXXXXX TO YYYYYY LENGTH ZZZZZ'          UAT33380\nMSG25B   EQU   15                  OFFSET TO \"XXXXXX\" IN MSG25          UAT33390\nMSG25T   EQU   25                  OFFSET TO \"YYYYYY\" IN MSG25          UAT33400\nMSG25L   EQU   39                  OFFSET TO \"ZZZZZ\" IN MSG25           UAT33410\nMSG26    DC    C'        BLOCK  XXXXXX           LENGTH ZZZZZ'          UAT33420\nMSG26B   EQU   15                  OFFSET TO \"XXXXXX\" IN MSG26          UAT33430\nMSG26L   EQU   39                  OFFSET TO \"ZZZZZ\" IN MSG26           UAT33440\nMSG27    DC    C'0       SYSUT1 DENSITY = XXXX BPI.          DATA LENGTXUAT33450\n               H = XXXX FEET.'                                          UAT33460\nMSG27D   EQU   25                  OFFSET TO \"XXXX\" IN MSG27            UAT33470\nMSG27B   EQU   58                  OFFSET TO LENGTH IN MSG27            UAT33480\nMSG28    DC    C'0       --UATAPE STATISTICS--        SYSUT1'           UAT33490\nMSGS1    EQU   43                                                       UAT33500\nMSGS2    EQU   65                                                       UAT33510\nMSG29    DC    C'0       VOLUME SERIAL:'                                UAT33520\nMSG30    DC    C'        TEMPORARY READ ERRORS:'                        UAT33530\nMSG31    DC    C'        TEMPORARY WRITE ERRORS:'                       UAT33540\nMSG32    DC    C'        PERMANENT READ ERRORS:'                        UAT33550\nMSG33    DC    C'        PERMANENT WRITE ERRORS:'                       UAT33560\nMSG34    DC    C'        NUMBER OF ERASE GAPS:'                         UAT33570\nMSG35    DC    C'        CLEANER ACTIONS:'                              UAT33580\nMSG36    DC    C'        START I/O COUNT:'                              UAT33590\nMSG37    DC    C'        TAPE DRIVE:'                                   UAT33600\nMSG38    DC    C'        NUMBER OF NOISE BLOCKS:'                       UAT33610\nMSG39    DC    C'        APPROX. LENGTH (FEET):'                        UAT33620\nMSG391   DC    C'        TOTAL DATA BYTES:'                             UAT33630\nMSG40    DC    C'        SYSUT2 DENSITY = XXXX BPI.          DATA LENGTXUAT33640\n               H = XXXX FEET.'                                          UAT33650\nMSG40D   EQU   25                  OFFSET TO \"XXXX\" IN MSG40            UAT33660\nMSG40B   EQU   58                  OFFSET TO LENGTH IN MSG40            UAT33670\nMSG41    DC    C'-FILE:  XXXX =========================================XUAT33680\n               ========================================================XUAT33690\n               ======================='                                 UAT33700\nMSG41F   EQU   8                   OFFSET TO FILENUMBER IN MSG41        UAT33710\nMSG42    DC    C'0****** DENSITY OMITTED ON SYSUT2 DD-STATEMENT.  DEFAUXUAT33720\n               LT OF XXXX BPI ASSUMED.'                                 UAT33730\nMSG42D   EQU   60                  OFFSET TO BPI                        UAT33740\nMSG43    DC    C'0****** NULL DATA FILE -- NO DATA FOUND -- FILE:  '    UAT33750\nMSG43F   EQU   *-MSG43             OFFSET TO FILENUMBER IN MSG43        UAT33760\nMSG44    DC    C'0****** UNIDENTIFIABLE LABEL RECORD.  FIRST 80 BYTES PXUAT33770\n               RINTED ON NEXT LINE.'                                    UAT33780\nMSG45    DC    C'0       FILE    DATA SET NAME        RECFM   LRECL   BXUAT33790\n               LKSIZE   BLOCKS   LENGTH'                                UAT33800\nMSG46    DC    C'        ----    -------------        -----   -----   -XUAT33810\n               ------   ------   ------'                                UAT33820\nMSG47    DC    C'1                          UATAPE FILE SUMMARY FOR'    UAT33830\nMSG471   EQU   *-MSG47+1           OFFSET TO FIRST VOLSER               UAT33840\nMSG47M   EQU   MSG471+7            OFFSET TO \"AND\"                      UAT33850\nMSG472   EQU   MSG47M+4            OFFSET TO SECOND VOLSER              UAT33860\nMSG48    DC    C'0****** UNIDENTIFIABLE LABEL RECORD.  MESSAGES SUPPRESXUAT33870\n               SED FOR THIS FILE.'                                      UAT33880\nMSG49    DC    C'-       SYSUT1 TAPE CONTAINS STANDARD ASCII LABELS'    UAT33890\nMSG50    DC    C'0 ***** DUMP OUTPUT SUSPENDED UNTIL END-OF-FILE *****' UAT33900\nMSG51    DC    C'        LEADING TAPE MARK ON SYSUT1 TAPE SKIPPED'      UAT33910\nMSG52    DC    C'        LEADING TAPE MARK ON SYSUT1 TAPE -- NON-STANDAXUAT33920\n               RD OR NO LABELS ASSUMED'                                 UAT33930\nMSG53    DC    C'0****** PRINT SUSPENDED UNTIL END-OF-FILE ******'      UAT33940\nMSG54    DC    C'        ALL TAPE LABELS WILL BE OMITTED ON THE OUTPUT XUAT33950\n               TAPE.'                                                   UAT33960\nMSG55    DC    C'-****** UATAPE TERMINATING PROCESSING OF THIS TAPE:  XXUAT33970\n               XXXX FILES PROCESSED'                                    UAT33980\nMSG55C   EQU   53                  OFFSET TO FILE COUNTER IN MSG55      UAT33990\nMSG56    DC    C'0****** THE HDR1 LABEL INDICATES THAT THIS TAPE HAS BEXUAT34000\n               EN LABELED WITH IEHINITT, BUT HAS NOT YET BEEN USED.'    UAT34010\nMSG57    DC    C'0****** WARNING:  THE BLOCK COUNT FROM THE EOF1 LABEL XUAT34020\n               DOES NOT MATCH THE ACTUAL BLOCK COUNT ON THE TAPE.'      UAT34030\nMSG58    DC    B'01010000'                                              UAT34040\nMSG58A   DC    CL8'-UATAPE-'                                            UAT34050\nMSG58B   DC    CL8' VOLSER '                                            UAT34060\nMSG59    DC    C'0       (IDRC COMPRESSION IS ON, DATA LENGTH VALUE MAYXUAT34070\n               BE UNRELIABLE)'                                          UAT34080\nMSG60    DC    C'0       SYSUT1 IDRC DATA COMPRESSION IS OFF.'          UAT34090\nMSG60A   EQU   40                  OFFSET TO WORD \"OFF\"                 UAT34100\nMSG61    DC    C'        SYSUT1 WRITE PROTECTION IS ENABLED.'           UAT34110\nMSG61A   EQU   35                  OFFSET TO WORD \"ENABLED\"             UAT34120\nMSG62    DC    C'        FILE XXXX CONTAINS YYY,YYY,YYY,YYY BYTES OF DAXUAT34130\n               TA.'                                                     UAT34140\nMSG62F   EQU   13                  OFFSET TO \"XXXX\" IN MSG62            UAT34150\nMSG62D   EQU   27                  OFFSET TO \"YYYYY\" IN MSG62           UAT34160\nMSG63    DC    C' SYSUT1 DEBUG BEFORE CCW XXXXXXXXXXXXXXXX'             UAT34170\nMSG63A   EQU   25                  OFFSET TO XXXX                       UAT34180\nMSG64    DC    C' SYSUT1 DEBUG AFTER  CSW XXXX'                         UAT34190\nMSG64A   EQU   25                  OFFSET TO XXXX                       UAT34200\nMSG65    DC    C' SYSUT2 DEBUG BEFORE CCW XXXXXXXXXXXXXXXX'             UAT34210\nMSG65A   EQU   25                  OFFSET TO XXXX                       UAT34220\nMSG66    DC    C' SYSUT2 DEBUG AFTER  CSW XXXX'                         UAT34230\nMSG66A   EQU   25                  OFFSET TO XXXX                       UAT34240\nMSG67    DC    C'0       (NOTE: TOTAL DATA BYTES VALUE DOES NOT INCLUDEXUAT34250\n                TAPE LABEL RECORDS)'                                    UAT34260\nMSG68    DC    C'0****** UATAPE - NORMAL END OF EXECUTION'              UAT34270\n         TITLE 'PROGRAM ERROR MESSAGES'                                 UAT34280\n*********************************************************************** UAT34290\n*                                                                     * UAT34300\n*   ERROR MESSAGES                                                    * UAT34310\n*                                                                     * UAT34320\n*********************************************************************** UAT34330\n         SPACE                                                          UAT34340\nERROR1   DC    C'-****** ERROR 1:  NO SYSUT1 DD-STATEMENT WAS FOUND.'   UAT34350\nERROR2   DC    C'-****** ERROR 2:  SYSUT1 DATA SET WOULD NOT OPEN.'     UAT34360\nERROR3   DC    C'-****** ERROR 3:  NOT ENOUGH MEMORY AVAILABLE TO RUN UXUAT34370\n               ATAPE.  PLEASE INCREASE REGION SIZE AND RESUBMIT.'       UAT34380\nERROR4   DC    C'-****** ERROR 4:  NO SYSUT2 DD-STATEMENT WAS FOUND.'   UAT34390\nERROR5   DC    C'-****** ERROR 5:  SYSUT2 DATA SET WOULD NOT OPEN.'     UAT34400\nERROR6   DC    C'-****** ERROR 6:  VOLUME SERIAL ON SYSUT2 TAPE DOES NOXUAT34410\n               T MATCH VOLUME SERIAL PARAMETER IN JCL:'                 UAT34420\nERROR7   DC    C'0                 TAPE=XXXXXX            JCL=YYYYYY'   UAT34430\nERR7T    EQU   23                  OFFSET TO \"XXXXXX\" IN ERROR7         UAT34440\nERR7J    EQU   45                  OFFSET TO \"YYYYYY\" IN ERROR7         UAT34450\nERROR8   DC    C'-****** ERROR 8:  SYSUT2 TAPE DOES NOT HAVE A STANDARDXUAT34460\n                LABEL.  LABEL THE TAPE AND RERUN.'                      UAT34470\nERROR9   DC    C'-****** ERROR 9:  PERMANENT I/O ERROR ON SYSUT1'       UAT34480\nERROR10  DC    C'0****** CSW=XXXXXXXXXXXXXX   CCW=ZZZZZZZZZZZZZZZZ'     UAT34490\nERR10C   EQU   12                  OFFSET TO \"XX\" IN ERROR10            UAT34500\nERR10W   EQU   33                  OFFSET TO \"ZZZZ\" IN ERROR10          UAT34510\nERROR11  DC    C'-****** ERROR 11:  PERMANENT I/O ERROR ON SYSUT2'      UAT34520\nERROR12  DC    C'-****** ERROR 12: RAN OUT OF TAPE ON SYSUT2 DURING COPXUAT34530\n               Y OPERATION.  RESUBMIT WITH LONGER TAPE.'                UAT34540\nERROR13  DC    C' ****** ERROR 13: INVALID PARM FIELD PARAMETER.  QUESTXUAT34550\n               ION MARK INDICATES POSITION ABOVE.'                      UAT34560\nERROR14  DC    C'-****** ERROR 14: UATAPE DOES NOT SUPPORT SPECIFIED OUXUAT34570\n               TPUT TAPE DENSITY.'                                      UAT34580\nERROR15  DC    C'-****** ERROR 15: SYSUT2 TAPE IS FILE PROTECTED.  INSEXUAT34590\n               RT A WRITE RING AND RESUBMIT.'                           UAT34600\nERROR16  DC    C'-****** ERROR 16: XXXXXX DOES NOT DEFINE A MAGNETIC TAXUAT34610\n               PE DEVICE.'                                              UAT34620\nERR16D   EQU   18                  OFFSET TO \"XXXXXX\" IN ERROR16        UAT34630\n         SPACE 2                                                        UAT34640\nERROR17  DC    C' ****** SENSE='                                        UAT34650\nERR17B   EQU   14                  OFFSET TO SENSE INFO                 UAT34660\nERR18    DC    C' ****** ERROR OCCURRED WHILE PROCESSING LABEL RECORD FXUAT34670\n               OR FILE NUMBER '                                         UAT34680\nERR18F   EQU   *-ERR18             OFFSET TO FILE NUMBER IN ERR18       UAT34690\nERR19    DC    C' ****** ERROR OCCURRED WHILE PROCESSING RECORD ###### XUAT34700\n               OF FILE '                                                UAT34710\nERR19B   EQU   47                  OFFSET TO BLOCK # IN ERR19           UAT34720\nERR19F   EQU   *-ERR19             OFFSET TO FILE # IN ERR19            UAT34730\nERROR20  DC    C' ****** FORWARD SPACING OVER BAD RECORD ....'          UAT34740\nERROR21  DC    C' ****** ERROR OCCURRED WHILE PROCESSING VOLUME LABEL RXUAT34750\n               ECORD (OR FIRST RECORD ON TAPE)'                         UAT34760\n         TITLE 'SYSTEM CONTROL BLOCK EQUATES'                           UAT34770\n*********************************************************************** UAT34780\n*                                                                     * UAT34790\n*      TIOT                  TASK INPUT/OUTPUT TABLE                  * UAT34800\n*                                                                     * UAT34810\n*********************************************************************** UAT34820\n         SPACE                                                          UAT34830\nTIOTJOBN EQU   0                   JOB NAME FIELD                       UAT34840\nTIOTJOBS EQU   8                   JOB STEP FIELD                       UAT34850\nTIOTPROC EQU   16                  CATALOGUED PROCEDURE STEP FIELD      UAT34860\nTIOTDDEN EQU   24                  OFFSET TO 1ST DD-ENTRY               UAT34870\nTIOTLEN  EQU   0                   DD-ENTRY LENGTH OFFSET               UAT34880\nTIOTDDNM EQU   4                   DDNAME OFFSET IN DD-ENTRY            UAT34890\nTIOTFSRT EQU   17                  UCB ADDR OFFSET IN DD-ENTRY          UAT34900\n         SPACE 2                                                        UAT34910\n*********************************************************************** UAT34920\n*                                                                     * UAT34930\n*       BIT DEFINITION SYMBOLS                                        * UAT34940\n*                                                                     * UAT34950\n*********************************************************************** UAT34960\n         SPACE                                                          UAT34970\n#BIT0    EQU   B'10000000'                                              UAT34980\n#BIT1    EQU   B'01000000'                                              UAT34990\n#BIT2    EQU   B'00100000'                                              UAT35000\n#BIT3    EQU   B'00010000'                                              UAT35010\n#BIT4    EQU   B'00001000'                                              UAT35020\n#BIT5    EQU   B'00000100'                                              UAT35030\n#BIT6    EQU   B'00000010'                                              UAT35040\n#BIT7    EQU   B'00000001'                                              UAT35050\n         SPACE 2                                                        UAT35060\n*  CCW FLAG BITS                                                        UAT35070\n#CD      EQU   #BIT0               DATA CHAINING                        UAT35080\n#CC      EQU   #BIT1               COMMAND CHAINING                     UAT35090\n#SILI    EQU   #BIT2               SUPPRESS INCORRECT LENGTH INDICATION UAT35100\n#SKIP    EQU   #BIT3               SKIP DATA TRANSFER                   UAT35110\n#PCI     EQU   #BIT4               CHANNEL PROGRAM CONTROLLED INTERRUPT UAT35120\n#IDA     EQU   #BIT5               CCW SPECIFIES FIRST IDAW             UAT35130\n#SUSPEND EQU   #BIT6               SUSPEND CCW                          UAT35140\n         TITLE 'UATAPE TABLES CSECT'                                    UAT35150\n*********************************************************************** UAT35160\n*                                                                     * UAT35170\n*    SPECIAL CSECT TO CONTAIN VARIOUS TABLES                          * UAT35180\n*                                                                     * UAT35190\n*        PRTTABLE  --  TRANSLATE TABLE FOR DUMP ROUTINE               * UAT35200\n*        IECTSASA  --  TRANSLATE TABLE FOR EBCDIC TO ASCII            * UAT35210\n*        IECTRASA  --  TRANSLATE TABLE FOR ASCII  TO EBCDIC           * UAT35220\n*                                                                     * UAT35230\n*********************************************************************** UAT35240\nTABLES   CSECT                                                          UAT35250\nPRTTABLE DC    256C'.'             PRINTABLE CHARACTER TABLE            UAT35260\n         ORG   PRTTABLE+C' '       BLANK                                UAT35270\n         DC    C' '                                                     UAT35280\n         ORG   PRTTABLE+C'.'                                            UAT35290\n         DC    C'.<(+|&&'                                               UAT35300\n         ORG   PRTTABLE+C'!'                                            UAT35310\n         DC    C'!$*);\u00ac-/'                                              UAT35320\n         ORG   PRTTABLE+C','                                            UAT35330\n         DC    C',%_>?'                                                 UAT35340\n         ORG   PRTTABLE+C':'                                            UAT35350\n         DC    C':#@''=\"'                                               UAT35360\n         ORG   PRTTABLE+C'a'       WARNING:  THIS TABLE CONTAINS        UAT35370\n         DC    C'abcdefghi'        LOWER CASE CHARACTERS                UAT35380\n         ORG   PRTTABLE+C'j'                                            UAT35390\n         DC    C'jklmnopqr'                                             UAT35400\n         ORG   PRTTABLE+C's'                                            UAT35410\n         DC    C'stuvwxyz'                                              UAT35420\n         ORG   PRTTABLE+C'A'                                            UAT35430\n         DC    C'ABCDEFGHI'                                             UAT35440\n         ORG   PRTTABLE+C'J'                                            UAT35450\n         DC    C'JKLMNOPQR'                                             UAT35460\n         ORG   PRTTABLE+C'S'                                            UAT35470\n         DC    C'STUVWXYZ'                                              UAT35480\n         ORG   PRTTABLE+C'0'                                            UAT35490\n         DC    C'0123456789'                                            UAT35500\n         ORG   ,                                                        UAT35510\n         EJECT                                                          UAT35520\n*********************************************************************** UAT35530\n*                                                                     * UAT35540\n*    TRANSLATE TABLES FOR:                                            * UAT35550\n*                                                                     * UAT35560\n*        EBCDIC TO ASCII    --  IECTSASA                              * UAT35570\n*        ASCII  TO EBCDIC   --  IECTRASA                              * UAT35580\n*                                                                     * UAT35590\n*********************************************************************** UAT35600\n         SPACE                                                          UAT35610\nIECTSASA DS    0XL256              EBCDIC TO ASCII TRANSLATE TABLE      UAT35620\n         SPACE                                                          UAT35630\n*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                       UAT35640\n         DC    X'000102031A091A7F1A1A1A0B0C0D0E0F' 0                    UAT35650\n         DC    X'101112131A0A080018191A1A1C1D1E1F' 1                    UAT35660\n         DC    X'1A1A1A1A1A0A171B1A1A1A1A1A050607' 2                    UAT35670\n         DC    X'1A1A161A1A1A1A041A1A1A1A14151A1A' 3                    UAT35680\n         DC    X'201A1A1A1A1A1A1A1A5D1A2E3C282B7C' 4                    UAT35690\n         DC    X'261A1A1A1A1A1A1A1A1A21242A293B7E' 5                    UAT35700\n         DC    X'2D2F1A1A1A1A1A1A1A1A1A2C255F3E3F' 6                    UAT35710\n         DC    X'1A1A1A1A1A1A1A1A1A5B3A2340273D22' 7                    UAT35720\n         DC    X'1A6162636465666768691A7B1A1A1A1A' 8                    UAT35730\n         DC    X'1A6A6B6C6D6E6F7071721A7D1A1A1A1A' 9                    UAT35740\n         DC    X'1A1A737475767778797A1A1A1A1A1A1A' A                    UAT35750\n         DC    X'5E1A1A1A1A1A1A1A1A1A1A1A1A1A1A60' B                    UAT35760\n         DC    X'1A4142434445464748491A1A1A1A1A5C' C                    UAT35770\n         DC    X'1A4A4B4C4D4E4F5051521A1A1A1A1A1A' D                    UAT35780\n         DC    X'1A1A535455565758595A1A1A1A1A1A1A' E                    UAT35790\n         DC    X'303132333435363738391A1A1A1A1A1A' F                    UAT35800\n         SPACE                                                          UAT35810\n*                                                                       UAT35820\nIECTRASA DS    0XL256              ASCII TO EBCDIC TRANSLATE TABLE      UAT35830\n         SPACE                                                          UAT35840\n*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                       UAT35850\n         DC    X'00010203372D2E2F1605250B0C0D0E0F' 0                    UAT35860\n         DC    X'101112133C3D322618193F271C1D1E1F' 1                    UAT35870\n         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 2                    UAT35880\n         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 3                    UAT35890\n         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 4                    UAT35900\n         DC    X'D7D8D9E2E3E4E5E6E7E8E979CF49B06D' 5                    UAT35910\n         DC    X'BF818283848586878889919293949596' 6                    UAT35920\n         DC    X'979899A2A3A4A5A6A7A8A98B4F9B5F07' 7                    UAT35930\n         DC    X'00010203372D2E2F1605250B0C0D0E0F' 8                    UAT35940\n         DC    X'101112133C3D322618193F271C1D1E1F' 9                    UAT35950\n         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' A                    UAT35960\n         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' B                    UAT35970\n         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' C                    UAT35980\n         DC    X'D7D8D9E2E3E4E5E6E7E8E979CF49B06D' D                    UAT35990\n         DC    X'BF818283848586878889919293949596' E                    UAT36000\n         DC    X'979899A2A3A4A5A6A7A8A98B4F9B5F07' F                    UAT36010\n         TITLE 'UATAPE PROGRAM CONTROL BLOCK DSECTS'                    UAT36020\n*********************************************************************** UAT36030\n*                                                                     * UAT36040\n*     VOL1       VOLUME LABEL RECORD DSECT                            * UAT36050\n*                                                                     * UAT36060\n*********************************************************************** UAT36070\n         SPACE                                                          UAT36080\nVOL1D    DSECT                                                          UAT36090\nVOL1VOL1 DC    CL4'VOL1'           VOL1 IDENTIFIER                      UAT36100\nVOL1SER  DS    CL6                 VOLUME SERIAL NUMBER                 UAT36110\n         DS    CL1                 RESERVED                             UAT36120\nVOL1VTOC DS    CL10                VTOC POINTER (DIRECT ACCESS ONLY)    UAT36130\n         DS    CL10                RESERVED                             UAT36140\n         DS    CL10                RESERVED                             UAT36150\nVOL1OWNR DS    CL10                OWNER NAME AND ADDRESS CODE          UAT36160\n         DS    CL29                RESERVED                             UAT36170\n         SPACE 3                                                        UAT36180\n*********************************************************************** UAT36190\n*                                                                     * UAT36200\n*     HDR1                 DATA SET LABEL 1                           * UAT36210\n*                                                                     * UAT36220\n*********************************************************************** UAT36230\n         SPACE                                                          UAT36240\nHDR1D    DSECT                                                          UAT36250\nHDR1HDR1 DC    CL4'HDR1'           HDR1 IDENTIFIER                      UAT36260\nHDR1DSN  DS    CL17                DATA SET NAME                        UAT36270\nHDR1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36280\nHDR1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36290\nHDR1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36300\nHDR1GEN  DS    CL4                 GENERATION NUMBER                    UAT36310\nHDR1VER  DS    CL2                 VERSION NUMBER                       UAT36320\nHDR1CRDT DS    CL6                 CREATION DATE                        UAT36330\nHDR1EXDT DS    CL6                 EXPIRATION DATE                      UAT36340\nHDR1SEC  DS    CL1                 SECURITY BYTE                        UAT36350\nHDR1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36360\nHDR1SYS  DS    CL13                SYSTEM CODE                          UAT36370\n         DS    CL7                 RESERVED                             UAT36380\n         SPACE 3                                                        UAT36390\n*********************************************************************** UAT36400\n*                                                                     * UAT36410\n*     EOV1                 END OF VOLUME LABEL 1                      * UAT36420\n*                                                                     * UAT36430\n*********************************************************************** UAT36440\n         SPACE                                                          UAT36450\nEOV1D    DSECT                                                          UAT36460\nEOV1EOV1 DC    CL4'EOV1'           EOV1 IDENTIFIER                      UAT36470\nEOV1DSN  DS    CL17                DATA SET NAME                        UAT36480\nEOV1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36490\nEOV1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36500\nEOV1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36510\nEOV1GEN  DS    CL4                 GENERATION NUMBER                    UAT36520\nEOV1VER  DS    CL2                 VERSION NUMBER                       UAT36530\nEOV1CRDT DS    CL6                 CREATION DATE                        UAT36540\nEOV1EXDT DS    CL6                 EXPIRATION DATE                      UAT36550\nEOV1SEC  DS    CL1                 SECURITY BYTE                        UAT36560\nEOV1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36570\nEOV1SYS  DS    CL13                SYSTEM CODE                          UAT36580\n         DS    CL7                 RESERVED                             UAT36590\n         SPACE 3                                                        UAT36600\n*********************************************************************** UAT36610\n*                                                                     * UAT36620\n*     EOF1                 END OF FILE LABEL 1                        * UAT36630\n*                                                                     * UAT36640\n*********************************************************************** UAT36650\n         SPACE                                                          UAT36660\nEOF1D    DSECT                                                          UAT36670\nEOF1EOF1 DC    CL4'EOF1'           EOF1 IDENTIFIER                      UAT36680\nEOF1DSN  DS    CL17                DATA SET NAME                        UAT36690\nEOF1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36700\nEOF1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36710\nEOF1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36720\nEOF1GEN  DS    CL4                 GENERATION NUMBER                    UAT36730\nEOF1VER  DS    CL2                 VERSION NUMBER                       UAT36740\nEOF1CRDT DS    CL6                 CREATION DATE                        UAT36750\nEOF1EXDT DS    CL6                 EXPIRATION DATE                      UAT36760\nEOF1SEC  DS    CL1                 SECURITY BYTE                        UAT36770\nEOF1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36780\nEOF1SYS  DS    CL13                SYSTEM CODE                          UAT36790\n         DS    CL7                 RESERVED                             UAT36800\n         SPACE 3                                                        UAT36810\n*********************************************************************** UAT36820\n*                                                                     * UAT36830\n*      HDR2                DATA SET LABEL 2                           * UAT36840\n*                                                                     * UAT36850\n*********************************************************************** UAT36860\n         SPACE                                                          UAT36870\nHDR2D    DSECT                                                          UAT36880\nHDR2HDR2 DC    CL4'HDR2'           HDR2 IDENTIFIER                      UAT36890\nHDR2RECF DS    CL1                 RECORD FORMAT                        UAT36900\nHDR2BLKL DS    CL5                 BLOCK LENGTH                         UAT36910\nHDR2LREC DS    CL5                 RECORD LENGTH                        UAT36920\nHDR2DEN  DS    CL1                 TAPE DENSITY                         UAT36930\nHDR2DSP  DS    CL1                 DATA SET POSITION                    UAT36940\nHDR2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT36950\nHDR2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT36960\nHDR2CONC DS    CL1                 CONTROL CHARACTERS                   UAT36970\n         DS    CL1                 RESERVED                             UAT36980\nHDR2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT36990\n         DS    CL41                RESERVED                             UAT37000\n         SPACE 3                                                        UAT37010\n*********************************************************************** UAT37020\n*                                                                     * UAT37030\n*      EOV2                END OF VOLUME LABEL 2                      * UAT37040\n*                                                                     * UAT37050\n*********************************************************************** UAT37060\n         SPACE                                                          UAT37070\nEOV2D    DSECT                                                          UAT37080\nEOV2EOV2 DC    CL4'EOV2'           EOV2 IDENTIFIER                      UAT37090\nEOV2RECF DS    CL1                 RECORD FORMAT                        UAT37100\nEOV2BLKL DS    CL5                 BLOCK LENGTH                         UAT37110\nEOV2LREC DS    CL5                 RECORD LENGTH                        UAT37120\nEOV2DEN  DS    CL1                 TAPE DENSITY                         UAT37130\nEOV2DSP  DS    CL1                 DATA SET POSITION                    UAT37140\nEOV2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT37150\nEOV2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT37160\nEOV2CC   DS    CL1                 CONTROL CHARACTERS                   UAT37170\n         DS    CL1                 RESERVED                             UAT37180\nEOV2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT37190\n         DS    CL41                RESERVED                             UAT37200\n         SPACE 3                                                        UAT37210\n*********************************************************************** UAT37220\n*                                                                     * UAT37230\n*      EOF2                END OF FILE LABEL 2                        * UAT37240\n*                                                                     * UAT37250\n*********************************************************************** UAT37260\n         SPACE                                                          UAT37270\nEOF2D    DSECT                                                          UAT37280\nEOF2EOF2 DC    CL4'EOF2'           EOF2 IDENTIFIER                      UAT37290\nEOF2RECF DS    CL1                 RECORD FORMAT                        UAT37300\nEOF2BLKL DS    CL5                 BLOCK LENGTH                         UAT37310\nEOF2LREC DS    CL5                 RECORD LENGTH                        UAT37320\nEOF2DEN  DS    CL1                 TAPE DENSITY                         UAT37330\nEOF2DSP  DS    CL1                 DATA SET POSITION                    UAT37340\nEOF2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT37350\nEOF2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT37360\nEOF2CC   DS    CL1                 CONTROL CHARACTERS                   UAT37370\n         DS    CL1                 RESERVED                             UAT37380\nEOF2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT37390\n         DS    CL41                RESERVED                             UAT37400\n         SPACE 3                                                        UAT37410\n*********************************************************************** UAT37420\n*                                                                     * UAT37430\n*       DCB               DATA CONTROL BLOCK DSECT                    * UAT37440\n*                                                                     * UAT37450\n*********************************************************************** UAT37460\n         SPACE                                                          UAT37470\n         PRINT NOGEN                                                    UAT37480\n         DCBD  DEVD=TA,DSORG=PS                                         UAT37490\nLRECL    EQU   DCBLRECL-IHADCB     LOGICAL RECORD LENGTH                UAT37500\nBLKSIZE  EQU   DCBBLKSI-IHADCB     BLOCK SIZE                           UAT37510\nRECFM    EQU   DCBRECFM-IHADCB     RECORD FORMAT                        UAT37520\nDDNAME   EQU   DCBDDNAM-IHADCB     DD NAME                              UAT37530\nOFLGS    EQU   DCBOFLGS-IHADCB     DCB OPEN FLAGS                       UAT37540\n         SPACE 3                                                        UAT37550\n*********************************************************************** UAT37560\n*                                                                     * UAT37570\n*      JFCB                  JOB FILE CONTROL BLOCK DSECT             * UAT37580\n*                                                                     * UAT37590\n*********************************************************************** UAT37600\n         SPACE                                                          UAT37610\nJFCBD    DSECT                                                          UAT37620\nJFCBDSNM DS    CL44                DATA SET NAME                        UAT37630\nJFCBELNM DS    CL8                 ELEMENT NAME OR RELATIVE GENERATION  UAT37640\nJFCBTSDM DS    XL1                 JOB MANAGEMENT/DATA MGT I/F          UAT37650\nJFCBDSCB DS    XL3                 TTR OF FORMAT 1 DSCB                 UAT37660\nJFCFCBID DS    XL4                 FCB IMAGE IDENTIFICATION             UAT37670\n         DS    XL6                 RESERVED                             UAT37680\nJFCBLTYP DS    XL1                 LABEL TYPE                           UAT37690\n*              .1.. ....           AL                                   UAT37700\n*              X... ....           RESERVED BIT                         UAT37710\n*              ...1 ....           BLP                                  UAT37720\n*              .... 1.1.           SUL                                  UAT37730\n*              .1.. 1...           AUL                                  UAT37740\n*              .... .1..           NSL                                  UAT37750\n*              .... ..1.           SL                                   UAT37760\n*              .... ...1           NL                                   UAT37770\n*              ..1. ...1           LTM                                  UAT37780\nJFCBOTTR DS    XL3                 DASD, MOD DATA SET                   UAT37790\n         ORG   JFCBOTTR                                                 UAT37800\nJFCBUFOF DS    XL1                 TAPE DATA SET BUFFER OFFSET          UAT37810\nJFCBFLSQ DS    XL2                 MAGNETIC TAPE, FILE SEQUENCE NO.     UAT37820\n         ORG   JFCBFLSQ                                                 UAT37830\nJFCFUNC  DS    XL1                 FUNC PARAMETER FOR 3505/3525         UAT37840\n         ORG                                                            UAT37850\nJFCBVLSQ DS    XL2                 VOLUME SEQUENCE NUMBER               UAT37860\nJFCBMASK DS    XL8                 DATA MANAGEMENT MASK                 UAT37870\nJFCBCRDT DS    XL3                 CREATION DATE                        UAT37880\nJFCBXPDT DS    XL3                 EXPIRATION DATE                      UAT37890\nJFCBIND1 DS    XL1                 INDICATOR BYTE 1                     UAT37900\n*              11.. ....           RELEASE EXTERNAL STORAGE             UAT37910\n*              ..11 ....           DATA SET HAS BEEN LOCATED            UAT37920\n*              .... 11..           NEW VOLUME ADDED TO DATA SET         UAT37930\n*              .... ..1.           DATA SET IS MEMBER OF GENER. DATA GR UAT37940\n*              .... ...1           DATA SET IS MEMBER OF PDS            UAT37950\nJFCBIND2 DS    XL1                 INDICATOR BYTE 2                     UAT37960\n*              01.. ....           OLD DATA SET                         UAT37970\n*              10.. ....           MOD DATA SET                         UAT37980\n*              11.. ....           NEW DATA SET                         UAT37990\n*              ..XX ....           DATA SET SECURITY                    UAT38000\n*              ..01 ....           PASSWORD IS REQUIRED TO READ/WRITE   UAT38010\n*              ..11 ....           PASSWORD IS REQUIRED TO WRITE        UAT38020\n*              .... 1...           SHARED                               UAT38030\n*              .... .1..           DELETE JFCB BEFORE ALLOC GEN. DATA   UAT38040\n*              .... ..1.           STORAGE VOLUME REQUESTED             UAT38050\n*              .... ...1           TEMPORARY DATA SET                   UAT38060\nJFCBUFNO DS    XL1                 NUMBER OF BUFFERS                    UAT38070\nJFCBFTEK DS    XL1                 BUFFERING TECHNIQUE                  UAT38080\nJFCBHIAR EQU   JFCBFTEK                                                 UAT38090\nJFCBFLAN EQU   JFCBFTEK                                                 UAT38100\nJFCBUFL  DS    XL2                 BUFFER LENGTH                        UAT38110\nJFCEROPT DS    XL1                 ERROR OPTION                         UAT38120\nJFCTRTCH DS    XL1                 TAPE RECORDING TECHNIQUE (7-TRK)     UAT38130\n*              0010 0011           E   EVEN PARITY                      UAT38140\n*              0011 1011           T   EOD/EBCDIC TRANSLATION           UAT38150\n*              0001 0011           C   DATA CONVERSION                  UAT38160\n*              0010 1011           ET  EVEN PARITY AND TRANSLATION      UAT38170\nJFCKENLE EQU   JFCTRTCH            DIRECT ACCESS KEY LENGTH             UAT38180\nJFCMODE  EQU   JFCTRTCH            UNIT RECORD MODE OF OPERATION        UAT38190\nJFCSTACK EQU   JFCMODE             UNIT RECORD STACKER SELECTION        UAT38200\nJFCPRTSP EQU   JFCTRTCH            PRINT SPACING                        UAT38210\nJFCCODE  EQU   JFCTRTCH            PAPER TAPE CONVERSION CODE           UAT38220\nJFCDEN   DS    XL1                 TAPE DENSITY                         UAT38230\n*                                  CODE  7-TRACK 9-TRACK                UAT38240\n*                                  ----  ------- -------                UAT38250\n*              0000 0000           DENSITY OMITTED ON DDCARD            UAT38260\n*              0000 0011             0   200 BPI    -                   UAT38270\n*              0100 0011             1   556 BPI    -                   UAT38280\n*              1000 0011             2   800 BPI  800 BPI               UAT38290\n*              1100 0011             3     -     1600 BPI               UAT38300\n*              1101 0011             4     -     6250 BPI               UAT38310\nJFCDOMIT EQU   B'00000000'                                              UAT38320\nJFCD800  EQU   B'10000011'                                              UAT38330\nJFCD1600 EQU   B'11000011'                                              UAT38340\nJFCD6250 EQU   B'11010011'                                              UAT38350\nJFCLIMCT DS    XL3                 BDAM:  SEARCH LIMIT                  UAT38360\nJFCDSORG DS    XL2                 DATA SET ORGANIZATION                UAT38370\n*        BYTE 1                                                         UAT38380\n*              1... ....           IS   INDEXED SEQUENTIAL              UAT38390\n*              .1.. ....           PS   PHYSICAL SEQUENTIAL             UAT38400\n*              ..1. ....           DA   DIRECT ACCESS                   UAT38410\n*              ...X XX..                RESERVED                        UAT38420\n*              .... ..1.           PO   PARTITIONED                     UAT38430\n*              .... ...1            U   UNMOVABLE                       UAT38440\n*        BYTE 2                                                         UAT38450\n*              1... ....           GS   GRAPHICS                        UAT38460\n*              .XXX XXXX                RESERVED                        UAT38470\nJFCRECFM DS    XL1                 RECORD FORMAT                        UAT38480\n*              10.. ....           F   FIXED                            UAT38490\n*              01.. ....           V   VARIABLE                         UAT38500\n*              11.. ....           U   UNDEFINED                        UAT38510\n*              001. ....           D   VARIABLE (ASCII)                 UAT38520\n*              ..1. ....           T   TRACK OVERFLOW                   UAT38530\n*              ...1 ....           B   BLOCKED                          UAT38540\n*              .... 1...           S   FIXED - STANDARD OR VARIABLE SPA UAT38550\n*              .... .10.           A   ANSI CONTROL CHARACTERS          UAT38560\n*              .... .01.           M   MACHINE CODE CONTROL CHARACTERS  UAT38570\n*              .... .00.               NO CONTROL CHARACTERS            UAT38580\n*              .... ...0               ALWAYS ZERO                      UAT38590\nJFCOPTCD DS    XL1                 OPTION CODES                         UAT38600\nJFCBLKSI DS    XL2                 MAXIMUM BLOCK SIZE                   UAT38610\nJFCLRECL DS    XL2                 LOGICAL RECORD LENGTH                UAT38620\nJFCNCP   DS    XL1                 NUMBER OF CHANNEL PROGRAMS           UAT38630\nJFCNTM   DS    XL1                 NUMBER OF TRACKS MASTER INDEX        UAT38640\nJFCRKP   DS    XL2                 RELATIVE KEY POSITION                UAT38650\nJFCCYLOF DS    XL1                 CYLINDER OVERFLOW TRACKS             UAT38660\nJFCDBUFN DS    XL1                 RESERVED                             UAT38670\nJFCINTVL DS    XL1                 QTAM: INTENTIONAL DELAY              UAT38680\nJFCCPRI  DS    XL1                 QTAM: PRIORITY                       UAT38690\nJFCSOWA  DS    XL2                 QTAM: LENGTH OF USER WORK AREA       UAT38700\n         ORG   JFCCPRI                                                  UAT38710\nJFCOUTLI DS    XL3                 SMF - SYSOUT LIMIT                   UAT38720\n         ORG                                                            UAT38730\n         DS    XL1                 RESERVED                             UAT38740\nJFCBNVOL DS    XL1                 NUMBER OF VOLUME SERIAL NUMBERS      UAT38750\nJFCBVOLS DS    XL30                VOLUME SERIAL NUMBERS                UAT38760\nJFCBEXTL DS    XL1                 RESERVED                             UAT38770\nJFCBEXAD DS    XL3                 TTR OF FIRST JFCB EXTENSION BLK      UAT38780\nJFCBPQTY DS    XL3                 PRIMARY QUANTITY OF DASD REQUIRED    UAT38790\nJFCBCTRI DS    XL1                 SPACE PARAMETERS                     UAT38800\nJFCBSQTY DS    XL3                 SECONDARY QUANTITY OF DASD REQUIRED  UAT38810\nJFCFLGS1 DS    XL1                 FLAG BYTE                            UAT38820\nJFCBDQTY DS    XL3                 QUANTITY OF DASD REQUIRED FOR DIRECT UAT38830\nJFCBSPNM DS    XL3                 ADDR WHERE JFCB CYLINDERS SPLIT      UAT38840\nJFCBABST DS    XL2                 TTR OF 1ST TRK TO BE ALLOCATED       UAT38850\nJFCBSBNM DS    XL3                 ADDR OF JFCB WHERE SPACE ALLOC       UAT38860\nJFCBDRLH DS    XL3                 AVERAGE DATA BLOCK LENGTH            UAT38870\nJFCBVLCT DS    XL1                 VOLUME COUNT                         UAT38880\nJFCBSPTN DS    XL1                 NO. TRKS/CYL SPLIT CYLINDER          UAT38890\n         SPACE 2                                                        UAT38900\n*********************************************************************** UAT38910\n*                                                                     * UAT38920\n*      UCB                   UNIT CONTROL BLOCK                       * UAT38930\n*                                                                     * UAT38940\n*********************************************************************** UAT38950\n         SPACE                                                          UAT38960\nUCB      DSECT                                                          UAT38970\n         IEFUCBOB                                                       UAT38980\n#UCBNAME EQU   UCBNAME-UCB         DEVICE NAME (ADDRESS)                UAT38990\n#UCBTYP  EQU   UCBTYP-UCB          DEVICE TYPE                          UAT39000\n#UCBXTN  EQU   UCBXTNB-UCB         UCB EXTENSION ADDRESS                UAT39010\n#UCBTR   EQU   UCBTR-UCBMT         NUMBER OF TEMP READ ERRORS           UAT39020\n#UCBTW   EQU   UCBTW-UCBMT         NUMBER OF TEMP WRITE ERRORS          UAT39030\n#UCBSIO  EQU   UCBSIO-UCBMT        NUMBER OF SIO OPERATIONS             UAT39040\n#UCBPR   EQU   UCBPR-UCBMT         NUMBER OF PERM READ ERRORS           UAT39050\n#UCBPW   EQU   UCBPW-UCBMT         NUMBER OF PERM WRITE ERRORS          UAT39060\n#UCBNB   EQU   UCBNB-UCBMT         NUMBER OF NOISE BLOCKS               UAT39070\n#UCBERG  EQU   UCBERG-UCBMT        NUMBER OF ERASE GAPS                 UAT39080\n#UCBCLN  EQU   UCBCLN-UCBMT        NUMBER OF CLEANER ACTIONS            UAT39090\n         END                                                            UAT39100\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "UATAPEJ1": {"ttr": 2315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x08\\x01\\x04$\\x9f\\x01\\x04(O\\x10\\x15\\x00\\x0c\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-10-10T10:15:08", "lines": 12, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBK JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*STEP1   EXEC  PGM=UATAPE,PARM='PRINT,PRINTMAX=1000,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='DUMP,DUMPMAX=5,CRT'\n//STEP1    EXEC  PGM=UATAPE,PARM='CRT,BLOCKS'\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=562,DISP=OLD,VOL=SER=DATAB3,LABEL=EXPDT=98000\n//*                  THIS IS A DFDSS TAPE.\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UATAPEJ2": {"ttr": 2317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00@\\x01\\x04$\\x9f\\x01\\x04(O\\x10\\x15\\x00\\x0c\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-10-10T10:15:40", "lines": 12, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBK JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*STEP1   EXEC  PGM=UATAPE,PARM='PRINT,PRINTMAX=1000,CRT'\n//*STEP1   EXEC  PGM=UATAPE,PARM='DUMP,DUMPMAX=5,CRT'\n//STEP1    EXEC  PGM=UATAPE,PARM='CRT,BLOCKS'\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=562,DISP=OLD,VOL=SER=DATAF3,LABEL=EXPDT=98000\n//*                  THIS IS AN FDR TAPE.\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UATAPE0": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00 \\x01\\x04$\\x9f\\x01\\x04$\\x9f\\x11\\x02\\x0fJ\\x0fF\\x00\\x00\\xd4\\xc5\\xd9\\xd9\\xc6\\xd3\\xc4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-09-05T00:00:00", "modifydate": "2004-09-05T11:02:20", "lines": 3914, "newlines": 3910, "modlines": 0, "user": "MERRFLD"}, "text": "UATAPE   TITLE 'UATAPE -- TAPE LABEL UTILITY PROGRAM'                   UAT00010\n*********************************************************************** UAT00020\n*                                                                     * UAT00030\n*                                                                     * UAT00040\n*                             U A T A P E                             * UAT00050\n*                                                                     * UAT00060\n*                                                                     * UAT00070\n*     PROGRAM NAME:  UATAPE                                           * UAT00080\n*                                                                     * UAT00090\n*     AUTHOR:        DAVID L. MERRIFIELD                              * UAT00100\n*                    UNIVERSITY OF ARKANSAS                           * UAT00110\n*                    COMPUTING SERVICES                               * UAT00120\n*                    155 RAZORBACK ROAD                               * UAT00130\n*                    FAYETTEVILLE, AR 72701                           * UAT00140\n*                    PHONE:  479-575-5829                             * UAT00150\n*                    FAX  :  479-575-4753                             * UAT00150\n*                    email:  dlm@uark.edu                             * UAT00150\n*                                                                     * UAT00160\n*     VERSION:       1.0       SEPTEMBER 15, 1981                     * UAT00170\n*                    1.1       OCTOBER   24, 1981                     * UAT00180\n*                    1.2       MAY       10, 1982                     * UAT00190\n*                    1.3       OCTOBER   27, 1982                     * UAT00200\n*                    1.4       APRIL     05, 1983                     * UAT00210\n*                    1.5       DECEMBER  29, 1985                     * UAT00220\n*                    1.6       MARCH     28, 1987                     * UAT00230\n*                    1.61      OCTOBER    1, 1990                     * UAT00240\n*                    1.7       JULY      16, 1992 (3480 SUPPORT ADDED)* UAT00250\n*                    1.71      JUNE       6, 1994 (FIX LTM PROBLEM)   * UAT00260\n*                    1.72      AUGUST    23, 1996 (FIX LTM/NL PROBLEM)* UAT00270\n*                                                                     * UAT00280\n*                                                                     * UAT00290\n*     DESCRIPTION:                                                    * UAT00300\n*         UATAPE IS A UTILITY PROGRAM THAT WILL READ AN ENTIRE        * UAT00310\n*         MAGNETIC TAPE VOLUME AND PRINT THE CONTENTS OF THE          * UAT00320\n*         VARIOUS FIELDS PRESENT IN THE LABEL RECORDS FOUND ON        * UAT00330\n*         IBM STANDARD-LABELED TAPES.  THE LABELS AND/OR THE          * UAT00340\n*         DATA FILES ON THE TAPE CAN BE PRINTED IN HEXADECIMAL        * UAT00350\n*         FORMAT IF DESIRED.  ALSO, UATAPE WILL COPY THE ENTIRE       * UAT00360\n*         TAPE VOLUME TO ANOTHER VOLUME.  NON-STANDARD OR NON-        * UAT00370\n*         LABELED TAPES ARE ALSO SUPPORTED, BUT ONLY MINIMAL          * UAT00380\n*         AMOUNTS OF INFORMATION CAN BE GLEANED FROM THESE TAPES.     * UAT00390\n*                                                                     * UAT00400\n*     PROGRAM REQUIREMENTS:                                           * UAT00410\n*         THIS VERSION OF UATAPE HAS BEEN TAILORED FOR USE UNDER      * UAT00420\n*         THE MVS/SP V1.3.5 OPERATING SYSTEM.  NO PROVISION HAS       * UAT00430\n*         BEEN MADE FOR ANY OTHER OPERATING SYSTEM.  UATAPE USES      * UAT00440\n*         ITS OWN INTERNAL CHANNEL PROGRAMS, WHICH IT EXECUTES        * UAT00450\n*         USING THE EXCP ACCESS METHOD.  ALSO, UATAPE INTERNALLY      * UAT00460\n*         FORCES THE TAPES THAT IT PROCESSES TO \"BYPASS LABEL         * UAT00470\n*         PROCESSING\" SO THAT IT CAN READ THE VOLUME AND DATA         * UAT00480\n*         SET LABELS WITHOUT INTERFERENCE FROM THE OPERATING          * UAT00490\n*         SYSTEM.  IF THE HOST OPERATING SYSTEM HAS A TAPE            * UAT00500\n*         MANAGEMENT SYSTEM INSTALLED (SUCH AS CA-1), IT WILL         * UAT00510\n*         PROBABLY BE NECESSARY TO INDICATE IN THE JCL THAT THE       * UAT00520\n*         TAPE BEING PROCESSED IS AN OUTSIDE, NON-TMS TAPE (SEE       * UAT00530\n*         JCL COMMENTS BELOW).                                        * UAT00540\n*                                                                     * UAT00550\n*         Tested on z/OS 1.3.  Works fine.                            * UAT00550\n*                                                                     * UAT00550\n*********************************************************************** UAT00560\n         EJECT                                                          UAT00570\n*********************************************************************** UAT00580\n*                                                                     * UAT00590\n*     DD-STATEMENT REQUIREMENTS:                                      * UAT00600\n*         DDNAME=STEPLIB  -- DEFINES THE LIBRARY IN WHICH UATAPE      * UAT00610\n*                            RESIDES IF NOT IN SYS1.LINKLIB           * UAT00620\n*         DDNAME=SYSPRINT -- DEFINES A SYSOUT=A PRINTED OUTPUT        * UAT00630\n*                            DATA SET                                 * UAT00640\n*         DDNAME=SYSUT1   -- DEFINES THE INPUT TAPE VOLUME            * UAT00650\n*         DDNAME=SYSUT2   -- DEFINES THE OUTPUT TAPE VOLUME IF        * UAT00660\n*                            COPYING TO BE DONE (OMITTED OTHERWISE)   * UAT00670\n*                                                                     * UAT00680\n*     SAMPLE JCL SETUP:                                               * UAT00690\n*                                                                     * UAT00700\n*         //AB123456 JOB (ACCOUNTING INFORMATION),'NAME',             * UAT00710\n*         //    CLASS=A,TIME=(,59),MSGLEVEL=(1,1)                     * UAT00720\n*         //   EXEC   PGM=UATAPE,PARM='...OPTIONS...'                 * UAT00730\n*         //STEPLIB  DD UNIT=SYSDA,DISP=SHR,DSN=UATAPE.LIBRARY        * UAT00740\n*         //SYSPRINT DD SYSOUT=A                                      * UAT00750\n*         //SYSUT1   DD UNIT=TAPE,DISP=OLD,VOL=SER=INTAPE             * UAT00760\n*         //SYSUT2   DD UNIT=TAPE,DISP=OLD,VOL=SER=OUTAPE,DCB=DEN=4   * UAT00770\n*         //                                                          * UAT00780\n*                                                                     * UAT00790\n*     CA-1 TAPE MANAGEMENT SYSTEM REQUIREMENTS:                       * UAT00800\n*                                                                     * UAT00810\n*         MOST TAPE MANAGEMENT SYSTEMS WILL NOT PERMIT UATAPE TO      * UAT00820\n*         RUN BECAUSE OF ITS POTENTIAL TO MOUNT, READ, AND WRITE      * UAT00830\n*         TAPES THAT HAVE NOT BEEN PROPERLY LOGGED INTO THEIR         * UAT00840\n*         TAPE CATALOGS.  CA-1 IS NO EXCEPTION.  IN ORDER FOR         * UAT00850\n*         UATAPE TO RUN UNDER CA-1, YOU MUST SPECIFY TO THE TMS       * UAT00860\n*         THAT THE TAPE BEING PROCESSED IS A NON-LIBRARIED TAPE.      * UAT00870\n*         THIS IS DONE BY SPECIFYING LABEL=EXPDT=98000 ON EACH        * UAT00880\n*         TAPE DD-STATEMENT:                                          * UAT00890\n*                                                                     * UAT00900\n*         //SYSUT1   DD UNIT=TAPE,DISP=OLD,VOL=SER=INTAPE,            * UAT00910\n*         //            LABEL=EXPDT=98000                             * UAT00920\n*         //SYSUT2   DD UNIT=TAPE,DISP=OLD,VOL=SER=OUTAPE,DCB=DEN=4,  * UAT00930\n*         //            LABEL=EXPDT=98000                             * UAT00940\n*                                                                     * UAT00950\n*         OTHER TAPE MANAGEMENT SYSTEMS MAY REQUIRE A SIMILAR         * UAT00960\n*         PROCEDURE, BUT THEY ARE NOT DISCUSSED HERE.                 * UAT00970\n*                                                                     * UAT00980\n*********************************************************************** UAT00990\n         EJECT                                                          UAT01000\n*********************************************************************** UAT01010\n*                                                                     * UAT01020\n*     PARM FIELD OPTIONS:                                             * UAT01030\n*                                                                     * UAT01040\n*         OPTIONS ARE SPECIFIED IN THE PARM= PARAMETER ON THE EXEC    * UAT01050\n*         STATEMENT.  EACH OPTION SHOULD BE SEPARATED BY A SINGLE     * UAT01060\n*         COMMA, WITH NO SPACES ALLOWED.  THE LIST OF VALID OPTIONS   * UAT01070\n*         FOLLOWS:                                                    * UAT01080\n*                                                                     * UAT01090\n*         LIST     - PRINT LABEL RECORD INFORMATION (DEFAULT)         * UAT01100\n*         COPY     - COPY SYSUT1 TAPE TO SYSUT2 TAPE                  * UAT01110\n*         DUMP     - PRINT ALL DATA RECORDS IN HEX FORMAT             * UAT01120\n*         DUMPLAB  - PRINT ALL LABEL RECORDS IN HEX FORMAT            * UAT01130\n*         DUMPALL  - PRINT ALL LABEL RECORDS AND DATA RECORDS IN      * UAT01140\n*                    HEXADECIMAL FORMAT                               * UAT01150\n*         BLOCKS   - PRINT SIZE OF DATA RECORDS                       * UAT01160\n*         PRINT    - PRINT ALL DATA RECORDS (EBCDIC FORMAT)           * UAT01170\n*         CRT      - OUTPUT IS FORMATTED FOR 80-COLUMN CRT SCREEN     * UAT01180\n*         ATOE     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED FROM    * UAT01190\n*                    ASCII TO EBCDIC                                  * UAT01200\n*         ETOA     - ALL LABELS AND DATA ON SYSUT1 TRANSLATED FROM    * UAT01210\n*                    EBCDIC TO ASCII                                  * UAT01220\n*         BYPASS   - BYPASSES LABEL CHECKING FOR SYSUT2 TAPE IF       * UAT01230\n*                    COPY ALSO SPECIFIED                              * UAT01240\n*         VERBATIM - DOES NOT CHANGE CONTENT OF DATA RECORDS (E.G.,   * UAT01250\n*                    WON'T CHANGE LABEL INFORMATION LIKE VOLUME       * UAT01260\n*                    SERIAL, DENSITY FIELD, ETC.)                     * UAT01270\n*         DUMPMAX=NNN  - SPECIFY MAXIMUM NUMBER OF BLOCKS TO DUMP IF  * UAT01280\n*                        DUMP, DUMPLAB, OR DUMPALL IS ALSO SPECIFIED  * UAT01290\n*         PRINTMAX=NNN - SPECIFY MAXIMUM NUMBER OF RECORDS TO PRINT   * UAT01300\n*                        IF PRINT SPECIFIED                           * UAT01310\n*         MAXFILES=NNN - SPECIFY MAXIMUM NUMBER OF FILES ON TAPE TO   * UAT01320\n*                        TO PROCESS                                   * UAT01330\n*         LTM      - IGNORE ANY LEADING TAPE MARKS ON THE SYSUT1 TAPE * UAT01340\n*         SKIPLAB  - SKIP WRITING ANY LABELS ON THE SYSUT2 TAPE       * UAT01350\n*                    WHILE COPYING IF COPY IS ALSO SPECIFIED.  IN     * UAT01360\n*                    EFFECT, SYSUT2 TAPE WILL BE A NON-LABELED TAPE   * UAT01370\n*                    AFTERWARDS                                       * UAT01380\n*         SKIPBAD  - SKIP OVER ANY BLOCKS OF DATA ON INPUT TAPE THAT  * UAT01390\n*                    CAUSE PERMANENT I/O ERRORS IN AN EFFORT TO       * UAT01400\n*                    RECOVER ANY DATA THAT FOLLOWS THE BAD BLOCK(S).  * UAT01410\n*                    (RECOMMEND USE WITH SKIPLAB AND COPY OPTIONS TO  * UAT01420\n*                    BUILD A NON-LABELED TAPE CONTAINING ONLY THE     * UAT01430\n*                    READABLE BLOCKS OF THE BAD TAPE.)                * UAT01440\n*                                                                     * UAT01450\n*********************************************************************** UAT01460\n         EJECT                                                          UAT01470\n*********************************************************************** UAT01480\n*                                                                     * UAT01490\n*     COPYING A TAPE:                                                 * UAT01500\n*         UATAPE CAN BE USED TO COPY ONE TAPE VOLUME TO ANOTHER.      * UAT01510\n*         TO DO SO, YOU WOULD HAVE TO SPECIFY THE \"COPY\" OPTION       * UAT01520\n*         AND SUPPLY A SYSUT1 DDCARD FOR THE INPUT TAPE AND A         * UAT01530\n*         SYSUT2 DDCARD FOR THE OUTPUT TAPE.  UATAPE REQUIRES         * UAT01540\n*         THAT THE SYSUT2 TAPE BE A STANDARD-LABELED TAPE, AND        * UAT01550\n*         WILL CHECK THE VOLUME SERIAL IN ITS LABEL WITH THE          * UAT01560\n*         VOLUME SERIAL IN THE SYSUT2 DDCARD.  AN ERROR WILL BE       * UAT01570\n*         PRINTED AND UATAPE WILL TERMINATE IF THE TWO DO NOT         * UAT01580\n*         MATCH.  USE BYPASS OPTION TO SKIP THE SYSTEM VOLUME         * UAT01590\n*         LABEL PROCESSING.  USE SKIPLAB TO CREATE A NON-LABELED      * UAT01600\n*         TAPE FROM A STANDARD LABELED TAPE.                          * UAT01610\n*                                                                     * UAT01620\n*     OUTPUT TAPE VOLUME SERIAL:                                      * UAT01630\n*         UATAPE WILL COPY ALL LABEL AND DATA RECORDS FROM THE        * UAT01640\n*         SYSUT1 TAPE TO THE SYSUT2 TAPE INTACT, WITH THE ONE         * UAT01650\n*         EXCEPTION THAT ALL REFERENCES TO THE SYSUT1 TAPE'S          * UAT01660\n*         VOLUME SERIAL ARE CHANGED TO THE SYSUT2 TAPE'S VOLUME       * UAT01670\n*         SERIAL.  IN EFFECT, THE OUTPUT TAPE'S VOLUME SERIAL         * UAT01680\n*         IS NOT CHANGED BY THE COPY OPERATION.  TAPES WITHOUT        * UAT01690\n*         LABELS, OR TAPES HAVING NON-STANDARD LABELS, ARE            * UAT01700\n*         COPIED VERBATIM.  NO DATA OR INFORMATION IS CHANGED         * UAT01710\n*         FOR SUCH TAPES DURING THE COPY OPERATION.  USE THE          * UAT01720\n*         VERBATIM OPTION TO PREVENT CHANGING THE VOLUME SERIAL       * UAT01730\n*         IN THE LABELS, THUS CREATING AN EXACT DUPLICATE OF THE      * UAT01740\n*         INPUT TAPE.                                                 * UAT01750\n*                                                                     * UAT01760\n*     OUTPUT TAPE DENSITY:                                            * UAT01770\n*         UATAPE WILL ALSO SET THE PROPER DENSITY FOR THE OUTPUT      * UAT01780\n*         TAPE VOLUME.  IT USES THE DENSITY PRESENT IN THE SYSUT2     * UAT01790\n*         DDCARD'S DCB DENSITY PARAMETER.  ALL REFERENCES TO THE      * UAT01800\n*         DENSITY IN THE TAPE LABELS ARE MODIFIED TO REFLECT THE      * UAT01810\n*         CORRECT VALUE, IF REQUIRED.  CURRENTLY, MODESET COMMANDS    * UAT01820\n*         ARE PRESENT IN UATAPE FOR DENSITIES OF 800, 1600, AND       * UAT01830\n*         6250 BPI ONLY.                                              * UAT01840\n*                                                                     * UAT01850\n*     TAPE DRIVE AND TAPE CONTROLLER:                                 * UAT01860\n*         ALTHOUGH SEVERAL AREAS WITHIN UATAPE SUPPORT THE VARIOUS    * UAT01870\n*         DENSITIES AND NUMBER OF TRACKS FOR ITEMS WITHIN A TAPE'S    * UAT01880\n*         DATA SET LABELS, THE ACTUAL EXCP COMMAND STRUCTURE IS       * UAT01890\n*         LIMITED TO IBM 3420 TAPE DRIVES WITH AN IBM 3803 TAPE       * UAT01900\n*         CONTROLLER.  POSITION OF SENSE INFORMATION, AND THE         * UAT01910\n*         ACTUAL CHANNEL COMMANDS MAY DIFFER FOR ANY OTHER TYPE       * UAT01920\n*         OF CONTROLLER OR TAPE DRIVE.                                * UAT01930\n*                                                                     * UAT01940\n*********************************************************************** UAT01950\n         EJECT                                                          UAT01960\n*********************************************************************** UAT01970\n*                                                                     * UAT01980\n*     TAPE MARKS:                                                     * UAT01990\n*         UATAPE ASSUMES THAT ALL TAPES HAVE TWO CONTIGUOUS           * UAT02000\n*         TAPE MARKS RECORDED AT THE END OF ALL DATA AND              * UAT02010\n*         LABEL INFORMATION.  ** WARNING ** IF YOU ATTEMPT            * UAT02020\n*         TO PROCESS A TAPE HAVING ONLY ONE TAPE MARK AT              * UAT02030\n*         THE END, UATAPE WILL PRODUCE UNPREDICTABLE RESULTS,         * UAT02040\n*         IN PARTICULAR, THE TAPE VOLUME MAY RUN OFF THE END          * UAT02050\n*         OF THE REEL.  IF YOU KNOW THAT A TAPE HAS ONLY A SINGLE     * UAT02060\n*         TAPE MARK AT THE END OF ITS DATA, AND YOU ALSO KNOW THE     * UAT02070\n*         NUMBER OF FILES ON THE TAPE, YOU CAN USE THE MAXFILES=      * UAT02080\n*         OPTION TO PREVENT UATAPE FROM PROCESSING DATA BEYOND        * UAT02090\n*         THE END OF THE LAST FILE.                                   * UAT02100\n*                                                                     * UAT02110\n*********************************************************************** UAT02120\n         SPACE 4                                                        UAT02130\n*********************************************************************** UAT02140\n*                                                                     * UAT02150\n*     DISCLAIMER:                                                     * UAT02160\n*                                                                     * UAT02170\n*         NEITHER THE AUTHOR, NOR THE UNIVERSITY OF ARKANSAS, CAN     * UAT02180\n*         OR WILL ASSUME ANY RESPONSIBILITY FROM OR LIABILITY FOR     * UAT02190\n*         THE USE AND OPERATION OF THIS PROGRAM, NOR ARE ANY          * UAT02200\n*         WARRANTIES OR GUARANTEES, EITHER EXPRESSED OR IMPLIED,      * UAT02210\n*         OFFERED FOR ITS USE OR RESULTS.  IT HAS BEEN TESTED AND     * UAT02220\n*         IS IN PRODUCTION USE AT THE UNIVERSITY OF ARKANSAS, SO      * UAT02230\n*         IT SHOULD BE REASONABLY FREE OF ERROR.  USE AT YOUR OWN     * UAT02240\n*         RISK.                                                       * UAT02250\n*                                                                     * UAT02260\n*********************************************************************** UAT02270\n         EJECT                                                          UAT02280\n*  MACROS                                                               UAT02290\n         MACRO                                                          UAT02300\n&LABEL   MOVEMSG &NAME                                                  UAT02310\n.* THIS MACRO MOVES A MESSAGE TO THE PRINT LINE                         UAT02320\n&LABEL   L     R15,=A(&NAME)                                            UAT02330\n         MVC   LINE(L'&NAME),0(R15)                                     UAT02340\n         MEND                                                           UAT02350\n         SPACE 2                                                        UAT02360\n         MACRO                                                          UAT02370\n&LABEL   STACK &REG                                                     UAT02380\n.* THIS MACRO PLACES THE CONTENTS OF A REGISTER ON THE PROGRAM STACK    UAT02390\n&LABEL   L     R15,STACKPTR                                             UAT02400\n         ST    &REG,0(,R15)                                             UAT02410\n         LA    R15,4(,R15)                                              UAT02420\n         ST    R15,STACKPTR                                             UAT02430\n         MEND                                                           UAT02440\n         SPACE 2                                                        UAT02450\n         MACRO                                                          UAT02460\n&LABEL   UNSTACK &REG                                                   UAT02470\n.* THIS MACRO RETRIEVES CONTENTS OF LAST STACK ENTRY TO A REGISTER      UAT02480\n&LABEL   L     R15,STACKPTR                                             UAT02490\n         S     R15,=F'4'                                                UAT02500\n         L     &REG,0(,R15)                                             UAT02510\n         ST    R15,STACKPTR                                             UAT02520\n         MEND                                                           UAT02530\n         SPACE 2                                                        UAT02540\n         MACRO                                                          UAT02550\n&LABEL   DISCARD                                                        UAT02560\n.* THIS MACRO DISCARDS CONTENTS OF LAST STACK ENTRY                     UAT02570\n&LABEL   L     R15,STACKPTR                                             UAT02580\n         S     R15,=F'4'                                                UAT02590\n         ST    R15,STACKPTR                                             UAT02600\n         MEND                                                           UAT02610\n         EJECT                                                          UAT02620\n*********************************************************************** UAT02630\n*                                                                     * UAT02640\n*    PROGRAM INITIALIZATION SECTION:                                  * UAT02650\n*                                                                     * UAT02660\n*      (1) SETUP BASE REGISTERS AND SAVE AREA POINTERS                * UAT02670\n*      (2) GET THE TIME OF DAY                                        * UAT02680\n*      (3) OPEN SYSPRINT AND SYSUT1 DATA CONTROL BLOCKS               * UAT02690\n*      (4) GET A 32K I/O BUFFER                                       * UAT02700\n*      (5) PROCESS PROGRAM OPTIONS                                    * UAT02710\n*      (6) OPEN SYSUT2 DATA CONTROL BLOCK (IF COPY OPTION)            * UAT02720\n*      (7) PROCESS SYSUT1 AND SYSUT2 VOLUME LABELS (IF ANY)           * UAT02730\n*                                                                     * UAT02740\n*********************************************************************** UAT02750\n         SPACE                                                          UAT02760\nUATAPE   START 0                                                        UAT02770\n         USING *,R15               SET UP TEMPORARY BASE                UAT02780\n         B     GO                  SKIP AROUND IDENTIFIER               UAT02790\n         DC    AL1(7),CL7'UATAPE'  DUMP IDENTIFIER                      UAT02800\nBASES    DC    A(UATAPE,UATAPE+4096,UATAPE+8192)   BASE ADDRESSES       UAT02810\nGO       DS    0H                  ALIGN TO HALFWORD                    UAT02820\n         STM   R14,R12,12(R13)     SAVE REGISTERS                       UAT02830\n         LM    R10,R12,BASES       LOAD 3 BASE REGISTERS                UAT02840\n         DROP  R15                 DROP TEMPORARY BASE REGISTER         UAT02850\n         USING UATAPE,R10,R11,R12  DECLARE PERMANENT BASES              UAT02860\n         ST    R13,SAVE+4          PERFORM                              UAT02870\n         LR    R15,R13               SAVE                               UAT02880\n         LA    R13,SAVE                AREA                             UAT02890\n         ST    R13,8(,R15)               CHAINING                       UAT02900\n         ST    R1,PARMADDR         SAVE PARM FIELD ADDR                 UAT02910\n         TIME  DEC                 GET THE TIME AND DATE                UAT02920\n         ST    R0,DOUBLE           SAVE THE TIME                        UAT02930\n         ED    TIME(9),DOUBLE      PLACE EDITED TIME IN LINE            UAT02940\n         BAL   R9,DATECONV         CONVERT DATE                         UAT02950\n         BAL   R9,OPEN1            GO OPEN SYSPRINT AND SYSUT1          UAT02960\n         BAL   R9,GETPARMS         GO INTERPRET PARM FIELD              UAT02970\n         BAL   R9,OPEN2            GO OPEN SYSUT2                       UAT02980\n         BAL   R9,LABELS           GO PROCESS SYSUT1/SYSUT2 LABELS      UAT02990\n         TM    FLAG,#SL            ARE THERE LABELS?                    UAT03000\n         BNO   NEWFILE             NO - SKIP                            UAT03010\n         TM    OPTIONS1,#SKIPLAB+#COPY                                  UAT03020\n         BNO   NEWFILE             NO - SKIP                            UAT03030\n         MOVEMSG MSG54             SKIPPING ALL LABELS ON OUTPUT        UAT03040\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT MSG OVER                 UAT03050\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03060\n         EJECT                                                          UAT03070\n*********************************************************************** UAT03080\n*                                                                     * UAT03090\n*   IF THE SYSUT1 TAPE CONTAINS STANDARD LABELS, THIS SECTION OF      * UAT03100\n*   CODE PROCESSES THE HDR1 AND HDR2 LABELS AT THE BEGINNING OF       * UAT03110\n*   EACH DATA SET ON THE TAPE.  IF THE COPY OPTION IS IN EFFECT,      * UAT03120\n*   THE LABEL INFORMATION IS MODIFIED TO MATCH THE SYSUT2 TAPE'S      * UAT03130\n*   CHARACTERISTICS (E.G., DENSITY, VOLUME SERIAL), AND THE LABEL     * UAT03140\n*   RECORDS ARE WRITTEN TO THAT TAPE.  IF THE DUMPLAB OR DUMPALL      * UAT03150\n*   OPTIONS ARE IN EFFECT, THE LABEL RECORDS ARE DUMPED.              * UAT03160\n*                                                                     * UAT03170\n*********************************************************************** UAT03180\n         SPACE                                                          UAT03190\nNEWFILE  EQU   *                                                        UAT03200\n         SR    R15,R15             MAKE SOMETHING ZERO                  UAT03210\n         ST    R15,MXLABERR        SET LABEL ERROR COUNT TO ZERO        UAT03220\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT03230\n         LA    R15,1(,R15)         INCREMENT BY ONE                     UAT03240\n         ST    R15,FILECNT         SAVE THE FILE COUNTER                UAT03250\n         CVD   R15,DOUBLE          CONVERT FILE COUNTER TO DECIMAL      UAT03260\n         UNPK  FILENO(4),DOUBLE(8) ALSO TO CHARACTER                    UAT03270\n         OI    FILENO+3,X'F0'      INSUIRE SIGN NIBBLE                  UAT03280\n         OI    FLAG2,#PRTFLAG      SET FLAG TO PRINT MSG41              UAT03290\n         TM    OPTIONS3,#MXFILES   WAS MAX FILES FLAG SET?              UAT03300\n         BNO   NOMAX               NO - SKIP CHECK                      UAT03310\n         C     R15,MAXFILES        ARE WE PAST MAXIMUM                  UAT03320\n         BNH   NOMAX               NO - CONTINUE                        UAT03330\n         CVD   R15,DOUBLE          CONVERT FILE COUNT                   UAT03340\n         MOVEMSG MSG55             TERMINATING THIS TAPE: XXX FILES     UAT03350\n         UNPK  LINE+MSG55C(5),DOUBLE(8)   TO CHARACTER                  UAT03360\n         OI    LINE+MSG55C+4,X'F0' INSURE SIGN                          UAT03370\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03380\n         OI    FLAG,#TAPEMRK       LET'S WRITE A TAPE MARK              UAT03390\n         BAL   R9,WRITE2           WRITE A LAST TAPE MARK               UAT03400\n         B     EPISTAT             AND TERMINATE                        UAT03410\n         SPACE                                                          UAT03420\nNOMAX    EQU   *                                                        UAT03430\n         TM    FLAG,#SL            IS THIS A STANDARD LABEL TAPE?       UAT03440\n         BNO   DSSTART             NO - SKIP TO PROCESS THE DATA        UAT03450\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT03460\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT03470\n         SPACE                                                          UAT03480\nLABLOOP1 EQU   *                                                        UAT03490\n         OI    FLAG2,#LABREC       INDICATE PROCESSING LABEL RECORD     UAT03500\n         BAL   R9,READ1            GO READ A BLOCK FROM SYSUT1          UAT03510\n         BAL   R9,TRANSLAB         GO TRANSLATE ASCII/EBCDIC            UAT03520\n         BAL   R9,FIXLAB           GO CHANGE VOLSER TO SYSUT2 VOLSER    UAT03530\n         BAL   R9,PRTLABEL         GO PRINT LABEL INFORMATION           UAT03540\n         BAL   R9,TRANSBCK         GO TRANSLATE EBCDIC/ASCII            UAT03550\n         BAL   R9,DUMPLAB          GO PRINT DUMP OF BLOCK               UAT03560\n         TM    OPTIONS1,#SKIPLAB   DO WE SKIP WRITING THE LABEL?        UAT03570\n         BO    LABSKIP1            YES                                  UAT03580\n         BAL   R9,WRITE2           GO WRITE TO SYSUT2                   UAT03590\nLABSKIP1 EQU   *                                                        UAT03600\n         TM    FLAG,#TAPEMRK       WAS THIS A TAPE MARK?                UAT03610\n         BNO   LABLOOP1            NO - CONTINUE LABEL LOOKING          UAT03620\n         MOVEMSG MSG8              --- TAPE MARK --- TAPE MARK ---      UAT03630\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT03640\n         TM    FLAG,#ENDTAPE       ARE WE AT THE END OF THE TAPE?       UAT03650\n         BO    EOT                 YES - GO TERMINATE                   UAT03660\n         TM    FLAG2,#INITHDR      DID WE FIND AN IEHINITT HDR1?        UAT03670\n         BO    EPILOG              YES - GOTTA QUIT NOW                 UAT03680\n         EJECT                                                          UAT03690\n*********************************************************************** UAT03700\n*                                                                     * UAT03710\n*    THE FOLLOWING SECTION READS THE DATA PORTION OF EACH DATA SET    * UAT03720\n*    ON THE SYSUT1 TAPE.  IF THE COPY OPTION IS IN EFFECT, THE DATA   * UAT03730\n*    IS WRITTEN TO THE SYSUT2 TAPE. IF THE DUMP OR DUMPALL OPTIONS    * UAT03740\n*    ARE IN EFFECT, EACH DATA BLOCK IS DUMPED.                        * UAT03750\n*    IF THE PRINT OPTION IS IN EFFECT, THE DATA IS PRINTED.  ALSO,    * UAT03760\n*    STATISTICS SUCH AS NUMBER OF BLOCKS, MAXIMUM AND MINIMUM SIZE    * UAT03770\n*    OF EACH BLOCK, NUMBER OF BYTES IN THE DATA SET, AND THE ACTUAL   * UAT03780\n*    DENSITY OF THE DATA ARE MAINTAINED FOR LATER USE.                * UAT03790\n*                                                                     * UAT03800\n*********************************************************************** UAT03810\n         SPACE                                                          UAT03820\nDSSTART  EQU   *                                                        UAT03830\n         NI    FLAG2,255-#LABREC   CLEAR LABEL PROCESSING FLAG          UAT03840\n         SR    R15,15              CLEAR BLOCK COUNTER                  UAT03850\n         ST    R15,BLOCKCNT        RESET BLOCK COUNTER                  UAT03860\n         ST    R15,BYTECNT         RESET BYTE COUNTER                   UAT03870\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT03880\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT03890\n         SPACE                                                          UAT03900\n*   LOOP OVER ALL RECORDS IN THE DATA FILE                              UAT03910\nDSLOOP   EQU   *                                                        UAT03920\n         BAL   R9,READ1            GO READ DATA SET BLOCK               UAT03930\n         BAL   R9,TRANSLTE         GO PERFORM ANY TRANSLATIONS          UAT03940\n         BAL   R9,WRITE2           GO WRITE IT TO SYSUT2                UAT03950\n         TM    FLAG,#TAPEMRK       DID WE HIT TAPE MARK?                UAT03960\n         BO    ENDDATA             YES - END OF DATA AREA               UAT03970\n         NI    FLAG,255-#LTMPRES   NO  - SHOW THAT WE HAVE DATA         UAT03980\n         TM    FLAG2,#PRTFLAG      ARE WE TO PRINT MSG41?               UAT03990\n         BNO   NOMSG41B            NO - SKIP PRINTING IT                UAT04000\n         NI    FLAG2,255-#PRTFLAG  RESET THE FLAG                       UAT04010\n         MOVEMSG MSG41             MOVE MESSAGE TO PRINT LINE           UAT04020\n         MVC   LINE+MSG41F(4),FILENO   MOVE IN FILE NUMBER              UAT04030\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT04040\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT04050\nNOMSG41B EQU   *                                                        UAT04060\n         L     R15,BYTECNT         LOAD BYTE COUNTER                    UAT04070\n         AH    R15,RECLEN          ADD THIS BLOCK'S LENGTH              UAT04080\n         ST    R15,BYTECNT         SAVE NEW BYTE COUNTER                UAT04090\n         L     R15,TBYTECNT        LOAD BYTE COUNTER                    UAT04100\n         AH    R15,RECLEN          ADD THIS BLOCK'S LENGTH              UAT04110\n         ST    R15,TBYTECNT        SAVE NEW BYTE COUNTER                UAT04120\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT04130\n         LTR   R15,R15             IS BLOCK COUNT ZERO?                 UAT04140\n         BNZ   NOTFIRST            NO - NOT FIRST BLOCK                 UAT04150\n         MVC   MAXBLK(2),RECLEN    SAVE NEW MAXIMUM BLOCK SIZE          UAT04160\n         MVC   MINBLK(2),RECLEN    SAVE NEW MINIMUM BLOCK SIZE          UAT04170\n         SPACE                                                          UAT04180\n*   MAINTAIN BLOCK COUNTER AND MIN/MAX BLOCK SIZES                      UAT04190\nNOTFIRST EQU   *                                                        UAT04200\n         LA    R15,1(,R15)         INCREMENT THE COUNTER BY 1           UAT04210\n         ST    R15,BLOCKCNT        SAVE NEW COUNT                       UAT04220\n         LH    R15,RECLEN          LOAD BLOCK'S LENGTH                  UAT04230\n         CH    R15,MAXBLK          IS IT LARGER THAN BEFORE?            UAT04240\n         BNH   CHKMIN              NO - BRANCH                          UAT04250\n         STH   R15,MAXBLK          SAVE NEW MAXIMUM                     UAT04260\nCHKMIN   EQU   *                                                        UAT04270\n         CH    R15,MINBLK          IS IT SMALLER THAN BEFORE?           UAT04280\n         BNL   DOBLOCKS            NO - BRANCH                          UAT04290\n         STH   R15,MINBLK          SAVE NEW MINIMUM                     UAT04300\nDOBLOCKS EQU   *                                                        UAT04310\n         BAL   R9,BLOCKS           GO TO BLOCKS SUBROUTINE              UAT04320\n         BAL   R9,DUMPBLK          GO DUMP THE BLOCK                    UAT04330\n         BAL   R9,PRINTBLK         GO PRINT THE BLOCK                   UAT04340\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT04350\n         BCT   R15,DSLOOP          IF NOT 1ST BLOCK, LOOP BACK          UAT04360\n         SPACE                                                          UAT04370\n         BAL   R9,SENSE1           GO GET SENSE INFORMATION FOR SYSUT1  UAT04380\n*   IF CARTRIDGE, INDICATE WHETHER IN IDRC FORMAT                       UAT04390\n         TM    FLAG2,#CART1        IS THIS A 3480 CART?                 UAT04400\n         BNO   NOTCART1            NO - SKIP                            UAT04410\n         MOVEMSG MSG60             IDRC DATA COMPRESSION IS OFF         UAT04420\n         NI    FLAG3,255-#IDRC1    RESET IDRC FLAG                      UAT04430\n         NI    #SENSE4,X'C0'       CLEAR BITS WE DON'T WANT             UAT04440\n         CLI   #SENSE4,X'80'       IS IDRC ON?                          UAT04450\n         BNE   NOIDRC1             NO - SKIP                            UAT04460\n         OI    FLAG3,#IDRC1        SET IDRC FLAG                        UAT04470\n         MVC   LINE+MSG60A(4),=C'ON. ' SWITCH MSG TO ON                 UAT04480\nNOIDRC1  EQU   *                                                        UAT04490\n         BAL   R9,PRINTIT          PRINT MSG                            UAT04500\n         ICM   R15,15,DEN38K+DENTABB         38K BPI                    UAT04510\n         MVC   DENSITY1(4),DEN38K+DENTABC    38K BPI                    UAT04520\n         MVC   INIRG(6),DEN38K+DENTABN       IRG SIZE                   UAT04530\n         B     PRINT27             AND LOOP OUT                         UAT04540\nNOTCART1 EQU   *                                                        UAT04550\n         ICM   R15,15,DEN1600+DENTABB        1600 BPI                   UAT04560\n         MVC   DENSITY1(4),DEN1600+DENTABC   1600 BPI                   UAT04570\n         MVC   INIRG(6),DEN1600+DENTABN      IRG SIZE                   UAT04580\n         TM    #SENSE6,#BIT3       #BIT3=0 FOR 1600 BPI                 UAT04590\n         BZ    PRINT27             SKIP TO PRINT THE MSG                UAT04600\n         ICM   R15,15,DEN6250+DENTABB        6250 BPI                   UAT04610\n         MVC   DENSITY1(4),DEN6250+DENTABC   6250 BPI                   UAT04620\n         MVC   INIRG(6),DEN6250+DENTABN      IRG SIZE                   UAT04630\n         TM    #SENSE6,#BIT4       #BIT4=1 FOR 6250, #BIT4=0 FOR 800    UAT04640\n         BO    PRINT27             SKIP TO PRINT THE MSG                UAT04650\n         ICM   R15,15,DEN800+DENTABB         800 BPI                    UAT04660\n         MVC   DENSITY1(4),DEN800+DENTABC    800 BPI                    UAT04670\n         MVC   INIRG(6),DEN800+DENTABN       IRG SIZE                   UAT04680\nPRINT27  EQU   *                                                        UAT04690\n         ST    R15,DENSYS1         SAVE BYTES PER FOOT                  UAT04700\n         B     DSLOOP              LOOP BACK FOR NEXT BLOCK             UAT04710\n         EJECT                                                          UAT04720\n*********************************************************************** UAT04730\n*                                                                     * UAT04740\n*    WHEN A TAPE MARK HAS BEEN DETECTED SIGNALING END-OF-FILE ON      * UAT04750\n*    THE DATA PORTION OF THE DATA SET ON SYSUT1, THE BLOCKS OPTION    * UAT04760\n*    IS WRAPPED UP FOR THIS FILE, THE FILE LENGTH IS PRINTED FOR      * UAT04770\n*    SYSUT1 (AND SYSUT2 IF THE COPY OPTION IS IN EFFECT), AND THE     * UAT04780\n*    ACTUAL BLOCK COUNT FOR THE FILE IS PRINTED.                      * UAT04790\n*                                                                     * UAT04800\n*********************************************************************** UAT04810\n         SPACE                                                          UAT04820\nENDDATA  EQU   *                                                        UAT04830\n         MVC   DBLKCT(4),DUMPMAX+OPTVALUE   RESTORE MAXIMUM DUMP VALUE  UAT04840\n         MVC   PBLKCT(4),PRINTMAX+OPTVALUE  RESTORE MAXIMUM PRINT VALUE UAT04850\n         TM    FLAG,#SL+#ENDTAPE   STD LABEL AND TWO TAPE MARKS?        UAT04860\n         BO    NULLFILE            YES - NULL DATA FILE                 UAT04870\n         TM    FLAG,#SL            IS THIS A STD LABEL TAPE?            UAT04880\n         BO    DATASTAT            YES - SKIP NL CHECK                  UAT04890\n         TM    FLAG,#ENDTAPE       ARE WE AT THE END OF NL TAPE?        UAT04900\n         BNO   DATASTAT            NO  - GO PRINT FILE STATS            UAT04910\n         MOVEMSG MSG8              --- TAPE MARK ---                    UAT04920\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT04930\n         B     EOT                 NOW TERMINATE PROGRAM                UAT04940\n         SPACE                                                          UAT04950\nNULLFILE EQU   *                                                        UAT04960\n         NI    FLAG,255-#ENDTAPE   RESET 2-TAPE-MARK FLAG               UAT04970\n         L     R15,BSTATBUF        LOAD CURRENT STAT ENTRY ADDR         UAT04980\n         MVC   STATLEN(4,R15),=C'....' SHOW NULL FILE LENGTH            UAT04990\n         MOVEMSG MSG43             NULL DATA FILE                       UAT05000\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05010\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05020\n         UNPK  LINE+MSG43F(4),DOUBLE(8)    CONVERT TO CHARACTER         UAT05030\n         OI    LINE+MSG43F+3,X'F0' INSURE SIGN NIBBLE                   UAT05040\n         BAL   R9,PRINTIT          GO PRINT MSG                         UAT05050\n         MOVEMSG MSG8              --- TAPE MARK ---                    UAT05060\n         BAL   R9,PRINTIT          GO PRINT MSG                         UAT05070\n         B     LABLOOP2            GO BEGIN PROCESSING EOF LABELS       UAT05080\n         SPACE                                                          UAT05090\nDATASTAT EQU   *                                                        UAT05100\n         TM    FLAG,#LTMPRES       LEADING TAPE MARK?                   UAT05110\n         BO    NOSTATS             YES - DON'T DO STATS                 UAT05120\n         BAL   R9,BLOCKS           PRINT BLOCKS ACCUMULATION            UAT05130\n         MOVEMSG MSG27             SYSUT1 DENSITY AND FILE LENGTH       UAT05140\n         MVC   LINE+MSG27D(4),DENSITY1  MOVE IN SYSUT1 DENSITY          UAT05150\n         L     R0,BYTECNT          NUMBER OF BYTES IN DATA SET          UAT05160\n         SRDA  R0,32               PREPARE FOR DIVIDE                   UAT05170\n         D     R0,DENSYS1          CALCULATE NO. OF INCHES              UAT05180\n         L     R14,BLOCKCNT        NUMBER OF BLOCKS IN DATA SET         UAT05190\n         MH    R14,INIRG           SIMULATE MULTIPLYING                 UAT05200\n         SRDA  R14,32                  BY A                             UAT05210\n         D     R14,INIRG+2                FRACTION                      UAT05220\n         AR    R1,R15              ADD GAP LENGTH TO DATA LENGTH        UAT05230\n         SR    R0,R0               PREPARE FOR DIVIDE                   UAT05240\n         D     R0,=F'12'           CONVERT INCHES TO FEET               UAT05250\n         LTR   R1,R1               ZERO FEET?                           UAT05260\n         BNZ   NOTLT1              NO - SKIP                            UAT05270\n         LA    R1,1                SHOW AT LEAST 1 FOOT                 UAT05280\n         MVI   LINE+MSG27B-2,C'<'  SHOW LESS THAN                       UAT05290\nNOTLT1   EQU   *                                                        UAT05300\n         C     R1,=F'2'            LESS THAN TWO FEET?                  UAT05310\n         BNL   NOTLT2              NO - SKIP                            UAT05320\n         MVC   LINE+MSG27B+6(2),=C'OO'   MAKE FEET INTO FOOT            UAT05330\nNOTLT2   EQU   *                                                        UAT05340\n         CVD   R1,DOUBLE           MAKE IT DECIMAL                      UAT05350\n         A     R1,TOTFEET          ADD TO CURRENT LENGTH CNTR           UAT05360\n         ST    R1,TOTFEET          SAVE NEW VALUE                       UAT05370\n         UNPK  LINE+MSG27B(4),DOUBLE(8)  MAKE IT CHARACTER              UAT05380\n         OI    LINE+MSG27B+3,X'F0' INSURE SIGN NIBBLE                   UAT05390\n         L     R15,BSTATBUF        LOAD CURRENT STAT BUF ADDR           UAT05400\n         MVC   STATLEN(4,R15),LINE+MSG27B   SAVE LENGTH FOR STATS       UAT05410\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT05420\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT05430\n         BNO   NO2LEN              NO - SKIP                            UAT05440\n         MOVEMSG MSG40             SYSUT2 LENGTH                        UAT05450\n         L     R0,BYTECNT          NUMBER OF BYTES IN DATA SET          UAT05460\n         SRDA  R0,32               PREPARE FOR DIVIDE                   UAT05470\n         D     R0,DENSYS2          CALCULATE LENGTH IN INCHES           UAT05480\n         L     R14,BLOCKCNT        NUMBER OF BLOCKS IN DATA SET         UAT05490\n         MH    R14,OUTIRG          SIMULATE MULTIPLYING                 UAT05500\n         SRDA  R14,32                  BY A                             UAT05510\n         D     R14,OUTIRG+2               FRACTION                      UAT05520\n         AR    R1,R15              ADD GAP LENGTH TO DATA LENGTH        UAT05530\n         SR    R0,R0               PREPARE FOR DIVIDE                   UAT05540\n         D     R0,=F'12'           CONVERT LENGTH TO FEET               UAT05550\n         LTR   R1,R1               ZERO FEET?                           UAT05560\n         BNZ   NOTLT1B             NO - SKIP                            UAT05570\n         LA    R1,1                SHOW AT LEAST 1 FOOT                 UAT05580\n         MVI   LINE+MSG40B-2,C'<'  SHOW LESS THAN                       UAT05590\nNOTLT1B  EQU   *                                                        UAT05600\n         C     R1,=F'2'            LESS THAN TWO FEET?                  UAT05610\n         BNL   NOTLT2B             NO - SKIP                            UAT05620\n         MVC   LINE+MSG40B+6(2),=C'OO'   MAKE FEET INTO FOOT            UAT05630\nNOTLT2B  EQU   *                                                        UAT05640\n         CVD   R1,DOUBLE           MAKE IT DECIMAL                      UAT05650\n         A     R1,TOTFEET2         ADD TO TOTAL SYSUT2 LENGTH           UAT05660\n         ST    R1,TOTFEET2         SAVE NEW LENGTH                      UAT05670\n         UNPK  LINE+MSG40B(4),DOUBLE(8)  MAKE IT CHARACTER              UAT05680\n         OI    LINE+MSG40B+3,X'F0' INSURE SIGN NIBBLE                   UAT05690\n         MVC   LINE+MSG40D(4),DENSITY2  MOVE IN SYSUT2 DENSITY          UAT05700\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT05710\nNO2LEN   EQU   *                                                        UAT05720\n         MOVEMSG MSG18             FILE XXXX CONTAINS YYYYY BLOCKS      UAT05730\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05740\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05750\n         UNPK  LINE+MSG18F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05760\n         OI    LINE+MSG18F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05770\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05780\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05790\n         UNPK  LINE+MSG18F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05800\n         OI    LINE+MSG18F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05810\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT05820\n         CVD   R15,DOUBLE          CONVERT IT TO DECIMAL                UAT05830\n         UNPK  LINE+MSG18D(6),DOUBLE(8)   CONVERT TO PRINTABLE          UAT05840\n         OI    LINE+MSG18D+5,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05850\n         BCT   R15,NOTEQ1          BRANCH IF MORE THAN ONE BLOCK        UAT05860\n         MVC   LINE+MSG18D+12(2),=C'. '   MAKE \"BLOCKS\" INTO \"BLOCK\"    UAT05870\nNOTEQ1   EQU   *                                                        UAT05880\n         LH    R15,MAXBLK          LOAD MAXIMUM BLKSIZE                 UAT05890\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05900\n         UNPK  LINE+MSG18X(5),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05910\n         OI    LINE+MSG18X+4,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05920\n         LH    R15,MINBLK          LOAD MINIMUM BLKSIZE                 UAT05930\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT05940\n         UNPK  LINE+MSG18N(5),DOUBLE(8)    CONVERT TO PRINTABLE         UAT05950\n         OI    LINE+MSG18N+4,X'F0' MAKE LAST DIGIT PRINTABLE            UAT05960\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT05970\n         MOVEMSG MSG62             FILE XXXX CONTAINS XXXX BYTES        UAT05980\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT05990\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT06000\n         UNPK  LINE+MSG62F(4),DOUBLE(8)    CONVERT TO PRINTABLE         UAT06010\n         OI    LINE+MSG62F+3,X'F0' MAKE LAST DIGIT PRINTABLE            UAT06020\n         L     R15,BYTECNT         GET TOTAL NUMBER OF BYTES            UAT06030\n         CVD   R15,DOUBLE          CONVERT TO                           UAT06040\n         MVC   LINE+MSG62D(15),=X'4020206B2020206B2020206B202120'       UAT06050\n         EDMK  LINE+MSG62D(15),DOUBLE+2    PRINTABLE DECIMAL            UAT06060\n         MVC   LINE+MSG62D(40),0(R1)    SHIFT OVER FOR APPEARANCE       UAT06070\n*        UNPK  LINE+MSG62D(10),DOUBLE(8)   PRINTABLE DECIMAL            UAT06080\n*        OI    LINE+MSG62D+9,X'F0'  MAKE LAST DIGIT PRINTABLE           UAT06090\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06100\n         MOVEMSG MSG8              --- TAPE MARK --- TAPE MARK ---      UAT06110\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06120\nNOSTATS  EQU   *                                                        UAT06130\n         TM    FLAG,#SL            IS THIS STANDARD LABEL TAPE?         UAT06140\n         BNO   NEWFILE             NO - DO NOT PROCESS LABELS           UAT06150\n         EJECT                                                          UAT06160\n*********************************************************************** UAT06170\n*                                                                     * UAT06180\n*    THIS SECTION OF CODE PROCESSES ANY END-OF-FILE LABELS ON THE     * UAT06190\n*    SYSUT1 TAPE (IF IT CONTAINS STANDARD LABELS).  THE INFORMATION   * UAT06200\n*    IN EACH EOF1 AND EOF2 (AND POSSIBLY EOV1 AND EOV2) LABEL IS      * UAT06210\n*    PRINTED (SOME INFORMATION IS OMITTED SINCE IT DUPLICATES THAT    * UAT06220\n*    FOUND IN THE HDR1 AND HDR2 LABEL RECORDS).  IF THE COPY OPTION   * UAT06230\n*    IS IN EFFECT, THE LABEL RECORDS ARE WRITTEN TO THE SYSUT2        * UAT06240\n*    TAPE.  IF THE DUMPLAB OR DUMPALL OPTIONS ARE IN EFFECT, THE      * UAT06250\n*    LABEL RECORDS ARE DUMPED.                                        * UAT06260\n*                                                                     * UAT06270\n*********************************************************************** UAT06280\n         SPACE                                                          UAT06290\nLABLOOP2 EQU   *                                                        UAT06300\n         OI    FLAG2,#LABREC       INDICATE PROCESSING LABEL RECORD     UAT06310\n         BAL   R9,READ1            GO READ LABEL BLOCK                  UAT06320\n         BAL   R9,TRANSLAB         GO PERFORM ANY TRANSLATIONS          UAT06330\n         BAL   R9,FIXLAB           GO CHANGE VOLSER TO SYSUT2 VOLSER    UAT06340\n         BAL   R9,PRTLABEL         GO PRINT LABEL INFORMATION           UAT06350\n         BAL   R9,TRANSBCK         GO TRANSLATE ASCII LABEL BACK        UAT06360\n         BAL   R9,DUMPLAB          GO DUMP LABEL INFORMATION            UAT06370\n         TM    OPTIONS1,#SKIPLAB   DO WE SKIP WRITING LABEL?            UAT06380\n         BO    LABSKIP2            YES                                  UAT06390\n         BAL   R9,WRITE2           GO WRITE IT TO SYSUT2                UAT06400\nLABSKIP2 EQU   *                                                        UAT06410\n         TM    FLAG,#TAPEMRK       DID WE HIT TAPE MARK?                UAT06420\n         BNO   LABLOOP2            NO - CONTINUE WITH NEXT BLOCK        UAT06430\n         MOVEMSG MSG8              --- TAPE MARK -----------------      UAT06440\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT06450\n         L     R15,BSTATBUF        LOAD STAT BUF ENTRY ADDR             UAT06460\n         LA    R15,WSTATBUF(,R15)  POINT TO NEXT ENTRY                  UAT06470\n         ST    R15,BSTATBUF        SAVE NEW ENTRY ADDR                  UAT06480\n         TM    FLAG2,#EOV          WAS END-OF-VOLUME LABEL FOUND?       UAT06490\n         BNO   NEWFILE             NO - CONTINUE TO NEXT FILE           UAT06500\nEOT      EQU   *                                                        UAT06510\n         MOVEMSG MSG1              END OF TAPE MESSAGE                  UAT06520\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT06530\n         OI    FLAG,#TAPEMRK       GO WRITE A TAPE MARK                 UAT06540\n         BAL   R9,WRITE2             FOR INSURANCE SAKE                 UAT06550\n         SPACE                                                          UAT06560\nEPISTAT  EQU   *                                                        UAT06570\n         BAL   R9,EOTSTATS         GO PRINT END OF TAPE STATS           UAT06580\n         MOVEMSG MSG68             UATAPE - NORMAL END OF EXECUTION'    UAT06590\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT06600\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT06610\n         EJECT                                                          UAT06620\n*********************************************************************** UAT06630\n*                                                                     * UAT06640\n*   EPILOG --- PROGRAM TERMINATION SECTION                              UAT06650\n*                                                                     * UAT06660\n*********************************************************************** UAT06670\n         SPACE                                                          UAT06680\nEPILOG   EQU   *                                                        UAT06690\n         CLOSE (SYSPRINT,,SYSUT1,REWIND,SYSUT2,REWIND)                  UAT06700\n         L     R1,BUFADDR          LOAD BUFFER POINTER                  UAT06710\n         LTR   R1,R1               DID WE EVER GET ONE?                 UAT06720\n         BZ    NOFREE1             NO - SKIP FREEMAIN                   UAT06730\n         FREEMAIN R,LV=32760,A=(1) FREE UP THE BUFFER                   UAT06740\nNOFREE1  EQU   *                                                        UAT06750\n         L     R1,ASTATBUF         LOAD BUFFER POINTER                  UAT06760\n         LTR   R1,R1               DID WE EVER GET ONE?                 UAT06770\n         BZ    NOFREE2             NO - SKIP FREEMAIN                   UAT06780\n         FREEMAIN R,LV=LSTATBUF,A=(1) FREE UP THE BUFFER                UAT06790\nNOFREE2  EQU   *                                                        UAT06800\n         L     13,4(,13)           RESTORE SAVE REGISTER                UAT06810\n         L     R14,12(,R13)        RESTORE RETURN ADDR                  UAT06820\n         SR    R15,R15             CLEAR REGISTER 15                    UAT06830\n         IC    R15,RETCODE         LOAD RETURN CODE                     UAT06840\n         LM    R0,R12,20(R13)      RESTORE REMAINING REGS               UAT06850\n         BR    R14                 RETURN TO SYSTEM                     UAT06860\n         EJECT                                                          UAT06870\n*********************************************************************** UAT06880\n*                                                                     * UAT06890\n*     DATECONV                                                        * UAT06900\n*                                                                     * UAT06910\n*           THIS ROUTINE CONVERTS THE PACKED 00YYDDDC JULIAN          * UAT06920\n*           DATE FROM THE TIME MACRO TO CHARACTER YY/MM/DD.           * UAT06930\n*                                                                     * UAT06940\n*********************************************************************** UAT06950\n         SPACE                                                          UAT06960\nDATECONV EQU   *                                                        UAT06970\n         STACK R9                  SAVE RETURN ADDRESS ON STACK         UAT06980\n         ST    R1,DOUBLE+4         STICK PACKED DATE INTO WORK AREA     UAT06990\n         XC    DOUBLE(6),DOUBLE    ZERO OUT YEAR TO LEAVE PACKED DAYS   UAT07000\n         CVB   R0,DOUBLE           CONVERT DAY COUNT TO BINARY          UAT07010\n         SRL   R1,12               LET'S GET THE DATE NOW               UAT07020\n         ST    R1,DOUBLE+4         STICK PACKED YEAR INTO WORK AREA     UAT07030\n         OI    DOUBLE+7,X'0F'      MAKE SURE SIGN IS OK                 UAT07040\n         UNPK  @YEAR(2),DOUBLE(8)  CONVERT YEAR TO CHARACTER            UAT07050\n         OI    @YEAR+1,X'F0'       INSURE SIGN                          UAT07060\n         CVB   R1,DOUBLE           CONVERT YEAR TO BINARY               UAT07070\n         ST    R1,DOUBLE           STORE YEAR FOR LEAP TEST             UAT07080\n         LA    R15,28              28 DAYS IN FEB NON-LEAP              UAT07090\n         TM    DOUBLE+3,X'03'      IS THIS A LEAP YEAR?                 UAT07100\n         BNZ   NOTLEAP             NO - SKIP CORRECTING CODE            UAT07110\n         LA    R15,29              29 DAYS IN FEB LEAP                  UAT07120\nNOTLEAP  EQU   *                                                        UAT07130\n         STH   R15,@FEB            SAVE NO. DAYS IN FEB                 UAT07140\n         LA    R14,@JAN            POINT TO DAY COUNT LIST              UAT07150\nDAYLOOP  EQU   *                                                        UAT07160\n         SH    R0,0(,R14)          SUBTRACT DAY COUNT FOR MONTH         UAT07170\n         BNP   DAYEND              IF <1 THEN WE FOUND MONTH            UAT07180\n         LA    R14,2(,R14)         POINT TO NEXT DAY COUNT              UAT07190\n         B     DAYLOOP             AND LOOP BACK                        UAT07200\nDAYEND   EQU   *                                                        UAT07210\n         AH    R0,0(,R14)          ADD DAY COUNT BACK                   UAT07220\n         CVD   R0,DOUBLE           CONVERT DAY TO DECIMAL               UAT07230\n         UNPK  @DAY(2),DOUBLE(8)   CONVERT DAY TO CHARACTER             UAT07240\n         OI    @DAY+1,X'F0'        INSURE SIGN                          UAT07250\n         LA    R15,@JAN-2          CALCULATE MONTH                      UAT07260\n         SR    R14,R15               ...                                UAT07270\n         SRL   R14,1                 ...                                UAT07280\n         CVD   R14,DOUBLE          CONVERT MONTH TO DECIMAL             UAT07290\n         UNPK  @MONTH(2),DOUBLE(8) CONVERT MONTH TO CHARACTER           UAT07300\n         OI    @MONTH+1,X'F0'      INSURE SIGN                          UAT07310\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT07320\n         BR    R9                  RETURN TO CALLER                     UAT07330\n         EJECT                                                          UAT07340\n*********************************************************************** UAT07350\n*                                                                     * UAT07360\n*     GETPARMS                                                        * UAT07370\n*                                                                     * UAT07380\n*           THIS ROUTINE PROCESSES THE PARM FIELD FOR ANY             * UAT07390\n*           OPTIONS THAT THE USER MAY HAVE SPECIFIED.                 * UAT07400\n*                                                                     * UAT07410\n*********************************************************************** UAT07420\n         SPACE                                                          UAT07430\nGETPARMS EQU   *                                                        UAT07440\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT07450\n         L     R3,PARMADDR         LOAD ORIGINAL PARM ADDRESS           UAT07460\n         L     R3,0(,R3)           POINT TO PARM FIELD                  UAT07470\n         LH    R6,0(,R3)           LOAD PARM FIELD LENGTH               UAT07480\n         LTR   R6,R6               IS THE LENGTH ZERO?                  UAT07490\n         BZ    PRTPARMS            YES - NO PARM FIELD                  UAT07500\n         LA    R3,2(,R3)           POINT TO PARM FIELD TEXT             UAT07510\nFINDCOMA EQU   *                                                        UAT07520\n         LR    R15,R3              SAVE POINTER                         UAT07530\nLOOPCOMA EQU   *                                                        UAT07540\n         CLI   0(R15),C','         IS THIS CHARACTER A COMMA?           UAT07550\n         BE    ENDCOMMA            YES - OUT OF LOOP                    UAT07560\n         CLI   0(R15),C'='         IS THIS CHARACTER AN EQUALS?         UAT07570\n         BE    ENDEQUAL            YES - OUT OF LOOP                    UAT07580\n         LA    R15,1(,R15)         POINT TO NEXT CHARACTER              UAT07590\n         BCT   R6,LOOPCOMA         LOOP BACK                            UAT07600\n         LA    R6,1                MAKE LENGTH 1 FOR NEXT BCT           UAT07610\nENDCOMMA EQU   *                                                        UAT07620\n         LR    R14,R15             COPY ADDR OF COMMA                   UAT07630\n         SR    R14,R3              CALCULATE LENGTH OF PARAMETER        UAT07640\n         BZ    PARMINV             IF ZERO, IT'S INVALID                UAT07650\n         C     R14,=F'8'           IS LENGTH GREATER THAN 8?            UAT07660\n         BH    PARMINV             YES - SHOW IT'S INVALID              UAT07670\n         BCTR  R14,0               GET EXECUTABLE LENGTH                UAT07680\n         MVC   PARM(8),=8C' '      FILL WORK AREA W/BLANKS              UAT07690\n         EX    R14,MOVEIT          MOVE PARAMETER TO WORK AREA          UAT07700\n         LA    R4,OPTLIST          POINT TO OPTION LIST                 UAT07710\n         LA    R5,NUMOPTS          NUMBER OF VALID OPTIONS              UAT07720\nOPTLOOP1 EQU   *                                                        UAT07730\n         CLC   OPTNAME(8,R4),PARM  IS THIS THE SOUGHT FOR PARM?         UAT07740\n         BE    HAVEOPT             YES - GO PROCESS IT                  UAT07750\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT07760\n         BCT   R5,OPTLOOP1         LOOP BACK FOR THIS ONE               UAT07770\n         B     PARMINV             PARAMETER IS INVALID                 UAT07780\nHAVEOPT  EQU   *                                                        UAT07790\n         CLI   OPTTYPE(R4),OPTKEYWD   IS THIS A KEYWORD OPTION?         UAT07800\n         BNE   PARMINV             NO - PARAMETER IS INVALID            UAT07810\n         B     THISOPT             YES- GO PROCESS IT                   UAT07820\n         SPACE                                                          UAT07830\nENDEQUAL EQU   *                                                        UAT07840\n         LR    R14,R15             COPY ADDR OF COMMA                   UAT07850\n         SR    R14,R3              CALCULATE LENGTH OF PARAMETER        UAT07860\n         BZ    PARMINV             IF ZERO, IT'S INVALID                UAT07870\n         C     R14,=F'8'           IS LENGTH GREATER THAN 8?            UAT07880\n         BH    PARMINV             YES - SHOW IT'S INVALID              UAT07890\n         BCTR  R14,0               GET EXECUTABLE LENGTH                UAT07900\n         MVC   PARM(8),=8C' '      FILL WORK AREA W/BLANKS              UAT07910\n         EX    R14,MOVEIT          MOVE PARAMETER TO WORK AREA          UAT07920\n         LA    R4,OPTLIST          POINT TO OPTION LIST                 UAT07930\n         LA    R5,NUMOPTS          NUMBER OF VALID OPTIONS              UAT07940\nOPTLOOP3 EQU   *                                                        UAT07950\n         CLC   OPTNAME(8,R4),PARM  IS THIS THE SOUGHT FOR PARM?         UAT07960\n         BE    THISOPTE            YES - GO PROCESS IT                  UAT07970\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT07980\n         BCT   R5,OPTLOOP3         LOOP BACK FOR THIS ONE               UAT07990\n         B     PARMINV             PARAMETER IS INVALID                 UAT08000\n         SPACE                                                          UAT08010\nTHISOPTE EQU   *                                                        UAT08020\n         SR    R14,R14             ZERO OUT ACCUMULATOR                 UAT08030\n         B     NXTOPTE             GET INTO THE LOOP                    UAT08040\nOPTLOOP4 EQU   *                                                        UAT08050\n         CLI   0(R15),C','         A COMMA?                             UAT08060\n         BE    STOREIT             YES - END OF FIELD                   UAT08070\n         CLI   0(R15),C'0'         NUMERIC VALUE?                       UAT08080\n         BL    PARMINV             NO - WE HAVE ERROR                   UAT08090\n         CLI   0(R15),C'9'         NUMERIC VALUE?                       UAT08100\n         BH    PARMINV             NO - WE HAVE ERROR                   UAT08110\n         IC    R0,0(,R15)          GET THE CHARACTER                    UAT08120\n         N     R0,=F'15'           ZAP OUT BAD BITS                     UAT08130\n         MH    R14,=H'10'          SHIFT ACCUMULATOR                    UAT08140\n         AR    R14,R0              ADD NEW DIGIT TO ACCUMULATOR         UAT08150\nNXTOPTE  EQU   *                                                        UAT08160\n         LA    R15,1(,R15)         POINT TO NUMERIC VALUE               UAT08170\n         BCT   R6,OPTLOOP4         BRANCH IF NOT LAST PARM VALUE        UAT08180\n         LA    R6,1                RESTORE COUNT BACK TO 1              UAT08190\nSTOREIT  EQU   *                                                        UAT08200\n         ST    R14,OPTVALUE(,R4)   SAVE ACCUMULATOR VALUE               UAT08210\n         CLI   OPTTYPE(R4),OPTVAR  IS THIS A VARIABLE-TYPE OPTION?      UAT08220\n         BNE   PARMINV             NO - BRANCH TO ERROR ROUTINE         UAT08230\n         SPACE                                                          UAT08240\nTHISOPT  EQU   *                                                        UAT08250\n         L     R14,OPTADDR(,R4)    OPTION FLAG BYTE ADDRESS             UAT08260\n         OC    0(1,R14),OPTON(R4)  SET FLAG                             UAT08270\n         NC    0(1,R14),OPTOFF(R4) RESET FLAG                           UAT08280\nNEXTOPT  EQU   *                                                        UAT08290\n         LA    R3,1(,R15)          POINT TO NEXT PARAMETER              UAT08300\n         BCT   R6,FINDCOMA         LOOP BACK AND DO IT                  UAT08310\nPRTPARMS EQU   *                                                        UAT08320\n         MOVEMSG MSG9              OPTIONS IN EFFECT:                   UAT08330\n         LA    R3,LINE+MSG9O       POINT TO NEXT PLACE IN LINE          UAT08340\n         LA    R4,OPTLIST          POINT TO OPTIONS LIST                UAT08350\n         LA    R5,NUMOPTS          NUMBER OF POSSIBLE OPTIONS           UAT08360\nOPTLOOP2 EQU   *                                                        UAT08370\n         L     R15,OPTADDR(,R4)          LOAD OPTION BYTE ADDRESS       UAT08380\n         MVC   TEMPFLAG(1),0(R15)  MOVE OPTIONS BYTE TO WORK AREA       UAT08390\n         NC    TEMPFLAG(1),OPTON(R4)  AND OUT ALL BUT FLAG BIT          UAT08400\n         BZ    NEXTOPT2            IF RESULT IS ZERO, NO OPTION         UAT08410\n         MVC   0(8,R3),OPTNAME(R4) MOVE IN OPTION                       UAT08420\nCOMLOOPB EQU   *                                                        UAT08430\n         CLI   0(R3),C' '          BLANK HERE?                          UAT08440\n         BE    COMLOOPE            YES - GET OUT OF HERE                UAT08450\n         LA    R3,1(,R3)           POINT TO NEXT CHARACTER              UAT08460\n         B     COMLOOPB            LOOP BACK CHECK IT TOO               UAT08470\nCOMLOOPE EQU   *                                                        UAT08480\n         CLI   OPTTYPE(R4),OPTKEYWD   IS THIS A KEYWORD OPTION?         UAT08490\n         BNE   COMLOOPF            NO - MUST BE A VARIABLE OPTION       UAT08500\n         MVI   0(R3),C','          PUT A COMMA THERE                    UAT08510\n         LA    R3,1(,R3)           POINT TO NEXT CHARACTER              UAT08520\nNEXTOPT2 EQU   *                                                        UAT08530\n         LA    R4,LENOPT(,R4)      POINT TO NEXT OPTION IN LIST         UAT08540\n         BCT   R5,OPTLOOP2         LOOP BACK FOR IT                     UAT08550\n         BCTR  R3,0                BACK UP TO LAST COMMA                UAT08560\n         MVI   0(R3),C' '          BLANK OUT LAST COMMA                 UAT08570\n         OI    FLAG2,#NOSHIFT      DO NO SHIFT THIS OVER                UAT08580\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT08590\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT08600\n         BR    R9                  RETURN TO CALLER                     UAT08610\nCOMLOOPF EQU   *                                                        UAT08620\n         MVI   0(R3),C'='          PUT EQUALS SIGN THERE                UAT08630\n         L     R0,OPTVALUE(,R4)    LOAD VALUE OF OPTION                 UAT08640\n         CVD   R0,DOUBLE           CONVERT TO PACKED DECIMAL            UAT08650\n         MVC   1(9,R3),=X'40202020202021206B'  EDIT MASK, PLUS A COMMA  UAT08660\n         LA    R1,8(,R3)           POINT TO LAST POSSIBLE DIGIT         UAT08670\n         EDMK  1(8,R3),DOUBLE+4    CONVERT TO CHARACTER                 UAT08680\n         MVC   1(10,R3),0(R1)      SHIFT OUT LEADING BLANKS             UAT08690\n         LA    R0,11(,R3)          POINT PAST COMMA                     UAT08700\n         SR    R0,R1               LENGTH OF NUMERIC VALUE              UAT08710\n         AR    R3,R0               MOVE POINTER PAST COMMA              UAT08720\n         B     NEXTOPT2            CONTINUE WITH NEXT OPTION            UAT08730\n         SPACE                                                          UAT08740\nMOVEIT   MVC   PARM(*-*),0(R3)     ***** EXECUTED INSTRUCTION *****     UAT08750\n         EJECT                                                          UAT08760\n*********************************************************************** UAT08770\n*                                                                     * UAT08780\n*    PRTLABEL                                                         * UAT08790\n*                                                                     * UAT08800\n*         THIS ROUTINE PRINTS A FORMATTED VERSION OF EACH             * UAT08810\n*         TYPE OF VOLUME AND DATA SET LABEL (VOL1, HDR1,              * UAT08820\n*         HDR2, EOF1, EOF2, EOV1, EOV2).  USER LABELS ARE             * UAT08830\n*         IGNORED HERE.                                               * UAT08840\n*                                                                     * UAT08850\n*********************************************************************** UAT08860\n         SPACE                                                          UAT08870\nPRTLABEL EQU   *                                                        UAT08880\n         TM    FLAG,#TAPEMRK       WAS THIS BLOCK A TAPE MARK?          UAT08890\n         BOR   R9                  YES - RETURN TO CALLER               UAT08900\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT08910\n         TM    FLAG2,#PRTFLAG      ARE WE TO PRINT MSG41?               UAT08920\n         BNO   NOMSG41A            NO - SKIP PRINTING IT                UAT08930\n         NI    FLAG2,255-#PRTFLAG  RESET THE FLAG                       UAT08940\n         MOVEMSG MSG41             === FILE: XXXX ===================== UAT08950\n         MVC   LINE+MSG41F(4),FILENO   MOVE IN FILE NUMBER              UAT08960\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT08970\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT08980\nNOMSG41A EQU   *                                                        UAT08990\n         MVI   LINE,C'0'           DOUBLE SPACE                         UAT09000\n         CLC   0(3,R7),=C'VOL'     IS THIS A VOLUME LABEL?              UAT09010\n         BE    VOL                 YES - BRANCH                         UAT09020\n         CLC   0(3,R7),=C'HDR'     IS THIS A DATA-SET LABEL?            UAT09030\n         BE    HDR                 YES - BRANCH                         UAT09040\n         CLC   0(3,R7),=C'EOF'     IS THIS END-OF-FILE LABEL?           UAT09050\n         BE    EOF                 YES - BRANCH                         UAT09060\n         CLC   0(3,R7),=C'EOV'     IS THIS END-OF-VOLUME LABEL?         UAT09070\n         BE    EOV                 YES - BRANCH                         UAT09080\n         CLC   0(3,R7),=C'UHL'     IS THIS USER-HEADER LABEL?           UAT09090\n         BE    UHL                 YES - BRANCH                         UAT09100\n         CLC   0(3,R7),=C'UTL'     IS THIS USER-TRAILER LABEL?          UAT09110\n         BE    UTL                 YES - BRANCH                         UAT09120\n         SPACE                                                          UAT09130\nLABUNKN  EQU   *                                                        UAT09140\n         L     R15,MXLABERR        LOAD MAXIMUM LABEL ERROR COUNT       UAT09150\n         LA    R15,1(,R15)         INCREMENT COUNTER                    UAT09160\n         ST    R15,MXLABERR        SAVE NEW ERROR COUNT                 UAT09170\n         C     R15,MXLABCNT        COMPARE AGAINST MAXIMUM              UAT09180\n         BE    MXEXCEED            BRANCH IF EQUAL TO MAXIMUM           UAT09190\n         BH    PRTLABXT            RETURN TO CALLER IF EXCEEDED         UAT09200\n         MOVEMSG MSG44             UNKNOWN LABEL RECORD                 UAT09210\n         BAL   R9,PRINTIT          GO PRINT UNKNOWN LABEL MSG           UAT09220\n         MVC   LINE+1(7),=C'----->|'  LEFT FRAMER                       UAT09230\n         MVC   LINE+8(80),0(R7)    LABEL DATA                           UAT09240\n         MVC   LINE+88(7),=C'|<-----' RIGHT FRAMER                      UAT09250\n         BAL   R9,PRINTIT          GO PRINT UNKNOWN LABEL DATA          UAT09260\n         B     PRTLABXT            RETURN TO CALLER                     UAT09270\n         SPACE                                                          UAT09280\nMXEXCEED EQU   *                                                        UAT09290\n         MOVEMSG MSG48             MAXIMUM COUNT EXCEEDED               UAT09300\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09310\n         B     PRTLABXT            RETURN TO CALLER                     UAT09320\n         SPACE 2                                                        UAT09330\n*   VOL            VOLUME LABEL                                         UAT09340\nVOL      EQU   *                                                        UAT09350\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT09360\n         MOVEMSG MSG4              INPUT VOLUME SERIAL =                UAT09370\n         MVC   LINE+MSG4V(6),VOLSER1    MOVE IN INPUT VOLSER            UAT09380\n         MVC   LINE+MSG4O(10),VOL1OWNR  MOVE IN VOLUME'S OWNER          UAT09390\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09400\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT09410\n         BNO   PRTLABXT            NO - RETURN TO CALLER                UAT09420\n         MOVEMSG MSG5              OUTPUT VOLUME SERIAL =               UAT09430\n         MVC   LINE+MSG5V(6),VOLSER2    MOVE IN OUTPUT VOLSER           UAT09440\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT09450\n         B     PRTLABXT            RETURN TO CALLER                     UAT09460\n         DROP  R7                  DON'T NEED THIS NOW                  UAT09470\n         SPACE 2                                                        UAT09480\nHDR      EQU   *                                                        UAT09490\n         CLI   3(R7),C'1'          DATA SET LABEL 1?                    UAT09500\n         BE    HDR1                YES - BRANCH                         UAT09510\n         CLI   3(R7),C'2'          DATA SET LABEL 2?                    UAT09520\n         BE    HDR2                YES - BRANCH                         UAT09530\n         B     LABUNKN             UNKNOWN LABEL                        UAT09540\n         SPACE                                                          UAT09550\n*   HDR1          DATA SET HEADER LABEL 1                               UAT09560\n         SPACE                                                          UAT09570\nHDR1     EQU   *                                                        UAT09580\n         USING HDR1D,R7            DECLARE HDR1 ADDRESSABILITY          UAT09590\n         LA    R0,HDR1DSN          CHECK FOR FRESHLY                    UAT09600\n         LA    R1,76                 IEHINITT'ED TAPE                   UAT09610\n         SR    R15,R15                 WHICH LOOKS LIKE:                UAT09620\n         ICM   R15,8,=C'0'               HDR100000 ... 000              UAT09630\n         CLCL  R0,R14                      ('HDR1' PLUS 76 ZEROES)      UAT09640\n         BE    HDR1I               BRANCH IF WE FOUND IEHINITT HDR1     UAT09650\n*                                                                       UAT09660\n         MOVEMSG MSG11             DATA SET NAME = ....                 UAT09670\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT09680\n         MVC   LINE+MSG11D(17),HDR1DSN    MOVE IN DATA SET NAME         UAT09690\n         MVC   STATDSN(17,R6),HDR1DSN     DSN TO STAT BUF               UAT09700\n         MVC   LINE+MSG11V(6),HDR1SER     MOVE IN VOLUME SERIAL NUMBER  UAT09710\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09720\n         MOVEMSG MSG12                    FILE = XX VOLUME SEQ = YY     UAT09730\n         MVC   LINE+MSG12F(4),HDR1DSEQ    FILE SEQUENCE NUMBER          UAT09740\n         MVC   STATFILE(4,R6),HDR1DSEQ    FILE SEQ NO TO STAT BUF       UAT09750\n         MVC   LINE+MSG12S(4),HDR1VSEQ    VOLUME SEQUENCE NUMBER        UAT09760\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09770\n         MOVEMSG MSG12#                   GENERATION=XXXX  VERSION=YY   UAT09780\n         MVC   LINE+MSG12G(4),HDR1GEN     GENERATION NUMBER             UAT09790\n         MVC   LINE+MSG12V(2),HDR1VER     VERSION NUMBER                UAT09800\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09810\n         MOVEMSG MSG13                    CREATION DATE, EXPIRATION     UAT09820\n         MVC   LINE+MSG13C(2),HDR1CRDT+1       YEAR                     UAT09830\n         MVC   LINE+MSG13C+3(3),HDR1CRDT+3     DAY                      UAT09840\n         MVC   LINE+MSG13E(2),HDR1EXDT+1       YEAR                     UAT09850\n         MVC   LINE+MSG13E+3(3),HDR1EXDT+3     DAY                      UAT09860\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09870\n         MOVEMSG MSG13#                   SYSTEM CODE=SSSS              UAT09880\n         MVC   LINE+MSG13S(13),HDR1SYS    SYSTEM CODE                   UAT09890\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT09900\n         B     PRTLABXT                   RETURN TO CALLER              UAT09910\n         DROP R7                                                        UAT09920\n         SPACE                                                          UAT09930\n*   PROCESS FRESHLY IEHINITT'ED TAPE                                    UAT09940\nHDR1I    EQU   *                                                        UAT09950\n         OI    FLAG2,#INITHDR      SET FLAG SHOWING IEHINITT HDR1       UAT09960\n         MOVEMSG MSG56             THIS IS IEHINITT'D TAPE              UAT09970\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT09980\n         B     PRTLABXT            RETURN TO CALLER                     UAT09990\n         SPACE 2                                                        UAT10000\n*   HDR2          DATA SET HEADER LABEL 2                               UAT10010\n         SPACE                                                          UAT10020\nHDR2     EQU   *                                                        UAT10030\n         USING HDR2D,R7                   HDR2 RECORD ADDRESSABILITY    UAT10040\n         L     R6,BSTATBUF                LOAD CURRENT STAT ENTRY ADDR  UAT10050\n         MOVEMSG MSG15                    LRECL=XXXX BLKSIZE=YYY        UAT10060\n         MVC   LINE+MSG15L(5),HDR2LREC    LRECL                         UAT10070\n         MVC   STATLREC(5,R6),HDR2LREC    LRECL                         UAT10080\n         PACK  DOUBLE(8),HDR2LREC         PACK LRECL                    UAT10090\n         CVB   0,DOUBLE                   CONVERT TO BINARY             UAT10100\n         ST    0,CURLRECL                 SAVE CURRENT LRECL            UAT10110\n         MVC   LINE+MSG15B(5),HDR2BLKL    BLKSIZE                       UAT10120\n         MVC   STATBLKS(5,R6),HDR2BLKL    BLKSIZE                       UAT10130\n         PACK  DOUBLE(8),HDR2BLKL         PACK BLKSIZE                  UAT10140\n         CVB   0,DOUBLE                   CONVERT TO BINARY             UAT10150\n         ST    0,CURBLKSI                 SAVE CURRENT BLKSIZE          UAT10160\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10170\n         MOVEMSG MSG15#                   RECFM=XX  DENSITY=U           UAT10180\n         MVC   LINE+MSG15R(1),HDR2RECF    RECFM                         UAT10190\n         MVC   CURRECFM(1),HDR2RECF       SAVE CURRENT RECORD FORMAT    UAT10200\n         LA    R15,LINE+MSG15R+1          POINT TO FOLLOWING SPACE      UAT10210\n         CLI   HDR2BLKF,C' '              IS BLOCKING ATTRIBUTE SET?    UAT10220\n         BE    HDR2BB                     NO - SKIP                     UAT10230\n         CLI   HDR2BLKF,C'R'              IS THE BLK ATTRIBUTE 'R'      UAT10240\n         BE    HDR2AA                     YES - SPANNED AND BLOCKED     UAT10250\n         MVC   0(1,R15),HDR2BLKF          BLOCKING ATTRIBUTE (B OR S)   UAT10260\n         LA    R15,1(,R15)                INCREMENT POINTER 1 PLACE     UAT10270\n         B     HDR2BB                     SKIP A FEW                    UAT10280\nHDR2AA   EQU   *                                                        UAT10290\n         MVC   0(2,R15),=C'BS'            BLOCKING ATTRIBUTE B AND S    UAT10300\n         LA    R15,2(,R15)                INCREMENT POINTER 2 PLACES    UAT10310\nHDR2BB   EQU   *                                                        UAT10320\n         MVC   0(1,R15),HDR2CONC   CONTROL CHARACTER (' ' OR M OR A)    UAT10330\n         MVC   STATRECF(4,R6),LINE+MSG15R RECORD FORMAT                 UAT10340\n         SPACE                                                          UAT10350\n         MVC   LINE+MSG15D1(1),HDR2DEN    TAPE DENSITY                  UAT10360\n         TM    FLAG2,#CART1               IS THIS 3480?                 UAT10370\n         BO    HDR2CART                   YES - DO IT DIFFERENTLY       UAT10380\n         CLI   HDR2DEN,C'0'               DEN=0?                        UAT10390\n         BNE   HDR2CC                     NO - CHECK NEXT               UAT10400\n         MVC   LINE+MSG15D2(4),DEN200+DENTABC   200 BPI                 UAT10410\n         B     HDR2HH                     SKIP                          UAT10420\nHDR2CC   EQU   *                                                        UAT10430\n         CLI   HDR2DEN,C'1'               DEN=1?                        UAT10440\n         BNE   HDR2DD                     NO - CHECK NEXT               UAT10450\n         MVC   LINE+MSG15D2(4),DEN556+DENTABC   556 BPI                 UAT10460\n         B     HDR2HH                     SKIP                          UAT10470\nHDR2DD   EQU   *                                                        UAT10480\n         CLI   HDR2DEN,C'2'               DEN=2?                        UAT10490\n         BNE   HDR2EE                     NO - CHECK NEXT               UAT10500\n         MVC   LINE+MSG15D2(4),DEN800+DENTABC   800 BPI                 UAT10510\n         B     HDR2HH                     SKIP                          UAT10520\nHDR2EE   EQU   *                                                        UAT10530\n         CLI   HDR2DEN,C'3'               DEN=3?                        UAT10540\n         BNE   HDR2FF                     NO - CHECK NEXT               UAT10550\n         MVC   LINE+MSG15D2(4),DEN1600+DENTABC  1600 BPI                UAT10560\n         B     HDR2HH                     SKIP                          UAT10570\nHDR2FF   EQU   *                                                        UAT10580\n         CLI   HDR2DEN,C'4'               DEN=4?                        UAT10590\n         BNE   HDR2GG                     NO - WHO KNOWS WHAT IT IS     UAT10600\n         MVC   LINE+MSG15D2(4),DEN6250+DENTABC  6250 BPI                UAT10610\n         B     HDR2HH                     SKIP                          UAT10620\nHDR2GG   EQU   *                                                        UAT10630\n         MVC   LINE+MSG15D2(9),=C'UNKNOWN) '  SHOW IT'S UNKNOWN         UAT10640\n         B     HDR2HH                     SKIP                          UAT10650\nHDR2CART EQU   *                          3480 CARTRIDGES ONLY HERE     UAT10660\n         MVC   LINE+MSG15D2(4),DEN38K+DENTABC  38000 BPI                UAT10670\nHDR2HH   EQU   *                                                        UAT10680\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10690\n         MOVEMSG MSG16                    CREATING JOB/JOBSTEP          UAT10700\n         MVC   LINE+MSG16J(17),HDR2JOBI   JOBNAME/JOBSTEP               UAT10710\n         MVC   LINE+MSG16R(2),HDR2TTRC    RECORDING TECHNIQUE (TTRCH    UAT10720\n         BAL   R9,PRINTIT                 GO PRINT THE MESSAGE          UAT10730\n*  PRINT WARNING ABOUT UNRELIABLE LENGTH VALUE IF IDRC IS ENABLED       UAT10740\n         TM    FLAG2,#CART1        ARE WE READING A CART?               UAT10750\n         BNO   HDR2II              NO - SKIP                            UAT10760\n         TM    FLAG3,#IDRC1        IS IDRC ENABLED?                     UAT10770\n         BNO   HDR2II              NO - SKIP                            UAT10780\n         MOVEMSG MSG59             WARNING ABOUT IDRC AND LENGTH        UAT10790\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT10800\nHDR2II   EQU   *                                                        UAT10810\n         PACK  DOUBLE(8),HDR2LREC(5)      PACK THE LRECL                UAT10820\n         CVB   R15,DOUBLE                 MAKE IT BINARY NOW            UAT10830\n         ST    R15,BLRECL                 SAVE LRECL FOR PRINT OPTION   UAT10840\n         B     PRTLABXT                   RETURN TO CALLER              UAT10850\n         DROP  R7                         DON'T NEED THIS NOW           UAT10860\n         SPACE 2                                                        UAT10870\nEOF      EQU   *                                                        UAT10880\n         CLI   3(R7),C'1'          END OF FILE LABEL 1?                 UAT10890\n         BE    EOF1                YES - BRANCH                         UAT10900\n         CLI   3(R7),C'2'          END OF FILE LABEL 2?                 UAT10910\n         BE    EOF2                YES - BRANCH                         UAT10920\n         B     LABUNKN             UNKNOWN LABEL                        UAT10930\n         SPACE                                                          UAT10940\n*   EOF1           END OF FILE (TRAILER) LABEL 1                        UAT10950\n         SPACE                                                          UAT10960\nEOF1     EQU   *                                                        UAT10970\n         USING EOF1D,R7            EOF1 ADDRESSABILITY                  UAT10980\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT10990\n         MOVEMSG MSG19                  NUMBER OF BLOCKS =              UAT11000\n         MVC   LINE+MSG19N(6),EOF1BLKC  DATA SET BLOCK COUNT            UAT11010\n         MVC   STATNBLK(6,R6),EOF1BLKC  DATA SET BLOCK COUNT            UAT11020\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT11030\n         PACK  DOUBLE(8),EOF1BLKC(6)    CONVERT COUNT TO PACKED         UAT11040\n         CVB   R0,DOUBLE                AND THEN TO BINARY              UAT11050\n         C     R0,BLOCKCNT         DOES IT MATCH ACTUAL?                UAT11060\n         BE    EOF1RET             YES - SKIP MESSAGE                   UAT11070\n         MOVEMSG MSG57             WARNING: BLOCK COUNT DOES NOT MATCH  UAT11080\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFTING                 UAT11090\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT11100\nEOF1RET  EQU   *                                                        UAT11110\n         B     PRTLABXT            RETURN TO CALLER                     UAT11120\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11130\n         SPACE 2                                                        UAT11140\n*   EOF2          END OF FILE TRAILER LABEL 2                           UAT11150\n         SPACE                                                          UAT11160\nEOF2     EQU   *                                                        UAT11170\n         USING EOF2D,R7            MAKE EOF2 LABEL ADDRESSABLE          UAT11180\n         MVC   LINE+1(4),EOF2EOF2  MOVE \"EOF2\" TO PRINT LINE            UAT11190\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11200\n         BAL   R9,PRINTIT          GO PRINT EOF2                        UAT11210\n         B     PRTLABXT            RETURN TO CALLER                     UAT11220\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11230\n         SPACE 2                                                        UAT11240\nEOV      EQU   *                                                        UAT11250\n         CLI   3(R7),C'1'          END OF VOLUME LABEL 1?               UAT11260\n         BE    EOV1                YES - BRANCH                         UAT11270\n         CLI   3(R7),C'2'          END OF VOLUME LABEL 2?               UAT11280\n         BE    EOV2                YES - BRANCH                         UAT11290\n         B     LABUNKN             UNKNOWN LABEL                        UAT11300\n         SPACE                                                          UAT11310\n*   EOV1               END OF VOLUME LABEL 1                            UAT11320\n         SPACE                                                          UAT11330\nEOV1     EQU   *                                                        UAT11340\n         USING EOV1D,R7            MAKE EOV1 RECORD ADDRESSABLE         UAT11350\n         OI    FLAG2,#EOV          SHOW EOV LABEL FOUND                 UAT11360\n         MOVEMSG MSG19                  NUMBER OF BLOCKS =              UAT11370\n         MVC   LINE+1(4),EOV1EOV1  MOVE \"EOV1\" TO PRINT LINE            UAT11380\n         L     R6,BSTATBUF         LOAD CURRENT STAT ENTRY ADDR         UAT11390\n         MVC   LINE+MSG19N(6),EOV1BLKC  DATA SET BLOCK COUNT            UAT11400\n         MVC   STATNBLK(6,R6),EOV1BLKC   DATA SET BLOCK COUNT           UAT11410\n         BAL   R9,PRINTIT          GO PRINT EOV1                        UAT11420\n         B     PRTLABXT            RETURN TO CALLER                     UAT11430\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11440\n         SPACE 2                                                        UAT11450\n*   EOV2                END OF VOLUME LABEL 2                           UAT11460\n         SPACE                                                          UAT11470\nEOV2     EQU   *                                                        UAT11480\n         USING EOV2D,R7            MAKE EOV2 RECORD ADDRESSABLE         UAT11490\n         OI    FLAG2,#EOV          SHOW EOV LABEL FOUND                 UAT11500\n         MVC   LINE+1(4),EOV2EOV2  MOVE \"EOV2\" TO PRINT LINE            UAT11510\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11520\n         BAL   R9,PRINTIT          GO PRINT EOV2                        UAT11530\n         B     PRTLABXT            RETURN TO CALLER                     UAT11540\n         DROP  R7                  DON'T NEED THIS NOW                  UAT11550\n         SPACE 2                                                        UAT11560\n*   UHL/UTL             USER HEADER/TRAILER LABELS                      UAT11570\n         SPACE                                                          UAT11580\nUHL      EQU   *                                                        UAT11590\nUTL      EQU   *                                                        UAT11600\n         MVC   LINE+1(4),0(R7)     MOVE \"UHLN\"/\"UTLN\" TO PRINT LINE     UAT11610\n         MVI   LINE+5,C':'         PUT A : THERE TOO                    UAT11620\n         MVC   LINE+8(80),0(R7)    MOVE CONTENTS OF LABEL               UAT11630\n         BAL   R9,PRINTIT          AND PRINT IT                         UAT11640\n         SPACE 2                                                        UAT11650\nPRTLABXT EQU   *                                                        UAT11660\n         UNSTACK R9                RETRIEVE THE RETURN ADDRESS          UAT11670\n         BR    R9                  RETURN TO CALLER                     UAT11680\n         EJECT                                                          UAT11690\n*********************************************************************** UAT11700\n*                                                                     * UAT11710\n*    FIXLAB                                                           * UAT11720\n*                                                                     * UAT11730\n*           THIS ROUTINE CHANGES THE VOLUME SERIAL IN VARIOUS         * UAT11740\n*           TAPE LABELS TO MATCH THE SYSUT2 TAPE'S VOLSER.            * UAT11750\n*                                                                     * UAT11760\n*********************************************************************** UAT11770\n         SPACE                                                          UAT11780\nFIXLAB   EQU   *                                                        UAT11790\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT11800\n         BNOR  R9                  NO - RETURN TO CALLER                UAT11810\n         TM    OPTIONS2,#NOFIX     WAS NOFIX OPTION SPECIFIED?          UAT11820\n         BOR   R9                  YES - RETURN TO CALLER               UAT11830\n         TM    FLAG,#TAPEMRK       WAS THIS BLOCK A TAPE MARK?          UAT11840\n         BOR   R9                  YES - RETURN TO CALLER               UAT11850\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT11860\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT11870\n         CLC   VOL1VOL1(4),=C'VOL1'    IS THIS A VOLUME LABEL?          UAT11880\n         BE    FIXVOL1             YES - BRANCH                         UAT11890\n         DROP  R7                                                       UAT11900\n         USING HDR1D,R7            DATA SET LABEL ADDRESSING            UAT11910\n         CLC   HDR1HDR1(4),=C'HDR1'    IS THIS DATA SET LABEL?          UAT11920\n         BE    FIXHDR1             YES - BRANCH                         UAT11930\n         DROP  R7                                                       UAT11940\n         USING EOF1D,R7            END OF FILE LABEL ADDRESSING         UAT11950\n         CLC   EOF1EOF1(4),=C'EOF1'    IS THIS EOF LABEL?               UAT11960\n         BE    FIXEOF1             YES - BRANCH                         UAT11970\n         DROP  R7                                                       UAT11980\n         USING EOV1D,R7            END OF VOLUME LABEL ADDRESSING       UAT11990\n         CLC   EOV1EOV1(4),=C'EOV1'    IS THIS EOV LABEL?               UAT12000\n         BE    FIXEOV1             YES - BRANCH                         UAT12010\n         DROP  R7                                                       UAT12020\n         USING EOV2D,R7            END OF VOLUME LABEL ADDRESSING       UAT12030\n         CLC   EOV2EOV2(4),=C'EOV2'    IS THIS EOV LABEL?               UAT12040\n         BE    FIXEOV2             YES - BRANCH                         UAT12050\n         DROP  R7                                                       UAT12060\n         USING EOF2D,R7            END OF FILE LABEL ADDRESSING         UAT12070\n         CLC   EOF2EOF2(4),=C'EOF2'    IS THIS EOF LABEL?               UAT12080\n         BE    FIXEOF2             YES - BRANCH                         UAT12090\n         DROP  R7                                                       UAT12100\n         USING HDR2D,R7            DATA SET LABEL ADDRESSING            UAT12110\n         CLC   HDR2HDR2(4),=C'HDR2'    IS THIS DATA SET LABEL?          UAT12120\n         BE    FIXHDR2             YES - BRANCH                         UAT12130\n         DROP  R7                                                       UAT12140\n         B     FIXLABXT            NONE OF THESE - RETURN TO CALLER     UAT12150\n         SPACE 2                                                        UAT12160\n*   FIX VOLUME LABEL                                                    UAT12170\n         SPACE                                                          UAT12180\nFIXVOL1  EQU   *                                                        UAT12190\n         USING VOL1D,R7            VOLUME LABEL ADDRESSING              UAT12200\n         MVC   VOL1SER(6),VOLSER2  RENAME                               UAT12210\n         B     FIXLABXT            RETURN TO CALLER                     UAT12220\n         DROP  R7                                                       UAT12230\n         SPACE 2                                                        UAT12240\n*   FIX DATA SET LABEL 1                                                UAT12250\n         SPACE                                                          UAT12260\nFIXHDR1  EQU   *                                                        UAT12270\n         TM    FLAG2,#INITHDR      IS THIS AN IEHINITT HDR1?            UAT12280\n         BO    FIXLABXT            YES - DON'T DO FIXUP                 UAT12290\n         USING HDR1D,R7            DATA SET LABEL ADDRESSING            UAT12300\n         MVC   HDR1SER(6),VOLSER2  RENAME                               UAT12310\n         B     FIXLABXT            RETURN TO CALLER                     UAT12320\n         DROP  R7                                                       UAT12330\n         SPACE 2                                                        UAT12340\n*   FIX END OF FILE LABEL 1                                             UAT12350\n         SPACE                                                          UAT12360\nFIXEOF1  EQU   *                                                        UAT12370\n         USING EOF1D,R7            END OF FILE LABEL ADDRESSING         UAT12380\n         MVC   EOF1SER(6),VOLSER2  RENAME                               UAT12390\n         B     FIXLABXT            RETURN TO CALLER                     UAT12400\n         DROP  R7                                                       UAT12410\n         SPACE 2                                                        UAT12420\n*   FIX END OF VOLUME LABEL 1                                           UAT12430\n         SPACE                                                          UAT12440\nFIXEOV1  EQU   *                                                        UAT12450\n         USING EOV1D,R7            END OF VOLUME LAB ADDRESSING         UAT12460\n         MVC   EOV1SER(6),VOLSER2  RENAME                               UAT12470\n         B     FIXLABXT            RETURN TO CALLER                     UAT12480\n         DROP  R7                                                       UAT12490\n         SPACE 2                                                        UAT12500\n*  FIX DATA SET LABEL 2                                                 UAT12510\n         SPACE                                                          UAT12520\nFIXHDR2  EQU   *                                                        UAT12530\n         USING HDR2D,R7            DATA SET LABEL ADDRESSING            UAT12540\n         MVC   HDR2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12550\n         B     FIXLABXT            RETURN TO CALLER                     UAT12560\n         DROP  R7                                                       UAT12570\n         SPACE 2                                                        UAT12580\n*   FIX END OF FILE LABEL 2                                             UAT12590\n         SPACE                                                          UAT12600\nFIXEOF2  EQU   *                                                        UAT12610\n         USING EOF2D,R7            DATA SET LABEL ADDRESSING            UAT12620\n         MVC   EOF2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12630\n         B     FIXLABXT            RETURN TO CALLER                     UAT12640\n         DROP  R7                                                       UAT12650\n         SPACE 2                                                        UAT12660\n*   FIX END OF VOLUME LABEL 2                                           UAT12670\n         SPACE                                                          UAT12680\nFIXEOV2  EQU   *                                                        UAT12690\n         USING EOV2D,R7            DATA SET LABEL ADDRESSING            UAT12700\n         MVC   EOV2DEN(1),TAPEDEN  MOVE IN OUTPUT DENSITY               UAT12710\n         SPACE 2                                                        UAT12720\nFIXLABXT EQU   *                                                        UAT12730\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT12740\n         BR    R9                  RETURN TO CALLER                     UAT12750\n         DROP  R7                                                       UAT12760\n         EJECT                                                          UAT12770\n*********************************************************************** UAT12780\n*                                                                     * UAT12790\n*    DUMPBLK                                                          * UAT12800\n*                                                                     * UAT12810\n*          THIS ROUTINE PRINTS A DATA BLOCK IN HEXADECIMAL FORMAT     * UAT12820\n*                                                                     * UAT12830\n*********************************************************************** UAT12840\n         SPACE                                                          UAT12850\nDUMPBLK  EQU   *                                                        UAT12860\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT12870\n         BOR   R9                  YES - RETURN TO CALLER               UAT12880\n         TM    OPTIONS1,#DUMP+#DUMPALL  DUMP OPTIONS SET?               UAT12890\n         BZR   R9                  BRANCH IF NO DUMP OPTIONS            UAT12900\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT12910\n         TM    OPTIONS2,#DMAX      WAS DUMPMAX OPTION SPECIFIED?        UAT12920\n         BNO   NODMAX1             NO - SKIP CHECK                      UAT12930\n         L     R15,DBLKCT          LOAD BLOCK COUNTER                   UAT12940\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT12950\n         ST    R15,DBLKCT          SAVE NEW COUNTER VALUE               UAT12960\n         BNM   NODMAX1             CONTINUE WITH DUMP IF NOT NEGATIVE   UAT12970\n         AH    R15,=H'1'           IS IT -1?                            UAT12980\n         BNZ   DUMPITXT            NO - RETURN TO CALLER                UAT12990\n         MOVEMSG MSG50             DUMP SUSPENDED MSG                   UAT13000\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFT                    UAT13010\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT13020\n         B     DUMPITXT            RETURN TO CALLER                     UAT13030\nNODMAX1  EQU   *                                                        UAT13040\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT13050\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13060\n         MOVEMSG MSG24             FILE XX BLOCK YY LENGTH ZZ           UAT13070\n         UNPK  LINE+MSG24F(4),DOUBLE(8)   FILE COUNTER                  UAT13080\n         OI    LINE+MSG24F+3,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13090\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT13100\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13110\n         UNPK  LINE+MSG24B(6),DOUBLE(8)   BLOCK COUNTER                 UAT13120\n         OI    LINE+MSG24B+5,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13130\n         LH    R15,RECLEN          LOAD RECORD LENGTH                   UAT13140\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT13150\n         UNPK  LINE+MSG24L(5),DOUBLE(8)   BLOCK LENGTH                  UAT13160\n         OI    LINE+MSG24L+4,X'F0' INSURE LAST DIGIT PRINTABLE          UAT13170\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT13180\n         B     DUMPIT              GO DUMP THE BLOCK                    UAT13190\n         EJECT                                                          UAT13200\n*********************************************************************** UAT13210\n*                                                                     * UAT13220\n*    DUMPLAB                                                          * UAT13230\n*                                                                     * UAT13240\n*          THIS ROUTINE PRINTS A TAPE LABEL IN HEXADECIMAL FORMAT     * UAT13250\n*                                                                     * UAT13260\n*********************************************************************** UAT13270\n         SPACE                                                          UAT13280\nDUMPLAB  EQU   *                                                        UAT13290\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT13300\n         BOR   R9                  YES - RETURN TO CALLER               UAT13310\n         TM    OPTIONS1,#DUMPLAB+#DUMPALL EITHER DUMPLAB OR DUMPALL OPT UAT13320\n         BZR   R9                  NO - RETURN TO CALLER                UAT13330\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT13340\n         TM    OPTIONS2,#DMAX      WAS DUMPMAX OPTION SPECIFIED?        UAT13350\n         BNO   DUMPIT              NO - SKIP CHECK                      UAT13360\n         L     R15,DBLKCT          LOAD BLOCK COUNTER                   UAT13370\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT13380\n         ST    R15,DBLKCT          SAVE NEW COUNTER VALUE               UAT13390\n         BM    DUMPITXT            IT'S NOT POSITIVE, RETURN            UAT13400\n         EJECT                                                          UAT13410\n*     GENERALIZED DUMP ROUTINE                                          UAT13420\n*     (NOTE:  RETURN ADDRESS MUST BE ON STACK UPON ENTRY TO DUMPIT)     UAT13430\n         SPACE                                                          UAT13440\nDUMPIT   EQU   *                                                        UAT13450\n         LH    R2,RECLEN           LOAD BLOCK'S LENGTH                  UAT13460\n         SR    R3,R3               THIS IS BLOCK OFFSET                 UAT13470\n         LA    R4,9                BXLE INCREMENT                       UAT13480\n         LA    R5,LINE+79          END OF BXLE RUN                      UAT13490\n         LR    R6,R7               COPY DATA ADDRESS                    UAT13500\n         MVI   LINE,C'0'           MAKE NEXT LINE DOUBLE SPACE          UAT13510\n         SPACE                                                          UAT13520\nNEWLINE  EQU   *                                                        UAT13530\n         L     R8,VTABLES          GET TRANSLATE TABLES CSECT ADDR      UAT13540\n         USING TABLES,R8           MAKE THEM ADDRESSABLE                UAT13550\n         STH   R3,DOUBLE           STORE OFFSET IN WORKAREA             UAT13560\n         UNPK  WORKAREA(5),DOUBLE(3)   CONVERT LENGTH TO                UAT13570\n         TR    WORKAREA(4),HEXTABLE       PRINTABLE HEX FORMAT          UAT13580\n         MVC   LINE+1(4),WORKAREA  MOVE TO PRINT LINE                   UAT13590\n         MVI   LINE+5,C'('         STARTING PARENS                      UAT13600\n         MVI   LINE+11,C')'        ENDING PARENS                        UAT13610\n         CVD   R3,DOUBLE           CONVERT OFFSET TO DECIMAL            UAT13620\n         UNPK  LINE+6(5),DOUBLE(8)     CONVERT LENGTH TO                UAT13630\n         OI    LINE+10,X'F0'              PRINTABLE DECIMAL             UAT13640\n         LA    R15,32              MAX NO. BYTES PER LINE               UAT13650\n         CR    R15,R2              ARE THERE MORE THAN 32 LEFT?         UAT13660\n         BNH   FULL1               NO - SKIP                            UAT13670\n         LR    R15,R2              YES- USE ONLY 32                     UAT13680\nFULL1    EQU   *                                                        UAT13690\n         BCTR  R15,0               GET EXECUTABLE LENGTH                UAT13700\n         MVC   LINE+89(34),=34C'*' ASTERISKS AT END                     UAT13710\n         EX    R15,MOVEIT3         MOVE STRING TO LINE                  UAT13720\n         TR    LINE+90(32),PRTTABLE  MAKE UNPRINTABLES PRINTABLE        UAT13730\n         LA    R14,LINE+14         POINT TO START OF THE LINE           UAT13740\n         LA    R15,4               NO. OF 4-BYTE SECTIONS 'TILL BREAK   UAT13750\nLINE1    EQU   *                                                        UAT13760\n         UNPK  WORKAREA(9),0(5,R6) DO NEXT FOUR BYTES                   UAT13770\n         TR    WORKAREA(9),HEXTABLE  MAKE IT PRINTABLE                  UAT13780\n         LA    R1,4                FOUR BYTES PER SECTION               UAT13790\n         CR    R1,R2               IS THERE FOUR BYTES LEFT?            UAT13800\n         BNH   FULL2               YES - SKIP                           UAT13810\n         LR    R1,R2               NO  - USE WHAT'S LEFT                UAT13820\nFULL2    EQU   *                                                        UAT13830\n         SLL   R1,1                MULTIPLY BY TWO                      UAT13840\n         BCTR  R1,0                GET EXECUTABLE LENGTH                UAT13850\n         EX    R1,MOVEIT4          MOVE SECTION TO PRINT LINE           UAT13860\n         BCT   R15,LINE2           DECREMENT SECTION COUNTER            UAT13870\n         LA    R14,2(,R14)         BUMP LINE POINTER                    UAT13880\nLINE2    EQU   *                                                        UAT13890\n         S     R2,=F'4'            DECREMENT LENGTH BY FOUR             UAT13900\n         BNP   OUT                 IF THAT'S ALL, QUIT                  UAT13910\n         LA    R3,4(,R3)           INCREMENT OFFSET COUNT               UAT13920\n         LA    R6,4(,R6)           NEXT WORD                            UAT13930\n         BXLE  R14,R4,LINE1        LOOP BACK                            UAT13940\n         OI    FLAG2,#NOSHIFT      SET NO SHIFT OPTION                  UAT13950\n         BAL   R9,PRINTIT          GO PRINT THIS LINE                   UAT13960\n         B     NEWLINE             BEGIN WITH NEW LINE                  UAT13970\nOUT      EQU   *                                                        UAT13980\n         OI    FLAG2,#NOSHIFT      SET NO SHIFT OPTION                  UAT13990\n         BAL   R9,PRINTIT          GO PRINT REMAINING LINE              UAT14000\n         SPACE                                                          UAT14010\nDUMPITXT EQU   *                                                        UAT14020\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT14030\n         BR    R9                  RETURN TO CALLER                     UAT14040\n         DROP  R8                  DON'T NEED THIS ANY MORE             UAT14050\n         SPACE 2                                                        UAT14060\nMOVEIT3  MVC   LINE+90(*-*),0(R6)    *** EXECUTED INSTRUCTION ***       UAT14070\nMOVEIT4  MVC   0(*-*,R14),WORKAREA   *** EXECUTED INSTRUCTION ***       UAT14080\n         EJECT                                                          UAT14090\n*********************************************************************** UAT14100\n*                                                                     * UAT14110\n*      PRINTBLK                                                       * UAT14120\n*                                                                     * UAT14130\n*           THIS ROUTINE PRINTS A DATA BLOCK FROM THE TAPE.  AN       * UAT14140\n*           ATTEMPT IS MADE TO PRINT LOGICAL RECORDS FOUND IN THE     * UAT14150\n*           DATA BLOCK.  IF THE TAPE HAS STANDARD LABELS, THEN THE    * UAT14160\n*           LRECL FIELD OF THE HDR2 LABEL IS USED TO DETERMINE THE    * UAT14170\n*           RECORD LENGTH.  IF THE LRECL IS LESS THAN 133, THEN       * UAT14180\n*           EACH RECORD IS PRINTED ON A SEPARATE LINE.  IF THE        * UAT14190\n*           LRECL IS 133 OR GREATER, THEN A DEFAULT OF 80 IS USED.    * UAT14200\n*                                                                     * UAT14210\n*           NOTE:  CURRENTLY, HDR2 LABEL LRECLS ARE USED FOR          * UAT14220\n*                  RECFM=F FILES ONLY.  FOR RECFM=V OR U FILES,       * UAT14230\n*                  LRECL=80 IS USED.                                  * UAT14240\n*                                                                     * UAT14250\n*********************************************************************** UAT14260\n         SPACE                                                          UAT14270\nPRINTBLK EQU   *                                                        UAT14280\n         TM    OPTIONS2,#PRINT     WAS PRINT OPTION SPECIFIED?          UAT14290\n         BZR   R9                  NO - RETURN TO CALLER                UAT14300\n         TM    FLAG,#TAPEMRK       TAPE MARK HERE?                      UAT14310\n         BOR   R9                  YES - RETURN TO CALLER               UAT14320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT14330\n         TM    OPTIONS2,#PMAX      WAS PRINTMAX OPTION SPECIFIED?       UAT14340\n         BNO   NOPMAX1             NO - SKIP CHECK                      UAT14350\n         L     R15,PBLKCT          LOAD BLOCK COUNTER                   UAT14360\n         SH    R15,=H'1'           DECREMENT THE COUNTER                UAT14370\n         ST    R15,PBLKCT          SAVE NEW COUNTER VALUE               UAT14380\n         BNM   NOPMAX1             CONTINUE WITH PRINT IF NOT NEGATIVE  UAT14390\n         AH    R15,=H'1'           IS COUNT -1?                         UAT14400\n         BNZ   PRINTBXT            NO - RETURN TO CALLER                UAT14410\n         MOVEMSG MSG53             PRINT SUSPENDED MSG                  UAT14420\n         OI    FLAG2,#NOSHIFT      INDICATE NO SHIFT                    UAT14430\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT14440\n         B     PRINTBXT            RETURN TO CALLER                     UAT14450\nNOPMAX1  EQU   *                                                        UAT14460\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT14470\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14480\n         MOVEMSG MSG24             FILE XX BLOCK YY LENGTH ZZ           UAT14490\n         UNPK  LINE+MSG24F(4),DOUBLE(8)   FILE NUMBER TO CHARACTER      UAT14500\n         OI    LINE+MSG24F+3,X'F0' INSURE SIGN NIBBLE                   UAT14510\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT14520\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14530\n         UNPK  LINE+MSG24B(6),DOUBLE(8)   BLOCK NUMBER TO CHARACTER     UAT14540\n         OI    LINE+MSG24B+5,X'F0' INSURE SIGN NIBBLE                   UAT14550\n         LH    R15,RECLEN          LOAD BLOCK LENGTH                    UAT14560\n         CVD   R15,DOUBLE          CONVERT TO PACKED DECIMAL            UAT14570\n         UNPK  LINE+MSG24L(5),DOUBLE(8)   BLOCK LENGTH TO CHARACTER     UAT14580\n         OI    LINE+MSG24L+4,X'F0' INSURE SIGN NIBBLE                   UAT14590\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14600\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT14610\n         LH    R2,RECLEN           LOAD THIS BLOCK'S LENGTH             UAT14620\n         SRDA  R2,32               PREPARE FOR DIVIDE                   UAT14630\n         LA    R5,80               DEFAULT LINE LENGTH OF 80            UAT14640\n         TM    FLAG,#SL            STD LABEL TAPE?                      UAT14650\n         BNO   PRTDFLT             NO - USE DEFAULT                     UAT14660\n         CLI   CURRECFM,C'F'       FIXED-LENGTH FILE?                   UAT14670\n         BNE   PRTDFLT             NO - DON'T SUPPORT OTHERS YET        UAT14680\n         L     R5,CURLRECL         GET CURRENT FILE'S LRECL             UAT14690\n         CH    R5,SYSPRINT+(DCBLRECL-IHADCB)  LESS THAN SYSPRINT LRECL? UAT14700\n         BL    PRTDFLT             YES - USE FILE'S LRECL               UAT14710\n         LA    R5,80               NO - MUST USE DEFAULT OF 80          UAT14720\n         SPACE                                                          UAT14730\nPRTDFLT  EQU   *                                                        UAT14740\n         DR    R2,R5               DIVIDE BY LINE LENGTH                UAT14750\n         LR    R4,R7               DATA BLOCK ADDRESS IN R4             UAT14760\n         LTR   R3,R3               DO WE HAVE A FULL LINE?              UAT14770\n         BZ    LASTLINE            NO - SKIP TO DO LAST LINE            UAT14780\n         SPACE                                                          UAT14790\nFULLLINE EQU   *                                                        UAT14800\n         LR    R15,R5              GET LINE LENGTH                      UAT14810\n         BCTR  R15,0               CALC EXECUTE LENGTH                  UAT14820\n         EX    R15,MOVEIT5         MOVE IN DATA                         UAT14830\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14840\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT14850\n         AR    R4,R5               POINT TO NEXT LINE OF DATA           UAT14860\n         BCT   R3,FULLLINE         GO BACK TO DO NEXT LINE              UAT14870\n         LTR   R2,R2               IS THERE ANY DATA LEFT               UAT14880\n         BNP   PRINTBXT            NO - RETURN TO CALLER                UAT14890\n         SPACE                                                          UAT14900\nLASTLINE EQU   *                                                        UAT14910\n         BCTR  R2,0                GET EXECUTABLE LENGTH                UAT14920\n         EX    R2,MOVEIT5          MOVE REMAINING DATA TO LINE          UAT14930\n         OI    FLAG2,#NOSHIFT      DON'T SHIFT LINE                     UAT14940\n         BAL   R9,PRINTIT                                               UAT14950\n         SPACE                                                          UAT14960\nPRINTBXT EQU   *                                                        UAT14970\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT14980\n         BR    R9                  RETURN TO CALLER                     UAT14990\n         SPACE                                                          UAT15000\nMOVEIT5  MVC   LINE+1(*-*),0(R4)   *** EXECUTED INSTRUCTION ***         UAT15010\n         EJECT                                                          UAT15020\n*********************************************************************** UAT15030\n*                                                                     * UAT15040\n*    TRANSLTE  AND  TRANSBCK                                          * UAT15050\n*                                                                     * UAT15060\n*       THESE ROUTINES PERFORM THE \"EBCDIC TO ASCII\" OR \"ASCII TO     * UAT15070\n*       EBCDIC\" TRANSLATION REQUESTED BY THE USER.                    * UAT15080\n*                                                                     * UAT15090\n*********************************************************************** UAT15100\nTRANSLTE EQU   *                                                        UAT15110\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15120\n         BOR   R9                  YES - RETURN TO CALLER               UAT15130\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15140\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15150\n         USING TABLES,R15          MAKE THEM ADDRESSABLE                UAT15160\n         TM    OPTIONS2,#ETOA      WAS \"ETOA\" OPTION SPECIFIED?         UAT15170\n         BNO   NOETOA              NO EBCDIC TO ASCII TRANSLATE         UAT15180\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15190\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15200\nNOETOA   EQU   *                                                        UAT15210\n         TM    OPTIONS2,#ATOE      WAS \"ATOE\" OPTION SPECIFIED?         UAT15220\n         BNO   TRANSXT             NO ASCII TO EBCDIC TRANSLATE         UAT15230\n         LA    R2,IECTRASA         POINT TO ASCII->EBCDIC TABLE         UAT15240\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15250\n         SPACE 2                                                        UAT15260\nTRANSLAB EQU   *                                                        UAT15270\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15280\n         BOR   R9                  YES - RETURN TO CALLER               UAT15290\n         TM    FLAG2,#AL+#LABREC   ARE WE PROCESSING ASCII LABEL?       UAT15300\n         BNOR  R9                  NO ASCII TO EBCDIC TRANSLATE         UAT15310\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15320\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15330\n         LA    R2,IECTRASA         POINT TO ASCII->EBCDIC TABLE         UAT15340\n         B     TRANS               GO TRANSLATE BUFFER                  UAT15350\n         SPACE 2                                                        UAT15360\n*   THIS ROUTINE TRANSLATES A PREVIOUSLY TRANSLATED ASCII LABEL         UAT15370\n*   FROM EBCDIC BACK INTO ASCII                                         UAT15380\nTRANSBCK EQU   *                                                        UAT15390\n         TM    FLAG,#TAPEMRK       IS THIS BLOCK A TAPE MARK?           UAT15400\n         BOR   R9                  YES - RETURN TO CALLER               UAT15410\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15420\n         TM    FLAG2,#AL+#LABREC   ARE WE PROCESSING ASCII LABEL?       UAT15430\n         BNO   TRANSQ1             NO EBCDIC TO ASCII TRANSLATE         UAT15440\n         TM    OPTIONS2,#ATOE      WAS \"ATOE\" OPTION SPECIFIED?         UAT15450\n         BO    TRANSXT             YES - DON'T TRANSLATE                UAT15460\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15470\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15480\n         B     TRANS               GO TRANSLATE THE BLOCK               UAT15490\nTRANSQ1  EQU   *                                                        UAT15500\n         TM    OPTIONS2,#ETOA      WAS \"ETOA\" OPTION SPECIFIED?         UAT15510\n         BNO   TRANSXT             NO - RETURN                          UAT15520\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT15530\n         LA    R2,IECTSASA         POINT TO EBCDIC->ASCII TABLE         UAT15540\nTRANS    EQU   *                                                        UAT15550\n         LH    R3,RECLEN           LOAD RECORD LENGTH                   UAT15560\n         LA    R4,256              MAXIMUM LENGTH PER TR INSTRUCION     UAT15570\n         LR    R5,R7               DATA ADDRESS                         UAT15580\nTRLOOPB  EQU   *                                                        UAT15590\n         CR    R3,R4               MORE THAN 256 BYTES LEFT?            UAT15600\n         BL    TRLOOPE             NO - BRANCH                          UAT15610\n         TR    0(256,R5),0(R2)     TRANSLATE 256 BYTES OF BUFFER        UAT15620\n         AR    R5,R4               NEXT 256 BYTES                       UAT15630\n         SR    R3,R4               LESS 256 BYTES                       UAT15640\n         BP    TRLOOPB             GO DO IT (IF ANY LEFT)               UAT15650\nTRLOOPE  EQU   *                                                        UAT15660\n         BZ    TRANSXT             RETURN IF NO DATA LEFT               UAT15670\n         BCTR  R3,0                GET EXECUTABLE LENGTH                UAT15680\n         EX    R3,EXTRANS          TRANSLATE REMAINING BUFFER           UAT15690\n         SPACE                                                          UAT15700\nTRANSXT  EQU   *                                                        UAT15710\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT15720\n         BR    R9                  RETURN TO CALLER                     UAT15730\n         DROP  R15                 WE DON'T NEED THIS ANYMORE           UAT15740\n         SPACE                                                          UAT15750\nEXTRANS  TR    0(*-*,R5),0(R2)     ***** EXECUTED INSTRUCTION *****     UAT15760\n         EJECT                                                          UAT15770\n*********************************************************************** UAT15780\n*                                                                     * UAT15790\n*     BLOCKS                                                          * UAT15800\n*                                                                     * UAT15810\n*            THE BLOCKS ROUTINE PRINTS THE SIZE OF THE DATA BLOCK     * UAT15820\n*            IF THE BLOCKS OPTION IS IN EFFECT AND THE DUMP OPTION    * UAT15830\n*            IS NOT IN EFFECT.  PRINTOUT IS CONDENSED WHERE           * UAT15840\n*            POSSIBLE.  IF INDICATED BY THE #TAPEMRK FLAG, THIS       * UAT15850\n*            ROUTINE SHUTS DOWN THE BLOCKS OPTION FOR THE FILE        * UAT15860\n*            AND PRINTS THE SIZE OF THE LAST BLOCK.                   * UAT15870\n*                                                                     * UAT15880\n*********************************************************************** UAT15890\n         SPACE                                                          UAT15900\nBLOCKS   EQU   *                                                        UAT15910\n         TM    OPTIONS1,#BLOCKS    WAS BLOCKS OPTION SELECTED?          UAT15920\n         BNOR  R9                  NO - RETURN TO CALLER                UAT15930\n         TM    OPTIONS1,#DUMP+#DUMPALL   WAS EITHER DUMP OR DUMPALL?    UAT15940\n         BNZR  R9                  YES - RETURN TO CALLER               UAT15950\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT15960\n         TM    FLAG,#TAPEMRK       IS THIS A TAPE MARK?                 UAT15970\n         BNO   CHKBLOCK            NO - NOT END OF FILE                 UAT15980\n         L     R14,BLOCKCNT        GET BLOCK COUNT                      UAT15990\n         LTR   R14,R14             WERE THERE ANY PREV BLOCKS?          UAT16000\n         BZ    BLOCKSXT            NO - JUST EXIT                       UAT16010\n         B     LSTBLOCK            YES - DUMP LAST ACCUMULATION         UAT16020\nCHKBLOCK EQU   *                                                        UAT16030\n         CLC   BLOCKCNT(4),=F'1'   IS THIS 1ST BLOCK?                   UAT16040\n         BE    NEWBLOCK            YES - BRANCH                         UAT16050\n         CLC   RECLEN(2),LASTLEN   BLOCK LENGTH SAME AS LAST TIME?      UAT16060\n         BE    BLOCKSXT            YES - RETURN TO CALLER               UAT16070\n         L     R14,BLOCKCNT        LOAD CURRENT BLOCK COUNTER           UAT16080\n         BCTR  R14,0               DECREMENT BLOCK NUMBER               UAT16090\nLSTBLOCK EQU   *                                                        UAT16100\n         ST    R14,LASTBLK         SAVE THIS                            UAT16110\n         SPACE                                                          UAT16120\n         LA    R14,BLOCKSP1        ADDRESS OF PRINT RTN FOR ONE BLOCK   UAT16130\n         CLC   STARTBLK,LASTBLK    START AND END THE SAME?              UAT16140\n         BE    ONEBLOCK            IF EQUAL, ONLY ONE BLOCK             UAT16150\n         LA    R14,BLOCKSP2        ADDRESS OF PRINT RTN FOR MULT BLOCKS UAT16160\nONEBLOCK EQU   *                                                        UAT16170\n         BALR  R9,R14              GO PRINT MESSAGE                     UAT16180\nNEWBLOCK EQU   *                                                        UAT16190\n         MVC   STARTBLK(4),BLOCKCNT   RESET START BLOCK                 UAT16200\n         MVC   LASTLEN(2),RECLEN   RESET LAST LENGTH                    UAT16210\nBLOCKSXT EQU   *                                                        UAT16220\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16230\n         BR    R9                  RETURN TO CALLER                     UAT16240\n         SPACE                                                          UAT16250\n*  PRINT \"BLOCKS XXXX TO YYYY LENGTH ZZZZ\" MESSAGE                      UAT16260\nBLOCKSP2 EQU   *                                                        UAT16270\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16280\n         MOVEMSG MSG25             BLOCKS XXXX TO YYYY LENGTH ZZZZ      UAT16290\n         L     R14,LASTBLK         GET LAST BLOCK                       UAT16300\n         CVD   R14,DOUBLE          CONVERT LAST BLOCK TO DECIMAL        UAT16310\n         UNPK  LINE+MSG25T(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16320\n         OI    LINE+MSG25T+5,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16330\n         L     R14,STARTBLK        LOAD STARTING BLOCK                  UAT16340\n         CVD   R14,DOUBLE          CONVERT TO DECIMAL                   UAT16350\n         UNPK  LINE+MSG25B(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16360\n         OI    LINE+MSG25B+5,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16370\n         BCT   R14,SGLSKIP1        IF NOT FIRST BLOCK, DO SINGLE SKIP   UAT16380\n         MVI   LINE,C'0'           IF FIRST BLOCK, DO DOUBLE SKIP       UAT16390\nSGLSKIP1 EQU   *                                                        UAT16400\n         LH    R15,LASTLEN         LOAD BLOCK LENGTH                    UAT16410\n         CVD   R15,DOUBLE          CONVERT BLK LENGTH TO DECIMAL        UAT16420\n         UNPK  LINE+MSG25L(5),DOUBLE(8)   TO PRINTABLE FORM             UAT16430\n         OI    LINE+MSG25L+4,X'F0' INSURE PRINTABLE LAST DIGIT          UAT16440\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT16450\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16460\n         BR    R9                  RETURN TO CALLER                     UAT16470\n         SPACE                                                          UAT16480\n*  PRINT \"BLOCK  XXXX         LENGTH ZZZZ\" MESSAGE                      UAT16490\nBLOCKSP1 EQU   *                                                        UAT16500\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16510\n         MOVEMSG MSG26             BLOCK XXXX LENGTH YYYY               UAT16520\n         L     R14,STARTBLK        LOAD STARTING BLOCK                  UAT16530\n         CVD   R14,DOUBLE          CONVERT TO DECIMAL                   UAT16540\n         UNPK  LINE+MSG26B(6),DOUBLE(8)   TO PRINTABLE FORM             UAT16550\n         OI    LINE+MSG26B+5,X'F0' INSURE LAST DIGIT PRINTABLE          UAT16560\n         BCT   R14,SGLSKIP2        IF NOT FIRST BLOCK, DO SINGLE SKIP   UAT16570\n         MVI   LINE,C'0'           IF FIRST BLOCK, DO DOUBLE SKIP       UAT16580\nSGLSKIP2 EQU   *                                                        UAT16590\n         LH    R15,LASTLEN         LOAD LAST LENGTH                     UAT16600\n         CVD   R15,DOUBLE          CONVERT TO DECIMAL                   UAT16610\n         UNPK  LINE+MSG26L(5),DOUBLE(8)   TO PRINTABLE FORM             UAT16620\n         OI    LINE+MSG26L+4,X'F0' INSURE LAST DIGIT PRINTABLE          UAT16630\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT16640\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT16650\n         BR    R9                  RETURN TO CALLER                     UAT16660\n         EJECT                                                          UAT16670\n*********************************************************************** UAT16680\n*                                                                     * UAT16690\n*     OPEN1                                                           * UAT16700\n*                                                                     * UAT16710\n*          THIS ROUTINE OPENS THE SYSPRINT AND SYSUT1 DCB'S           * UAT16720\n*          AND ALLOCATES A BUFFER FOR SYSUT1.                         * UAT16730\n*                                                                     * UAT16740\n*********************************************************************** UAT16750\n         SPACE                                                          UAT16760\nOPEN1    EQU   *                                                        UAT16770\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT16780\n         SPACE 2                                                        UAT16790\n*    VERIFY PRESENCE OF SYSPRINT, SYSUT1, AND SYSUT2 DD-STATEMENTS      UAT16800\n         SPACE 1                                                        UAT16810\n         EXTRACT TIOTADDR,'S',FIELDS=TIOT   GO GET TIOT ADDRESS         UAT16820\n         L     R2,TIOTADDR         LOAD TIOT POINTER                    UAT16830\n         LA    R2,TIOTDDEN(,R2)    POINT TO FIRST DD ENTRY              UAT16840\n         SR    R15,R15             ZERO OUT WORK REGISTER               UAT16850\nTIOTLOOP EQU   *                                                        UAT16860\n         CLI   TIOTLEN(R2),0       ARE WE AT END OF TIOT?               UAT16870\n         BE    TIOTEND             YES - GET OUT OF LOOP                UAT16880\n         CLC   TIOTDDNM(8,R2),SYSPRINT+DDNAME    IS THIS SYSPRINT?      UAT16890\n         BE    FOUNDP              YES - GO SET FLAG                    UAT16900\n         CLC   TIOTDDNM(8,R2),SYSUT1+DDNAME      IS THIS SYSUT1?        UAT16910\n         BE    FOUND1              YES - GO SET FLAG                    UAT16920\n         CLC   TIOTDDNM(8,R2),SYSUT2+DDNAME      IS THIS SYSUT2?        UAT16930\n         BE    FOUND2              YES - GO SET FLAG                    UAT16940\nTIOTNEXT EQU   *                                                        UAT16950\n         IC    R15,TIOTLEN(,R2)    LOAD DD ENTRY LENGTH                 UAT16960\n         AR    R2,R15              POINT TO NEXT DD ENTRY               UAT16970\n         B     TIOTLOOP            LOOP BACK FOR IT                     UAT16980\n         SPACE                                                          UAT16990\nFOUNDP   EQU   *                                                        UAT17000\n         OI    FLAG,#SYSPRNT       SET FLAG FOR SYSPRINT                UAT17010\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17020\n         SPACE                                                          UAT17030\nFOUND1   EQU   *                                                        UAT17040\n         OI    FLAG,#SYSUT1        SET FLAG FOR SYSUT1                  UAT17050\n         MVC   UCB1(4),TIOTFSRT-1(R2)  SAVE SYSUT1 UCB ADDRESS          UAT17060\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17070\n         SPACE                                                          UAT17080\nFOUND2   EQU   *                                                        UAT17090\n         OI    FLAG,#SYSUT2        SET FLAG FOR SYSUT2                  UAT17100\n         MVC   UCB2(4),TIOTFSRT-1(R2)  SAVE SYSUT2 UCB ADDRESS          UAT17110\n         B     TIOTNEXT            CONTINUE LOOPING THROUGH TIOT        UAT17120\n         SPACE                                                          UAT17130\nTIOTEND  EQU   *                                                        UAT17140\n         TM    FLAG,#SYSPRNT       WAS SYSPRINT FOUND?                  UAT17150\n         BNO   NOPRINT1            NO - GO TERMINATE PROGRAM            UAT17160\n         SPACE 2                                                        UAT17170\n*    OPEN THE SYSPRINT DATA SET                                         UAT17180\n         SPACE                                                          UAT17190\n         OPEN  (SYSPRINT,OUTPUT)   OPEN SYSPRINT                        UAT17200\n         TM    SYSPRINT+OFLGS,#BIT3   DID SYSPRINT OPEN OK?             UAT17210\n         BNO   NOPRINT2            NO - HAVE TO TERMINATE PROGRAM       UAT17220\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT17230\n         SPACE 2                                                        UAT17240\n*    OPEN THE SYSUT1 TAPE DATA SET                                      UAT17250\n         SPACE                                                          UAT17260\n         TM    FLAG,#SYSUT1        WAS SYSUT1 FOUND?                    UAT17270\n         BNO   NOSYS1A             NO - GO TERMINATE PROGRAM            UAT17280\n         L     R15,UCB1            LOAD SYSUT1 UCB ADDRESS              UAT17290\n         CLI   #UCBTYP+2(R15),X'80' IS THIS DEVICE MAGNETIC TAPE?       UAT17300\n         BNE   NOTTAPE1            NO - ISSUE ERROR                     UAT17310\n         CLI   #UCBTYP+3(R15),X'80' IS THIS A 3480?                     UAT17320\n         BNE   NOT3480A            NO - SKIP                            UAT17330\n         OI    FLAG2,#CART1        SET 3480 FLAG                        UAT17340\nNOT3480A EQU   *                                                        UAT17350\n         RDJFCB SYSUT1             READ JOB FILE CONTROL BLOCK          UAT17360\n         LA    R2,JFCB             LOAD JFCB BASE REGISTER              UAT17370\n         USING JFCBD,R2            DECLARE BASE ADDRESSING              UAT17380\n         MVI   JFCBNVOL,1          FORCE NUMBER OF VOLUMES TO 1         UAT17390\n         MVI   JFCBLTYP,#BIT3      FORCE LABEL TYPE BLP                 UAT17400\n         NI    JFCBTSDM,X'10'      REMOVE JOB MANAGEMENT FLAGS          UAT17410\n         OI    JFCBTSDM,#BIT1      SHOW VOL SER LIST WAS CHANGED        UAT17420\n         OI    JFCBIND2,#BIT7      FORCE THIS TO BE TEMPORARY DATA SET  UAT17430\n         MVC   VOLSER1(6),JFCBVOLS SAVE JCL'S VOLUME SERIAL             UAT17440\n         DROP  R2                  DON'T NEED THIS NOW                  UAT17450\n         OPEN  (SYSUT1,INPUT),TYPE=J  OPEN SYSUT1 WITH MODIFIED JFCB    UAT17460\n         TM    SYSUT1+OFLGS,#BIT3  DID SYSUT1 OPEN OK?                  UAT17470\n         BNO   NOSYS1B             NO - TERMINATE PROGRAM               UAT17480\n         SPACE 2                                                        UAT17490\n*    GET A 32K I/O BUFFER                                               UAT17500\n         SPACE                                                          UAT17510\n         GETMAIN EC,LV=32760,A=BUFADDR,SP=0   GO GET I/O BUFFER SPACE   UAT17520\n         LTR   R15,R15             DID WE GET THE CORE?                 UAT17530\n         BNZ   NOCORE              NOPE - HAVE TO QUIT                  UAT17540\n         GETMAIN EC,LV=LSTATBUF,A=ASTATBUF,SP=0   GO GET FILE STAT BUF  UAT17550\n         LTR   R15,R15             DID WE GET THE CORE?                 UAT17560\n         BNZ   NOCORE              NOPE - HAVE TO QUIT                  UAT17570\n         MVC   BSTATBUF(4),ASTATBUF   SAVE CURRENT STAT BUF ADDR        UAT17580\n         L     R7,BUFADDR          LOAD I/O BUFFER ADDRESS              UAT17590\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT17600\n         BR    R9                  RETURN TO CALLER                     UAT17610\n         EJECT                                                          UAT17620\n*********************************************************************** UAT17630\n*                                                                     * UAT17640\n*     OPEN2                                                           * UAT17650\n*                                                                     * UAT17660\n*          THIS ROUTINE OPENS THE SYSUT2 DCB.                         * UAT17670\n*                                                                     * UAT17680\n*********************************************************************** UAT17690\n         SPACE                                                          UAT17700\nOPEN2    EQU   *                                                        UAT17710\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT17720\n         BNOR  R9                  NO - RETURN TO CALLER                UAT17730\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT17740\n         SPACE 2                                                        UAT17750\n*    OPEN THE SYSUT2 TAPE DATA SET                                      UAT17760\n         SPACE                                                          UAT17770\n         TM    FLAG,#SYSUT2        WAS SYSUT2 FOUND?                    UAT17780\n         BNO   NOSYS2A             NO - GO TERMINATE PROGRAM            UAT17790\n         L     R15,UCB2            LOAD SYSUT2 UCB ADDRESS              UAT17800\n         CLI   #UCBTYP+2(R15),X'80' IS THIS DEVICE MAGNETIC TAPE?       UAT17810\n         BNE   NOTTAPE2            NO - ISSUE ERROR                     UAT17820\n         CLI   #UCBTYP+3(R15),X'80' IS THIS A 3480?                     UAT17830\n         BNE   NOT3480B            NO - SKIP                            UAT17840\n         OI    FLAG2,#CART2        SET 3480 FLAG                        UAT17850\n         LA    R14,DEN38K          DEFAULT DENSITY                      UAT17860\n         B     DEFDEN2             PROCEED WITH OPEN                    UAT17870\nNOT3480B EQU   *                                                        UAT17880\n         LA    R14,DEN6250         DEFAULT 6250 BPI                     UAT17890\n         TM    #UCBTYP+0(R15),X'02' THIS DEVICE SUPPORT 6250?           UAT17900\n         BO    DEFDEN2             YES - LET 6250 BE DEFAULT            UAT17910\n         LA    R14,DEN1600         DEFAULT 1600 BPI                     UAT17920\n         TM    #UCBTYP+0(R15),X'04' THIS DEVICE SUPPORT 1600?           UAT17930\n         BO    DEFDEN2             YES - LET 1600 BE DEFAULT            UAT17940\n         LA    R14,DEN800          DEFAULT 800 BPI                      UAT17950\nDEFDEN2  EQU   *                                                        UAT17960\n         MVC   DEFDEN(L'DENTAB),0(R14)   SAVE DEFAULT DENSITY INFO      UAT17970\n         SPACE                                                          UAT17980\n         RDJFCB SYSUT2             READ JOB FILE CONTROL BLOCK          UAT17990\n         LA    R2,JFCB             LOAD JFCB BASE REGISTER              UAT18000\n         USING JFCBD,R2            DECLARE BASE ADDRESSING              UAT18010\n         MVI   JFCBNVOL,1          FORCE NUMBER OF VOLUMES TO 1         UAT18020\n         MVI   JFCBLTYP,#BIT3      FORCE LABEL TYPE BLP                 UAT18030\n         NI    JFCBTSDM,X'10'      REMOVE JOB MANAGEMENT FLAGS          UAT18040\n         OI    JFCBTSDM,#BIT1      SHOW VOL SER LIST WAS CHANGED        UAT18050\n         OI    JFCBIND2,#BIT7      FORCE THIS TO BE TEMPORARY DATA SET  UAT18060\n         MVC   VOLSER2(6),JFCBVOLS SAVE JCL'S VOLUME SERIAL             UAT18070\n         OPEN  (SYSUT2,INPUT),TYPE=J    OPEN THE OUTPUT TAPE DCB        UAT18080\n         TM    SYSUT2+OFLGS,#BIT3  DID SYSUT2 OPEN OK?                  UAT18090\n         BNO   NOSYS2B             NO - LET'S TERMINATE THE PROGRAM     UAT18100\n         SPACE 2                                                        UAT18110\n*   PREPARE MODESET ON SYSUT2 TAPE TO SET PROPER TAPE DENSITY           UAT18120\n         SPACE                                                          UAT18130\n         TM    FLAG2,#CART2        WRITING TO 3480 CARTRIDGE?           UAT18140\n         BNO   CHKREEL2            NO - SKIP 3480 STUFF                 UAT18150\n         MVC   MODECCW(1),DEN38K+DENTABM   MAKE CCW MODESET DUMMY       UAT18160\n         MVC   TAPEDEN(1),DEN38K+DENTABJ   SAVE DENSITY CHARACTER       UAT18170\n         MVC   DENSITY2(4),DEN38K+DENTABC  FOR OUR MESSAGE              UAT18180\n         MVC   OUTIRG(6),DEN38K+DENTABN    IRG SIZE INFO                UAT18190\n         ICM   R15,15,DEN38K+DENTABB  800 BYTES PER INCH                UAT18200\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18210\nCHKREEL2 EQU   *                                                        UAT18220\n         CLI   JFCDEN,JFCDOMIT     WAS DENSITY OMITTED ON DDCARD?       UAT18230\n         BNE   CHK800              NO - BRANCH                          UAT18240\n         MOVEMSG MSG42             DEFAULT DENSITY ON SYSUT2            UAT18250\n         MVC   LINE+MSG42D(4),DEFDEN+2  PUT DENSITY INTO MSG            UAT18260\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18270\n         BAL   R9,PRINTIT          GO PRINT THIS MESSAGE                UAT18280\n         B     SETDEFD             GO SET THE DEFAULT DENSITY           UAT18290\nCHK800   EQU   *                                                        UAT18300\n         CLI   JFCDEN,JFCD800      800 BPI?                             UAT18310\n         BNE   CHK1600             NO - BRANCH                          UAT18320\n         MVC   MODECCW(1),DEN800+DENTABM   MAKE CCW MODESET 800         UAT18330\n         MVC   TAPEDEN(1),DEN800+DENTABJ   SAVE DENSITY CHARACTER       UAT18340\n         MVC   DENSITY2(4),DEN800+DENTABC  FOR OUR MESSAGE              UAT18350\n         MVC   OUTIRG(6),DEN800+DENTABN    IRG SIZE INFO                UAT18360\n         ICM   R15,15,DEN800+DENTABB  800 BYTES PER INCH                UAT18370\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18380\nCHK1600  EQU   *                                                        UAT18390\n         CLI   JFCDEN,JFCD1600     1600 BPI?                            UAT18400\n         BNE   CHK6250             NO - BRANCH                          UAT18410\n         MVC   MODECCW(1),DEN1600+DENTABM   MAKE CCW MODESET 1600       UAT18420\n         MVC   TAPEDEN(1),DEN1600+DENTABJ   SAVE DENSITY CHARACTER      UAT18430\n         MVC   DENSITY2(4),DEN1600+DENTABC  FOR OUR MESSAGE             UAT18440\n         MVC   OUTIRG(6),DEN1600+DENTABN    IRG SIZE INFO               UAT18450\n         ICM   R15,15,DEN1600+DENTABB 1600 BYTES PER INCH               UAT18460\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18470\nCHK6250  EQU   *                                                        UAT18480\n         CLI   JFCDEN,JFCD6250     6250 BPI?                            UAT18490\n         BNE   INVDEN              NO - UATAPE DOES NOT SUPPORT OTHERS  UAT18500\n         MVC   MODECCW(1),DEN6250+DENTABM   MAKE CCW MODESET 6250       UAT18510\n         MVC   TAPEDEN(1),DEN6250+DENTABJ   SAVE DENSITY CHARACTER      UAT18520\n         MVC   DENSITY2(4),DEN6250+DENTABC  FOR OUR MESSAGE             UAT18530\n         MVC   OUTIRG(6),DEN6250+DENTABN    IRG SIZE INFO               UAT18540\n         ICM   R15,15,DEN6250+DENTABB 6250 BYTES PER INCH               UAT18550\n         B     DENCOMMN            BRANCH TO COMMON CODE                UAT18560\nSETDEFD  EQU   *                                                        UAT18570\n         MVC   TAPEDEN(1),DEFDEN   DENSITY CHARACTER CODE               UAT18580\n         MVC   MODECCW(1),DEFDEN+1 SET MODESET CCW                      UAT18590\n         MVC   DENSITY2(4),DEFDEN+2  DENSITY IN ENGLISH                 UAT18600\n         ICM   R15,15,DEFDEN+6     BINARY BPI                           UAT18610\nDENCOMMN EQU   *                                                        UAT18620\n         ST    R15,DENSYS2         SAVE TAPE DENSITY                    UAT18630\n         MOVEMSG MSG10                    OUTPUT TAPE DENSITY =         UAT18640\n         MVC   LINE+MSG10D(4),DENSITY2    MOVE IN DENSITY               UAT18650\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18660\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT18670\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT18680\n         BR    R9                  RETURN TO CALLER                     UAT18690\n         EJECT                                                          UAT18700\n*********************************************************************** UAT18710\n*                                                                     * UAT18720\n*     LABELS                                                          * UAT18730\n*                                                                     * UAT18740\n*        PERFORM SYSUT1 AND SYSUT2 TAPE VOLUME LABEL PROCESSING       * UAT18750\n*                                                                     * UAT18760\n*********************************************************************** UAT18770\n         SPACE                                                          UAT18780\n*      PERFORM SYSUT1 VOLUME LABEL PROCESSING                           UAT18790\n         SPACE                                                          UAT18800\nLABELS   EQU   *                                                        UAT18810\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT18820\nGETVOLLB EQU   *                                                        UAT18830\n         BAL   R9,READ1            GO READ 1ST RECORD ON TAPE           UAT18840\n         TM    FLAG,#TAPEMRK       DID WE FIND LEADING TAPE MARK?       UAT18850\n         BO    CHECKLTM            YES - CHECK 'LTM' OPTION             UAT18860\n         LA    R15,75              MINIMUM ACCEPTABLE RECORD LENGTH     UAT18870\n         CH    R15,RECLEN          IS LABEL RECORD SHORTER THAN 75?     UAT18880\n         BNL   NOTSL               YES- DO NOT CONSIDER STANDARD LABEL  UAT18890\n         LA    R15,85              MAXIMUM ACCEPTABLE RECORD LENGTH     UAT18900\n         CH    R15,RECLEN          IS LABEL RECORD LONGER THAN 85?      UAT18910\n         BNH   NOTSL               YES- DO NOT CONSIDER STANDARD LABEL  UAT18920\n         USING VOL1D,R7            GET VOLUME LABEL ADDRESSING          UAT18930\n         CLC   VOL1VOL1(4),=C'VOL1'   IS THIS A VOLUME LABEL?           UAT18940\n         BNE   CHKASCII            NO - CHECK FOR ASCII LABELS          UAT18950\n         OI    FLAG,#SL            SET FLAG TO SHOW STD. LABEL          UAT18960\n         MOVEMSG MSG2              TAPE CONTAINS STANDARD LABELS        UAT18970\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT18980\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT18990\n         MVC   VOLSER1(6),VOL1SER  SAVE THE VOLUME SERIAL               UAT19000\n         B     OPEN1A              SKIP SOME STUFF                      UAT19010\n         SPACE                                                          UAT19020\nCHECKLTM EQU   *                                                        UAT19030\n         OI    FLAG,#LTMPRES       SAY THAT LTM FOUND                   UAT19040\n         TM    OPTIONS2,#LTM       WAS 'LTM' OPTION SPECIFIED?          UAT19050\n         BNO   LTMNOTOK            NO - LEADING TAPE MARK IS NOT OK     UAT19060\n         MOVEMSG MSG51             LEADING TAPE MARK SKIPPED            UAT19070\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19080\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19090\n         B     GETVOLLB            GO CHECK FOR A VOLUME LABEL          UAT19100\nLTMNOTOK EQU   *                                                        UAT19110\n         MOVEMSG MSG52             LEADING TAPE MARK FOUND - NOT SL     UAT19120\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19130\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19140\n         B     OPEN1A              CONTINUE AS NON STD LABELS           UAT19150\n         SPACE                                                          UAT19160\nCHKASCII EQU *               'V O L 1'   (IN ASCII)                     UAT19170\n         CLC   VOL1VOL1(4),=X'564F4C31'  IS THIS ASCII \"VOL1\"?          UAT19180\n         BNE   NOTSL               NO - CONSIDER IT NONSTANDARD         UAT19190\n         MOVEMSG MSG49             TAPE CONTAINS ASCII LABELS           UAT19200\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19210\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT19220\n         OI    FLAG,#SL            SHOWS THAT WE HAVE STD. LABELS       UAT19230\n         OI    FLAG2,#AL           SHOW THAT WE HAVE ASCII LABELS       UAT19240\n         MVC   VOLSER1(6),VOL1SER  SAVE THE VOLUME SERIAL               UAT19250\n         L     R15,VTABLES         GET TRANSLATE TABLES CSECT ADDR      UAT19260\n         USING TABLES,R15          MAKE THEM ADDRESSABLE                UAT19270\n         TR    VOLSER1(6),IECTRASA TRANSLATE IT TO EBCDIC               UAT19280\n         DROP  R15                 WE DON'T NEED THIS ANYMORE           UAT19290\n         B     OPEN1A              SKIP SOME STUFF                      UAT19300\n         DROP  R7                  DON'T NEED THIS NOW                  UAT19310\nNOTSL    EQU   *                                                        UAT19320\n         MOVEMSG MSG3              TAPE DOES NOT CONTAIN STANDARD LABEL UAT19330\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19340\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19350\n         SPACE                                                          UAT19360\nOPEN1A   EQU   *                                                        UAT19370\n         TM    FLAG2,#CART1        IS THIS A 3480 CARTRIDGE?            UAT19380\n         BO    OPEN1B              YES - PROCESS DIFFERENTLY            UAT19390\n         MOVEMSG MSG6              WRITE RING IS IN                     UAT19400\n         BAL   R9,SENSE1           GO GET SYSUT1 SENSE INFO             UAT19410\n         TM    #SENSE1,#BIT6       CHECK WRITE RING BIT                 UAT19420\n         BNO   RINGIN              BRANCH IF IT'S IN                    UAT19430\n         MVC   LINE+MSG6W(4),=C'OUT.'  SAY WRITE RING IS OUT            UAT19440\nRINGIN   EQU   *                                                        UAT19450\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19460\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19470\n         BAL   R9,REWIND1          REWIND THE SYSUT1 TAPE               UAT19480\n         B     LABELS2             NOW GO PROCESS SYSUT2                UAT19490\n         SPACE                                                          UAT19500\nOPEN1B   EQU   *                                                        UAT19510\n         BAL   R9,SENSE1           GO GET SYSUT1 SENSE INFO             UAT19520\n         MOVEMSG MSG61             WRITE PROTECT ENABLED                UAT19530\n         TM    #SENSE1,#BIT6       IS IT WRITE PROTECTED?               UAT19540\n         BO    WRITEPON            YES - BRANCH                         UAT19550\n         MVC   LINE+MSG61A(9),=C'DISABLED.'  SAY WRITE PROTECT OFF      UAT19560\nWRITEPON EQU   *                                                        UAT19570\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT19580\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT19590\n         BAL   R9,REWIND1          REWIND SYSUT1 TAPE                   UAT19600\n         SPACE 2                                                        UAT19610\n*  PERFORM LABCHECK OPTION CHECK (DISPLAY VOLSER AND QUIT)              UAT19620\n         TM    OPTIONS3,#LABCHK    LABCHECK OPTION IN EFFECT?           UAT19630\n         BNO   LABELS2             NO - SKIP                            UAT19640\n         ICM   R15,B'0011',=C'NL'  NONSTANDARD LABEL                    UAT19650\n         TM    FLAG,#SL            STANDARD LABEL?                      UAT19660\n         BNO   LABCHK1             NO - BRANCH                          UAT19670\n         ICM   R15,B'0011',=C'AL'  ASCII LABEL?                         UAT19680\n         TM    FLAG2,#AL           ASCII LABEL                          UAT19690\n         BO    LABCHK1             YES - BRANCH                         UAT19700\n         ICM   R15,B'0011',=C'SL'  STANDARD LABEL                       UAT19710\nLABCHK1  EQU   *                                                        UAT19720\n         STCM  R15,B'0011',WTO1LAB  STORE NL/AL/SL INTO WTO MSG         UAT19730\n         MVC   WTO1VOL(6),VOLSER1   STORE VOLSER INTO WTO MSG           UAT19740\n         L     R15,UCB1            GET SYSUT1 UCB ADDRESS               UAT19750\n         MVC   WTO1UNIT(3),#UCBNAME(R15)  STORE UCB NAME INTO WTO MSG   UAT19760\n         MVC   WTO1TYPE(4),=C'CART'                                     UAT19770\n         TM    FLAG2,#CART1        IS THIS A CARTRIDGE?                 UAT19780\n         BO    LABCHK2             NO - SKIP                            UAT19790\n         MVC   WTO1TYPE(4),=C'TAPE'                                     UAT19800\nLABCHK2  EQU   *                                                        UAT19810\n         WTO   MF=(E,WTO1)         TAPE ON XXX IS SL VOLSER             UAT19820\n         B     EPILOG              JUST QUIT                            UAT19830\n         SPACE 2                                                        UAT19840\n*     PERFORM SYSUT2 VOLUME LABEL PROCESSING                            UAT19850\n         SPACE                                                          UAT19860\nLABELS2  EQU   *                                                        UAT19870\n         TM    OPTIONS1,#COPY      WAS COPY OPTION SPECIFIED?           UAT19880\n         BNO   LABELS1             NO - DO NOT CHECK SYSUT2             UAT19890\n         TM    OPTIONS2,#BYPASS    WAS BYPASS OPTION SPECIFIED?         UAT19900\n         BO    BYPASS2             YES - DO NOT CHECK SYSUT2            UAT19910\n         BAL   R9,READ2            GO READ 1ST RECORD ON TAPE           UAT19920\n         TM    FLAG,#TAPEMRK       DID WE FIND TAPE MARK?               UAT19930\n         BO    INVALID1            YES - CANNOT USE THIS TAPE           UAT19940\n         LA    R15,80              LOAD SUPPOSED LABEL RECORD LENGTH    UAT19950\n         CH    R15,RECLEN          IS THE RECORD REALLY 80?             UAT19960\n         BNE   INVALID1            NO - CANNOT USE THIS TAPE            UAT19970\n         USING VOL1D,R7            DECLARE VOLUME LABEL ADDRESSABILITY  UAT19980\n         CLC   VOL1VOL1(4),=C'VOL1'   IS THIS REALLY VOLUME LABEL?      UAT19990\n         BNE   INVALID1            NO - CANNOT USE THIS TAPE            UAT20000\n         MVC   VOLSER2X(6),VOL1SER SAVE TAPE'S VOLUME SERIAL            UAT20010\n         CLC   VOL1SER(6),VOLSER2  DO VOLUME SERIAL MATCH?              UAT20020\n         BNE   INVALID2            NO - CANNOT USE THIS TAPE            UAT20030\n         DROP  R7                  DON'T NEED THIS ANY MORE             UAT20040\n         MOVEMSG MSG7              ORIGINAL SYSUT2 VOLUME SERIAL        UAT20050\n         MVC   LINE+MSG7S(6),VOLSER2X    PUT VOL SER IN MSG             UAT20060\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT20070\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT20080\nBYPASS2  EQU   *                                                        UAT20090\n         BAL   R9,REWIND2          REWIND THE OUTPUT TAPE               UAT20100\n         BAL   R9,MODESET2         GO SET DRIVE DENSITY                 UAT20110\n         BAL   R9,SENSE2           GO GET SYSUT2 SENSE INFO.            UAT20120\n*** NOTE:  SENSE BYTE 1 BIT 6 IS SET FOR WRITE PROTECT ENABLED ON       UAT20130\n***        BOTH 3420 AND 3480 TAPE DRIVES.                              UAT20140\n         TM    #SENSE1,#BIT6       CHECK WRITE PROTECT BIT              UAT20150\n         BO    FILEPROT            CAN'T USE THIS TAPE                  UAT20160\nLABELS1  EQU   *                                                        UAT20170\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT20180\n         BR    R9                  RETURN TO CALLER                     UAT20190\n         EJECT                                                          UAT20200\n*********************************************************************** UAT20210\n*                                                                     * UAT20220\n*     EOTSTATS                                                        * UAT20230\n*                                                                     * UAT20240\n*         THIS ROUTINE PRINTS THE VARIOUS STATISTIC FIELDS            * UAT20250\n*         FOUND IN THE UCB'S FOR BOTH SYSUT1 AND SYSUT2               * UAT20260\n*         TAPES.                                                      * UAT20270\n*                                                                     * UAT20280\n*********************************************************************** UAT20290\n         SPACE                                                          UAT20300\nEOTSTATS EQU   *                                                        UAT20310\n         STACK R9                       PLACE RETURN ADDRESS ON STACK   UAT20320\n         L     R4,UCB1                  LOAD SYSUT1 UCB ADDRESS         UAT20330\n         L     R2,#UCBXTN-1(R4)         LOAD SYSUT1 UCB EXTENSION ADDR  UAT20340\n         MOVEMSG MSG28                  STATISTICS                      UAT20350\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20360\n         BNO   NC0                      NO - SKIP A FEW                 UAT20370\n         MVC   LINE+MSGS2-6(6),=C'SYSUT2'    SAY SYSUT2 TOO             UAT20380\n         L     R5,UCB2                  LOAD SYSUT2 UCB ADDRESS         UAT20390\n         L     R3,#UCBXTN-1(R5)         LOAD SYSUT2 UCB EXTENSION ADDR  UAT20400\nNC0      EQU   *                                                        UAT20410\n         BAL   R9,PRINTIT               GO PRINT THE LINE               UAT20420\n         SPACE                                                          UAT20430\n*   VOLUME SERIAL NUMBER                                                UAT20440\n         MOVEMSG MSG29                  VOLUME SERIAL                   UAT20450\n         MVC   LINE+MSGS1-6(6),VOLSER1  SYSUT1 VOLUME SERIAL            UAT20460\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20470\n         BNO   NC1                      NO - SKIP A FEW                 UAT20480\n         MVC   LINE+MSGS2-6(6),VOLSER2  SYSUT2 VOLUME SERIAL            UAT20490\nNC1      EQU   *                                                        UAT20500\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20510\n         SPACE                                                          UAT20520\n*   TAPE DRIVE UNIT ADDRESS                                             UAT20530\n         MOVEMSG MSG37                  TAPE DRIVE                      UAT20540\n         MVC   LINE+MSGS1-3(3),#UCBNAME(R4)  MOVE IN SYSUT1 DEVICE ADDR UAT20550\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20560\n         BNO   NC2                      NO - SKIP A FEW                 UAT20570\n         MVC   LINE+MSGS2-3(3),#UCBNAME(R5)  MOVE IN SYSUT2 DEVICE ADDR UAT20580\nNC2      EQU   *                                                        UAT20590\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20600\n         SPACE                                                          UAT20610\n*   TEMPORARY READ ERRORS                                               UAT20620\n         MOVEMSG MSG30                  TEMPORARY READS                 UAT20630\n         SR    R4,R4                    CLEAR WORK REGISTER             UAT20640\n         IC    R4,#UCBTR(R2)            SYSUT1 TEMP READS               UAT20650\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20660\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20670\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20680\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20690\n         BNO   NC3                      NO - SKIP A FEW                 UAT20700\n         IC    R4,#UCBTR(R3)            SYSUT2 TEMP READS               UAT20710\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20720\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)    PRINTABLE                   UAT20730\n         OI    LINE+MSGS2-1,X'F0'              DECIMAL                  UAT20740\nNC3      EQU   *                                                        UAT20750\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20760\n         SPACE                                                          UAT20770\n*   TEMPORARY WRITE ERRORS                                              UAT20780\n         MOVEMSG MSG31                  TEMPORARY WRITES                UAT20790\n         IC    R4,#UCBTW(R2)            SYSUT1 TEMP WRITES              UAT20800\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20810\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20820\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20830\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20840\n         BNO   NC4                      NO - SKIP A FEW                 UAT20850\n         IC    R4,#UCBTW(R3)            SYSUT2 TEMP WRITES              UAT20860\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20870\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT20880\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT20890\nNC4      EQU   *                                                        UAT20900\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT20910\n         SPACE                                                          UAT20920\n*   PERMANENT READ ERRORS                                               UAT20930\n         MOVEMSG MSG32                  PERMANENT READS                 UAT20940\n         IC    R4,#UCBPR(R2)            SYSUT1 PERM READS               UAT20950\n         CVD   R4,DOUBLE                CONVERT TO                      UAT20960\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT20970\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT20980\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT20990\n         BNO   NC5                      NO - SKIP A FEW                 UAT21000\n         IC    R4,#UCBPR(R3)            SYSUT2 PERM READS               UAT21010\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21020\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21030\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21040\nNC5      EQU   *                                                        UAT21050\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21060\n         SPACE                                                          UAT21070\n*   PERMANENT WRITE ERRORS                                              UAT21080\n         MOVEMSG MSG33                  PERMANENT WRITES                UAT21090\n         IC    R4,#UCBPW(R2)            SYSUT1 PERM WRITES              UAT21100\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21110\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21120\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21130\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21140\n         BNO   NC6                      NO - SKIP A FEW                 UAT21150\n         IC    R4,#UCBPW(R3)            SYSUT2 PERM WRITES              UAT21160\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21170\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21180\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21190\nNC6      EQU   *                                                        UAT21200\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21210\n         SPACE                                                          UAT21220\n*   NOISE BLOCKS                                                        UAT21230\n         MOVEMSG MSG38                  NOISE BLOCKS                    UAT21240\n         IC    R4,#UCBNB(R2)            SYSUT1 NOISE BLOCKS             UAT21250\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21260\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21270\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21280\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21290\n         BNO   NC7                      NO - SKIP A FEW                 UAT21300\n         IC    R4,#UCBNB(R3)            SYSUT2 NOISE BLOCKS             UAT21310\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21320\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21330\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21340\nNC7      EQU   *                                                        UAT21350\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21360\n         SPACE                                                          UAT21370\n*   NUMBER OF ERASE GAPS                                                UAT21380\n         MOVEMSG MSG34                  ERASE GAPS                      UAT21390\n         LH    R4,#UCBERG(R2)           SYSUT1 ERASE GAPS               UAT21400\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21410\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21420\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21430\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21440\n         BNO   NC8                      NO - SKIP A FEW                 UAT21450\n         LH    R4,#UCBERG(R3)           SYSUT2 ERASE GAPS               UAT21460\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21470\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21480\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21490\nNC8      EQU   *                                                        UAT21500\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21510\n         SPACE                                                          UAT21520\n*   CLEANER ACTIONS                                                     UAT21530\n         MOVEMSG MSG35                  CLEANER ACTIONS                 UAT21540\n         LH    R4,#UCBCLN(R2)           SYSUT1 CLEANER ACTIONS          UAT21550\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21560\n         UNPK  LINE+MSGS1-3(3),DOUBLE(8)   PRINTABLE                    UAT21570\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21580\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21590\n         BNO   NC9                      NO - SKIP A FEW                 UAT21600\n         LH    R4,#UCBCLN(R3)           SYSUT2 CLEANER ACTIONS          UAT21610\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21620\n         UNPK  LINE+MSGS2-3(3),DOUBLE(8)   PRINTABLE                    UAT21630\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21640\nNC9      EQU   *                                                        UAT21650\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21660\n         SPACE                                                          UAT21670\n*   START I/O COUNT                                                     UAT21680\n         MOVEMSG MSG36                  START I/O                       UAT21690\n         LH    R4,#UCBSIO(R2)           SYSUT1 SIO'S                    UAT21700\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21710\n         UNPK  LINE+MSGS1-6(6),DOUBLE(8)   PRINTABLE                    UAT21720\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT21730\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21740\n         BNO   NC10                     NO - SKIP A FEW                 UAT21750\n         LH    R4,#UCBSIO(R3)           SYSUT2 SIO'S                    UAT21760\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21770\n         UNPK  LINE+MSGS2-6(6),DOUBLE(8)   PRINTABLE                    UAT21780\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT21790\nNC10     EQU   *                                                        UAT21800\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21810\n         SPACE                                                          UAT21820\n*    TOTAL DATA BYTES ON TAPE                                           UAT21830\n         MOVEMSG MSG391                 DATA LENGTH (FEET)              UAT21840\n         L     R4,TBYTECNT              TOTAL BYTES ON TAPE             UAT21850\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21860\n         MVC   LINE+MSGS1-15(15),=X'4020206B2020206B2020206B202120'     UAT21870\n         ED    LINE+MSGS1-15(15),DOUBLE+2  PRINTABLE DECIMAL            UAT21880\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT21890\n         BNO   NC11                     NO - SKIP A FEW                 UAT21900\n         L     R4,TBYTECNT              TOTAL BYTES ON TAPE             UAT21910\n         CVD   R4,DOUBLE                CONVERT TO                      UAT21920\n         MVC   LINE+MSGS2-15(15),=X'4020206B2020206B2020206B202120'     UAT21930\n         ED    LINE+MSGS2-15(15),DOUBLE+2  PRINTABLE DECIMAL            UAT21940\nNC11     EQU   *                                                        UAT21950\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT21960\n         SPACE                                                          UAT21970\n*    TOTAL DATA LENGTH ON TAPE                                          UAT21980\n         MOVEMSG MSG39                  DATA LENGTH (FEET)              UAT21990\n         L     R4,TOTFEET               TOTAL NUMBER OF FEET ON TAPE    UAT22000\n         CVD   R4,DOUBLE                CONVERT TO                      UAT22010\n         UNPK  LINE+MSGS1-5(5),DOUBLE(8)   PRINTABLE                    UAT22020\n         OI    LINE+MSGS1-1,X'F0'             DECIMAL                   UAT22030\n         TM    OPTIONS1,#COPY           IS COPY OPTION IN EFFECT?       UAT22040\n         BNO   NC12                     NO - SKIP A FEW                 UAT22050\n         L     R4,TOTFEET2              TOTAL NUMBER OF FEET ON TAPE    UAT22060\n         CVD   R4,DOUBLE                CONVERT TO                      UAT22070\n         UNPK  LINE+MSGS2-5(5),DOUBLE(8)   PRINTABLE                    UAT22080\n         OI    LINE+MSGS2-1,X'F0'             DECIMAL                   UAT22090\nNC12     EQU   *                                                        UAT22100\n         BAL   R9,PRINTIT               GO PRINT THE MESSAGE            UAT22110\n         SPACE                                                          UAT22120\n         TM    FLAG,#SL            STANDARD LABELS?                     UAT22130\n         BNO   NC13                NO - SKIP                            UAT22140\n         MOVEMSG MSG67             (TOTAL BYTES DOES NOT INCLUDE LABEL) UAT22150\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT22160\nNC13     EQU   *                                                        UAT22170\n         SPACE                                                          UAT22180\n*    PRINT TAPE FILES SUMMARY                                           UAT22190\n         TM    FLAG,#SL            STANDARD LABEL TAPE?                 UAT22200\n         BNO   NOSUMM              NO - NO SUMMARY                      UAT22210\n         L     R6,ASTATBUF         LOAD BEGINNING STAT BUF PTR          UAT22220\n         LA    R4,WSTATBUF         LOAD LENGTH OF EACH ENTRY            UAT22230\n         L     R5,BSTATBUF         LOAD CURRENT POINTER                 UAT22240\n         SR    R5,R4               BACK UP TO LAST ENTRY                UAT22250\n         CR    R5,R6               ARE THERE ANY ENTRIES?               UAT22260\n         BL    NOSUMM              NO - EXIT                            UAT22270\n         LA    R3,1                LAST LINE COUNTER                    UAT22280\nSUMMHDR  EQU   *                                                        UAT22290\n         MOVEMSG MSG47                  SUMMARY HEADING                 UAT22300\n         MVC   LINE+MSG471(6),VOLSER1   INPUT VOLUME SERIAL             UAT22310\n         TM    OPTIONS1,#COPY           COPY OPTION IN EFFECT?          UAT22320\n         BNO   SUMMNCPY                 NO - SKIP VOLSER2               UAT22330\n         MVC   LINE+MSG47M(3),=C'AND'   ADD AN \"AND\"                    UAT22340\n         MVC   LINE+MSG472(6),VOLSER2   OUTPUT VOLUME SERIAL            UAT22350\nSUMMNCPY EQU   *                                                        UAT22360\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22370\n         MOVEMSG MSG45             SUMMARY HEADING                      UAT22380\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22390\n         MOVEMSG MSG46             SUMMARY HEADING UNDERSCORE           UAT22400\n         BAL   R9,PRINTIT          GO PRINT HEADING                     UAT22410\nSUMMLOOP EQU   *                                                        UAT22420\n         TM    OPTIONS2,#CRT       CRT OPTION IN EFFECT?                UAT22430\n         BO    SUMMSKIP            YES - SKIP CHECK FOR HEADER          UAT22440\n         C     R3,LLINES           LINE COUNTER LOW ENOUGH?             UAT22450\n         BNL   SUMMHDR             YES - PRINT HEADER                   UAT22460\nSUMMSKIP EQU   *                                                        UAT22470\n         MVC   LINE+8(4),STATFILE(R6)    FILE NUMBER                    UAT22480\n         MVC   LINE+16(17),STATDSN(R6)   DATA SET NAME                  UAT22490\n         MVC   LINE+37(4),STATRECF(R6)   RECORD FORMAT                  UAT22500\n         MVC   LINE+45(5),STATLREC(R6)   LOGICAL RECORD LENGTH          UAT22510\n         MVC   LINE+54(5),STATBLKS(R6)   BLOCK SIZE                     UAT22520\n         MVC   LINE+63(6),STATNBLK(R6)   NUMBER OF BLOCKS               UAT22530\n         MVC   LINE+73(4),STATLEN(R6)    LENGTH (FEET)                  UAT22540\n         BAL   R9,PRINTIT          GO PRINT THE MESSAGE                 UAT22550\n         BXLE  R6,R4,SUMMLOOP      LOOP BACK FOR NEXT ENTRY             UAT22560\nNOSUMM   EQU   *                                                        UAT22570\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT22580\n         BR    R9                       RETURN TO CALLER                UAT22590\n         EJECT                                                          UAT22600\n*********************************************************************** UAT22610\n*                                                                     * UAT22620\n*     PRINTIT                                                         * UAT22630\n*                                                                     * UAT22640\n*          THIS ROUTINE IS A GENERAL PURPOSE PRINT ROUTINE.  IT       * UAT22650\n*          ACCEPTS A SINGLE PRINT LINE AT \"LINE\" THAT CONTAINS        * UAT22660\n*          CARRIAGE CONTROL, AND MAINTAINS A COUNTER SUCH THAT        * UAT22670\n*          A MAXIMUM OF 60 LINES APPEAR ON EACH PRINTED PAGE.         * UAT22680\n*          SUPPORTED CARRIAGE CONTROL CHARACTERS INCLUDE THE '0'      * UAT22690\n*          FOR DOUBLE SPACING AND THE '-' FOR TRIPLE SPACING, AS      * UAT22700\n*          WELL AS THE BLANK FOR SINGLE SPACING.                      * UAT22710\n*                                                                     * UAT22720\n*********************************************************************** UAT22730\n         SPACE                                                          UAT22740\nPRINTIT  EQU   *                                                        UAT22750\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT22760\n         TM    OPTIONS2,#CRT       IS CRT OPTION IN EFFECT?             UAT22770\n         BO    NOSHIFT             YES - SKIP HEADING STUFF             UAT22780\n         LA    R15,1               ONE LINE SKIPPED                     UAT22790\n         CLI   LINE,C'0'           DOUBLE SPACING?                      UAT22800\n         BE    PUTLINES            YES - BRANCH                         UAT22810\n         LA    R15,2               TWO LINES SKIPPED                    UAT22820\n         CLI   LINE,C'-'           TRIPLE SPACING?                      UAT22830\n         BE    PUTLINES            YES - BRANCH                         UAT22840\n         CLI   LINE,C'1'           PAGE EJECT?                          UAT22850\n         BE    PUTEJECT            YES - BRANCH                         UAT22860\n         SR    R15,R15             WHATEVER, WE WON'T COUNT IT          UAT22870\n         SPACE                                                          UAT22880\nPUTLINES EQU   *                                                        UAT22890\n         L     R14,LLINES          NO. OF LINES LEFT ON PAGE            UAT22900\n         SR    R14,R15             SUBTRACT OFF BLANK LINES             UAT22910\n         BP    SKIPTOF             IF SOME STILL LEFT, BRANCH           UAT22920\nPUTEJECT EQU   *                                                        UAT22930\n         L     R14,PAGENUM         WHAT PAGE IS THIS COMING UP?         UAT22940\n         LA    R14,1(,R14)         INCREMENT PAGE NUMBER BY 1           UAT22950\n         ST    R14,PAGENUM         SAVE NEW PAGE NUMBER                 UAT22960\n         CVD   R14,DOUBLE          CONVERT PAGE NUMBER                  UAT22970\n         UNPK  PAGE(4),DOUBLE(8)      TO CHARACTER FORM                 UAT22980\n         OI    PAGE+3,X'F0'        INSURE SIGN NIBBLE                   UAT22990\n         PUT   SYSPRINT,HEADING1   PRINT ADVERTISEMENT                  UAT23000\n         LA    R14,57              57 LINES LEFT ON PAGE                UAT23010\n         MVI   LINE,C'-'           NEXT LINE IS TRIPLE SPACED           UAT23020\n         SPACE                                                          UAT23030\nSKIPTOF  EQU   *                                                        UAT23040\n         BCTR  R14,0               DECREMENT LINE COUNTER               UAT23050\n         ST    R14,LLINES          SAVE THIS NEW VALUE                  UAT23060\n         TM    OPTIONS2,#CRT       CRT OPTION IN EFFECT?                UAT23070\n         BO    NOSHIFT             YES - DO NOT SHIFT                   UAT23080\n         TM    FLAG2,#NOSHIFT      SHIFT THE LINE OVER?                 UAT23090\n         BO    NOSHIFT             NO - DO NOT SHIFT                    UAT23100\n         MVC   TEMPLINE(1),LINE    MOVE CARRIAGE CONTROL CHAR           UAT23110\n         MVC   TEMPLINE+21(110),LINE+1  SHIFT LINE OVER                 UAT23120\n         MVC   LINE(L'LINE),TEMPLINE   REPLACE ORIGINAL LINE            UAT23130\nNOSHIFT  EQU   *                                                        UAT23140\n         PUT   SYSPRINT,LINE       PRINT THE LINE                       UAT23150\n         NI    FLAG2,255-#NOSHIFT  RESET NOSHIFT FLAG                   UAT23160\n         MVI   LINE,C' '           BLANK OUT THE                        UAT23170\n         MVC   LINE+1(L'LINE-1),LINE     PRINT LINE                     UAT23180\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23190\n         BR    R9                  RETURN TO CALLER                     UAT23200\n         EJECT                                                          UAT23210\n*********************************************************************** UAT23220\n*                                                                     * UAT23230\n*     READ1                                                           * UAT23240\n*                                                                     * UAT23250\n*            THIS ROUTINE READS A SINGLE BLOCK FROM THE SYSUT1        * UAT23260\n*            TAPE.  THE LENGTH OF THE BLOCK IS CALCULATED AND         * UAT23270\n*            PLACED AT \"RECLEN\".                                      * UAT23280\n*                                                                     * UAT23290\n*********************************************************************** UAT23300\n         SPACE                                                          UAT23310\nREAD1    EQU   *                                                        UAT23320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23330\n         STCM  R7,7,READADDR       SAVE BUFFER ADDR IN CCW              UAT23340\n         LA    R2,READCCW          POINT TO THE CHANNEL PROGRAM         UAT23350\n         BAL   R9,EXCP1            GO READ THE NEXT BLOCK               UAT23360\n         LH    R15,READLEN         LOAD LENGTH OF ATTEMPTED READ        UAT23370\n         SH    R15,IOB1RES         SUBTRACT OFF THE RESIDUAL LENGTH     UAT23380\n         STH   R15,RECLEN          SAVE RECORD LENGTH                   UAT23390\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23400\n         BR    R9                  RETURN TO CALLER                     UAT23410\n         SPACE 3                                                        UAT23420\n*********************************************************************** UAT23430\n*                                                                     * UAT23440\n*     READ2                                                           * UAT23450\n*                                                                     * UAT23460\n*            THIS ROUTINE READS A SINGLE BLOCK FROM THE SYSUT2        * UAT23470\n*            TAPE.  THE LENGTH OF THE BLOCK IS CALCULATED AND         * UAT23480\n*            PLACED AT \"RECLEN\".                                      * UAT23490\n*                                                                     * UAT23500\n*********************************************************************** UAT23510\n         SPACE                                                          UAT23520\nREAD2    EQU   *                                                        UAT23530\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23540\n         STCM  R7,7,READADDR       SAVE BUFFER ADDR IN CCW              UAT23550\n         LA    R2,READCCW          POINT TO THE CHANNEL PROGRAM         UAT23560\n         BAL   R9,EXCP2            GO READ THE NEXT BLOCK               UAT23570\n         LH    R15,READLEN         LOAD LENGTH OF ATTEMPTED READ        UAT23580\n         SH    R15,IOB2RES         SUBTRACT OFF THE RESIDUAL LENGTH     UAT23590\n         STH   R15,RECLEN          SAVE RECORD LENGTH                   UAT23600\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23610\n         BR    R9                  RETURN TO CALLER                     UAT23620\n         EJECT                                                          UAT23630\n*********************************************************************** UAT23640\n*                                                                     * UAT23650\n*     WRITE2                                                          * UAT23660\n*                                                                     * UAT23670\n*            THIS ROUTINE WRITES A SINGLE BLOCK OR TAPE MARK ON       * UAT23680\n*            THE SYSUT2 TAPE.  THE TAPE INDICATE CONDITION IS         * UAT23690\n*            CHECKED BEFORE WRITING TO DETERMINE IF THERE IS STILL    * UAT23700\n*            ROOM LEFT ON THE TAPE.                                   * UAT23710\n*                                                                     * UAT23720\n*********************************************************************** UAT23730\n         SPACE                                                          UAT23740\nWRITE2   EQU   *                                                        UAT23750\n         TM    OPTIONS1,#COPY      IS COPY OPTION IN EFFECT?            UAT23760\n         BNOR  R9                  RETURN TO CALLER                     UAT23770\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT23780\n         TM    FLAG,#TAPEIND       WAS TAPE INDICATE PREVIOUSLY RAISED? UAT23790\n         BO    NOROOM              YES - WE ARE OUT OF TAPE             UAT23800\n         LA    R2,WTMCCW           POINT TO WRITE TAPE MARK CCW         UAT23810\n         TM    FLAG,#TAPEMRK       ARE WE TO WRITE TAPE MARK?           UAT23820\n         BO    WRITETM             YES - LET'S WRITE IT INSTEAD         UAT23830\n         STCM  R7,7,WRITEADR       SAVE BUFFER ADDR IN CCW              UAT23840\n         MVC   WRITELEN(2),RECLEN  PLACE RECORD LENGTH IN CCW           UAT23850\n         LA    R2,WRITECCW         POINT TO THE WRITE CHANNEL PGM       UAT23860\nWRITETM  EQU   *                                                        UAT23870\n         BAL   R9,EXCP2            GO EXECUTE THE CHANNEL PROGRAM       UAT23880\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT23890\n         BR    R9                  RETURN TO CALLER                     UAT23900\n         EJECT                                                          UAT23910\n*********************************************************************** UAT23920\n*                                                                     * UAT23930\n*     SENSE1                                                          * UAT23940\n*                                                                     * UAT23950\n*            THIS ROUTINE READS THE SENSE INFORMATION FOR THE         * UAT23960\n*            SYSUT1 TAPE.                                             * UAT23970\n*                                                                     * UAT23980\n*********************************************************************** UAT23990\n         SPACE                                                          UAT24000\nSENSE1   EQU   *                                                        UAT24010\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24020\n         LA    R2,SENSECCW         POINT TO SENSE CHANNEL PGM           UAT24030\n         BAL   R9,EXCP1            GO GET SENSE INFORMATION             UAT24040\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24050\n         BR    R9                  RETURN TO CALLER                     UAT24060\n         SPACE 3                                                        UAT24070\n*********************************************************************** UAT24080\n*                                                                     * UAT24090\n*     SENSE2                                                          * UAT24100\n*                                                                     * UAT24110\n*            THIS ROUTINE READS THE SENSE INFORMATION FOR THE         * UAT24120\n*            SYSUT2 TAPE.                                             * UAT24130\n*                                                                     * UAT24140\n*********************************************************************** UAT24150\n         SPACE                                                          UAT24160\nSENSE2   EQU   *                                                        UAT24170\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24180\n         LA    R2,SENSECCW         POINT TO SENSE CHANNEL PROGRAM       UAT24190\n         BAL   R9,EXCP2            GO GET SENSE INFORMATION             UAT24200\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24210\n         BR    R9                  RETURN TO CALLER                     UAT24220\n         EJECT                                                          UAT24230\n*********************************************************************** UAT24240\n*                                                                     * UAT24250\n*     REWIND1                                                         * UAT24260\n*                                                                     * UAT24270\n*          THIS ROUTINE REWINDS THE SYSUT1 TAPE TO ITS LOAD POINT.    * UAT24280\n*                                                                     * UAT24290\n*********************************************************************** UAT24300\n         SPACE                                                          UAT24310\nREWIND1  EQU   *                                                        UAT24320\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24330\n         LA    R2,REWINDCC         POINT TO REWIND CCW                  UAT24340\n         BAL   R9,EXCP1            GO REWIND THE TAPE                   UAT24350\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24360\n         BR    R9                  RETURN TO CALLER                     UAT24370\n         SPACE 3                                                        UAT24380\n*********************************************************************** UAT24390\n*                                                                     * UAT24400\n*     REWIND2                                                         * UAT24410\n*                                                                     * UAT24420\n*          THIS ROUTINE REWINDS THE SYSUT2 TAPE TO ITS LOAD POINT.    * UAT24430\n*                                                                     * UAT24440\n*********************************************************************** UAT24450\n         SPACE                                                          UAT24460\nREWIND2  EQU   *                                                        UAT24470\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24480\n         LA    R2,REWINDCC         POINT TO REWIND CCW                  UAT24490\n         BAL   R9,EXCP2            GO REWIND THE TAPE                   UAT24500\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24510\n         BR    R9                  RETURN TO CALLER                     UAT24520\n         SPACE 3                                                        UAT24530\n*********************************************************************** UAT24540\n*                                                                     * UAT24550\n*     MODESET2                                                        * UAT24560\n*                                                                     * UAT24570\n*          THIS ROUTINE SETS THE PROPER SYSUT2 TAPE DENSITY           * UAT24580\n*                                                                     * UAT24590\n*********************************************************************** UAT24600\n         SPACE                                                          UAT24610\nMODESET2 EQU   *                                                        UAT24620\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24630\n         LA    R2,MODECCW          POINT TO MODESET CCW                 UAT24640\n         BAL   R9,EXCP2            GO SET DRIVE DENSITY                 UAT24650\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24660\n         BR    R9                  RETURN TO CALLER                     UAT24670\n         SPACE 3                                                        UAT24680\n*********************************************************************** UAT24690\n*                                                                     * UAT24700\n*     DISPLAY1                                                        * UAT24710\n*                                                                     * UAT24720\n*          THIS ROUTINE WRITES TO THE DISPLAY ON 3480 DRIVE           * UAT24730\n*                                                                     * UAT24740\n*********************************************************************** UAT24750\n         SPACE                                                          UAT24760\nDISPLAY1 EQU   *                                                        UAT24770\n         TM    FLAG2,#CART1        ARE WE ON 3480?                      UAT24780\n         BNOR  R9                  NO - JUST RETURN                     UAT24790\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT24800\n         LA    R2,DISPCCW          POINT TO LOAD DISPLAY CCW            UAT24810\n         BAL   R9,EXCP1            GO SET DRIVE DENSITY                 UAT24820\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT24830\n         BR    R9                  RETURN TO CALLER                     UAT24840\n         EJECT                                                          UAT24850\n*********************************************************************** UAT24860\n*                                                                     * UAT24870\n*     EXCP1                                                           * UAT24880\n*                                                                     * UAT24890\n*            THIS ROUTINE EXECUTES CHANNEL PROGRAMS FOR               * UAT24900\n*            THE SYSUT1 DATA SET.  VARIOUS ERROR CHECKING             * UAT24910\n*            IS DONE, AND FLAG SETTING IS PERFORMED (SUCH             * UAT24920\n*            AS FLAGGING TAPE MARKS, ETC.).  AT ENTRY TO              * UAT24930\n*            THIS ROUTINE, REGISTER 2 MUST POINT TO THE               * UAT24940\n*            START OF THE CHANNEL PROGRAM TO BE EXECUTED.             * UAT24950\n*                                                                     * UAT24960\n*********************************************************************** UAT24970\n         SPACE                                                          UAT24980\n*   ISSUE THE I/O OPERATION FOR SYSUT1 TAPE                             UAT24990\n         SPACE                                                          UAT25000\nEXCP1    EQU   *                                                        UAT25010\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT25020\n         NI    FLAG3,255-#SEN3480  RESET SENSE-TYPE FLAG                UAT25030\n         TM    FLAG2,#CART1        ARE WE WRITING TO 3480?              UAT25040\n         BNO   EXCP1R              NO - SKIP                            UAT25050\n         OI    FLAG3,#SEN3480      YES- SET 3480 SENSE FLAG             UAT25060\nEXCP1R   EQU   *                   ENTRY FOR REDRIVING THE I/O          UAT25070\n         TM    OPTIONS3,#DEBUG1    DEBUG OUTPUT?                        UAT25080\n         BNO   EXCP1S1             NO - SKIP                            UAT25090\n         MOVEMSG MSG63             DEBUG SYSUT1 BEFORE                  UAT25100\n         UNPK  LINE+MSG63A(9),0(5,R2)                                   UAT25110\n         UNPK  LINE+MSG63A+8(9),4(5,R2)                                 UAT25120\n         MVI   LINE+MSG63A+16,C' '                                      UAT25130\n         TR    LINE+MSG63A(16),HEXTABLE                                 UAT25140\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT25150\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT25160\nEXCP1S1  EQU   *                                                        UAT25170\n         STCM  R2,7,IOB1CCW        SAVE CHANNEL PGM ADDR IN IOB         UAT25180\n         EXCP  IOB1                EXECUTE THE CHANNEL PROGRAM          UAT25190\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25200\n         TM    OPTIONS3,#DEBUG1    DEBUG OUTPUT?                        UAT25210\n         BNO   EXCP1S2             NO - SKIP                            UAT25220\n         MOVEMSG MSG64             DEBUG SYSUT1 BEFORE                  UAT25230\n         UNPK  LINE+MSG64A(5),IOB1CSW+3(3)                              UAT25240\n         MVI   LINE+MSG64A+4,C' '                                       UAT25250\n         TR    LINE+MSG64A(4),HEXTABLE                                  UAT25260\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT25270\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT25280\nEXCP1S2  EQU   *                                                        UAT25290\n         MVC   TEMPFLAG(1),FLAG    SAVE FLAG BYTE TEMPORARILY           UAT25300\n         NI    FLAG,255-#TAPEMRK   CLEAR FLAG                           UAT25310\n*   UNIT EXCEPTION INDICATES TAPE MARK SENSED ON 3420 AND 3480          UAT25320\n         TM    IOB1CSW+3,#BIT7     DID WE FIND TAPE MARK?               UAT25330\n         BNO   EXCP1A              NO - SKIP SETTING FLAG BIT           UAT25340\n         OI    FLAG,#TAPEMRK       INDICATE WHAT WE FOUND               UAT25350\n         TM    TEMPFLAG,#TAPEMRK   WAS LAST THING ALSO A TAPE MARK?     UAT25360\n         BNO   EXCP1A              NO - SKIP SETTING NEW FLAG           UAT25370\n         OI    FLAG,#ENDTAPE       ALSO SET END-OF-TAPE FLAG            UAT25380\n         SPACE 2                                                        UAT25390\n*   CHECK FOR EXCEPTIONAL CONDITION.  IF SO, ISSUE SENSE AND QUIT       UAT25400\n         SPACE                                                          UAT25410\nEXCP1A   EQU   *                                                        UAT25420\n         TM    IOB1CSW+3,#BIT6     WAS THERE A UNIT CHECK?              UAT25430\n         BNO   EXCP1XT             NO - RETURN TO CALLER                UAT25440\n         TM    IOB1SNS,#BIT1       CHECK FOR INTERVENTION REQ'D         UAT25450\n         BO    EXCP1R              RESTART OPERATION IF SO              UAT25460\n         MVC   CSW(7),IOB1CSW      SAVE BAD CSW                         UAT25470\n         ICM   R15,7,IOB1CCW       LOAD CCW ADDRESS                     UAT25480\n         MVC   CCW(8),0(R15)       SAVE BAD CCW                         UAT25490\n         MVC   SENSE(1),IOB1SNS    SAVE 1ST SENSE BYTE                  UAT25500\n         LA    R15,SENSECCW        POINT TO SENSE CCW                   UAT25510\n         STCM  R15,7,IOB1CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT25520\n         EXCP  IOB1                EXECUTE THE SENSE CHANNEL PGM        UAT25530\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25540\n         MOVEMSG ERROR9            PERMANENT I/O ERROR ON SYSUT1        UAT25550\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT25560\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT25570\n         BAL   R9,PRTSENSE         GO PRINT SENSE INFORMATION           UAT25580\n         TM    OPTIONS3,#SKIPBAD   ARE WE TO SKIP THIS BLOCK?           UAT25590\n         BO    SKIPBAD             YES - SKIP IT                        UAT25600\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT25610\n         DISCARD                   DISCARD RETURN ADDRESS FROM STACK    UAT25620\n         B     EPISTAT             TERMINATE/LET SYSTEM CLEAN UP        UAT25630\n         SPACE                                                          UAT25640\n*   ROUTINE TO SKIP BAD INPUT BLOCK (WARN USER FIRST)                   UAT25650\n         SPACE                                                          UAT25660\nSKIPBAD  EQU   *                                                        UAT25670\n         LA    R15,FSBCCW          POINT TO FWD-SPACE BLOCK CCW         UAT25680\n         STCM  R15,7,IOB1CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT25690\n         EXCP  IOB1                EXECUTE THE CHANNEL PGM              UAT25700\n         WAIT  1,ECB=ECB1          WAIT FOR IT TO COMPLETE              UAT25710\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT25720\n         MOVEMSG ERROR20           FORWARD SPACING OVER BLOCK           UAT25730\n         BAL   R9,PRINTIT          GO PRINT MESSAGE                     UAT25740\n         B     EXCP1R              GO TRY NEXT BLOCK                    UAT25750\n         SPACE                                                          UAT25760\nEXCP1XT  EQU   *                                                        UAT25770\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT25780\n         BR    R9                  RETURN TO CALLER                     UAT25790\n         EJECT                                                          UAT25800\n*********************************************************************** UAT25810\n*                                                                     * UAT25820\n*     EXCP2                                                           * UAT25830\n*                                                                     * UAT25840\n*            THIS ROUTINE EXECUTES CHANNEL PROGRAMS FOR               * UAT25850\n*            THE SYSUT2 DATA SET.  VARIOUS ERROR CHECKING             * UAT25860\n*            IS DONE, AND FLAG SETTING IS PERFORMED (SUCH             * UAT25870\n*            AS FLAGGING TAPE INDICATE).  AT ENTRY TO                 * UAT25880\n*            THIS ROUTINE, REGISTER 2 MUST POINT TO THE               * UAT25890\n*            START OF THE CHANNEL PROGRAM TO BE EXECUTED.             * UAT25900\n*                                                                     * UAT25910\n*********************************************************************** UAT25920\n         SPACE                                                          UAT25930\n*   ISSUE THE I/O OPERATION FOR SYSUT2 TAPE                             UAT25940\n         SPACE                                                          UAT25950\nEXCP2    EQU   *                                                        UAT25960\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT25970\n         NI    FLAG3,255-#SEN3480  RESET SENSE-TYPE FLAG                UAT25980\n         TM    FLAG2,#CART2        ARE WE WRITING TO 3480?              UAT25990\n         BNO   EXCP2R              NO - SKIP                            UAT26000\n         OI    FLAG3,#SEN3480      YES- SET 3480 SENSE FLAG             UAT26010\nEXCP2R   EQU   *                   ENTRY FOR REDRIVING THE I/O          UAT26020\n         TM    OPTIONS3,#DEBUG2    DEBUG OUTPUT?                        UAT26030\n         BNO   EXCP2S1             NO - SKIP                            UAT26040\n         MOVEMSG MSG65             DEBUG SYSUT2 BEFORE                  UAT26050\n         UNPK  LINE+MSG65A(9),0(5,R2)                                   UAT26060\n         UNPK  LINE+MSG65A+8(9),4(5,R2)                                 UAT26070\n         MVI   LINE+MSG65A+16,C' '                                      UAT26080\n         TR    LINE+MSG65A(16),HEXTABLE                                 UAT26090\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT26100\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT26110\nEXCP2S1  EQU   *                                                        UAT26120\n         STCM  R2,7,IOB2CCW        SAVE CHANNEL PGM ADDR IN IOB         UAT26130\n         EXCP  IOB2                EXECUTE THE CHANNEL PROGRAM          UAT26140\n         WAIT  1,ECB=ECB2          WAIT FOR IT TO COMPLETE              UAT26150\n         TM    OPTIONS3,#DEBUG2    DEBUG OUTPUT?                        UAT26160\n         BNO   EXCP2S2             NO - SKIP                            UAT26170\n         MOVEMSG MSG66             DEBUG SYSUT2 BEFORE                  UAT26180\n         UNPK  LINE+MSG66A(5),IOB2CSW+3(3)                              UAT26190\n         MVI   LINE+MSG66A+4,C' '                                       UAT26200\n         TR    LINE+MSG66A(4),HEXTABLE                                  UAT26210\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT26220\n         BAL   R9,PRINTIT          PRINT DEBUG INFO                     UAT26230\nEXCP2S2  EQU   *                                                        UAT26240\n*   UNIT EXCEPTION INDICATES LOGICAL END OF TAPE FOR 3420 AND 3480      UAT26250\n         TM    IOB2CSW+3,#BIT7     DID WE FIND END-OF-TAPE FOIL?        UAT26260\n         BNO   EXCP2A              NO - SKIP SETTING FLAG BIT           UAT26270\n         OI    FLAG,#TAPEIND       SHOW THAT WE FOUND TAPE INDICATE     UAT26280\n         SPACE 2                                                        UAT26290\n*   CHECK FOR EXCEPTIONAL CONDITION.  IF SO, ISSUE SENSE AND QUIT       UAT26300\n         SPACE                                                          UAT26310\nEXCP2A   EQU   *                                                        UAT26320\n         TM    IOB2CSW+3,#BIT6     WAS THERE A UNIT CHECK?              UAT26330\n         BNO   EXCP2XT             NO - RETURN TO CALLER                UAT26340\n         TM    IOB2SNS,#BIT1       CHECK FOR INTERVENTION REQ'D         UAT26350\n         BO    EXCP2R              RESTART OPERATION IF SO              UAT26360\n         MVC   CSW(7),IOB2CSW      SAVE BAD CSW                         UAT26370\n         ICM   R15,7,IOB2CCW       LOAD BAD CCW ADDRESS                 UAT26380\n         MVC   CCW(8),0(R15)       SAVE BAD CCW                         UAT26390\n         MVC   SENSE(1),IOB2SNS    SAVE 1ST SENSE BYTE                  UAT26400\n         LA    R15,SENSECCW        POINT TO SENSE CCW                   UAT26410\n         STCM  R15,7,IOB2CCW       PLACE CHANNEL PGM ADDR IN IOB        UAT26420\n         EXCP  IOB2                EXECUTE THE SENSE CHANNEL PGM        UAT26430\n         WAIT  1,ECB=ECB2          WAIT FOR IT TO COMPLETE              UAT26440\n         MOVEMSG ERROR11           PERMANENT I/O ERROR ON SYSUT2        UAT26450\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT26460\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT26470\n         BAL   R9,PRTSENSE         GO PRINT SENSE INFORMATION           UAT26480\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT26490\n         DISCARD                                                        UAT26500\n         B     EPISTAT             TERMINATE/LET SYSTEM CLEAN UP        UAT26510\n         SPACE                                                          UAT26520\nEXCP2XT  EQU   *                                                        UAT26530\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT26540\n         BR    R9                  RETURN TO CALLER                     UAT26550\n         EJECT                                                          UAT26560\n*********************************************************************** UAT26570\n*                                                                       UAT26580\n*   PRINT THE SENSE INFORMATION RESULTING FROM BAD I/O OPERATION        UAT26590\n*                                                                       UAT26600\n*********************************************************************** UAT26610\n         SPACE                                                          UAT26620\nPRTSENSE EQU   *                                                        UAT26630\n         STACK R9                  PLACE RETURN ADDRESS ON STACK        UAT26640\n         LA    R2,SENSETB2         POINT TO 3420 SENSE INFO TABLE       UAT26650\n         SR    R3,R3               CLEAR A WORK REGISTER                UAT26660\n         LA    R4,SENSENTM         NUMBER OF TIMES THROUGH LOOP         UAT26670\n         TM    FLAG3,#SEN3480      IS THIS 3480 SENSE?                  UAT26680\n         BNO   PRTSLOOP            NO - SKIP                            UAT26690\n         LA    R2,SENSETB8         POINT TO 3480 SENSE INFO TABLE       UAT26700\nPRTSLOOP EQU   *                                                        UAT26710\n         IC    R3,0(R2)            LOAD THE SENSE INFO BYTE             UAT26720\n         EX    R3,SENSECHK         CHECK SENSE BYTE AGAINST TABLE       UAT26730\n         BNO   PRTSLOUT            BRANCH IF BIT NOT ON                 UAT26740\n         MVC   LINE(23),=C'0****** SENSE INDICATES'                     UAT26750\n         MVC   LINE+24(SENSEMLN),1(R2)   MOVE IN MESSAGE                UAT26760\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT26770\n         BAL   R9,PRINTIT          GO PRINT SENSE MESSAGE               UAT26780\nPRTSLOUT EQU   *                                                        UAT26790\n         LA    R2,SENSELEN(R2)     NEXT SENSE TABLE FIELD               UAT26800\n         BCT   R4,PRTSLOOP         LOOP BACK                            UAT26810\n         SPACE                                                          UAT26820\n         MOVEMSG ERROR10                 CSW=XXXX CCW=XXXX              UAT26830\n         UNPK  LINE+ERR10C(15),CSW(8)    CONVERT THE CSW TO             UAT26840\n         TR    LINE+ERR10C(14),HEXTABLE  ...PRINTABLE HEX               UAT26850\n         MVI   LINE+ERR10C+14,C' '       BLANK OUT LAST JUNK BYTE       UAT26860\n         UNPK  LINE+ERR10W(9),CCW(5)     CONVERT CCW TO                 UAT26870\n         UNPK  LINE+ERR10W+8(9),CCW+4(5) ...PRINTABLE HEX               UAT26880\n         TR    LINE+ERR10W(16),HEXTABLE  JUNK TO HEX                    UAT26890\n         MVI   LINE+ERR10W+16,C' '       BLANK OUT LAST JUNK BYTE       UAT26900\n         OI    FLAG2,#NOSHIFT            SET THE NOSHIFT FLAG           UAT26910\n         BAL   R9,PRINTIT                GO PRINT THE LINE              UAT26920\n         SPACE                                                          UAT26930\n         MOVEMSG ERROR17                 SENSE=XXXX                     UAT26940\n         MVC   #SENSE(1),SENSE           RESTORE 1ST SENSE BYTE         UAT26950\n         LA    R14,6               SIX WORDS OF SENSE INFORMATION       UAT26960\n         TM    FLAG3,#SEN3480      IS SENSE FROM A 3480?                UAT26970\n         BNO   NOTCART2            NO - SKIP                            UAT26980\n         LA    R14,8               EIGHT WORDS FOR 3480                 UAT26990\nNOTCART2 EQU   *                                                        UAT27000\n         LA    R15,LINE+ERR17B                                          UAT27010\n         LA    R1,#SENSE                                                UAT27020\nPRTRLOOP EQU   *                                                        UAT27030\n         UNPK  0(9,R15),0(5,R1)   CONVERT TO HEX                        UAT27040\n         TR    0(8,R15),HEXTABLE   TRANSLATE TO PRINTABLE FORM          UAT27050\n         MVI   8(R15),C' '         BLANK OUT EXTRANEOUS BYTE            UAT27060\n         LA    R15,9(,R15)         NEXT PRINT POSITION                  UAT27070\n         LA    R1,4(,R1)           NEXT SENSE FULLWORD                  UAT27080\n         BCT   R14,PRTRLOOP        LOOP BACK                            UAT27090\n         OI    FLAG2,#NOSHIFT      SET THE NOSHIFT FLAG                 UAT27100\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT27110\n         OC    FILECNT,FILECNT     IS FILE COUNTER ZERO?                UAT27120\n         BZ    VOLERR              YES - WE WERE DOING VOLUME LABEL     UAT27130\n         TM    FLAG2,#LABREC       PROCESSING LABEL RECORD?             UAT27140\n         BNO   NOTLABR             NO - SKIP                            UAT27150\n         MOVEMSG ERR18              \"ERROR OCCURRED DURING LABEL\"       UAT27160\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT27170\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27180\n         UNPK  LINE+ERR18F(4),DOUBLE(8)   PRINTABLE DECIMAL             UAT27190\n         OI    LINE+ERR18F+3,X'F0' INSURE SIGN NIBBLE                   UAT27200\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27210\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT27220\n         B     SETERR16            BRANCH                               UAT27230\nNOTLABR  EQU   *                                                        UAT27240\n         MOVEMSG ERR19             PROCESSING BLOCK ### OF FILE ###     UAT27250\n         L     R15,BLOCKCNT        LOAD BLOCK COUNTER                   UAT27260\n         LA    R15,1(,R15)         BUMP UP ONE                          UAT27270\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27280\n         UNPK  LINE+ERR19B(6),DOUBLE(8)   PRINTABLE DECIMAL             UAT27290\n         OI    LINE+ERR19B+5,X'F0' INSURE SIGN NIBBLE                   UAT27300\n         L     R15,FILECNT         LOAD FILE COUNTER                    UAT27310\n         CVD   R15,DOUBLE          CONVERT TO                           UAT27320\n         UNPK  LINE+ERR19F(4),DOUBLE(8)   PRINTABLE DECIMAL             UAT27330\n         OI    LINE+ERR19F+3,X'F0' INSURE SIGN NIBBLE                   UAT27340\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27350\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MESSAGE           UAT27360\nSETERR16 EQU   *                                                        UAT27370\n         UNSTACK R9                RETRIEVE RETURN ADDRESS              UAT27380\n         BR    R9                  RETURN TO CALLER                     UAT27390\n         SPACE 2                                                        UAT27400\nVOLERR   EQU   *                                                        UAT27410\n         MOVEMSG ERROR21           ERROR PROCESSING VOLUME LABEL        UAT27420\n         OI    FLAG2,#NOSHIFT      SET NOSHIFT FLAG                     UAT27430\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MESSAGE           UAT27440\n         B     SETERR16            RETURN TO CALLER                     UAT27450\n         SPACE 2                                                        UAT27460\nSENSECHK TM    SENSE,X'00'         **** EXECUTED INSTRUCTION ****       UAT27470\n         EJECT                                                          UAT27480\n*********************************************************************** UAT27490\n*                                                                     * UAT27500\n*      ERRORS                                                         * UAT27510\n*                                                                     * UAT27520\n*             THIS SECTION OF CODE HANDLES ALL PROGRAM ERRORS         * UAT27530\n*                                                                     * UAT27540\n*********************************************************************** UAT27550\n         SPACE                                                          UAT27560\nNOPRINT1 EQU   *                                                        UAT27570\n         WTO   'UATAPE -- ERROR:  NO SYSPRINT DD STATEMENT',ROUTCDE=11  UAT27580\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27590\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT27600\n         SPACE 2                                                        UAT27610\nNOPRINT2 EQU   *                                                        UAT27620\n         WTO   'UATAPE -- ERROR:  SYSPRINT WOULD NOT OPEN',ROUTCDE=11   UAT27630\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27640\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT27650\n         SPACE 2                                                        UAT27660\nNOSYS1A  EQU   *                                                        UAT27670\n         MOVEMSG ERROR1                    NO SYSUT1 FOUND              UAT27680\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27690\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27700\n         SPACE 2                                                        UAT27710\nNOSYS1B  EQU   *                                                        UAT27720\n         MOVEMSG ERROR2                  SYSUT1 WOULD NOT OPEN          UAT27730\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27740\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27750\n         SPACE 2                                                        UAT27760\nNOCORE   EQU   *                                                        UAT27770\n         MOVEMSG ERROR3                  NOT ENOUGH MEMORY              UAT27780\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27790\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27800\n         SPACE 2                                                        UAT27810\nNOSYS2A  EQU   *                                                        UAT27820\n         MOVEMSG ERROR4                SYSUT2 DD NOT FOUND              UAT27830\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27840\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27850\n         SPACE 2                                                        UAT27860\nNOSYS2B  EQU   *                                                        UAT27870\n         MOVEMSG ERROR5                SYSUT2 WOULD NOT OPEN            UAT27880\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27890\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27900\nINVALID1 EQU   *                                                        UAT27910\n         MOVEMSG ERROR8                 OUTPUT TAPE DOES NOT HAVE LABEL UAT27920\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT27930\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT27940\n         SPACE 2                                                        UAT27950\nINVALID2 EQU   *                                                        UAT27960\n         MOVEMSG ERROR6                 JCL VOLSER DOES NOT MATCH TAPE  UAT27970\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT27980\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT27990\n         MOVEMSG ERROR7                 JCL VOLSER=    TAPE=            UAT28000\n         MVC   LINE+ERR7J(6),VOLSER2    MOVE IN JCL VOLUME SERIAL       UAT28010\n         MVC   LINE+ERR7T(6),VOLSER2X   MOVE IN TAPE'S VOLUME SERIAL    UAT28020\n         MVI   RETCODE,12          SET PROGRAM RETURN CODE 12           UAT28030\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28040\n         SPACE 2                                                        UAT28050\nNOROOM   EQU   *                                                        UAT28060\n         MOVEMSG ERROR12                   RAN OUT OF TAPE ON SYSUT2    UAT28070\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28080\n         BAL   R9,PRINTIT          GO PRINT ERROR MESSAGE               UAT28090\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 12           UAT28100\n         B     EPISTAT             GO TERMINATE PROGRAM                 UAT28110\n         SPACE 2                                                        UAT28120\nPARMINV  EQU   *                                                        UAT28130\n         L     R2,PARMADDR         LOAD PARM ADDRESS                    UAT28140\n         L     R2,0(,R2)           LOAD PARM FIELD ADDRESS              UAT28150\n         LH    R15,0(,R2)          LOAD PARM FIELD LENGTH               UAT28160\n         LA    R2,2(,R2)           POINT TO PARM FIELD TEXT             UAT28170\n         BCTR  R15,0               GET EXECUTABLE LENGTH                UAT28180\n         EX    R15,MOVEIT2         MOVE TO PRINT LINE                   UAT28190\n         MVI   LINE,C'-'           MAKE TRIPLE SPACE                    UAT28200\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28210\n         BAL   R9,PRINTIT          GO PRINT THE LINE                    UAT28220\n         SR    R3,R2               GET OFFSET WHERE ERROR IS            UAT28230\n         LA    R15,LINE+1(R3)      POINT TO CORRESPONDING PLACE         UAT28240\n         MVI   0(R15),C'?'         PUT QM THERE                         UAT28250\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28260\n         BAL   R9,PRINTIT          GO PRINT THE QM                      UAT28270\n         MOVEMSG ERROR13                  INVALID PARM FIELD            UAT28280\n         MVI   RETCODE,8           SET PROGRAM RETURN CODE 8            UAT28290\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28300\n         SPACE                                                          UAT28310\nMOVEIT2  MVC   LINE+1(*-*),0(R2)   ***** EXECUTED INSTRUCTION *****     UAT28320\n         SPACE 2                                                        UAT28330\nINVDEN   EQU   *                                                        UAT28340\n         MOVEMSG ERROR14                 DOES NOT SUPPORT SPEC DENSITY  UAT28350\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28360\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28370\n         SPACE 2                                                        UAT28380\nFILEPROT EQU   *                                                        UAT28390\n         MOVEMSG ERROR15                 SYSUT2 IS FILE PROTECTED       UAT28400\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28410\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28420\n         SPACE 2                                                        UAT28430\nNOTTAPE1 EQU   *                                                        UAT28440\n         MOVEMSG ERROR16                 DEVICE NOT TAPE UNIT           UAT28450\n         MVC   LINE+ERR16D(6),=C'SYSUT1'   SAY IT'S SYSUT1              UAT28460\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28470\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28480\n         SPACE 2                                                        UAT28490\nNOTTAPE2 EQU   *                                                        UAT28500\n         MOVEMSG ERROR16                 DEVICE NOT TAPE UNIT           UAT28510\n         MVC   LINE+ERR16D(6),=C'SYSUT2'   SAY IT'S SYSUT2              UAT28520\n         MVI   RETCODE,16          SET PROGRAM RETURN CODE 16           UAT28530\n         B     PRINTERR            GO PRINT AND TERMINATE               UAT28540\n         SPACE 2                                                        UAT28550\nPRINTERR EQU   *                                                        UAT28560\n         OI    FLAG2,#NOSHIFT      DO NOT SHIFT THIS MSG OVER           UAT28570\n         BAL   R9,PRINTIT          GO PRINT THE ERROR MSG               UAT28580\n         B     EPILOG              GO TERMINATE PROGRAM                 UAT28590\n         EJECT                                                          UAT28600\n*********************************************************************** UAT28610\n*                                                                     * UAT28620\n*        PROGRAM DATA CONSTANTS AND WORK AREAS                        * UAT28630\n*                                                                     * UAT28640\n*********************************************************************** UAT28650\n         SPACE                                                          UAT28660\nDOUBLE   DS    D                   DOUBLE WORD WORK AREA                UAT28670\nSAVE     DC    18A(0)              PROGRAM SAVE AREA                    UAT28680\nVTABLES  DC    V(TABLES)           VCON FOR TABLES CSECT                UAT28690\nLLINES   DC    F'0'                NUMBER OF LINES LEFT ON PAGE         UAT28700\nBLOCKCNT DC    F'0'                NUMBER OF BLOCKS IN DATA SET         UAT28710\nBLOCKTOT DC    F'0'                NUMBER OF BLOCKS ON TAPE             UAT28720\nBYTECNT  DC    F'0'                NUMBER OF BYTES IN DATA SET          UAT28730\nTBYTECNT DC    F'0'                NUMBER OF BYTES ON TAPE              UAT28740\nTOTFEET  DC    F'0'                LENGTH OF DATA AREA ON SYSUT1 TAPE   UAT28750\nTOTFEET2 DC    F'0'                LENGTH OF DATA AREA ON SYSUT2 TAPE   UAT28760\nDENSYS1  DC    F'1'                DENSITY (BPI) FOR SYSUT1 TAPE        UAT28770\nDENSYS2  DC    F'1'                DENSITY (BPI) FOR SYSUT2 TAPE        UAT28780\nFILECNT  DC    F'0'                FILE COUNTER                         UAT28790\nPAGENUM  DC    F'0'                CURRENT PAGE NUMBER                  UAT28800\nSTARTBLK DC    F'0'                STARTING BLOCK NUMBER                UAT28810\nLASTBLK  DC    F'0'                ENDING BLOCK NUMBER                  UAT28820\nBLRECL   DC    F'0'                PRINT OPTION LRECL                   UAT28830\nMXLABERR DC    F'0'                MAXIMUM ERROR LABEL COUNT            UAT28840\nMXLABCNT DC    F'11'               MAXIMUM ERROR MESSAGE COUNT PLUS 1   UAT28850\nPARMADDR DS    F                   PARM FIELD ADDRESS SAVE AREA         UAT28860\nSTACKPTR DC    A(STACK)            ADDRESS OF THE PROGRAM STACK         UAT28870\nSTACK    DS    20F                 PROGRAM STACK (80 BYTES)             UAT28880\nCURLRECL DS    F                   CURRENT FILE'S LRECL                 UAT28890\nCURBLKSI DS    F                   CURRENT FILE'S BLKSIZE               UAT28900\nTIOTADDR DS    A                   TIOT ADDR AS RETURNED FROM EXTRACT   UAT28910\nUCB1     DS    A                   UCB ADDR FOR SYSUT1 TAPE             UAT28920\nUCB2     DS    A                   UCB ADDR FOR SYSUT2 TAPE             UAT28930\nBUFADDR  DC    A(0)                I/O BUFFER ADDRESS                   UAT28940\nASTATBUF DC    A(0)                FILE STAT BUFFER ADDRESS             UAT28950\nBSTATBUF DC    A(0)                CURRENT FILE STAT ENTRY ADDR         UAT28960\nNSTATBUF EQU   3000                NUMBER OF STAT BUFFER ENTRIES        UAT28970\nSTATFILE EQU   0                   OFFSET TO FILE NUMBER                UAT28980\nSTATDSN  EQU   STATFILE+4          OFFSET TO DATA SET NAME              UAT28990\nSTATRECF EQU   STATDSN+17          OFFSET TO RECORD FORMAT              UAT29000\nSTATLREC EQU   STATRECF+4          OFFSET TO LRECL                      UAT29010\nSTATBLKS EQU   STATLREC+5          OFFSET TO BLKSIZE                    UAT29020\nSTATNBLK EQU   STATBLKS+5          OFFSET TO NUMBER OF BLOCKS           UAT29030\nSTATLEN  EQU   STATNBLK+6          OFFSET TO DATA LENGTH                UAT29040\nWSTATBUF EQU   STATLEN+4           LENGTH OF EACH ENTRY                 UAT29050\nLSTATBUF EQU   NSTATBUF*WSTATBUF   LENGTH OF STAT BUFFER                UAT29060\nRECLEN   DS    H                   INPUT BLOCK LENGTH                   UAT29070\nMAXBLK   DS    H                   MAXIMUM BLOCK LENGTH                 UAT29080\nMINBLK   DS    H                   MINIMUM BLOCK LENGTH                 UAT29090\nLASTLEN  DC    H'-1'               LAST BLOCK LENGTH                    UAT29100\nDBLKCT   DC    F'5'                #DUMPMAX OPTION BLOCK COUNTER        UAT29110\nPBLKCT   DC    F'5'                #PRINTMAX OPTION BLOCK COUNTER       UAT29120\nFILENO   DC    CL4' '              CURRENT FILE NUMBER                  UAT29130\nCURRECFM DS    CL1                 CURRENT FILE'S RECORD FORMAT         UAT29140\nPARM     DS    CL8                 PARM FIELD PROCESSOR WORK AREA       UAT29150\nVOLSER1  DS    CL6                 INPUT JCL VOLUME SERIAL              UAT29160\nVOLSER2  DS    CL6                 OUTPUT JCL VOLUME SERIAL             UAT29170\nVOLSER2X DS    CL6                 OUTPUT TAPE VOLUME SERIAL            UAT29180\nWORKAREA DS    CL9                 DUMP ROUTINE WORK AREA               UAT29190\nCCW      DS    XL8                 SAVE AREA FOR BAD CCW                UAT29200\nCSW      DS    XL7                 SAVE AREA FOR BAD CSW                UAT29210\nSENSE    DS    XL1                 SAVE AREA FOR BAD IOB SENSE INFO     UAT29220\n         SPACE 2                                                        UAT29230\nOPTIONS  DS    0X                  OPTION FLAGS                         UAT29240\nOPTIONS1 DC    AL1(#LIST)          OPTION FLAG BYTE 1                   UAT29250\n#LIST    EQU   B'10000000'         LIST OPTION FLAG                     UAT29260\n#COPY    EQU   B'01000000'         COPY OPTION FLAG                     UAT29270\n#DUMP    EQU   B'00100000'         DUMP OPTION FLAG                     UAT29280\n#DUMPLAB EQU   B'00010000'         DUMPLAB OPTION FLAG                  UAT29290\n#DUMPALL EQU   B'00001000'         DUMPALL OPTION FLAG                  UAT29300\n#BLOCKS  EQU   B'00000100'         BLOCKS OPTION FLAG                   UAT29310\n#PRINT   EQU   B'00000010'         PRINT OPTION FLAG                    UAT29320\n#SKIPLAB EQU   B'00000001'         SKIP COPYING LABELS, IF ANY          UAT29330\n         SPACE                                                          UAT29340\nOPTIONS2 DC    AL1(0)              OPTIONS FLAG BYTE 2                  UAT29350\n#CRT     EQU   B'10000000'         CRT OUTPUT OPTION FLAG               UAT29360\n#ATOE    EQU   B'01000000'         ASCII TO EBCDIC TRANSLATION          UAT29370\n#ETOA    EQU   B'00100000'         EBCDIC TO ASCII TRANSLATION          UAT29380\n#BYPASS  EQU   B'00010000'         BYPASS SYSUT2 LABEL PROCESSING       UAT29390\n#NOFIX   EQU   B'00001000'         DO NOT CHANGE SYSUT1 LABEL INFO      UAT29400\n#DMAX    EQU   B'00000100'         MAX BLOCKS TO DUMP SPECIFIED         UAT29410\n#PMAX    EQU   B'00000010'         MAX RECORDS TO PRINT SPECIFIED       UAT29420\n#LTM     EQU   B'00000001'         SKIP LEADING TAPE MARK               UAT29430\n         SPACE                                                          UAT29440\nOPTIONS3 DC    AL1(0)              OPTIONS FLAG BYTE 3                  UAT29450\n#SKIPBAD EQU   B'10000000'         SKIP BAD BLOCKS ON INPUT VOLUME      UAT29460\n#MXFILES EQU   B'01000000'         (MAXIMUM) NO. OF FILES TO PROCESS    UAT29470\n#DEBUG1  EQU   B'00100000'         DEBUG OUTPUT FOR SYSUT1 I/O          UAT29480\n#DEBUG2  EQU   B'00010000'         DEBUG OUTPUT FOR SYSUT2 I/O          UAT29490\n#LABCHK  EQU   B'00001000'         READ VOLSER AND WTO DISPLAY ONLY     UAT29500\n#35      EQU   B'00000100'         RESERVED                             UAT29510\n#36      EQU   B'00000010'         RESERVED                             UAT29520\n#37      EQU   B'00000001'         RESERVED                             UAT29530\n         SPACE 2                                                        UAT29540\nFLAG     DC    X'00'               PROGRAM FLAGS                        UAT29550\n#SYSPRNT EQU   B'10000000'         SYSPRINT DD-STATEMENT PRESENT        UAT29560\n#SYSUT1  EQU   B'01000000'         SYSUT1 DD-STATEMENT PRESENT          UAT29570\n#SYSUT2  EQU   B'00100000'         SYSUT2 DD-STATEMENT PRESENT          UAT29580\n#SL      EQU   B'00010000'         INPUT TAPE IS STD. LABEL             UAT29590\n#TAPEMRK EQU   B'00001000'         LAST SYSUT1 I/O FOUND TAPEMARK       UAT29600\n#ENDTAPE EQU   B'00000100'         END OF TAPE (2 TM'S OR EOV1)         UAT29610\n#TAPEIND EQU   B'00000010'         TAPE INDICATE (END OF SYSUT2 TAPE)   UAT29620\n#LTMPRES EQU   B'00000001'         LEADING TAPE MARK MAY BE PRESENT     UAT29630\n         SPACE                                                          UAT29640\nFLAG2    DC    X'00'               PROGRAM FLAGS                        UAT29650\n#NOSHIFT EQU   B'10000000'         DO NOT SHIFT PRINT LINE              UAT29660\n#LABREC  EQU   B'01000000'         PROCESSING LABEL RECORD              UAT29670\n#PRTFLAG EQU   B'00100000'         PRINT \"FILE: XXXX\" FLAG              UAT29680\n#EOV     EQU   B'00010000'         EOV LABEL RECORD FOUND               UAT29690\n#AL      EQU   B'00001000'         INPUT TAPE HAS ASCII LABELS          UAT29700\n#INITHDR EQU   B'00000100'         IEHINITT HDR1 LABEL FOUND            UAT29710\n#CART1   EQU   B'00000010'         SYSUT1 IS CARTRIDGE TAPE             UAT29720\n#CART2   EQU   B'00000001'         SYSUT2 IS CARTRIDGE TAPE             UAT29730\n         SPACE                                                          UAT29740\nFLAG3    DC    X'00'               PROGRAM FLAGS                        UAT29750\n#IDRC1   EQU   B'10000000'         SYSUT1 FILE WRITTEN WITH IDRC ON     UAT29760\n#SEN3480 EQU   B'01000000'         SENSE INFO IS IN 3480 FORMAT         UAT29770\n         SPACE                                                          UAT29780\nDEBUG    DC    CL8' '              DEBUG WORK AREA                      UAT29790\nTEMPFLAG DC    X'00'               WORK BYTE                            UAT29800\nRETCODE  DC    X'00'               PROGRAM RETURN CODE                  UAT29810\nTAPEDEN  DC    X'00'               OUTPUT TAPE DENSITY FROM JFCB        UAT29820\nDENSITY1 DS    CL4                 DENSITY MESSAGE                      UAT29830\nDENSITY2 DS    CL4                 DENSITY MESSAGE                      UAT29840\nLINE     DC    CL133' '            PRINT LINE                           UAT29850\nTEMPLINE DC    CL133' '            PRINT LINE                           UAT29860\n         SPACE 2                                                        UAT29870\n         DS    0F,H'0'             WASTE A HALFWORD FOR ALIGNMENT       UAT29880\nINIRG    DC    H'0',AL4(1)         INPUT TAPE IRG VALUES                UAT29890\n         DS    0F,H'0'             WASTE A HALFWORD FOR ALIGNMENT       UAT29900\nOUTIRG   DC    H'0',AL4(1)         OUTPUT TAPE IRG VALUES               UAT29910\n*                |      |___DENOMINATOR   (SEE NOTE AFTER               UAT29920\n*                |__________NUMERATOR      \"DENTAB\" TABLE)              UAT29930\n         SPACE                                                          UAT29940\nDEFDEN   DS    XL16                DEFAULT DENSITY INFORMATION          UAT29950\nDENTAB   DS    0XL16               DEFAULT DENSITY INFO TABLE           UAT29960\n*                 ___________________________JCL DCB=DEN=? CODE         UAT29970\n*                |     ______________________MODESET CCW                UAT29980\n*                |    |        ______________CHARACTER DENSITY          UAT29990\n*                |    |       |          ____BINARY DENSITY             UAT30000\n*                |    |       |         |          ___________SEE       UAT30010\n*                |    |       |         |         |       ____NOTE      UAT30020\n*                |    |       |         |         |      |    BELOW     UAT30030\nDEN6250  DC    C'4',X'D3',CL4'6250',AL4(6250),AL2(3),AL4(10)            UAT30040\nDEN1600  DC    C'3',X'C3',CL4'1600',AL4(1600),AL2(6),AL4(10)            UAT30050\nDEN800   DC    C'2',X'CB',CL4' 800',AL4(0800),AL2(6),AL4(10)            UAT30060\nDEN556   DC    C'1',X'73',CL4' 556',AL4(0556),AL2(6),AL4(10) ???        UAT30070\nDEN200   DC    C'0',X'33',CL4' 200',AL4(0200),AL2(6),AL4(10) ???        UAT30080\nDEN38K   DC    C'0',X'03',CL4' 38K',AL4(38000),AL2(3),AL4(100)          UAT30090\n*                                                                       UAT30100\nDENTABJ  EQU   0                   JCL DCB=DEN=? CODE                   UAT30110\nDENTABM  EQU   1                   MODESET CCW CODE                     UAT30120\nDENTABC  EQU   2                   DENSITY (CHARACTER)                  UAT30130\nDENTABB  EQU   6                   DENSITY (BINARY)                     UAT30140\nDENTABN  EQU   10                  IRG NUMERATOR                        UAT30150\nDENTABD  EQU   12                  IRG DENOMINATOR                      UAT30160\n*                                                                       UAT30170\n*  NOTE:  DENTABB AND DENTABN IN THE TABLE ABOVE CONTAIN THE            UAT30180\n*         NUMERATOR AND DENOMINATOR OF A FRACTION REPRESENTING          UAT30190\n*         THE SIZE OF THE INNER RECORD GAP AT EACH DENSITY.  FOR        UAT30200\n*         EXAMPLE, \"AL2(3),AL4(10)\" MEANS THAT THE IRG IS 3/10          UAT30210\n*         (OR 0.3) INCHES LONG.                                         UAT30220\n*                                                                       UAT30230\n*  NOTE:  SINCE 3480 DOES NOT SUPPORT MULTIPLE DENSITIES, THE           UAT30240\n*         MODESET CCW FOR DEN38K ABOVE IS SET TO NO-OP.                 UAT30250\n*                                                                       UAT30260\n         SPACE                                                          UAT30270\nHEXTABLE EQU   *-C'0'              BACK UP SOME TO SAVE SPACE           UAT30280\n         DC    C'0123456789ABCDEF' PRINT HEX TRANSLATE TABLE            UAT30290\n         SPACE                                                          UAT30300\n* 3420 SENSE BYTE 0 DESCRIPTIVE INFORMATION                             UAT30310\nSENSETB2 DC    X'80',CL21'COMMAND REJECT'                               UAT30320\n         DC    X'40',CL21'INTERVENTION REQUIRED'                        UAT30330\n         DC    X'20',CL21'BUS OUT CHECK'                                UAT30340\n         DC    X'10',CL21'EQUIPMENT CHECK'                              UAT30350\n         DC    X'08',CL21'DATA CHECK'                                   UAT30360\n         DC    X'04',CL21'OVERRUN'                                      UAT30370\n         DC    X'02',CL21'WORD COUNT ZERO'                              UAT30380\n         DC    X'01',CL21'DATA CONVERT CHECK'                           UAT30390\n* 3428 SENSE BYTE 0 DESCRIPTIVE INFORMATION                             UAT30400\nSENSETB8 DC    X'80',CL21'COMMAND REJECT'                               UAT30410\n         DC    X'40',CL21'INTERVENTION REQUIRED'                        UAT30420\n         DC    X'20',CL21'BUS OUT CHECK'                                UAT30430\n         DC    X'10',CL21'EQUIPMENT CHECK'                              UAT30440\n         DC    X'08',CL21'DATA CHECK'                                   UAT30450\n         DC    X'04',CL21'OVERRUN'                                      UAT30460\n         DC    X'02',CL21'DEFERRED UNIT CHECK'                          UAT30470\n         DC    X'01',CL21'ASSIGNED ELSEWHERE'                           UAT30480\nSENSEMLN EQU   21                  LENGTH OF MSGS IN ABOVE TABLE        UAT30490\nSENSELEN EQU   22                  LENGTH OF EACH ENTRY ABOVE           UAT30500\nSENSENTM EQU   8                   NUMBER OF ENTRIES IN ABOVE TABLE     UAT30510\n         SPACE 2                                                        UAT30520\n#SENSE   DS    0XL32               SENSE INFORMATION FIELD              UAT30530\n#SENSE0  DC    X'00'                 SENSE BYTE 0                       UAT30540\n#SENSE1  DC    X'00'                 SENSE BYTE 1                       UAT30550\n#SENSE2  DC    X'00'                 SENSE BYTE 2                       UAT30560\n#SENSE3  DC    X'00'                 SENSE BYTE 3                       UAT30570\n#SENSE4  DC    X'00'                 SENSE BYTE 4                       UAT30580\n#SENSE5  DC    X'00'                 SENSE BYTE 5                       UAT30590\n#SENSE6  DC    X'00'                 SENSE BYTE 6                       UAT30600\n#SENSE7  DC    X'00'                 SENSE BYTE 7                       UAT30610\n#SENSE8  DC    X'00'                 SENSE BYTE 8                       UAT30620\n#SENSE9  DC    X'00'                 SENSE BYTE 9                       UAT30630\n#SENSE10 DC    X'00'                 SENSE BYTE 10                      UAT30640\n         DC    XL21'00'            REMAINING 21 SENSE BYTES             UAT30650\n         SPACE                                                          UAT30660\nOPTLIST  DS    0F                  UATAPE PROGRAM OPTION LIST           UAT30670\n@A  DC  CL8'LIST    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(0,255)            UAT30680\n@B  DC  CL8'DUMP    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMP,255)        UAT30690\n@C  DC  CL8'DUMPMAX ',AL1(1),AL3(OPTIONS2),AL4(0),AL1(#DMAX,255)        UAT30700\n@D  DC  CL8'DUMPLAB ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMPLAB,255)     UAT30710\n@E  DC  CL8'DUMPALL ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#DUMPALL,255)     UAT30720\n@F  DC  CL8'COPY    ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#COPY,255)        UAT30730\n@G  DC  CL8'BLOCKS  ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#BLOCKS,255)      UAT30740\n@H  DC  CL8'PRINT   ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#PRINT,255)       UAT30750\n@I  DC  CL8'SKIPLAB ',AL1(0),AL3(OPTIONS1),AL4(0),AL1(#SKIPLAB,255)     UAT30760\n@J  DC  CL8'PRINTMAX',AL1(1),AL3(OPTIONS2),AL4(0),AL1(#PMAX,255)        UAT30770\n@K  DC  CL8'CRT     ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#CRT,255)         UAT30780\n@L  DC  CL8'ATOE    ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#ATOE,255-#ETOA)  UAT30790\n@M  DC  CL8'ETOA    ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#ETOA,255-#ATOE)  UAT30800\n@N  DC  CL8'BYPASS  ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#BYPASS,255)      UAT30810\n@O  DC  CL8'VERBATIM',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#NOFIX,255)       UAT30820\n@P  DC  CL8'LTM     ',AL1(0),AL3(OPTIONS2),AL4(0),AL1(#LTM,255)         UAT30830\n@Q  DC  CL8'MAXFILES',AL1(1),AL3(OPTIONS3),AL4(0),AL1(#MXFILES,255)     UAT30840\n@R  DC  CL8'SKIPBAD ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#SKIPBAD,255)     UAT30850\n@S  DC  CL8'DEBUG1  ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#DEBUG1,255)      UAT30860\n@T  DC  CL8'DEBUG2  ',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#DEBUG2,255)      UAT30870\n@U  DC  CL8'LABCHECK',AL1(0),AL3(OPTIONS3),AL4(0),AL1(#LABCHK,255)      UAT30880\n         SPACE                                                          UAT30890\nDUMPMAX  EQU   @C                                                       UAT30900\nPRINTMAX EQU   @J                                                       UAT30910\nLENOPT   EQU   @B-@A               LIST ENTRY LENGTH                    UAT30920\nNUMOPTS  EQU   (*-OPTLIST)/LENOPT                                       UAT30930\n         SPACE                                                          UAT30940\n*  THE FOLLOWING ARE EQUATES FOR OFFSETS INTO 'OPTLIST' ABOVE:          UAT30950\nOPTNAME  EQU   0                   OPTION NAME OFFSET                   UAT30960\nOPTTYPE  EQU   8                   OPTION TYPE (0=KEYWORD,1=VARIABLE)   UAT30970\nOPTKEYWD EQU     0                 --KEYWORD TYPE OPTION                UAT30980\nOPTVAR   EQU     1                 --VARIABLE TYPE OPTION               UAT30990\nOPTADDR  EQU   8                   OPTION BYTE ADDRESS                  UAT31000\nOPTVALUE EQU   12                  OPTION VALUE                         UAT31010\nOPTON    EQU   16                  OPTION BYTE OR-FLAG                  UAT31020\nOPTOFF   EQU   17                  OPTION BYTE AND-FLAG                 UAT31030\n         SPACE 3                                                        UAT31040\nMAXFILES EQU   @Q+OPTVALUE         MAX NUMBER OF FILES                  UAT31050\n         SPACE                                                          UAT31060\nHEADING1 DC    CL133'1U A T A P E   U T I L I T Y   P R O G R A M      XUAT31070\n                   VERSION 1.72'                                        UAT31080\n         ORG   HEADING1+72                                              UAT31090\n@MONTH   DC    C'XX/'                                                   UAT31100\n@DAY     DC    C'XX/'                                                   UAT31110\n@YEAR    DC    C'XX'                                                    UAT31120\n         ORG   HEADING1+84                                              UAT31130\nTIME     DC    X'4021207A20207A2020'  TIME - HH:MM:SS                   UAT31140\n         ORG   HEADING1+110                                             UAT31150\n         DC    C'PAGE '                                                 UAT31160\nPAGE     DC    CL4'0001'           PRINTED PAGE NUMBER                  UAT31170\n         ORG                                                            UAT31180\n         SPACE                                                          UAT31190\n*  DAYS IN MONTH COUNT LIST                                             UAT31200\n@JAN     DC    H'31'                                                    UAT31210\n@FEB     DC    H'28'                                                    UAT31220\n@MAR     DC    H'31'                                                    UAT31230\n@APR     DC    H'30'                                                    UAT31240\n@MAY     DC    H'31'                                                    UAT31250\n@JUN     DC    H'30'                                                    UAT31260\n@JUL     DC    H'31'                                                    UAT31270\n@AUG     DC    H'31'                                                    UAT31280\n@SEP     DC    H'30'                                                    UAT31290\n@OCT     DC    H'31'                                                    UAT31300\n@NOV     DC    H'30'                                                    UAT31310\n@DEC     DC    H'31'                                                    UAT31320\n         LTORG ,                                                        UAT31330\n         EJECT                                                          UAT31340\n*********************************************************************** UAT31350\n*                                                                     * UAT31360\n*      DATA CONTROL BLOCKS                                            * UAT31370\n*                                                                     * UAT31380\n*********************************************************************** UAT31390\n         SPACE                                                          UAT31400\n         PRINT NOGEN                                                    UAT31410\nSYSPRINT DCB   LRECL=133,RECFM=FA,BLKSIZE=133,DDNAME=SYSPRINT,         XUAT31420\n               MACRF=PM,DSORG=PS                                        UAT31430\n         SPACE 2                                                        UAT31440\nSYSUT1   DCB   DSORG=PS,DEVD=TA,DDNAME=SYSUT1,MACRF=EXCP,EXLST=EXLST    UAT31450\n         SPACE 2                                                        UAT31460\nSYSUT2   DCB   DSORG=PS,DEVD=TA,DDNAME=SYSUT2,MACRF=EXCP,EXLST=EXLST    UAT31470\n         SPACE 3                                                        UAT31480\n*        REGEQU                    REGISTER EQUATES                     UAT31490\nR0       EQU   0                                                        UAT31500\nR1       EQU   1                                                        UAT31510\nR2       EQU   2                                                        UAT31520\nR3       EQU   3                                                        UAT31530\nR4       EQU   4                                                        UAT31540\nR5       EQU   5                                                        UAT31550\nR6       EQU   6                                                        UAT31560\nR7       EQU   7                                                        UAT31570\nR8       EQU   8                                                        UAT31580\nR9       EQU   9                                                        UAT31590\nR10      EQU   10                                                       UAT31600\nR11      EQU   11                                                       UAT31610\nR12      EQU   12                                                       UAT31620\nR13      EQU   13                                                       UAT31630\nR14      EQU   14                                                       UAT31640\nR15      EQU   15                                                       UAT31650\n         SPACE 3                                                        UAT31660\n*  WRITE TO OPERATOR CONTROL PARAMETER LIST                             UAT31670\nWTO1     WTO   'TTTT ON UUU IS LL VVVVVV',ROUTCDE=(3,5),MF=L            UAT31680\nWTO1TYPE EQU   WTO1+4              TAPE OR CART                         UAT31690\nWTO1UNIT EQU   WTO1+4+8            UNIT NAME/ADDRESS                    UAT31700\nWTO1LAB  EQU   WTO1+4+15           NL OR SL OR AL                       UAT31710\nWTO1VOL  EQU   WTO1+4+18           VOLUME SERIAL                        UAT31720\n         TITLE 'INPUT/OUTPUT BLOCKS'                                    UAT31730\n*********************************************************************** UAT31740\n*                                                                     * UAT31750\n*     IOB1                INPUT/OUTPUT BLOCK FOR SYSUT1               * UAT31760\n*                                                                     * UAT31770\n*********************************************************************** UAT31780\n         SPACE                                                          UAT31790\nIOB1     DS    0F                                                       UAT31800\n         DC    X'0200'             IOBFLAG1 AND IOBFLAG2                UAT31810\nIOB1SNS  DC    X'0000'             IOBSENS1 AND IOBSENS2                UAT31820\n         DC    A(ECB1)             IOBECBCC AND IOBECBPT (ECB STUFF)    UAT31830\n         DC    X'00'               IOBFLAG3                             UAT31840\n         DC    0XL7'00'            IOBCSW                               UAT31850\nIOB1CSW  DC    XL5'00'             FIRST PART OF CSW                    UAT31860\nIOB1RES  DC    X'0000'             RESIDUAL IN CSW                      UAT31870\n         DC    X'00'               IOBSIOCC                             UAT31880\nIOB1CCW  DS    XL3                 IOBSTART (CHANNEL PGM ADDR)          UAT31890\n         DC    X'00'               RESERVED                             UAT31900\n         DC    AL3(SYSUT1)         IOBDCBPT                             UAT31910\n         DC    XL4'00'             IOBRESTR                             UAT31920\n         DC    X'0000'             IOBINCAM                             UAT31930\n         DC    X'0000'             IOBERRCT                             UAT31940\n         DC    2F'0'               ??????????                           UAT31950\n         SPACE 2                                                        UAT31960\nECB1     DC    F'0'                SYSUT1 EVENT CONTROL BLOCK           UAT31970\n         SPACE 2                                                        UAT31980\n*********************************************************************** UAT31990\n*                                                                     * UAT32000\n*      IOB2                  INPUT/OUTPUT BLOCK FOR SYSUT2            * UAT32010\n*                                                                     * UAT32020\n*********************************************************************** UAT32030\n         SPACE                                                          UAT32040\nIOB2     DS    0F                                                       UAT32050\n         DC    X'0200'             IOBFLAG1 AND IOBFLAG2                UAT32060\nIOB2SNS  DC    X'0000'             IOBSENS1 AND IOBSENS2                UAT32070\n         DC    A(ECB2)             IOBECBCC AND IOBECBPT (ECB STUFF)    UAT32080\n         DC    X'00'               IOBFLAG3                             UAT32090\n         DC    0XL7'00'            IOBCSW                               UAT32100\nIOB2CSW  DC    XL5'00'             FIRST PART OF CSW                    UAT32110\nIOB2RES  DC    X'0000'             RESIDUAL IN CSW                      UAT32120\n         DC    X'00'               IOBSIOCC                             UAT32130\nIOB2CCW  DS    XL3                 IOBSTART (CHANNEL PGM ADDR)          UAT32140\n         DC    X'00'               RESERVED                             UAT32150\n         DC    AL3(SYSUT2)         IOBDCBPT                             UAT32160\n         DC    XL4'00'             IOBRESTR                             UAT32170\n         DC    X'0000'             IOBINCAM                             UAT32180\n         DC    X'0000'             IOBERRCT                             UAT32190\n         DC    2F'0'               ??????????                           UAT32200\n         SPACE 2                                                        UAT32210\nECB2     DC    F'0'                SYSUT2 EVENT CONTROL BLOCK           UAT32220\n         TITLE 'UATAPE CHANNEL PROGRAMS'                                UAT32230\n*********************************************************************** UAT32240\n*                                                                     * UAT32250\n*     CHANNEL PROGRAM AREA                                            * UAT32260\n*                                                                     * UAT32270\n*********************************************************************** UAT32280\n         SPACE                                                          UAT32290\n*  SENSE CCW -- UP TO 32 BYTES OF DATA RETURNED IN \"#SENSE\"             UAT32300\n         SPACE                                                          UAT32310\nSENSECCW CCW   4,#SENSE,#SILI,32        READ BASIC SENSE                UAT32320\n         SPACE 2                                                        UAT32330\n*  READ CCW -- UP TO 32760 BYTES OF DATA RETURNED                       UAT32340\n         SPACE                                                          UAT32350\nREADCCW  CCW   2,0,#SILI,32760          READ DATA BLOCK                 UAT32360\nREADADDR EQU   READCCW+1                  INPUT BUFFER ADDRESS          UAT32370\nREADLEN  EQU   READCCW+6                  LENGTH OF READ OPERATION      UAT32380\n         SPACE 2                                                        UAT32390\n*  WRITE CCW -- SINGLE DATA BLOCK WRITTEN                               UAT32400\n         SPACE                                                          UAT32410\nWRITECCW CCW   1,0,#CC+#SILI,0          WRITE DATA BLOCK                UAT32420\n         CCW   3,0,#SILI,1              NO OPERATION (NO-OP)            UAT32430\nWRITEADR EQU   WRITECCW+1                 OUTPUT BUFFER ADDRESS         UAT32440\nWRITELEN EQU   WRITECCW+6                 OUTPUT BLOCK LENGTH           UAT32450\n         SPACE 2                                                        UAT32460\n*  REWIND CCW -- REWINDS TAPE TO LOAD POINT                             UAT32470\n         SPACE                                                          UAT32480\nREWINDCC CCW   7,0,#SILI,1              REWIND                          UAT32490\n         SPACE 2                                                        UAT32500\n*  WRITE TAPE MARK CCW -- WRITES SINGLE TAPE MARK                       UAT32510\n         SPACE                                                          UAT32520\nWTMCCW   CCW   31,0,#SILI,1             WRITE TAPE MARK                 UAT32530\n         SPACE 2                                                        UAT32540\n*  MODE SET CCW -- SETS TAPE DRIVE DENSITY                              UAT32550\n         SPACE                                                          UAT32560\nMODECCW  CCW   0,0,#SILI,1              MODESET                         UAT32570\n         SPACE 2                                                        UAT32580\n*  FORWARD-SPACE-BLOCK CCW -- SKIPS OVER BAD BLOCKS                     UAT32590\n         SPACE                                                          UAT32600\nFSBCCW   CCW   X'37',0,#CC+#SILI,1      FOWARD SPACE BLOCK              UAT32610\n         SPACE                                                          UAT32620\n*  LOAD DISPLAY CCW'S FOR 3480 TAPE DRIVES                              UAT32630\nDISPCCW  CCW   X'9F',MSG58,#SILI,17                                     UAT32640\n         SPACE 2                                                        UAT32650\n*  JOBFILE CONTROL BLOCK                                                UAT32660\n         SPACE                                                          UAT32670\nEXLST    DC    X'87',AL3(JFCB)     EXIT LIST FOR SYSUT1 AND SYSUT2      UAT32680\n         SPACE                                                          UAT32690\nJFCB     DS    CL176               JOB FILE CONTROL BLOCK               UAT32700\n         TITLE 'PROGRAM MESSAGES'                                       UAT32710\n*********************************************************************** UAT32720\n*                                                                     * UAT32730\n*     PROGRAM MESSAGES                                                * UAT32740\n*                                                                     * UAT32750\n*********************************************************************** UAT32760\n         SPACE                                                          UAT32770\nMSG1     DC    C'-       NORMAL END-OF-TAPE FOUND -- UATAPE TERMINATED XUAT32780\n               NORMALLY.'                                               UAT32790\nMSG2     DC    C'-       SYSUT1 TAPE CONTAINS STANDARD LABELS.'         UAT32800\nMSG3     DC    C'-       SYSUT1 TAPE DOES NOT CONTAIN STANDARD LABELS.' UAT32810\nMSG4     DC    C'-VOL1:  INPUT VOLUME SERIAL:   XXXXXX       OWNER:'    UAT32820\nMSG4V    EQU   31                  OFFSET TO \"XXXXXX\" IN MSG4           UAT32830\nMSG4O    EQU   62                  OFFSET TO OWNR IN MSG4               UAT32840\nMSG5     DC    C'        OUTPUT VOLUME SERIAL:  XXXXXX'                 UAT32850\nMSG5V    EQU   31                  OFFSET TO \"XXXXXX\" IN MSG5           UAT32860\nMSG6     DC    C'        SYSUT1 WRITE RING IS IN.'                      UAT32870\nMSG6W    EQU   29                  OFFSET TO \"IN\" IN MSG6               UAT32880\nMSG7     DC    C'        ORIGINAL SYSUT2 VOLUME SERIAL:  XXXXXX'        UAT32890\nMSG7S    EQU   40                  OFFSET TO \"XXXXXX\" IN MSG7           UAT32900\nMSG8     DC    C'0------ TAPE MARK ------------------------------------XUAT32910\n               --------------------------'                              UAT32920\nMSG9     DC    C'0       UATAPE OPTIONS IN EFFECT:'                     UAT32930\nMSG9O    EQU   *-MSG9+2            OFFSET TO MSG LIST                   UAT32940\nMSG10    DC    C'        OUTPUT TAPE DENSITY:   XXXX BPI'               UAT32950\nMSG10D   EQU   31                  OFFSET TO \"XXXX\" IN MSG10            UAT32960\nMSG11    DC    C'0HDR1:  DATA SET NAME:  12345678901234567   VOLUME SERXUAT32970\n               IAL:'                                                    UAT32980\nMSG11D   EQU   24                  OFFSET TO DSN IN MSG11               UAT32990\nMSG11V   EQU   62                  OFFSET TO VOLSER IN MSG11            UAT33000\nMSG12    DC    C'        FILE NUMBER:    XXXX                VOLUME SEQXUAT33010\n               UENCE:'                                                  UAT33020\nMSG12F   EQU   24                  OFFSET TO FILSEQ IN MSG12            UAT33030\nMSG12S   EQU   62                  OFFSET TO VOLSEQ IN MSG12            UAT33040\nMSG12#   DC    C'        GENERATION:     XXXX                VERSION:'  UAT33050\nMSG12G   EQU   24                  OFFSET TO GENERA IN MSG12#           UAT33060\nMSG12V   EQU   62                  OFFSET TO VERS IN MSG12#             UAT33070\nMSG13    DC    C'        CREATION DATE:  YY.DDD              EXPIRATIONXUAT33080\n                DATE:  YY.DDD'                                          UAT33090\nMSG13C   EQU   24                  OFFSET TO CRDT IN MSG13              UAT33100\nMSG13E   EQU   62                  OFFSET TO EXDT IN MSG13              UAT33110\nMSG13#   DC    C'        SYSTEM CODE:'                                  UAT33120\nMSG13S   EQU   24                  OFFSET TO SYSTEM CODE IN MSG13#      UAT33130\nMSG15    DC    C'0HDR2:  LRECL:          XXXXX               BLKSIZE:'  UAT33140\nMSG15L   EQU   24                  OFFSET TO LRECL IN MSG15             UAT33150\nMSG15B   EQU   62                  OFFSET TO BLKSIZE IN MSG15           UAT33160\nMSG15#   DC    C'        RECFM:          X                   DENSITY:  XUAT33170\n                       X (XXXX BPI)'                                    UAT33180\nMSG15R   EQU   24                  OFFSET TO \"X\" IN MSG15#              UAT33190\nMSG15D1  EQU   62                  OFFSET TO \"U\" IN MSG15#              UAT33200\nMSG15D2  EQU   65                  OFFSET TO \"NNNN\" IN MSG15#           UAT33210\nMSG16    DC    C'        CREATING JOB:   XXXXXXXX/XXXXXXXX   RECORDING XUAT33220\n               TECH:'                                                   UAT33230\nMSG16J   EQU   24                  OFFSET TO JB/SP IN MSG16             UAT33240\nMSG16R   EQU   62                  OFFSET TO TECH IN MSG16              UAT33250\nMSG18    DC    C'        FILE XXXX CONTAINS YYYYYY BLOCKS.   MAXIMUM=ZZXUAT33260\n               ZZZ.  MINIMUM=UUUUU.'                                    UAT33270\nMSG18F   EQU   13                  OFFSET TO \"XXXX\" IN MSG18            UAT33280\nMSG18D   EQU   27                  OFFSET TO \"YYYYY\" IN MSG18           UAT33290\nMSG18X   EQU   52                  OFFSET TO \"ZZZZZ\" IN MSG18           UAT33300\nMSG18N   EQU   68                  OFFSET TO \"UUUUU\" IN MSG18           UAT33310\nMSG19    DC    C'0EOF1:  NUMBER OF BLOCKS:'                             UAT33320\nMSG19N   EQU   26                  OFFSET TO BLKCT IN MSG19             UAT33330\nMSG24    DC    C'-FILE XXXX   BLOCK YYYYY   LENGTH ZZZZZ'               UAT33340\nMSG24F   EQU   6                   OFFSET TO \"XXXX\" IN MSG24            UAT33350\nMSG24B   EQU   19                  OFFSET TO \"YYYYY\" IN MSG24           UAT33360\nMSG24L   EQU   34                  OFFSET TO \"ZZZZZ\" IN MSG24           UAT33370\nMSG25    DC    C'        BLOCKS XXXXXX TO YYYYYY LENGTH ZZZZZ'          UAT33380\nMSG25B   EQU   15                  OFFSET TO \"XXXXXX\" IN MSG25          UAT33390\nMSG25T   EQU   25                  OFFSET TO \"YYYYYY\" IN MSG25          UAT33400\nMSG25L   EQU   39                  OFFSET TO \"ZZZZZ\" IN MSG25           UAT33410\nMSG26    DC    C'        BLOCK  XXXXXX           LENGTH ZZZZZ'          UAT33420\nMSG26B   EQU   15                  OFFSET TO \"XXXXXX\" IN MSG26          UAT33430\nMSG26L   EQU   39                  OFFSET TO \"ZZZZZ\" IN MSG26           UAT33440\nMSG27    DC    C'0       SYSUT1 DENSITY = XXXX BPI.          DATA LENGTXUAT33450\n               H = XXXX FEET.'                                          UAT33460\nMSG27D   EQU   25                  OFFSET TO \"XXXX\" IN MSG27            UAT33470\nMSG27B   EQU   58                  OFFSET TO LENGTH IN MSG27            UAT33480\nMSG28    DC    C'0       --UATAPE STATISTICS--        SYSUT1'           UAT33490\nMSGS1    EQU   43                                                       UAT33500\nMSGS2    EQU   65                                                       UAT33510\nMSG29    DC    C'0       VOLUME SERIAL:'                                UAT33520\nMSG30    DC    C'        TEMPORARY READ ERRORS:'                        UAT33530\nMSG31    DC    C'        TEMPORARY WRITE ERRORS:'                       UAT33540\nMSG32    DC    C'        PERMANENT READ ERRORS:'                        UAT33550\nMSG33    DC    C'        PERMANENT WRITE ERRORS:'                       UAT33560\nMSG34    DC    C'        NUMBER OF ERASE GAPS:'                         UAT33570\nMSG35    DC    C'        CLEANER ACTIONS:'                              UAT33580\nMSG36    DC    C'        START I/O COUNT:'                              UAT33590\nMSG37    DC    C'        TAPE DRIVE:'                                   UAT33600\nMSG38    DC    C'        NUMBER OF NOISE BLOCKS:'                       UAT33610\nMSG39    DC    C'        APPROX. LENGTH (FEET):'                        UAT33620\nMSG391   DC    C'        TOTAL DATA BYTES:'                             UAT33630\nMSG40    DC    C'        SYSUT2 DENSITY = XXXX BPI.          DATA LENGTXUAT33640\n               H = XXXX FEET.'                                          UAT33650\nMSG40D   EQU   25                  OFFSET TO \"XXXX\" IN MSG40            UAT33660\nMSG40B   EQU   58                  OFFSET TO LENGTH IN MSG40            UAT33670\nMSG41    DC    C'-FILE:  XXXX =========================================XUAT33680\n               ========================================================XUAT33690\n               ======================='                                 UAT33700\nMSG41F   EQU   8                   OFFSET TO FILENUMBER IN MSG41        UAT33710\nMSG42    DC    C'0****** DENSITY OMITTED ON SYSUT2 DD-STATEMENT.  DEFAUXUAT33720\n               LT OF XXXX BPI ASSUMED.'                                 UAT33730\nMSG42D   EQU   60                  OFFSET TO BPI                        UAT33740\nMSG43    DC    C'0****** NULL DATA FILE -- NO DATA FOUND -- FILE:  '    UAT33750\nMSG43F   EQU   *-MSG43             OFFSET TO FILENUMBER IN MSG43        UAT33760\nMSG44    DC    C'0****** UNIDENTIFIABLE LABEL RECORD.  FIRST 80 BYTES PXUAT33770\n               RINTED ON NEXT LINE.'                                    UAT33780\nMSG45    DC    C'0       FILE    DATA SET NAME        RECFM   LRECL   BXUAT33790\n               LKSIZE   BLOCKS   LENGTH'                                UAT33800\nMSG46    DC    C'        ----    -------------        -----   -----   -XUAT33810\n               ------   ------   ------'                                UAT33820\nMSG47    DC    C'1                          UATAPE FILE SUMMARY FOR'    UAT33830\nMSG471   EQU   *-MSG47+1           OFFSET TO FIRST VOLSER               UAT33840\nMSG47M   EQU   MSG471+7            OFFSET TO \"AND\"                      UAT33850\nMSG472   EQU   MSG47M+4            OFFSET TO SECOND VOLSER              UAT33860\nMSG48    DC    C'0****** UNIDENTIFIABLE LABEL RECORD.  MESSAGES SUPPRESXUAT33870\n               SED FOR THIS FILE.'                                      UAT33880\nMSG49    DC    C'-       SYSUT1 TAPE CONTAINS STANDARD ASCII LABELS'    UAT33890\nMSG50    DC    C'0 ***** DUMP OUTPUT SUSPENDED UNTIL END-OF-FILE *****' UAT33900\nMSG51    DC    C'        LEADING TAPE MARK ON SYSUT1 TAPE SKIPPED'      UAT33910\nMSG52    DC    C'        LEADING TAPE MARK ON SYSUT1 TAPE -- NON-STANDAXUAT33920\n               RD OR NO LABELS ASSUMED'                                 UAT33930\nMSG53    DC    C'0****** PRINT SUSPENDED UNTIL END-OF-FILE ******'      UAT33940\nMSG54    DC    C'        ALL TAPE LABELS WILL BE OMITTED ON THE OUTPUT XUAT33950\n               TAPE.'                                                   UAT33960\nMSG55    DC    C'-****** UATAPE TERMINATING PROCESSING OF THIS TAPE:  XXUAT33970\n               XXXX FILES PROCESSED'                                    UAT33980\nMSG55C   EQU   53                  OFFSET TO FILE COUNTER IN MSG55      UAT33990\nMSG56    DC    C'0****** THE HDR1 LABEL INDICATES THAT THIS TAPE HAS BEXUAT34000\n               EN LABELED WITH IEHINITT, BUT HAS NOT YET BEEN USED.'    UAT34010\nMSG57    DC    C'0****** WARNING:  THE BLOCK COUNT FROM THE EOF1 LABEL XUAT34020\n               DOES NOT MATCH THE ACTUAL BLOCK COUNT ON THE TAPE.'      UAT34030\nMSG58    DC    B'01010000'                                              UAT34040\nMSG58A   DC    CL8'-UATAPE-'                                            UAT34050\nMSG58B   DC    CL8' VOLSER '                                            UAT34060\nMSG59    DC    C'0       (IDRC COMPRESSION IS ON, DATA LENGTH VALUE MAYXUAT34070\n               BE UNRELIABLE)'                                          UAT34080\nMSG60    DC    C'0       SYSUT1 IDRC DATA COMPRESSION IS OFF.'          UAT34090\nMSG60A   EQU   40                  OFFSET TO WORD \"OFF\"                 UAT34100\nMSG61    DC    C'        SYSUT1 WRITE PROTECTION IS ENABLED.'           UAT34110\nMSG61A   EQU   35                  OFFSET TO WORD \"ENABLED\"             UAT34120\nMSG62    DC    C'        FILE XXXX CONTAINS YYY,YYY,YYY,YYY BYTES OF DAXUAT34130\n               TA.'                                                     UAT34140\nMSG62F   EQU   13                  OFFSET TO \"XXXX\" IN MSG62            UAT34150\nMSG62D   EQU   27                  OFFSET TO \"YYYYY\" IN MSG62           UAT34160\nMSG63    DC    C' SYSUT1 DEBUG BEFORE CCW XXXXXXXXXXXXXXXX'             UAT34170\nMSG63A   EQU   25                  OFFSET TO XXXX                       UAT34180\nMSG64    DC    C' SYSUT1 DEBUG AFTER  CSW XXXX'                         UAT34190\nMSG64A   EQU   25                  OFFSET TO XXXX                       UAT34200\nMSG65    DC    C' SYSUT2 DEBUG BEFORE CCW XXXXXXXXXXXXXXXX'             UAT34210\nMSG65A   EQU   25                  OFFSET TO XXXX                       UAT34220\nMSG66    DC    C' SYSUT2 DEBUG AFTER  CSW XXXX'                         UAT34230\nMSG66A   EQU   25                  OFFSET TO XXXX                       UAT34240\nMSG67    DC    C'0       (NOTE: TOTAL DATA BYTES VALUE DOES NOT INCLUDEXUAT34250\n                TAPE LABEL RECORDS)'                                    UAT34260\nMSG68    DC    C'0****** UATAPE - NORMAL END OF EXECUTION'              UAT34270\n         TITLE 'PROGRAM ERROR MESSAGES'                                 UAT34280\n*********************************************************************** UAT34290\n*                                                                     * UAT34300\n*   ERROR MESSAGES                                                    * UAT34310\n*                                                                     * UAT34320\n*********************************************************************** UAT34330\n         SPACE                                                          UAT34340\nERROR1   DC    C'-****** ERROR 1:  NO SYSUT1 DD-STATEMENT WAS FOUND.'   UAT34350\nERROR2   DC    C'-****** ERROR 2:  SYSUT1 DATA SET WOULD NOT OPEN.'     UAT34360\nERROR3   DC    C'-****** ERROR 3:  NOT ENOUGH MEMORY AVAILABLE TO RUN UXUAT34370\n               ATAPE.  PLEASE INCREASE REGION SIZE AND RESUBMIT.'       UAT34380\nERROR4   DC    C'-****** ERROR 4:  NO SYSUT2 DD-STATEMENT WAS FOUND.'   UAT34390\nERROR5   DC    C'-****** ERROR 5:  SYSUT2 DATA SET WOULD NOT OPEN.'     UAT34400\nERROR6   DC    C'-****** ERROR 6:  VOLUME SERIAL ON SYSUT2 TAPE DOES NOXUAT34410\n               T MATCH VOLUME SERIAL PARAMETER IN JCL:'                 UAT34420\nERROR7   DC    C'0                 TAPE=XXXXXX            JCL=YYYYYY'   UAT34430\nERR7T    EQU   23                  OFFSET TO \"XXXXXX\" IN ERROR7         UAT34440\nERR7J    EQU   45                  OFFSET TO \"YYYYYY\" IN ERROR7         UAT34450\nERROR8   DC    C'-****** ERROR 8:  SYSUT2 TAPE DOES NOT HAVE A STANDARDXUAT34460\n                LABEL.  LABEL THE TAPE AND RERUN.'                      UAT34470\nERROR9   DC    C'-****** ERROR 9:  PERMANENT I/O ERROR ON SYSUT1'       UAT34480\nERROR10  DC    C'0****** CSW=XXXXXXXXXXXXXX   CCW=ZZZZZZZZZZZZZZZZ'     UAT34490\nERR10C   EQU   12                  OFFSET TO \"XX\" IN ERROR10            UAT34500\nERR10W   EQU   33                  OFFSET TO \"ZZZZ\" IN ERROR10          UAT34510\nERROR11  DC    C'-****** ERROR 11:  PERMANENT I/O ERROR ON SYSUT2'      UAT34520\nERROR12  DC    C'-****** ERROR 12: RAN OUT OF TAPE ON SYSUT2 DURING COPXUAT34530\n               Y OPERATION.  RESUBMIT WITH LONGER TAPE.'                UAT34540\nERROR13  DC    C' ****** ERROR 13: INVALID PARM FIELD PARAMETER.  QUESTXUAT34550\n               ION MARK INDICATES POSITION ABOVE.'                      UAT34560\nERROR14  DC    C'-****** ERROR 14: UATAPE DOES NOT SUPPORT SPECIFIED OUXUAT34570\n               TPUT TAPE DENSITY.'                                      UAT34580\nERROR15  DC    C'-****** ERROR 15: SYSUT2 TAPE IS FILE PROTECTED.  INSEXUAT34590\n               RT A WRITE RING AND RESUBMIT.'                           UAT34600\nERROR16  DC    C'-****** ERROR 16: XXXXXX DOES NOT DEFINE A MAGNETIC TAXUAT34610\n               PE DEVICE.'                                              UAT34620\nERR16D   EQU   18                  OFFSET TO \"XXXXXX\" IN ERROR16        UAT34630\n         SPACE 2                                                        UAT34640\nERROR17  DC    C' ****** SENSE='                                        UAT34650\nERR17B   EQU   14                  OFFSET TO SENSE INFO                 UAT34660\nERR18    DC    C' ****** ERROR OCCURRED WHILE PROCESSING LABEL RECORD FXUAT34670\n               OR FILE NUMBER '                                         UAT34680\nERR18F   EQU   *-ERR18             OFFSET TO FILE NUMBER IN ERR18       UAT34690\nERR19    DC    C' ****** ERROR OCCURRED WHILE PROCESSING RECORD ###### XUAT34700\n               OF FILE '                                                UAT34710\nERR19B   EQU   47                  OFFSET TO BLOCK # IN ERR19           UAT34720\nERR19F   EQU   *-ERR19             OFFSET TO FILE # IN ERR19            UAT34730\nERROR20  DC    C' ****** FORWARD SPACING OVER BAD RECORD ....'          UAT34740\nERROR21  DC    C' ****** ERROR OCCURRED WHILE PROCESSING VOLUME LABEL RXUAT34750\n               ECORD (OR FIRST RECORD ON TAPE)'                         UAT34760\n         TITLE 'SYSTEM CONTROL BLOCK EQUATES'                           UAT34770\n*********************************************************************** UAT34780\n*                                                                     * UAT34790\n*      TIOT                  TASK INPUT/OUTPUT TABLE                  * UAT34800\n*                                                                     * UAT34810\n*********************************************************************** UAT34820\n         SPACE                                                          UAT34830\nTIOTJOBN EQU   0                   JOB NAME FIELD                       UAT34840\nTIOTJOBS EQU   8                   JOB STEP FIELD                       UAT34850\nTIOTPROC EQU   16                  CATALOGUED PROCEDURE STEP FIELD      UAT34860\nTIOTDDEN EQU   24                  OFFSET TO 1ST DD-ENTRY               UAT34870\nTIOTLEN  EQU   0                   DD-ENTRY LENGTH OFFSET               UAT34880\nTIOTDDNM EQU   4                   DDNAME OFFSET IN DD-ENTRY            UAT34890\nTIOTFSRT EQU   17                  UCB ADDR OFFSET IN DD-ENTRY          UAT34900\n         SPACE 2                                                        UAT34910\n*********************************************************************** UAT34920\n*                                                                     * UAT34930\n*       BIT DEFINITION SYMBOLS                                        * UAT34940\n*                                                                     * UAT34950\n*********************************************************************** UAT34960\n         SPACE                                                          UAT34970\n#BIT0    EQU   B'10000000'                                              UAT34980\n#BIT1    EQU   B'01000000'                                              UAT34990\n#BIT2    EQU   B'00100000'                                              UAT35000\n#BIT3    EQU   B'00010000'                                              UAT35010\n#BIT4    EQU   B'00001000'                                              UAT35020\n#BIT5    EQU   B'00000100'                                              UAT35030\n#BIT6    EQU   B'00000010'                                              UAT35040\n#BIT7    EQU   B'00000001'                                              UAT35050\n         SPACE 2                                                        UAT35060\n*  CCW FLAG BITS                                                        UAT35070\n#CD      EQU   #BIT0               DATA CHAINING                        UAT35080\n#CC      EQU   #BIT1               COMMAND CHAINING                     UAT35090\n#SILI    EQU   #BIT2               SUPPRESS INCORRECT LENGTH INDICATION UAT35100\n#SKIP    EQU   #BIT3               SKIP DATA TRANSFER                   UAT35110\n#PCI     EQU   #BIT4               CHANNEL PROGRAM CONTROLLED INTERRUPT UAT35120\n#IDA     EQU   #BIT5               CCW SPECIFIES FIRST IDAW             UAT35130\n#SUSPEND EQU   #BIT6               SUSPEND CCW                          UAT35140\n         TITLE 'UATAPE TABLES CSECT'                                    UAT35150\n*********************************************************************** UAT35160\n*                                                                     * UAT35170\n*    SPECIAL CSECT TO CONTAIN VARIOUS TABLES                          * UAT35180\n*                                                                     * UAT35190\n*        PRTTABLE  --  TRANSLATE TABLE FOR DUMP ROUTINE               * UAT35200\n*        IECTSASA  --  TRANSLATE TABLE FOR EBCDIC TO ASCII            * UAT35210\n*        IECTRASA  --  TRANSLATE TABLE FOR ASCII  TO EBCDIC           * UAT35220\n*                                                                     * UAT35230\n*********************************************************************** UAT35240\nTABLES   CSECT                                                          UAT35250\nPRTTABLE DC    256C'.'             PRINTABLE CHARACTER TABLE            UAT35260\n         ORG   PRTTABLE+C' '       BLANK                                UAT35270\n         DC    C' '                                                     UAT35280\n         ORG   PRTTABLE+C'.'                                            UAT35290\n         DC    C'.<(+|&&'                                               UAT35300\n         ORG   PRTTABLE+C'!'                                            UAT35310\n         DC    C'!$*);\u00ac-/'                                              UAT35320\n         ORG   PRTTABLE+C','                                            UAT35330\n         DC    C',%_>?'                                                 UAT35340\n         ORG   PRTTABLE+C':'                                            UAT35350\n         DC    C':#@''=\"'                                               UAT35360\n         ORG   PRTTABLE+C'a'       WARNING:  THIS TABLE CONTAINS        UAT35370\n         DC    C'abcdefghi'        LOWER CASE CHARACTERS                UAT35380\n         ORG   PRTTABLE+C'j'                                            UAT35390\n         DC    C'jklmnopqr'                                             UAT35400\n         ORG   PRTTABLE+C's'                                            UAT35410\n         DC    C'stuvwxyz'                                              UAT35420\n         ORG   PRTTABLE+C'A'                                            UAT35430\n         DC    C'ABCDEFGHI'                                             UAT35440\n         ORG   PRTTABLE+C'J'                                            UAT35450\n         DC    C'JKLMNOPQR'                                             UAT35460\n         ORG   PRTTABLE+C'S'                                            UAT35470\n         DC    C'STUVWXYZ'                                              UAT35480\n         ORG   PRTTABLE+C'0'                                            UAT35490\n         DC    C'0123456789'                                            UAT35500\n         ORG   ,                                                        UAT35510\n         EJECT                                                          UAT35520\n*********************************************************************** UAT35530\n*                                                                     * UAT35540\n*    TRANSLATE TABLES FOR:                                            * UAT35550\n*                                                                     * UAT35560\n*        EBCDIC TO ASCII    --  IECTSASA                              * UAT35570\n*        ASCII  TO EBCDIC   --  IECTRASA                              * UAT35580\n*                                                                     * UAT35590\n*********************************************************************** UAT35600\n         SPACE                                                          UAT35610\nIECTSASA DS    0XL256              EBCDIC TO ASCII TRANSLATE TABLE      UAT35620\n         SPACE                                                          UAT35630\n*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                       UAT35640\n         DC    X'000102031A091A7F1A1A1A0B0C0D0E0F' 0                    UAT35650\n         DC    X'101112131A0A080018191A1A1C1D1E1F' 1                    UAT35660\n         DC    X'1A1A1A1A1A0A171B1A1A1A1A1A050607' 2                    UAT35670\n         DC    X'1A1A161A1A1A1A041A1A1A1A14151A1A' 3                    UAT35680\n         DC    X'201A1A1A1A1A1A1A1A5D1A2E3C282B7C' 4                    UAT35690\n         DC    X'261A1A1A1A1A1A1A1A1A21242A293B7E' 5                    UAT35700\n         DC    X'2D2F1A1A1A1A1A1A1A1A1A2C255F3E3F' 6                    UAT35710\n         DC    X'1A1A1A1A1A1A1A1A1A5B3A2340273D22' 7                    UAT35720\n         DC    X'1A6162636465666768691A7B1A1A1A1A' 8                    UAT35730\n         DC    X'1A6A6B6C6D6E6F7071721A7D1A1A1A1A' 9                    UAT35740\n         DC    X'1A1A737475767778797A1A1A1A1A1A1A' A                    UAT35750\n         DC    X'5E1A1A1A1A1A1A1A1A1A1A1A1A1A1A60' B                    UAT35760\n         DC    X'1A4142434445464748491A1A1A1A1A5C' C                    UAT35770\n         DC    X'1A4A4B4C4D4E4F5051521A1A1A1A1A1A' D                    UAT35780\n         DC    X'1A1A535455565758595A1A1A1A1A1A1A' E                    UAT35790\n         DC    X'303132333435363738391A1A1A1A1A1A' F                    UAT35800\n         SPACE                                                          UAT35810\n*                                                                       UAT35820\nIECTRASA DS    0XL256              ASCII TO EBCDIC TRANSLATE TABLE      UAT35830\n         SPACE                                                          UAT35840\n*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                       UAT35850\n         DC    X'00010203372D2E2F1605250B0C0D0E0F' 0                    UAT35860\n         DC    X'101112133C3D322618193F271C1D1E1F' 1                    UAT35870\n         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 2                    UAT35880\n         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 3                    UAT35890\n         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 4                    UAT35900\n         DC    X'D7D8D9E2E3E4E5E6E7E8E979CF49B06D' 5                    UAT35910\n         DC    X'BF818283848586878889919293949596' 6                    UAT35920\n         DC    X'979899A2A3A4A5A6A7A8A98B4F9B5F07' 7                    UAT35930\n         DC    X'00010203372D2E2F1605250B0C0D0E0F' 8                    UAT35940\n         DC    X'101112133C3D322618193F271C1D1E1F' 9                    UAT35950\n         DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' A                    UAT35960\n         DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' B                    UAT35970\n         DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' C                    UAT35980\n         DC    X'D7D8D9E2E3E4E5E6E7E8E979CF49B06D' D                    UAT35990\n         DC    X'BF818283848586878889919293949596' E                    UAT36000\n         DC    X'979899A2A3A4A5A6A7A8A98B4F9B5F07' F                    UAT36010\n         TITLE 'UATAPE PROGRAM CONTROL BLOCK DSECTS'                    UAT36020\n*********************************************************************** UAT36030\n*                                                                     * UAT36040\n*     VOL1       VOLUME LABEL RECORD DSECT                            * UAT36050\n*                                                                     * UAT36060\n*********************************************************************** UAT36070\n         SPACE                                                          UAT36080\nVOL1D    DSECT                                                          UAT36090\nVOL1VOL1 DC    CL4'VOL1'           VOL1 IDENTIFIER                      UAT36100\nVOL1SER  DS    CL6                 VOLUME SERIAL NUMBER                 UAT36110\n         DS    CL1                 RESERVED                             UAT36120\nVOL1VTOC DS    CL10                VTOC POINTER (DIRECT ACCESS ONLY)    UAT36130\n         DS    CL10                RESERVED                             UAT36140\n         DS    CL10                RESERVED                             UAT36150\nVOL1OWNR DS    CL10                OWNER NAME AND ADDRESS CODE          UAT36160\n         DS    CL29                RESERVED                             UAT36170\n         SPACE 3                                                        UAT36180\n*********************************************************************** UAT36190\n*                                                                     * UAT36200\n*     HDR1                 DATA SET LABEL 1                           * UAT36210\n*                                                                     * UAT36220\n*********************************************************************** UAT36230\n         SPACE                                                          UAT36240\nHDR1D    DSECT                                                          UAT36250\nHDR1HDR1 DC    CL4'HDR1'           HDR1 IDENTIFIER                      UAT36260\nHDR1DSN  DS    CL17                DATA SET NAME                        UAT36270\nHDR1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36280\nHDR1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36290\nHDR1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36300\nHDR1GEN  DS    CL4                 GENERATION NUMBER                    UAT36310\nHDR1VER  DS    CL2                 VERSION NUMBER                       UAT36320\nHDR1CRDT DS    CL6                 CREATION DATE                        UAT36330\nHDR1EXDT DS    CL6                 EXPIRATION DATE                      UAT36340\nHDR1SEC  DS    CL1                 SECURITY BYTE                        UAT36350\nHDR1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36360\nHDR1SYS  DS    CL13                SYSTEM CODE                          UAT36370\n         DS    CL7                 RESERVED                             UAT36380\n         SPACE 3                                                        UAT36390\n*********************************************************************** UAT36400\n*                                                                     * UAT36410\n*     EOV1                 END OF VOLUME LABEL 1                      * UAT36420\n*                                                                     * UAT36430\n*********************************************************************** UAT36440\n         SPACE                                                          UAT36450\nEOV1D    DSECT                                                          UAT36460\nEOV1EOV1 DC    CL4'EOV1'           EOV1 IDENTIFIER                      UAT36470\nEOV1DSN  DS    CL17                DATA SET NAME                        UAT36480\nEOV1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36490\nEOV1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36500\nEOV1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36510\nEOV1GEN  DS    CL4                 GENERATION NUMBER                    UAT36520\nEOV1VER  DS    CL2                 VERSION NUMBER                       UAT36530\nEOV1CRDT DS    CL6                 CREATION DATE                        UAT36540\nEOV1EXDT DS    CL6                 EXPIRATION DATE                      UAT36550\nEOV1SEC  DS    CL1                 SECURITY BYTE                        UAT36560\nEOV1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36570\nEOV1SYS  DS    CL13                SYSTEM CODE                          UAT36580\n         DS    CL7                 RESERVED                             UAT36590\n         SPACE 3                                                        UAT36600\n*********************************************************************** UAT36610\n*                                                                     * UAT36620\n*     EOF1                 END OF FILE LABEL 1                        * UAT36630\n*                                                                     * UAT36640\n*********************************************************************** UAT36650\n         SPACE                                                          UAT36660\nEOF1D    DSECT                                                          UAT36670\nEOF1EOF1 DC    CL4'EOF1'           EOF1 IDENTIFIER                      UAT36680\nEOF1DSN  DS    CL17                DATA SET NAME                        UAT36690\nEOF1SER  DS    CL6                 DATA SET SERIAL NUMBER               UAT36700\nEOF1VSEQ DS    CL4                 VOLUME SEQUENCE NUMBER               UAT36710\nEOF1DSEQ DS    CL4                 DATA SET SEQUENCE NUMBER             UAT36720\nEOF1GEN  DS    CL4                 GENERATION NUMBER                    UAT36730\nEOF1VER  DS    CL2                 VERSION NUMBER                       UAT36740\nEOF1CRDT DS    CL6                 CREATION DATE                        UAT36750\nEOF1EXDT DS    CL6                 EXPIRATION DATE                      UAT36760\nEOF1SEC  DS    CL1                 SECURITY BYTE                        UAT36770\nEOF1BLKC DS    CL6                 DATA SET BLOCK COUNT                 UAT36780\nEOF1SYS  DS    CL13                SYSTEM CODE                          UAT36790\n         DS    CL7                 RESERVED                             UAT36800\n         SPACE 3                                                        UAT36810\n*********************************************************************** UAT36820\n*                                                                     * UAT36830\n*      HDR2                DATA SET LABEL 2                           * UAT36840\n*                                                                     * UAT36850\n*********************************************************************** UAT36860\n         SPACE                                                          UAT36870\nHDR2D    DSECT                                                          UAT36880\nHDR2HDR2 DC    CL4'HDR2'           HDR2 IDENTIFIER                      UAT36890\nHDR2RECF DS    CL1                 RECORD FORMAT                        UAT36900\nHDR2BLKL DS    CL5                 BLOCK LENGTH                         UAT36910\nHDR2LREC DS    CL5                 RECORD LENGTH                        UAT36920\nHDR2DEN  DS    CL1                 TAPE DENSITY                         UAT36930\nHDR2DSP  DS    CL1                 DATA SET POSITION                    UAT36940\nHDR2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT36950\nHDR2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT36960\nHDR2CONC DS    CL1                 CONTROL CHARACTERS                   UAT36970\n         DS    CL1                 RESERVED                             UAT36980\nHDR2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT36990\n         DS    CL41                RESERVED                             UAT37000\n         SPACE 3                                                        UAT37010\n*********************************************************************** UAT37020\n*                                                                     * UAT37030\n*      EOV2                END OF VOLUME LABEL 2                      * UAT37040\n*                                                                     * UAT37050\n*********************************************************************** UAT37060\n         SPACE                                                          UAT37070\nEOV2D    DSECT                                                          UAT37080\nEOV2EOV2 DC    CL4'EOV2'           EOV2 IDENTIFIER                      UAT37090\nEOV2RECF DS    CL1                 RECORD FORMAT                        UAT37100\nEOV2BLKL DS    CL5                 BLOCK LENGTH                         UAT37110\nEOV2LREC DS    CL5                 RECORD LENGTH                        UAT37120\nEOV2DEN  DS    CL1                 TAPE DENSITY                         UAT37130\nEOV2DSP  DS    CL1                 DATA SET POSITION                    UAT37140\nEOV2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT37150\nEOV2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT37160\nEOV2CC   DS    CL1                 CONTROL CHARACTERS                   UAT37170\n         DS    CL1                 RESERVED                             UAT37180\nEOV2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT37190\n         DS    CL41                RESERVED                             UAT37200\n         SPACE 3                                                        UAT37210\n*********************************************************************** UAT37220\n*                                                                     * UAT37230\n*      EOF2                END OF FILE LABEL 2                        * UAT37240\n*                                                                     * UAT37250\n*********************************************************************** UAT37260\n         SPACE                                                          UAT37270\nEOF2D    DSECT                                                          UAT37280\nEOF2EOF2 DC    CL4'EOF2'           EOF2 IDENTIFIER                      UAT37290\nEOF2RECF DS    CL1                 RECORD FORMAT                        UAT37300\nEOF2BLKL DS    CL5                 BLOCK LENGTH                         UAT37310\nEOF2LREC DS    CL5                 RECORD LENGTH                        UAT37320\nEOF2DEN  DS    CL1                 TAPE DENSITY                         UAT37330\nEOF2DSP  DS    CL1                 DATA SET POSITION                    UAT37340\nEOF2JOBI DS    CL17                JOB/JOBSTEP IDENTIFICATION           UAT37350\nEOF2TTRC DS    CL2                 TAPE RECORDING TECHNIQUE             UAT37360\nEOF2CC   DS    CL1                 CONTROL CHARACTERS                   UAT37370\n         DS    CL1                 RESERVED                             UAT37380\nEOF2BLKF DS    CL1                 RECORD FORMAT BLOCK ATTRIBUTE        UAT37390\n         DS    CL41                RESERVED                             UAT37400\n         SPACE 3                                                        UAT37410\n*********************************************************************** UAT37420\n*                                                                     * UAT37430\n*       DCB               DATA CONTROL BLOCK DSECT                    * UAT37440\n*                                                                     * UAT37450\n*********************************************************************** UAT37460\n         SPACE                                                          UAT37470\n         PRINT NOGEN                                                    UAT37480\n         DCBD  DEVD=TA,DSORG=PS                                         UAT37490\nLRECL    EQU   DCBLRECL-IHADCB     LOGICAL RECORD LENGTH                UAT37500\nBLKSIZE  EQU   DCBBLKSI-IHADCB     BLOCK SIZE                           UAT37510\nRECFM    EQU   DCBRECFM-IHADCB     RECORD FORMAT                        UAT37520\nDDNAME   EQU   DCBDDNAM-IHADCB     DD NAME                              UAT37530\nOFLGS    EQU   DCBOFLGS-IHADCB     DCB OPEN FLAGS                       UAT37540\n         SPACE 3                                                        UAT37550\n*********************************************************************** UAT37560\n*                                                                     * UAT37570\n*      JFCB                  JOB FILE CONTROL BLOCK DSECT             * UAT37580\n*                                                                     * UAT37590\n*********************************************************************** UAT37600\n         SPACE                                                          UAT37610\nJFCBD    DSECT                                                          UAT37620\nJFCBDSNM DS    CL44                DATA SET NAME                        UAT37630\nJFCBELNM DS    CL8                 ELEMENT NAME OR RELATIVE GENERATION  UAT37640\nJFCBTSDM DS    XL1                 JOB MANAGEMENT/DATA MGT I/F          UAT37650\nJFCBDSCB DS    XL3                 TTR OF FORMAT 1 DSCB                 UAT37660\nJFCFCBID DS    XL4                 FCB IMAGE IDENTIFICATION             UAT37670\n         DS    XL6                 RESERVED                             UAT37680\nJFCBLTYP DS    XL1                 LABEL TYPE                           UAT37690\n*              .1.. ....           AL                                   UAT37700\n*              X... ....           RESERVED BIT                         UAT37710\n*              ...1 ....           BLP                                  UAT37720\n*              .... 1.1.           SUL                                  UAT37730\n*              .1.. 1...           AUL                                  UAT37740\n*              .... .1..           NSL                                  UAT37750\n*              .... ..1.           SL                                   UAT37760\n*              .... ...1           NL                                   UAT37770\n*              ..1. ...1           LTM                                  UAT37780\nJFCBOTTR DS    XL3                 DASD, MOD DATA SET                   UAT37790\n         ORG   JFCBOTTR                                                 UAT37800\nJFCBUFOF DS    XL1                 TAPE DATA SET BUFFER OFFSET          UAT37810\nJFCBFLSQ DS    XL2                 MAGNETIC TAPE, FILE SEQUENCE NO.     UAT37820\n         ORG   JFCBFLSQ                                                 UAT37830\nJFCFUNC  DS    XL1                 FUNC PARAMETER FOR 3505/3525         UAT37840\n         ORG                                                            UAT37850\nJFCBVLSQ DS    XL2                 VOLUME SEQUENCE NUMBER               UAT37860\nJFCBMASK DS    XL8                 DATA MANAGEMENT MASK                 UAT37870\nJFCBCRDT DS    XL3                 CREATION DATE                        UAT37880\nJFCBXPDT DS    XL3                 EXPIRATION DATE                      UAT37890\nJFCBIND1 DS    XL1                 INDICATOR BYTE 1                     UAT37900\n*              11.. ....           RELEASE EXTERNAL STORAGE             UAT37910\n*              ..11 ....           DATA SET HAS BEEN LOCATED            UAT37920\n*              .... 11..           NEW VOLUME ADDED TO DATA SET         UAT37930\n*              .... ..1.           DATA SET IS MEMBER OF GENER. DATA GR UAT37940\n*              .... ...1           DATA SET IS MEMBER OF PDS            UAT37950\nJFCBIND2 DS    XL1                 INDICATOR BYTE 2                     UAT37960\n*              01.. ....           OLD DATA SET                         UAT37970\n*              10.. ....           MOD DATA SET                         UAT37980\n*              11.. ....           NEW DATA SET                         UAT37990\n*              ..XX ....           DATA SET SECURITY                    UAT38000\n*              ..01 ....           PASSWORD IS REQUIRED TO READ/WRITE   UAT38010\n*              ..11 ....           PASSWORD IS REQUIRED TO WRITE        UAT38020\n*              .... 1...           SHARED                               UAT38030\n*              .... .1..           DELETE JFCB BEFORE ALLOC GEN. DATA   UAT38040\n*              .... ..1.           STORAGE VOLUME REQUESTED             UAT38050\n*              .... ...1           TEMPORARY DATA SET                   UAT38060\nJFCBUFNO DS    XL1                 NUMBER OF BUFFERS                    UAT38070\nJFCBFTEK DS    XL1                 BUFFERING TECHNIQUE                  UAT38080\nJFCBHIAR EQU   JFCBFTEK                                                 UAT38090\nJFCBFLAN EQU   JFCBFTEK                                                 UAT38100\nJFCBUFL  DS    XL2                 BUFFER LENGTH                        UAT38110\nJFCEROPT DS    XL1                 ERROR OPTION                         UAT38120\nJFCTRTCH DS    XL1                 TAPE RECORDING TECHNIQUE (7-TRK)     UAT38130\n*              0010 0011           E   EVEN PARITY                      UAT38140\n*              0011 1011           T   EOD/EBCDIC TRANSLATION           UAT38150\n*              0001 0011           C   DATA CONVERSION                  UAT38160\n*              0010 1011           ET  EVEN PARITY AND TRANSLATION      UAT38170\nJFCKENLE EQU   JFCTRTCH            DIRECT ACCESS KEY LENGTH             UAT38180\nJFCMODE  EQU   JFCTRTCH            UNIT RECORD MODE OF OPERATION        UAT38190\nJFCSTACK EQU   JFCMODE             UNIT RECORD STACKER SELECTION        UAT38200\nJFCPRTSP EQU   JFCTRTCH            PRINT SPACING                        UAT38210\nJFCCODE  EQU   JFCTRTCH            PAPER TAPE CONVERSION CODE           UAT38220\nJFCDEN   DS    XL1                 TAPE DENSITY                         UAT38230\n*                                  CODE  7-TRACK 9-TRACK                UAT38240\n*                                  ----  ------- -------                UAT38250\n*              0000 0000           DENSITY OMITTED ON DDCARD            UAT38260\n*              0000 0011             0   200 BPI    -                   UAT38270\n*              0100 0011             1   556 BPI    -                   UAT38280\n*              1000 0011             2   800 BPI  800 BPI               UAT38290\n*              1100 0011             3     -     1600 BPI               UAT38300\n*              1101 0011             4     -     6250 BPI               UAT38310\nJFCDOMIT EQU   B'00000000'                                              UAT38320\nJFCD800  EQU   B'10000011'                                              UAT38330\nJFCD1600 EQU   B'11000011'                                              UAT38340\nJFCD6250 EQU   B'11010011'                                              UAT38350\nJFCLIMCT DS    XL3                 BDAM:  SEARCH LIMIT                  UAT38360\nJFCDSORG DS    XL2                 DATA SET ORGANIZATION                UAT38370\n*        BYTE 1                                                         UAT38380\n*              1... ....           IS   INDEXED SEQUENTIAL              UAT38390\n*              .1.. ....           PS   PHYSICAL SEQUENTIAL             UAT38400\n*              ..1. ....           DA   DIRECT ACCESS                   UAT38410\n*              ...X XX..                RESERVED                        UAT38420\n*              .... ..1.           PO   PARTITIONED                     UAT38430\n*              .... ...1            U   UNMOVABLE                       UAT38440\n*        BYTE 2                                                         UAT38450\n*              1... ....           GS   GRAPHICS                        UAT38460\n*              .XXX XXXX                RESERVED                        UAT38470\nJFCRECFM DS    XL1                 RECORD FORMAT                        UAT38480\n*              10.. ....           F   FIXED                            UAT38490\n*              01.. ....           V   VARIABLE                         UAT38500\n*              11.. ....           U   UNDEFINED                        UAT38510\n*              001. ....           D   VARIABLE (ASCII)                 UAT38520\n*              ..1. ....           T   TRACK OVERFLOW                   UAT38530\n*              ...1 ....           B   BLOCKED                          UAT38540\n*              .... 1...           S   FIXED - STANDARD OR VARIABLE SPA UAT38550\n*              .... .10.           A   ANSI CONTROL CHARACTERS          UAT38560\n*              .... .01.           M   MACHINE CODE CONTROL CHARACTERS  UAT38570\n*              .... .00.               NO CONTROL CHARACTERS            UAT38580\n*              .... ...0               ALWAYS ZERO                      UAT38590\nJFCOPTCD DS    XL1                 OPTION CODES                         UAT38600\nJFCBLKSI DS    XL2                 MAXIMUM BLOCK SIZE                   UAT38610\nJFCLRECL DS    XL2                 LOGICAL RECORD LENGTH                UAT38620\nJFCNCP   DS    XL1                 NUMBER OF CHANNEL PROGRAMS           UAT38630\nJFCNTM   DS    XL1                 NUMBER OF TRACKS MASTER INDEX        UAT38640\nJFCRKP   DS    XL2                 RELATIVE KEY POSITION                UAT38650\nJFCCYLOF DS    XL1                 CYLINDER OVERFLOW TRACKS             UAT38660\nJFCDBUFN DS    XL1                 RESERVED                             UAT38670\nJFCINTVL DS    XL1                 QTAM: INTENTIONAL DELAY              UAT38680\nJFCCPRI  DS    XL1                 QTAM: PRIORITY                       UAT38690\nJFCSOWA  DS    XL2                 QTAM: LENGTH OF USER WORK AREA       UAT38700\n         ORG   JFCCPRI                                                  UAT38710\nJFCOUTLI DS    XL3                 SMF - SYSOUT LIMIT                   UAT38720\n         ORG                                                            UAT38730\n         DS    XL1                 RESERVED                             UAT38740\nJFCBNVOL DS    XL1                 NUMBER OF VOLUME SERIAL NUMBERS      UAT38750\nJFCBVOLS DS    XL30                VOLUME SERIAL NUMBERS                UAT38760\nJFCBEXTL DS    XL1                 RESERVED                             UAT38770\nJFCBEXAD DS    XL3                 TTR OF FIRST JFCB EXTENSION BLK      UAT38780\nJFCBPQTY DS    XL3                 PRIMARY QUANTITY OF DASD REQUIRED    UAT38790\nJFCBCTRI DS    XL1                 SPACE PARAMETERS                     UAT38800\nJFCBSQTY DS    XL3                 SECONDARY QUANTITY OF DASD REQUIRED  UAT38810\nJFCFLGS1 DS    XL1                 FLAG BYTE                            UAT38820\nJFCBDQTY DS    XL3                 QUANTITY OF DASD REQUIRED FOR DIRECT UAT38830\nJFCBSPNM DS    XL3                 ADDR WHERE JFCB CYLINDERS SPLIT      UAT38840\nJFCBABST DS    XL2                 TTR OF 1ST TRK TO BE ALLOCATED       UAT38850\nJFCBSBNM DS    XL3                 ADDR OF JFCB WHERE SPACE ALLOC       UAT38860\nJFCBDRLH DS    XL3                 AVERAGE DATA BLOCK LENGTH            UAT38870\nJFCBVLCT DS    XL1                 VOLUME COUNT                         UAT38880\nJFCBSPTN DS    XL1                 NO. TRKS/CYL SPLIT CYLINDER          UAT38890\n         SPACE 2                                                        UAT38900\n*********************************************************************** UAT38910\n*                                                                     * UAT38920\n*      UCB                   UNIT CONTROL BLOCK                       * UAT38930\n*                                                                     * UAT38940\n*********************************************************************** UAT38950\n         SPACE                                                          UAT38960\nUCB      DSECT                                                          UAT38970\n         IEFUCBOB                                                       UAT38980\n#UCBNAME EQU   UCBNAME-UCB         DEVICE NAME (ADDRESS)                UAT38990\n#UCBTYP  EQU   UCBTYP-UCB          DEVICE TYPE                          UAT39000\n#UCBXTN  EQU   UCBXTNB-UCB         UCB EXTENSION ADDRESS                UAT39010\n#UCBTR   EQU   UCBTR-UCBMT         NUMBER OF TEMP READ ERRORS           UAT39020\n#UCBTW   EQU   UCBTW-UCBMT         NUMBER OF TEMP WRITE ERRORS          UAT39030\n#UCBSIO  EQU   UCBSIO-UCBMT        NUMBER OF SIO OPERATIONS             UAT39040\n#UCBPR   EQU   UCBPR-UCBMT         NUMBER OF PERM READ ERRORS           UAT39050\n#UCBPW   EQU   UCBPW-UCBMT         NUMBER OF PERM WRITE ERRORS          UAT39060\n#UCBNB   EQU   UCBNB-UCBMT         NUMBER OF NOISE BLOCKS               UAT39070\n#UCBERG  EQU   UCBERG-UCBMT        NUMBER OF ERASE GAPS                 UAT39080\n#UCBCLN  EQU   UCBCLN-UCBMT        NUMBER OF CLEANER ACTIONS            UAT39090\n         END                                                            UAT39100\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT692/FILE692.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT692", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}