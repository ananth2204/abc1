//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*                                                                   *
//*********************************************************************
//*                                                                   *
//* WARNING, THIS PROGRAM IS DISTRUBTED FROM WWW.CBTTAPE.ORG.         *
//* THEREFORE, IT IS SHAREWARE, WITH NO FORMAL SUPPORT AND NO         *
//* WARRANTIES.  THE ULUINIT, ULUSCAN, AND ULUDSECT ARE MAINTAINED    *
//* BY MEMBERS OF THE CBTTAPE GROUP.  THESE MACROS ALLOW ACCESS TO    *
//* THE REAL UCB'S, WHICH PARTREL NEEDS.  HOWEVER, IBM DOES NOT       *
//* SUPPORT THESE INTERFACES, AND THESE INTERFACES ARE SUBJECT TO     *
//* CHANGE WITHOUT NOTICE.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!     *
//*                                                                   *
//*********************************************************************
//*                                                                   *
//ASM1    EXEC PGM=ASMA90
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//         DD  DSN=SBGOLOB.CBT499.FILE959,DISP=SHR
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(9,1))
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&TEMP,DISP=(,PASS,DELETE),UNIT=SYSDA,
//             SPACE=(TRK,(15,15),RLSE),LRECL=80,RECFM=FB,
//             BLKSIZE=0
//SYSIN    DD  *
PARTREL  CSECT
PARTREL  AMODE 31
PARTREL  RMODE 24
*********************************************************************
* PROGRAM TO RELEASE EXCESS SPACE FROM PS AND PO DATASETS.          *
* PASS FULLY QUALIFIED DSN OF DATASET TO BE RELEASED IN PARM.       *
* USES PARTREL MACRO. DOESN'T OPEN/CLOSE DATASET, THEREFORE         *
* WON'T MESS UP LAST ACCESSED DATE.                                 *
*********************************************************************
* THIS PROGRAM HAS TO BE LINKEDITED WITH SETCODE AC(1).             *
*********************************************************************
* FIXED TO IGNORE THE RETURN CODE FROM PARTREL, AND SET TO 0.   SBG *
*********************************************************************
*********************************************************************
* THE UCB LOOKUP SUPPORT MACROS ARE ULUINIT, ULUSCAN, AND ULUDSECT  *
* THEY RESIDE IN SYS9.ZOS22.RIMLIB.                                 *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
PROLOG   STM   14,R12,12(R13)
         BALR  R12,0
PSTART   DS    0H
         USING PSTART,R12
         ST    R13,MYSAVE+4       SAVE CALLER'S REGISTER 13
         LA    R2,MYSAVE          GET MY SAVE AREA ADDRESS
         ST    R2,8(R13)          CHAIN SAVE AREA TO CALLER'S
         LR    R13,R2             SET UP TO USE LOCAL SAVE AREA
INITCON  DS    0H
         MVC   SAVERC,=F'0'       INITIALIZE RETURN CODE TO 0
GOFORTH  DS    0H
         OPEN  (INDD,(INPUT),SYSPRINT,(OUTPUT))
         LTR   R15,R15            IF OPEN SUCCESSFUL
         BZ    TITLPRNT           YES, KEEP GOING
         WTO   'OPEN FAILED'      ALERT THAT OPEN FAILED
         B     FIN                TERMINATE
TITLPRNT DS    0H
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1+12(L'TITLE1),TITLE1
         PUT   SYSPRINT,OUTREC1
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1+12(L'TITLED),TITLED
         PUT   SYSPRINT,OUTREC1
PROCESS  DS    0H
         LLGTR R12,R12            SET UP BASE REGISTER FOR 64 BIT
         ULUINIT WRKAREA=WORKU,UREG=R8,EXIT=FIN,WR1=R3,WR2=R4,BREG=R6
         GET   INDD,INREC         GET LIST OF DSN'S TO RELEASE
         MVC   DSN,INDSN          MOVE DATA SET NAME
         MVC   VOLSER,INVOLSER    MOVE DATA SET NAME
         CLI   VOLSER,C' '        IF INPUT VOLSER NOT BLANK
         BNE   NOLOCATE           THEN BYPASS LOCATE
         XR    R15,R15            CLEAR R15                           *
         LOCATE LOCLIST           FIND OUT WHAT VOLUME THE DSN IS ON  *
         LTR   R15,R15            LOCATED SUCCESSFULLY?               *
         BNZ   PROCESS            NO, SO NEXT ONE                     *
         MVC   VOLSER,LOCAREA+6   GET OUR VOLSER                      *
NOLOCATE EQU   *
         MVC   VOL(6),VOLSER      MOVE FOR REPORT
         CLC   VOLSER,LASTVOL     IF SAME VOLSER
         BE    RELESIT            YES, NO NEED TO DO UCB LOOKUP
* ------------------------------------------------------------------- *
* --  INITIALIZE ULUDSECT CONTROL BLOCK                            -- *
* ------------------------------------------------------------------- *
         XR    R15,R15            CLEAR R15
         BAL   R10,UCBSCAN        FIND THE UCB FOR THE VOLUME
         LTR   R15,R15            GOOD SCAN?
         BNZ   PROCESS            NO.
         XR    R15,R15            CLEAR R15
RELESIT  EQU   *
         PARTREL DSN=DSN,MODE=PGM,UCB=(R5),TIOT=ENQ,ERASE=NO,          X
               MF=(E,PRELLST)
         LTR   R15,R15            IF PARTREL OK
         BNZ   RELSENOK           NO, WRITE NOT OK MESSAGE
         MVC   SAVERC,=F'0'       OUR OWN RETURN CODE 0
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1,OUTFIL21   YES, WRITE OK MESSAGE
         PUT   SYSPRINT,OUTREC1   WRITE OUT MESSAGE
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1+4(6),DSNEQU
         MVC   OUTREC1+10(44),DSN ....................
         MVC   OUTREC1+56(6),VOLEQU
         MVC   OUTREC1+62(6),VOL
         PUT   SYSPRINT,OUTREC1   WRITE OUT MESSAGE
         B     NEXTDSN            BRANCH TO GET NEXT RECORD
RELSENOK EQU   *
         MVC   SAVERC,=F'4'       OUR OWN RETURN CODE 4
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1,OUTFIL31   WRITE NOT OK MESSAGE
         PUT   SYSPRINT,OUTREC1   WRITE OUT MESSAGE
         MVI   OUTREC1-1,X'40'    CLEAR OUTPUT AREA
         MVC   OUTREC1,OUTREC1-1
         MVC   OUTREC1+4(6),DSNEQU
         MVC   OUTREC1+10(44),DSN
         MVC   OUTREC1+56(6),VOLEQU
         MVC   OUTREC1+62(6),VOL
         PUT   SYSPRINT,OUTREC1   WRITE OUT MESSAGE
NEXTDSN  EQU   *
         MVC   LASTVOL,VOLSER     KEEP LAST VOLSER USED FOR COMPARE
*        PUT   SYSPRINT,OUTREC1   WRITE OUT MESSAGE
         B     PROCESS            GET ANOTHER RECORD
FIN      EQU   *
         CLOSE INDD               CLOSE INDD
         CLOSE SYSPRINT           CLOSE SYSPRINT
         L     R13,MYSAVE+4       RESTORE CALLER'S REGISTER 13
         L     R15,SAVERC         LOAD RETURN CODE WE MADE        SBG
         ST    R15,16(,R13)       SHOVE IT INTO CORRECT SLOT      SBG
         LM    R14,R12,12(R13)    RESTORE CALLER'S REGISTERS
         BR    R14                RETURN TO CALLER
         SPACE 5
UCBSCAN  DS    0H
* ------------------------------------------------------------------- *
* --  SCAN EACH UCB, REPRESENTED BY A ULUDSECT CONTROL BLOCK       -- *
* ------------------------------------------------------------------- *
         ULUSCAN WR1=R3,UCBR=R5,BREG=R6
         USING UCBOB,R5           ADDRESSABILITY TO UCB.
         MVC   ULUDCURR,ULUDNEXT  MAKE NEXT ENTRY CURRENT
         TM    UCBTBYT3,UCB3DACC  IS THIS UCB FOR DASD?
         BNO   UCBSCAN            NO. LOOK FOR THE NEXT ONE.
         TM    UCBSTAT,UCBONLI    IS THIS UCB ONLINE?
         BNO   UCBSCAN            NO. LOOK FOR THE NEXT ONE.
         CLC   UCBVOLI,VOLSER     IS THIS OUR VOLUME'S UCB?
         BNE   UCBSCAN            NO. LOOK FOR THE NEXT ONE.
FOUNDIT  DS    0H
         XR    R15,R15            CLEAR R15, WE FOUND UCB
         BR    R10                RETURN TO CALLER
         EJECT
MYSAVE   DS  18F
WORKU    DS  CL88
         DC  C'#############'
INREC    DS  0CL80
INDSN    DS  CL44
INVOLSER DS  CL6
INFIL1   DS  CL30
TITLE1   DC  C' PARTIAL SPACE RELEASE PROGRAM - VERSION 1.2 '
TITLED   DC  C' ------- ----- ------- -------   ------- --- '
DSNEQU   DC  C'DSN = '
VOLEQU   DC  C'VOL = '
         DS  C' '
OUTREC1  DS  CL133
OUTREC2  DS  0CL133
OUTFIL21 DC  C' FREE SPACE RELEASED FOR DATA SET '
OUTFIL2L EQU *-OUTFIL21
OUTDSN2  DS  CL44
OUTFIL22 DS  CL55
OUTREC3  DS  0CL133
OUTFIL31 DC  C' FREE SPACE RELEASE FAILED FOR DATA SET '
OUTFIL3L EQU *-OUTFIL31+1
OUTDSN3  DS  CL44
OUTFIL32 DS  CL48
         DC  C'%%%%%%%%%%%%%'
LASTVOL  DC  CL6' '
VOLSER   DC  CL6' '
LOCLIST  CAMLST NAME,DSN,,LOCAREA  LOCATE
DSN      DC  CL44' '
VOL      DC  CL6' '
SAVERC   DS  F
LOCAREA  DS  0D
         DS  265C
INDD     DCB DDNAME=INDD,MACRF=GM,DSORG=PS,EODAD=FIN
SYSPRINT DCB DDNAME=SYSPRINT,MACRF=PM,LRECL=133,DSORG=PS
PRELLST  PARTREL DSN=DSN,MODE=PGM,MF=L
PRELPL   PARTREL MF=D
         IEFUCBOB LIST=YES
         END
//*
//LKED1   EXEC PGM=IEWL,
//  PARM='LIST,XREF,AMODE=31,RMODE=24,AC(1)'
//SYSLIN   DD DSN=&&TEMP,DISP=(OLD,DELETE)
//         DD *
 SETSSI CB499959
 NAME PARTREL(R)
//SYSLMOD  DD DSN=SYS1.W$$.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=*
