{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013500000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE930.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE930.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x07'", "DS1TRBAL": "b'\\xbb\"'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\tZ\\x00\\x0e\\t[\\x00\\x06\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00W\\x01\\x15\\x18\\x7f\\x01\\x15\\x18\\x7f \\x13\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-07-06T00:00:00", "modifydate": "2015-07-06T20:13:57", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-490"}, "text": "REGULAR CBT TAPE - VERSION 490    FILE:  930\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT490.FILE930\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 19 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,930 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/06/15    20:13:57    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x15\\x11\\x1f\\x01\\x15\\x11\\x1f!3\\x00q\\x00q\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-21T00:00:00", "modifydate": "2015-04-21T21:33:00", "lines": 113, "newlines": 113, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  RE: CALFILE Question\nFrom:     Philip Polchinski <philmpolchinski@hotmail.com>\nDate:     4/20/2015 11:08 PM\nTo:       Sam Golob <sbgolob@cbttape.org>\n\nSam,\n\nNow, for the detailed explanations, you can use any (or all) of\nthe following:\n\n\nCALFILE IS A DIGITAL CALENDAR IN A FILE FORMAT With unique\nfeatures not available elsewhere.  It provides easier solutions\nfor date-interval issues with its continuous stream of individual\ndate records.  For the first time, every date is identified by\nits correct weekday name.  Each date is also identified by the\nexact occurrence of when that date falls within that month, i.e.,\nthe First Monday, the Last Friday, etc.  And all date conversions\nbetween Gregorian and Julian are a snap regardless of whether a\nleap year is involved or not.\n\n    A dependable, accurate calendar that requires no maintenance\n    Each Date is identified by its correct weekday name\n    The exact interval between any 2 dates is easily determined?\n    There are no issues with overlapping Months and/or Leap Years\n    Can be used on a DB2 table or on any other platform\n\n\nRECORD DESCRIPTION\n\nEach Record Contains A Unique Date Where All Remaining Data\nFields Relate to this Date\n\nCol 1-8:    A Unique Date appearing in a Gregorian Date Format  -\n            CCYYMMDD\n\nCol 9-10:   The number of days remaining in the month when this\n            date occurs\n\nCol 11-12:  The total number of days in the month when this date\n            occurs\n\nCol 13:     The 1st to 5th occurrence of this weekday name when this\n            date occurs\n\nCol 14:     The number of remaining occurrences of this weekday\n            name when this date occurs\n\nCol 15:     The total number of occurrences of this weekday name\n            when this date occurs\n\nCol 16-18:  The correct weekday name for this date  -\n            This is a FIRST !!!\n\nCol 19-21:  This Unique Date appearing in a Julian Date Format\n\nCol 22-24:  The number of days remaining in the year when this\n            date occurs\n\nCol 25:     An \"L\" or \"C\" to denote that this date occurs during\n            a Leap or non-Leap Year\n\nCol 26-27:  The weekday name of the first day of the month when\n            this date occurs\n\nCol 28-29:  The weekday name of the last day of the month when\n            this date occurs\n\nCol 30-35:  A specific 6-digit sequence number is assigned to\n            each unique date\n\nFaster Solutions for Date-Related Problems\n\nCALFILE is a data file containing a continuous series of\nsequential date records. Each record contains a unique date and\nsequential counter. Finally, all application programmers can\nobtain the precise interval between any 2 dates.  CALFILE\nproduces a reference file that provides new and unique solutions\nfor the following date-related problems:\n\nCreate a list of dates containing all third Mondays that will\n     occur during a 100 year period?\nDetermine the number of Tuesdays that will occur during the month\n     of January 2012?\nDetermine the calendar date for the last Tuesday during the month\n     of January 2012?\nDetermine the exact interval between February 15 and May 15, 2011\nDetermine the exact interval between February 15 and May 15, 2012\nDetermine the new calendar date when adding 180 days to\n     November 20, 2010\nDetermine the new calendar date when adding 180 days to\n     November 20, 2011?\nDetermine the calendar date and day of the week for Julian Date\n      058\" in the year 2012\nDetermine the Day of the Week for July 4, 2014\nDetermine the calendar date for Thanksgiving Day, 2014\nDetermine the calendar date for the Monday before\nThanksgiving Day, 2014\nDetermine the number of days remaining in the month, when it is\nFebruary 19, 201?1\nDetermine the number of days remaining in the month, when it\nis February 19, 2012\nDetermine the number of days remaining in the year, when it is\nFebruary 19, 2011?\nDetermine the number of days remaining in the year, when it is\n     February 19, 2012\n\nI hope the above information will help you.\n\nTake care,\n\nPhil\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE02": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00)\\x01\\x15\\x18\\x7f\\x01\\x15\\x18\\x7f\\x05W\\x00\\x1b\\x00#\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2015-07-06T00:00:00", "modifydate": "2015-07-06T05:57:29", "lines": 27, "newlines": 35, "modlines": 0, "user": "SBGOLOB"}, "text": "      Notes on Installation of the CALFILE and CALPRINT Programs\n      ----- -- ------------ -- --- ------- --- -------- --------\n\n1.  Create the load library containing the programs.\n\n    Execute the $RECEIVE job in this pds, after changing the\n    appropriate dataset names and output volume name to conform\n    to your installation standards.\n\n2.  Download the documentation member CALREF in BINARY to a PC.\n    This is the reference manual in PDF format, which tells you\n    how to use the CALFILE and CALPRINT programs.\n\n3.  I have attempted to create a few sample jobs, called\n    $CALFILx and $CALPRTx.  These are just a very few examples\n    of what these programs can do.  See the reference manual\n    for many more possibilites on how to set things up and\n    print different kinds of calendars.\n\n4.  Most of the message datasets used by the CALPRINT program have\n    LRECL=125.  See member $CALPRT2 for a bit of guidance.  Actually\n    the reference manual is the definitive place to go for help.\n\n      email:  philmpolchinski@hotmail.com\n\n      email:  sbgolob@cbttape.org\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CALFIL0": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x15\\x18o\\x01\\x15\\x18o\\x14I\\x00\\t\\x00\\t\\x00\\x00\\xd4\\xd6\\xc4\\xd3\\xd1\\xc3\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:49:04", "lines": 9, "newlines": 9, "modlines": 0, "user": "MODLJCL"}, "text": "//JOBCARD INFORMATION\n//STEPNAME EXEC PGM=CALFILE\n//STEPLIB DD DSN=NAME.OF.LOADLIB\n//        DD DSN=*.*.SCEERUN\n//LICENSE DD DSN=FILE.CONTAINING.LICENSE.RECORD\n//CALINP  DD DSN=FILE.CONTAINING.START.AND.END.YEARS\n//CALOUT  DD DSN=OUTPUT.FILE.CONTAINING.CALENDAR.DATE.RECORDS,\n//           DCB=(RECFM=FB,LRECL=35,BLKSIZE=0)\n//SYSOUT  DD * (JOBSTEP MESSAGES)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CALFIL1": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00#\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x06\\x18\\x00\\x13\\x00\\t\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T06:18:23", "lines": 19, "newlines": 9, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*-----------------------------------------------------------------*//\n//*  JCL TO USE THE CALFILE PROGRAM FROM PHIL POLCHINSKI TO CREATE  *//\n//*  A MAXIMUM-SIZED CALENDAR FILE.  THIS JCL CAN BE MODIFIED TO    *//\n//*  PRODUCE A SMALLER CALENDAR FILE, COVERING FEWER YEARS, WHICH   *//\n//*  WOULD BE MORE PRACTICAL IF YOU WANT TO SAVE SPACE.             *//\n//*             (SEE MEMBER $CALFIL2 FOR AN EXAMPLE.)               *//\n//*-----------------------------------------------------------------*//\n//CREATE  EXEC PGM=CALFILE\n//STEPLIB DD DISP=SHR,DSN=SBGOLOB.CALFILE.LOAD\n//        DD DISP=SHR,DSN=CEE.SCEERUN\n//LICENSE DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(KEYEBCDC)\n//CALINP  DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(CALINP)\n//CALOUT  DD DSN=SBGOLOB.CALFILE.BIGGEST,DISP=(NEW,CATLG,DELETE),\n//           DCB=(RECFM=FB,LRECL=35,BLKSIZE=27965),\n//           VOL=SER=WORKE3,SPACE=(CYL,(13,2),RLSE),UNIT=SYSALLDA\n//SYSOUT  DD DISP=SHR,DSN=SBGOLOB.CALFILE.MSGS           (LRECL=125)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CALFIL2": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00S\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x06\\x17\\x00\\x11\\x00\\t\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T06:17:53", "lines": 17, "newlines": 9, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*-----------------------------------------------------------------*//\n//*  JCL TO USE THE CALFILE PROGRAM FROM PHIL POLCHINSKI TO CREATE  *//\n//*  A SMALLER-SIZED CALENDAR FILE.  THE FILE PRODUCED BY THIS JOB  *//\n//*  WILL COVER YEARS 1900 THRU 2200.                               *//\n//*-----------------------------------------------------------------*//\n//CREATE  EXEC PGM=CALFILE\n//STEPLIB DD DISP=SHR,DSN=SBGOLOB.CALFILE.LOAD\n//        DD DISP=SHR,DSN=CEE.SCEERUN\n//LICENSE DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(KEYEBCDC)\n//CALINP  DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(CALSMALL)\n//CALOUT  DD DSN=SBGOLOB.CALFILE.SMALLER,DISP=(NEW,CATLG,DELETE),\n//           DCB=(RECFM=FB,LRECL=35,BLKSIZE=27965),\n//           VOL=SER=WORKE3,SPACE=(CYL,(13,2),RLSE),UNIT=SYSALLDA\n//SYSOUT  DD DISP=SHR,DSN=SBGOLOB.CALFILE.MSGS           (LRECL=125)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CALFIL3": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00)\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x057\\x00\\x0f\\x00\\t\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T05:37:29", "lines": 15, "newlines": 9, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*-----------------------------------------------------------------*//\n//*  JCL TO USE THE CALFILE PROGRAM FROM PHIL POLCHINSKI TO CREATE  *//\n//*  A SMALLER-SIZED CALENDAR FILE.  THE FILE PRODUCED BY THIS JOB  *//\n//*  WILL COVER YEARS 1900 THRU 2200.                               *//\n//*-----------------------------------------------------------------*//\n//CREATE  EXEC PGM=CALFILE\n//STEPLIB DD DISP=SHR,DSN=SBGOLOB.CALFILE.LOAD\n//        DD DISP=SHR,DSN=CEE.SCEERUN\n//LICENSE DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(KEYEBCDC) (LRECL=80)\n//CALINP  DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(CALSMALL) (LRECL=80)\n//CALOUT  DD DSN=SBGOLOB.CALFILE.SMALLER,DISP=SHR          (LRECL=35)\n//SYSOUT  DD DISP=SHR,DSN=SBGOLOB.CALFILE.MSGS             (LRECL=125)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CALPRT0": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x15\\x18o\\x01\\x15\\x18o\\x14S\\x00\\x0b\\x00\\x0b\\x00\\x00\\xd4\\xd6\\xc4\\xd3\\xd1\\xc3\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:53:52", "lines": 11, "newlines": 11, "modlines": 0, "user": "MODLJCL"}, "text": "//JOBCARD INFORMATION\n//STEPNAME EXEC PGM=CALPRINT\n//STEPLIB  DD DSN=NAME.OF.LOADLIB\n//         DD DSN=*.*.SCEERUN\n//LICENSE  DD DSN=FILE.CONTAINING.LICENSE.RECORD\n//CALINP   DD DSN=FILE.CONTAINING.REQUEST.RECORDS\n//CALOUT   DD SYSOUT=A (CALENDARS DIRECTED TO PRINT QUEUE)\n//VALID    DD DSN=OUTPUT.FILE.CONTAINING.VALID.REQUESTS\n//REJECTS  DD DSN=OUTPUT.FILE.CONTAINING.INVALID.REQUESTS\n//SYSOUT DD * (JOBSTEP MESSAGES)\n//* SCEERUN Libraries should be included in the STEPLIB concatenation.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CALPRT1": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x15\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x06\\x16\\x00\\x0e\\x00\\x0b\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T06:16:15", "lines": 14, "newlines": 11, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBC JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//PRINTCAL EXEC PGM=CALPRINT\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.CALFILE.LOAD\n//         DD DISP=SHR,DSN=CEE.SCEERUN\n//LICENSE  DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(KEYEBCDC)\n//CALINP   DD DISP=SHR,DSN=SBGOLOB.CALPRINT.INPUT      (LRECL=125)\n//CALOUT   DD SYSOUT=*\n//VALID    DD DSN=SBGOLOB.CAL.VALID,DISP=(NEW,CATLG,DELETE),\n//            VOL=SER=WORKE3,SPACE=(TRK,(15,15),RLSE),UNIT=SYSALLDA\n//REJECTS  DD DSN=SBGOLOB.CAL.INVALID,DISP=(NEW,CATLG,DELETE),\n//            VOL=SER=WORKE3,SPACE=(TRK,(15,15),RLSE),UNIT=SYSALLDA\n//SYSOUT   DD DISP=SHR,DSN=SBGOLOB.CALPRINT.MSGS       (LRECL=125)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CALPRT2": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x005\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x051\\x00\\x0c\\x00\\x0b\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T05:31:35", "lines": 12, "newlines": 11, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBC JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//PRINTCAL EXEC PGM=CALPRINT\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.CALFILE.LOAD\n//         DD DISP=SHR,DSN=CEE.SCEERUN\n//LICENSE  DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE930(KEYEBCDC)\n//CALINP   DD DISP=SHR,DSN=SBGOLOB.CALPRINT.INPUT      (LRECL=125)\n//CALOUT   DD SYSOUT=*                                 (LRECL=132)\n//VALID    DD DSN=SBGOLOB.CAL.VALID,DISP=SHR           (LRECL=125)\n//REJECTS  DD DSN=SBGOLOB.CAL.INVALID,DISP=SHR         (LRECL=125)\n//SYSOUT   DD DISP=SHR,DSN=SBGOLOB.CALPRINT.MSGS       (LRECL=125)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$RECEIVE": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00V\\x01\\x15\\x18\\x7f\\x01\\x15\\x18\\x7f\\x05C\\x00\\x0e\\x00\\x08\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-07-06T00:00:00", "modifydate": "2015-07-06T05:43:56", "lines": 14, "newlines": 8, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------------------- *//\n//*   TSO RECEIVE JOB WHICH CREATES THE LOAD LIBRARY CONTAINING     *//\n//*             THE CALFILE AND CALPRINT PROGRAMS.                  *//\n//* --------------------------------------------------------------- *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  RECEIVE INDS('SBGOLOB.CBT490.FILE930(CALPROGS)')\n  DSN('SBGOLOB.CALFILE.LOAD') VOL(WORKE3)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE930": {"ttr": 539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00P\\x01\\x15\\x18\\x7f\\x01\\x15\\x18\\x7f \\x13\\x00\\x8a\\x00\\x8a\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-07-06T00:00:00", "modifydate": "2015-07-06T20:13:50", "lines": 138, "newlines": 138, "modlines": 0, "user": "CBT-490"}, "text": "//***FILE 930 is from Phil Polchinski and contains supporting JCL   *   FILE 930\n//*           and other materials to use his CALENDAR FILE, which   *   FILE 930\n//*           is found in EBCDIC format on File 932, and in zipped  *   FILE 930\n//*           ASCII format on File 933.                             *   FILE 930\n//*                                                                 *   FILE 930\n//*           The calendar file presented here, can be generated    *   FILE 930\n//*           in many date ranges, by Phil's program called         *   FILE 930\n//*           CALFILE, but all that is really needed by anyone,     *   FILE 930\n//*           is his \"maximum size file\" which contains all dates   *   FILE 930\n//*           from the years 1753 thru 2600.                        *   FILE 930\n//*                                                                 *   FILE 930\n//*           The CALENDAR FILE has record length 35, and can be    *   FILE 930\n//*           blocked.  Its size depends on the year ranges used    *   FILE 930\n//*           when the CALFILE program is executed.                 *   FILE 930\n//*                                                                 *   FILE 930\n//*           In Files 932 and 933, we distribute a large-range     *   FILE 930\n//*           calendar file, which ranges from years 1753 to 2600.  *   FILE 930\n//*                                                                 *   FILE 930\n//*           The format of this calendar file allows for           *   FILE 930\n//*           sure-fire calculations (which are accurate) for       *   FILE 930\n//*           complicated date-difference questions, and for all    *   FILE 930\n//*           kinds of other purposes, all having to do with        *   FILE 930\n//*           dates.                                                *   FILE 930\n//*                                                                 *   FILE 930\n//*           email:  philmpolchinski@hotmail.com                   *   FILE 930\n//*                                                                 *   FILE 930\n//*     Phil has now released load modules for his two programs:    *   FILE 930\n//*                                                                 *   FILE 930\n//*           CALFILE  -  program to produce the calendar file      *   FILE 930\n//*                                                                 *   FILE 930\n//*           CALPRINT -  program to print calendars from the       *   FILE 930\n//*                       calendar file                             *   FILE 930\n//*                                                                 *   FILE 930\n//*        These two programs require a license key (supplied).     *   FILE 930\n//*        See the note just below, as to why.                      *   FILE 930\n//*                                                                 *   FILE 930\n//*     Member CALREF is documentation in PDF format, which shows   *   FILE 930\n//*     how to use CALFILE and CALPRINT.  See note just below.      *   FILE 930\n//*                                                                 *   FILE 930\n//*     ----------------------------------------------------------  *   FILE 930\n//*                                                                 *   FILE 930\n//*              * * * * * *  N O T E  * * * * * *                  *   FILE 930\n//*                                                                 *   FILE 930\n//*     Phil is retaining ownership of these two programs (but      *   FILE 930\n//*     not ownership of the file format), and for this reason,     *   FILE 930\n//*     I am making an exception to my rule of not allowing         *   FILE 930\n//*     timeouts on any submissions to the CBT Tape.  In Phil's     *   FILE 930\n//*     case, he is including a 75-YEAR LICENSE KEY for anybody     *   FILE 930\n//*     to use his programs, included here as member KEYEBCDC.      *   FILE 930\n//*     Since the key is for 75 years, which is a long time,        *   FILE 930\n//*     I am making this exception.                                 *   FILE 930\n//*                                                                 *   FILE 930\n//*     Another reason why I am making an exception:                *   FILE 930\n//*                                                                 *   FILE 930\n//*     File 934 will contain a DFSORT job to produce the           *   FILE 930\n//*     maximum-size file, which is not dependent on the CALFILE    *   FILE 930\n//*     program and is therefore not dependent on a timeout.        *   FILE 930\n//*     So the file is still reconstructible without a timeout      *   FILE 930\n//*     and the system will not break.                              *   FILE 930\n//*                                                                 *   FILE 930\n//*     Of course the CALFILE program is more flexible to set up    *   FILE 930\n//*     than the DFSORT job, and the CALFILE approach is much       *   FILE 930\n//*     easier to use, and it is preferred.                         *   FILE 930\n//*                                                                 *   FILE 930\n//*              * * * * * *  N O T E  * * * * * *                  *   FILE 930\n//*                                                                 *   FILE 930\n//*     ----------------------------------------------------------  *   FILE 930\n//*                                                                 *   FILE 930\n//*     A reference manual to use this file and software, is        *   FILE 930\n//*     found in member CALREF, which is a PDF format file.         *   FILE 930\n//*                                                                 *   FILE 930\n//*     The Calendar File itself can be found in Files 932 (EBCDIC) *   FILE 930\n//*     and 933 (ASCII), and therefore it is not included here.     *   FILE 930\n//*                                                                 *   FILE 930\n//*     To obtain the calendar file more easily, File 932 contains  *   FILE 930\n//*     an EBCDIC version of the calendar file (LRECL=35), and      *   FILE 930\n//*     File 933 contains a zipped ASCII text version of the        *   FILE 930\n//*     calendar file.  So you don't need the CALFILE program       *   FILE 930\n//*     at all, unless space considerations dictate, in your        *   FILE 930\n//*     case, that you have to generate the calendar file for       *   FILE 930\n//*     a smaller date range, which would take up less space.       *   FILE 930\n//*                                                                 *   FILE 930\n//*     Sample problems which can be solved using this file:        *   FILE 930\n//*     ------ --------                                             *   FILE 930\n//*                                                                 *   FILE 930\n//*     Create a list of dates containing all third Mondays         *   FILE 930\n//*          that will occur during a 100 year period?              *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the number of Tuesdays that will occur during     *   FILE 930\n//*          the month of January 2012?                             *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the calendar date for the last Tuesday during     *   FILE 930\n//*          the month of January 2012?                             *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the exact interval between February 15 and        *   FILE 930\n//*          May 15, 2011                                           *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the exact interval between February 15 and        *   FILE 930\n//*          May 15, 2012                                           *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the new calendar date when adding 180 days to     *   FILE 930\n//*          November 20, 2010                                      *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the new calendar date when adding 180 days to     *   FILE 930\n//*          November 20, 2011?                                     *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the calendar date and day of the week for         *   FILE 930\n//*           Julian Date 058\" in the year 2012                     *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the Day of the Week for July 4, 2014              *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the calendar date for Thanksgiving Day, 2014      *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the calendar date for the Monday before           *   FILE 930\n//*     Thanksgiving Day, 2014                                      *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the number of days remaining in the month,        *   FILE 930\n//*          when it is February 19, 2011?                          *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the number of days remaining in the month,        *   FILE 930\n//*          when it is February 19, 2012                           *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the number of days remaining in the               *   FILE 930\n//*          year, when it is February 19, 2011?                    *   FILE 930\n//*                                                                 *   FILE 930\n//*     Determine the number of days remaining in the year,         *   FILE 930\n//*          when it is February 19, 2012                           *   FILE 930\n//*                                                                 *   FILE 930\n//*     ------------------------------------------------------      *   FILE 930\n//*                                                                 *   FILE 930\n//*     Files 932 and 933 contain the maximum-size file which can   *   FILE 930\n//*     be created with Phil Polchinski's program, so therefore     *   FILE 930\n//*     you can program solutions to solve all the date problems    *   FILE 930\n//*     which you want to solve (hopefully) between the years of    *   FILE 930\n//*     1753 thru 2600.                                             *   FILE 930\n//*                                                                 *   FILE 930\n//*     Best of everything..........                                *   FILE 930\n//*                                                                 *   FILE 930\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALINP": {"ttr": 542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x15\\x18o\\x01\\x15\\x18o\\x14X\\x00\\x01\\x00\\x01\\x00\\x00\\xe8\\xc5\\xc1\\xd9\\xe2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:58:48", "lines": 1, "newlines": 1, "modlines": 0, "user": "YEARS"}, "text": "17532600\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALPROGS": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x15\\x18o\\x01\\x15\\x18o\\x147\\x05K\\x02v\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:37:59", "lines": 1355, "newlines": 630, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CALREF": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x15\\x18o\\x01\\x15\\x18o\\x14\"\\x04I\\x00Z\\x00\\x00\\xd7\\xc4\\xc6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:22:12", "lines": 1097, "newlines": 90, "modlines": 0, "user": "PDF"}, "mimetype": "application/pdf", "datatype": "binary", "extension": ".pdf"}, "CALSMALL": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00D\\x01\\x15\\x18o\\x01\\x15\\x18o\\x15 \\x00\\x01\\x00\\x01\\x00\\x00\\xe8\\xc5\\xc1\\xd9\\xe2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T15:20:44", "lines": 1, "newlines": 1, "modlines": 0, "user": "YEARS"}, "text": "19002200\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FILEDESC": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x18\\x12\\x00I\\x00I\\x00\\x00\\xd7\\xd6\\xd3\\xc3\\xc8\\xc9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T18:12:00", "lines": 73, "newlines": 73, "modlines": 0, "user": "POLCHIN"}, "text": "\n              CALFILE - The Interval Calendar File\n\nThe Interval Calendar File is an actual calendar in a file format\ncontaining a continuous flow of individual date records.  This file\ncan be easily moved and used on other platforms.\n\nThe file contains individual date records in accurate and\nsequential order where:\n\no 366 sequential Date Records exist for each Leap Year\no 365 sequential Date Records exist for each Non-Leap Year\n\nAll dates are identified by their correct weekday name and as the\nfirst, second, third, fourth, fifth, or last time when it occurs\nin a month.  This makes it easy to identify the last Friday or\nthe second Wednesday, etc.\n\nEvery record contains a sequential counter which then provides\nquick answers for date interval questions.  The exact interval\nbetween any 2 dates can be easily calculated.  It is also just as\neasy to find another date simply by adding or subtracting a\nnumber of days to the counter in the first date record.\n\nThe first record in the file is January 1st and has a value of\n\"000001\" whereas the last record is December 31st of the final\nyear.\n\nThe file contains fixed-length 35-byte records.  The sample below\nhas a \"starting year\" of 2011 and has been intentionally spaced\nfor easier viewing.\n\n2012-0223 06 29 4 0 4 THU 054 312 L WE WE 000419\n2012-0224 05 29 4 0 4 FRI 055 311 L WE WE 000420\n2012-0225 04 29 4 0 4 SAT 056 310 L WE WE 000421\n2012-0226 03 29 4 0 4 SUN 057 309 L WE WE 000422\n2012-0227 02 29 4 0 4 MON 058 308 L WE WE 000423\n2012-0228 01 29 4 0 4 TUE 059 307 L WE WE 000424\n2012-0229 00 29 5 0 5 WED 060 306 L WE WE 000425\n2012-0301 30 31 1 4 5 THU 061 305 L TH SA 000426\n2012-0302 29 31 1 4 5 FRI 062 304 L TH SA 000427\n2012-0303 28 31 1 4 5 SAT 063 303 L TH SA 000428\n2012-0304 27 31 1 3 4 SUN 064 302 L TH SA 000429\n2012-0305 26 31 1 3 4 MON 065 301 L TH SA 000430\n2012-0306 25 31 1 3 4 TUE 066 300 L TH SA 000431\n2012-0307 24 31 1 3 4 WED 067 299 L TH SA 000432\n2012-0308 23 31 2 3 5 THU 068 298 L TH SA 000433\n\nCol 1-8:        A Unique Date appearing in a Gregorian Date\n                Format \u00dd CCYYMMDD \u00a8\nCol 9-10:       The number of days remaining in the month when\n                this date occurs\nCol 11-12:      The total number of days in the month when this\n                date occurs\nCol 13:         The 1st through 5th occurrence of this weekday\n                name when this date occurs\nCol 14:         The number of remaining occurrences  in the month\n                of this weekday name\nCol 15:         The total number of occurrences of this weekday\n                name when this date occurs\nCol 16-18:      The correct weekday name for this date\nCol 19-21:      This Unique Date appearing in a Julian Date Format\nCol 22-24:      The number of days remaining in the year when\n                this date occurs\nCol 25:         An \"L\" or \"C\" to denote that this date occurs\n                during a Leap or non-Leap Year\nCol 26-27:      The weekday name of the first day of the month\n                when this date occurs\nCol 28-29:      The weekday name of the last day of the month\n                when this date occurs\nCol 30-35:      A specific 6-digit sequence number that is\n                uniquely assigned to this date\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KEYASCII": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00V\\x01\\x15\\x18o\\x01\\x15\\x18\\x7f\\x14\\x01\\x00\\x01\\x00\\x01\\x00\\x00\\xc1\\xe2\\xc3\\xc9\\xd3\\xc9\\xc3@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-06T14:01:56", "lines": 1, "newlines": 1, "modlines": 0, "user": "ASCILIC"}, "text": "&\u00a2.\u00ea\u00ee\u00e5\u00ef\u00e9!\u00e0\u0080\u0091\u0016\u0005\u0016\u0090\u0099\u0090\u0080(\u00a0\u00ec\u0005\u0016\u0096\u0090\u0090\u0080\u0016\u0090\u0091\u0095\u0091\u0096\u0099\u0004\u0094\u00e4\u00e2\u0094\u0096\u0080\u00e4\u00e2\u00e8\u00e8\u00a0&\u00e1\u0006|\u00ea\u00e5\u0080\u00e1\u00ec&\u009a\u0080\u00e0\u00e1\u00e4\u0080\u0016\u0090\u0099\u0090\r\u008e\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\n", "mimetype": "text/plain", "datatype": "us-ascii", "extension": ".txt"}, "KEYEBCDC": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x15\\x18o\\x01\\x15\\x18o\\x14(\\x00\\x01\\x00\\x01\\x00\\x00\\xd3\\xc9\\xc3\\xd2\\xc5\\xe8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-07-05T00:00:00", "modifydate": "2015-07-05T14:28:30", "lines": 1, "newlines": 1, "modlines": 0, "user": "LICKEY"}, "text": "PJKRVGWQZD 12-2090 MAX-2600 201516974CB46 CBTTAPE.ORG EXP: DEC 2090\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT930/FILE930.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT930", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}