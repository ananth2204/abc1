{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20090318212324000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6400, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "RLRICE.OS.MACLIB.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.OS.MACLIB.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6400, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xa0\\x00\\x04\\x8a0P'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xa0\\x00\\x04\\x8a0P'", "b'X\\xf2U\\x80\\x00\\x00\\x002\\x00\\x04\\x003\\x00\\x03\\x00\\x0f'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"APPNDREQ": {"ttr": 12, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        APPEND   parameters                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         APPNDREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nAPPNDREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nAPPNDREQ        DSECT\n.LBL0020 ANOP\nAPPNDREQ_FUNC   DS     X           FUNCTION\n$APPNDREQ_OPEN  EQU    X'01'       .. OPEN OUTPUT\n$APPNDREQ_WRITE EQU    X'02'       .. WRITE GIVEN DATA SET/MEMBER\n$APPNDREQ_CLOSE EQU    X'03'       .. CLOSE OUTPUT\nAPPNDREQ_MEMBER DS     CL8         MEMBER NAME\nAPPNDREQ_DCB    DS     A           DCB ADDRESS\nAPPNDREQ_IO     DS     A           I/O AREA\nAPPNDREQ_COUNT  DS     F           NUMBER OF MEMBERS APPENDED\nAPPNDREQ_BYTES  DS     F           BYTES APPENDED\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ATTRS": {"ttr": 14, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Attributes used for ISPF panels                                 *\n*                                                                     *\n*                                                                     *\n*     These need to agree with the definition on the panels           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$SCREEN_ATTR_NORMAL         EQU   X'01'\n$SCREEN_ATTR_INPUT          EQU   X'02'\n$SCREEN_ATTR_HIGH           EQU   X'03'\n$SCREEN_ATTR_HIGH_YELLOW    EQU   X'04'\n$SCREEN_ATTR_HIGH_RED       EQU   X'05'\n$SCREEN_ATTR_HIGH_TURQUOISE EQU   X'06'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CCW": {"ttr": 16, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$CCW_SEARCH            EQU  X'31'    SEARCH\n$CCW_READ              EQU  X'02'    READ\n$CCW_READ_DATA         EQU  X'06'    READ DATA\n$CCW_READ_KEY_AND_DATA EQU  X'0E'    READ KEY AND DATA\n$CCW_READ_CKD          EQU  X'1E'    READ COUNT, KEY, AND DATA\n$CCW_READ_MULTIPLE_CKD EQU  X'5E'    READ MULTIPLE COUNT, KEY, AND DATA\n$CCW_TIC               EQU  X'08'    TRANSFER IN CHANNEL (TIC)\n$CCW_CC                EQU  X'40'    CHAIN COMMAND\n$CCW_IDAW              EQU  X'04'    INDIRECT DATA ADDRESS\n$CCW_SILI              EQU  X'20'    SUPPRESS INCORRECT LENGTH INDICATE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CMD": {"ttr": 18, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         CMD   &CMD,&LABEL,&DESC\n         LCLA  &LEN\n         AIF   (T'&CMD   EQ 'O').NOCMD\n         AIF   (T'&LABEL EQ 'O').NOLABEL\n         AIF   (T'&DESC  EQ 'O').NODESC\n&LEN     SETA  K'&CMD\n         DC    CL8'&CMD'\n         DC    AL2(&LEN)\n         DC    AL4(&LABEL)\n         DC    CL60&DESC\n         MEXIT\n.NOCMD   ANOP\n         MNOTE 8,'COMMAND IS REQUIRED'\n         MEXIT\n.NOLABEL ANOP\n         MNOTE 8,'LABEL IS REQUIRED'\n         MEXIT\n.NODESC  ANOP\n         MNOTE 8,'DESCRIPTION IS REQUIRED'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMMAND": {"ttr": 20, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMMAND_DSECT     DSECT\nCOMMAND_CMD       DS     CL8            COMMAND\nCOMMAND_LENGTH    DS     AL2            COMMAND LENGTH\nCOMMAND_ADDR      DS     AL4            COMMAND ENTRY POINT\nCOMMAND_DESC      DS     CL60           COMMAND DESCRIPTION\nCOMMAND_DSECT_L   EQU    *-COMMAND_DSECT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMMON": {"ttr": 22, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         COMMON  &TYPE=X\n         AIF  ('&TYPE' EQ 'CSECT').CSECT\nOSCOMM                 DSECT\n         AGO  .COMM\n.CSECT   ANOP\nOSCOMM                 CSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*         Internal trace                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTRACE000 DS    0H\nDXD      USING DXD_PREFIX,R13\n         STM   R0,R15,COMM_TRACE_SAVE\n         L     R6,COMM_TRACE_DCB\n         TM    COMM_TRACE_FLAG,$TRACE_CLOSE\n         BO    TRACE070\n         TM    COMM_TRACE_FLAG,$TRACE_ACTIVE\n         BNO   TRACE010\n         TM    COMM_TRACE_FLAG,$TRACE_OPEN\n         BO    TRACE010\n         OPEN  ((R6),OUTPUT),                                          +\n               MODE=31\n         LM    R0,R15,COMM_TRACE_SAVE\n         L     R6,COMM_TRACE_DCB\n         OI    COMM_TRACE_FLAG,$TRACE_OPEN\nTRACE010 DS    0H\n         L     R5,COMM_TRACE_CURR\n         C     R5,COMM_TRACE_LAST\n         BNE   TRACE020\n         L     R5,COMM_TRACE_1ST\n         B     TRACE030\nTRACE020 DS    0H\n         LA    R5,TRENTRYL(R5)\nTRACE030 DS    0H\n         ST    R5,COMM_TRACE_CURR\n         USING TRENTRY,R5\n         MVC   TRECSECT,DXD.DXD_CSECT\n         MVC   TREID,0(R14)\n         MVC   TREDATA1,DXD.DXD_TRACE_1\n         MVC   TREDATA2,DXD.DXD_TRACE_2\n         XC    DXD.DXD_TRACE_1,DXD.DXD_TRACE_1\n         XC    DXD.DXD_TRACE_2,DXD.DXD_TRACE_2\nTRACE040 DS    0H\n         TM    COMM_TRACE_FLAG,$TRACE_OPEN\n         BNO   TRACE060\n         PUT   (R6),0(R5)\nTRACE060 DS    0H\n         LM    R0,R15,COMM_TRACE_SAVE\n         B     8(R14)\nTRACE070 DS    0H\n         TM    COMM_TRACE_FLAG,$TRACE_OPEN\n         BNO   TRACE080\n         CLOSE ((R6)),                                                 +\n               MODE=31\n         NI    COMM_TRACE_FLAG,255-$TRACE_OPEN\nTRACE080 DS    0H\n         NI    COMM_TRACE_FLAG,255-$TRACE_CLOSE\n         LM    R0,R15,COMM_TRACE_SAVE\n         BR    R14\n         DROP  DXD\n\nCOMM_TRACE_SAVE        DS    16F\n\nCOMM_TRACE_DCB         DC    A(0)\n\nCOMM_TRACE_FLAG        DC    X'00'\n$TRACE_ACTIVE          EQU   X'80'\n$TRACE_OPEN            EQU   X'40'\n$TRACE_CLOSE           EQU   X'20'\n\n$A                     EQU   *-OSCOMM\n$B                     EQU   ((($A+31)/32)*32)\n                       ORG   OSCOMM+$B                32-BYTE ALIGNMENT\n\nCOMM_TRACE             DC    A(0)\n                       DC    C'1STX'\nCOMM_TRACE_1ST         DC    A(0)\n                       DC    C'LAST'\nCOMM_TRACE_LAST        DC    A(0)\n                       DC    C'CURR'\nCOMM_TRACE_CURR        DC    A(0)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_VERIFY_NUMBER_000 DS    0H\n                       ST    R14,12(R13)                SAVE R14\n                       XC    COMM_INFO_01,COMM_INFO_01\n                       BCTR  R15,0\n                       LA    R14,COMM_INFO_01+14\n                       SR    R14,R15                    MINUS LENGTH\n                       EX    R15,COMM_VERIFY_MVC\n                       UNPK  COMM_INFO_02+00(9),COMM_INFO_01+00(5)\n                       UNPK  COMM_INFO_02+08(9),COMM_INFO_01+04(5)\n                       UNPK  COMM_INFO_02+16(9),COMM_INFO_01+08(5)\n                       UNPK  COMM_INFO_02+24(9),COMM_INFO_01+12(4)\n                       TRT   COMM_INFO_02(30),COMM_VALID_DIGITS\n                       BNZ   COMM_VERIFY_NUMBER_010\n                       CLI   COMM_INFO_02+31,X'FC'\n                       BL    COMM_VERIFY_NUMBER_010\n                       L     R14,12(R13)\n                       BR    R14\nCOMM_VERIFY_NUMBER_010 DS    0H\n                       EX    R15,COMM_VERIFY_ZAP\n                       L     R14,12(R13)\n                       BR    R14\nCOMM_VERIFY_MVC        MVC   COMM_INFO_01(0),0(R1)\nCOMM_VERIFY_ZAP        ZAP   0(0,R1),COMM_P0\nCOMM_P0                DC    P'0'\n\nCOMM_VALID_DIGITS      EQU   *-C'0'\n                       DC    10X'00'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_DWORD             DC    D'0'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_COMMAND           DC    A(0)       COMMAND ADDRESS\nCOMM_COMMAND_LENGTH    DC    H'0'       LENGTH OF COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_VCONS             DS    0A\n                       VCONS TYPE=COMM\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_DXD               DC    A(0)       DYNAMIC WORK AREA ADDRESS\nCOMM_DXD_LENGTH        DC    F'0'       DYNAMIC WORK AREA LENGTH\nCOMM_OSDSPACE          DC    A(0)       SPACE MANAGER ENTRY POINT\nCOMM_OSDSPACE_DXD      DC    A(0)       SPACE MANAGER'S WORK AREA\nCOMM_OSDSPACE_DXD_LENGTH DC  A(0)       SPACE MANAGER'S WORK LENGTH\nCOMM_ISPLINK           DC    A(0)       ISPLINK ENTRY POINT\nCOMM_OSSPFD            DC    A(0)       SPF VARIABLES DATA\nCOMM_OSSPFV            DC    A(0)       SPF VARIABLES DEFINITIONS\nCOMM_FORMAT_DCB        DC    A(0)       FORMAT(S) DCB ADDRESS\nCOMM_FORMAT_IO         DC    A(0)       FORMAT(S) I/O AREA\nCOMM_MESSAGE_TABLE     DC    A(0)       MESSAGE TABLE\n\nCOMM_RECALL_FIRST      DC    A(0)       FIRST ENTRY IN RECALL TABLE\nCOMM_RECALL_CURR       DC    A(0)       CURRENT ENTRY IN RECALL TABLE\nCOMM_RECALL_LAST       DC    A(0)       LAST ENTRY IN RECALL TABLE\nCOMM_RECALL_NBR        EQU   20         NBR OF RECALLABLE COMMANDS\n\nCOMM_IO_SIZE           DC    F'65536'   I/O AREA SIZE\nCOMM_LOAD_CHAIN        DC    A(0)       LOAD BLOCK CHAIN\nCOMM_ACTIVE_SESSION    DC    A(0)       ACTIVE SESSION BLOCK ADDRESS\nCOMM_NEW_SESSION       DC    A(0)       NEW SESSION BLOCK (SWITCHES)\nCOMM_DD_NUMBER         DC    PL4'0'     NUMBER OF DD'S ALLOCATED\nCOMM_DATASPACE_NUMBER  DC    PL4'0'     NUMBER OF DATASPACES CREATED\n\nCOMM_USER_LENGTH       DC    H'0'       USER ID LENGTH\nCOMM_USER              DC    CL8' '     USER'S LOGIN ID\n\nCOMM_NATIONAL_LANGUAGE DC    CL8' '     NATIONAL LANGUAGE\nCOMM_LANGUAGE_MODULE   DC    CL8' '     LANGUAGE MODULE NAME\nCOMM_NEW_FORMAT        DC    CL8' '     NEW FORMAT NAME\n\nCOMM_INFO_01           DC    CL256' '\nCOMM_INFO_02           DC    CL256' '\nCOMM_INFO_03           DC    CL256' '\n\nCOMM_VDATA_FUNC        DC    X'00'      FUNCTION FOR OSVDATA\n$VDATA_GETMAIN         EQU   X'01'      .. GETMAIN VDATA\n$VDATA_FREEMAIN        EQU   X'02'      .. FREEMAIN VDATA\n$VDATA_VDEFINE         EQU   X'03'      .. VDEFINE VDATA\n\nCOMM_SESS_FUNC         DC    X'00'      FUNCTION FOR OSSESS\n$SESS_REMOVE           EQU   X'01'      .. REMOVE A SESSION\n$SESS_SWITCH           EQU   X'02'      .. SWITCH SESSION\n$SESS_NEW_SESSION      EQU   X'03'      .. NEW SESSION\n\nCOMM_SYSOUT            DC    C'Z'       SYSOUT CLASS\nCOMM_INTRDR            DC    C'B'       INTERNAL READER SYSOUT CLASS\nCOMM_FLAGS             DC    X'00'      GLOBAL FLAGS/INDICATORS\n$COMM_NO_ISPF          EQU   X'80'      .. SPF NOT AVAILABLE\n$COMM_NO_SESSION       EQU   X'40'      .. 'SESSION' CMD NOT ALLOWED\n$COMM_NO_FORMAT        EQU   X'20'      .. 'FORMAT' CMD NOT ALLOWED\n$COMM_NO_UPPER         EQU   X'10'      .. DO NOT TRANSLATE TO UPPER\nCOMM_BLANKS            DC    CL256' '\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MSG LOOK-UP/BUILD PARAMETER LIST                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_MSG_CSECT         DS    CL8        NAME OF CSECT\nCOMM_MSG_ID            DS    H          MESSAGE NUMBER (ID)\nCOMM_MSG_LINES         DS    H          NUMBER OF RETURNED LINES\nCOMM_MSG_1             DS    CL80       MESSAGE LINE 1\nCOMM_MSG_2             DS    CL80       MESSAGE LINE 2\nCOMM_MSG_3             DS    CL80       MESSAGE LINE 3\nCOMM_MSG_4             DS    CL80       MESSAGE LINE 4\nCOMM_MSG_5             DS    CL80       MESSAGE LINE 5\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_OPERANDS_NBR      DS    H\n\nCOMM_OPERANDS          DS    0X\n\nOPERAND_01_ADDRESS     DS    XL4\nOPERAND_01_LENGTH      DS    XL2\nOPERAND_01_TYPE        DS    X\n\nOPERAND_02_ADDRESS     DS    XL4\nOPERAND_02_LENGTH      DS    XL2\nOPERAND_02_TYPE        DS    X\n\nOPERAND_03_ADDRESS     DS    XL4\nOPERAND_03_LENGTH      DS    XL2\nOPERAND_03_TYPE        DS    X\n\nOPERAND_04_ADDRESS     DS    XL4\nOPERAND_04_LENGTH      DS    XL2\nOPERAND_04_TYPE        DS    X\n\nOPERAND_05_ADDRESS     DS    XL4\nOPERAND_05_LENGTH      DS    XL2\nOPERAND_05_TYPE        DS    X\n\nOPERAND_06_ADDRESS     DS    XL4\nOPERAND_06_LENGTH      DS    XL2\nOPERAND_06_TYPE        DS    X\n\nOPERAND_07_ADDRESS     DS    XL4\nOPERAND_07_LENGTH      DS    XL2\nOPERAND_07_TYPE        DS    X\n\nOPERAND_08_ADDRESS     DS    XL4\nOPERAND_08_LENGTH      DS    XL2\nOPERAND_08_TYPE        DS    X\n\nOPERAND_09_ADDRESS     DS    XL4\nOPERAND_09_LENGTH      DS    XL2\nOPERAND_09_TYPE        DS    X\n\nOPERAND_10_ADDRESS     DS    XL4\nOPERAND_10_LENGTH      DS    XL2\nOPERAND_10_TYPE        DS    X\n\nOPERAND_11_ADDRESS     DS    XL4\nOPERAND_11_LENGTH      DS    XL2\nOPERAND_11_TYPE        DS    X\n\nOPERAND_12_ADDRESS     DS    XL4\nOPERAND_12_LENGTH      DS    XL2\nOPERAND_12_TYPE        DS    X\n\nOPERAND_13_ADDRESS     DS    XL4\nOPERAND_13_LENGTH      DS    XL2\nOPERAND_13_TYPE        DS    X\n\nOPERAND_14_ADDRESS     DS    XL4\nOPERAND_14_LENGTH      DS    XL2\nOPERAND_14_TYPE        DS    X\n\nOPERAND_15_ADDRESS     DS    XL4\nOPERAND_15_LENGTH      DS    XL2\nOPERAND_15_TYPE        DS    X\n\nOPERAND_16_ADDRESS     DS    XL4\nOPERAND_16_LENGTH      DS    XL2\nOPERAND_16_TYPE        DS    X\n\nOPERAND_17_ADDRESS     DS    XL4\nOPERAND_17_LENGTH      DS    XL2\nOPERAND_17_TYPE        DS    X\n\nOPERAND_18_ADDRESS     DS    XL4\nOPERAND_18_LENGTH      DS    XL2\nOPERAND_18_TYPE        DS    X\n\nOPERAND_19_ADDRESS     DS    XL4\nOPERAND_19_LENGTH      DS    XL2\nOPERAND_19_TYPE        DS    X\n\nOPERAND_20_ADDRESS     DS    XL4\nOPERAND_20_LENGTH      DS    XL2\nOPERAND_20_TYPE        DS    X\n\nCOMMON_L               EQU   *-OSCOMM\n                       MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DAIRREQ": {"ttr": 27, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Dynamic allocation / de-allocation                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DAIRREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nDAIRREQ         DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nDAIRREQ         DSECT\n.LBL0020 ANOP\nDAIR_FUNC       DS     X           FUNCTION\n$DAIR_ALLOC     EQU    X'01'       .. ALLOCATE\n$DAIR_FREE      EQU    X'02'       .. FREE\nDAIR_OPTS       DS     X\n$DAIR_USE_DD    EQU    X'01'       .. USE SPECIFIED DD NAME\n$DAIR_SYSOUT    EQU    X'02'       .. ALLOCATE SYSOUT\n$DAIR_INTRDR    EQU    X'04'       .. ALLOCATE INTERNAL READER\n$DAIR_VOLUME    EQU    X'08'       .. ALLOCATE VOLUME (NOT DATA SET)\n$DAIR_DUMMY     EQU    X'80'       .. ALLOCATE DUMMY DD\nDAIR_DD         DS     CL8         DD NAME\nDAIR_DSN        DS     CL44        DATA SET NAME\nDAIR_MEMBER     DS     CL8         MEMBER NAME\nDAIR_SYSOUT     DS     X           SYSOUT CLASS\nDAIR_VOLSER     DS     CL6         VOLSER\nDAIR_UNIT       DS     CL8         UNIT NAME\nDAIR_PRI        DS     XL3         PRIMARY SPACE QTY\nDAIR_SEC        DS     XL3         SECONDARY SPACE QTY\nDAIR_DISP       DS     X           DISP FOR ALLOCATIONS\n$DAIR_DISP_OLD  EQU    X'01'       .. OLD\n$DAIR_DISP_MOD  EQU    X'02'       .. MOD\n$DAIR_DISP_NEW  EQU    X'04'       .. NEW\n$DAIR_DISP_SHR  EQU    X'08'       .. SHR\nDAIR_R15        DS     XL2         SVC 99 R15\nDAIR_ERROR      DS     XL2         SVC 99 RETURN CODE\nDAIR_INFO       DS     XL2         SVC 99 REASON\nDAIRREQ_L       EQU    *-DAIRREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DIR": {"ttr": 258, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DIR_RECORD        DS   0C\nDIR_NAME          DS   CL8\nDIR_FLAGS         DS   X\n$DIR_SPF          EQU  X'80'         .. SPF STATISTICS PRESENT\n$DIR_TAGGED       EQU  X'40'         .. MEMBER IS 'TAGGED'\n$DIR_NAME_TRUNC   EQU  X'20'         .. NAME WAS TRUNCATED\n$DIR_PMAR         EQU  X'10'         .. MEMBER HAS PMAR DATA\n$DIR_DELETED      EQU  X'08'         .. MEMBER HAS BEEN DELETED\n$DIR_RENAMED      EQU  X'04'         .. MEMBER HAS BEEN RENAMED\nDIR_TTR           DS   XL3\nDIR_LIB_TYPE      DS   X             LIBRARY TYPE (FROM SMDE)\nDIR_SMDE_FLAG     DS   X             FLAGS (FROM SMDE)\nDIR_MLT           DS   XL3           MLT (TTR FROM SMDE)\nDIR_CONCAT        DS   X             CONCATENATION NUMBER\nDIR_LIB_FLAG      DS   X\nDIR_DATA_LENGTH   DS   XL2           USER DATA LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR_DATA          DS   0C\nDIR_SPF_VERSION   DS   X             VERSION\nDIR_SPF_LEVEL     DS   X             LEVEL\nDIR_SPF_C_DATE    DS   PL4           CREATION DATE\nDIR_SPF_M_DATE    DS   PL4           MODIFICATION DATE\nDIR_SPF_M_TIME    DS   XL3           MODIFICATION TIME\nDIR_SPF_INIT      DS   XL2           INITIAL SIZE\nDIR_SPF_SIZE      DS   XL2           SIZE\nDIR_SPF_MODS      DS   XL2           NUMBER OF MODIFICATIONS\nDIR_SPF_USER      DS   CL8           LAST MODIFIED BY USER\nDIR_SPF_L         EQU  *-DIR_DATA    LENGTH OF SPF DATA\n                  ORG  DIR_DATA\nDIR_PMAR_ATR1     DS   X             ATTRIBUTE BYTE 1\nDIR_PMAR_ATR2     DS   X             ATTRIBUTE BYTE 2\nDIR_PMAR_ATR3     DS   X             ATTRIBUTE BYTE 3\nDIR_PMAR_ATR4     DS   X             ATTRIBUTE BYTE 4\nDIR_PMAR_AC       DS   X             AUTH CODE\nDIR_PMAR_STOR     DS   XL4           VIRTUAL STORAGE REQUIRED\nDIR_PMAR_EPM      DS   XL4           MAIN ENTRY POINT OFFSET\nDIR_PMAR_EPA      DS   XL4           THIS ENTRY POINT OFFSET\nDIR_PMAR_SSI      DS   XL4           SSI INFORMATION\nDIR_PMAR_LENGTH   DS   XL4           LENGTH ON DASD\nDIR_PMAR_DATE     DS   XL4           DATE SAVED\nDIR_PMAR_TIME     DS   XL4           TIME SAVED\nDIR_PMAR_USER     DS   XL4           USER OR JOB NAME\nDIR_PMAR_TTR      DS   XL3           TTR OF FIRST BLOCK OF TEXT\nDIR_PMAR_TTRN     DS   XL3           TTR OF FIRST NOTE LIST\nDIR_PMAR_NL       DS   X             NUMBER OF ENTRIES IN NOTE LIST\nDIR_PMAR_FTBL     DS   XL2           LENGTH OF FIRST BLOCK OF TEXT\n\nDIR_PMAR_ORG      DS   0XL3          LOAD MODULE ORIGIN IF NOT ZERO\n                  DS   XL2\nDIR_PMAR_RLDS     DS   X             NUMBER OF RLD/CTL RECORDS\n\nDIR_PMAR_SLSZ     DS   XL2           SCATTER LIST LENGTH\nDIR_PMAR_TTSZ     DS   XL2           TRANSLATION TABLE LENGTH\nDIR_PMAR_ESDT     DS   CL2           ESDID OF FIRST TEXT BLOCK\nDIR_PMAR_ESDC     DS   CL2           ESDID OF EP CONTROL SECTION\nDIR_RECORD_L      EQU  *-DIR_RECORD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DISPCTRL": {"ttr": 260, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     DISPCTRL is a table in EDCOMM.                                  *\n*                                                                     *\n*     This table is to make EDLINE's life easier.                     *\n*     There is an entry per line on EDIT displays.                    *\n*     The screen builder (like EDNORMO or EDHEXO) \"know\" that         *\n*     it is displaying on each line.  The line command interpreter    *\n*     does not.  Some lines allow commands to be entered on that      *\n*     line, others do not.  For example, when in HEX mode, line       *\n*     commands are allowed only on the CHARACTER line.  Also,         *\n*     SEQ blocks do not exist for all lines (like the blank lines     *\n*     between rows of hex displays).  So, rather than have EDLINE     *\n*     and other stuff \"figure out\" what was sent out per line,        *\n*     the program that builds the display builds the DISPCTRL table   *\n*     at the same time.                                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISPCTRL          DSECT\nDISPCTRL_VDATA    DS     A                 ADDRESS IN VDATA\nDISPCTRL_COPY     DS     A                 ADDRESS IN COPY\nDISPCTRL_SEQ      DS     A                 SEQ BLOCK ADDRESS\nDISPCTRL_LINE_NBR DS     H                 LINE NUMBER\nDISPCTRL_FLAGS    DS     X                 FLAGS\n$DISPCTRL_CMD     EQU    X'80'             .. COMMAND MAY BE PRESENT\n$DISPCTRL_DUMMY   EQU    X'40'             .. FILLER LINE\n$DISPCTRL_CHAR    EQU    X'20'             .. CHARACTER DATA\n$DISPCTRL_ZONE    EQU    X'10'             .. ZONE DATA\n$DISPCTRL_NUMERIC EQU    X'08'             .. ZONE DATA\n                  DS     0F\nDISPCTRL_L        EQU    *-DISPCTRL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSINFREQ": {"ttr": 262, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Data set info interface                                      *\n*                                                                     *\n*  As of 9/15/2005, the catalog search interface (CSI) is documented  *\n*  in DFSMS: Managing catalogs in appendix A,                         *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DSINFREQ &DSECT=YES\n                      AIF   ('&DSECT' EQ 'YES').LBL0010\nDSINFREQ              DS    0A\n                      AGO   .LBL0020\n.LBL0010              ANOP\nDSINFREQ              DSECT\n.LBL0020              ANOP\nDSINFO_OPTIONS        DS  X        OPTIONS\n$DSINFO_VOLSER        EQU X'80'    USE SPECIFIED VOLSER\nDSINFO_DSN            DS  CL44     DATA SET NAME\nDSINFO_VOLSER         DS  CL6      VOLSER\nDSINFO_DATASET_TYPE   DS  X        DATA SET TYPE\nDSINFO_DSCB           DS  140X     DSCB\nDSINFO_ERROR_INFO     DS  0XL4     CSI ERROR REASON INFO\nDSINFO_ERROR_MODULE   DS  XL2      .. MODULE ID\nDSINFO_ERROR_REASON   DS  X        .. REASON\nDSINFO_ERROR_RC       DS  X        .. RETURN CODE\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSPCREQ": {"ttr": 264, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Data space request parm list                                 *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DSPCREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nDSPCREQ                       DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nDSPCREQ                DSECT\n.LBL0020 ANOP\nDSPCREQ_FUNC           DS     X              FUNCTION\n$DSPCREQ_CREATE        EQU    X'01'          .. CREATE\n$DSPCREQ_CLEAR         EQU    X'02'          .. CLEAR\n$DSPCREQ_DELETE        EQU    X'03'          .. DELETE\n$DSPCREQ_DUMP          EQU    X'04'          .. DUMP A DATASPACE\n$DSPCREQ_FIND_MEMBER_G EQU    X'05'          .. FIND A MEMBER\n$DSPCREQ_FIND_MEMBER_S EQU    X'06'          .. FIND A MEMBER\n$DSPCREQ_FIND_DSN_G    EQU    X'07'          .. FIND BY DSB\n$DSPCREQ_FIND_DSN_S    EQU    X'08'          .. FIND BY DSN\n$DSPCREQ_FIND_CCHHR    EQU    X'09'          .. FIND BY DISK ADDRESS\n$DSPCREQ_FIND_FILE_G   EQU    X'0A'          .. FIND UNIX FILE\n$DSPCREQ_FIND_FILE_S   EQU    X'0B'          .. FIND UNIX FILE\n$DSPCREQ_RETREIVE      EQU    X'0C'          .. RETREIVE A RECORD\n$DSPCREQ_SORT_NAME     EQU    X'0D'          .. SORT BY NAME\n$DSPCREQ_SORT_TTR      EQU    X'0E'          .. SORT BY TTR\n$DSPCREQ_SORT_CDATE    EQU    X'0F'          .. SORT BY CDATE\n$DSPCREQ_SORT_MDATE    EQU    X'10'          .. SORT BY MDATE & TIME\n$DSPCREQ_SORT_SIZE     EQU    X'11'          .. SORT BY SIZE\n$DSPCREQ_SORT_USER     EQU    X'12'          .. SORT BY USER\n$DSPCREQ_SORT_DSN      EQU    X'13'          .. SORT VTOC BY DSN\n$DSPCREQ_SORT_CCHHR    EQU    X'14'          .. SORT VTOC BY cchhr\n$DSPCREQ_STORE         EQU    X'15'          .. STORE A RECORD\n$DSPCREQ_UPDATE        EQU    X'16'          .. UPDATE A RECORD\n\nDSPCREQ_RC             DS     X              RETURN CODE\n$DSPCREQ_OK            EQU    X'00'          .. GOOD\n$DSPCREQ_NOT_STORED    EQU    X'01'          .. RECORD NOT STORED\n$DSPCREQ_FULL          EQU    X'02'          .. DATASPACE IS FULL\n$DSPCREQ_EMPTY         EQU    X'03'          .. DATASPACE IS EMPTY\n$DSPCREQ_ERROR         EQU    X'FF'          .. FAILURE (SEE MESSAGES)\n\nDSPCREQ_DATASPACE      DS     A              DATASPACE CONTROL INFO\nDSPCREQ_RECORD_NBR     DS     F              RECORD NUMBER\nDSPCREQ_RECORD_ADDR    DS     A              ADDRESS OF RECORD\nDSPCREQ_RECORD_LENGTH  DS     F              LENGTH OF RECORD\n\nDSPCREQ_DCB            DS     A              DCB ADDRESS (DUMP)\n\nDSPCREQ_SEQ            DS     F              LOGICAL RECORD NBR\n\nDSPCREQ_RBA            DS     F              RBA OF RECORD (VSAM)\n\nDSPCREQ_CCHHR          DS     CL5            CCHHR (VTOCS)\n\nDSPCREQ_MEMBER         DS     CL8            (FIND MEMBER)\n\nDSPCREQ_DSN            DS     CL44           (FIND DSN)\n\nDSPCREQ_FILE           DS     CL256          (FIND FILE)\n\nDSPCREQ_L              EQU    *-DSPCREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DXDPREF": {"ttr": 266, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DXD_PREFIX    DS    0F\nDXD_SAVE      DS    18F\nDXD_TRACE_1   DS    CL8\nDXD_TRACE_2   DS    CL8\nDXD_CSECT     DS    CL8\nDXD_PREFIX_L  EQU   *-DXD_PREFIX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDCOMM": {"ttr": 268, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         EDCOMM  &TYPE=\n         AIF     ('&TYPE' EQ 'CSECT').CSECT\n         AIF     ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE   12,'INVALID -TYPE-'\n         MEXIT\n.CSECT   ANOP\nEDCOMM   CSECT\n         AGO   .COMM\n.DSECT   ANOP\nEDCOMM   DSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                   OSEDIT COMMON                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_EYE             DC    CL8'EDCOMM'  EYECATCHER\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_FIRST_SEQ       DC    A(0)\n                       DC    A(0)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_DISPLAY_CONTROL DC    A(0)         DISPLAY CONTROL\nEDCOMM_VDATA_ADDR      DS    A(0)         VDATA ADDRESS\nEDCOMM_VDATA_LENGTH    DS    F'0'         VDATA LENGTH\nEDCOMM_VDATA_CURSOR    DS    F'0'         CURSOR POSITION\nEDCOMM_VDEPTH          DC    A(0)         LINES AVAILABLE\nEDCOMM_VWIDTH          DC    A(0)         COLUMNS AVAILABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_PROCESS_SEQ     DC    A(0)         NEXT SEQ BLOCK TO PROCESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_VDATA_COPY      DC    A(0)         COPY OF VDATA DISPLAYED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_ACTIVE_RECORDS  DC    F'0'         NBR OF RECORDS IN DATA SPACE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_ACB             DS    0X\nEDCOMM_DCB             DC    100X'00'     DCB OR ACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_EXLST           DS    0X\nEDCOMM_DCBE            DC    100X'00'     DCBE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_RPL             DC    100X'00'     RPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_OPEN_CLOSE      DC    2F'0'        OPEN/CLOSE (LIST FORM)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_SCROLL_LINES    DC    F'0'\nEDCOMM_META_LINES      DC    F'0'\nEDCOMM_SCROLL_VERB     DC    C' '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_VDATA_LINES     DC    H'0'         LINES OF DATA IN COPY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_FLAGS           DC    X'00'        FLAGS/INDICATORS\n$EDCOMM_UPDATED        EQU   X'80'        UPDATE SINCE LAST SAVE\n$EDCOMM_PENDING        EQU   X'40'        COMMAND IS PENDING\n$EDCOMM_BLOCK          EQU   X'20'        PENDING COMMAND IS BLOCK CMD\n$EDCOMM_CAPS_ON        EQU   X'10'        CAPS ON\n$EDCOMM_HEX_ON         EQU   X'08'        HEX DISPLAY\n$EDCOMM_NO_TRUNCATE    EQU   X'04'        DO NOT TRUNCATE RECORDS\n$EDCOMM_RESEQUENCE     EQU   X'02'        RESEQUENCE SEQ BLOCKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_PENDING_COMMAND DC    C' '         COMMAND PENDING\nEDCOMM_DATASET_TYPE    DC    X'00'        DATASET TYPE\nEDCOMM_DD              DC    CL8' '       DD NAME\nEDCOMM_DSN             DC    CL44' '      DSN\nEDCOMM_MEMBER          DC    CL8' '       MEMBER\nEDCOMM_VOLSER          DC    CL6' '       VOLSER\nEDCOMM_DSCB            DC    XL140'00'    OUTPUT FILE FORMAT 1 DSCB\nEDCOMM_PATH_LENGTH     DC    F'0'         PATH LENGTH\nEDCOMM_PATH            DC    CL256' '     PATH\nEDCOMM_STAT            DC    (STAT#LENGTH)X'00'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_META_DEFS       DS    0C\n                       METADEF $META_TOP_OF_DATA,AI\n                       METADEF $META_RULE,ABDIM\n                       DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                       DS    0H\nEDCOMM_IO              DS    65550X       I/O AREA\nEDCOMM_L               EQU   *-EDCOMM\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ESDDATA": {"ttr": 271, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*             Data stored in data space                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESDDATA_DATA            DS    0C\nESDDATA_NAME            DS    CL8\nESDDATA_TYPE            DS    CL2\nESDDATA_QUAL            DS    CL2\nESDDATA_NAME_SPACE      DS    C\nESDDATA_SCOPE           DS    C\nESDDATA_SYMBOL_ATTR     DS    X\nESDDATA_FILL_CHAR       DS    C\nESDDATA_RESIDENT        DS    CL8\nESDDATA_LENGTH          DS    F\nESDDATA_ALIGN           DS    X\nESDDATA_USABILITY       DS    X\nESDDATA_AMODE           DS    X\nESDDATA_RMODE           DS    X\nESDDATA_RECFM           DS    XL2\nESDDATA_LOAD_FLAGS      DS    X\nESDDATA_BIND_FLAGS      DS    X\nESDDATA_BIND_CNTL       DS    X\nESDDATA_ATTRIBUTES      DS    X\nESDDATA_XATTR_CLASS     DS    CL8\nESDDATA_XATTR_OFFSET    DS    XL4\nESDDATA_SEGMENT         DS    XL2\nESDDATA_REGION          DS    XL2\nESDDATA_SIGNATURE       DS    CL8\nESDDATA_AUTOCALL        DS    X\nESDDATA_STATUS          DS    X\nESDDATA_TARGET          DS    CL8\nESDDATA_RESIDENT_CLASS  DS    CL50\nESDDATA_ELEMENT_OFFSET  DS    XL4\nESDDATA_CLASS_OFFSET    DS    XL4\nESDDATA_ADA             DS    CL50\nESDDATA_PRIORITY        DS    XL4\nESDDATA_DATA_L          EQU   *-ESDDATA_DATA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FMAT": {"ttr": 273, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FMAT                    DSECT\nFMAT_NEXT               DS    A          NEXT FMAT BLOCK ADDRESS\nFMAT_FIELDS             DS    A          FIELDS DEPENDANT ON IF\nFMAT_TYPE               DS    X          TYPE OF BLOCK\n\n$FMAT_FIELD             EQU   X'01'      .. FIELD DEFINITION\n$FMAT_IF                EQU   X'02'      .. IF\n$FMAT_END_IF            EQU   X'03'      .. END IF\n\nFMAT_DATA_TYPE          DS    X          FIELD TYPE\n$FMAT_BINARY            EQU   X'01'      .. BINARY\n$FMAT_CHARACTER         EQU   X'02'      .. CHARACTER\n$FMAT_HEADING           EQU   X'03'      .. HEADING\n$FMAT_HEX               EQU   X'04'      .. HEX\n$FMAT_PACKED            EQU   X'05'      .. PACKED DECIMAL\n\nFMAT_START              DS    XL2        STARTING POSITION\nFMAT_LENGTH             DS    XL2        LENGTH\nFMAT_ROW                DS    XL2        ROW ON DISPLAY\nFMAT_COLUMN             DS    XL2        COLUMN ON DISPLAY\n\n                        DS    0H\nFMAT_COMPARE            DS    XL6        COMPARE INSTRUCTION\nFMAT_BRANCH             DS    XL2        SUCCESSFUL COMPARE\nFMAT_RETURN             DS    XL4        RETURN INSTRUCTION\n\nFMAT_OPTIONS            DS    X          OPTIONS\n$FMAT_LEFT              EQU   X'80'      .. LEFT JUSTIFY\n$FMAT_RIGHT             EQU   X'40'      .. RIGHT JUSTIFY\n$FMAT_EDITWORD          EQU   X'20'      .. CUSTOM EDIT WORD\n$FMAT_FLOAT             EQU   X'10'      .. FLOATING PAD CHARACTER\n*\n* For HEADING fields, the data to be displayed\n* For IF statements, the data used for testing against data in records\n* For PACKED fields with custom EDITWORDs, the converted edit word\n*\nFMAT_DATA               DS    CL30\nFMAT_L                  EQU   *-FMAT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FMATREQ": {"ttr": 275, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Load format request                                          *\n*                                                                     *\n*      It can get confusing..                                         *\n*                                                                     *\n*                                                                     *\n*      This is a parameter block passed to OSFORMAT.                  *\n*                                                                     *\n*      It is not the parms passed to a \"formatter\".                   *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         FMATREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nFMATREQ             DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nFMATREQ             DSECT\n.LBL0020 ANOP\nFMATREQ_FUNC        DS     X         FUNCTION\n$FMATREQ_FORMAT     EQU    X'01'     .. LOAD A FORMAT\n$FMATREQ_FREE       EQU    X'02'     .. FREE A FORMAT\n$FMATREQ_CLOSE      EQU    X'03'     .. CLOSE UP SHOP\n$FMATREQ_VERIFY     EQU    X'04'     .. VERIFY A FORMAT IS VALID\nFMATREQ_RC          DS     X         RETURN CODE\n$FMATREQ_OK         EQU    X'00'\n$FMATREQ_ERROR      EQU    X'FF'\nFMATREQ_FORMAT      DS     CL8       FORMAT NAME\nFMATREQ_L           EQU    *-FMATREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FMTCOMM": {"ttr": 277, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DXD_FIRST_FMAT        DS  A             FIRST FMAT BLOCK ON CHAIN\nDXD_FMAT_CHAIN_POINT  DS  A             LAST FMAT BLOCK ON CHAIN\nDXD_FMAT_FMAT         DS  A             FMAT BLOCK BEING FORMATTED\nDXD_IF_TABLE          DS  16A           SAVED FMAT BLOCK ADDRESS TABLE\n\nDXD_RECORD_ADDR       DS  A\nDXD_RECORD_LENGTH     DS  F\n\nDXD_VDATA_ADDR        DS  A             VDATA ADDRESS\nDXD_VDATA_LENGTH      DS  F             VDATA LENGTH\n\nDXD_IF_LEVEL          DS  H             CURRENT IF LEVEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORMAT": {"ttr": 279, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FORMAT              DSECT\nFORMAT_TYPE         DS   CL8\nFORMAT_DATA         DS   CL72\n                    ORG  FORMAT_DATA\nFORMAT_PROGRAM      DS   CL8\n                    ORG  FORMAT_DATA\nFORMAT_PANEL        DS   CL8\n                    ORG  FORMAT_DATA\n                    DS   C\nFORMAT_START        DS   CL10             STARTING POSITION\nFORMAT_LENGTH       DS   CL10             LENGTH\nFORMAT_DATA_TYPE    DS   CL10             DATA TYPE\nFORMAT_ROW_COLUMN   DS   CL10             ROW, COLUMN FOR DISPLAYING\nFORMAT_HEADING      DS   CL30             DATA FOR HEADING TYPE FIELDS\n                    ORG  FORMAT_HEADING\nFORMAT_EDITWORD     DS   CL30\n                    ORG  FORMAT_DATA\nFORMAT_EXIT         DS   CL8\n                    ORG\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IBMMAC": {"ttr": 513, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         IBMMAC &ACB=,                                                 +\n               &ACEE=,                                                 +\n               &ASCB=,                                                 +\n               &ASXB=,                                                 +\n               &CDE=,                                                  +\n               &CSI=,                                                  +\n               &CVT=,                                                  +\n               &DCBD=,                                                 +\n               &DCBE=,                                                 +\n               &DEB=,                                                  +\n               &DECB=,                                                 +\n               &DES=,                                                  +\n               &EXLST=,                                                +\n               &IOB=,                                                  +\n               &JFCB=,                                                 +\n               &PMAR=,                                                 +\n               &PSA=,                                                  +\n               &RB=,                                                   +\n               &RPL=,                                                  +\n               &S99=,                                                  +\n               &SDWA=,                                                 +\n               &SMDE=,                                                 +\n               &TCB=,                                                  +\n               &TIOT=,                                                 +\n               &UCB=,                                                  +\n               &VTOC=,                                                 +\n               &DUMMY=\n         LCLC  &LIST\n&LIST    SETC  'NO'\n         AIF   (T'&ACB EQ 'O').ACEE000\n         AIF   ('&ACB' EQ 'NO').ACEE000\n         AIF   ('&ACB' EQ 'VSAM').ACB0010\n         AIF   ('&ACB' EQ 'VTAM').ACB0010\n         MNOTE 12,'INVALID -ACB- OPTION'\n         AGO   .MEXIT\n.ACB0010 ANOP\n         IFGACB AM=&ACB\n.ACEE000 ANOP\n         AIF   (T'&ACEE EQ 'O').ASCB000\n         AIF   ('&ACEE' EQ 'NO').ASCB000\n         AIF   ('&ACEE' EQ 'YES').ACEE010\n         MNOTE 12,'INVALID -ACEE- OPTION'\n         AGO   .MEXIT\n.ACEE010 ANOP\n         IHAACEE\n.ASCB000 ANOP\n         AIF   (T'&ASCB EQ 'O').ASXB000\n         AIF   ('&ASCB' EQ 'NO').ASXB000\n         AIF   ('&ASCB' EQ 'LIST').ASCB010\n         AIF   ('&ASCB' EQ 'YES').ASCB020\n         MNOTE 12,'INVALID -ASCB- OPTION'\n         AGO   .MEXIT\n.ASCB010 ANOP\n&LIST    SETC  'YES'\n.ASCB020 ANOP\n         IHAASCB DSECT=YES,LIST=&LIST\n.ASXB000 ANOP\n         AIF   (T'&ASXB EQ 'O').CDE0000\n         AIF   ('&ASXB' EQ 'NO').CDE0000\n         AIF   ('&ASXB' EQ 'LIST').ASXB010\n         AIF   ('&ASXB' EQ 'YES').ASXB020\n         MNOTE 12,'INVALID -ASXB- OPTION'\n         AGO   .MEXIT\n.ASXB010 ANOP\n&LIST    SETC  'YES'\n.ASXB020 ANOP\n         IHAASXB DSECT=YES,LIST=&LIST\n.CDE0000 ANOP\n         AIF   (T'&CDE EQ 'O').CSI0000\n         AIF   ('&CDE' EQ 'NO').CSI0000\n         AIF   ('&CDE' EQ 'YES').CDE0010\n         MNOTE 12,'INVALID -CDE- OPTION'\n         AGO   .MEXIT\n.CDE0010 ANOP\n         IHACDE\n.CSI0000 ANOP\n         AIF   (T'&CSI EQ 'O').CVT0000\n         AIF   ('&CSI' EQ 'NO').CVT0000\n         AIF   ('&CSI' EQ 'YES').CSI0010\n         MNOTE 12,'INVALID -CSI- OPTION'\n         AGO   .MEXIT\n.CSI0010 ANOP\n         COPY  IGGCSINA\n.CVT0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&CVT EQ 'O').DCB0000\n         AIF   ('&CVT' EQ 'NO').DCBB000\n         AIF   ('&CVT' EQ 'LIST').CVT0010\n         AIF   ('&CVT' EQ 'YES').CVT0020\n         MNOTE 12,'INVALID -CVT- OPTION'\n         AGO   .MEXIT\n.CVT0010 ANOP\n&LIST    SETC  'YES'\n.CVT0020 ANOP\n         CVT   DSECT=YES,LIST=&LIST\n.DCB0000 ANOP\n         AIF   (T'&DCBD EQ 'O').DCBE000\n         AIF   ('&DCBD' EQ 'NO').DCBE000\n         AIF   ('&DCBD' EQ 'PO').DCB0010\n         AIF   ('&DCBD' EQ 'PS').DCB0020\n         MNOTE 12,'INVALID -DCB- OPTION'\n         AGO   .MEXIT\n.DCB0010 ANOP\n         DCBD  DSORG=PO,DEVD=DA\n         AGO   .DCBE000\n.DCB0020 ANOP\n         DCBD  DSORG=PS,DEVD=DA\n.DCBE000 ANOP\n         AIF   (T'&DCBE EQ 'O').DEB0000\n         AIF   ('&DCBE' EQ 'NO').DEB000\n         AIF   ('&DCBE' EQ 'YES').DCBE010\n         MNOTE 12,'INVALID -DCBE- OPTION'\n         AGO   .MEXIT\n.DCBE010 ANOP\n         IHADCBE\n.DEB0000 ANOP\n         AIF   (T'&DEB EQ 'O').DECB000\n         AIF   ('&DEB' EQ 'NO').DECB000\n         AIF   ('&DEB' EQ 'YES').DEB0010\n         MNOTE 12,'INVALID -DEB- OPTION'\n         AGO   .MEXIT\n.DEB0010 ANOP\n         IEZDEB LIST=NO\n.DECB000 ANOP\n         AIF   (T'&DECB EQ 'O').DES0000\n         AIF   ('&DECB' EQ 'NO').DES0000\n         AIF   ('&DECB' EQ 'YES').DECB010\n         MNOTE 12,'INVALID -DECB- OPTION'\n         AGO   .MEXIT\n.DECB010 ANOP\n         IHADECB DSECT=YES\n.DES0000 ANOP\n         AIF   (T'&DES EQ 'O').EXLST00\n         AIF   ('&DES' EQ 'NO').EXLST00\n         AIF   ('&DES' EQ 'YES').DES0010\n         MNOTE 12,'INVALID -DES- OPTION'\n         AGO   .MEXIT\n.DES0010 ANOP\n         IGWDES\n.EXLST00 ANOP\n         AIF   (T'&EXLST EQ 'O').IOB0000\n         AIF   ('&EXLST' EQ 'NO').IOB0000\n         AIF   ('&EXLST' EQ 'VSAM').EXLST10\n         AIF   ('&EXLST' EQ 'VTAM').EXLST10\n         MNOTE 12,'INVALID -EXLST- OPTION'\n         AGO   .MEXIT\n.EXLST10 ANOP\n         IFGEXLST AM=&EXLST\n.IOB0000 ANOP\n         AIF   (T'&IOB EQ 'O').JFCB000\n         AIF   ('&IOB' EQ 'NO').JFCB000\n         AIF   ('&IOB' EQ 'YES').IOB0010\n         MNOTE 12,'INVALID -IOB- OPTION'\n         AGO   .MEXIT\n.IOB0010 ANOP\n         IEZIOB DSECT=YES\n.JFCB000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&JFCB EQ 'O').PMAR000\n         AIF   ('&JFCB' EQ 'NO').PMAR000\n         AIF   ('&JFCB' EQ 'YES').JFCB020\n         AIF   ('&JFCB' EQ 'LIST').JFCB010\n         MNOTE 12,'INVALID -JFCB- OPTION'\n         AGO   .MEXIT\n.JFCB010 ANOP\n&LIST    SETC  'YES'\n.JFCB020 ANOP\nJFCB     DS    0C\n         IEFJFCBN LIST=&LIST\n.PMAR000 ANOP\n         AIF   (T'&PMAR EQ 'O').PSA0000\n         AIF   ('&PMAR' EQ 'NO').PSA0000\n         AIF   ('&PMAR' EQ 'YES').PMAR010\n         MNOTE 12,'INVALID -PMAR- OPTION'\n         AGO   .MEXIT\n.PMAR010 ANOP\n         IEWPMAR DSECT=YES\n.PSA0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&PSA EQ 'O').RB0000\n         AIF   ('&PSA' EQ 'NO').RB0000\n         AIF   ('&PSA' EQ 'LIST').PSA0010\n         AIF   ('&PSA' EQ 'YES').PSA0020\n         MNOTE 12,'INVALID -PSA- OPTION'\n         AGO   .MEXIT\n.PSA0010 ANOP\n&LISTC   SETC  'YES'\n.PSA0020 ANOP\n         IHAPSA DSECT=YES,LIST=&LIST\n.RB0000  ANOP\n         AIF   (T'&RB EQ 'O').RPL0000\n         AIF   ('&RB' EQ 'NO').RPL0000\n         AIF   ('&RB' EQ 'YES').RB0010\n         MNOTE 12,'INVALID -RB- OPTION'\n         AGO   .MEXIT\n.RB0010  ANOP\n         IHARB\n.RPL0000 ANOP\n         AIF   (T'&RPL EQ 'O').S990000\n         AIF   ('&RPL' EQ 'NO').S990000\n         AIF   ('&RPL' EQ 'VSAM').RPL0010\n         AIF   ('&RPL' EQ 'VTAM').RPL0010\n         MNOTE 12,'INVLAID -RPL- OPTION'\n         AGO   .MEXIT\n.RPL0010 ANOP\n         IFGRPL AM=&RPL\n.S990000 ANOP\n         AIF   (T'&S99 EQ 'O').SDWA000\n         AIF   ('&S99' EQ 'NO').SDWA000\n         IEFZB4D0\n         IEFZB4D2\n.SDWA000 ANOP\n         AIF   (T'&SDWA EQ 'O').SMDE000\n         AIF   ('&SDWA' EQ 'NO').SMDE000\n         AIF   ('&SDWA' EQ 'YES').SDWA010\n         AIF   ('&SDWA' EQ 'VRA').SDWA020\n         MNOTE 12,'INVALID -SDWA- OPTION'\n         AGO   .MEXIT\n.SDWA010 ANOP\n         IHASDWA VRAMAP=NO\n         AGO   .TCB0000\n.SDWA020 ANOP\n         IHASDWA VRAMAP=YES\n.SMDE000 ANOP\n         AIF   (T'&SMDE EQ 'O').TCB0000\n         AIF   ('&SMDE' EQ 'NO').TCB0000\n         AIF   ('&SMDE' EQ 'YES').SMDE010\n         MNOTE 12,'INVALID -SMDE- OPTION'\n         AGO   .MEXIT\n.SMDE010 ANOP\n         IGWSMDE\n.TCB0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&TCB EQ 'O').TIOT000\n         AIF   ('&TCB' EQ 'NO').TIOT000\n         AIF   ('&TCB' EQ 'LIST').TCB0010\n         AIF   ('&TCB' EQ 'YES').TCB0020\n         MNOTE 12,'INVALID -TCB- OPTION'\n         AGO   .MEXIT\n.TCB0010 ANOP\n&LIST    SETC  'YES'\n.TCB0020 ANOP\n         IKJTCB DSECT=YES,LIST=&LIST\n.TIOT000 ANOP\n         AIF   (T'&TIOT EQ 'O').UCB0000\n         AIF   ('&TIOT' EQ 'NO').UCB0000\n         AIF   ('&TIOT' EQ 'YES').TIOT010\n         MNOTE 12,'INVALID -TIOT- OPTION'\n         AGO   .MEXIT\n.TIOT010 ANOP\nTIOT     DSECT\n         IEFTIOT1\n.UCB0000 ANOP\n         AIF   (T'&UCB EQ 'O').VTOC000\n         AIF   ('&UCB' EQ 'NO').VTOC000\n         AIF   ('&UCB' EQ 'PREFIX').UCB0010\n         AIF   ('&UCB' EQ 'YES').UCB0020\n         MNOTE 12,'INVALID -UCB- OPTION'\n         AGO   .MEXIT\n.UCB0010 ANOP\n         IEFUCBOB PREFIX=YES,LIST=NO\n         AGO   .VTOC000\n.UCB0020 ANOP\n         IEFUCBOB LIST=NO\n.VTOC000 ANOP\n         AIF   (T'&VTOC EQ 'O').MEXIT\n         IECSDSL1 &VTOC\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRBDATA": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "IDRB_DATA               DS    0C\nIDRB_BINDER_ID          DS    CL10\nIDRB_VERSION            DS    CL2\nIDRB_RELEASE            DS    CL2\nIDRB_DATE_BOUND         DS    CL7\nIDRB_TIME_BOUND         DS    CL6\nIDRB_MODULE_SIZE        DS    F\nIDRB_CALLERID           DS    CL60\nIDRB_DATA_L             EQU   *-IDRB_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRLDATA": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LMOD_IDRL_DATA          DS    0C\nLMOD_IDRL_PID_ID        DS    CL10\nLMOD_IDRL_VERSION       DS    CL2\nLMOD_IDRL_LEVEL         DS    CL2\nLMOD_IDRL_DATE_PROCESSED DS   CL7\nLMOD_IDRL_TIME_BOUND    DS    CL6\nLMOD_IDRL_RESIDENT      DS    CL60\nLMOD_IDRL_DATA_L        EQU   *-LMOD_IDRL_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRZDATA": {"ttr": 522, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LMOD_IDRZ_DATA          DS    0C\nLMOD_IDRZ_DATE          DS    CL7\nLMOD_IDRZ_ZAP_DATA      DS    CL8\nLMOD_IDRZ_RESIDENT      DS    CL60\nLMOD_IDRZ_DATA_L        EQU   *-LMOD_IDRZ_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ITRACE": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ".* ------------------------------------------------------------------*\n.*                                                                   *\n.*                        TRACE MACRO                                *\n.*                                                                   *\n.*       The trace function always captures the last three bytes of  *\n.*       the active task's TCB address and bytes 3-7 of the active   *\n.*       CSECT's name, and a trace ID.                               *\n.*                                                                   *\n.*       One or two data elements (8 bytes each) may be captured at  *\n.*       any trace point.  The data to be captured may be specified  *\n.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *\n.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *\n.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *\n.*       captured, RDATA1 and RDATA2 specify a register whose        *\n.*       contents are to be captured.                                *\n.*                                                                   *\n.*       For example:                                                *\n.*                                                                   *\n.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *\n.*                                                                   *\n.*          In this case the trace entry would include the TCB       *\n.*          address, CSECT name, ID \"POINTA\", 8 bytes of data        *\n.*          beginning at value1's address and the contents of        *\n.*          register 4.                                              *\n.*                                                                   *\n.* ------------------------------------------------------------------*\n         MACRO\n&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=\n         LCLA  &L\n         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010\n         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020\n         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT\n         AIF   (T'&DATA1 EQ 'O').DATA030\n         AIF   ('&DATA1'(1,1) EQ '(').DATA010\n         LA    R14,&DATA1            DATA ADDRESS\n         MVC   DXD_TRACE_1,0(R14)    MOVE DATA\n         AGO   .DATA040\n.DATA010 ANOP\n         AIF   (N'&DATA1 EQ 1).DATA020\n&L       SETA  &DATA1(2)\n         MVC   DXD_TRACE_1(&L),&DATA1(1)\n         AGO   .DATA040\n.DATA020 ANOP\n         MVC   DXD_TRACE_1,0&DATA1   MOVE DATA\n         AGO   .DATA040\n.DATA030 ANOP\n         AIF   (T'&RDATA1 EQ 'O').DATA040\n         STCM  &RDATA1,15,DXD_TRACE_1 SAVE REGISTER CONTENTS\n.DATA040 ANOP\n         AIF   (T'&DATA2 EQ 'O').DATA070\n         AIF   ('&DATA2'(1,1) EQ '(').DATA050\n         LA    R14,&DATA2            DATA ADDRESS\n         MVC   DXD_TRACE_2,0(R14)    MOVE DATA\n         AGO   .DATA080\n.DATA050 ANOP\n         AIF   (N'&DATA2 EQ 1).DATA060\n&L       SETA  &DATA2(2)\n         MVC   DXD_TRACE_2(&L),&DATA2(1)\n         AGO   .DATA080\n.DATA060 ANOP\n         MVC   DXD_TRACE_2,0&DATA2   MOVE DATA\n         AGO   .DATA080\n.DATA070 ANOP\n         AIF   (T'&RDATA2 EQ 'O').DATA080\n         STCM  &RDATA2,15,DXD_TRACE_2 SAVE REGISTER CONTENTS\n.DATA080 ANOP\n         BAL   R14,TRACE000          ENTER TRACE ROUTINE\n         AIF      (T'&ID EQ 'O').NOID\n&NAME    DC    CL8'&ID'              TRACE ID\n         AGO   .ID\n.NOID    ANOP\n&NAME    DC    CL8'**NOID**'\n.ID      ANOP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'\n.MEXIT   ANOP\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KEYDEF": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         KEYDEF    &KW,&LINK\n         LCLA      &LEN\n         AIF  (T'&KW EQ 'O').NOKW\n         AIF  (T'&LINK EQ 'O').NOLINK\n&LEN          SETA K'&KW-2\n              DC   CL8&KW\n              DC   AL2(&LEN)\n              DC   AL4(&LINK)\n         MEXIT\n.NOKW    ANOP\n         MNOTE 12,'KEYWORD OPERAND OMITTED'\n         MEXIT\n.NOLINK  ANOP\n         MNOTE 12,'LINK OPERAND OMITTED'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LANGREQ": {"ttr": 529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        National language                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         LANGREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nLANGREQ         DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nLANGREQ         DSECT\n.LBL0020 ANOP\nLANG_FUNC       DS     X           FUNCTION\n$LANG_NBR       EQU    X'01'       .. RETURN NUMBER OF LANGUAGES\n$LANG_LIST      EQU    X'02'       .. RETURN LIST OF LANGUAGES\n$LANG_LOOKUP    EQU    X'03'       .. LOOKUP A LANGUAGE\nLANG_RC         DS     X           FUNCTION\n$LANG_OK        EQU    X'00'       .. SUCCESSFUL\n$LANG_NO_OPTS   EQU    X'01'       .. OPTIONS FILE NOT AVAILABLE\n$LANG_UNKNOWN   EQU    X'02'       .. LANGUAGE NOT FOUND (ON LOOKUP)\nLANG_NAME       DS     CL8         NAME OF NATIONAL LANGUAGE\nLANG_MODULE     DS     CL8         MODULE NAME\nLANG_NBR        DS     F           NUMBER OF LANGUAGES\nLANG_LIST       DS     A           LIST OF NAMES\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOADREQ": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         LOADREQ &DSECT=YES\n         AIF     ('&DSECT' EQ 'YES').LBL0010\nLOADREQ          DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nLOADREQ          DSECT\n.LBL0020 ANOP\nLOADREQ_FUNC     DS     X           FUNCTION\n$LOADREQ_LOAD    EQU    X'01'       .. LOAD SPECIFIED MODULE\n$LOADREQ_DELETE  EQU    X'02'       .. DELETE SPECIFIED MODULE\n$LOADREQ_CLEANUP EQU    X'03'       .. DELETE ALL MODULES\nLOADREQ_RC       DS     X           STATUS\n$LOADREQ_OK      EQU    X'00'       .. SUCCESSFUL\n$LOADREQ_ERROR   EQU    X'FF'       .. FAILED\nLOADREQ_MODULE   DS     CL8         MODULE TO LOAD OR DELETE\nLOADREQ_EP       DS     XL4         MODULE ENTRY POINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MAPDATA": {"ttr": 533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LMOD_MAP_DATA           DS    0C\nLMOD_MAP_NEXT           DS    XL4\nLMOD_MAP_TYPE           DS    C\nLMOD_MAP_FLAGS          DS    X\nLMOD_MAP_NAME           DS    CL60\nLMOD_MAP_OFFSET         DS    XL4\nLMOD_MAP_QUANTITY       DS    XL4\nLMOD_MAP_NAME_SPACE     DS    X\nLMOD_MAP_RECFM          DS    XL2\nLMOD_MAP_DATA_L         EQU   *-LMOD_MAP_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "META": {"ttr": 535, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Meta lines are lines like \"Top of data\" and \"rule\".             *\n*     Some commands are not allowed on meta data lines.               *\n*     For example the \"Top of data\" line may not be deleted.          *\n*     The \"Before\" line command is not allowed on \"Top of line\".      *\n*                                                                     *\n*     The meta data line control info is in EDCOMM at label           *\n*     EDCOMM_META_LINES.                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMETA           DSECT\nMETA_ID        DS    X                    IDENTIFIER\nMETA_NBR_CMDS  DS    XL2                  NUMBER OF ALLOWABLE CMDS\nMETA_CMDS      DS    CL5                  LIST OF ALLOWABLE CMDS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "METADEF": {"ttr": 537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         METADEF &ID,&CMDS\n         GBLB  &METADEF\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*    Define META data lines (top of data, rule,etc)                  *\n.*                                                                    *\n.*    First parameter is the internal ID of the meta data.            *\n.*    All IDs are defined by equates generated the first time         *\n.*    METADEF is invoked.                                             *\n.*                                                                    *\n.*    The second parameter is a list of commands valid on this        *\n.*    meta data line.  For an example, the only valid commands on     *\n.*    the 'top of data' line is \"after\" and \"insert\".                 *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n         AIF   (&METADEF).NODEF\n&METADEF SETB  1\n$META_TOP_OF_DATA     EQU   1\n$META_RULE            EQU   2\n.NODEF   ANOP\n         LCLA  &NBR\n&NBR     SETA  K'&CMDS\n         DC    AL1(&ID)\n         DC    AL2(&NBR)\n         DC    CL5'&CMDS'\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSG": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*             MAP THE MESSAGE CSECT                                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG                         DSECT\nMSG_CSECT                   DS   CL8\nMSG_CSECT_LENGTH            DS   AL4\n\nMSG_CSECT_MSG               DS   0C\nMSG_ID                      DS   XL2        MESSAGE ID\nMSG_LENGTH                  DS   AL4        LENGTH OF ALL COMPONENTS\nMSG_LINES                   DS   AL2        NUMBER OF LINES\n\nMSG_COMPONENTS              DS   0C\n\nMSG_COMPONENT               DS   0C\nMSG_COMPONENT_LENGTH        DS   XL2        LENGTH OF THIS DESCRIPTOR\nMSG_COMPONENT_TYPE          DS   X          TYPE\n$MSG_COMPONENT_ADDRESS      EQU  C'A'       .. ADDRESS\n$MSG_COMPONENT_CHAR         EQU  C'C'       .. CHARACTER\n$MSG_COMPONENT_CONSTANT     EQU  C'T'       .. CONSTANT TEXT\n$MSG_COMPONENT_HALFWORD     EQU  C'H'       .. HALFWORD\n$MSG_COMPONENT_FULLWORD     EQU  C'F'       .. FULLWORD\n$MSG_COMPONENT_HEX          EQU  C'X'       .. HEX\nMSG_COMPONENT_OUTPUT_LENGTH DS   XL2        LENGTH IN OUTPUT MESSAGE\nMSG_COMPONENT_DISP          DS   XL2        DISPLACMENT IN COMM AREA\nMSG_COMPONENT_AREA          DS   C          'C' FOR COMM, 'S' FOR SESS\nMSG_COMPONENT_LINE          DS   X          MESSAGE LINE NUMBER\nMSG_COMPONENT_CONSTANT      DS   0C         PRESENT FOR CONSTANT TEXT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGCOMP": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         MSGCOMP &LINE,&TYPE,&LENGTH,&LBL\n         LCLC   &PREFIX\n         GBLA   &GMAXL\n&PREFIX  SETC   '&LBL'(1,4)\n         AIF    ('&TYPE' EQ 'ADDR').ADDR000\n         AIF    ('&TYPE' EQ 'CHAR').CHAR000\n         AIF    ('&TYPE' EQ 'CONSTANT').CONST00\n         AIF    ('&TYPE' EQ 'HALFWORD').HALF000\n         AIF    ('&TYPE' EQ 'HEX').HEX0000\n         AIF    ('&TYPE' EQ 'FULLWORD').FULL000\n         MNOTE  12,'INVALID -TYPE-'\n         MEXIT\n.ADDR000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_ADDRESS)   COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').ADDR010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .ADDR020\n.ADDR010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.ADDR020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.*\n.CHAR000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_CHAR)      COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').CHAR010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .CHAR020\n.CHAR010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.CHAR020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.CONST00 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(C&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_CONSTANT)  COMPONENT TYPE\n         DC     AL2(C&SYSNDX-B&SYSNDX)        LENGTH IN OUTPUT MESSAGE\n         DC     AL2(0)                        NOT IN COMM AREA\n         DC     C' '\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         DC     C&LBL\nC&SYSNDX EQU    *\n         AGO    .MAXL00\n\n.HALF000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_HALFWORD)  COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').HALF010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .HALF020\n.HALF010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.HALF020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.HEX0000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_HEX)       COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').HEX0010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .HEX0020\n.HEX0010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.HEX0020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.FULL000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_FULLWORD)  COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').FULL010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO OSCOMM\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .FULL020\n.FULL010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.FULL020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n.MAXL00  ANOP\n         AIF    (&GMAXL GE &LINE).MEXIT\n&GMAXL   SETA   &LINE\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGDEF": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         MSGDEF &MSG,&LINES\n         GBLA   &GMSG,&GMAXL\n         AIF    ('&MSG' EQ 'END').END\n&GMSG    SETA   &SYSNDX\n&GMAXL   SETA   0\nA&GMSG   EQU    *\n         DC     AL2(&MSG)                 MESSAGE ID\n         DC     AL4(B&GMSG-A&GMSG)        LENGTH OF ALL COMPONENTS\n         DC     AL2(M&GMSG)               NUMBER OF OUTPUT LINES\n         MEXIT\n.END     ANOP\n         DC     X'FF'\nM&GMSG   EQU    &GMAXL\nB&GMSG   EQU    *\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OFFLDREQ": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        OFFLOAD  parameters                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         OFFLDREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nOFFLDREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nOFFLDREQ        DSECT\n.LBL0020 ANOP\nOFFLDREQ_FUNC   DS     X           FUNCTION\n$OFFLDREQ_OPEN  EQU    X'01'       .. OPEN OUTPUT\n$OFFLDREQ_WRITE EQU    X'02'       .. WRITE GIVEN DATA SET/MEMBER\n$OFFLDREQ_CLOSE EQU    X'03'       .. CLOSE OUTPUT\nOFFLDREQ_MEMBER DS     CL8         MEMBER NAME\nOFFLDREQ_DCB    DS     A           DCB ADDRESS\nOFFLDREQ_IO     DS     A           I/O AREA\nOFFLDREQ_COUNT  DS     F           NUMBER OF MEMBERS OFFLOADED\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OPERAND": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "OPERAND               DSECT\nOPERAND_ADDRESS       DS   XL4\nOPERAND_LENGTH        DS   XL2\nOPERAND_TYPE          DS   X\n$OPERAND_PRESENT      EQU  X'80'\n$OPERAND_NUMERIC      EQU  X'40'\n$OPERAND_KEYWORD      EQU  X'20'\n$OPERAND_HEX          EQU  X'10'\n$OPERAND_QUOTED       EQU  X'08'\nOPERAND_L             EQU  *-OPERAND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OSSPFD": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         OSSPFD   &TYPE=\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nOSSPFD                 CSECT\nOSSPFD                 AMODE 31\nOSSPFD                 RMODE ANY\n         AGO   .COMM\n.DSECT   ANOP\nOSSPFD                 DSECT\n.COMM    ANOP\nSPF_LVLINE             DC    F'0'       LAST VISIBLE LINE\nSPF_VWIDTH             DC    F'0'       DYNAMIC AREA WIDTH\nSPF_VCOL               DC    F'0'       DYNAMIC AREA COLUMN\nSPF_VDEPTH             DC    F'0'       DYNAMIC AREA DEPTH\nSPF_VROW               DC    F'0'       DYNAMIC AREA ROW\nSPF_ZSCROLLN           DC    F'0'       NUMBER OF LINES TO SCROLL\nSPF_CURSOR_POSITION    DC    F'0'       CURSOR POSITION\nSPF_VTYPE              DC    CL8' '     DYNAMIC AREA TYPE\nSPF_ZSCROLLA           DC    CL8' '     SCROLL AMOUNT\nSPF_ZVERB              DC    CL8' '     SPF VERB\nSPF_RFIND              DC    CL8' '     RFIND COMMAND ACTION\nSPF_ZCMD               DC    CL80' '    SPF COMMAND AREA\nSPF_ZPFKEY             DC    CL4' '     PF KEY USED\nSPF_VSCR               DC    CL4'CSR'   ONLY USED IF SPF NOT AVAILABLE\nSPF_ASCII              DC    CL5' '     ASCII ON/OFF\nSPF_CAPS               DC    CL3'OFF'   CAPS (EDIT) ON OR OFF\nSPF_TAGGED             DC    CL10' '    SHOW TAGGED/NOT TAGGED\n\nSPF_DSN                DC    CL44' '    DATA SET NAME\nSPF_DD                 DC    CL8' '     DD NAME\nSPF_MEMBER             DC    CL8' '     MEMBER NAME\nSPF_UNIT               DC    CL8' '     UNIT NAME\nSPF_RECORD_FROM        DC    CL9' '     FIRST RECORD (RECORD FROM)\nSPF_RECORD_TO          DC    CL9' '     LAST RECORD (RECORD TO)\nSPF_RECORD_OF          DC    CL9' '     MAX RECORD NUMBER\nSPF_COLUMN_FROM        DC    CL5' '     FIRST COLUNM (COLUMN FROM)\nSPF_COLUMN_TO          DC    CL5' '     LAST COLUNM (COLUMN TO)\nSPF_COLUMN_OF          DC    CL5' '     MAX COLUMN NUMBER\nSPF_VOLSER             DC    CL6' '     VOLUME SERIAL\nSPF_DSORG              DC    CL4' '     DATA SET ORGANIZAION\nSPF_RECFM              DC    CL3' '     RECORD FORMAT\nSPF_OUTPUT_RECFM       DC    CL3' '     RECORD FORMAT\nSPF_LRECL              DC    CL5' '     LOGICAL RECORD LENGTH (LRECL)\nSPF_OUTPUT_LRECL       DC    CL5' '     LOGICAL RECORD LENGTH (LRECL)\nSPF_BLOCK_SIZE         DC    CL5' '     BLOCK SIZE\nSPF_KEY_LENGTH         DC    CL5' '     KEY LENGTH\nSPF_RKP                DC    CL5' '     KEY POSITION\nSPF_FORMAT             DC    CL8' '     FORMAT NAME\nSPF_YES_OR_NO          DC    CL3' '     CONFIRMATION YES OR NO\nSPF_AREA               DC    CL8' '     AREA NAME (DISPLAY STORAGE)\nSPF_ADDRESS            DC    CL8' '     AREA ADDRESS (DISPLAY STORAGE)\nSPF_LENGTH             DC    CL8' '     AREA LENGTH (DISPLAY STORAGE)\nSPF_ALET               DC    CL8' '     AREA ALET (DISPLAY STORAGE)\n\n\nSPF_FLAGS              DC    X'00'      FLAGS/SWITCHES\n$SPF_VPUT              EQU   X'80'      .. VPUT HAS BEEN ISSUED\n\nSPF_NEW_DSN            DC    CL44' '    NEW DATA SET NAME (RENAMES)\nSPF_NEW_MEMBER         DC    CL8' '     NEW MEMBER NAME (RENAMES)\nSPF_OUTPUT_DSN         DC    CL44' '    OUTPUT DATA SET NAME\nSPF_OUTPUT_MEMBER      DC    CL8' '     OUTPUT MEMBER NAME\nSPF_OUTPUT_DISP        DC    CL3' '     OUTPUT DISP\nSPF_OUTPUT_VOLSER      DC    CL6' '     OUTPUT VOLSER (NEW ONLY)\nSPF_OUTPUT_UNIT        DC    CL8' '     OUTPUT UNIT (SYSDA, ETC)\nSPF_VSAM_TYPE          DC    CL4' '     VSAM TYPE (KSDS, RRDS, ETC)\nSPF_OUTPUT_SPACE_PRI   DC    CL5' '     NEW ALLOCATION PRIMARY QTY\nSPF_OUTPUT_SPACE_SEC   DC    CL5' '     NEW ALLOCATION SECONDARY QTY\nSPF_SMF_DESC           DC    CL50' '    SMF RECORD DESCRIPTION\n\nSPF_PATH               DC    CL256' '   PATH\nSPF_PATH_LENGTH        DC    CL5' '     PATH LENGTH\nSPF_REAL_PATH          DC    CL256' '   REAL PATH\nSPF_REAL_PATH_LENGTH   DC    CL5' '     REAL PATH LENGTH\nSPF_OUTPUT_PATH        DC    CL256' '   OUTPUT PATH\n\nSPF_FROM_KEY           DC    CL40' '    FROM KEY (VSAM KSDS)\nSPF_TO_KEY             DC    CL40' '    TO KEY (VSAM KSDS)\nSPF_RBA                DC    CL10' '    RBA VSAM\nSPF_FIRST_RECORD       DC    CL10' '    FIRST RECORD FOR VIEWING\nSPF_RECORDS            DC    CL10' '    RECORDS TO READ\n\nSPF_SEPARATOR_1        DC    CL72' '    LEADING SEPARATOR FOR APPEND\nSPF_SEPARATOR_2        DC    CL72' '\nSPF_SEPARATOR_3        DC    CL72' '\n\nSPF_SEPARATOR_4        DC    CL72' '    TRAILING SEPARATOR FOR APPEND\nSPF_SEPARATOR_5        DC    CL72' '\nSPF_SEPARATOR_6        DC    CL72' '\n\nSPF_MSG_1              DC    CL80' '\nSPF_MSG_2              DC    CL80' '\nSPF_MSG_3              DC    CL80' '\nSPF_MSG_4              DC    CL80' '\nSPF_MSG_5              DC    CL80' '\n\nSPF_PFKS               DS    0C\nSPF_PFK_01             DC    CL72' '\nSPF_PFK_02             DC    CL72' '\nSPF_PFK_03             DC    CL72' '\nSPF_PFK_04             DC    CL72' '\nSPF_PFK_05             DC    CL72' '\nSPF_PFK_06             DC    CL72' '\nSPF_PFK_07             DC    CL72' '\nSPF_PFK_08             DC    CL72' '\nSPF_PFK_09             DC    CL72' '\nSPF_PFK_10             DC    CL72' '\nSPF_PFK_11             DC    CL72' '\nSPF_PFK_12             DC    CL72' '\nSPF_PFK_13             DC    CL72' '\nSPF_PFK_14             DC    CL72' '\nSPF_PFK_15             DC    CL72' '\nSPF_PFK_16             DC    CL72' '\nSPF_PFK_17             DC    CL72' '\nSPF_PFK_18             DC    CL72' '\nSPF_PFK_19             DC    CL72' '\nSPF_PFK_20             DC    CL72' '\nSPF_PFK_21             DC    CL72' '\nSPF_PFK_22             DC    CL72' '\nSPF_PFK_23             DC    CL72' '\nSPF_PFK_24             DC    CL72' '\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PARMSREQ": {"ttr": 783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PARMSREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPARMSREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nPARMSREQ        DSECT\n.LBL0020 ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PARSEREQ": {"ttr": 785, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PARSEREQ &DSECT=YES\n                     AIF   ('&DSECT' EQ 'YES').LBL0010\nPARSEREQ             DS   0A\n                     AGO   .LBL0020\n.LBL0010             ANOP\nPARSEREQ             DSECT\n.LBL0020             ANOP\nPARSE_COMMAND        DS   A           COMMAND TO BE PARSED\nPARSE_OPERANDS       DS   A           OUTPUT AREA ADDRESS\nPARSE_LENGTH         DS   H           COMMAND TO BE PARSED\nPARSE_OPERANDS_NBR   DS   H           NUMBER OF OPERANDS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PCXHDR": {"ttr": 787, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PCXHDR   DSECT                     PCX PICTURE FILE HEADER\nPCXMFR   DS    X                   \"MANUFACTURER\"\n*        EQU   10                  ZSOFT (IE. PCX FORMAT FILE)\nPCXVER   DS    X                   VERSION\n*                              0 = VERSION 2.5 OF PC PAINTBRUSH\n*                              2 = VERSION 2.8 WITH PALETTE INFORMATION\n*                              3 = VERSION 2.8 W/O PALETTE INFORMATION\n*                              4 = PC PAINTBRUSH FOR WINDOWS(PLUS FOR\n*                                  WINDOWS USES VER 5)\n*                              5 = VERSION 3.0 AND > OF PC PAINTBRUSH\n*                                  AND PC PAINTBRUSH +, INCLUDES\n*                                  PUBLISHER'S PAINTBRUSH . INCLUDES\n*                                  24-BIT .PCX FILES\nPCXMETHD DS    X                   ENCODING METHOD\n*        EQU   0                   NO COMPRESSION (NEVER SEEN IT)\n*        EQU   1                   LIMITED RLE (RUN LENGTH ENCODING)\nPCXBITPP DS    X                   NUMBER OF BITS PER PIXEL PER PLANE\nPCXWINDW DS    0XL8                IMAGE WINDOW DIMENSIONS\nPCXXMIN  DS    XL2\nPCXYMIN  DS    XL2\nPCXXMAX  DS    XL2\nPCXYMAX  DS    XL2\nPCXHDPI  DS    XL2                 HORIZONTAL RESOLUTION DOTS PER INCH\nPCXVDPI  DS    XL2                 VERTICAL RESOLUTION DOTS PER INCH\nPCXCOLMP DS    16XL3               16-COLOR RGB PALETTE\nPCXRESV  DS    X                   SHOULD BE ZERO\nPCXNPLNS DS    X                   NUMBER OF COLOR PLANES\nPCXBYTLN DS    XL2                 NUMBER OF BYTES PER SCANLINE\n*                                  MUST BE EVEN - DON'T USE XMAX-XMIN+1\nPCXPALIN DS    XL2                 PALETTE INTERPRETATION INFORMATION\n*        EQU   1                   COLOR OR BLACK-AND-WHITE\n*        EQU   2                   GREYSCALE\nPCXHSSIZ DS    XL2                 HORIZONTAL SIZE IN PIXELS      (NEW)\nPCXVSSIZ DS    XL2                 VERTICAL SIZE IN PIXELS        (NEW)\nPCXFILL  DS    XL54                REST OF HEADER - SHOULD BE ZERO\nPCXHDRL  EQU   *-PCXHDR\nPCXDATA  DS    0X                  PICTURE DATA BEGINS HERE\n\n*   IF PCXVER IS 5 OR MORE THEN A 256-COLOR PALETTE MAY BE PRESENT.\n*   IF THE 256-COLOR PALETTE IS PRESENT THEN THE LAST 769 BYTES OF\n*   THE FILE IS AL1(12) FOLLOWED BY 256 3-BYTE RGB VALUES.\n*\n*   WHEN A PCX FILE IS TRANSFERRED TO A FIXED-LENGTH RECORD OS DATA\n*   SET, THE LAST RECORD MAY HAVE EXTRANEOUS FILL DATA AFTER PICTURE\n*   AND/OR PALETTE DATA.  \"REVIEW\" WILL TOLERATE AND IGNORE THIS.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDCHECK": {"ttr": 789, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         PDCHECK  &NBR\n         LA    R1,&NBR\n         LA    R15,L'&NBR\n         BAL   R14,COMM_VERIFY_NUMBER_000\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROFRECD": {"ttr": 791, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROFILE_RECORD  DSECT\nPROFILE_TYPE    DS     CL8\nPROFILE_DATA    DS     CL72\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROFREQ": {"ttr": 793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Profile read/write                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PROFREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPROFREQ  DS      0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nPROFREQ          DSECT\n.LBL0020 ANOP\nPROF_FUNC        DS     X           FUNCTION\n$PROF_READ       EQU    X'01'       .. READ\n$PROF_WRITE      EQU    X'02'       .. WRITE\nPROF_RC          DS     X\n$PROF_OK         EQU    X'00'       .. SUCCESFUL\n$PROF_NO_PROFILE EQU    X'01'       .. PROFILE DD NOT FOUND\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RCALLREQ": {"ttr": 795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        RECALL request block                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         RCALLREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nRCALLREQ            DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nRCALLREQ            DSECT\n.LBL0020 ANOP\nRCALLREQ_FUNC       DS     X         FUNCTION\n$RCALLREQ_INIT      EQU    X'01'     .. INITIALIZE RECALL CHAIN\n$RCALLREQ_RECALL    EQU    X'02'     .. RECALL COMMAND\n$RCALLREQ_STORE     EQU    X'03'     .. STORE A COMMAND\n$RCALLREQ_TERM      EQU    X'04'     .. TERMINATION/CLEAN-UP\nRCALLREQ_LENGTH     DS     H         COMMAND LENGTH\nRCALLREQ_CMD        DS     CL80      COMMAND TEXT\nRCALLREQ_L          EQU    *-RCALLREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REGEQU": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*              GENERAL PURPOSE REGISTERS\n* ------------------------------------------------------------------- *\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n\n* ------------------------------------------------------------------- *\n*              ACCESS REGISTERS\n* ------------------------------------------------------------------- *\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nAR10     EQU   10\nAR11     EQU   11\nAR12     EQU   12\nAR13     EQU   13\nAR14     EQU   14\nAR15     EQU   15\n\n* ------------------------------------------------------------------- *\n*              FLOATING POINT REGISTERS\n* ------------------------------------------------------------------- *\nFP0      EQU   0\nFP2      EQU   2\nFP4      EQU   4\nFP6      EQU   6\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RLDDATA": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LMOD_RLD_DATA            DS    0C\nLMOD_RLD_TYPE            DS    X\nLMOD_RLD_STATUS          DS    X\nLMOD_RLD_RESIDENT        DS    CL60\nLMOD_RLD_ADCON_LENGTH    DS    XL2\nLMOD_RLD_RESIDENT_CLASS  DS    CL60\nLMOD_RLD_RESIDENT_OFFSET DS    XL4\nLMOD_RLD_CLASS_OFFSET    DS    XL4\nLMOD_RLD_BIND_ATTR       DS    X\nLMOD_RLD_XATTR_CLASS     DS    CL60\nLMOD_RLD_XATTR_OFFSET    DS    XL4\nLMOD_RLD_TARGET          DS    CL60\nLMOD_RLD_RESIDENT_PART   DS    CL60\nLMOD_RLD_DATA_L          EQU   *-LMOD_RLD_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SCONTROL": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         SCONTROL  &PREFIX,&SUFFIX\n         LCLC      &P,&S\n         AIF       (T'&PREFIX EQ 'O').NOP\n&P       SETC      '&PREFIX._'\n.NOP     ANOP\n         AIF       (T'&SUFFIX EQ 'O').NOS\n&S       SETC      '_&SUFFIX'\n.NOS     ANOP\n&P.DATASPACE&S                       DS 0A\n&P.DATASPACE&S._ALET                 DC F'-1'   ALET OF DATA SPACE\n&P.DATASPACE&S._FIRST_RECORD         DC F'1'    LOWEST RECORD SAVED\n&P.DATASPACE&S._LAST_RECORD          DC F'0'    HIGHEST RECORD NBR USED\n&P.DATASPACE&S._LONGEST_RECORD       DC F'0'    LONGEST RECORD\n&P.DATASPACE&S._DISPLAY_FIRST_RECORD DC F'1'    FIRST RECORD TO DISPLAY\n&P.DATASPACE&S._DISPLAY_LAST_RECORD  DC F'0'    LAST RECORD ON DISPLAY\n&P.DATASPACE&S._DISPLAY_FIRST_COLUMN DC F'1'    FIRST COLUMN TO DISPLAY\n&P.DATASPACE&S._DISPLAY_LAST_COLUMN  DC F'0'    LAST COLUMN ON DISPLAY\n&P.DATASPACE&S._BYTES                DC F'0'    BYTES USED\n&P.DATASPACE&S._LAST_ADDRESS         DC A(0)    LAST ADDRESS USED\n&P.DATASPACE&S._BLOCKS               DC A(0)    SIZE (4K BLOCKS)\n&P.DATASPACE&S._TOKEN                DC XL8'00' DATA SPACE TOKEN\n&P.DATASPACE&S._NAME                 DC CL8' '  DATASPACE NAME\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SEPREQ": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        SEPARATOR LINE parameters                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         SEPREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSEPREQ                 DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nSEPREQ                 DSECT\n.LBL0020 ANOP\nSEPREQ_FIRST_SEPARATOR DS  A       FIRST SEPARATOR\nSEPREQ_NBR             DS  F       NUMBER OF SEPARATORS\nSEPREQ_DCB             DS  A       ADDRESS OF OUTPUT DCB\nSEPREQ_SEQ             DS  F       SEQUENCE NUMBER\nSEPREQ_RECORDS         DS  F       NBR OF RECORDS\nSEPREQ_BYTES           DS  F       NBR OF BYTES\nSEPREQ_MEMBER          DS  CL8     MEMBER NAME\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SEQ": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     I don't like to keep the same data twice, but in this case      *\n*     I made an exception.  SEQ_DATA_LENGTH is the same as            *\n*     DSPCREQ_RECORD_LENGTH for the corresponding record.             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEQ             DSECT\nSEQ_NEXT        DS       A              NEXT SEQ BLOCK\nSEQ_PREV        DS       A              PREVIOUS SEQ BLOCK\nSEQ_NBR         DS       F              THIS BLOCK'S RELATIVE NUMBER\nSEQ_BLOCK_START DS       A              FIRST SEQ OF BLOCK COMMAND\nSEQ_BLOCK_END   DS       A              LAST SEQ OF BLOCK COMMAND\nSEQ_RELATED_SEQ DS       A              SEQ BLOCK RELATED BY COMMAND\nSEQ_DATA_NBR    DS       F              RECORD NBR IN DATA SPACE\nSEQ_DATA_LENGTH DS       F              LENGTH OF DATA\nSEQ_REPEAT      DS       H              COMMAND REPEAT\nSEQ_COMMAND     DS       C              LINE COMMAND\nSEQ_FLAGS       DS       X              FLAGS\n$SEQ_BLOCK      EQU      X'80'          .. BLOCK COMMAND\n$SEQ_PRIMARY    EQU      X'40'          .. ASSOCIATED WITH PRIMARY CMD\n$SEQ_IC_CMD     EQU      X'20'          .. INSERT CURSOR AT CMD\n$SEQ_IC_DATA    EQU      X'10'          .. INSERT CURSOR AT DATA\nSEQ_META        DS       X              INTERNAL ( EDCOMM_META_LINES)\nSEQ_L           EQU      *-SEQ\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SESSION": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         SESSION &TYPE=X\n         AIF  ('&TYPE' EQ 'CSECT').CSECT\nSESSION                DSECT\n         AGO  .COMM\n.CSECT   ANOP\nSESSION                CSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                   FIELDS FOR EACH 'SESSION'                         *\n* ------------------------------------------------------------------- *\n\nSESS_EYE                DC    CL8'SESSION'\nSESS_NEXT               DC    A(0)      NEXT SESSION\nSESS_PREV               DC    A(0)      PREVIOUS SESSION\nSESS_FORMATTER_MESSAGES DC    A(0)      FORMATTER SPECIFIC MESSAGES\nSESS_UCB                DC    A(0)      ADDRESS OF UCB\nSESS_NUMBER             DC    F'0'      NUMBER OF RECORDS TO READ (MAX)\nSESS_FORMAT1S           DC    F'0'      NUMBER OF FORMAT-1S\nSESS_VSAM_LRECL         DC    F'0'      LRECL (VSAM)\nSESS_VSAM_KEY_LENGTH    DC    F'0'      KEY LENGTH (VSAM KSDS)\nSESS_VSAM_RKP           DC    F'0'      RELATIVE KEY POSITION (KSDS)\nSESS_RBA                DC    F'0'      RBA (VSAM FILES)\nSESS_FROMKEY_LENGTH     DC    F'0'      VSAM FROMKEY KEY LENGTH\nSESS_TOKEY_LENGTH       DC    F'0'      VSAM TOKEY KEY LENGTH\nSESS_FORMATTER_ADDR     DC    A(0)      MAIN BODY FORMATTER\nSESS_FORMATTER_EXIT     DC    A(0)      MAIN BODY FORMATTER USER EXIT\nSESS_FORMATTER_DATA     DC    A(0)      FORMATTER DATA CHAIN\nSESS_FORMATTER_DXD_ADDR   DC  A(0)      FORMATTER'S WORK AREA ADDRESS\nSESS_FORMATTER_DXD_LENGTH DC  A(0)      FORMATTER'S WORK AREA LENGTH\nSESS_VERTICAL_SCROLL    DC    F'0'      RECORDS FOR VERTICAL SCROLL\nSESS_HORIZONTAL_SCROLL  DC    F'0'      COLUMNS FOR HORIZONTAL SCROLL\nSESS_DCB_ADDR           DC    A(0)      ADDRESS OF DCB OR ACB\nSESS_DCB_LENGTH         DC    F'0'      LENGTH OF DCB OR ACB\nSESS_IO_AREA            DC    A(0)      I/O AREA ADDRESS\nSESS_LAST_FOUND         DC    F'0'      RECORD # OF LAST RECORD 'FOUND'\nSESS_PATH_LENGTH        DC    F'0'      LENGTH OF PATH NAME\nSESS_REAL_PATH_LENGTH   DC    F'0'      LENGTH OF REAL PATH NAME\nSESS_RETRY              DC    A(0)      ABEND RETRY POINT\nSESS_COMMAND_ADDRESS    DC    A(0)      PRIMARY OR LINE COMMAND ADDR\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_DISP_PANEL         DC    CL8' '    PANEL NAME\nSESS_DISP_VDATA_ADDR    DC    A(0)      VDATA ADDR\nSESS_DISP_VDATA_LENGTH  DC    F'0'      VDATA LENGTH\nSESS_DISP_CURSOR        DC    F'0'      CURSOR POSITION\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nSESS_RC                 DC    H'0'      RETURN CODE\nSESS_CYLINDERS          DC    H'0'      CYLINDERS ON VOLUME\nSESS_TRACKS             DC    H'0'      TRACKS PER CYLINDER\nSESS_COMMAND_LENGTH     DC    H'0'      PRIMARY OR LINE COMMAND LENGTH\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_DEFAULT_FORMAT     DC    CL8' '    DEFAULT FORMAT NAME\nSESS_FORMAT             DC    CL8' '    FORMAT NAME\nSESS_FORMATTER_MODULE   DC    CL8' '    FORMATTING MODULE NAME\nSESS_EXIT_MODULE        DC    CL8' '    FORMATTING EXIT MODULE NAME\nSESS_DD                 DC    CL8' '    DD NAME\nSESS_DSN                DC    CL44' '   DATA SET NAME\nSESS_PATH               DC    CL256' '  PATH NAME\nSESS_REAL_PATH          DC    CL256' '  REAL PATH NAME\nSESS_STATUS             DC    X'00'\n$STATUS_KEYWORD         EQU   X'80'     .. KEYWORD PROCESSED\n$STATUS_HEX             EQU   X'40'     .. DISPLAY IS IN HEX\n$STATUS_NO_DATA         EQU   X'20'     .. NO DATA TO DISPLAY\n$STATUS_NEW_SESSION     EQU   X'10'     .. NEW SESSION WANTED\n$STATUS_NO_MEMBER       EQU   X'08'     .. MEMBER NOT FOUND\n$STATUS_BYPASS          EQU   X'04'     .. BYPASS (EDIT)\nSESS_DATA_TYPE          DC    X'00'     DATA SET TYPE\n$DATA_TYPE_NONVSAM      EQU   X'10'     .. NONVSAM\n$DATA_TYPE_DATA         EQU   X'11'     .. DATA COMPONENT\n$DATA_TYPE_GDG          EQU   X'12'     .. MEMBER OF A GDG\n$DATA_TYPE_INDEX        EQU   X'13'     .. INDEX COMPONENT\n$DATA_TYPE_PDS_MEMBER   EQU   X'14'     .. PDS MEMBER\n$DATA_TYPE_PDS_DIR      EQU   X'15'     .. PDS DIRECTORY\n$DATA_TYPE_SEQUENTIAL   EQU   X'16'     .. SEQUENTIAL\n$DATA_TYPE_HFS          EQU   X'20'     .. HFS\n$DATA_TYPE_HFS_DIR      EQU   X'21'     .... HFS DIRECTORY\n$DATA_TYPE_HFS_FILE     EQU   X'22'     .... HFS FILE\n$DATA_TYPE_VSAM         EQU   X'40'     .. VSAM\n$DATA_TYPE_VSAM_KSDS    EQU   X'41'     .... VSAM KSDS\n$DATA_TYPE_VSAM_ESDS    EQU   X'42'     .... VSAM ESDS\n$DATA_TYPE_VSAM_RRDS    EQU   X'43'     .... VSAM RRDS\n$DATA_TYPE_VSAM_LDS     EQU   X'44'     .... VSAM LINEAR\n$DATA_TYPE_VTOC         EQU   X'80'     .. VTOC\n$DATA_TYPE_OTHER        EQU   X'FF'     .. OTHER\nSESS_MEMBER             DC    CL8' '    MEMBER NAME\nSESS_DSCB               DC    CL140' '  DSCB FROM VTOC\nSESS_VOLSER             DC    CL6' '    VOLSER(S)\nSESS_UCBTYP             DC    XL4'00'   UCBTYP (VTOC DISPLAYS)\nSESS_FROM_KEY           DC    CL40' '   FROM-KEY (VSAM KSDS'S)\nSESS_TO_KEY             DC    CL40' '   TO-KEY (VSAM KSDS'S)\nSESS_SORT               DC    X'01'     SORT ORDER (DIRECTORIES, VTOCS)\n$SORT_NAME              EQU   X'01'     .. SORTED BY NAME\n$SORT_TTR               EQU   X'02'     .. SORTED BY TTR\n$SORT_CDATE             EQU   X'03'     .. SORTED BY CREATE DATE\n$SORT_MDATE             EQU   X'04'     .. SORTED BY MOD DATA AND TIME\n$SORT_SIZE              EQU   X'05'     .. SORTED BY SIZE\n$SORT_USER              EQU   X'06'     .. SORTED BY USER\n$SORT_CCHHR             EQU   X'07'     .. SORTED BY DISK ADDRESS\n$SORT_REVERSE           EQU   X'80'     .. SORTED IN REVERSE ORDER\n\nSESS_DATASET_FLAGS      DS    X'00'\n$SESS_DATASET_ALLOCATED EQU   X'80'     .. DATA SET ALLOCATED\n$SESS_DATASET_DSORG     EQU   X'40'     .. DSORG DETERMINED\n$SESS_DATASET_NO_DCB    EQU   X'20'     .. NO DCB/ACB, UCB, OR DSORG\n\nSESS_DCB_FLAGS          DC    X'00'     DCB/ACB STATUS\n$SESS_DCB_OPEN          EQU   X'80'     .. DCB IS OPEN\n\nSESS_EDIT_FLAGS         DC    X'00'     EDIT MODE FLAGS\n$SESS_EDIT              EQU   X'80'     .. THIS IS AN EDIT SESSION\n$SESS_EDIT_EMPTY        EQU   X'40'     .. STARTED EDIT WITH EMPTY FILE\n\nSESS_USER_OPTIONS       DC    X'00'     USER OPTIONS\n$OPTIONS_VOLSER         EQU   X'80'     .. SPECIFIED VOLSER\n$OPTIONS_ASCII          EQU   X'40'     .. DATA SET IS IN ASCII\n$OPTIONS_DUMPDATA       EQU   X'20'     .. DUMP DATASPACE\n$OPTIONS_FROMKEY        EQU   X'10'     .. VSAM FROMKEY\n$OPTIONS_TOKEY          EQU   X'08'     .. VSAM TOKEY\n$OPTIONS_RBA            EQU   X'04'     .. VSAM RBA\n$OPTIONS_SHOW_TAGGED    EQU   X'02'     .. SHOW TAGGED MEMBERS ONLY\n$OPTIONS_SHOW_NOT_TAGGED EQU X'01'      .. SHOW TAGGED MEMBERS ONLY\n\nSESS_COMMAND_FLAGS      DC    X'00'     OSCMD FLAGS\n$SESS_COMMAND_DISPLAY   EQU   X'80'     .. DISPLAY COMMANDS\n$SESS_COMMAND_SEARCH    EQU   X'40'     .. SEARCH COMMANDS\n$SESS_COMMAND_FOUND     EQU   X'20'     .. COMMAND WAS FOUND\n\nSESS_KEYWORD_FLAGS      DC    X'00'     KEYWORD FLAGS\n$KEYWORD_DSN            EQU   X'80'     .. DSN GIVEN\n$KEYWORD_DD             EQU   X'40'     .. DD GIVEN\n$KEYWORD_VOL            EQU   X'20'     .. VOLSER GIVEN\n$KEYWORD_START          EQU   X'10'     .. STARTING RECORD NBR GIVEN\n$KEYWORD_RECORDS        EQU   X'08'     .. NUMBER OF RECORDS GIVEN\n$KEYWORD_MEMBER         EQU   X'04'     .. MEMBER NAME GIVEN\n$KEYWORD_FORMAT         EQU   X'02'     .. FORMAT NAME GIVEN\n$KEYWORD_PATH           EQU   X'01'     .. PATH NAME GIVEN\n\nSESS_KEYWORD_FLAGS_2    DC    X'00'     EVEN MORE KEYWORD FLAGS\n$KEYWORD_ABEND          EQU   X'80'     .. ABEND BEFORE EXITING\n$KEYWORD_VTOC           EQU   X'40'     .. VTOC\n$KEYWORD_RAWVTOC        EQU   X'20'     .. RAW VTOC\n$KEYWORD_CCHHR          EQU   X'10'     .. DISPLAY CCHHR\n$KEYWORD_RBA            EQU   X'08'     .. DISPLAY RBA\n$KEYWORD_ACT            EQU   X'04'     .. DISPLAY ACTIVE REGIONS\n\nSESS_FORMAT_FLAGS       DC    X'00'     FORMAT FLAGS\n$FORMAT_INITIALIZE      EQU   X'01'     .. PERFORM INITIALIZATION\n$FORMAT_CONTROL         EQU   X'02'     .. PROCESS CONTROL STATEMENT\n$FORMAT_FORMAT          EQU   X'03'     .. FORMAT DATA\n$FORMAT_CLEANUP         EQU   X'04'     .. PERFORM CLEAN UP\n\nSESS_ABEND_FLAG         DC    X'00'     ABEND INDICATOR(S)\n$ABENDED                EQU   X'80'     .. ABEND HAS OCCURRED\n$ABEND_NO_STAE          EQU   X'40'     .. DO NOT ATTEMPT RECOVERY\n\n                        DS    0H\nSESS_ABEND_CSECT        DC    CL8' '    CSECT AT TIME OF ABEND\nSESS_ABEND_DISP         DC    XL2'00'   DISPLACEMENT\nSESS_SYSTEM_CODE        DC    XL2'00'   SYSTEM ABEND CODE\nSESS_USER_CODE          DC    XL2'00'   USER ABEND CODE\nSESS_ABEND_R15          DC    XL2'00'   R15 AT TIME OF ABEND\n\n* ------------------------------------------------------------------- *\n*        Search ARG, LENGTH, ...                                      *\n* ------------------------------------------------------------------- *\nSESS_SEARCH_ARG_LENGTH  DC    H'0'      SEARCH ARG LENGTH\nSESS_SEARCH_ARG         DC    CL80' '   SEARCH ARGUEMENT\nSESS_SEARCH_RECORD      DC    XL4'00'   LAST MATCHING RECORD\nSESS_SEARCH_FLAGS       DC    X'00'\n$SESS_SEARCH_ACTIVE     EQU   X'80'\n$SESS_SEARCH_NOW        EQU   X'40'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Dataspace control                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                       SCONTROL  ,1\n                       SCONTROL  ,2\n                       SCONTROL  ,3\n\n* ------------------------------------------------------------------- *\n*        Binder dialog stuff                                          *\n* ------------------------------------------------------------------- *\n                             DS    0F\nSESS_DIALOG_TOKEN            DC    XL8'00' LMOD DIALOG TOKEN\nSESS_DIALOG_WORKMOD          DC    XL8'00' LMOD DIALOG WORKMOD\n\nSESS_DIALOG_SECTION_LENGTH   DC    X'0008' LMOD SECTION NAME LENGTH\nSESS_DIALOG_SECTION          DC    CL8' '  LMOD SECTION NAME\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_STAT              DS    0D,(STAT#LENGTH)X\nSESS_REAL_STAT         DS    0D,(STAT#LENGTH)X\n\n* ------------------------------------------------------------------- *\nSESSION_L              EQU   *-SESSION\n                       MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SINDEX": {"ttr": 1039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DATASPACE_INDEX              DSECT\nDATASPACE_INDEX_ADDR         DS   A   Address of data\nDATASPACE_INDEX_LENGTH       DS   F   Length of data\n\n* ------------------------------------------------------------------- *\n*     For sequential                                                  *\n* ------------------------------------------------------------------- *\nDATASPACE_INDEX_CCHHR        DS   XL5   Disk address (CCHHR)\nDATASPACE_INDEX_SEQ          DS   F     Logical record within block\n\n* ------------------------------------------------------------------- *\n*     For VSAM data sets                                              *\n* ------------------------------------------------------------------- *\nDATASPACE_INDEX_VSAM         ORG  DATASPACE_INDEX_CCHHR\nDATASPACE_INDEX_RBA          DS   F     RBA of record (VSAM data sets)\n\n                             ORG\nDATASPACE_INDEX_L            EQU  *-DATASPACE_INDEX\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPFSTATS": {"ttr": 1041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SPFSTATS         DS   0X\nSPF_VERSION      DS   X              MODIFICATION VERSION\nSPF_LEVEL        DS   X              MODIFICATION LEVEL\n                 DS   X\nSPF_M_SECONDS    DS   X              MODIFICATION TIME (SECONDS)\nSPF_C_DATE       DS   XL4   0CYYDDDS CREATION DATE\nSPF_M_DATE       DS   XL4   0CYYDDDS MODIFICATION DATE\nSPF_M_TIME       DS   XL2   HHMM     MODIFICATION TIME (HOURS/MIN)\nSPF_SIZE         DS   XL2            SIZE\nSPF_INIT         DS   XL2            INITIAL SIZE\nSPF_MODS         DS   XL2            MODIFICATIONS\nSPF_USER         DS   CL8            USER ID\nSPFSTATS_L       EQU  *-SPFSTATS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORCOMM": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         STORCOMM\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                   OSSTOR COMMON                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTORCOMM               DSECT\nSTORCOMM_EYE           DS    CL8           EYECATCHER\nSTORCOMM_PREV          DS    A             PREVIOUS STORCOMM BLOCK\nSTORCOMM_FORMATTER_EP  DS    A             FORMATTER ADDRESS\nSTORCOMM_AREA_ADDR     DS    A             AREA ADDRESS\nSTORCOMM_AREA_DISP     DS    F             CURRENT DISP INTO AREA\nSTORCOMM_ASID          DS    H             ASID\nSTORCOMM_AREA_NAME     DS    CL8           AREA NAME\nSTORCOMM_AREA_DESC     DS    CL40          AREA DESCRIPTION\nSTORCOMM_FORMATTER     DS    CL8           FORMATTER MODULE NAME\nSTORCOMM_STATUS        DS    X             STATUS\n$STORCOMM_NEW          EQU   1             .. NEW AREA\n$STORCOMM_COMPLETE     EQU   2             .. FORMATTING COMPLETE\nSTORCOMM_L             EQU   *-STORCOMM\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORPARM": {"ttr": 1045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Display storage parms (OSSTOR)                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         STORPARM &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSTORPARM          DS    0A\n         AGO      .LBL0020\n.LBL0010 ANOP\nSTORPARM          DSECT\n.LBL0020 ANOP\nSTORE_AREA_NAME   DS   CL8         AREA NAME\nSTORE_AREA_ADDR   DS   A           AREA ADDRESS\nSTORE_AREA_LENGTH DS   F           AREA LENGTH\nSTORE_AREA_ALET   DS   XL4         AREA ALET\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SUBREQ": {"ttr": 1047, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        SUBMIT request                                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         SUBREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSUBREQ          DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nSUBREQ          DSECT\n.LBL0020 ANOP\nSUBREQ_RC       DS     X           RETURN CODE\n$SUBREQ_OK      EQU    X'00'       .. SUCCESSFUL\n$SUBREQ_ERROR   EQU    X'FF'       .. ERROR\nSUBREQ_DSN      DS     CL44        DATA SET NAME\nSUBREQ_MEMBER   DS     CL8         MEMBER NAME\nSUBREQ_SYSOUT   DS     X           SYSOUT CLASS\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TRENTRY": {"ttr": 1049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*          TRACE TABLE ENTRY                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRENTRY  DSECT\nTRECSECT DS    CL8                 CSECT NAME\nTREID    DS    CL8                 TRACE ID\nTREDATA1 DS    CL8                 TRACE DATA 1\nTREDATA2 DS    CL8                 TRACE DATA 2\nTRENTRYL EQU   *-TRENTRY           ENTRY LENGTH\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USEREXIT": {"ttr": 1051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         USEREXIT &DSECT=NO\n         AIF   (T'&DSECT EQ 'O').ERR0010\n         AIF   ('&DSECT' EQ 'YES').LBL0010\n         AIF   ('&DSECT' EQ 'NO').LBL0020\n         MNOTE 12,'DSECT MUST BE -YES- OR -NO-'\n         MEXIT\n.LBL0010                  ANOP\nUSEREXIT                  DSECT\n                          AGO   .LBL0030\n.LBL0020                  ANOP\nUSEREXIT                  DS    0A\n.LBL0030                  ANOP\nUSEREXIT_RECORD_ADDR      DS    A            DATA RECORD ADDRESS\nUSEREXIT_RECORD_LENGTH    DS    F            DATA RECORD LENGTH\nUSEREXIT_RECORD_NBR       DS    F            DATA RECORD RECORD NBR\nUSEREXIT_VDATA_ADDR       DS    A            DYNAMIC AREA ADDRESS\nUSEREXIT_VDATA_LENGTH     DS    F            DYNAMIC AREA LENGTH\nUSEREXIT_ROWS             DS    F            ROWS ON DISPLAY\nUSEREXIT_COLUMNS          DS    F            COLUMNS ON DISPLAY\nUSEREXIT_MAX_RECORD_NBR   DS    F            HIGHEST RECORD STORED\nUSEREXIT_USERWORD         DS    A            A WORD FOR EXIT TO USE\nUSEREXIT_ZCMD             DS    CL80         ZCMD\nUSEREXIT_ZVERB            DS    CL8          SCROLL VERB\nUSEREXIT_ZSCROLLA         DS    CL8          SCROLL AMOUNT\nUSEREXIT_ZSCROLLN         DS    F            SCROLL NUMBER\nUSEREXIT_FUNC             DS    X            FUNCTION\n$USEREXIT_FORMAT          EQU   X'01'        .. FORMAT\n$USEREXIT_CMD             EQU   X'02'        .. PROCESS COMMAND(S)\n$USEREXIT_INITIALIZE      EQU   X'03'        .. INITIALIZE\n$USEREXIT_CLEANUP         EQU   X'04'        .. PERFORM CLEANUP\nUSEREXIT_MSG_1            DS    CL80         ERROR OR INFORMATIONAL MSG\nUSEREXIT_MSG_2            DS    CL80\nUSEREXIT_MSG_3            DS    CL80\nUSEREXIT_MSG_4            DS    CL80\nUSEREXIT_MSG_5            DS    CL80\nUSEREXIT_L                EQU   *-USEREXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VARDSECT": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*              VARIABLE TABLE ENTRIES                                 *\n* ------------------------------------------------------------------- *\nVARDSECT DSECT\nVARNAME  DS    CL8                   NAME KNOWN TO SPF\nVARFLAG  DS    X                     FLAGS\n$VDEFINE EQU   X'80'                 .. VARIABLE IS VDEFINED\n$VNEVER  EQU   X'40'                 .. NEVER VDEFINE\n$VGET    EQU   X'20'                 .. VGET WHEN VDEFINED\nVARLEN   DS    AL4                   VARIABLE LENGTH\nVARFORM  DS    CL8                   VARIABLE FORMAT\nVARDISP  DS    AL2                   DISPLACEMENT TO DATA\nVARL     EQU   *-VARDSECT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VARREQ": {"ttr": 1283, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        VARIABLE DEFINE/DELETE REQUEST                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         VARREQ  &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nVARREQ   DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nVARREQ   DSECT\n.LBL0020 ANOP\nVARTBLE  DS    A                   ADDRESS OF VARIABLE TABLE\nVARAREA  DS    A                   ADDRESS OF VARIABLE DATA AREA\nVARCMD   DS    C                   COMMAND\n$VARDEF  EQU   X'01'               .. DEFINE\n$VARDEL  EQU   X'02'               .. DELETE\nVARREQL  EQU   *-VARREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VCONS": {"ttr": 1285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         VCONS  &TYPE=\n         LCLC   &NAME(25)\n         LCLA   &NBR,&I\n&NAME(001) SETC 'OSCNFRM'\n&NAME(002) SETC 'OSABEND'\n&NAME(003) SETC 'OSCMD'\n&NAME(004) SETC 'OSDAIR'\n&NAME(005) SETC 'OSDEBUG'\n&NAME(006) SETC 'OSDISP'\n&NAME(007) SETC 'OSDSCB'\n&NAME(008) SETC 'OSDSINFO'\n&NAME(009) SETC 'OSDXD'\n&NAME(010) SETC 'OSESTAE'\n&NAME(011) SETC 'OSFLIST'\n&NAME(012) SETC 'OSLOAD'\n&NAME(013) SETC 'OSMSG'\n&NAME(014) SETC 'OSOFILE'\n&NAME(015) SETC 'OSPARSE'\n&NAME(016) SETC 'OSPARMS'\n&NAME(017) SETC 'OSPROMPT'\n&NAME(018) SETC 'OSRECALL'\n&NAME(019) SETC 'OSSEP'\n&NAME(020) SETC 'OSSTOR'\n&NAME(021) SETC 'OSTRACE'\n&NAME(022) SETC 'OSVARMGR'\n&NAME(023) SETC 'OSVDATA'\n&NBR     SETA   25\n&I       SETA   1\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n         AIF  ('&TYPE' EQ 'COMM').COMM00\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.INIT00  ANOP\n         AIF  (&I EQ &NBR).MEXIT\n         AIF  ('&NAME(&I)' EQ '').INIT10\n         DC   V(&NAME(&I))\n.INIT10  ANOP\n&I       SETA &I+1\n         AGO  .INIT00\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.COMM00  ANOP\n         AIF  (&I EQ &NBR).MEXIT\n         AIF  ('&NAME(&I)' EQ '').COMM10\nCOMM_V_&NAME(&I)   DS  A\n.COMM10  ANOP\n&I       SETA &I+1\n         AGO  .COMM00\n.MEXIT   ANOP\n        MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VDEF": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +\n               &NAME=,               NAME DEFINED TO SPF               +\n               &DATA=,               DATA ADDRESS                      +\n               &LENGTH=,             DATA LENGTH                       +\n               &FORM=,               DATA FORMAT                       +\n               &FLAGS=00\n         GBLC  &VBASE\n         AIF   (T'&BASE EQ 'O').LBL0010\n&VBASE   SETC  '&BASE'\n         MEXIT\n.LBL0010 ANOP\n         AIF   (T'&NAME EQ 'O').ERR0010\n         AIF   (T'&LENGTH  EQ 'O').ERR0020\n         AIF   (T'&FORM    EQ 'O').ERR0030\n         AIF   ('&VBASE' EQ '').ERR0060\n         DC    CL8'&NAME'             NAME KNOWN TO SPF\n         DC    AL1(&FLAGS)            FLAGS/INDICATORS\n         DC    AL4(&LENGTH)           LENGTH\n         DC    CL8'&FORM'             VARIABLE FORMAT\n         DC    AL2(&DATA-&VBASE)      DISPLACEMENT TO DATA\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'NAME IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0030 ANOP\n         MNOTE 12,'FORM IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0040 ANOP\n         MNOTE 12,'VARIABLE NAME IS DUPLICATED'\n         MEXIT\n.ERR0060 ANOP\n         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+\n               '\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT745/CBT.V500.FILE745.PDS/MACS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT745/CBT.V500.FILE745.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}